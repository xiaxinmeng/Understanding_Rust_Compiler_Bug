{"sha": "b4fc4df94f703e3b191f503ebe7186500e45d081", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRmYzRkZjk0ZjcwM2UzYjE5MWY1MDNlYmU3MTg2NTAwZTQ1ZDA4MQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-07-28T16:41:50Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-07-28T16:41:50Z"}, "message": "match.pd: Fix up recent __builtin_bswap16 simplifications [PR101642]\n\nThe following testcase ICEs.  The problem is that for __builtin_bswap16\n(and only that, others are fine) the argument of the builtin is promoted\nto int while the patterns assume it is not and is the same as that of\nthe return type.\nFor the bswap simplifications before these new ones it just means we\nfail to optimize stuff like __builtin_bswap16 (__builtin_bswap16 (x))\nbecause there are casts in between, but the last one, equality comparison\nof __builtin_bswap16 with integer constant results in ICE, because\nwe create comparison with incompatible types of the operands, and the\nother might be fine because usually we bit and the operand before promoting,\nbut I think it is too dangerous to rely on it, one day we find out that\nbecause it is operand to such a built in, we can throw away any changes\nthat affect the upper bits and all of sudden it would misbehave.\n\nSo, this patch introduces converts that shouldn't do anything for\nbswap{32,64,128} and should fix these issues for bswap16.\n\n2021-07-28  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/101642\n\t* match.pd (bswap16 (x) == bswap16 (y)): Cast both operands\n\tto type of bswap16 for comparison.\n\t(bswap16 (x) == cst): Cast bswap16 operand to type of cst.\n\n\t* gcc.c-torture/compile/pr101642.c: New test.", "tree": {"sha": "a5840c6f9c59a31c842761a14fc8a1ec86ad2ba1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5840c6f9c59a31c842761a14fc8a1ec86ad2ba1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4fc4df94f703e3b191f503ebe7186500e45d081", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4fc4df94f703e3b191f503ebe7186500e45d081", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4fc4df94f703e3b191f503ebe7186500e45d081", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4fc4df94f703e3b191f503ebe7186500e45d081/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de0214a055d9a43dd3576557f928982a57a3db38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de0214a055d9a43dd3576557f928982a57a3db38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de0214a055d9a43dd3576557f928982a57a3db38"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "19cbad7592787a568d4a7cfd62746d5844c0be5f", "filename": "gcc/match.pd", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4fc4df94f703e3b191f503ebe7186500e45d081/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4fc4df94f703e3b191f503ebe7186500e45d081/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=b4fc4df94f703e3b191f503ebe7186500e45d081", "patch": "@@ -3641,11 +3641,13 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n    (bitop @0 (bswap @1))))\n  (for cmp (eq ne)\n   (simplify\n-   (cmp (bswap @0) (bswap @1))\n-   (cmp @0 @1))\n+   (cmp (bswap@2 @0) (bswap @1))\n+   (with { tree ctype = TREE_TYPE (@2); }\n+    (cmp (convert:ctype @0) (convert:ctype @1))))\n   (simplify\n    (cmp (bswap @0) INTEGER_CST@1)\n-   (cmp @0 (bswap @1))))\n+   (with { tree ctype = TREE_TYPE (@1); }\n+    (cmp (convert:ctype @0) (bswap @1)))))\n  /* (bswap(x) >> C1) & C2 can sometimes be simplified to (x >> C3) & C2.  */\n  (simplify\n   (bit_and (convert1? (rshift@0 (convert2? (bswap@4 @1)) INTEGER_CST@2))"}, {"sha": "f8b96f0943dd6aa0b947961536c18b253cded755", "filename": "gcc/testsuite/gcc.c-torture/compile/pr101642.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4fc4df94f703e3b191f503ebe7186500e45d081/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr101642.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4fc4df94f703e3b191f503ebe7186500e45d081/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr101642.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr101642.c?ref=b4fc4df94f703e3b191f503ebe7186500e45d081", "patch": "@@ -0,0 +1,17 @@\n+/* PR middle-end/101642 */\n+\n+int x;\n+\n+unsigned short\n+foo (void)\n+{\n+  return __builtin_bswap16 (x) ? : 0;\n+}\n+\n+int\n+bar (int x, int y)\n+{\n+  unsigned short a = __builtin_bswap16 ((unsigned short) x);\n+  unsigned short b = __builtin_bswap16 ((unsigned short) y);\n+  return a == b;\n+}"}]}