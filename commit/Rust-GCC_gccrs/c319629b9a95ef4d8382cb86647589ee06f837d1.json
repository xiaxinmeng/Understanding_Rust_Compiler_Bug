{"sha": "c319629b9a95ef4d8382cb86647589ee06f837d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzMxOTYyOWI5YTk1ZWY0ZDgzODJjYjg2NjQ3NTg5ZWUwNmY4MzdkMQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-07-15T15:47:05Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-07-15T15:47:05Z"}, "message": "flow.c (redirect_edge_and_branch_force): Initialize global_live_at_start and global_live_at_end.\n\n        * flow.c (redirect_edge_and_branch_force): Initialize\n        global_live_at_start and global_live_at_end.\n        (allocate_bb_life_data): Export.\n        * basic-block.h (allocate_bb_life_data): Declare it.\n        * toplev.c (rest_of_compilation): Call it.\n\nFrom-SVN: r44023", "tree": {"sha": "75e68a4d9edfabe45a1cb8b284f932ff4f37e9b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75e68a4d9edfabe45a1cb8b284f932ff4f37e9b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c319629b9a95ef4d8382cb86647589ee06f837d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c319629b9a95ef4d8382cb86647589ee06f837d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c319629b9a95ef4d8382cb86647589ee06f837d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c319629b9a95ef4d8382cb86647589ee06f837d1/comments", "author": null, "committer": null, "parents": [{"sha": "25e21aed5640682f693cd304b2d24007d797ce7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25e21aed5640682f693cd304b2d24007d797ce7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25e21aed5640682f693cd304b2d24007d797ce7d"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "90761024ad095dbe61349ea0de2c7182471b75a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c319629b9a95ef4d8382cb86647589ee06f837d1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c319629b9a95ef4d8382cb86647589ee06f837d1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c319629b9a95ef4d8382cb86647589ee06f837d1", "patch": "@@ -1,3 +1,11 @@\n+2001-07-15  Richard Henderson  <rth@redhat.com>\n+\n+\t* flow.c (redirect_edge_and_branch_force): Initialize\n+\tglobal_live_at_start and global_live_at_end.\n+\t(allocate_bb_life_data): Export.\n+\t* basic-block.h (allocate_bb_life_data): Declare.\n+\t* toplev.c (rest_of_compilation): Call it.\n+\n 2001-07-15  Richard Henderson  <rth@redhat.com>\n \n \t* config/alpha/alpha.c (alpha_tablejump_addr_vec): New."}, {"sha": "656c13b980177e2d40fc9350eafb3e07f04536cb", "filename": "gcc/basic-block.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c319629b9a95ef4d8382cb86647589ee06f837d1/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c319629b9a95ef4d8382cb86647589ee06f837d1/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=c319629b9a95ef4d8382cb86647589ee06f837d1", "patch": "@@ -593,6 +593,7 @@ extern void debug_bb_n\t\t\tPARAMS ((int));\n extern void dump_regset\t\t\tPARAMS ((regset, FILE *));\n extern void debug_regset\t\tPARAMS ((regset));\n extern void allocate_reg_life_data      PARAMS ((void));\n+extern void allocate_bb_life_data\tPARAMS ((void));\n extern void find_unreachable_blocks\tPARAMS ((void));\n \n /* This function is always defined so it can be called from the"}, {"sha": "56b40f0e625a8806fbadf3a361817b81a78137fa", "filename": "gcc/flow.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c319629b9a95ef4d8382cb86647589ee06f837d1/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c319629b9a95ef4d8382cb86647589ee06f837d1/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=c319629b9a95ef4d8382cb86647589ee06f837d1", "patch": "@@ -483,7 +483,6 @@ static void flow_loop_tree_node_add\tPARAMS ((struct loop *, struct loop *));\n static void flow_loops_tree_build\tPARAMS ((struct loops *));\n static int flow_loop_level_compute\tPARAMS ((struct loop *, int));\n static int flow_loops_level_compute\tPARAMS ((struct loops *));\n-static void allocate_bb_life_data\tPARAMS ((void));\n static void find_sub_basic_blocks\tPARAMS ((basic_block));\n static bool redirect_edge_and_branch \tPARAMS ((edge, basic_block));\n static basic_block redirect_edge_and_branch_force PARAMS ((edge, basic_block));\n@@ -1933,6 +1932,15 @@ redirect_edge_and_branch_force (e, target)\n   new_edge->probability = e->probability;\n   new_edge->count = e->count;\n \n+  if (e->dest->global_live_at_start)\n+    {\n+      new_bb->global_live_at_start = OBSTACK_ALLOC_REG_SET (&flow_obstack);\n+      new_bb->global_live_at_end = OBSTACK_ALLOC_REG_SET (&flow_obstack);\n+      COPY_REG_SET (new_bb->global_live_at_start,\n+\t\t    e->dest->global_live_at_start);\n+      COPY_REG_SET (new_bb->global_live_at_end, new_bb->global_live_at_start);\n+    }\n+\n   /* Wire edge in.  */\n   new_edge->src = e->src;\n   new_edge->dest = new_bb;\n@@ -4675,7 +4683,7 @@ calculate_global_regs_live (blocks_in, blocks_out, flags)\n /* Allocate the permanent data structures that represent the results\n    of life analysis.  Not static since used also for stupid life analysis.  */\n \n-static void\n+void\n allocate_bb_life_data ()\n {\n   register int i;"}, {"sha": "b3154dcdaec7703179b676fb09a1367bb078a44d", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c319629b9a95ef4d8382cb86647589ee06f837d1/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c319629b9a95ef4d8382cb86647589ee06f837d1/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=c319629b9a95ef4d8382cb86647589ee06f837d1", "patch": "@@ -3371,6 +3371,7 @@ rest_of_compilation (decl)\n \t     without updating life info can wind up with Wierd Stuff in\n \t     global_live_at_end.  We then run sched1, which updates things\n \t     properly, discovers the wierdness and aborts.  */\n+\t  allocate_bb_life_data ();\n \t  update_life_info (NULL, UPDATE_LIFE_GLOBAL_RM_NOTES,\n \t\t\t    PROP_DEATH_NOTES | PROP_KILL_DEAD_CODE\n \t\t\t    | PROP_SCAN_DEAD_CODE);"}]}