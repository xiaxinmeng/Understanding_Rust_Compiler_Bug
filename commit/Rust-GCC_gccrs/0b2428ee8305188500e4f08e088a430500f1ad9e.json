{"sha": "0b2428ee8305188500e4f08e088a430500f1ad9e", "node_id": "C_kwDOANBUbNoAKDBiMjQyOGVlODMwNTE4ODUwMGU0ZjA4ZTA4OGE0MzA1MDBmMWFkOWU", "commit": {"author": {"name": "Gaius Mulley", "email": "gaiusmod2@gmail.com", "date": "2022-12-18T10:04:02Z"}, "committer": {"name": "Gaius Mulley", "email": "gaiusmod2@gmail.com", "date": "2022-12-18T10:04:02Z"}, "message": "PR-108122 Reduce sleep times in gm2/pimcoroutines/run/pass/testtime.mod\n\nChange time unit to 1 jiffy (with respect to TimerHandler.def) rather\nthan a second.\n\ngcc/testsuite/ChangeLog:\n\n\t* gm2/pimcoroutines/run/pass/testtime.mod: Reduce sleep times in\n\tthe test by a factor of 25.\n\nSigned-off-by: Gaius Mulley <gaiusmod2@gmail.com>", "tree": {"sha": "7155d63c74a9975ed98a460a42013327df6f9a1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7155d63c74a9975ed98a460a42013327df6f9a1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b2428ee8305188500e4f08e088a430500f1ad9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b2428ee8305188500e4f08e088a430500f1ad9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b2428ee8305188500e4f08e088a430500f1ad9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b2428ee8305188500e4f08e088a430500f1ad9e/comments", "author": null, "committer": null, "parents": [{"sha": "09710f9934969dcb07131e1ed78b72e648123a3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09710f9934969dcb07131e1ed78b72e648123a3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09710f9934969dcb07131e1ed78b72e648123a3a"}], "stats": {"total": 48, "additions": 26, "deletions": 22}, "files": [{"sha": "2e770ae130a57931b95499adfff8de7d70a18a06", "filename": "gcc/testsuite/gm2/pimcoroutines/run/pass/testtime.mod", "status": "modified", "additions": 26, "deletions": 22, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b2428ee8305188500e4f08e088a430500f1ad9e/gcc%2Ftestsuite%2Fgm2%2Fpimcoroutines%2Frun%2Fpass%2Ftesttime.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b2428ee8305188500e4f08e088a430500f1ad9e/gcc%2Ftestsuite%2Fgm2%2Fpimcoroutines%2Frun%2Fpass%2Ftesttime.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fpimcoroutines%2Frun%2Fpass%2Ftesttime.mod?ref=0b2428ee8305188500e4f08e088a430500f1ad9e", "patch": "@@ -1,4 +1,4 @@\n-(* Copyright (C) 2005-2020\n+(* Copyright (C) 2005-2022\n                  Free Software Foundation, Inc. *)\n (* This file is part of GNU Modula-2.\n \n@@ -31,54 +31,58 @@ FROM SYSTEM IMPORT ADR ;\n FROM libc IMPORT write, printf ;\n \n \n+CONST\n+   TicksPerTimeUnit = 1 ;\n+\n+\n (*\n-   OneSecond -\n+   OneUnit -\n *)\n \n-PROCEDURE OneSecond ;\n+PROCEDURE OneUnit ;\n VAR\n    n: CARDINAL ;\n BEGIN\n    OldInts := TurnInterrupts (MIN (PROTECTION)) ;\n-   printf (\"1 second process has come to life\\n\");\n+   printf (\"1 unit process has come to life\\n\");\n    n := 0 ;\n    LOOP\n-      Sleep (1*TicksPerSecond) ;\n+      Sleep (1*TicksPerTimeUnit) ;\n       INC (n) ;\n-      printf (\"%d seconds\\n\", n);\n+      printf (\"%d units\\n\", n);\n    END\n-END OneSecond ;\n+END OneUnit ;\n \n \n (*\n-   FourSeconds -\n+   FourUnits -\n *)\n \n-PROCEDURE FourSeconds ;\n+PROCEDURE FourUnits ;\n VAR\n    n: CARDINAL ;\n BEGIN\n    OldInts := TurnInterrupts (MIN (PROTECTION)) ;\n-   printf (\"4 seconds process has come to life\\n\");\n+   printf (\"4 units process has come to life\\n\");\n    n := 0 ;\n    LOOP\n-      Sleep (4*TicksPerSecond) ;\n+      Sleep (4*TicksPerTimeUnit) ;\n       INC (n) ;\n-      printf (\"4 second alarm (%d occurance)\\n\", n);\n+      printf (\"4 units alarm (%d occurance)\\n\", n);\n    END\n-END FourSeconds ;\n+END FourUnits ;\n \n \n (*\n-   SixSeconds -\n+   SixUnits -\n *)\n \n-PROCEDURE SixSeconds ;\n+PROCEDURE SixUnits ;\n VAR\n    n: CARDINAL ;\n BEGIN\n    OldInts := TurnInterrupts (MAX (PROTECTION)) ;\n-   printf (\"6 seconds process has come to life\\n\");\n+   printf (\"6 units process has come to life\\n\");\n    n := 0 ;\n    LOOP\n       Timeout := ArmEvent (6*TicksPerSecond) ;\n@@ -87,10 +91,10 @@ BEGIN\n          WriteString ('...someone cancelled it...')\n       ELSE\n          INC (n) ;\n-         printf (\"6 second alarm (%d occurance)\\n\", n)\n+         printf (\"6 unit alarm (%d occurance)\\n\", n)\n       END\n    END\n-END SixSeconds ;\n+END SixUnits ;\n \n \n CONST\n@@ -107,10 +111,10 @@ BEGIN\n \n    printf (\"now to create three processes...\\n\") ;\n \n-   p1 := Resume (InitProcess (OneSecond  , StackSize, '1')) ;\n-   p4 := Resume (InitProcess (FourSeconds, StackSize, '4')) ;\n-   p6 := Resume (InitProcess (SixSeconds , StackSize, '6')) ;\n+   p1 := Resume (InitProcess (OneUnit  , StackSize, '1')) ;\n+   p4 := Resume (InitProcess (FourUnits, StackSize, '4')) ;\n+   p6 := Resume (InitProcess (SixUnits , StackSize, '6')) ;\n \n-   Sleep (20*TicksPerSecond) ;\n+   Sleep (20*TicksPerTimeUnit) ;\n    printf (\"successfully completed, finishing now.\\n\")\n END testtime."}]}