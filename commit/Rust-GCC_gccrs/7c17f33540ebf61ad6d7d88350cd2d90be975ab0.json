{"sha": "7c17f33540ebf61ad6d7d88350cd2d90be975ab0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MxN2YzMzU0MGViZjYxYWQ2ZDdkODgzNTBjZDJkOTBiZTk3NWFiMA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2012-03-14T18:01:06Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2012-03-14T18:01:06Z"}, "message": "Remove MIPS_DEBUGGING_INFO support\n\n\t* dwarf2cfi.c (def_cfa_0): Remove MIPS_DEBUGGING_INFO handling.\n\t(dwarf2out_do_cfi_asm): Likewise.\n\t* dwarf2out.c (output_call_frame_info): Remove MIPS_DEBUGGING_INFO\n\thandling.\n\t(add_data_member_location_attribute): Likewise.\n\t(gen_array_type_die): Likewise.\n\t(gen_subprogram_die): Likewise.\n\t(gen_producer_string): Likewise.\n\t* sdbout.c (sdbout_begin_prologue): Declare unconditionally.\n\tRemove MIPS_DEBUGGING_INFO handling.\n\t(sdb_debug_hooks): Likewise.\n\t(sdbout_begin_block): Likewise.\n\t(sdbout_end_block): Likewise.\n\t(sdbout_begin_prologue): Likewise.\n\t(sdbout_start_source_file): Likewise.\n\t(sdbout_end_source_file): Likewise.\n\t(sdbout_init): Likewise.\n\t* system.h (MIPS_DEBUGGING_INFO): Poison.\n\nFrom-SVN: r185395", "tree": {"sha": "8ea154caeb8d251af662a569e902f435014cf29f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ea154caeb8d251af662a569e902f435014cf29f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c17f33540ebf61ad6d7d88350cd2d90be975ab0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c17f33540ebf61ad6d7d88350cd2d90be975ab0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c17f33540ebf61ad6d7d88350cd2d90be975ab0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c17f33540ebf61ad6d7d88350cd2d90be975ab0/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "46e1a76956bf2b552ea758933113726f25585fc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46e1a76956bf2b552ea758933113726f25585fc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46e1a76956bf2b552ea758933113726f25585fc0"}], "stats": {"total": 181, "additions": 33, "deletions": 148}, "files": [{"sha": "6034f74465717fbc7700ee4b1892c10cf3980a72", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c17f33540ebf61ad6d7d88350cd2d90be975ab0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c17f33540ebf61ad6d7d88350cd2d90be975ab0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c17f33540ebf61ad6d7d88350cd2d90be975ab0", "patch": "@@ -1,3 +1,24 @@\n+2012-03-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* dwarf2cfi.c (def_cfa_0): Remove MIPS_DEBUGGING_INFO handling.\n+\t(dwarf2out_do_cfi_asm): Likewise.\n+\t* dwarf2out.c (output_call_frame_info): Remove MIPS_DEBUGGING_INFO\n+\thandling.\n+\t(add_data_member_location_attribute): Likewise.\n+\t(gen_array_type_die): Likewise.\n+\t(gen_subprogram_die): Likewise.\n+\t(gen_producer_string): Likewise.\n+\t* sdbout.c (sdbout_begin_prologue): Declare unconditionally.\n+\tRemove MIPS_DEBUGGING_INFO handling.\n+\t(sdb_debug_hooks): Likewise.\n+\t(sdbout_begin_block): Likewise.\n+\t(sdbout_end_block): Likewise.\n+\t(sdbout_begin_prologue): Likewise.\n+\t(sdbout_start_source_file): Likewise.\n+\t(sdbout_end_source_file): Likewise.\n+\t(sdbout_init): Likewise.\n+\t* system.h (MIPS_DEBUGGING_INFO): Poison.\n+\n 2012-03-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config/alpha/alpha.c [HAVE_STAMP_H]: Remove."}, {"sha": "4d75bb248b46e1e84a5e943f1f5029b2e7b29dd4", "filename": "gcc/dwarf2cfi.c", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c17f33540ebf61ad6d7d88350cd2d90be975ab0/gcc%2Fdwarf2cfi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c17f33540ebf61ad6d7d88350cd2d90be975ab0/gcc%2Fdwarf2cfi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2cfi.c?ref=7c17f33540ebf61ad6d7d88350cd2d90be975ab0", "patch": "@@ -1,6 +1,6 @@\n /* Dwarf2 Call Frame Information helper routines.\n    Copyright (C) 1992, 1993, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-   2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n+   2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -724,8 +724,6 @@ def_cfa_0 (dw_cfa_location *old_cfa, dw_cfa_location *new_cfa)\n \tcfi->dw_cfi_opc = DW_CFA_def_cfa_offset;\n       cfi->dw_cfi_oprnd1.dw_cfi_offset = new_cfa->offset;\n     }\n-\n-#ifndef MIPS_DEBUGGING_INFO  /* SGI dbx thinks this means no offset.  */\n   else if (new_cfa->offset == old_cfa->offset\n \t   && old_cfa->reg != INVALID_REGNUM\n \t   && !new_cfa->indirect\n@@ -737,8 +735,6 @@ def_cfa_0 (dw_cfa_location *old_cfa, dw_cfa_location *new_cfa)\n       cfi->dw_cfi_opc = DW_CFA_def_cfa_register;\n       cfi->dw_cfi_oprnd1.dw_cfi_reg_num = new_cfa->reg;\n     }\n-#endif\n-\n   else if (new_cfa->indirect == 0)\n     {\n       /* Construct a \"DW_CFA_def_cfa <register> <offset>\" instruction,\n@@ -3388,10 +3384,6 @@ dwarf2out_do_cfi_asm (void)\n {\n   int enc;\n \n-#ifdef MIPS_DEBUGGING_INFO\n-  return false;\n-#endif\n-\n   if (saved_do_cfi_asm != 0)\n     return saved_do_cfi_asm > 0;\n "}, {"sha": "b3dcf9c2f02495f0fd14250f255dc1a0b79dd0a0", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 0, "deletions": 60, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c17f33540ebf61ad6d7d88350cd2d90be975ab0/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c17f33540ebf61ad6d7d88350cd2d90be975ab0/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=7c17f33540ebf61ad6d7d88350cd2d90be975ab0", "patch": "@@ -879,11 +879,6 @@ output_call_frame_info (int for_eh)\n \n   if (for_eh && targetm.terminate_dw2_eh_frame_info)\n     dw2_asm_output_data (4, 0, \"End of Table\");\n-#ifdef MIPS_DEBUGGING_INFO\n-  /* Work around Irix 6 assembler bug whereby labels at the end of a section\n-     get a value of 0.  Putting .align 0 after the label fixes it.  */\n-  ASM_OUTPUT_ALIGN (asm_out_file, 0);\n-#endif\n \n   /* Turn off app to make assembly quicker.  */\n   if (flag_debug_asm)\n@@ -14330,16 +14325,7 @@ add_data_member_location_attribute (dw_die_ref die, tree decl)\n \t  /* The DWARF2 standard says that we should assume that the structure\n \t     address is already on the stack, so we can specify a structure\n \t     field address by using DW_OP_plus_uconst.  */\n-\n-#ifdef MIPS_DEBUGGING_INFO\n-\t  /* ??? The SGI dwarf reader does not handle the DW_OP_plus_uconst\n-\t     operator correctly.  It works only if we leave the offset on the\n-\t     stack.  */\n-\t  op = DW_OP_constu;\n-#else\n \t  op = DW_OP_plus_uconst;\n-#endif\n-\n \t  loc_descr = new_loc_descr (op, offset, 0);\n \t}\n     }\n@@ -16368,17 +16354,6 @@ gen_array_type_die (tree type, dw_die_ref context_die)\n       return;\n     }\n \n-  /* ??? The SGI dwarf reader fails for array of array of enum types\n-     (e.g. const enum machine_mode insn_operand_mode[2][10]) unless the inner\n-     array type comes before the outer array type.  We thus call gen_type_die\n-     before we new_die and must prevent nested array types collapsing for this\n-     target.  */\n-\n-#ifdef MIPS_DEBUGGING_INFO\n-  gen_type_die (TREE_TYPE (type), context_die);\n-  collapse_nested_arrays = false;\n-#endif\n-\n   array_die = new_die (DW_TAG_array_type, scope_die, type);\n   add_name_attribute (array_die, type_tag (type));\n   equate_type_number_to_die (type, array_die);\n@@ -16404,14 +16379,6 @@ gen_array_type_die (tree type, dw_die_ref context_die)\n   add_AT_unsigned (array_die, DW_AT_ordering, DW_ORD_row_major);\n #endif\n \n-#ifdef MIPS_DEBUGGING_INFO\n-  /* The SGI compilers handle arrays of unknown bound by setting\n-     AT_declaration and not emitting any subrange DIEs.  */\n-  if (TREE_CODE (type) == ARRAY_TYPE\n-      && ! TYPE_DOMAIN (type))\n-    add_AT_flag (array_die, DW_AT_declaration, 1);\n-  else\n-#endif\n   if (TREE_CODE (type) == VECTOR_TYPE)\n     {\n       /* For VECTOR_TYPEs we use an array die with appropriate bounds.  */\n@@ -16434,10 +16401,6 @@ gen_array_type_die (tree type, dw_die_ref context_die)\n \telement_type = TREE_TYPE (element_type);\n       }\n \n-#ifndef MIPS_DEBUGGING_INFO\n-  gen_type_die (element_type, context_die);\n-#endif\n-\n   add_type_attribute (array_die, element_type, 0, 0, context_die);\n \n   add_gnat_descriptive_type_attribute (array_die, type, context_die);\n@@ -17470,11 +17433,6 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)\n \t    }\n \t}\n \n-#ifdef MIPS_DEBUGGING_INFO\n-      /* Add a reference to the FDE for this routine.  */\n-      add_AT_fde_ref (subr_die, DW_AT_MIPS_fde, cfun->fde->fde_index);\n-#endif\n-\n       cfa_fb_offset = CFA_FRAME_BASE_OFFSET (decl);\n \n       /* We define the \"frame base\" as the function's CFA.  This is more\n@@ -18448,24 +18406,6 @@ gen_producer_string (void)\n   sprintf (tail, \"%s %s\", language_string, version_string);\n   tail += plen;\n \n-  if (!dwarf_record_gcc_switches)\n-    {\n-#ifdef MIPS_DEBUGGING_INFO\n-      /* The MIPS/SGI compilers place the 'cc' command line options in the\n-\t producer string.  The SGI debugger looks for -g, -g1, -g2, or -g3;\n-\t if they do not appear in the producer string, the debugger reaches\n-\t the conclusion that the object file is stripped and has no debugging\n-\t information.  To get the MIPS/SGI debugger to believe that there is\n-\t debugging information in the object file, we add a -g to the producer\n-\t string.  */\n-      if (debug_info_level > DINFO_LEVEL_TERSE)\n-\t{\n-\t  memcpy (tail, \" -g\", 3);\n-\t  tail += 3;\n-\t}\n-#endif\n-    }\n-\n   FOR_EACH_VEC_ELT (dchar_p, switches, j, p)\n     {\n       len = strlen (p);"}, {"sha": "6f24933d8df14d22724dff1d3f442e8c428af588", "filename": "gcc/sdbout.c", "status": "modified", "additions": 9, "deletions": 77, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c17f33540ebf61ad6d7d88350cd2d90be975ab0/gcc%2Fsdbout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c17f33540ebf61ad6d7d88350cd2d90be975ab0/gcc%2Fsdbout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.c?ref=7c17f33540ebf61ad6d7d88350cd2d90be975ab0", "patch": "@@ -1,6 +1,6 @@\n /* Output sdb-format symbol table information from GNU compiler.\n    Copyright (C) 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010, 2011\n+   2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -120,9 +120,7 @@ static void sdbout_end_block\t\t(unsigned int, unsigned int);\n static void sdbout_source_line\t\t(unsigned int, const char *, int, bool);\n static void sdbout_end_epilogue\t\t(unsigned int, const char *);\n static void sdbout_global_decl\t\t(tree);\n-#ifndef MIPS_DEBUGGING_INFO\n static void sdbout_begin_prologue\t(unsigned int, const char *);\n-#endif\n static void sdbout_end_prologue\t\t(unsigned int, const char *);\n static void sdbout_begin_function\t(tree);\n static void sdbout_end_function\t\t(unsigned int);\n@@ -275,33 +273,6 @@ do { fprintf (asm_out_file, \"\\t.tag\\t\");\t\\\n   if ((int) line <= sdb_begin_function_line) \\\n     line = sdb_begin_function_line + 1\n \n-/* Perform linker optimization of merging header file definitions together\n-   for targets with MIPS_DEBUGGING_INFO defined.  This won't work without a\n-   post 960826 version of GAS.  Nothing breaks with earlier versions of GAS,\n-   the optimization just won't be done.  The native assembler already has the\n-   necessary support.  */\n-\n-#ifdef MIPS_DEBUGGING_INFO\n-\n-/* ECOFF linkers have an optimization that does the same kind of thing as\n-   N_BINCL/E_INCL in stabs: eliminate duplicate debug information in the\n-   executable.  To achieve this, GCC must output a .file for each file\n-   name change.  */\n-\n-/* This is a stack of input files.  */\n-\n-struct sdb_file\n-{\n-  struct sdb_file *next;\n-  const char *name;\n-};\n-\n-/* This is the top of the stack.  */\n-\n-static struct sdb_file *current_file;\n-\n-#endif /* MIPS_DEBUGGING_INFO */\n-\n /* The debug hooks structure.  */\n const struct gcc_debug_hooks sdb_debug_hooks =\n {\n@@ -316,15 +287,8 @@ const struct gcc_debug_hooks sdb_debug_hooks =\n   sdbout_end_block,\t\t         /* end_block */\n   debug_true_const_tree,\t         /* ignore_block */\n   sdbout_source_line,\t\t         /* source_line */\n-#ifdef MIPS_DEBUGGING_INFO\n-  /* Defer on MIPS systems so that parameter descriptions follow\n-     function entry.  */\n-  debug_nothing_int_charstar,\t         /* begin_prologue */\n-  sdbout_end_prologue,\t\t         /* end_prologue */\n-#else\n   sdbout_begin_prologue,\t         /* begin_prologue */\n   debug_nothing_int_charstar,\t         /* end_prologue */\n-#endif\n   debug_nothing_int_charstar,\t         /* begin_epilogue */\n   sdbout_end_epilogue,\t\t         /* end_epilogue */\n   sdbout_begin_function,\t         /* begin_function */\n@@ -1500,12 +1464,8 @@ sdbout_begin_block (unsigned int line, unsigned int n)\n   MAKE_LINE_SAFE (line);\n \n   /* The SCO compiler does not emit a separate block for the function level\n-     scope, so we avoid it here also.  However, mips ECOFF compilers do emit\n-     a separate block, so we retain it when MIPS_DEBUGGING_INFO is defined.  */\n-#ifndef MIPS_DEBUGGING_INFO\n-  if (n != 1)\n-#endif\n-    PUT_SDB_BLOCK_START (line - sdb_begin_function_line);\n+     scope, so we avoid it here also.  */\n+  PUT_SDB_BLOCK_START (line - sdb_begin_function_line);\n \n   if (n == 1)\n     {\n@@ -1534,12 +1494,9 @@ sdbout_end_block (unsigned int line, unsigned int n ATTRIBUTE_UNUSED)\n   MAKE_LINE_SAFE (line);\n \n   /* The SCO compiler does not emit a separate block for the function level\n-     scope, so we avoid it here also.  However, mips ECOFF compilers do emit\n-     a separate block, so we retain it when MIPS_DEBUGGING_INFO is defined.  */\n-#ifndef MIPS_DEBUGGING_INFO\n+     scope, so we avoid it here also.  */\n   if (n != 1)\n-#endif\n-  PUT_SDB_BLOCK_END (line - sdb_begin_function_line);\n+    PUT_SDB_BLOCK_END (line - sdb_begin_function_line);\n }\n \n /* Output a line number symbol entry for source file FILENAME and line\n@@ -1572,19 +1529,16 @@ sdbout_begin_function (tree decl ATTRIBUTE_UNUSED)\n   sdbout_symbol (current_function_decl, 0);\n }\n \n-/* Called at beginning of function body (before or after prologue,\n-   depending on MIPS_DEBUGGING_INFO).  Record the function's starting\n-   line number, so we can output relative line numbers for the other\n-   lines.  Describe beginning of outermost block.  Also describe the\n-   parameter list.  */\n+/* Called at beginning of function body after prologue.  Record the\n+   function's starting line number, so we can output relative line numbers\n+   for the other lines.  Describe beginning of outermost block.  Also\n+   describe the parameter list.  */\n \n-#ifndef MIPS_DEBUGGING_INFO\n static void\n sdbout_begin_prologue (unsigned int line, const char *file ATTRIBUTE_UNUSED)\n {\n   sdbout_end_prologue (line, file);\n }\n-#endif\n \n static void\n sdbout_end_prologue (unsigned int line, const char *file ATTRIBUTE_UNUSED)\n@@ -1651,29 +1605,13 @@ static void\n sdbout_start_source_file (unsigned int line ATTRIBUTE_UNUSED,\n \t\t\t  const char *filename ATTRIBUTE_UNUSED)\n {\n-#ifdef MIPS_DEBUGGING_INFO\n-  struct sdb_file *n = XNEW (struct sdb_file);\n-\n-  n->next = current_file;\n-  n->name = filename;\n-  current_file = n;\n-  output_file_directive (asm_out_file, filename);\n-#endif\n }\n \n /* Revert to reading a previous source file.  */\n \n static void\n sdbout_end_source_file (unsigned int line ATTRIBUTE_UNUSED)\n {\n-#ifdef MIPS_DEBUGGING_INFO\n-  struct sdb_file *next;\n-\n-  next = current_file->next;\n-  free (current_file);\n-  current_file = next;\n-  output_file_directive (asm_out_file, current_file->name);\n-#endif\n }\n \n /* Set up for SDB output at the start of compilation.  */\n@@ -1683,12 +1621,6 @@ sdbout_init (const char *input_file_name ATTRIBUTE_UNUSED)\n {\n   tree t;\n \n-#ifdef MIPS_DEBUGGING_INFO\n-  current_file = XNEW (struct sdb_file);\n-  current_file->next = NULL;\n-  current_file->name = input_file_name;\n-#endif\n-\n   deferred_global_decls = VEC_alloc (tree, gc, 12);\n \n   /* Emit debug information which was queued by sdbout_symbol before"}, {"sha": "977824e5eba0cb6d30167ee5a3edb3598e234339", "filename": "gcc/system.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c17f33540ebf61ad6d7d88350cd2d90be975ab0/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c17f33540ebf61ad6d7d88350cd2d90be975ab0/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=7c17f33540ebf61ad6d7d88350cd2d90be975ab0", "patch": "@@ -878,8 +878,8 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n \tMACHINE_TYPE TARGET_HAS_TARGETCM ASM_OUTPUT_BSS\t\t\t   \\\n \tSETJMP_VIA_SAVE_AREA FORBIDDEN_INC_DEC_CLASSES\t\t\t   \\\n \tPREFERRED_OUTPUT_RELOAD_CLASS SYSTEM_INCLUDE_DIR\t\t   \\\n-\tSTANDARD_INCLUDE_DIR STANDARD_INCLUDE_COMPONENT \\\n-\tLINK_ELIMINATE_DUPLICATE_LDIRECTORIES\n+\tSTANDARD_INCLUDE_DIR STANDARD_INCLUDE_COMPONENT\t\t\t   \\\n+\tLINK_ELIMINATE_DUPLICATE_LDIRECTORIES MIPS_DEBUGGING_INFO\n \n /* Hooks that are no longer used.  */\n  #pragma GCC poison LANG_HOOKS_FUNCTION_MARK LANG_HOOKS_FUNCTION_FREE\t\\"}]}