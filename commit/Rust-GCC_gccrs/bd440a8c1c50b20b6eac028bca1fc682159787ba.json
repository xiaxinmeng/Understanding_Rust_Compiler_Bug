{"sha": "bd440a8c1c50b20b6eac028bca1fc682159787ba", "node_id": "C_kwDOANBUbNoAKGJkNDQwYThjMWM1MGIyMGI2ZWFjMDI4YmNhMWZjNjgyMTU5Nzg3YmE", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-10-13T02:05:58Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-10-14T01:33:47Z"}, "message": "Adjust testcase for O2 vectorization[Wuninitialized]\n\nIt looks like it's just the the location of the warning that's off,\nthe warning itself is still issued but it's swallowed by the\ndg-prune-output directive.\n\nSince the test was added to verify the fix for an ICE without\nvectorization I think disabling vectorization should be fine.\nIdeally, we would understand why the location is wrong so let's keep\nthis bug open and add a comment to the test referencing this bug.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/warn/Wuninitialized-13.C: Add -fno-tree-vectorize.", "tree": {"sha": "b75ba13068afce8d9afe2cad7c12e1a2471f2d95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b75ba13068afce8d9afe2cad7c12e1a2471f2d95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd440a8c1c50b20b6eac028bca1fc682159787ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd440a8c1c50b20b6eac028bca1fc682159787ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd440a8c1c50b20b6eac028bca1fc682159787ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd440a8c1c50b20b6eac028bca1fc682159787ba/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4728afb9894bc94e48d78ee5dc45299ae8d8ad41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4728afb9894bc94e48d78ee5dc45299ae8d8ad41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4728afb9894bc94e48d78ee5dc45299ae8d8ad41"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "b74a2fa98ecb52fb6b5e154f69d09efca2e728da", "filename": "gcc/testsuite/g++.dg/warn/Wuninitialized-13.C", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd440a8c1c50b20b6eac028bca1fc682159787ba/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd440a8c1c50b20b6eac028bca1fc682159787ba/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-13.C?ref=bd440a8c1c50b20b6eac028bca1fc682159787ba", "patch": "@@ -1,11 +1,14 @@\n /* PR c/98597 - ICE in -Wuninitialized printing a MEM_REF\n    { dg-do compile }\n-   { dg-options \"-O2 -Wall\" } */\n+   { dg-options \"-O2 -Wall -fno-tree-vectorize\" } */\n \n+/* After vectorization, the location of the warning that's off,\n+   the warning itself is still issued but it's swallowed by\n+   the dg-prune-output directive. Refer to pr102700.  */\n struct shared_count {\n   shared_count () { }\n   shared_count (shared_count &r)\n-    : pi (r.pi) { }     // { dg-warning \"\\\\\\[-Wuninitialized\" \"\" { xfail { i?86-*-* x86_64-*-* } } }\n+    : pi (r.pi) { }     // { dg-warning \"\\\\\\[-Wuninitialized\" }\n   int pi;\n };\n "}]}