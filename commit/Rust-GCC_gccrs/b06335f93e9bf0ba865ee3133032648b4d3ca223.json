{"sha": "b06335f93e9bf0ba865ee3133032648b4d3ca223", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA2MzM1ZjkzZTliZjBiYTg2NWVlMzEzMzAzMjY0OGI0ZDNjYTIyMw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-09-01T09:03:52Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-09-01T09:03:52Z"}, "message": "[AArch64] Add ANDS pattern for CMP+ZERO_EXTEND\n\n\t* config/aarch64/aarch64.md (*ands<mode>_compare0): New pattern.\n\t* config/aarch64/aarch64.c (aarch64_select_cc_mode): Return CC_NZmode\n\tfor comparisons of integer ZERO_EXTEND against zero.\n\n\t* gcc.target/aarch64/ands_3.c: New test.\n\nFrom-SVN: r239919", "tree": {"sha": "4f566c0ac73460f45e0e88ba28c6e2cc30ddaeec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f566c0ac73460f45e0e88ba28c6e2cc30ddaeec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b06335f93e9bf0ba865ee3133032648b4d3ca223", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b06335f93e9bf0ba865ee3133032648b4d3ca223", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b06335f93e9bf0ba865ee3133032648b4d3ca223", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b06335f93e9bf0ba865ee3133032648b4d3ca223/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3409207a446054802c83e41cd5eb609816a00278", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3409207a446054802c83e41cd5eb609816a00278", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3409207a446054802c83e41cd5eb609816a00278"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "bf5c54901e7930fbd8d378011250d5c21b9cdff5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b06335f93e9bf0ba865ee3133032648b4d3ca223/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b06335f93e9bf0ba865ee3133032648b4d3ca223/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b06335f93e9bf0ba865ee3133032648b4d3ca223", "patch": "@@ -1,3 +1,9 @@\n+2016-09-01  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64.md (*ands<mode>_compare0): New pattern.\n+\t* config/aarch64/aarch64.c (aarch64_select_cc_mode): Return CC_NZmode\n+\tfor comparisons of integer ZERO_EXTEND against zero.\n+\n 2016-09-01  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/i386/i386.c (ix86_option_override_internal): Also disable the"}, {"sha": "e813d66b40a6a9abce0a913f3d643153917bfd05", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b06335f93e9bf0ba865ee3133032648b4d3ca223/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b06335f93e9bf0ba865ee3133032648b4d3ca223/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=b06335f93e9bf0ba865ee3133032648b4d3ca223", "patch": "@@ -4264,6 +4264,14 @@ aarch64_select_cc_mode (RTX_CODE code, rtx x, rtx y)\n       && (GET_MODE (x) == HImode || GET_MODE (x) == QImode))\n     return CC_NZmode;\n \n+  /* Similarly, comparisons of zero_extends from shorter modes can\n+     be performed using an ANDS with an immediate mask.  */\n+  if (y == const0_rtx && GET_CODE (x) == ZERO_EXTEND\n+      && (GET_MODE (x) == SImode || GET_MODE (x) == DImode)\n+      && (GET_MODE (XEXP (x, 0)) == HImode || GET_MODE (XEXP (x, 0)) == QImode)\n+      && (code == EQ || code == NE))\n+    return CC_NZmode;\n+\n   if ((GET_MODE (x) == SImode || GET_MODE (x) == DImode)\n       && y == const0_rtx\n       && (code == EQ || code == NE || code == LT || code == GE)"}, {"sha": "6afaf906915efe58a089ccb8f2b035a9f46555d3", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b06335f93e9bf0ba865ee3133032648b4d3ca223/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b06335f93e9bf0ba865ee3133032648b4d3ca223/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=b06335f93e9bf0ba865ee3133032648b4d3ca223", "patch": "@@ -3811,6 +3811,18 @@\n   [(set_attr \"type\" \"alus_imm\")]\n )\n \n+(define_insn \"*ands<mode>_compare0\"\n+  [(set (reg:CC_NZ CC_REGNUM)\n+\t(compare:CC_NZ\n+\t (zero_extend:GPI (match_operand:SHORT 1 \"register_operand\" \"r\"))\n+\t (const_int 0)))\n+   (set (match_operand:GPI 0 \"register_operand\" \"=r\")\n+\t(zero_extend:GPI (match_dup 1)))]\n+  \"\"\n+  \"ands\\\\t%<GPI:w>0, %<GPI:w>1, <short_mask>\"\n+  [(set_attr \"type\" \"alus_imm\")]\n+)\n+\n (define_insn \"*and<mode>3nr_compare0\"\n   [(set (reg:CC_NZ CC_REGNUM)\n \t(compare:CC_NZ"}, {"sha": "82f3daaa9f54c3efdfe58a65bb8afdd6d8eec691", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b06335f93e9bf0ba865ee3133032648b4d3ca223/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b06335f93e9bf0ba865ee3133032648b4d3ca223/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b06335f93e9bf0ba865ee3133032648b4d3ca223", "patch": "@@ -1,3 +1,7 @@\n+2016-09-01  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/aarch64/ands_3.c: New test.\n+\n 2016-08-31  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/77352"}, {"sha": "42cb7f0f0bc86a4aceb09851c31eb2e888d93403", "filename": "gcc/testsuite/gcc.target/aarch64/ands_3.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b06335f93e9bf0ba865ee3133032648b4d3ca223/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fands_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b06335f93e9bf0ba865ee3133032648b4d3ca223/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fands_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fands_3.c?ref=b06335f93e9bf0ba865ee3133032648b4d3ca223", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int\n+f9 (unsigned char x, int y)\n+{\n+  if (y > 1 && x == 0)\n+    return 10;\n+  return x;\n+}\n+\n+/* { dg-final { scan-assembler \"ands\\t(x|w)\\[0-9\\]+,\\[ \\t\\]*(x|w)\\[0-9\\]+,\\[ \\t\\]*255\" } } */"}]}