{"sha": "1a07229414e590ca4fe245fc3e05550b58df5ff5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWEwNzIyOTQxNGU1OTBjYTRmZTI0NWZjM2UwNTU1MGI1OGRmNWZmNQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-07-06T10:03:05Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-07-06T10:03:05Z"}, "message": "tree.c (build_common_tree_nodes_2): Merge with build_common_tree_nodes.\n\n2011-07-06  Richard Guenther  <rguenther@suse.de>\n\n\t* tree.c (build_common_tree_nodes_2): Merge with\n\tbuild_common_tree_nodes.\n\t* tree.h (build_common_tree_nodes): Adjust prototype.\n\t(build_common_tree_nodes_2): Remove.\n\t* doc/tm.texi.in (lang_hooks.builtin_function): Adjust.\n\t* doc/tm.texi (lang_hooks.builtin_function): Regenerate.\n\n\tc-family/\n\t* c-common.c (c_common_nodes_and_builtins):\n\tMerge calls to build_common_tree_nodes and build_common_tree_nodes_2.\n\n\tfortran/\n\t* f95-lang.c (gfc_init_decl_processing):\n\tMerge calls to build_common_tree_nodes and build_common_tree_nodes_2.\n\n\tgo/\n\t* go-lang.c (go_langhook_init):\n\tMerge calls to build_common_tree_nodes and build_common_tree_nodes_2.\n\n\tjava/\n\t* decl.c (java_init_decl_processing):\n\tMerge calls to build_common_tree_nodes and build_common_tree_nodes_2.\n\n\tlto/\n\t* lto-lang.c (lto_init):\n\tMerge calls to build_common_tree_nodes and build_common_tree_nodes_2.\n\n\tada/\n\t* gcc-interface/misc.c (gnat_init):\n\tMerge calls to build_common_tree_nodes and build_common_tree_nodes_2.\n\tRe-initialize boolean_false_node.\n\nFrom-SVN: r175906", "tree": {"sha": "1dffb70df948ffa400f99b16abdc37060a8e1d92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1dffb70df948ffa400f99b16abdc37060a8e1d92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a07229414e590ca4fe245fc3e05550b58df5ff5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a07229414e590ca4fe245fc3e05550b58df5ff5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a07229414e590ca4fe245fc3e05550b58df5ff5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a07229414e590ca4fe245fc3e05550b58df5ff5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e6a64b21cb136a8b4e65f5d14cc9206e8baba54f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6a64b21cb136a8b4e65f5d14cc9206e8baba54f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6a64b21cb136a8b4e65f5d14cc9206e8baba54f"}], "stats": {"total": 83, "additions": 54, "deletions": 29}, "files": [{"sha": "15e99e4fbeb9f561f34e41642f1c429c039f44cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a07229414e590ca4fe245fc3e05550b58df5ff5", "patch": "@@ -1,3 +1,12 @@\n+2011-07-06  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree.c (build_common_tree_nodes_2): Merge with\n+\tbuild_common_tree_nodes.\n+\t* tree.h (build_common_tree_nodes): Adjust prototype.\n+\t(build_common_tree_nodes_2): Remove.\n+\t* doc/tm.texi.in (lang_hooks.builtin_function): Adjust.\n+\t* doc/tm.texi (lang_hooks.builtin_function): Regenerate.\n+\n 2011-07-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/49618"}, {"sha": "66bc3e031d3fc5b65423a80372a125d832764fcf", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1a07229414e590ca4fe245fc3e05550b58df5ff5", "patch": "@@ -1,3 +1,9 @@\n+2011-07-06  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc-interface/misc.c (gnat_init):\n+\tMerge calls to build_common_tree_nodes and build_common_tree_nodes_2.\n+\tRe-initialize boolean_false_node.\n+\n 2011-07-02  Eric Botcazou  <ebotcazou@adacore.com>\n \t    Olivier Hainque  <hainque@adacore.com>\n \t    Nicolas Setton  <setton@adacore.com>"}, {"sha": "22516522d4ddc62d1641ec4ae5071602ff1c842e", "filename": "gcc/ada/gcc-interface/misc.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fmisc.c?ref=1a07229414e590ca4fe245fc3e05550b58df5ff5", "patch": "@@ -307,7 +307,7 @@ gnat_init (void)\n   /* Do little here, most of the standard declarations are set up after the\n      front-end has been run.  Use the same `char' as C, this doesn't really\n      matter since we'll use the explicit `unsigned char' for Character.  */\n-  build_common_tree_nodes (flag_signed_char);\n+  build_common_tree_nodes (flag_signed_char, false);\n \n   /* In Ada, we use an unsigned 8-bit type for the default boolean type.  */\n   boolean_type_node = make_unsigned_type (8);\n@@ -316,10 +316,10 @@ gnat_init (void)\n \t\t\t build_int_cst (boolean_type_node, 1));\n   SET_TYPE_RM_SIZE (boolean_type_node, bitsize_int (1));\n \n-  build_common_tree_nodes_2 (0);\n   sbitsize_one_node = sbitsize_int (1);\n   sbitsize_unit_node = sbitsize_int (BITS_PER_UNIT);\n   boolean_true_node = TYPE_MAX_VALUE (boolean_type_node);\n+  boolean_false_node = TYPE_MIN_VALUE (boolean_type_node);\n \n   ptr_void_type_node = build_pointer_type (void_type_node);\n "}, {"sha": "1e3ca7d1d6a94a16c11bb69c92ed33633ba766d2", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=1a07229414e590ca4fe245fc3e05550b58df5ff5", "patch": "@@ -1,3 +1,8 @@\n+2011-07-06  Richard Guenther  <rguenther@suse.de>\n+\n+\t* c-common.c (c_common_nodes_and_builtins):\n+\tMerge calls to build_common_tree_nodes and build_common_tree_nodes_2.\n+\n 2011-07-05  Richard Guenther  <rguenther@suse.de>\n \n \t* c-common.c (c_common_nodes_and_builtins): Build all common"}, {"sha": "67291de7d4a5b2f026d0adc131a827a775cb465e", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=1a07229414e590ca4fe245fc3e05550b58df5ff5", "patch": "@@ -4576,8 +4576,7 @@ c_common_nodes_and_builtins (void)\n   tree va_list_ref_type_node;\n   tree va_list_arg_type_node;\n \n-  build_common_tree_nodes (flag_signed_char);\n-  build_common_tree_nodes_2 (flag_short_double);\n+  build_common_tree_nodes (flag_signed_char, flag_short_double);\n \n   /* Define `int' and `char' first so that dbx will output them first.  */\n   record_builtin_type (RID_INT, NULL, integer_type_node);"}, {"sha": "ae90184b4f17de5b48aef28a78004ac18125eb53", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=1a07229414e590ca4fe245fc3e05550b58df5ff5", "patch": "@@ -10876,7 +10876,7 @@ instructions or prefetch instructions).\n To create a built-in function, call the function\n @code{lang_hooks.builtin_function}\n which is defined by the language front end.  You can use any type nodes set\n-up by @code{build_common_tree_nodes} and @code{build_common_tree_nodes_2};\n+up by @code{build_common_tree_nodes};\n only language front ends that use those two functions will call\n @samp{TARGET_INIT_BUILTINS}.\n @end deftypefn"}, {"sha": "254ddc2c90dfe50847b9571707dace8c19a19504", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=1a07229414e590ca4fe245fc3e05550b58df5ff5", "patch": "@@ -10783,7 +10783,7 @@ instructions or prefetch instructions).\n To create a built-in function, call the function\n @code{lang_hooks.builtin_function}\n which is defined by the language front end.  You can use any type nodes set\n-up by @code{build_common_tree_nodes} and @code{build_common_tree_nodes_2};\n+up by @code{build_common_tree_nodes};\n only language front ends that use those two functions will call\n @samp{TARGET_INIT_BUILTINS}.\n @end deftypefn"}, {"sha": "90a95d031f838e57b5933acf9f915887f394c9f1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1a07229414e590ca4fe245fc3e05550b58df5ff5", "patch": "@@ -1,3 +1,8 @@\n+2011-07-06  Richard Guenther  <rguenther@suse.de>\n+\n+\t* f95-lang.c (gfc_init_decl_processing):\n+\tMerge calls to build_common_tree_nodes and build_common_tree_nodes_2.\n+\n 2011-07-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/49623"}, {"sha": "648831f260702511e4b04a53bd027d404a5eeb5f", "filename": "gcc/fortran/f95-lang.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Ffortran%2Ff95-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Ffortran%2Ff95-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ff95-lang.c?ref=1a07229414e590ca4fe245fc3e05550b58df5ff5", "patch": "@@ -588,9 +588,8 @@ gfc_init_decl_processing (void)\n   /* Build common tree nodes. char_type_node is unsigned because we\n      only use it for actual characters, not for INTEGER(1). Also, we\n      want double_type_node to actually have double precision.  */\n-  build_common_tree_nodes (false);\n+  build_common_tree_nodes (false, false);\n \n-  build_common_tree_nodes_2 (0);\n   void_list_node = build_tree_list (NULL_TREE, void_type_node);\n \n   /* Set up F95 type nodes.  */"}, {"sha": "fb26cabfc319d25c53c2d09f59ec4653521097ef", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=1a07229414e590ca4fe245fc3e05550b58df5ff5", "patch": "@@ -1,3 +1,8 @@\n+2011-07-06  Richard Guenther  <rguenther@suse.de>\n+\n+\t* go-lang.c (go_langhook_init):\n+\tMerge calls to build_common_tree_nodes and build_common_tree_nodes_2.\n+\n 2011-06-14  Joseph Myers  <joseph@codesourcery.com>\n \n \t* Make-lang.in (go/go-lang.o, go/go-backend.o): Update"}, {"sha": "6abe3b8478932a220498b8c6259d3da2072459d5", "filename": "gcc/go/go-lang.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Fgo%2Fgo-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Fgo%2Fgo-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-lang.c?ref=1a07229414e590ca4fe245fc3e05550b58df5ff5", "patch": "@@ -86,9 +86,7 @@ struct GTY(()) language_function\n static bool\n go_langhook_init (void)\n {\n-  build_common_tree_nodes (false);\n-\n-  build_common_tree_nodes_2 (0);\n+  build_common_tree_nodes (false, false);\n \n   /* We must create the gogo IR after calling build_common_tree_nodes\n      (because Gogo::define_builtin_function_trees refers indirectly"}, {"sha": "b3e3ec66c837aae6109a944ac48a76052f4072e6", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=1a07229414e590ca4fe245fc3e05550b58df5ff5", "patch": "@@ -1,3 +1,8 @@\n+2011-07-06  Richard Guenther  <rguenther@suse.de>\n+\n+\t* decl.c (java_init_decl_processing):\n+\tMerge calls to build_common_tree_nodes and build_common_tree_nodes_2.\n+\n 2011-06-21  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* builtins.c: Add sync_ or SYNC__ to builtin names."}, {"sha": "179a2c3e9aaf8a96a3ce3e91d7634734d55995f0", "filename": "gcc/java/decl.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=1a07229414e590ca4fe245fc3e05550b58df5ff5", "patch": "@@ -567,10 +567,7 @@ java_init_decl_processing (void)\n   global_binding_level = current_binding_level;\n \n   /* Build common tree nodes, Java has an unsigned char.  */\n-  build_common_tree_nodes (false);\n-\n-  /* Build the rest of the common tree nodes.  */\n-  build_common_tree_nodes_2 (0);\n+  build_common_tree_nodes (false, false);\n \n   /* ???  Now we continue and override some of the built types again\n      with Java specific types.  As the above generated types are"}, {"sha": "c80b33a6b1a852e7c630d564b1718d23c47a9bc7", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=1a07229414e590ca4fe245fc3e05550b58df5ff5", "patch": "@@ -1,3 +1,8 @@\n+2011-07-06  Richard Guenther  <rguenther@suse.de>\n+\n+\t* lto-lang.c (lto_init):\n+\tMerge calls to build_common_tree_nodes and build_common_tree_nodes_2.\n+\n 2011-06-11  Jan Hubicka  <jh@suse.cz>\n \n \tPR lto/48246"}, {"sha": "3574da02d115032aaa96d6c4a00ffdd0b5d9c9f3", "filename": "gcc/lto/lto-lang.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Flto%2Flto-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Flto%2Flto-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-lang.c?ref=1a07229414e590ca4fe245fc3e05550b58df5ff5", "patch": "@@ -1085,7 +1085,7 @@ lto_init (void)\n   linemap_add (line_table, LC_RENAME, 0, NULL, 0);\n \n   /* Create the basic integer types.  */\n-  build_common_tree_nodes (flag_signed_char);\n+  build_common_tree_nodes (flag_signed_char, /*short_double=*/false);\n \n   /* The global tree for the main identifier is filled in by\n      language-specific front-end initialization that is not run in the\n@@ -1102,8 +1102,6 @@ lto_init (void)\n \n   ptrdiff_type_node = integer_type_node;\n \n-  /* Create other basic types.  */\n-  build_common_tree_nodes_2 (/*short_double=*/false);\n   lto_build_c_type_nodes ();\n   gcc_assert (va_list_type_node);\n "}, {"sha": "e9876dd81a1c3134e4f3e35d8768527146a029eb", "filename": "gcc/tree.c", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=1a07229414e590ca4fe245fc3e05550b58df5ff5", "patch": "@@ -9167,10 +9167,12 @@ make_or_reuse_accum_type (unsigned size, int unsignedp, int satp)\n }\n \n /* Create nodes for all integer types (and error_mark_node) using the sizes\n-   of C datatypes.  */\n+   of C datatypes.  SIGNED_CHAR specifies whether char is signed,\n+   SHORT_DOUBLE specifies whether double should be of the same precision\n+   as float.  */\n \n void\n-build_common_tree_nodes (bool signed_char)\n+build_common_tree_nodes (bool signed_char, bool short_double)\n {\n   error_mark_node = make_node (ERROR_MARK);\n   TREE_TYPE (error_mark_node) = error_mark_node;\n@@ -9247,14 +9249,7 @@ build_common_tree_nodes (bool signed_char)\n   access_public_node = get_identifier (\"public\");\n   access_protected_node = get_identifier (\"protected\");\n   access_private_node = get_identifier (\"private\");\n-}\n-\n-/* Call this function after calling build_common_tree_nodes.\n-   It will create several other common tree nodes.  */\n \n-void\n-build_common_tree_nodes_2 (int short_double)\n-{\n   /* Define these next since types below may used them.  */\n   integer_zero_node = build_int_cst (integer_type_node, 0);\n   integer_one_node = build_int_cst (integer_type_node, 1);"}, {"sha": "253d489a94900a9e7dd56b2a764cd7f2943e2454", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a07229414e590ca4fe245fc3e05550b58df5ff5/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=1a07229414e590ca4fe245fc3e05550b58df5ff5", "patch": "@@ -5396,8 +5396,7 @@ extern int real_onep (const_tree);\n extern int real_twop (const_tree);\n extern int real_minus_onep (const_tree);\n extern void init_ttree (void);\n-extern void build_common_tree_nodes (bool);\n-extern void build_common_tree_nodes_2 (int);\n+extern void build_common_tree_nodes (bool, bool);\n extern void build_common_builtin_nodes (void);\n extern tree build_nonstandard_integer_type (unsigned HOST_WIDE_INT, int);\n extern tree build_range_type (tree, tree, tree);"}]}