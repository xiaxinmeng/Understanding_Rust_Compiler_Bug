{"sha": "3350c92a1fb34fc74fb14f274a81821ab5da1398", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM1MGM5MmExZmIzNGZjNzRmYjE0ZjI3NGE4MTgyMWFiNWRhMTM5OA==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2017-02-11T23:08:11Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2017-02-11T23:08:11Z"}, "message": "extend.texi: Fix some spelling mistakes and typos.\n\n2017-02-11  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgcc/\n\t* doc/extend.texi: Fix some spelling mistakes and typos.\n\t* doc/invoke.texi: Likewise.\n\nFrom-SVN: r245367", "tree": {"sha": "51680b35f108cda12368d369fa3274fdd61a95cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51680b35f108cda12368d369fa3274fdd61a95cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3350c92a1fb34fc74fb14f274a81821ab5da1398", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3350c92a1fb34fc74fb14f274a81821ab5da1398", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3350c92a1fb34fc74fb14f274a81821ab5da1398", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3350c92a1fb34fc74fb14f274a81821ab5da1398/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "540b7af0682bc12d6ce41292a502f4c33b33ce6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/540b7af0682bc12d6ce41292a502f4c33b33ce6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/540b7af0682bc12d6ce41292a502f4c33b33ce6d"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "c6da70d21eef4b32357b6500f91448612a41a068", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3350c92a1fb34fc74fb14f274a81821ab5da1398/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3350c92a1fb34fc74fb14f274a81821ab5da1398/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3350c92a1fb34fc74fb14f274a81821ab5da1398", "patch": "@@ -1,3 +1,8 @@\n+2017-02-11  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* doc/extend.texi: Fix some spelling mistakes and typos.\n+\t* doc/invoke.texi: Likewise.\n+\n 2017-02-11  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR ipa/79224"}, {"sha": "d33b1fc1556a03090bd83f4192f34366a4b235ab", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3350c92a1fb34fc74fb14f274a81821ab5da1398/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3350c92a1fb34fc74fb14f274a81821ab5da1398/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=3350c92a1fb34fc74fb14f274a81821ab5da1398", "patch": "@@ -3516,7 +3516,7 @@ same as for the @option{-mcpu=} command-line option.\n @item sign-return-address\n @cindex @code{sign-return-address} function attribute, AArch64\n Select the function scope on which return address signing will be applied.  The\n-behaviour and permissible arguments are the same as for the command-line option\n+behavior and permissible arguments are the same as for the command-line option\n @option{-msign-return-address=}.  The default value is @code{none}.\n \n @end table\n@@ -12657,7 +12657,7 @@ void __builtin_arm_set_fpscr (unsigned int)\n @subsection ARM ARMv8-M Security Extensions\n \n GCC implements the ARMv8-M Security Extensions as described in the ARMv8-M\n-Security Extensions: Requiremenets on Development Tools Engineering\n+Security Extensions: Requirements on Development Tools Engineering\n Specification, which can be found at\n @uref{http://infocenter.arm.com/help/topic/com.arm.doc.ecm0359818/ECM0359818_armv8m_security_extensions_reqs_on_dev_tools_1_0.pdf}.\n \n@@ -13993,7 +13993,7 @@ data elements.  The following vectors typedefs are included in @code{msa.h}:\n @item @code{v2f64}, a vector of two 64-bit doubles.\n @end itemize\n \n-Intructions and corresponding built-ins may have additional restrictions and/or\n+Instructions and corresponding built-ins may have additional restrictions and/or\n input/output values manipulated:\n @itemize\n @item @code{imm0_1}, an integer literal in range 0 to 1;"}, {"sha": "56ca53f490bd6f43488fd317abb04af563f0c694", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3350c92a1fb34fc74fb14f274a81821ab5da1398/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3350c92a1fb34fc74fb14f274a81821ab5da1398/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=3350c92a1fb34fc74fb14f274a81821ab5da1398", "patch": "@@ -4309,7 +4309,7 @@ fallthrough comments, only attributes disable the warning.\n @end itemize\n \n The comment needs to be followed after optional whitespace and other comments\n-by @code{case} or @code{default} keywords or by a user label that preceeds some\n+by @code{case} or @code{default} keywords or by a user label that precedes some\n @code{case} or @code{default} label.\n \n @smallexample\n@@ -5145,7 +5145,7 @@ or where the result of the size computation in an integer type with infinite\n precision would exceed @code{SIZE_MAX / 2}.  The option argument @var{n}\n may end in one of the standard suffixes designating a multiple of bytes\n such as @code{kB} and @code{KiB} for kilobyte and kibibyte, respectively,\n-@code{MB} and @code{MiB} for magabyte and mebibyte, and so on.\n+@code{MB} and @code{MiB} for megabyte and mebibyte, and so on.\n @xref{Function Attributes}.\n \n @item -Walloca\n@@ -5935,7 +5935,7 @@ while} statement.  This warning is also enabled by @option{-Wextra}.\n @opindex Wenum-compare\n @opindex Wno-enum-compare\n Warn about a comparison between values of different enumerated types.\n-In C++ enumeral mismatches in conditional expressions are also\n+In C++ enumerated type mismatches in conditional expressions are also\n diagnosed and the warning is enabled by default.  In C this warning is \n enabled by @option{-Wall}.\n \n@@ -9685,7 +9685,7 @@ The default value is 40.\n \n @item inline-min-speedup\n When estimated performance improvement of caller + callee runtime exceeds this\n-threshold (in precent), the function can be inlined regardless the limit on\n+threshold (in percent), the function can be inlined regardless of the limit on\n @option{--param max-inline-insns-single} and @option{--param\n max-inline-insns-auto}.\n \n@@ -10483,14 +10483,14 @@ E.g. to disable inline code use\n @option{--param asan-instrumentation-with-call-threshold=0}.\n \n @item use-after-scope-direct-emission-threshold\n-If size of a local variables in bytes is smaller of equal to this number,\n+If size of a local variable in bytes is smaller or equal to this number,\n direct instruction emission is utilized to poison and unpoison local variables.\n Default value in 256.\n \n @item chkp-max-ctor-size\n Static constructors generated by Pointer Bounds Checker may become very\n large and significantly increase compile time at optimization level\n-@option{-O1} and higher.  This parameter is a maximum nubmer of statements\n+@option{-O1} and higher.  This parameter is a maximum number of statements\n in a single generated constructor.  Default value is 5000.\n \n @item max-fsm-thread-path-insns\n@@ -15707,7 +15707,7 @@ Alternatively, @code{func_4} can be defined in the linker script.\n @cindex @code{RAMPZ}\n Some AVR devices support memories larger than the 64@tie{}KiB range\n that can be accessed with 16-bit pointers.  To access memory locations\n-outside this 64@tie{}KiB range, the contentent of a @code{RAMP}\n+outside this 64@tie{}KiB range, the content of a @code{RAMP}\n register is used as high part of the address:\n The @code{X}, @code{Y}, @code{Z} address register is concatenated\n with the @code{RAMPX}, @code{RAMPY}, @code{RAMPZ} special function"}]}