{"sha": "a5fe079c34eeafbc36a1620fbd9ab5aa974c6413", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVmZTA3OWMzNGVlYWZiYzM2YTE2MjBmYmQ5YWI1YWE5NzRjNjQxMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-07-30T15:21:46Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-07-30T15:21:46Z"}, "message": "[multiple changes]\n\n2012-07-30  Robert Dewar  <dewar@adacore.com>\n\n\t* bindusg.adb: Clarify file in -A lines.\n\n2012-07-30  Robert Dewar  <dewar@adacore.com>\n\n\t* freeze.adb: Minor reformatting.\n\n2012-07-30  Robert Dewar  <dewar@adacore.com>\n\n\t* gnatcmd.adb, makeutl.adb, makeutl.ads: Minor code reorganization.\n\n2012-07-30  Vincent Pucci  <pucci@adacore.com>\n\n\t* exp_ch9.adb (Build_Lock_Free_Unprotected_Subprogram_Body): Minor\n\treformatting.\n\t* sem_ch9.adb (Allows_Lock_Free_Implementation): Minor reformatting.\n\tCapture the correct error message in case of a quantified expression.\n\n2012-07-30  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-socket.adb (Get_Socket_Option, Set_Socket_Option): On Windows, the\n\tvalue is a milliseconds count in a DWORD, not a struct timeval.\n\nFrom-SVN: r189979", "tree": {"sha": "84b44adda5548733a0ba71ebd9458374b667579b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84b44adda5548733a0ba71ebd9458374b667579b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5fe079c34eeafbc36a1620fbd9ab5aa974c6413", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5fe079c34eeafbc36a1620fbd9ab5aa974c6413", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5fe079c34eeafbc36a1620fbd9ab5aa974c6413", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5fe079c34eeafbc36a1620fbd9ab5aa974c6413/comments", "author": null, "committer": null, "parents": [{"sha": "ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536"}], "stats": {"total": 592, "additions": 340, "deletions": 252}, "files": [{"sha": "61bdbc76be0baa9d263e0d7e8979a007825f1164", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fe079c34eeafbc36a1620fbd9ab5aa974c6413/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fe079c34eeafbc36a1620fbd9ab5aa974c6413/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a5fe079c34eeafbc36a1620fbd9ab5aa974c6413", "patch": "@@ -1,3 +1,27 @@\n+2012-07-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* bindusg.adb: Clarify file in -A lines.\n+\n+2012-07-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* freeze.adb: Minor reformatting.\n+\n+2012-07-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnatcmd.adb, makeutl.adb, makeutl.ads: Minor code reorganization.\n+\n+2012-07-30  Vincent Pucci  <pucci@adacore.com>\n+\n+\t* exp_ch9.adb (Build_Lock_Free_Unprotected_Subprogram_Body): Minor\n+\treformatting.\n+\t* sem_ch9.adb (Allows_Lock_Free_Implementation): Minor reformatting.\n+\tCapture the correct error message in case of a quantified expression.\n+\n+2012-07-30  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-socket.adb (Get_Socket_Option, Set_Socket_Option): On Windows, the\n+\tvalue is a milliseconds count in a DWORD, not a struct timeval.\n+\n 2012-07-30  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_ch12.adb (Earlier): Add local variables T1 and T2. Minor code"}, {"sha": "e9d39504af1e76da6c32c5d2d56deda66525b3af", "filename": "gcc/ada/bindusg.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fe079c34eeafbc36a1620fbd9ab5aa974c6413/gcc%2Fada%2Fbindusg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fe079c34eeafbc36a1620fbd9ab5aa974c6413/gcc%2Fada%2Fbindusg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindusg.adb?ref=a5fe079c34eeafbc36a1620fbd9ab5aa974c6413", "patch": "@@ -76,9 +76,10 @@ package body Bindusg is\n       Write_Line (\"  -a        Automatically initialize elaboration \" &\n                   \"procedure\");\n \n-      --  Line for -A switch\n+      --  Lines for -A switch\n \n-      Write_Line (\"  -A[=file] Give list of ALI files in partition\");\n+      Write_Line (\"  -A        Give list of ALI files in partition\");\n+      Write_Line (\"  -A=file   Write ALI file list to named file\");\n \n       --  Line for -b switch\n "}, {"sha": "a6c1940a8cc95b9741b9a68a79aae4157c29cc80", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fe079c34eeafbc36a1620fbd9ab5aa974c6413/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fe079c34eeafbc36a1620fbd9ab5aa974c6413/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=a5fe079c34eeafbc36a1620fbd9ab5aa974c6413", "patch": "@@ -3260,20 +3260,21 @@ package body Exp_Ch9 is\n          begin\n             --  Get the type size\n \n-            --  Surely this should be Known_Static_Esize if you are about\n-            --  to assume you can do UI_To_Int on it! ???\n-\n             if Known_Esize (Comp_Type) then\n                Typ_Size := UI_To_Int (Esize (Comp_Type));\n \n             --  If the Esize (Object_Size) is unknown at compile-time, look at\n             --  the RM_Size (Value_Size) since it may have been set by an\n             --  explicit representation clause.\n \n-            --  And how do we know this is statically known???\n+            elsif Known_RM_Size (Comp_Type) then\n+               Typ_Size := UI_To_Int (RM_Size (Comp_Type));\n+\n+            --  Should not happen since this has already been checked in\n+            --  Allows_Lock_Free_Implementation (see Sem_Ch9).\n \n             else\n-               Typ_Size := UI_To_Int (RM_Size (Comp_Type));\n+               raise Program_Error;\n             end if;\n \n             --  Retrieve all relevant atomic routines and types"}, {"sha": "5f0547c4bdbb549d636fe0da090a39b406c618b4", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fe079c34eeafbc36a1620fbd9ab5aa974c6413/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fe079c34eeafbc36a1620fbd9ab5aa974c6413/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=a5fe079c34eeafbc36a1620fbd9ab5aa974c6413", "patch": "@@ -4204,12 +4204,12 @@ package body Freeze is\n          elsif Is_Access_Type (E)\n            and then not Is_Access_Subprogram_Type (E)\n          then\n-\n             --  If a pragma Default_Storage_Pool applies, and this type has no\n             --  Storage_Pool or Storage_Size clause (which must have occurred\n             --  before the freezing point), then use the default. This applies\n             --  only to base types.\n-            --  None of this applies to access to subprogramss, for which there\n+\n+            --  None of this applies to access to subprograms, for which there\n             --  are clearly no pools.\n \n             if Present (Default_Pool)"}, {"sha": "d84c28f07325339045e571792aa6f5eaaa09726d", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 63, "deletions": 7, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fe079c34eeafbc36a1620fbd9ab5aa974c6413/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fe079c34eeafbc36a1620fbd9ab5aa974c6413/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=a5fe079c34eeafbc36a1620fbd9ab5aa974c6413", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2011, AdaCore                     --\n+--                     Copyright (C) 2001-2012, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1112,6 +1112,7 @@ package body GNAT.Sockets is\n       Level  : Level_Type := Socket_Level;\n       Name   : Option_Name) return Option_Type\n    is\n+      use SOSC;\n       use type C.unsigned_char;\n \n       V8  : aliased Two_Ints;\n@@ -1144,8 +1145,22 @@ package body GNAT.Sockets is\n \n          when Send_Timeout    |\n               Receive_Timeout =>\n-            Len := VT'Size / 8;\n-            Add := VT'Address;\n+\n+            --  The standard argument for SO_RCVTIMEO and SO_SNDTIMEO is a\n+            --  struct timeval, but on Windows it is a milliseconds count in\n+            --  a DWORD.\n+\n+            pragma Warnings (Off);\n+            if Target_OS = Windows then\n+               pragma Warnings (On);\n+\n+               Len := V4'Size / 8;\n+               Add := V4'Address;\n+\n+            else\n+               Len := VT'Size / 8;\n+               Add := VT'Address;\n+            end if;\n \n          when Linger          |\n               Add_Membership  |\n@@ -1201,7 +1216,23 @@ package body GNAT.Sockets is\n \n          when Send_Timeout    |\n               Receive_Timeout =>\n-            Opt.Timeout := To_Duration (VT);\n+\n+            pragma Warnings (Off);\n+            if Target_OS = Windows then\n+               pragma Warnings (On);\n+\n+               --  Timeout is in milliseconds, actual value is 500 ms +\n+               --  returned value (unless it is 0).\n+\n+               if V4 = 0 then\n+                  Opt.Timeout := 0.0;\n+               else\n+                  Opt.Timeout := Natural (V4) * 0.001 + 0.500;\n+               end if;\n+\n+            else\n+               Opt.Timeout := To_Duration (VT);\n+            end if;\n       end case;\n \n       return Opt;\n@@ -2176,6 +2207,8 @@ package body GNAT.Sockets is\n       Level  : Level_Type := Socket_Level;\n       Option : Option_Type)\n    is\n+      use SOSC;\n+\n       V8  : aliased Two_Ints;\n       V4  : aliased C.int;\n       V1  : aliased C.unsigned_char;\n@@ -2236,9 +2269,32 @@ package body GNAT.Sockets is\n \n          when Send_Timeout    |\n               Receive_Timeout =>\n-            VT  := To_Timeval (Option.Timeout);\n-            Len := VT'Size / 8;\n-            Add := VT'Address;\n+\n+            pragma Warnings (Off);\n+            if Target_OS = Windows then\n+               pragma Warnings (On);\n+\n+               --  On Windows, the timeout is a DWORD in milliseconds, and\n+               --  the actual timeout is 500 ms + the given value (unless it\n+               --  is 0).\n+\n+               V4 := C.int (Option.Timeout / 0.001);\n+\n+               if V4 > 500 then\n+                  V4 := V4 - 500;\n+\n+               elsif V4 > 0 then\n+                  V4 := 1;\n+               end if;\n+\n+               Len := V4'Size / 8;\n+               Add := V4'Address;\n+\n+            else\n+               VT  := To_Timeval (Option.Timeout);\n+               Len := VT'Size / 8;\n+               Add := VT'Address;\n+            end if;\n \n       end case;\n "}, {"sha": "82e3f4593b4b7242b5e535f967559b9eebddbf1b", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 85, "deletions": 87, "changes": 172, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fe079c34eeafbc36a1620fbd9ab5aa974c6413/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fe079c34eeafbc36a1620fbd9ab5aa974c6413/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=a5fe079c34eeafbc36a1620fbd9ab5aa974c6413", "patch": "@@ -238,23 +238,30 @@ procedure GNATCmd is\n \n    function Configuration_Pragmas_File return Path_Name_Type;\n    --  Return an argument, if there is a configuration pragmas file to be\n-   --  specified for Project, otherwise return No_Name. Used for gnatstub (GNAT\n-   --  STUB), gnatpp (GNAT PRETTY), gnatelim (GNAT ELIM), and gnatmetric (GNAT\n-   --  METRIC).\n-\n-   function Mapping_File return Path_Name_Type;\n-   --  Create and return the path name of a mapping file. Used for gnatstub\n+   --  specified for Project, otherwise return No_Name. Used for gnatstub\n    --  (GNAT STUB), gnatpp (GNAT PRETTY), gnatelim (GNAT ELIM), and gnatmetric\n    --  (GNAT METRIC).\n \n    procedure Delete_Temp_Config_Files;\n    --  Delete all temporary config files. The caller is responsible for\n    --  ensuring that Keep_Temporary_Files is False.\n \n+   procedure Ensure_Absolute_Path\n+     (Switch : in out String_Access;\n+      Parent : String);\n+   --  Test if Switch is a relative search path switch. If it is and it\n+   --  includes directory information, prepend the path with Parent. This\n+   --  subprogram is only called when using project files.\n+\n    procedure Get_Closure;\n    --  Get the sources in the closure of the ASIS_Main and add them to the\n    --  list of arguments.\n \n+   function Mapping_File return Path_Name_Type;\n+   --  Create and return the path name of a mapping file. Used for gnatstub\n+   --  (GNAT STUB), gnatpp (GNAT PRETTY), gnatelim (GNAT ELIM), and gnatmetric\n+   --  (GNAT METRIC).\n+\n    procedure Non_VMS_Usage;\n    --  Display usage for platforms other than VMS\n \n@@ -268,17 +275,9 @@ procedure GNATCmd is\n    --  If Project is a library project, add the correct -L and -l switches to\n    --  the linker invocation.\n \n-   procedure Set_Libraries is\n-      new For_Every_Project_Imported (Boolean, Set_Library_For);\n-   --  Add the -L and -l switches to the linker for all of the library\n-   --  projects.\n-\n-   procedure Ensure_Absolute_Path\n-     (Switch : in out String_Access;\n-      Parent : String);\n-   --  Test if Switch is a relative search path switch. If it is and it\n-   --  includes directory information, prepend the path with Parent. This\n-   --  subprogram is only called when using project files.\n+   procedure Set_Libraries is new\n+     For_Every_Project_Imported (Boolean, Set_Library_For);\n+   --  Add the -L and -l switches to the linker for all the library projects\n \n    --------------------------\n    -- Add_To_Carg_Switches --\n@@ -789,6 +788,22 @@ procedure GNATCmd is\n       end if;\n    end Delete_Temp_Config_Files;\n \n+   ---------------------------\n+   -- Ensure_Absolute_Path --\n+   ---------------------------\n+\n+   procedure Ensure_Absolute_Path\n+     (Switch : in out String_Access;\n+      Parent : String)\n+   is\n+   begin\n+      Makeutl.Ensure_Absolute_Path\n+        (Switch, Parent,\n+         Do_Fail              => Osint.Fail'Access,\n+         Including_Non_Switch => False,\n+         Including_RTS        => True);\n+   end Ensure_Absolute_Path;\n+\n    -----------------\n    -- Get_Closure --\n    -----------------\n@@ -962,6 +977,59 @@ procedure GNATCmd is\n       return Result;\n    end Mapping_File;\n \n+   -------------------\n+   -- Non_VMS_Usage --\n+   -------------------\n+\n+   procedure Non_VMS_Usage is\n+   begin\n+      Output_Version;\n+      New_Line;\n+      Put_Line (\"List of available commands\");\n+      New_Line;\n+\n+      for C in Command_List'Range loop\n+\n+         --  No usage for VMS only command or for Sync\n+\n+         if not Command_List (C).VMS_Only and then C /= Sync then\n+            if Targparm.AAMP_On_Target then\n+               Put (\"gnaampcmd \");\n+            else\n+               Put (\"gnat \");\n+            end if;\n+\n+            Put (To_Lower (Command_List (C).Cname.all));\n+            Set_Col (25);\n+\n+            --  Never call gnatstack with a prefix\n+\n+            if C = Stack then\n+               Put (Command_List (C).Unixcmd.all);\n+            else\n+               Put (Program_Name (Command_List (C).Unixcmd.all, \"gnat\").all);\n+            end if;\n+\n+            declare\n+               Sws : Argument_List_Access renames Command_List (C).Unixsws;\n+            begin\n+               if Sws /= null then\n+                  for J in Sws'Range loop\n+                     Put (' ');\n+                     Put (Sws (J).all);\n+                  end loop;\n+               end if;\n+            end;\n+\n+            New_Line;\n+         end if;\n+      end loop;\n+\n+      New_Line;\n+      Put_Line (\"All commands except chop, krunch and preprocess \" &\n+                \"accept project file switches -vPx, -Pprj and -Xnam=val\");\n+      New_Line;\n+   end Non_VMS_Usage;\n    ------------------\n    -- Process_Link --\n    ------------------\n@@ -1302,76 +1370,6 @@ procedure GNATCmd is\n       end if;\n    end Set_Library_For;\n \n-   ---------------------------\n-   -- Ensure_Absolute_Path --\n-   ---------------------------\n-\n-   procedure Ensure_Absolute_Path\n-     (Switch : in out String_Access;\n-      Parent : String)\n-   is\n-   begin\n-      Makeutl.Ensure_Absolute_Path\n-        (Switch, Parent,\n-         Do_Fail              => Osint.Fail'Access,\n-         Including_Non_Switch => False,\n-         Including_RTS        => True);\n-   end Ensure_Absolute_Path;\n-\n-   -------------------\n-   -- Non_VMS_Usage --\n-   -------------------\n-\n-   procedure Non_VMS_Usage is\n-   begin\n-      Output_Version;\n-      New_Line;\n-      Put_Line (\"List of available commands\");\n-      New_Line;\n-\n-      for C in Command_List'Range loop\n-\n-         --  No usage for VMS only command or for Sync\n-\n-         if not Command_List (C).VMS_Only and then C /= Sync then\n-            if Targparm.AAMP_On_Target then\n-               Put (\"gnaampcmd \");\n-            else\n-               Put (\"gnat \");\n-            end if;\n-\n-            Put (To_Lower (Command_List (C).Cname.all));\n-            Set_Col (25);\n-\n-            --  Never call gnatstack with a prefix\n-\n-            if C = Stack then\n-               Put (Command_List (C).Unixcmd.all);\n-            else\n-               Put (Program_Name (Command_List (C).Unixcmd.all, \"gnat\").all);\n-            end if;\n-\n-            declare\n-               Sws : Argument_List_Access renames Command_List (C).Unixsws;\n-            begin\n-               if Sws /= null then\n-                  for J in Sws'Range loop\n-                     Put (' ');\n-                     Put (Sws (J).all);\n-                  end loop;\n-               end if;\n-            end;\n-\n-            New_Line;\n-         end if;\n-      end loop;\n-\n-      New_Line;\n-      Put_Line (\"All commands except chop, krunch and preprocess \" &\n-                \"accept project file switches -vPx, -Pprj and -Xnam=val\");\n-      New_Line;\n-   end Non_VMS_Usage;\n-\n --  Start of processing for GNATCmd\n \n begin"}, {"sha": "cdbe1aa134c7d6d4cdee5cb579d08d8c78e1b346", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 103, "deletions": 103, "changes": 206, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fe079c34eeafbc36a1620fbd9ab5aa974c6413/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fe079c34eeafbc36a1620fbd9ab5aa974c6413/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=a5fe079c34eeafbc36a1620fbd9ab5aa974c6413", "patch": "@@ -507,6 +507,109 @@ package body Makeutl is\n       return Name_Find;\n    end Create_Name;\n \n+   ---------------------------\n+   -- Ensure_Absolute_Path --\n+   ---------------------------\n+\n+   procedure Ensure_Absolute_Path\n+     (Switch               : in out String_Access;\n+      Parent               : String;\n+      Do_Fail              : Fail_Proc;\n+      For_Gnatbind         : Boolean := False;\n+      Including_Non_Switch : Boolean := True;\n+      Including_RTS        : Boolean := False)\n+   is\n+   begin\n+      if Switch /= null then\n+         declare\n+            Sw    : String (1 .. Switch'Length);\n+            Start : Positive;\n+\n+         begin\n+            Sw := Switch.all;\n+\n+            if Sw (1) = '-' then\n+               if Sw'Length >= 3\n+                 and then (Sw (2) = 'I'\n+                            or else (not For_Gnatbind\n+                                       and then (Sw (2) = 'L'\n+                                         or else Sw (2) = 'A')))\n+               then\n+                  Start := 3;\n+\n+                  if Sw = \"-I-\" then\n+                     return;\n+                  end if;\n+\n+               elsif Sw'Length >= 4\n+                 and then (Sw (2 .. 3) = \"aL\"\n+                             or else\n+                           Sw (2 .. 3) = \"aO\"\n+                             or else\n+                           Sw (2 .. 3) = \"aI\"\n+                             or else\n+                           (For_Gnatbind and then Sw (2 .. 3) = \"A=\"))\n+               then\n+                  Start := 4;\n+\n+               elsif Including_RTS\n+                 and then Sw'Length >= 7\n+                 and then Sw (2 .. 6) = \"-RTS=\"\n+               then\n+                  Start := 7;\n+\n+               else\n+                  return;\n+               end if;\n+\n+               --  Because relative path arguments to --RTS= may be relative to\n+               --  the search directory prefix, those relative path arguments\n+               --  are converted only when they include directory information.\n+\n+               if not Is_Absolute_Path (Sw (Start .. Sw'Last)) then\n+                  if Parent'Length = 0 then\n+                     Do_Fail\n+                       (\"relative search path switches (\"\"\"\n+                        & Sw\n+                        & \"\"\") are not allowed\");\n+\n+                  elsif Including_RTS then\n+                     for J in Start .. Sw'Last loop\n+                        if Sw (J) = Directory_Separator then\n+                           Switch :=\n+                             new String'\n+                               (Sw (1 .. Start - 1) &\n+                                Parent &\n+                                Directory_Separator &\n+                                Sw (Start .. Sw'Last));\n+                           return;\n+                        end if;\n+                     end loop;\n+\n+                  else\n+                     Switch :=\n+                       new String'\n+                         (Sw (1 .. Start - 1) &\n+                          Parent &\n+                          Directory_Separator &\n+                          Sw (Start .. Sw'Last));\n+                  end if;\n+               end if;\n+\n+            elsif Including_Non_Switch then\n+               if not Is_Absolute_Path (Sw) then\n+                  if Parent'Length = 0 then\n+                     Do_Fail\n+                       (\"relative paths (\"\"\" & Sw & \"\"\") are not allowed\");\n+                  else\n+                     Switch := new String'(Parent & Directory_Separator & Sw);\n+                  end if;\n+               end if;\n+            end if;\n+         end;\n+      end if;\n+   end Ensure_Absolute_Path;\n+\n    ----------------------------\n    -- Executable_Prefix_Path --\n    ----------------------------\n@@ -1936,109 +2039,6 @@ package body Makeutl is\n       end if;\n    end Path_Or_File_Name;\n \n-   ---------------------------\n-   -- Ensure_Absolute_Path --\n-   ---------------------------\n-\n-   procedure Ensure_Absolute_Path\n-     (Switch               : in out String_Access;\n-      Parent               : String;\n-      Do_Fail              : Fail_Proc;\n-      For_Gnatbind         : Boolean := False;\n-      Including_Non_Switch : Boolean := True;\n-      Including_RTS        : Boolean := False)\n-   is\n-   begin\n-      if Switch /= null then\n-         declare\n-            Sw    : String (1 .. Switch'Length);\n-            Start : Positive;\n-\n-         begin\n-            Sw := Switch.all;\n-\n-            if Sw (1) = '-' then\n-               if Sw'Length >= 3\n-                 and then (Sw (2) = 'I'\n-                            or else (not For_Gnatbind\n-                                       and then (Sw (2) = 'L'\n-                                         or else Sw (2) = 'A')))\n-               then\n-                  Start := 3;\n-\n-                  if Sw = \"-I-\" then\n-                     return;\n-                  end if;\n-\n-               elsif Sw'Length >= 4\n-                 and then (Sw (2 .. 3) = \"aL\"\n-                             or else\n-                           Sw (2 .. 3) = \"aO\"\n-                             or else\n-                           Sw (2 .. 3) = \"aI\"\n-                             or else\n-                           (For_Gnatbind and then Sw (2 .. 3) = \"A=\"))\n-               then\n-                  Start := 4;\n-\n-               elsif Including_RTS\n-                 and then Sw'Length >= 7\n-                 and then Sw (2 .. 6) = \"-RTS=\"\n-               then\n-                  Start := 7;\n-\n-               else\n-                  return;\n-               end if;\n-\n-               --  Because relative path arguments to --RTS= may be relative to\n-               --  the search directory prefix, those relative path arguments\n-               --  are converted only when they include directory information.\n-\n-               if not Is_Absolute_Path (Sw (Start .. Sw'Last)) then\n-                  if Parent'Length = 0 then\n-                     Do_Fail\n-                       (\"relative search path switches (\"\"\"\n-                        & Sw\n-                        & \"\"\") are not allowed\");\n-\n-                  elsif Including_RTS then\n-                     for J in Start .. Sw'Last loop\n-                        if Sw (J) = Directory_Separator then\n-                           Switch :=\n-                             new String'\n-                               (Sw (1 .. Start - 1) &\n-                                Parent &\n-                                Directory_Separator &\n-                                Sw (Start .. Sw'Last));\n-                           return;\n-                        end if;\n-                     end loop;\n-\n-                  else\n-                     Switch :=\n-                       new String'\n-                         (Sw (1 .. Start - 1) &\n-                          Parent &\n-                          Directory_Separator &\n-                          Sw (Start .. Sw'Last));\n-                  end if;\n-               end if;\n-\n-            elsif Including_Non_Switch then\n-               if not Is_Absolute_Path (Sw) then\n-                  if Parent'Length = 0 then\n-                     Do_Fail\n-                       (\"relative paths (\"\"\" & Sw & \"\"\") are not allowed\");\n-                  else\n-                     Switch := new String'(Parent & Directory_Separator & Sw);\n-                  end if;\n-               end if;\n-            end if;\n-         end;\n-      end if;\n-   end Ensure_Absolute_Path;\n-\n    -------------------\n    -- Unit_Index_Of --\n    -------------------"}, {"sha": "198e61aaab566606e27d17c1dbb3bf23f09ff757", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 44, "deletions": 43, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fe079c34eeafbc36a1620fbd9ab5aa974c6413/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fe079c34eeafbc36a1620fbd9ab5aa974c6413/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=a5fe079c34eeafbc36a1620fbd9ab5aa974c6413", "patch": "@@ -128,6 +128,20 @@ package Makeutl is\n    --  source files are still associated with the same units). Return the name\n    --  of the unit if everything is still valid. Return No_Name otherwise.\n \n+   procedure Ensure_Absolute_Path\n+     (Switch               : in out String_Access;\n+      Parent               : String;\n+      Do_Fail              : Fail_Proc;\n+      For_Gnatbind         : Boolean := False;\n+      Including_Non_Switch : Boolean := True;\n+      Including_RTS        : Boolean := False);\n+   --  Do nothing if Switch is an absolute path switch. If relative, fail if\n+   --  Parent is the empty string, otherwise prepend the path with Parent. This\n+   --  subprogram is only used when using project files. If For_Gnatbind is\n+   --  True, gnatbind switches that are not paths (-L, -A) are left unchaned.\n+   --  If Including_RTS is True, process also switches --RTS=. Do_Fail is\n+   --  called in case of error. Using Osint.Fail might be appropriate.\n+\n    function Is_Subunit (Source : Source_Id) return Boolean;\n    --  Return True if source is a subunit\n \n@@ -151,26 +165,6 @@ package Makeutl is\n    --  entered by a call to Prj.Ext.Add, so that in a project file, External\n    --  (\"name\") will return \"value\".\n \n-   procedure Verbose_Msg\n-     (N1                : Name_Id;\n-      S1                : String;\n-      N2                : Name_Id := No_Name;\n-      S2                : String  := \"\";\n-      Prefix            : String  := \"  -> \";\n-      Minimum_Verbosity : Opt.Verbosity_Level_Type := Opt.Low);\n-   procedure Verbose_Msg\n-     (N1                : File_Name_Type;\n-      S1                : String;\n-      N2                : File_Name_Type := No_File;\n-      S2                : String  := \"\";\n-      Prefix            : String  := \"  -> \";\n-      Minimum_Verbosity : Opt.Verbosity_Level_Type := Opt.Low);\n-   --  If the verbose flag (Verbose_Mode) is set and the verbosity level is at\n-   --  least equal to Minimum_Verbosity, then print Prefix to standard output\n-   --  followed by N1 and S1. If N2 /= No_Name then N2 is printed after S1. S2\n-   --  is printed last. Both N1 and N2 are printed in quotation marks. The two\n-   --  forms differ only in taking Name_Id or File_name_Type arguments.\n-\n    type Name_Ids is array (Positive range <>) of Name_Id;\n    No_Names : constant Name_Ids := (1 .. 0 => No_Name);\n    --  Name_Ids is used for list of language names in procedure Get_Directories\n@@ -231,26 +225,32 @@ package Makeutl is\n    --  of project Project, in project tree In_Tree, and in the projects that\n    --  it imports directly or indirectly, and returns the result.\n \n+   function Path_Or_File_Name (Path : Path_Name_Type) return String;\n+   --  Returns a file name if -df is used, otherwise return a path name\n+\n    function Unit_Index_Of (ALI_File : File_Name_Type) return Int;\n    --  Find the index of a unit in a source file. Return zero if the file is\n    --  not a multi-unit source file.\n \n-   procedure Ensure_Absolute_Path\n-     (Switch               : in out String_Access;\n-      Parent               : String;\n-      Do_Fail              : Fail_Proc;\n-      For_Gnatbind         : Boolean := False;\n-      Including_Non_Switch : Boolean := True;\n-      Including_RTS        : Boolean := False);\n-   --  Do nothing if Switch is an absolute path switch. If relative, fail if\n-   --  Parent is the empty string, otherwise prepend the path with Parent. This\n-   --  subprogram is only used when using project files. If For_Gnatbind is\n-   --  True, gnatbind switches that are not paths (-L, -A) are left unchaned.\n-   --  If Including_RTS is True, process also switches --RTS=. Do_Fail is\n-   --  called in case of error. Using Osint.Fail might be appropriate.\n-\n-   function Path_Or_File_Name (Path : Path_Name_Type) return String;\n-   --  Returns a file name if -df is used, otherwise return a path name\n+   procedure Verbose_Msg\n+     (N1                : Name_Id;\n+      S1                : String;\n+      N2                : Name_Id := No_Name;\n+      S2                : String  := \"\";\n+      Prefix            : String  := \"  -> \";\n+      Minimum_Verbosity : Opt.Verbosity_Level_Type := Opt.Low);\n+   procedure Verbose_Msg\n+     (N1                : File_Name_Type;\n+      S1                : String;\n+      N2                : File_Name_Type := No_File;\n+      S2                : String  := \"\";\n+      Prefix            : String  := \"  -> \";\n+      Minimum_Verbosity : Opt.Verbosity_Level_Type := Opt.Low);\n+   --  If the verbose flag (Verbose_Mode) is set and the verbosity level is at\n+   --  least equal to Minimum_Verbosity, then print Prefix to standard output\n+   --  followed by N1 and S1. If N2 /= No_Name then N2 is printed after S1. S2\n+   --  is printed last. Both N1 and N2 are printed in quotation marks. The two\n+   --  forms differ only in taking Name_Id or File_name_Type arguments.\n \n    -------------------------\n    -- Program termination --\n@@ -279,10 +279,11 @@ package Makeutl is\n          For_Lang    : Name_Id;\n          For_Builder : Boolean;\n          Has_Global_Compilation_Switches : Boolean) return Boolean;\n-      --  For_Builder is true if we have a builder switch\n-      --  This function should return True in case of success (the switch is\n-      --  valid), False otherwise. The error message will be displayed by\n+      --  For_Builder is true if we have a builder switch. This function\n+      --  should return True in case of success (the switch is valid),\n+      --  False otherwise. The error message will be displayed by\n       --  Compute_Builder_Switches itself.\n+      --\n       --  Has_Global_Compilation_Switches is True if the attribute\n       --  Global_Compilation_Switches is defined in the project.\n \n@@ -291,10 +292,10 @@ package Makeutl is\n       Root_Environment : in out Prj.Tree.Environment;\n       Main_Project     : Project_Id;\n       Only_For_Lang    : Name_Id := No_Name);\n-   --  Compute the builder switches and global compilation switches.\n-   --  Every time a switch is found in the project, it is passed to Add_Switch.\n-   --  You can provide a value for Only_For_Lang so that we only look for\n-   --  this language when parsing the global compilation switches.\n+   --  Compute the builder switches and global compilation switches. Every time\n+   --  a switch is found in the project, it is passed to Add_Switch. You can\n+   --  provide a value for Only_For_Lang so that we only look for this language\n+   --  when parsing the global compilation switches.\n \n    -----------------------\n    -- Project_Tree data --"}, {"sha": "524de4ce99ba5b498061ed43ca6fd8c93cd2776b", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fe079c34eeafbc36a1620fbd9ab5aa974c6413/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fe079c34eeafbc36a1620fbd9ab5aa974c6413/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=a5fe079c34eeafbc36a1620fbd9ab5aa974c6413", "patch": "@@ -530,7 +530,10 @@ package body Sem_Ch9 is\n \n                      --  Quantified expression restricted\n \n-                     elsif Kind = N_Quantified_Expression then\n+                     elsif Kind = N_Quantified_Expression\n+                       or else Nkind (Original_Node (N)) =\n+                                 N_Quantified_Expression\n+                     then\n                         if Lock_Free_Given then\n                            Error_Msg_N (\"quantified expression not allowed\",\n                                         N);\n@@ -552,7 +555,7 @@ package body Sem_Ch9 is\n                         Id        : constant Entity_Id := Entity (N);\n                         Comp_Decl : Node_Id;\n                         Comp_Id   : Entity_Id := Empty;\n-                        Comp_Size : Int;\n+                        Comp_Size : Int := 0;\n                         Comp_Type : Entity_Id;\n \n                      begin\n@@ -579,6 +582,10 @@ package body Sem_Ch9 is\n \n                               Layout_Type (Comp_Type);\n \n+                              --  Note that Known_Esize is used and not\n+                              --  Known_Static_Esize in order to capture the\n+                              --  errors properly at the instantiation point.\n+\n                               if Known_Esize (Comp_Type) then\n                                  Comp_Size := UI_To_Int (Esize (Comp_Type));\n \n@@ -587,7 +594,7 @@ package body Sem_Ch9 is\n                               --  (Value_Size) since it may have been set by an\n                               --  explicit representation clause.\n \n-                              else\n+                              elsif Known_RM_Size (Comp_Type) then\n                                  Comp_Size := UI_To_Int (RM_Size (Comp_Type));\n                               end if;\n "}]}