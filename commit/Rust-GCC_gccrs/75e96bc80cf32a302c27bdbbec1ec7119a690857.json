{"sha": "75e96bc80cf32a302c27bdbbec1ec7119a690857", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVlOTZiYzgwY2YzMmEzMDJjMjdiZGJiZWMxZWM3MTE5YTY5MDg1Nw==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2018-08-25T19:12:36Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-08-25T19:12:36Z"}, "message": "re PR tree-optimization/87059 (internal compiler error: in set_value_range, at tree-vrp.c:289)\n\n\tPR tree-optimization/87059\n\t* builtins.c (expand_builtin_strncmp): Convert MIN_EXPR operand\n\tto the same type as the other.\n\t* fold-const.c (fold_binary_loc): Assert expectation.\n\nFrom-SVN: r263855", "tree": {"sha": "5a6e123e085eed215bd3edb996c21d13da4f07d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a6e123e085eed215bd3edb996c21d13da4f07d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75e96bc80cf32a302c27bdbbec1ec7119a690857", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75e96bc80cf32a302c27bdbbec1ec7119a690857", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75e96bc80cf32a302c27bdbbec1ec7119a690857", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75e96bc80cf32a302c27bdbbec1ec7119a690857/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3d6fc627f6cb78ecf280622c05eed59e9150a5c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d6fc627f6cb78ecf280622c05eed59e9150a5c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d6fc627f6cb78ecf280622c05eed59e9150a5c7"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "b183818918e8d75ba793b8c7866707ea4fb3e657", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75e96bc80cf32a302c27bdbbec1ec7119a690857/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75e96bc80cf32a302c27bdbbec1ec7119a690857/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75e96bc80cf32a302c27bdbbec1ec7119a690857", "patch": "@@ -1,3 +1,10 @@\n+2018-08-25  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/87059\n+\t* builtins.c (expand_builtin_strncmp): Convert MIN_EXPR operand\n+\tto the same type as the other.\n+\t* fold-const.c (fold_binary_loc): Assert expectation.\n+\n 2018-08-25  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* config/darwin.c (machopic_legitimize_pic_address): Clean up"}, {"sha": "6a992bd939b87dcc5f576fc06a4a3d26df035319", "filename": "gcc/builtins.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75e96bc80cf32a302c27bdbbec1ec7119a690857/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75e96bc80cf32a302c27bdbbec1ec7119a690857/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=75e96bc80cf32a302c27bdbbec1ec7119a690857", "patch": "@@ -4759,7 +4759,10 @@ expand_builtin_strncmp (tree exp, ATTRIBUTE_UNUSED rtx target,\n   /* If we are not using the given length, we must incorporate it here.\n      The actual new length parameter will be MIN(len,arg3) in this case.  */\n   if (len != len3)\n-    len = fold_build2_loc (loc, MIN_EXPR, TREE_TYPE (len), len, len3);\n+    {\n+      len = fold_convert_loc (loc, sizetype, len);\n+      len = fold_build2_loc (loc, MIN_EXPR, TREE_TYPE (len), len, len3);\n+    }\n   rtx arg1_rtx = get_memory_rtx (arg1, len);\n   rtx arg2_rtx = get_memory_rtx (arg2, len);\n   rtx arg3_rtx = expand_normal (len);"}, {"sha": "1e44a2454adbc26fefef595da5f07deed6521959", "filename": "gcc/fold-const.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75e96bc80cf32a302c27bdbbec1ec7119a690857/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75e96bc80cf32a302c27bdbbec1ec7119a690857/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=75e96bc80cf32a302c27bdbbec1ec7119a690857", "patch": "@@ -9326,6 +9326,14 @@ fold_binary_loc (location_t loc, enum tree_code code, tree type,\n \n   if (kind == tcc_comparison || code == MIN_EXPR || code == MAX_EXPR)\n     {\n+      if (code == MIN_EXPR || code == MAX_EXPR)\n+\t{\n+\t  tree typ0 = TREE_TYPE (arg0);\n+\t  tree typ1 = TREE_TYPE (arg1);\n+\t  gcc_assert (TYPE_SIGN (typ0) == TYPE_SIGN (typ1)\n+\t\t      && TYPE_MODE (typ0) == TYPE_MODE (typ1));\n+\t}\n+\n       STRIP_SIGN_NOPS (arg0);\n       STRIP_SIGN_NOPS (arg1);\n     }"}]}