{"sha": "5d721887efa6c7d49ab98344c3faf1d17ce2eb25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ3MjE4ODdlZmE2YzdkNDlhYjk4MzQ0YzNmYWYxZDE3Y2UyZWIyNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-09-17T13:28:04Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-09-17T13:28:04Z"}, "message": "re PR tree-optimization/87328 (ICE in do_rpo_vn, at tree-ssa-sccvn.c:6566)\n\n2018-09-17  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/87328\n\t* tree-ssa-sccvn.c (process_bb): Remove assertion about not\n\tvisiting unexecutable backedges when not iterating.\n\t(do_rpo_vn): Mark all edges not executable even when not\n\titerating.\n\n\t* gcc.dg/torture/pr87328.c: New testcase.\n\nFrom-SVN: r264369", "tree": {"sha": "c6cdf993113dba0c74a51be88bd1acd526502e1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6cdf993113dba0c74a51be88bd1acd526502e1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d721887efa6c7d49ab98344c3faf1d17ce2eb25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d721887efa6c7d49ab98344c3faf1d17ce2eb25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d721887efa6c7d49ab98344c3faf1d17ce2eb25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d721887efa6c7d49ab98344c3faf1d17ce2eb25/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "80c6d1f4463b5a848451513d788d38bb366dbefb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80c6d1f4463b5a848451513d788d38bb366dbefb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80c6d1f4463b5a848451513d788d38bb366dbefb"}], "stats": {"total": 46, "additions": 39, "deletions": 7}, "files": [{"sha": "585056e5db83ba704e3156ef67961500553cd4dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d721887efa6c7d49ab98344c3faf1d17ce2eb25/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d721887efa6c7d49ab98344c3faf1d17ce2eb25/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d721887efa6c7d49ab98344c3faf1d17ce2eb25", "patch": "@@ -1,3 +1,11 @@\n+2018-09-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87328\n+\t* tree-ssa-sccvn.c (process_bb): Remove assertion about not\n+\tvisiting unexecutable backedges when not iterating.\n+\t(do_rpo_vn): Mark all edges not executable even when not\n+\titerating.\n+\n 2018-09-17  Martin Jambor  <mjambor@suse.cz>\n \n \tPR c/63886"}, {"sha": "5cce863e58af3eeb8c85eaf0b74dad033c5199e4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d721887efa6c7d49ab98344c3faf1d17ce2eb25/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d721887efa6c7d49ab98344c3faf1d17ce2eb25/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5d721887efa6c7d49ab98344c3faf1d17ce2eb25", "patch": "@@ -1,3 +1,8 @@\n+2018-09-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87328\n+\t* gcc.dg/torture/pr87328.c: New testcase.\n+\n 2018-09-17  Martin Jambor  <mjambor@suse.cz>\n \n \tPR c/63886"}, {"sha": "50e1cdfbb56df292ea06047ee77d1898f90b129b", "filename": "gcc/testsuite/gcc.dg/torture/pr87328.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d721887efa6c7d49ab98344c3faf1d17ce2eb25/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87328.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d721887efa6c7d49ab98344c3faf1d17ce2eb25/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87328.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87328.c?ref=5d721887efa6c7d49ab98344c3faf1d17ce2eb25", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-fno-tree-ccp -fno-tree-forwprop\" } */\n+\n+void\n+tp (void)\n+{\n+  int qt;\n+\n+  qt = 0;\n+  if (qt != 0)\n+    {\n+      if (0)\n+\t{\n+h5:\n+\t  qt = 0;\n+\t  while (qt < 1)\n+\t    {\n+\t    }\n+\t}\n+\n+      ++qt;\n+    }\n+\n+  goto h5;\n+}"}, {"sha": "a49e7f6745138521f94ddd24f795036f20c1d9a1", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d721887efa6c7d49ab98344c3faf1d17ce2eb25/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d721887efa6c7d49ab98344c3faf1d17ce2eb25/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=5d721887efa6c7d49ab98344c3faf1d17ce2eb25", "patch": "@@ -5978,7 +5978,6 @@ process_bb (rpo_elim &avail, basic_block bb,\n \t\tfprintf (dump_file,\n \t\t\t \"marking outgoing edge %d -> %d executable\\n\",\n \t\t\t e->src->index, e->dest->index);\n-\t      gcc_checking_assert (iterate || !(e->flags & EDGE_DFS_BACK));\n \t      e->flags |= EDGE_EXECUTABLE;\n \t      e->dest->flags |= BB_EXECUTABLE;\n \t    }\n@@ -6125,7 +6124,6 @@ process_bb (rpo_elim &avail, basic_block bb,\n \t\t\t \"marking known outgoing %sedge %d -> %d executable\\n\",\n \t\t\t e->flags & EDGE_DFS_BACK ? \"back-\" : \"\",\n \t\t\t e->src->index, e->dest->index);\n-\t      gcc_checking_assert (iterate || !(e->flags & EDGE_DFS_BACK));\n \t      e->flags |= EDGE_EXECUTABLE;\n \t      e->dest->flags |= BB_EXECUTABLE;\n \t    }\n@@ -6148,7 +6146,6 @@ process_bb (rpo_elim &avail, basic_block bb,\n \t\t    fprintf (dump_file,\n \t\t\t     \"marking outgoing edge %d -> %d executable\\n\",\n \t\t\t     e->src->index, e->dest->index);\n-\t\t  gcc_checking_assert (iterate || !(e->flags & EDGE_DFS_BACK));\n \t\t  e->flags |= EDGE_EXECUTABLE;\n \t\t  e->dest->flags |= BB_EXECUTABLE;\n \t\t}\n@@ -6390,10 +6387,7 @@ do_rpo_vn (function *fn, edge entry, bitmap exit_bbs,\n \t{\n \t  if (e->flags & EDGE_DFS_BACK)\n \t    has_backedges = true;\n-\t  if (! iterate && (e->flags & EDGE_DFS_BACK))\n-\t    e->flags |= EDGE_EXECUTABLE;\n-\t  else\n-\t    e->flags &= ~EDGE_EXECUTABLE;\n+\t  e->flags &= ~EDGE_EXECUTABLE;\n \t  if (e == entry)\n \t    continue;\n \t  if (bb_to_rpo[e->src->index] > i)"}]}