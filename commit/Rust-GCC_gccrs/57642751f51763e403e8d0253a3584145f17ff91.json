{"sha": "57642751f51763e403e8d0253a3584145f17ff91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc2NDI3NTFmNTE3NjNlNDAzZThkMDI1M2EzNTg0MTQ1ZjE3ZmY5MQ==", "commit": {"author": {"name": "Daniel Jacobowitz", "email": "dan@codesourcery.com", "date": "2005-02-23T23:11:08Z"}, "committer": {"name": "Daniel Jacobowitz", "email": "drow@gcc.gnu.org", "date": "2005-02-23T23:11:08Z"}, "message": "tm.texi (LINK_LIBGCC_SPECIAL): Remove.\n\n\t* doc/tm.texi (LINK_LIBGCC_SPECIAL): Remove.\n\t(LINK_LIBGCC_SPECIAL_1): Don't mention it.\n\t* gcc.c: Don't check for LINK_LIBGCC_SPECIAL.\n\t* system.h: Poison LINK_LIBGCC_SPECIAL.\n\nFrom-SVN: r95476", "tree": {"sha": "72ce531348fcea60af182a71ee702bee514eccb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72ce531348fcea60af182a71ee702bee514eccb7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57642751f51763e403e8d0253a3584145f17ff91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57642751f51763e403e8d0253a3584145f17ff91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57642751f51763e403e8d0253a3584145f17ff91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57642751f51763e403e8d0253a3584145f17ff91/comments", "author": null, "committer": null, "parents": [{"sha": "27f0dff4a2ddec42768683c8a79dbff0bcf6dec5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27f0dff4a2ddec42768683c8a79dbff0bcf6dec5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27f0dff4a2ddec42768683c8a79dbff0bcf6dec5"}], "stats": {"total": 31, "additions": 12, "deletions": 19}, "files": [{"sha": "a7fb0dfed53ad4a88efeb1aa7cc6a90cebd58613", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57642751f51763e403e8d0253a3584145f17ff91/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57642751f51763e403e8d0253a3584145f17ff91/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=57642751f51763e403e8d0253a3584145f17ff91", "patch": "@@ -1,3 +1,10 @@\n+2005-02-23  Daniel Jacobowitz  <dan@codesourcery.com>\n+\n+\t* doc/tm.texi (LINK_LIBGCC_SPECIAL): Remove.\n+\t(LINK_LIBGCC_SPECIAL_1): Don't mention it.\n+\t* gcc.c: Don't check for LINK_LIBGCC_SPECIAL.\n+\t* system.h: Poison LINK_LIBGCC_SPECIAL.\n+\n 2005-02-23  James E Wilson  <wilson@specifixinc.com>\n \n \t* gengtype.c (note_insn_name): Make 1 element larger."}, {"sha": "b6102e50d55b1bffba127e406d868e8f8c87d73b", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57642751f51763e403e8d0253a3584145f17ff91/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57642751f51763e403e8d0253a3584145f17ff91/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=57642751f51763e403e8d0253a3584145f17ff91", "patch": "@@ -412,20 +412,10 @@ while the @file{config/rs6000/eabiaix.h} target file defines\n @end smallexample\n @end defmac\n \n-@defmac LINK_LIBGCC_SPECIAL\n-Define this macro if the driver program should find the library\n-@file{libgcc.a} itself and should not pass @option{-L} options to the\n-linker.  If you do not define this macro, the driver program will pass\n-the argument @option{-lgcc} to tell the linker to do the search and will\n-pass @option{-L} options to it.\n-@end defmac\n-\n @defmac LINK_LIBGCC_SPECIAL_1\n Define this macro if the driver program should find the library\n @file{libgcc.a}.  If you do not define this macro, the driver program will pass\n the argument @option{-lgcc} to tell the linker to do the search.\n-This macro is similar to @code{LINK_LIBGCC_SPECIAL}, except that it does\n-not affect @option{-L} options.\n @end defmac\n \n @defmac LINK_GCC_C_SEQUENCE_SPEC"}, {"sha": "1a9cc5005d6f95d6f016745ccf9c9f526a264207", "filename": "gcc/gcc.c", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57642751f51763e403e8d0253a3584145f17ff91/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57642751f51763e403e8d0253a3584145f17ff91/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=57642751f51763e403e8d0253a3584145f17ff91", "patch": "@@ -620,7 +620,7 @@ proper position among the other output files.  */\n #ifndef LIBGCC_SPEC\n #if defined(REAL_LIBGCC_SPEC)\n #define LIBGCC_SPEC REAL_LIBGCC_SPEC\n-#elif defined(LINK_LIBGCC_SPECIAL) || defined(LINK_LIBGCC_SPECIAL_1)\n+#elif defined(LINK_LIBGCC_SPECIAL_1)\n /* Have gcc do the search for libgcc.a.  */\n #define LIBGCC_SPEC \"libgcc.a%s\"\n #else\n@@ -706,13 +706,8 @@ proper position among the other output files.  */\n #endif\n \n #ifndef LINK_LIBGCC_SPEC\n-# ifdef LINK_LIBGCC_SPECIAL\n-/* Don't generate -L options for startfile prefix list.  */\n-#  define LINK_LIBGCC_SPEC \"\"\n-# else\n-/* Do generate them.  */\n-#  define LINK_LIBGCC_SPEC \"%D\"\n-# endif\n+/* Generate -L options for startfile prefix list.  */\n+# define LINK_LIBGCC_SPEC \"%D\"\n #endif\n \n #ifndef STARTFILE_PREFIX_SPEC"}, {"sha": "d45e56afb337c4ccbfd2504a93dafbf80068cae7", "filename": "gcc/system.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57642751f51763e403e8d0253a3584145f17ff91/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57642751f51763e403e8d0253a3584145f17ff91/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=57642751f51763e403e8d0253a3584145f17ff91", "patch": "@@ -661,7 +661,8 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n \tDBX_OUTPUT_GCC_MARKER DBX_FINISH_SYMBOL SDB_GENERATE_FAKE\t   \\\n \tNON_SAVING_SETJMP TARGET_LATE_RTL_PROLOGUE_EPILOGUE\t\t   \\\n \tCASE_DROPS_THROUGH TARGET_BELL TARGET_BS TARGET_CR TARGET_DIGIT0   \\\n-        TARGET_ESC TARGET_FF TARGET_NEWLINE TARGET_TAB TARGET_VT\n+        TARGET_ESC TARGET_FF TARGET_NEWLINE TARGET_TAB TARGET_VT\t   \\\n+        LINK_LIBGCC_SPECIAL\n \n /* Hooks that are no longer used.  */\n  #pragma GCC poison LANG_HOOKS_FUNCTION_MARK LANG_HOOKS_FUNCTION_FREE\t\\"}]}