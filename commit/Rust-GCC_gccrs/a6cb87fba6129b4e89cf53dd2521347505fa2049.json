{"sha": "a6cb87fba6129b4e89cf53dd2521347505fa2049", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZjYjg3ZmJhNjEyOWI0ZTg5Y2Y1M2RkMjUyMTM0NzUwNWZhMjA0OQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2004-10-25T08:33:04Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2004-10-25T08:33:04Z"}, "message": "frv.md (movdi, movdf): Handle wide-constant splits with wider-than-32-bit HOST_WIDE_INTs.\n\n* config/frv/frv.md (movdi, movdf): Handle wide-constant splits\nwith wider-than-32-bit HOST_WIDE_INTs.\n\nFrom-SVN: r89524", "tree": {"sha": "d01f3d769e49a06b8bafb82fbb89dce099777cab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d01f3d769e49a06b8bafb82fbb89dce099777cab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6cb87fba6129b4e89cf53dd2521347505fa2049", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6cb87fba6129b4e89cf53dd2521347505fa2049", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6cb87fba6129b4e89cf53dd2521347505fa2049", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6cb87fba6129b4e89cf53dd2521347505fa2049/comments", "author": null, "committer": null, "parents": [{"sha": "4de3d01180ffbc1ec467dabcb07df950f57ddd94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4de3d01180ffbc1ec467dabcb07df950f57ddd94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4de3d01180ffbc1ec467dabcb07df950f57ddd94"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "e216c9ac83c9d521bdff777d2227d7a4320b4d6f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6cb87fba6129b4e89cf53dd2521347505fa2049/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6cb87fba6129b4e89cf53dd2521347505fa2049/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a6cb87fba6129b4e89cf53dd2521347505fa2049", "patch": "@@ -1,3 +1,8 @@\n+2004-10-25  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* config/frv/frv.md (movdi, movdf): Handle wide-constant splits\n+\twith wider-than-32-bit HOST_WIDE_INTs.\n+\n 2004-10-25  David Billinghurst <David.Billinghurst@riotinto.com>\n \n \t* config/mips/mips.c(mips_output_filename): Remove unused "}, {"sha": "21eef863b6570e24f464fc549990aeb0b7a4acb8", "filename": "gcc/config/frv/frv.md", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6cb87fba6129b4e89cf53dd2521347505fa2049/gcc%2Fconfig%2Ffrv%2Ffrv.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6cb87fba6129b4e89cf53dd2521347505fa2049/gcc%2Fconfig%2Ffrv%2Ffrv.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.md?ref=a6cb87fba6129b4e89cf53dd2521347505fa2049", "patch": "@@ -1833,15 +1833,26 @@\n \t(match_operand:DI 1 \"const_int_operand\" \"\"))]\n   \"reload_completed\"\n   [(set (match_dup 2) (match_dup 4))\n-   (set (match_dup 3) (match_dup 1))]\n+   (set (match_dup 3) (match_dup 5))]\n   \"\n {\n   rtx op0 = operands[0];\n   rtx op1 = operands[1];\n \n   operands[2] = gen_highpart (SImode, op0);\n   operands[3] = gen_lowpart (SImode, op0);\n-  operands[4] = GEN_INT ((INTVAL (op1) < 0) ? -1 : 0);\n+  if (HOST_BITS_PER_WIDE_INT <= 32)\n+    {\n+      operands[4] = GEN_INT ((INTVAL (op1) < 0) ? -1 : 0);\n+      operands[5] = op1;\n+    }\n+  else\n+    {\n+      operands[4] = GEN_INT ((((unsigned HOST_WIDE_INT)INTVAL (op1) >> 16)\n+\t\t\t      >> 16) ^ ((unsigned HOST_WIDE_INT)1 << 31)\n+\t\t\t     - ((unsigned HOST_WIDE_INT)1 << 31));\n+      operands[5] = GEN_INT (trunc_int_for_mode (INTVAL (op1), SImode));\n+    }\n }\")\n \n (define_split\n@@ -2031,15 +2042,26 @@\n \t(match_operand:DF 1 \"const_int_operand\" \"\"))]\n   \"reload_completed\"\n   [(set (match_dup 2) (match_dup 4))\n-   (set (match_dup 3) (match_dup 1))]\n+   (set (match_dup 3) (match_dup 5))]\n   \"\n {\n   rtx op0 = operands[0];\n   rtx op1 = operands[1];\n \n   operands[2] = gen_highpart (SImode, op0);\n   operands[3] = gen_lowpart (SImode, op0);\n-  operands[4] = GEN_INT ((INTVAL (op1) < 0) ? -1 : 0);\n+  if (HOST_BITS_PER_WIDE_INT <= 32)\n+    {\n+      operands[4] = GEN_INT ((INTVAL (op1) < 0) ? -1 : 0);\n+      operands[5] = op1;\n+    }\n+  else\n+    {\n+      operands[4] = GEN_INT ((((unsigned HOST_WIDE_INT)INTVAL (op1) >> 16)\n+\t\t\t      >> 16) ^ ((unsigned HOST_WIDE_INT)1 << 31)\n+\t\t\t     - ((unsigned HOST_WIDE_INT)1 << 31));\n+      operands[5] = GEN_INT (trunc_int_for_mode (INTVAL (op1), SImode));\n+    }\n }\")\n \n (define_split"}]}