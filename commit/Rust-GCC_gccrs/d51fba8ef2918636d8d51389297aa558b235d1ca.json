{"sha": "d51fba8ef2918636d8d51389297aa558b235d1ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDUxZmJhOGVmMjkxODYzNmQ4ZDUxMzg5Mjk3YWE1NThiMjM1ZDFjYQ==", "commit": {"author": {"name": "Dwarakanath Rajagopal", "email": "dwarak.rajagopal@amd.com", "date": "2007-11-12T20:41:14Z"}, "committer": {"name": "Dwarakanath Rajagopal", "email": "dwarak@gcc.gnu.org", "date": "2007-11-12T20:41:14Z"}, "message": "i386.md (sse5_setcc<mode>): Use <ssemodefsuffix> to get the appropriate suffix for the coms* instruction.\n\n2007-11-12  Dwarakanath Rajagopal  <dwarak.rajagopal@amd.com>\n            Michael Meissner  <michael.meissner@amd.com>\n\n        * config/i386/i386.md (sse5_setcc<mode>): Use <ssemodefsuffix>\n        to get the appropriate suffix for the coms* instruction.\n        (sse5_pcmov_<mode>): Restrict operands of pcmov\n        for scalar case to be only xmm registers and not memory.\n\n        * config/i386/sse.md (sse5_pcmov_<mode>): Correct the operand\n        constraints to follow the mnemonics for the pcmov instruction\n\n\n\nCo-Authored-By: Michael Meissner <michael.meissner@amd.com>\n\nFrom-SVN: r130120", "tree": {"sha": "ca35a43fc303a0f7cf9ff7e3e0df391c017f8171", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca35a43fc303a0f7cf9ff7e3e0df391c017f8171"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d51fba8ef2918636d8d51389297aa558b235d1ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d51fba8ef2918636d8d51389297aa558b235d1ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d51fba8ef2918636d8d51389297aa558b235d1ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d51fba8ef2918636d8d51389297aa558b235d1ca/comments", "author": null, "committer": null, "parents": [{"sha": "fd0d4c1fbba96c6ddfe7377557ab8b184551cf3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd0d4c1fbba96c6ddfe7377557ab8b184551cf3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd0d4c1fbba96c6ddfe7377557ab8b184551cf3a"}], "stats": {"total": 38, "additions": 26, "deletions": 12}, "files": [{"sha": "a2da77585fff5feb42d9300d1db47aa5215b6e56", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d51fba8ef2918636d8d51389297aa558b235d1ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d51fba8ef2918636d8d51389297aa558b235d1ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d51fba8ef2918636d8d51389297aa558b235d1ca", "patch": "@@ -1,3 +1,14 @@\n+2007-11-12  Dwarakanath Rajagopal  <dwarak.rajagopal@amd.com>\n+\t    Michael Meissner  <michael.meissner@amd.com>\n+\n+\t* config/i386/i386.md (sse5_setcc<mode>): Use <ssemodefsuffix> to\n+\tget the appropriate suffix for the coms* instruction.\n+\t(sse5_pcmov_<mode>): Restrict operands of pcmov\n+\tfor scalar case to be only xmm registers and not memory.\n+\n+\t* config/i386/sse.md (sse5_pcmov_<mode>): Correct the operand\n+\tconstraints to follow the mnemonics for the pcmov instruction\t\n+\n 2007-11-12  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \tPR target/34042"}, {"sha": "4580afc4fa164c1a8a8d06a0c2f21cc0a9854b1e", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d51fba8ef2918636d8d51389297aa558b235d1ca/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d51fba8ef2918636d8d51389297aa558b235d1ca/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=d51fba8ef2918636d8d51389297aa558b235d1ca", "patch": "@@ -14112,7 +14112,7 @@\n \t  [(match_operand:MODEF 2 \"register_operand\" \"x\")\n \t   (match_operand:MODEF 3 \"nonimmediate_operand\" \"xm\")]))]\n   \"TARGET_SSE5\"\n-  \"com%Y1ss\\t{%3, %2, %0|%0, %2, %3}\"\n+  \"com%Y1s<ssemodefsuffix>\\t{%3, %2, %0|%0, %2, %3}\"\n   [(set_attr \"type\" \"sse4arg\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n@@ -19738,13 +19738,16 @@\n   [(set_attr \"type\" \"fcmov\")\n    (set_attr \"mode\" \"XF\")])\n \n+;; All moves in SSE5 pcmov instructions are 128 bits and hence we restrict\n+;; the scalar versions to have only XMM registers as operands.\n+\n ;; SSE5 conditional move\n (define_insn \"*sse5_pcmov_<mode>\"\n-  [(set (match_operand:MODEF 0 \"register_operand\" \"=x,x,x,x\")\n+  [(set (match_operand:MODEF 0 \"register_operand\" \"=x,x\")\n \t(if_then_else:MODEF\n-\t  (match_operand:MODEF 1 \"nonimmediate_operand\" \"xm,x,0,0\")\n-\t  (match_operand:MODEF 2 \"nonimmediate_operand\" \"0,0,x,xm\")\n-\t  (match_operand:MODEF 3 \"vector_move_operand\" \"x,xm,xm,x\")))]\n+\t  (match_operand:MODEF 1 \"register_operand\" \"x,0\")\n+\t  (match_operand:MODEF 2 \"register_operand\" \"0,x\")\n+\t  (match_operand:MODEF 3 \"register_operand\" \"x,x\")))]\n   \"TARGET_SSE5 && ix86_sse5_valid_op_p (operands, insn, 4, true, 1)\"\n   \"pcmov\\t{%1, %3, %2, %0|%0, %2, %3, %1}\"\n   [(set_attr \"type\" \"sse4arg\")])"}, {"sha": "9cf55554861ddc616b4849a2f4180f1ae2af85a9", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d51fba8ef2918636d8d51389297aa558b235d1ca/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d51fba8ef2918636d8d51389297aa558b235d1ca/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=d51fba8ef2918636d8d51389297aa558b235d1ca", "patch": "@@ -7894,15 +7894,15 @@\n (define_insn \"sse5_pcmov_<mode>\"\n   [(set (match_operand:SSEMODE 0 \"register_operand\" \"=x,x,x,x,x,x\")\n \t(if_then_else:SSEMODE\n-\t  (match_operand:SSEMODE 3 \"nonimmediate_operand\" \"0,0,xm,xm,0,0\")\n-\t  (match_operand:SSEMODE 1 \"vector_move_operand\" \"x,xm,0,x,C,x\")\n-\t  (match_operand:SSEMODE 2 \"vector_move_operand\" \"xm,x,x,0,x,C\")))]\n+\t  (match_operand:SSEMODE 3 \"nonimmediate_operand\" \"0,0,xm,x,0,0\")\n+\t  (match_operand:SSEMODE 1 \"vector_move_operand\" \"x,xm,0,0,C,x\")\n+\t  (match_operand:SSEMODE 2 \"vector_move_operand\" \"xm,x,x,xm,x,C\")))]\n   \"TARGET_SSE5 && ix86_sse5_valid_op_p (operands, insn, 4, true, 1)\"\n   \"@\n-   pcmov\\t{%3, %2, %1, %0|%3, %1, %2, %0}\n-   pcmov\\t{%3, %2, %1, %0|%3, %1, %2, %0}\n-   pcmov\\t{%3, %2, %1, %0|%3, %1, %2, %0}\n-   pcmov\\t{%3, %2, %1, %0|%3, %1, %2, %0}\n+   pcmov\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n+   pcmov\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n+   pcmov\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n+   pcmov\\t{%3, %2, %1, %0|%0, %1, %2, %3}\n    andps\\t{%2, %0|%0, %2}\n    andnps\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sse4arg\")])"}]}