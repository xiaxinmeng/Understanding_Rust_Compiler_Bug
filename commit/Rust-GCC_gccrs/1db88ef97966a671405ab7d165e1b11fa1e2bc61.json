{"sha": "1db88ef97966a671405ab7d165e1b11fa1e2bc61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRiODhlZjk3OTY2YTY3MTQwNWFiN2QxNjVlMWIxMWZhMWUyYmM2MQ==", "commit": {"author": {"name": "Franz Sirl", "email": "Franz.Sirl-kernel@lauterbach.com", "date": "2000-09-28T22:36:49Z"}, "committer": {"name": "Franz Sirl", "email": "sirl@gcc.gnu.org", "date": "2000-09-28T22:36:49Z"}, "message": "doloop.c (doloop_modify): Prevent delete_insn() from deleting too much.\n\n\n\t2000-09-28  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n\t* doloop.c (doloop_modify): Prevent delete_insn() from\n\tdeleting too much.  Prefer loop->top over loop->start as\n\ttarget for the new JUMP insn.\n\t(doloop_valid_p): Ignore loop with exit_count != 0.\n\nFrom-SVN: r36661", "tree": {"sha": "5f38599624ea540c74f397af158e6f3f917cde0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f38599624ea540c74f397af158e6f3f917cde0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1db88ef97966a671405ab7d165e1b11fa1e2bc61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1db88ef97966a671405ab7d165e1b11fa1e2bc61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1db88ef97966a671405ab7d165e1b11fa1e2bc61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1db88ef97966a671405ab7d165e1b11fa1e2bc61/comments", "author": {"login": "jinkama-san", "id": 1462162, "node_id": "MDQ6VXNlcjE0NjIxNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1462162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinkama-san", "html_url": "https://github.com/jinkama-san", "followers_url": "https://api.github.com/users/jinkama-san/followers", "following_url": "https://api.github.com/users/jinkama-san/following{/other_user}", "gists_url": "https://api.github.com/users/jinkama-san/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinkama-san/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinkama-san/subscriptions", "organizations_url": "https://api.github.com/users/jinkama-san/orgs", "repos_url": "https://api.github.com/users/jinkama-san/repos", "events_url": "https://api.github.com/users/jinkama-san/events{/privacy}", "received_events_url": "https://api.github.com/users/jinkama-san/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2eeb109b26058137a84566db3af8f8c883efa06c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2eeb109b26058137a84566db3af8f8c883efa06c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2eeb109b26058137a84566db3af8f8c883efa06c"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "fa0d22d80a770aeb85d88fdddfe437ee6984a233", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1db88ef97966a671405ab7d165e1b11fa1e2bc61/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1db88ef97966a671405ab7d165e1b11fa1e2bc61/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1db88ef97966a671405ab7d165e1b11fa1e2bc61", "patch": "@@ -1,3 +1,9 @@\n+2000-09-28  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n+\t* doloop.c (doloop_modify): Prevent delete_insn() from\n+\tdeleting too much.  Prefer loop->top over loop->start as\n+\ttarget for the new JUMP insn.\n+\t(doloop_valid_p): Ignore loop with exit_count != 0.\n+\n 2000-09-28  Philipp Thomas  <pthomas@suse.de>\n \n \t* invoke.texi (i386 Options): Add athlon to table of possible\n@@ -2674,6 +2680,16 @@ Sat Sep  2 13:58:23 2000  Marek Michalkiewicz <marekm@linux.org.pl>\n \t* config/avr/avr.md (\"*negsi2\"): substitute %@ to __zero_reg__\n \t* config/avr/libgcc.S: Lost part of the previous patch.\n \n+2000-08-31  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n+\n+\t* rs6000/rs6000.h (NO_DOLLAR_IN_LABEL, DOLLARS_IN_IDENTIFIERS,\n+\tENCODE_SECTION_INFO, ASM_OUTPUT_SPECIAL_POOL_ENTRY_P): Move from\n+\there...\n+\t* rs6000/aix.h: ...to here.\n+\t* rs6000/linux.h (ASM_APP_ON, ASM_APP_OFF): Define to Linux-style.\n+\t* rs6000/rs6000.c (rs6000_select_section): Handle CONSTRUCTOR.\n+\t(rs6000_unique_section): Likewise.\n+\n 2000-08-31  J. David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* gthr-dce.h (__gthread_objc_mutex_allocate): Create a pthread_mutex_t"}, {"sha": "191cdf0cf3728e188919c4cfce733a90dd3b8bcb", "filename": "gcc/doloop.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1db88ef97966a671405ab7d165e1b11fa1e2bc61/gcc%2Fdoloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1db88ef97966a671405ab7d165e1b11fa1e2bc61/gcc%2Fdoloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoloop.c?ref=1db88ef97966a671405ab7d165e1b11fa1e2bc61", "patch": "@@ -281,7 +281,7 @@ doloop_valid_p (loop, jump_insn)\n      statement within a loop will generate multiple loop exits.\n      Another example of a loop that currently generates multiple exit\n      targets is for (i = 0; i < (foo ? 8 : 4); i++) { }.  */\n-  if (loop_info->has_multiple_exit_targets)\n+  if (loop_info->has_multiple_exit_targets || loop->exit_count)\n     {\n       if (loop_dump_stream)\n \tfprintf (loop_dump_stream,\n@@ -415,14 +415,16 @@ doloop_modify (loop, iterations, iterations_max,\n       fputs (\" iterations).\", loop_dump_stream);\n     }\n \n+  /* Emit the label that will delimit the top of the loop.\n+     This has to be done before the delete_insn call below, to prevent\n+     delete_insn from deleting too much.  */\n+  emit_label_after (start_label, loop->top ? loop->top : loop->start);\n+  LABEL_NUSES (start_label)++;\n+\n   /* Discard original jump to continue loop.  The original compare\n      result may still be live, so it cannot be discarded explicitly.  */\n   delete_insn (jump_insn);\n \n-  /* Emit the label that will delimit the start of the loop.  */\n-  emit_label_after (start_label, loop->start);\n-  LABEL_NUSES (start_label)++;\n-\n   counter_reg = XEXP (condition, 0);\n   if (GET_CODE (counter_reg) == PLUS)\n     counter_reg = XEXP (counter_reg, 0);"}]}