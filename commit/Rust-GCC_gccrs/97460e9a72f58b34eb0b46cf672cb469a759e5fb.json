{"sha": "97460e9a72f58b34eb0b46cf672cb469a759e5fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc0NjBlOWE3MmY1OGIzNGViMGI0NmNmNjcyY2I0NjlhNzU5ZTVmYg==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-06-19T19:54:04Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-06-19T19:54:04Z"}, "message": "Makefile.am (extract_symvers): Revert accidental change.\n\n\t* testsuite/Makefile.am (extract_symvers): Revert accidental\n\tchange.\n\t* testsuite/Makefile.in: Regenerate.\n\n\t* configure.in: Pass MULTISUBDIR to testsuite/Makefile.\n\t* configure: Regenerated.\n\nFrom-SVN: r68220", "tree": {"sha": "996e0a8415f4cd124596200a195ee01d95f79c5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/996e0a8415f4cd124596200a195ee01d95f79c5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97460e9a72f58b34eb0b46cf672cb469a759e5fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97460e9a72f58b34eb0b46cf672cb469a759e5fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97460e9a72f58b34eb0b46cf672cb469a759e5fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97460e9a72f58b34eb0b46cf672cb469a759e5fb/comments", "author": null, "committer": null, "parents": [{"sha": "d3ea6201dac9ffd2da0c28330a01d11c96220087", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3ea6201dac9ffd2da0c28330a01d11c96220087", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3ea6201dac9ffd2da0c28330a01d11c96220087"}], "stats": {"total": 42, "additions": 33, "deletions": 9}, "files": [{"sha": "f159c44c9ef1876d6b6ab484b150d2e9d5c53204", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97460e9a72f58b34eb0b46cf672cb469a759e5fb/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97460e9a72f58b34eb0b46cf672cb469a759e5fb/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=97460e9a72f58b34eb0b46cf672cb469a759e5fb", "patch": "@@ -1,3 +1,12 @@\n+2003-06-19  Andreas Jaeger  <aj@suse.de>\n+\n+\t* testsuite/Makefile.am (extract_symvers): Revert accidental\n+\tchange.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n+\t* configure.in: Pass MULTISUBDIR to testsuite/Makefile.\n+\t* configure: Regenerated.\n+\n 2003-06-19  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/std/std_sstream.h (_M_sync): Make non virtual.\n@@ -9,7 +18,7 @@\n \t(report_performance): New.\n \t(start_counters): New.\n \t(stop_counters): New.\n-\t(clear_counters): New.\t\n+\t(clear_counters): New.\n \t* testsuite/performance/allocator.cc: Instrument.\n \t* testsuite/performance/cout_insert_int.cc: Same.\n \t* testsuite/performance/complex_norm.cc: Same.\n@@ -19,11 +28,11 @@\n \t* testsuite/performance/map_create_fill.cc: Same.\n \t* testsuite/performance/ofstream_insert_float.cc: Same.\n \t* testsuite/performance/ofstream_insert_int.cc: Same.\n-\t* testsuite/performance/string_append.cc: Convert.\t\n+\t* testsuite/performance/string_append.cc: Convert.\n \t* scripts/check_performance: New.\n \t* testsuite/Makefile.am (check-performance): New.\n \t(CLEANFILES): Add.\n-\t\n+\n 2003-06-18  Paolo Carlini  <pcarlini@unitus.it>\n             Benjamin Kosnik  <bkoz@redhat.com>\n "}, {"sha": "311519195309c33b2d6a7c6d61e761a55a39f40e", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97460e9a72f58b34eb0b46cf672cb469a759e5fb/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97460e9a72f58b34eb0b46cf672cb469a759e5fb/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=97460e9a72f58b34eb0b46cf672cb469a759e5fb", "patch": "@@ -24367,6 +24367,11 @@ test -z \"$CONFIG_HEADERS\" || echo timestamp > stamp-h\n \t grep '^MULTISUBDIR =' Makefile >> libsupc++/Makefile\n \t ;;\n      esac\n+     case $CONFIG_FILES in\n+       *testsuite/Makefile*)\n+\t grep '^MULTISUBDIR =' Makefile >> testsuite/Makefile\n+\t ;;\n+     esac\n    fi\n  fi\n  chmod +x scripts/check_survey"}, {"sha": "b838a5032564a44ddfd19ba5da02c6705b7a0a06", "filename": "libstdc++-v3/configure.in", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97460e9a72f58b34eb0b46cf672cb469a759e5fb/libstdc%2B%2B-v3%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97460e9a72f58b34eb0b46cf672cb469a759e5fb/libstdc%2B%2B-v3%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.in?ref=97460e9a72f58b34eb0b46cf672cb469a759e5fb", "patch": "@@ -477,10 +477,10 @@ fi\n AC_SUBST(LIBSUPCXX_PICFLAGS)\n \n # Generate the various Makefiles, include files, and scripts.\n-# NB: Multilibs need MULTISUBDIR defined correctly in src/Makefile.am\n-# and libsupc++/Makefile.am so that multilib installs will end up\n-# installed in the correct place. To work around this not being passed\n-# down from config-ml.in -> top_srcdir/Makefile.am ->\n+# NB: Multilibs need MULTISUBDIR defined correctly in src/Makefile.am,\n+# libsupc++/Makefile.am and testsuite/Makefile.am so that multilib installs\n+# will end up installed in the correct place. To work around this not being \n+# passed # down from config-ml.in -> top_srcdir/Makefile.am ->\n # top_srcdir/{src,libsupc++}/Makefile.am, manually append it here.\n AC_OUTPUT(Makefile \\\n include/Makefile src/Makefile \\\n@@ -506,6 +506,11 @@ po/Makefile testsuite/Makefile scripts/check_survey scripts/testsuite_flags,\n \t grep '^MULTISUBDIR =' Makefile >> libsupc++/Makefile\n \t ;;\n      esac\n+     case $CONFIG_FILES in\n+       *testsuite/Makefile*)\n+\t grep '^MULTISUBDIR =' Makefile >> testsuite/Makefile\n+\t ;;\n+     esac\n    fi\n  fi\n  chmod +x scripts/check_survey\n@@ -547,6 +552,11 @@ dnl      *libsupc++/Makefile*)\n dnl        grep '^MULTISUBDIR =' Makefile >> libsupc++/Makefile\n dnl        ;;\n dnl    esac\n+dnl    case $CONFIG_FILES in\n+dnl      *testsuite/Makefile*)\n+dnl        grep '^MULTISUBDIR =' Makefile >> testsuite/Makefile\n+dnl        ;;\n+dnl    esac\n dnl  fi\n dnl  chmod +x scripts/check_survey\n dnl  chmod +x scripts/testsuite_flags"}, {"sha": "06705b5712092083d7194cafca9ca7874399b64a", "filename": "libstdc++-v3/testsuite/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97460e9a72f58b34eb0b46cf672cb469a759e5fb/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97460e9a72f58b34eb0b46cf672cb469a759e5fb/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am?ref=97460e9a72f58b34eb0b46cf672cb469a759e5fb", "patch": "@@ -87,7 +87,7 @@ check-local: check-abi\n \n baseline_dir = @baseline_dir@\n baseline_file = ${baseline_dir}/baseline_symbols.txt\n-extract_symvers = @glibcpp_srcdir@/config/abi/extract_symvers\n+extract_symvers = @glibcpp_srcdir@/scripts/extract_symvers\n \n current_symbols.txt: ${extract_symvers} ../src/.libs/libstdc++.so\n \t  -@(${extract_symvers} ../src/.libs/libstdc++.so current_symbols.txt)"}, {"sha": "2850829326dd4189d8c9efeee6c5d152ddc86c6b", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97460e9a72f58b34eb0b46cf672cb469a759e5fb/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97460e9a72f58b34eb0b46cf672cb469a759e5fb/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=97460e9a72f58b34eb0b46cf672cb469a759e5fb", "patch": "@@ -181,7 +181,7 @@ abi_check_SOURCES = abi_check.cc\n \n baseline_dir = @baseline_dir@\n baseline_file = ${baseline_dir}/baseline_symbols.txt\n-extract_symvers = @glibcpp_srcdir@/config/abi/extract_symvers\n+extract_symvers = @glibcpp_srcdir@/scripts/extract_symvers\n \n # These two special 'check-script' rules use the bash script\n # 'check_survey' to do testing. This script is not as portable as the"}]}