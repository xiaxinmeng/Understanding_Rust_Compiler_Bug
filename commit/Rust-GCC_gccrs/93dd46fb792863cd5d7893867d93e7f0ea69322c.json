{"sha": "93dd46fb792863cd5d7893867d93e7f0ea69322c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNkZDQ2ZmI3OTI4NjNjZDVkNzg5Mzg2N2Q5M2U3ZjBlYTY5MzIyYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-08T05:28:13Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-08T05:28:13Z"}, "message": "re PR c++/48003 (Regression in Template Constants from 4.5.2)\n\n\tPR c++/48003\n\t* pt.c (convert_nontype_argument): Fix -fpermissive allowing\n\tinteger overflow.\n\t* semantics.c (potential_constant_expression_1): Check TREE_OVERFLOW.\n\nFrom-SVN: r170771", "tree": {"sha": "eed58ea0402d2c32facb43dbede2512affbfe906", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eed58ea0402d2c32facb43dbede2512affbfe906"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93dd46fb792863cd5d7893867d93e7f0ea69322c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93dd46fb792863cd5d7893867d93e7f0ea69322c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93dd46fb792863cd5d7893867d93e7f0ea69322c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93dd46fb792863cd5d7893867d93e7f0ea69322c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8152661be6564d7369d88e32dded29641183b248", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8152661be6564d7369d88e32dded29641183b248", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8152661be6564d7369d88e32dded29641183b248"}], "stats": {"total": 70, "additions": 58, "deletions": 12}, "files": [{"sha": "f18ce9cc2157036fa233f26f72f1df0a844810e5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dd46fb792863cd5d7893867d93e7f0ea69322c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dd46fb792863cd5d7893867d93e7f0ea69322c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=93dd46fb792863cd5d7893867d93e7f0ea69322c", "patch": "@@ -1,5 +1,10 @@\n 2011-03-07  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/48003\n+\t* pt.c (convert_nontype_argument): Fix -fpermissive allowing\n+\tinteger overflow.\n+\t* semantics.c (potential_constant_expression_1): Check TREE_OVERFLOW.\n+\n \tPR c++/48015\n \t* init.c (constant_value_1): Always require init to be TREE_CONSTANT.\n "}, {"sha": "076224c46df64d4b29b2bee5be876e39007969ec", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dd46fb792863cd5d7893867d93e7f0ea69322c/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dd46fb792863cd5d7893867d93e7f0ea69322c/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=93dd46fb792863cd5d7893867d93e7f0ea69322c", "patch": "@@ -5402,11 +5402,19 @@ convert_nontype_argument (tree type, tree expr, tsubst_flags_t complain)\n \t{\n \t  if (complain & tf_error)\n \t    {\n-\t      error (\"%qE is not a valid template argument for type %qT \"\n-\t\t     \"because it is a non-constant expression\", expr, type);\n-\t      cxx_constant_value (expr);\n+\t      int errs = errorcount, warns = warningcount;\n+\t      expr = cxx_constant_value (expr);\n+\t      if (errorcount > errs || warningcount > warns)\n+\t\tinform (EXPR_LOC_OR_HERE (expr),\n+\t\t\t\"in template argument for type %qT \", type);\n+\t      if (expr == error_mark_node)\n+\t\treturn NULL_TREE;\n+\t      /* else cxx_constant_value complained but gave us\n+\t\t a real constant, so go ahead.  */\n+\t      gcc_assert (TREE_CODE (expr) == INTEGER_CST);\n \t    }\n-\t  return NULL_TREE;\n+\t  else\n+\t    return NULL_TREE;\n \t}\n     }\n   /* [temp.arg.nontype]/5, bullet 2"}, {"sha": "a0f48c0ed4559fceeecf2c8b9cf2e7590212b337", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dd46fb792863cd5d7893867d93e7f0ea69322c/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dd46fb792863cd5d7893867d93e7f0ea69322c/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=93dd46fb792863cd5d7893867d93e7f0ea69322c", "patch": "@@ -7275,7 +7275,20 @@ potential_constant_expression_1 (tree t, bool want_rval, tsubst_flags_t flags)\n       return false;\n     }\n   if (CONSTANT_CLASS_P (t))\n-    return true;\n+    {\n+      if (TREE_OVERFLOW (t))\n+\t{\n+\t  if (flags & tf_error)\n+\t    {\n+\t      permerror (EXPR_LOC_OR_HERE (t),\n+\t\t\t \"overflow in constant expression\");\n+\t      if (flag_permissive)\n+\t\treturn true;\n+\t    }\n+\t  return false;\n+\t}\n+      return true;\n+    }\n \n   switch (TREE_CODE (t))\n     {"}, {"sha": "bdf3ccac07081ca9408a3936719742ab568e12f7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dd46fb792863cd5d7893867d93e7f0ea69322c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dd46fb792863cd5d7893867d93e7f0ea69322c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=93dd46fb792863cd5d7893867d93e7f0ea69322c", "patch": "@@ -1,5 +1,11 @@\n 2011-03-07  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/template/nontype20.C: New.\n+\t* g++.dg/init/member1.C: Adjust expected errors.\n+\t* g++.dg/parse/constant4.C: Likewise.\n+\t* g++.dg/template/qualified-id3.C: Likewise.\n+\t* g++.old-deja/g++.pt/crash10.C: Likewise.\n+\n \t* g++.dg/cpp0x/regress/non-const1.C: New.\n \n 2011-03-07  Jakub Jelinek  <jakub@redhat.com>"}, {"sha": "88f9b3134659380af0cacfdfc0a646c6a98d4cda", "filename": "gcc/testsuite/g++.dg/init/member1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dd46fb792863cd5d7893867d93e7f0ea69322c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fmember1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dd46fb792863cd5d7893867d93e7f0ea69322c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fmember1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fmember1.C?ref=93dd46fb792863cd5d7893867d93e7f0ea69322c", "patch": "@@ -12,7 +12,7 @@ template<typename T> struct C\n {\n   static const int i = A<T>::i;  // { dg-error \"incomplete\" }\n   static const int j = i;\n-  B<j> b;  // { dg-error \"not a valid template arg\" }\n+  B<j> b;\n };\n \n C<int> c;"}, {"sha": "a1be5dd02602bab854e24faf79b8bd37f2cacdd5", "filename": "gcc/testsuite/g++.dg/parse/constant4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dd46fb792863cd5d7893867d93e7f0ea69322c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fconstant4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dd46fb792863cd5d7893867d93e7f0ea69322c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fconstant4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fconstant4.C?ref=93dd46fb792863cd5d7893867d93e7f0ea69322c", "patch": "@@ -18,7 +18,7 @@ void Foo ()\n   \n   static const unsigned J = X<T>::J; // { dg-message \"not initialized with a constant expression\" }\n   \n-  Y<J> j; // { dg-error \"constant\" \"\" }\n+  Y<J> j; // { dg-error \"constant|template argument\" \"\" }\n }\n \n struct A "}, {"sha": "e4aba322771abfe916595541ba0e70be3324eaf8", "filename": "gcc/testsuite/g++.dg/template/nontype20.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dd46fb792863cd5d7893867d93e7f0ea69322c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dd46fb792863cd5d7893867d93e7f0ea69322c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype20.C?ref=93dd46fb792863cd5d7893867d93e7f0ea69322c", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/48003\n+// { dg-options \"-fpermissive -w\" }\n+// Test that we allow integer overflow in constant exprs with -fpermissive\n+\n+template<int N>\n+struct test\n+{\n+  typedef test<N - 1> prior;\n+};\n+\n+test<-2147483647-1> f;"}, {"sha": "c769a529cdc28d26987a3aec8fcda1b366aa029b", "filename": "gcc/testsuite/g++.dg/template/qualified-id3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dd46fb792863cd5d7893867d93e7f0ea69322c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualified-id3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dd46fb792863cd5d7893867d93e7f0ea69322c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualified-id3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualified-id3.C?ref=93dd46fb792863cd5d7893867d93e7f0ea69322c", "patch": "@@ -3,7 +3,7 @@\n template <const int N> struct A { };\n template <class T> struct B {\n   static const int c; // { dg-message \"not initialized with a constant expression\" }\n-  typedef A<B<T>::c> C;\t\t// { dg-error \"constant expression\" }\n+  typedef A<B<T>::c> C;\t// { dg-error \"constant expression|template argument\" }\n };\n template <class T> const int B<T>::c = sizeof (T);\n "}, {"sha": "86f386150d9bf432f04fe5d54122c9e158c6210b", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash10.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dd46fb792863cd5d7893867d93e7f0ea69322c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dd46fb792863cd5d7893867d93e7f0ea69322c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash10.C?ref=93dd46fb792863cd5d7893867d93e7f0ea69322c", "patch": "@@ -5,6 +5,7 @@ class GCD {\n public:\n   enum { val = (N == 0) ? M : GCD<N, M % N>::val }; // { dg-warning \"division\" \"division\" }\n // { dg-error \"constant expression\" \"valid\" { target *-*-* } 6 }\n+// { dg-message \"template argument\" \"valid\" { target *-*-* } 6 }\n };\n \n int main() {"}, {"sha": "44c87bece9fd1cc497a046d12e579ebdacdf64b5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dd46fb792863cd5d7893867d93e7f0ea69322c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dd46fb792863cd5d7893867d93e7f0ea69322c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=93dd46fb792863cd5d7893867d93e7f0ea69322c", "patch": "@@ -1,3 +1,8 @@\n+2011-03-07  Jason Merrill  <jason@redhat.com>\n+\n+\t* testsuite/20_util/ratio/cons/cons_overflow_neg.cc: Adjust\n+\texpected errors.\n+\n 2011-03-07  Benjamin Kosnik  <bkoz@redhat.com>\n             Matthias Klose  <doko@ubuntu.com>\n \t    Jonathan Wakely  <redi@gcc.gnu.org>"}, {"sha": "ca91e46c84d806113f52ee09488431571f6fb246", "filename": "libstdc++-v3/testsuite/20_util/ratio/cons/cons_overflow_neg.cc", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dd46fb792863cd5d7893867d93e7f0ea69322c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcons%2Fcons_overflow_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dd46fb792863cd5d7893867d93e7f0ea69322c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcons%2Fcons_overflow_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcons%2Fcons_overflow_neg.cc?ref=93dd46fb792863cd5d7893867d93e7f0ea69322c", "patch": "@@ -51,7 +51,4 @@ test04()\n // { dg-error \"instantiated from here\" \"\" { target *-*-* } 46 }\n // { dg-error \"denominator cannot be zero\" \"\" { target *-*-* } 155 }\n // { dg-error \"out of range\" \"\" { target *-*-* } 156 }\n-// { dg-error \"non-constant expression\" \"\" { target *-*-* } 61 }\n-// { dg-error \"overflow in constant expression\" \"\" { target *-*-* } 61 }\n-// { dg-error \"not a member\" \"\" { target *-*-* } 164 }\n-// { dg-error \"not a valid template argument\" \"\" { target *-*-* } 166 }\n+// { dg-error \"overflow in constant expression\" \"\" { target *-*-* } 74 }"}]}