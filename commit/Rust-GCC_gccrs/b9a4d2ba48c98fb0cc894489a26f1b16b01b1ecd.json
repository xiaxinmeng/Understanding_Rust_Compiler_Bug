{"sha": "b9a4d2ba48c98fb0cc894489a26f1b16b01b1ecd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjlhNGQyYmE0OGM5OGZiMGNjODk0NDg5YTI2ZjFiMTZiMDFiMWVjZA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2018-01-08T18:17:51Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-01-08T18:17:51Z"}, "message": "re PR rtl-optimization/81308 (ICE in calc_dfs_tree, at dominance.c:458)\n\n\tPR rtl-optimization/81308\n\t* recog.c (split_all_insns): Conditionally cleanup the CFG after\n\tsplitting insns.\n\nFrom-SVN: r256348", "tree": {"sha": "e3d9c22e09768b34b2466cb3429650095e32b702", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3d9c22e09768b34b2466cb3429650095e32b702"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9a4d2ba48c98fb0cc894489a26f1b16b01b1ecd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9a4d2ba48c98fb0cc894489a26f1b16b01b1ecd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9a4d2ba48c98fb0cc894489a26f1b16b01b1ecd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9a4d2ba48c98fb0cc894489a26f1b16b01b1ecd/comments", "author": null, "committer": null, "parents": [{"sha": "7f047768f22a132ed8959c6ecaf774ead733af79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f047768f22a132ed8959c6ecaf774ead733af79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f047768f22a132ed8959c6ecaf774ead733af79"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "762aea53b178f70f56a0f1eaab4c6f6158c3bece", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9a4d2ba48c98fb0cc894489a26f1b16b01b1ecd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9a4d2ba48c98fb0cc894489a26f1b16b01b1ecd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b9a4d2ba48c98fb0cc894489a26f1b16b01b1ecd", "patch": "@@ -1,3 +1,9 @@\n+2017-01-08  Jeff Law  <law@redhat.com>\n+\n+\tPR rtl-optimization/81308\n+\t* recog.c (split_all_insns): Conditionally cleanup the CFG after\n+\tsplitting insns.\n+\n 2018-01-08  Vidya Praveen  <vidyapraveen@arm.com>\n \n \tPR target/83663 - Revert r255946"}, {"sha": "cc28b71ba48fee503d2595f141f918d6ef4e897c", "filename": "gcc/recog.c", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9a4d2ba48c98fb0cc894489a26f1b16b01b1ecd/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9a4d2ba48c98fb0cc894489a26f1b16b01b1ecd/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=b9a4d2ba48c98fb0cc894489a26f1b16b01b1ecd", "patch": "@@ -2931,6 +2931,7 @@ void\n split_all_insns (void)\n {\n   bool changed;\n+  bool need_cfg_cleanup = false;\n   basic_block bb;\n \n   auto_sbitmap blocks (last_basic_block_for_fn (cfun));\n@@ -2949,6 +2950,18 @@ split_all_insns (void)\n \t     CODE_LABELS and short-out basic blocks.  */\n \t  next = NEXT_INSN (insn);\n \t  finish = (insn == BB_END (bb));\n+\n+\t  /* If INSN has a REG_EH_REGION note and we split INSN, the\n+\t     resulting split may not have/need REG_EH_REGION notes.\n+\n+\t     If that happens and INSN was the last reference to the\n+\t     given EH region, then the EH region will become unreachable.\n+\t     We can not leave the unreachable blocks in the CFG as that\n+\t     will trigger a checking failure.\n+\n+\t     So track if INSN has a REG_EH_REGION note.  If so and we\n+\t     split INSN, then trigger a CFG cleanup.  */\n+\t  rtx note = find_reg_note (insn, REG_EH_REGION, NULL_RTX);\n \t  if (INSN_P (insn))\n \t    {\n \t      rtx set = single_set (insn);\n@@ -2965,13 +2978,17 @@ split_all_insns (void)\n \t\t     nops then anyways.  */\n \t\t  if (reload_completed)\n \t\t      delete_insn_and_edges (insn);\n+\t\t  if (note)\n+\t\t    need_cfg_cleanup = true;\n \t\t}\n \t      else\n \t\t{\n \t\t  if (split_insn (insn))\n \t\t    {\n \t\t      bitmap_set_bit (blocks, bb->index);\n \t\t      changed = true;\n+\t\t      if (note)\n+\t\t\tneed_cfg_cleanup = true;\n \t\t    }\n \t\t}\n \t    }\n@@ -2980,7 +2997,16 @@ split_all_insns (void)\n \n   default_rtl_profile ();\n   if (changed)\n-    find_many_sub_basic_blocks (blocks);\n+    {\n+      find_many_sub_basic_blocks (blocks);\n+\n+      /* Splitting could drop an REG_EH_REGION if it potentially\n+\t trapped in its original form, but does not in its split\n+\t form.  Consider a FLOAT_TRUNCATE which splits into a memory\n+\t store/load pair and -fnon-call-exceptions.  */\n+      if (need_cfg_cleanup)\n+\tcleanup_cfg (0);\n+    }\n \n   checking_verify_flow_info ();\n }"}]}