{"sha": "ccbdc0d46e8d2ed948a5b3daa174632ad55847a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NiZGMwZDQ2ZThkMmVkOTQ4YTViM2RhYTE3NDYzMmFkNTU4NDdhNQ==", "commit": {"author": {"name": "Adrian Straetling", "email": "straetling@de.ibm.com", "date": "2005-07-13T19:28:29Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2005-07-13T19:28:29Z"}, "message": "s390.md: (\"cmpstrsi\", \"*cmpstr<mode>\"): New pattern.\n\n2006-07-13  Adrian Strae\ufffdtling  <straetling@de.ibm.com>\n\n\t* config/s390/s390.md: (\"cmpstrsi\", \"*cmpstr<mode>\"): New\n\tpattern.\n\t(\"strlen<mode>\", \"*strlen<mode>\"): Use hard reg 0 in SImode.\n\nFrom-SVN: r101989", "tree": {"sha": "5321cc0291dcd8f2ee5b3e14ef0d94d484d17adf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5321cc0291dcd8f2ee5b3e14ef0d94d484d17adf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccbdc0d46e8d2ed948a5b3daa174632ad55847a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccbdc0d46e8d2ed948a5b3daa174632ad55847a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccbdc0d46e8d2ed948a5b3daa174632ad55847a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccbdc0d46e8d2ed948a5b3daa174632ad55847a5/comments", "author": null, "committer": null, "parents": [{"sha": "34ab7c53299710b55b05fbe9e9ac611614583bd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34ab7c53299710b55b05fbe9e9ac611614583bd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34ab7c53299710b55b05fbe9e9ac611614583bd7"}], "stats": {"total": 58, "additions": 55, "deletions": 3}, "files": [{"sha": "1491f6ecd07730dcb76be4fb927a5f8ee8ea9ea5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccbdc0d46e8d2ed948a5b3daa174632ad55847a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccbdc0d46e8d2ed948a5b3daa174632ad55847a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ccbdc0d46e8d2ed948a5b3daa174632ad55847a5", "patch": "@@ -1,3 +1,9 @@\n+2006-07-13  Adrian Strae\ufffdtling  <straetling@de.ibm.com>\n+\n+\t* config/s390/s390.md: (\"cmpstrsi\", \"*cmpstr<mode>\"): New\n+\tpattern.\n+\t(\"strlen<mode>\", \"*strlen<mode>\"): Use hard reg 0 in SImode.\n+\n 2005-07-13  Eric Christopher  <echristo@redhat.com>\n \n \t* config/mips/mips.c (mips_canonicalize_comparison): New."}, {"sha": "6aaed96e97080f199e0a9dc15bbfbbb1ed05639f", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 49, "deletions": 3, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccbdc0d46e8d2ed948a5b3daa174632ad55847a5/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccbdc0d46e8d2ed948a5b3daa174632ad55847a5/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=ccbdc0d46e8d2ed948a5b3daa174632ad55847a5", "patch": "@@ -1761,12 +1761,12 @@\n ;\n \n (define_expand \"strlen<mode>\"\n-  [(set (reg:QI 0) (match_operand:QI 2 \"immediate_operand\" \"\"))\n+  [(set (reg:SI 0) (match_operand:SI 2 \"immediate_operand\" \"\"))\n    (parallel\n     [(set (match_dup 4)\n \t  (unspec:P [(const_int 0)\n \t\t      (match_operand:BLK 1 \"memory_operand\" \"\")\n-\t\t      (reg:QI 0)\n+\t\t      (reg:SI 0)\n \t\t      (match_operand 3 \"immediate_operand\" \"\")] UNSPEC_SRST))\n      (clobber (scratch:P))\n      (clobber (reg:CC CC_REGNUM))])\n@@ -1786,7 +1786,7 @@\n   [(set (match_operand:P 0 \"register_operand\" \"=a\")\n \t(unspec:P [(match_operand:P 2 \"general_operand\" \"0\")\n \t\t    (mem:BLK (match_operand:P 3 \"register_operand\" \"1\"))\n-\t\t    (reg:QI 0)\n+\t\t    (reg:SI 0)\n \t\t    (match_operand 4 \"immediate_operand\" \"\")] UNSPEC_SRST))\n    (clobber (match_scratch:P 1 \"=a\"))\n    (clobber (reg:CC CC_REGNUM))]\n@@ -1795,6 +1795,52 @@\n   [(set_attr \"length\" \"8\")\n    (set_attr \"type\" \"vs\")])\n \n+;\n+; cmpstrM instruction pattern(s).\n+;\n+\n+(define_expand \"cmpstrsi\"\n+  [(set (reg:SI 0) (const_int 0))\n+   (parallel\n+    [(clobber (match_operand 3 \"\" \"\"))\n+     (clobber (match_dup 4))\n+     (set (reg:CCU CC_REGNUM)\n+\t  (compare:CCU (match_operand:BLK 1 \"memory_operand\" \"\")\n+\t \t       (match_operand:BLK 2 \"memory_operand\" \"\")))\n+     (use (reg:SI 0))])\n+   (parallel\n+    [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n+\t  (unspec:SI [(reg:CCU CC_REGNUM)] UNSPEC_CMPINT))\n+     (clobber (reg:CC CC_REGNUM))])]\n+  \"\"\n+{\n+  /* As the result of CMPINT is inverted compared to what we need,\n+     we have to swap the operands.  */\n+  rtx op1 = operands[2];\n+  rtx op2 = operands[1];\n+  rtx addr1 = gen_reg_rtx (Pmode);\n+  rtx addr2 = gen_reg_rtx (Pmode);\n+\n+  emit_move_insn (addr1, force_operand (XEXP (op1, 0), NULL_RTX));\n+  emit_move_insn (addr2, force_operand (XEXP (op2, 0), NULL_RTX));\n+  operands[1] = replace_equiv_address_nv (op1, addr1);\n+  operands[2] = replace_equiv_address_nv (op2, addr2);\n+  operands[3] = addr1;\n+  operands[4] = addr2;\n+})\n+\n+(define_insn \"*cmpstr<mode>\"\n+  [(clobber (match_operand:P 0 \"register_operand\" \"=d\"))\n+   (clobber (match_operand:P 1 \"register_operand\" \"=d\"))\n+   (set (reg:CCU CC_REGNUM)\n+\t(compare:CCU (mem:BLK (match_operand:P 2 \"register_operand\" \"0\"))\n+\t\t     (mem:BLK (match_operand:P 3 \"register_operand\" \"1\"))))\n+   (use (reg:SI 0))]\n+  \"\"\n+  \"clst\\t%0,%1\\;jo\\t.-4\"\n+  [(set_attr \"length\" \"8\")\n+   (set_attr \"type\" \"vs\")])\n+ \n ;\n ; movmemM instruction pattern(s).\n ;"}]}