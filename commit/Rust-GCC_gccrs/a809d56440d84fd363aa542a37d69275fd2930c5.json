{"sha": "a809d56440d84fd363aa542a37d69275fd2930c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTgwOWQ1NjQ0MGQ4NGZkMzYzYWE1NDJhMzdkNjkyNzVmZDI5MzBjNQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-01-20T08:41:22Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-01-20T08:41:22Z"}, "message": "Fix --enable-gather-detailed-mem-stats\n\n2017-01-20  Martin Liska  <mliska@suse.cz>\n\n\t* read-rtl-function.c (function_reader::create_function): Use\n\tbuild_decl instread of build_decl_stat.\n\nFrom-SVN: r244686", "tree": {"sha": "d54338632fa1ff66d7033b008245425c7d49a8e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d54338632fa1ff66d7033b008245425c7d49a8e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a809d56440d84fd363aa542a37d69275fd2930c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a809d56440d84fd363aa542a37d69275fd2930c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a809d56440d84fd363aa542a37d69275fd2930c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a809d56440d84fd363aa542a37d69275fd2930c5/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8ea3e7c3cd8187d6332759c42fc448e5ed1e774", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8ea3e7c3cd8187d6332759c42fc448e5ed1e774", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8ea3e7c3cd8187d6332759c42fc448e5ed1e774"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "d38e2a5a2492832a380589846428044734f67dbd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a809d56440d84fd363aa542a37d69275fd2930c5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a809d56440d84fd363aa542a37d69275fd2930c5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a809d56440d84fd363aa542a37d69275fd2930c5", "patch": "@@ -1,3 +1,8 @@\n+2017-01-20  Martin Liska  <mliska@suse.cz>\n+\n+\t* read-rtl-function.c (function_reader::create_function): Use\n+\tbuild_decl instread of build_decl_stat.\n+\n 2017-01-20  Andrew Senkevich  <andrew.senkevich@intel.com>\n \n \t* config/i386/avx512bwintrin.h: Add k-mask registers shift intrinsics."}, {"sha": "9ef9610dde9be0db05a76f4b778e5d93a47c5075", "filename": "gcc/read-rtl-function.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a809d56440d84fd363aa542a37d69275fd2930c5/gcc%2Fread-rtl-function.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a809d56440d84fd363aa542a37d69275fd2930c5/gcc%2Fread-rtl-function.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fread-rtl-function.c?ref=a809d56440d84fd363aa542a37d69275fd2930c5", "patch": "@@ -481,8 +481,7 @@ function_reader::create_function ()\n   tree return_type = int_type;\n   tree arg_types[3] = {int_type, int_type, int_type};\n   tree fn_type = build_function_type_array (return_type, 3, arg_types);\n-  tree fndecl = build_decl_stat (UNKNOWN_LOCATION, FUNCTION_DECL, fn_name,\n-\t\t\t\t fn_type);\n+  tree fndecl = build_decl (UNKNOWN_LOCATION, FUNCTION_DECL, fn_name, fn_type);\n   tree resdecl = build_decl (UNKNOWN_LOCATION, RESULT_DECL, NULL_TREE,\n \t\t\t     return_type);\n   DECL_ARTIFICIAL (resdecl) = 1;"}]}