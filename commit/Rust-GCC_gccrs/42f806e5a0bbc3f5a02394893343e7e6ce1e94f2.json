{"sha": "42f806e5a0bbc3f5a02394893343e7e6ce1e94f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJmODA2ZTVhMGJiYzNmNWEwMjM5NDg5MzM0M2U3ZTZjZTFlOTRmMg==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2004-05-27T07:41:50Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2004-05-27T07:41:50Z"}, "message": "re PR target/14478 ([3.3 only] rs6000 geu/ltu patterns generate incorrect code)\n\n\tPR target/14478\n\t* config/rs6000/rs6000.c (reg_or_neg_short_operand): Don't allow zero.\n\nFrom-SVN: r82315", "tree": {"sha": "dab3ea8a505686bcd5d39b18a2d6c0ead1478474", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dab3ea8a505686bcd5d39b18a2d6c0ead1478474"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42f806e5a0bbc3f5a02394893343e7e6ce1e94f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42f806e5a0bbc3f5a02394893343e7e6ce1e94f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42f806e5a0bbc3f5a02394893343e7e6ce1e94f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42f806e5a0bbc3f5a02394893343e7e6ce1e94f2/comments", "author": null, "committer": null, "parents": [{"sha": "c5d2de6b4c976dc152c8618ab3e8e1319018dc30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5d2de6b4c976dc152c8618ab3e8e1319018dc30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5d2de6b4c976dc152c8618ab3e8e1319018dc30"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "353c25cfbbbdf880acebf74dfcb5278f9b94ead3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f806e5a0bbc3f5a02394893343e7e6ce1e94f2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f806e5a0bbc3f5a02394893343e7e6ce1e94f2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42f806e5a0bbc3f5a02394893343e7e6ce1e94f2", "patch": "@@ -1,3 +1,8 @@\n+2004-05-27  Alan Modra  <amodra@bigpond.net.au>\n+\n+\tPR target/14478\n+\t* config/rs6000/rs6000.c (reg_or_neg_short_operand): Don't allow zero.\n+\n 2004-05-27  Josef Zlomek  <zlomekj@suse.cz>\n \n \tPR middle-end/14084"}, {"sha": "4b23dccb717916ca3ff2063bed0fb0451b03a09d", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f806e5a0bbc3f5a02394893343e7e6ce1e94f2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f806e5a0bbc3f5a02394893343e7e6ce1e94f2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=42f806e5a0bbc3f5a02394893343e7e6ce1e94f2", "patch": "@@ -1407,13 +1407,16 @@ reg_or_short_operand (rtx op, enum machine_mode mode)\n }\n \n /* Similar, except check if the negation of the constant would be\n-   valid for a D-field.  */\n+   valid for a D-field.  Don't allow a constant zero, since all the\n+   patterns that call this predicate use \"addic r1,r2,-constant\" on\n+   a constant value to set a carry when r2 is greater or equal to\n+   \"constant\".  That doesn't work for zero.  */\n \n int\n reg_or_neg_short_operand (rtx op, enum machine_mode mode)\n {\n   if (GET_CODE (op) == CONST_INT)\n-    return CONST_OK_FOR_LETTER_P (INTVAL (op), 'P');\n+    return CONST_OK_FOR_LETTER_P (INTVAL (op), 'P') && INTVAL (op) != 0;\n \n   return gpc_reg_operand (op, mode);\n }"}]}