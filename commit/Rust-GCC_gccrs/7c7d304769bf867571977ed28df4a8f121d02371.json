{"sha": "7c7d304769bf867571977ed28df4a8f121d02371", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M3ZDMwNDc2OWJmODY3NTcxOTc3ZWQyOGRmNGE4ZjEyMWQwMjM3MQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2008-05-17T13:32:23Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-05-17T13:32:23Z"}, "message": "tree-inline.c (setup_one_parameter): Remove dead code.\n\n\t* tree-inline.c (setup_one_parameter): Remove dead code.\n\nFrom-SVN: r135470", "tree": {"sha": "7a8e7592972b93307e3bcabafd8169266c6ab929", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a8e7592972b93307e3bcabafd8169266c6ab929"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c7d304769bf867571977ed28df4a8f121d02371", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c7d304769bf867571977ed28df4a8f121d02371", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c7d304769bf867571977ed28df4a8f121d02371", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c7d304769bf867571977ed28df4a8f121d02371/comments", "author": null, "committer": null, "parents": [{"sha": "1e17e15ae532b05910a7fc0c599a01839dd1b032", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e17e15ae532b05910a7fc0c599a01839dd1b032", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e17e15ae532b05910a7fc0c599a01839dd1b032"}], "stats": {"total": 22, "additions": 6, "deletions": 16}, "files": [{"sha": "633a336c3d81268156c669937b61aba17ad66106", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c7d304769bf867571977ed28df4a8f121d02371/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c7d304769bf867571977ed28df4a8f121d02371/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c7d304769bf867571977ed28df4a8f121d02371", "patch": "@@ -1,3 +1,7 @@\n+2008-05-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree-inline.c (setup_one_parameter): Remove dead code.\n+\n 2008-05-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* fold-const.c (fold_unary) <CASE_CONVERT>: Fold the cast into"}, {"sha": "fb4f765a200e5d447bc1321529bff103e9d61131", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c7d304769bf867571977ed28df4a8f121d02371/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c7d304769bf867571977ed28df4a8f121d02371/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=7c7d304769bf867571977ed28df4a8f121d02371", "patch": "@@ -1440,7 +1440,6 @@ setup_one_parameter (copy_body_data *id, tree p, tree value, tree fn,\n {\n   tree init_stmt;\n   tree var;\n-  tree var_sub;\n   tree rhs = value;\n   tree def = (gimple_in_ssa_p (cfun)\n \t      ? gimple_default_def (id->src_cfun, p) : NULL);\n@@ -1496,23 +1495,10 @@ setup_one_parameter (copy_body_data *id, tree p, tree value, tree fn,\n       add_referenced_var (var);\n     }\n \n-  /* See if the frontend wants to pass this by invisible reference.  If\n-     so, our new VAR_DECL will have REFERENCE_TYPE, and we need to\n-     replace uses of the PARM_DECL with dereferences.  */\n-  if (TREE_TYPE (var) != TREE_TYPE (p)\n-      && POINTER_TYPE_P (TREE_TYPE (var))\n-      && TREE_TYPE (TREE_TYPE (var)) == TREE_TYPE (p))\n-    {\n-      insert_decl_map (id, var, var);\n-      var_sub = build_fold_indirect_ref (var);\n-    }\n-  else\n-    var_sub = var;\n-\n   /* Register the VAR_DECL as the equivalent for the PARM_DECL;\n      that way, when the PARM_DECL is encountered, it will be\n      automatically replaced by the VAR_DECL.  */\n-  insert_decl_map (id, p, var_sub);\n+  insert_decl_map (id, p, var);\n \n   /* Declare this new variable.  */\n   TREE_CHAIN (var) = *vars;\n@@ -1572,7 +1558,7 @@ setup_one_parameter (copy_body_data *id, tree p, tree value, tree fn,\n \n       if (rhs == error_mark_node)\n \t{\n-  \t  insert_decl_map (id, p, var_sub);\n+\t  insert_decl_map (id, p, var);\n \t  return;\n \t}\n "}]}