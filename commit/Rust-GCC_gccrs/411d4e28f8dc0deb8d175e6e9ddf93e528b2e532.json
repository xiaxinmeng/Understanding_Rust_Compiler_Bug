{"sha": "411d4e28f8dc0deb8d175e6e9ddf93e528b2e532", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDExZDRlMjhmOGRjMGRlYjhkMTc1ZTZlOWRkZjkzZTUyOGIyZTUzMg==", "commit": {"author": {"name": "Craig Burley", "email": "craig@jcb-sc.com", "date": "1999-03-05T23:40:12Z"}, "committer": {"name": "Craig Burley", "email": "burley@gcc.gnu.org", "date": "1999-03-05T23:40:12Z"}, "message": "Warn about invoking non-Y2K-compliant intrinsics\n\nFrom-SVN: r25609", "tree": {"sha": "7fc5b956543a0ff46d7d10cd0432a5c539ced393", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fc5b956543a0ff46d7d10cd0432a5c539ced393"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532", "html_url": "https://github.com/Rust-GCC/gccrs/commit/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/comments", "author": null, "committer": null, "parents": [{"sha": "40ae436b588ba796cdcdd682a2435fd4223687ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40ae436b588ba796cdcdd682a2435fd4223687ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40ae436b588ba796cdcdd682a2435fd4223687ba"}], "stats": {"total": 299, "additions": 278, "deletions": 21}, "files": [{"sha": "3db76df822f9e9914115bfd72c4082ddb2f5a989", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=411d4e28f8dc0deb8d175e6e9ddf93e528b2e532", "patch": "@@ -1,3 +1,22 @@\n+Sat Mar  6 02:28:35 1999  Craig Burley  <craig@jcb-sc.com>\n+\n+\tWarn about non-Y2K-compliant intrinsics:\n+\t* bad.def (FFEBAD_INTRINSIC_Y2KBAD): New diagnostic.\n+\t* intrin.def (FFEINTRIN_impDATE, FFEINTRIN_impIDATE_vxt):\n+\tUse new DEFIMPY macro to flag these as non-Y2K-compliant.\n+\t* intdoc.c (DEFIMPY): Support new Y2K macro.\n+\t* intrin.h (DEFIMPY): Ditto.\n+\t* intrin.c (DEFIMPY): Ditto.\n+\t(ffeintrin_fulfill_generic, ffeintrin_fulfill_specific):\n+\tWarn about invocation of non-Y2K-compliant intrinsic.\n+\t* com-rt.def (FFECOM_gfrtDATE, FFECOM_gfrtVXTIDATE):\n+\tRename external procedure names, to keep previously-\n+\tcompiled (sans-new-warnings) code from linking to\n+\tnew library.\n+\t* g77.texi: Document all this stuff.\n+\t* news.texi: Spread the joy.\n+\t* version.c: Bump version.\n+\n Fri Mar  5 13:22:44 1999  Craig Burley  <craig@jcb-sc.com>\n \n \t* news.texi: Relocate IDATE (VXT) fix: we put it in 1.1.2"}, {"sha": "430c2834d11ff835b9dc6dc242223d2effa2b977", "filename": "gcc/f/bad.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/gcc%2Ff%2Fbad.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/gcc%2Ff%2Fbad.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fbad.def?ref=411d4e28f8dc0deb8d175e6e9ddf93e528b2e532", "patch": "@@ -700,6 +700,8 @@ FFEBAD_MSGS1 (FFEBAD_ARRAY_LARGE, FATAL,\n \"Array `%A' at %0 is too large to handle\")\n FFEBAD_MSGS1 (FFEBAD_SFUNC_UNUSED, WARN,\n \"Statement function `%A' defined at %0 is not used\")\n+FFEBAD_MSGS1 (FFEBAD_INTRINSIC_Y2KBAD, WARN,\n+\"Intrinsic `%A', invoked at %0, known to be non-Y2K-compliant [info -f g77 M Y2KBAD]\")\n \n #undef INFORM\n #undef TRIVIAL"}, {"sha": "5c08fee6c3e830c182989a564321ad642ca2f05b", "filename": "gcc/f/com-rt.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/gcc%2Ff%2Fcom-rt.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/gcc%2Ff%2Fcom-rt.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom-rt.def?ref=411d4e28f8dc0deb8d175e6e9ddf93e528b2e532", "patch": "@@ -142,7 +142,7 @@ DEFGFRT (FFECOM_gfrtDACOS, \"d_acos\", FFECOM_rttypeDOUBLE_, \"&d\", FALSE, FALSE)\n DEFGFRT (FFECOM_gfrtDASIN, \"d_asin\", FFECOM_rttypeDOUBLE_, \"&d\", FALSE, FALSE)\n DEFGFRT (FFECOM_gfrtDATAN, \"d_atan\", FFECOM_rttypeDOUBLE_, \"&d\", FALSE, FALSE)\n DEFGFRT (FFECOM_gfrtDATAN2, \"d_atn2\", FFECOM_rttypeDOUBLE_, \"&d\", FALSE, FALSE)\n-DEFGFRT (FFECOM_gfrtDATE, \"G77_date_0\", FFECOM_rttypeVOID_, \"&a\", FALSE, FALSE)\n+DEFGFRT (FFECOM_gfrtDATE, \"G77_date_y2kbug_0\", FFECOM_rttypeVOID_, \"&a\", FALSE, FALSE)\n DEFGFRT (FFECOM_gfrtDATE_AND_TIME, \"G77_date_and_time_0\", FFECOM_rttypeVOID_, \"&a&a&a&i\", FALSE, FALSE)\n DEFGFRT (FFECOM_gfrtL_BESJ0, \"j0\", FFECOM_rttypeDOUBLE_, \"d\", FALSE, FALSE)\n DEFGFRT (FFECOM_gfrtL_BESJ1, \"j1\", FFECOM_rttypeDOUBLE_, \"d\", FALSE, FALSE)\n@@ -242,7 +242,7 @@ DEFGFRT (FFECOM_gfrtTIME, \"G77_time_0\", FFECOM_rttypeLONGINT_, 0, FALSE, FALSE)\n DEFGFRT (FFECOM_gfrtTTYNAM, \"G77_ttynam_0\", FFECOM_rttypeCHARACTER_, \"&i\", FALSE, FALSE)\n DEFGFRT (FFECOM_gfrtUNLINK, \"G77_unlink_0\", FFECOM_rttypeINTEGER_, \"&a\", FALSE, FALSE)\n DEFGFRT (FFECOM_gfrtUMASK, \"G77_umask_0\", FFECOM_rttypeINTEGER_, \"&i\", FALSE, FALSE)\n-DEFGFRT (FFECOM_gfrtVXTIDATE, \"G77_vxtidate_0\", FFECOM_rttypeVOID_, \"&i&i&i\", FALSE, FALSE)\n+DEFGFRT (FFECOM_gfrtVXTIDATE, \"G77_vxtidate_y2kbug_0\", FFECOM_rttypeVOID_, \"&i&i&i\", FALSE, FALSE)\n DEFGFRT (FFECOM_gfrtVXTTIME, \"G77_vxttime_0\", FFECOM_rttypeVOID_, \"&a\", FALSE, FALSE)\n DEFGFRT (FFECOM_gfrtCDABS, \"z_abs\", FFECOM_rttypeDOUBLE_, \"&e\", FALSE, FALSE)\n DEFGFRT (FFECOM_gfrtCDCOS, \"z_cos\", FFECOM_rttypeDBLCMPLX_F2C_, \"&e\", FALSE, TRUE)"}, {"sha": "9997fa2c19616ba955a22a9b4e36a467b488a21a", "filename": "gcc/f/g77.texi", "status": "modified", "additions": 133, "deletions": 1, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/gcc%2Ff%2Fg77.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/gcc%2Ff%2Fg77.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fg77.texi?ref=411d4e28f8dc0deb8d175e6e9ddf93e528b2e532", "patch": "@@ -14,7 +14,7 @@\n @c %**start of header\n @setfilename g77.info\n \n-@set last-up-date 1999-03-03\n+@set last-up-date 1999-03-06\n @set version-g77 0.5.24\n @set email-general egcs@@egcs.cygnus.com\n @set email-bugs egcs-bugs@@egcs.cygnus.com\n@@ -8145,6 +8145,119 @@ on at least some systems:\n @ref{Date Intrinsic},\n @ref{IDate Intrinsic (VXT)}.\n \n+@cindex y2kbuggy\n+@cindex date_y2kbuggy_0\n+@cindex vxtidate_y2kbuggy_0\n+@cindex G77_date_y2kbuggy_0\n+@cindex G77_vxtidate_y2kbuggy_0\n+The @code{libg2c} library\n+shipped with any @code{g77} that warns\n+about invocation of a non-Y2K-compliant intrinsic\n+has renamed the @samp{EXTERNAL} procedure names\n+of those intrinsics.\n+This is done so that\n+the @code{libg2c} implementations of these intrinsics\n+cannot be directly linked to\n+as @samp{EXTERNAL} names\n+(which normally would avoid the non-Y2K-intrinsic warning).\n+\n+The renamed forms of the @samp{EXTERNAL} names\n+of these renamed procedures\n+may be linked to\n+by appending the string @samp{_y2kbug}\n+to the name of the procedure\n+in the source code.\n+For example:\n+\n+@smallexample\n+CHARACTER*20 STR\n+INTEGER YY, MM, DD\n+EXTERNAL DATE_Y2KBUG, VXTIDATE_Y2KBUG\n+CALL DATE_Y2KBUG (STR)\n+CALL VXTIDATE_Y2KBUG (MM, DD, YY)\n+@end smallexample\n+\n+(Note that the @samp{EXTERNAL} statement\n+is not actually required,\n+since the modified names are not recognized as intrinsics\n+by the current version of @code{g77}.\n+But it is shown in this specific case,\n+for purposes of illustration.)\n+\n+The renaming of @samp{EXTERNAL} procedure names of these intrinsics\n+causes unresolved references at link time.\n+For example, @samp{EXTERNAL DATE; CALL DATE(STR)}\n+is normally compiled by @code{g77}\n+as, in C, @samp{date_(&str, 20);}.\n+This, in turn, links to the @samp{date_} procedure\n+in the @samp{libE77} portion of @code{libg2c},\n+which purposely calls a nonexistent procedure\n+named @samp{G77_date_y2kbuggy_0}.\n+The resulting link-time error is designed, via this name,\n+to encourage the programmer to look up the\n+index entries to this portion of the @code{g77} documentation.\n+\n+Generally, we recommend that the @samp{EXTERNAL} method\n+of invoking procedures in @code{libg2c}\n+@emph{not} be used.\n+When used, some of the correctness checking\n+normally performed by @code{g77}\n+is skipped.\n+\n+In particular, it is probably better to use the\n+@samp{INTRINSIC} method of invoking\n+non-Y2K-compliant procedures,\n+so anyone compiling the code\n+can quickly notice the potential Y2K problems\n+(via the warnings printing by @code{g77})\n+without having to even look at the code itself.\n+\n+If there are problems linking @code{libg2c}\n+to code compiled by @code{g77}\n+that involve the string @samp{y2kbug},\n+and these are not explained above,\n+that probably indicates\n+that a version of @code{libg2c}\n+older than @code{g77}\n+is being linked to,\n+or that the new library is being linked\n+to code compiled by an older version of @code{g77}.\n+\n+That's because, as of the version that warns about\n+non-Y2K-compliant intrinsic invocation,\n+@code{g77} references the @code{libg2c} implementations\n+of those intrinsics\n+using new names, containing the string @samp{y2kbug}.\n+\n+So, linking newly-compiled code\n+(invoking one of the intrinsics in question)\n+to an old library\n+might yield an unresolved reference\n+to @samp{G77_date_y2kbug_0}.\n+(The old library calls it @samp{G77_date_0}.)\n+\n+Similarly, linking previously-compiled code\n+to a new library\n+might yield an unresolved reference\n+to @samp{G77_vxtidate_0}.\n+(The new library calls it @samp{G77_vxtidate_y2kbug_0}.)\n+\n+The proper fix for the above problems\n+is to obtain the latest release of @code{g77}\n+and related products\n+(including @code{libg2c})\n+and install them on all systems,\n+then recompile, relink, and install\n+(as appropriate)\n+all existing Fortran programs.\n+\n+(Normally, this sort of renaming is steadfastly avoided.\n+In this case, however, it seems more important to highlight\n+potential Y2K problems\n+than to ease the transition\n+of potentially non-Y2K-compliant code\n+to new versions of @code{g77} and @code{libg2c}.)\n+\n @node Array Size\n @subsection Array Size\n @cindex limits, array size\n@@ -14756,6 +14869,7 @@ as the above is just a sample, no such section exists.\n * LEX::         Various lexer messages\n * GLOBALS::     Disagreements about globals.\n * LINKFAIL::    When linking @samp{f771} fails.\n+* Y2KBAD::      Use of non-Y2K-compliant intrinsic.\n @end menu\n \n @node CMPAMBIG\n@@ -15327,6 +15441,24 @@ might solve this problem, e.g.@: by adding\n BOOT_CFLAGS='-mminimal-toc -O2 -g'\n @end smallexample\n to the @code{make bootstrap} command line.\n+\n+@node Y2KBAD\n+@section @code{Y2KBAD}\n+@cindex Y2K compliance\n+@cindex Year 2000 compliance\n+\n+@noindent\n+@smallexample\n+Intrinsic `@var{name}', invoked at (^), known to be non-Y2K-compliant@dots{}\n+@end smallexample\n+\n+This diagnostic indicates that\n+the specific intrinsic invoked by the name @var{name}\n+is known to have an interface\n+that is not Year-2000 (Y2K) compliant.\n+\n+@xref{Year 2000 (Y2K) Problems}.\n+\n @end ifset\n \n @node Index"}, {"sha": "917fc2ea808ad0fdd97e507d4cbb11b52c111a8d", "filename": "gcc/f/intdoc.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/gcc%2Ff%2Fintdoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/gcc%2Ff%2Fintdoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fintdoc.c?ref=411d4e28f8dc0deb8d175e6e9ddf93e528b2e532", "patch": "@@ -124,11 +124,13 @@ static struct _ffeintrin_name_ names[] = {\n #define DEFGEN(CODE,NAME,SPEC1,SPEC2)\n #define DEFSPEC(CODE,NAME,CALLABLE,FAMILY,IMP)\n #define DEFIMP(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL)\n+#define DEFIMPY(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL,Y2KBAD)\n #include \"intrin.def\"\n #undef DEFNAME\n #undef DEFGEN\n #undef DEFSPEC\n #undef DEFIMP\n+#undef DEFIMPY\n };\n \n static struct _ffeintrin_gen_ gens[] = {\n@@ -137,11 +139,13 @@ static struct _ffeintrin_gen_ gens[] = {\n   { NAME, { SPEC1, SPEC2, }, },\n #define DEFSPEC(CODE,NAME,CALLABLE,FAMILY,IMP)\n #define DEFIMP(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL)\n+#define DEFIMPY(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL,Y2KBAD)\n #include \"intrin.def\"\n #undef DEFNAME\n #undef DEFGEN\n #undef DEFSPEC\n #undef DEFIMP\n+#undef DEFIMPY\n };\n \n static struct _ffeintrin_imp_ imps[] = {\n@@ -151,9 +155,13 @@ static struct _ffeintrin_imp_ imps[] = {\n #if 0\t/* FFECOM_targetCURRENT == FFECOM_targetGCC */\n #define DEFIMP(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL) \\\n   { NAME, FFECOM_gfrt ## GFRT, CONTROL },\n+#define DEFIMPY(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL,Y2KBAD) \\\n+  { NAME, FFECOM_gfrt ## GFRT, CONTROL },\n #elif 1\t/* FFECOM_targetCURRENT == FFECOM_targetFFE */\n #define DEFIMP(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL) \\\n   { NAME, CONTROL },\n+#define DEFIMPY(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL,Y2KBAD) \\\n+  { NAME, CONTROL },\n #else\n #error\n #endif\n@@ -162,6 +170,7 @@ static struct _ffeintrin_imp_ imps[] = {\n #undef DEFGEN\n #undef DEFSPEC\n #undef DEFIMP\n+#undef DEFIMPY\n };\n \n static struct _ffeintrin_spec_ specs[] = {\n@@ -170,10 +179,12 @@ static struct _ffeintrin_spec_ specs[] = {\n #define DEFSPEC(CODE,NAME,CALLABLE,FAMILY,IMP) \\\n   { NAME, CALLABLE, FAMILY, IMP, },\n #define DEFIMP(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL)\n+#define DEFIMPY(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL,Y2KBAD)\n #include \"intrin.def\"\n #undef DEFGEN\n #undef DEFSPEC\n #undef DEFIMP\n+#undef DEFIMPY\n };\n \n struct cc_pair { ffeintrinImp imp; char *text; };"}, {"sha": "6760be4867607288cac9e95b7b614ed0be431d78", "filename": "gcc/f/intrin.c", "status": "modified", "additions": 31, "deletions": 2, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/gcc%2Ff%2Fintrin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/gcc%2Ff%2Fintrin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fintrin.c?ref=411d4e28f8dc0deb8d175e6e9ddf93e528b2e532", "patch": "@@ -64,6 +64,7 @@ struct _ffeintrin_imp_\n     ffecomGfrt gfrt_gnu;\t/* library routine, gnu-callable form. */\n #endif\t/* FFECOM_targetCURRENT == FFECOM_targetGCC */\n     char *control;\n+    char y2kbad;\n   };\n \n static ffebad ffeintrin_check_ (ffeintrinImp imp, ffebldOp op,\n@@ -84,11 +85,13 @@ static struct _ffeintrin_name_ ffeintrin_names_[]\n #define DEFGEN(CODE,NAME,SPEC1,SPEC2)\n #define DEFSPEC(CODE,NAME,CALLABLE,FAMILY,IMP)\n #define DEFIMP(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL)\n+#define DEFIMPY(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL,Y2KBAD)\n #include \"intrin.def\"\n #undef DEFNAME\n #undef DEFGEN\n #undef DEFSPEC\n #undef DEFIMP\n+#undef DEFIMPY\n };\n \n static struct _ffeintrin_gen_ ffeintrin_gens_[]\n@@ -99,11 +102,13 @@ static struct _ffeintrin_gen_ ffeintrin_gens_[]\n   { NAME, { SPEC1, SPEC2, }, },\n #define DEFSPEC(CODE,NAME,CALLABLE,FAMILY,IMP)\n #define DEFIMP(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL)\n+#define DEFIMPY(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL,Y2KBAD)\n #include \"intrin.def\"\n #undef DEFNAME\n #undef DEFGEN\n #undef DEFSPEC\n #undef DEFIMP\n+#undef DEFIMPY\n };\n \n static struct _ffeintrin_imp_ ffeintrin_imps_[]\n@@ -115,10 +120,15 @@ static struct _ffeintrin_imp_ ffeintrin_imps_[]\n #if FFECOM_targetCURRENT == FFECOM_targetGCC\n #define DEFIMP(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL) \\\n       { NAME, FFECOM_gfrt ## GFRTDIRECT, FFECOM_gfrt ## GFRTF2C, \\\n-\tFFECOM_gfrt ## GFRTGNU, CONTROL },\n+\tFFECOM_gfrt ## GFRTGNU, CONTROL, FALSE },\n+#define DEFIMPY(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL,Y2KBAD) \\\n+      { NAME, FFECOM_gfrt ## GFRTDIRECT, FFECOM_gfrt ## GFRTF2C, \\\n+\tFFECOM_gfrt ## GFRTGNU, CONTROL, Y2KBAD },\n #elif FFECOM_targetCURRENT == FFECOM_targetFFE\n #define DEFIMP(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL) \\\n-      { NAME, CONTROL },\n+      { NAME, CONTROL, FALSE },\n+#define DEFIMPY(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL,Y2KBAD) \\\n+      { NAME, CONTROL, Y2KBAD },\n #else\n #error\n #endif\n@@ -127,6 +137,7 @@ static struct _ffeintrin_imp_ ffeintrin_imps_[]\n #undef DEFGEN\n #undef DEFSPEC\n #undef DEFIMP\n+#undef DEFIMPY\n };\n \n static struct _ffeintrin_spec_ ffeintrin_specs_[]\n@@ -137,10 +148,12 @@ static struct _ffeintrin_spec_ ffeintrin_specs_[]\n #define DEFSPEC(CODE,NAME,CALLABLE,FAMILY,IMP) \\\n   { NAME, CALLABLE, FAMILY, IMP, },\n #define DEFIMP(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL)\n+#define DEFIMPY(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL,Y2KBAD)\n #include \"intrin.def\"\n #undef DEFGEN\n #undef DEFSPEC\n #undef DEFIMP\n+#undef DEFIMPY\n };\n \f\n \n@@ -1374,6 +1387,14 @@ ffeintrin_fulfill_generic (ffebld *expr, ffeinfo *info, ffelexToken t)\n \t  ffebad_string (ffeintrin_gens_[gen].name);\n \t  ffebad_finish ();\n \t}\n+      if (ffeintrin_imps_[imp].y2kbad)\n+\t{\n+\t  ffebad_start (FFEBAD_INTRINSIC_Y2KBAD);\n+\t  ffebad_here (0, ffelex_token_where_line (t),\n+\t\t       ffelex_token_where_column (t));\n+\t  ffebad_string (ffeintrin_gens_[gen].name);\n+\t  ffebad_finish ();\n+\t}\n     }\n }\n \n@@ -1489,6 +1510,14 @@ ffeintrin_fulfill_specific (ffebld *expr, ffeinfo *info,\n \t  ffebad_string (name);\n \t  ffebad_finish ();\n \t}\n+      if (ffeintrin_imps_[imp].y2kbad)\n+\t{\n+\t  ffebad_start (FFEBAD_INTRINSIC_Y2KBAD);\n+\t  ffebad_here (0, ffelex_token_where_line (t),\n+\t\t       ffelex_token_where_column (t));\n+\t  ffebad_string (name);\n+\t  ffebad_finish ();\n+\t}\n     }\n }\n "}, {"sha": "9d9626bc7c2702abf78326e406817360597131fd", "filename": "gcc/f/intrin.def", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/gcc%2Ff%2Fintrin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/gcc%2Ff%2Fintrin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fintrin.def?ref=411d4e28f8dc0deb8d175e6e9ddf93e528b2e532", "patch": "@@ -3006,6 +3006,12 @@ DEFSPEC (NONE,\n \n    CONTROL    -- A control string, described below.\n \n+   The DEFIMPY macro specifies the above, plus:\n+\n+   Y2KBAD     -- TRUE if the intrinsic is known to be non-Y2K-compliant,\n+                 FALSE if it is known to be Y2K-compliant.  (In terms of\n+                 interface and libg2c implementation.)\n+\n */\n \n /* The control string has the following format:\n@@ -3232,7 +3238,7 @@ DEFIMP\t(COMPLEX,\t\"COMPLEX\",\t,,,\t\t\"C=:*:Real=S*,Imag=S*\")\n DEFIMP\t(CPU_TIME,\t\"CPU_TIME\",\tSECOND,,,\t\"--:-:Seconds=R*w\")\n DEFIMP\t(CTIME_func,\t\"CTIME_func\",\tCTIME,,,\t\"A1*:-:STime=I*\")\n DEFIMP\t(CTIME_subr,\t\"CTIME_subr\",\tCTIME,,,\t\"--:-:Result=A1w,STime=I*\")\n-DEFIMP\t(DATE,\t\t\"DATE\",\t\tDATE,,,\t\t\"--:-:Date=A1w\")\n+DEFIMPY\t(DATE,\t\t\"DATE\",\t\tDATE,,,\t\t\"--:-:Date=A1w\",\tTRUE)\n DEFIMP\t(DATE_AND_TIME,\t\"DATE_AND_TIME\", DATE_AND_TIME,,, \"--:-:Date=A1w,Time=?A1w,Zone=?A1w,Values=?I1(8)w\")\n DEFIMP\t(DBESJ0,\t\"DBESJ0\",\tL_BESJ0,,,\t\"R2:-:X=R2\")\n DEFIMP\t(DBESJ1,\t\"DBESJ1\",\tL_BESJ1,,,\t\"R2:-:X=R2\")\n@@ -3289,7 +3295,7 @@ DEFIMP\t(IBCLR,\t\t\"IBCLR\",\t,,,\t\t\"I=:0:I=I*,Pos=I*\")\n DEFIMP\t(IBITS,\t\t\"IBITS\",\t,,,\t\t\"I=:0:I=I*,Pos=I*,Len=I*\")\n DEFIMP\t(IBSET,\t\t\"IBSET\",\t,,,\t\t\"I=:0:I=I*,Pos=I*\")\n DEFIMP\t(IDATE_unix,\t\"IDATE_unix\",\tIDATE,,,\t\"--:-:TArray=I1(3)w\")\n-DEFIMP\t(IDATE_vxt,\t\"IDATE_vxt\",\tVXTIDATE,,,\t\"--:-:M=I1w,D=I1w,Y=I1w\")\n+DEFIMPY\t(IDATE_vxt,\t\"IDATE_vxt\",\tVXTIDATE,,,\t\"--:-:M=I1w,D=I1w,Y=I1w\",\tTRUE)\n DEFIMP\t(IEOR,\t\t\"IEOR\",\t\t,,,\t\t\"I=:*:I=I*,J=I*\")\n DEFIMP\t(IOR,\t\t\"IOR\",\t\t,,,\t\t\"I=:*:I=I*,J=I*\")\n DEFIMP\t(IERRNO,\t\"IERRNO\",\tIERRNO,,,\t\"I1:-:\")"}, {"sha": "393552dae7a0d21410a39888ed8c28db2a26954b", "filename": "gcc/f/intrin.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/gcc%2Ff%2Fintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/gcc%2Ff%2Fintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fintrin.h?ref=411d4e28f8dc0deb8d175e6e9ddf93e528b2e532", "patch": "@@ -51,11 +51,13 @@ typedef enum\n #define DEFGEN(CODE,NAME,SPEC1,SPEC2) FFEINTRIN_gen ## CODE,\n #define DEFSPEC(CODE,NAME,CALLABLE,FAMILY,IMP)\n #define DEFIMP(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL)\n+#define DEFIMPY(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL,Y2KBAD)\n #include \"intrin.def\"\n #undef DEFNAME\n #undef DEFGEN\n #undef DEFSPEC\n #undef DEFIMP\n+#undef DEFIMPY\n     FFEINTRIN_gen\n   } ffeintrinGen;\n \n@@ -65,11 +67,13 @@ typedef enum\n #define DEFGEN(CODE,NAME,SPEC1,SPEC2)\n #define DEFSPEC(CODE,NAME,CALLABLE,FAMILY,IMP) FFEINTRIN_spec ## CODE,\n #define DEFIMP(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL)\n+#define DEFIMPY(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL,Y2KBAD)\n #include \"intrin.def\"\n #undef DEFNAME\n #undef DEFGEN\n #undef DEFSPEC\n #undef DEFIMP\n+#undef DEFIMPY\n     FFEINTRIN_spec\n   } ffeintrinSpec;\n \n@@ -80,11 +84,14 @@ typedef enum\n #define DEFSPEC(CODE,NAME,CALLABLE,FAMILY,IMP)\n #define DEFIMP(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL) \\\n     FFEINTRIN_imp ## CODE,\n+#define DEFIMPY(CODE,NAME,GFRTDIRECT,GFRTF2C,GFRTGNU,CONTROL,Y2KBAD) \\\n+    FFEINTRIN_imp ## CODE,\n #include \"intrin.def\"\n #undef DEFNAME\n #undef DEFGEN\n #undef DEFSPEC\n #undef DEFIMP\n+#undef DEFIMPY\n     FFEINTRIN_imp\n   } ffeintrinImp;\n "}, {"sha": "a460fe047338913e0ef72a17a0c52feb1c26f026", "filename": "gcc/f/news.texi", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/gcc%2Ff%2Fnews.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/gcc%2Ff%2Fnews.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fnews.texi?ref=411d4e28f8dc0deb8d175e6e9ddf93e528b2e532", "patch": "@@ -9,7 +9,7 @@\n @c The text of this file appears in the file BUGS\n @c in the G77 distribution, as well as in the G77 manual.\n \n-@c 1999-03-03\n+@c 1999-03-06\n \n @ifclear NEWSONLY\n @node News\n@@ -81,6 +81,16 @@ Source file names with the suffixes @samp{.FOR} and @samp{.FPP}\n now are recognized by @code{g77}\n as if they ended in @samp{.for} and @samp{.fpp}, respectively.\n \n+@item\n+@code{g77} now warns about a reference to an intrinsic\n+that has an interface that is not Year 2000 (Y2K) compliant.\n+Also, the @code{libg2c} has been changed to increase the likelihood\n+of catching references to the implementations of these intrinsics\n+using the @samp{EXTERNAL} mechanism\n+(which would avoid the new warnings).\n+\n+@xref{Year 2000 (Y2K) Problems}, for more information.\n+\n @item\n @code{g77} now warns about a reference to a function\n when the corresponding @emph{subsequent} function program unit"}, {"sha": "8faaa0286473e89007e9c49edde1d5b8fe397973", "filename": "gcc/f/version.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/gcc%2Ff%2Fversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/gcc%2Ff%2Fversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fversion.c?ref=411d4e28f8dc0deb8d175e6e9ddf93e528b2e532", "patch": "@@ -1 +1 @@\n-char *ffe_version_string = \"0.5.24-19990219\";\n+char *ffe_version_string = \"0.5.24-19990306\";"}, {"sha": "c070e3a43ff4c1aeed4c7ce89821e899dfc6b382", "filename": "libf2c/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/libf2c%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/libf2c%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FChangeLog?ref=411d4e28f8dc0deb8d175e6e9ddf93e528b2e532", "patch": "@@ -1,3 +1,17 @@\n+1999-03-06  Craig Burley  <craig@jcb-sc.com>\n+\n+\tRename non-Y2K-compliant intrinsics:\n+\t* Makefile.in (F2CEXT): Now two versions each of\n+\t`date' and `vxtidt'.\n+\t* f2cext.c (date_, vxtidate_): Split into two versions,\n+\tthe existing one calling a new \"y2kbuggy\" routine that\n+\tdoes not exist, and a new one named with \"y2kbug\" that\n+\tcalls the newly renamed underlying routine.\n+\t* libU77/date_.c (G77_date_y2kbug_0): Rename from G77_date_0.\n+\t* libU77/vxtidate_.c (G77_vxtidate_y2kbug_0): Rename from\n+\tG77_vxtidate_0.\n+\t* libU77/Version.c: Bump version.\n+\n 1999-03-03  Craig Burley  <craig@jcb-sc.com>\n \n \t* libU77/vxtidate_.c (G77_vxtidate_0): Truncate"}, {"sha": "7c8d880ea2097745943f84262893d514d0197588", "filename": "libf2c/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/libf2c%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/libf2c%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FMakefile.in?ref=411d4e28f8dc0deb8d175e6e9ddf93e528b2e532", "patch": "@@ -75,12 +75,13 @@ SUBDIRS = libI77 libF77 libU77\n \n F2CEXT = abort derf derfc ef1asc ef1cmc erf erfc exit getarg getenv iargc \\\n \tsignal system flush ftell fseek access besj0 besj1 besjn besy0 besy1 \\\n-\tbesyn chdir chmod ctime date dbesj0 dbesj1 dbesjn dbesy0 dbesy1 dbesyn \\\n+\tbesyn chdir chmod ctime dbesj0 dbesj1 dbesjn dbesy0 dbesy1 dbesyn \\\n \tdtime etime fdate fgetc fget flush1 fnum fputc fput fstat gerror \\\n \tgetcwd getgid getlog getpid getuid gmtime hostnm idate ierrno irand \\\n \tisatty itime kill link lnblnk lstat ltime mclock perror rand rename \\\n \tsecnds second sleep srand stat symlnk time ttynam umask unlink \\\n-\tvxtidt vxttim alarm\n+\tvxttim alarm \\\n+\tdate_y2kbuggy date_y2kbug vxtidt_y2kbuggy vxtidt_y2kbug\n \n .SUFFIXES:\n "}, {"sha": "56f9490c6f5191f0078e2d3ed0ce1953b2b88986", "filename": "libf2c/f2cext.c", "status": "modified", "additions": 32, "deletions": 6, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/libf2c%2Ff2cext.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/libf2c%2Ff2cext.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2Ff2cext.c?ref=411d4e28f8dc0deb8d175e6e9ddf93e528b2e532", "patch": "@@ -203,10 +203,23 @@ void ctime_ (char *chtime, const ftnlen Lchtime, longint *xstime) {\n }\n #endif\n \n-#ifdef Ldate\n+#ifdef Ldate_y2kbuggy\n int date_ (char *buf, ftnlen buf_len) {\n-    extern int G77_date_0 (char *buf, ftnlen buf_len);\n-    return G77_date_0 (buf, buf_len);\n+  /* Fail to link, so user sees attempt to invoke non-Y2K-compliant\n+     routine.  */\n+    extern int G77_date_y2kbuggy_0 (char *buf, ftnlen buf_len);\n+    return G77_date_y2kbuggy_0 (buf, buf_len);\n+}\n+#endif\n+\n+#ifdef Ldate_y2kbug\n+int date_y2kbug__ (char *buf, ftnlen buf_len) {\n+  /* If user wants to invoke the non-Y2K-compliant routine via\n+     an `EXTERNAL' interface, avoiding the warning via g77's\n+     `INTRINSIC' interface, force coding of \"y2kbug\" string in\n+     user's program.  */\n+    extern int G77_date_y2kbug_0 (char *buf, ftnlen buf_len);\n+    return G77_date_y2kbug_0 (buf, buf_len);\n }\n #endif\n \n@@ -540,10 +553,23 @@ integer unlink_ (const char *str, const ftnlen Lstr) {\n }\n #endif\n \n-#ifdef Lvxtidt\n+#ifdef Lvxtidt_y2kbuggy\n int vxtidate_ (integer *m, integer *d, integer *y) {\n-    extern int G77_vxtidate_0 (integer *m, integer *d, integer *y);\n-    return G77_vxtidate_0 (m, d, y);\n+  /* Fail to link, so user sees attempt to invoke non-Y2K-compliant\n+     routine.  */\n+    extern int G77_vxtidate_y2kbuggy_0 (integer *m, integer *d, integer *y);\n+    return G77_vxtidate_y2kbuggy_0 (m, d, y);\n+}\n+#endif\n+\n+#ifdef Lvxtidt_y2kbug\n+int vxtidate_y2kbug__ (integer *m, integer *d, integer *y) {\n+  /* If user wants to invoke the non-Y2K-compliant routine via\n+     an `EXTERNAL' interface, avoiding the warning via g77's\n+     `INTRINSIC' interface, force coding of \"y2kbug\" string in\n+     user's program.  */\n+    extern int G77_vxtidate_y2kbug_0 (integer *m, integer *d, integer *y);\n+    return G77_vxtidate_y2kbug_0 (m, d, y);\n }\n #endif\n "}, {"sha": "1efd51050554c6ddeb189ebb4ad774ef51202ac1", "filename": "libf2c/libU77/Version.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/libf2c%2FlibU77%2FVersion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/libf2c%2FlibU77%2FVersion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2FVersion.c?ref=411d4e28f8dc0deb8d175e6e9ddf93e528b2e532", "patch": "@@ -1,6 +1,6 @@\n static char junk[] = \"\\n@(#) LIBU77 VERSION 19980709\\n\";\n \n-char __G77_LIBU77_VERSION__[] = \"0.5.24-19990115\";\n+char __G77_LIBU77_VERSION__[] = \"0.5.24-19990306\";\n \n #include <stdio.h>\n "}, {"sha": "11537657f329d61960352d9b60d38ab2b8ace296", "filename": "libf2c/libU77/date_.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/libf2c%2FlibU77%2Fdate_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/libf2c%2FlibU77%2Fdate_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fdate_.c?ref=411d4e28f8dc0deb8d175e6e9ddf93e528b2e532", "patch": "@@ -9,7 +9,7 @@\n \n static integer c__5 = 5;\n \n-/* Subroutine */ int G77_date_0 (char *buf, ftnlen buf_len)\n+/* Subroutine */ int G77_date_y2kbug_0 (char *buf, ftnlen buf_len)\n {\n     /* System generated locals */\n     address a__1[5];"}, {"sha": "dc817a7f4829eac4d28456f288c5f94dc95a8d2b", "filename": "libf2c/libU77/vxtidate_.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/libf2c%2FlibU77%2Fvxtidate_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411d4e28f8dc0deb8d175e6e9ddf93e528b2e532/libf2c%2FlibU77%2Fvxtidate_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fvxtidate_.c?ref=411d4e28f8dc0deb8d175e6e9ddf93e528b2e532", "patch": "@@ -38,10 +38,10 @@ Boston, MA 02111-1307, USA.  */\n \n /* Subroutine */\n #ifdef KR_headers\n-int G77_vxtidate_0 (m, d, y)\n+int G77_vxtidate_y2kbug_0 (m, d, y)\n      integer *y, *m, *d;\n #else\n-int G77_vxtidate_0 (integer *m, integer *d, integer *y)\n+int G77_vxtidate_y2kbug_0 (integer *m, integer *d, integer *y)\n #endif\n {\n   struct tm *lt;"}]}