{"sha": "f62bef4832bff6b72efe12c4013503e7fd0488cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYyYmVmNDgzMmJmZjZiNzJlZmUxMmM0MDEzNTAzZTdmZDA0ODhjYw==", "commit": {"author": {"name": "J.T. Conklin", "email": "jtc@acorntoolworks.com", "date": "2002-06-11T17:54:27Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-06-11T17:54:27Z"}, "message": "configure.target: Set os_include_dir to config/os/qnx/qnx6.1 under *-qnx6.[12]*.\n\n\n2002-06-11  J.T. Conklin  <jtc@acorntoolworks.com>\n            Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* configure.target: Set os_include_dir to config/os/qnx/qnx6.1\n\tunder *-qnx6.[12]*.\n\t* configure.in: Add support for *-qnx6.[12]*.\n\t* configure: Regenerate.\n\n\t* config/os/qnx, config/os/qnx/qnx6.1, config/os/qnx/qnx6.1/bits:\n\tNew directories.\n\t* config/os/qnx/qnx6.1/bits/ctype_base.h, ctype_inline.h,\n\tctype_noninline.h, os_defines.h: New files.\n\nCo-Authored-By: Benjamin Kosnik <bkoz@redhat.com>\n\nFrom-SVN: r54518", "tree": {"sha": "be3f303f1d940ad4f08fedca0bea0ca27af749b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be3f303f1d940ad4f08fedca0bea0ca27af749b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f62bef4832bff6b72efe12c4013503e7fd0488cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f62bef4832bff6b72efe12c4013503e7fd0488cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f62bef4832bff6b72efe12c4013503e7fd0488cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f62bef4832bff6b72efe12c4013503e7fd0488cc/comments", "author": {"login": "johntconklin", "id": 6789692, "node_id": "MDQ6VXNlcjY3ODk2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/6789692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johntconklin", "html_url": "https://github.com/johntconklin", "followers_url": "https://api.github.com/users/johntconklin/followers", "following_url": "https://api.github.com/users/johntconklin/following{/other_user}", "gists_url": "https://api.github.com/users/johntconklin/gists{/gist_id}", "starred_url": "https://api.github.com/users/johntconklin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johntconklin/subscriptions", "organizations_url": "https://api.github.com/users/johntconklin/orgs", "repos_url": "https://api.github.com/users/johntconklin/repos", "events_url": "https://api.github.com/users/johntconklin/events{/privacy}", "received_events_url": "https://api.github.com/users/johntconklin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "419831367ffe80b3e7902b86eb38e7f8c396852c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/419831367ffe80b3e7902b86eb38e7f8c396852c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/419831367ffe80b3e7902b86eb38e7f8c396852c"}], "stats": {"total": 3785, "additions": 2521, "deletions": 1264}, "files": [{"sha": "0033247919e12cfa53ae79cc1c35afbdff722fb9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f62bef4832bff6b72efe12c4013503e7fd0488cc/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f62bef4832bff6b72efe12c4013503e7fd0488cc/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f62bef4832bff6b72efe12c4013503e7fd0488cc", "patch": "@@ -1,3 +1,16 @@\n+2002-06-11  J.T. Conklin  <jtc@acorntoolworks.com>\n+            Benjamin Kosnik  <bkoz@redhat.com>\n+\t\n+\t* configure.target: Set os_include_dir to config/os/qnx/qnx6.1\n+\tunder *-qnx6.[12]*.\n+\t* configure.in: Add support for *-qnx6.[12]*.\n+\t* configure: Regenerate.\n+\n+\t* config/os/qnx, config/os/qnx/qnx6.1, config/os/qnx/qnx6.1/bits:\n+\tNew directories.  \n+\t* config/os/qnx/qnx6.1/bits/ctype_base.h, ctype_inline.h,\n+\tctype_noninline.h, os_defines.h: New files.\n+\n 2002-06-10  Loren J. Rittle <ljrittle@acm.org>\n \n \t* acinclude.m4 (GLIBCPP_CHECK_SETRLIMIT_ancilliary): Reorder and"}, {"sha": "c0d04471be1ffd7fdf44e4c537b883577ee4fcfa", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f62bef4832bff6b72efe12c4013503e7fd0488cc/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f62bef4832bff6b72efe12c4013503e7fd0488cc/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=f62bef4832bff6b72efe12c4013503e7fd0488cc", "patch": "@@ -2198,6 +2198,31 @@ AC_MSG_RESULT($enable_symvers)\n ])\n \n \n+# isc-posix.m4 serial 1 (gettext-0.10.40)\n+dnl Copyright (C) 1995-2002 Free Software Foundation, Inc.\n+dnl This file is free software, distributed under the terms of the GNU\n+dnl General Public License.  As a special exception to the GNU General\n+dnl Public License, this file may be distributed as part of a program\n+dnl that contains a configuration script generated by Autoconf, under\n+dnl the same distribution terms as the rest of that program.\n+\n+# This test replaces the one in autoconf.\n+# Currently this macro should have the same name as the autoconf macro\n+# because gettext's gettext.m4 (distributed in the automake package)\n+# still uses it.  Otherwise, the use in gettext.m4 makes autoheader\n+# give these diagnostics:\n+#   configure.in:556: AC_TRY_COMPILE was called before AC_ISC_POSIX\n+#   configure.in:556: AC_TRY_RUN was called before AC_ISC_POSIX\n+\n+undefine([AC_ISC_POSIX])\n+\n+AC_DEFUN([AC_ISC_POSIX],\n+  [\n+    dnl This test replaces the obsolescent AC_ISC_POSIX kludge.\n+    AC_CHECK_LIB(cposix, strerror, [LIBS=\"$LIBS -lcposix\"])\n+  ]\n+)\n+\n # Add --enable-maintainer-mode option to configure.\n # From Jim Meyering\n "}, {"sha": "a310bc8454d00b8c67f9b3ba92e326e483a4bfa9", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f62bef4832bff6b72efe12c4013503e7fd0488cc/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f62bef4832bff6b72efe12c4013503e7fd0488cc/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=f62bef4832bff6b72efe12c4013503e7fd0488cc", "patch": "@@ -726,6 +726,9 @@\n /* Define if you have the <sys/stat.h> header file.  */\n #undef HAVE_SYS_STAT_H\n \n+/* Define if you have the <sys/time.h> header file.  */\n+#undef HAVE_SYS_TIME_H\n+\n /* Define if you have the <sys/types.h> header file.  */\n #undef HAVE_SYS_TYPES_H\n "}, {"sha": "3d4800bb5511078bca5bcdfbbab37307c390386a", "filename": "libstdc++-v3/config/os/qnx/qnx6.1/bits/ctype_base.h", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f62bef4832bff6b72efe12c4013503e7fd0488cc/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fqnx%2Fqnx6.1%2Fbits%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f62bef4832bff6b72efe12c4013503e7fd0488cc/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fqnx%2Fqnx6.1%2Fbits%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fqnx%2Fqnx6.1%2Fbits%2Fctype_base.h?ref=f62bef4832bff6b72efe12c4013503e7fd0488cc", "patch": "@@ -0,0 +1,55 @@\n+// Locale support -*- C++ -*-\n+\n+// Copyright (C) 2002 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882: 22.1  Locales\n+//\n+  \n+// Information as gleaned from /usr/include/ctype.h.\n+  \n+  struct ctype_base\n+  {\n+    // Non-standard typedefs.\n+    typedef const unsigned char*\t__to_type;\n+\n+    // NB: Offsets into ctype<char>::_M_table force a particular size\n+    // on the mask type. Because of this, we don't use an enum.\n+    typedef short\t\tmask;\n+    static const mask upper    \t= _UP;\n+    static const mask lower \t= _LO;\n+    static const mask alpha \t= _LO | _UP | _XA;\n+    static const mask digit \t= _DI;\n+    static const mask xdigit \t= _XD;\n+    static const mask space \t= _CN | _SP | _XS;\n+    static const mask print \t= _DI | _LO | _PU | _SP | _UP | _XA;\n+    static const mask graph \t= _DI | _LO | _PU | _UP | _XA;\n+    static const mask cntrl \t= _BB;\n+    static const mask punct \t= _PU;\n+    static const mask alnum \t= _DI | _LO | _UP | _XA;\n+  };"}, {"sha": "24e01599672bc74806ff48676a2f681bfcac8311", "filename": "libstdc++-v3/config/os/qnx/qnx6.1/bits/ctype_inline.h", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f62bef4832bff6b72efe12c4013503e7fd0488cc/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fqnx%2Fqnx6.1%2Fbits%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f62bef4832bff6b72efe12c4013503e7fd0488cc/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fqnx%2Fqnx6.1%2Fbits%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fqnx%2Fqnx6.1%2Fbits%2Fctype_inline.h?ref=f62bef4832bff6b72efe12c4013503e7fd0488cc", "patch": "@@ -0,0 +1,67 @@\n+// Locale support -*- C++ -*-\n+\n+// Copyright (C) 2002 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882: 22.1  Locales\n+//\n+  \n+// ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n+// functions go in ctype.cc\n+  \n+  bool\n+  ctype<char>::\n+  is(mask __m, char __c) const\n+  { return _M_table[(unsigned char)(__c)] & __m; }\n+\n+  const char*\n+  ctype<char>::\n+  is(const char* __low, const char* __high, mask* __vec) const\n+  {\n+    while (__low < __high)\n+      *__vec++ = _M_table[*__low++];\n+    return __high;\n+  }\n+\n+  const char*\n+  ctype<char>::\n+  scan_is(mask __m, const char* __low, const char* __high) const\n+  {\n+    while (__low < __high && !this->is(__m, *__low))\n+      ++__low;\n+    return __low;\n+  }\n+\n+  const char*\n+  ctype<char>::\n+  scan_not(mask __m, const char* __low, const char* __high) const\n+  {\n+    while (__low < __high && this->is(__m, *__low) != 0)\n+      ++__low;\n+    return __low;\n+  }"}, {"sha": "cf34bd422daa73edb1c4bc05cdc6f28d34e01ac0", "filename": "libstdc++-v3/config/os/qnx/qnx6.1/bits/ctype_noninline.h", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f62bef4832bff6b72efe12c4013503e7fd0488cc/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fqnx%2Fqnx6.1%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f62bef4832bff6b72efe12c4013503e7fd0488cc/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fqnx%2Fqnx6.1%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fqnx%2Fqnx6.1%2Fbits%2Fctype_noninline.h?ref=f62bef4832bff6b72efe12c4013503e7fd0488cc", "patch": "@@ -0,0 +1,79 @@\n+// Locale support -*- C++ -*-\n+\n+// Copyright (C) 2002 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882: 22.1  Locales\n+//\n+  \n+// Information as gleaned from /usr/include/ctype.h\n+  \n+  const ctype_base::mask*\n+  ctype<char>::classic_table() throw()\n+  { return 0; }\n+\n+  ctype<char>::ctype(__c_locale, const mask* __table, bool __del, \n+\t\t     size_t __refs) \n+  : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n+  _M_toupper(NULL), _M_tolower(NULL), _M_table(__table ? __table : _Ctype)\n+  { }\n+\n+  ctype<char>::ctype(const mask* __table, bool __del, size_t __refs) \n+  : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n+  _M_toupper(NULL), _M_tolower(NULL), _M_table(__table ? __table : _Ctype)\n+  { }\n+\n+  char\n+  ctype<char>::do_toupper(char __c) const\n+  { return ::toupper((int) __c); }\n+\n+  const char*\n+  ctype<char>::do_toupper(char* __low, const char* __high) const\n+  {\n+    while (__low < __high)\n+      {\n+\t*__low = ::toupper((int) *__low);\n+\t++__low;\n+      }\n+    return __high;\n+  }\n+\n+  char\n+  ctype<char>::do_tolower(char __c) const\n+  { return ::tolower((int) __c); }\n+\n+  const char* \n+  ctype<char>::do_tolower(char* __low, const char* __high) const\n+  {\n+    while (__low < __high)\n+      {\n+\t*__low = ::tolower((int) *__low);\n+\t++__low;\n+      }\n+    return __high;\n+  }"}, {"sha": "23cf0976c08b38a84e03499f3256112bcfef10e2", "filename": "libstdc++-v3/config/os/qnx/qnx6.1/bits/os_defines.h", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f62bef4832bff6b72efe12c4013503e7fd0488cc/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fqnx%2Fqnx6.1%2Fbits%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f62bef4832bff6b72efe12c4013503e7fd0488cc/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fqnx%2Fqnx6.1%2Fbits%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fqnx%2Fqnx6.1%2Fbits%2Fos_defines.h?ref=f62bef4832bff6b72efe12c4013503e7fd0488cc", "patch": "@@ -0,0 +1,36 @@\n+// Specific definitions for QNX 6.1  -*- C++ -*-\n+\n+// Copyright (C) 2002 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#ifndef _GLIBCPP_OS_DEFINES\n+#define _GLIBCPP_OS_DEFINES 1\n+\n+// System-specific #define, typedefs, corrections, etc, go here.  This\n+// file will come before all others.\n+\n+#endif"}, {"sha": "8a16602aabd7cb4f78a82a96ebc8bb57254a4a4d", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 2220, "deletions": 1264, "changes": 3484, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f62bef4832bff6b72efe12c4013503e7fd0488cc/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f62bef4832bff6b72efe12c4013503e7fd0488cc/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=f62bef4832bff6b72efe12c4013503e7fd0488cc"}, {"sha": "8fdbc5fc22099d13c108c4ba878573459b2e4aa8", "filename": "libstdc++-v3/configure.in", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f62bef4832bff6b72efe12c4013503e7fd0488cc/libstdc%2B%2B-v3%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f62bef4832bff6b72efe12c4013503e7fd0488cc/libstdc%2B%2B-v3%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.in?ref=f62bef4832bff6b72efe12c4013503e7fd0488cc", "patch": "@@ -161,6 +161,26 @@ if test -n \"$with_cross_host\" || test x\"$build\" != x\"$host\"; then\n     *-windiss*)\n       os_include_dir=\"config/os/windiss\"\n       ;;\n+    *-qnx6.[12]*)\n+      SECTION_FLAGS='-ffunction-sections -fdata-sections'\n+      AC_SUBST(SECTION_FLAGS) \n+      GLIBCPP_CHECK_LINKER_FEATURES\n+      GLIBCPP_CHECK_COMPLEX_MATH_SUPPORT\n+      GLIBCPP_CHECK_WCHAR_T_SUPPORT\n+      os_include_dir=\"config/os/qnx/qnx6.1\"\n+      AC_DEFINE(HAVE_COSF)\n+      AC_DEFINE(HAVE_COSL)\n+      AC_DEFINE(HAVE_COSHF)\n+      AC_DEFINE(HAVE_COSHL)\n+      AC_DEFINE(HAVE_LOGF)\n+      AC_DEFINE(HAVE_LOGL)\n+      AC_DEFINE(HAVE_LOG10F)\n+      AC_DEFINE(HAVE_LOG10L)\n+      AC_DEFINE(HAVE_SINF)\n+      AC_DEFINE(HAVE_SINL)\n+      AC_DEFINE(HAVE_SINHF)\n+      AC_DEFINE(HAVE_SINHL)\n+      ;;\n     *)\n       os_include_dir=\"config/os/newlib\"\n       AC_DEFINE(HAVE_HYPOT)"}, {"sha": "c0141f4855cab02fbb7b9e2aa3b81c6eaa91fa91", "filename": "libstdc++-v3/configure.target", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f62bef4832bff6b72efe12c4013503e7fd0488cc/libstdc%2B%2B-v3%2Fconfigure.target", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f62bef4832bff6b72efe12c4013503e7fd0488cc/libstdc%2B%2B-v3%2Fconfigure.target", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.target?ref=f62bef4832bff6b72efe12c4013503e7fd0488cc", "patch": "@@ -111,6 +111,9 @@ case \"${target_os}\" in\n   windiss*)\n     os_include_dir=\"config/os/windiss\"\n     ;;\n+  qnx6.[12]*)\n+    os_include_dir=\"config/os/qnx/qnx6.1\"\n+    ;;\n   *)\n     os_include_dir=\"config/os/generic\"\n     ;;"}]}