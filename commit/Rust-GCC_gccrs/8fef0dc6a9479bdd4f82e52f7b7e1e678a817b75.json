{"sha": "8fef0dc6a9479bdd4f82e52f7b7e1e678a817b75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZlZjBkYzZhOTQ3OWJkZDRmODJlNTJmN2I3ZTFlNjc4YTgxN2I3NQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2018-03-14T06:14:57Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-03-14T06:14:57Z"}, "message": "re PR c++/84596 (internal compiler error: unexpected expression '(bool)c' of kind implicit_conv_expr (cxx_eval_constant_expression))\n\n\tPR c++/84596\n\t* semantics.c (finish_static_assert): Check\n\tinstantiation_dependent_expression_p instead of\n\t{type,value}_dependent_expression_p.\n\n\t* g++.dg/cpp0x/static_assert15.C: New test.\n\nFrom-SVN: r258513", "tree": {"sha": "b14a172ec9120de87c25ad46deffdebac67a1b4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b14a172ec9120de87c25ad46deffdebac67a1b4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fef0dc6a9479bdd4f82e52f7b7e1e678a817b75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fef0dc6a9479bdd4f82e52f7b7e1e678a817b75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fef0dc6a9479bdd4f82e52f7b7e1e678a817b75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fef0dc6a9479bdd4f82e52f7b7e1e678a817b75/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "024a6f45a72d4686aa535a37abe7b34d678e459d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/024a6f45a72d4686aa535a37abe7b34d678e459d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/024a6f45a72d4686aa535a37abe7b34d678e459d"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "067d53835b668d392013b318b29ecb4f4bf996cf", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fef0dc6a9479bdd4f82e52f7b7e1e678a817b75/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fef0dc6a9479bdd4f82e52f7b7e1e678a817b75/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8fef0dc6a9479bdd4f82e52f7b7e1e678a817b75", "patch": "@@ -1,3 +1,10 @@\n+2018-03-14  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/84596\n+\t* semantics.c (finish_static_assert): Check\n+\tinstantiation_dependent_expression_p instead of\n+\t{type,value}_dependent_expression_p.\n+\n 2018-03-13  Paolo Carlini  <paolo.carlini@oracle.com>\n \t    Jason Merrill  <jason@redhat.com>\n "}, {"sha": "fdf37bea770eeba97e35fbc0b1914d73470ebfdc", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fef0dc6a9479bdd4f82e52f7b7e1e678a817b75/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fef0dc6a9479bdd4f82e52f7b7e1e678a817b75/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=8fef0dc6a9479bdd4f82e52f7b7e1e678a817b75", "patch": "@@ -8630,8 +8630,7 @@ finish_static_assert (tree condition, tree message, location_t location,\n   if (check_for_bare_parameter_packs (condition))\n     condition = error_mark_node;\n \n-  if (type_dependent_expression_p (condition) \n-      || value_dependent_expression_p (condition))\n+  if (instantiation_dependent_expression_p (condition))\n     {\n       /* We're in a template; build a STATIC_ASSERT and put it in\n          the right place. */"}, {"sha": "a4bf53c8bc45c8ada628bfff80a78ed2b0b7e587", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fef0dc6a9479bdd4f82e52f7b7e1e678a817b75/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fef0dc6a9479bdd4f82e52f7b7e1e678a817b75/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8fef0dc6a9479bdd4f82e52f7b7e1e678a817b75", "patch": "@@ -1,3 +1,8 @@\n+2018-03-14  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/84596\n+\t* g++.dg/cpp0x/static_assert15.C: New test.\n+\n 2018-03-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/61775"}, {"sha": "a740f73fd4acdceff1b865151f70f8558774c9f4", "filename": "gcc/testsuite/g++.dg/cpp0x/static_assert15.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fef0dc6a9479bdd4f82e52f7b7e1e678a817b75/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fstatic_assert15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fef0dc6a9479bdd4f82e52f7b7e1e678a817b75/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fstatic_assert15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fstatic_assert15.C?ref=8fef0dc6a9479bdd4f82e52f7b7e1e678a817b75", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/84596\n+// { dg-do compile { target c++11 } }\n+\n+template<int x>\n+struct a {\n+  constexpr void b() {\n+    int c;\n+    static_assert(c %= 1, \"\");\n+  }\n+};"}]}