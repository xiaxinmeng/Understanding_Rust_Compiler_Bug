{"sha": "2e676d7878ee6adf8b91dcb45462ee1459f6e2f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU2NzZkNzg3OGVlNmFkZjhiOTFkY2I0NTQ2MmVlMTQ1OWY2ZTJmOQ==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@redhat.com", "date": "2002-04-18T11:29:19Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2002-04-18T11:29:19Z"}, "message": "Prevent aborts taking a vector mode subreg of a constant integer\n\nFrom-SVN: r52467", "tree": {"sha": "bc5dc7d2596384fcf5c8a0a2862ebb3eb3ea27fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc5dc7d2596384fcf5c8a0a2862ebb3eb3ea27fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e676d7878ee6adf8b91dcb45462ee1459f6e2f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e676d7878ee6adf8b91dcb45462ee1459f6e2f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e676d7878ee6adf8b91dcb45462ee1459f6e2f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e676d7878ee6adf8b91dcb45462ee1459f6e2f9/comments", "author": null, "committer": null, "parents": [{"sha": "3d980b9f8a6e5d62881a9266386dce8e5553e161", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d980b9f8a6e5d62881a9266386dce8e5553e161", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d980b9f8a6e5d62881a9266386dce8e5553e161"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "799f4c87a7dd1b60cbfc36fb9072e33f88ac9517", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e676d7878ee6adf8b91dcb45462ee1459f6e2f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e676d7878ee6adf8b91dcb45462ee1459f6e2f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e676d7878ee6adf8b91dcb45462ee1459f6e2f9", "patch": "@@ -4,6 +4,10 @@\n \t(handle_vector_size_attribute): Use it to avoid generating a\n \tnew type node each time we are called.\n \n+\t* combine.c (subst): Avoid trying to make a vector mode subreg of\n+\tan integer constant.\n+\t(gen_lowpart_for_combine): Likewise.\n+\t\t\t\n 2002-04-18  Roger Sayle  <roger@eyesopen.com>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "67f62908e5333ba05ccfa4ba327bbb746931c38c", "filename": "gcc/combine.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e676d7878ee6adf8b91dcb45462ee1459f6e2f9/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e676d7878ee6adf8b91dcb45462ee1459f6e2f9/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=2e676d7878ee6adf8b91dcb45462ee1459f6e2f9", "patch": "@@ -3538,6 +3538,9 @@ subst (x, from, to, in_dest, unique_copy)\n \n \t      if (GET_CODE (new) == CONST_INT && GET_CODE (x) == SUBREG)\n \t\t{\n+\t\t  if (VECTOR_MODE_P (GET_MODE (x)))\n+\t\t    return gen_rtx_CLOBBER (VOIDmode, const0_rtx);\n+\n \t\t  x = simplify_subreg (GET_MODE (x), new,\n \t\t\t\t       GET_MODE (SUBREG_REG (x)),\n \t\t\t\t       SUBREG_BYTE (x));\n@@ -9800,6 +9803,12 @@ gen_lowpart_for_combine (mode, x)\n \t    || GET_MODE_SIZE (GET_MODE (x)) == GET_MODE_SIZE (mode)))\n     return gen_rtx_CLOBBER (GET_MODE (x), const0_rtx);\n \n+  /* simplify_gen_subreg does not know how to handle the case where we try\n+     to convert an integer constant to a vector.\n+     ??? We could try to teach it to generate CONST_VECTORs.  */\n+  if (GET_MODE (x) == VOIDmode && VECTOR_MODE_P (mode))\n+    return gen_rtx_CLOBBER (GET_MODE (x), const0_rtx);\n+\n   /* X might be a paradoxical (subreg (mem)).  In that case, gen_lowpart\n      won't know what to do.  So we will strip off the SUBREG here and\n      process normally.  */"}]}