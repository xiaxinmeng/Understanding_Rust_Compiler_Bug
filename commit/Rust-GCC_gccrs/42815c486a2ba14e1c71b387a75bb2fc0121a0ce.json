{"sha": "42815c486a2ba14e1c71b387a75bb2fc0121a0ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI4MTVjNDg2YTJiYTE0ZTFjNzFiMzg3YTc1YmIyZmMwMTIxYTBjZQ==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-09-25T08:15:30Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-09-25T08:15:30Z"}, "message": "AVX-512. Add pd2dq and dq2pd converts.\n\ngcc/\n\t* config/i386/i386.c\n\t(avx512f_ufix_notruncv8dfv8si_mask_round): Rename to ...\n\t(ufix_notruncv8dfv8si2_mask_round): ... this.\n\t* config/i386/sse.md\n\t(define_insn \"avx512f_cvtdq2pd512_2): Update TARGET check.\n\t(define_insn \"avx_cvtdq2pd256_2\"): Add EVEX version.\n\t(define_insn \"sse2_cvtdq2pd<mask_name>\"): Add masking.\n\t(define_insn \"avx_cvtpd2dq256<mask_name>\"): Ditto.\n\t(define_expand \"sse2_cvtpd2dq\"): Delete.\n\t(define_insn \"sse2_cvtpd2dq<mask_name>\"): Add masking and\n\tmake 2nd operand const0 vector.\n\t(define_insn \"avx512f_ufix_notruncv8dfv8si<mask_name><round_name>\"):\n\tDelete.\n\t(define_mode_attr pd2udqsuff): New.\n\t(define_insn\n\t\"ufix_notrunc<mode><si2dfmodelower>2<mask_name><round_name>\"): Ditto.\n\t(define_insn \"ufix_notruncv2dfv2si2<mask_name>\"): Ditto.\n\t(define_insn \"*avx_cvttpd2dq256_2\"): Delete.\n\t(define_expand \"sse2_cvttpd2dq\"): Ditto.\n\t(define_insn \"sse2_cvttpd2dq<mask_name>\"): Add masking and\n\tmake 2nd operand const0 vector.\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r215584", "tree": {"sha": "da6df3957b721734c6e5d1d554455238200e1e72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da6df3957b721734c6e5d1d554455238200e1e72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42815c486a2ba14e1c71b387a75bb2fc0121a0ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42815c486a2ba14e1c71b387a75bb2fc0121a0ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42815c486a2ba14e1c71b387a75bb2fc0121a0ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42815c486a2ba14e1c71b387a75bb2fc0121a0ce/comments", "author": null, "committer": null, "parents": [{"sha": "356bbc4c20e346c2a513321b1bc8e9540876e6e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/356bbc4c20e346c2a513321b1bc8e9540876e6e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/356bbc4c20e346c2a513321b1bc8e9540876e6e0"}], "stats": {"total": 145, "additions": 82, "deletions": 63}, "files": [{"sha": "e7a932f274bd6d080551e436fd684d3a6276f89f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42815c486a2ba14e1c71b387a75bb2fc0121a0ce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42815c486a2ba14e1c71b387a75bb2fc0121a0ce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42815c486a2ba14e1c71b387a75bb2fc0121a0ce", "patch": "@@ -1,3 +1,34 @@\n+2014-09-25  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/i386.c\n+\t(avx512f_ufix_notruncv8dfv8si_mask_round): Rename to ...\n+\t(ufix_notruncv8dfv8si2_mask_round): ... this.\n+\t* config/i386/sse.md\n+\t(define_insn \"avx512f_cvtdq2pd512_2): Update TARGET check.\n+\t(define_insn \"avx_cvtdq2pd256_2\"): Add EVEX version.\n+\t(define_insn \"sse2_cvtdq2pd<mask_name>\"): Add masking.\n+\t(define_insn \"avx_cvtpd2dq256<mask_name>\"): Ditto.\n+\t(define_expand \"sse2_cvtpd2dq\"): Delete.\n+\t(define_insn \"sse2_cvtpd2dq<mask_name>\"): Add masking and\n+\tmake 2nd operand const0 vector.\n+\t(define_insn \"avx512f_ufix_notruncv8dfv8si<mask_name><round_name>\"):\n+\tDelete.\n+\t(define_mode_attr pd2udqsuff): New.\n+\t(define_insn\n+\t\"ufix_notrunc<mode><si2dfmodelower>2<mask_name><round_name>\"): Ditto.\n+\t(define_insn \"ufix_notruncv2dfv2si2<mask_name>\"): Ditto.\n+\t(define_insn \"*avx_cvttpd2dq256_2\"): Delete.\n+\t(define_expand \"sse2_cvttpd2dq\"): Ditto.\n+\t(define_insn \"sse2_cvttpd2dq<mask_name>\"): Add masking and\n+\tmake 2nd operand const0 vector.\n+\n 2014-09-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/63341"}, {"sha": "1aec70fe4ce855b3c46845d17bc2dd2dd5d3ca2f", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42815c486a2ba14e1c71b387a75bb2fc0121a0ce/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42815c486a2ba14e1c71b387a75bb2fc0121a0ce/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=42815c486a2ba14e1c71b387a75bb2fc0121a0ce", "patch": "@@ -30246,7 +30246,7 @@ static const struct builtin_description bdesc_round_args[] =\n   { OPTION_MASK_ISA_AVX512F, CODE_FOR_floatv16siv16sf2_mask_round, \"__builtin_ia32_cvtdq2ps512_mask\", IX86_BUILTIN_CVTDQ2PS512, UNKNOWN, (int) V16SF_FTYPE_V16SI_V16SF_HI_INT },\n   { OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_cvtpd2dq512_mask_round, \"__builtin_ia32_cvtpd2dq512_mask\", IX86_BUILTIN_CVTPD2DQ512, UNKNOWN, (int) V8SI_FTYPE_V8DF_V8SI_QI_INT },\n   { OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_cvtpd2ps512_mask_round,  \"__builtin_ia32_cvtpd2ps512_mask\", IX86_BUILTIN_CVTPD2PS512, UNKNOWN, (int) V8SF_FTYPE_V8DF_V8SF_QI_INT },\n-  { OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_ufix_notruncv8dfv8si_mask_round, \"__builtin_ia32_cvtpd2udq512_mask\", IX86_BUILTIN_CVTPD2UDQ512, UNKNOWN, (int) V8SI_FTYPE_V8DF_V8SI_QI_INT },\n+  { OPTION_MASK_ISA_AVX512F, CODE_FOR_ufix_notruncv8dfv8si2_mask_round, \"__builtin_ia32_cvtpd2udq512_mask\", IX86_BUILTIN_CVTPD2UDQ512, UNKNOWN, (int) V8SI_FTYPE_V8DF_V8SI_QI_INT },\n   { OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_vcvtph2ps512_mask_round,  \"__builtin_ia32_vcvtph2ps512_mask\", IX86_BUILTIN_CVTPH2PS512, UNKNOWN, (int) V16SF_FTYPE_V16HI_V16SF_HI_INT },\n   { OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_fix_notruncv16sfv16si_mask_round, \"__builtin_ia32_cvtps2dq512_mask\", IX86_BUILTIN_CVTPS2DQ512, UNKNOWN, (int) V16SI_FTYPE_V16SF_V16SI_HI_INT },\n   { OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_cvtps2pd512_mask_round, \"__builtin_ia32_cvtps2pd512_mask\", IX86_BUILTIN_CVTPS2PD512, UNKNOWN, (int) V8DF_FTYPE_V8SF_V8DF_QI_INT },"}, {"sha": "b2e1d4fa6db094162efe7ab4ebb73bb89c3be091", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 50, "deletions": 62, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42815c486a2ba14e1c71b387a75bb2fc0121a0ce/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42815c486a2ba14e1c71b387a75bb2fc0121a0ce/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=42815c486a2ba14e1c71b387a75bb2fc0121a0ce", "patch": "@@ -4463,33 +4463,33 @@\n \t\t       (const_int 2) (const_int 3)\n \t\t       (const_int 4) (const_int 5)\n \t\t       (const_int 6) (const_int 7)]))))]\n-  \"TARGET_AVX\"\n+  \"TARGET_AVX512F\"\n   \"vcvtdq2pd\\t{%t1, %0|%0, %t1}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"V8DF\")])\n \n (define_insn \"avx_cvtdq2pd256_2\"\n-  [(set (match_operand:V4DF 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V4DF 0 \"register_operand\" \"=v\")\n \t(float:V4DF\n \t  (vec_select:V4SI\n-\t    (match_operand:V8SI 1 \"nonimmediate_operand\" \"xm\")\n+\t    (match_operand:V8SI 1 \"nonimmediate_operand\" \"vm\")\n \t    (parallel [(const_int 0) (const_int 1)\n \t\t       (const_int 2) (const_int 3)]))))]\n   \"TARGET_AVX\"\n   \"vcvtdq2pd\\t{%x1, %0|%0, %x1}\"\n   [(set_attr \"type\" \"ssecvt\")\n-   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"prefix\" \"maybe_evex\")\n    (set_attr \"mode\" \"V4DF\")])\n \n-(define_insn \"sse2_cvtdq2pd\"\n-  [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n+(define_insn \"sse2_cvtdq2pd<mask_name>\"\n+  [(set (match_operand:V2DF 0 \"register_operand\" \"=v\")\n \t(float:V2DF\n \t  (vec_select:V2SI\n-\t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"xm\")\n+\t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"vm\")\n \t    (parallel [(const_int 0) (const_int 1)]))))]\n-  \"TARGET_SSE2\"\n-  \"%vcvtdq2pd\\t{%1, %0|%0, %q1}\"\n+  \"TARGET_SSE2 && <mask_avx512vl_condition>\"\n+  \"%vcvtdq2pd\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %q1}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"ssememalign\" \"64\")\n@@ -4506,14 +4506,14 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_insn \"avx_cvtpd2dq256\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n-\t(unspec:V4SI [(match_operand:V4DF 1 \"nonimmediate_operand\" \"xm\")]\n+(define_insn \"avx_cvtpd2dq256<mask_name>\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+\t(unspec:V4SI [(match_operand:V4DF 1 \"nonimmediate_operand\" \"vm\")]\n \t\t     UNSPEC_FIX_NOTRUNC))]\n-  \"TARGET_AVX\"\n-  \"vcvtpd2dq{y}\\t{%1, %0|%0, %1}\"\n+  \"TARGET_AVX && <mask_avx512vl_condition>\"\n+  \"vcvtpd2dq{y}\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n-   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"prefix\" \"<mask_prefix>\")\n    (set_attr \"mode\" \"OI\")])\n \n (define_expand \"avx_cvtpd2dq256_2\"\n@@ -4538,25 +4538,16 @@\n    (set_attr \"btver2_decode\" \"vector\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_expand \"sse2_cvtpd2dq\"\n-  [(set (match_operand:V4SI 0 \"register_operand\")\n-\t(vec_concat:V4SI\n-\t  (unspec:V2SI [(match_operand:V2DF 1 \"nonimmediate_operand\")]\n-\t\t       UNSPEC_FIX_NOTRUNC)\n-\t  (match_dup 2)))]\n-  \"TARGET_SSE2\"\n-  \"operands[2] = CONST0_RTX (V2SImode);\")\n-\n-(define_insn \"*sse2_cvtpd2dq\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n+(define_insn \"sse2_cvtpd2dq<mask_name>\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n \t(vec_concat:V4SI\n-\t  (unspec:V2SI [(match_operand:V2DF 1 \"nonimmediate_operand\" \"xm\")]\n+\t  (unspec:V2SI [(match_operand:V2DF 1 \"nonimmediate_operand\" \"vm\")]\n \t\t       UNSPEC_FIX_NOTRUNC)\n-\t  (match_operand:V2SI 2 \"const0_operand\")))]\n-  \"TARGET_SSE2\"\n+\t  (const_vector:V2SI [(const_int 0) (const_int 0)])))]\n+  \"TARGET_SSE2 && <mask_avx512vl_condition>\"\n {\n   if (TARGET_AVX)\n-    return \"vcvtpd2dq{x}\\t{%1, %0|%0, %1}\";\n+    return \"vcvtpd2dq{x}\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\";\n   else\n     return \"cvtpd2dq\\t{%1, %0|%0, %1}\";\n }\n@@ -4569,16 +4560,33 @@\n    (set_attr \"athlon_decode\" \"vector\")\n    (set_attr \"bdver1_decode\" \"double\")])\n \n-(define_insn \"avx512f_ufix_notruncv8dfv8si<mask_name><round_name>\"\n-  [(set (match_operand:V8SI 0 \"register_operand\" \"=v\")\n-\t(unspec:V8SI\n-\t  [(match_operand:V8DF 1 \"<round_nimm_predicate>\" \"<round_constraint>\")]\n+;; For ufix_notrunc* insn patterns\n+(define_mode_attr pd2udqsuff\n+  [(V8DF \"\") (V4DF \"{y}\")])\n+\n+(define_insn \"ufix_notrunc<mode><si2dfmodelower>2<mask_name><round_name>\"\n+  [(set (match_operand:<si2dfmode> 0 \"register_operand\" \"=v\")\n+\t(unspec:<si2dfmode>\n+\t  [(match_operand:VF2_512_256VL 1 \"nonimmediate_operand\" \"<round_constraint>\")]\n \t  UNSPEC_UNSIGNED_FIX_NOTRUNC))]\n   \"TARGET_AVX512F\"\n-  \"vcvtpd2udq\\t{<round_mask_op2>%1, %0<mask_operand2>|%0<mask_operand2>, %1<round_mask_op2>}\"\n+  \"vcvtpd2udq<pd2udqsuff>\\t{<round_mask_op2>%1, %0<mask_operand2>|%0<mask_operand2>, %1<round_mask_op2>}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"prefix\" \"evex\")\n-   (set_attr \"mode\" \"OI\")])\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n+(define_insn \"ufix_notruncv2dfv2si2<mask_name>\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+\t(vec_concat:V4SI\n+\t  (unspec:V2SI\n+\t    [(match_operand:V2DF 1 \"nonimmediate_operand\" \"vm\")]\n+\t    UNSPEC_UNSIGNED_FIX_NOTRUNC)\n+\t  (const_vector:V2SI [(const_int 0) (const_int 0)])))]\n+  \"TARGET_AVX512VL\"\n+  \"vcvtpd2udq{x}\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n \n (define_insn \"<fixsuffix>fix_truncv8dfv8si2<mask_name><round_saeonly_name>\"\n   [(set (match_operand:V8SI 0 \"register_operand\" \"=v\")\n@@ -4659,35 +4667,15 @@\n   \"TARGET_AVX\"\n   \"operands[2] = CONST0_RTX (V4SImode);\")\n \n-(define_insn \"*avx_cvttpd2dq256_2\"\n-  [(set (match_operand:V8SI 0 \"register_operand\" \"=x\")\n-\t(vec_concat:V8SI\n-\t  (fix:V4SI (match_operand:V4DF 1 \"nonimmediate_operand\" \"xm\"))\n-\t  (match_operand:V4SI 2 \"const0_operand\")))]\n-  \"TARGET_AVX\"\n-  \"vcvttpd2dq{y}\\t{%1, %x0|%x0, %1}\"\n-  [(set_attr \"type\" \"ssecvt\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"btver2_decode\" \"vector\")\n-   (set_attr \"mode\" \"OI\")])\n-\n-(define_expand \"sse2_cvttpd2dq\"\n-  [(set (match_operand:V4SI 0 \"register_operand\")\n-\t(vec_concat:V4SI\n-\t  (fix:V2SI (match_operand:V2DF 1 \"nonimmediate_operand\"))\n-\t  (match_dup 2)))]\n-  \"TARGET_SSE2\"\n-  \"operands[2] = CONST0_RTX (V2SImode);\")\n-\n-(define_insn \"*sse2_cvttpd2dq\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n+(define_insn \"sse2_cvttpd2dq<mask_name>\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n \t(vec_concat:V4SI\n-\t  (fix:V2SI (match_operand:V2DF 1 \"nonimmediate_operand\" \"xm\"))\n-\t  (match_operand:V2SI 2 \"const0_operand\")))]\n-  \"TARGET_SSE2\"\n+\t  (fix:V2SI (match_operand:V2DF 1 \"nonimmediate_operand\" \"vm\"))\n+\t  (const_vector:V2SI [(const_int 0) (const_int 0)])))]\n+  \"TARGET_SSE2 && <mask_avx512vl_condition>\"\n {\n   if (TARGET_AVX)\n-    return \"vcvttpd2dq{x}\\t{%1, %0|%0, %1}\";\n+    return \"vcvttpd2dq{x}\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\";\n   else\n     return \"cvttpd2dq\\t{%1, %0|%0, %1}\";\n }"}]}