{"sha": "442db27632e461ace26b61e968dfd8e7ab085e38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQyZGIyNzYzMmU0NjFhY2UyNmI2MWU5NjhkZmQ4ZTdhYjA4NWUzOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-12-20T19:41:38Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-12-20T19:41:38Z"}, "message": "re PR ipa/83506 (ICE: Segmentation fault in force_nonfallthru_and_redirect)\n\n\tPR ipa/83506\n\t* ipa-fnsummary.c (pass_data_ipa_free_fn_summary): Use 0 for\n\ttodo_flags_finish.\n\t(pass_ipa_free_fn_summary): Add small_p private data member,\n\tinitialize to false in the ctor.\n\t(pass_ipa_free_fn_summary::clone,\n\tpass_ipa_free_fn_summary::set_pass_param,\n\tpass_ipa_free_fn_summary::gate): New methods.\n\t(pass_ipa_free_fn_summary::execute): Return TODO_remove_functions\n\t| TODO_dump_symtab if small_p.\n\t* passes.def: Add true parm for the existing pass_ipa_free_fn_summary\n\tentry and add another instance of the pass with false parm after\n\tipa-pure-const.\n\t* ipa-pure-const.c (pass_ipa_pure_const): Don't call\n\tipa_free_fn_summary here.\n\n\t* gcc.dg/pr83506.c: New test.\n\t* gcc.dg/ipa/ctor-empty-1.c: Use -fdump-ipa-free-fnsummary1 instead\n\tof -fdump-ipa-free-fnsummary and scan in free-fnsummary1 instead of\n\tfree-fnsummary dump.\n\nFrom-SVN: r255901", "tree": {"sha": "1ea9330f0c107d992164ebdf556f86e90bdcccd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ea9330f0c107d992164ebdf556f86e90bdcccd7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/442db27632e461ace26b61e968dfd8e7ab085e38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442db27632e461ace26b61e968dfd8e7ab085e38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/442db27632e461ace26b61e968dfd8e7ab085e38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442db27632e461ace26b61e968dfd8e7ab085e38/comments", "author": null, "committer": null, "parents": [{"sha": "76a2bcdcd82326736301cba35250bb1a7fa841c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76a2bcdcd82326736301cba35250bb1a7fa841c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76a2bcdcd82326736301cba35250bb1a7fa841c1"}], "stats": {"total": 77, "additions": 62, "deletions": 15}, "files": [{"sha": "43c062e1eddfcb7b568e9b1700d16a43e70a4631", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442db27632e461ace26b61e968dfd8e7ab085e38/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442db27632e461ace26b61e968dfd8e7ab085e38/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=442db27632e461ace26b61e968dfd8e7ab085e38", "patch": "@@ -1,3 +1,21 @@\n+2017-12-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR ipa/83506\n+\t* ipa-fnsummary.c (pass_data_ipa_free_fn_summary): Use 0 for\n+\ttodo_flags_finish.\n+\t(pass_ipa_free_fn_summary): Add small_p private data member,\n+\tinitialize to false in the ctor.\n+\t(pass_ipa_free_fn_summary::clone,\n+\tpass_ipa_free_fn_summary::set_pass_param,\n+\tpass_ipa_free_fn_summary::gate): New methods.\n+\t(pass_ipa_free_fn_summary::execute): Return TODO_remove_functions\n+\t| TODO_dump_symtab if small_p.\n+\t* passes.def: Add true parm for the existing pass_ipa_free_fn_summary\n+\tentry and add another instance of the pass with false parm after\n+\tipa-pure-const.\n+\t* ipa-pure-const.c (pass_ipa_pure_const): Don't call\n+\tipa_free_fn_summary here.\n+\n 2017-12-20  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* gimplify.c (gimplify_return_expr): Remove dead error_mark_node check.\n@@ -3102,7 +3120,7 @@\n \t* config/xtensa/xtensa.h (FRAME_GROWS_DOWNWARD): Set to 1 if\n \tASAN is enabled.\n \n-2017-12-05  Richard Biener   <rguenther@suse.de>\n+2017-12-05  Richard Biener  <rguenther@suse.de>\n \n \t* timevar.def (TV_TREE_RECIP, TV_TREE_SINCOS, TV_TREE_WIDEN_MUL): Add.\n \t* tree-ssa-math-opts.c (pass_data_cse_reciprocal): Use TV_TREE_RECIP."}, {"sha": "941503121058d1c449de12e79465e7814752d06d", "filename": "gcc/ipa-fnsummary.c", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442db27632e461ace26b61e968dfd8e7ab085e38/gcc%2Fipa-fnsummary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442db27632e461ace26b61e968dfd8e7ab085e38/gcc%2Fipa-fnsummary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-fnsummary.c?ref=442db27632e461ace26b61e968dfd8e7ab085e38", "patch": "@@ -3538,26 +3538,36 @@ const pass_data pass_data_ipa_free_fn_summary =\n   0, /* properties_provided */\n   0, /* properties_destroyed */\n   0, /* todo_flags_start */\n-  /* Early optimizations may make function unreachable.  We can not\n-     remove unreachable functions as part of the ealry opts pass because\n-     TODOs are run before subpasses.  Do it here.  */\n-  ( TODO_remove_functions | TODO_dump_symtab ), /* todo_flags_finish */\n+  0, /* todo_flags_finish */\n };\n \n class pass_ipa_free_fn_summary : public simple_ipa_opt_pass\n {\n public:\n   pass_ipa_free_fn_summary (gcc::context *ctxt)\n-    : simple_ipa_opt_pass (pass_data_ipa_free_fn_summary, ctxt)\n+    : simple_ipa_opt_pass (pass_data_ipa_free_fn_summary, ctxt),\n+      small_p (false)\n   {}\n \n   /* opt_pass methods: */\n+  opt_pass *clone () { return new pass_ipa_free_fn_summary (m_ctxt); }\n+  void set_pass_param (unsigned int n, bool param)\n+    {\n+      gcc_assert (n == 0);\n+      small_p = param;\n+    }\n+  virtual bool gate (function *) { return small_p || !flag_wpa; }\n   virtual unsigned int execute (function *)\n     {\n       ipa_free_fn_summary ();\n-      return 0;\n+      /* Early optimizations may make function unreachable.  We can not\n+\t remove unreachable functions as part of the early opts pass because\n+\t TODOs are run before subpasses.  Do it here.  */\n+      return small_p ? TODO_remove_functions | TODO_dump_symtab : 0;\n     }\n \n+private:\n+  bool small_p;\n }; // class pass_ipa_free_fn_summary\n \n } // anon namespace"}, {"sha": "09ca3590039b0f0cf28739d41bc096b48aeb0622", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442db27632e461ace26b61e968dfd8e7ab085e38/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442db27632e461ace26b61e968dfd8e7ab085e38/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=442db27632e461ace26b61e968dfd8e7ab085e38", "patch": "@@ -2013,10 +2013,6 @@ execute (function *)\n     if (has_function_state (node))\n       free (get_function_state (node));\n   funct_state_vec.release ();\n-\n-  /* In WPA we use inline summaries for partitioning process.  */\n-  if (!flag_wpa)\n-    ipa_free_fn_summary ();\n   return remove_p ? TODO_remove_functions : 0;\n }\n "}, {"sha": "46078254ba813f2c61a5a5edcdb9bb17a87e229a", "filename": "gcc/passes.def", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442db27632e461ace26b61e968dfd8e7ab085e38/gcc%2Fpasses.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442db27632e461ace26b61e968dfd8e7ab085e38/gcc%2Fpasses.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.def?ref=442db27632e461ace26b61e968dfd8e7ab085e38", "patch": "@@ -144,7 +144,7 @@ along with GCC; see the file COPYING3.  If not see\n   PUSH_INSERT_PASSES_WITHIN (pass_ipa_tree_profile)\n       NEXT_PASS (pass_feedback_split_functions);\n   POP_INSERT_PASSES ()\n-  NEXT_PASS (pass_ipa_free_fn_summary);\n+  NEXT_PASS (pass_ipa_free_fn_summary, true /* small_p */);\n   NEXT_PASS (pass_ipa_increase_alignment);\n   NEXT_PASS (pass_ipa_tm);\n   NEXT_PASS (pass_ipa_lower_emutls);\n@@ -161,6 +161,7 @@ along with GCC; see the file COPYING3.  If not see\n   NEXT_PASS (pass_ipa_fn_summary);\n   NEXT_PASS (pass_ipa_inline);\n   NEXT_PASS (pass_ipa_pure_const);\n+  NEXT_PASS (pass_ipa_free_fn_summary, false /* small_p */);\n   NEXT_PASS (pass_ipa_reference);\n   /* This pass needs to be scheduled after any IP code duplication.   */\n   NEXT_PASS (pass_ipa_single_use);"}, {"sha": "f063f26c225007df6d964576eec59f069a76e6cc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442db27632e461ace26b61e968dfd8e7ab085e38/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442db27632e461ace26b61e968dfd8e7ab085e38/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=442db27632e461ace26b61e968dfd8e7ab085e38", "patch": "@@ -1,3 +1,11 @@\n+2017-12-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR ipa/83506\n+\t* gcc.dg/pr83506.c: New test.\n+\t* gcc.dg/ipa/ctor-empty-1.c: Use -fdump-ipa-free-fnsummary1 instead\n+\tof -fdump-ipa-free-fnsummary and scan in free-fnsummary1 instead of\n+\tfree-fnsummary dump.\n+\n 2017-12-20  Martin Sebor  <msebor@redhat.com>\n \n \tPR testsuite/83483\n@@ -4364,7 +4372,7 @@\n \t* g++.dg/pr82725.C: Move to ...\n \t* g++.dg/cpp0x/pr82725.C: ... here.  Add c++11 target directive.\n \n-2017-10-30  Steven G. Kargl   <kargl@gcc.gnu.org>\n+2017-10-30  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \t* gfortran.dg/dtio_13.f90: Remove TODO comment and dg-error test.\n "}, {"sha": "264ca3f0349c776fc2b5cf8eca6ccaf1b199d06d", "filename": "gcc/testsuite/gcc.dg/ipa/ctor-empty-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442db27632e461ace26b61e968dfd8e7ab085e38/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fctor-empty-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442db27632e461ace26b61e968dfd8e7ab085e38/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fctor-empty-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fctor-empty-1.c?ref=442db27632e461ace26b61e968dfd8e7ab085e38", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O3 -c -fdump-ipa-free-fnsummary\"  } */\n+/* { dg-options \"-O3 -c -fdump-ipa-free-fnsummary1\"  } */\n static __attribute__((constructor))\n void empty_constructor()\n {\n }\n-/* { dg-final { scan-ipa-dump \"Reclaiming functions: empty_constructor\"  \"free-fnsummary\"  } } */\n+/* { dg-final { scan-ipa-dump \"Reclaiming functions: empty_constructor\"  \"free-fnsummary1\"  } } */"}, {"sha": "b138c9d3ae71cba2ee27e4d03a0a4407dba488fd", "filename": "gcc/testsuite/gcc.dg/pr83506.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442db27632e461ace26b61e968dfd8e7ab085e38/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83506.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442db27632e461ace26b61e968dfd8e7ab085e38/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83506.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83506.c?ref=442db27632e461ace26b61e968dfd8e7ab085e38", "patch": "@@ -0,0 +1,14 @@\n+/* PR ipa/83506 */\n+/* { dg-do compile { target pthread } } */\n+/* { dg-options \"-O1 -ftree-parallelize-loops=2 -fno-ipa-pure-const\" } */\n+\n+unsigned int\n+foo (unsigned int x, int y)\n+{\n+  while (y < 1)\n+    {\n+      x *= 3;\n+      ++y;\n+    }\n+  return x;\n+}"}]}