{"sha": "1e77fd4f1732247b4778aa7ff3b7d1e6f777ef32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU3N2ZkNGYxNzMyMjQ3YjQ3NzhhYTdmZjNiN2QxZTZmNzc3ZWYzMg==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-08-30T00:16:44Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-08-30T00:16:44Z"}, "message": "Daily bump.", "tree": {"sha": "e36586fb4a1df6746a0520f38047c37fa453939c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e36586fb4a1df6746a0520f38047c37fa453939c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e77fd4f1732247b4778aa7ff3b7d1e6f777ef32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e77fd4f1732247b4778aa7ff3b7d1e6f777ef32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e77fd4f1732247b4778aa7ff3b7d1e6f777ef32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e77fd4f1732247b4778aa7ff3b7d1e6f777ef32/comments", "author": null, "committer": null, "parents": [{"sha": "392e141079a198c93b19bfcd1fe2bd5df456c999", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/392e141079a198c93b19bfcd1fe2bd5df456c999", "html_url": "https://github.com/Rust-GCC/gccrs/commit/392e141079a198c93b19bfcd1fe2bd5df456c999"}], "stats": {"total": 107, "additions": 106, "deletions": 1}, "files": [{"sha": "59f0debb81156fd3529c1a0d1a601cfa13e25600", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e77fd4f1732247b4778aa7ff3b7d1e6f777ef32/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e77fd4f1732247b4778aa7ff3b7d1e6f777ef32/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e77fd4f1732247b4778aa7ff3b7d1e6f777ef32", "patch": "@@ -1,3 +1,13 @@\n+2021-08-29  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/darwin.c (darwin_libc_has_function): Do not run\n+\tthe checks for x86 or modern Darwin.  Make sure that there\n+\tis a value set for darwin_macosx_version_min before testing.\n+\n+2021-08-29  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/i386/darwin.h (CLEAR_INSN_CACHE): New.\n+\n 2021-08-28  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-modref-tree.h (modref_access_node::merge): Break out"}, {"sha": "3734a89f500b0a9c40815949d115369b2a480ba7", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e77fd4f1732247b4778aa7ff3b7d1e6f777ef32/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e77fd4f1732247b4778aa7ff3b7d1e6f777ef32/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=1e77fd4f1732247b4778aa7ff3b7d1e6f777ef32", "patch": "@@ -1 +1 @@\n-20210829\n+20210830"}, {"sha": "1e254c7cee50b47f48862d4f416258648ffc2f78", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e77fd4f1732247b4778aa7ff3b7d1e6f777ef32/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e77fd4f1732247b4778aa7ff3b7d1e6f777ef32/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=1e77fd4f1732247b4778aa7ff3b7d1e6f777ef32", "patch": "@@ -1,3 +1,68 @@\n+2021-08-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc: Include dmd/module.h.\n+\t(build_filename_from_loc): New function.\n+\t(d_assert_call): Rename to...\n+\t(build_assert_call): ...this.\n+\t(build_array_bounds_call): Call arrayboundsp variant of the array\n+\tbounds failure callback.\n+\t(build_bounds_condition): Rename to...\n+\t(build_bounds_index_condition): ...this.  Update signature.\n+\t(build_bounds_slice_condition): New function.\n+\t(checkaction_trap_p): New function.\n+\t(d_assert_call): Call assertp variant of assert failure callback.\n+\t* d-tree.h (class IndexExp): Declare.\n+\t(class SliceExp): Declare.\n+\t(build_bounds_condition): Remove.\n+\t(build_assert_call): Declare.\n+\t(build_bounds_index_condition): Declare.\n+\t(build_bounds_slice_condition): Declare.\n+\t(checkaction_trap_p): Declare.\n+\t(d_assert_call): Remove.\n+\t* expr.cc (ExprVisitor::visit(IndexExp *)): Call\n+\tbuild_bounds_index_condition.\n+\t(ExprVisitor::visit(SliceExp *)): Call build_bounds_slice_condition.\n+\t(ExprVisitor::visit(AssertExp *)): Update setting of libcall.\n+\t* runtime.cc (enum d_libcall_type): Add LCT_IMMUTABLE_CHARPTR.\n+\t(get_libcall_type): Handle LCT_IMMUTABLE_CHARPTR.\n+\t* runtime.def (ASSERT): Rename to...\n+\t(ASSERTP): ...this.  Update signature.\n+\t(UNITTEST): Rename to...\n+\t(UNITTESTP): ...this.  Update signature.\n+\t(ARRAY_BOUNDS): Rename to...\n+\t(ARRAYBOUNDSP): ...this.  Updates signature.\n+\t* toir.cc (IRVisitor::visit(SwitchErrorStatement *)): Update call.\n+\n+2021-08-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* typeinfo.cc (class TypeInfoVisitor::layout_base): Update comment.\n+\n+2021-08-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* typeinfo.cc (TypeInfoVisitor::visit(TypeInfoClassDeclaration *)):\n+\tUse int to store type flags.\n+\t(TypeInfoVisitor::visit(TypeInfoStructDeclaration *)): Likewise.\n+\n+2021-08-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* types.cc (TypeVisitor::visit(TypeEnum*)): Get wchar_t type from\n+\tbuild_frontend_type.\n+\n+2021-08-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-convert.cc (convert_for_rvalue): Convert switch statement into if\n+\tcondition.\n+\n+2021-08-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (d_init_versions): Use POINTER_SIZE for testing\n+\twhether to predefine D_LP64.\n+\n+2021-08-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/102094\n+\t* d-codegen.cc (build_frame_type): Set TYPE_CXX_ODR_P.\n+\n 2021-08-25  Lewis Hyatt  <lhyatt@gmail.com>\n \n \tPR other/93067"}, {"sha": "54b34e7bf4ee1194c45cfcc7c35dba0eaa4868fa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e77fd4f1732247b4778aa7ff3b7d1e6f777ef32/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e77fd4f1732247b4778aa7ff3b7d1e6f777ef32/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1e77fd4f1732247b4778aa7ff3b7d1e6f777ef32", "patch": "@@ -1,3 +1,13 @@\n+2021-08-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/102094\n+\t* gdc.dg/lto/pr102094_0.d: New test.\n+\n+2021-08-29  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* gcc.dg/analyzer/strndup-1.c: Skip for Darwin versions\n+\twithout strndup support in libc.\n+\n 2021-08-28  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* gcc.dg/tree-ssa/modref-9.c: New test."}, {"sha": "ced7173569dcef4b367f6ece40b9393ef9bf7081", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e77fd4f1732247b4778aa7ff3b7d1e6f777ef32/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e77fd4f1732247b4778aa7ff3b7d1e6f777ef32/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=1e77fd4f1732247b4778aa7ff3b7d1e6f777ef32", "patch": "@@ -1,3 +1,23 @@\n+2021-08-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-demangle.c (dlang_identifier): Skip over fake parent manglings.\n+\t* testsuite/d-demangle-expected: Add tests.\n+\n+2021-08-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-demangle.c (dlang_parse_arrayliteral): Add 'info' parameter.\n+\t(dlang_parse_assocarray): Likewise.\n+\t(dlang_parse_structlit): Likewise.\n+\t(dlang_value): Likewise.  Handle function literal symbols.\n+\t(dlang_template_args): Pass 'info' to dlang_value.\n+\t* testsuite/d-demangle-expected: Add new test.\n+\n+2021-08-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-demangle.c (dlang_attributes): Handle typeof(*null).\n+\t(dlang_type): Likewise.  Demangle 'n' as typeof(null).\n+\t* testsuite/d-demangle-expected: Update tests.\n+\n 2021-08-23  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* simple-object-mach-o.c (simple_object_mach_o_write_segment):"}]}