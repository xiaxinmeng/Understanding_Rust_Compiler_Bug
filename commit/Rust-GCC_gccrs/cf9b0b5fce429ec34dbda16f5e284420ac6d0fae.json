{"sha": "cf9b0b5fce429ec34dbda16f5e284420ac6d0fae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y5YjBiNWZjZTQyOWVjMzRkYmRhMTZmNWUyODQ0MjBhYzZkMGZhZQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-06-08T12:14:02Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-06-08T12:14:02Z"}, "message": "Use summaries->get where possible. Small refactoring of multiple calls.\n\n2018-06-08  Martin Liska  <mliska@suse.cz>\n\n\t* ipa-fnsummary.c (dump_ipa_call_summary): Use ::get method.\n\t(analyze_function_body): Extract multiple calls of get_create.\n\t* ipa-inline-analysis.c (simple_edge_hints): Likewise.\n\t* ipa-inline.c (recursive_inlining): Use ::get method.\n\t* ipa-inline.h (estimate_edge_growth): Likewise.\n\nFrom-SVN: r261311", "tree": {"sha": "c0ac07d09e7711dbc59e447502abe2cc5e758bb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0ac07d09e7711dbc59e447502abe2cc5e758bb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf9b0b5fce429ec34dbda16f5e284420ac6d0fae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf9b0b5fce429ec34dbda16f5e284420ac6d0fae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf9b0b5fce429ec34dbda16f5e284420ac6d0fae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf9b0b5fce429ec34dbda16f5e284420ac6d0fae/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0148358a02a230ef250718b13180527701edf3ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0148358a02a230ef250718b13180527701edf3ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0148358a02a230ef250718b13180527701edf3ca"}], "stats": {"total": 39, "additions": 23, "deletions": 16}, "files": [{"sha": "d44a78d06b684f599b38ed640ea13198e2d4611d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9b0b5fce429ec34dbda16f5e284420ac6d0fae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9b0b5fce429ec34dbda16f5e284420ac6d0fae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cf9b0b5fce429ec34dbda16f5e284420ac6d0fae", "patch": "@@ -1,3 +1,11 @@\n+2018-06-08  Martin Liska  <mliska@suse.cz>\n+\n+\t* ipa-fnsummary.c (dump_ipa_call_summary): Use ::get method.\n+\t(analyze_function_body): Extract multiple calls of get_create.\n+\t* ipa-inline-analysis.c (simple_edge_hints): Likewise.\n+\t* ipa-inline.c (recursive_inlining): Use ::get method.\n+\t* ipa-inline.h (estimate_edge_growth): Likewise.\n+\n 2018-06-08  Martin Liska  <mliska@suse.cz>\n \n \t* hsa-common.h (enum hsa_function_kind): Rename HSA_NONE to"}, {"sha": "e40b537bf617f9355e8dfb9c3970ddd7370959ec", "filename": "gcc/ipa-fnsummary.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9b0b5fce429ec34dbda16f5e284420ac6d0fae/gcc%2Fipa-fnsummary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9b0b5fce429ec34dbda16f5e284420ac6d0fae/gcc%2Fipa-fnsummary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-fnsummary.c?ref=cf9b0b5fce429ec34dbda16f5e284420ac6d0fae", "patch": "@@ -850,7 +850,7 @@ dump_ipa_call_summary (FILE *f, int indent, struct cgraph_node *node,\n \t  }\n       if (!edge->inline_failed)\n \t{\n-\t  ipa_fn_summary *s = ipa_fn_summaries->get_create (callee);\n+\t  ipa_fn_summary *s = ipa_fn_summaries->get (callee);\n \t  fprintf (f, \"%*sStack frame offset %i, callee self size %i,\"\n \t\t   \" callee size %i\\n\",\n \t\t   indent + 2, \"\",\n@@ -2363,10 +2363,9 @@ analyze_function_body (struct cgraph_node *node, bool early)\n \t    }\n \t  free (body);\n \t}\n-      set_hint_predicate (&ipa_fn_summaries->get_create (node)->loop_iterations,\n-\t\t\t  loop_iterations);\n-      set_hint_predicate (&ipa_fn_summaries->get_create (node)->loop_stride,\n-\t\t\t  loop_stride);\n+      ipa_fn_summary *s = ipa_fn_summaries->get_create (node);\n+      set_hint_predicate (&s->loop_iterations, loop_iterations);\n+      set_hint_predicate (&s->loop_stride, loop_stride);\n       scev_finalize ();\n     }\n   FOR_ALL_BB_FN (bb, my_function)\n@@ -2384,8 +2383,9 @@ analyze_function_body (struct cgraph_node *node, bool early)\n \t  e->aux = NULL;\n \t}\n     }\n-  ipa_fn_summaries->get_create (node)->time = time;\n-  ipa_fn_summaries->get_create (node)->self_size = size;\n+  ipa_fn_summary *s = ipa_fn_summaries->get_create (node);\n+  s->time = time;\n+  s->self_size = size;\n   nonconstant_names.release ();\n   ipa_release_body_info (&fbi);\n   if (opt_for_fn (node->decl, optimize))"}, {"sha": "2e30a6d15baab06126f545e31dfc32aa1560c30a", "filename": "gcc/ipa-inline-analysis.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9b0b5fce429ec34dbda16f5e284420ac6d0fae/gcc%2Fipa-inline-analysis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9b0b5fce429ec34dbda16f5e284420ac6d0fae/gcc%2Fipa-inline-analysis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-analysis.c?ref=cf9b0b5fce429ec34dbda16f5e284420ac6d0fae", "patch": "@@ -126,7 +126,7 @@ simple_edge_hints (struct cgraph_edge *edge)\n \t\t\t    ? edge->caller->global.inlined_to : edge->caller);\n   struct cgraph_node *callee = edge->callee->ultimate_alias_target ();\n   if (ipa_fn_summaries->get_create (to)->scc_no\n-      && ipa_fn_summaries->get_create (to)->scc_no\n+      && ipa_fn_summaries->get (to)->scc_no\n \t == ipa_fn_summaries->get_create (callee)->scc_no\n       && !edge->recursive_p ())\n     hints |= INLINE_HINT_same_scc;"}, {"sha": "51044b7b612826421f77cfb3872e180681d75dff", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9b0b5fce429ec34dbda16f5e284420ac6d0fae/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9b0b5fce429ec34dbda16f5e284420ac6d0fae/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=cf9b0b5fce429ec34dbda16f5e284420ac6d0fae", "patch": "@@ -1559,10 +1559,10 @@ recursive_inlining (struct cgraph_edge *edge,\n     fprintf (dump_file,\n \t     \"\\n   Inlined %i times, \"\n \t     \"body grown from size %i to %i, time %f to %f\\n\", n,\n-\t     ipa_fn_summaries->get_create (master_clone)->size,\n-\t     ipa_fn_summaries->get_create (node)->size,\n-\t     ipa_fn_summaries->get_create (master_clone)->time.to_double (),\n-\t     ipa_fn_summaries->get_create (node)->time.to_double ());\n+\t     ipa_fn_summaries->get (master_clone)->size,\n+\t     ipa_fn_summaries->get (node)->size,\n+\t     ipa_fn_summaries->get (master_clone)->time.to_double (),\n+\t     ipa_fn_summaries->get (node)->time.to_double ());\n \n   /* Remove master clone we used for inlining.  We rely that clones inlined\n      into master clone gets queued just before master clone so we don't"}, {"sha": "06bd38e551e0faccdaa58a929261e5016791f172", "filename": "gcc/ipa-inline.h", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9b0b5fce429ec34dbda16f5e284420ac6d0fae/gcc%2Fipa-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9b0b5fce429ec34dbda16f5e284420ac6d0fae/gcc%2Fipa-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.h?ref=cf9b0b5fce429ec34dbda16f5e284420ac6d0fae", "patch": "@@ -81,10 +81,9 @@ estimate_edge_size (struct cgraph_edge *edge)\n static inline int\n estimate_edge_growth (struct cgraph_edge *edge)\n {\n-  gcc_checking_assert (ipa_call_summaries->get_create (edge)->call_stmt_size\n-\t\t       || !edge->callee->analyzed);\n-  return (estimate_edge_size (edge)\n-\t  - ipa_call_summaries->get_create (edge)->call_stmt_size);\n+  ipa_call_summary *s = ipa_call_summaries->get_create (edge);\n+  gcc_checking_assert (s->call_stmt_size || !edge->callee->analyzed);\n+  return (estimate_edge_size (edge) - s->call_stmt_size);\n }\n \n /* Return estimated callee runtime increase after inlining"}]}