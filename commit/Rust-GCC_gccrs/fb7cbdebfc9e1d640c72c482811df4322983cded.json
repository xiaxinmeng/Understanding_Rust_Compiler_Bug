{"sha": "fb7cbdebfc9e1d640c72c482811df4322983cded", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI3Y2JkZWJmYzllMWQ2NDBjNzJjNDgyODExZGY0MzIyOTgzY2RlZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-05-18T09:22:28Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-05-18T09:22:28Z"}, "message": "sse.md (avx2_pmaddubsw256, [...]): Add avx512bw alternative.\n\n\t* config/i386/sse.md (avx2_pmaddubsw256, ssse3_pmaddubsw128): Add\n\tavx512bw alternative.\n\n\t* gcc.target/i386/avx512bw-vpmaddubsw-3.c: New test.\n\nFrom-SVN: r236365", "tree": {"sha": "06e7e3a5a6fc9e90dd25585da70baedfde1ca25f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06e7e3a5a6fc9e90dd25585da70baedfde1ca25f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb7cbdebfc9e1d640c72c482811df4322983cded", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb7cbdebfc9e1d640c72c482811df4322983cded", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb7cbdebfc9e1d640c72c482811df4322983cded", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb7cbdebfc9e1d640c72c482811df4322983cded/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ae46837e197be9b99bc8ada79f37f1a7dd4b51f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ae46837e197be9b99bc8ada79f37f1a7dd4b51f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ae46837e197be9b99bc8ada79f37f1a7dd4b51f"}], "stats": {"total": 63, "additions": 52, "deletions": 11}, "files": [{"sha": "9e623c7461aef54755bf635eba64e5b1ae8f6c32", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb7cbdebfc9e1d640c72c482811df4322983cded/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb7cbdebfc9e1d640c72c482811df4322983cded/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb7cbdebfc9e1d640c72c482811df4322983cded", "patch": "@@ -1,3 +1,8 @@\n+2016-05-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/sse.md (avx2_pmaddubsw256, ssse3_pmaddubsw128): Add\n+\tavx512bw alternative.\n+\n 2016-05-18  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n         * gcc/config/i386/sse.md (define_insn \"*andnot<mode>3\"): Extend static"}, {"sha": "75c3d67921d50a349c9ae5e4a3a92fedc770a8ad", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb7cbdebfc9e1d640c72c482811df4322983cded/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb7cbdebfc9e1d640c72c482811df4322983cded/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=fb7cbdebfc9e1d640c72c482811df4322983cded", "patch": "@@ -13945,12 +13945,12 @@\n    (set_attr \"mode\" \"DI\")])\n \n (define_insn \"avx2_pmaddubsw256\"\n-  [(set (match_operand:V16HI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V16HI 0 \"register_operand\" \"=x,v\")\n \t(ss_plus:V16HI\n \t  (mult:V16HI\n \t    (zero_extend:V16HI\n \t      (vec_select:V16QI\n-\t\t(match_operand:V32QI 1 \"register_operand\" \"x\")\n+\t\t(match_operand:V32QI 1 \"register_operand\" \"x,v\")\n \t\t(parallel [(const_int 0) (const_int 2)\n \t\t\t   (const_int 4) (const_int 6)\n \t\t\t   (const_int 8) (const_int 10)\n@@ -13961,7 +13961,7 @@\n \t\t\t   (const_int 28) (const_int 30)])))\n \t    (sign_extend:V16HI\n \t      (vec_select:V16QI\n-\t\t(match_operand:V32QI 2 \"nonimmediate_operand\" \"xm\")\n+\t\t(match_operand:V32QI 2 \"nonimmediate_operand\" \"xm,vm\")\n \t\t(parallel [(const_int 0) (const_int 2)\n \t\t\t   (const_int 4) (const_int 6)\n \t\t\t   (const_int 8) (const_int 10)\n@@ -13993,9 +13993,10 @@\n \t\t\t   (const_int 29) (const_int 31)]))))))]\n   \"TARGET_AVX2\"\n   \"vpmaddubsw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n+  [(set_attr \"isa\" \"*,avx512bw\")\n+   (set_attr \"type\" \"sseiadd\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"prefix\" \"vex,evex\")\n    (set_attr \"mode\" \"OI\")])\n \n ;; The correct representation for this is absolutely enormous, and\n@@ -14048,19 +14049,19 @@\n    (set_attr \"mode\" \"XI\")])\n \n (define_insn \"ssse3_pmaddubsw128\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x,x\")\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"=x,x,v\")\n \t(ss_plus:V8HI\n \t  (mult:V8HI\n \t    (zero_extend:V8HI\n \t      (vec_select:V8QI\n-\t\t(match_operand:V16QI 1 \"register_operand\" \"0,x\")\n+\t\t(match_operand:V16QI 1 \"register_operand\" \"0,x,v\")\n \t\t(parallel [(const_int 0) (const_int 2)\n \t\t\t   (const_int 4) (const_int 6)\n \t\t\t   (const_int 8) (const_int 10)\n \t\t\t   (const_int 12) (const_int 14)])))\n \t    (sign_extend:V8HI\n \t      (vec_select:V8QI\n-\t\t(match_operand:V16QI 2 \"vector_operand\" \"xBm,xm\")\n+\t\t(match_operand:V16QI 2 \"vector_operand\" \"xBm,xm,vm\")\n \t\t(parallel [(const_int 0) (const_int 2)\n \t\t\t   (const_int 4) (const_int 6)\n \t\t\t   (const_int 8) (const_int 10)\n@@ -14081,13 +14082,14 @@\n   \"TARGET_SSSE3\"\n   \"@\n    pmaddubsw\\t{%2, %0|%0, %2}\n+   vpmaddubsw\\t{%2, %1, %0|%0, %1, %2}\n    vpmaddubsw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"isa\" \"noavx,avx\")\n+  [(set_attr \"isa\" \"noavx,avx,avx512bw\")\n    (set_attr \"type\" \"sseiadd\")\n    (set_attr \"atom_unit\" \"simul\")\n-   (set_attr \"prefix_data16\" \"1,*\")\n+   (set_attr \"prefix_data16\" \"1,*,*\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"orig,vex\")\n+   (set_attr \"prefix\" \"orig,vex,evex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"ssse3_pmaddubsw\""}, {"sha": "16db19c4c81ee80c3536439f87aebd1181747b02", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb7cbdebfc9e1d640c72c482811df4322983cded/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb7cbdebfc9e1d640c72c482811df4322983cded/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fb7cbdebfc9e1d640c72c482811df4322983cded", "patch": "@@ -1,3 +1,7 @@\n+2016-05-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.target/i386/avx512bw-vpmaddubsw-3.c: New test.\n+\n 2016-05-18  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/71168"}, {"sha": "24252e069f99f4bed37c953bc09200f3cfda19cf", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-vpmaddubsw-3.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb7cbdebfc9e1d640c72c482811df4322983cded/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpmaddubsw-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb7cbdebfc9e1d640c72c482811df4322983cded/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpmaddubsw-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpmaddubsw-3.c?ref=fb7cbdebfc9e1d640c72c482811df4322983cded", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -mavx512vl -mavx512bw\" } */\n+\n+#include <x86intrin.h>\n+\n+void\n+f1 (__m128i x, __m128i y)\n+{\n+  register __m128i a __asm (\"xmm16\"), b __asm (\"xmm17\");\n+  a = x;\n+  b = y;\n+  asm volatile (\"\" : \"+v\" (a), \"+v\" (b));\n+  a = _mm_maddubs_epi16 (a, b);\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler \"vpmaddubsw\\[^\\n\\r]*xmm1\\[67]\\[^\\n\\r]*xmm1\\[67]\\[^\\n\\r]*xmm1\\[67]\" } } */\n+\n+void\n+f2 (__m256i x, __m256i y)\n+{\n+  register __m256i a __asm (\"xmm16\"), b __asm (\"xmm17\");\n+  a = x;\n+  b = y;\n+  asm volatile (\"\" : \"+v\" (a), \"+v\" (b));\n+  a = _mm256_maddubs_epi16 (a, b);\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+/* { dg-final { scan-assembler \"vpmaddubsw\\[^\\n\\r]*ymm1\\[67]\\[^\\n\\r]*ymm1\\[67]\\[^\\n\\r]*ymm1\\[67]\" } } */"}]}