{"sha": "35c2682003f74070aab4098770c3444bac2586c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVjMjY4MjAwM2Y3NDA3MGFhYjQwOTg3NzBjMzQ0NGJhYzI1ODZjNA==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2010-10-06T14:08:48Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2010-10-06T14:08:48Z"}, "message": "rs6000.c (rs6000_expand_ternop_builtin): Rewrite switch on insn codes as sequence of ifs.\n\n        * config/rs6000/rs6000.c (rs6000_expand_ternop_builtin): Rewrite\n        switch on insn codes as sequence of ifs.\n\nFrom-SVN: r165025", "tree": {"sha": "e7a3421060e9aae3419dd2599cd38ce1859488fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7a3421060e9aae3419dd2599cd38ce1859488fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35c2682003f74070aab4098770c3444bac2586c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35c2682003f74070aab4098770c3444bac2586c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35c2682003f74070aab4098770c3444bac2586c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35c2682003f74070aab4098770c3444bac2586c4/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "adb18384bdd9a40483f03bed8389cd91ad03d0a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adb18384bdd9a40483f03bed8389cd91ad03d0a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adb18384bdd9a40483f03bed8389cd91ad03d0a4"}], "stats": {"total": 53, "additions": 30, "deletions": 23}, "files": [{"sha": "441293ce24755ab38d84ac8ec230715e7cb12cf9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35c2682003f74070aab4098770c3444bac2586c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35c2682003f74070aab4098770c3444bac2586c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35c2682003f74070aab4098770c3444bac2586c4", "patch": "@@ -1,3 +1,8 @@\n+2010-10-06  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_expand_ternop_builtin): Rewrite\n+\tswitch on insn codes as sequence of ifs.\n+\n 2010-10-06  Hariharan Sandanagobalane <hariharan@picochip.com>\n \t* config/picochip/picochip.c (TARGET_EXCEPT_UNWIND_INFO): Define it to\n \tbe UI_NONE for picochip."}, {"sha": "adc1d1350b42370d3266c41dd43964d20697e2c5", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 25, "deletions": 23, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35c2682003f74070aab4098770c3444bac2586c4/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35c2682003f74070aab4098770c3444bac2586c4/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=35c2682003f74070aab4098770c3444bac2586c4", "patch": "@@ -10904,12 +10904,18 @@ rs6000_expand_ternop_builtin (enum insn_code icode, tree exp, rtx target)\n       || arg2 == error_mark_node)\n     return const0_rtx;\n \n-  switch (icode)\n+  /* Check and prepare argument depending on the instruction code.\n+\n+     Note that a switch statement instead of the sequence of tests\n+     would be incorrect as many of the CODE_FOR values could be\n+     CODE_FOR_nothing and that would yield multiple alternatives\n+     with identical values.  We'd never reach here at runtime in\n+     this case.  */\n+  if (icode == CODE_FOR_altivec_vsldoi_v4sf\n+      || icode == CODE_FOR_altivec_vsldoi_v4si\n+      || icode == CODE_FOR_altivec_vsldoi_v8hi\n+      || icode == CODE_FOR_altivec_vsldoi_v16qi)\n     {\n-    case CODE_FOR_altivec_vsldoi_v4sf:\n-    case CODE_FOR_altivec_vsldoi_v4si:\n-    case CODE_FOR_altivec_vsldoi_v8hi:\n-    case CODE_FOR_altivec_vsldoi_v16qi:\n       /* Only allow 4-bit unsigned literals.  */\n       STRIP_NOPS (arg2);\n       if (TREE_CODE (arg2) != INTEGER_CST\n@@ -10918,16 +10924,16 @@ rs6000_expand_ternop_builtin (enum insn_code icode, tree exp, rtx target)\n \t  error (\"argument 3 must be a 4-bit unsigned literal\");\n \t  return const0_rtx;\n \t}\n-      break;\n-\n-    case CODE_FOR_vsx_xxpermdi_v2df:\n-    case CODE_FOR_vsx_xxpermdi_v2di:\n-    case CODE_FOR_vsx_xxsldwi_v16qi:\n-    case CODE_FOR_vsx_xxsldwi_v8hi:\n-    case CODE_FOR_vsx_xxsldwi_v4si:\n-    case CODE_FOR_vsx_xxsldwi_v4sf:\n-    case CODE_FOR_vsx_xxsldwi_v2di:\n-    case CODE_FOR_vsx_xxsldwi_v2df:\n+    }\n+  else if (icode == CODE_FOR_vsx_xxpermdi_v2df\n+           || icode == CODE_FOR_vsx_xxpermdi_v2di\n+           || icode == CODE_FOR_vsx_xxsldwi_v16qi\n+           || icode == CODE_FOR_vsx_xxsldwi_v8hi\n+           || icode == CODE_FOR_vsx_xxsldwi_v4si\n+           || icode == CODE_FOR_vsx_xxsldwi_v4sf\n+           || icode == CODE_FOR_vsx_xxsldwi_v2di\n+           || icode == CODE_FOR_vsx_xxsldwi_v2df)\n+    {\n       /* Only allow 2-bit unsigned literals.  */\n       STRIP_NOPS (arg2);\n       if (TREE_CODE (arg2) != INTEGER_CST\n@@ -10936,10 +10942,10 @@ rs6000_expand_ternop_builtin (enum insn_code icode, tree exp, rtx target)\n \t  error (\"argument 3 must be a 2-bit unsigned literal\");\n \t  return const0_rtx;\n \t}\n-      break;\n-\n-    case CODE_FOR_vsx_set_v2df:\n-    case CODE_FOR_vsx_set_v2di:\n+    }\n+  else if (icode == CODE_FOR_vsx_set_v2df\n+           || icode == CODE_FOR_vsx_set_v2di)\n+    {\n       /* Only allow 1-bit unsigned literals.  */\n       STRIP_NOPS (arg2);\n       if (TREE_CODE (arg2) != INTEGER_CST\n@@ -10948,10 +10954,6 @@ rs6000_expand_ternop_builtin (enum insn_code icode, tree exp, rtx target)\n \t  error (\"argument 3 must be a 1-bit unsigned literal\");\n \t  return const0_rtx;\n \t}\n-      break;\n-\n-    default:\n-      break;\n     }\n \n   if (target == 0"}]}