{"sha": "366356d3e6d0d8a33d6a47a559607c3755dc3b65", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY2MzU2ZDNlNmQwZDhhMzNkNmE0N2E1NTk2MDdjMzc1NWRjM2I2NQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2002-10-01T10:22:07Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2002-10-01T10:22:07Z"}, "message": "mips.c (mips16_strings): New variable.\n\n\t* config/mips/mips.c (mips16_strings): New variable.\n\t(mips_output_function_epilogue): Clear the SYMBOL_REF_FLAG of every\n\tsymbol in mips16_strings.  Free the list.\n\t(mips_encode_section_info): Keep track of local strings.\n\nFrom-SVN: r57685", "tree": {"sha": "0bd83637e26e03e5d6015c58f4cf74f00e2c905c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bd83637e26e03e5d6015c58f4cf74f00e2c905c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/366356d3e6d0d8a33d6a47a559607c3755dc3b65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/366356d3e6d0d8a33d6a47a559607c3755dc3b65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/366356d3e6d0d8a33d6a47a559607c3755dc3b65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/366356d3e6d0d8a33d6a47a559607c3755dc3b65/comments", "author": null, "committer": null, "parents": [{"sha": "8ab907e87cd30f515180b570a2178beaec93b4a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ab907e87cd30f515180b570a2178beaec93b4a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ab907e87cd30f515180b570a2178beaec93b4a4"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "4d7631dd723770155d186e4796024e56948511e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/366356d3e6d0d8a33d6a47a559607c3755dc3b65/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/366356d3e6d0d8a33d6a47a559607c3755dc3b65/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=366356d3e6d0d8a33d6a47a559607c3755dc3b65", "patch": "@@ -1,3 +1,10 @@\n+2002-10-01  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.c (mips16_strings): New variable.\n+\t(mips_output_function_epilogue): Clear the SYMBOL_REF_FLAG of every\n+\tsymbol in mips16_strings.  Free the list.\n+\t(mips_encode_section_info): Keep track of local strings.\n+\n 2002-10-01  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips.md (bunge, bltgt, bungt): New define_expands."}, {"sha": "3729c43d03e4e0e87bbc0045c845e11f740d1ab9", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/366356d3e6d0d8a33d6a47a559607c3755dc3b65/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/366356d3e6d0d8a33d6a47a559607c3755dc3b65/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=366356d3e6d0d8a33d6a47a559607c3755dc3b65", "patch": "@@ -367,6 +367,11 @@ char mips_hard_regno_mode_ok[(int)MAX_MACHINE_MODE][FIRST_PSEUDO_REGISTER];\n    constant pool is output.  */\n int mips_string_length;\n \n+/* When generating mips16 code, a list of all strings that are to be\n+   output after the current function.  */\n+\n+static GTY(()) rtx mips16_strings;\n+\n /* In mips16 mode, we build a list of all the string constants we see\n    in a particular function.  */\n \n@@ -7711,6 +7716,7 @@ mips_output_function_epilogue (file, size)\n      HOST_WIDE_INT size ATTRIBUTE_UNUSED;\n {\n   const char *fnname = \"\";\t/* FIXME: Correct initialisation?  */\n+  rtx string;\n \n #ifndef FUNCTION_NAME_ALREADY_DECLARED\n   /* Get the function name the same way that toplev.c does before calling\n@@ -7775,6 +7781,17 @@ mips_output_function_epilogue (file, size)\n       string_constants = next;\n     }\n \n+  /* If any following function uses the same strings as this one, force\n+     them to refer those strings indirectly.  Nearby functions could\n+     refer them using pc-relative addressing, but it isn't safe in\n+     general.  For instance, some functions may be placed in sections\n+     other than .text, and we don't know whether they be close enough\n+     to this one.  In large files, even other .text functions can be\n+     too far away.  */\n+  for (string = mips16_strings; string != 0; string = XEXP (string, 1))\n+    SYMBOL_REF_FLAG (XEXP (string, 0)) = 0;\n+  free_EXPR_LIST_list (&mips16_strings);\n+\n   /* Restore the output file if optimizing the GP (optimizing the GP causes\n      the text to be diverted to a tempfile, so that data decls come before\n      references to the data).  */\n@@ -8153,7 +8170,11 @@ mips_encode_section_info (decl, first)\n \t  && (! current_function_decl\n \t      || ! DECL_ONE_ONLY (current_function_decl)))\n \t{\n-\t  SYMBOL_REF_FLAG (XEXP (TREE_CST_RTL (decl), 0)) = 1;\n+\t  rtx symref;\n+\n+\t  symref = XEXP (TREE_CST_RTL (decl), 0);\n+\t  mips16_strings = alloc_EXPR_LIST (0, symref, mips16_strings);\n+\t  SYMBOL_REF_FLAG (symref) = 1;\n \t  mips_string_length += TREE_STRING_LENGTH (decl);\n \t}\n     }"}]}