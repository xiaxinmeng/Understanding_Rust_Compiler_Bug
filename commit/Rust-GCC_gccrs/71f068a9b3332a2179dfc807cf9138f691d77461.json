{"sha": "71f068a9b3332a2179dfc807cf9138f691d77461", "node_id": "C_kwDOANBUbNoAKDcxZjA2OGE5YjMzMzJhMjE3OWRmYzgwN2NmOTEzOGY2OTFkNzc0NjE", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-08-01T10:36:23Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-08-01T10:40:50Z"}, "message": "Update configure to check for a recent gnat Ada compiler.\n\nGCC fails to bootstrap when configured with --enable-languages=all on\nmachines that have older versions of GNAT installed as the system Ada\ncompiler.  In configure, it's not sufficient to check whether gnat is\navailable, but whether a sufficiently recent version of GNAT is\ninstalled.  This patch tweaks config/acx.m4 so that conftest.adb also\ncontains a reference to System.CRTL.int64 as required by the current\nversion of gcc/ada/osint.adb.  This fixes the build when the system\nAda is GNAT v4.8.5 (on Redhat 7) by disabling ada, but continues to\nwork fine when the system Ada is GNAT v11.3.1.\n\n2022-08-01  Roger Sayle  <roger@nextmovesoftware.com>\n\t    Arnaud Charlet  <charlet@adacore.com>\n\nconfig/ChangeLog\n\t* acx.m4 (AC_PROG_GNAT): Update conftest.adb to include\n\tfeatures required of the host gnat compiler.\n\nChangeLog\n\t* configure: Regenerate.", "tree": {"sha": "66cd6fd1287e18f58535fa89d9d50d6bb8087350", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66cd6fd1287e18f58535fa89d9d50d6bb8087350"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71f068a9b3332a2179dfc807cf9138f691d77461", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71f068a9b3332a2179dfc807cf9138f691d77461", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71f068a9b3332a2179dfc807cf9138f691d77461", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71f068a9b3332a2179dfc807cf9138f691d77461/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d8637208d35f78b51f8cff38c984836ab2c860f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d8637208d35f78b51f8cff38c984836ab2c860f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d8637208d35f78b51f8cff38c984836ab2c860f"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "7efe98aaf960840b39de9d499d04bf82ac08b0d2", "filename": "config/acx.m4", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f068a9b3332a2179dfc807cf9138f691d77461/config%2Facx.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f068a9b3332a2179dfc807cf9138f691d77461/config%2Facx.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Facx.m4?ref=71f068a9b3332a2179dfc807cf9138f691d77461", "patch": "@@ -393,9 +393,13 @@ AC_DEFUN([ACX_PROG_GNAT],\n AC_REQUIRE([AC_PROG_CC])\n AC_CHECK_TOOL(GNATBIND, gnatbind, no)\n AC_CHECK_TOOL(GNATMAKE, gnatmake, no)\n-AC_CACHE_CHECK([whether compiler driver understands Ada],\n+AC_CACHE_CHECK([whether compiler driver understands Ada and is recent enough],\n \t\t acx_cv_cc_gcc_supports_ada,\n [cat >conftest.adb <<EOF\n+pragma Warnings (Off);\n+with System.CRTL;\n+pragma Warnings (On);\n+use type System.CRTL.int64;\n procedure conftest is begin null; end conftest;\n EOF\n acx_cv_cc_gcc_supports_ada=no"}, {"sha": "11539d7f01e2d22f2cb31d96ac7fba40ba6822f0", "filename": "configure", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f068a9b3332a2179dfc807cf9138f691d77461/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f068a9b3332a2179dfc807cf9138f691d77461/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=71f068a9b3332a2179dfc807cf9138f691d77461", "patch": "@@ -5602,12 +5602,16 @@ else\n   GNATMAKE=\"$ac_cv_prog_GNATMAKE\"\n fi\n \n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether compiler driver understands Ada\" >&5\n-$as_echo_n \"checking whether compiler driver understands Ada... \" >&6; }\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether compiler driver understands Ada and is recent enough\" >&5\n+$as_echo_n \"checking whether compiler driver understands Ada and is recent enough... \" >&6; }\n if ${acx_cv_cc_gcc_supports_ada+:} false; then :\n   $as_echo_n \"(cached) \" >&6\n else\n   cat >conftest.adb <<EOF\n+pragma Warnings (Off);\n+with System.CRTL;\n+pragma Warnings (On);\n+use type System.CRTL.int64;\n procedure conftest is begin null; end conftest;\n EOF\n acx_cv_cc_gcc_supports_ada=no"}]}