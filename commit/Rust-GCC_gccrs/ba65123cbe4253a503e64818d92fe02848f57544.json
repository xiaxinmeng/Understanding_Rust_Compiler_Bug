{"sha": "ba65123cbe4253a503e64818d92fe02848f57544", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE2NTEyM2NiZTQyNTNhNTAzZTY0ODE4ZDkyZmUwMjg0OGY1NzU0NA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-03-19T12:57:33Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-03-19T12:57:33Z"}, "message": "re PR tree-optimization/56273 (Bogus -Warray-bounds warning)\n\n2013-03-19  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/56273\n\t* passes.c (init_optimization_passes): Move second VRP after DOM.\n\n\t* gcc.dg/tree-ssa/vrp47.c: Adjust.\n\t* c-c++-common/uninit-17.c: Likewise.\n\nFrom-SVN: r196792", "tree": {"sha": "c3c667c389ac71e983f0233a3a1a43d3a060ae4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3c667c389ac71e983f0233a3a1a43d3a060ae4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba65123cbe4253a503e64818d92fe02848f57544", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba65123cbe4253a503e64818d92fe02848f57544", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba65123cbe4253a503e64818d92fe02848f57544", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba65123cbe4253a503e64818d92fe02848f57544/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f5e3ed2d42244eae5a54bc22642a9bbf6be5dd32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5e3ed2d42244eae5a54bc22642a9bbf6be5dd32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5e3ed2d42244eae5a54bc22642a9bbf6be5dd32"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "b55bc7f8d39fc9008bd47666ec1d5c6c0a322677", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba65123cbe4253a503e64818d92fe02848f57544/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba65123cbe4253a503e64818d92fe02848f57544/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ba65123cbe4253a503e64818d92fe02848f57544", "patch": "@@ -1,3 +1,8 @@\n+2013-03-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/56273\n+\t* passes.c (init_optimization_passes): Move second VRP after DOM.\n+\n 2013-03-19  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (*movti_internal): Merge from"}, {"sha": "5f9330672fce09d7666a10bbd5eafe78b10c6f32", "filename": "gcc/passes.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba65123cbe4253a503e64818d92fe02848f57544/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba65123cbe4253a503e64818d92fe02848f57544/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=ba65123cbe4253a503e64818d92fe02848f57544", "patch": "@@ -1488,7 +1488,6 @@ init_optimization_passes (void)\n       NEXT_PASS (pass_lower_vector_ssa);\n       NEXT_PASS (pass_cse_reciprocals);\n       NEXT_PASS (pass_reassoc);\n-      NEXT_PASS (pass_vrp);\n       NEXT_PASS (pass_strength_reduction);\n       NEXT_PASS (pass_dominator);\n       /* The only const/copy propagation opportunities left after\n@@ -1497,6 +1496,7 @@ init_optimization_passes (void)\n \t only examines PHIs to discover const/copy propagation\n \t opportunities.  */\n       NEXT_PASS (pass_phi_only_cprop);\n+      NEXT_PASS (pass_vrp);\n       NEXT_PASS (pass_cd_dce);\n       NEXT_PASS (pass_tracer);\n "}, {"sha": "5a6552844de6a97ad7df8364536057d181687b6c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba65123cbe4253a503e64818d92fe02848f57544/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba65123cbe4253a503e64818d92fe02848f57544/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ba65123cbe4253a503e64818d92fe02848f57544", "patch": "@@ -1,3 +1,9 @@\n+2013-03-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/56273\n+\t* gcc.dg/tree-ssa/vrp47.c: Adjust.\n+\t* c-c++-common/uninit-17.c: Likewise.\n+\n 2013-03-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/56635"}, {"sha": "fd773da78ad3019a11a99e336a30a691082b64e1", "filename": "gcc/testsuite/c-c++-common/uninit-17.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba65123cbe4253a503e64818d92fe02848f57544/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Funinit-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba65123cbe4253a503e64818d92fe02848f57544/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Funinit-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Funinit-17.c?ref=ba65123cbe4253a503e64818d92fe02848f57544", "patch": "@@ -11,9 +11,9 @@ static void bar(int a, int *ptr)\n   {\n     int b;   /* { dg-message \"declared\" } */\n     if (b < 40) {\n-      ptr[0] = b;\n+      ptr[0] = b; /* { dg-warning \"may be used uninitialized\" } */\n     }\n-    b += 1; /* { dg-warning \"may be used uninitialized\" } */\n+    b += 1;\n     ptr++;\n   }\n   while (--a != 0);"}, {"sha": "d8c5841eb58a489fef358f41b44a646603934862", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp47.c", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba65123cbe4253a503e64818d92fe02848f57544/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp47.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba65123cbe4253a503e64818d92fe02848f57544/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp47.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp47.c?ref=ba65123cbe4253a503e64818d92fe02848f57544", "patch": "@@ -4,7 +4,7 @@\n    jumps when evaluating an && condition.  VRP is not able to optimize\n    this.  */\n /* { dg-do compile { target { ! \"mips*-*-* s390*-*-*  avr-*-* mn10300-*-*\" } } } */\n-/* { dg-options \"-O2 -fdump-tree-vrp1 -fdump-tree-dom1 -fdump-tree-dom2\" } */\n+/* { dg-options \"-O2 -fdump-tree-vrp1 -fdump-tree-dom1 -fdump-tree-vrp2\" } */\n /* { dg-additional-options \"-march=i586\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* Skip on ARM Cortex-M0, where LOGICAL_OP_NON_SHORT_CIRCUIT is set to false,\n    leading to two conditional jumps when evaluating an && condition.  VRP is\n@@ -40,15 +40,14 @@ int f(int x)\n    0 or 1.  */\n /* { dg-final { scan-tree-dump-times \"\\[xy\\]\\[^ \\]* !=\" 0 \"vrp1\" } } */\n \n-/* This one needs more copy propagation that only happens in dom1.  */\n-/* { dg-final { scan-tree-dump-times \"x\\[^ \\]* & y\" 1 \"dom1\" { xfail *-*-* } } } */\n-/* { dg-final { scan-tree-dump-times \"x\\[^ \\]* & y\" 1 \"dom2\" } } */\n-/* { dg-final { scan-tree-dump-times \"x\\[^ \\]* & y\" 1 \"vrp1\" { xfail *-*-* } } } */\n-\n-/* These two are fully simplified by VRP.  */\n+/* These two are fully simplified by VRP1.  */\n /* { dg-final { scan-tree-dump-times \"x\\[^ \\]* \\[|\\] y\" 1 \"vrp1\" } } */\n /* { dg-final { scan-tree-dump-times \"x\\[^ \\]* \\\\^ 1\" 1 \"vrp1\" } } */\n \n+/* VRP2 gets rid of the remaining & 1 operations, x and y are always\n+   either 0 or 1.  */\n+/* { dg-final { scan-tree-dump-times \" & 1;\" 0 \"vrp2\" } } */\n+\n /* { dg-final { cleanup-tree-dump \"vrp1\" } } */\n /* { dg-final { cleanup-tree-dump \"dom1\" } } */\n-/* { dg-final { cleanup-tree-dump \"dom2\" } } */\n+/* { dg-final { cleanup-tree-dump \"vrp2\" } } */"}]}