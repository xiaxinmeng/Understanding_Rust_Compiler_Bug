{"sha": "38b69a9c114619088740f49cac9a41410fa668c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzhiNjlhOWMxMTQ2MTkwODg3NDBmNDljYWM5YTQxNDEwZmE2NjhjNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2015-12-18T18:18:47Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2015-12-18T18:18:47Z"}, "message": "re PR c++/67592 (A virtual member function declared constexpr fails to trigger a diagnostic)\n\n/cp\n2015-12-18  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/67592\n\t* decl.c (grokdeclarator): Reject constexpr virtual member functions;\n\tin error messages, prefer %<virtual%> and %<constexpr%> to virtual\n\tand constexpr, respectively.\n\n/testsuite\n2015-12-18  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/67592\n\t* g++.dg/cpp0x/constexpr-virtual5.C: New.\n\t* g++.dg/cpp0x/pr51463.C: Adjust dg-error string.\n\t* g++.dg/inherit/pure1.C: Likewise.\n\nFrom-SVN: r231824", "tree": {"sha": "8752d688bcc94cfc7ab38eefb8f276adaceb03af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8752d688bcc94cfc7ab38eefb8f276adaceb03af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38b69a9c114619088740f49cac9a41410fa668c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38b69a9c114619088740f49cac9a41410fa668c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38b69a9c114619088740f49cac9a41410fa668c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38b69a9c114619088740f49cac9a41410fa668c7/comments", "author": null, "committer": null, "parents": [{"sha": "feac22a7825a7f8d385b1a2c2558d2bb4089548c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/feac22a7825a7f8d385b1a2c2558d2bb4089548c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/feac22a7825a7f8d385b1a2c2558d2bb4089548c"}], "stats": {"total": 46, "additions": 37, "deletions": 9}, "files": [{"sha": "d471721f21c3cdf7a8eab370de0e221ea838eef6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38b69a9c114619088740f49cac9a41410fa668c7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38b69a9c114619088740f49cac9a41410fa668c7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=38b69a9c114619088740f49cac9a41410fa668c7", "patch": "@@ -1,3 +1,10 @@\n+2015-12-18  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/67592\n+\t* decl.c (grokdeclarator): Reject constexpr virtual member functions;\n+\tin error messages, prefer %<virtual%> and %<constexpr%> to virtual\n+\tand constexpr, respectively.\n+\n 2015-12-18  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \tPR c++/68831"}, {"sha": "a14062bca0d2987ef8d9511d4a53c8114072929e", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38b69a9c114619088740f49cac9a41410fa668c7/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38b69a9c114619088740f49cac9a41410fa668c7/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=38b69a9c114619088740f49cac9a41410fa668c7", "patch": "@@ -9769,11 +9769,18 @@ grokdeclarator (const cp_declarator *declarator,\n   if (storage_class == sc_static)\n     staticp = 1 + (decl_context == FIELD);\n \n-  if (virtualp && staticp == 2)\n+  if (virtualp)\n     {\n-      error (\"member %qD cannot be declared both virtual and static\", dname);\n-      storage_class = sc_none;\n-      staticp = 0;\n+      if (staticp == 2)\n+\t{\n+\t  error (\"member %qD cannot be declared both %<virtual%> \"\n+\t\t \"and %<static%>\", dname);\n+\t  storage_class = sc_none;\n+\t  staticp = 0;\n+\t}\n+      if (constexpr_p)\n+\terror (\"member %qD cannot be declared both %<virtual%> \"\n+\t       \"and %<constexpr%>\", dname);\n     }\n   friendp = decl_spec_seq_has_spec_p (declspecs, ds_friend);\n \n@@ -10153,7 +10160,8 @@ grokdeclarator (const cp_declarator *declarator,\n \t\t      explicitp = 2;\n \t\t    if (virtualp)\n \t\t      {\n-\t\t\tpermerror (input_location, \"constructors cannot be declared virtual\");\n+\t\t\tpermerror (input_location,\n+\t\t\t\t   \"constructors cannot be declared %<virtual%>\");\n \t\t\tvirtualp = 0;\n \t\t      }\n \t\t    if (decl_context == FIELD\n@@ -10988,7 +10996,7 @@ grokdeclarator (const cp_declarator *declarator,\n \t\t   ARM 9.5 */\n \t\tif (virtualp && TREE_CODE (ctype) == UNION_TYPE)\n \t\t  {\n-\t\t    error (\"function %qD declared virtual inside a union\",\n+\t\t    error (\"function %qD declared %<virtual%> inside a union\",\n \t\t\t   unqualified_id);\n \t\t    return error_mark_node;\n \t\t  }\n@@ -10997,7 +11005,7 @@ grokdeclarator (const cp_declarator *declarator,\n \t\t  {\n \t\t    if (virtualp)\n \t\t      {\n-\t\t\terror (\"%qD cannot be declared virtual, since it \"\n+\t\t\terror (\"%qD cannot be declared %<virtual%>, since it \"\n \t\t\t       \"is always static\",\n \t\t\t       unqualified_id);\n \t\t\tvirtualp = 0;"}, {"sha": "dabdceaff4873255f337d5acbf8fd575350870ab", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38b69a9c114619088740f49cac9a41410fa668c7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38b69a9c114619088740f49cac9a41410fa668c7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=38b69a9c114619088740f49cac9a41410fa668c7", "patch": "@@ -1,3 +1,10 @@\n+2015-12-18  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/67592\n+\t* g++.dg/cpp0x/constexpr-virtual5.C: New.\n+\t* g++.dg/cpp0x/pr51463.C: Adjust dg-error string.\n+\t* g++.dg/inherit/pure1.C: Likewise.\n+\n 2015-12-18  Jeff Law  <law@redhat.com>\n \n \tPR rtl-optimization/49847"}, {"sha": "895de506d6740de3b65b970b1dc5c66b1655b299", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-virtual5.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38b69a9c114619088740f49cac9a41410fa668c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-virtual5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38b69a9c114619088740f49cac9a41410fa668c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-virtual5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-virtual5.C?ref=38b69a9c114619088740f49cac9a41410fa668c7", "patch": "@@ -0,0 +1,6 @@\n+// PR c+++/67592\n+// { dg-do compile { target c++11 } }\n+\n+struct S {\n+  constexpr virtual int f() { return 1; }  // { dg-error \"both 'virtual' and 'constexpr'\" }\n+};"}, {"sha": "75de47d60e469b490148e64b6c889b757dc1c076", "filename": "gcc/testsuite/g++.dg/cpp0x/pr51463.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38b69a9c114619088740f49cac9a41410fa668c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr51463.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38b69a9c114619088740f49cac9a41410fa668c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr51463.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr51463.C?ref=38b69a9c114619088740f49cac9a41410fa668c7", "patch": "@@ -3,5 +3,5 @@\n \n struct A\n {\n-  static virtual int i = 0;\t// { dg-error \"both virtual and static|declared as\" }\n+  static virtual int i = 0;\t// { dg-error \"both 'virtual' and 'static'|declared as\" }\n };"}, {"sha": "99a5767c787f33970d71df80f6e1eaaa9d43a306", "filename": "gcc/testsuite/g++.dg/inherit/pure1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38b69a9c114619088740f49cac9a41410fa668c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fpure1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38b69a9c114619088740f49cac9a41410fa668c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fpure1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fpure1.C?ref=38b69a9c114619088740f49cac9a41410fa668c7", "patch": "@@ -9,7 +9,7 @@ struct A\n {\n   void foo2() = 0;                 // { dg-error \"non-virtual\" }\n   static void foo3() = 0;          // { dg-error \"static member\" }\n-  virtual static void foo4() = 0;  // { dg-error \"both virtual and static\" }\n+  virtual static void foo4() = 0;  // { dg-error \"both 'virtual' and 'static'\" }\n   virtual void foo5() = 0;         // { dg-error \"base class\" }\n };\n "}]}