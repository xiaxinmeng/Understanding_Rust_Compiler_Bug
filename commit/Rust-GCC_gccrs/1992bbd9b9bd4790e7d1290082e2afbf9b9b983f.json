{"sha": "1992bbd9b9bd4790e7d1290082e2afbf9b9b983f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk5MmJiZDliOWJkNDc5MGU3ZDEyOTAwODJlMmFmYmY5YjliOTgzZg==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2008-02-24T22:40:31Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2008-02-24T22:40:31Z"}, "message": "re PR ada/15479 (Ada manual problems)\n\nPR documentation/15479\n* gnat_rm.texi, gnat_ugn.texi: Where appropriate, add @command,\nuse @command instead of @code, @option instead of @samp or @code,\n@code instead of @var, @samp instead of @file.\n\nFrom-SVN: r132602", "tree": {"sha": "f44549d23c46752363ded288722326e376342f43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f44549d23c46752363ded288722326e376342f43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1992bbd9b9bd4790e7d1290082e2afbf9b9b983f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1992bbd9b9bd4790e7d1290082e2afbf9b9b983f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1992bbd9b9bd4790e7d1290082e2afbf9b9b983f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1992bbd9b9bd4790e7d1290082e2afbf9b9b983f/comments", "author": null, "committer": null, "parents": [{"sha": "9538dfb92f936aef071c1b6f525863119e693968", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9538dfb92f936aef071c1b6f525863119e693968", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9538dfb92f936aef071c1b6f525863119e693968"}], "stats": {"total": 141, "additions": 74, "deletions": 67}, "files": [{"sha": "f6b919d8a5e6044cf9f3c2243e1e03c6ec175272", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1992bbd9b9bd4790e7d1290082e2afbf9b9b983f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1992bbd9b9bd4790e7d1290082e2afbf9b9b983f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1992bbd9b9bd4790e7d1290082e2afbf9b9b983f", "patch": "@@ -1,5 +1,10 @@\n 2008-02-24  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n+\tPR documentation/15479\n+\t* gnat_rm.texi, gnat_ugn.texi: Where appropriate, add @command,\n+\tuse @command instead of @code, @option instead of @samp or @code,\n+\t@code instead of @var, @samp instead of @file.\n+\n \tPR documentation/15479\n \t* gnat_ugn.texi (Using gnatmake in a Makefile): Do not ignore errors\n \tin Makefile rules, by using `&&' rather than `;'."}, {"sha": "a870f627e93d918dd0aae3758f894e2a6391af6e", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1992bbd9b9bd4790e7d1290082e2afbf9b9b983f/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1992bbd9b9bd4790e7d1290082e2afbf9b9b983f/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=1992bbd9b9bd4790e7d1290082e2afbf9b9b983f", "patch": "@@ -34,7 +34,7 @@\n @end direntry\n \n @copying\n-Copyright @copyright{} 1995-2007, 2008 Free Software Foundation\n+Copyright @copyright{} 1995-2007, 2008 Free Software Foundation, Inc.\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.2\n@@ -962,7 +962,7 @@ Note that, as with the @code{if} statement to which it is equivalent, the\n type of the expression is either @code{Standard.Boolean}, or any type derived\n from this standard type.\n \n-If assertions are disabled (switch @code{-gnata} not used), then there\n+If assertions are disabled (switch @option{-gnata} not used), then there\n is no run-time effect (and in particular, any side effects from the\n expression will not occur at run time).  (The expression is still\n analyzed at compile time, and may cause types to be frozen if they are\n@@ -1468,7 +1468,7 @@ semantics of the pragma is exactly equivalent to the procedure call statement\n corresponding to the argument with a terminating semicolon. Pragmas are\n permitted in sequences of declarations, so you can use pragma @code{Debug} to\n intersperse calls to debug procedures in the middle of declarations. Debug\n-pragmas can be enabled either by use of the command line switch @code{-gnata}\n+pragmas can be enabled either by use of the command line switch @option{-gnata}\n or by use of the configuration pragma @code{Debug_Policy}.\n \n @node Pragma Debug_Policy\n@@ -1484,7 +1484,7 @@ pragma Debug_Policy (CHECK | IGNORE);\n @noindent\n If the argument is @code{CHECK}, then pragma @code{DEBUG} is enabled.\n If the argument is @code{IGNORE}, then pragma @code{DEBUG} is ignored.\n-This pragma overrides the effect of the @code{-gnata} switch on the\n+This pragma overrides the effect of the @option{-gnata} switch on the\n command line.\n \n @node Pragma Detect_Blocking\n@@ -1519,7 +1519,7 @@ elaboration model used by the compilation affected by the\n pragma.  If the parameter is @code{Dynamic},\n then the dynamic elaboration\n model described in the Ada Reference Manual is used, as though\n-the @code{-gnatE} switch had been specified on the command\n+the @option{-gnatE} switch had been specified on the command\n line.  If the parameter is @code{Static}, then the default GNAT static\n model is used.  This configuration pragma overrides the setting\n of the command line.  For full details on the elaboration models\n@@ -2575,7 +2575,7 @@ See the GNAT users guide for details.\n Note that pragma @code{Initialize_Scalars} is particularly useful in\n conjunction with the enhanced validity checking that is now provided\n in GNAT, which checks for invalid values under more conditions.\n-Using this feature (see description of the @code{-gnatV} flag in the\n+Using this feature (see description of the @option{-gnatV} flag in the\n users guide) in conjunction with pragma @code{Initialize_Scalars}\n provides a powerful new tool to assist in the detection of problems\n caused by uninitialized variables.\n@@ -2599,7 +2599,7 @@ pragma Inline_Always (NAME [, NAME]);\n \n @noindent\n Similar to pragma @code{Inline} except that inlining is not subject to\n-the use of option @code{-gnatn} and the inlining happens regardless of\n+the use of option @option{-gnatn} and the inlining happens regardless of\n whether this option is used.\n \n @node Pragma Inline_Generic\n@@ -3458,7 +3458,7 @@ targets that do not normally support the capability.  The version of\n @code{Poll} in this file makes a call to the appropriate runtime routine\n to test for an abort condition.\n \n-Note that polling can also be enabled by use of the @code{-gnatP} switch.  See\n+Note that polling can also be enabled by use of the @option{-gnatP} switch.  See\n the @cite{GNAT User's Guide} for details.\n \n @node Pragma Profile (Ravenscar)\n@@ -3838,7 +3838,7 @@ the pragma line (for use in error messages and debugging\n information).  @var{string_literal} is a static string constant that\n specifies the file name to be used in error messages and debugging\n information.  This is most notably used for the output of @code{gnatchop}\n-with the @code{-r} switch, to make sure that the original unchopped\n+with the @option{-r} switch, to make sure that the original unchopped\n source file is the one referred to.\n \n The second argument must be a string literal, it cannot be a static\n@@ -3942,7 +3942,7 @@ the @file{gnat.adc} file).\n The form with a string literal specifies which style options are to be\n activated.  These are additive, so they apply in addition to any previously\n set style check options.  The codes for the options are the same as those\n-used in the @code{-gnaty} switch to @code{gcc} or @code{gnatmake}.\n+used in the @option{-gnaty} switch to @command{gcc} or @command{gnatmake}.\n For example the following two methods can be used to enable\n layout checking:\n \n@@ -4478,7 +4478,7 @@ The form with a string literal specifies which validity options are to be\n activated.  The validity checks are first set to include only the default\n reference manual settings, and then a string of letters in the string\n specifies the exact set of options required.  The form of this string\n-is exactly as described for the @code{-gnatVx} compiler switch (see the\n+is exactly as described for the @option{-gnatVx} compiler switch (see the\n GNAT users guide for details).  For example the following two methods\n can be used to enable validity checking for mode @code{in} and\n @code{in out} subprogram parameters:\n@@ -7364,7 +7364,7 @@ overlapping storage units.\n @end cartouche\n @noindent\n A compilation is represented by a sequence of files presented to the\n-compiler in a single invocation of the @code{gcc} command.\n+compiler in a single invocation of the @command{gcc} command.\n \n @sp 1\n @cartouche\n@@ -7405,7 +7405,7 @@ mentioned in the context clause of one of the needed Ada units.\n \n If the partition contains no main program, or if the main program is in\n a language other than Ada, then GNAT\n-provides the binder options @code{-z} and @code{-n} respectively, and in\n+provides the binder options @option{-z} and @option{-n} respectively, and in\n this case a list of units can be explicitly supplied to the binder for\n inclusion in the partition (all units needed by these units will also\n be included automatically).  For full details on the use of these\n@@ -8522,7 +8522,7 @@ There are no implementation-defined aspects of @code{Task_Attributes}.\n @noindent\n The metrics information for GNAT depends on the performance of the\n underlying operating system.  The sources of the run-time for tasking\n-implementation, together with the output from @code{-gnatG} can be\n+implementation, together with the output from @option{-gnatG} can be\n used to determine the exact sequence of operating systems calls made\n to implement various tasking constructs.  Together with appropriate\n information on the performance of the underlying operating system,\n@@ -9443,7 +9443,7 @@ Then @code{Default_Stack_Size} can be defined in a global package, and\n modified as required. Any tasks requiring stack sizes different from the\n default can have an appropriate alternative reference in the pragma.\n \n-You can also use the @code{-d} binder switch to modify the default stack\n+You can also use the @option{-d} binder switch to modify the default stack\n size.\n \n For access types, the @code{Storage_Size} clause specifies the maximum\n@@ -10866,7 +10866,7 @@ code. size clause specifying 64-bits must be used to obtain a 64-bit pointer.\n @node Determining the Representations chosen by GNAT\n @section Determining the Representations chosen by GNAT\n @cindex Representation, determination of\n-@cindex @code{-gnatR} switch\n+@cindex @option{-gnatR} switch\n \n @noindent\n Although the descriptions in this section are intended to be complete, it is\n@@ -10884,7 +10884,7 @@ fields placed? The section on pragma @code{Pack} in this chapter can be\n used to answer the second question, but it is often easier to just see\n what the compiler does.\n \n-For this purpose, GNAT provides the option @code{-gnatR}.  If you compile\n+For this purpose, GNAT provides the option @option{-gnatR}.  If you compile\n with this option, then the compiler will output information on the actual\n representations chosen, in a format similar to source representation\n clauses.  For example, if we compile the package:\n@@ -10934,7 +10934,7 @@ end q;\n @end smallexample\n \n @noindent\n-using the switch @code{-gnatR} we obtain the following output:\n+using the switch @option{-gnatR} we obtain the following output:\n \n @smallexample\n Representation information for unit q"}, {"sha": "4021cfb42d0d43d9967f90871561427fe3724e9b", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 51, "deletions": 49, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1992bbd9b9bd4790e7d1290082e2afbf9b9b983f/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1992bbd9b9bd4790e7d1290082e2afbf9b9b983f/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=1992bbd9b9bd4790e7d1290082e2afbf9b9b983f", "patch": "@@ -117,7 +117,8 @@\n @c %**end of header\n \n @copying\n-Copyright @copyright{} 1995-2005, 2006, 2007, 2008 Free Software Foundation\n+Copyright @copyright{} 1995-2005, 2006, 2007, 2008 Free Software Foundation,\n+Inc.\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.2\n@@ -2097,7 +2098,7 @@ GNAT allows completely arbitrary file names to be specified using the\n source file name pragma. However, if the file name specified has an\n extension other than @file{.ads} or @file{.adb} it is necessary to use\n a special syntax when compiling the file. The name in this case must be\n-preceded by the special sequence @code{-x} followed by a space and the name\n+preceded by the special sequence @option{-x} followed by a space and the name\n of the language, here @code{ada}, as in:\n \n @smallexample\n@@ -2109,7 +2110,8 @@ $ gcc -c -x ada peculiar_file_name.sim\n @command{gnatmake} handles non-standard file names in the usual manner (the\n non-standard file name for the main program is simply used as the\n argument to gnatmake). Note that if the extension is also non-standard,\n-then it must be included in the gnatmake command, it may not be omitted.\n+then it must be included in the @command{gnatmake} command, it may not\n+be omitted.\n \n @node Alternative File Naming Schemes\n @section Alternative File Naming Schemes\n@@ -2950,8 +2952,8 @@ Interface ---see http://www.codesourcery.com/archives/cxx-abi).\n \n @noindent\n Interfacing can be done at 3 levels: simple data, subprograms, and\n-classes. In the first two cases, GNAT offers a specific @var{Convention\n-C_Plus_Plus} (or @var{CPP}) that behaves exactly like @var{Convention C}.\n+classes. In the first two cases, GNAT offers a specific @code{Convention\n+C_Plus_Plus} (or @code{CPP}) that behaves exactly like @code{Convention C}.\n Usually, C++ mangles the names of subprograms, and currently, GNAT does\n not provide any help to solve the demangling problem. This problem can be\n addressed in two ways:\n@@ -3005,9 +3007,9 @@ at the same time and may make one of the two compilers operate\n improperly if set during invocation of the wrong compiler.  It is also\n very important that the linker uses the proper @file{libgcc.a} GCC\n library -- that is, the one from the C++ compiler installation. The\n-implicit link command as suggested in the gnatmake command from the\n-former example can be replaced by an explicit link command with the\n-full-verbosity option in order to verify which library is used:\n+implicit link command as suggested in the @command{gnatmake} command\n+from the former example can be replaced by an explicit link command with\n+the full-verbosity option in order to verify which library is used:\n @smallexample\n $ gnatbind ada_unit\n $ gnatlink -v -v ada_unit file1.o file2.o --LINK=c++\n@@ -4397,7 +4399,7 @@ warning messages generated.\n \n @item -^gnatl^OUTPUT_FILE^=file\n @cindex @option{^-gnatl^OUTPUT_FILE^=fname} (@command{gcc})\n-This has the same effect as @code{-gnatl} except that the output is\n+This has the same effect as @option{-gnatl} except that the output is\n written to a file instead of to standard output. If the given name\n @file{fname} does not start with a period, then it is the full name\n of the file to be written. If @file{fname} is an extension, it is\n@@ -6725,7 +6727,7 @@ the @option{-gnatR} switch). For @option{-gnatR1} (which is the default,\n so @option{-gnatR} with no parameter has the same effect), size and alignment\n information is listed for declared array and record types. For\n @option{-gnatR2}, size and alignment information is listed for all\n-declared types and objects. Finally @code{-gnatR3} includes symbolic\n+declared types and objects. Finally @option{-gnatR3} includes symbolic\n expressions for values that are computed at run time for\n variant records. These symbolic expressions have a mostly obvious\n format with #n being used to represent the value of the n'th\n@@ -8333,13 +8335,13 @@ units, or in @code{Import} pragmas in any Ada units.\n \n @var{linker options} is an optional list of linker specific\n switches.\n-The default linker called by gnatlink is @var{gcc} which in\n+The default linker called by gnatlink is @command{gcc} which in\n turn calls the appropriate system linker.\n Standard options for the linker such as @option{-lmy_lib} or\n @option{-Ldir} can be added as is.\n For options that are not recognized by\n-@var{gcc} as linker options, use the @var{gcc} switches @option{-Xlinker} or\n-@option{-Wl,}.\n+@command{gcc} as linker options, use the @command{gcc} switches\n+@option{-Xlinker} or @option{-Wl,}.\n Refer to the GCC documentation for\n details. Here is an example showing how to generate a linker map:\n \n@@ -8838,7 +8840,7 @@ stamp differences when the only\n modifications to a source file consist in adding/removing comments,\n empty lines, spaces or tabs. This means that if you have changed the\n comments in a source file or have simply reformatted it, using this\n-switch will tell gnatmake not to recompile files that depend on it\n+switch will tell @command{gnatmake} not to recompile files that depend on it\n (provided other sources on which these files depend have undergone no\n semantic modifications). Note that the debugging information may be\n out of date with respect to the sources if the @option{-m} switch causes\n@@ -9765,15 +9767,15 @@ it actually improves performance.\n @subsection Other Optimization Switches\n @cindex Optimization Switches\n \n-Since @code{GNAT} uses the @code{gcc} back end, all the specialized\n-@code{gcc} optimization switches are potentially usable. These switches\n+Since @code{GNAT} uses the @command{gcc} back end, all the specialized\n+@command{gcc} optimization switches are potentially usable. These switches\n have not been extensively tested with GNAT but can generally be expected\n to work. Examples of switches in this category are\n @option{-funroll-loops} and\n the various target-specific @option{-m} options (in particular, it has been\n observed that @option{-march=pentium4} can significantly improve performance\n on appropriate machines). For full details of these switches, see the\n-@code{gcc} manual.\n+@command{gcc} manual.\n \n @node Optimization and Strict Aliasing\n @subsection Optimization and Strict Aliasing\n@@ -9868,8 +9870,8 @@ end;\n @end smallexample\n \n @noindent\n-This program prints out 0 in @code{-O0} or @code{-O1}\n-mode, but it prints out 1 in @code{-O2} mode. That's\n+This program prints out 0 in @option{-O0} or @option{-O1}\n+mode, but it prints out 1 in @option{-O2} mode. That's\n because in strict aliasing mode, the compiler can and\n does assume that the assignment to @code{v2.all} could not\n affect the value of @code{v1.all}, since different types\n@@ -9907,19 +9909,19 @@ the suspicious @code{Unchecked_Conversion}.\n As implied by the warning message, there are approaches you can use to\n avoid the unwanted strict aliasing optimization in a case like this.\n \n-One possibility is to simply avoid the use of @code{-O2}, but\n+One possibility is to simply avoid the use of @option{-O2}, but\n that is a bit drastic, since it throws away a number of useful\n optimizations that do not involve strict aliasing assumptions.\n \n A less drastic approach is to compile the program using the\n-option @code{-fno-strict-aliasing}. Actually it is only the\n+option @option{-fno-strict-aliasing}. Actually it is only the\n unit containing the dereferencing of the suspicious pointer\n that needs to be compiled. So in this case, if we compile\n unit @code{m} with this switch, then we get the expected\n value of zero printed. Analyzing which units might need\n the switch can be painful, so a more reasonable approach\n-is to compile the entire program with options @code{-O2}\n-and @code{-fno-strict-aliasing}. If the performance is\n+is to compile the entire program with options @option{-O2}\n+and @option{-fno-strict-aliasing}. If the performance is\n satisfactory with this combination of options, then the\n advantage is that the entire issue of possible \"wrong\"\n optimization due to strict aliasing is avoided.\n@@ -10268,8 +10270,8 @@ function or data in a separate section in the resulting object file.\n Once the objects and static libraries are created with these options, the\n linker can perform the dead code elimination. You can do this by setting\n the @option{-Wl,--gc-sections} option to gcc command or in the\n-@option{-largs} section of gnatmake. This will perform a garbage collection of\n-code and data never referenced.\n+@option{-largs} section of @command{gnatmake}. This will perform a\n+garbage collection of code and data never referenced.\n \n If the linker performs a partial link (@option{-r} ld linker option), then you\n will need to provide one or several entry point using the\n@@ -12518,7 +12520,7 @@ in the project file.\n @end smallexample\n \n @noindent\n-The attribute @var{Object_Dir} has a string value, the path name of the object\n+The attribute @code{Object_Dir} has a string value, the path name of the object\n directory. The path name may be absolute or relative to the directory of the\n project file. This directory must already exist, and be readable and writable.\n \n@@ -12541,7 +12543,7 @@ in the project file.\n @end smallexample\n \n @noindent\n-The attribute @var{Exec_Dir} has a string value, the path name of the exec\n+The attribute @code{Exec_Dir} has a string value, the path name of the exec\n directory. The path name may be absolute or relative to the directory of the\n project file. This directory must already exist, and be writable.\n \n@@ -13169,14 +13171,14 @@ You can define the following attributes in package @code{Naming}:\n \n @table @code\n \n-@item @var{Casing}\n+@item @code{Casing}\n This must be a string with one of the three values @code{\"lowercase\"},\n @code{\"uppercase\"} or @code{\"mixedcase\"}; these strings are case insensitive.\n \n @noindent\n-If @var{Casing} is not specified, then the default is @code{\"lowercase\"}.\n+If @code{Casing} is not specified, then the default is @code{\"lowercase\"}.\n \n-@item @var{Dot_Replacement}\n+@item @code{Dot_Replacement}\n This must be a string whose value satisfies the following conditions:\n \n @itemize @bullet\n@@ -13191,7 +13193,7 @@ is @code{\".\"}\n @noindent\n If @code{Dot_Replacement} is not specified, then the default is @code{\"-\"}.\n \n-@item @var{Spec_Suffix}\n+@item @code{Spec_Suffix}\n This is an associative array (indexed by the programming language name, case\n insensitive) whose value is a string that must satisfy the following\n conditions:\n@@ -13204,7 +13206,7 @@ conditions:\n If @code{Spec_Suffix (\"Ada\")} is not specified, then the default is\n @code{\"^.ads^.ADS^\"}.\n \n-@item @var{Body_Suffix}\n+@item @code{Body_Suffix}\n This is an associative array (indexed by the programming language name, case\n insensitive) whose value is a string that must satisfy the following\n conditions:\n@@ -13223,15 +13225,15 @@ if the longest suffix is @code{Spec_Suffix (\"Ada\")}.\n If @code{Body_Suffix (\"Ada\")} is not specified, then the default is\n @code{\"^.adb^.ADB^\"}.\n \n-@item @var{Separate_Suffix}\n+@item @code{Separate_Suffix}\n This must be a string whose value satisfies the same conditions as\n @code{Body_Suffix}. The same \"longest suffix\" rules apply.\n \n @noindent\n If @code{Separate_Suffix (\"Ada\")} is not specified, then it defaults to same\n value as @code{Body_Suffix (\"Ada\")}.\n \n-@item @var{Spec}\n+@item @code{Spec}\n @noindent\n You can use the associative array attribute @code{Spec}  to define\n the source file name for an individual Ada compilation unit's spec. The array\n@@ -13244,7 +13246,7 @@ operating system).\n    for Spec (\"MyPack.MyChild\") use \"mypack.mychild.spec\";\n @end smallexample\n \n-@item @var{Body}\n+@item @code{Body}\n \n You can use the associative array attribute @code{Body} to\n define the source file name for an individual Ada compilation unit's body\n@@ -14252,7 +14254,7 @@ It is also possible to invoke some of the tools,\n @code{^gnatmetric^gnatmetric^}),\n and @code{^gnatpp^gnatpp^})\n on a set of project units thanks to the combination of the switches\n-@code{-P}, @code{-U} and possibly the main unit when one is interested\n+@option{-P}, @option{-U} and possibly the main unit when one is interested\n in its closure. For instance,\n @smallexample\n gnat metric -Pproj\n@@ -18645,7 +18647,7 @@ documentation), nor does it try to replace the @command{gnatmake} utility\n (@pxref{The GNAT Make Program gnatmake}).\n \n All the examples in this section are specific to the GNU version of\n-make. Although @code{make} is a standard utility, and the basic language\n+make. Although @command{make} is a standard utility, and the basic language\n is the same, these examples use some advanced features found only in\n @code{GNU make}.\n \n@@ -18775,13 +18777,13 @@ automatically.\n \n The example below presents two methods. The first one, although less\n general, gives you more control over the list. It involves wildcard\n-characters, that are automatically expanded by @code{make}. Its\n+characters, that are automatically expanded by @command{make}. Its\n shortcoming is that you need to explicitly specify some of the\n organization of your project, such as for instance the directory tree\n depth, whether some directories are found in a separate tree,...\n \n The second method is the most general one. It requires an external\n-program, called @code{find}, which is standard on all Unix systems. All\n+program, called @command{find}, which is standard on all Unix systems. All\n the directories found under a given root directory will be added to the\n list.\n \n@@ -19235,7 +19237,7 @@ version of that library that has been compiled with the @option{-g} switch\n \n Gnatmem must be supplied with the @file{gmem.out} file and the executable to\n examine. If the location of @file{gmem.out} file was not explicitly supplied by\n-@code{-i} switch, gnatmem will assume that this file can be found in the\n+@option{-i} switch, gnatmem will assume that this file can be found in the\n current directory. For example, after you have executed @file{my_program},\n @file{gmem.out} can be analyzed by @code{gnatmem} using the command:\n \n@@ -19657,7 +19659,7 @@ With this option, at each task termination, its stack usage is  output on\n It is not always convenient to output the stack usage when the program\n is still running. Hence, it is possible to delay this output until program\n termination. for a given number of tasks specified as the argument of the\n-@code{-u} option. For instance:\n+@option{-u} option. For instance:\n \n @smallexample\n $ gnatbind -u100 file\n@@ -21954,9 +21956,9 @@ separate from the generated code. It makes the object files considerably\n larger, but it does not add to the size of the actual executable that\n will be loaded into memory, and has no impact on run-time performance. The\n generation of debug information is triggered by the use of the\n-^-g^/DEBUG^ switch in the gcc or gnatmake command used to carry out\n-the compilations. It is important to emphasize that the use of these\n-options does not change the generated code.\n+^-g^/DEBUG^ switch in the @command{gcc} or @command{gnatmake} command\n+used to carry out the compilations. It is important to emphasize that\n+the use of these options does not change the generated code.\n \n The debugging information is written in standard system formats that\n are used by many tools, including debuggers and profilers. The format\n@@ -22029,7 +22031,7 @@ describes some of the additional commands that can be given to @code{GDB}.\n @end ifset\n includes extensive documentation on the use\n of these commands, together with examples of their use. Furthermore,\n-the command @var{help} invoked from within @code{GDB} activates a simple help\n+the command @command{help} invoked from within GDB activates a simple help\n facility which summarizes the available commands and their options.\n In this section we summarize a few of the most commonly\n used commands to give an idea of what @code{GDB} is about. You should create\n@@ -30471,7 +30473,7 @@ to standard output the list of entry points in the DLL. Note that if\n some routines in the DLL have the @code{Stdcall} convention\n (@pxref{Windows Calling Conventions}) with stripped @code{@@}@i{nn}\n suffix then you'll have to edit @file{api.def} to add it, and specify\n-@code{-k} to @code{gnatdll} when creating the import library.\n+@option{-k} to @command{gnatdll} when creating the import library.\n \n @noindent\n Here are some hints to find the right @code{@@}@i{nn} suffix.\n@@ -30568,7 +30570,7 @@ into the DLL. This is done by using the standard @command{gnatmake} tool.\n \n @item building the DLL\n \n-To build the DLL you must use @command{gcc}'s @code{-shared}\n+To build the DLL you must use @command{gcc}'s @option{-shared}\n option. It is quite simple to use this method:\n \n @smallexample\n@@ -30605,7 +30607,7 @@ $ attrib +R apilib\\*.ali\n \n At this point it is possible to use the DLL by directly linking\n against it. Note that you must use the GNAT shared runtime when using\n-GNAT shared libraries. This is achieved by using @code{-shared} binder's\n+GNAT shared libraries. This is achieved by using @option{-shared} binder's\n option.\n \n @smallexample\n@@ -31009,7 +31011,7 @@ advise the reader to build relocatable DLL.\n @item -b @var{address}\n @cindex @option{-b} (@code{gnatdll})\n Set the relocatable DLL base address. By default the address is\n-@var{0x11000000}.\n+@code{0x11000000}.\n \n @item -bargs @var{opts}\n @cindex @option{-bargs} (@code{gnatdll})"}]}