{"sha": "c1af059c2c372c462d2e66d428207be3b59233f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFhZjA1OWMyYzM3MmM0NjJkMmU2NmQ0MjgyMDdiZTNiNTkyMzNmMw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2008-12-02T21:50:02Z"}, "committer": {"name": "Maxim Kuvyrkov", "email": "mkuvyrkov@gcc.gnu.org", "date": "2008-12-02T21:50:02Z"}, "message": "lb1sf68.asm (PICCALL, PICJUMP): Use GOT instead of PC-relative addressing when compiling for uclinux PIC.\n\n\t* config/m68k/lb1sf68.asm (PICCALL, PICJUMP): Use GOT instead of\n\tPC-relative addressing when compiling for uclinux PIC.\n\t(__cmpdf_internal, __cmpsf_internal): Hide.\n\t(__cmpdf, __cmpsf): Use PIC call sequence.\n\nCo-Authored-By: Maxim Kuvyrkov <maxim@codesourcery.com>\n\nFrom-SVN: r142373", "tree": {"sha": "311dabd122d4146502826c66e93bcef4fd4822a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/311dabd122d4146502826c66e93bcef4fd4822a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1af059c2c372c462d2e66d428207be3b59233f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1af059c2c372c462d2e66d428207be3b59233f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1af059c2c372c462d2e66d428207be3b59233f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1af059c2c372c462d2e66d428207be3b59233f3/comments", "author": null, "committer": null, "parents": [{"sha": "384392535a3000eb5ada737977cc23e6595ef004", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/384392535a3000eb5ada737977cc23e6595ef004", "html_url": "https://github.com/Rust-GCC/gccrs/commit/384392535a3000eb5ada737977cc23e6595ef004"}], "stats": {"total": 90, "additions": 64, "deletions": 26}, "files": [{"sha": "bcbb31daf4e842d477b92e41d2ef37dedd56520b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1af059c2c372c462d2e66d428207be3b59233f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1af059c2c372c462d2e66d428207be3b59233f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1af059c2c372c462d2e66d428207be3b59233f3", "patch": "@@ -1,3 +1,11 @@\n+2008-12-02  Nathan Sidwell  <nathan@codesourcery.com>\n+\t    Maxim Kuvyrkov  <maxim@codesourcery.com>\n+\n+\t* config/m68k/lb1sf68.asm (PICCALL, PICJUMP): Use GOT instead of\n+\tPC-relative addressing when compiling for uclinux PIC.\n+\t(__cmpdf_internal, __cmpsf_internal): Hide.\n+\t(__cmpdf, __cmpsf): Use PIC call sequence.\n+\n 2008-12-02  Andreas Tobler  <a.tobler@schweiz.org>\n \t    Jack Howarth <howarth@bromo.med.uc.edu>\n "}, {"sha": "a3d96d6661e05007a9a98acdf5f2e8658c997ad4", "filename": "gcc/config/m68k/lb1sf68.asm", "status": "modified", "additions": 56, "deletions": 26, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1af059c2c372c462d2e66d428207be3b59233f3/gcc%2Fconfig%2Fm68k%2Flb1sf68.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1af059c2c372c462d2e66d428207be3b59233f3/gcc%2Fconfig%2Fm68k%2Flb1sf68.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flb1sf68.asm?ref=c1af059c2c372c462d2e66d428207be3b59233f3", "patch": "@@ -129,30 +129,6 @@ Boston, MA 02110-1301, USA.  */\n \n #else /* __PIC__ */\n \n-\t/* Common for Linux and uClinux, the latter with either\n-\t   -mid-shared-library or -msep-data.  */\n-\n-\t.macro PICCALL addr\n-#if defined (__mcoldfire__) && !defined (__mcfisab__) && !defined (__mcfisac__)\n-\tlea\t\\addr-.-8,a0\n-\tjsr\tpc@(a0)\n-#else\n-\tbsr\t\\addr\n-#endif\n-\t.endm\n-\n-\t.macro PICJUMP addr\n-\t/* ISA C has no bra.l instruction, and since this assembly file\n-\t   gets assembled into multiple object files, we avoid the\n-\t   bra instruction entirely.  */\n-#if defined (__mcoldfire__) && !defined (__mcfisab__)\n-\tlea\t\\addr-.-8,a0\n-\tjmp\tpc@(a0)\n-#else\n-\tbra\t\\addr\n-#endif\n-\t.endm\n-\n # if defined (__uClinux__)\n \n \t/* Versions for uClinux */\n@@ -171,6 +147,16 @@ Boston, MA 02110-1301, USA.  */\n \tmovel\t\\sym@GOT(\\areg), sp@-\n \t.endm\n \n+\t.macro PICCALL addr\n+\tPICLEA\t\\addr,a0\n+\tjsr\ta0@\n+\t.endm\n+\n+\t.macro PICJUMP addr\n+\tPICLEA\t\\addr,a0\n+\tjmp\ta0@\n+\t.endm\n+\n #  else /* !__ID_SHARED_LIBRARY__ */\n \n \t/* Versions for -msep-data */\n@@ -183,6 +169,27 @@ Boston, MA 02110-1301, USA.  */\n \tmovel\t\\sym@GOT(a5), sp@-\n \t.endm\n \n+\t.macro PICCALL addr\n+#if defined (__mcoldfire__) && !defined (__mcfisab__) && !defined (__mcfisac__)\n+\tlea\t\\addr-.-8,a0\n+\tjsr\tpc@(a0)\n+#else\n+\tbsr\t\\addr\n+#endif\n+\t.endm\n+\n+\t.macro PICJUMP addr\n+\t/* ISA C has no bra.l instruction, and since this assembly file\n+\t   gets assembled into multiple object files, we avoid the\n+\t   bra instruction entirely.  */\n+#if defined (__mcoldfire__) && !defined (__mcfisab__)\n+\tlea\t\\addr-.-8,a0\n+\tjmp\tpc@(a0)\n+#else\n+\tbra\t\\addr\n+#endif\n+\t.endm\n+\n #  endif\n \n # else /* !__uClinux__ */\n@@ -201,6 +208,27 @@ Boston, MA 02110-1301, USA.  */\n \tmovel\t\\sym@GOT(\\areg), sp@-\n \t.endm\n \n+\t.macro PICCALL addr\n+#if defined (__mcoldfire__) && !defined (__mcfisab__) && !defined (__mcfisac__)\n+\tlea\t\\addr-.-8,a0\n+\tjsr\tpc@(a0)\n+#else\n+\tbsr\t\\addr\n+#endif\n+\t.endm\n+\n+\t.macro PICJUMP addr\n+\t/* ISA C has no bra.l instruction, and since this assembly file\n+\t   gets assembled into multiple object files, we avoid the\n+\t   bra instruction entirely.  */\n+#if defined (__mcoldfire__) && !defined (__mcfisab__)\n+\tlea\t\\addr-.-8,a0\n+\tjmp\tpc@(a0)\n+#else\n+\tbra\t\\addr\n+#endif\n+\t.endm\n+\n # endif\n #endif /* __PIC__ */\n \n@@ -648,6 +676,7 @@ ROUND_TO_MINUS    = 3 | round result towards minus infinity\n \t.globl SYM (__negdf2)\n \t.globl SYM (__cmpdf2)\n \t.globl SYM (__cmpdf2_internal)\n+\t.hidden SYM (__cmpdf2_internal)\n \n \t.text\n \t.even\n@@ -2410,7 +2439,7 @@ SYM (__cmpdf2):\n \tmovl\ta6@(16),sp@-\n \tmovl\ta6@(12),sp@-\n \tmovl\ta6@(8),sp@-\n-\tbsr\tSYM (__cmpdf2_internal)\n+\tPICCALL\tSYM (__cmpdf2_internal)\n \tunlk\ta6\n \trts\n \n@@ -2562,6 +2591,7 @@ ROUND_TO_MINUS    = 3 | round result towards minus infinity\n \t.globl SYM (__negsf2)\n \t.globl SYM (__cmpsf2)\n \t.globl SYM (__cmpsf2_internal)\n+\t.hidden SYM (__cmpsf2_internal)\n \n | These are common routines to return and signal exceptions.\t\n \n@@ -3816,7 +3846,7 @@ SYM (__cmpsf2):\n \tpea\t1\n \tmovl\ta6@(12),sp@-\n \tmovl\ta6@(8),sp@-\n-\tbsr (__cmpsf2_internal)\n+\tPICCALL SYM (__cmpsf2_internal)\n \tunlk\ta6\n \trts\n "}]}