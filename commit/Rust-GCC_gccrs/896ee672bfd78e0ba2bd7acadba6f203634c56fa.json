{"sha": "896ee672bfd78e0ba2bd7acadba6f203634c56fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk2ZWU2NzJiZmQ3OGUwYmEyYmQ3YWNhZGJhNmYyMDM2MzRjNTZmYQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-04-18T15:47:10Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-04-18T15:47:10Z"}, "message": "rep_clause5.ad[sb]: New test.\n\n\t* gnat.dg/rep_clause5.ad[sb]: New test.\n\t* gnat.dg/rep_clause5_pkg.ads: New helper.\n\nFrom-SVN: r158488", "tree": {"sha": "b32162dee3e320de2b5ed9a8a8d4f885a52ef279", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b32162dee3e320de2b5ed9a8a8d4f885a52ef279"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/896ee672bfd78e0ba2bd7acadba6f203634c56fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/896ee672bfd78e0ba2bd7acadba6f203634c56fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/896ee672bfd78e0ba2bd7acadba6f203634c56fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/896ee672bfd78e0ba2bd7acadba6f203634c56fa/comments", "author": null, "committer": null, "parents": [{"sha": "017bd486269ace692ab648b95a3890674ddcfbb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/017bd486269ace692ab648b95a3890674ddcfbb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/017bd486269ace692ab648b95a3890674ddcfbb1"}], "stats": {"total": 445, "additions": 442, "deletions": 3}, "files": [{"sha": "98545163236111b7cedd19dac1a5cab465dc99af", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/896ee672bfd78e0ba2bd7acadba6f203634c56fa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/896ee672bfd78e0ba2bd7acadba6f203634c56fa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=896ee672bfd78e0ba2bd7acadba6f203634c56fa", "patch": "@@ -1,13 +1,18 @@\n+2010-04-18  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/rep_clause5.ad[sb]: New test.\n+\t* gnat.dg/rep_clause5_pkg.ads: New helper.\n+\n 2010-04-18 Ira Rosen <irar@il.ibm.com>\n \n \tPR tree-optimization/43771\n \t* g++.dg/vect/pr43771.cc: New test.\n \n 2010-04-17  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n-   PR fortran/31538\n-   * gfortran.dg/bounds_check_fail_4.f90: Adjust error message.\n-   * gfortran.dg/bounds_check_fail_3.f90: Ditto.\n+\tPR fortran/31538\n+\t* gfortran.dg/bounds_check_fail_4.f90: Adjust error message.\n+\t* gfortran.dg/bounds_check_fail_3.f90: Ditto.\n \n 2010-04-17  Eric Botcazou  <ebotcazou@adacore.com>\n "}, {"sha": "7fdf264095adee3b8ed4b85ec7a19ef729188417", "filename": "gcc/testsuite/gnat.dg/rep_clause5.adb", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/896ee672bfd78e0ba2bd7acadba6f203634c56fa/gcc%2Ftestsuite%2Fgnat.dg%2Frep_clause5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/896ee672bfd78e0ba2bd7acadba6f203634c56fa/gcc%2Ftestsuite%2Fgnat.dg%2Frep_clause5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Frep_clause5.adb?ref=896ee672bfd78e0ba2bd7acadba6f203634c56fa", "patch": "@@ -0,0 +1,39 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O\" }\n+\n+package body Rep_Clause5 is\n+\n+    function To_LNumber(S : String) return LNumber_Type is\n+        V :  VString;\n+        LV : Long_Type;\n+        LN : LNumber_Type;\n+    begin\n+        LV := To_Long(V, 10);\n+        LN := LNumber_Type(LV);\n+        return LN;\n+    end;\n+\n+    procedure Merge_Numbered(LNodes : in out LNodes_Ptr) is\n+        T1  : Token_Type;\n+        LNO : LNumber_Type;\n+    begin\n+        for X in LNodes.all'Range loop\n+            T1 := LNodes(X).Line(0);\n+            if T1.Token /= LEX_LF then\n+                declare\n+                    S : String := Element(T1.SID);\n+                begin\n+                    begin\n+                        LNO := To_LNumber(S);\n+                    exception\n+                        when Bad_Number =>\n+                            LNO := 0;\n+                        when Too_Large =>\n+                            LNO := 0;\n+                    end;\n+                end;\n+            end if;\n+        end loop;\n+    end;\n+\n+end Rep_Clause5;"}, {"sha": "986f893ecbb60048e6bd2c0c7440df778000124c", "filename": "gcc/testsuite/gnat.dg/rep_clause5.ads", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/896ee672bfd78e0ba2bd7acadba6f203634c56fa/gcc%2Ftestsuite%2Fgnat.dg%2Frep_clause5.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/896ee672bfd78e0ba2bd7acadba6f203634c56fa/gcc%2Ftestsuite%2Fgnat.dg%2Frep_clause5.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Frep_clause5.ads?ref=896ee672bfd78e0ba2bd7acadba6f203634c56fa", "patch": "@@ -0,0 +1,12 @@\n+with Rep_Clause5_Pkg; use Rep_Clause5_Pkg;\n+\n+package Rep_Clause5 is\n+\n+    Bad_Number : exception;\n+    Too_Large  : exception;\n+\n+    type LNumber_Type is range 0..99999;\n+\n+    procedure Merge_Numbered(LNodes : in out LNodes_Ptr);\n+\n+end Rep_Clause5;"}, {"sha": "e3496c4a2b7f8227cfd5c39877086ab4228b48ad", "filename": "gcc/testsuite/gnat.dg/rep_clause5_pkg.ads", "status": "added", "additions": 383, "deletions": 0, "changes": 383, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/896ee672bfd78e0ba2bd7acadba6f203634c56fa/gcc%2Ftestsuite%2Fgnat.dg%2Frep_clause5_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/896ee672bfd78e0ba2bd7acadba6f203634c56fa/gcc%2Ftestsuite%2Fgnat.dg%2Frep_clause5_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Frep_clause5_pkg.ads?ref=896ee672bfd78e0ba2bd7acadba6f203634c56fa", "patch": "@@ -0,0 +1,383 @@\n+package Rep_Clause5_Pkg is\n+\n+    type ID_Type      is mod 65536;\n+    type String_ID    is new ID_Type;\n+    type LNumber_Type is range 0..99999;\n+    subtype Long_Type is Integer;\n+\n+    type Func_ID is (No_Func, FUN_SGN, FUN_EXP, FUN_LOG, FUN_LOG10);\n+\n+    type Token_Kind is (\n+        No_Token,\n+        LEX_BINARY,\n+        LEX_SECTION,\n+        LEX_003,\n+        LEX_004,\n+        LEX_005,\n+        LEX_006,\n+        LEX_007,\n+        LEX_008,\n+        LEX_009,\n+        LEX_LF,\n+        LEX_011,\n+        LEX_012,\n+        LEX_013,\n+        LEX_014,\n+        LEX_015,\n+        LEX_016,\n+        LEX_017,\n+        LEX_018,\n+        LEX_019,\n+        LEX_020,\n+        LEX_021,\n+        LEX_022,\n+        LEX_023,\n+        LEX_024,\n+        LEX_025,\n+        LEX_026,\n+        LEX_027,\n+        LEX_028,\n+        LEX_029,\n+        LEX_030,\n+        LEX_031,\n+        LEX_032,\n+        '!',\n+        '\"',\n+        '#',\n+        '$',\n+        '%',\n+        '&',\n+        ''',\n+        '(',\n+        ')',\n+        '*',\n+        '+',\n+        ',',\n+        '-',\n+        '.',\n+        '/',\n+        '0',\n+        '1',\n+        '2',\n+        '3',\n+        '4',\n+        '5',\n+        '6',\n+        '7',\n+        '8',\n+        '9',\n+        ':',\n+        ';',\n+        '<',\n+        '=',\n+        '>',\n+        '?',\n+        '@',\n+        'A',\n+        'B',\n+        'C',\n+        'D',\n+        'E',\n+        'F',\n+        'G',\n+        'H',\n+        'I',\n+        'J',\n+        'K',\n+        'L',\n+        'M',\n+        'N',\n+        'O',\n+        'P',\n+        'Q',\n+        'R',\n+        'S',\n+        'T',\n+        'U',\n+        'V',\n+        'W',\n+        'X',\n+        'Y',\n+        'Z',\n+        '[',\n+        '\\',\n+        ']',\n+        '^',\n+        '_',\n+        '`',\n+        'a',\n+        'b',\n+        'c',\n+        'd',\n+        'e',\n+        'f',\n+        'g',\n+        'h',\n+        'i',\n+        'j',\n+        'k',\n+        'l',\n+        'm',\n+        'n',\n+        'o',\n+        LEX_SFUN3,\n+        LEX_SFUN2,\n+        LEX_SFUN1,\n+        LEX_SFUNN,\n+        LEX_FUN3,\n+        LEX_FUN2,\n+        LEX_FUN1,\n+        LEX_FUNN,\n+        'x',\n+        'y',\n+        'z',\n+        '{',\n+        '|',\n+        '}',\n+        '~',\n+        LEX_CRTA,\n+        LEX_ISNULL,\n+        LEX_USING,\n+        LEX_HANDLE,\n+        LEX_CALLX,\n+        LEX_COMPLEX,\n+        LEX_FIXED,\n+        LEX_ENV,\n+        LEX_SPARSE,\n+        LEX_SUBROUTINE,\n+        LEX_CALL,\n+        LEX_BOX,\n+        LEX_VLINE,\n+        LEX_HLINE,\n+        LEX_MAXLENGTH,\n+        LEX_DLENGTH,\n+        LEX_INPUT,\n+        LEX_INITIALIZE,\n+        LEX_OUTPUT,\n+        LEX_UNLINK,\n+        LEX_SEEK,\n+        LEX_EXIT,\n+        LEX_NOT,\n+        LEX_COMMON,\n+        LEX_CHAIN,\n+        LEX_DEF,\n+        LEX_ARITY,\n+        LEX_RESUME,\n+        LEX_PIC_S,\n+        LEX_BG,\n+        LEX_FG,\n+        LEX_PC,\n+        LEX_CRT,\n+        LEX_ENUM,\n+        LEX_DECLARE,\n+        LEX_CURSOR,\n+        LEX_DROP,\n+        LEX_CURRENT,\n+        LEX_ISOLATION,\n+        LEX_SET,\n+        LEX_TRANSACTION,\n+        LEX_COMMIT,\n+        LEX_ABORT,\n+        LEX_BEGIN,\n+        LEX_PREVIOUS,\n+        LEX_LAST,\n+        LEX_FIRST,\n+        LEX_KEY,\n+        LEX_START,\n+        LEX_REWRITE,\n+        LEX_INDEX,\n+        LEX_SECONDARY,\n+        LEX_PRIMARY,\n+        LEX_COLUMN,\n+        LEX_TEMP,\n+        LEX_TABLE,\n+        LEX_CREATE,\n+        LEX_HASH,\n+        LEX_BTREE,\n+        LEX_UPDATE,\n+        LEX_ERROR,\n+        LEX_ACCEPT,\n+        LEX_AVG,\n+        LEX_MAX,\n+        LEX_MIN,\n+        LEX_FIELD,\n+        LEX_RESTORE,\n+        LEX_END,\n+        LEX_STEP,\n+        LEX_NEXT,\n+        LEX_FOR,\n+        LEX_RETURN,\n+        LEX_GOSUB,\n+        LEX_RANGE,\n+        LEX_EXPON,\n+        LEX_XOR,\n+        LEX_OR,\n+        LEX_AND,\n+        LEX_SHIFTR,\n+        LEX_GE,\n+        LEX_NE,\n+        LEX_SHIFTL,\n+        LEX_LE,\n+        LEX_VARYING,\n+        LEX_LENGTH,\n+        LEX_PRINT,\n+        LEX_IF,\n+        LEX_GOTO,\n+        LEX_ON,\n+        LEX_THEN,\n+        LEX_DELETE,\n+        LEX_TO,\n+        LEX_SEQUENCE,\n+        LEX_NONUNIQUE,\n+        LEX_UNIQUE,\n+        LEX_FILE,\n+        LEX_CLOSE,\n+        LEX_OPEN,\n+        LEX_DATABASE,\n+        LEX_RECORD,\n+        LEX_DATA,\n+        LEX_WRITE,\n+        LEX_READ,\n+        LEX_STOP,\n+        LEX_LET,\n+        LEX_MOD,\n+        LEX_LONG,\n+        LEX_DIM,\n+        LEX_SHORT,\n+        LEX_REM,\n+        LEX_SHELL,\n+        LEX_TOKEN,\n+        LEX_FLOAT,\n+        LEX_SIDENT,\n+        LEX_INLREM,\n+        LEX_ENDLIT,\n+        LEX_STRLIT,\n+        LEX_IDENT,\n+        LEX_LNUMBER,\n+        LEX_HEX,\n+        LEX_NUMBER,\n+        LEX_EOF,\n+        LEX_QUIT,\n+        LEX_LIST,\n+        LEX_REMOVE,\n+        LEX_RENUMBER,\n+        LEX_CONTINUE,\n+        LEX_RUN,\n+        LEX_MERGE,\n+        LEX_ENTER,\n+        LEX_NEW,\n+        LEX_RESET,\n+        LEX_SYMTAB,\n+        LEX_CLS,\n+        LEX_EDIT,\n+        LEX_SAVE,\n+        LEX_RESAVE,\n+        LEX_LOAD,\n+        LEX_NAME,\n+        LEX_LISTP,\n+        LEX_SHOW,\n+        LEX_STACK,\n+        LEX_STATUS,\n+        LEX_CACHE,\n+        LEX_INSPECT,\n+        LEX_STOW,\n+        LEX_PKGRUN,\n+        LEX_POP,\n+        LEX_CHECK,\n+        LEX_INSERT,\n+        LEX_INTO,\n+        LEX_VALUES,\n+        LEX_NULL,\n+        LEX_WHERE,\n+        LEX_FROM,\n+        LEX_EXEC,\n+        LEX_SELECT,\n+        LEX_AS,\n+        LEX_ALL,\n+        LEX_BY,\n+        LEX_CROSS,\n+        LEX_DESC,\n+        LEX_FULL,\n+        LEX_GROUP,\n+        LEX_INNER,\n+        LEX_JOIN,\n+        LEX_LEFT,\n+        LEX_LIMIT,\n+        LEX_NATURAL,\n+        LEX_OFFSET,\n+        LEX_ORDER,\n+        LEX_OUTER,\n+        LEX_RIGHT,\n+        LEX_FETCH,\n+        LEX_DISTINCT,\n+        LEX_DEFAULT,\n+        LEX_RETURNING,\n+        LEX_LEVEL,\n+        LEX_COMMITTED,\n+        LEX_SERIALIZABLE,\n+        LEX_ONLY,\n+        LEX_HOLD,\n+        LEX_FORWARD,\n+        LEX_WITH,\n+        LEX_PRIOR,\n+        LEX_RELATIVE,\n+        LEX_BACKWARD,\n+        LEX_OF,\n+        LEX_SCROLL,\n+        LEX_NOWAIT,\n+        LEX_HAVING,\n+        LEX_END_TOKENS\n+    );\n+\n+    type Aux_Kind is (No_Aux, SID_Aux, FID_Aux, LNO_Aux);\n+\n+    type Token_Type(Aux : Aux_Kind := No_Aux) is\n+        record\n+            Token : Token_Kind := No_Token;\n+            case Aux is\n+                when SID_Aux =>\n+                    SID :       String_ID;\n+                when FID_Aux =>\n+                    FID :       Func_ID;\n+                when LNO_Aux =>\n+                    LNO :       LNumber_Type;\n+                when No_Aux =>\n+                    null;\n+            end case;\n+        end record;\n+\n+    for Token_Type use\n+        record\n+            Aux     at 0 range 0..2;\n+            Token   at 0 range 3..12;\n+            SID     at 0 range 16..31;\n+            FID     at 0 range 16..31;\n+            LNO     at 0 range 13..31;\n+        end record;\n+\n+    type Tokens_Index is range 0..999999;\n+    type Token_Array is array(Tokens_Index range <>) of Token_Type;\n+    type Token_Line is access all Token_Array;\t\n+\n+    type Line_Node is\n+        record\n+            Line :     Token_Line;\n+            LNO :      LNumber_Type := 0;\n+            Numbered : Boolean := False;\n+        end record;\n+\n+    type Nodes_Index is range 0..999999;\n+    type LNodes_Array is array(Nodes_Index range <>) of Line_Node;\n+    type LNodes_Ptr is access all LNodes_Array;\n+\n+    type VString is\n+        record\n+            Max_Length : Natural := 0;\n+            Fixed :      Boolean := False;\n+        end record;\n+\n+    function To_Long(Object : VString; Radix : Natural) return Long_Type;\n+\n+    function Element (V : String_ID) return String;\n+\n+end Rep_Clause5_Pkg;"}]}