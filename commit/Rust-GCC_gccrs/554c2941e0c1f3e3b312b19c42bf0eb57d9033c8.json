{"sha": "554c2941e0c1f3e3b312b19c42bf0eb57d9033c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU0YzI5NDFlMGMxZjNlM2IzMTJiMTljNDJiZjBlYjU3ZDkwMzNjOA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2007-10-20T13:11:14Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2007-10-20T13:11:14Z"}, "message": "re PR target/33812 (ICE from epilogue vrsave code)\n\n\tPR target/33812\n\t* config/rs6000/rs6000.c (rs6000_emit_epilogue): Revert 2007-05-16\n\tchange for vrsave, ie restore after frame pop.\n\nFrom-SVN: r129511", "tree": {"sha": "7d355bcb1a828747f54336005dd7f4ef853e76d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d355bcb1a828747f54336005dd7f4ef853e76d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/554c2941e0c1f3e3b312b19c42bf0eb57d9033c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/554c2941e0c1f3e3b312b19c42bf0eb57d9033c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/554c2941e0c1f3e3b312b19c42bf0eb57d9033c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/554c2941e0c1f3e3b312b19c42bf0eb57d9033c8/comments", "author": null, "committer": null, "parents": [{"sha": "70365b5c3d02f224299cd40fb48959eec8d9e020", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70365b5c3d02f224299cd40fb48959eec8d9e020", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70365b5c3d02f224299cd40fb48959eec8d9e020"}], "stats": {"total": 36, "additions": 21, "deletions": 15}, "files": [{"sha": "0c7b1026afadf5dc3f82566a36de6ce7cd52746a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/554c2941e0c1f3e3b312b19c42bf0eb57d9033c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/554c2941e0c1f3e3b312b19c42bf0eb57d9033c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=554c2941e0c1f3e3b312b19c42bf0eb57d9033c8", "patch": "@@ -1,3 +1,9 @@\n+2007-10-20  Alan Modra  <amodra@bigpond.net.au>\n+\n+\tPR target/33812\n+\t* config/rs6000/rs6000.c (rs6000_emit_epilogue): Revert 2007-05-16\n+\tchange for vrsave, ie restore after frame pop.\n+\n 2007-10-19  David S. Miller  <davem@davemloft.net>\n \n \t* config/sparc/niagara2.md: Fix copyright notice."}, {"sha": "024eda782c866c8be0a1eec07e41c06a08e316c8", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/554c2941e0c1f3e3b312b19c42bf0eb57d9033c8/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/554c2941e0c1f3e3b312b19c42bf0eb57d9033c8/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=554c2941e0c1f3e3b312b19c42bf0eb57d9033c8", "patch": "@@ -16082,21 +16082,6 @@ rs6000_emit_epilogue (int sibcall)\n \t  }\n     }\n \n-  /* Restore VRSAVE if needed.  */\n-  if (TARGET_ALTIVEC && TARGET_ALTIVEC_VRSAVE\n-      && info->vrsave_mask != 0)\n-    {\n-      rtx addr, mem, reg;\n-\n-      addr = gen_rtx_PLUS (Pmode, frame_reg_rtx,\n-\t\t\t   GEN_INT (info->vrsave_save_offset + sp_offset));\n-      mem = gen_frame_mem (SImode, addr);\n-      reg = gen_rtx_REG (SImode, 12);\n-      emit_move_insn (reg, mem);\n-\n-      emit_insn (generate_set_vrsave (reg, info, 1));\n-    }\n-\n   /* If we have a frame pointer, a call to alloca,  or a large stack\n      frame, restore the old stack pointer using the backchain.  Otherwise,\n      we know what size to update it with.  */\n@@ -16123,6 +16108,21 @@ rs6000_emit_epilogue (int sibcall)\n       sp_offset = 0;\n     }\n \n+  /* Restore VRSAVE if needed.  */\n+  if (TARGET_ALTIVEC && TARGET_ALTIVEC_VRSAVE\n+      && info->vrsave_mask != 0)\n+    {\n+      rtx addr, mem, reg;\n+\n+      addr = gen_rtx_PLUS (Pmode, frame_reg_rtx,\n+\t\t\t   GEN_INT (info->vrsave_save_offset + sp_offset));\n+      mem = gen_frame_mem (SImode, addr);\n+      reg = gen_rtx_REG (SImode, 12);\n+      emit_move_insn (reg, mem);\n+\n+      emit_insn (generate_set_vrsave (reg, info, 1));\n+    }\n+\n   /* Get the old lr if we saved it.  */\n   if (info->lr_save_p)\n     {"}]}