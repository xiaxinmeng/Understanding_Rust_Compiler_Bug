{"sha": "9eca177408bb4bdad6ff4fea2cf5af4d02091788", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVjYTE3NzQwOGJiNGJkYWQ2ZmY0ZmVhMmNmNWFmNGQwMjA5MTc4OA==", "commit": {"author": {"name": "Michael Eager", "email": "eager@eagercon.com", "date": "2009-04-13T22:49:18Z"}, "committer": {"name": "Michael Eager", "email": "eager@gcc.gnu.org", "date": "2009-04-13T22:49:18Z"}, "message": "Add configuration-specific options for --target=powerpc-xilinx-eabi.\n\nFrom-SVN: r146016", "tree": {"sha": "d870eb2917606c324c4e8165323f69c8e13b6a96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d870eb2917606c324c4e8165323f69c8e13b6a96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9eca177408bb4bdad6ff4fea2cf5af4d02091788", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9eca177408bb4bdad6ff4fea2cf5af4d02091788", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9eca177408bb4bdad6ff4fea2cf5af4d02091788", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9eca177408bb4bdad6ff4fea2cf5af4d02091788/comments", "author": {"login": "eagerm", "id": 945532, "node_id": "MDQ6VXNlcjk0NTUzMg==", "avatar_url": "https://avatars.githubusercontent.com/u/945532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eagerm", "html_url": "https://github.com/eagerm", "followers_url": "https://api.github.com/users/eagerm/followers", "following_url": "https://api.github.com/users/eagerm/following{/other_user}", "gists_url": "https://api.github.com/users/eagerm/gists{/gist_id}", "starred_url": "https://api.github.com/users/eagerm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eagerm/subscriptions", "organizations_url": "https://api.github.com/users/eagerm/orgs", "repos_url": "https://api.github.com/users/eagerm/repos", "events_url": "https://api.github.com/users/eagerm/events{/privacy}", "received_events_url": "https://api.github.com/users/eagerm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b0e2d00839be9cb86101dea2ee75165121924015", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0e2d00839be9cb86101dea2ee75165121924015", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0e2d00839be9cb86101dea2ee75165121924015"}], "stats": {"total": 36, "additions": 29, "deletions": 7}, "files": [{"sha": "3e08e2b81a2938750201dfe2a4bfd2455941cd8c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eca177408bb4bdad6ff4fea2cf5af4d02091788/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eca177408bb4bdad6ff4fea2cf5af4d02091788/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9eca177408bb4bdad6ff4fea2cf5af4d02091788", "patch": "@@ -1,3 +1,11 @@\n+2009-04-13  Michael Eager <eager@eagercon.com>\n+\n+\t* config/rs6000/rs6000-c.c: generate defines if rs6000_xilinx_fpu:\n+\t_XFPU, _XFPU_SP_LITE, _XFPU_SP_FULL, _XFPU_DP_LITE, _XFPU_DP_FULL\n+\t* config/rs6000/xilinx.h: New.  Spec for powerpc-xilinx-eabi\n+\t* config.gcc (powerpc-xilinx-eabi): add xilinx.h to tm_file, \n+\tremove duplicate config\n+\n 2009-04-13  Dwarakanath Rajagopal  <dwarak.rajagopal@amd.com>\n \n \t* ipa-inline.c (cgraph_decide_inlining_of_small_function): Dump"}, {"sha": "ac2fcc1fb805c4652136fcb897a2b17d8209e961", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eca177408bb4bdad6ff4fea2cf5af4d02091788/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eca177408bb4bdad6ff4fea2cf5af4d02091788/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=9eca177408bb4bdad6ff4fea2cf5af4d02091788", "patch": "@@ -1775,7 +1775,7 @@ powerpc-*-eabialtivec*)\n \tuse_gcc_stdint=wrap\n \t;;\n powerpc-xilinx-eabi*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h usegas.h svr4.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/eabi.h rs6000/singlefp.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h usegas.h svr4.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/eabi.h rs6000/singlefp.h rs6000/xfpu.h rs6000/xilinx.h\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-fprules-fpbit rs6000/t-ppcgas rs6000/t-ppccomm\"\n \tuse_gcc_stdint=wrap\n@@ -1899,12 +1899,6 @@ powerpcle-*-eabi*)\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \tuse_gcc_stdint=wrap\n \t;;\n-powerpc-xilinx-eabi*)\n- \ttm_file=\"${tm_file} dbxelf.h elfos.h usegas.h svr4.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/eabi.h rs6000/singlefp.h rs6000/xfpu.h\"\n-  \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n-  \ttmake_file=\"rs6000/t-fprules rs6000/t-fprules-fpbit rs6000/t-ppcgas rs6000/t-ppccomm\"\n-\tuse_gcc_stdint=wrap\n-  \t;;\n rs6000-ibm-aix4.[3456789]* | powerpc-ibm-aix4.[3456789]*)\n \ttm_file=\"rs6000/biarch64.h ${tm_file} rs6000/aix.h rs6000/aix43.h rs6000/xcoff.h rs6000/aix-stdint.h\"\n \ttmake_file=rs6000/t-aix43"}, {"sha": "79c96ac5efdf12ee437427193d7abf9b3a1f5ce8", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eca177408bb4bdad6ff4fea2cf5af4d02091788/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eca177408bb4bdad6ff4fea2cf5af4d02091788/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=9eca177408bb4bdad6ff4fea2cf5af4d02091788", "patch": "@@ -347,6 +347,26 @@ rs6000_cpu_cpp_builtins (cpp_reader *pfile)\n   /* Let the compiled code know if 'f' class registers will not be available.  */\n   if (TARGET_SOFT_FLOAT || !TARGET_FPRS)\n     builtin_define (\"__NO_FPRS__\");\n+\n+  /* Generate defines for Xilinx FPU. */\n+  if (rs6000_xilinx_fpu) \n+    {\n+      builtin_define (\"_XFPU\");\n+      if (rs6000_single_float && ! rs6000_double_float)\n+\t{\n+\t  if (rs6000_simple_fpu) \n+\t    builtin_define (\"_XFPU_SP_LITE\"); \n+\t  else \n+\t    builtin_define (\"_XFPU_SP_FULL\");\n+\t}\n+      if (rs6000_double_float)\n+\t{\n+\t  if (rs6000_simple_fpu) \n+\t    builtin_define (\"_XFPU_DP_LITE\");\n+\t  else\n+\t    builtin_define (\"_XFPU_DP_FULL\");\n+        }\n+    }\n }\n \n \f"}]}