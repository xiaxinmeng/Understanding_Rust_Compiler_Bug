{"sha": "36618b93d0cbf25b1de5ec50998c3430e29c4585", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY2MThiOTNkMGNiZjI1YjFkZTVlYzUwOTk4YzM0MzBlMjljNDU4NQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-07-02T09:18:14Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-07-02T09:18:14Z"}, "message": "tree-flow.h (tree_ssa_useless_type_conversion_1): Rename to ...\n\n2007-07-02  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-flow.h (tree_ssa_useless_type_conversion_1): Rename to ...\n\t(useless_type_conversion_p): ... this.\n\t* tree-ssa.c (tree_ssa_useless_type_conversion_1): Rename to ...\n\t(useless_type_conversion_p): ... this.\n\t* builtins.c (fold_builtin_memory_op): Rename\n\ttree_ssa_useless_type_conversion_1 to useless_type_conversion_p.\n\t* tree-cfg.c (verify_expr): Likewise.\n\t* tree-ssa-address.c (tree_ssa_useless_type_conversion_1): Likewise.\n\t* tree-ssa-ccp.c (ccp_fold): Likewise.\n\t* tree-ssa-copy.c (may_propagate_copy): Likewise.\n\t* tree-ssa-dom.c (eliminate_redundant_computations): Likewise.\n\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Likewise.\n\t* tree-ssa-loop-niter.c (refine_bounds_using_guard): Likewise.\n\t* tree-ssa-pre.c (eliminate): Likewise.\n\t* tree-ssa.c (delete_tree_ssa): Likewise.\n\t(tree_ssa_useless_type_conversion): Likewise.\n\t* tree.c (build2_stat): Likewise.\n\nFrom-SVN: r126194", "tree": {"sha": "8b3a78c0cdf460cfb8a6f13264704d3ffe64d60c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b3a78c0cdf460cfb8a6f13264704d3ffe64d60c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36618b93d0cbf25b1de5ec50998c3430e29c4585", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36618b93d0cbf25b1de5ec50998c3430e29c4585", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36618b93d0cbf25b1de5ec50998c3430e29c4585", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36618b93d0cbf25b1de5ec50998c3430e29c4585/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1c00b50300fc85b1316036dc7da23c302e62222a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c00b50300fc85b1316036dc7da23c302e62222a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c00b50300fc85b1316036dc7da23c302e62222a"}], "stats": {"total": 64, "additions": 41, "deletions": 23}, "files": [{"sha": "31e1b425bea975f91a8d22127784451518d946e1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=36618b93d0cbf25b1de5ec50998c3430e29c4585", "patch": "@@ -1,3 +1,23 @@\n+2007-07-02  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-flow.h (tree_ssa_useless_type_conversion_1): Rename to ...\n+\t(useless_type_conversion_p): ... this.\n+\t* tree-ssa.c (tree_ssa_useless_type_conversion_1): Rename to ...\n+\t(useless_type_conversion_p): ... this.\n+\t* builtins.c (fold_builtin_memory_op): Rename\n+\ttree_ssa_useless_type_conversion_1 to useless_type_conversion_p.\n+\t* tree-cfg.c (verify_expr): Likewise.\n+\t* tree-ssa-address.c (tree_ssa_useless_type_conversion_1): Likewise.\n+\t* tree-ssa-ccp.c (ccp_fold): Likewise.\n+\t* tree-ssa-copy.c (may_propagate_copy): Likewise.\n+\t* tree-ssa-dom.c (eliminate_redundant_computations): Likewise.\n+\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Likewise.\n+\t* tree-ssa-loop-niter.c (refine_bounds_using_guard): Likewise.\n+\t* tree-ssa-pre.c (eliminate): Likewise.\n+\t* tree-ssa.c (delete_tree_ssa): Likewise.\n+\t(tree_ssa_useless_type_conversion): Likewise.\n+\t* tree.c (build2_stat): Likewise.\n+\n 2007-07-01  Daniel Berlin  <dberlin@dberlin.org>\n \n \tFix PR tree-optimization/32571"}, {"sha": "cf1d743b30e107306df166fb22fe178927959ef7", "filename": "gcc/builtins.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=36618b93d0cbf25b1de5ec50998c3430e29c4585", "patch": "@@ -8584,7 +8584,7 @@ fold_builtin_memory_op (tree dest, tree src, tree len, tree type, bool ignore, i\n \n       if (srctype == desttype\n \t  || (gimple_in_ssa_p (cfun)\n-\t      && tree_ssa_useless_type_conversion_1 (desttype, srctype)))\n+\t      && useless_type_conversion_p (desttype, srctype)))\n \texpr = srcvar;\n       else if ((INTEGRAL_TYPE_P (TREE_TYPE (srcvar))\n \t   || POINTER_TYPE_P (TREE_TYPE (srcvar)))"}, {"sha": "09fe7ebbe10b7d9482f028e07d925fbf2fe46b85", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=36618b93d0cbf25b1de5ec50998c3430e29c4585", "patch": "@@ -3287,8 +3287,8 @@ verify_expr (tree *tp, int *walk_subtrees, void *data ATTRIBUTE_UNUSED)\n \t}\n       /* Check to make sure the second operand is an integer with type of\n \t sizetype.  */\n-      if (!tree_ssa_useless_type_conversion_1 (sizetype,\n-\t\t\t\t\t       TREE_TYPE (TREE_OPERAND (t, 1))))\n+      if (!useless_type_conversion_p (sizetype,\n+\t\t\t\t     TREE_TYPE (TREE_OPERAND (t, 1))))\n \t{\n \t  error (\"invalid operand to pointer plus, second operand is not an \"\n \t\t \"integer with type of sizetype.\");"}, {"sha": "375b1786165f670ff56626f605b45096a8ecb8ac", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=36618b93d0cbf25b1de5ec50998c3430e29c4585", "patch": "@@ -868,7 +868,7 @@ extern void init_tree_ssa (void);\n extern edge ssa_redirect_edge (edge, basic_block);\n extern void flush_pending_stmts (edge);\n extern bool tree_ssa_useless_type_conversion (tree);\n-extern bool tree_ssa_useless_type_conversion_1 (tree, tree);\n+extern bool useless_type_conversion_p (tree, tree);\n extern void verify_ssa (bool);\n extern void delete_tree_ssa (void);\n extern void walk_use_def_chains (tree, walk_use_def_chains_fn, void *, bool);"}, {"sha": "7e8d4615a7b2fb6c4638bd88883b83054b7dd7a7", "filename": "gcc/tree-predcom.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Ftree-predcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Ftree-predcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-predcom.c?ref=36618b93d0cbf25b1de5ec50998c3430e29c4585", "patch": "@@ -633,7 +633,7 @@ determine_offset (struct data_reference *a, struct data_reference *b,\n   /* Check that both the references access the location in the same type.  */\n   typea = TREE_TYPE (DR_REF (a));\n   typeb = TREE_TYPE (DR_REF (b));\n-  if (!tree_ssa_useless_type_conversion_1 (typeb, typea))\n+  if (!useless_type_conversion_p (typeb, typea))\n     return false;\n \n   /* Check whether the base address and the step of both references is the"}, {"sha": "cbd9355c22722aeb4379911199ce28eaf56449fb", "filename": "gcc/tree-ssa-address.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Ftree-ssa-address.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Ftree-ssa-address.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-address.c?ref=36618b93d0cbf25b1de5ec50998c3430e29c4585", "patch": "@@ -604,7 +604,7 @@ create_mem_ref (block_stmt_iterator *bsi, tree type, aff_tree *addr)\n       /* Add the symbol to base, eventually forcing it to register.  */\n       if (parts.base)\n \t{\n-\t  gcc_assert (tree_ssa_useless_type_conversion_1\n+\t  gcc_assert (useless_type_conversion_p\n \t\t\t\t(sizetype, TREE_TYPE (parts.base)));\n \n \t  if (parts.index)"}, {"sha": "1188f86484a4296fccb86a0794903e2533bedb37", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=36618b93d0cbf25b1de5ec50998c3430e29c4585", "patch": "@@ -899,8 +899,7 @@ ccp_fold (tree stmt)\n \t}\n \n       if ((code == NOP_EXPR || code == CONVERT_EXPR)\n-\t  && tree_ssa_useless_type_conversion_1 (TREE_TYPE (rhs),\n-\t\t  \t\t\t\t TREE_TYPE (op0)))\n+\t  && useless_type_conversion_p (TREE_TYPE (rhs), TREE_TYPE (op0)))\n \treturn op0;\n       return fold_unary (code, TREE_TYPE (rhs), op0);\n     }"}, {"sha": "b44db5238b7e043b6fef5ee2a4fed676544ff45b", "filename": "gcc/tree-ssa-copy.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Ftree-ssa-copy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Ftree-ssa-copy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copy.c?ref=36618b93d0cbf25b1de5ec50998c3430e29c4585", "patch": "@@ -82,7 +82,7 @@ may_propagate_copy (tree dest, tree orig)\n \t                         DECL_UID (SSA_NAME_VAR (dest)))));\n   \n   /* Do not copy between types for which we *do* need a conversion.  */\n-  if (!tree_ssa_useless_type_conversion_1 (type_d, type_o))\n+  if (!useless_type_conversion_p (type_d, type_o))\n     return false;\n \n   /* FIXME.  GIMPLE is allowing pointer assignments and comparisons of"}, {"sha": "3b7bacd9660f39a4ad1f21b9751c3ae30bfb333c", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=36618b93d0cbf25b1de5ec50998c3430e29c4585", "patch": "@@ -1515,8 +1515,8 @@ eliminate_redundant_computations (tree stmt)\n   if (cached_lhs\n       && ((TREE_CODE (cached_lhs) != SSA_NAME\n \t   && (modify_expr_p\n-\t       || tree_ssa_useless_type_conversion_1 (TREE_TYPE (*expr_p),\n-\t\t\t\t\t\t      TREE_TYPE (cached_lhs))))\n+\t       || useless_type_conversion_p (TREE_TYPE (*expr_p),\n+\t\t\t\t\t    TREE_TYPE (cached_lhs))))\n \t  || may_propagate_copy (*expr_p, cached_lhs)))\n     {\n       if (dump_file && (dump_flags & TDF_DETAILS))\n@@ -1541,8 +1541,8 @@ eliminate_redundant_computations (tree stmt)\n \tretval = true;\n       \n       if (modify_expr_p\n-\t  && !tree_ssa_useless_type_conversion_1 (TREE_TYPE (*expr_p),\n-\t\t\t\t\t\t  TREE_TYPE (cached_lhs)))\n+\t  && !useless_type_conversion_p (TREE_TYPE (*expr_p),\n+\t\t\t\t        TREE_TYPE (cached_lhs)))\n \tcached_lhs = fold_convert (TREE_TYPE (*expr_p), cached_lhs);\n \n       propagate_tree_value (expr_p, cached_lhs);"}, {"sha": "07d682fba09c386e8fb76e6d4515a01d7f7af95e", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=36618b93d0cbf25b1de5ec50998c3430e29c4585", "patch": "@@ -601,8 +601,8 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs, tree use_stmt,\n       \t    && rhs == name)\n \t   || ((TREE_CODE (rhs) == NOP_EXPR\n \t\t|| TREE_CODE (rhs) == CONVERT_EXPR)\n-\t       && tree_ssa_useless_type_conversion_1 (TREE_TYPE (rhs),\n-\t\t\t\t\t\t      TREE_TYPE (def_rhs))))\n+\t       && useless_type_conversion_p (TREE_TYPE (rhs),\n+\t\t\t\t\t    TREE_TYPE (def_rhs))))\n     return forward_propagate_addr_expr (lhs, def_rhs);\n \n   /* Strip away any outer COMPONENT_REF, ARRAY_REF or ADDR_EXPR"}, {"sha": "e209f732a3b1a29cdd1fdbd6edbb39cdd9a58b00", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=36618b93d0cbf25b1de5ec50998c3430e29c4585", "patch": "@@ -213,7 +213,7 @@ refine_bounds_using_guard (tree type, tree varx, mpz_t offx,\n       STRIP_SIGN_NOPS (c0);\n       STRIP_SIGN_NOPS (c1);\n       ctype = TREE_TYPE (c0);\n-      if (!tree_ssa_useless_type_conversion_1 (ctype, type))\n+      if (!useless_type_conversion_p (ctype, type))\n \treturn;\n \n       break;"}, {"sha": "913cd7def9df069a93dccbdb7a19a298904b0ebf", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=36618b93d0cbf25b1de5ec50998c3430e29c4585", "patch": "@@ -3698,8 +3698,8 @@ eliminate (void)\n \t\t     which may require adding a simple cast, which fold_convert\n \t\t     will do for us.  */\n \t\t  if (TREE_CODE (*rhs_p) != SSA_NAME\n-\t\t      && !tree_ssa_useless_type_conversion_1 (TREE_TYPE (*rhs_p),\n-\t\t\t\t\t\t\t      TREE_TYPE (sprime)))\n+\t\t      && !useless_type_conversion_p (TREE_TYPE (*rhs_p),\n+\t\t\t\t\t\t    TREE_TYPE (sprime)))\n \t\t    sprime = fold_convert (TREE_TYPE (*rhs_p), sprime);\n \n \t\t  pre_stats.eliminations++;"}, {"sha": "b6ac9c68ba86519888424dbc68df2db47ed7165b", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=36618b93d0cbf25b1de5ec50998c3430e29c4585", "patch": "@@ -891,7 +891,7 @@ delete_tree_ssa (void)\n    useless type conversion, otherwise return false.  */\n \n bool\n-tree_ssa_useless_type_conversion_1 (tree outer_type, tree inner_type)\n+useless_type_conversion_p (tree outer_type, tree inner_type)\n {\n   if (inner_type == outer_type)\n     return true;\n@@ -964,7 +964,7 @@ tree_ssa_useless_type_conversion_1 (tree outer_type, tree inner_type)\n   /* Recurse for complex types.  */\n   else if (TREE_CODE (inner_type) == COMPLEX_TYPE\n \t   && TREE_CODE (outer_type) == COMPLEX_TYPE\n-\t   && tree_ssa_useless_type_conversion_1 (TREE_TYPE (outer_type),\n+\t   && useless_type_conversion_p (TREE_TYPE (outer_type),\n \t\t\t\t\t\t  TREE_TYPE (inner_type)))\n     return true;\n \n@@ -987,7 +987,7 @@ tree_ssa_useless_type_conversion (tree expr)\n     /* FIXME: Use of GENERIC_TREE_TYPE here is a temporary measure to work\n        around known bugs with GIMPLE_MODIFY_STMTs appearing in places\n        they shouldn't.  See PR 30391.  */\n-    return tree_ssa_useless_type_conversion_1\n+    return useless_type_conversion_p\n       (TREE_TYPE (expr),\n        GENERIC_TREE_TYPE (TREE_OPERAND (expr, 0)));\n "}, {"sha": "9bf7d4889727dc5509178f5017fecd53e4203dd0", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36618b93d0cbf25b1de5ec50998c3430e29c4585/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=36618b93d0cbf25b1de5ec50998c3430e29c4585", "patch": "@@ -3076,8 +3076,7 @@ build2_stat (enum tree_code code, tree tt, tree arg0, tree arg1 MEM_STAT_DECL)\n   if (code == POINTER_PLUS_EXPR && arg0 && arg1 && tt)\n     gcc_assert (POINTER_TYPE_P (tt) && POINTER_TYPE_P (TREE_TYPE (arg0))\n \t\t&& TREE_CODE (TREE_TYPE (arg1)) == INTEGER_TYPE\n-\t\t&& tree_ssa_useless_type_conversion_1 (sizetype,\n-\t\t\t\t\t\t       TREE_TYPE (arg1)));\n+\t\t&& useless_type_conversion_p (sizetype, TREE_TYPE (arg1)));\n \n   t = make_node_stat (code PASS_MEM_STAT);\n   TREE_TYPE (t) = tt;"}]}