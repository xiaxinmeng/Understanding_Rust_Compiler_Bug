{"sha": "9295e6afce10657a704512ddc34d5413f64cf06e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI5NWU2YWZjZTEwNjU3YTcwNDUxMmRkYzM0ZDU0MTNmNjRjZjA2ZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-29T23:34:54Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-29T23:34:54Z"}, "message": "(num_sign_bit_copies, case PLUS, case MULT): Replace occurrences of\nHOST_BITS_PER_INT with HOST_BITS_PER_WIDE_INT.\n\nFrom-SVN: r3920", "tree": {"sha": "baec559afcf9628aa04a8fb890a771cd075bdc4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/baec559afcf9628aa04a8fb890a771cd075bdc4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9295e6afce10657a704512ddc34d5413f64cf06e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9295e6afce10657a704512ddc34d5413f64cf06e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9295e6afce10657a704512ddc34d5413f64cf06e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9295e6afce10657a704512ddc34d5413f64cf06e/comments", "author": null, "committer": null, "parents": [{"sha": "6559c3f4f6d034adfccbc7ac871455cf18f6d709", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6559c3f4f6d034adfccbc7ac871455cf18f6d709", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6559c3f4f6d034adfccbc7ac871455cf18f6d709"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "631158d309bc33a7e94472930e0b0a1fe26de223", "filename": "gcc/combine.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9295e6afce10657a704512ddc34d5413f64cf06e/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9295e6afce10657a704512ddc34d5413f64cf06e/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=9295e6afce10657a704512ddc34d5413f64cf06e", "patch": "@@ -6532,7 +6532,7 @@ num_sign_bit_copies (x, mode)\n \t be 0 or 1, we know the result is either -1 or 0.  */\n \n       if (code == PLUS && XEXP (x, 1) == constm1_rtx\n-\t  && bitwidth <= HOST_BITS_PER_INT)\n+\t  && bitwidth <= HOST_BITS_PER_WIDE_INT)\n \t{\n \t  nonzero = nonzero_bits (XEXP (x, 0), mode);\n \t  if ((((HOST_WIDE_INT) 1 << (bitwidth - 1)) & nonzero) == 0)\n@@ -6555,7 +6555,7 @@ num_sign_bit_copies (x, mode)\n \n       result = bitwidth - (bitwidth - num0) - (bitwidth - num1);\n       if (result > 0\n-\t  && bitwidth <= HOST_BITS_PER_INT\n+\t  && bitwidth <= HOST_BITS_PER_WIDE_INT\n \t  && ((nonzero_bits (XEXP (x, 0), mode)\n \t       & ((HOST_WIDE_INT) 1 << (bitwidth - 1))) != 0)\n \t  && (nonzero_bits (XEXP (x, 1), mode)"}]}