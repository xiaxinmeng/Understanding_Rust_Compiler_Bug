{"sha": "7dff453e64108f7010812e7f85e35f8a78cb096f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RmZjQ1M2U2NDEwOGY3MDEwODEyZTdmODVlMzVmOGE3OGNiMDk2Zg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2011-08-06T14:05:39Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2011-08-06T14:05:39Z"}, "message": "Add testcases for PRs 48084/49504/49860.\n\n2011-08-06  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/48084\n\t* gcc.target/i386/pr48084-1.c: New.\n\t* gcc.target/i386/pr48084-2.c: Likewise.\n\t* gcc.target/i386/pr48084-3.c: Likewise.\n\t* gcc.target/i386/pr48084-4.c: Likewise.\n\t* gcc.target/i386/pr48084-5.c: Likewise.\n\n\tPR rtl-optimization/49504\n\t* gcc.target/i386/pr49504.c: New.\n\n\tPR target/49860\n\t* gcc.dg/pr49860.c: New.\n\nFrom-SVN: r177509", "tree": {"sha": "0738ef7281afbfe7e19b5892101f6b704e9b8bb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0738ef7281afbfe7e19b5892101f6b704e9b8bb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7dff453e64108f7010812e7f85e35f8a78cb096f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dff453e64108f7010812e7f85e35f8a78cb096f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dff453e64108f7010812e7f85e35f8a78cb096f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dff453e64108f7010812e7f85e35f8a78cb096f/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f68c9aa8feb0d6c901205569c341c67bf44a7af2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f68c9aa8feb0d6c901205569c341c67bf44a7af2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f68c9aa8feb0d6c901205569c341c67bf44a7af2"}], "stats": {"total": 100, "additions": 100, "deletions": 0}, "files": [{"sha": "f61bdab31cfa6e0aa0e6558ff4bb3b7aee606201", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dff453e64108f7010812e7f85e35f8a78cb096f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dff453e64108f7010812e7f85e35f8a78cb096f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7dff453e64108f7010812e7f85e35f8a78cb096f", "patch": "@@ -1,3 +1,18 @@\n+2011-08-06  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/48084\n+\t* gcc.target/i386/pr48084-1.c: New.\n+\t* gcc.target/i386/pr48084-2.c: Likewise.\n+\t* gcc.target/i386/pr48084-3.c: Likewise.\n+\t* gcc.target/i386/pr48084-4.c: Likewise.\n+\t* gcc.target/i386/pr48084-5.c: Likewise.\n+\n+\tPR rtl-optimization/49504\n+\t* gcc.target/i386/pr49504.c: New.\n+\n+\tPR target/49860\n+\t* gcc.dg/pr49860.c: New.\n+\n 2011-08-06  Nicola Pero  <nicola.pero@meta-innovation.com>\n \t\n \tPR libobjc/49882"}, {"sha": "faa5f1fd7e366c49a5d47c4678889d3a60e250b2", "filename": "gcc/testsuite/gcc.dg/pr49860.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dff453e64108f7010812e7f85e35f8a78cb096f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr49860.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dff453e64108f7010812e7f85e35f8a78cb096f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr49860.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr49860.c?ref=7dff453e64108f7010812e7f85e35f8a78cb096f", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-O3 -funroll-all-loops\" } */\n+\n+extern char inbuf[];\n+extern char outbuf[];\n+extern unsigned insize;\n+extern unsigned inptr;\n+static int max_len;\n+static int peek_bits;\n+void build_tree() {\n+  int len;\n+  char *prefixp;\n+  max_len = inbuf[inptr++];\n+  peek_bits = ((max_len) <= (12) ? (max_len) : (12));\n+  prefixp = &outbuf[1<<peek_bits];\n+  for (len = 1;\n+       len <= peek_bits;\n+       len++) {\n+  }\n+  while (prefixp > outbuf) *--prefixp = 0;\n+}"}, {"sha": "d9eef495cb0efbe9e9e74abba56f149fd722f823", "filename": "gcc/testsuite/gcc.target/i386/pr48084-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dff453e64108f7010812e7f85e35f8a78cb096f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr48084-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dff453e64108f7010812e7f85e35f8a78cb096f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr48084-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr48084-1.c?ref=7dff453e64108f7010812e7f85e35f8a78cb096f", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse2\" } */\n+\n+typedef int __m64 __attribute__ ((__vector_size__ (8), __may_alias__));\n+typedef float __v2sf __attribute__ ((__vector_size__ (8)));\n+typedef float __m128 __attribute__ ((__vector_size__ (16), __may_alias__));\n+typedef float __v4sf __attribute__ ((__vector_size__ (16)));\n+void\n+_mm_storeh_pi (__m64 *__P, __m128 __A)\n+{\n+  __builtin_ia32_storehps ((__v2sf *)__P, (__v4sf)__A);\n+}"}, {"sha": "2b41c0bba238f76ec6f74bcde5b4de92b4a141f8", "filename": "gcc/testsuite/gcc.target/i386/pr48084-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dff453e64108f7010812e7f85e35f8a78cb096f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr48084-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dff453e64108f7010812e7f85e35f8a78cb096f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr48084-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr48084-2.c?ref=7dff453e64108f7010812e7f85e35f8a78cb096f", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse2\" } */\n+\n+typedef int __m64 __attribute__ ((__vector_size__ (8), __may_alias__));\n+typedef char __v8qi __attribute__ ((__vector_size__ (8)));\n+void\n+_mm_maskmove_si64 (__m64 __A, __m64 __N, char *__P)\n+{\n+    __builtin_ia32_maskmovq ((__v8qi)__A, (__v8qi)__N, __P);\n+}"}, {"sha": "423c598042721971fcbd3ae2ecf9e532060ade19", "filename": "gcc/testsuite/gcc.target/i386/pr48084-3.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dff453e64108f7010812e7f85e35f8a78cb096f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr48084-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dff453e64108f7010812e7f85e35f8a78cb096f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr48084-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr48084-3.c?ref=7dff453e64108f7010812e7f85e35f8a78cb096f", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse3\" } */\n+\n+void\n+_mm_monitor (void const * __P, unsigned int __E, unsigned int __H)\n+{\n+   __builtin_ia32_monitor (__P, __E, __H);\n+}"}, {"sha": "df465a313aa0d827f38be02f26dde1404834c4ab", "filename": "gcc/testsuite/gcc.target/i386/pr48084-4.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dff453e64108f7010812e7f85e35f8a78cb096f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr48084-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dff453e64108f7010812e7f85e35f8a78cb096f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr48084-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr48084-4.c?ref=7dff453e64108f7010812e7f85e35f8a78cb096f", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O0 -msse2\" } */\n+\n+void\n+_mm_clflush (void const *__A)\n+{\n+  __builtin_ia32_clflush (__A);\n+}"}, {"sha": "d6ed8e5fc9c791d2ebfa1e71c551d434398238dc", "filename": "gcc/testsuite/gcc.target/i386/pr48084-5.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dff453e64108f7010812e7f85e35f8a78cb096f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr48084-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dff453e64108f7010812e7f85e35f8a78cb096f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr48084-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr48084-5.c?ref=7dff453e64108f7010812e7f85e35f8a78cb096f", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O0 -mrdrnd\" } */\n+\n+int\n+_rdrand16_step (unsigned short *__P)\n+{\n+  return __builtin_ia32_rdrand16_step (__P);\n+}"}, {"sha": "503e6c238bacccb23f82d08931ff3fadbbac2ec0", "filename": "gcc/testsuite/gcc.target/i386/pr49504.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dff453e64108f7010812e7f85e35f8a78cb096f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr49504.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dff453e64108f7010812e7f85e35f8a78cb096f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr49504.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr49504.c?ref=7dff453e64108f7010812e7f85e35f8a78cb096f", "patch": "@@ -0,0 +1,18 @@\n+/* PR target/49504 */\n+/* { dg-do run { target { x32 } } } */\n+/* { dg-options \"-O\" } */\n+\n+unsigned long long \n+foo (const void* p, unsigned long long q)\n+{\n+  unsigned long long a = (((unsigned long long) ((unsigned long) p)) + q) >> 32;\n+  return a;\n+}\n+\n+int\n+main ()\n+{\n+  if (foo (foo, 0x100000000ULL) != 0x1)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}