{"sha": "03ef0c6c55ab81002abef62cec430d0496c3a01c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNlZjBjNmM1NWFiODEwMDJhYmVmNjJjZWM0MzBkMDQ5NmMzYTAxYw==", "commit": {"author": {"name": "Marcel B\u00f6hme", "email": "boehme.marcel@gmail.com", "date": "2016-07-13T22:06:09Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2016-07-13T22:06:09Z"}, "message": "re PR c++/70926 (Libiberty Demangler segfaults (5))\n\n\tPR c++/70926\n\t* cplus-dem.c: Handle large values and overflow when demangling\n\tlength variables.\n\t(demangle_template_value_parm): Read only until end of mangled string.\n\t(do_hpacc_template_literal): Likewise.\n\t(do_type): Handle overflow when demangling array indices.\n\nFrom-SVN: r238313", "tree": {"sha": "b3334406be855b82bcea51ddd6f1f9d92224b0b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3334406be855b82bcea51ddd6f1f9d92224b0b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03ef0c6c55ab81002abef62cec430d0496c3a01c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03ef0c6c55ab81002abef62cec430d0496c3a01c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03ef0c6c55ab81002abef62cec430d0496c3a01c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03ef0c6c55ab81002abef62cec430d0496c3a01c/comments", "author": {"login": "dbgbench", "id": 29189320, "node_id": "MDQ6VXNlcjI5MTg5MzIw", "avatar_url": "https://avatars.githubusercontent.com/u/29189320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbgbench", "html_url": "https://github.com/dbgbench", "followers_url": "https://api.github.com/users/dbgbench/followers", "following_url": "https://api.github.com/users/dbgbench/following{/other_user}", "gists_url": "https://api.github.com/users/dbgbench/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbgbench/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbgbench/subscriptions", "organizations_url": "https://api.github.com/users/dbgbench/orgs", "repos_url": "https://api.github.com/users/dbgbench/repos", "events_url": "https://api.github.com/users/dbgbench/events{/privacy}", "received_events_url": "https://api.github.com/users/dbgbench/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d355cf973a80a3d15132ceabd55f6510f729d88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d355cf973a80a3d15132ceabd55f6510f729d88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d355cf973a80a3d15132ceabd55f6510f729d88"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "317bd63c0544f167b29327f6aa0d8743b0a3ac8f", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03ef0c6c55ab81002abef62cec430d0496c3a01c/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03ef0c6c55ab81002abef62cec430d0496c3a01c/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=03ef0c6c55ab81002abef62cec430d0496c3a01c", "patch": "@@ -1,3 +1,12 @@\n+2016-07-13  Marcel B\u00c3hme  <boehme.marcel@gmail.com>\n+\n+\tPR c++/70926\n+\t* cplus-dem.c: Handle large values and overflow when demangling\n+\tlength variables.\n+\t(demangle_template_value_parm): Read only until end of mangled string.\n+\t(do_hpacc_template_literal): Likewise.\n+\t(do_type): Handle overflow when demangling array indices.\n+\n 2016-06-12  Brooks Moses  <bmoses@google.com>\n \n \t* cp-demangle.c (cplus_demangle_print_callback): Avoid zero-length"}, {"sha": "3ee2df1c56ad4413fde2c68c68700da5b7dd2329", "filename": "libiberty/cplus-dem.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03ef0c6c55ab81002abef62cec430d0496c3a01c/libiberty%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03ef0c6c55ab81002abef62cec430d0496c3a01c/libiberty%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcplus-dem.c?ref=03ef0c6c55ab81002abef62cec430d0496c3a01c", "patch": "@@ -2053,7 +2053,8 @@ demangle_template_value_parm (struct work_stuff *work, const char **mangled,\n       else\n \t{\n \t  int symbol_len  = consume_count (mangled);\n-\t  if (symbol_len == -1)\n+\t  if (symbol_len == -1\n+\t      || symbol_len > (long) strlen (*mangled))\n \t    return -1;\n \t  if (symbol_len == 0)\n \t    string_appendn (s, \"0\", 1);\n@@ -3621,7 +3622,7 @@ do_type (struct work_stuff *work, const char **mangled, string *result)\n \t/* A back reference to a previously seen type */\n \tcase 'T':\n \t  (*mangled)++;\n-\t  if (!get_count (mangled, &n) || n >= work -> ntypes)\n+\t  if (!get_count (mangled, &n) || n < 0 || n >= work -> ntypes)\n \t    {\n \t      success = 0;\n \t    }\n@@ -3798,7 +3799,7 @@ do_type (struct work_stuff *work, const char **mangled, string *result)\n     /* A back reference to a previously seen squangled type */\n     case 'B':\n       (*mangled)++;\n-      if (!get_count (mangled, &n) || n >= work -> numb)\n+      if (!get_count (mangled, &n) || n < 0 || n >= work -> numb)\n \tsuccess = 0;\n       else\n \tstring_append (result, work->btypevec[n]);\n@@ -4139,7 +4140,8 @@ do_hpacc_template_literal (struct work_stuff *work, const char **mangled,\n \n   literal_len = consume_count (mangled);\n \n-  if (literal_len <= 0)\n+  if (literal_len <= 0\n+      || literal_len > (long) strlen (*mangled))\n     return 0;\n \n   /* Literal parameters are names of arrays, functions, etc.  and the"}, {"sha": "1d959528b97be708e443e71f443f4b74d317bbe4", "filename": "libiberty/testsuite/demangle-expected", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03ef0c6c55ab81002abef62cec430d0496c3a01c/libiberty%2Ftestsuite%2Fdemangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03ef0c6c55ab81002abef62cec430d0496c3a01c/libiberty%2Ftestsuite%2Fdemangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fdemangle-expected?ref=03ef0c6c55ab81002abef62cec430d0496c3a01c", "patch": "@@ -4556,3 +4556,16 @@ __vt_90000000000cafebabe\n \n _Z80800000000000000000000\n _Z80800000000000000000000\n+#\n+# Tests write access violation PR70926\n+\n+0__Ot2m02R5T0000500000\n+0__Ot2m02R5T0000500000\n+#\n+\n+0__GT50000000000_\n+0__GT50000000000_\n+#\n+\n+__t2m05B500000000000000000_\n+__t2m05B500000000000000000_"}]}