{"sha": "59a05b0ca26ba2af84ccafe3422f35c0460dff1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTlhMDViMGNhMjZiYTJhZjg0Y2NhZmUzNDIyZjM1YzA0NjBkZmYxYw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2009-10-21T10:08:39Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-10-21T10:08:39Z"}, "message": "tree-vect-stmts.c (exist_non_indexing_operands_for_use_p): Tweak order of checks.\n\n\t* tree-vect-stmts.c (exist_non_indexing_operands_for_use_p): Tweak\n\torder of checks.\n\nFrom-SVN: r153051", "tree": {"sha": "9ed512f560082f79b06d882da25f93947d5aecaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ed512f560082f79b06d882da25f93947d5aecaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59a05b0ca26ba2af84ccafe3422f35c0460dff1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59a05b0ca26ba2af84ccafe3422f35c0460dff1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59a05b0ca26ba2af84ccafe3422f35c0460dff1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59a05b0ca26ba2af84ccafe3422f35c0460dff1c/comments", "author": null, "committer": null, "parents": [{"sha": "a4bf37944a9f9d8eb77459181558f9194fc6e2db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4bf37944a9f9d8eb77459181558f9194fc6e2db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4bf37944a9f9d8eb77459181558f9194fc6e2db"}], "stats": {"total": 55, "additions": 49, "deletions": 6}, "files": [{"sha": "4b96a2f00dbca24024d112a5fe286b1857952be0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59a05b0ca26ba2af84ccafe3422f35c0460dff1c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59a05b0ca26ba2af84ccafe3422f35c0460dff1c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=59a05b0ca26ba2af84ccafe3422f35c0460dff1c", "patch": "@@ -1,3 +1,8 @@\n+2009-10-21  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree-vect-stmts.c (exist_non_indexing_operands_for_use_p): Tweak\n+\torder of checks.\n+\n 2009-10-20  Richard Henderson  <rth@redhat.com>\n \n \t* tree-eh.c (lower_try_finally_copy): Do lower_eh_constructs_1"}, {"sha": "ae7687def7058156059400c170c377c3ffbe3f4d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59a05b0ca26ba2af84ccafe3422f35c0460dff1c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59a05b0ca26ba2af84ccafe3422f35c0460dff1c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=59a05b0ca26ba2af84ccafe3422f35c0460dff1c", "patch": "@@ -1,3 +1,8 @@\n+2009-10-21  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/loop_optimization7.ad[sb]: New test.\n+\t* gnat.dg/loop_optimization7_pkg.ads: New helper.\n+\n 2009-10-21  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/41706"}, {"sha": "166839494658e67da9fa926d303b8bf1ae2164dc", "filename": "gcc/testsuite/gnat.dg/loop_optimization7.adb", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59a05b0ca26ba2af84ccafe3422f35c0460dff1c/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59a05b0ca26ba2af84ccafe3422f35c0460dff1c/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization7.adb?ref=59a05b0ca26ba2af84ccafe3422f35c0460dff1c", "patch": "@@ -0,0 +1,16 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O3\" }\n+-- { dg-options \"-O3 -msse\" { target i?86-*-* x86_64-*-* } }\n+\n+package body Loop_Optimization7 is\n+\n+  function Conv (A : Arr) return Arr is\n+    Result : Arr;\n+  begin\n+    for I in A'Range loop\n+      Result (I) := Conv (A (I));\n+    end loop;\n+    return Result;\n+  end;\n+\n+end Loop_Optimization7;"}, {"sha": "ab0a165ea904b1b50b658891c229e784d8fb67a0", "filename": "gcc/testsuite/gnat.dg/loop_optimization7.ads", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59a05b0ca26ba2af84ccafe3422f35c0460dff1c/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization7.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59a05b0ca26ba2af84ccafe3422f35c0460dff1c/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization7.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization7.ads?ref=59a05b0ca26ba2af84ccafe3422f35c0460dff1c", "patch": "@@ -0,0 +1,9 @@\n+with Loop_Optimization7_Pkg; use Loop_Optimization7_Pkg;\n+\n+package Loop_Optimization7  is\n+\n+   type Arr is array (1..8) of Rec;\n+\n+   function Conv (A : Arr) return Arr;\n+\n+end Loop_Optimization7;"}, {"sha": "0eaefa1b0f32c8904379cb9ae5bd1bb8fee239da", "filename": "gcc/testsuite/gnat.dg/loop_optimization7_pkg.ads", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59a05b0ca26ba2af84ccafe3422f35c0460dff1c/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization7_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59a05b0ca26ba2af84ccafe3422f35c0460dff1c/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization7_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization7_pkg.ads?ref=59a05b0ca26ba2af84ccafe3422f35c0460dff1c", "patch": "@@ -0,0 +1,10 @@\n+package Loop_Optimization7_Pkg is\n+  pragma Pure;\n+\n+  type Rec is record\n+    F : Float;\n+  end record;\n+\n+  function Conv (Trig : Rec) return Rec;\n+\n+end Loop_Optimization7_Pkg;"}, {"sha": "fb4a5bf5dd768d25c673d7050a4288334ee03c39", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59a05b0ca26ba2af84ccafe3422f35c0460dff1c/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59a05b0ca26ba2af84ccafe3422f35c0460dff1c/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=59a05b0ca26ba2af84ccafe3422f35c0460dff1c", "patch": "@@ -172,13 +172,13 @@ exist_non_indexing_operands_for_use_p (tree use, gimple stmt)\n {\n   tree operand;\n   stmt_vec_info stmt_info = vinfo_for_stmt (stmt);\n- \n+\n   /* USE corresponds to some operand in STMT. If there is no data\n      reference in STMT, then any operand that corresponds to USE\n      is not indexing an array.  */\n   if (!STMT_VINFO_DATA_REF (stmt_info))\n     return true;\n- \n+\n   /* STMT has a data_ref. FORNOW this means that its of one of\n      the following forms:\n      -1- ARRAY_REF = var\n@@ -191,14 +191,12 @@ exist_non_indexing_operands_for_use_p (tree use, gimple stmt)\n \n      Therefore, all we need to check is if STMT falls into the\n      first case, and whether var corresponds to USE.  */\n- \n-  if (TREE_CODE (gimple_assign_lhs (stmt)) == SSA_NAME)\n-    return false;\n \n   if (!gimple_assign_copy_p (stmt))\n     return false;\n+  if (TREE_CODE (gimple_assign_lhs (stmt)) == SSA_NAME)\n+    return false;\n   operand = gimple_assign_rhs1 (stmt);\n-\n   if (TREE_CODE (operand) != SSA_NAME)\n     return false;\n "}]}