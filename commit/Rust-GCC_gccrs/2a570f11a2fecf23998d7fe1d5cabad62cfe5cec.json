{"sha": "2a570f11a2fecf23998d7fe1d5cabad62cfe5cec", "node_id": "C_kwDOANBUbNoAKDJhNTcwZjExYTJmZWNmMjM5OThkN2ZlMWQ1Y2FiYWQ2MmNmZTVjZWM", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-04-26T16:41:23Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-04-28T13:15:29Z"}, "message": "Fix up 'libgomp.oacc-fortran/print-1.f90' GCN offloading compilation [PR104717]\n\nThat got broken by recent commit b2202431910e30d8505c94d1cb9341cac7080d10\n\"fortran: Fix up gfc_trans_oacc_construct [PR104717]\".\n\n\tPR fortran/104717\n\tlibgomp/\n\t* testsuite/libgomp.oacc-fortran/print-1.f90: Add OpenACC\n\tprivatization scanning.  For GCN offloading compilation, raise\n\t'-mgang-private-size'.", "tree": {"sha": "b4bb4b21df132f8322ae233a4d6cc7788d386c79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4bb4b21df132f8322ae233a4d6cc7788d386c79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a570f11a2fecf23998d7fe1d5cabad62cfe5cec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a570f11a2fecf23998d7fe1d5cabad62cfe5cec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a570f11a2fecf23998d7fe1d5cabad62cfe5cec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a570f11a2fecf23998d7fe1d5cabad62cfe5cec/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b96274a340bc0e9bcaef9baff3a44ec2f12c3df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b96274a340bc0e9bcaef9baff3a44ec2f12c3df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b96274a340bc0e9bcaef9baff3a44ec2f12c3df"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "42a8538e1fb386f05d2e095848696cde55333003", "filename": "libgomp/testsuite/libgomp.oacc-fortran/print-1.f90", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a570f11a2fecf23998d7fe1d5cabad62cfe5cec/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fprint-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a570f11a2fecf23998d7fe1d5cabad62cfe5cec/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fprint-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fprint-1.f90?ref=2a570f11a2fecf23998d7fe1d5cabad62cfe5cec", "patch": "@@ -6,11 +6,39 @@\n ! Separate file 'print-1-nvptx.f90' for nvptx offloading.\n ! { dg-skip-if \"separate file\" { offload_target_nvptx } }\n \n+! For GCN offloading compilation, when gang-privatizing 'dt_parm.N'\n+! (see below), we run into an 'gang-private data-share memory exhausted'\n+! error: the default '-mgang-private-size' is too small.  Per\n+! 'gcc/fortran/trans-io.cc'/'libgfortran/io/io.h', that one is\n+! 'struct st_parameter_dt', which indeed is rather big.  Instead of\n+! working out its exact size (which may vary per GCC configuration),\n+! raise '-mgang-private-size' to an arbitrary high value.\n+! { dg-additional-options \"-foffload-options=amdgcn-amdhsa=-mgang-private-size=13579\" { target openacc_radeon_accel_selected } }\n+\n+! { dg-additional-options \"-fopt-info-note-omp\" }\n+! { dg-additional-options \"-foffload=-fopt-info-note-omp\" }\n+\n+! { dg-additional-options \"--param=openacc-privatization=noisy\" }\n+! { dg-additional-options \"-foffload=--param=openacc-privatization=noisy\" }\n+! Prune a few: uninteresting, and potentially varying depending on GCC configuration (data types):\n+! { dg-prune-output {note: variable 'D\\.[0-9]+' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} } */\n+\n+! It's only with Tcl 8.5 (released in 2007) that \"the variable 'varName'\n+! passed to 'incr' may be unset, and in that case, it will be set to [...]\",\n+! so to maintain compatibility with earlier Tcl releases, we manually\n+! initialize counter variables:\n+! { dg-line l_dummy[variable c_compute 0] }\n+! { dg-message dummy {} { target iN-VAl-Id } l_dummy } to avoid\n+! \"WARNING: dg-line var l_dummy defined, but not used\".\n+\n program main\n   implicit none\n   integer :: var = 42\n \n-!$acc parallel\n+!$acc parallel ! { dg-line l_compute[incr c_compute] }\n+  ! { dg-note {variable 'dt_parm\\.[0-9]+' declared in block is candidate for adjusting OpenACC privatization level} {} { target *-*-* } l_compute$c_compute }\n+  !   { dg-note {variable 'dt_parm\\.[0-9]+' ought to be adjusted for OpenACC privatization level: 'gang'} {} { target *-*-* } l_compute$c_compute }\n+  !   { dg-note {variable 'dt_parm\\.[0-9]+' adjusted for OpenACC privatization level: 'gang'} {} { target { ! openacc_host_selected } } l_compute$c_compute }\n   write (0, '(\"The answer is \", I2)') var\n !$acc end parallel\n "}]}