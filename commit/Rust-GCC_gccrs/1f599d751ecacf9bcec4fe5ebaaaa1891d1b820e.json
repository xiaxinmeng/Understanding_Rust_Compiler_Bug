{"sha": "1f599d751ecacf9bcec4fe5ebaaaa1891d1b820e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY1OTlkNzUxZWNhY2Y5YmNlYzRmZTVlYmFhYWExODkxZDFiODIwZQ==", "commit": {"author": {"name": "Than McIntosh", "email": "thanm@google.com", "date": "2017-03-28T20:08:31Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-03-28T20:08:31Z"}, "message": "re PR go/80226 (ICE gimple-expr.c:474 on Go function returning multiple empty struct/array values)\n\n\tPR go/80226\n\t* go-gcc.cc (Gcc_backend::return_statement): Check for\n\tvoid_type_node when checking result size.\n\nFrom-SVN: r246553", "tree": {"sha": "dac722570cfe68a1d0e7d43f5a30c1f1158f71e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dac722570cfe68a1d0e7d43f5a30c1f1158f71e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f599d751ecacf9bcec4fe5ebaaaa1891d1b820e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f599d751ecacf9bcec4fe5ebaaaa1891d1b820e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f599d751ecacf9bcec4fe5ebaaaa1891d1b820e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f599d751ecacf9bcec4fe5ebaaaa1891d1b820e/comments", "author": {"login": "thanm", "id": 12280172, "node_id": "MDQ6VXNlcjEyMjgwMTcy", "avatar_url": "https://avatars.githubusercontent.com/u/12280172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thanm", "html_url": "https://github.com/thanm", "followers_url": "https://api.github.com/users/thanm/followers", "following_url": "https://api.github.com/users/thanm/following{/other_user}", "gists_url": "https://api.github.com/users/thanm/gists{/gist_id}", "starred_url": "https://api.github.com/users/thanm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thanm/subscriptions", "organizations_url": "https://api.github.com/users/thanm/orgs", "repos_url": "https://api.github.com/users/thanm/repos", "events_url": "https://api.github.com/users/thanm/events{/privacy}", "received_events_url": "https://api.github.com/users/thanm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0c6b03b5158f53a3c7042cf8625aa5e6bc74f52b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c6b03b5158f53a3c7042cf8625aa5e6bc74f52b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c6b03b5158f53a3c7042cf8625aa5e6bc74f52b"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "55d78efd9472e96d8243cb85751d16c919a91bdd", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f599d751ecacf9bcec4fe5ebaaaa1891d1b820e/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f599d751ecacf9bcec4fe5ebaaaa1891d1b820e/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=1f599d751ecacf9bcec4fe5ebaaaa1891d1b820e", "patch": "@@ -1,3 +1,9 @@\n+2017-03-28  Than McIntosh  <thanm@google.com>\n+\n+\tPR go/80226\n+\t* go-gcc.cc (Gcc_backend::return_statement): Check for\n+\tvoid_type_node when checking result size.\n+\n 2017-02-20  Ian Lance Taylor  <iant@golang.org>\n \n \tPR go/79642"}, {"sha": "62baa91fab886caa08c132be9e7e172103d9b579", "filename": "gcc/go/go-gcc.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f599d751ecacf9bcec4fe5ebaaaa1891d1b820e/gcc%2Fgo%2Fgo-gcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f599d751ecacf9bcec4fe5ebaaaa1891d1b820e/gcc%2Fgo%2Fgo-gcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-gcc.cc?ref=1f599d751ecacf9bcec4fe5ebaaaa1891d1b820e", "patch": "@@ -2081,7 +2081,8 @@ Gcc_backend::return_statement(Bfunction* bfunction,\n   // If the result size is zero bytes, we have set the function type\n   // to have a result type of void, so don't return anything.\n   // See the function_type method.\n-  if (int_size_in_bytes(TREE_TYPE(result)) == 0)\n+  tree res_type = TREE_TYPE(result);\n+  if (res_type == void_type_node || int_size_in_bytes(res_type) == 0)\n     {\n       tree stmt_list = NULL_TREE;\n       for (std::vector<Bexpression*>::const_iterator p = vals.begin();"}]}