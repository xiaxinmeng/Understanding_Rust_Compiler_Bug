{"sha": "e2a818641ba5d07ebe2c241906896c4886910d18", "node_id": "C_kwDOANBUbNoAKGUyYTgxODY0MWJhNWQwN2ViZTJjMjQxOTA2ODk2YzQ4ODY5MTBkMTg", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-04-04T06:41:59Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-04-06T06:14:23Z"}, "message": "testsuite/105122 - adjust testcases after memcpy folding changes\n\nAfter r12-7931 we again honor MOVE_MAX when folding memcpy to\na load/store pair.  On i?86-*-* without SSE this now exposes the\nchange done in r12-2666-g29f0e955c97da0 which adjusts MOVE_MAX\nfrom 16 to 4 on those targets.  This makes adjusting testcases\nnecessary that assume that we transform memcpy to load/store pairs\non GIMPLE for sizes larger or equal to 8.\n\n2022-04-04  Richard Biener  <rguenther@suse.de>\n\n\tPR testsuite/105122\n\t* gcc.dg/memcpy-6.c: Adjust.\n\t* gcc.dg/strlenopt-73.c: Likewise.\n\t* gcc.dg/strlenopt-80.c: Likewise.", "tree": {"sha": "4fdb95fa7c4f44b89b13ea73426944b534871320", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fdb95fa7c4f44b89b13ea73426944b534871320"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2a818641ba5d07ebe2c241906896c4886910d18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2a818641ba5d07ebe2c241906896c4886910d18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2a818641ba5d07ebe2c241906896c4886910d18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2a818641ba5d07ebe2c241906896c4886910d18/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83b43c74bbbdc6b6903350b220b932c6f774bdfd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83b43c74bbbdc6b6903350b220b932c6f774bdfd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83b43c74bbbdc6b6903350b220b932c6f774bdfd"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "d4df03903c353eda4ede9462e76b352687a8c000", "filename": "gcc/testsuite/gcc.dg/memcpy-6.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2a818641ba5d07ebe2c241906896c4886910d18/gcc%2Ftestsuite%2Fgcc.dg%2Fmemcpy-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2a818641ba5d07ebe2c241906896c4886910d18/gcc%2Ftestsuite%2Fgcc.dg%2Fmemcpy-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fmemcpy-6.c?ref=e2a818641ba5d07ebe2c241906896c4886910d18", "patch": "@@ -6,7 +6,8 @@\n    of targets where it's known to pass (see PR testsuite/83483).\n    { dg-do compile }\n    { dg-options \"-O0 -Wrestrict -fdump-tree-optimized\" }\n-   { dg-skip-if \"skip non-x86 targets\" { ! { i?86-*-* x86_64-*-* } } }  */\n+   { dg-skip-if \"skip non-x86 targets\" { ! { i?86-*-* x86_64-*-* } } }\n+   { dg-additional-options \"-msse\" { target i?86-*-* x86_64-*-* } } */\n \n char a[32];\n "}, {"sha": "6e15303dc3c6f375ec9a6413363c3b0b99d55214", "filename": "gcc/testsuite/gcc.dg/strlenopt-73.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2a818641ba5d07ebe2c241906896c4886910d18/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-73.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2a818641ba5d07ebe2c241906896c4886910d18/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-73.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-73.c?ref=e2a818641ba5d07ebe2c241906896c4886910d18", "patch": "@@ -69,7 +69,7 @@ void test_copy_cond_equal_length (void)\n   T ( 0 ==, 33,  1, (i0 ? a32 : b32) + 32);\n }\n \n-#if defined(__i386__) || defined(__x86_64__) || defined(__aarch64__) \\\n+#if (defined(__i386__) && defined(__SSE__)) || defined(__x86_64__) || defined(__aarch64__) \\\n     || defined(__s390__) || defined(__powerpc64__)\n \n /* The following tests assume GCC transforms the memcpy calls into"}, {"sha": "a8adbf1eed5490dc2529dcf2b658442952d8ae9a", "filename": "gcc/testsuite/gcc.dg/strlenopt-80.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2a818641ba5d07ebe2c241906896c4886910d18/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-80.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2a818641ba5d07ebe2c241906896c4886910d18/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-80.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-80.c?ref=e2a818641ba5d07ebe2c241906896c4886910d18", "patch": "@@ -5,7 +5,8 @@\n    such a store.\n    { dg-do compile { target { { aarch64*-*-* i?86-*-* x86_64-*-* } || { { powerpc*-*-* } && lp64 } } } }\n \n-   { dg-options \"-O2 -Wall -fdump-tree-optimized\" } */\n+   { dg-options \"-O2 -Wall -fdump-tree-optimized\" }\n+   { dg-additional-options \"-msse\" { target i?86-*-* x86_64-*-* } } */\n \n #define CHAR_BIT      __CHAR_BIT__\n #define SIZE_MAX      __SIZE_MAX__"}]}