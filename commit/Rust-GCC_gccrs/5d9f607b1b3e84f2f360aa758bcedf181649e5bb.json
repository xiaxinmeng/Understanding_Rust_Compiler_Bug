{"sha": "5d9f607b1b3e84f2f360aa758bcedf181649e5bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ5ZjYwN2IxYjNlODRmMmYzNjBhYTc1OGJjZWRmMTgxNjQ5ZTViYg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2005-06-25T11:57:53Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2005-06-25T11:57:53Z"}, "message": "passes.c (rest_of_handle_branch_prob): Do not rebuild profiling info when not neecesary\n\n\n\t* passes.c (rest_of_handle_branch_prob): Do not rebuild profiling info\n\twhen not neecesary\n\t(rest_of_compilation): Fix conditional on branch prob pass.\n\t* predict.c (tree_estimate_probability): Enable strip_builtin_expect\n\twhen not loop optimizing.\n\nFrom-SVN: r101321", "tree": {"sha": "fcd0bb9afb768f1dc2170bdeaffb0ba47bc7696e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcd0bb9afb768f1dc2170bdeaffb0ba47bc7696e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d9f607b1b3e84f2f360aa758bcedf181649e5bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d9f607b1b3e84f2f360aa758bcedf181649e5bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d9f607b1b3e84f2f360aa758bcedf181649e5bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d9f607b1b3e84f2f360aa758bcedf181649e5bb/comments", "author": null, "committer": null, "parents": [{"sha": "49373252db90030369310429e5c755f26d20f67f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49373252db90030369310429e5c755f26d20f67f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49373252db90030369310429e5c755f26d20f67f"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "87e59aa73a40fe44b06e6e7eb3980ce4abfc89ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d9f607b1b3e84f2f360aa758bcedf181649e5bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d9f607b1b3e84f2f360aa758bcedf181649e5bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d9f607b1b3e84f2f360aa758bcedf181649e5bb", "patch": "@@ -1,3 +1,11 @@\n+2005-06-25  Jan Hubicka  <jh@suse.cz>\n+\n+\t* passes.c (rest_of_handle_branch_prob): Do not rebuild profiling info\n+\twhen not neecesary\n+\t(rest_of_compilation): Fix conditional on branch prob pass.\n+\t* predict.c (tree_estimate_probability): Enable strip_builtin_expect\n+\twhen not loop optimizing.\n+\n 2005-06-25  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n \t* config/bfin/bfin.md (ror_one, rol_one, ashrdi3, ashldi3, lshrdi3):"}, {"sha": "126427f6cf4e459b87fefd9a32332ec40ea0d47c", "filename": "gcc/passes.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d9f607b1b3e84f2f360aa758bcedf181649e5bb/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d9f607b1b3e84f2f360aa758bcedf181649e5bb/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=5d9f607b1b3e84f2f360aa758bcedf181649e5bb", "patch": "@@ -790,7 +790,8 @@ rest_of_handle_branch_prob (void)\n   timevar_push (TV_BRANCH_PROB);\n   open_dump_file (DFI_bp, current_function_decl);\n \n-  if (profile_arc_flag || flag_test_coverage || flag_branch_probabilities)\n+  if ((profile_arc_flag || flag_test_coverage || flag_branch_probabilities)\n+      && !flag_tree_based_profiling)\n     branch_prob ();\n \n   /* Discover and record the loop depth at the head of each basic\n@@ -801,7 +802,7 @@ rest_of_handle_branch_prob (void)\n     flow_loops_dump (&loops, dump_file, NULL, 0);\n \n   /* Estimate using heuristics if no profiling info is available.  */\n-  if (flag_guess_branch_prob)\n+  if (flag_guess_branch_prob && profile_status == PROFILE_ABSENT)\n     estimate_probability (&loops);\n \n   flow_loops_free (&loops);\n@@ -1579,16 +1580,17 @@ rest_of_compilation (void)\n   timevar_push (TV_FLOW);\n   rest_of_handle_cfg ();\n \n-  if (!flag_tree_based_profiling\n-      && (optimize > 0 || profile_arc_flag\n-\t  || flag_test_coverage || flag_branch_probabilities))\n+  if (optimize > 0\n+      || ((profile_arc_flag || flag_test_coverage || flag_branch_probabilities)\n+\t  && !flag_tree_based_profiling))\n     {\n       rtl_register_profile_hooks ();\n       rtl_register_value_prof_hooks ();\n       rest_of_handle_branch_prob ();\n \n       if (flag_branch_probabilities\n \t  && flag_profile_values\n+          && !flag_tree_based_profiling\n \t  && (flag_value_profile_transformations\n \t      || flag_speculative_prefetching))\n \trest_of_handle_value_profile_transformations ();"}, {"sha": "792acb8ab147f38d85f08c4f3b3450d48b604c07", "filename": "gcc/predict.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d9f607b1b3e84f2f360aa758bcedf181649e5bb/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d9f607b1b3e84f2f360aa758bcedf181649e5bb/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=5d9f607b1b3e84f2f360aa758bcedf181649e5bb", "patch": "@@ -1383,7 +1383,7 @@ tree_estimate_probability (void)\n   FOR_EACH_BB (bb)\n     combine_predictions_for_bb (dump_file, bb);\n \n-  if (0)  /* FIXME: Enable once we are pass down the profile to RTL level.  */\n+  if (!flag_loop_optimize)\n     strip_builtin_expect ();\n   estimate_bb_frequencies (&loops_info);\n   free_dominance_info (CDI_POST_DOMINATORS);"}]}