{"sha": "615d009f6d673f288348c4394d36da2fb0dbbcc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE1ZDAwOWY2ZDY3M2YyODgzNDhjNDM5NGQzNmRhMmZiMGRiYmNjOA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jw@kayari.org", "date": "2002-08-14T17:29:19Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-08-14T17:29:19Z"}, "message": "messages.html: Use HTML entities for punctuation.\n\n2002-08-14  Jonathan Wakely  <jw@kayari.org>\n\n\t* docs/html/22_locale/messages.html:  Use HTML entities for\n\tpunctuation.\n\nFrom-SVN: r56300", "tree": {"sha": "ebe4bab4874de1bfbe4f105e9635b7ded285ba64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebe4bab4874de1bfbe4f105e9635b7ded285ba64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/615d009f6d673f288348c4394d36da2fb0dbbcc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/615d009f6d673f288348c4394d36da2fb0dbbcc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/615d009f6d673f288348c4394d36da2fb0dbbcc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/615d009f6d673f288348c4394d36da2fb0dbbcc8/comments", "author": null, "committer": null, "parents": [{"sha": "cd79e2100b33c8937a878a5f07579205257d71ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd79e2100b33c8937a878a5f07579205257d71ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd79e2100b33c8937a878a5f07579205257d71ec"}], "stats": {"total": 35, "additions": 20, "deletions": 15}, "files": [{"sha": "9fa76a9fa6119413493613effd7e3ff17ee687c0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/615d009f6d673f288348c4394d36da2fb0dbbcc8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/615d009f6d673f288348c4394d36da2fb0dbbcc8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=615d009f6d673f288348c4394d36da2fb0dbbcc8", "patch": "@@ -1,3 +1,8 @@\n+2002-08-14  Jonathan Wakely  <jw@kayari.org>\n+\n+\t* docs/html/22_locale/messages.html:  Use HTML entities for\n+\tpunctuation.\n+\n 2002-08-13  Jonathan Wakely  <jw@kayari.org>\n             Phil Edwards  <pme@gcc.gnu.org>\n "}, {"sha": "86c278c27b7e170005fdac38b646194f26b81adb", "filename": "libstdc++-v3/docs/html/22_locale/messages.html", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/615d009f6d673f288348c4394d36da2fb0dbbcc8/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fmessages.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/615d009f6d673f288348c4394d36da2fb0dbbcc8/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fmessages.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fmessages.html?ref=615d009f6d673f288348c4394d36da2fb0dbbcc8", "patch": "@@ -39,10 +39,10 @@ <h2>\n The public member functions are:\n \n <p>\n-<code>catalog open(const string&, const locale&) const</code>\n+<code>catalog open(const string&amp;, const locale&amp;) const</code>\n \n <p>\n-<code>string_type get(catalog, int, int, const string_type&) const</code>\n+<code>string_type get(catalog, int, int, const string_type&amp;) const</code>\n \n <p>\n <code>void close(catalog) const</code>\n@@ -51,7 +51,7 @@ <h2>\n While the virtual functions are:\n \n <p>\n-<code>catalog do_open(const string&, const locale&) const</code>\n+<code>catalog do_open(const string&amp;, const locale&amp;) const</code>\n <BLOCKQUOTE>\n <I>\n -1- Returns: A value that may be passed to get() to retrieve a\n@@ -63,7 +63,7 @@ <h2>\n </BLOCKQUOTE>\n \n <p>\n-<code>string_type do_get(catalog, int, int, const string_type&) const</code>\n+<code>string_type do_get(catalog, int, int, const string_type&amp;) const</code>\n <BLOCKQUOTE>\n <I>\n -3- Requires: A catalog cat obtained from open() and not yet closed. \n@@ -106,8 +106,8 @@ <h2>\n <p>\n The 'open' member function in particular seems to be oddly\n designed. The signature seems quite peculiar. Why specify a <code>const\n-string& </code> argument, for instance, instead of just <code>const\n-char*</code>? Or, why specify a <code>const locale&</code> argument that is\n+string&amp; </code> argument, for instance, instead of just <code>const\n+char*</code>? Or, why specify a <code>const locale&amp;</code> argument that is\n to be used in the 'get' member function? How, exactly, is this locale\n argument useful? What was the intent? It might make sense if a locale\n argument was associated with a given default message string in the\n@@ -238,7 +238,7 @@ <h2>\n \t<code>locale loc_de(\"de_DE\");</code>\n \t<p>\n \t<code>\n-\tuse_facet<messages<char> >(loc_de).open(\"libstdc++\", locale(), dir);\n+\tuse_facet&lt;messages&lt;char&gt; &gt;(loc_de).open(\"libstdc++\", locale(), dir);\n \t</code>\n </ul>\n \n@@ -251,23 +251,23 @@ <h2>\n \t<li> message converting, simple example using the GNU model.\n \n <pre>\n-#include <iostream>\n-#include <locale>\n+#include &lt;iostream&gt;\n+#include &lt;locale&gt;\n using namespace std;\n \n void test01()\n {\n-  typedef messages<char>::catalog catalog;\n+  typedef messages&lt;char&gt;::catalog catalog;\n   const char* dir =\n   \"/mnt/egcs/build/i686-pc-linux-gnu/libstdc++-v3/po/share/locale\";  \n   const locale loc_de(\"de_DE\");\n-  const messages<char>& mssg_de = use_facet<messages<char> >(loc_de); \n+  const messages&lt;char&gt;&amp; mssg_de = use_facet&lt;messages&lt;char&gt; &gt;(loc_de); \n \n   catalog cat_de = mssg_de.open(\"libstdc++\", loc_de, dir);\n   string s01 = mssg_de.get(cat_de, 0, 0, \"please\");\n   string s02 = mssg_de.get(cat_de, 0, 0, \"thank you\");\n-  cout << \"please in german:\" << s01 << '\\n';\n-  cout << \"thank you in german:\" << s02 << '\\n';\n+  cout &lt;&lt; \"please in german:\" &lt;&lt; s01 &lt;&lt; '\\n';\n+  cout &lt;&lt; \"thank you in german:\" &lt;&lt; s02 &lt;&lt; '\\n';\n   mssg_de.close(cat_de);\n }\n </pre>\n@@ -329,13 +329,13 @@ <h2>\n \t<p>\n \t<code>\n         catalog \n-        open(const basic_string<char>& __s, const locale& __loc) const\n+        open(const basic_string&lt;char&gt;&amp; __s, const locale&amp; __loc) const\n \t</code>\n \n \t<p>\n \t<code>\n \tcatalog \n-\topen(const basic_string<char>&, const locale&, const char*) const;\n+\topen(const basic_string&lt;char&gt;&amp;, const locale&amp;, const char*) const;\n \t</code>\n \n \t<p>"}]}