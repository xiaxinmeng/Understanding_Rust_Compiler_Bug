{"sha": "a8a5f4cc04c802d74176f6935509b8a4303de399", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThhNWY0Y2MwNGM4MDJkNzQxNzZmNjkzNTUwOWI4YTQzMDNkZTM5OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-12-04T08:47:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-12-04T08:47:13Z"}, "message": "re PR fortran/92756 (ICE in lower_omp, at omp-low.c:12988)\n\n\tPR fortran/92756\n\t* trans-openmp.c (gfc_trans_omp_teams): Wrap OMP_TEAMS body into a\n\tBIND_EXPR with a forced BLOCK.\n\n\t* gfortran.dg/gomp/teams1.f90: New test.\n\n\t* testsuite/libgomp.fortran/teams1.f90: New test.\n\t* testsuite/libgomp.fortran/teams2.f90: New test.\n\nFrom-SVN: r278956", "tree": {"sha": "e1fbf1849c99714c9827523641f902da451ba489", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1fbf1849c99714c9827523641f902da451ba489"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8a5f4cc04c802d74176f6935509b8a4303de399", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8a5f4cc04c802d74176f6935509b8a4303de399", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8a5f4cc04c802d74176f6935509b8a4303de399", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8a5f4cc04c802d74176f6935509b8a4303de399/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c96828f1ec5bb54524697bd0f3fb22088fda5342", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c96828f1ec5bb54524697bd0f3fb22088fda5342", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c96828f1ec5bb54524697bd0f3fb22088fda5342"}], "stats": {"total": 197, "additions": 193, "deletions": 4}, "files": [{"sha": "3a188bac265b5acb9b0245207035d4727780c1ab", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8a5f4cc04c802d74176f6935509b8a4303de399/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8a5f4cc04c802d74176f6935509b8a4303de399/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a8a5f4cc04c802d74176f6935509b8a4303de399", "patch": "@@ -1,3 +1,9 @@\n+2019-12-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/92756\n+\t* trans-openmp.c (gfc_trans_omp_teams): Wrap OMP_TEAMS body into a\n+\tBIND_EXPR with a forced BLOCK.\n+\n 2019-11-30  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/91783"}, {"sha": "3a4f96222cb876e5bac7d26787094d548293570c", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8a5f4cc04c802d74176f6935509b8a4303de399/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8a5f4cc04c802d74176f6935509b8a4303de399/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=a8a5f4cc04c802d74176f6935509b8a4303de399", "patch": "@@ -4858,10 +4858,14 @@ gfc_trans_omp_teams (gfc_code *code, gfc_omp_clauses *clausesa,\n       gfc_split_omp_clauses (code, clausesa);\n     }\n   if (flag_openmp)\n-    omp_clauses\n-      = chainon (omp_clauses,\n-\t\t gfc_trans_omp_clauses (&block, &clausesa[GFC_OMP_SPLIT_TEAMS],\n-\t\t\t\t\tcode->loc));\n+    {\n+      omp_clauses\n+\t= chainon (omp_clauses,\n+\t\t   gfc_trans_omp_clauses (&block,\n+\t\t\t\t\t  &clausesa[GFC_OMP_SPLIT_TEAMS],\n+\t\t\t\t\t  code->loc));\n+      pushlevel ();\n+    }\n   switch (code->op)\n     {\n     case EXEC_OMP_TARGET_TEAMS:\n@@ -4881,6 +4885,7 @@ gfc_trans_omp_teams (gfc_code *code, gfc_omp_clauses *clausesa,\n     }\n   if (flag_openmp)\n     {\n+      stmt = build3_v (BIND_EXPR, NULL, stmt, poplevel (1, 0));\n       stmt = build2_loc (input_location, OMP_TEAMS, void_type_node, stmt,\n \t\t\t omp_clauses);\n       if (combined)"}, {"sha": "8f3edaf5dcd08fc5f8ec3eb987a5e9a462625ed4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8a5f4cc04c802d74176f6935509b8a4303de399/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8a5f4cc04c802d74176f6935509b8a4303de399/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a8a5f4cc04c802d74176f6935509b8a4303de399", "patch": "@@ -1,3 +1,8 @@\n+2019-12-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/92756\n+\t* gfortran.dg/gomp/teams1.f90: New test.\n+\n 2019-12-03  Jakub Jelinek  <jakub@redhat.com>\n \n \t* g++.dg/cpp2a/srcloc1.C: New test."}, {"sha": "21101cd705ed709dc56a97b5451d4d40020a8785", "filename": "gcc/testsuite/gfortran.dg/gomp/teams1.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8a5f4cc04c802d74176f6935509b8a4303de399/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fteams1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8a5f4cc04c802d74176f6935509b8a4303de399/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fteams1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fteams1.f90?ref=a8a5f4cc04c802d74176f6935509b8a4303de399", "patch": "@@ -0,0 +1,8 @@\n+! PR fortran/92756\n+\n+program pr92756\n+  integer :: i\n+  !$omp teams distribute parallel do\n+  do i = 1, 64\n+  end do\n+end"}, {"sha": "183e7a6c02d93e8cf5336342e88a749b89e0c2c5", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8a5f4cc04c802d74176f6935509b8a4303de399/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8a5f4cc04c802d74176f6935509b8a4303de399/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=a8a5f4cc04c802d74176f6935509b8a4303de399", "patch": "@@ -1,3 +1,9 @@\n+2019-12-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/92756\n+\t* testsuite/libgomp.fortran/teams1.f90: New test.\n+\t* testsuite/libgomp.fortran/teams2.f90: New test.\n+\n 2019-12-03  Frederik Harwath  <frederik@codesourcery.com>\n \n \t* oacc-init.c (acc_known_device_type): Add function."}, {"sha": "4f146074d3dc8196115047744f3c5ed0bd84a763", "filename": "libgomp/testsuite/libgomp.fortran/teams1.f90", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8a5f4cc04c802d74176f6935509b8a4303de399/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fteams1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8a5f4cc04c802d74176f6935509b8a4303de399/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fteams1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fteams1.f90?ref=a8a5f4cc04c802d74176f6935509b8a4303de399", "patch": "@@ -0,0 +1,19 @@\n+program teams1\n+  use omp_lib\n+!$omp teams thread_limit (2)\n+  if (omp_in_parallel ()) stop 1\n+  if (omp_get_level () .ne. 0) stop 2\n+  if (omp_get_ancestor_thread_num (0) .ne. 0) stop 3\n+  if (omp_get_ancestor_thread_num (1) .ne. -1) stop 4\n+  call omp_set_dynamic (.false.)\n+  call omp_set_nested (.true.)\n+!$omp parallel num_threads (2)\n+  if (.not. omp_in_parallel ()) stop 5\n+  if (omp_get_level () .ne. 1) stop 6\n+  if (omp_get_ancestor_thread_num (0) .ne. 0) stop 7\n+  if (omp_get_ancestor_thread_num (1) &\n+&     .ne. omp_get_thread_num ()) stop 8\n+  if (omp_get_ancestor_thread_num (2) .ne. -1) stop 9\n+!$omp end parallel\n+!$omp end teams\n+end program"}, {"sha": "f6b58f7c0779346287badc763423cb0277494f8d", "filename": "libgomp/testsuite/libgomp.fortran/teams2.f90", "status": "added", "additions": 140, "deletions": 0, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8a5f4cc04c802d74176f6935509b8a4303de399/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fteams2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8a5f4cc04c802d74176f6935509b8a4303de399/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fteams2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fteams2.f90?ref=a8a5f4cc04c802d74176f6935509b8a4303de399", "patch": "@@ -0,0 +1,140 @@\n+program teams2\n+  use omp_lib\n+  integer :: i, j, err\n+  err = 0\n+!$omp teams reduction(+:err)\n+  err = err + bar (0, 0, 0)\n+!$omp end teams\n+  if (err .ne. 0) stop 1\n+!$omp teams reduction(+:err)\n+  err = err + bar (1, 0, 0)\n+!$omp end teams\n+  if (err .ne. 0) stop 2\n+!$omp teams reduction(+:err)\n+!$omp distribute\n+  do i = 0, 63\n+    err = err + bar (2, i, 0)\n+  end do\n+!$omp end teams\n+  if (err .ne. 0) stop 3\n+!$omp teams reduction(+:err)\n+!$omp distribute\n+  do i = 0, 63\n+!$omp parallel do reduction(+:err)\n+    do j = 0, 31\n+      err = err + bar (3, i, j)\n+    end do\n+  end do\n+!$omp end teams\n+  if (err .ne. 0) stop 4\n+contains\n+  subroutine foo (x, y, z, a, b)\n+    integer :: x, y, z, a, b(64), i, j\n+    if (x .eq. 0) then\n+      do i = 0, 63\n+!$omp parallel do shared (a, b)\n+        do j = 0, 31\n+\t  call foo (3, i, j, a, b)\n+\tend do\n+      end do\n+    else if (x .eq. 1) then\n+!$omp distribute dist_schedule (static, 1)\n+      do i = 0, 63\n+!$omp parallel do shared (a, b)\n+\tdo j = 0, 31\n+\t  call foo (3, i, j, a, b)\n+\tend do\n+      end do\n+    else if (x .eq. 2) then\n+!$omp parallel do shared (a, b)\n+      do j = 0, 31\n+\tcall foo (3, y, j, a, b)\n+      end do\n+    else\n+!$omp atomic\n+      b(y + 1) = b(y + 1) + z\n+!$omp end atomic\n+!$omp atomic\n+      a = a + 1\n+!$omp end atomic\n+    end if\n+  end subroutine\n+\n+  integer function bar (x, y, z)\n+    use omp_lib\n+    integer :: x, y, z, a, b(64), i, c, d, e, f\n+    a = 8\n+    do i = 0, 63\n+      b(i + 1) = i\n+    end do\n+    call foo (x, y, z, a, b)\n+    if (x .eq. 0) then\n+      if (a .ne. 8 + 64 * 32) then\n+        bar = 1\n+        return\n+      end if\n+      do i = 0, 63\n+\tif (b(i + 1) .ne. i + 31 * 32 / 2) then\n+\t  bar = 1\n+\t  return\n+\tend if\n+      end do\n+    else if (x .eq. 1) then\n+      c = omp_get_num_teams ()\n+      d = omp_get_team_num ()\n+      e = d\n+      f = 0\n+      do i = 0, 63\n+\tif (i .eq. e) then\n+          if (b(i + 1) .ne. i + 31 * 32 / 2) then\n+            bar = 1\n+            return\n+          end if\n+          f = f + 1\n+          e = e + c\n+\telse if (b(i + 1) .ne. i) then\n+\t  bar = 1\n+\t  return\n+\tend if\n+      end do\n+      if (a .lt. 8 .or. a > 8 + f * 32) then\n+        bar = 1\n+        return\n+      end if\n+    else if (x .eq. 2) then\n+      if (a .ne. 8 + 32) then\n+        bar = 1\n+        return\n+      end if\n+      do i = 0, 63\n+        if (i .eq. y) then\n+          c = 31 * 32 / 2\n+        else\n+          c = 0\n+        end if\n+\tif (b(i + 1) .ne. i + c) then\n+\t  bar = 1\n+\t  return\n+\tend if\n+      end do\n+    else if (x .eq. 3) then\n+      if (a .ne. 8 + 1) then\n+        bar = 1\n+        return\n+      end if\n+      do i = 0, 63\n+        if (i .eq. y) then\n+          c = z\n+        else\n+          c = 0\n+        end if\n+        if (b (i + 1) .ne. i + c) then\n+          bar = 1\n+          return\n+        end if\n+      end do\n+    end if\n+    bar = 0\n+    return\n+  end function\n+end program"}]}