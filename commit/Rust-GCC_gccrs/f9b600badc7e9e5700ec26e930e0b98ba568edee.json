{"sha": "f9b600badc7e9e5700ec26e930e0b98ba568edee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjliNjAwYmFkYzdlOWU1NzAwZWMyNmU5MzBlMGI5OGJhNTY4ZWRlZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-02-13T16:02:31Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-02-13T16:02:31Z"}, "message": "re PR c++/65051 (r210436 regression?)\n\n\tPR c++/65051\n\t* call.c (reference_binding): Don't look for bad conversion\n\tif TO is incomplete.\n\nFrom-SVN: r220685", "tree": {"sha": "dbb55398a6d97ba972543d45d0fd1f8e29af430a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbb55398a6d97ba972543d45d0fd1f8e29af430a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9b600badc7e9e5700ec26e930e0b98ba568edee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9b600badc7e9e5700ec26e930e0b98ba568edee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9b600badc7e9e5700ec26e930e0b98ba568edee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9b600badc7e9e5700ec26e930e0b98ba568edee/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "81adbcea49c3dbc5bb1fe4211e113a9141d13263", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81adbcea49c3dbc5bb1fe4211e113a9141d13263", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81adbcea49c3dbc5bb1fe4211e113a9141d13263"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "84687715921382ae273c9519b6ca22f6ea95a59c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9b600badc7e9e5700ec26e930e0b98ba568edee/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9b600badc7e9e5700ec26e930e0b98ba568edee/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f9b600badc7e9e5700ec26e930e0b98ba568edee", "patch": "@@ -1,3 +1,9 @@\n+2015-02-13  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/65051\n+\t* call.c (reference_binding): Don't look for bad conversion\n+\tif TO is incomplete.\n+\n 2015-02-13  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/64970"}, {"sha": "2b15185a8951eebbb48065f790fe89e102f60646", "filename": "gcc/cp/call.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9b600badc7e9e5700ec26e930e0b98ba568edee/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9b600badc7e9e5700ec26e930e0b98ba568edee/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=f9b600badc7e9e5700ec26e930e0b98ba568edee", "patch": "@@ -1694,6 +1694,19 @@ reference_binding (tree rto, tree rfrom, tree expr, bool c_cast_p, int flags,\n      difference in top-level cv-qualification is subsumed by the\n      initialization itself and does not constitute a conversion.  */\n \n+  /* [dcl.init.ref]\n+\n+     Otherwise, the reference shall be an lvalue reference to a\n+     non-volatile const type, or the reference shall be an rvalue\n+     reference.\n+\n+     We try below to treat this as a bad conversion to improve diagnostics,\n+     but if TO is an incomplete class, we need to reject this conversion\n+     now to avoid unnecessary instantiation.  */\n+  if (!CP_TYPE_CONST_NON_VOLATILE_P (to) && !TYPE_REF_IS_RVALUE (rto)\n+      && !COMPLETE_TYPE_P (to))\n+    return NULL;\n+\n   /* We're generating a temporary now, but don't bind any more in the\n      conversion (specifically, don't slice the temporary returned by a\n      conversion operator).  */"}, {"sha": "ec2c38151003ed3ca176a4ff92662677e7087114", "filename": "gcc/testsuite/g++.dg/template/overload14.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9b600badc7e9e5700ec26e930e0b98ba568edee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foverload14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9b600badc7e9e5700ec26e930e0b98ba568edee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foverload14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foverload14.C?ref=f9b600badc7e9e5700ec26e930e0b98ba568edee", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/65051\n+\n+template<typename T> struct wrap { typedef T type; };\n+template <class T> class rv: public wrap <T>::type {};\n+\n+template <class value_type>\n+struct circular_buffer\n+{\n+    typedef const value_type& param_value_type;\n+    typedef rv< value_type >& rvalue_type;\n+\n+    void push_back(param_value_type item) {}\n+    void push_back(rvalue_type item) {}\n+};\n+\n+union U { int i; char c; };\n+\n+void f(circular_buffer<U> b, const U& u) { b.push_back(u); }"}]}