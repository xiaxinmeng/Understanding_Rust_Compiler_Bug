{"sha": "a17ea89bb15f7e9668860609b8953e94b69d0763", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE3ZWE4OWJiMTVmN2U5NjY4ODYwNjA5Yjg5NTNlOTRiNjlkMDc2Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2004-09-11T18:57:06Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2004-09-11T18:57:06Z"}, "message": "tree-ssa-alias.c (collect_points_to_info_r): Handle pointing to PTR + OFFSET as PTR...\n\n\t* tree-ssa-alias.c (collect_points_to_info_r): Handle\n\tpointing to PTR + OFFSET as PTR, not as pointing to PTR or pointing\n\tto OFFSET.\n\n\t* gcc.dg/tree-ssa/20040911-1.c: New test.\n\nFrom-SVN: r87357", "tree": {"sha": "c025146f65f1ef480ebff1997954111085dfde40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c025146f65f1ef480ebff1997954111085dfde40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a17ea89bb15f7e9668860609b8953e94b69d0763", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a17ea89bb15f7e9668860609b8953e94b69d0763", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a17ea89bb15f7e9668860609b8953e94b69d0763", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a17ea89bb15f7e9668860609b8953e94b69d0763/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ac265132112dff732d1622ab7b21228b6c9ae606", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac265132112dff732d1622ab7b21228b6c9ae606", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac265132112dff732d1622ab7b21228b6c9ae606"}], "stats": {"total": 43, "additions": 39, "deletions": 4}, "files": [{"sha": "57e38175d5ec8546dd7aea888f9c4e9606e87c02", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17ea89bb15f7e9668860609b8953e94b69d0763/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17ea89bb15f7e9668860609b8953e94b69d0763/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a17ea89bb15f7e9668860609b8953e94b69d0763", "patch": "@@ -1,3 +1,9 @@\n+2004-09-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* tree-ssa-alias.c (collect_points_to_info_r): Handle\n+\tpointing to PTR + OFFSET as PTR, not as pointing to PTR or pointing\n+\tto OFFSET.\n+\n 2004-09-11  Richard Henderson  <rth@redhat.com>\n \n \t* expr.c (expand_expr_addr_expr_1) Rename from expand_expr_addr_expr."}, {"sha": "3727d52ce4d8321e95b25b7efc4415c5b2f4881f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17ea89bb15f7e9668860609b8953e94b69d0763/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17ea89bb15f7e9668860609b8953e94b69d0763/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a17ea89bb15f7e9668860609b8953e94b69d0763", "patch": "@@ -1,3 +1,7 @@\n+2004-09-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/tree-ssa/20040911-1.c: New test.\n+\n 2004-09-11  Andreas Jaeger  <aj@suse.de>\n \n \t* gcc.c-torture/execute/991118-1.x: Delete, PR 16437 is fixed."}, {"sha": "6b49570d21a861cb14de985a973f6c9ff0b170cd", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040911-1.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17ea89bb15f7e9668860609b8953e94b69d0763/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040911-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17ea89bb15f7e9668860609b8953e94b69d0763/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040911-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040911-1.c?ref=a17ea89bb15f7e9668860609b8953e94b69d0763", "patch": "@@ -0,0 +1,21 @@\n+/* Verify that points-to information is handled properly for PTR + OFFSET\n+   pointer arithmetics.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-alias1-vops\" } */\n+\n+char buf[4], *q;\n+int foo (int i)\n+{\n+  char c, *p;\n+  q = &c;\n+  p = buf;\n+  if (i)\n+    p = p + 3;\n+  else\n+    p = p + 2;\n+  *p = 6;\n+  c = 8;\n+  return *p;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"VUSE <c\" \"alias1\" } } */"}, {"sha": "47f8d96bc966cf0f66406bca0bdf35259bb37e7e", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17ea89bb15f7e9668860609b8953e94b69d0763/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17ea89bb15f7e9668860609b8953e94b69d0763/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=a17ea89bb15f7e9668860609b8953e94b69d0763", "patch": "@@ -1869,7 +1869,8 @@ collect_points_to_info_r (tree var, tree stmt, void *data)\n \t    \n \t    /* Both operands may be of pointer type.  FIXME: Shouldn't\n \t       we just expect PTR + OFFSET always?  */\n-\t    if (POINTER_TYPE_P (TREE_TYPE (op0)))\n+\t    if (POINTER_TYPE_P (TREE_TYPE (op0))\n+\t\t&& TREE_CODE (op0) != INTEGER_CST)\n \t      {\n \t\tif (TREE_CODE (op0) == SSA_NAME)\n \t\t  merge_pointed_to_info (ai, var, op0);\n@@ -1879,7 +1880,8 @@ collect_points_to_info_r (tree var, tree stmt, void *data)\n \t\t  add_pointed_to_expr (var, op0);\n \t      }\n \n-\t    if (POINTER_TYPE_P (TREE_TYPE (op1)))\n+\t    if (POINTER_TYPE_P (TREE_TYPE (op1))\n+\t\t&& TREE_CODE (op1) != INTEGER_CST)\n \t      {\n \t\tif (TREE_CODE (op1) == SSA_NAME)\n \t\t  merge_pointed_to_info (ai, var, op1);\n@@ -1892,8 +1894,10 @@ collect_points_to_info_r (tree var, tree stmt, void *data)\n \t    /* Neither operand is a pointer?  VAR can be pointing\n \t       anywhere.  FIXME: Is this right?  If we get here, we\n \t       found PTR = INT_CST + INT_CST.  */\n-\t    if (!POINTER_TYPE_P (TREE_TYPE (op0))\n-\t\t&& !POINTER_TYPE_P (TREE_TYPE (op1)))\n+\t    if (!(POINTER_TYPE_P (TREE_TYPE (op0))\n+\t\t  && TREE_CODE (op0) != INTEGER_CST)\n+\t\t&& !(POINTER_TYPE_P (TREE_TYPE (op1))\n+\t\t     && TREE_CODE (op1) != INTEGER_CST))\n \t      add_pointed_to_expr (var, rhs);\n \t  }\n "}]}