{"sha": "9c58793af54226c898ae27c913a8f9d85bbf948c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWM1ODc5M2FmNTQyMjZjODk4YWUyN2M5MTNhOGY5ZDg1YmJmOTQ4Yw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-07-05T07:55:03Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-07-05T07:55:03Z"}, "message": "expr.h (gen_move_insn_uncast): Delete.\n\ngcc/\n\t* expr.h (gen_move_insn_uncast): Delete.\n\t* expr.c (gen_move_insn_uncast): Delete.\n\nFrom-SVN: r225427", "tree": {"sha": "0ebd5f001dd97c28d7190c5030f5ad26140f3f2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ebd5f001dd97c28d7190c5030f5ad26140f3f2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c58793af54226c898ae27c913a8f9d85bbf948c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c58793af54226c898ae27c913a8f9d85bbf948c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c58793af54226c898ae27c913a8f9d85bbf948c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c58793af54226c898ae27c913a8f9d85bbf948c/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4476e1a0be33ffe20597498e0e2549331ebbb2f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4476e1a0be33ffe20597498e0e2549331ebbb2f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4476e1a0be33ffe20597498e0e2549331ebbb2f9"}], "stats": {"total": 15, "additions": 5, "deletions": 10}, "files": [{"sha": "c1a7abbd3841d37019af2ce4b4279aa7dcab2320", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c58793af54226c898ae27c913a8f9d85bbf948c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c58793af54226c898ae27c913a8f9d85bbf948c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9c58793af54226c898ae27c913a8f9d85bbf948c", "patch": "@@ -1,3 +1,8 @@\n+2015-07-05  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* expr.h (gen_move_insn_uncast): Delete.\n+\t* expr.c (gen_move_insn_uncast): Delete.\n+\n 2015-07-05  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* target-insns.def (restore_stack_block, restore_stack_function)"}, {"sha": "8c2b8bf080b605e435393ee91b1185fd7b8388b0", "filename": "gcc/expr.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c58793af54226c898ae27c913a8f9d85bbf948c/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c58793af54226c898ae27c913a8f9d85bbf948c/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=9c58793af54226c898ae27c913a8f9d85bbf948c", "patch": "@@ -3625,15 +3625,6 @@ gen_move_insn (rtx x, rtx y)\n   return seq;\n }\n \n-/* Same as above, but return rtx (used as a callback, which must have\n-   prototype compatible with other functions returning rtx).  */\n-\n-rtx\n-gen_move_insn_uncast (rtx x, rtx y)\n-{\n-  return gen_move_insn (x, y);\n-}\n-\n /* If Y is representable exactly in a narrower mode, and the target can\n    perform the extension directly from constant or memory, then emit the\n    move as an extension.  */"}, {"sha": "32d17077e2e7f571cf888481a162eaf3506435c2", "filename": "gcc/expr.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c58793af54226c898ae27c913a8f9d85bbf948c/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c58793af54226c898ae27c913a8f9d85bbf948c/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=9c58793af54226c898ae27c913a8f9d85bbf948c", "patch": "@@ -204,7 +204,6 @@ extern rtx store_by_pieces (rtx, unsigned HOST_WIDE_INT,\n /* Emit insns to set X from Y.  */\n extern rtx_insn *emit_move_insn (rtx, rtx);\n extern rtx_insn *gen_move_insn (rtx, rtx);\n-extern rtx gen_move_insn_uncast (rtx, rtx);\n \n /* Emit insns to set X from Y, with no frills.  */\n extern rtx_insn *emit_move_insn_1 (rtx, rtx);"}]}