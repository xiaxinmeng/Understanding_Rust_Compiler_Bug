{"sha": "47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdmNjdlNTE1NjBhNWNiNTVmYTI3MjBiY2I1NmQwZDI5YTUzY2E4NQ==", "commit": {"author": {"name": "Peter Bergner", "email": "bergner@vnet.ibm.com", "date": "2009-10-10T18:43:31Z"}, "committer": {"name": "Peter Bergner", "email": "bergner@gcc.gnu.org", "date": "2009-10-10T18:43:31Z"}, "message": "configure.ac: Add test for dci instruction.\n\n\t* configure.ac: Add test for dci instruction.\n\t* configure: Regenerate.\n\t* config.in: Likewise.\n\t* config.gcc: Handle --with-cpu=476 and --with-cpu=476fp.\n\t* doc/invoke.texi: Add cpu_type 476 and 476fp.\n\t(-mmulhw): Add 476 to description.\n\t(-mdlmzb): Likewise.\n\t* config/rs6000/t-fprules (MULTILIB_MATCHES_FLOAT): Include -mcpu=476.\n\t* config/rs6000/rs6000.c (processor_costs): Add ppc476_cost.\n\t(processor_target_table): Add 476 and 476fp entries.\n\t(rs6000_override_options): Use ppc476_cost for PROCESSOR_PPC476.\n\t(rs6000_issue_rate): Add CPU_PPC476.\n\t* config/rs6000/rs6000.h (ASM_CPU_476_SPEC): Define.\n\t(ASM_CPU_SPEC): Pass %(asm_cpu_476) for -mcpu=476 and -mcpu=476fp.\n\t(processor_type): Add PROCESSOR_PPC476.\n\t(EXTRA_SPECS): Add asm_cpu_476 string.\n\t* config/rs6000/rs6000.md: (define_attr \"type\"): Add isel attribute.\n\t(define_attr \"cpu\"): Add ppc476.\n\tInclude 476.md.\n\tUpdate comments for 476.\n\t(isel_signed, isel_unsigned): Change to use \"isel\" type attribute.\n\t* config/rs6000/vxworks.h (CPP_SPEC): Handle 464 and 476.\n\tUpdate copyright year.\n\t* config/rs6000/476.md: New file.\n\t* config/rs6000/40x.md: Add description for \"isel\" attribute.\n\tUpdate copyright year.\n\t* config/rs6000/440.md: Likewise.\n\t* config/rs6000/603.md: Likewise.\n\t* config/rs6000/6xx.md: Likewise.\n\t* config/rs6000/7450.md: Likewise.\n\t* config/rs6000/7xx.md: Likewise.\n\t* config/rs6000/8540.md: Likewise.\n\t* config/rs6000/cell.md: Likewise.\n\t* config/rs6000/e300c2c3.md: Likewise.\n\t* config/rs6000/e500mc.md: Likewise.\n\t* config/rs6000/mpc.md: Likewise.\n\t* config/rs6000/power4.md: Likewise.\n\t* config/rs6000/power5.md: Likewise.\n\t* config/rs6000/power6.md: Likewise.\n\t* config/rs6000/power7.md: Likewise.\n\t* config/rs6000/rios1.md: Likewise.\n\t* config/rs6000/rios2.md: Likewise.\n\t* config/rs6000/rs64.md: Likewise.\n\nFrom-SVN: r152626", "tree": {"sha": "afc2dd124fe7531142ce2fd55c5ebfac23f5497d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afc2dd124fe7531142ce2fd55c5ebfac23f5497d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/comments", "author": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b6ebf72767b63ccd3754b5e7ff319e8f587005dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6ebf72767b63ccd3754b5e7ff319e8f587005dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6ebf72767b63ccd3754b5e7ff319e8f587005dd"}], "stats": {"total": 398, "additions": 351, "deletions": 47}, "files": [{"sha": "4bc8600ec055e65b99d2b7eb30c048d48df12b06", "filename": "gcc/ChangeLog", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -1,3 +1,49 @@\n+2009-10-10  Peter Bergner  <bergner@vnet.ibm.com>\n+\n+\t* configure.ac: Add test for dci instruction.\n+\t* configure: Regenerate.\n+\t* config.in: Likewise.\n+\t* config.gcc: Handle --with-cpu=476 and --with-cpu=476fp.\n+\t* doc/invoke.texi: Add cpu_type 476 and 476fp.\n+\t(-mmulhw): Add 476 to description.\n+\t(-mdlmzb): Likewise.\n+\t* config/rs6000/t-fprules (MULTILIB_MATCHES_FLOAT): Include -mcpu=476.\n+\t* config/rs6000/rs6000.c (processor_costs): Add ppc476_cost.\n+\t(processor_target_table): Add 476 and 476fp entries.\n+\t(rs6000_override_options): Use ppc476_cost for PROCESSOR_PPC476.\n+\t(rs6000_issue_rate): Add CPU_PPC476.\n+\t* config/rs6000/rs6000.h (ASM_CPU_476_SPEC): Define.\n+\t(ASM_CPU_SPEC): Pass %(asm_cpu_476) for -mcpu=476 and -mcpu=476fp.\n+\t(processor_type): Add PROCESSOR_PPC476.\n+\t(EXTRA_SPECS): Add asm_cpu_476 string.\n+\t* config/rs6000/rs6000.md: (define_attr \"type\"): Add isel attribute.\n+\t(define_attr \"cpu\"): Add ppc476.\n+\tInclude 476.md.\n+\tUpdate comments for 476.\n+\t(isel_signed, isel_unsigned): Change to use \"isel\" type attribute.\n+\t* config/rs6000/vxworks.h (CPP_SPEC): Handle 464 and 476.\n+\tUpdate copyright year.\n+\t* config/rs6000/476.md: New file.\n+\t* config/rs6000/40x.md: Add description for \"isel\" attribute.\n+\tUpdate copyright year.\n+\t* config/rs6000/440.md: Likewise.\n+\t* config/rs6000/603.md: Likewise.\n+\t* config/rs6000/6xx.md: Likewise.\n+\t* config/rs6000/7450.md: Likewise.\n+\t* config/rs6000/7xx.md: Likewise.\n+\t* config/rs6000/8540.md: Likewise.\n+\t* config/rs6000/cell.md: Likewise.\n+\t* config/rs6000/e300c2c3.md: Likewise.\n+\t* config/rs6000/e500mc.md: Likewise.\n+\t* config/rs6000/mpc.md: Likewise.\n+\t* config/rs6000/power4.md: Likewise.\n+\t* config/rs6000/power5.md: Likewise.\n+\t* config/rs6000/power6.md: Likewise.\n+\t* config/rs6000/power7.md: Likewise.\n+\t* config/rs6000/rios1.md: Likewise.\n+\t* config/rs6000/rios2.md: Likewise.\n+\t* config/rs6000/rs64.md: Likewise.\n+\n 2009-10-10  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/41654"}, {"sha": "e83382c1059430a8f0efd9f1cb9e6fd54d08bde7", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -3066,8 +3066,8 @@ case \"${target}\" in\n \t\t\t| power | power[234567] | power6x | powerpc | powerpc64 \\\n \t\t\t| rios | rios1 | rios2 | rsc | rsc1 | rs64a \\\n \t\t\t| 401 | 403 | 405 | 405fp | 440 | 440fp | 464 | 464fp \\\n-\t\t\t| 505 | 601 | 602 | 603 | 603e | ec603e | 604 \\\n-\t\t\t| 604e | 620 | 630 | 740 | 750 | 7400 | 7450 \\\n+\t\t\t| 476 | 476fp | 505 | 601 | 602 | 603 | 603e | ec603e \\\n+\t\t\t| 604 | 604e | 620 | 630 | 740 | 750 | 7400 | 7450 \\\n \t\t\t| a2 | e300c[23] | 854[08] | e500mc \\\n \t\t\t| 801 | 821 | 823 | 860 | 970 | G3 | G4 | G5 | cell)\n \t\t\t\t# OK"}, {"sha": "4c3da5baed7ca3e63716c32c47a2d6250796e380", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -211,6 +211,12 @@\n #endif\n \n \n+/* Define if your assembler supports the DCI/ICI instructions. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_AS_DCI\n+#endif\n+\n+\n /* Define if your assembler supports the --debug-prefix-map option. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_AS_DEBUG_PREFIX_MAP"}, {"sha": "eaf1222eca4222d033f09a5e1834ebb5b1a6b6ed", "filename": "gcc/config/rs6000/40x.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2F40x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2F40x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F40x.md?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -1,5 +1,5 @@\n ;; Scheduling description for IBM PowerPC 403 and PowerPC 405  processors.\n-;;   Copyright (C) 2003, 2004, 2007 Free Software Foundation, Inc.\n+;;   Copyright (C) 2003, 2004, 2007, 2009 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n \n@@ -38,7 +38,7 @@\n \n (define_insn_reservation \"ppc403-integer\" 1\n   (and (eq_attr \"type\" \"integer,insert_word,insert_dword,shift,trap,\\\n-                        var_shift_rotate,cntlz,exts\")\n+                        var_shift_rotate,cntlz,exts,isel\")\n        (eq_attr \"cpu\" \"ppc403,ppc405\"))\n   \"iu_40x\")\n "}, {"sha": "b329e7897cdd854c78373c88f264079805999cb1", "filename": "gcc/config/rs6000/440.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2F440.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2F440.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F440.md?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -1,5 +1,5 @@\n ;; Scheduling description for IBM PowerPC 440 processor.\n-;;   Copyright (C) 2003, 2004, 2007 Free Software Foundation, Inc.\n+;;   Copyright (C) 2003, 2004, 2007, 2009 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;\n@@ -55,7 +55,7 @@\n \n (define_insn_reservation \"ppc440-integer\" 1\n   (and (eq_attr \"type\" \"integer,insert_word,insert_dword,shift,\\\n-                        trap,var_shift_rotate,cntlz,exts\")\n+                        trap,var_shift_rotate,cntlz,exts,isel\")\n        (eq_attr \"cpu\" \"ppc440\"))\n   \"ppc440_issue,ppc440_i_pipe|ppc440_j_pipe\")\n "}, {"sha": "3f50bafa03c2b7ba46c15c4a62edc3628c77de48", "filename": "gcc/config/rs6000/476.md", "status": "added", "additions": 142, "deletions": 0, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2F476.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2F476.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F476.md?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -0,0 +1,142 @@\n+;; Scheduling description for IBM PowerPC 476 processor.\n+;; Copyright (C) 2009\n+;; Free Software Foundation, Inc.\n+;; Contributed by Peter Bergner (bergner@vnet.ibm.com).\n+;;\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify\n+;; it under the terms of the GNU General Public License as published by\n+;; the Free Software Foundation; either version 3, or (at your option)\n+;; any later version.\n+;;\n+;; GCC is distributed in the hope that it will be useful,\n+;; but WITHOUT ANY WARRANTY; without even the implied warranty of\n+;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+;; GNU General Public License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+;; PPC476 Embedded PowerPC controller\n+;; 3 issue (476) / 4 issue (476fp)\n+;;\n+;; i_pipe  - complex integer / compare\n+;; lj_pipe - load-store / simple integer arithmetic\n+;; b_pipe  - branch pipe\n+;; f_pipe  - floating point arithmetic\n+\n+(define_automaton \"ppc476_core,ppc476_apu\")\n+\n+(define_cpu_unit \"ppc476_i_pipe,ppc476_lj_pipe,ppc476_b_pipe\" \"ppc476_core\")\n+(define_cpu_unit \"ppc476_issue_fp,ppc476_f_pipe\" \"ppc476_apu\")\n+(define_cpu_unit \"ppc476_issue_0,ppc476_issue_1,ppc476_issue_2\" \"ppc476_core\")\n+\n+(define_reservation \"ppc476_issue\" \"ppc476_issue_0|ppc476_issue_1|ppc476_issue_2\")\n+(define_reservation \"ppc476_issue2\" \"ppc476_issue_0+ppc476_issue_1\\\n+\t\t\t\t    |ppc476_issue_0+ppc476_issue_2\\\n+\t\t\t\t    |ppc476_issue_1+ppc476_issue_2\")\n+(define_reservation \"ppc476_issue3\" \"ppc476_issue_0+ppc476_issue_1+ppc476_issue_2\")\n+\n+(define_insn_reservation \"ppc476-load\" 4\n+  (and (eq_attr \"type\" \"load,load_ext,load_ext_u,load_ext_ux,load_ux,load_u,\\\n+\t\t\tload_l,store_c,sync\")\n+       (eq_attr \"cpu\" \"ppc476\"))\n+  \"ppc476_issue,\\\n+   ppc476_lj_pipe\")\n+\n+(define_insn_reservation \"ppc476-store\" 4\n+  (and (eq_attr \"type\" \"store,store_ux,store_u\")\n+       (eq_attr \"cpu\" \"ppc476\"))\n+  \"ppc476_issue,\\\n+   ppc476_lj_pipe\")\n+\n+(define_insn_reservation \"ppc476-fpload\" 4\n+  (and (eq_attr \"type\" \"fpload,fpload_ux,fpload_u\")\n+       (eq_attr \"cpu\" \"ppc476\"))\n+  \"ppc476_issue,\\\n+   ppc476_lj_pipe\")\n+\n+(define_insn_reservation \"ppc476-fpstore\" 4\n+  (and (eq_attr \"type\" \"fpstore,fpstore_ux,fpstore_u\")\n+       (eq_attr \"cpu\" \"ppc476\"))\n+  \"ppc476_issue,\\\n+   ppc476_lj_pipe\")\n+\n+(define_insn_reservation \"ppc476-simple-integer\" 1\n+  (and (eq_attr \"type\" \"integer,insert_word,var_shift_rotate,exts,shift\")\n+       (eq_attr \"cpu\" \"ppc476\"))\n+  \"ppc476_issue,\\\n+   ppc476_i_pipe|ppc476_lj_pipe\")\n+\n+(define_insn_reservation \"ppc476-complex-integer\" 1\n+  (and (eq_attr \"type\" \"cmp,cr_logical,delayed_cr,cntlz,isel,isync,sync,trap\")\n+       (eq_attr \"cpu\" \"ppc476\"))\n+  \"ppc476_issue,\\\n+   ppc476_i_pipe\")\n+\n+(define_insn_reservation \"ppc476-compare\" 4\n+  (and (eq_attr \"type\" \"compare,delayed_compare,fast_compare,mfcr,mfcrf,\\\n+                        mtcr,mfjmpr,mtjmpr,var_delayed_compare\")\n+       (eq_attr \"cpu\" \"ppc476\"))\n+  \"ppc476_issue,\\\n+   ppc476_i_pipe\")\n+\n+(define_insn_reservation \"ppc476-imul\" 4\n+  (and (eq_attr \"type\" \"imul,imul_compare,imul2,imul3\")\n+       (eq_attr \"cpu\" \"ppc476\"))\n+  \"ppc476_issue,\\\n+   ppc476_i_pipe\")\n+\n+(define_insn_reservation \"ppc476-idiv\" 11\n+  (and (eq_attr \"type\" \"idiv\")\n+       (eq_attr \"cpu\" \"ppc476\"))\n+  \"ppc476_issue,\\\n+   ppc476_i_pipe*11\")\n+\n+(define_insn_reservation \"ppc476-branch\" 1\n+  (and (eq_attr \"type\" \"branch,jmpreg\")\n+       (eq_attr \"cpu\" \"ppc476\"))\n+  \"ppc476_issue,\\\n+   ppc476_b_pipe\")\n+\n+(define_insn_reservation \"ppc476-two\" 2\n+  (and (eq_attr \"type\" \"two\")\n+       (eq_attr \"cpu\" \"ppc476\"))\n+  \"ppc476_issue2,\\\n+   ppc476_i_pipe|ppc476_lj_pipe,\\\n+   ppc476_i_pipe|ppc476_lj_pipe\")\n+\n+(define_insn_reservation \"ppc476-three\" 3\n+  (and (eq_attr \"type\" \"three\")\n+       (eq_attr \"cpu\" \"ppc476\"))\n+  \"ppc476_issue3,\\\n+   ppc476_i_pipe|ppc476_lj_pipe,\\\n+   ppc476_i_pipe|ppc476_lj_pipe,\\\n+   ppc476_i_pipe|ppc476_lj_pipe\")\n+\n+(define_insn_reservation \"ppc476-fpcompare\" 6\n+  (and (eq_attr \"type\" \"fpcompare\")\n+       (eq_attr \"cpu\" \"ppc476\"))\n+  \"ppc476_issue+ppc476_issue_fp,\\\n+   ppc476_f_pipe+ppc476_i_pipe\")\n+\n+(define_insn_reservation \"ppc476-fp\" 6\n+  (and (eq_attr \"type\" \"fp,dmul\")\n+       (eq_attr \"cpu\" \"ppc476\"))\n+  \"ppc476_issue_fp,\\\n+   ppc476_f_pipe\")\n+\n+(define_insn_reservation \"ppc476-sdiv\" 19\n+  (and (eq_attr \"type\" \"sdiv\")\n+       (eq_attr \"cpu\" \"ppc476\"))\n+  \"ppc476_issue_fp,\n+   ppc476_f_pipe*19\")\n+\n+(define_insn_reservation \"ppc476-ddiv\" 33\n+  (and (eq_attr \"type\" \"ddiv\")\n+       (eq_attr \"cpu\" \"ppc476\"))\n+  \"ppc476_issue_fp,\\\n+   ppc476_f_pipe*33\")\n+"}, {"sha": "a042729a1daa57fe201e64beacfcdc61c3fe6acb", "filename": "gcc/config/rs6000/603.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2F603.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2F603.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F603.md?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -1,5 +1,5 @@\n ;; Scheduling description for PowerPC 603 processor.\n-;;   Copyright (C) 2003, 2004, 2007 Free Software Foundation, Inc.\n+;;   Copyright (C) 2003, 2004, 2007, 2009 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n \n@@ -59,7 +59,7 @@\n \n (define_insn_reservation \"ppc603-integer\" 1\n   (and (eq_attr \"type\" \"integer,insert_word,insert_dword,shift,trap,\\\n-                        var_shift_rotate,cntlz,exts\")\n+                        var_shift_rotate,cntlz,exts,isel\")\n        (eq_attr \"cpu\" \"ppc603\"))\n   \"iu_603\")\n "}, {"sha": "b0de9731525e0bb0a9192048aa8ee5bb0d7a299e", "filename": "gcc/config/rs6000/6xx.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2F6xx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2F6xx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F6xx.md?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -1,6 +1,6 @@\n ;; Scheduling description for PowerPC 604, PowerPC 604e, PowerPC 620,\n ;; and PowerPC 630 processors.\n-;;   Copyright (C) 2003, 2004, 2007 Free Software Foundation, Inc.\n+;;   Copyright (C) 2003, 2004, 2007, 2009 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n \n@@ -74,7 +74,7 @@\n   \n (define_insn_reservation \"ppc604-integer\" 1\n   (and (eq_attr \"type\" \"integer,insert_word,insert_dword,shift,trap,\\\n-                        var_shift_rotate,cntlz,exts\")\n+                        var_shift_rotate,cntlz,exts,isel\")\n        (eq_attr \"cpu\" \"ppc604,ppc604e,ppc620,ppc630\"))\n   \"iu1_6xx|iu2_6xx\")\n "}, {"sha": "ccaa3b20da3bb11b746d8f251002171b1e612bcc", "filename": "gcc/config/rs6000/7450.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2F7450.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2F7450.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F7450.md?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -1,5 +1,5 @@\n ;; Scheduling description for Motorola PowerPC 7450 processor.\n-;;   Copyright (C) 2003, 2004, 2007 Free Software Foundation, Inc.\n+;;   Copyright (C) 2003, 2004, 2007, 2009 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n \n@@ -75,7 +75,7 @@\n \n (define_insn_reservation \"ppc7450-integer\" 1\n   (and (eq_attr \"type\" \"integer,insert_word,insert_dword,shift,\\\n-                        trap,var_shift_rotate,cntlz,exts\")\n+                        trap,var_shift_rotate,cntlz,exts,isel\")\n        (eq_attr \"cpu\" \"ppc7450\"))\n   \"ppc7450_du,iu1_7450|iu2_7450|iu3_7450\")\n "}, {"sha": "edbde75c22af6b09ac3e391f7e1676cf3e28a3ab", "filename": "gcc/config/rs6000/7xx.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2F7xx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2F7xx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F7xx.md?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -1,5 +1,5 @@\n ;; Scheduling description for Motorola PowerPC 750 and PowerPC 7400 processors.\n-;;   Copyright (C) 2003, 2004, 2007 Free Software Foundation, Inc.\n+;;   Copyright (C) 2003, 2004, 2007, 2009 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n \n@@ -65,7 +65,7 @@\n \n (define_insn_reservation \"ppc750-integer\" 1\n   (and (eq_attr \"type\" \"integer,insert_word,insert_dword,shift,\\\n-                        trap,var_shift_rotate,cntlz,exts\")\n+                        trap,var_shift_rotate,cntlz,exts,isel\")\n        (eq_attr \"cpu\" \"ppc750,ppc7400\"))\n   \"ppc750_du,iu1_7xx|iu2_7xx\")\n "}, {"sha": "4096dff432c0d78646a677a6e88972bb9c4dac73", "filename": "gcc/config/rs6000/8540.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2F8540.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2F8540.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F8540.md?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -1,5 +1,5 @@\n ;; Pipeline description for Motorola PowerPC 8540 processor.\n-;;   Copyright (C) 2003, 2004, 2007 Free Software Foundation, Inc.\n+;;   Copyright (C) 2003, 2004, 2007, 2009 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n \n@@ -86,7 +86,7 @@\n (define_insn_reservation \"ppc8540_su\" 1\n   (and (eq_attr \"type\" \"integer,insert_word,insert_dword,cmp,compare,\\\n                         delayed_compare,var_delayed_compare,fast_compare,\\\n-                        shift,trap,var_shift_rotate,cntlz,exts\")\n+                        shift,trap,var_shift_rotate,cntlz,exts,isel\")\n        (eq_attr \"cpu\" \"ppc8540\"))\n   \"ppc8540_decode,ppc8540_issue+ppc8540_su_stage0+ppc8540_retire\")\n "}, {"sha": "dac9da943209f1bb1f7715705c55d8c2e653d2cf", "filename": "gcc/config/rs6000/cell.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Fcell.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Fcell.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fcell.md?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -1,5 +1,5 @@\n ;; Scheduling description for cell processor.\n-;; Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+;; Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009\n ;; Free Software Foundation, Inc.\n ;; Contributed by Sony Computer Entertainment, Inc.,\n \n@@ -157,7 +157,7 @@\n ;; Integer latency is 2 cycles\n (define_insn_reservation \"cell-integer\" 2\n   (and (eq_attr \"type\" \"integer,insert_dword,shift,trap,\\\n-\t\t\tvar_shift_rotate,cntlz,exts\")\n+\t\t\tvar_shift_rotate,cntlz,exts,isel\")\n        (eq_attr \"cpu\" \"cell\"))\n   \"slot01,fxu_cell\")\n "}, {"sha": "3462a209f74b3e04108a7b689839f84ea11ddcd8", "filename": "gcc/config/rs6000/e300c2c3.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Fe300c2c3.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Fe300c2c3.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe300c2c3.md?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -1,5 +1,5 @@\n ;; Pipeline description for Motorola PowerPC e300c3 core.\n-;;   Copyright (C) 2008 Free Software Foundation, Inc.\n+;;   Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n ;;   Contributed by Edmar Wienskoski (edmar@freescale.com)\n ;;\n ;; This file is part of GCC.\n@@ -90,7 +90,7 @@\n \n ;; Other one cycle IU insns\n (define_insn_reservation \"ppce300c3_iu\" 1\n-  (and (eq_attr \"type\" \"integer,insert_word\")\n+  (and (eq_attr \"type\" \"integer,insert_word,isel\")\n        (ior (eq_attr \"cpu\" \"ppce300c2\") (eq_attr \"cpu\" \"ppce300c3\")))\n   \"ppce300c3_decode,ppce300c3_issue+ppce300c3_iu_stage0+ppce300c3_retire\")\n "}, {"sha": "99a4b80ecf699103940006c277b3c844da7eabe6", "filename": "gcc/config/rs6000/e500mc.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Fe500mc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Fe500mc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe500mc.md?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -72,7 +72,7 @@\n (define_insn_reservation \"e500mc_su\" 1\n   (and (eq_attr \"type\" \"integer,insert_word,insert_dword,cmp,compare,\\\n                         delayed_compare,var_delayed_compare,fast_compare,\\\n-                        shift,trap,var_shift_rotate,cntlz,exts\")\n+                        shift,trap,var_shift_rotate,cntlz,exts,isel\")\n        (eq_attr \"cpu\" \"ppce500mc\"))\n   \"e500mc_decode,e500mc_issue+e500mc_su_stage0+e500mc_retire\")\n "}, {"sha": "415c688723240ffa2503dc85d7c8f674e70b763c", "filename": "gcc/config/rs6000/mpc.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Fmpc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Fmpc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fmpc.md?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -1,5 +1,5 @@\n ;; Scheduling description for Motorola PowerPC processor cores.\n-;;   Copyright (C) 2003, 2004, 2007 Free Software Foundation, Inc.\n+;;   Copyright (C) 2003, 2004, 2007, 2009 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;\n@@ -43,7 +43,7 @@\n \n (define_insn_reservation \"mpccore-integer\" 1\n   (and (eq_attr \"type\" \"integer,insert_word,insert_dword,shift,trap,\\\n-                        var_shift_rotate,cntlz,exts\")\n+                        var_shift_rotate,cntlz,exts,isel\")\n        (eq_attr \"cpu\" \"mpccore\"))\n   \"iu_mpc\")\n "}, {"sha": "60dbffd58c999703d8cbe02278ed6591ea90249c", "filename": "gcc/config/rs6000/power4.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Fpower4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Fpower4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpower4.md?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -1,5 +1,5 @@\n ;; Scheduling description for IBM Power4 and PowerPC 970 processors.\n-;;   Copyright (C) 2003, 2004, 2007 Free Software Foundation, Inc.\n+;;   Copyright (C) 2003, 2004, 2007, 2009 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;\n@@ -188,7 +188,7 @@\n ; Integer latency is 2 cycles\n (define_insn_reservation \"power4-integer\" 2\n   (and (eq_attr \"type\" \"integer,insert_dword,shift,trap,\\\n-                        var_shift_rotate,cntlz,exts\")\n+                        var_shift_rotate,cntlz,exts,isel\")\n        (eq_attr \"cpu\" \"power4\"))\n   \"iq_power4\")\n "}, {"sha": "b6db0931219d993c54bf6870a487fbd0a1646788", "filename": "gcc/config/rs6000/power5.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Fpower5.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Fpower5.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpower5.md?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -1,5 +1,5 @@\n ;; Scheduling description for IBM POWER5 processor.\n-;;   Copyright (C) 2003, 2004, 2007 Free Software Foundation, Inc.\n+;;   Copyright (C) 2003, 2004, 2007, 2009 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;\n@@ -142,7 +142,7 @@\n ; Integer latency is 2 cycles\n (define_insn_reservation \"power5-integer\" 2\n   (and (eq_attr \"type\" \"integer,insert_dword,shift,trap,\\\n-                        var_shift_rotate,cntlz,exts\")\n+                        var_shift_rotate,cntlz,exts,isel\")\n        (eq_attr \"cpu\" \"power5\"))\n   \"iq_power5\")\n "}, {"sha": "8d54c812963213383068fba682727ab0e923e7ae", "filename": "gcc/config/rs6000/power6.md", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Fpower6.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Fpower6.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpower6.md?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -1,5 +1,5 @@\n ;; Scheduling description for IBM POWER6 processor.\n-;;   Copyright (C) 2006, 2007 Free Software Foundation, Inc.\n+;;   Copyright (C) 2006, 2007, 2009 Free Software Foundation, Inc.\n ;;   Contributed by Peter Steinmetz (steinmtz@us.ibm.com)\n ;;\n ;; This file is part of GCC.\n@@ -201,6 +201,11 @@\n        (eq_attr \"cpu\" \"power6\"))\n   \"FXU_power6\")\n \n+(define_insn_reservation \"power6-isel\" 1\n+  (and (eq_attr \"type\" \"isel\")\n+       (eq_attr \"cpu\" \"power6\"))\n+  \"FXU_power6\")\n+\n (define_insn_reservation \"power6-exts\" 1\n   (and (eq_attr \"type\" \"exts\")\n        (eq_attr \"cpu\" \"power6\"))"}, {"sha": "148a7a52a8a5a739941c0ddd960f65d5ed29f02b", "filename": "gcc/config/rs6000/power7.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Fpower7.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Fpower7.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpower7.md?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -150,7 +150,7 @@\n ; FX Unit\n (define_insn_reservation \"power7-integer\" 1\n   (and (eq_attr \"type\" \"integer,insert_word,insert_dword,shift,trap,\\\n-                        var_shift_rotate,exts\")\n+                        var_shift_rotate,exts,isel\")\n        (eq_attr \"cpu\" \"power7\"))\n   \"DU_power7,FXU_power7\")\n "}, {"sha": "9ad9ce3e161afb19a708bbfc144e78abaeac934c", "filename": "gcc/config/rs6000/rios1.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Frios1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Frios1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frios1.md?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -1,5 +1,5 @@\n ;; Scheduling description for IBM POWER processor.\n-;;   Copyright (C) 2003, 2004, 2007 Free Software Foundation, Inc.\n+;;   Copyright (C) 2003, 2004, 2007, 2009 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n \n@@ -52,7 +52,7 @@\n \n (define_insn_reservation \"rios1-integer\" 1\n   (and (eq_attr \"type\" \"integer,insert_word,insert_dword,shift,\\\n-                        trap,var_shift_rotate,cntlz,exts\")\n+                        trap,var_shift_rotate,cntlz,exts,isel\")\n        (eq_attr \"cpu\" \"rios1,ppc601\"))\n   \"iu_rios1\")\n "}, {"sha": "96633af2f8ea3a4a72de62a9d2e2b4cb8f54b6b9", "filename": "gcc/config/rs6000/rios2.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Frios2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Frios2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frios2.md?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -1,5 +1,5 @@\n ;; Scheduling description for IBM Power2 processor.\n-;;   Copyright (C) 2003, 2004, 2007 Free Software Foundation, Inc.\n+;;   Copyright (C) 2003, 2004, 2007, 2009 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n \n@@ -40,7 +40,7 @@\n \n (define_insn_reservation \"rios2-integer\" 1\n   (and (eq_attr \"type\" \"integer,insert_word,insert_dword,shift,trap,\\\n-                         var_shift_rotate,cntlz,exts\")\n+                         var_shift_rotate,cntlz,exts,isel\")\n        (eq_attr \"cpu\" \"rios2\"))\n   \"iu1_rios2|iu2_rios2\")\n "}, {"sha": "dea4a5334b05189b7434a87c2512e794c7fac687", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -511,6 +511,25 @@ struct processor_costs ppc440_cost = {\n   1,\t\t\t/* streams */\n };\n \n+/* Instruction costs on PPC476 processors.  */\n+static const\n+struct processor_costs ppc476_cost = {\n+  COSTS_N_INSNS (4),    /* mulsi */\n+  COSTS_N_INSNS (4),    /* mulsi_const */\n+  COSTS_N_INSNS (4),    /* mulsi_const9 */\n+  COSTS_N_INSNS (4),    /* muldi */\n+  COSTS_N_INSNS (11),   /* divsi */\n+  COSTS_N_INSNS (11),   /* divdi */\n+  COSTS_N_INSNS (6),    /* fp */\n+  COSTS_N_INSNS (6),    /* dmul */\n+  COSTS_N_INSNS (19),   /* sdiv */\n+  COSTS_N_INSNS (33),   /* ddiv */\n+  32,\t\t\t/* l1 cache line size */\n+  32,\t\t\t/* l1 cache */\n+  512,\t\t\t/* l2 cache */\n+  1,\t\t\t/* streams */\n+};\n+\n /* Instruction costs on PPC601 processors.  */\n static const\n struct processor_costs ppc601_cost = {\n@@ -2144,6 +2163,12 @@ rs6000_override_options (const char *default_cpu)\n \t  POWERPC_BASE_MASK | MASK_SOFT_FLOAT | MASK_MULHW | MASK_DLMZB},\n \t {\"464fp\", PROCESSOR_PPC440,\n \t  POWERPC_BASE_MASK | MASK_MULHW | MASK_DLMZB},\n+ \t {\"476\", PROCESSOR_PPC476,\n+\t  POWERPC_BASE_MASK | MASK_SOFT_FLOAT | MASK_PPC_GFXOPT | MASK_MFCRF\n+\t  | MASK_POPCNTB | MASK_FPRND | MASK_CMPB | MASK_MULHW | MASK_DLMZB},\n+ \t {\"476fp\", PROCESSOR_PPC476,\n+\t  POWERPC_BASE_MASK | MASK_PPC_GFXOPT | MASK_MFCRF | MASK_POPCNTB\n+\t  | MASK_FPRND | MASK_CMPB | MASK_MULHW | MASK_DLMZB},\n \t {\"505\", PROCESSOR_MPCCORE, POWERPC_BASE_MASK},\n \t {\"601\", PROCESSOR_PPC601,\n \t  MASK_POWER | POWERPC_BASE_MASK | MASK_MULTIPLE | MASK_STRING},\n@@ -2673,6 +2698,10 @@ rs6000_override_options (const char *default_cpu)\n \trs6000_cost = &ppc440_cost;\n \tbreak;\n \n+      case PROCESSOR_PPC476:\n+\trs6000_cost = &ppc476_cost;\n+\tbreak;\n+\n       case PROCESSOR_PPC601:\n \trs6000_cost = &ppc601_cost;\n \tbreak;\n@@ -21795,6 +21824,7 @@ rs6000_issue_rate (void)\n   case CPU_PPCE500MC:\n     return 2;\n   case CPU_RIOS2:\n+  case CPU_PPC476:\n   case CPU_PPC604:\n   case CPU_PPC604E:\n   case CPU_PPC620:"}, {"sha": "c8ab4369a396beb9068ab3c1092bb5c8701ec77e", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -83,6 +83,12 @@\n #define ASM_CPU_POWER7_SPEC \"-mpower4 -maltivec\"\n #endif\n \n+#ifdef HAVE_AS_DCI\n+#define ASM_CPU_476_SPEC \"-m476\"\n+#else\n+#define ASM_CPU_476_SPEC \"-mpower4\"\n+#endif\n+\n /* Common ASM definitions used by ASM_SPEC among the various targets for\n    handling -mcpu=xxx switches.  There is a parallel list in driver-rs6000.c to\n    provide the default assembler options if the user uses -mcpu=native, so if\n@@ -123,6 +129,8 @@\n %{mcpu=440fp: -m440} \\\n %{mcpu=464: -m440} \\\n %{mcpu=464fp: -m440} \\\n+%{mcpu=476: %(asm_cpu_476)} \\\n+%{mcpu=476fp: %(asm_cpu_476)} \\\n %{mcpu=505: -mppc} \\\n %{mcpu=601: -m601} \\\n %{mcpu=602: -mppc} \\\n@@ -178,6 +186,7 @@\n   { \"asm_cpu_power5\",\t\tASM_CPU_POWER5_SPEC },\t\t\t\\\n   { \"asm_cpu_power6\",\t\tASM_CPU_POWER6_SPEC },\t\t\t\\\n   { \"asm_cpu_power7\",\t\tASM_CPU_POWER7_SPEC },\t\t\t\\\n+  { \"asm_cpu_476\",\t\tASM_CPU_476_SPEC },\t\t\t\\\n   SUBTARGET_EXTRA_SPECS\n \n /* -mcpu=native handling only makes sense with compiler running on\n@@ -318,6 +327,7 @@ enum processor_type\n    PROCESSOR_PPC403,\n    PROCESSOR_PPC405,\n    PROCESSOR_PPC440,\n+   PROCESSOR_PPC476,\n    PROCESSOR_PPC601,\n    PROCESSOR_PPC603,\n    PROCESSOR_PPC604,"}, {"sha": "7ff1b3c1a4778086af795aeb494642d2cc1af74b", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -117,7 +117,7 @@\n \f\n ;; Define an insn type attribute.  This is used in function unit delay\n ;; computations.\n-(define_attr \"type\" \"integer,two,three,load,load_ext,load_ext_u,load_ext_ux,load_ux,load_u,store,store_ux,store_u,fpload,fpload_ux,fpload_u,fpstore,fpstore_ux,fpstore_u,vecload,vecstore,imul,imul2,imul3,lmul,idiv,ldiv,insert_word,branch,cmp,fast_compare,compare,var_delayed_compare,delayed_compare,imul_compare,lmul_compare,fpcompare,cr_logical,delayed_cr,mfcr,mfcrf,mtcr,mfjmpr,mtjmpr,fp,fpsimple,dmul,sdiv,ddiv,ssqrt,dsqrt,jmpreg,brinc,vecsimple,veccomplex,vecdiv,veccmp,veccmpsimple,vecperm,vecfloat,vecfdiv,isync,sync,load_l,store_c,shift,trap,insert_dword,var_shift_rotate,cntlz,exts,mffgpr,mftgpr\"\n+(define_attr \"type\" \"integer,two,three,load,load_ext,load_ext_u,load_ext_ux,load_ux,load_u,store,store_ux,store_u,fpload,fpload_ux,fpload_u,fpstore,fpstore_ux,fpstore_u,vecload,vecstore,imul,imul2,imul3,lmul,idiv,ldiv,insert_word,branch,cmp,fast_compare,compare,var_delayed_compare,delayed_compare,imul_compare,lmul_compare,fpcompare,cr_logical,delayed_cr,mfcr,mfcrf,mtcr,mfjmpr,mtjmpr,fp,fpsimple,dmul,sdiv,ddiv,ssqrt,dsqrt,jmpreg,brinc,vecsimple,veccomplex,vecdiv,veccmp,veccmpsimple,vecperm,vecfloat,vecfdiv,isync,sync,load_l,store_c,shift,trap,insert_dword,var_shift_rotate,cntlz,exts,mffgpr,mftgpr,isel\"\n   (const_string \"integer\"))\n \n ;; Define floating point instruction sub-types for use with Xfpu.md\n@@ -139,7 +139,7 @@\n ;; Processor type -- this attribute must exactly match the processor_type\n ;; enumeration in rs6000.h.\n \n-(define_attr \"cpu\" \"rios1,rios2,rs64a,mpccore,ppc403,ppc405,ppc440,ppc601,ppc603,ppc604,ppc604e,ppc620,ppc630,ppc750,ppc7400,ppc7450,ppc8540,ppce300c2,ppce300c3,ppce500mc,power4,power5,power6,power7,cell,ppca2\"\n+(define_attr \"cpu\" \"rios1,rios2,rs64a,mpccore,ppc403,ppc405,ppc440,ppc476,ppc601,ppc603,ppc604,ppc604e,ppc620,ppc630,ppc750,ppc7400,ppc7450,ppc8540,ppce300c2,ppce300c3,ppce500mc,power4,power5,power6,power7,cell,ppca2\"\n   (const (symbol_ref \"rs6000_cpu_attr\")))\n \n \n@@ -158,6 +158,7 @@\n (include \"mpc.md\")\n (include \"40x.md\")\n (include \"440.md\")\n+(include \"476.md\")\n (include \"603.md\")\n (include \"6xx.md\")\n (include \"7xx.md\")\n@@ -975,7 +976,7 @@\n   [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"4,8\")])\n \f\n-;; IBM 405, 440 and 464 half-word multiplication operations.\n+;; IBM 405, 440, 464 and 476 half-word multiplication operations.\n \n (define_insn \"*macchwc\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n@@ -1439,7 +1440,7 @@\n   \"mullhwu %0, %1, %2\"\n   [(set_attr \"type\" \"imul3\")])\n \f\n-;; IBM 405, 440 and 464 string-search dlmzb instruction support.\n+;; IBM 405, 440, 464 and 476 string-search dlmzb instruction support.\n (define_insn \"dlmzb\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n         (unspec:CC [(match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n@@ -6041,7 +6042,8 @@\n   \"TARGET_ISEL<sel>\"\n   \"*\n { return output_isel (operands); }\"\n-  [(set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"isel\")\n+   (set_attr \"length\" \"4\")])\n \n (define_insn \"isel_unsigned_<mode>\"\n   [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\")\n@@ -6054,7 +6056,8 @@\n   \"TARGET_ISEL<sel>\"\n   \"*\n { return output_isel (operands); }\"\n-  [(set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"isel\")\n+   (set_attr \"length\" \"4\")])\n \n (define_expand \"movsfcc\"\n    [(set (match_operand:SF 0 \"gpc_reg_operand\" \"\")"}, {"sha": "e221b52a370990937af37015196c3d672534f87e", "filename": "gcc/config/rs6000/rs64.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Frs64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Frs64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs64.md?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -1,5 +1,5 @@\n ;; Scheduling description for IBM RS64 processors.\n-;;   Copyright (C) 2003, 2004, 2007 Free Software Foundation, Inc.\n+;;   Copyright (C) 2003, 2004, 2007, 2009 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n \n@@ -47,7 +47,7 @@\n \n (define_insn_reservation \"rs64a-integer\" 1\n   (and (eq_attr \"type\" \"integer,insert_word,insert_dword,shift,trap,\\\n-                        var_shift_rotate,cntlz,exts\")\n+                        var_shift_rotate,cntlz,exts,isel\")\n        (eq_attr \"cpu\" \"rs64a\"))\n   \"iu_rs64\")\n "}, {"sha": "42d8fd77b5b046c3f38f865de71820ee75f4b73a", "filename": "gcc/config/rs6000/t-fprules", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Ft-fprules", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Ft-fprules", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-fprules?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -21,6 +21,7 @@ MULTILIB_MATCHES_FLOAT\t= msoft-float=mcpu?401 \\\n \t\t\t  msoft-float=mcpu?405 \\\n \t\t\t  msoft-float=mcpu?440 \\\n \t\t\t  msoft-float=mcpu?464 \\\n+\t\t\t  msoft-float=mcpu?476 \\\n \t\t\t  msoft-float=mcpu?ec603e \\\n \t\t\t  msoft-float=mcpu?801 \\\n \t\t\t  msoft-float=mcpu?821 \\"}, {"sha": "c302ad2015d3afd89b8cd8a4ec1d583af54c3381", "filename": "gcc/config/rs6000/vxworks.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfig%2Frs6000%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvxworks.h?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Vxworks PowerPC version.\n-   Copyright (C) 1996, 2000, 2002, 2003, 2004, 2005, 2007\n+   Copyright (C) 1996, 2000, 2002, 2003, 2004, 2005, 2007, 2009\n    Free Software Foundation, Inc.\n    Contributed by CodeSourcery, LLC.\n \n@@ -68,6 +68,8 @@ along with GCC; see the file COPYING3.  If not see\n    %{mcpu=403 : -DCPU=PPC403  ; \\\n      mcpu=405 : -DCPU=PPC405  ; \\\n      mcpu=440 : -DCPU=PPC440  ; \\\n+     mcpu=464 : -DCPU=PPC464  ; \\\n+     mcpu=476 : -DCPU=PPC476  ; \\\n      mcpu=603 : -DCPU=PPC603  ; \\\n      mcpu=604 : -DCPU=PPC604  ; \\\n      mcpu=860 : -DCPU=PPC860  ; \\"}, {"sha": "66b38ec99a1bb6a7c439c19cf023d338b5d92325", "filename": "gcc/configure", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -23513,6 +23513,50 @@ if test $gcc_cv_as_powerpc_lwsync = yes; then\n \n $as_echo \"#define HAVE_AS_LWSYNC 1\" >>confdefs.h\n \n+fi\n+\n+    case $target in\n+      *-*-aix*) conftest_s='\t.machine \"476\"\n+\t.csect .text[PR]\n+\tdci 0';;\n+      *) conftest_s='\t.machine \"476\"\n+\t.text\n+\tdci 0';;\n+    esac\n+\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for data cache invalidate support\" >&5\n+$as_echo_n \"checking assembler for data cache invalidate support... \" >&6; }\n+if test \"${gcc_cv_as_powerpc_dci+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  gcc_cv_as_powerpc_dci=no\n+    if test $in_tree_gas = yes; then\n+    if test $gcc_cv_gas_vers -ge `expr \\( \\( 9 \\* 1000 \\) + 99 \\) \\* 1000 + 0`\n+  then gcc_cv_as_powerpc_dci=yes\n+fi\n+  elif test x$gcc_cv_as != x; then\n+    echo \"$conftest_s\" > conftest.s\n+    if { ac_try='$gcc_cv_as -a32 -o conftest.o conftest.s >&5'\n+  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }\n+    then\n+\tgcc_cv_as_powerpc_dci=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_powerpc_dci\" >&5\n+$as_echo \"$gcc_cv_as_powerpc_dci\" >&6; }\n+if test $gcc_cv_as_powerpc_dci = yes; then\n+\n+$as_echo \"#define HAVE_AS_DCI 1\" >>confdefs.h\n+\n fi\n \n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for .gnu_attribute support\" >&5"}, {"sha": "7947d2856299327889b40a1b2f58c901cd36c5ff", "filename": "gcc/configure.ac", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -3249,6 +3249,21 @@ LCF0:\n       [AC_DEFINE(HAVE_AS_LWSYNC, 1,\n \t  [Define if your assembler supports LWSYNC instructions.])])\n \n+    case $target in\n+      *-*-aix*) conftest_s='\t.machine \"476\"\n+\t.csect .text[[PR]]\n+\tdci 0';;\n+      *) conftest_s='\t.machine \"476\"\n+\t.text\n+\tdci 0';;\n+    esac\n+\n+    gcc_GAS_CHECK_FEATURE([data cache invalidate support],\n+      gcc_cv_as_powerpc_dci, [9,99,0], -a32,\n+      [$conftest_s],,\n+      [AC_DEFINE(HAVE_AS_DCI, 1,\n+\t  [Define if your assembler supports the DCI/ICI instructions.])])\n+\n     gcc_GAS_CHECK_FEATURE([.gnu_attribute support],\n       gcc_cv_as_powerpc_gnu_attribute, [2,18,0],,\n       [.gnu_attribute 4,1],,"}, {"sha": "3f131fd02b4a986ed1618906a8b832b8bd9c56c1", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47f67e51560a5cb55fa2720bcb56d0d29a53ca85/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=47f67e51560a5cb55fa2720bcb56d0d29a53ca85", "patch": "@@ -14606,9 +14606,9 @@ Set architecture type, register usage, choice of mnemonics, and\n instruction scheduling parameters for machine type @var{cpu_type}.\n Supported values for @var{cpu_type} are @samp{401}, @samp{403},\n @samp{405}, @samp{405fp}, @samp{440}, @samp{440fp}, @samp{464}, @samp{464fp},\n-@samp{505}, @samp{601}, @samp{602}, @samp{603}, @samp{603e}, @samp{604},\n-@samp{604e}, @samp{620}, @samp{630}, @samp{740}, @samp{7400},\n-@samp{7450}, @samp{750}, @samp{801}, @samp{821}, @samp{823},\n+@samp{476}, @samp{476fp}, @samp{505}, @samp{601}, @samp{602}, @samp{603},\n+@samp{603e}, @samp{604}, @samp{604e}, @samp{620}, @samp{630}, @samp{740},\n+@samp{7400}, @samp{7450}, @samp{750}, @samp{801}, @samp{821}, @samp{823},\n @samp{860}, @samp{970}, @samp{8540}, @samp{a2}, @samp{e300c2},\n @samp{e300c3}, @samp{e500mc}, @samp{ec603e}, @samp{G3}, @samp{G4}, @samp{G5},\n @samp{power}, @samp{power2}, @samp{power3}, @samp{power4},\n@@ -14954,7 +14954,7 @@ hardware floating is used.\n @opindex mmulhw\n @opindex mno-mulhw\n Generate code that uses (does not use) the half-word multiply and\n-multiply-accumulate instructions on the IBM 405, 440 and 464 processors.\n+multiply-accumulate instructions on the IBM 405, 440, 464 and 476 processors.\n These instructions are generated by default when targetting those\n processors.\n \n@@ -14963,7 +14963,7 @@ processors.\n @opindex mdlmzb\n @opindex mno-dlmzb\n Generate code that uses (does not use) the string-search @samp{dlmzb}\n-instruction on the IBM 405, 440 and 464 processors.  This instruction is\n+instruction on the IBM 405, 440, 464 and 476 processors.  This instruction is\n generated by default when targetting those processors.\n \n @item -mno-bit-align"}]}