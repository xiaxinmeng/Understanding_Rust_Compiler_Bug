{"sha": "00b0c19b4bbfa483925a177ed3e6ce2e1f42444b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBiMGMxOWI0YmJmYTQ4MzkyNWExNzdlZDNlNmNlMmUxZjQyNDQ0Yg==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2009-05-13T23:17:55Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2009-05-13T23:17:55Z"}, "message": "re PR preprocessor/36674 (#include location is offset by one row in errors from preprocessed files)\n\n2009-05-14  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n\n\tPR cpp/36674\nlibcpp/\n\t* directives (do_linemarker): Compensate for the increment in\n\tlocation that occurs when we reach the end of line.\n\t* files (_cpp_stack_include): Mention _cpp_find_file in the\n\tcomment.\ntestsuite/\n\t* gcc.dg/cpp/pr36674.i: New.\n\nFrom-SVN: r147504", "tree": {"sha": "148f0c276cd055d9c2b057991dccf87084ea5216", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/148f0c276cd055d9c2b057991dccf87084ea5216"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00b0c19b4bbfa483925a177ed3e6ce2e1f42444b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00b0c19b4bbfa483925a177ed3e6ce2e1f42444b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00b0c19b4bbfa483925a177ed3e6ce2e1f42444b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00b0c19b4bbfa483925a177ed3e6ce2e1f42444b/comments", "author": null, "committer": null, "parents": [{"sha": "f06257d36aac7da75b3eaf7d06cf138a303977cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f06257d36aac7da75b3eaf7d06cf138a303977cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f06257d36aac7da75b3eaf7d06cf138a303977cb"}], "stats": {"total": 48, "additions": 41, "deletions": 7}, "files": [{"sha": "f9580aa46a661144c41cb0424b673cb6268f725f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00b0c19b4bbfa483925a177ed3e6ce2e1f42444b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00b0c19b4bbfa483925a177ed3e6ce2e1f42444b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=00b0c19b4bbfa483925a177ed3e6ce2e1f42444b", "patch": "@@ -1,3 +1,8 @@\n+2009-05-14  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\tPR cpp/36674\n+\t* gcc.dg/cpp/pr36674.i: New.\n+\n 2009-05-14  Ben Elliston  <bje@au.ibm.com>\n \t \n \tPR middle-end/40035"}, {"sha": "9362d5a408084045b719cf837a0cacc37305f59d", "filename": "gcc/testsuite/gcc.dg/cpp/pr36674.i", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00b0c19b4bbfa483925a177ed3e6ce2e1f42444b/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpr36674.i", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00b0c19b4bbfa483925a177ed3e6ce2e1f42444b/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpr36674.i", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpr36674.i?ref=00b0c19b4bbfa483925a177ed3e6ce2e1f42444b", "patch": "@@ -0,0 +1,12 @@\n+/* PR cpp/36674  #include location is offset by one row in errors from preprocessed files */\n+/* { dg-do compile } */\n+/* { dg-options \"-fshow-column\" } */\n+# 1 \"gcc/testsuite/gcc.dg/pr36674.c\"\n+# 1 \"<built-in>\"\n+# 1 \"<command-line>\"\n+# 1 \"gcc/testsuite/gcc.dg/pr36674.c\"\n+# 1 \"gcc/testsuite/gcc.dg/pr36674.h\" 1\n+not_declared_yet();\n+# 1 \"gcc/testsuite/gcc.dg/pr36674.c\" 2\n+/* { dg-message \"file included from \\[^\\n\\]*pr36674.c:1:\" \"correct include line\" { target *-*-* } 0 } */\n+/* { dg-message \"pr36674.h:1:1: warning: data definition has no type or storage class\" \"correct warning\" { target *-*-* } 0 } */"}, {"sha": "36a2fbc1c565d90052e528fd66093ee711e5b2b8", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00b0c19b4bbfa483925a177ed3e6ce2e1f42444b/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00b0c19b4bbfa483925a177ed3e6ce2e1f42444b/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=00b0c19b4bbfa483925a177ed3e6ce2e1f42444b", "patch": "@@ -1,3 +1,11 @@\n+2009-05-14  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\tPR cpp/36674\n+\t* directives (do_linemarker): Compensate for the increment in\n+\tlocation that occurs when we reach the end of line.\n+\t* files (_cpp_stack_include): Mention _cpp_find_file in the\n+\tcomment.\n+\n 2009-05-10  Joseph Myers  <joseph@codesourcery.com>\n \n \t* include/cpplib.h (enum cpp_token_fld_kind): Add"}, {"sha": "74644ff6c776ce0636d3025fa9276347485bef21", "filename": "libcpp/directives.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00b0c19b4bbfa483925a177ed3e6ce2e1f42444b/libcpp%2Fdirectives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00b0c19b4bbfa483925a177ed3e6ce2e1f42444b/libcpp%2Fdirectives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fdirectives.c?ref=00b0c19b4bbfa483925a177ed3e6ce2e1f42444b", "patch": "@@ -1004,6 +1004,14 @@ do_linemarker (cpp_reader *pfile)\n     }\n \n   skip_rest_of_line (pfile);\n+\n+  /* Compensate for the increment in linemap_add that occurs in\n+     _cpp_do_file_change.  We're currently at the start of the line\n+     *following* the #line directive.  A separate source_location for this\n+     location makes no sense (until we do the LC_LEAVE), and\n+     complicates LAST_SOURCE_LINE_LOCATION.  */\n+  pfile->line_table->highest_location--;\n+\n   _cpp_do_file_change (pfile, reason, new_file, new_lineno, new_sysp);\n }\n "}, {"sha": "c8c19021f565905168a13559b3fb670c4ba8e5b6", "filename": "libcpp/files.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00b0c19b4bbfa483925a177ed3e6ce2e1f42444b/libcpp%2Ffiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00b0c19b4bbfa483925a177ed3e6ce2e1f42444b/libcpp%2Ffiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Ffiles.c?ref=00b0c19b4bbfa483925a177ed3e6ce2e1f42444b", "patch": "@@ -912,13 +912,14 @@ _cpp_stack_include (cpp_reader *pfile, const char *fname, int angle_brackets,\n \n   file = _cpp_find_file (pfile, fname, dir, false, angle_brackets);\n \n-  /* Compensate for the increment in linemap_add.  In the case of a\n-     normal #include, we're currently at the start of the line\n-     *following* the #include.  A separate source_location for this\n-     location makes no sense (until we do the LC_LEAVE), and\n-     complicates LAST_SOURCE_LINE_LOCATION.  This does not apply if we\n-     found a PCH file (in which case linemap_add is not called) or we\n-     were included from the command-line.  */\n+  /* Compensate for the increment in linemap_add that occurs in\n+     _cpp_stack_file.  In the case of a normal #include, we're\n+     currently at the start of the line *following* the #include.  A\n+     separate source_location for this location makes no sense (until\n+     we do the LC_LEAVE), and complicates LAST_SOURCE_LINE_LOCATION.\n+     This does not apply if we found a PCH file (in which case\n+     linemap_add is not called) or we were included from the\n+     command-line.  */\n   if (file->pchname == NULL && file->err_no == 0 && type != IT_CMDLINE)\n     pfile->line_table->highest_location--;\n "}]}