{"sha": "4b36ae28d360665f94048dd796d505f2280b1e59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIzNmFlMjhkMzYwNjY1Zjk0MDQ4ZGQ3OTZkNTA1ZjIyODBiMWU1OQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2013-05-04T21:22:09Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2013-05-04T21:22:09Z"}, "message": "rs6000.c (INT_P): Reformat.\n\n        * config/rs6000/rs6000.c (INT_P): Reformat.  Delete obsolete comment.\n        (INT_LOWPART): Delete.\n        (extract_MB): Adjust.\n        (extract_ME): Adjust.\n        (print_operand): Adjust.\n\nFrom-SVN: r198602", "tree": {"sha": "9020ff34fb2befc18d81703e78b98ed877f35679", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9020ff34fb2befc18d81703e78b98ed877f35679"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b36ae28d360665f94048dd796d505f2280b1e59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b36ae28d360665f94048dd796d505f2280b1e59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b36ae28d360665f94048dd796d505f2280b1e59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b36ae28d360665f94048dd796d505f2280b1e59/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da226db23cdd083ccebaadf5cf71f525decbd20e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da226db23cdd083ccebaadf5cf71f525decbd20e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da226db23cdd083ccebaadf5cf71f525decbd20e"}], "stats": {"total": 42, "additions": 23, "deletions": 19}, "files": [{"sha": "711e2a5f4077cde3fac0dcccb76eb4402b516372", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b36ae28d360665f94048dd796d505f2280b1e59/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b36ae28d360665f94048dd796d505f2280b1e59/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b36ae28d360665f94048dd796d505f2280b1e59", "patch": "@@ -1,3 +1,11 @@\n+2013-05-04  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.c (INT_P): Reformat.  Delete obsolete comment.\n+\t(INT_LOWPART): Delete.\n+\t(extract_MB): Adjust.\n+\t(extract_ME): Adjust.\n+\t(print_operand): Adjust.\n+\n 2013-05-04  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/predicates.md (reg_or_add_cint_operand,"}, {"sha": "b30d47db00ab377be095082a9bf184ebdcc50764", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 15, "deletions": 19, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b36ae28d360665f94048dd796d505f2280b1e59/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b36ae28d360665f94048dd796d505f2280b1e59/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=4b36ae28d360665f94048dd796d505f2280b1e59", "patch": "@@ -14851,17 +14851,13 @@ rs6000_init_machine_status (void)\n   return ggc_alloc_cleared_machine_function ();\n }\n \f\n-/* These macros test for integers and extract the low-order bits.  */\n-#define INT_P(X)  \\\n-(GET_CODE (X) == CONST_INT && GET_MODE (X) == VOIDmode)\n-\n-#define INT_LOWPART(X) INTVAL (X)\n+#define INT_P(X) (GET_CODE (X) == CONST_INT && GET_MODE (X) == VOIDmode)\n \n int\n extract_MB (rtx op)\n {\n   int i;\n-  unsigned long val = INT_LOWPART (op);\n+  unsigned long val = INTVAL (op);\n \n   /* If the high bit is zero, the value is the first 1 bit we find\n      from the left.  */\n@@ -14893,7 +14889,7 @@ int\n extract_ME (rtx op)\n {\n   int i;\n-  unsigned long val = INT_LOWPART (op);\n+  unsigned long val = INTVAL (op);\n \n   /* If the low bit is zero, the value is the first 1 bit we find from\n      the right.  */\n@@ -15014,15 +15010,15 @@ print_operand (FILE *file, rtx x, int code)\n       /* If constant, low-order 16 bits of constant, unsigned.\n \t Otherwise, write normally.  */\n       if (INT_P (x))\n-\tfprintf (file, HOST_WIDE_INT_PRINT_DEC, INT_LOWPART (x) & 0xffff);\n+\tfprintf (file, HOST_WIDE_INT_PRINT_DEC, INTVAL (x) & 0xffff);\n       else\n \tprint_operand (file, x, 0);\n       return;\n \n     case 'B':\n       /* If the low-order bit is zero, write 'r'; otherwise, write 'l'\n \t for 64-bit mask direction.  */\n-      putc (((INT_LOWPART (x) & 1) == 0 ? 'r' : 'l'), file);\n+      putc (((INTVAL (x) & 1) == 0 ? 'r' : 'l'), file);\n       return;\n \n       /* %c is output_addr_const if a CONSTANT_ADDRESS_P, otherwise\n@@ -15080,7 +15076,7 @@ print_operand (FILE *file, rtx x, int code)\n       /* If constant, output low-order five bits.  Otherwise, write\n \t normally.  */\n       if (INT_P (x))\n-\tfprintf (file, HOST_WIDE_INT_PRINT_DEC, INT_LOWPART (x) & 31);\n+\tfprintf (file, HOST_WIDE_INT_PRINT_DEC, INTVAL (x) & 31);\n       else\n \tprint_operand (file, x, 0);\n       return;\n@@ -15089,7 +15085,7 @@ print_operand (FILE *file, rtx x, int code)\n       /* If constant, output low-order six bits.  Otherwise, write\n \t normally.  */\n       if (INT_P (x))\n-\tfprintf (file, HOST_WIDE_INT_PRINT_DEC, INT_LOWPART (x) & 63);\n+\tfprintf (file, HOST_WIDE_INT_PRINT_DEC, INTVAL (x) & 63);\n       else\n \tprint_operand (file, x, 0);\n       return;\n@@ -15126,7 +15122,7 @@ print_operand (FILE *file, rtx x, int code)\n       if (! INT_P (x))\n \toutput_operand_lossage (\"invalid %%k value\");\n       else\n-\tfprintf (file, HOST_WIDE_INT_PRINT_DEC, ~ INT_LOWPART (x));\n+\tfprintf (file, HOST_WIDE_INT_PRINT_DEC, ~ INTVAL (x));\n       return;\n \n     case 'K':\n@@ -15211,8 +15207,8 @@ print_operand (FILE *file, rtx x, int code)\n     case 'p':\n       /* X is a CONST_INT that is a power of two.  Output the logarithm.  */\n       if (! INT_P (x)\n-\t  || INT_LOWPART (x) < 0\n-\t  || (i = exact_log2 (INT_LOWPART (x))) < 0)\n+\t  || INTVAL (x) < 0\n+\t  || (i = exact_log2 (INTVAL (x))) < 0)\n \toutput_operand_lossage (\"invalid %%p value\");\n       else\n \tfprintf (file, \"%d\", i);\n@@ -15285,7 +15281,7 @@ print_operand (FILE *file, rtx x, int code)\n       if (! INT_P (x))\n \toutput_operand_lossage (\"invalid %%s value\");\n       else\n-\tfprintf (file, HOST_WIDE_INT_PRINT_DEC, (32 - INT_LOWPART (x)) & 31);\n+\tfprintf (file, HOST_WIDE_INT_PRINT_DEC, (32 - INTVAL (x)) & 31);\n       return;\n \n     case 'S':\n@@ -15295,7 +15291,7 @@ print_operand (FILE *file, rtx x, int code)\n       if (! mask64_operand (x, DImode))\n \toutput_operand_lossage (\"invalid %%S value\");\n \n-      uval = INT_LOWPART (x);\n+      uval = INTVAL (x);\n \n       if (uval & 1)\t/* Clear Left */\n \t{\n@@ -15346,7 +15342,7 @@ print_operand (FILE *file, rtx x, int code)\n \toutput_operand_lossage (\"invalid %%u value\");\n       else\n \tfprintf (file, HOST_WIDE_INT_PRINT_HEX,\n-\t\t (INT_LOWPART (x) >> 16) & 0xffff);\n+\t\t (INTVAL (x) >> 16) & 0xffff);\n       return;\n \n     case 'v':\n@@ -15355,7 +15351,7 @@ print_operand (FILE *file, rtx x, int code)\n \toutput_operand_lossage (\"invalid %%v value\");\n       else\n \tfprintf (file, HOST_WIDE_INT_PRINT_HEX,\n-\t\t (INT_LOWPART (x) >> 16) & 0xffff);\n+\t\t (INTVAL (x) >> 16) & 0xffff);\n       return;\n \n     case 'U':\n@@ -15411,7 +15407,7 @@ print_operand (FILE *file, rtx x, int code)\n \t normally.  */\n       if (INT_P (x))\n \tfprintf (file, HOST_WIDE_INT_PRINT_DEC,\n-\t\t ((INT_LOWPART (x) & 0xffff) ^ 0x8000) - 0x8000);\n+\t\t ((INTVAL (x) & 0xffff) ^ 0x8000) - 0x8000);\n       else\n \tprint_operand (file, x, 0);\n       return;"}]}