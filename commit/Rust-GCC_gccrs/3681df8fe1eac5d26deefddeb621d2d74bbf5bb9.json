{"sha": "3681df8fe1eac5d26deefddeb621d2d74bbf5bb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY4MWRmOGZlMWVhYzVkMjZkZWVmZGRlYjYyMWQyZDc0YmJmNWJiOQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2007-08-31T14:27:19Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2007-08-31T14:27:19Z"}, "message": "re PR target/33132 (m32r: ICE: RTL check: expected elt 0 type 'i' or 'n', have 'w' (rtx const_int) in insn_current_length, at insn-attrtab.c:29)\n\nPR target/33132\n* config/m32r/constraints.md: Add W constraint for integer zero.\n* config/m32r/m32r.md (get_pc): Use W and i constraints.\n  Fix length calculation by using alternatives.\n\nFrom-SVN: r127992", "tree": {"sha": "1941024908613b72d58e911912e79a36cf7b20f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1941024908613b72d58e911912e79a36cf7b20f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3681df8fe1eac5d26deefddeb621d2d74bbf5bb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3681df8fe1eac5d26deefddeb621d2d74bbf5bb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3681df8fe1eac5d26deefddeb621d2d74bbf5bb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3681df8fe1eac5d26deefddeb621d2d74bbf5bb9/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "62442ab9cb306b379718f9ed797b7c60c40df6c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62442ab9cb306b379718f9ed797b7c60c40df6c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62442ab9cb306b379718f9ed797b7c60c40df6c8"}], "stats": {"total": 31, "additions": 20, "deletions": 11}, "files": [{"sha": "50832cf78bf83637da918f815ee3d9080e0fab3f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3681df8fe1eac5d26deefddeb621d2d74bbf5bb9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3681df8fe1eac5d26deefddeb621d2d74bbf5bb9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3681df8fe1eac5d26deefddeb621d2d74bbf5bb9", "patch": "@@ -1,3 +1,10 @@\n+2007-08-31  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR target/33132\n+\t* config/m32r/constraints.md: Add W constraint for integer zero.\n+\t* config/m32r/m32r.md (get_pc): Use W and i constraints.\n+\tFix length calculation by using alternatives.\n+\n 2007-08-31  Richard Sandiford  <richard@codesourcery.com>\n \n \t* optabs.c (shift_optab_p, commutative_optab_p): New functions,"}, {"sha": "da126c27c4ba5a9c1bd2b56ad67ce87cdfa7c156", "filename": "gcc/config/m32r/constraints.md", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3681df8fe1eac5d26deefddeb621d2d74bbf5bb9/gcc%2Fconfig%2Fm32r%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3681df8fe1eac5d26deefddeb621d2d74bbf5bb9/gcc%2Fconfig%2Fm32r%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fconstraints.md?ref=3681df8fe1eac5d26deefddeb621d2d74bbf5bb9", "patch": "@@ -39,6 +39,7 @@\n ;; S is for stores with pre {inc,dec}rement\n ;; T is for indirect of a pointer.\n ;; U is for loads with post increment.\n+;; W is used for an immediate value of 0.\n ;;\n ;; Register constraints\n \n@@ -128,3 +129,9 @@\n   \"A load with post increment.\"\n   (and (match_code \"mem\")\n        (match_test \"LOAD_POSTINC_P (GET_MODE (op), XEXP (op, 0))\")))\n+\n+(define_constraint \"W\"\n+  \"zero immediate.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival == 0\")))\n+"}, {"sha": "84cf4f954e044802baa168910e2dbc349b10f9fa", "filename": "gcc/config/m32r/m32r.md", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3681df8fe1eac5d26deefddeb621d2d74bbf5bb9/gcc%2Fconfig%2Fm32r%2Fm32r.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3681df8fe1eac5d26deefddeb621d2d74bbf5bb9/gcc%2Fconfig%2Fm32r%2Fm32r.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.md?ref=3681df8fe1eac5d26deefddeb621d2d74bbf5bb9", "patch": "@@ -2637,19 +2637,14 @@\n \n (define_insn \"get_pc\"\n   [(clobber (reg:SI 14))\n-   (set (match_operand 0 \"register_operand\" \"=r\")\n+   (set (match_operand 0 \"register_operand\" \"=r,r\")\n         (unspec [(match_operand 1 \"\" \"\")] UNSPEC_GET_PC))\n-   (use (match_operand:SI 2 \"immediate_operand\" \"\"))]\n+   (use (match_operand:SI 2 \"immediate_operand\" \"W,i\"))]\n   \"flag_pic\"\n-  \"*\n-{\n-  if (INTVAL(operands[2]))\n-    return \\\"bl.s .+4\\;ld24 %0,%#%1\\;add %0,lr\\\";\n-  else\n-    return \\\"bl.s .+4\\;seth %0,%#shigh(%1)\\;add3 %0,%0,%#low(%1+4)\\;add %0,lr\\\";}\"\n-  [(set (attr \"length\") (if_then_else (ne (match_dup 2) (const_int 0))\n-                                      (const_int 8)\n-                                      (const_int 12)))])\n+  \"@\n+   bl.s .+4\\;seth %0,%#shigh(%1)\\;add3 %0,%0,%#low(%1+4)\\;add %0,lr\n+   bl.s .+4\\;ld24 %0,%#%1\\;add %0,lr\"\n+  [(set_attr \"length\" \"12,8\")])\n \n (define_expand \"builtin_setjmp_receiver\"\n   [(label_ref (match_operand 0 \"\" \"\"))]"}]}