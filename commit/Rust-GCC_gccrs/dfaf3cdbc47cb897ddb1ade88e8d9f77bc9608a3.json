{"sha": "dfaf3cdbc47cb897ddb1ade88e8d9f77bc9608a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGZhZjNjZGJjNDdjYjg5N2RkYjFhZGU4OGU4ZDlmNzdiYzk2MDhhMw==", "commit": {"author": {"name": "Stephane Carrez", "email": "Stephane.Carrez@worldnet.fr", "date": "2000-09-08T20:16:40Z"}, "committer": {"name": "Stephane Carrez", "email": "ciceron@gcc.gnu.org", "date": "2000-09-08T20:16:40Z"}, "message": "Unsigned -> float conversion for fp-bit.c\n\nFrom-SVN: r36274", "tree": {"sha": "1dc567b8266ce8479953260b70b01007f3e1f8f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1dc567b8266ce8479953260b70b01007f3e1f8f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dfaf3cdbc47cb897ddb1ade88e8d9f77bc9608a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfaf3cdbc47cb897ddb1ade88e8d9f77bc9608a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfaf3cdbc47cb897ddb1ade88e8d9f77bc9608a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfaf3cdbc47cb897ddb1ade88e8d9f77bc9608a3/comments", "author": null, "committer": null, "parents": [{"sha": "f246ff2351ae53fa7ee78f29320225db84127f58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f246ff2351ae53fa7ee78f29320225db84127f58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f246ff2351ae53fa7ee78f29320225db84127f58"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "1e5446dc5b533a93e7ced39ab314ef9b3a1351d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfaf3cdbc47cb897ddb1ade88e8d9f77bc9608a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfaf3cdbc47cb897ddb1ade88e8d9f77bc9608a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dfaf3cdbc47cb897ddb1ade88e8d9f77bc9608a3", "patch": "@@ -1,3 +1,11 @@\n+2000-09-08  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n+\n+\t* Makefile.in (DPBIT_FUNCS): Add _usi_to_df.\n+\t(FPBIT_FUNCS): Add _usi_to_sf.\n+\t* config/fp-bit.c (usi_to_float): New function.\n+\t* config/fp-bit.h (L_usi_to_sf, L_usi_to_df): Define.\n+\t(usi_to_float): Add appropriate #define.\n+\n 2000-09-08  Bernd Schmidt  <bernds@redhat.co.uk>\n \n \t* i386-protos.h (sse_comparison_operator, mmx_reg_operand): Declare"}, {"sha": "bebe9d6facd78864331c1ad0061ab95aeb50d43e", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfaf3cdbc47cb897ddb1ade88e8d9f77bc9608a3/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfaf3cdbc47cb897ddb1ade88e8d9f77bc9608a3/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=dfaf3cdbc47cb897ddb1ade88e8d9f77bc9608a3", "patch": "@@ -753,12 +753,12 @@ LIB2FUNCS_EH = _eh\n FPBIT_FUNCS = _pack_sf _unpack_sf _addsub_sf _mul_sf _div_sf \\\n     _fpcmp_parts_sf _compare_sf _eq_sf _ne_sf _gt_sf _ge_sf \\\n     _lt_sf _le_sf _unord_sf _si_to_sf _sf_to_si _negate_sf _make_sf \\\n-    _sf_to_df _thenan_sf _sf_to_usi\n+    _sf_to_df _thenan_sf _sf_to_usi _usi_to_sf\n \n DPBIT_FUNCS = _pack_df _unpack_df _addsub_df _mul_df _div_df \\\n     _fpcmp_parts_df _compare_df _eq_df _ne_df _gt_df _ge_df \\\n     _lt_df _le_df _unord_df _si_to_df _df_to_si _negate_df _make_df \\\n-    _df_to_sf _thenan_df _df_to_usi\n+    _df_to_sf _thenan_df _df_to_usi _usi_to_df\n \n # The files that \"belong\" in CONFIG_H are deliberately omitted\n # because having them there would not be useful in actual practice."}, {"sha": "5f88518982f3c238bb3ff6a9272c9f565277ca06", "filename": "gcc/config/fp-bit.c", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfaf3cdbc47cb897ddb1ade88e8d9f77bc9608a3/gcc%2Fconfig%2Ffp-bit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfaf3cdbc47cb897ddb1ade88e8d9f77bc9608a3/gcc%2Fconfig%2Ffp-bit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffp-bit.c?ref=dfaf3cdbc47cb897ddb1ade88e8d9f77bc9608a3", "patch": "@@ -1169,6 +1169,38 @@ si_to_float (SItype arg_a)\n }\n #endif /* L_si_to_sf || L_si_to_df */\n \n+#if defined(L_usi_to_sf) || defined(L_usi_to_df)\n+FLO_type\n+usi_to_float (USItype arg_a)\n+{\n+  fp_number_type in;\n+\n+  in.sign = 0;\n+  if (!arg_a)\n+    {\n+      in.class = CLASS_ZERO;\n+    }\n+  else\n+    {\n+      in.class = CLASS_NUMBER;\n+      in.normal_exp = FRACBITS + NGARDS;\n+      in.fraction.ll = arg_a;\n+\n+      while (in.fraction.ll > (1LL << (FRACBITS + NGARDS)))\n+        {\n+          in.fraction.ll >>= 1;\n+          in.normal_exp += 1;\n+        }\n+      while (in.fraction.ll < (1LL << (FRACBITS + NGARDS)))\n+\t{\n+\t  in.fraction.ll <<= 1;\n+\t  in.normal_exp -= 1;\n+\t}\n+    }\n+  return pack_d (&in);\n+}\n+#endif\n+\n #if defined(L_sf_to_si) || defined(L_df_to_si)\n SItype\n float_to_si (FLO_type arg_a)"}, {"sha": "1eb134dadfaeb960e9f675658e980bb8f4dde576", "filename": "gcc/config/fp-bit.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfaf3cdbc47cb897ddb1ade88e8d9f77bc9608a3/gcc%2Fconfig%2Ffp-bit.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfaf3cdbc47cb897ddb1ade88e8d9f77bc9608a3/gcc%2Fconfig%2Ffp-bit.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffp-bit.h?ref=dfaf3cdbc47cb897ddb1ade88e8d9f77bc9608a3", "patch": "@@ -66,6 +66,8 @@ Boston, MA 02111-1307, USA.  */\n #define L_le_df\n #define L_unord_sf\n #define L_unord_df\n+#define L_usi_to_sf\n+#define L_usi_to_df\n #define L_si_to_sf\n #define L_si_to_df\n #define L_sf_to_si\n@@ -193,6 +195,7 @@ typedef unsigned int UDItype __attribute__ ((mode (DI)));\n #\t\tdefine _lt_f2 \t\t__ltsf2\n #\t\tdefine _le_f2 \t\t__lesf2\n #\t\tdefine _unord_f2\t__unordsf2\n+#\t\tdefine usi_to_float \t__floatunsisf\n #\t\tdefine si_to_float \t__floatsisf\n #\t\tdefine float_to_si \t__fixsfsi\n #\t\tdefine float_to_usi \t__fixunssfsi\n@@ -211,6 +214,7 @@ typedef unsigned int UDItype __attribute__ ((mode (DI)));\n #\t\tdefine _lt_f2 \t\t__ltdf2\n #\t\tdefine _le_f2 \t\t__ledf2\n #\t\tdefine _unord_f2\t__unorddf2\n+#\t\tdefine usi_to_float \t__floatunsidf\n #\t\tdefine si_to_float \t__floatsidf\n #\t\tdefine float_to_si \t__fixdfsi\n #\t\tdefine float_to_usi \t__fixunsdfsi"}]}