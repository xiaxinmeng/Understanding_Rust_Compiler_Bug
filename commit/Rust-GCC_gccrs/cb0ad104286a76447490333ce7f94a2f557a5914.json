{"sha": "cb0ad104286a76447490333ce7f94a2f557a5914", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2IwYWQxMDQyODZhNzY0NDc0OTAzMzNjZTdmOTRhMmY1NTdhNTkxNA==", "commit": {"author": {"name": "Jan Kratochvil", "email": "jan.kratochvil@redhat.com", "date": "2011-07-01T17:16:44Z"}, "committer": {"name": "Jan Kratochvil", "email": "jkratoch@gcc.gnu.org", "date": "2011-07-01T17:16:44Z"}, "message": "re PR debug/49408 (member function template id not matching linkage name)\n\nlibiberty/\n\tPR debug/49408\n\t* cp-demangle.c (d_print_comp): Suppress argument list for function\n\treferences by the '&' unary operator.  Keep also already processed\n\tvariant without the argument list.  Suppress argument list types for\n\tfunction call used in an expression.\n\t* testsuite/demangle-expected: Fix excessive argument list types in\n\t`test for typed function in decltype'.  New testcase for no argument\n\tlist types printed.  3 new testcases for function references by the\n\t'&' unary operator..\n\nFrom-SVN: r175761", "tree": {"sha": "b14d04457bcd80a404fcafea4b393ecbfa6ad483", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b14d04457bcd80a404fcafea4b393ecbfa6ad483"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb0ad104286a76447490333ce7f94a2f557a5914", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb0ad104286a76447490333ce7f94a2f557a5914", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb0ad104286a76447490333ce7f94a2f557a5914", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb0ad104286a76447490333ce7f94a2f557a5914/comments", "author": {"login": "jankratochvil", "id": 1223939, "node_id": "MDQ6VXNlcjEyMjM5Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1223939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankratochvil", "html_url": "https://github.com/jankratochvil", "followers_url": "https://api.github.com/users/jankratochvil/followers", "following_url": "https://api.github.com/users/jankratochvil/following{/other_user}", "gists_url": "https://api.github.com/users/jankratochvil/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankratochvil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankratochvil/subscriptions", "organizations_url": "https://api.github.com/users/jankratochvil/orgs", "repos_url": "https://api.github.com/users/jankratochvil/repos", "events_url": "https://api.github.com/users/jankratochvil/events{/privacy}", "received_events_url": "https://api.github.com/users/jankratochvil/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "06e88d73463080ebe7f4e52c39408de43363fbbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06e88d73463080ebe7f4e52c39408de43363fbbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06e88d73463080ebe7f4e52c39408de43363fbbd"}], "stats": {"total": 87, "additions": 84, "deletions": 3}, "files": [{"sha": "809f22bc381eae7ecb67bdd86003987f99f9c331", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb0ad104286a76447490333ce7f94a2f557a5914/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb0ad104286a76447490333ce7f94a2f557a5914/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=cb0ad104286a76447490333ce7f94a2f557a5914", "patch": "@@ -1,3 +1,15 @@\n+2011-07-01  Jan Kratochvil  <jan.kratochvil@redhat.com>\n+\n+\tPR debug/49408\n+\t* cp-demangle.c (d_print_comp): Suppress argument list for function\n+\treferences by the '&' unary operator.  Keep also already processed\n+\tvariant without the argument list.  Suppress argument list types for\n+\tfunction call used in an expression.\n+\t* testsuite/demangle-expected: Fix excessive argument list types in\n+\t`test for typed function in decltype'.  New testcase for no argument\n+\tlist types printed.  3 new testcases for function references by the\n+\t'&' unary operator..\n+\n 2011-06-20  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/37089"}, {"sha": "f1363226c564833745238d92e3918db4c5a20e05", "filename": "libiberty/cp-demangle.c", "status": "modified", "additions": 55, "deletions": 2, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb0ad104286a76447490333ce7f94a2f557a5914/libiberty%2Fcp-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb0ad104286a76447490333ce7f94a2f557a5914/libiberty%2Fcp-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.c?ref=cb0ad104286a76447490333ce7f94a2f557a5914", "patch": "@@ -4139,7 +4139,46 @@ d_print_comp (struct d_print_info *dpi, int options,\n       return;\n \n     case DEMANGLE_COMPONENT_UNARY:\n-      if (d_left (dc)->type != DEMANGLE_COMPONENT_CAST)\n+      if (d_left (dc)->type == DEMANGLE_COMPONENT_OPERATOR\n+\t  && d_left (dc)->u.s_operator.op->len == 1\n+\t  && d_left (dc)->u.s_operator.op->name[0] == '&'\n+\t  && d_right (dc)->type == DEMANGLE_COMPONENT_TYPED_NAME\n+\t  && d_left (d_right (dc))->type == DEMANGLE_COMPONENT_QUAL_NAME\n+\t  && d_right (d_right (dc))->type == DEMANGLE_COMPONENT_FUNCTION_TYPE)\n+\t{\n+\t  /* Address of a function (therefore in an expression context) must\n+\t     have its argument list suppressed.\n+\n+\t     unary operator ... dc\n+\t       operator & ... d_left (dc)\n+\t       typed name ... d_right (dc)\n+\t\t qualified name ... d_left (d_right (dc))\n+\t\t   <names>\n+\t\t function type ... d_right (d_right (dc))\n+\t\t   argument list\n+\t\t     <arguments>  */\n+\n+\t  d_print_expr_op (dpi, options, d_left (dc));\n+\t  d_print_comp (dpi, options, d_left (d_right (dc)));\n+\t  return;\n+\t}\n+      else if (d_left (dc)->type == DEMANGLE_COMPONENT_OPERATOR\n+\t       && d_left (dc)->u.s_operator.op->len == 1\n+\t       && d_left (dc)->u.s_operator.op->name[0] == '&'\n+\t       && d_right (dc)->type == DEMANGLE_COMPONENT_QUAL_NAME)\n+\t{\n+\t  /* Keep also already processed variant without the argument list.\n+\n+\t     unary operator ... dc\n+\t       operator & ... d_left (dc)\n+\t       qualified name ... d_right (dc)\n+\t\t <names>  */\n+\n+\t  d_print_expr_op (dpi, options, d_left (dc));\n+\t  d_print_comp (dpi, options, d_right (dc));\n+\t  return;\n+\t}\n+      else if (d_left (dc)->type != DEMANGLE_COMPONENT_CAST)\n \td_print_expr_op (dpi, options, d_left (dc));\n       else\n \t{\n@@ -4165,7 +4204,21 @@ d_print_comp (struct d_print_info *dpi, int options,\n \t  && d_left (dc)->u.s_operator.op->name[0] == '>')\n \td_append_char (dpi, '(');\n \n-      d_print_subexpr (dpi, options, d_left (d_right (dc)));\n+      if (strcmp (d_left (dc)->u.s_operator.op->code, \"cl\") == 0\n+          && d_left (d_right (dc))->type == DEMANGLE_COMPONENT_TYPED_NAME)\n+\t{\n+\t  /* Function call used in an expression should not have printed types\n+\t     of the function arguments.  Values of the function arguments still\n+\t     get printed below.  */\n+\n+\t  const struct demangle_component *func = d_left (d_right (dc));\n+\n+\t  if (d_right (func)->type != DEMANGLE_COMPONENT_FUNCTION_TYPE)\n+\t    d_print_error (dpi);\n+\t  d_print_subexpr (dpi, options, d_left (func));\n+\t}\n+      else\n+\td_print_subexpr (dpi, options, d_left (d_right (dc)));\n       if (strcmp (d_left (dc)->u.s_operator.op->code, \"ix\") == 0)\n \t{\n \t  d_append_char (dpi, '[');"}, {"sha": "4980cf1728d8ae313eef5b26b9cb9b3dc9077ace", "filename": "libiberty/testsuite/demangle-expected", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb0ad104286a76447490333ce7f94a2f557a5914/libiberty%2Ftestsuite%2Fdemangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb0ad104286a76447490333ce7f94a2f557a5914/libiberty%2Ftestsuite%2Fdemangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fdemangle-expected?ref=cb0ad104286a76447490333ce7f94a2f557a5914", "patch": "@@ -3920,7 +3920,11 @@ decltype (({parm#1}.(g<double>))()) h<A<int>, double>(A<int>, double)\n # test for typed function in decltype\n --format=gnu-v3\n _ZN1AIiE1jIiEEDTplfp_clL_Z1xvEEET_\n-decltype ({parm#1}+((x())())) A<int>::j<int>(int)\n+decltype ({parm#1}+(x())) A<int>::j<int>(int)\n+# typed function in decltype with an argument list\n+--format=gnu-v3\n+_Z1tIlEDTplcvT_Li5EclL_Z1qsELi6EEEv\n+decltype (((long)(5))+(q(6))) t<long>()\n # test for expansion of function parameter pack\n --format=gnu-v3\n _Z1gIIidEEDTclL_Z1fEspplfp_Li1EEEDpT_\n@@ -3990,6 +3994,18 @@ outer(short (*)(int), long)\n _Z6outer2IsEPFilES1_\n outer2<short>(int (*)(long))\n #\n+--format=gnu-v3 --no-params\n+_ZN1KIXadL_ZN1S1mEiEEE1fEv\n+K<&S::m>::f()\n+K<&S::m>::f\n+--format=gnu-v3\n+_ZN1KILi1EXadL_ZN1S1mEiEEE1fEv\n+K<1, &S::m>::f()\n+# Here the `(int)' argument list of `S::m' is already removed.\n+--format=gnu-v3\n+_ZN1KILi1EXadL_ZN1S1mEEEE1fEv\n+K<1, &S::m>::f()\n+#\n # Ada (GNAT) tests.\n #\n # Simple test."}]}