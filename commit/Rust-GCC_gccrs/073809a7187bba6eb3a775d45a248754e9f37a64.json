{"sha": "073809a7187bba6eb3a775d45a248754e9f37a64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDczODA5YTcxODdiYmE2ZWIzYTc3NWQ0NWEyNDg3NTRlOWYzN2E2NA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2017-09-20T22:46:49Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2017-09-20T22:46:49Z"}, "message": "Fix C++ testsuite fallout from r252976.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c/81854\n\t* g++.dg/ext/attr-ifunc-2.C: Correct type errors.\n\t* g++.dg/ext/attr-ifunc-4.C: Ditto.\n\t* lib/target-supports.exp: Adjust for C++.\n\nFrom-SVN: r253041", "tree": {"sha": "2c2a5a2556e40847e0310e1052a37e3178ede663", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c2a5a2556e40847e0310e1052a37e3178ede663"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/073809a7187bba6eb3a775d45a248754e9f37a64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/073809a7187bba6eb3a775d45a248754e9f37a64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/073809a7187bba6eb3a775d45a248754e9f37a64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/073809a7187bba6eb3a775d45a248754e9f37a64/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5f2fd590311e5ff636404de6771a7b0dbb8f788d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f2fd590311e5ff636404de6771a7b0dbb8f788d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f2fd590311e5ff636404de6771a7b0dbb8f788d"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "94696c91b9335f066bae26854b9224169a35c92f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/073809a7187bba6eb3a775d45a248754e9f37a64/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/073809a7187bba6eb3a775d45a248754e9f37a64/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=073809a7187bba6eb3a775d45a248754e9f37a64", "patch": "@@ -1,13 +1,18 @@\n 2017-09-20  Martin Sebor  <msebor@redhat.com>\n \n+\tPR c/81854\n+\t* g++.dg/ext/attr-ifunc-2.C: Correct type errors.\n+\t* g++.dg/ext/attr-ifunc-4.C: Ditto.\n+\t* lib/target-supports.exp: Adjust for C++.\n+\n \tPR c/81854\n \t* gcc.dg/attr-ifunc-1.c: Correct type errors.\n \t* gcc.dg/attr-ifunc-2.c: Ditto.\n \t* gcc.dg/attr-ifunc-3.c: Ditto.\n \t* gcc.dg/attr-ifunc-4.c: Ditto.\n \t* gcc.dg/attr-ifunc-5.c: Ditto.\n \t* gcc.dg/pr81854.c: Require ifunc support.\n-\t* gcc/testsuite/lib/target-supports.exp: Correct type error.\n+\t* lib/target-supports.exp: Correct type error.\n \n 2017-09-20  Jeff Law  <law@redhat.com>\n "}, {"sha": "1fc940bb7ddf0f4d8462d23e30c1809ca01ef18b", "filename": "gcc/testsuite/g++.dg/ext/attr-ifunc-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/073809a7187bba6eb3a775d45a248754e9f37a64/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-ifunc-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/073809a7187bba6eb3a775d45a248754e9f37a64/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-ifunc-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-ifunc-2.C?ref=073809a7187bba6eb3a775d45a248754e9f37a64", "patch": "@@ -20,7 +20,7 @@ int Klass::implementation (void)\n   return 0;\n }\n \n-Klass::memFuncPtr Klass::resolver (void)\n+Klass::MemFuncPtr Klass::resolver (void)\n {\n   return &Klass::implementation;\n }"}, {"sha": "3127193147e16d191f017cce8822278110406d62", "filename": "gcc/testsuite/g++.dg/ext/attr-ifunc-4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/073809a7187bba6eb3a775d45a248754e9f37a64/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-ifunc-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/073809a7187bba6eb3a775d45a248754e9f37a64/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-ifunc-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-ifunc-4.C?ref=073809a7187bba6eb3a775d45a248754e9f37a64", "patch": "@@ -14,7 +14,7 @@ struct Klassier : Klass\n   int implementation ();\n   int magic ();\n \n-  typedef int (Klass::*MemFuncPtr)();\n+  typedef int (Klassier::*MemFuncPtr)();\n \n   static MemFuncPtr resolver ();\n };"}, {"sha": "5b40058e2d70f5f2c932474da6b0268a2434fc13", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/073809a7187bba6eb3a775d45a248754e9f37a64/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/073809a7187bba6eb3a775d45a248754e9f37a64/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=073809a7187bba6eb3a775d45a248754e9f37a64", "patch": "@@ -437,11 +437,14 @@ proc check_effective_target_alias { } {\n proc check_ifunc_available { } {\n     return [check_no_compiler_messages ifunc_available object {\n \t#ifdef __cplusplus\n-\textern \"C\"\n+\textern \"C\" {\n \t#endif\n \ttypedef void F (void);\n \tF* g() {}\n \tvoid f() __attribute__((ifunc(\"g\")));\n+\t#ifdef __cplusplus\n+\t}\n+\t#endif\n     }]\n }\n "}]}