{"sha": "84fd832c033bea574a835ca680e7b84d2027798d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRmZDgzMmMwMzNiZWE1NzRhODM1Y2E2ODBlN2I4NGQyMDI3Nzk4ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-12-06T18:55:48Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-12-06T18:55:48Z"}, "message": "re PR c++/54207 ([C++0x] ICE in build_noexcept_spec when bool is #defined/typedef'd)\n\n\tPR c++/54207\n\t* except.c (build_noexcept_spec): Avoid direct comparison\n\twith boolean_true_node or boolean_false_node, instead use\n\toperand_equal_p and/or INTEGER_CST check.\n\t* pt.c (tsubst_exception_specification): Likewise.\n\t* typeck2.c (merge_exception_specifiers): Likewise.\n\n\t* g++.dg/cpp0x/noexcept18.C: New test.\n\nFrom-SVN: r194263", "tree": {"sha": "198119626a140a928ea4247c14efb8b91ce927a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/198119626a140a928ea4247c14efb8b91ce927a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84fd832c033bea574a835ca680e7b84d2027798d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84fd832c033bea574a835ca680e7b84d2027798d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84fd832c033bea574a835ca680e7b84d2027798d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84fd832c033bea574a835ca680e7b84d2027798d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "947f720f7d7ca03f642e8682a97cb667bd343569", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/947f720f7d7ca03f642e8682a97cb667bd343569", "html_url": "https://github.com/Rust-GCC/gccrs/commit/947f720f7d7ca03f642e8682a97cb667bd343569"}], "stats": {"total": 45, "additions": 36, "deletions": 9}, "files": [{"sha": "d228fe2b2e98bf7c1d9861b5d89525769a4c875d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fd832c033bea574a835ca680e7b84d2027798d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fd832c033bea574a835ca680e7b84d2027798d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=84fd832c033bea574a835ca680e7b84d2027798d", "patch": "@@ -1,3 +1,12 @@\n+2012-12-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/54207\n+\t* except.c (build_noexcept_spec): Avoid direct comparison\n+\twith boolean_true_node or boolean_false_node, instead use\n+\toperand_equal_p and/or INTEGER_CST check.\n+\t* pt.c (tsubst_exception_specification): Likewise.\n+\t* typeck2.c (merge_exception_specifiers): Likewise.\n+\n 2012-12-06  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR c++/55573"}, {"sha": "3689566d0d902975eff303ea4dd33398212ce273", "filename": "gcc/cp/except.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fd832c033bea574a835ca680e7b84d2027798d/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fd832c033bea574a835ca680e7b84d2027798d/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=84fd832c033bea574a835ca680e7b84d2027798d", "patch": "@@ -1316,15 +1316,21 @@ build_noexcept_spec (tree expr, int complain)\n \t\t\t\t\t\tLOOKUP_NORMAL);\n       expr = cxx_constant_value (expr);\n     }\n-  if (expr == boolean_true_node)\n-    return noexcept_true_spec;\n-  else if (expr == boolean_false_node)\n-    return noexcept_false_spec;\n+  if (TREE_CODE (expr) == INTEGER_CST)\n+    {\n+      if (operand_equal_p (expr, boolean_true_node, 0))\n+\treturn noexcept_true_spec;\n+      else\n+\t{\n+\t  gcc_checking_assert (operand_equal_p (expr, boolean_false_node, 0));\n+\t  return noexcept_false_spec;\n+\t}\n+    }\n   else if (expr == error_mark_node)\n     return error_mark_node;\n   else\n     {\n-      gcc_assert (processing_template_decl || expr == error_mark_node\n+      gcc_assert (processing_template_decl\n \t\t  || TREE_CODE (expr) == DEFERRED_NOEXCEPT);\n       return build_tree_list (expr, NULL_TREE);\n     }"}, {"sha": "8b0ead1700b4a21202d737d9d222198eda5657f4", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fd832c033bea574a835ca680e7b84d2027798d/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fd832c033bea574a835ca680e7b84d2027798d/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=84fd832c033bea574a835ca680e7b84d2027798d", "patch": "@@ -10844,7 +10844,7 @@ tsubst_exception_specification (tree fntype,\n     {\n       /* A noexcept-specifier.  */\n       tree expr = TREE_PURPOSE (specs);\n-      if (expr == boolean_true_node || expr == boolean_false_node)\n+      if (TREE_CODE (expr) == INTEGER_CST)\n \tnew_specs = expr;\n       else if (defer_ok)\n \t{"}, {"sha": "abddd4d11101323b3697ed1e7379b560b69233b3", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fd832c033bea574a835ca680e7b84d2027798d/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fd832c033bea574a835ca680e7b84d2027798d/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=84fd832c033bea574a835ca680e7b84d2027798d", "patch": "@@ -1871,7 +1871,7 @@ merge_exception_specifiers (tree list, tree add, tree fn)\n       /* If ADD is a deferred noexcept, we must have been called from\n \t process_subob_fn.  For implicitly declared functions, we build up\n \t a list of functions to consider at instantiation time.  */\n-      if (noex == boolean_true_node)\n+      if (operand_equal_p (noex, boolean_true_node, 0))\n \tnoex = NULL_TREE;\n       gcc_assert (fn && (!noex || is_overloaded_fn (noex)));\n       noex = build_overload (fn, noex);"}, {"sha": "9b6462d13b3752e2aff45fedddb2b73e5ddf09d3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fd832c033bea574a835ca680e7b84d2027798d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fd832c033bea574a835ca680e7b84d2027798d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=84fd832c033bea574a835ca680e7b84d2027798d", "patch": "@@ -1,10 +1,11 @@\n 2012-12-06  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/54207\n+\t* g++.dg/cpp0x/noexcept18.C: New test.\n+\n \tPR c++/55573\n \t* g++.dg/cpp0x/constexpr-55573.C: New test.\n \n-2012-12-06  Jakub Jelinek  <jakub@redhat.com>\n-\n \tPR c++/55137\n \t* g++.dg/opt/pr55137.C: New test.\n \t* gcc.c-torture/execute/pr55137.c: New test."}, {"sha": "953fb0ec8b25718e0da8f90059b9726eee8d2f91", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept18.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fd832c033bea574a835ca680e7b84d2027798d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fd832c033bea574a835ca680e7b84d2027798d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept18.C?ref=84fd832c033bea574a835ca680e7b84d2027798d", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/54207\n+// { dg-do compile }\n+// { dg-options \"-std=c++11\" }\n+\n+typedef bool B;\n+constexpr B foo () { return true; }\n+\n+void\n+bar () noexcept (foo ())\n+{\n+}"}]}