{"sha": "f0c5fd444b1c784a87640638ff5889116066a2f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBjNWZkNDQ0YjFjNzg0YTg3NjQwNjM4ZmY1ODg5MTE2MDY2YTJmMA==", "commit": {"author": {"name": "Peter Bergner", "email": "bergner@vnet.ibm.com", "date": "2014-07-28T13:48:13Z"}, "committer": {"name": "Peter Bergner", "email": "bergner@gcc.gnu.org", "date": "2014-07-28T13:48:13Z"}, "message": "config.gcc (powerpc*-*-linux*): Include gnu-user.h in tm_file.\n\n\t* config.gcc (powerpc*-*-linux*): Include gnu-user.h in tm_file.\n\t* config/rs6000/sysv4.h (CC!_SPEC): Undefine it before defining it.\n\t* config/rs6000/linux.h (CPLUSPLUS_CPP_SPEC): Delete define.\n\t(LINK_GCC_C_SEQUENCE_SPEC): Likewise.\n\t(USE_LD_AS_NEEDED): Likewise.\n\t(ASM_APP_ON): Likewise.\n\t(ASM_APP_OFF): Likewise.\n\t(TARGET_POSIX_IO): Likewise.\n\t* config/rs6000/linux64.h (CPLUSPLUS_CPP_SPEC): Likewise.\n\t(LINK_GCC_C_SEQUENCE_SPEC): Likewise.\n\t(USE_LD_AS_NEEDED): Likewise.\n\t(ASM_APP_ON): Likewise.\n\t(ASM_APP_OFF): Likewise.\n\t(TARGET_POSIX_IO): Likewise.\n\nFrom-SVN: r213125", "tree": {"sha": "44c33c4666075269566ee7b01105a339c4047090", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44c33c4666075269566ee7b01105a339c4047090"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0c5fd444b1c784a87640638ff5889116066a2f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0c5fd444b1c784a87640638ff5889116066a2f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0c5fd444b1c784a87640638ff5889116066a2f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0c5fd444b1c784a87640638ff5889116066a2f0/comments", "author": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1ab6380b3cfc627969c128b959c9a09c2100d21b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ab6380b3cfc627969c128b959c9a09c2100d21b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ab6380b3cfc627969c128b959c9a09c2100d21b"}], "stats": {"total": 68, "additions": 19, "deletions": 49}, "files": [{"sha": "4e9da4c060317c846e31b7a5911a3edf257fcbb6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c5fd444b1c784a87640638ff5889116066a2f0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c5fd444b1c784a87640638ff5889116066a2f0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f0c5fd444b1c784a87640638ff5889116066a2f0", "patch": "@@ -1,3 +1,20 @@\n+2014-07-28  Peter Bergner  <bergner@vnet.ibm.com>\n+\n+\t* config.gcc (powerpc*-*-linux*): Include gnu-user.h in tm_file.\n+\t* config/rs6000/sysv4.h (CC!_SPEC): Undefine it before defining it.\n+\t* config/rs6000/linux.h (CPLUSPLUS_CPP_SPEC): Delete define.\n+\t(LINK_GCC_C_SEQUENCE_SPEC): Likewise.\n+\t(USE_LD_AS_NEEDED): Likewise.\n+\t(ASM_APP_ON): Likewise.\n+\t(ASM_APP_OFF): Likewise.\n+\t(TARGET_POSIX_IO): Likewise.\n+\t* config/rs6000/linux64.h (CPLUSPLUS_CPP_SPEC): Likewise.\n+\t(LINK_GCC_C_SEQUENCE_SPEC): Likewise.\n+\t(USE_LD_AS_NEEDED): Likewise.\n+\t(ASM_APP_ON): Likewise.\n+\t(ASM_APP_OFF): Likewise.\n+\t(TARGET_POSIX_IO): Likewise.\n+\n 2014-07-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR middle-end/61734"}, {"sha": "e1f1532933382947873acd20152d0ec30f90eb05", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c5fd444b1c784a87640638ff5889116066a2f0/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c5fd444b1c784a87640638ff5889116066a2f0/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=f0c5fd444b1c784a87640638ff5889116066a2f0", "patch": "@@ -2252,7 +2252,7 @@ powerpc-*-rtems*)\n \ttmake_file=\"${tmake_file} rs6000/t-fprules rs6000/t-rtems rs6000/t-ppccomm\"\n \t;;\n powerpc*-*-linux*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h freebsd-spec.h rs6000/sysv4.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h freebsd-spec.h rs6000/sysv4.h\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcos ${tmake_file} rs6000/t-ppccomm\"\n \textra_objs=\"$extra_objs rs6000-linux.o\""}, {"sha": "7c83f1e78efc06e21e82e1ff519f08c7159b10b3", "filename": "gcc/config/rs6000/linux.h", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c5fd444b1c784a87640638ff5889116066a2f0/gcc%2Fconfig%2Frs6000%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c5fd444b1c784a87640638ff5889116066a2f0/gcc%2Fconfig%2Frs6000%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux.h?ref=f0c5fd444b1c784a87640638ff5889116066a2f0", "patch": "@@ -56,12 +56,6 @@\n #undef\tCPP_OS_DEFAULT_SPEC\n #define CPP_OS_DEFAULT_SPEC \"%(cpp_os_linux)\"\n \n-/* The GNU C++ standard library currently requires _GNU_SOURCE being\n-   defined on glibc-based systems. This temporary hack accomplishes this,\n-   it should go away as soon as libstdc++-v3 has a real fix.  */\n-#undef  CPLUSPLUS_CPP_SPEC\n-#define CPLUSPLUS_CPP_SPEC \"-D_GNU_SOURCE %(cpp)\"\n-\n #undef  LINK_SHLIB_SPEC\n #define LINK_SHLIB_SPEC \"%{shared:-shared} %{!shared: %{static:-static}}\"\n \n@@ -98,22 +92,6 @@\n   %{rdynamic:-export-dynamic} \\\n   -dynamic-linker \" GNU_USER_DYNAMIC_LINKER \"}}\"\n \n-#define LINK_GCC_C_SEQUENCE_SPEC \\\n-  \"%{static:--start-group} %G %L %{static:--end-group}%{!static:%G}\"\n-\n-/* Use --as-needed -lgcc_s for eh support.  */\n-#ifdef HAVE_LD_AS_NEEDED\n-#define USE_LD_AS_NEEDED 1\n-#endif\n-\n-/* Override rs6000.h definition.  */\n-#undef  ASM_APP_ON\n-#define ASM_APP_ON \"#APP\\n\"\n-\n-/* Override rs6000.h definition.  */\n-#undef  ASM_APP_OFF\n-#define ASM_APP_OFF \"#NO_APP\\n\"\n-\n /* For backward compatibility, we must continue to use the AIX\n    structure return convention.  */\n #undef  DRAFT_V4_STRUCT_RET\n@@ -129,8 +107,6 @@\n #define RELOCATABLE_NEEDS_FIXUP \\\n   (rs6000_isa_flags & rs6000_isa_flags_explicit & OPTION_MASK_RELOCATABLE)\n \n-#define TARGET_POSIX_IO\n-\n #ifdef TARGET_LIBC_PROVIDES_SSP\n /* ppc32 glibc provides __stack_chk_guard in -0x7008(2).  */\n #define TARGET_THREAD_SSP_OFFSET\t-0x7008"}, {"sha": "39a2b172ac1114f0ed0375acc0907c2a33e5d1a6", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c5fd444b1c784a87640638ff5889116066a2f0/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c5fd444b1c784a87640638ff5889116066a2f0/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=f0c5fd444b1c784a87640638ff5889116066a2f0", "patch": "@@ -343,12 +343,6 @@ extern int dot_symbols;\n #undef  CPP_OS_DEFAULT_SPEC\n #define CPP_OS_DEFAULT_SPEC \"%(cpp_os_linux)\"\n \n-/* The GNU C++ standard library currently requires _GNU_SOURCE being\n-   defined on glibc-based systems. This temporary hack accomplishes this,\n-   it should go away as soon as libstdc++-v3 has a real fix.  */\n-#undef  CPLUSPLUS_CPP_SPEC\n-#define CPLUSPLUS_CPP_SPEC \"-D_GNU_SOURCE %(cpp)\"\n-\n #undef  LINK_SHLIB_SPEC\n #define LINK_SHLIB_SPEC \"%{shared:-shared} %{!shared: %{static:-static}}\"\n \n@@ -440,14 +434,6 @@ extern int dot_symbols;\n #undef  WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 32\n \n-/* Override rs6000.h definition.  */\n-#undef  ASM_APP_ON\n-#define ASM_APP_ON \"#APP\\n\"\n-\n-/* Override rs6000.h definition.  */\n-#undef  ASM_APP_OFF\n-#define ASM_APP_OFF \"#NO_APP\\n\"\n-\n #undef  RS6000_MCOUNT\n #define RS6000_MCOUNT \"_mcount\"\n \n@@ -547,16 +533,6 @@ extern int dot_symbols;\n #undef DRAFT_V4_STRUCT_RET\n #define DRAFT_V4_STRUCT_RET (!TARGET_64BIT)\n \n-#define TARGET_POSIX_IO\n-\n-#define LINK_GCC_C_SEQUENCE_SPEC \\\n-  \"%{static:--start-group} %G %L %{static:--end-group}%{!static:%G}\"\n-\n-/* Use --as-needed -lgcc_s for eh support.  */\n-#ifdef HAVE_LD_AS_NEEDED\n-#define USE_LD_AS_NEEDED 1\n-#endif\n-\n #ifdef TARGET_LIBC_PROVIDES_SSP\n /* ppc32 glibc provides __stack_chk_guard in -0x7008(2),\n    ppc64 glibc provides it at -0x7010(13).  */"}, {"sha": "4344dcd8f18df9b4fb38c3f89132c893ab67fb5e", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c5fd444b1c784a87640638ff5889116066a2f0/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c5fd444b1c784a87640638ff5889116066a2f0/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=f0c5fd444b1c784a87640638ff5889116066a2f0", "patch": "@@ -539,6 +539,7 @@ ENDIAN_SELECT(\" -mbig\", \" -mlittle\", DEFAULT_ASM_ENDIAN)\n #endif\n \n /* Pass -G xxx to the compiler.  */\n+#undef CC1_SPEC\n #define\tCC1_SPEC \"%{G*} %(cc1_cpu)\" \\\n \"%{meabi: %{!mcall-*: -mcall-sysv }} \\\n %{!meabi: %{!mno-eabi: \\"}]}