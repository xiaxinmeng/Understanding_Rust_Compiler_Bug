{"sha": "31e4b1c0990daaa780524bf61f060049571f018b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFlNGIxYzA5OTBkYWFhNzgwNTI0YmY2MWYwNjAwNDk1NzFmMDE4Yg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-25T17:00:40Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-25T17:00:40Z"}, "message": "(make_decl_rtl): If a variable has an asm operand that refers to,\n\ne.g., fp, make a distinct RTL for it.\n\nFrom-SVN: r4215", "tree": {"sha": "63c1bf13ac8e4d259e06c71c2f84d981af1f96fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63c1bf13ac8e4d259e06c71c2f84d981af1f96fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31e4b1c0990daaa780524bf61f060049571f018b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31e4b1c0990daaa780524bf61f060049571f018b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31e4b1c0990daaa780524bf61f060049571f018b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31e4b1c0990daaa780524bf61f060049571f018b/comments", "author": null, "committer": null, "parents": [{"sha": "e09d75bd9717621c55282547bd4d9c8c1489a5bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e09d75bd9717621c55282547bd4d9c8c1489a5bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e09d75bd9717621c55282547bd4d9c8c1489a5bf"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "16bb816aac853b23e59dc75b7d69f7a5f97a6396", "filename": "gcc/varasm.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e4b1c0990daaa780524bf61f060049571f018b/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e4b1c0990daaa780524bf61f060049571f018b/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=31e4b1c0990daaa780524bf61f060049571f018b", "patch": "@@ -354,7 +354,16 @@ make_decl_rtl (decl, asmspec, top_level)\n \t    error (\"global register variable follows a function definition\");\n \t  if (TREE_THIS_VOLATILE (decl))\n \t    warning (\"volatile register variables don't work as you might wish\");\n-\t  DECL_RTL (decl) = gen_rtx (REG, DECL_MODE (decl), reg_number);\n+\n+\t  /* If the user specified one of the eliminables registers here,\n+\t     e.g., FRAME_POINTER_REGNUM, we don't want to get this variable\n+\t     confused with that register and be eliminated.  Although this\n+\t     usage is somewhat suspect, we nevertheless use the following\n+\t     kludge to avoid setting DECL_RTL to frame_pointer_rtx.  */\n+\n+\t  DECL_RTL (decl)\n+\t    = gen_rtx (REG, DECL_MODE (decl), FIRST_PSEUDO_REGISTER);\n+\t  REGNO (DECL_RTL (decl)) = reg_number;\n \t  REG_USERVAR_P (DECL_RTL (decl)) = 1;\n \n \t  if (top_level)"}]}