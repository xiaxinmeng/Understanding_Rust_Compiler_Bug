{"sha": "b9161f44f010d95884a05be53d062f26fe3d4c7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjkxNjFmNDRmMDEwZDk1ODg0YTA1YmU1M2QwNjJmMjZmZTNkNGM3ZA==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@codesourcery.com", "date": "2000-07-12T14:12:51Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2000-07-12T14:12:51Z"}, "message": "c-typeck.c (pedwarn_c99): Move to\n\n2000-07-12  Gabriel Dos Reis  <gdr@codesourcery.com>\n\n\t* c-typeck.c (pedwarn_c99): Move to\n\t* c-errors.c: ... Here.\n\t* toplev.h (verror, vwarning, vpedwarn): Remove prototypes.\n\t* diagnostic.c (verror, vwarning, vpedwarn): Make static.\n\t* Makefile.in (C_AND_OBJC_OBJS): Include c-errors.o\n\t(c-errors.o): List dependency.\n\nFrom-SVN: r34984", "tree": {"sha": "a803361d4984ed31886800476d356e4948eac355", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a803361d4984ed31886800476d356e4948eac355"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9161f44f010d95884a05be53d062f26fe3d4c7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9161f44f010d95884a05be53d062f26fe3d4c7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9161f44f010d95884a05be53d062f26fe3d4c7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9161f44f010d95884a05be53d062f26fe3d4c7d/comments", "author": null, "committer": null, "parents": [{"sha": "61b0bcccdf88eaab20a53dd7d7c1e59ea718b65b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61b0bcccdf88eaab20a53dd7d7c1e59ea718b65b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61b0bcccdf88eaab20a53dd7d7c1e59ea718b65b"}], "stats": {"total": 99, "additions": 67, "deletions": 32}, "files": [{"sha": "3d79b7de3d54b13c3e761610684e7529dcde903d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9161f44f010d95884a05be53d062f26fe3d4c7d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9161f44f010d95884a05be53d062f26fe3d4c7d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b9161f44f010d95884a05be53d062f26fe3d4c7d", "patch": "@@ -1,3 +1,12 @@\n+2000-07-12  Gabriel Dos Reis  <gdr@codesourcery.com>\n+\n+\t* c-typeck.c (pedwarn_c99): Move to\n+\t* c-errors.c: ... Here.\n+\t* toplev.h (verror, vwarning, vpedwarn): Remove prototypes.\n+\t* diagnostic.c (verror, vwarning, vpedwarn): Make static.\n+\t* Makefile.in (C_AND_OBJC_OBJS): Include c-errors.o\n+\t(c-errors.o): List dependency.\n+\n 2000-07-12  Mark Mitchell  <mark@codesourcery.com>\n \n \t* c-parse.c: Remove."}, {"sha": "14886b8f9a24057d70352afb817f24aa6cc4e7ae", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9161f44f010d95884a05be53d062f26fe3d4c7d/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9161f44f010d95884a05be53d062f26fe3d4c7d/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=b9161f44f010d95884a05be53d062f26fe3d4c7d", "patch": "@@ -674,8 +674,8 @@ LANG_FLAGS_TO_PASS = $(SUBDIR_FLAGS_TO_PASS) \\\n # Lists of files for various purposes.\n \n # Language-specific object files for C and Objective C.\n-C_AND_OBJC_OBJS = c-lex.o c-pragma.o c-decl.o c-typeck.o c-convert.o \\\n-  c-aux-info.o c-common.o c-iterate.o c-semantics.o @extra_c_objs@\n+C_AND_OBJC_OBJS = c-errors.o c-lex.o c-pragma.o c-decl.o c-typeck.o \\\n+  c-convert.o c-aux-info.o c-common.o c-iterate.o c-semantics.o @extra_c_objs@\n \n # Language-specific object files for C.\n C_OBJS = c-parse.o c-lang.o $(C_AND_OBJC_OBJS)\n@@ -1067,6 +1067,8 @@ s-crt0:\t$(CRT0_S) $(MCRT0_S) $(GCC_PASSES) $(CONFIG_H)\n \n # C language specific files.\n \n+c-errors.o: $(srcdir)/c-errors.c $(CONFIG_H) system.h $(TREE_H) c-tree.h \\\n+    flags.h diagnostic.h\n c-parse.o : $(srcdir)/c-parse.c $(CONFIG_H) $(TREE_H) c-lex.h $(GGC_H) \\\n     $(srcdir)/c-parse.h c-tree.h c-common.h input.h flags.h system.h \\\n     toplev.h output.h"}, {"sha": "a553d29abe51e717b77b6982fb9048e00c6ad672", "filename": "gcc/c-errors.c", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9161f44f010d95884a05be53d062f26fe3d4c7d/gcc%2Fc-errors.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9161f44f010d95884a05be53d062f26fe3d4c7d/gcc%2Fc-errors.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-errors.c?ref=b9161f44f010d95884a05be53d062f26fe3d4c7d", "patch": "@@ -0,0 +1,48 @@\n+/* Various diagnostic subroutines for the GNU C language.\n+   Copyright (C) 2000 Free Software Foundation, Inc.\n+   Contributed by Gabriel Dos Reis <gdr@codesourcery.com>\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"tree.h\"\n+#include \"c-tree.h\"\n+#include \"tm_p.h\"\n+#include \"flags.h\"\n+#include \"diagnostic.h\"\n+\n+/* Issue an ISO C99 pedantic warning MSGID.  */\n+\n+void\n+pedwarn_c99 VPARAMS ((const char *msgid, ...))\n+{\n+#ifndef ANSI_PROTOTYPES\n+  const char *msgid;\n+#endif\n+  va_list ap;\n+\n+  VA_START (ap, msgid);\n+\n+#ifndef ANSI_PROTOTYPES\n+  msgid = va_arg (ap, const char *);\n+#endif\n+\n+  report_diagnostic (msgid, ap, input_filename, lineno,\n+                     !flag_isoc99 || !flag_pedantic_errors);\n+}"}, {"sha": "bebe4a95b3cbe0f7b1b8849a559f03f086db3952", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9161f44f010d95884a05be53d062f26fe3d4c7d/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9161f44f010d95884a05be53d062f26fe3d4c7d/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=b9161f44f010d95884a05be53d062f26fe3d4c7d", "patch": "@@ -6753,27 +6753,3 @@ c_expand_start_case (exp)\n \n   return exp;\n }\n-\n-/* Issue an ISO C99 pedantic warning MSGID.  */\n-\n-void\n-pedwarn_c99 VPARAMS ((const char *msgid, ...))\n-{\n-#ifndef ANSI_PROTOTYPES\n-  const char *msgid;\n-#endif\n-  va_list ap;\n-\n-  VA_START (ap, msgid);\n-\n-#ifndef ANSI_PROTOTYPES\n-  msgid = va_arg (ap, const char *);\n-#endif\n-\n-  if (flag_isoc99)\n-    vpedwarn (msgid, ap);\n-  else\n-    vwarning (msgid, ap);\n-\n-  va_end (ap);\n-}"}, {"sha": "5a0c22481bdf8f9650132c2ddfc8630d2cc82449", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9161f44f010d95884a05be53d062f26fe3d4c7d/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9161f44f010d95884a05be53d062f26fe3d4c7d/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=b9161f44f010d95884a05be53d062f26fe3d4c7d", "patch": "@@ -98,6 +98,9 @@ static void v_pedwarn_with_decl PARAMS ((tree, const char *, va_list));\n static void v_pedwarn_with_file_and_line PARAMS ((const char *, int,\n \t\t\t\t\t\t  const char *, va_list));\n static void vsorry PARAMS ((const char *, va_list));\n+static void verror PARAMS ((const char *, va_list));\n+static void vwarning PARAMS ((const char *, va_list));\n+static void vpedwarn PARAMS ((const char *, va_list));\n static void report_file_and_line PARAMS ((const char *, int, int));\n static void vnotice PARAMS ((FILE *, const char *, va_list));\n static void set_real_maximum_length PARAMS ((output_buffer *));\n@@ -1092,7 +1095,7 @@ v_error_for_asm (insn, msgid, ap)\n \n /* Report an error at the current line number.  */\n \n-void\n+static void\n verror (msgid, ap)\n      const char *msgid;\n      va_list ap;\n@@ -1180,7 +1183,7 @@ v_warning_for_asm (insn, msgid, ap)\n \n /* Report a warning at the current line number.  */\n \n-void\n+static void\n vwarning (msgid, ap)\n      const char *msgid;\n      va_list ap;\n@@ -1191,7 +1194,7 @@ vwarning (msgid, ap)\n /* These functions issue either warnings or errors depending on\n    -pedantic-errors.  */\n \n-void\n+static void\n vpedwarn (msgid, ap)\n      const char *msgid;\n      va_list ap;"}, {"sha": "952d3631bb36abf1d3004ef3bb7229e946ae181c", "filename": "gcc/toplev.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9161f44f010d95884a05be53d062f26fe3d4c7d/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9161f44f010d95884a05be53d062f26fe3d4c7d/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=b9161f44f010d95884a05be53d062f26fe3d4c7d", "patch": "@@ -70,13 +70,10 @@ extern void _fatal_insn\t\t\tPARAMS ((const char *,\n #endif\n extern void warning\t\t\tPARAMS ((const char *, ...))\n \t\t\t\t\t\tATTRIBUTE_PRINTF_1;\n-extern void vwarning\t\t\tPARAMS ((const char *, va_list));\n extern void error\t\t\tPARAMS ((const char *, ...))\n \t\t\t\t\t\tATTRIBUTE_PRINTF_1;\n-extern void verror\t\t\tPARAMS ((const char *, va_list));\n extern void pedwarn\t\t\tPARAMS ((const char *, ...))\n \t\t\t\t\t\tATTRIBUTE_PRINTF_1;\n-extern void vpedwarn\t\t\tPARAMS ((const char *, va_list));\n extern void pedwarn_with_file_and_line\tPARAMS ((const char *, int,\n \t\t\t\t\t\t  const char *, ...))\n   ATTRIBUTE_PRINTF_3;"}]}