{"sha": "3d7094661bbf3472142f85a0ad940d19ecc87ba8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q3MDk0NjYxYmJmMzQ3MjE0MmY4NWEwYWQ5NDBkMTllY2M4N2JhOA==", "commit": {"author": {"name": "Andy Hutchinson", "email": "hutchinsonandy@aim.com", "date": "2008-09-08T22:25:42Z"}, "committer": {"name": "Andy Hutchinson", "email": "hutchinsonandy@gcc.gnu.org", "date": "2008-09-08T22:25:42Z"}, "message": "re PR target/36609 (AVR wrong code using incorrect RTL for test reversal pattern)\n\nPR target/36609\n* config/avr/avr.c (avr_reorg): Create RTL for reversed compare with zero.\n* config/avr/avr.md  (QISI) : Define mode iterator.\n(negated_tst<mode>) : Redefine as split using mode macro.\n(reversed_tstqi): Define insn as reversed compare with zero.\n(reversed_tsthi): Ditto.\n(reversed_tstsi): Ditto.\n\nFrom-SVN: r140124", "tree": {"sha": "22fc2e809230cf26079d5e06f5f74c10a01597b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22fc2e809230cf26079d5e06f5f74c10a01597b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d7094661bbf3472142f85a0ad940d19ecc87ba8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d7094661bbf3472142f85a0ad940d19ecc87ba8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d7094661bbf3472142f85a0ad940d19ecc87ba8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d7094661bbf3472142f85a0ad940d19ecc87ba8/comments", "author": null, "committer": null, "parents": [{"sha": "9cfa22be65408f2f21ef2c0cc0493ee39063174e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cfa22be65408f2f21ef2c0cc0493ee39063174e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cfa22be65408f2f21ef2c0cc0493ee39063174e"}], "stats": {"total": 44, "additions": 37, "deletions": 7}, "files": [{"sha": "a34ad21c5404193c4fa887101fb70f5d44a9cc6c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d7094661bbf3472142f85a0ad940d19ecc87ba8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d7094661bbf3472142f85a0ad940d19ecc87ba8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d7094661bbf3472142f85a0ad940d19ecc87ba8", "patch": "@@ -1,3 +1,14 @@\n+2008-08-09  Andy Hutchinson  <hutchinsonandy@aim.com>\n+\n+\tPR target/36609\n+\t* config/avr/avr.c (avr_reorg): Create RTL for reversed compare with\n+\tzero.\n+\t* config/avr/avr.md  (QISI) : Define mode iterator.\n+\t(negated_tst<mode>) : Redefine as split using mode macro.\n+\t(reversed_tstqi): Define insn as reversed compare with zero.\n+\t(reversed_tsthi): Ditto.\n+\t(reversed_tstsi): Ditto.\n+\n 2008-09-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/37393"}, {"sha": "fb217bb167a6cd73970465a35a49c958df2527c7", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d7094661bbf3472142f85a0ad940d19ecc87ba8/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d7094661bbf3472142f85a0ad940d19ecc87ba8/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=3d7094661bbf3472142f85a0ad940d19ecc87ba8", "patch": "@@ -5683,7 +5683,7 @@ avr_reorg (void)\n \t      rtx t = XEXP (src,0);\n \n \t      PUT_CODE (t, swap_condition (GET_CODE (t)));\n-\t      SET_SRC (pattern) = gen_rtx_NEG (GET_MODE (SET_SRC (pattern)),\n+\t      SET_SRC (pattern) = gen_rtx_COMPARE (GET_MODE (SET_SRC (pattern)), const0_rtx,\n \t\t\t\t\t       SET_SRC (pattern));\n \t      INSN_CODE (next) = -1;\n \t      INSN_CODE (insn) = -1;"}, {"sha": "8dad9d8fe80710f0b7142e2757ccd73fbfab98e5", "filename": "gcc/config/avr/avr.md", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d7094661bbf3472142f85a0ad940d19ecc87ba8/gcc%2Fconfig%2Favr%2Favr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d7094661bbf3472142f85a0ad940d19ecc87ba8/gcc%2Fconfig%2Favr%2Favr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.md?ref=3d7094661bbf3472142f85a0ad940d19ecc87ba8", "patch": "@@ -117,6 +117,9 @@\n \t\t       (const_int 2))]\n         (const_int 2)))\n \n+;; Define mode iterator\n+(define_mode_iterator QISI [(QI \"\") (HI \"\") (SI \"\")])\n+\n ;;========================================================================\n ;; The following is used by nonlocal_goto and setjmp.\n ;; The receiver pattern will create no instructions since internally\n@@ -2015,9 +2018,10 @@\n   [(set_attr \"cc\" \"compare\")\n    (set_attr \"length\" \"1\")])\n \n-(define_insn \"*negated_tstqi\"\n+(define_insn \"*reversed_tstqi\"\n   [(set (cc0)\n-        (neg:QI (match_operand:QI 0 \"register_operand\" \"r\")))]\n+        (compare (const_int 0)  \n+\t\t (match_operand:QI 0 \"register_operand\" \"r\")))]\n   \"\"\n   \"cp __zero_reg__,%0\"\n   [(set_attr \"cc\" \"compare\")\n@@ -2031,9 +2035,10 @@\n [(set_attr \"cc\" \"compare,compare\")\n  (set_attr \"length\" \"1,2\")])\n \n-(define_insn \"*negated_tsthi\"\n+(define_insn \"*reversed_tsthi\"\n   [(set (cc0)\n-        (neg:HI (match_operand:HI 0 \"register_operand\" \"r\")))]\n+        (compare (const_int 0)\n+\t\t (match_operand:HI 0 \"register_operand\" \"r\")))]\n   \"\"\n   \"cp __zero_reg__,%A0\n \tcpc __zero_reg__,%B0\"\n@@ -2048,9 +2053,10 @@\n   [(set_attr \"cc\" \"compare\")\n    (set_attr \"length\" \"4\")])\n \n-(define_insn \"*negated_tstsi\"\n+(define_insn \"*reversed_tstsi\"\n   [(set (cc0)\n-        (neg:SI (match_operand:SI 0 \"register_operand\" \"r\")))]\n+        (compare (const_int 0)  \n+\t\t (match_operand:SI 0 \"register_operand\" \"r\")))]\n   \"\"\n   \"cp __zero_reg__,%A0\n \tcpc __zero_reg__,%B0\n@@ -2187,6 +2193,19 @@\n   [(set_attr \"cc\" \"compare,compare,compare,compare,compare\")\n    (set_attr \"length\" \"4,4,7,5,8\")])\n \n+; Optimize negated tests into reverse compare if overflow is undefined.\n+(define_insn_and_split \"negated_tst<mode>\"\n+ [(set (cc0)\n+        (neg:QISI (match_operand:QISI 0 \"register_operand\")))]\n+\n+  \"(!flag_wrapv && !flag_trapv && flag_strict_overflow)\"\n+  \"#\"\n+  \"\"\n+  [(set (cc0)\n+        (compare (const_int 0)  \n+\t\t (match_dup 0)))]\n+  \"\")\n+\n ;; ----------------------------------------------------------------------\n ;; JUMP INSTRUCTIONS\n ;; ----------------------------------------------------------------------"}]}