{"sha": "8fc0c8fae09c0a88f12ea1c2efa857ef8d7a88fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZjMGM4ZmFlMDljMGE4OGYxMmVhMWMyZWZhODU3ZWY4ZDdhODhmZQ==", "commit": {"author": {"name": "Artyom Skrobov", "email": "tyomitch@gmail.com", "date": "2018-01-16T16:28:36Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-01-16T16:28:36Z"}, "message": "caller-save.c (insert_save): Drop unnecessary parameter.\n\n        * caller-save.c (insert_save): Drop unnecessary parameter.  All\n\tcallers updated.\n\nFrom-SVN: r256751", "tree": {"sha": "04f2a85eef28ede582c2ed7c0c1d45371efceb7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04f2a85eef28ede582c2ed7c0c1d45371efceb7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fc0c8fae09c0a88f12ea1c2efa857ef8d7a88fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fc0c8fae09c0a88f12ea1c2efa857ef8d7a88fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fc0c8fae09c0a88f12ea1c2efa857ef8d7a88fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fc0c8fae09c0a88f12ea1c2efa857ef8d7a88fe/comments", "author": {"login": "tyomitch", "id": 21056281, "node_id": "MDQ6VXNlcjIxMDU2Mjgx", "avatar_url": "https://avatars.githubusercontent.com/u/21056281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tyomitch", "html_url": "https://github.com/tyomitch", "followers_url": "https://api.github.com/users/tyomitch/followers", "following_url": "https://api.github.com/users/tyomitch/following{/other_user}", "gists_url": "https://api.github.com/users/tyomitch/gists{/gist_id}", "starred_url": "https://api.github.com/users/tyomitch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tyomitch/subscriptions", "organizations_url": "https://api.github.com/users/tyomitch/orgs", "repos_url": "https://api.github.com/users/tyomitch/repos", "events_url": "https://api.github.com/users/tyomitch/events{/privacy}", "received_events_url": "https://api.github.com/users/tyomitch/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "47c268c4b27782717fbccec5019e0cd97d005afb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47c268c4b27782717fbccec5019e0cd97d005afb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47c268c4b27782717fbccec5019e0cd97d005afb"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "53be60b004d7ec957d0837e599e2634c6c14108a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fc0c8fae09c0a88f12ea1c2efa857ef8d7a88fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fc0c8fae09c0a88f12ea1c2efa857ef8d7a88fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8fc0c8fae09c0a88f12ea1c2efa857ef8d7a88fe", "patch": "@@ -1,3 +1,8 @@\n+2018-01-16  Artyom Skrobov tyomitch@gmail.com\n+\n+        * caller-save.c (insert_save): Drop unnecessary parameter.  All\n+\tcallers updated.\n+\n 2018-01-16  Jakub Jelinek  <jakub@redhat.com>\n \t    Richard Biener  <rguenth@suse.de>\n "}, {"sha": "a7edbadd2534317bc3a71d4fd8c502df0de6c5cc", "filename": "gcc/caller-save.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fc0c8fae09c0a88f12ea1c2efa857ef8d7a88fe/gcc%2Fcaller-save.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fc0c8fae09c0a88f12ea1c2efa857ef8d7a88fe/gcc%2Fcaller-save.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcaller-save.c?ref=8fc0c8fae09c0a88f12ea1c2efa857ef8d7a88fe", "patch": "@@ -88,7 +88,7 @@ static void mark_set_regs (rtx, const_rtx, void *);\n static void mark_referenced_regs (rtx *, refmarker_fn *mark, void *mark_arg);\n static refmarker_fn mark_reg_as_referenced;\n static refmarker_fn replace_reg_with_saved_mem;\n-static int insert_save (struct insn_chain *, int, int, HARD_REG_SET *,\n+static int insert_save (struct insn_chain *, int, HARD_REG_SET *,\n \t\t\tmachine_mode *);\n static int insert_restore (struct insn_chain *, int, int, int,\n \t\t\t   machine_mode *);\n@@ -861,7 +861,8 @@ save_call_clobbered_regs (void)\n \n \t      for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)\n \t\tif (TEST_HARD_REG_BIT (hard_regs_to_save, regno))\n-\t\t  regno += insert_save (chain, 1, regno, &hard_regs_to_save, save_mode);\n+\t\t  regno += insert_save (chain, regno,\n+\t\t\t\t\t&hard_regs_to_save, save_mode);\n \n \t      /* Must recompute n_regs_saved.  */\n \t      n_regs_saved = 0;\n@@ -1252,7 +1253,7 @@ insert_restore (struct insn_chain *chain, int before_p, int regno,\n /* Like insert_restore above, but save registers instead.  */\n \n static int\n-insert_save (struct insn_chain *chain, int before_p, int regno,\n+insert_save (struct insn_chain *chain, int regno,\n \t     HARD_REG_SET *to_save, machine_mode *save_mode)\n {\n   int i;\n@@ -1314,7 +1315,7 @@ insert_save (struct insn_chain *chain, int before_p, int regno,\n \n   pat = gen_rtx_SET (mem, gen_rtx_REG (GET_MODE (mem), regno));\n   code = reg_save_code (regno, GET_MODE (mem));\n-  new_chain = insert_one_insn (chain, before_p, code, pat);\n+  new_chain = insert_one_insn (chain, 1, code, pat);\n \n   /* Set hard_regs_saved and dead_or_set for all the registers we saved.  */\n   for (k = 0; k < numregs; k++)"}]}