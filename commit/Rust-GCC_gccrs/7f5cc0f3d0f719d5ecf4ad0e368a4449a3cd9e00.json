{"sha": "7f5cc0f3d0f719d5ecf4ad0e368a4449a3cd9e00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y1Y2MwZjNkMGY3MTlkNWVjZjRhZDBlMzY4YTQ0NDlhM2NkOWUwMA==", "commit": {"author": {"name": "Kelley Cook", "email": "kelleycook@wideopenwest.com", "date": "2003-09-09T22:19:56Z"}, "committer": {"name": "R. Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2003-09-09T22:19:56Z"}, "message": "Makefile.in: Define REMAKEFLAGS for LANGUAGES & BOOT_CFLAGS and use it throughout.\n\n* Makefile.in: Define REMAKEFLAGS for LANGUAGES & BOOT_CFLAGS\nand use it throughout.\n\nFrom-SVN: r71253", "tree": {"sha": "42b16678ee76e091161e75cd3a054eb82897f8ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42b16678ee76e091161e75cd3a054eb82897f8ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f5cc0f3d0f719d5ecf4ad0e368a4449a3cd9e00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f5cc0f3d0f719d5ecf4ad0e368a4449a3cd9e00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f5cc0f3d0f719d5ecf4ad0e368a4449a3cd9e00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f5cc0f3d0f719d5ecf4ad0e368a4449a3cd9e00/comments", "author": null, "committer": null, "parents": [{"sha": "f7657db990578e6193922cc0a4f8969c1bef368a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7657db990578e6193922cc0a4f8969c1bef368a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7657db990578e6193922cc0a4f8969c1bef368a"}], "stats": {"total": 38, "additions": 22, "deletions": 16}, "files": [{"sha": "5527661d2254248f7469683d1d6bb6c7f686e49b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5cc0f3d0f719d5ecf4ad0e368a4449a3cd9e00/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5cc0f3d0f719d5ecf4ad0e368a4449a3cd9e00/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7f5cc0f3d0f719d5ecf4ad0e368a4449a3cd9e00", "patch": "@@ -1,3 +1,8 @@\n+2003-09-07  Kelley Cook  <kelleycook@wideopenwest.com>\n+\n+\t* Makefile.in: Define REMAKEFLAGS for LANGUAGES & BOOT_CFLAGS\n+\tand use it throughout.\n+\n 2003-09-09  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* builtins.c (real_dconstp, fold_builtin_logarithm,"}, {"sha": "1738b391eca7a52b9a317e3c881e3941220c7ac4", "filename": "gcc/Makefile.in", "status": "modified", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5cc0f3d0f719d5ecf4ad0e368a4449a3cd9e00/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5cc0f3d0f719d5ecf4ad0e368a4449a3cd9e00/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=7f5cc0f3d0f719d5ecf4ad0e368a4449a3cd9e00", "patch": "@@ -223,6 +223,7 @@ STAMP = echo timestamp >\n \n # Make sure the $(MAKE) variable is defined.\n @SET_MAKE@\n+REMAKEFLAGS=LANGUAGES=\"$(LANGUAGES)\" BOOT_CFLAGS=\"$(BOOT_CFLAGS)\"\n \n # --------\n # UNSORTED\n@@ -3468,54 +3469,54 @@ unstage1 unstage2 unstage3 unstage4 unstageprofile unstagefeedback:\n \techo $${stage}_build > stage_last\n \n restage1: unstage1\n-\t$(MAKE) stage1_build\n+\t$(MAKE) $(REMAKEFLAGS) stage1_build\n \n restage2: unstage2\n-\t$(MAKE) LANGUAGES=\"$(LANGUAGES)\" BOOT_CFLAGS=\"$(BOOT_CFLAGS)\" stage2_build\n+\t$(MAKE) $(REMAKEFLAGS) stage2_build\n \n restage3: unstage3\n-\t$(MAKE) LANGUAGES=\"$(LANGUAGES)\" BOOT_CFLAGS=\"$(BOOT_CFLAGS)\" stage3_build\n+\t$(MAKE) $(REMAKEFLAGS) stage3_build\n \n restage4: unstage4\n-\t$(MAKE) LANGUAGES=\"$(LANGUAGES)\" BOOT_CFLAGS=\"$(BOOT_CFLAGS)\" stage4_build\n+\t$(MAKE) $(REMAKEFLAGS) stage4_build\n \n restageprofile: unstageprofile\n-\t$(MAKE) LANGUAGES=\"$(LANGUAGES)\" BOOT_CFLAGS=\"$(BOOT_CFLAGS)\" stageprofile_build\n+\t$(MAKE) $(REMAKEFLAGS) stageprofile_build\n \n restagefeedback: unstagefeedback\n-\t$(MAKE) LANGUAGES=\"$(LANGUAGES)\" BOOT_CFLAGS=\"$(BOOT_CFLAGS)\" stagefeedback_build\n+\t$(MAKE) $(REMAKEFLAGS) stagefeedback_build\n \n # Bubble up a bugfix through all the stages.  Primarily useful for fixing\n # bugs that cause the compiler to crash while building stage 2.\n bubblestrap:\n \tif test -f stage_last; then \\\n \t  LAST=`sed -e 's/_build//' < stage_last`; \\\n \t  if test \"$$LAST\" != \"stage1\"; then \\\n-\t    $(MAKE) $$LAST; \\\n+\t    $(MAKE) $(REMAKEFLAGS) $$LAST; \\\n \t    $(STAMP) $${LAST}_copy; \\\n \t  fi; \\\n \tfi\n \tif test -f stage1_copy; then $(MAKE) unstage1; fi\n-\t$(MAKE) LANGUAGES=\"$(LANGUAGES)\" BOOT_CFLAGS=\"$(BOOT_CFLAGS)\" stage1_copy\n+\t$(MAKE) $(REMAKEFLAGS) stage1_copy\n \tif test -f stage2_copy; then $(MAKE) unstage2; fi\n-\t$(MAKE) LANGUAGES=\"$(LANGUAGES)\" BOOT_CFLAGS=\"$(BOOT_CFLAGS)\" stage2_copy\n+\t$(MAKE) $(REMAKEFLAGS) stage2_copy\n \tif test -f stage3_copy; then $(MAKE) unstage3; fi\n-\t$(MAKE) LANGUAGES=\"$(LANGUAGES)\" BOOT_CFLAGS=\"$(BOOT_CFLAGS)\" stage3_build\n+\t$(MAKE) $(REMAKEFLAGS) stage3_build\n \tif test -f stage4_copy; then \\\n-\t  $(MAKE) stage3_copy; $(MAKE) unstage4; \\\n-\t  $(MAKE) LANGUAGES=\"$(LANGUAGES)\" BOOT_CFLAGS=\"$(BOOT_CFLAGS)\" stage4_build || exit 1; \\\n+\t  $(MAKE) $(REMAKEFLAGS) stage3_copy; $(MAKE) unstage4; \\\n+\t  $(MAKE) $(REMAKEFLAGS) stage4_build || exit 1; \\\n \tfi\n \n quickstrap:\n \tif test -f stage_last ; then \\\n-\t  LAST=`cat stage_last`; rm $$LAST; $(MAKE) BOOT_CFLAGS=\"$(BOOT_CFLAGS)\" LANGUAGES=\"$(LANGUAGES)\" $$LAST; \\\n+\t  LAST=`cat stage_last`; rm $$LAST; $(MAKE) $(REMAKEFLAGS) $$LAST; \\\n \telse \\\n-\t  $(MAKE) stage1_build; \\\n+\t  $(MAKE) $(REMAKEFLAGS) stage1_build; \\\n \tfi\n \n cleanstrap:\n \t-$(MAKE) clean\n-\t$(MAKE) LANGUAGES=\"$(LANGUAGES)\" BOOT_CFLAGS=\"$(BOOT_CFLAGS)\" bootstrap\n+\t$(MAKE) $(REMAKEFLAGS) bootstrap\n \n unstrap:\n \t-rm -rf stage[234]*\n@@ -3526,7 +3527,7 @@ unstrap:\n # not from scratch.\n restrap:\n \t$(MAKE) unstrap\n-\t$(MAKE) LANGUAGES=\"$(LANGUAGES)\" BOOT_CFLAGS=\"$(BOOT_CFLAGS)\" bootstrap\n+\t$(MAKE) $(REMAKEFLAGS) bootstrap\n \n # Compare the object files in the current directory with those in the\n # stage2 directory."}]}