{"sha": "92b5aacd3300c2154c62528c6a8914a749c7a663", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJiNWFhY2QzMzAwYzIxNTRjNjI1MjhjNmE4OTE0YTc0OWM3YTY2Mw==", "commit": {"author": {"name": "Devang Patel", "email": "dpatel@apple.com", "date": "2002-08-21T01:01:14Z"}, "committer": {"name": "Devang Patel", "email": "dpatel@gcc.gnu.org", "date": "2002-08-21T01:01:14Z"}, "message": "tree.c (get_qualified_type): Add TYPE_CONTEXT check.\n\n2002-08-20  Devang Patel  <dpatel@apple.com>\n        * tree.c (get_qualified_type): Add TYPE_CONTEXT check.\n\ntestsuite:\n\t* objc.dg/proto-hier-2.m: New test.\n\nFrom-SVN: r56475", "tree": {"sha": "487ede87395d20bb36a115837b7d1c9b31422c63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/487ede87395d20bb36a115837b7d1c9b31422c63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92b5aacd3300c2154c62528c6a8914a749c7a663", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92b5aacd3300c2154c62528c6a8914a749c7a663", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92b5aacd3300c2154c62528c6a8914a749c7a663", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92b5aacd3300c2154c62528c6a8914a749c7a663/comments", "author": null, "committer": null, "parents": [{"sha": "a5aa74218fa95fb01fce7d4129f66912056c628d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5aa74218fa95fb01fce7d4129f66912056c628d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5aa74218fa95fb01fce7d4129f66912056c628d"}], "stats": {"total": 58, "additions": 57, "deletions": 1}, "files": [{"sha": "00e4f4293e3ef19b163af6a93453c6b64927c62c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92b5aacd3300c2154c62528c6a8914a749c7a663/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92b5aacd3300c2154c62528c6a8914a749c7a663/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=92b5aacd3300c2154c62528c6a8914a749c7a663", "patch": "@@ -1,3 +1,6 @@\n+2002-08-20  Devang Patel  <dpatel@apple.com>\n+\t* tree.c (get_qualified_type): Add TYPE_CONTEXT check.\n+\t\n 2002-08-20  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* arc.c (output_shift): Use stdio instead of asm_fprintf."}, {"sha": "b682ab193298918b4afc78ffa6fb42d34322ad48", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92b5aacd3300c2154c62528c6a8914a749c7a663/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92b5aacd3300c2154c62528c6a8914a749c7a663/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=92b5aacd3300c2154c62528c6a8914a749c7a663", "patch": "@@ -1,3 +1,6 @@\n+2002-08-20  Devang Patel  <dpatel@apple.com>\n+\t* objc.dg/proto-hier-2.m: New test.\n+\t\n 2002-08-19  Ziemowit Laski  <zlaski@apple.com>\n \n \t* objc.dg/bitfield-1.m: New test."}, {"sha": "453de89e5bf665071be467a6cc181612ebda22f2", "filename": "gcc/testsuite/objc.dg/proto-hier-2.m", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92b5aacd3300c2154c62528c6a8914a749c7a663/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-hier-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92b5aacd3300c2154c62528c6a8914a749c7a663/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-hier-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-hier-2.m?ref=92b5aacd3300c2154c62528c6a8914a749c7a663", "patch": "@@ -0,0 +1,49 @@\n+/* Test protocol warning.  */\n+/* Contributed by Devang Patel <dpatel@apple.com>.  */\n+/* { dg-do compile } */\n+\n+typedef struct objc_object { struct objc_class *class_pointer; } *id;\n+\n+@protocol Bar\n+@end\n+\n+id <Bar> Foo_Bar () { }\n+\n+typedef struct\n+{\n+        int i;\n+} MyStruct;\n+\n+@interface Foo\n+{\n+  id _mainData;\n+  MyStruct *_anotherData;\n+}\n+\n+-(id) mainDataSource;\n+-(id) anotherDataSource;\n+-(id) my_method: (int) i;\n+@end\n+\n+@implementation Foo\n+-(id) anotherDataSource\n+{\n+        return (id)_anotherData;\n+}\n+\n+-(id) mainDataSource\n+{\n+        return _mainData;\n+}\n+\n+-(id) my_method: (int) i\n+{\n+  id one = [self anotherDataSource];\n+\n+  i = i - 1;\n+  // Do not issue warning about my_method not implemented by protocol\n+  return [(one ? [self mainDataSource] : one) my_method:i];\n+}\n+\n+@end\n+"}, {"sha": "2c56b95f94e2dd63a9a10f9d1ee1a1756e87ad03", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92b5aacd3300c2154c62528c6a8914a749c7a663/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92b5aacd3300c2154c62528c6a8914a749c7a663/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=92b5aacd3300c2154c62528c6a8914a749c7a663", "patch": "@@ -2832,7 +2832,8 @@ get_qualified_type (type, type_quals)\n      like the one we need to have.  If so, use that existing one.  We must\n      preserve the TYPE_NAME, since there is code that depends on this.  */\n   for (t = TYPE_MAIN_VARIANT (type); t; t = TYPE_NEXT_VARIANT (t))\n-    if (TYPE_QUALS (t) == type_quals && TYPE_NAME (t) == TYPE_NAME (type))\n+    if (TYPE_QUALS (t) == type_quals && TYPE_NAME (t) == TYPE_NAME (type)\n+        && TYPE_CONTEXT (t) == TYPE_CONTEXT (type))\n       return t;\n \n   return NULL_TREE;"}]}