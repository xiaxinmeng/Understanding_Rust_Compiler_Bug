{"sha": "fef205d534494307974ac09ebf24af877fbb8e28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVmMjA1ZDUzNDQ5NDMwNzk3NGFjMDllYmYyNGFmODc3ZmJiOGUyOA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-03-30T13:41:24Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-03-30T13:41:24Z"}, "message": "re PR other/52754 (indirect indexing broken with -fpredictive-commoning)\n\n2012-03-30  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/52754\n\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Only\n\tpropagate arbitrary addresses into really plain dereferences.\n\n\t* gcc.target/i386/pr52754.c: New testcase.\n\nFrom-SVN: r186012", "tree": {"sha": "f83f4b1dda3054fd9af08275cd55b2ae04f88035", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f83f4b1dda3054fd9af08275cd55b2ae04f88035"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fef205d534494307974ac09ebf24af877fbb8e28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fef205d534494307974ac09ebf24af877fbb8e28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fef205d534494307974ac09ebf24af877fbb8e28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fef205d534494307974ac09ebf24af877fbb8e28/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0b7fccfaf20a0549e470b5be41c4fc4d0b657726", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b7fccfaf20a0549e470b5be41c4fc4d0b657726", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b7fccfaf20a0549e470b5be41c4fc4d0b657726"}], "stats": {"total": 56, "additions": 50, "deletions": 6}, "files": [{"sha": "84538f8ef08189e8d49727a6e1e7467ea6be2f99", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fef205d534494307974ac09ebf24af877fbb8e28/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fef205d534494307974ac09ebf24af877fbb8e28/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fef205d534494307974ac09ebf24af877fbb8e28", "patch": "@@ -1,3 +1,9 @@\n+2012-03-30  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/52754\n+\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Only\n+\tpropagate arbitrary addresses into really plain dereferences.\n+\n 2012-03-30  Richard Guenther <rguenther@suse.de>\n \n \tPR middle-end/52772"}, {"sha": "549789d81c906053b9546ecd478355a5df3cd968", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fef205d534494307974ac09ebf24af877fbb8e28/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fef205d534494307974ac09ebf24af877fbb8e28/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fef205d534494307974ac09ebf24af877fbb8e28", "patch": "@@ -1,3 +1,8 @@\n+2012-03-30  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/52754\n+\t* gcc.target/i386/pr52754.c: New testcase.\n+\n 2012-03-30  Richard Guenther <rguenther@suse.de>\n \n \tPR middle-end/52772"}, {"sha": "0f2dbff2dd708e805ec64eb5d48a5e6eef2854ab", "filename": "gcc/testsuite/gcc.target/i386/pr52754.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fef205d534494307974ac09ebf24af877fbb8e28/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr52754.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fef205d534494307974ac09ebf24af877fbb8e28/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr52754.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr52754.c?ref=fef205d534494307974ac09ebf24af877fbb8e28", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fpredictive-commoning -msse2 -std=c99\" } */\n+/* { dg-require-effective-target sse2 } */\n+\n+#include <x86intrin.h>\n+\n+#include \"isa-check.h\"\n+#include \"sse-os-support.h\"\n+\n+int main()\n+{\n+    const float mem[8] = { 0, 1, 2, 3, 4, 5, 6, 7 };\n+\n+    unsigned int indexes[8];\n+    for (unsigned int i = 0; i < 8; ++i) indexes[i] = i;\n+\n+    check_isa ();\n+\n+    if (!sse_os_support ())\n+      exit (0);\n+\n+    __m128 x = _mm_setr_ps(0, 1, 2, 3);\n+    for (unsigned int i = 0; i + 4 < 6; ++i) {\n+        const unsigned int *ii = &indexes[i];\n+        const __m128 tmp = _mm_setr_ps(mem[ii[0]], mem[ii[1]], mem[ii[2]], mem[ii[3]]);\n+        if (0xf != _mm_movemask_ps(_mm_cmpeq_ps(tmp, x))) {\n+            __builtin_abort();\n+        }\n+        x = _mm_add_ps(x, _mm_set1_ps(1));\n+    }\n+\n+    return 0;\n+}"}, {"sha": "2b16222bbd502a9382ad4b46153688936028c654", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fef205d534494307974ac09ebf24af877fbb8e28/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fef205d534494307974ac09ebf24af877fbb8e28/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=fef205d534494307974ac09ebf24af877fbb8e28", "patch": "@@ -905,6 +905,7 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs,\n          that of the pointed-to type of the address we can put the\n \t dereferenced address on the LHS preserving the original alias-type.  */\n       else if (gimple_assign_lhs (use_stmt) == lhs\n+\t       && integer_zerop (TREE_OPERAND (lhs, 1))\n \t       && useless_type_conversion_p\n \t            (TREE_TYPE (TREE_OPERAND (def_rhs, 0)),\n \t\t     TREE_TYPE (gimple_assign_rhs1 (use_stmt))))\n@@ -917,9 +918,8 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs,\n \t  if (TREE_CODE (*def_rhs_basep) == MEM_REF)\n \t    {\n \t      new_base = TREE_OPERAND (*def_rhs_basep, 0);\n-\t      new_offset\n-\t\t= int_const_binop (PLUS_EXPR, TREE_OPERAND (lhs, 1),\n-\t\t\t\t   TREE_OPERAND (*def_rhs_basep, 1));\n+\t      new_offset = fold_convert (TREE_TYPE (TREE_OPERAND (lhs, 1)),\n+\t\t\t\t\t TREE_OPERAND (*def_rhs_basep, 1));\n \t    }\n \t  else\n \t    {\n@@ -989,6 +989,7 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs,\n          that of the pointed-to type of the address we can put the\n \t dereferenced address on the RHS preserving the original alias-type.  */\n       else if (gimple_assign_rhs1 (use_stmt) == rhs\n+\t       && integer_zerop (TREE_OPERAND (rhs, 1))\n \t       && useless_type_conversion_p\n \t\t    (TREE_TYPE (gimple_assign_lhs (use_stmt)),\n \t\t     TREE_TYPE (TREE_OPERAND (def_rhs, 0))))\n@@ -1001,9 +1002,8 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs,\n \t  if (TREE_CODE (*def_rhs_basep) == MEM_REF)\n \t    {\n \t      new_base = TREE_OPERAND (*def_rhs_basep, 0);\n-\t      new_offset\n-\t\t= int_const_binop (PLUS_EXPR, TREE_OPERAND (rhs, 1),\n-\t\t\t\t   TREE_OPERAND (*def_rhs_basep, 1));\n+\t      new_offset = fold_convert (TREE_TYPE (TREE_OPERAND (rhs, 1)),\n+\t\t\t\t\t TREE_OPERAND (*def_rhs_basep, 1));\n \t    }\n \t  else\n \t    {"}]}