{"sha": "f714c670da8667c7d3156a14d777d50dfe3cb5fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjcxNGM2NzBkYTg2NjdjN2QzMTU2YTE0ZDc3N2Q1MGRmZTNjYjVmYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-10-16T08:47:22Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-10-16T08:47:22Z"}, "message": "20020122-2.c: Use dg-additional-options.\n\n\t* gcc.dg/20020122-2.c: Use dg-additional-options.  Fix implicit\n\tdeclarations.\n\t* gcc.dg/pr32176.c: Likewise.\n\t* gcc.dg/builtin-apply4.c: Use dg-additional-options.\n\t* gcc.dg/ia64-sync-1.c: Fix implicit declarations.\n\t* gcc.dg/ia64-sync-2.c: Likewise.\n\t* gcc.dg/ia64-sync-3.c: Likewise.\n\t* gcc.dg/sync-2.c: Likewise.\n\t* gcc.dg/sync-3.c: Likewise.\n\t* gcc.target/i386/990524-1.c: Likewise.\n\t* gcc.target/i386/avx512f-pr57233.c: Likewise.\n\t* gcc.target/i386/avx512f-typecast-1.c: Likewise.\n\t* gcc.target/i386/pr26826.c: Likewise.\n\t* gcc.target/i386/pr37184.c: Likewise.\n\t* gcc.target/i386/20060125-1.c: Fix defaulting to int.\n\t* gcc.target/i386/20060125-2.c: Likewise.\n\t* gcc.target/i386/memcpy-1.c: Likewise.\n\t* gcc.target/i386/pr40934.c: Likewise.\n\t* gcc.target/i386/sse-5.c: Likewise.\n\t* gcc.target/i386/stackalign/asm-1.c: Likewise.\n\t* gcc.target/i386/vectorize4.c: Likewise.\n\t* gcc.target/i386/980312-1.c: Fix defaulting to int.  Use\n\t-fgnu89-inline.\n\t* gcc.target/i386/980313-1.c: Likewise.\n\t* gcc.target/i386/builtin-apply-mmx.c: Use -fgnu89-inline.\n\t* gcc.target/i386/crc32-2.c: Use -std=gnu89.\n\t* gcc.target/i386/crc32-3.c: Likewise.\n\t* gcc.target/i386/intrinsics_3.c: Likewise.\n\t* gcc.target/i386/loop-1.c: Likewise.\n\t* gcc.target/i386/pr44948-2a.c: Likewise.\n\t* gcc.target/i386/pr47564.c: Likewise.\n\t* gcc.target/i386/pr50712.c: Likewise.\n\t* gcc.target/i386/stackalign/return-2.c: Likewise.\n\nCo-Authored-By: Marek Polacek <polacek@redhat.com>\n\nFrom-SVN: r216300", "tree": {"sha": "33a80936593fd9ad7319620be4a0f443dcf0ab3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33a80936593fd9ad7319620be4a0f443dcf0ab3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f714c670da8667c7d3156a14d777d50dfe3cb5fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f714c670da8667c7d3156a14d777d50dfe3cb5fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f714c670da8667c7d3156a14d777d50dfe3cb5fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f714c670da8667c7d3156a14d777d50dfe3cb5fa/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4415f7a53887ebd1d79b5614d30a1a329671a4ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4415f7a53887ebd1d79b5614d30a1a329671a4ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4415f7a53887ebd1d79b5614d30a1a329671a4ae"}], "stats": {"total": 97, "additions": 76, "deletions": 21}, "files": [{"sha": "a62af4303642bcce314a6722b8147983b5d42989", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -1,3 +1,40 @@\n+2014-10-16  Jakub Jelinek  <jakub@redhat.com>\n+\t    Marek Polacek  <polacek@redhat.com>\n+\n+\t* gcc.dg/20020122-2.c: Use dg-additional-options.  Fix implicit\n+\tdeclarations.\n+\t* gcc.dg/pr32176.c: Likewise.\n+\t* gcc.dg/builtin-apply4.c: Use dg-additional-options.\n+\t* gcc.dg/ia64-sync-1.c: Fix implicit declarations.\n+\t* gcc.dg/ia64-sync-2.c: Likewise.\n+\t* gcc.dg/ia64-sync-3.c: Likewise.\n+\t* gcc.dg/sync-2.c: Likewise.\n+\t* gcc.dg/sync-3.c: Likewise.\n+\t* gcc.target/i386/990524-1.c: Likewise.\n+\t* gcc.target/i386/avx512f-pr57233.c: Likewise.\n+\t* gcc.target/i386/avx512f-typecast-1.c: Likewise.\n+\t* gcc.target/i386/pr26826.c: Likewise.\n+\t* gcc.target/i386/pr37184.c: Likewise.\n+\t* gcc.target/i386/20060125-1.c: Fix defaulting to int.\n+\t* gcc.target/i386/20060125-2.c: Likewise.\n+\t* gcc.target/i386/memcpy-1.c: Likewise.\n+\t* gcc.target/i386/pr40934.c: Likewise.\n+\t* gcc.target/i386/sse-5.c: Likewise.\n+\t* gcc.target/i386/stackalign/asm-1.c: Likewise.\n+\t* gcc.target/i386/vectorize4.c: Likewise.\n+\t* gcc.target/i386/980312-1.c: Fix defaulting to int.  Use\n+\t-fgnu89-inline.\n+\t* gcc.target/i386/980313-1.c: Likewise.\n+\t* gcc.target/i386/builtin-apply-mmx.c: Use -fgnu89-inline.\n+\t* gcc.target/i386/crc32-2.c: Use -std=gnu89.\n+\t* gcc.target/i386/crc32-3.c: Likewise.\n+\t* gcc.target/i386/intrinsics_3.c: Likewise.\n+\t* gcc.target/i386/loop-1.c: Likewise.\n+\t* gcc.target/i386/pr44948-2a.c: Likewise.\n+\t* gcc.target/i386/pr47564.c: Likewise.\n+\t* gcc.target/i386/pr50712.c: Likewise.\n+\t* gcc.target/i386/stackalign/return-2.c: Likewise.\n+\n 2014-10-15  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR lto/62026"}, {"sha": "684ea5cff785ada75d9a5049e54641a187e02c0e", "filename": "gcc/testsuite/gcc.dg/20020122-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.dg%2F20020122-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.dg%2F20020122-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020122-2.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -3,9 +3,10 @@\n   \n /* { dg-do compile } */\n /* { dg-options \"-O2 -fprefetch-loop-arrays -w\" } */\n-/* { dg-options \"-O2 -fprefetch-loop-arrays -march=athlon\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n+/* { dg-additional-options \"-march=athlon\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n extern int access( char* );\n+extern int strcmp(const char *s1, const char *s2);\n extern int a();\n char* foocp();\n "}, {"sha": "b548df35d157e1d2bc61f1b27e42f6ea4d13301f", "filename": "gcc/testsuite/gcc.dg/builtin-apply4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-apply4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-apply4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-apply4.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -1,6 +1,6 @@\n /* PR tree-optimization/20076 */\n /* { dg-options \"-O2 -Wmissing-noreturn -fgnu89-inline\" } */\n-/* { dg-options \"-O2 -mno-mmx\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n+/* { dg-additional-options \"-mno-mmx\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-do run } */\n \n extern void abort (void);"}, {"sha": "ce83a84073001a5a187632cbd695801ca9e2bb24", "filename": "gcc/testsuite/gcc.dg/ia64-sync-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-1.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -13,6 +13,7 @@ __extension__ typedef __SIZE_TYPE__ size_t;\n \n extern void abort (void);\n extern void *memcpy (void *, const void *, size_t);\n+extern int memcmp (const void *, const void *, size_t);\n \n static int AI[12];\n static int init_noret_si[12] = { 0, 0, 0, 1, 0, 0, 0 , 0  , -1, 0, 0, -1 };"}, {"sha": "3dc10359a7ff18a374fa64148f58bf7dbb00b6f0", "filename": "gcc/testsuite/gcc.dg/ia64-sync-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-2.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -13,6 +13,7 @@ __extension__ typedef __SIZE_TYPE__ size_t;\n \n extern void abort (void);\n extern void *memcpy (void *, const void *, size_t);\n+extern int memcmp (const void *, const void *, size_t);\n \n static int AI[18];\n static int init_si[18] = { 0,0,0,1,0,0, 0,0  ,-1,0,0,-1,0,0  ,-1,0,0,-1 };"}, {"sha": "ad2716943abfdc76bfd49f7f6e72eeb507a7e9e0", "filename": "gcc/testsuite/gcc.dg/ia64-sync-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-3.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -10,6 +10,7 @@ __extension__ typedef __SIZE_TYPE__ size_t;\n \n extern void abort (void);\n extern void *memcpy (void *, const void *, size_t);\n+extern int memcmp (const void *, const void *, size_t);\n \n static int AI[4];\n static int init_si[4] = { -30,-30,-50,-50 };"}, {"sha": "e619f2f18247d3f0c05c41c7016736107abb5510", "filename": "gcc/testsuite/gcc.dg/pr32176.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.dg%2Fpr32176.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.dg%2Fpr32176.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr32176.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -2,7 +2,9 @@\n \n /* { dg-do compile } */\n /* { dg-options \"-O2 -fprefetch-loop-arrays -w\" } */\n-/* { dg-options \"-O2 -fprefetch-loop-arrays -march=i686 -msse\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n+/* { dg-additional-options \"-march=i686 -msse\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n+\n+extern void _gfortran_abort ();\n \n void foo (void)\n {"}, {"sha": "28c1d43375488ba1ba465e956cfcefe7bafbfe8c", "filename": "gcc/testsuite/gcc.dg/sync-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.dg%2Fsync-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.dg%2Fsync-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsync-2.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -11,6 +11,7 @@\n \n extern void abort (void);\n extern void *memcpy (void *, const void *, __SIZE_TYPE__);\n+extern int memcmp (const void *, const void *, __SIZE_TYPE__);\n \n static char AI[18];\n static char init_qi[18] = { 3,5,7,9,0,0,0 ,0  ,-1,0,0,-1,0,0  ,-1,0,0,-1 };"}, {"sha": "29602873fb5a50450ed812261d02b995c967d041", "filename": "gcc/testsuite/gcc.dg/sync-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.dg%2Fsync-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.dg%2Fsync-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsync-3.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -8,6 +8,7 @@\n \n extern void abort (void);\n extern void *memcpy (void *, const void *, __SIZE_TYPE__);\n+extern int memcmp (const void *, const void *, __SIZE_TYPE__);\n \n static char AI[18] __attribute__((__aligned__ (4)));\n static char init_qi[18] = { 3,5,7,9,0,0,0 ,0  ,-1,0,0,-1,0,0  ,-1,0,0,-1 };"}, {"sha": "73bb970a199664ab63209d83052343dc3b606674", "filename": "gcc/testsuite/gcc.target/i386/20060125-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060125-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060125-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060125-1.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -12,7 +12,7 @@ struct a\n };\n \n __attribute__ ((noinline))\n-__attribute__ ((regparm(1))) t(struct a a)\n+__attribute__ ((regparm(1))) void t(struct a a)\n {\n         if (a.a!=1 || a.b!=1 || a.c!=1)\n                         abort();"}, {"sha": "1205243faa6c858c858766be51f623cdf5b1f745", "filename": "gcc/testsuite/gcc.target/i386/20060125-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060125-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060125-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060125-2.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -12,7 +12,7 @@ struct a\n };\n \n __attribute__ ((noinline))\n-__attribute__ ((regparm(1))) t(struct a a)\n+__attribute__ ((regparm(1))) void t(struct a a)\n {\n         if (a.a!=1 || a.b!=1 || a.c!=1)\n                         abort();"}, {"sha": "90bb929b5030cdd929293e32b33bd9262b2eb3a5", "filename": "gcc/testsuite/gcc.target/i386/980312-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F980312-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F980312-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F980312-1.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do link } */\n /* { dg-require-effective-target ia32 } */\n-/* { dg-options \"-O2 -march=pentiumpro\" } */\n+/* { dg-options \"-O2 -march=pentiumpro -fgnu89-inline\" } */\n \n extern __inline  double\n __expm1 (double __x)\n@@ -19,6 +19,7 @@ tanh (double __x)\n {\n   return  __expm1 (__x) * __sgn1 (-__x);\n }\n+int\n main ()\n {\n   return tanh (3.45) != 0;"}, {"sha": "66920fc5decdb476d45623c64e87ab6fae3e2397", "filename": "gcc/testsuite/gcc.target/i386/980313-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F980313-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F980313-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F980313-1.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do link } */\n /* { dg-require-effective-target ia32 } */\n-/* { dg-options \"-O2 -march=pentiumpro\" } */\n+/* { dg-options \"-O2 -march=pentiumpro -fgnu89-inline\" } */\n \n extern __inline  double\n __expm1 (double __x)\n@@ -20,6 +20,7 @@ tanh (double __x)\n   register double __exm1 = __expm1 (__x);\n   return __exm1 / (__exm1 + 2.0) * __sgn1 (-__x);\n }\n+int\n main ()\n {\n   return tanh (3.45) != 0;"}, {"sha": "e94114ad93e48883d7ce4ed5246da372d1424996", "filename": "gcc/testsuite/gcc.target/i386/990524-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F990524-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F990524-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F990524-1.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -6,6 +6,7 @@ typedef struct t_anim_info {\n    char        *new_filename;\n    long         first_frame_nr; \n } t_anim_info;\n+void gimp_image_delete(int);\n static int\n p_frames_to_multilayer(t_anim_info *ainfo_ptr,\n                       long range_from, long range_to)"}, {"sha": "6c648ade86e4643176a218f7536f903b5bc077c3", "filename": "gcc/testsuite/gcc.target/i386/avx512f-pr57233.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr57233.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr57233.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr57233.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -4,6 +4,8 @@\n \n #include \"avx512f-check.h\"\n \n+int do_main (void);\n+\n static void\n avx512f_test (void)\n {"}, {"sha": "e69e9c0b2b7ef59529aac541453bb44312a80428", "filename": "gcc/testsuite/gcc.target/i386/avx512f-typecast-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-typecast-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-typecast-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-typecast-1.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -4,6 +4,7 @@\n \n #include \"avx512f-check.h\"\n \n+extern int memcmp (const void *, const void *, __SIZE_TYPE__);\n \n void\n avx512f_test (void)"}, {"sha": "5a2f78deb98061ffb61f225b282bd3c34b2cd15c", "filename": "gcc/testsuite/gcc.target/i386/builtin-apply-mmx.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin-apply-mmx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin-apply-mmx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin-apply-mmx.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -10,7 +10,7 @@\n /* This test case is adapted from gcc.dg/builtin-apply4.c.  */\n  \n /* { dg-do run { xfail { ! *-*-darwin* } } } */\n-/* { dg-options \"-O2 -mmmx\" } */\n+/* { dg-options \"-O2 -mmmx -fgnu89-inline\" } */\n /* { dg-require-effective-target ia32 } */\n \n #include \"mmx-check.h\""}, {"sha": "0701723bb2d4b3400f32717b062963ba5fcdeb94", "filename": "gcc/testsuite/gcc.target/i386/crc32-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcrc32-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcrc32-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcrc32-2.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mcrc32\" } */\n+/* { dg-options \"-O2 -mcrc32 -std=gnu89\" } */\n /* { dg-final { scan-assembler \"crc32q\\[^\\\\n\\]*rax\" { target { ! { ia32 } } } } } */\n \n unsigned long long"}, {"sha": "ac53b6579a0f54eb5fcdefd4e93ceebb5e8ae009", "filename": "gcc/testsuite/gcc.target/i386/crc32-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcrc32-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcrc32-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcrc32-3.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target ia32 } */\n-/* { dg-options \"-O2 -mcrc32\" } */\n+/* { dg-options \"-O2 -mcrc32 -std=gnu89\" } */\n /* { dg-final { scan-assembler \"__builtin_ia32_crc32di\" } } */\n \n unsigned long long"}, {"sha": "1280992580603db09f8d6da6f77299c473f03de7", "filename": "gcc/testsuite/gcc.target/i386/intrinsics_3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fintrinsics_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fintrinsics_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fintrinsics_3.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -4,7 +4,7 @@\n    popcntintrin.h  */\n \n /* { dg-do compile } */\n-/* { dg-options \"-O2 -msse -mno-sse4.1 -mno-sse4.2 -mno-popcnt\" } */\n+/* { dg-options \"-O2 -msse -mno-sse4.1 -mno-sse4.2 -mno-popcnt -std=gnu89\" } */\n \n #include <popcntintrin.h>\n "}, {"sha": "e1a162f303096020e8c912cac029caa66be3490c", "filename": "gcc/testsuite/gcc.target/i386/loop-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Floop-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Floop-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Floop-1.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -1,7 +1,7 @@\n /* PR optimization/9888 */\n /* { dg-do run } */\n /* { dg-require-effective-target ia32 } */\n-/* { dg-options \"-mtune=k6 -O3\" } */\n+/* { dg-options \"-mtune=k6 -O3 -std=gnu89\" } */\n \n /* Verify that GCC doesn't emit out of range 'loop' instructions.  */\n "}, {"sha": "2a7595e81d31217466f8191739a2874c0878e86d", "filename": "gcc/testsuite/gcc.target/i386/memcpy-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-1.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -11,7 +11,7 @@\n \n char a[2048];\n char b[2048];\n-t()\n+void t(void)\n {\n   __builtin_memcpy (a,b,2048);\n }"}, {"sha": "15ab7b83c5d877bf3522ba8c32695f65b48367fb", "filename": "gcc/testsuite/gcc.target/i386/pr26826.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr26826.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr26826.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr26826.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -2,6 +2,8 @@\n /* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O -fomit-frame-pointer -march=i586\" } */\n \n+int bar (int);\n+\n void foo(char* p, char c, int i)\n {\n     char a[2], *q=a+1;"}, {"sha": "48ebab56483e6e1738c6803241e3ea1e662c2171", "filename": "gcc/testsuite/gcc.target/i386/pr37184.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr37184.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr37184.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr37184.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -2,6 +2,8 @@\n /* { dg-require-effective-target ilp32 } */\n /* { dg-options \"-O1\" } */\n \n+extern int mod_rhs (int);\n+\n static inline unsigned int\n rshift_u_s (unsigned int left, int right)\n {"}, {"sha": "882c64571478051e65156041f372045a25661eee", "filename": "gcc/testsuite/gcc.target/i386/pr40934.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr40934.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr40934.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr40934.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -4,7 +4,7 @@\n \n extern double host_frametime;\n extern float pitchvel;\n-V_DriftPitch (float delta, float move)\n+void V_DriftPitch (float delta, float move)\n {\n   if (!delta)\n     move = host_frametime;"}, {"sha": "8d48b96303e3ea870405fef90f269dfae7047366", "filename": "gcc/testsuite/gcc.target/i386/pr44948-2a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44948-2a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44948-2a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44948-2a.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -1,6 +1,6 @@\n /* PR target/44948 */\n /* { dg-do run } */\n-/* { dg-options \"-O -Wno-psabi -mno-sse -mtune=generic\" } */\n+/* { dg-options \"-O -Wno-psabi -mno-sse -mtune=generic -std=gnu89\" } */\n /* { dg-require-effective-target ia32 } */\n /* { dg-require-effective-target sse2_runtime } */\n /* { dg-additional-sources pr44948-2b.c } */"}, {"sha": "dc09bbec440f6917ef00e365ec7f324d9b542ce7", "filename": "gcc/testsuite/gcc.target/i386/pr47564.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr47564.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr47564.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr47564.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -1,6 +1,6 @@\n /* PR target/47564 */\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -msse2\" } */\n+/* { dg-options \"-O2 -msse2 -std=gnu89\" } */\n \n static inline unsigned long long\n foo (const unsigned char *p)"}, {"sha": "26c00e1ef2ed86ce2db9a43b16fa9f935e31fe60", "filename": "gcc/testsuite/gcc.target/i386/pr50712.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr50712.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr50712.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr50712.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target ia32 } */\n-/* { dg-options \"-O2\" } */\n+/* { dg-options \"-O2 -std=gnu89\" } */\n \n typedef __builtin_va_list __va_list;\n typedef __va_list __gnuc_va_list;"}, {"sha": "33118b7558ac8b03642836a0ac2895539ebf2fda", "filename": "gcc/testsuite/gcc.target/i386/sse-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-5.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -5,7 +5,7 @@\n \n typedef double v2df __attribute__ ((vector_size (16)));\n v2df p;\n-q(v2df t) /* { dg-warning \"SSE\" \"\" } */\n+void q(v2df t) /* { dg-warning \"SSE\" \"\" } */\n {\n \tp=t;\n }"}, {"sha": "126a2b8a01d892b5bd19db902a48d25381477f7b", "filename": "gcc/testsuite/gcc.target/i386/stackalign/asm-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fstackalign%2Fasm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fstackalign%2Fasm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fstackalign%2Fasm-1.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -4,4 +4,4 @@\n \n /* This case is to detect a compile time regression introduced in stack\n    branch development. */\n-f(){asm(\"%0\"::\"r\"(1.5F));}g(){asm(\"%0\"::\"r\"(1.5));}\n+void f(){asm(\"%0\"::\"r\"(1.5F));}void g(){asm(\"%0\"::\"r\"(1.5));}"}, {"sha": "51aaacaeefd3f021dd69cbedd1efb77f048137c2", "filename": "gcc/testsuite/gcc.target/i386/stackalign/return-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fstackalign%2Freturn-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fstackalign%2Freturn-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fstackalign%2Freturn-2.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target ia32 } */\n-/* { dg-options \"-mpreferred-stack-boundary=2\" } */\n+/* { dg-options \"-mpreferred-stack-boundary=2 -std=gnu89\" } */\n \n /* This compile only test is to detect an assertion failure in stack branch\n    development.  */"}, {"sha": "8f1df5241ab6e6de90a0275e1b5aae00f12e31f7", "filename": "gcc/testsuite/gcc.target/i386/vectorize4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvectorize4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f714c670da8667c7d3156a14d777d50dfe3cb5fa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvectorize4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvectorize4.c?ref=f714c670da8667c7d3156a14d777d50dfe3cb5fa", "patch": "@@ -5,7 +5,7 @@\n \n \n extern double sqrt (double __x);\n-calc_freq (int *dest)\n+void calc_freq (int *dest)\n {\n   float tmp_out[257];\n   int i;"}]}