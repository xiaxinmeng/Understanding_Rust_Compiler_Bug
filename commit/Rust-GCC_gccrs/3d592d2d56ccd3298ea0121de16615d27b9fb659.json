{"sha": "3d592d2d56ccd3298ea0121de16615d27b9fb659", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q1OTJkMmQ1NmNjZDMyOThlYTAxMjFkZTE2NjE1ZDI3YjlmYjY1OQ==", "commit": {"author": {"name": "Qing Zhao", "email": "qing.zhao@oracle.com", "date": "2018-07-27T01:56:57Z"}, "committer": {"name": "Qing Zhao", "email": "qinzhao@gcc.gnu.org", "date": "2018-07-27T01:56:57Z"}, "message": "Disable strcmp/strncmp/memcmp inlining when optimization \nlevel is lower than 2 or Os\n\nFrom-SVN: r263028", "tree": {"sha": "7569ec1c9cef4945253f54093bf81810b0498774", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7569ec1c9cef4945253f54093bf81810b0498774"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d592d2d56ccd3298ea0121de16615d27b9fb659", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d592d2d56ccd3298ea0121de16615d27b9fb659", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d592d2d56ccd3298ea0121de16615d27b9fb659", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d592d2d56ccd3298ea0121de16615d27b9fb659/comments", "author": {"login": "qingzhao69", "id": 89154636, "node_id": "MDQ6VXNlcjg5MTU0NjM2", "avatar_url": "https://avatars.githubusercontent.com/u/89154636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qingzhao69", "html_url": "https://github.com/qingzhao69", "followers_url": "https://api.github.com/users/qingzhao69/followers", "following_url": "https://api.github.com/users/qingzhao69/following{/other_user}", "gists_url": "https://api.github.com/users/qingzhao69/gists{/gist_id}", "starred_url": "https://api.github.com/users/qingzhao69/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qingzhao69/subscriptions", "organizations_url": "https://api.github.com/users/qingzhao69/orgs", "repos_url": "https://api.github.com/users/qingzhao69/repos", "events_url": "https://api.github.com/users/qingzhao69/events{/privacy}", "received_events_url": "https://api.github.com/users/qingzhao69/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "543f1a04223f839421cc170f60d8c178e2d4f1ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/543f1a04223f839421cc170f60d8c178e2d4f1ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/543f1a04223f839421cc170f60d8c178e2d4f1ad"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "c2bf139a6597c56b37949178fadd0bfae997dbcb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d592d2d56ccd3298ea0121de16615d27b9fb659/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d592d2d56ccd3298ea0121de16615d27b9fb659/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d592d2d56ccd3298ea0121de16615d27b9fb659", "patch": "@@ -1,3 +1,8 @@\n+2018-07-26  Qing Zhao  <qing.zhao@oracle.com>\n+\n+\t* builtins.c (inline_expand_builtin_string_cmp): Disable inlining\n+\twhen optimization level is lower than 2 or optimize for size.\n+\n 2018-07-26  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/86043"}, {"sha": "c6596113801b23b682d16dc1e26b404de793eb50", "filename": "gcc/builtins.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d592d2d56ccd3298ea0121de16615d27b9fb659/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d592d2d56ccd3298ea0121de16615d27b9fb659/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=3d592d2d56ccd3298ea0121de16615d27b9fb659", "patch": "@@ -6854,6 +6854,11 @@ inline_expand_builtin_string_cmp (tree exp, rtx target)\n   unsigned HOST_WIDE_INT length = 0;\n   bool is_ncmp = (fcode == BUILT_IN_STRNCMP || fcode == BUILT_IN_MEMCMP);\n \n+  /* Do NOT apply this inlining expansion when optimizing for size or \n+     optimization level below 2.  */\n+  if (optimize < 2 || optimize_insn_for_size_p ())\n+    return NULL_RTX;\n+\n   gcc_checking_assert (fcode == BUILT_IN_STRCMP\n \t\t       || fcode == BUILT_IN_STRNCMP\n \t\t       || fcode == BUILT_IN_MEMCMP);"}, {"sha": "f48c3d3454d3631e491f8894e7132ecbb7d76acd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d592d2d56ccd3298ea0121de16615d27b9fb659/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d592d2d56ccd3298ea0121de16615d27b9fb659/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3d592d2d56ccd3298ea0121de16615d27b9fb659", "patch": "@@ -1,3 +1,8 @@\n+2018-07-26  Qing Zhao  <qing.zhao@oracle.com>\n+\n+\t* gcc.dg/strcmpopt_5.c: Change to O2 to enable the transformation.\n+\t* gcc.dg/strcmpopt_6.c: Likewise.\n+\n 2018-07-26  Pat Haugen  <pthaugen@us.ibm.com>\n \n \tPR target/86612"}, {"sha": "d368277bfbbd522a513e78529917d2f51902e75f", "filename": "gcc/testsuite/gcc.dg/strcmpopt_5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d592d2d56ccd3298ea0121de16615d27b9fb659/gcc%2Ftestsuite%2Fgcc.dg%2Fstrcmpopt_5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d592d2d56ccd3298ea0121de16615d27b9fb659/gcc%2Ftestsuite%2Fgcc.dg%2Fstrcmpopt_5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstrcmpopt_5.c?ref=3d592d2d56ccd3298ea0121de16615d27b9fb659", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-O -fdump-rtl-expand\" } */\n+/* { dg-options \"-O2 -fdump-rtl-expand\" } */\n \n typedef struct { char s[8]; int x; } S;\n __attribute__ ((noinline)) int"}, {"sha": "964b9e4839fa16274f831a8a0ee112a19a602f0e", "filename": "gcc/testsuite/gcc.dg/strcmpopt_6.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d592d2d56ccd3298ea0121de16615d27b9fb659/gcc%2Ftestsuite%2Fgcc.dg%2Fstrcmpopt_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d592d2d56ccd3298ea0121de16615d27b9fb659/gcc%2Ftestsuite%2Fgcc.dg%2Fstrcmpopt_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstrcmpopt_6.c?ref=3d592d2d56ccd3298ea0121de16615d27b9fb659", "patch": "@@ -1,7 +1,7 @@\n /* When the specified length exceeds one of the arguments of the call to memcmp, \n    the call to memcmp should NOT be inlined.  */\n /* { dg-do run } */\n-/* { dg-options \"-O -fdump-rtl-expand -Wno-stringop-overflow\" } */\n+/* { dg-options \"-O2 -fdump-rtl-expand -Wno-stringop-overflow\" } */\n \n typedef struct { char s[8]; int x; } S;\n \n@@ -33,4 +33,4 @@ int main (void)\n \n }\n \n-/* { dg-final { scan-rtl-dump-times \"__builtin_memcmp\" 4 \"expand\" } } */\n+/* { dg-final { scan-rtl-dump-times \"__builtin_memcmp\" 6 \"expand\" } } */"}]}