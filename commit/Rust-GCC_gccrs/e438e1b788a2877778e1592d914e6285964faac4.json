{"sha": "e438e1b788a2877778e1592d914e6285964faac4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQzOGUxYjc4OGEyODc3Nzc4ZTE1OTJkOTE0ZTYyODU5NjRmYWFjNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jj@ultra.linux.cz", "date": "1999-08-02T23:14:31Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-08-02T23:14:31Z"}, "message": "Jakub Jelinek  <jj@ultra.linux.cz>\n\n        * java/decl.c (start_java_method): Change all uses of\n        PROMOTE_PROTOTYPES, so that it tests it as a C expression.\n        Ensure expr.h is included.\n        * java/expr.c (pop_arguments): Ditto.\n        * java/parse.y (expand_start_java_method): Ditto.\n\nFrom-SVN: r28419", "tree": {"sha": "bca98a17bca1b69626b97df72e98febaabcc9aff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bca98a17bca1b69626b97df72e98febaabcc9aff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e438e1b788a2877778e1592d914e6285964faac4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e438e1b788a2877778e1592d914e6285964faac4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e438e1b788a2877778e1592d914e6285964faac4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e438e1b788a2877778e1592d914e6285964faac4/comments", "author": null, "committer": null, "parents": [{"sha": "fa56377de3213de3b1f2cc263cfda2843a610685", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa56377de3213de3b1f2cc263cfda2843a610685", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa56377de3213de3b1f2cc263cfda2843a610685"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "77fcd63dafe77c9e8335d41403b8de58457e0d7b", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e438e1b788a2877778e1592d914e6285964faac4/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e438e1b788a2877778e1592d914e6285964faac4/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=e438e1b788a2877778e1592d914e6285964faac4", "patch": "@@ -1,3 +1,11 @@\n+1999-08-02  Jakub Jelinek  <jj@ultra.linux.cz>\n+\n+\t* java/decl.c (start_java_method): Change all uses of\n+\tPROMOTE_PROTOTYPES, so that it tests it as a C expression.\n+\tEnsure expr.h is included.\n+\t* java/expr.c (pop_arguments): Ditto.\n+\t* java/parse.y (expand_start_java_method): Ditto.\n+\n 1999-08-01  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Makefile.in (ALL_CFLAGS): Add '-W -Wall'."}, {"sha": "71e84d0a819c3c756ad1cef8eecbcac0ba9fb482", "filename": "gcc/java/decl.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e438e1b788a2877778e1592d914e6285964faac4/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e438e1b788a2877778e1592d914e6285964faac4/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=e438e1b788a2877778e1592d914e6285964faac4", "patch": "@@ -34,6 +34,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"toplev.h\"\n #include \"function.h\"\n #include \"except.h\"\n+#include \"expr.h\"\n \n static tree push_jvm_slot PROTO ((int, tree));\n static tree builtin_function PROTO ((const char *, tree,\n@@ -1637,11 +1638,10 @@ start_java_method (fndecl)\n \n       parm_decl = build_decl (PARM_DECL, parm_name, parm_type);\n       DECL_CONTEXT (parm_decl) = fndecl;\n-#ifdef PROMOTE_PROTOTYPES\n-      if (TYPE_PRECISION (parm_type) < TYPE_PRECISION (integer_type_node)\n+      if (PROMOTE_PROTOTYPES\n+\t  && TYPE_PRECISION (parm_type) < TYPE_PRECISION (integer_type_node)\n \t  && INTEGRAL_TYPE_P (parm_type))\n \tparm_type = integer_type_node;\n-#endif\n       DECL_ARG_TYPE (parm_decl) = parm_type;\n \n       *ptr = parm_decl;"}, {"sha": "38fa5d46fbaeb133cbd5c4a2bb4f6fb1551ac4dd", "filename": "gcc/java/expr.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e438e1b788a2877778e1592d914e6285964faac4/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e438e1b788a2877778e1592d914e6285964faac4/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=e438e1b788a2877778e1592d914e6285964faac4", "patch": "@@ -1448,11 +1448,10 @@ pop_arguments (arg_types)\n       tree tail = pop_arguments (TREE_CHAIN (arg_types));\n       tree type = TREE_VALUE (arg_types);\n       tree arg = pop_value (type);\n-#ifdef PROMOTE_PROTOTYPES\n-      if (TYPE_PRECISION (type) < TYPE_PRECISION (integer_type_node)\n+      if (PROMOTE_PROTOTYPES\n+\t  && TYPE_PRECISION (type) < TYPE_PRECISION (integer_type_node)\n \t  && INTEGRAL_TYPE_P (type))\n \targ = convert (integer_type_node, arg);\n-#endif\n       return tree_cons (NULL_TREE, arg, tail);\n     }\n   abort ();"}, {"sha": "b8620547d7d55bebf8b6b3590a23ea2dbb839792", "filename": "gcc/java/parse.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e438e1b788a2877778e1592d914e6285964faac4/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e438e1b788a2877778e1592d914e6285964faac4/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=e438e1b788a2877778e1592d914e6285964faac4", "patch": "@@ -140,6 +140,7 @@\n #include \"xref.h\"\n #include \"function.h\"\n #include \"except.h\"\n+#include \"expr.h\"\n \n #ifndef DIR_SEPARATOR\n #define DIR_SEPARATOR '/'\n@@ -8178,7 +8179,8 @@ expand_start_java_method (fndecl)\n       tree next = TREE_CHAIN (tem);\n       tree type = TREE_TYPE (tem);\n #ifdef PROMOTE_PROTOTYPES\n-      if (TYPE_PRECISION (type) < TYPE_PRECISION (integer_type_node)\n+      if (PROMOTE_PROTOTYPES\n+\t  && TYPE_PRECISION (type) < TYPE_PRECISION (integer_type_node)\n \t  && INTEGRAL_TYPE_P (type))\n \ttype = integer_type_node;\n #endif"}, {"sha": "e9caf8d0c63f55261ad1cb071fbe5e339e683717", "filename": "gcc/java/parse.y", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e438e1b788a2877778e1592d914e6285964faac4/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e438e1b788a2877778e1592d914e6285964faac4/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=e438e1b788a2877778e1592d914e6285964faac4", "patch": "@@ -64,6 +64,7 @@ definitions and other extensions.  */\n #include \"xref.h\"\n #include \"function.h\"\n #include \"except.h\"\n+#include \"expr.h\"\n \n #ifndef DIR_SEPARATOR\n #define DIR_SEPARATOR '/'\n@@ -5593,7 +5594,8 @@ expand_start_java_method (fndecl)\n       tree next = TREE_CHAIN (tem);\n       tree type = TREE_TYPE (tem);\n #ifdef PROMOTE_PROTOTYPES\n-      if (TYPE_PRECISION (type) < TYPE_PRECISION (integer_type_node)\n+      if (PROMOTE_PROTOTYPES\n+\t  && TYPE_PRECISION (type) < TYPE_PRECISION (integer_type_node)\n \t  && INTEGRAL_TYPE_P (type))\n \ttype = integer_type_node;\n #endif"}]}