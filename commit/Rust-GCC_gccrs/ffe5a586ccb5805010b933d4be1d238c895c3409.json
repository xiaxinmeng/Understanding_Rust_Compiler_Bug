{"sha": "ffe5a586ccb5805010b933d4be1d238c895c3409", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZlNWE1ODZjY2I1ODA1MDEwYjkzM2Q0YmUxZDIzOGM4OTVjMzQwOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-11-06T08:09:03Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-11-06T08:09:03Z"}, "message": "re PR middle-end/18041 (OR of two single-bit bitfields is inefficient)\n\n2018-11-06  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/18041\n\t* simplify-rtx.c (simplify_binary_operation_1): Add pattern\n\tmatching bitfield insertion.\n\n\t* gcc.target/i386/pr18041-1.c: New testcase.\n\t* gcc.target/i386/pr18041-2.c: Likewise.\n\nFrom-SVN: r265829", "tree": {"sha": "c7361fff915eabf1e47c6c247112fc676ed665ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7361fff915eabf1e47c6c247112fc676ed665ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffe5a586ccb5805010b933d4be1d238c895c3409", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffe5a586ccb5805010b933d4be1d238c895c3409", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffe5a586ccb5805010b933d4be1d238c895c3409", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffe5a586ccb5805010b933d4be1d238c895c3409/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "91c03124fcd1e652e225e16dde954efbb994543c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91c03124fcd1e652e225e16dde954efbb994543c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91c03124fcd1e652e225e16dde954efbb994543c"}], "stats": {"total": 71, "additions": 71, "deletions": 0}, "files": [{"sha": "b4b36e0b5704e6a3e20ac0ba1c70ee9aeeb5e724", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffe5a586ccb5805010b933d4be1d238c895c3409/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffe5a586ccb5805010b933d4be1d238c895c3409/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ffe5a586ccb5805010b933d4be1d238c895c3409", "patch": "@@ -1,3 +1,9 @@\n+2018-11-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/18041\n+\t* simplify-rtx.c (simplify_binary_operation_1): Add pattern\n+\tmatching bitfield insertion.\n+\n 2018-11-06  Alexandre Oliva <aoliva@redhat.com>\n \n \t* auto-inc-dec.c: Include valtrack.h.  Improve comments."}, {"sha": "0d53135f1ff8009323b93d67ed54571059a8d756", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffe5a586ccb5805010b933d4be1d238c895c3409/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffe5a586ccb5805010b933d4be1d238c895c3409/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=ffe5a586ccb5805010b933d4be1d238c895c3409", "patch": "@@ -2857,6 +2857,38 @@ simplify_binary_operation_1 (enum rtx_code code, machine_mode mode,\n \t\t\t\t\tXEXP (op0, 1));\n         }\n \n+      /* The following happens with bitfield merging.\n+         (X & C) | ((X | Y) & ~C) -> X | (Y & ~C) */\n+      if (GET_CODE (op0) == AND\n+\t  && GET_CODE (op1) == AND\n+\t  && CONST_INT_P (XEXP (op0, 1))\n+\t  && CONST_INT_P (XEXP (op1, 1))\n+\t  && (INTVAL (XEXP (op0, 1))\n+\t      == ~INTVAL (XEXP (op1, 1))))\n+\t{\n+\t  /* The IOR may be on both sides.  */\n+\t  rtx top0 = NULL_RTX, top1 = NULL_RTX;\n+\t  if (GET_CODE (XEXP (op1, 0)) == IOR)\n+\t    top0 = op0, top1 = op1;\n+\t  else if (GET_CODE (XEXP (op0, 0)) == IOR)\n+\t    top0 = op1, top1 = op0;\n+\t  if (top0 && top1)\n+\t    {\n+\t      /* X may be on either side of the inner IOR.  */\n+\t      rtx tem = NULL_RTX;\n+\t      if (rtx_equal_p (XEXP (top0, 0),\n+\t\t\t       XEXP (XEXP (top1, 0), 0)))\n+\t\ttem = XEXP (XEXP (top1, 0), 1);\n+\t      else if (rtx_equal_p (XEXP (top0, 0),\n+\t\t\t\t    XEXP (XEXP (top1, 0), 1)))\n+\t\ttem = XEXP (XEXP (top1, 0), 0);\n+\t      if (tem)\n+\t\treturn simplify_gen_binary (IOR, mode, XEXP (top0, 0),\n+\t\t\t\t\t    simplify_gen_binary\n+\t\t\t\t\t      (AND, mode, tem, XEXP (top1, 1)));\n+\t    }\n+\t}\n+\n       tem = simplify_byte_swapping_operation (code, mode, op0, op1);\n       if (tem)\n \treturn tem;"}, {"sha": "0bfb80f468bfc04c2f8aac43c98a8f502b527124", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffe5a586ccb5805010b933d4be1d238c895c3409/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffe5a586ccb5805010b933d4be1d238c895c3409/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ffe5a586ccb5805010b933d4be1d238c895c3409", "patch": "@@ -1,3 +1,9 @@\n+2018-11-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/18041\n+\t* gcc.target/i386/pr18041-1.c: New testcase.\n+\t* gcc.target/i386/pr18041-2.c: Likewise.\n+\n 2018-11-06 Wei Xiao <wei3.xiao@intel.com>\n \n \t* gcc.target/i386/avx-1.c: Update tests for VFIXUPIMM* intrinsics."}, {"sha": "24da41a02ec993beb0a901a931f658048718383b", "filename": "gcc/testsuite/gcc.target/i386/pr18041-1.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffe5a586ccb5805010b933d4be1d238c895c3409/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr18041-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffe5a586ccb5805010b933d4be1d238c895c3409/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr18041-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr18041-1.c?ref=ffe5a586ccb5805010b933d4be1d238c895c3409", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+struct B { unsigned bit0 : 1; unsigned bit1 : 1; };\n+\n+void\n+foo (struct B *b)\n+{\n+    b->bit0 = b->bit0 | b->bit1;\n+}\n+\n+/* { dg-final { scan-assembler-times \"and\" 1 } } */\n+/* { dg-final { scan-assembler-times \"or\" 1 } } */"}, {"sha": "00ebd2ae36d5ff9f2c1a2125e3db5a3651354d16", "filename": "gcc/testsuite/gcc.target/i386/pr18041-2.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffe5a586ccb5805010b933d4be1d238c895c3409/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr18041-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffe5a586ccb5805010b933d4be1d238c895c3409/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr18041-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr18041-2.c?ref=ffe5a586ccb5805010b933d4be1d238c895c3409", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+struct B { unsigned bit0 : 1; unsigned bit1 : 1; };\n+\n+void\n+bar  (struct B *b, int x)\n+{\n+  b->bit0 |= x;\n+}\n+\n+/* This fails to combine in 32bit mode but not for x32.  */\n+/* { dg-final { scan-assembler-times \"and\" 1 { xfail { { ! x32 } && ilp32 } } } } */\n+/* { dg-final { scan-assembler-times \"or\" 1 { xfail { { ! x32 } && ilp32 } } } } */"}]}