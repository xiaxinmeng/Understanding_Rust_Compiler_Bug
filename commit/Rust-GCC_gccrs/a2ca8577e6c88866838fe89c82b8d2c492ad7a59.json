{"sha": "a2ca8577e6c88866838fe89c82b8d2c492ad7a59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJjYTg1NzdlNmM4ODg2NjgzOGZlODljODJiOGQyYzQ5MmFkN2E1OQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2012-10-06T23:06:04Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-10-06T23:06:04Z"}, "message": "re PR c++/52764 (Including <cstdint> after <stdint.h> fails to define limit macros)\n\n2012-10-06  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/52764\n\t* ginclude/stdint-wrap.h: In C++11 if __STDC_HOSTED__ define\n\t__STDC_LIMIT_MACROS and __STDC_CONSTANT_MACROS.\n\t* ginclude/stdint-gcc.h: In C++11 unconditionally define\n\tlimit and constant macros.\n\n/testsuite\n2012-10-06  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/52764\n\t* g++.dg/cpp0x/stdint.C: New.\n\n/libstdc++-v3\n2012-10-06  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/52764\n\t* include/c_global/cstdint: Remove __STDC_LIMIT_MACROS and\n\t__STDC_CONSTANT_MACROS related macros.\n\nFrom-SVN: r192174", "tree": {"sha": "244b72d26d12f547c33a38c2cb79580c6bb8ed17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/244b72d26d12f547c33a38c2cb79580c6bb8ed17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2ca8577e6c88866838fe89c82b8d2c492ad7a59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2ca8577e6c88866838fe89c82b8d2c492ad7a59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2ca8577e6c88866838fe89c82b8d2c492ad7a59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2ca8577e6c88866838fe89c82b8d2c492ad7a59/comments", "author": null, "committer": null, "parents": [{"sha": "21c278c93069690772a23f9c162eeac0030b10f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21c278c93069690772a23f9c162eeac0030b10f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21c278c93069690772a23f9c162eeac0030b10f7"}], "stats": {"total": 193, "additions": 170, "deletions": 23}, "files": [{"sha": "c80b5e0770001b6e9e09092d16701fad2590d81d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2ca8577e6c88866838fe89c82b8d2c492ad7a59/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2ca8577e6c88866838fe89c82b8d2c492ad7a59/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a2ca8577e6c88866838fe89c82b8d2c492ad7a59", "patch": "@@ -1,3 +1,11 @@\n+2012-10-06  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/52764\n+\t* ginclude/stdint-wrap.h: In C++11 if __STDC_HOSTED__ define\n+\t__STDC_LIMIT_MACROS and __STDC_CONSTANT_MACROS.\n+\t* ginclude/stdint-gcc.h: In C++11 unconditionally define\n+\tlimit and constant macros.\n+\n 2012-10-06  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/54249"}, {"sha": "64b389930c9e3c0ec94b5e0ed59bc0eaeb9f856d", "filename": "gcc/ginclude/stdint-gcc.h", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2ca8577e6c88866838fe89c82b8d2c492ad7a59/gcc%2Fginclude%2Fstdint-gcc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2ca8577e6c88866838fe89c82b8d2c492ad7a59/gcc%2Fginclude%2Fstdint-gcc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fstdint-gcc.h?ref=a2ca8577e6c88866838fe89c82b8d2c492ad7a59", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+/* Copyright (C) 2008-2012 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -91,7 +91,8 @@ typedef __UINTPTR_TYPE__ uintptr_t;\n typedef __INTMAX_TYPE__ intmax_t;\n typedef __UINTMAX_TYPE__ uintmax_t;\n \n-#if !defined __cplusplus || defined __STDC_LIMIT_MACROS\n+#if (!defined __cplusplus || __cplusplus >= 201103L \\\n+     || defined __STDC_LIMIT_MACROS)\n \n /* 7.18.2 Limits of specified-width integer types */\n \n@@ -229,9 +230,11 @@ typedef __UINTMAX_TYPE__ uintmax_t;\n #undef WINT_MIN\n #define WINT_MIN __WINT_MIN__\n \n-#endif /* !defined __cplusplus || defined __STDC_LIMIT_MACROS */\n+#endif /* (!defined __cplusplus || __cplusplus >= 201103L\n+\t   || defined __STDC_LIMIT_MACROS)  */\n \n-#if !defined __cplusplus || defined __STDC_CONSTANT_MACROS\n+#if (!defined __cplusplus || __cplusplus >= 201103L \\\n+     || defined __STDC_CONSTANT_MACROS)\n \n #undef INT8_C\n #define INT8_C(c) __INT8_C(c)\n@@ -254,6 +257,7 @@ typedef __UINTMAX_TYPE__ uintmax_t;\n #undef UINTMAX_C\n #define UINTMAX_C(c) __UINTMAX_C(c)\n \n-#endif /* !defined __cplusplus || defined __STDC_CONSTANT_MACROS */\n+#endif /* (!defined __cplusplus || __cplusplus >= 201103L\n+\t   || defined __STDC_CONSTANT_MACROS) */\n \n #endif /* _GCC_STDINT_H */"}, {"sha": "83b6f70c83795dca60b1a6355fbc643af81637d1", "filename": "gcc/ginclude/stdint-wrap.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2ca8577e6c88866838fe89c82b8d2c492ad7a59/gcc%2Fginclude%2Fstdint-wrap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2ca8577e6c88866838fe89c82b8d2c492ad7a59/gcc%2Fginclude%2Fstdint-wrap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fstdint-wrap.h?ref=a2ca8577e6c88866838fe89c82b8d2c492ad7a59", "patch": "@@ -1,5 +1,11 @@\n #ifndef _GCC_WRAP_STDINT_H\n #if __STDC_HOSTED__\n+# if defined __cplusplus && __cplusplus >= 201103L\n+#  undef __STDC_LIMIT_MACROS\n+#  define __STDC_LIMIT_MACROS\n+#  undef __STDC_CONSTANT_MACROS\n+#  define __STDC_CONSTANT_MACROS\n+# endif\n # include_next <stdint.h>\n #else\n # include \"stdint-gcc.h\""}, {"sha": "9114655313571517127a9a18e695c177b175d9d2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2ca8577e6c88866838fe89c82b8d2c492ad7a59/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2ca8577e6c88866838fe89c82b8d2c492ad7a59/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a2ca8577e6c88866838fe89c82b8d2c492ad7a59", "patch": "@@ -1,3 +1,8 @@\n+2012-10-06  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/52764\n+\t* g++.dg/cpp0x/stdint.C: New.\n+\n 2012-10-06  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/54249"}, {"sha": "434d4582415678a7e01976849e669d50e86cd3de", "filename": "gcc/testsuite/g++.dg/cpp0x/stdint.C", "status": "added", "additions": 135, "deletions": 0, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2ca8577e6c88866838fe89c82b8d2c492ad7a59/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fstdint.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2ca8577e6c88866838fe89c82b8d2c492ad7a59/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fstdint.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fstdint.C?ref=a2ca8577e6c88866838fe89c82b8d2c492ad7a59", "patch": "@@ -0,0 +1,135 @@\n+// PR c++/52764\n+// { dg-require-effective-target stdint_types }\n+// { dg-do compile { target c++11 } }\n+\n+#include <stdint.h>\n+\n+#ifdef __INT8_TYPE__\n+# if (!defined INT8_MAX \\\n+      || !defined INT8_MIN)\n+# error\n+# endif\n+#endif\n+#ifdef __UINT8_TYPE__\n+# if !defined UINT8_MAX\n+# error\n+# endif\n+#endif\n+#ifdef __INT16_TYPE__\n+# if (!defined INT16_MAX \\\n+      || !defined INT16_MIN)\n+# error\n+# endif\n+#endif\n+#ifdef __UINT16_TYPE__\n+# if !defined UINT16_MAX\n+# error\n+# endif\n+#endif\n+#ifdef __INT32_TYPE__\n+# if (!defined INT32_MAX \\\n+      || !defined INT32_MIN)\n+# error\n+# endif\n+#endif\n+#ifdef __UINT32_TYPE__\n+# if !defined UINT32_MAX\n+# error\n+# endif\n+#endif\n+#ifdef __INT64_TYPE__\n+# if (!defined INT64_MAX \\\n+      || !defined INT64_MIN)\n+# error\n+# endif\n+#endif\n+#ifdef __UINT64_TYPE__\n+# if !defined UINT64_MAX\n+# error\n+# endif\n+#endif\n+\n+#if (!defined INT_LEAST8_MAX \\\n+     || !defined INT_LEAST8_MIN\t\\\n+     || !defined UINT_LEAST8_MAX \\\n+     || !defined INT_LEAST16_MAX \\\n+     || !defined INT_LEAST16_MIN \\\n+     || !defined UINT_LEAST16_MAX \\\n+     || !defined INT_LEAST32_MAX \\\n+     || !defined INT_LEAST32_MIN \\\n+     || !defined UINT_LEAST32_MAX \\\n+     || !defined INT_LEAST64_MAX \\\n+     || !defined INT_LEAST64_MIN \\\n+     || !defined UINT_LEAST64_MAX)\n+#error\n+#endif\n+\n+#if (!defined INT_FAST8_MAX \\\n+     || !defined INT_FAST8_MIN \\\n+     || !defined UINT_FAST8_MAX \\\n+     || !defined INT_FAST16_MAX\t\\\n+     || !defined INT_FAST16_MIN\t\\\n+     || !defined UINT_FAST16_MAX \\\n+     || !defined INT_FAST32_MAX\t\\\n+     || !defined INT_FAST32_MIN\t\\\n+     || !defined UINT_FAST32_MAX \\\n+     || !defined INT_FAST64_MAX\t\\\n+     || !defined INT_FAST64_MIN\t\\\n+     || !defined UINT_FAST64_MAX)\n+#error\n+#endif\n+\n+#ifdef __INTPTR_TYPE__\n+# if (!defined INTPTR_MAX \\\n+      || !defined INTPTR_MIN)\n+# error\n+# endif\n+#endif\n+#ifdef __UINTPTR_TYPE__\n+# if !defined UINTPTR_MAX\n+# error\n+# endif\n+#endif\n+\n+#if (!defined INTMAX_MAX \\\n+     || !defined INTMAX_MIN \\\n+     || !defined UINTMAX_MAX)\n+#error\n+#endif\n+\n+#if (!defined PTRDIFF_MAX \\\n+     || !defined PTRDIFF_MIN)\n+#error\n+#endif\n+\n+#if (!defined SIG_ATOMIC_MAX \\\n+     || !defined SIG_ATOMIC_MIN)\n+#error\n+#endif\n+\n+#if !defined SIZE_MAX\n+#error\n+#endif\n+\n+#if (!defined WCHAR_MAX \\\n+     || !defined WCHAR_MIN)\n+#error\n+#endif\n+\n+#if (!defined WINT_MAX \\\n+     || !defined WINT_MIN)\n+#error\n+#endif\n+\n+#if (!defined INT8_C \\\n+     || !defined INT16_C \\\n+     || !defined INT32_C \\\n+     || !defined INT64_C \\\n+     || !defined UINT8_C \\\n+     || !defined UINT16_C \\\n+     || !defined UINT32_C \\\n+     || !defined UINT64_C \\\n+     || !defined INTMAX_C \\\n+     || !defined UINTMAX_C)\n+#error\n+#endif"}, {"sha": "6f6da57af4ee91a19ec965f0bffad6feddbeeb03", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2ca8577e6c88866838fe89c82b8d2c492ad7a59/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2ca8577e6c88866838fe89c82b8d2c492ad7a59/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a2ca8577e6c88866838fe89c82b8d2c492ad7a59", "patch": "@@ -1,3 +1,9 @@\n+2012-10-06  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/52764\n+\t* include/c_global/cstdint: Remove __STDC_LIMIT_MACROS and\n+\t__STDC_CONSTANT_MACROS related macros.\n+\n 2012-10-06  Joe Seymour  <jseymour@codesourcery.com>\n \n \t* include/tr2/dynamic_bitset: Fix cxxabi_forced.h include path."}, {"sha": "5ebee3bd793875d421e247ff3c70a530c3f8b291", "filename": "libstdc++-v3/include/c_global/cstdint", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2ca8577e6c88866838fe89c82b8d2c492ad7a59/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstdint", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2ca8577e6c88866838fe89c82b8d2c492ad7a59/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstdint", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstdint?ref=a2ca8577e6c88866838fe89c82b8d2c492ad7a59", "patch": "@@ -1,6 +1,6 @@\n // <cstdint> -*- C++ -*-\n \n-// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2007-2012 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -37,25 +37,8 @@\n \n #include <bits/c++config.h>\n \n-// For 8.22.1/1 (see C99, Notes 219, 220, 222)\n #if _GLIBCXX_HAVE_STDINT_H\n-# ifndef __STDC_LIMIT_MACROS\n-#  define _UNDEF__STDC_LIMIT_MACROS\n-#  define __STDC_LIMIT_MACROS\n-# endif\n-# ifndef __STDC_CONSTANT_MACROS\n-#  define _UNDEF__STDC_CONSTANT_MACROS\n-#  define __STDC_CONSTANT_MACROS\n-# endif\n # include <stdint.h>\n-# ifdef _UNDEF__STDC_LIMIT_MACROS\n-#  undef __STDC_LIMIT_MACROS\n-#  undef _UNDEF__STDC_LIMIT_MACROS\n-# endif\n-# ifdef _UNDEF__STDC_CONSTANT_MACROS\n-#  undef __STDC_CONSTANT_MACROS\n-#  undef _UNDEF__STDC_CONSTANT_MACROS\n-# endif\n #endif\n \n #ifdef _GLIBCXX_USE_C99_STDINT_TR1"}]}