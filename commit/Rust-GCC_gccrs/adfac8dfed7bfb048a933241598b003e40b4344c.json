{"sha": "adfac8dfed7bfb048a933241598b003e40b4344c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRmYWM4ZGZlZDdiZmIwNDhhOTMzMjQxNTk4YjAwM2U0MGI0MzQ0Yw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-01-09T21:17:10Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-01-09T21:17:10Z"}, "message": "re PR rtl-optimization/64536 (Undefined .L* symbol starting with jump2 on s390x)\n\n\tPR rtl-optimization/64536\n\t* cfgrtl.c (rtl_tidy_fallthru_edge): Handle removal of degenerate\n\ttablejumps.\n\n\t* gcc.dg/pr64536.c: New test.\n\nFrom-SVN: r219405", "tree": {"sha": "bc5b5a43fdbb93e7f4ab44c191121d39d27fa746", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc5b5a43fdbb93e7f4ab44c191121d39d27fa746"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/adfac8dfed7bfb048a933241598b003e40b4344c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adfac8dfed7bfb048a933241598b003e40b4344c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adfac8dfed7bfb048a933241598b003e40b4344c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adfac8dfed7bfb048a933241598b003e40b4344c/comments", "author": null, "committer": null, "parents": [{"sha": "ec37f1bc59f747335ec373f1d2062e338ce3a455", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec37f1bc59f747335ec373f1d2062e338ce3a455", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec37f1bc59f747335ec373f1d2062e338ce3a455"}], "stats": {"total": 1093, "additions": 618, "deletions": 475}, "files": [{"sha": "01f1335fcde2c52fb4144191275aa6863c826533", "filename": "gcc/ChangeLog", "status": "modified", "additions": 263, "deletions": 463, "changes": 726, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=adfac8dfed7bfb048a933241598b003e40b4344c", "patch": "@@ -1,5 +1,11 @@\n+2015-01-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/64536\n+\t* cfgrtl.c (rtl_tidy_fallthru_edge): Handle removal of degenerate\n+\ttablejumps.\n+\n 2015-01-09  Michael Collison  <michael.collison@linaro.org>\n-\t\n+\n \t* genattrtab.c (write_header): Include hash-set.h, machmode.h,\n \tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n \tfold-const.h, wide-int.h, and inchash.h when generating\n@@ -38,215 +44,146 @@\n \toptions-save.c.\n \t* opth-gen.awk: Change include guard from GCC_C_COMMON_H to GCC_C_COMMON_C\n \twhen generating options.h.\n-\t* ada/gcc-interface/cuintp.c: Include hash-set.h, machmode.h,\n-\tvec.h, double-int.h, input.h, alias.h, symtab.h,\n-\tfold-const.h, wide-int.h, and inchash.h due to\n-\tflattening of tree.h.\n-\t* ada/gcc-interface/decl.c: ditto.\n-\t* ada/gcc-interface/misc.c: ditto.\n-\t* ada/gcc-interface/targtyps.c: Include hash-set.h, machmode.h,\n-\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h,\n-\tfold-const.h, wide-int.h, and inchash.h due to\n-\tflattening of tree.h.\n-\t* ada/gcc-interface/trans.c: Include hash-set.h, machmode.h,\n-\tvec.h, double-int.h, input.h, alias.h, symtab.h, real.h,\n-\tfold-const.h, wide-int.h, inchash.h due to\n-\tflattening of tree.h.\n-\t* ada/gcc-interface/utils.c: Include hash-set.h, machmode.h,\n-\tvec.h, double-int.h, input.h, alias.h, symtab.h,\n-\tfold-const.h, wide-int.h, and inchash.h due to\n-\tflattening of tree.h.\n-\t* ada/gcc-interface/utils2.c: ditto.\n \t* alias.c: Include hash-set.h, machmode.h,\n \tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n \tfold-const.h, wide-int.h, and inchash.h due to\n \tflattening of tree.h.\n-\t* asan.c: ditto.\n-\t* attribs.c: ditto.\n-\t* auto-inc-dec.c: ditto.\n-\t* auto-profile.c: ditto\n-\t* bb-reorder.c: ditto.\n+\t* asan.c: Ditto.\n+\t* attribs.c: Ditto.\n+\t* auto-inc-dec.c: Ditto.\n+\t* auto-profile.c: Ditto\n+\t* bb-reorder.c: Ditto.\n \t* bt-load.c: Include symtab.h due to flattening of tree.h.\n \t* builtins.c: Include hash-set.h, machmode.h,\n \tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n \tfold-const.h, wide-int.h, and inchash.h due to\n \tflattening of tree.h.\n-\t* c/c-array-notation.c: ditto.\n-\t* c/c-aux-info.c: ditto.\n-\t* c/c-convert.c: ditto.\n-\t* c/c-decl.c: ditto.\n-\t* c/c-errors.c: ditto.\n-\t* c/c-lang.c: dittoxs.\n-\t* c/c-objc-common.c: ditto.\n-\t* c/c-parser.c: ditto.\n-\t* c/c-typeck.c: Include hash-set.h, machmode.h,\n-\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n-\tfold-const.h, wide-int.h, inchash.h, real.h and\n-\tfixed-value.h due to flattening of tree.h.\n \t* calls.c: Include hash-set.h, machmode.h,\n \tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n \tfold-const.h, wide-int.h, and inchash.h due to\n \tflattening of tree.h.\n-\t* ccmp.c: ditto.\n-\t* c-family/array-notation-common.c: ditto.\n-\t* c-family/c-ada-spec.c: ditto.\n-\t* c-family/c-cilkplus.c: ditto.\n-\t* c-family/c-common.c: Include input.h due to flattening of tree.h.\n-\tDefine macro GCC_C_COMMON_C.\n-\t* c-family/c-common.h: Flatten tree.h header files into c-common.h.\n-\tRemove include of tree-core.h.\n-\t* c-family/c-cppbuiltin.c: Include hash-set.h, machmode.h,\n-\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n-\tfold-const.h, wide-int.h, and inchash.h due to\n-\tflattening of tree.h.\n-\t* c-family/c-dump.c: ditto.\n-\t* c-family/c-format.c: Flatten tree.h header files into c-common.h.\n-\t* c-family/c-cppbuiltin.c: Include hash-set.h, machmode.h,\n-\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n-\tfold-const.h, wide-int.h, and inchash.h due to\n-\tflattening of tree.h.\n-\t* c-family/c-dump.c: Include hash-set.h, machmode.h,\n+\t* ccmp.c: Ditto.\n+\t* cfgbuild.c: Include hash-set.h, machmode.h,\n \tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n-\tfold-const.h, wide-int.h, and inchash.h due to\n-\tflattening of tree.h.\n-\t* c-family/c-format.c: Include hash-set.h, machmode.h,\n-\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n-\tfold-const.h, wide-int.h, inchash.h and real.h due to\n-\tflattening of tree.h.\n-\t* c-family/c-gimplify.c: Include hash-set.h, machmode.h,\n-\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n-\tfold-const.h, wide-int.h, and inchash.h due to\n-\tflattening of tree.h.\n-\t* c-family/cilk.c: ditto.\n-\t* c-family/c-lex.c: ditto.\n-\t* c-family/c-omp.c: ditto.\n-\t* c-family/c-opts.c: ditto.\n-\t* c-family/c-pch.c: ditto.\n-\t* c-family/c-ppoutput.c: ditto.\n-\t* c-family/c-pragma.c: ditto.\n-\t* c-family/c-pretty-print.c: ditto.\n-\t* c-family/c-semantics.c: ditto.\n-\t* c-family/c-ubsan.c: ditto.\n-\t* c-family/stub-objc.c: ditto.\n-\t* cfgbuild.c: ditto.\n-\t* cfg.c: ditto.\n-\t* cfgcleanup.c: ditto.\n-\t* cfgexpand.c: ditto.\n-\t* cfghooks.c: ditto.\n+\tfold-const.h, wide-int.h, and inchash.h due to flattening of tree.h.\n+\t* cfg.c: Ditto.\n+\t* cfgcleanup.c: Ditto.\n+\t* cfgexpand.c: Ditto.\n+\t* cfghooks.c: Ditto.\n \t* cfgloop.c: Include symtab.h, fold-const.h, and\n \tinchash.h due to flattening of tree.h.\n-\t* cfgloopmanip.c: ditto.\n-\t* cfgrtl.c:  Include hash-set.h, machmode.h,\n+\t* cfgloopmanip.c: Ditto.\n+\t* cfgrtl.c: Include hash-set.h, machmode.h,\n \tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n \tfold-const.h, wide-int.h, and inchash.h due to\n \tflattening of tree.h.\n-\t* cgraphbuild.c: ditto.\n-\t* cgraph.c: ditto.\n-\t* cgraphclones.c: ditto.\n-\t* cgraphunit.c: ditto.\n-\t* cilk-common.c: ditto.\n-\t* combine.c: ditto.\n+\t* cgraphbuild.c: Ditto.\n+\t* cgraph.c: Ditto.\n+\t* cgraphclones.c: Ditto.\n+\t* cgraphunit.c: Ditto.\n+\t* cilk-common.c: Ditto.\n+\t* combine.c: Ditto.\n \t* combine-stack-adj.c: Include symbol.h due to flattening of tree.h.\n-\t* config/aarch64/aarch64-builtins.c:  Include hash-set.h, machmode.h,\n+\t* config/aarch64/aarch64-builtins.c: Include hash-set.h, machmode.h,\n \tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n \tfold-const.h, wide-int.h, and inchash.h due to\n \tflattening of tree.h.\n-\t* config/aarch64/aarch64.c: ditto.\n-\t* config/alpha/alpha.c: ditto.\n-\t* config/arc/arc.c: ditto.\n-\t* config/arm/aarch-common.c: ditto.\n-\t* config/arm/arm-builtins.c: ditto.\n-\t* config/arm/arm.c: ditto.\n-\t* config/arm/arm-c.c: ditto.\n-\t* config/avr/avr.c: ditto.\n-\t* config/avr/avr-c.c: ditto.\n-\t* config/avr/avr-log.c: ditto.\n-\t* config/bfin/bfin.c: ditto.\n-\t* config/c6x/c6x.c: ditto.\n-\t* config/cr16/cr16.c: ditto.\n-\t* config/cris/cris.c: ditto.\n-\t* config/darwin.c: ditto.\n-\t* config/darwin-c.c: ditto.\n-\t* config/default-c.c: ditto.\n-\t* config/epiphany/epiphany.c: ditto.\n-\t* config/fr30/fr30.c: ditto.\n-\t* config/frv/frv.c: ditto.\n-\t* config/glibc-c.c: ditto.\n-\t* config/h8300/h8300.c: ditto.\n-\t* config/i386/i386.c: ditto.\n-\t* config/i386/i386-c.c: ditto.\n-\t* config/i386/msformat.c: ditto.\n-\t* config/i386/winnt.c: ditto.\n-\t* config/i386/winnt-cxx.c: ditto.\n-\t* config/i386/winnt-stubs.c: ditto.\n-\t* config/ia64/ia64.c: ditto.\n-\t* config/ia64/ia64-c.c: ditto.\n-\t* config/iq2000/iq2000.c: ditto.\n+\t* config/aarch64/aarch64.c: Ditto.\n+\t* config/alpha/alpha.c: Ditto.\n+\t* config/arc/arc.c: Ditto.\n+\t* config/arm/aarch-common.c: Ditto.\n+\t* config/arm/arm-builtins.c: Ditto.\n+\t* config/arm/arm.c: Ditto.\n+\t* config/arm/arm-c.c: Ditto.\n+\t* config/avr/avr.c: Ditto.\n+\t* config/avr/avr-c.c: Ditto.\n+\t* config/avr/avr-log.c: Ditto.\n+\t* config/bfin/bfin.c: Ditto.\n+\t* config/c6x/c6x.c: Ditto.\n+\t* config/cr16/cr16.c: Ditto.\n+\t* config/cris/cris.c: Ditto.\n+\t* config/darwin.c: Ditto.\n+\t* config/darwin-c.c: Ditto.\n+\t* config/default-c.c: Ditto.\n+\t* config/epiphany/epiphany.c: Ditto.\n+\t* config/fr30/fr30.c: Ditto.\n+\t* config/frv/frv.c: Ditto.\n+\t* config/glibc-c.c: Ditto.\n+\t* config/h8300/h8300.c: Ditto.\n+\t* config/i386/i386.c: Ditto.\n+\t* config/i386/i386-c.c: Ditto.\n+\t* config/i386/msformat.c: Ditto.\n+\t* config/i386/winnt.c: Ditto.\n+\t* config/i386/winnt-cxx.c: Ditto.\n+\t* config/i386/winnt-stubs.c: Ditto.\n+\t* config/ia64/ia64.c: Ditto.\n+\t* config/ia64/ia64-c.c: Ditto.\n+\t* config/iq2000/iq2000.c: Ditto.\n \t* config/lm32/lm32.c: Include symtab.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n \t* config/m32c/m32c.c: Include hash-set.h, machmode.h,\n \tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n \tfold-const.h, wide-int.h, and inchash.h due to\n \tflattening of tree.h.\n-\t* config/m32c/m32c-pragma.c: ditto.\n-\t* config/m32c/m32cr.c: ditto.\n-\t* config/m68/m68k.c: ditto.\n-\t* config/mcore/mcore.c: ditto.\n-\t* config/mep/mep.c: ditto.\n-\t* config/mep/mep-pragma.c: ditto.\n-\t* config/microblaze/microblaze.c: ditto.\n-\t* config/microblaze/microblaze-c.c: ditto.\n-\t* config/mips/mips.c: ditto.\n+\t* config/m32c/m32c-pragma.c: Ditto.\n+\t* config/m32c/m32cr.c: Ditto.\n+\t* config/m68/m68k.c: Ditto.\n+\t* config/mcore/mcore.c: Ditto.\n+\t* config/mep/mep.c: Ditto.\n+\t* config/mep/mep-pragma.c: Ditto.\n+\t* config/microblaze/microblaze.c: Ditto.\n+\t* config/microblaze/microblaze-c.c: Ditto.\n+\t* config/mips/mips.c: Ditto.\n \t* config/mmix/mmix.c: Include symtab.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n \t* config/mn10300/mn10300.c: Include hash-set.h, machmode.h,\n \tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n \tfold-const.h, wide-int.h, and inchash.h due to\n \tflattening of tree.h.\n-\t* config/moxie/moxie.c: ditto.\n-\t* config/msp430/msp430.c: ditto.\n-\t* config/msp430/msp430-c.c: ditto.\n-\t* config/nds32/nds32.c: ditto.\n-\t* config/nds32/nds32-cost.c: ditto.\n-\t* config/nds32/nds32-fp-as-gp.c: ditto.\n-\t* config/nds32/nds32-intrinsic.c: ditto.\n-\t* config/nds32/nds32-isr.c: ditto.\n-\t* config/nds32/nds32-md-auxillary.c: ditto.\n-\t* config/nds32/nds32-memory-manipulationx.c: ditto.\n-\t* config/nds32/nds32-pipelines-auxillary.c: ditto.\n-\t* config/nds32/nds32-predicates.c: ditto.\n-\t* config/nios2/nios2.c: ditto.\n-\t* config/nvptx/nvptx.c: ditto.\n-\t* config/pa/pa.c: ditto.\n+\t* config/moxie/moxie.c: Ditto.\n+\t* config/msp430/msp430.c: Ditto.\n+\t* config/msp430/msp430-c.c: Ditto.\n+\t* config/nds32/nds32.c: Ditto.\n+\t* config/nds32/nds32-cost.c: Ditto.\n+\t* config/nds32/nds32-fp-as-gp.c: Ditto.\n+\t* config/nds32/nds32-intrinsic.c: Ditto.\n+\t* config/nds32/nds32-isr.c: Ditto.\n+\t* config/nds32/nds32-md-auxillary.c: Ditto.\n+\t* config/nds32/nds32-memory-manipulationx.c: Ditto.\n+\t* config/nds32/nds32-pipelines-auxillary.c: Ditto.\n+\t* config/nds32/nds32-predicates.c: Ditto.\n+\t* config/nios2/nios2.c: Ditto.\n+\t* config/nvptx/nvptx.c: Ditto.\n+\t* config/pa/pa.c: Ditto.\n \t* config/pdp11/pdp11x.c: Include symtab.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n \t* config/rl78/rl78.c: Include hash-set.h, machmode.h,\n \tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n \tfold-const.h, wide-int.h, and inchash.h due to\n \tflattening of tree.h.\n-\t* config/rl78/rl78-cx.c: ditto.\n-\t* config/rs6000/rs6000.c: ditto.\n-\t* config/rs6000/rs6000-c.c: ditto.\n-\t* config/rx/rx.c: ditto.\n-\t* config/s390/s390.c: ditto.\n-\t* config/sh/sh.c: ditto.\n-\t* config/sh/sc.c: ditto.\n-\t* config/sh/sh-mem.cc: ditto.\n+\t* config/rl78/rl78-cx.c: Ditto.\n+\t* config/rs6000/rs6000.c: Ditto.\n+\t* config/rs6000/rs6000-c.c: Ditto.\n+\t* config/rx/rx.c: Ditto.\n+\t* config/s390/s390.c: Ditto.\n+\t* config/sh/sh.c: Ditto.\n+\t* config/sh/sc.c: Ditto.\n+\t* config/sh/sh-mem.cc: Ditto.\n \t* config/sh/sh_treg_combine.cc: Include symtab.h, inchash.h and tree.h\n \tdue to flattening of tree.h.\n \tRemove include of tree-core.h.\n \t* config/sol2.c: Include hash-set.h, machmode.h,\n \tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n \tfold-const.h, wide-int.h, and inchash.h due to\n \tflattening of tree.h.\n-\t* config/sol2-c.c: ditto.\n-\t* config/sol2-cxx.c: ditto.\n-\t* config/sol2-stubs.c: ditto.\n-\t* config/sparc/sparc.c: ditto.\n-\t* config/sparc/sparc-cx.c: ditto.\n-\t* config/spu/spu.c: ditto.\n-\t* config/spu/spu-c.c: ditto\n-\t* config/storym16/stormy16.c: ditto.\n+\t* config/sol2-c.c: Ditto.\n+\t* config/sol2-cxx.c: Ditto.\n+\t* config/sol2-stubs.c: Ditto.\n+\t* config/sparc/sparc.c: Ditto.\n+\t* config/sparc/sparc-cx.c: Ditto.\n+\t* config/spu/spu.c: Ditto.\n+\t* config/spu/spu-c.c: Ditto\n+\t* config/storym16/stormy16.c: Ditto.\n \t* config/tilegx/tilegx.c: Include symtab.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n \t* config/tilepro/gen-mul-tables.cc: Include symtab.h in generated file.\n@@ -260,86 +197,55 @@\n \tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n \tfold-const.h, wide-int.h, and inchash.h due to\n \tflattening of tree.h.\n-\t* config/v850/v850.c: ditto.\n-\t* config/v850/v850-c.c: ditto.\n-\t* config/vax/vax.c: ditto.\n-\t* config/vms/vms.c: ditto.\n-\t* config/vms/vms-c.c: ditto.\n-\t* config/vxworks.c: ditto.\n-\t* config/winnt-c.c: ditto.\n+\t* config/v850/v850.c: Ditto.\n+\t* config/v850/v850-c.c: Ditto.\n+\t* config/vax/vax.c: Ditto.\n+\t* config/vms/vms.c: Ditto.\n+\t* config/vms/vms-c.c: Ditto.\n+\t* config/vxworks.c: Ditto.\n+\t* config/winnt-c.c: Ditto.\n \t* config/xtensa/xtensa.c: Include symtab.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n \t* convert.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* coverage.c: ditto.\n-\t* cp/call.c: ditto.\n-\t* cp/class.c: ditto.\n-\t* cp/constexpr.c: ditto.\n-\t* cp/cp-array-notation.c: ditto.\n-\t* cp/cp-gimplify.c: ditto.\n-\t* cp/cp-lang.c: ditto.\n-\t* cp/cp-objcp-common.c: ditto.\n-\t* cp/cvt.c: ditto.\n-\t* cp/decl2.c: ditto.\n-\t* cp/decl.c: ditto.\n-\t* cp/dump.c: ditto.\n-\t* cp/error.c: ditto.\n-\t* cp/except.c: ditto.\n-\t* cp/expr.c: ditto.\n-\t* cp/friend.c: ditto.\n-\t* cp/init.c: ditto.\n-\t* cp/lambda.c: ditto.\n-\t* cp/lex.c: ditto.\n-\t* cp/mangle.c: ditto.\n-\t* cp/name-lookup.c: ditto.\n-\t* cp/optimize.c: ditto.\n-\t* cp/parser.c: ditto.\n-\t* cp/pt.c: ditto.\n-\t* cp/ptree.c: ditto.\n-\t* cp/repo.c: ditto.\n-\t* cp/rtti.c: ditto.\n-\t* cp/search.c: ditto.\n-\t* cp/semantics.c: ditto.\n-\t* cp/tree.c: ditto.\n-\t* cp/typeck2.c: ditto.\n-\t* cp/typeck.c: ditto.\n-\t* cppbuiltin.c: ditto.\n-\t* cprop.c: ditto.\n+\t* coverage.c: Ditto.\n+\t* cppbuiltin.c: Ditto.\n+\t* cprop.c: Ditto.\n \t* cse.c: Add include of symtab.h due to flattening of tree.h.\n \t* cselib.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* data-streamer.c: ditto.\n-\t* data-streamer-in.c: ditto.\n-\t* data-streamer-out.c: ditto.\n-\t* dbxout.c: ditto.\n-\t* dce.c: ditto.\n+\t* data-streamer.c: Ditto.\n+\t* data-streamer-in.c: Ditto.\n+\t* data-streamer-out.c: Ditto.\n+\t* dbxout.c: Ditto.\n+\t* dce.c: Ditto.\n \t* ddg.c: Add include of symtab.h due to flattening of tree.h.\n \t* debug.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* dfp.c: ditto.\n-\t* df-scan.c: ditto.\n+\t* dfp.c: Ditto.\n+\t* df-scan.c: Ditto.\n \t* dojump.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n \twide-int.h, inchash.h and real.h due to flattening of tree.h.\n-\t* double-int.c: ditto.\n-\t* dse.c: ditto.\n-\t* dumpfile.c: ditto.\n+\t* double-int.c: Ditto.\n+\t* dse.c: Ditto.\n+\t* dumpfile.c: Ditto.\n \t* dwarf2asm.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h,\n \twide-int.h, inchash.h and real.h due to flattening of tree.h.\n-\t* dwarf2cfi.c: ditto.\n-\t* dwarf2out.c: ditto.\n-\t* emit-rtl.c: ditto.\n-\t* except.c: ditto.\n-\t* explow.c: ditto.\n+\t* dwarf2cfi.c: Ditto.\n+\t* dwarf2out.c: Ditto.\n+\t* emit-rtl.c: Ditto.\n+\t* except.c: Ditto.\n+\t* explow.c: Ditto.\n \t* expmed.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* expr.c: ditto.\n-\t* final.c: ditto.\n+\t* expr.c: Ditto.\n+\t* final.c: Ditto.\n \t* fixed-value.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h,\n \twide-int.h, inchash.h and fixed-value.h due to flattening of tree.h.\n@@ -355,127 +261,78 @@\n \tAdd prototype for convert_to_ptrofftype_loc relocated from tree.h.\n \tAdd prototype for fold_build_pointer_plus_loc relocated from tree.h.\n \tAdd prototype for fold_build_pointer_plus_hwi_loc relocated from tree.h.\n-\t* fortran/convert.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n-\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n-\twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* fortran/cpp.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n-\tinput.h, alias.h, symtab.h, fold-const.h,\n-\twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* fortran/decl.c: ditto.\n-\t* fortran/f95.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n-\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n-\twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* fortran/iresolve.c: ditto.\n-\t* fortran/match.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n-\tinput.h, alias.h, symtab.h, fold-const.h,\n-\twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* fortran/module.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n-\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n-\twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* fortran/options.c: ditto.\n-\t* fortran/target-memory.c: Include hash-set.h, vec.h,\n-\tdouble-int.h, input.h, alias.h, symtab.h, fold-const.h,\n-\twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* fortran/trans-array.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n-\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n-\twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* fortran/trans.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n-\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n-\twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* fortran/trans-common.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n-\tinput.h, alias.h, symtab.h, fold-const.h,\n-\twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* fortran/trans-const.c: ditto.\n-\t* fortran/trans-decl.c: ditto.\n-\t* fortran/trans-expr.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n-\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n-\twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* fortran/trans-intrinsic.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n-\tinput.h, alias.h, symtab.h, fold-const.h,\n-\twide-int.h, inchash.h and real.h due to flattening of tree.h.\n-\t* fortran/trans-io.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n-\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n-\twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* fortran/trans-openmp.c: ditto.\n-\t* fortran/trans-stmt.c: ditto.\n-\t* fortran/trans-types.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n-\tinput.h, alias.h, symtab.h, fold-const.h,\n-\twide-int.h, inchash.h and real.h due to flattening of tree.h.\n \t* function.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n \t* gcc-plugin.h: Include statistics.h, double-int.h, real.h, fixed-value.h,\n \talias.h, flags.h, and symtab.h due to flattening of tree.h\n-\t* gcse.c: ditto.\n+\t* gcse.c: Ditto.\n \t* generic-match-head.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* ggc-page.c:  Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\t* ggc-page.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* gimple-builder.c: ditto.\n-\t* gimple.c: ditto.\n-\t* gimple-expr.c: ditto.\n-\t* gimple-fold.c: ditto.\n-\t* gimple-iterator.c: ditto.\n-\t* gimple-low.c: ditto.\n-\t* gimple-match-head.c: ditto.\n-\t* gimple-pretty-print.c: ditto.\n+\t* gimple-builder.c: Ditto.\n+\t* gimple.c: Ditto.\n+\t* gimple-expr.c: Ditto.\n+\t* gimple-fold.c: Ditto.\n+\t* gimple-iterator.c: Ditto.\n+\t* gimple-low.c: Ditto.\n+\t* gimple-match-head.c: Ditto.\n+\t* gimple-pretty-print.c: Ditto.\n \t* generic-ssa-isolate-paths.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* gimple-ssa-strength-reduction.c: ditto.\n-\t* gimple-streamer-in.c: ditto.\n-\t* gimple-streamer-out.c: ditto.\n-\t* gimple-walk.c:  Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\t* gimple-ssa-strength-reduction.c: Ditto.\n+\t* gimple-streamer-in.c: Ditto.\n+\t* gimple-streamer-out.c: Ditto.\n+\t* gimple-walk.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* gimplify.c:  Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\t* gimplify.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* gimplify-me.c: ditto.\n-\t* go/go-gcc.cc: ditto.\n-\t* go/go-lang.c: ditto.\n-\t* go/gdump.c: ditto.\n-\t* graphite-blocking.c: ditto.\n-\t* graphite.c: ditto.\n-\t* graphite-dependencies.c: ditto.\n-\t* graphite-interchange.c: ditto.\n-\t* graphite-isl-ast-to-gimple.c: ditto.\n-\t* graphite-optimize-isl.c: ditto.\n-\t* graphite-poly.c: ditto.\n-\t* graphite-scop-detection.c: ditto.\n-\t* graphite-sese-to-poly.c: ditto.\n+\t* gimplify-me.c: Ditto.\n+\t* graphite-blocking.c: Ditto.\n+\t* graphite.c: Ditto.\n+\t* graphite-dependencies.c: Ditto.\n+\t* graphite-interchange.c: Ditto.\n+\t* graphite-isl-ast-to-gimple.c: Ditto.\n+\t* graphite-optimize-isl.c: Ditto.\n+\t* graphite-poly.c: Ditto.\n+\t* graphite-scop-detection.c: Ditto.\n+\t* graphite-sese-to-poly.c: Ditto.\n \t* hw-doloop.c: Include symtab.h due to flattening of tree.h.\n-\t* ifcvt.c: ditto.\n-\t* init-regs.c:  Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\t* ifcvt.c: Ditto.\n+\t* init-regs.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n \t* internal-fc.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h,options.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* ipa.c: ditto.\n-\t* ipa-chkp.c: ditto.\n-\t* ipa-comdats.c:  Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\t* ipa.c: Ditto.\n+\t* ipa-chkp.c: Ditto.\n+\t* ipa-comdats.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n \t* ipa-cp.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h,options.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* ipa-devirt.c:  Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\t* ipa-devirt.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n \t* ipa-icf.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h,options.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* ipa-icf-gimple.c: ditto.\n+\t* ipa-icf-gimple.c: Ditto.\n \t* ipa-inline-analysis.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* ipa-inline.c: ditto.\n-\t* ipa-inline-transform.c: ditto.\n-\t* ipa-polymorhpic-call.c: ditto.\n-\t* ipa-profile.c: ditto.\n+\t* ipa-inline.c: Ditto.\n+\t* ipa-inline-transform.c: Ditto.\n+\t* ipa-polymorhpic-call.c: Ditto.\n+\t* ipa-profile.c: Ditto.\n \t* ipa-prop.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n@@ -485,49 +342,16 @@\n \t* ipa-ref.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* ipa-reference.c: ditto.\n-\t* ipa-split.c: ditto.\n-\t* ipa-utils.c: ditto.\n+\t* ipa-reference.c: Ditto.\n+\t* ipa-split.c: Ditto.\n+\t* ipa-utils.c: Ditto.\n \t* ipa-visbility.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* ira.c: ditto.\n+\t* ira.c: Ditto.\n \t* ira-color.c: Include hash-set.h due to flattening of tree.h.\n-\t* ira-costs.c: ditto.\n-\t* ira-emit.c: ditto.\n-\t* java/boehm.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n-\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n-\twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* java/builtins.c: ditto.\n-\t* java/class.c: ditto.\n-\t* java/constants.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n-\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n-\twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* java/decl.c: ditto.\n-\t* java/except.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n-\tinput.h, alias.h, symtab.h, fold-const.h,\n-\twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* java/expr.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n-\tinput.h, alias.h, symtab.h, fold-const.h,\n-\twide-int.h,inchash.h and real.h due to flattening of tree.h.\n-\t* java/gimplify.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n-\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n-\twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* java/jcf-dump.c: ditto.\n-\t* java/jcf-io.c: ditto.\n-\t* java/jcf-parse.c: ditto.\n-\t* java/jvgenmain.c: ditto.\n-\t* java/lang.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n-\tinput.h, alias.h, symtab.h, fold-const.h,\n-\twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* java/mangle.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n-\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n-\twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* java/mangle_name.c: ditto.\n-\t* java/resource.c: ditto.\n-\t* java/typeck.c: ditto.\n-\t* java/verify-glue.c: ditto.\n-\t* java/verify-impl.c: ditto.\n+\t* ira-costs.c: Ditto.\n+\t* ira-emit.c: Ditto.\n \t* jump.c: Include symtab.h due to flattening of tree.h.\n \t* langhooks.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h,\n@@ -537,77 +361,56 @@\n \tinput.h, alias.h, symtab.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n \t* loop-invariant.c: Include symtab.h due to flattening of tree.h.\n-\t* loop-iv.c: ditto.\n+\t* loop-iv.c: Ditto.\n \t* loop-unroll.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* lower-subreg.c: ditto.\n+\t* lower-subreg.c: Ditto.\n \t* lra-assigns.c: Include symtab.h due to flattening of tree.h.\n \t* lra.c: Include symtab.h, fold-const.h, wide-int.h and inchash.h\n \tdue to flattening of tree.h.\n \t* lra-coalesce.c: Include symtab.h due to flattening of tree.h.\n-\t* lra-constraints.c: ditto.\n-\t* lra-eliminations.c: ditto.\n-\t* lra-livesc: ditto.\n-\t* lra-remat.c: ditto.\n-\t* lra-spills.c: ditto.\n-\t* lto/lto.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n-\tinput.h, alias.h, symtab.h, options, fold-const.h,\n-\twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* lto/lto-lang.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n-\tinput.h, alias.h, symtab.h, fold-const.h,\n-\twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* lto/lto-object.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n-\tinput.h, alias.h, symtab.h, options, fold-const.h,\n-\twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* lto/lto-partition.c: ditto.\n-\t* lto/lto-symtab.c: ditto.\n+\t* lra-constraints.c: Ditto.\n+\t* lra-eliminations.c: Ditto.\n+\t* lra-livesc: Ditto.\n+\t* lra-remat.c: Ditto.\n+\t* lra-spills.c: Ditto.\n \t* lto-cgraph.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n \t* lto-compress.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, options, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* lto-opts.c: ditto.\n+\t* lto-opts.c: Ditto.\n \t* lto-section-in.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* lto-section-out.c: ditto.\n-\t* lto-streamer.c: ditto.\n-\t* lto-streamer-in.c: ditto.\n-\t* lto-streamer-out.c: ditto.\n+\t* lto-section-out.c: Ditto.\n+\t* lto-streamer.c: Ditto.\n+\t* lto-streamer-in.c: Ditto.\n+\t* lto-streamer-out.c: Ditto.\n \t* modulo-sched.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, and\n \tinchash.h due to flattening of tree.h.\n-\t* objc/objc-act.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\t* omega.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, options, fold-const.h,\n \twide-int.h, and inchash.h due to flattening of tree.h.\n-\t* objc/objc-encoding.c: ditto.\n-\t* objc/objc-gnu-runtime-abi-01.c: ditto.\n-\t* objc/objc-lang.c: ditto.\n-\t* objc/objc-map.c: ditto.\n-\t* objc/objc-next-runtime-abi-01.c: ditto.\n-\t* objc/objc-next-runtime-abi-02.c: ditto.\n-\t* objc/objc-runtime-shared-support.c: ditto.\n-\t* objcp/objcp-decl.c: ditto.\n-\t* objcp/objcp-lang.c: ditto.\n-\t* omega.c: ditto.\n \t* omega-low.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, and\n \tinchash.h due to flattening of tree.h.\n-\t* optabs.c: ditto.\n-\t* opts-global.c: ditto.\n-\t* passes.c: ditto.\n+\t* optabs.c: Ditto.\n+\t* opts-global.c: Ditto.\n+\t* passes.c: Ditto.\n \t* plugin.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n \tinchash.h due to flattening of tree.h.\n \t* postreload.c: Include symtab.h due to flattening of tree.h.\n \t* postreload-gcse.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, and\n \tinchash.h due to flattening of tree.h.\n-\t* predict.c: ditto.\n-\t* print-rtl.c: ditto.\n-\t* print-tree.c: ditto.\n+\t* predict.c: Ditto.\n+\t* print-rtl.c: Ditto.\n+\t* print-tree.c: Ditto.\n \t* profile.c: Include symtab.h, fold-const.h\n \tand inchash.h due to flattening of tree.h.\n \t* real.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n@@ -619,13 +422,13 @@\n \t* recog.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, and\n \tinchash.h due to flattening of tree.h.\n-\t* ree.c: ditto.\n-\t* reginfo.c: ditto.\n-\t* reg-stack.c: ditto.\n+\t* ree.c: Ditto.\n+\t* reginfo.c: Ditto.\n+\t* reg-stack.c: Ditto.\n \t* reload1.c: Include symtab.h, fold-const.h, wide-int.h\n \tand inchash.h due to flattening of tree.h.\n \t* reload.c: Include symtab.h due to flattening of tree.h.\n-\t* reorg.c: ditto.\n+\t* reorg.c: Ditto.\n \t* rtlanal.c: Include symtab.h, fold-const.h, wide-int.h\n \tand inchash.h due to flattening of tree.h.\n \t* rtl-chkp.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n@@ -638,11 +441,11 @@\n \t* sched-deps.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n \tinchash.h due to flattening of tree.h.\n-\t* sched-vis.c: ditto.\n-\t* sdbout.c: ditto.\n+\t* sched-vis.c: Ditto.\n+\t* sdbout.c: Ditto.\n \t* sel-sched.c: Include symtab.h, fold-const.h, wide-int.h\n \tand inchash.h due to flattening of tree.h.\n-\t* sel-sched-ir.c: ditto.\n+\t* sel-sched-ir.c: Ditto.\n \t* sese.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n \tinchash.h due to flattening of tree.h.\n@@ -652,21 +455,21 @@\n \t* simplify-rtx.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n \tinchash.h due to flattening of tree.h.\n-\t* stack-ptr-mod.c: ditto.\n-\t* stmt.c: ditto.\n-\t* store-motion.c: ditto.\n-\t* store-layout.c: ditto.\n-\t* stringpool.c: ditto.\n-\t* symtab.c: ditto.\n-\t* target-globals.c: ditto.\n-\t* targhooks.c: ditto.\n-\t* toplev.c: ditto.\n-\t* tracer.c: ditto.\n+\t* stack-ptr-mod.c: Ditto.\n+\t* stmt.c: Ditto.\n+\t* store-motion.c: Ditto.\n+\t* store-layout.c: Ditto.\n+\t* stringpool.c: Ditto.\n+\t* symtab.c: Ditto.\n+\t* target-globals.c: Ditto.\n+\t* targhooks.c: Ditto.\n+\t* toplev.c: Ditto.\n+\t* tracer.c: Ditto.\n \t* trans-mem.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n \tinchash.h due to flattening of tree.h.\n-\t* tree-affine.c: ditto.\n-\t* tree-browser.c: ditto.\n+\t* tree-affine.c: Ditto.\n+\t* tree-browser.c: Ditto.\n \t* tree.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n \tinchash.h due to flattening of tree.h.\n@@ -676,12 +479,12 @@\n \t* tree-cfg.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, and\n \tinchash.h due to flattening of tree.h.\n-\t* tree-cfgcleanup.c: ditto.\n+\t* tree-cfgcleanup.c: Ditto.\n \t* tree-chkp.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n \tinchash.h due to flattening of tree.h.\n-\t* tree-chkp-opt.c: ditto.\n-\t* tree-chrec.c: ditto.\n+\t* tree-chkp-opt.c: Ditto.\n+\t* tree-chrec.c: Ditto.\n \t* tree-chkp-opt.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, inchash.h and\n \treal.h due to flattening of tree.h.\n@@ -692,11 +495,11 @@\n \t* tree-dfa.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, inchash.h and\n \treal.h due to flattening of tree.h.\n-\t* tree-diagnostic.c: ditto.\n+\t* tree-diagnostic.c: Ditto.\n \t* tree-dump.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, inchash.h, real.h and\n \tfixed-value.h due to flattening of tree.h.\n-\t* tree-dfa.c: ditto.\n+\t* tree-dfa.c: Ditto.\n \t* tree-eh.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, inchash.h and\n \treal.h due to flattening of tree.h.\n@@ -713,26 +516,26 @@\n \t* tree-if-conv.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, inchash.h, real.h and\n \tfixed-value.h due to flattening of tree.h.\n-\t* tree-inline.c: ditto.\n-\t* tree-into-ssa.c: ditto.\n+\t* tree-inline.c: Ditto.\n+\t* tree-into-ssa.c: Ditto.\n \t* tree-iterator.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n \tinchash.h due to flattening of tree.h.\n-\t* tree-loop-distribution.c: ditto.\n+\t* tree-loop-distribution.c: Ditto.\n \t* tree-nested.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n \tdue to flattening of tree.h.\n-\t* tree-nrv.c: ditto.\n-\t* tree-object-size.c: ditto.\n-\t* tree-outof-ssa.c: ditto.\n+\t* tree-nrv.c: Ditto.\n+\t* tree-object-size.c: Ditto.\n+\t* tree-outof-ssa.c: Ditto.\n \t* tree-parloops.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h, and\n \tinchash.h due to flattening of tree.h.\n-\t* tree-phinodes.c: ditto.\n+\t* tree-phinodes.c: Ditto.\n \t* tree-predcom.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n \tdue to flattening of tree.h.\n-\t* tree-pretty-print.c: ditto.\n+\t* tree-pretty-print.c: Ditto.\n \t* tree-profile.c: double-int.h, input.h, alias.h, symtab.h,\n \tfold-const.h, wide-int.h and inchash.h due to flattening of tree.h.\n \t* tree-scalar-evolution.c: Include hash-set.h, machmode.h, vec.h,\n@@ -744,44 +547,44 @@\n \t* tree-ssa-alias.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n \tdue to flattening of tree.h.\n-\t* tree-ssa.c: ditto.\n+\t* tree-ssa.c: Ditto.\n \t* tree-ssa-ccp.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, inchash.h\n \tand real.h due to flattening of tree.h.\n \t* tree-ssa-coalesce.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n \tdue to flattening of tree.h.\n-\t* tree-ssa-copy.c: ditto.\n-\t* tree-ssa-copyrename.c: ditto.\n-\t* tree-ssa-dce.c: ditto.\n+\t* tree-ssa-copy.c: Ditto.\n+\t* tree-ssa-copyrename.c: Ditto.\n+\t* tree-ssa-dce.c: Ditto.\n \t* tree-ssa-dom.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h, inchash.h\n \tand real.h due to flattening of tree.h.\n \t* tree-ssa-dse.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n \tdue to flattening of tree.h.\n-\t* tree-ssa-forwprop.c: ditto.\n-\t* tree-ssa-ifcombine.c: ditto.\n-\t* tree-ssa-live.c: ditto.\n-\t* tree-ssa-loop.c: ditto.\n-\t* tree-ssa-loop-ch.c: ditto.\n-\t* tree-ssa-loop-im.c: ditto.\n-\t* tree-ssa-loop-ivcanon.c: ditto.\n-\t* tree-ssa-loop-ivopts.c: ditto.\n-\t* tree-ssa-loop-manip.c: ditto.\n-\t* tree-ssa-loop-niter.c: ditto.\n-\t* tree-ssa-loop-prefetch.c: ditto.\n-\t* tree-ssa-loop-unswitch.c: ditto.\n-\t* tree-ssa-loop-math-opts.c: ditto.\n-\t* tree-ssanames.c: ditto.\n-\t* tree-ssa-operands.c: ditto.\n-\t* tree-ssa-phiopt.c: ditto.\n-\t* tree-ssa-phiprop.c: ditto.\n-\t* tree-ssa-pre.c: ditto.\n-\t* tree-ssa-propagate.c: ditto.\n-\t* tree-ssa-reassoc.c: ditto.\n-\t* tree-ssa-sccvn.c: ditto.\n-\t* tree-ssa-sink.c: ditto.\n+\t* tree-ssa-forwprop.c: Ditto.\n+\t* tree-ssa-ifcombine.c: Ditto.\n+\t* tree-ssa-live.c: Ditto.\n+\t* tree-ssa-loop.c: Ditto.\n+\t* tree-ssa-loop-ch.c: Ditto.\n+\t* tree-ssa-loop-im.c: Ditto.\n+\t* tree-ssa-loop-ivcanon.c: Ditto.\n+\t* tree-ssa-loop-ivopts.c: Ditto.\n+\t* tree-ssa-loop-manip.c: Ditto.\n+\t* tree-ssa-loop-niter.c: Ditto.\n+\t* tree-ssa-loop-prefetch.c: Ditto.\n+\t* tree-ssa-loop-unswitch.c: Ditto.\n+\t* tree-ssa-loop-math-opts.c: Ditto.\n+\t* tree-ssanames.c: Ditto.\n+\t* tree-ssa-operands.c: Ditto.\n+\t* tree-ssa-phiopt.c: Ditto.\n+\t* tree-ssa-phiprop.c: Ditto.\n+\t* tree-ssa-pre.c: Ditto.\n+\t* tree-ssa-propagate.c: Ditto.\n+\t* tree-ssa-reassoc.c: Ditto.\n+\t* tree-ssa-sccvn.c: Ditto.\n+\t* tree-ssa-sink.c: Ditto.\n \t* tree-ssa-strlen.c: Include hash-set.h, machmode.h, vec.h,\n \tdouble-int.h, input.h, alias.h, symtab.h, options.h, fold-const.h,\n \twide-int.h and inchash.h due to flattening of tree.h.\n@@ -790,15 +593,15 @@\n \t* tree-ssa-tail-merge.c: Include hash-set.h, machmode.h, vec.h,\n \tdouble-int.h, input.h, alias.h, symtab.h, fold-const.h,\n \twide-int.h and inchash.h due to flattening of tree.h.\n-\t* tree-ssa-ter.c: ditto.\n-\t* tree-ssa-threadedge.c: ditto.\n+\t* tree-ssa-ter.c: Ditto.\n+\t* tree-ssa-threadedge.c: Ditto.\n \t* tree-ssa-threadupdate.c: Include hash-set.h, machmode.h, vec.h,\n \tdouble-int.h, input.h, alias.h, symtab.h, options.h, fold-const.h,\n \twide-int.h and inchash.h due to flattening of tree.h.\n \t* tree-ssa-uncprop.c: Include hash-set.h, machmode.h, vec.h,\n \tdouble-int.h, input.h, alias.h, symtab.h, fold-const.h,\n \twide-int.h and inchash.h due to flattening of tree.h.\n-\t* tree-ssa-uninit.c: ditto.\n+\t* tree-ssa-uninit.c: Ditto.\n \t* tree-stdarg.c: Include vec.h, double-int.h, input.h, alias.h,\n \tsymtab.h, fold-const.h, wide-int.h and inchash.h due to flattening\n \tof tree.h.\n@@ -809,45 +612,42 @@\n \tdouble-int.h, input.h, alias.h, symtab.h, options.h, fold-const.h,\n \twide-int.h, inchash.h, real.h and fixed-value.h due to flattening\n \tof tree.h.\n-\t* tree-streamer-out.c: dittoo.\n+\t* tree-streamer-out.c: Dittoo.\n \t* tree-switch-conversion.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n \tdue to flattening of tree.h.\n-\t* tree-tailcall.c: ditto.\n-\t* tree-vect-data-refs.c: ditto.\n+\t* tree-tailcall.c: Ditto.\n+\t* tree-vect-data-refs.c: Ditto.\n \t* tree-vect-generic.c: Include hash-set.h, machmode.h, vec.h, double-int.h, input.h,\n \talias.h, symtab.h, options.h, fold-const.h, wide-int.h and inchash.h\n \tdue to flattening of tree.h.\n \t* tree-vect-loop.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n \tdue to flattening of tree.h.\n-\t* tree-vect-loop-manip.c: ditto.\n-\t* tree-vectorizer.c: ditto.\n-\t* tree-vect-patterns.c: ditto.\n-\t* tree-vect-slp.c: ditto.\n-\t* tree-vect-stmts.c: ditto.\n-\t* tree-vrp.c: ditto.\n+\t* tree-vect-loop-manip.c: Ditto.\n+\t* tree-vectorizer.c: Ditto.\n+\t* tree-vect-patterns.c: Ditto.\n+\t* tree-vect-slp.c: Ditto.\n+\t* tree-vect-stmts.c: Ditto.\n+\t* tree-vrp.c: Ditto.\n \t* tsan.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h and inchash.h\n \tdue to flattening of tree.h.\n-\t* ubsan.c: ditto.\n+\t* ubsan.c: Ditto.\n \t* value-prof.c.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n \tdue to flattening of tree.h.\n-\t* varasm.c: ditto.\n-\t* varpool.c: ditto.\n-\t* var-tracking.c: ditto.\n-\t* vmsdbgout.c: ditto.\n+\t* varasm.c: Ditto.\n+\t* varpool.c: Ditto.\n+\t* var-tracking.c: Ditto.\n+\t* vmsdbgout.c: Ditto.\n \t* vtable-verify.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h and inchash.h\n \tdue to flattening of tree.h.\n \t* wide-int.cc: Include hash-set.h, machmode.h, vec.h, double-int.h,\n \tinput.h, alias.h, symtab.h, fold-const.h, wide-int.h and inchash.h\n \tdue to flattening of tree.h.\n-\t* xcoffout.c: ditto.\n-\t* libcc1/plugin.cc: Include hash-set.h, machmode.h, vec.h, double-int.h,\n-\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h and inchash.h\n-\tdue to flattening of tree.h.\n+\t* xcoffout.c: Ditto.\n \n 2015-01-09  Tom de Vries  <tom@codesourcery.com>\n "}, {"sha": "93efb49ff0f3f44bedb55a95fa9031962ff6d039", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=adfac8dfed7bfb048a933241598b003e40b4344c", "patch": "@@ -1,3 +1,25 @@\n+2015-01-09  Michael Collison  <michael.collison@linaro.org>\n+\n+\t* gcc-interface/cuintp.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h,\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* gcc-interface/decl.c: Ditto.\n+\t* gcc-interface/misc.c: Ditto.\n+\t* gcc-interface/targtyps.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h,\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* gcc-interface/trans.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, real.h,\n+\tfold-const.h, wide-int.h, inchash.h due to\n+\tflattening of tree.h.\n+\t* gcc-interface/utils.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h,\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* gcc-interface/utils2.c: Ditto.\n+\n 2015-01-07  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_warn.adb (Check_One_Unit): Don't give unused entities"}, {"sha": "afc23db0d9bfb80fad2c2e678f9c49656de5bed8", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 57, "deletions": 12, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=adfac8dfed7bfb048a933241598b003e40b4344c", "patch": "@@ -1,3 +1,48 @@\n+2015-01-09  Michael Collison  <michael.collison@linaro.org>\n+\n+\t* array-notation-common.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h due to flattening of tree.h.\n+\t* c-ada-spec.c: Ditto.\n+\t* c-cilkplus.c: Ditto.\n+\t* c-common.c: Include input.h due to flattening of tree.h.\n+\tDefine macro GCC_C_COMMON_C.\n+\t* c-common.h: Flatten tree.h header files into c-common.h.\n+\tRemove include of tree-core.h.\n+\t* c-cppbuiltin.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* c-dump.c: Ditto.\n+\t* c-format.c: Flatten tree.h header files into c-common.h.\n+\t* c-cppbuiltin.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* c-dump.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* c-format.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, inchash.h and real.h due to\n+\tflattening of tree.h.\n+\t* c-gimplify.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h due to\n+\tflattening of tree.h.\n+\t* cilk.c: Ditto.\n+\t* c-lex.c: Ditto.\n+\t* c-omp.c: Ditto.\n+\t* c-opts.c: Ditto.\n+\t* c-pch.c: Ditto.\n+\t* c-ppoutput.c: Ditto.\n+\t* c-pragma.c: Ditto.\n+\t* c-pretty-print.c: Ditto.\n+\t* c-semantics.c: Ditto.\n+\t* c-ubsan.c: Ditto.\n+\t* stub-objc.c: Ditto.\n+\n 2015-01-08  Jason Merrill  <jason@redhat.com>\n \n \t* c-ubsan.c (ubsan_maybe_instrument_array_ref): Use\n@@ -206,11 +251,11 @@\n \n 2014-10-28  Andrew MacLeod  <amacleod@redhat.com>\n \n-\t* c-family/c-common.c: Adjust include files.\n-\t* c-family/c-gimplify.c: Ditto.\n-\t* c-family/cilk.c: Ditto.\n-\t* c-family/c-pragma.c: Ditto.\n-\t* c-family/c-ubsan.c: Ditto.\n+\t* c-common.c: Adjust include files.\n+\t* c-gimplify.c: Ditto.\n+\t* cilk.c: Ditto.\n+\t* c-pragma.c: Ditto.\n+\t* c-ubsan.c: Ditto.\n \n 2014-10-27  Andrew MacLeod  <amacleod@redhat.com>\n \n@@ -311,7 +356,7 @@\n \n 2014-10-06  Edward Smith-Rowland  <3dw4rd@verizon.net>\n \n-\t* c-family/c-cppbuiltin.c: Move __cpp_attribute_deprecated to the\n+\t* c-cppbuiltin.c: Move __cpp_attribute_deprecated to the\n \tC++11 section.\n \n 2014-10-03  Marc Glisse  <marc.glisse@inria.fr>\n@@ -768,7 +813,7 @@\n \n 2014-06-11  Jan Hubicka  <hubicka@ucw.cz>\n \n-\t* c-family/c-common.c (handle_section_attribute): Update handling for\n+\t* c-common.c (handle_section_attribute): Update handling for\n \tsection names that are no longer trees.\n \n 2014-06-10  Jakub Jelinek  <jakub@redhat.com>\n@@ -1588,8 +1633,8 @@\n \n 2013-10-26  Jeff Law  <law@redhat.com>\n \n-\t* c-family/c-common.c (c_define_builtins): Remove mudflap support.\n-\t* c-family/c.opt: Ignore and warn for mudflap options.\n+\t* c-common.c (c_define_builtins): Remove mudflap support.\n+\t* c.opt: Ignore and warn for mudflap options.\n \n 2013-10-24  Tobias Burnus  <burnus@net-b.de>\n \n@@ -1990,7 +2035,7 @@\n \n 2013-07-08  Graham Stott  <graham.stott@btinternet.com>\n \n-\t* c-family/array-notation-common.c (length_mismatch_in_expr_p): Delete\n+\t* array-notation-common.c (length_mismatch_in_expr_p): Delete\n \tunused variables l_length and l_node.\n \n 2013-07-04  Joern Rennecke  <joern.rennecke@embecosm.com>\n@@ -3523,7 +3568,7 @@\n \n 2011-03-25  Jeff Law  <law@redhat.com>\n \n-\t* c-family/c-common.c (def_fn_type): Add missing va_end.\n+\t* c-common.c (def_fn_type): Add missing va_end.\n \n 2011-03-25  Jason Merrill  <jason@redhat.com>\n \n@@ -4374,7 +4419,7 @@\n \n 2010-07-03  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n-\t* c-family/c-common.c (IN_GCC_FRONTEND): Do not undef.\n+\t* c-common.c (IN_GCC_FRONTEND): Do not undef.\n \tDo not include expr.h\n \t(vector_mode_valid_p): Move here.\n "}, {"sha": "f42f53b902499891a03ddecf2205f6c2005b2ade", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=adfac8dfed7bfb048a933241598b003e40b4344c", "patch": "@@ -1,3 +1,20 @@\n+2015-01-09  Michael Collison  <michael.collison@linaro.org>\n+\n+\t* c-array-notation.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, and inchash.h due to flattening of tree.h.\n+\t* c-aux-info.c: Ditto.\n+\t* c-convert.c: Ditto.\n+\t* c-decl.c: Ditto.\n+\t* c-errors.c: Ditto.\n+\t* c-lang.c: Dittoxs.\n+\t* c-objc-common.c: Ditto.\n+\t* c-parser.c: Ditto.\n+\t* c-typeck.c: Include hash-set.h, machmode.h,\n+\tvec.h, double-int.h, input.h, alias.h, symtab.h, options.h\n+\tfold-const.h, wide-int.h, inchash.h, real.h and\n+\tfixed-value.h due to flattening of tree.h.\n+\n 2015-01-07  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/64417"}, {"sha": "f20fa7a69a9688c4d1225fae8520afa0630b202d", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=adfac8dfed7bfb048a933241598b003e40b4344c", "patch": "@@ -1796,6 +1796,24 @@ rtl_tidy_fallthru_edge (edge e)\n       && (any_uncondjump_p (q)\n \t  || single_succ_p (b)))\n     {\n+      rtx label;\n+      rtx_jump_table_data *table;\n+\n+      if (tablejump_p (q, &label, &table))\n+\t{\n+\t  /* The label is likely mentioned in some instruction before\n+\t     the tablejump and might not be DCEd, so turn it into\n+\t     a note instead and move before the tablejump that is going to\n+\t     be deleted.  */\n+\t  const char *name = LABEL_NAME (label);\n+\t  PUT_CODE (label, NOTE);\n+\t  NOTE_KIND (label) = NOTE_INSN_DELETED_LABEL;\n+\t  NOTE_DELETED_LABEL_NAME (label) = name;\n+\t  rtx_insn *lab = safe_as_a <rtx_insn *> (label);\n+\t  reorder_insns (lab, lab, PREV_INSN (q));\n+\t  delete_insn (table);\n+\t}\n+\n #ifdef HAVE_cc0\n       /* If this was a conditional jump, we need to also delete\n \t the insn that set cc0.  */"}, {"sha": "f60141d7beb4542a46d6fc59d3372bfe7e14f4c7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=adfac8dfed7bfb048a933241598b003e40b4344c", "patch": "@@ -1,3 +1,39 @@\n+2015-01-09  Michael Collison  <michael.collison@linaro.org>\n+\n+\t* call.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* class.c: Ditto.\n+\t* constexpr.c: Ditto.\n+\t* cp-array-notation.c: Ditto.\n+\t* cp-gimplify.c: Ditto.\n+\t* cp-lang.c: Ditto.\n+\t* cp-objcp-common.c: Ditto.\n+\t* cvt.c: Ditto.\n+\t* decl2.c: Ditto.\n+\t* decl.c: Ditto.\n+\t* dump.c: Ditto.\n+\t* error.c: Ditto.\n+\t* except.c: Ditto.\n+\t* expr.c: Ditto.\n+\t* friend.c: Ditto.\n+\t* init.c: Ditto.\n+\t* lambda.c: Ditto.\n+\t* lex.c: Ditto.\n+\t* mangle.c: Ditto.\n+\t* name-lookup.c: Ditto.\n+\t* optimize.c: Ditto.\n+\t* parser.c: Ditto.\n+\t* pt.c: Ditto.\n+\t* ptree.c: Ditto.\n+\t* repo.c: Ditto.\n+\t* rtti.c: Ditto.\n+\t* search.c: Ditto.\n+\t* semantics.c: Ditto.\n+\t* tree.c: Ditto.\n+\t* typeck2.c: Ditto.\n+\t* typeck.c: Ditto.\n+\n 2015-01-08  Jason Merrill  <jason@redhat.com>\n \n \t* cp-gimplify.c (cp_genericize): Use do_ubsan_in_current_function."}, {"sha": "141bc486d7e8078657cd23163cec6467d5dbaa2c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=adfac8dfed7bfb048a933241598b003e40b4344c", "patch": "@@ -1,3 +1,52 @@\n+2015-01-09  Michael Collison  <michael.collison@linaro.org>\n+\n+\t* convert.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* cpp.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* decl.c: Ditto.\n+\t* f95.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* iresolve.c: Ditto.\n+\t* match.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* module.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* options.c: Ditto.\n+\t* target-memory.c: Include hash-set.h, vec.h,\n+\tdouble-int.h, input.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* trans-array.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* trans.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* trans-common.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* trans-const.c: Ditto.\n+\t* trans-decl.c: Ditto.\n+\t* trans-expr.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* trans-intrinsic.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, inchash.h and real.h due to flattening of tree.h.\n+\t* trans-io.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* trans-openmp.c: Ditto.\n+\t* trans-stmt.c: Ditto.\n+\t* trans-types.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, inchash.h and real.h due to flattening of tree.h.\n+\n 2015-01-08  Tobias Burnus  <burnus@net-b.de>\n \n \t* trans-decl.c (gfc_build_qualified_array): Fix coarray tokens"}, {"sha": "addfd1f9ba79c7a660067ec83c8058cbed0dee10", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=adfac8dfed7bfb048a933241598b003e40b4344c", "patch": "@@ -1,3 +1,11 @@\n+2015-01-09  Michael Collison  <michael.collison@linaro.org>\n+\n+\t* go-gcc.cc: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* go-lang.c: Ditto.\n+\t* go-backend.c: Ditto.\n+\n 2015-01-07  Chris Manghane  <cmang@google.com>\n \n \tPR go/61204"}, {"sha": "70b902844216cac29622b224f1d358736895efa3", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=adfac8dfed7bfb048a933241598b003e40b4344c", "patch": "@@ -1,3 +1,39 @@\n+2015-01-09  Michael Collison  <michael.collison@linaro.org>\n+\n+\t* boehm.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* builtins.c: Ditto.\n+\t* class.c: Ditto.\n+\t* constants.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* decl.c: Ditto.\n+\t* except.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* expr.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h,inchash.h and real.h due to flattening of tree.h.\n+\t* gimplify.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* jcf-dump.c: Ditto.\n+\t* jcf-io.c: Ditto.\n+\t* jcf-parse.c: Ditto.\n+\t* jvgenmain.c: Ditto.\n+\t* lang.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* mangle.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* mangle_name.c: Ditto.\n+\t* resource.c: Ditto.\n+\t* typeck.c: Ditto.\n+\t* verify-glue.c: Ditto.\n+\t* verify-impl.c: Ditto.\n+\n 2015-01-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "dc3354b7ee93b729ede9809a7863405244a6dcda", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=adfac8dfed7bfb048a933241598b003e40b4344c", "patch": "@@ -1,3 +1,17 @@\n+2015-01-09  Michael Collison  <michael.collison@linaro.org>\n+\n+\t* lto.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* lto-lang.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* lto-object.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* lto-partition.c: Ditto.\n+\t* lto-symtab.c: Ditto.\n+\n 2015-01-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "c8d088be22f9a9f28dc164e8a060eb4f9905a94c", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=adfac8dfed7bfb048a933241598b003e40b4344c", "patch": "@@ -1,3 +1,16 @@\n+2015-01-09  Michael Collison  <michael.collison@linaro.org>\n+\n+\t* objc-act.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* objc-encoding.c: Ditto.\n+\t* objc-gnu-runtime-abi-01.c: Ditto.\n+\t* objc-lang.c: Ditto.\n+\t* objc-map.c: Ditto.\n+\t* objc-next-runtime-abi-01.c: Ditto.\n+\t* objc-next-runtime-abi-02.c: Ditto.\n+\t* objc-runtime-shared-support.c: Ditto.\n+\n 2015-01-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "5f19e80f60f998f50b558633b5abcc8b411919d5", "filename": "gcc/objcp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Fobjcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Fobjcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FChangeLog?ref=adfac8dfed7bfb048a933241598b003e40b4344c", "patch": "@@ -1,3 +1,10 @@\n+2015-01-09  Michael Collison  <michael.collison@linaro.org>\n+\n+\t* objcp-decl.c: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options, fold-const.h,\n+\twide-int.h, and inchash.h due to flattening of tree.h.\n+\t* objcp-lang.c: Ditto.\n+\n 2014-12-31  Iain Sandoe  <iain@codesourcery.com>\n \n \t* config-lang.in (gtfiles): Update list."}, {"sha": "2aada90092bb99bb21a5346752351be18e4b0133", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=adfac8dfed7bfb048a933241598b003e40b4344c", "patch": "@@ -1,3 +1,8 @@\n+2015-01-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/64536\n+\t* gcc.dg/pr64536.c: New test.\n+\n 2015-01-09  David Malcolm  <dmalcolm@redhat.com>\n \n \t* jit.dg/all-non-failing-tests.h: Add test-constants.c."}, {"sha": "9a7982997872820010e97e1d6eae4844eab748aa", "filename": "gcc/testsuite/gcc.dg/pr64536.c", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64536.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adfac8dfed7bfb048a933241598b003e40b4344c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64536.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64536.c?ref=adfac8dfed7bfb048a933241598b003e40b4344c", "patch": "@@ -0,0 +1,67 @@\n+/* PR rtl-optimization/64536 */\n+/* { dg-do link } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-additional-options \"-fPIC\" { target fpic } } */\n+\n+struct S { long q; } *h;\n+long a, b, g, j, k, *c, *d, *e, *f, *i;\n+long *baz (void)\n+{\n+  asm volatile (\"\" : : : \"memory\");\n+  return e;\n+}\n+\n+void\n+bar (int x)\n+{\n+  int y;\n+  for (y = 0; y < x; y++)\n+    {\n+      switch (b)\n+\t{\n+\tcase 0:\n+\tcase 2:\n+\t  a++;\n+\t  break;\n+\tcase 3:\n+\t  a++;\n+\t  break;\n+\tcase 1:\n+\t  a++;\n+\t}\n+      if (d)\n+\t{\n+\t  f = baz ();\n+\t  g = k++;\n+\t  if (&h->q)\n+\t    {\n+\t      j = *f;\n+\t      h->q = *f;\n+\t    }\n+\t  else\n+\t    i = (long *) (h->q = *f);\n+\t  *c++ = (long) f;\n+\t  e += 6;\n+\t}\n+      else\n+\t{\n+\t  f = baz ();\n+\t  g = k++;\n+\t  if (&h->q)\n+\t    {\n+\t      j = *f;\n+\t      h->q = *f;\n+\t    }\n+\t  else\n+\t    i = (long *) (h->q = *f);\n+\t  *c++ = (long) f;\n+\t  e += 6;\n+\t}\n+    }\n+}\n+\n+int\n+main ()\n+{\n+  return 0;\n+}"}, {"sha": "b0507eb2a9b773e9e916cc306ceec5864e504864", "filename": "libcc1/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adfac8dfed7bfb048a933241598b003e40b4344c/libcc1%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adfac8dfed7bfb048a933241598b003e40b4344c/libcc1%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2FChangeLog?ref=adfac8dfed7bfb048a933241598b003e40b4344c", "patch": "@@ -1,3 +1,9 @@\n+2015-01-09  Michael Collison  <michael.collison@linaro.org>\n+\n+\t* plugin.cc: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h, options.h, fold-const.h, wide-int.h and inchash.h\n+\tdue to flattening of tree.h.\n+\n 2014-11-21  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR bootstrap/63784"}]}