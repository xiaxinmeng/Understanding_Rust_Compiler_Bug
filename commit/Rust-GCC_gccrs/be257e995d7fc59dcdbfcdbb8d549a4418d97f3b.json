{"sha": "be257e995d7fc59dcdbfcdbb8d549a4418d97f3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUyNTdlOTk1ZDdmYzU5ZGNkYmZjZGJiOGQ1NDlhNDQxOGQ5N2YzYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-10T10:28:45Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-10T10:28:45Z"}, "message": "[multiple changes]\n\n2010-09-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sprint.adb (Sprint_Node_Actual, case N_Derived_Type_Definition): Do\n\tnot reset Sloc when printing keyword \"new\".\n\n2010-09-10  Vincent Celier  <celier@adacore.com>\n\n\t* gnatcmd.adb (GNATCmd): Put the command line in environment variable\n\tGNAT_DRIVER_COMMAND_LINE.\n\n2010-09-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem.adb (Do_Unit_And_Dependents): if Withed_Body is set on a context\n\tclause, process the body at once.\n\n2010-09-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_res.adb (Resolve_Type_Conversion): Do not warn on a redundant\n\tconversion is the expression is a qualified expression used to\n\tdisambiguate a function call.\n\n2010-09-10  Vincent Celier  <celier@adacore.com>\n\n\t* prj-nmsc.adb (Add_Source): Allow an Ada source to have the same name\n\tas a source of another project and of another language.\n\n2010-09-10  Robert Dewar  <dewar@adacore.com>\n\n\t* prj-util.adb: Minor reformatting.\n\nFrom-SVN: r164159", "tree": {"sha": "cc649ae7918e41381652fd2f8884f189f3be98bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc649ae7918e41381652fd2f8884f189f3be98bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be257e995d7fc59dcdbfcdbb8d549a4418d97f3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be257e995d7fc59dcdbfcdbb8d549a4418d97f3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be257e995d7fc59dcdbfcdbb8d549a4418d97f3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be257e995d7fc59dcdbfcdbb8d549a4418d97f3b/comments", "author": null, "committer": null, "parents": [{"sha": "af80460358e29d5051bebf3046765412f88574da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af80460358e29d5051bebf3046765412f88574da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af80460358e29d5051bebf3046765412f88574da"}], "stats": {"total": 126, "additions": 105, "deletions": 21}, "files": [{"sha": "85f6c685fc74d8e86f50cfaecb28e02909830d1e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be257e995d7fc59dcdbfcdbb8d549a4418d97f3b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be257e995d7fc59dcdbfcdbb8d549a4418d97f3b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=be257e995d7fc59dcdbfcdbb8d549a4418d97f3b", "patch": "@@ -1,3 +1,33 @@\n+2010-09-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sprint.adb (Sprint_Node_Actual, case N_Derived_Type_Definition): Do\n+\tnot reset Sloc when printing keyword \"new\".\n+\n+2010-09-10  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatcmd.adb (GNATCmd): Put the command line in environment variable\n+\tGNAT_DRIVER_COMMAND_LINE.\n+\n+2010-09-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem.adb (Do_Unit_And_Dependents): if Withed_Body is set on a context\n+\tclause, process the body at once.\n+\n+2010-09-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Type_Conversion): Do not warn on a redundant\n+\tconversion is the expression is a qualified expression used to\n+\tdisambiguate a function call.\n+\n+2010-09-10  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-nmsc.adb (Add_Source): Allow an Ada source to have the same name\n+\tas a source of another project and of another language.\n+\n+2010-09-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* prj-util.adb: Minor reformatting.\n+\n 2010-09-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* exp_disp.adb: Minor reformatting."}, {"sha": "9c038db96ed0af228392e334129ee8c3e6c8f1c0", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be257e995d7fc59dcdbfcdbb8d549a4418d97f3b/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be257e995d7fc59dcdbfcdbb8d549a4418d97f3b/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=be257e995d7fc59dcdbfcdbb8d549a4418d97f3b", "patch": "@@ -1349,6 +1349,19 @@ begin\n \n    Targparm.Get_Target_Parameters;\n \n+   --  Put the command line in environment variable GNAT_DRIVER_COMMAND_LINE,\n+   --  so that the spawned tool may know the way the GNAT driver was invoked.\n+\n+   Name_Len := 0;\n+   Add_Str_To_Name_Buffer (Command_Name);\n+\n+   for J in 1 .. Argument_Count loop\n+      Add_Char_To_Name_Buffer (' ');\n+      Add_Str_To_Name_Buffer (Argument (J));\n+   end loop;\n+\n+   Setenv (\"GNAT_DRIVER_COMMAND_LINE\", Name_Buffer (1 .. Name_Len));\n+\n    --  Add the directory where the GNAT driver is invoked in front of the path,\n    --  if the GNAT driver is invoked with directory information. Do not do this\n    --  for VMS, where the notion of path does not really exist."}, {"sha": "bd800f8a04822bda7008fee13806dbdab4160bd8", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be257e995d7fc59dcdbfcdbb8d549a4418d97f3b/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be257e995d7fc59dcdbfcdbb8d549a4418d97f3b/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=be257e995d7fc59dcdbfcdbb8d549a4418d97f3b", "patch": "@@ -722,6 +722,7 @@ package body Prj.Nmsc is\n          elsif not Source.Locally_Removed\n            and then not Data.Flags.Allow_Duplicate_Basenames\n            and then Lang_Id.Config.Kind = Unit_Based\n+           and then Source.Language.Config.Kind = Unit_Based\n          then\n             Error_Msg_File_1 := File_Name;\n             Error_Msg_File_2 := File_Name_Type (Source.Project.Name);"}, {"sha": "d714cdbbf523f9b73320dead3e0eca28f2ca6bf3", "filename": "gcc/ada/prj-util.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be257e995d7fc59dcdbfcdbb8d549a4418d97f3b/gcc%2Fada%2Fprj-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be257e995d7fc59dcdbfcdbb8d549a4418d97f3b/gcc%2Fada%2Fprj-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.adb?ref=be257e995d7fc59dcdbfcdbb8d549a4418d97f3b", "patch": "@@ -189,11 +189,10 @@ package body Prj.Util is\n \n          elsif Builder_Package /= No_Package then\n \n-            --  If the suffix is specified in the project itself, as\n-            --  opposed to the config file, it needs to be taken into account.\n-            --  Unfortunately, when the project was processed, in both cases\n-            --  the suffix is stored in Project.Config, so get it from the\n-            --  project again.\n+            --  If the suffix is specified in the project itself, as opposed to\n+            --  the config file, it needs to be taken into account. However,\n+            --  when the project was processed, in both cases the suffix was\n+            --  stored in Project.Config, so get it from the project again.\n \n             Suffix_From_Project :=\n               Prj.Util.Value_Of"}, {"sha": "bf419369044421811ee70d91201d35fd7c29e867", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 43, "deletions": 15, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be257e995d7fc59dcdbfcdbb8d549a4418d97f3b/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be257e995d7fc59dcdbfcdbb8d549a4418d97f3b/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=be257e995d7fc59dcdbfcdbb8d549a4418d97f3b", "patch": "@@ -1538,16 +1538,7 @@ package body Sem is\n       --  This is needed because the spec of the main unit may appear in the\n       --  context of some other unit. We do not want this to force processing\n       --  of the main body before all other units have been processed.\n-\n-      function Depends_On_Main (CU : Node_Id) return Boolean;\n-      --  The body of a unit that is withed by the spec of the main unit\n-      --  may in turn have a with_clause on that spec. In that case do not\n-      --  traverse the body, to prevent loops. It can also happen that the\n-      --  main body has a with_clause on a child, which of course has an\n-      --  implicit with on its parent. It's OK to traverse the child body\n-      --  if the main spec has been processed, otherwise we also have a\n-      --  circularity to avoid.\n-\n+      --\n       --  Another circularity pattern occurs when the main unit is a child unit\n       --  and the body of an ancestor has a with-clause of the main unit or on\n       --  one of its children. In both cases the body in question has a with-\n@@ -1556,6 +1547,14 @@ package body Sem is\n       --  spec of a subprogram declared in an instance within the parent will\n       --  not be seen in the main unit.\n \n+      function Depends_On_Main (CU : Node_Id) return Boolean;\n+      --  The body of a unit that is withed by the spec of the main unit may in\n+      --  turn have a with_clause on that spec. In that case do not traverse\n+      --  the body, to prevent loops. It can also happen that the main body has\n+      --  a with_clause on a child, which of course has an implicit with on its\n+      --  parent. It's OK to traverse the child body if the main spec has been\n+      --  processed, otherwise we also have a circularity to avoid.\n+\n       procedure Do_Action (CU : Node_Id; Item : Node_Id);\n       --  Calls Action, with some validity checks\n \n@@ -1960,10 +1959,16 @@ package body Sem is\n                --  a package, the original file carries the body, and the spec\n                --  appears as a later entry in the units list.\n \n-               --  Otherwise Bodies appear in the list only because of inlining\n-               --  or instantiations, and they are processed only if relevant\n-               --  to the main unit. The main unit itself is processed\n-               --  separately after all other specs.\n+               --  Otherwise bodies appear in the list only because of inlining\n+               --  or instantiations, and they are processed only if relevant.\n+               --  The flag Withed_Body on a context clause indicates that a\n+               --  unit contains an instantiation that may be needed later,\n+               --  and therefore the body that contains the generic body (and\n+               --  its context)  must be traversed immediately after the\n+               --  corresponding spec (see Do_Unit_And_Dependents).\n+\n+               --  The main unit itself is processed separately after all other\n+               --  specs, and relevant bodies are examined in Process_Main.\n \n                when N_Subprogram_Body =>\n                   if Acts_As_Spec (N) then\n@@ -2181,6 +2186,8 @@ package body Sem is\n       pragma Assert (Nkind (CU) = N_Compilation_Unit);\n \n       Context_Item : Node_Id;\n+      Lib_Unit     : Node_Id;\n+      Body_CU      : Node_Id;\n \n    begin\n       Context_Item := First (Context_Items (CU));\n@@ -2189,7 +2196,28 @@ package body Sem is\n            and then (Include_Limited\n                      or else not Limited_Present (Context_Item))\n          then\n-            Action (Library_Unit (Context_Item));\n+            Lib_Unit := Library_Unit (Context_Item);\n+            Action (Lib_Unit);\n+\n+            --  If the context item indicates that a package body is needed\n+            --  because of an instantiation in CU, traverse the body now,\n+            --  even if CU is not related to the main unit.\n+\n+            if Present (Withed_Body (Context_Item))\n+               and then Present (Corresponding_Body (Unit (Lib_Unit)))\n+            then\n+               Body_CU :=\n+                 Parent\n+                   (Unit_Declaration_Node\n+                     (Corresponding_Body (Unit (Lib_Unit))));\n+\n+               --  A body may have an implicit with on its own spec, in which\n+               --  case we must ignore this context item to prevent looping.\n+\n+               if Unit (CU) /= Unit (Body_CU) then\n+                  Action (Body_CU);\n+               end if;\n+            end if;\n          end if;\n \n          Context_Item := Next (Context_Item);"}, {"sha": "8f621ac48c69e856625e10b0a3e6d8b4e39446f3", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be257e995d7fc59dcdbfcdbb8d549a4418d97f3b/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be257e995d7fc59dcdbfcdbb8d549a4418d97f3b/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=be257e995d7fc59dcdbfcdbb8d549a4418d97f3b", "patch": "@@ -8831,6 +8831,19 @@ package body Sem_Res is\n             then\n                null;\n \n+            --  Finally, the expression may be a qualified expression whose\n+            --  own expression is a possibly overloaded function call. The\n+            --  qualified expression is needed to be disambiguate the call,\n+            --  but it appears in a context in which a name is needed, forcing\n+            --  the use of a conversion.\n+            --  In Ada2012 a qualified expression is a name, and this idiom\n+            --  is not needed any longer.\n+\n+            elsif Nkind (Orig_N) = N_Qualified_Expression\n+              and then Nkind (Expression (Orig_N)) = N_Function_Call\n+            then\n+               null;\n+\n             --  Here we give the redundant conversion warning. If it is an\n             --  entity, give the name of the entity in the message. If not,\n             --  just mention the expression."}, {"sha": "b1367fb4c168b13616929c4939a5838e2aabbe06", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be257e995d7fc59dcdbfcdbb8d549a4418d97f3b/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be257e995d7fc59dcdbfcdbb8d549a4418d97f3b/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=be257e995d7fc59dcdbfcdbb8d549a4418d97f3b", "patch": "@@ -1332,7 +1332,7 @@ package body Sprint is\n                Write_Str_With_Col_Check (\"abstract \");\n             end if;\n \n-            Write_Str_With_Col_Check_Sloc (\"new \");\n+            Write_Str_With_Col_Check (\"new \");\n \n             --  Ada 2005 (AI-231)\n "}]}