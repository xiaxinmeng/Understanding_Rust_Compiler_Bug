{"sha": "198fe1bfebf81e2a13b223bedcb41ed34d426862", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk4ZmUxYmZlYmY4MWUyYTEzYjIyM2JlZGNiNDFlZDM0ZDQyNjg2Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-05-13T07:50:38Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-05-13T07:50:38Z"}, "message": "re PR tree-optimization/57230 (tree-ssa-strlen incorrectly optimizes a strlen to 0)\n\n\tPR tree-optimization/57230\n\t* tree-ssa-strlen.c (handle_char_store): Record length for\n\tarray store from STRING_CST.\n\n\t* gcc.dg/strlenopt-24.c: New test.\n\nFrom-SVN: r198815", "tree": {"sha": "6222776f2033e37553cfe5ef2160701ddeed9a6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6222776f2033e37553cfe5ef2160701ddeed9a6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/198fe1bfebf81e2a13b223bedcb41ed34d426862", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/198fe1bfebf81e2a13b223bedcb41ed34d426862", "html_url": "https://github.com/Rust-GCC/gccrs/commit/198fe1bfebf81e2a13b223bedcb41ed34d426862", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/198fe1bfebf81e2a13b223bedcb41ed34d426862/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a60f32bdee43dcadac21f4e51ce0c43d7aa84a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a60f32bdee43dcadac21f4e51ce0c43d7aa84a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a60f32bdee43dcadac21f4e51ce0c43d7aa84a3"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "1f6e5c2b6574043fd12948c9741e8ca04964127f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/198fe1bfebf81e2a13b223bedcb41ed34d426862/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/198fe1bfebf81e2a13b223bedcb41ed34d426862/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=198fe1bfebf81e2a13b223bedcb41ed34d426862", "patch": "@@ -1,5 +1,9 @@\n 2013-05-13  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/57230\n+\t* tree-ssa-strlen.c (handle_char_store): Record length for\n+\tarray store from STRING_CST.\n+\n \tPR tree-optimization/57230\n \t* tree-ssa-strlen.c (handle_char_store): Add missing integer_zerop\n \tcheck."}, {"sha": "e465f2a4c8669111316cb51e1c096e6a022ba74f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/198fe1bfebf81e2a13b223bedcb41ed34d426862/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/198fe1bfebf81e2a13b223bedcb41ed34d426862/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=198fe1bfebf81e2a13b223bedcb41ed34d426862", "patch": "@@ -1,5 +1,8 @@\n 2013-05-13  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/57230\n+\t* gcc.dg/strlenopt-24.c: New test.\n+\n \tPR tree-optimization/57230\n \t* gcc.dg/strlenopt-23.c: New test.\n "}, {"sha": "962e04fded30b8b1f7dce42b2dcca511c1d03abd", "filename": "gcc/testsuite/gcc.dg/strlenopt-24.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/198fe1bfebf81e2a13b223bedcb41ed34d426862/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/198fe1bfebf81e2a13b223bedcb41ed34d426862/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-24.c?ref=198fe1bfebf81e2a13b223bedcb41ed34d426862", "patch": "@@ -0,0 +1,17 @@\n+/* PR tree-optimization/57230 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fdump-tree-strlen\" } */\n+\n+#include \"strlenopt.h\"\n+\n+int\n+main ()\n+{\n+  char p[] = \"hello world\";\n+  if (strlen (p) != 11)\n+    abort ();\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"strlen \\\\(\" 0 \"strlen\" } } *\n+/* { dg-final { cleanup-tree-dump \"strlen\" } } */"}, {"sha": "5ab37645ec6ca66d7d9494975353152a9ee38ef3", "filename": "gcc/tree-ssa-strlen.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/198fe1bfebf81e2a13b223bedcb41ed34d426862/gcc%2Ftree-ssa-strlen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/198fe1bfebf81e2a13b223bedcb41ed34d426862/gcc%2Ftree-ssa-strlen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-strlen.c?ref=198fe1bfebf81e2a13b223bedcb41ed34d426862", "patch": "@@ -1740,6 +1740,25 @@ handle_char_store (gimple_stmt_iterator *gsi)\n       if (si != NULL)\n \tsi->writable = true;\n     }\n+  else if (idx == 0\n+\t   && TREE_CODE (gimple_assign_rhs1 (stmt)) == STRING_CST\n+\t   && ssaname == NULL_TREE\n+\t   && TREE_CODE (TREE_TYPE (lhs)) == ARRAY_TYPE)\n+    {\n+      size_t l = strlen (TREE_STRING_POINTER (gimple_assign_rhs1 (stmt)));\n+      HOST_WIDE_INT a = int_size_in_bytes (TREE_TYPE (lhs));\n+      if (a > 0 && (unsigned HOST_WIDE_INT) a > l)\n+\t{\n+\t  int idx = new_addr_stridx (lhs);\n+\t  if (idx != 0)\n+\t    {\n+\t      si = new_strinfo (build_fold_addr_expr (lhs), idx,\n+\t\t\t\tbuild_int_cst (size_type_node, l));\n+\t      set_strinfo (idx, si);\n+\t      si->dont_invalidate = true;\n+\t    }\n+\t}\n+    }\n \n   if (si != NULL && initializer_zerop (gimple_assign_rhs1 (stmt)))\n     {"}]}