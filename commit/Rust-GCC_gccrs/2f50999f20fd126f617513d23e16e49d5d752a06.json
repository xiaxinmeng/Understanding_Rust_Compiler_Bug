{"sha": "2f50999f20fd126f617513d23e16e49d5d752a06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY1MDk5OWYyMGZkMTI2ZjYxNzUxM2QyM2UxNmU0OWQ1ZDc1MmEwNg==", "commit": {"author": {"name": "Gerald Pfeifer", "email": "pfeifer@dbai.tuwien.ac.at", "date": "2003-04-18T18:26:20Z"}, "committer": {"name": "Gerald Pfeifer", "email": "gerald@gcc.gnu.org", "date": "2003-04-18T18:26:20Z"}, "message": "Makefile.tpl (MAKEINFOFLAGS): Default to --split-size=5000000.\n\n\t* Makefile.tpl (MAKEINFOFLAGS): Default to --split-size=5000000.\n\t* Makefile.in: Regenerate.\n\nFrom-SVN: r65786", "tree": {"sha": "bbaa29cb06186c2389932521b366769c575f49dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbaa29cb06186c2389932521b366769c575f49dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f50999f20fd126f617513d23e16e49d5d752a06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f50999f20fd126f617513d23e16e49d5d752a06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f50999f20fd126f617513d23e16e49d5d752a06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f50999f20fd126f617513d23e16e49d5d752a06/comments", "author": null, "committer": null, "parents": [{"sha": "59c60a985d0f5a3c0d618950cd1b608114813968", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59c60a985d0f5a3c0d618950cd1b608114813968", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59c60a985d0f5a3c0d618950cd1b608114813968"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "aef37995e399e3013d7ed25e051aba56a1cf4d80", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f50999f20fd126f617513d23e16e49d5d752a06/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f50999f20fd126f617513d23e16e49d5d752a06/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=2f50999f20fd126f617513d23e16e49d5d752a06", "patch": "@@ -1,3 +1,8 @@\n+2003-04-18  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n+\n+\t* Makefile.tpl (MAKEINFOFLAGS): Default to --split-size=5000000.\n+\t* Makefile.in: Regenerate.\n+\n 2003-04-18  Jakub Jelinek  <jakub@redhat.com>\n \n \t* configure.in (powerpc64*-*-linux*): Remove."}, {"sha": "1b993f59e9c539b080ec2a6d91bbc2a5c7095d21", "filename": "Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f50999f20fd126f617513d23e16e49d5d752a06/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f50999f20fd126f617513d23e16e49d5d752a06/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=2f50999f20fd126f617513d23e16e49d5d752a06", "patch": "@@ -203,7 +203,8 @@ USUAL_MAKEINFO = `if [ -f $$r/texinfo/makeinfo/makeinfo ] ; \\\n # This just becomes part of the MAKEINFO definition passed down to\n # sub-makes.  It lets flags be given on the command line while still\n # using the makeinfo from the object tree.\n-MAKEINFOFLAGS =\n+# (Default to avoid splitting info files by setting the threshold high.)\n+MAKEINFOFLAGS = --split-size=5000000\n \n EXPECT = `if [ -f $$r/expect/expect ] ; \\\n \tthen echo $$r/expect/expect ; \\"}, {"sha": "314c44977d823d2a282245d1c65e598ce2b6eb6a", "filename": "Makefile.tpl", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f50999f20fd126f617513d23e16e49d5d752a06/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f50999f20fd126f617513d23e16e49d5d752a06/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=2f50999f20fd126f617513d23e16e49d5d752a06", "patch": "@@ -206,7 +206,8 @@ USUAL_MAKEINFO = `if [ -f $$r/texinfo/makeinfo/makeinfo ] ; \\\n # This just becomes part of the MAKEINFO definition passed down to\n # sub-makes.  It lets flags be given on the command line while still\n # using the makeinfo from the object tree.\n-MAKEINFOFLAGS =\n+# (Default to avoid splitting info files by setting the threshold high.)\n+MAKEINFOFLAGS = --split-size=5000000\n \n EXPECT = `if [ -f $$r/expect/expect ] ; \\\n \tthen echo $$r/expect/expect ; \\"}]}