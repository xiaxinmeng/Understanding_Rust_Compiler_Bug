{"sha": "bdea67faf3e8e7a7791444f5f8b0f0f3d38fa1d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRlYTY3ZmFmM2U4ZTdhNzc5MTQ0NGY1ZjhiMGYwZjNkMzhmYTFkMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-11T12:58:05Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-11T12:58:05Z"}, "message": "(PVPROTO): New macro.\n\nFrom-SVN: r6743", "tree": {"sha": "10bff3fb62251af34dfbf16cde8975b650cc499a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10bff3fb62251af34dfbf16cde8975b650cc499a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bdea67faf3e8e7a7791444f5f8b0f0f3d38fa1d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdea67faf3e8e7a7791444f5f8b0f0f3d38fa1d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdea67faf3e8e7a7791444f5f8b0f0f3d38fa1d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdea67faf3e8e7a7791444f5f8b0f0f3d38fa1d1/comments", "author": null, "committer": null, "parents": [{"sha": "7d49f92a42266a582f1c2be94b8ac615240c74ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d49f92a42266a582f1c2be94b8ac615240c74ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d49f92a42266a582f1c2be94b8ac615240c74ce"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "1b8c95156105a0fdf28d884377ebb57b26ea6e9c", "filename": "gcc/rtl.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdea67faf3e8e7a7791444f5f8b0f0f3d38fa1d1/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdea67faf3e8e7a7791444f5f8b0f0f3d38fa1d1/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=bdea67faf3e8e7a7791444f5f8b0f0f3d38fa1d1", "patch": "@@ -153,9 +153,11 @@ typedef struct rtx_def\n \n #ifndef VPROTO\n #ifdef __STDC__\n+#define PVPROTO(ARGS)\t\tARGS\n #define VPROTO(ARGS)\t\tARGS\n #define VA_START(va_list,var)\tva_start(va_list,var)\n #else\n+#define PVPROTO(ARGS)\t\t()\n #define VPROTO(ARGS)\t\t(va_alist) va_dcl\n #define VA_START(va_list,var)\tva_start(va_list)\n #endif\n@@ -655,8 +657,9 @@ extern rtx plus_constant_for_output_wide PROTO((rtx, HOST_WIDE_INT));\n \n extern rtx bc_gen_rtx ();\n \n-extern rtx gen_rtx\t\t\tPROTO((enum rtx_code, enum machine_mode, ...));\n-extern rtvec gen_rtvec\t\t\tPROTO((int, ...));\n+extern rtx gen_rtx\t\t\tPVPROTO((enum rtx_code,\n+\t\t\t\t\t\t enum machine_mode, ...));\n+extern rtvec gen_rtvec\t\t\tPVPROTO((int, ...));\n \n #ifdef BUFSIZ\t\t\t/* stdio.h has been included */\n extern rtx read_rtx\t\t\tPROTO((FILE *));"}, {"sha": "0294dfbd53d4b894b6d7b85cb384f0979a6e7b95", "filename": "gcc/tree.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdea67faf3e8e7a7791444f5f8b0f0f3d38fa1d1/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdea67faf3e8e7a7791444f5f8b0f0f3d38fa1d1/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=bdea67faf3e8e7a7791444f5f8b0f0f3d38fa1d1", "patch": "@@ -999,9 +999,11 @@ union tree_node\n \n #ifndef VPROTO\n #ifdef __STDC__\n+#define PVPROTO(ARGS)\t\tARGS\n #define VPROTO(ARGS)            ARGS\n #define VA_START(va_list,var)  va_start(va_list,var)\n #else\n+#define PVPROTO(ARGS)\t\t()\n #define VPROTO(ARGS)            (va_alist) va_dcl\n #define VA_START(va_list,var)  va_start(va_list)\n #endif\n@@ -1082,9 +1084,9 @@ extern tree get_identifier\t\tPROTO((char *));\n #define build_int_2(LO,HI)  \\\n   build_int_2_wide ((HOST_WIDE_INT) (LO), (HOST_WIDE_INT) (HI))\n \n-extern tree build\t\t\tPROTO((enum tree_code, tree, ...));\n-extern tree build_nt\t\t\tPROTO((enum tree_code, ...));\n-extern tree build_parse_node\t\tPROTO((enum tree_code, ...));\n+extern tree build\t\t\tPVPROTO((enum tree_code, tree, ...));\n+extern tree build_nt\t\t\tPVPROTO((enum tree_code, ...));\n+extern tree build_parse_node\t\tPVPROTO((enum tree_code, ...));\n \n extern tree build_int_2_wide\t\tPROTO((HOST_WIDE_INT, HOST_WIDE_INT));\n extern tree build_real\t\t\tPROTO((tree, REAL_VALUE_TYPE));"}]}