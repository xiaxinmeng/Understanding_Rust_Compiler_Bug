{"sha": "f9e8581ad41c49a22d1b9e38c3a230956cd61312", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjllODU4MWFkNDFjNDlhMjJkMWI5ZTM4YzNhMjMwOTU2Y2Q2MTMxMg==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2004-08-03T13:52:49Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2004-08-03T13:52:49Z"}, "message": "arm-cores.def: Sort by architecture.\n\n* arm-cores.def: Sort by architecture.  Add arm946es, arm966es,\narm968es, arm10e, arm1020e, arm1022e.\n* invoke.texi: Update list of ARM cores.\n* arm-tune.md: Regenerate.\n\nFrom-SVN: r85476", "tree": {"sha": "e65a6f3c11706bc80a897974163dd4ea8d4fdaa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e65a6f3c11706bc80a897974163dd4ea8d4fdaa3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9e8581ad41c49a22d1b9e38c3a230956cd61312", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9e8581ad41c49a22d1b9e38c3a230956cd61312", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9e8581ad41c49a22d1b9e38c3a230956cd61312", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9e8581ad41c49a22d1b9e38c3a230956cd61312/comments", "author": null, "committer": null, "parents": [{"sha": "73c3d5687f767d36a4084194425ed1b994cca541", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73c3d5687f767d36a4084194425ed1b994cca541", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73c3d5687f767d36a4084194425ed1b994cca541"}], "stats": {"total": 69, "additions": 49, "deletions": 20}, "files": [{"sha": "30dfb57432a5e22d199f4a0049d7630b4e5ba38a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9e8581ad41c49a22d1b9e38c3a230956cd61312/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9e8581ad41c49a22d1b9e38c3a230956cd61312/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f9e8581ad41c49a22d1b9e38c3a230956cd61312", "patch": "@@ -1,3 +1,10 @@\n+2004-08-03  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* arm-cores.def: Sort by architecture.  Add arm946es, arm966es,\n+\tarm968es, arm10e, arm1020e, arm1022e.\n+\t* invoke.texi: Update list of ARM cores.\n+\t* arm-tune.md: Regenerate.\n+\n 2004-08-03  Richard Earnshaw <rearnsha@arm.com>\n \n \t* arm/gentune.sh: New file."}, {"sha": "be3ade3c1ad4c989c20843a7e891788d3579a6c5", "filename": "gcc/config/arm/arm-cores.def", "status": "modified", "additions": 38, "deletions": 18, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9e8581ad41c49a22d1b9e38c3a230956cd61312/gcc%2Fconfig%2Farm%2Farm-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9e8581ad41c49a22d1b9e38c3a230956cd61312/gcc%2Fconfig%2Farm%2Farm-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cores.def?ref=f9e8581ad41c49a22d1b9e38c3a230956cd61312", "patch": "@@ -35,22 +35,20 @@\n    \n    Some tools assume no whitespace up to the first \",\" in each entry.  */\n \n+/* V2/V2A Architecture Processors */\n ARM_CORE(arm2,\t\t2,\tFL_CO_PROC | FL_MODE26, slowmul)\n ARM_CORE(arm250,\t2,\tFL_CO_PROC | FL_MODE26, slowmul)\n ARM_CORE(arm3,\t\t2,\tFL_CO_PROC | FL_MODE26, slowmul)\n+\n+/* V3 Architecture Processors */\n ARM_CORE(arm6,\t\t3,\tFL_CO_PROC | FL_MODE26, slowmul)\n ARM_CORE(arm60,\t\t3,\tFL_CO_PROC | FL_MODE26, slowmul)\n ARM_CORE(arm600,\t3,\tFL_CO_PROC | FL_MODE26, slowmul)\n ARM_CORE(arm610,\t3,\t             FL_MODE26, slowmul)\n ARM_CORE(arm620,\t3,\tFL_CO_PROC | FL_MODE26, slowmul)\n ARM_CORE(arm7,\t\t3,\tFL_CO_PROC | FL_MODE26, slowmul)\n-/* arm7m doesn't exist on its own, but only with D, (and I), but\n-   those don't alter the code, so arm7m is sometimes used.  */\n-ARM_CORE(arm7m,\t\t3M,\tFL_CO_PROC | FL_MODE26, fastmul)\n ARM_CORE(arm7d,\t\t3,\tFL_CO_PROC | FL_MODE26, slowmul)\n-ARM_CORE(arm7dm,\t3M,\tFL_CO_PROC | FL_MODE26, fastmul)\n ARM_CORE(arm7di,\t3,\tFL_CO_PROC | FL_MODE26, slowmul)\n-ARM_CORE(arm7dmi,\t3M,\tFL_CO_PROC | FL_MODE26, fastmul)\n ARM_CORE(arm70,\t\t3,\tFL_CO_PROC | FL_MODE26, slowmul)\n ARM_CORE(arm700,\t3,\tFL_CO_PROC | FL_MODE26, slowmul)\n ARM_CORE(arm700i,\t3,\tFL_CO_PROC | FL_MODE26, slowmul)\n@@ -61,32 +59,54 @@ ARM_CORE(arm7100,\t3,\t             FL_MODE26, slowmul)\n ARM_CORE(arm7500,\t3,\t             FL_MODE26, slowmul)\n /* Doesn't have an external co-proc, but does have embedded fpa.  */\n ARM_CORE(arm7500fe,\t3,\tFL_CO_PROC | FL_MODE26, slowmul)\n+\n+/* V3M Architecture Processors */\n+/* arm7m doesn't exist on its own, but only with D, (and I), but\n+   those don't alter the code, so arm7m is sometimes used.  */\n+ARM_CORE(arm7m,\t\t3M,\tFL_CO_PROC | FL_MODE26, fastmul)\n+ARM_CORE(arm7dm,\t3M,\tFL_CO_PROC | FL_MODE26, fastmul)\n+ARM_CORE(arm7dmi,\t3M,\tFL_CO_PROC | FL_MODE26, fastmul)\n+\n /* V4 Architecture Processors */\n+ARM_CORE(arm8,\t\t4,\t             FL_MODE26 | FL_LDSCHED, fastmul)\n+ARM_CORE(arm810,\t4,\t             FL_MODE26 | FL_LDSCHED, fastmul)\n+ARM_CORE(strongarm,\t4,\t             FL_MODE26 | FL_LDSCHED | FL_STRONG, fastmul)\n+ARM_CORE(strongarm110,\t4,\t             FL_MODE26 | FL_LDSCHED | FL_STRONG, fastmul)\n+ARM_CORE(strongarm1100,\t4,\t             FL_MODE26 | FL_LDSCHED | FL_STRONG, fastmul)\n+ARM_CORE(strongarm1110,\t4,\t             FL_MODE26 | FL_LDSCHED | FL_STRONG, fastmul)\n+\n+/* V4T Architecture Processors */\n ARM_CORE(arm7tdmi,\t4T,\tFL_CO_PROC            , fastmul)\n ARM_CORE(arm710t,\t4T,\t                      0 , fastmul)\n ARM_CORE(arm720t,\t4T,\t                      0 , fastmul)\n ARM_CORE(arm740t,\t4T,\t                      0 , fastmul)\n-ARM_CORE(arm8,\t\t4,\t             FL_MODE26 | FL_LDSCHED, fastmul)\n-ARM_CORE(arm810,\t4,\t             FL_MODE26 | FL_LDSCHED, fastmul)\n ARM_CORE(arm9,\t\t4T,\t                         FL_LDSCHED, fastmul)\n-ARM_CORE(arm920,\t4,\t                         FL_LDSCHED, fastmul)\n+ARM_CORE(arm9tdmi,\t4T,\t                         FL_LDSCHED, fastmul)\n+ARM_CORE(arm920,\t4T,\t                         FL_LDSCHED, fastmul)\n ARM_CORE(arm920t,\t4T,\t                         FL_LDSCHED, fastmul)\n+ARM_CORE(arm922t,\t4T,\t                         FL_LDSCHED, fastmul)\n ARM_CORE(arm940t,\t4T,\t                         FL_LDSCHED, fastmul)\n-ARM_CORE(arm9tdmi,\t4T,\t                         FL_LDSCHED, fastmul)\n-ARM_CORE(arm9e,\t\t4,\t                         FL_LDSCHED, 9e)\n-\n ARM_CORE(ep9312,\t4T,\t                         FL_LDSCHED |             FL_CIRRUS, fastmul)\n-ARM_CORE(strongarm,\t4,\t             FL_MODE26 | FL_LDSCHED | FL_STRONG, fastmul)\n-ARM_CORE(strongarm110,\t4,\t             FL_MODE26 | FL_LDSCHED | FL_STRONG, fastmul)\n-ARM_CORE(strongarm1100,\t4,\t             FL_MODE26 | FL_LDSCHED | FL_STRONG, fastmul)\n-ARM_CORE(strongarm1110,\t4,\t             FL_MODE26 | FL_LDSCHED | FL_STRONG, fastmul)\n-/* V5 Architecture Processors */\n+\n+/* V5T Architecture Processors */\n ARM_CORE(arm10tdmi,\t5T,\t                         FL_LDSCHED, fastmul)\n ARM_CORE(arm1020t,\t5T,\t                         FL_LDSCHED, fastmul)\n-ARM_CORE(arm926ejs,\t5TEJ,\t                         0, 9e)\n-ARM_CORE(arm1026ejs,\t5TEJ,\t                         0, 9e)\n+\n+/* V5TE Architecture Processors */\n+ARM_CORE(arm9e,\t\t5TE,\t                         FL_LDSCHED, 9e)\n+ARM_CORE(arm946es,\t5TE,\t                         FL_LDSCHED, 9e)\n+ARM_CORE(arm966es,\t5TE,\t                         FL_LDSCHED, 9e)\n+ARM_CORE(arm968es,\t5TE,\t                         FL_LDSCHED, 9e)\n+ARM_CORE(arm10e,\t5TE,\t\t\t\t FL_LDSCHED, fastmul)\n+ARM_CORE(arm1020e,\t5TE,\t\t\t\t FL_LDSCHED, fastmul)\n+ARM_CORE(arm1022e,\t5TE,\t\t\t\t FL_LDSCHED, fastmul)\n ARM_CORE(xscale,\t5TE,\t                         FL_LDSCHED | FL_STRONG | FL_XSCALE, xscale)\n ARM_CORE(iwmmxt,\t5TE,\t                         FL_LDSCHED | FL_STRONG | FL_XSCALE | FL_IWMMXT, xscale)\n+\n+/* V5TEJ Architecture Processors */\n+ARM_CORE(arm926ejs,\t5TEJ,\t                         0, 9e)\n+ARM_CORE(arm1026ejs,\t5TEJ,\t                         0, 9e)\n+\n /* V6 Architecture Processors */\n ARM_CORE(arm1136js,\t6J,\t                         0, 9e)\n ARM_CORE(arm1136jfs,\t6J,\t                         FL_VFPV2, 9e)"}, {"sha": "8bdfd20e162d9d1dd2de2cab9367e90e0689fb08", "filename": "gcc/config/arm/arm-tune.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9e8581ad41c49a22d1b9e38c3a230956cd61312/gcc%2Fconfig%2Farm%2Farm-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9e8581ad41c49a22d1b9e38c3a230956cd61312/gcc%2Fconfig%2Farm%2Farm-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tune.md?ref=f9e8581ad41c49a22d1b9e38c3a230956cd61312", "patch": "@@ -1,5 +1,5 @@\n ;; -*- buffer-read-only: t -*-\n ;; Generated automatically by gentune.sh from arm-cores.def\n (define_attr \"tune\"\n-\t\"arm2,arm250,arm3,arm6,arm60,arm600,arm610,arm620,arm7,arm7m,arm7d,arm7dm,arm7di,arm7dmi,arm70,arm700,arm700i,arm710,arm720,arm710c,arm7100,arm7500,arm7500fe,arm7tdmi,arm710t,arm720t,arm740t,arm8,arm810,arm9,arm920,arm920t,arm940t,arm9tdmi,arm9e,ep9312,strongarm,strongarm110,strongarm1100,strongarm1110,arm10tdmi,arm1020t,arm926ejs,arm1026ejs,xscale,iwmmxt,arm1136js,arm1136jfs\"\n+\t\"arm2,arm250,arm3,arm6,arm60,arm600,arm610,arm620,arm7,arm7d,arm7di,arm70,arm700,arm700i,arm710,arm720,arm710c,arm7100,arm7500,arm7500fe,arm7m,arm7dm,arm7dmi,arm8,arm810,strongarm,strongarm110,strongarm1100,strongarm1110,arm7tdmi,arm710t,arm720t,arm740t,arm9,arm9tdmi,arm920,arm920t,arm922t,arm940t,ep9312,arm10tdmi,arm1020t,arm9e,arm946es,arm966es,arm968es,arm10e,arm1020e,arm1022e,xscale,iwmmxt,arm926ejs,arm1026ejs,arm1136js,arm1136jfs\"\n \t(const (symbol_ref \"arm_tune\")))"}, {"sha": "d620f481fd8acf440c5e5e67b01a8ec308b66376", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9e8581ad41c49a22d1b9e38c3a230956cd61312/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9e8581ad41c49a22d1b9e38c3a230956cd61312/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=f9e8581ad41c49a22d1b9e38c3a230956cd61312", "patch": "@@ -6502,8 +6502,10 @@ assembly code.  Permissible names are: @samp{arm2}, @samp{arm250},\n @samp{arm7500}, @samp{arm7500fe}, @samp{arm7tdmi}, @samp{arm8},\n @samp{strongarm}, @samp{strongarm110}, @samp{strongarm1100},\n @samp{arm8}, @samp{arm810}, @samp{arm9}, @samp{arm9e}, @samp{arm920},\n-@samp{arm920t}, @samp{arm926ejs}, @samp{arm940t}, @samp{arm9tdmi},\n+@samp{arm920t}, @samp{arm922t}, @samp{arm946es}, @samp{arm966es},\n+@samp{arm968es}, @samp{arm926ejs}, @samp{arm940t}, @samp{arm9tdmi},\n @samp{arm10tdmi}, @samp{arm1020t}, @samp{arm1026ejs},\n+@samp{arm10e}, @samp{arm1020e}, @samp{arm1022e},\n @samp{arm1136js}, @samp{arm1136jfs} ,@samp{xscale}, @samp{iwmmxt},\n @samp{ep9312}.\n "}]}