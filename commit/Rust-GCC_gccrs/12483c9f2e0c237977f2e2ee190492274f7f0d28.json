{"sha": "12483c9f2e0c237977f2e2ee190492274f7f0d28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI0ODNjOWYyZTBjMjM3OTc3ZjJlMmVlMTkwNDkyMjc0ZjdmMGQyOA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2003-09-05T08:38:44Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-09-05T08:38:44Z"}, "message": "re PR c++/11922 (ICE on type_unification_real)\n\ncp:\n\tPR c++/11922\n\t* pt.c (tsubst_qualified_id): Make sure we get a non-type.\n\t(tsubst_expr, tsubst_copy_and_build): Pass false, not zero, as\n\tis_type_p to lookup_qualified_name.\n\n\t* semantics.c (finish_call_expr): Refactor some code.\ntestsuite:\n\tPR c++/11922\n\t* g++/dg/template/qualified-id1.C: New test.\n\nFrom-SVN: r71109", "tree": {"sha": "0f5cce31b1086b96c55db1488aad78c82b94fc6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f5cce31b1086b96c55db1488aad78c82b94fc6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12483c9f2e0c237977f2e2ee190492274f7f0d28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12483c9f2e0c237977f2e2ee190492274f7f0d28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12483c9f2e0c237977f2e2ee190492274f7f0d28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12483c9f2e0c237977f2e2ee190492274f7f0d28/comments", "author": null, "committer": null, "parents": [{"sha": "8e1daa341261864912c3b19c87c78babd4a80edf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e1daa341261864912c3b19c87c78babd4a80edf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e1daa341261864912c3b19c87c78babd4a80edf"}], "stats": {"total": 63, "additions": 55, "deletions": 8}, "files": [{"sha": "1f7892735a90f0911491317fd8c37b4c2310a1c6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12483c9f2e0c237977f2e2ee190492274f7f0d28/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12483c9f2e0c237977f2e2ee190492274f7f0d28/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=12483c9f2e0c237977f2e2ee190492274f7f0d28", "patch": "@@ -1,5 +1,12 @@\n 2003-09-05  Nathan Sidwell  <nathan@codesourcery.com>\n \n+\tPR c++/11922\n+\t* pt.c (tsubst_qualified_id): Make sure we get a non-type.\n+\t(tsubst_expr, tsubst_copy_and_build): Pass false, not zero, as\n+\tis_type_p to lookup_qualified_name.\n+\n+\t* semantics.c (finish_call_expr): Refactor some code.\n+\n \tPR c++/12037\n \t* cp-tree.h (COMPOUND_EXPR_OVERLOADED): New.\n \t(build_min_non_dep): Declare."}, {"sha": "f8f38f0a87c5c1050f56f94a817377665864a69d", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12483c9f2e0c237977f2e2ee190492274f7f0d28/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12483c9f2e0c237977f2e2ee190492274f7f0d28/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=12483c9f2e0c237977f2e2ee190492274f7f0d28", "patch": "@@ -7091,7 +7091,17 @@ tsubst_qualified_id (tree qualified_id, tree args,\n   my_friendly_assert (!dependent_type_p (scope), 20030729);\n   \n   if (!BASELINK_P (name) && !DECL_P (expr))\n-    expr = lookup_qualified_name (scope, expr, /*is_type_p=*/0, false);\n+    {\n+      expr = lookup_qualified_name (scope, expr, /*is_type_p=*/0, false);\n+      if (TREE_CODE (TREE_CODE (expr) == TEMPLATE_DECL\n+\t\t     ? DECL_TEMPLATE_RESULT (expr) : expr) == TYPE_DECL)\n+\t{\n+\t  if (complain & tf_error)\n+\t    error (\"`%E' names a type, but a non-type is expected\",\n+\t\t   qualified_id);\n+\t  return error_mark_node;\n+\t}\n+    }\n   \n   if (DECL_P (expr))\n     check_accessibility_of_qualified_id (expr, /*object_type=*/NULL_TREE,\n@@ -7549,7 +7559,8 @@ tsubst_expr (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \t    \n \t    scope = tsubst_expr (scope, args, complain, in_decl);\n \t    decl = lookup_qualified_name (scope, name,\n-\t\t\t\t\t  /*is_type_p=*/0, /*complain=*/false);\n+\t\t\t\t\t  /*is_type_p=*/false,\n+\t\t\t\t\t  /*complain=*/false);\n \t    if (decl == error_mark_node)\n \t      qualified_name_lookup_error (scope, name);\n \t    else\n@@ -8225,7 +8236,8 @@ tsubst_copy_and_build (tree t,\n \t    tmpl = TREE_OPERAND (TREE_OPERAND (member, 1), 0);\n \t    args = TREE_OPERAND (TREE_OPERAND (member, 1), 1);\n \t    member = lookup_qualified_name (TREE_OPERAND (member, 0), tmpl, \n-\t\t\t\t\t    /*is_type=*/0, /*complain=*/false);\n+\t\t\t\t\t    /*is_type_p=*/false,\n+\t\t\t\t\t    /*complain=*/false);\n \t    if (BASELINK_P (member))\n \t      BASELINK_FUNCTIONS (member) \n \t\t= build_nt (TEMPLATE_ID_EXPR, BASELINK_FUNCTIONS (member),"}, {"sha": "d8ac60d9c5d165e1bd0ad58087f3845b19a4119e", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12483c9f2e0c237977f2e2ee190492274f7f0d28/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12483c9f2e0c237977f2e2ee190492274f7f0d28/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=12483c9f2e0c237977f2e2ee190492274f7f0d28", "patch": "@@ -1622,12 +1622,11 @@ finish_call_expr (tree fn, tree args, bool disallow_virtual, bool koenig_p)\n      to refer to it.  */\n   if (!BASELINK_P (fn) && is_overloaded_fn (fn))\n     {\n-      tree f;\n+      tree f = fn;\n \n-      if (TREE_CODE (fn) == TEMPLATE_ID_EXPR)\n-\tf = get_first_fn (TREE_OPERAND (fn, 0));\n-      else\n-\tf = get_first_fn (fn);\n+      if (TREE_CODE (f) == TEMPLATE_ID_EXPR)\n+\tf = TREE_OPERAND (f, 0);\n+      f = get_first_fn (f);\n       if (DECL_FUNCTION_MEMBER_P (f))\n \t{\n \t  tree type = currently_open_derived_class (DECL_CONTEXT (f));"}, {"sha": "2b99c09c6c5ac8d9fc617fc691857bc4a0abd4ab", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12483c9f2e0c237977f2e2ee190492274f7f0d28/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12483c9f2e0c237977f2e2ee190492274f7f0d28/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=12483c9f2e0c237977f2e2ee190492274f7f0d28", "patch": "@@ -1,5 +1,8 @@\n 2003-09-05  Nathan Sidwell  <nathan@codesourcery.com>\n \n+\tPR c++/11922\n+\t* g++/dg/template/qualified-id1.C: New test.\n+\t\n \tPR c++/12037\n \t* g++.dg/warn/noeffect4.C: New test.\n "}, {"sha": "bbe23c2743b3fa89dc317183a005e2902e286b24", "filename": "gcc/testsuite/g++.dg/template/qualified-id1.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12483c9f2e0c237977f2e2ee190492274f7f0d28/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualified-id1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12483c9f2e0c237977f2e2ee190492274f7f0d28/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualified-id1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualified-id1.C?ref=12483c9f2e0c237977f2e2ee190492274f7f0d28", "patch": "@@ -0,0 +1,26 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 4 Sep 2003 <nathan@codesourcery.com>\n+// Origin Volker Reichelt reichelt@igpm.rwth-aachen.de\n+\n+// PR 11922\n+\n+struct A\n+{\n+  template <bool> struct B;\n+  struct C;\n+};\n+\n+template <> struct A::B<false> {};\n+\n+template <typename T> void foo()\n+{\n+  T::C (); // { dg-error \"names a type\" \"\" }\n+  T::template B<false>(); // { dg-error \"names a type\" \"\" }\n+}\n+\n+void bar()\n+{\n+  foo<A>(); // { dg-error \"instantiated\" \"\" }\n+}"}]}