{"sha": "ae5570023f682b92235b7046ba693622686aceae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU1NTcwMDIzZjY4MmI5MjIzNWI3MDQ2YmE2OTM2MjI2ODZhY2VhZQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2002-11-27T22:21:11Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-11-27T22:21:11Z"}, "message": "h8300.c (h8300_shift_costs): New.\n\n\t* config/h8300/h8300.c (h8300_shift_costs): New.\n\t* config/h8300/h8300.h (RTX_COSTS): Use h8300_shift_costs.\n\t* config/h8300/h8300-protos.h: Add a prototype for\n\th8300_shift_costs.\n\nFrom-SVN: r59588", "tree": {"sha": "36ba029b437a737fa3ad1da2c07892c511209da7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36ba029b437a737fa3ad1da2c07892c511209da7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae5570023f682b92235b7046ba693622686aceae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae5570023f682b92235b7046ba693622686aceae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae5570023f682b92235b7046ba693622686aceae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae5570023f682b92235b7046ba693622686aceae/comments", "author": null, "committer": null, "parents": [{"sha": "ebe637e3c290a6d149300c0196f2453f67c073e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebe637e3c290a6d149300c0196f2453f67c073e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebe637e3c290a6d149300c0196f2453f67c073e6"}], "stats": {"total": 54, "additions": 40, "deletions": 14}, "files": [{"sha": "34753fb29a4582252e440c6951e700604262fb3e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae5570023f682b92235b7046ba693622686aceae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae5570023f682b92235b7046ba693622686aceae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae5570023f682b92235b7046ba693622686aceae", "patch": "@@ -1,3 +1,10 @@\n+2002-11-27  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.c (h8300_shift_costs): New.\n+\t* config/h8300/h8300.h (RTX_COSTS): Use h8300_shift_costs.\n+\t* config/h8300/h8300-protos.h: Add a prototype for\n+\th8300_shift_costs.\n+\n 2002-11-27  Jim Wilson  <wilson@redhat.com>\n \n         * config/rs6000/spe.md (spu_evsplatfi, spu_evsplati): Swap operands"}, {"sha": "c9f506ae410c7c69336460e3ca893372164b4a4e", "filename": "gcc/config/h8300/h8300-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae5570023f682b92235b7046ba693622686aceae/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae5570023f682b92235b7046ba693622686aceae/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h?ref=ae5570023f682b92235b7046ba693622686aceae", "patch": "@@ -32,6 +32,7 @@ extern const char *emit_a_rotate PARAMS ((enum rtx_code, rtx *));\n extern const char *output_simode_bld PARAMS ((int, rtx[]));\n extern void print_operand_address PARAMS ((FILE *, rtx));\n extern int const_costs PARAMS ((rtx, enum rtx_code, enum rtx_code));\n+extern int h8300_shift_costs PARAMS ((rtx));\n extern void print_operand PARAMS ((FILE *, rtx, int));\n extern void final_prescan_insn PARAMS ((rtx, rtx *, int));\n extern int do_movsi PARAMS ((rtx[]));"}, {"sha": "93807a09a06b9b14901ca4a681eb490d123596ca", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae5570023f682b92235b7046ba693622686aceae/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae5570023f682b92235b7046ba693622686aceae/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=ae5570023f682b92235b7046ba693622686aceae", "patch": "@@ -1134,6 +1134,24 @@ const_costs (r, c, outer_code)\n       return 4;\n     }\n }\n+\n+int\n+h8300_shift_costs (x)\n+     rtx x;\n+{\n+  rtx operands[4];\n+\n+  if (GET_MODE (x) != QImode\n+      && GET_MODE (x) != HImode\n+      && GET_MODE (x) != SImode)\n+    return 100;\n+\n+  operands[0] = NULL;\n+  operands[1] = NULL;\n+  operands[2] = XEXP (x, 1);\n+  operands[3] = x;\n+  return compute_a_shift_length (NULL, operands);\n+}\n \f\n /* Documentation for the machine specific operand escapes:\n "}, {"sha": "63886803efbe5dbe0f69ae44bd0804e1fe6a6f27", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae5570023f682b92235b7046ba693622686aceae/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae5570023f682b92235b7046ba693622686aceae/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=ae5570023f682b92235b7046ba693622686aceae", "patch": "@@ -1020,20 +1020,20 @@ struct cum_arg\n \n /* Provide the costs of a rtl expression.  This is in the body of a\n    switch on CODE.  */\n-/* ??? Shifts need to have a *much* higher cost than this.  */\n-\n-#define RTX_COSTS(RTX, CODE, OUTER_CODE)\t\\\n-  case MOD:\t\t\t\t\t\\\n-  case DIV:\t\t\t\t\t\\\n-    return 60;\t\t\t\t\t\\\n-  case MULT:\t\t\t\t\t\\\n-    return 20;\t\t\t\t\t\\\n-  case ASHIFT:\t\t\t\t\t\\\n-  case ASHIFTRT:\t\t\t\t\\\n-  case LSHIFTRT:\t\t\t\t\\\n-  case ROTATE:\t\t\t\t\t\\\n-  case ROTATERT:\t\t\t\t\\\n-    if (GET_MODE (RTX) == HImode) return 2;\t\\\n+\n+#define RTX_COSTS(RTX, CODE, OUTER_CODE)\t\t\\\n+  case MOD:\t\t\t\t\t\t\\\n+  case DIV:\t\t\t\t\t\t\\\n+    return 60;\t\t\t\t\t\t\\\n+  case MULT:\t\t\t\t\t\t\\\n+    return 20;\t\t\t\t\t\t\\\n+  case ASHIFT:\t\t\t\t\t\t\\\n+  case ASHIFTRT:\t\t\t\t\t\\\n+  case LSHIFTRT:\t\t\t\t\t\\\n+    return COSTS_N_INSNS (h8300_shift_costs (RTX));\t\\\n+  case ROTATE:\t\t\t\t\t\t\\\n+  case ROTATERT:\t\t\t\t\t\\\n+    if (GET_MODE (RTX) == HImode) return 2;\t\t\\\n     return 8;\n \n /* Tell final.c how to eliminate redundant test instructions.  */"}]}