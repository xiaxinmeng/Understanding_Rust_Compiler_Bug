{"sha": "d1f45df55be8f73a75b878aa409aae1d8786759e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFmNDVkZjU1YmU4ZjczYTc1Yjg3OGFhNDA5YWFlMWQ4Nzg2NzU5ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-03-17T03:11:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-03-17T03:11:07Z"}, "message": "decl.c (grokdeclarator): Assert that we won't see a pointer to METHOD_TYPE.\n\n\t* decl.c (grokdeclarator): Assert that we won't see a pointer to\n\tMETHOD_TYPE.\n\nFrom-SVN: r196748", "tree": {"sha": "6d52b2eb23966cb8c8cd4a49dc00ee526d74b9d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d52b2eb23966cb8c8cd4a49dc00ee526d74b9d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1f45df55be8f73a75b878aa409aae1d8786759e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1f45df55be8f73a75b878aa409aae1d8786759e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1f45df55be8f73a75b878aa409aae1d8786759e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1f45df55be8f73a75b878aa409aae1d8786759e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bab5167fe640ee7596bb644035cad57f6c9160c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bab5167fe640ee7596bb644035cad57f6c9160c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bab5167fe640ee7596bb644035cad57f6c9160c0"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "dc094f7284874e81ed967344b001282c76aa1bbd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1f45df55be8f73a75b878aa409aae1d8786759e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1f45df55be8f73a75b878aa409aae1d8786759e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d1f45df55be8f73a75b878aa409aae1d8786759e", "patch": "@@ -1,5 +1,8 @@\n 2013-03-16  Jason Merrill  <jason@redhat.com>\n \n+\t* decl.c (grokdeclarator): Assert that we won't see a pointer to\n+\tMETHOD_TYPE.\n+\n \tPR c++/54277\n \t* cp-tree.h (WILDCARD_TYPE_P): Split out from...\n \t(MAYBE_CLASS_TYPE_P): ...here."}, {"sha": "facaae7ff19c3e76709cf7deb067a62dbb7ba171", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1f45df55be8f73a75b878aa409aae1d8786759e/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1f45df55be8f73a75b878aa409aae1d8786759e/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=d1f45df55be8f73a75b878aa409aae1d8786759e", "patch": "@@ -9630,9 +9630,11 @@ grokdeclarator (const cp_declarator *declarator,\n \t     but to the target of the pointer.  */\n \t  type_quals = TYPE_UNQUALIFIED;\n \n+\t  /* This code used to handle METHOD_TYPE, but I don't think it's\n+\t     possible to get it here anymore.  */\n+\t  gcc_assert (TREE_CODE (type) != METHOD_TYPE);\n \t  if (declarator->kind == cdk_ptrmem\n-\t      && (TREE_CODE (type) == FUNCTION_TYPE\n-\t\t  || (memfn_quals && TREE_CODE (type) == METHOD_TYPE)))\n+\t      && TREE_CODE (type) == FUNCTION_TYPE)\n \t    {\n \t      memfn_quals |= type_memfn_quals (type);\n \t      type = build_memfn_type (type,"}]}