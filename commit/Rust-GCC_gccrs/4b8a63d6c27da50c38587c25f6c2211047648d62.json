{"sha": "4b8a63d6c27da50c38587c25f6c2211047648d62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI4YTYzZDZjMjdkYTUwYzM4NTg3YzI1ZjZjMjIxMTA0NzY0OGQ2Mg==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2003-12-23T08:12:41Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2003-12-23T08:12:41Z"}, "message": "rs6000.md: Change many instances of '!\n\n\t* config/rs6000/rs6000.md: Change many instances of '!\n\tTARGET_POWERPC64' to 'TARGET_32BIT' when the pattern being guarded\n\twas guarded only because it changed CR0 or the carry bit in XER.\n\nFrom-SVN: r74966", "tree": {"sha": "81ac4c4f4e0eefd5bf85c9314b77d823a78dc197", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81ac4c4f4e0eefd5bf85c9314b77d823a78dc197"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b8a63d6c27da50c38587c25f6c2211047648d62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b8a63d6c27da50c38587c25f6c2211047648d62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b8a63d6c27da50c38587c25f6c2211047648d62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b8a63d6c27da50c38587c25f6c2211047648d62/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d38d4e5d1800457ad097cb5e6dc35387998e6efa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d38d4e5d1800457ad097cb5e6dc35387998e6efa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d38d4e5d1800457ad097cb5e6dc35387998e6efa"}], "stats": {"total": 153, "additions": 51, "deletions": 102}, "files": [{"sha": "768fce9b9c3ca240fd6ce43bbe0329eb1619bf71", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b8a63d6c27da50c38587c25f6c2211047648d62/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b8a63d6c27da50c38587c25f6c2211047648d62/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b8a63d6c27da50c38587c25f6c2211047648d62", "patch": "@@ -1,3 +1,9 @@\n+2003-12-22  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* config/rs6000/rs6000.md: Change many instances of '!\n+\tTARGET_POWERPC64' to 'TARGET_32BIT' when the pattern being guarded\n+\twas guarded only because it changed CR0 or the carry bit in XER.\n+\n 2003-12-23  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR optimization/13394"}, {"sha": "402c08cfac355b296cb45a7dcfe439d432daba71", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 45, "deletions": 102, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b8a63d6c27da50c38587c25f6c2211047648d62/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b8a63d6c27da50c38587c25f6c2211047648d62/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=4b8a63d6c27da50c38587c25f6c2211047648d62", "patch": "@@ -1020,7 +1020,7 @@\n \t\t\t     (match_operand:SI 2 \"reg_or_short_operand\" \"r,I,r,I\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 3 \"=r,r,r,r\"))]\n-  \"! TARGET_POWERPC64\"\n+  \"TARGET_32BIT\"\n   \"@\n    {cax.|add.} %3,%1,%2\n    {ai.|addic.} %3,%1,%2\n@@ -1035,7 +1035,7 @@\n \t\t\t     (match_operand:SI 2 \"reg_or_short_operand\" \"\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 3 \"\"))]\n-  \"! TARGET_POWERPC64 && reload_completed\"\n+  \"TARGET_32BIT && reload_completed\"\n   [(set (match_dup 3)\n \t(plus:SI (match_dup 1)\n \t\t (match_dup 2)))\n@@ -1052,7 +1052,7 @@\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n \t(plus:SI (match_dup 1)\n \t\t (match_dup 2)))]\n-  \"! TARGET_POWERPC64\"\n+  \"TARGET_32BIT\"\n   \"@\n    {cax.|add.} %0,%1,%2\n    {ai.|addic.} %0,%1,%2\n@@ -1068,7 +1068,7 @@\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(plus:SI (match_dup 1) (match_dup 2)))]\n-  \"! TARGET_POWERPC64 && reload_completed\"\n+  \"TARGET_32BIT && reload_completed\"\n   [(set (match_dup 0)\n \t(plus:SI (match_dup 1)\n \t\t (match_dup 2)))\n@@ -1109,7 +1109,7 @@\n \t(compare:CC (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 2 \"=r,r\"))]\n-  \"! TARGET_POWERPC64\"\n+  \"TARGET_32BIT\"\n   \"@\n    nor. %2,%1,%1\n    #\"\n@@ -1121,7 +1121,7 @@\n \t(compare:CC (not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 2 \"\"))]\n-  \"! TARGET_POWERPC64 && reload_completed\"\n+  \"TARGET_32BIT && reload_completed\"\n   [(set (match_dup 2)\n \t(not:SI (match_dup 1)))\n    (set (match_dup 0)\n@@ -1135,7 +1135,7 @@\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(not:SI (match_dup 1)))]\n-  \"! TARGET_POWERPC64\"\n+  \"TARGET_32BIT\"\n   \"@\n    nor. %0,%1,%1\n    #\"\n@@ -1148,7 +1148,7 @@\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(not:SI (match_dup 1)))]\n-  \"! TARGET_POWERPC64 && reload_completed\"\n+  \"TARGET_32BIT && reload_completed\"\n   [(set (match_dup 0)\n \t(not:SI (match_dup 1)))\n    (set (match_dup 2)\n@@ -1191,7 +1191,7 @@\n \t\t\t      (match_operand:SI 2 \"gpc_reg_operand\" \"r,r\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 3 \"=r,r\"))]\n-  \"TARGET_POWERPC && ! TARGET_POWERPC64\"\n+  \"TARGET_POWERPC && TARGET_32BIT\"\n   \"@\n    subf. %3,%2,%1\n    #\"\n@@ -1204,7 +1204,7 @@\n \t\t\t      (match_operand:SI 2 \"gpc_reg_operand\" \"\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 3 \"\"))]\n-  \"! TARGET_POWERPC64 && reload_completed\"\n+  \"TARGET_32BIT && reload_completed\"\n   [(set (match_dup 3)\n \t(minus:SI (match_dup 1)\n \t\t  (match_dup 2)))\n@@ -1235,7 +1235,7 @@\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(minus:SI (match_dup 1)\n \t\t  (match_dup 2)))]\n-  \"TARGET_POWERPC && ! TARGET_POWERPC64\"\n+  \"TARGET_POWERPC && TARGET_32BIT\"\n   \"@\n    subf. %0,%2,%1\n    #\"\n@@ -1250,7 +1250,7 @@\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(minus:SI (match_dup 1)\n \t\t  (match_dup 2)))]\n-  \"! TARGET_POWERPC64 && reload_completed\"\n+  \"TARGET_32BIT && reload_completed\"\n   [(set (match_dup 0)\n \t(minus:SI (match_dup 1)\n \t\t  (match_dup 2)))\n@@ -1563,7 +1563,7 @@\n \t(compare:CC (neg:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 2 \"=r,r\"))]\n-  \"! TARGET_POWERPC64\"\n+  \"TARGET_32BIT\"\n   \"@\n    neg. %2,%1\n    #\"\n@@ -1575,7 +1575,7 @@\n \t(compare:CC (neg:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 2 \"\"))]\n-  \"! TARGET_POWERPC64 && reload_completed\"\n+  \"TARGET_32BIT && reload_completed\"\n   [(set (match_dup 2)\n \t(neg:SI (match_dup 1)))\n    (set (match_dup 0)\n@@ -1589,7 +1589,7 @@\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(neg:SI (match_dup 1)))]\n-  \"! TARGET_POWERPC64\"\n+  \"TARGET_32BIT\"\n   \"@\n    neg. %0,%1\n    #\"\n@@ -1602,7 +1602,7 @@\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(neg:SI (match_dup 1)))]\n-  \"! TARGET_POWERPC64 && reload_completed\"\n+  \"TARGET_32BIT && reload_completed\"\n   [(set (match_dup 0)\n \t(neg:SI (match_dup 1)))\n    (set (match_dup 2)\n@@ -2225,7 +2225,7 @@\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 3 \"=r,r,r,r,r,r,r,r\"))\n    (clobber (match_scratch:CC 4 \"=X,X,X,X,X,x,x,X\"))]\n-  \"! TARGET_POWERPC64\"\n+  \"TARGET_32BIT\"\n   \"@\n    and. %3,%1,%2\n    {andil.|andi.} %3,%1,%b2\n@@ -2304,7 +2304,7 @@\n \t(and:SI (match_dup 1)\n \t\t(match_dup 2)))\n    (clobber (match_scratch:CC 4 \"=X,X,X,X,X,x,x,X\"))]\n-  \"! TARGET_POWERPC64\"\n+  \"TARGET_32BIT\"\n   \"@\n    and. %0,%1,%2\n    {andil.|andi.} %0,%1,%b2\n@@ -2516,7 +2516,7 @@\n \t  (match_operand:SI 2 \"gpc_reg_operand\" \"r,r\")])\n \t (const_int 0)))\n    (clobber (match_scratch:SI 3 \"=r,r\"))]\n-  \"! TARGET_POWERPC64\"\n+  \"TARGET_32BIT\"\n   \"@\n    %q4. %3,%1,%2\n    #\"\n@@ -2530,7 +2530,7 @@\n \t  (match_operand:SI 2 \"gpc_reg_operand\" \"\")])\n \t (const_int 0)))\n    (clobber (match_scratch:SI 3 \"\"))]\n-  \"! TARGET_POWERPC64 && reload_completed\"\n+  \"TARGET_32BIT && reload_completed\"\n   [(set (match_dup 3) (match_dup 4))\n    (set (match_dup 0)\n \t(compare:CC (match_dup 3)\n@@ -2545,7 +2545,7 @@\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(match_dup 4))]\n-  \"! TARGET_POWERPC64\"\n+  \"TARGET_32BIT\"\n   \"@\n    %q4. %0,%1,%2\n    #\"\n@@ -2560,7 +2560,7 @@\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(match_dup 4))]\n-  \"! TARGET_POWERPC64 && reload_completed\"\n+  \"TARGET_32BIT && reload_completed\"\n   [(set (match_dup 0) (match_dup 4))\n    (set (match_dup 3)\n \t(compare:CC (match_dup 0)\n@@ -2604,7 +2604,7 @@\n \t  (match_operand:SI 2 \"gpc_reg_operand\" \"r,r\")])\n \t (const_int 0)))\n    (clobber (match_scratch:SI 3 \"=r,r\"))]\n-  \"! TARGET_POWERPC64\"\n+  \"TARGET_32BIT\"\n   \"@\n    %q4. %3,%2,%1\n    #\"\n@@ -2618,7 +2618,7 @@\n \t  (match_operand:SI 2 \"gpc_reg_operand\" \"\")])\n \t (const_int 0)))\n    (clobber (match_scratch:SI 3 \"\"))]\n-  \"! TARGET_POWERPC64 && reload_completed\"\n+  \"TARGET_32BIT && reload_completed\"\n   [(set (match_dup 3) (match_dup 4))\n    (set (match_dup 0)\n \t(compare:CC (match_dup 3)\n@@ -2633,7 +2633,7 @@\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(match_dup 4))]\n-  \"! TARGET_POWERPC64\"\n+  \"TARGET_32BIT\"\n   \"@\n    %q4. %0,%2,%1\n    #\"\n@@ -2648,7 +2648,7 @@\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(match_dup 4))]\n-  \"! TARGET_POWERPC64 && reload_completed\"\n+  \"TARGET_32BIT && reload_completed\"\n   [(set (match_dup 0) (match_dup 4))\n    (set (match_dup 3)\n \t(compare:CC (match_dup 0)\n@@ -2670,7 +2670,7 @@\n \t  (not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"r,r\"))])\n \t (const_int 0)))\n    (clobber (match_scratch:SI 3 \"=r,r\"))]\n-  \"! TARGET_POWERPC64\"\n+  \"TARGET_32BIT\"\n   \"@\n    %q4. %3,%1,%2\n    #\"\n@@ -2684,7 +2684,7 @@\n \t  (not:SI (match_operand:SI 2 \"gpc_reg_operand\" \"\"))])\n \t (const_int 0)))\n    (clobber (match_scratch:SI 3 \"\"))]\n-  \"! TARGET_POWERPC64 && reload_completed\"\n+  \"TARGET_32BIT && reload_completed\"\n   [(set (match_dup 3) (match_dup 4))\n    (set (match_dup 0)\n \t(compare:CC (match_dup 3)\n@@ -2699,7 +2699,7 @@\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(match_dup 4))]\n-  \"! TARGET_POWERPC64\"\n+  \"TARGET_32BIT\"\n   \"@\n    %q4. %0,%1,%2\n    #\"\n@@ -2714,7 +2714,7 @@\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(match_dup 4))]\n-  \"! TARGET_POWERPC64 && reload_completed\"\n+  \"TARGET_32BIT && reload_completed\"\n   [(set (match_dup 0) (match_dup 4))\n    (set (match_dup 3)\n \t(compare:CC (match_dup 0)\n@@ -3618,7 +3618,7 @@\n \t\t\t       (match_operand:SI 2 \"reg_or_cint_operand\" \"ri,ri\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 3 \"=r,r\"))]\n-  \"! TARGET_POWER && ! TARGET_POWERPC64\"\n+  \"! TARGET_POWER && TARGET_32BIT\"\n   \"@\n    {sl|slw}%I2. %3,%1,%h2\n    #\"\n@@ -3631,7 +3631,7 @@\n \t\t\t       (match_operand:SI 2 \"reg_or_cint_operand\" \"\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 3 \"\"))]\n-  \"! TARGET_POWER && ! TARGET_POWERPC64 && reload_completed\"\n+  \"! TARGET_POWER && TARGET_32BIT && reload_completed\"\n   [(set (match_dup 3)\n \t(ashift:SI (match_dup 1) (match_dup 2)))\n    (set (match_dup 0)\n@@ -3680,7 +3680,7 @@\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(ashift:SI (match_dup 1) (match_dup 2)))]\n-  \"! TARGET_POWER && ! TARGET_POWERPC64\"\n+  \"! TARGET_POWER && TARGET_32BIT\"\n   \"@\n    {sl|slw}%I2. %0,%1,%h2\n    #\"\n@@ -3694,7 +3694,7 @@\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(ashift:SI (match_dup 1) (match_dup 2)))]\n-  \"! TARGET_POWER && ! TARGET_POWERPC64 && reload_completed\"\n+  \"! TARGET_POWER && TARGET_32BIT && reload_completed\"\n   [(set (match_dup 0)\n \t(ashift:SI (match_dup 1) (match_dup 2)))\n    (set (match_dup 3)\n@@ -3851,7 +3851,7 @@\n \t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"O,ri,O,ri\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 3 \"=X,r,X,r\"))]\n-  \"! TARGET_POWER && ! TARGET_POWERPC64\"\n+  \"! TARGET_POWER && TARGET_32BIT\"\n   \"@\n    mr. %1,%1\n    {sr|srw}%I2. %3,%1,%h2\n@@ -3866,7 +3866,7 @@\n \t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 3 \"\"))]\n-  \"! TARGET_POWER && ! TARGET_POWERPC64 && reload_completed\"\n+  \"! TARGET_POWER && TARGET_32BIT && reload_completed\"\n   [(set (match_dup 3)\n \t(lshiftrt:SI (match_dup 1) (match_dup 2)))\n    (set (match_dup 0)\n@@ -3917,7 +3917,7 @@\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n \t(lshiftrt:SI (match_dup 1) (match_dup 2)))]\n-  \"! TARGET_POWER && ! TARGET_POWERPC64\"\n+  \"! TARGET_POWER && TARGET_32BIT\"\n   \"@\n    mr. %0,%1\n    {sr|srw}%I2. %0,%1,%h2\n@@ -3933,7 +3933,7 @@\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(lshiftrt:SI (match_dup 1) (match_dup 2)))]\n-  \"! TARGET_POWER && ! TARGET_POWERPC64 && reload_completed\"\n+  \"! TARGET_POWER && TARGET_32BIT && reload_completed\"\n   [(set (match_dup 0)\n \t(lshiftrt:SI (match_dup 1) (match_dup 2)))\n    (set (match_dup 3)\n@@ -7739,7 +7739,7 @@\n \t(compare:CC (match_operand:SI 1 \"gpc_reg_operand\" \"0,r,r\")\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r\") (match_dup 1))]\n-  \"! TARGET_POWERPC64\"\n+  \"TARGET_32BIT\"\n   \"@\n    {cmpi|cmpwi} %2,%0,0\n    mr. %0,%1\n@@ -7752,7 +7752,7 @@\n \t(compare:CC (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\") (match_dup 1))]\n-  \"! TARGET_POWERPC64 && reload_completed\"\n+  \"TARGET_32BIT && reload_completed\"\n   [(set (match_dup 0) (match_dup 1))\n    (set (match_dup 2)\n \t(compare:CC (match_dup 0)\n@@ -11286,7 +11286,7 @@\n \t\t    (const_int 0)))\n    (set (match_operand:SI 3 \"gpc_reg_operand\" \"=r,r\")\n \t(match_op_dup 1 [(match_dup 2) (const_int 0)]))]\n-  \"! TARGET_POWERPC64\"\n+  \"TARGET_32BIT\"\n   \"@\n    mfcr %3%Q2\\;{rlinm.|rlwinm.} %3,%3,%J1,1\n    #\"\n@@ -11301,7 +11301,7 @@\n \t\t    (const_int 0)))\n    (set (match_operand:SI 3 \"gpc_reg_operand\" \"\")\n \t(match_op_dup 1 [(match_dup 2) (const_int 0)]))]\n-  \"! TARGET_POWERPC64 && reload_completed\"\n+  \"TARGET_32BIT && reload_completed\"\n   [(set (match_dup 3)\n \t(match_op_dup 1 [(match_dup 2) (const_int 0)]))\n    (set (match_dup 0)\n@@ -12018,7 +12018,7 @@\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(leu:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t(match_operand:SI 2 \"reg_or_short_operand\" \"rI\")))]\n-  \"! TARGET_POWERPC64\"\n+  \"TARGET_32BIT\"\n   \"{sf%I2|subf%I2c} %0,%1,%2\\;{cal %0,0(0)|li %0,0}\\;{ae|adde} %0,%0,%0\"\n   [(set_attr \"length\" \"12\")])\n \n@@ -14169,7 +14169,7 @@\n \t\t (const_int -1)))\n    (clobber (match_scratch:CC 3 \"\"))\n    (clobber (match_scratch:SI 4 \"\"))]\n-  \"! TARGET_POWERPC64 && reload_completed\"\n+  \"TARGET_32BIT && reload_completed\"\n   [(parallel [(set (match_dup 3)\n \t\t   (compare:CC (plus:SI (match_dup 1)\n \t\t\t\t\t(const_int -1))\n@@ -14195,7 +14195,7 @@\n \t(plus:SI (match_dup 1) (const_int -1)))\n    (clobber (match_scratch:CC 3 \"\"))\n    (clobber (match_scratch:SI 4 \"\"))]\n-  \"! TARGET_POWERPC64 && reload_completed\n+  \"TARGET_32BIT && reload_completed\n    && ! gpc_reg_operand (operands[0], SImode)\"\n   [(parallel [(set (match_dup 3)\n \t\t   (compare:CC (plus:SI (match_dup 1)\n@@ -14267,63 +14267,6 @@\n   \"\n { operands[7] = gen_rtx (GET_CODE (operands[2]), VOIDmode, operands[3],\n \t\t\t const0_rtx); }\")\n-\n-; These two are for 64-bit hardware running 32-bit mode.\n-; We don't use the add. instruction in this mode.\n-(define_split\n-  [(set (pc)\n-        (if_then_else (match_operator 2 \"comparison_operator\"\n-                                      [(match_operand:SI 1 \"gpc_reg_operand\" \"\")\n-                                       (const_int 1)])       \n-                      (match_operand 5 \"\" \"\")\n-                      (match_operand 6 \"\" \"\")))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-        (plus:SI (match_dup 1)     \n-                 (const_int -1)))        \n-   (clobber (match_scratch:CC 3 \"\"))\n-   (clobber (match_scratch:SI 4 \"\"))]\n-  \"TARGET_POWERPC64 && TARGET_32BIT && reload_completed\"\n-  [(set (match_dup 0)\n-        (plus:SI (match_dup 1)          \n-                 (const_int -1)))  \n-   (set (match_dup 3)\n-        (compare:CC (match_dup 0)  \n-                    (const_int 0)))      \n-   (set (pc) (if_then_else (match_dup 7)\n-                           (match_dup 5)\n-                           (match_dup 6)))]\n-  \"\n-{ operands[7] = gen_rtx (GET_CODE (operands[2]), VOIDmode, operands[3],\n-                         const0_rtx); }\")\n-\n-(define_split\n-  [(set (pc)\n-        (if_then_else (match_operator 2 \"comparison_operator\"\n-                                      [(match_operand:SI 1 \"gpc_reg_operand\" \"\")\n-                                       (const_int 1)])\n-                      (match_operand 5 \"\" \"\")\n-                      (match_operand 6 \"\" \"\")))\n-   (set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n-        (plus:SI (match_dup 1) (const_int -1)))\n-   (clobber (match_scratch:CC 3 \"\"))\n-   (clobber (match_scratch:SI 4 \"\"))]\n-  \"TARGET_POWERPC64 && TARGET_32BIT && reload_completed\n-   && ! gpc_reg_operand (operands[0], SImode)\"\n-  [(set (match_dup 4)\n-        (plus:SI (match_dup 1)\n-                 (const_int -1)))\n-   (set (match_dup 3)\n-        (compare:CC (match_dup 4)\n-                    (const_int 0)))\n-   (set (match_dup 0)\n-        (match_dup 4))\n-   (set (pc) (if_then_else (match_dup 7)\n-                           (match_dup 5)\n-                           (match_dup 6)))]\n-  \"\n-{ operands[7] = gen_rtx (GET_CODE (operands[2]), VOIDmode, operands[3],\n-                         const0_rtx); }\")\n-\n \f\n (define_insn \"trap\"\n   [(trap_if (const_int 1) (const_int 0))]"}]}