{"sha": "3a221b73d04496318c5b7b69c1d78d6ff83a8bfb", "node_id": "C_kwDOANBUbNoAKDNhMjIxYjczZDA0NDk2MzE4YzViN2I2OWMxZDc4ZDZmZjgzYThiZmI", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-10-01T00:18:00Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-10-01T00:18:00Z"}, "message": "Daily bump.", "tree": {"sha": "6bead72ddfbe03ae314f0b9fc5270f02f562424d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bead72ddfbe03ae314f0b9fc5270f02f562424d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a221b73d04496318c5b7b69c1d78d6ff83a8bfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a221b73d04496318c5b7b69c1d78d6ff83a8bfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a221b73d04496318c5b7b69c1d78d6ff83a8bfb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a221b73d04496318c5b7b69c1d78d6ff83a8bfb/comments", "author": null, "committer": null, "parents": [{"sha": "1214196da79aabbe5c14ed36e5a28012e141f04c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1214196da79aabbe5c14ed36e5a28012e141f04c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1214196da79aabbe5c14ed36e5a28012e141f04c"}], "stats": {"total": 258, "additions": 257, "deletions": 1}, "files": [{"sha": "439ac0ec798d24501293f461d30e2f4ff7eff948", "filename": "ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a221b73d04496318c5b7b69c1d78d6ff83a8bfb/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a221b73d04496318c5b7b69c1d78d6ff83a8bfb/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=3a221b73d04496318c5b7b69c1d78d6ff83a8bfb", "patch": "@@ -1,3 +1,10 @@\n+2022-09-30  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* configure.ac (*vxworks*): If enable_shared is not\n+\tset, set to \"no\" and add --disable-shared to target and\n+\thost_configargs.\n+\t* configure: Regenerate.\n+\n 2022-09-26  Jeff Law  <jlaw@ventanamicro.com>\n \n \t* MAINTAINERS: Update my email address and DCO entry."}, {"sha": "90a96694760965d596e18a9e16701b37df6f1254", "filename": "gcc/ChangeLog", "status": "modified", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a221b73d04496318c5b7b69c1d78d6ff83a8bfb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a221b73d04496318c5b7b69c1d78d6ff83a8bfb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a221b73d04496318c5b7b69c1d78d6ff83a8bfb", "patch": "@@ -1,3 +1,101 @@\n+2022-09-30  Jeff Law  <jeffreyalaw@gmail.com>\n+\n+\t* tree-ssa-dom.cc (single_block_loop_p): New function.\n+\t(record_edge_info): Also record equivalences for the outgoing\n+\tedge of a single block loop where the condition is an invariant.\n+\n+2022-09-30  Jeff Law  <jeffreyalaw@gmail.com>\n+\n+\t* tree-ssa-dom.cc (free_dom_edge_info): Clear e->aux too.\n+\t(free_all_edge_infos): Do not clear e->aux here.\n+\n+2022-09-30  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\t* target.def (TARGET_C_EXCESS_PRECISION): Document\n+\t-fexcess-precision=16.\n+\n+2022-09-30  Palmer Dabbelt  <palmer@rivosinc.com>\n+\n+\t* doc/tm.texi (TARGET_C_EXCESS_PRECISION): Add 16.\n+\n+2022-09-30  Palmer Dabbelt  <palmer@rivosinc.com>\n+\n+\tPR target/106815\n+\t* config/riscv/riscv.cc (riscv_excess_precision): Add support\n+\tfor EXCESS_PRECISION_TYPE_FLOAT16.\n+\n+2022-09-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/107080\n+\t* config/arm/arm.cc (arm_mangle_type): Mangle just __fp16 as Dh\n+\tand _Float16 as DF16_.\n+\t* config/csky/csky.cc (csky_init_builtins): Fix a comment typo.\n+\t(csky_mangle_type): Mangle __fp16 as Dh and _Float16 as DF16_\n+\trather than mangling __fp16 as __fp16.\n+\n+2022-09-30  Lewis Hyatt  <lhyatt@gmail.com>\n+\n+\tPR preprocessor/69543\n+\t* tree-ssa-uninit.cc (warn_uninit): Stop stripping macro tracking\n+\tinformation away from the diagnostic location.\n+\t(maybe_warn_read_write_only): Likewise.\n+\t(maybe_warn_operand): Likewise.\n+\n+2022-09-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/107080\n+\t* config/aarch64/aarch64.cc (aarch64_mangle_type): Mangle just __fp16\n+\tas Dh and _Float16 as DF16_.\n+\n+2022-09-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/107080\n+\t* config/i386/i386.cc (ix86_mangle_type): Always return NULL\n+\tfor float128_type_node or float64x_type_node, don't check\n+\tfloat128t_type_node later on.\n+\t* config/ia64/ia64.cc (ia64_mangle_type): Always return NULL\n+\tfor float128_type_node or float64x_type_node.\n+\t* config/rs6000/rs6000.cc (rs6000_mangle_type): Likewise.\n+\tDon't check float128_type_node later on.\n+\t* config/s390/s390.cc (s390_mangle_type): Don't use\n+\tTYPE_MAIN_VARIANT on type which was set to TYPE_MAIN_VARIANT\n+\ta few lines earlier.\n+\n+2022-09-30  Torbj\u00f6rn SVENSSON  <torbjorn.svensson@foss.st.com>\n+\t    Yvan ROUX   <yvan.roux@foss.st.com>\n+\n+\t* doc/sourcebuild.texi: Document new vma_equals_lma effective\n+\ttarget check.\n+\n+2022-09-30  Jiawei  <jiawei@iscas.ac.cn>\n+\n+\t* config/riscv/riscv.cc (riscv_file_start): New .option.\n+\t* config/riscv/riscv.opt: New options.\n+\t* doc/invoke.texi: New definations.\n+\n+2022-09-30  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR target/99888\n+\tPR target/105649\n+\t* doc/invoke.texi (option -fpatchable-function-entry): Adjust the\n+\tdocumentation for PowerPC ELFv2 ABI dual entry points.\n+\t* config/rs6000/rs6000-internal.h\n+\t(rs6000_print_patchable_function_entry): New function declaration.\n+\t* config/rs6000/rs6000-logue.cc (rs6000_output_function_prologue):\n+\tSupport patchable-function-entry by emitting nops before and after\n+\tlocal entry for the function that needs global entry.\n+\t* config/rs6000/rs6000.cc (rs6000_print_patchable_function_entry): Skip\n+\tthe function that needs global entry till global entry has been\n+\temitted.\n+\t* config/rs6000/rs6000.h (struct machine_function): New bool member\n+\tglobal_entry_emitted.\n+\n+2022-09-30  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/107095\n+\t* tree-ssa-dse.cc (initialize_ao_ref_for_dse): Use data arg\n+\tfor .MASK_STORE size.\n+\n 2022-09-29  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* range-op.cc (plus_minus_ranges): New."}, {"sha": "5e34ca4ca852c5b5a6e9169ab7b4741ceba2844c", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a221b73d04496318c5b7b69c1d78d6ff83a8bfb/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a221b73d04496318c5b7b69c1d78d6ff83a8bfb/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=3a221b73d04496318c5b7b69c1d78d6ff83a8bfb", "patch": "@@ -1 +1 @@\n-20220930\n+20221001"}, {"sha": "d401dc1fb742165339191f7a8092423a67d29d52", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a221b73d04496318c5b7b69c1d78d6ff83a8bfb/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a221b73d04496318c5b7b69c1d78d6ff83a8bfb/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=3a221b73d04496318c5b7b69c1d78d6ff83a8bfb", "patch": "@@ -1,3 +1,9 @@\n+2022-09-30  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* c-common.cc (c_common_reswords): Use cp/cp-trait.def to handle\n+\tC++ traits.\n+\t* c-common.h (enum rid): Likewise.\n+\n 2022-09-29  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-lex.cc (c_common_has_attribute): Handle noreturn attribute for"}, {"sha": "3ebb164b0ec6d6ebe175e5ee3a7bd6881791a373", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a221b73d04496318c5b7b69c1d78d6ff83a8bfb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a221b73d04496318c5b7b69c1d78d6ff83a8bfb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3a221b73d04496318c5b7b69c1d78d6ff83a8bfb", "patch": "@@ -1,3 +1,23 @@\n+2022-09-30  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* constraint.cc (diagnose_trait_expr): Likewise.\n+\t* cp-objcp-common.cc (names_builtin_p): Likewise.\n+\t* cp-tree.h (enum cp_trait_kind): Likewise.\n+\t* cxx-pretty-print.cc (pp_cxx_trait): Likewise.\n+\t* parser.cc (cp_keyword_starts_decl_specifier_p): Likewise.\n+\t(cp_parser_primary_expression): Likewise.\n+\t(cp_parser_trait): Likewise.\n+\t(cp_parser_simple_type_specifier): Likewise.\n+\t* cp-trait.def: New file.\n+\n+2022-09-30  Jason Merrill  <jason@redhat.com>\n+\n+\t* cp-gimplify.cc (cp_fold_r) [TARGET_EXPR]: Collapse\n+\tTARGET_EXPR within TARGET_EXPR.\n+\t* constexpr.cc (cxx_eval_outermost_constant_expr): Avoid\n+\tadding redundant TARGET_EXPR.\n+\t* cp-tree.h (target_expr_needs_replace): VEC_INIT_EXPR doesn't.\n+\n 2022-09-29  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/102576"}, {"sha": "c6cb20d5680390cde97cc75d2e69596a0cb6165d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a221b73d04496318c5b7b69c1d78d6ff83a8bfb/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a221b73d04496318c5b7b69c1d78d6ff83a8bfb/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3a221b73d04496318c5b7b69c1d78d6ff83a8bfb", "patch": "@@ -1,3 +1,11 @@\n+2022-09-30  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/105318\n+\t* openmp.cc (resolve_omp_clauses): Update is_device_ptr restrictions\n+\tfor OpenMP 5.1 and map to has_device_addr where applicable; map\n+\tuse_device_ptr to use_device_addr where applicable.\n+\tSilence integer-range warning for device(omp_{initial,invalid}_device).\n+\n 2022-09-27  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/107054"}, {"sha": "26bec900066a031a1bccf804b6b898ae1f1ce096", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a221b73d04496318c5b7b69c1d78d6ff83a8bfb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a221b73d04496318c5b7b69c1d78d6ff83a8bfb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3a221b73d04496318c5b7b69c1d78d6ff83a8bfb", "patch": "@@ -1,3 +1,83 @@\n+2022-09-30  Jeff Law  <jeffreyalaw@gmail.com>\n+\n+\t* gcc.dg/infinite-loop.c: New test.\n+\n+2022-09-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/107080\n+\t* g++.target/arm/pr107080.C: New test.\n+\n+2022-09-30  Lewis Hyatt  <lhyatt@gmail.com>\n+\n+\tPR preprocessor/69543\n+\t* c-c++-common/pr69543-3.c: Remove xfail.\n+\t* c-c++-common/pr69543-4.c: Likewise.\n+\t* gcc.dg/cpp/pragma-diagnostic-2.c: Adjust test for new behavior.\n+\t* c-c++-common/pragma-diag-16.c: New test.\n+\n+2022-09-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/107080\n+\t* g++.target/aarch64/pr107080.C: New test.\n+\n+2022-09-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/107080\n+\t* g++.dg/cpp23/ext-floating11.C: New test.\n+\n+2022-09-30  Torbj\u00f6rn SVENSSON  <torbjorn.svensson@foss.st.com>\n+\t    Yvan ROUX   <yvan.roux@foss.st.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_vma_equals_lma): New.\n+\t* c-c++-common/torture/attr-noinit-1.c: Requre VMA == LMA to run.\n+\t* c-c++-common/torture/attr-noinit-2.c: Likewise.\n+\t* c-c++-common/torture/attr-noinit-3.c: Likewise.\n+\t* c-c++-common/torture/attr-persistent-1.c: Likewise.\n+\t* c-c++-common/torture/attr-persistent-3.c: Likewise.\n+\n+2022-09-30  Torbj\u00f6rn SVENSSON  <torbjorn.svensson@foss.st.com>\n+\n+\t* lib/gcc-defs.exp: Do not prefix linker script with \"-Wl,\".\n+\n+2022-09-30  Torbj\u00f6rn SVENSSON  <torbjorn.svensson@foss.st.com>\n+\t    Yvan ROUX   <yvan.roux@foss.st.com>\n+\n+\t* g++.dg/modules/ben-1.map: Replace the colon with dash.\n+\t* g++.dg/modules/ben-1_a.C: Likewise\n+\n+2022-09-30  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR target/99888\n+\tPR target/105649\n+\t* gcc.target/powerpc/pr99888-1.c: New test.\n+\t* gcc.target/powerpc/pr99888-2.c: New test.\n+\t* gcc.target/powerpc/pr99888-3.c: New test.\n+\t* gcc.target/powerpc/pr99888-4.c: New test.\n+\t* gcc.target/powerpc/pr99888-5.c: New test.\n+\t* gcc.target/powerpc/pr99888-6.c: New test.\n+\t* c-c++-common/patchable_function_entry-default.c: Adjust for\n+\tpowerpc_elfv2 to avoid compilation error.\n+\n+2022-09-30  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR testsuite/106516\n+\t* gcc.dg/pr104992.c: Adjust with vect_int_mod.\n+\t* lib/target-supports.exp (check_effective_target_vect_int_mod): New\n+\teffective target.\n+\n+2022-09-30  Christophe Lyon  <christophe.lyon@arm.com>\n+\n+\t* gcc.target/arm/mve/mve_load_memory_modes.c: Update expected\n+\tregisters.\n+\t* gcc.target/arm/mve/mve_store_memory_modes.c: Likewise.\n+\n+2022-09-30  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/105318\n+\t* gfortran.dg/gomp/is_device_ptr-1.f90: Remove dg-error.\n+\t* gfortran.dg/gomp/is_device_ptr-2.f90: Likewise.\n+\t* gfortran.dg/gomp/is_device_ptr-3.f90: Update tree-scan-dump.\n+\n 2022-09-29  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/c2x-attr-noreturn-1.c, gcc.dg/c2x-attr-noreturn-2.c,"}, {"sha": "0377b5cbe00d1f0a5bfe0048df561e1fa14e80a2", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a221b73d04496318c5b7b69c1d78d6ff83a8bfb/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a221b73d04496318c5b7b69c1d78d6ff83a8bfb/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=3a221b73d04496318c5b7b69c1d78d6ff83a8bfb", "patch": "@@ -1,3 +1,8 @@\n+2022-09-30  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/105318\n+\t* testsuite/libgomp.fortran/is_device_ptr-2.f90: New test.\n+\n 2022-09-28  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* libgomp.texi (OpenMP 5.1): Mark 'assume' as implemented"}, {"sha": "99217875befdf84413b6ac114c9d5198ecdde53d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a221b73d04496318c5b7b69c1d78d6ff83a8bfb/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a221b73d04496318c5b7b69c1d78d6ff83a8bfb/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3a221b73d04496318c5b7b69c1d78d6ff83a8bfb", "patch": "@@ -1,3 +1,35 @@\n+2022-09-30  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/20_util/bitset/access/to_ulong.cc: Construct bitset\n+\tfrom binary literal instead of using stringstream.\n+\n+2022-09-30  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/bitset (operator>>): Use a simple buffer instead\n+\tof std::basic_string.\n+\n+2022-09-30  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/bitset (_M_copy_from_ptr, _M_copy_from_string)\n+\t(_M_copy_to_string): Change access to private.\n+\t(_M_copy_from_string(const basic_string&, size_t, size_t)):\n+\tRemove.\n+\t(_M_copy_to_string(const basic_string&)): Remove.\n+\n+2022-09-30  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/20_util/bind/ref_neg.cc: Fix dg-prune-output\n+\tdirective.\n+\n+2022-09-30  Torbj\u00f6rn SVENSSON  <torbjorn.svensson@foss.st.com>\n+\t    Yvan ROUX   <yvan.roux@foss.st.com>\n+\n+\t* testsuite/20_util/bind/ref_neg.cc: Prune Windows paths too.\n+\n+2022-09-30  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* include/std/bitset: Include <bits/stl_algobase.h>.\n+\n 2022-09-29  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* python/libstdcxx/v6/printers.py (add_one_template_type_printer): Register"}]}