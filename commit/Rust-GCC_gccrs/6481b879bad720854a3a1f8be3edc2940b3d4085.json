{"sha": "6481b879bad720854a3a1f8be3edc2940b3d4085", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ4MWI4NzliYWQ3MjA4NTRhM2ExZjhiZTNlZGMyOTQwYjNkNDA4NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-11-10T07:40:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-11-10T07:40:37Z"}, "message": "re PR tree-optimization/33680 (ICE when compilling elbg.c from ffmpeg (vectorizer))\n\n\tPR tree-optimization/33680\n\t* tree-data-ref.c (split_constant_offset) <case ADDR_EXPR>: Punt\n\tif the added cast involves variable length types.\n\n\t* gcc.c-torture/compile/20071108-1.c: New test.\n\nFrom-SVN: r130067", "tree": {"sha": "97187c171008938f7d60d88651e0c06b1c5c10ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97187c171008938f7d60d88651e0c06b1c5c10ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6481b879bad720854a3a1f8be3edc2940b3d4085", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6481b879bad720854a3a1f8be3edc2940b3d4085", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6481b879bad720854a3a1f8be3edc2940b3d4085", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6481b879bad720854a3a1f8be3edc2940b3d4085/comments", "author": null, "committer": null, "parents": [{"sha": "3d9b2eb64f64c87952dd974a96e2756bdcf2e4b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d9b2eb64f64c87952dd974a96e2756bdcf2e4b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d9b2eb64f64c87952dd974a96e2756bdcf2e4b3"}], "stats": {"total": 102, "additions": 72, "deletions": 30}, "files": [{"sha": "b5e532d93ad6d335fd8fc89f1174ac3ad23f5415", "filename": "gcc/ChangeLog", "status": "modified", "additions": 35, "deletions": 29, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6481b879bad720854a3a1f8be3edc2940b3d4085/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6481b879bad720854a3a1f8be3edc2940b3d4085/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6481b879bad720854a3a1f8be3edc2940b3d4085", "patch": "@@ -1,13 +1,19 @@\n+2007-11-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/33680\n+\t* tree-data-ref.c (split_constant_offset) <case ADDR_EXPR>: Punt\n+\tif the added cast involves variable length types.\n+\n 2007-11-09  Alexander Monakov  <amonakov@ispras.ru>\n \t    Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n-\t* gcc/sched-deps.c (sched_analyze_insn): Use MOVE_BARRIER\n+\t* sched-deps.c (sched_analyze_insn): Use MOVE_BARRIER\n \tinstead of TRUE_BARRIER for jumps.  Add register dependencies\n \teven when reg_pending_barrier is set.\n \n 2007-11-09  Alexander Monakov  <amonakov@ispras.ru>\n \n-\t* gcc/haifa-sched.c (haifa_classify_insn): Rename to ...\n+\t* haifa-sched.c (haifa_classify_insn): Rename to ...\n \t(haifa_classify_rtx): ...  this.  Improve handling of COND_EXECs,\n \thandle PARALLELs by recursing.  Use it ...  \n \t(haifa_classify_insn): ...  here.  Reimplement.\n@@ -129,7 +135,7 @@\n \t -fipa-reference): Add or correct doc.  Sorted options list for -Os\n \t -O, -O2.\n \t\n-2007-11-07  <aldot@gcc.gnu.org>  Bernhard Fischer\n+2007-11-07  Bernhard Fischer  <aldot@gcc.gnu.org>\n \n \tPR target/16350\n \t* config.gcc: For arm*b-* define TARGET_BIG_ENDIAN_DEFAULT.\n@@ -140,7 +146,7 @@\n \t* config/arm/linux-eabi.h (TARGET_LINKER_EMULATION): Set according\n \tto TARGET_BIG_ENDIAN_DEFAULT.\n \t(SUBTARGET_EXTRA_LINK_SPEC): Likewise.\n-\t* gcc/config/arm/bpabi.h (TARGET_DEFAULT_MASK): Set according\n+\t* config/arm/bpabi.h (TARGET_DEFAULT_MASK): Set according\n \tto TARGET_BIG_ENDIAN_DEFAULT.\n \n 2007-11-07  Diego Novillo  <dnovillo@google.com>\n@@ -3281,12 +3287,12 @@\n \t* config/m68k/m68k.md (cmp<mode>, cmp<mode>_68881, cmp<mode>_cf):\n \tCleanup predicates to relieve reload.\n \t(conditional_trap): Reject conditional trap with fp condition.\n-\t* gcc/config/m68k/predicates.md (fp_src_operand): New, reject\n+\t* config/m68k/predicates.md (fp_src_operand): New, reject\n \tcertain constants early.\n \n 2007-09-24  Roman Zippel <zippel@linux-m68k.org>\n \n-\t* gcc/final.c (final_scan_insn): Remove accidentally duplicated code.\n+\t* final.c (final_scan_insn): Remove accidentally duplicated code.\n \n 2007-09-24  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n@@ -3507,16 +3513,16 @@\n \n 2007-09-19  Michael Meissner  <michael.meissner@amd.com>\n \n-\t* gcc/config/i386/i386.c: Delete trailing whitespace.\n-\t* gcc/config/i386/i386.h: Ditto.\n-\t* gcc/config/i386/bmmintrin.h: Ditto.\n-\t* gcc/config/i386/sync.md: Ditto.\n-\t* gcc/config/i386/ppro.md: Ditto.\n-\t* gcc/config/i386/mmx.md: Ditto.\n-\t* gcc/config/i386/constraints.md: Ditto.\n-\t* gcc/config/i386/sse.md: Ditto.\n-\t* gcc/config/i386/athlon.md: Ditto.\n-\t* gcc/config/i386/i386.md: Ditto.\n+\t* config/i386/i386.c: Delete trailing whitespace.\n+\t* config/i386/i386.h: Ditto.\n+\t* config/i386/bmmintrin.h: Ditto.\n+\t* config/i386/sync.md: Ditto.\n+\t* config/i386/ppro.md: Ditto.\n+\t* config/i386/mmx.md: Ditto.\n+\t* config/i386/constraints.md: Ditto.\n+\t* config/i386/sse.md: Ditto.\n+\t* config/i386/athlon.md: Ditto.\n+\t* config/i386/i386.md: Ditto.\n \n 2007-09-21  Richard Guenther  <rguenther@suse.de>\n \n@@ -5135,13 +5141,13 @@\n 2007-09-10  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/33369\n-\t* gcc/config/i386/sse.md (ashr<mode>3): Change op2 mode to SImode.\n+\t* config/i386/sse.md (ashr<mode>3): Change op2 mode to SImode.\n \tUse 'N' operand constraint for op2.\n \t(lshr<mode>3): Ditto.\n \t(ashl<mode>3): Ditto.\n \t(vec_shl_<mode>): Use const_0_to_255_mul_8_operand predicate for op2.\n \t(vec_shr_<mode>): Ditto.\n-\t* gcc/config/i386/i386.c (ix86_expand_builtin) [IX86_BUILTIN_PSLL?128,\n+\t* config/i386/i386.c (ix86_expand_builtin) [IX86_BUILTIN_PSLL?128,\n \tIX86_BUILTIN_PSRA*?128, IX86_BUILTIN_PSRL?128]: Convert op1 to SImode.\n \n 2007-09-10  Andreas Krebbel  <krebbel1@de.ibm.com>\n@@ -6214,8 +6220,8 @@\n \n 2007-09-05  Uros Bizjak  <ubizjak@gmail.com>\n \n-\t* gcc/config/i386/cpuid.h: New file.\n-\t* gcc/config/i386/driver-i386.c: Include cpuid.h.\n+\t* config/i386/cpuid.h: New file.\n+\t* config/i386/driver-i386.c: Include cpuid.h.\n \t(describe_cache): Shrink size and line strings to 100 bytes.\n \t(detect_caches_amd): Return \"\" for unsupported max_ext_level.\n \tUse __cpuid function.\n@@ -6235,12 +6241,12 @@\n \t[PROCESSOR_K8]: Add k8-sse3 architecture.\n \t[PROCESSOR_NOCONA]: Remove.\n \t[PROCESSOR_GENERIC64]: Ditto.\n-\t* gcc/config/i386/x-i386 (driver-i386.o): Depend on cpuid.h.\n-\t* gcc/config/i386/crtfastmath.c: Include cpuid.h.  Use __get_cpuid\n+\t* config/i386/x-i386 (driver-i386.o): Depend on cpuid.h.\n+\t* config/i386/crtfastmath.c: Include cpuid.h.  Use __get_cpuid\n \tto check for SSE and FXSAVE support.\n-\t* gcc/config/i386/t-crtfm (crtfastmath.o): Depend on cpuid.h.\n+\t* config/i386/t-crtfm (crtfastmath.o): Depend on cpuid.h.\n \tAdd -minline-all-stringops.\n-\t* gcc/config.gcc (i[34567]86-*-*): Add cpuid.h to extra_headers.\n+\t* config.gcc (i[34567]86-*-*): Add cpuid.h to extra_headers.\n \t(x86_64-*-*): Ditto.\n \n 2007-09-05  Jie Zhang  <jie.zhang@analog.com>\n@@ -7185,8 +7191,8 @@\n \n 2007-08-29  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n-\t* gcc/builtin-types.def (BT_FN_PTR_PTR_SIZE): New type.\n-\t* gcc/builtins.def (BUILT_IN_REALLOC): New builtin.\n+\t* builtin-types.def (BT_FN_PTR_PTR_SIZE): New type.\n+\t* builtins.def (BUILT_IN_REALLOC): New builtin.\n \n 2007-08-29  Douglas Gregor  <doug.gregor@gmail.com>\n \n@@ -7255,11 +7261,11 @@\n 2007-08-28  Nathan Sidwell  <nathan@codesourcery.com>\n \t    Kazu Hirata  <kazu@codesourcery.com>\n \n-\t* gcc/config/m68k/linux.h\n+\t* config/m68k/linux.h\n \t(M68K_HONOR_TARGET_STRICT_ALIGNMENT): Redefine as 0.\n \t* config/m68k/m68k.c (TARGET_RETURN_IN_MEMORY): New.\n \t(m68k_return_in_memory): New.\n-\t* gcc/config/m68k/m68k.h (M68K_HONOR_TARGET_STRICT_ALIGNMENT):\n+\t* config/m68k/m68k.h (M68K_HONOR_TARGET_STRICT_ALIGNMENT):\n \tNew.\n \n 2007-08-28  Uros Bizjak  <ubizjak@gmail.com>\n@@ -9031,7 +9037,7 @@\n \t* params.def (PARAM_VECT_MAX_VERSION_FOR_ALIGNMENT_CHECKS):\n \tRename.\n \t(PARAM_VECT_MAX_VERSION_FOR_ALIAS_CHECKS): Define.\n-\t* gcc/doc/invoke.texi\n+\t* doc/invoke.texi\n \t(vect-max-version-for-alignment-checks): Document.\n \t(vect-max-version-for-alias-checks): Document.\n \t(vect-max-version-checks): Remove."}, {"sha": "8e1a0b5b5ee47a8e61185e4b9612d01e69358937", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6481b879bad720854a3a1f8be3edc2940b3d4085/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6481b879bad720854a3a1f8be3edc2940b3d4085/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6481b879bad720854a3a1f8be3edc2940b3d4085", "patch": "@@ -1,5 +1,8 @@\n 2007-11-10  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/33680\n+\t* gcc.c-torture/compile/20071108-1.c: New test.\n+\n \tPR c++/32241\n \t* g++.dg/template/pseudodtor3.C: New test.\n "}, {"sha": "b9a36ef65a7b77e9fa82e63c994491f5ad107772", "filename": "gcc/testsuite/gcc.c-torture/compile/20071108-1.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6481b879bad720854a3a1f8be3edc2940b3d4085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20071108-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6481b879bad720854a3a1f8be3edc2940b3d4085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20071108-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20071108-1.c?ref=6481b879bad720854a3a1f8be3edc2940b3d4085", "patch": "@@ -0,0 +1,13 @@\n+/* PR tree-optimization/33680 */\n+\n+int\n+f (int dim, int *b, int *c)\n+{\n+  int newcentroid[3][dim];\n+  int *a = newcentroid[2];\n+  int i, dist = 0;\n+  __builtin_memcpy (newcentroid, c, sizeof (newcentroid));\n+  for (i = 0; i < dim; i++)\n+    dist += (a[i] - b[i]) * (a[i] - b[i]);\n+  return dist;\n+}"}, {"sha": "8d9c4c98a55c77e62dd3217ebf9268b8708b4f63", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6481b879bad720854a3a1f8be3edc2940b3d4085/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6481b879bad720854a3a1f8be3edc2940b3d4085/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=6481b879bad720854a3a1f8be3edc2940b3d4085", "patch": "@@ -560,7 +560,27 @@ split_constant_offset (tree exp, tree *var, tree *off)\n \t\t\t\tfold_convert (TREE_TYPE (base), poffset));\n \t  }\n \n-\t*var = fold_convert (type, base);\n+\tvar0 = fold_convert (type, base);\n+\n+\t/* If variable length types are involved, punt, otherwise casts\n+\t   might be converted into ARRAY_REFs in gimplify_conversion.\n+\t   To compute that ARRAY_REF's element size TYPE_SIZE_UNIT, which\n+\t   possibly no longer appears in current GIMPLE, might resurface.\n+\t   This perhaps could run\n+\t   if (TREE_CODE (var0) == NOP_EXPR\n+\t       || TREE_CODE (var0) == CONVERT_EXPR)\n+\t     {\n+\t       gimplify_conversion (&var0);\n+\t       // Attempt to fill in any within var0 found ARRAY_REF's\n+\t       // element size from corresponding op embedded ARRAY_REF,\n+\t       // if unsuccessful, just punt.\n+\t     }  */\n+\twhile (POINTER_TYPE_P (type))\n+\t  type = TREE_TYPE (type);\n+\tif (int_size_in_bytes (type) < 0)\n+\t  break;\n+\n+\t*var = var0;\n \t*off = off0;\n \treturn;\n       }"}]}