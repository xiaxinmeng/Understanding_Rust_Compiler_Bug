{"sha": "0fdc587ba2b06afff935090bbc14b8b8f628aace", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZkYzU4N2JhMmIwNmFmZmY5MzUwOTBiYmMxNGI4YjhmNjI4YWFjZQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-05-01T23:37:50Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-05-01T23:37:50Z"}, "message": "dwarf2out.c (decl_scope_table, [...]): Use VEC instead of VARRAY.\n\n\t* dwarf2out.c (decl_scope_table, push_decl_scope,\n\tpop_decl_scope, scope_die_for, dwarf2out_init): Use VEC\n\tinstead of VARRAY.\n\nFrom-SVN: r99086", "tree": {"sha": "ccff94cf639dfc1db5c4dfc014d608fcd3027a0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccff94cf639dfc1db5c4dfc014d608fcd3027a0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fdc587ba2b06afff935090bbc14b8b8f628aace", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fdc587ba2b06afff935090bbc14b8b8f628aace", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fdc587ba2b06afff935090bbc14b8b8f628aace", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fdc587ba2b06afff935090bbc14b8b8f628aace/comments", "author": null, "committer": null, "parents": [{"sha": "26caf96068ac79c511e4d78e8a7d54c72fde093e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26caf96068ac79c511e4d78e8a7d54c72fde093e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26caf96068ac79c511e4d78e8a7d54c72fde093e"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "f0e58f4153dea9d0bfc8d5156832768323fc0191", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fdc587ba2b06afff935090bbc14b8b8f628aace/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fdc587ba2b06afff935090bbc14b8b8f628aace/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0fdc587ba2b06afff935090bbc14b8b8f628aace", "patch": "@@ -5,6 +5,10 @@\n \n \t* global.c (calculate_reg_pav): Use VEC instead of VARRAY.\n \n+\t* dwarf2out.c (decl_scope_table, push_decl_scope,\n+\tpop_decl_scope, scope_die_for, dwarf2out_init): Use VEC\n+\tinstead of VARRAY.\n+\n 2005-05-01  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR C++/14391"}, {"sha": "292a8357cec502f3108f58cec7e88966f1b70a0f", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fdc587ba2b06afff935090bbc14b8b8f628aace/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fdc587ba2b06afff935090bbc14b8b8f628aace/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=0fdc587ba2b06afff935090bbc14b8b8f628aace", "patch": "@@ -184,7 +184,7 @@ static GTY(()) varray_type incomplete_types;\n    of declaration scopes at the current scope and containing\n    scopes.  This table is used to find the proper place to\n    define type declaration DIE's.  */\n-static GTY(()) varray_type decl_scope_table;\n+static GTY(()) VEC(tree,gc) *decl_scope_table;\n \n /* How to start an assembler comment.  */\n #ifndef ASM_COMMENT_START\n@@ -10667,17 +10667,15 @@ add_name_and_src_coords_attributes (dw_die_ref die, tree decl)\n static void\n push_decl_scope (tree scope)\n {\n-  VARRAY_PUSH_TREE (decl_scope_table, scope);\n+  VEC_safe_push (tree, gc, decl_scope_table, scope);\n }\n \n /* Pop a declaration scope.  */\n \n static inline void\n pop_decl_scope (void)\n {\n-  gcc_assert (VARRAY_ACTIVE_SIZE (decl_scope_table) > 0);\n-\n-  VARRAY_POP (decl_scope_table);\n+  VEC_pop (tree, decl_scope_table);\n }\n \n /* Return the DIE for the scope that immediately contains this type.\n@@ -10720,8 +10718,8 @@ scope_die_for (tree t, dw_die_ref context_die)\n       /* For types, we can just look up the appropriate DIE.  But\n \t first we check to see if we're in the middle of emitting it\n \t so we know where the new DIE should go.  */\n-      for (i = VARRAY_ACTIVE_SIZE (decl_scope_table) - 1; i >= 0; --i)\n-\tif (VARRAY_TREE (decl_scope_table, i) == containing_scope)\n+      for (i = VEC_length (tree, decl_scope_table) - 1; i >= 0; --i)\n+\tif (VEC_index (tree, decl_scope_table, i) == containing_scope)\n \t  break;\n \n       if (i < 0)\n@@ -13470,7 +13468,7 @@ dwarf2out_init (const char *filename ATTRIBUTE_UNUSED)\n \t\t\t\t    decl_loc_table_eq, NULL);\n \n   /* Allocate the initial hunk of the decl_scope_table.  */\n-  VARRAY_TREE_INIT (decl_scope_table, 256, \"decl_scope_table\");\n+  decl_scope_table = VEC_alloc (tree, gc, 256);\n \n   /* Allocate the initial hunk of the abbrev_die_table.  */\n   abbrev_die_table = ggc_alloc_cleared (ABBREV_DIE_TABLE_INCREMENT"}]}