{"sha": "a2d7e58f4ea787eafdf3e7d39567739451d12d39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJkN2U1OGY0ZWE3ODdlYWZkZjNlN2QzOTU2NzczOTQ1MWQxMmQzOQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-03-19T14:23:01Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-05-10T07:33:32Z"}, "message": "LTO plugin: use startswith function.\n\nlto-plugin/ChangeLog:\n\n\t* lto-plugin.c (LTO_SEGMENT_NAME): Remove.\n\t(LTO_SYMTAB_PREFIX): Likewise.\n\t(LTO_SYMTAB_PREFIX_LEN): Likewise.\n\t(LTO_SYMTAB_EXT_PREFIX): Likewise.\n\t(LTO_SYMTAB_EXT_PREFIX_LEN): Likewise.\n\t(LTO_LTO_PREFIX): Likewise.\n\t(LTO_LTO_PREFIX_LEN): Likewise.\n\t(OFFLOAD_SECTION): Likewise.\n\t(OFFLOAD_SECTION_LEN): Likewise.\n\t(startswith): New function.\n\t(all_symbols_read_handler): Use it.\n\t(process_symtab): Likewise.\n\t(process_symtab_extension): Likewise.\n\t(process_offload_section): Likewise.\n\t(process_option): Likewise.", "tree": {"sha": "5336825c5c76b918ed478bfbd3f48dcebeff1643", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5336825c5c76b918ed478bfbd3f48dcebeff1643"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2d7e58f4ea787eafdf3e7d39567739451d12d39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2d7e58f4ea787eafdf3e7d39567739451d12d39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2d7e58f4ea787eafdf3e7d39567739451d12d39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2d7e58f4ea787eafdf3e7d39567739451d12d39/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ba3079dce89d9b63bf5dbd5e320ea2bf96f196b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ba3079dce89d9b63bf5dbd5e320ea2bf96f196b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ba3079dce89d9b63bf5dbd5e320ea2bf96f196b"}], "stats": {"total": 29, "additions": 13, "deletions": 16}, "files": [{"sha": "ff79f4ac462e82aa76569580b9a1ef521697dae6", "filename": "lto-plugin/lto-plugin.c", "status": "modified", "additions": 13, "deletions": 16, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2d7e58f4ea787eafdf3e7d39567739451d12d39/lto-plugin%2Flto-plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2d7e58f4ea787eafdf3e7d39567739451d12d39/lto-plugin%2Flto-plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Flto-plugin.c?ref=a2d7e58f4ea787eafdf3e7d39567739451d12d39", "patch": "@@ -89,16 +89,13 @@ along with this program; see the file COPYING3.  If not see\n \n #define LTO_SEGMENT_NAME \"__GNU_LTO\"\n \n-/* LTO magic section name.  */\n+/* Return true if STR string starts with PREFIX.  */\n \n-#define LTO_SYMTAB_PREFIX\t    \".gnu.lto_.symtab\"\n-#define LTO_SYMTAB_PREFIX_LEN\t    (sizeof (LTO_SYMTAB_PREFIX) - 1)\n-#define LTO_SYMTAB_EXT_PREFIX\t    \".gnu.lto_.ext_symtab\"\n-#define LTO_SYMTAB_EXT_PREFIX_LEN   (sizeof (LTO_SYMTAB_EXT_PREFIX) - 1)\n-#define LTO_LTO_PREFIX\t\t    \".gnu.lto_.lto\"\n-#define LTO_LTO_PREFIX_LEN\t    (sizeof (LTO_LTO_PREFIX) - 1)\n-#define OFFLOAD_SECTION\t\t    \".gnu.offload_lto_.opts\"\n-#define OFFLOAD_SECTION_LEN\t    (sizeof (OFFLOAD_SECTION) - 1)\n+static inline bool\n+startswith (const char *str, const char *prefix)\n+{\n+  return strncmp (str, prefix, strlen (prefix)) == 0;\n+}\n \n /* The part of the symbol table the plugin has to keep track of. Note that we\n    must keep SYMS until all_symbols_read is called to give the linker time to\n@@ -832,7 +829,7 @@ all_symbols_read_handler (void)\n       unsigned int i;\n       for (i = 0; i < num_pass_through_items; i++)\n         {\n-          if (strncmp (pass_through_items[i], \"-l\", 2) == 0)\n+\t  if (startswith (pass_through_items[i], \"-l\"))\n             add_input_library (pass_through_items[i] + 2);\n           else\n             add_input_file (pass_through_items[i]);\n@@ -1022,7 +1019,7 @@ process_symtab (void *data, const char *name, off_t offset, off_t length)\n   char *s;\n   char *secdatastart, *secdata;\n \n-  if (strncmp (name, LTO_SYMTAB_PREFIX, LTO_SYMTAB_PREFIX_LEN) != 0)\n+  if (!startswith (name, \".gnu.lto_.symtab\"))\n     return 1;\n \n   s = strrchr (name, '.');\n@@ -1074,7 +1071,7 @@ process_symtab_extension (void *data, const char *name, off_t offset,\n   char *s;\n   char *secdatastart, *secdata;\n \n-  if (strncmp (name, LTO_SYMTAB_EXT_PREFIX, LTO_SYMTAB_EXT_PREFIX_LEN) != 0)\n+  if (!startswith (name, \".gnu.lto_.ext_symtab\"))\n     return 1;\n \n   s = strrchr (name, '.');\n@@ -1122,7 +1119,7 @@ process_symtab_extension (void *data, const char *name, off_t offset,\n static int\n process_offload_section (void *data, const char *name, off_t offset, off_t len)\n {\n-  if (!strncmp (name, OFFLOAD_SECTION, OFFLOAD_SECTION_LEN))\n+  if (startswith (name, \".gnu.offload_lto_.opts\"))\n     {\n       struct plugin_objfile *obj = (struct plugin_objfile *) data;\n       obj->offload = 1;\n@@ -1325,15 +1322,15 @@ process_option (const char *option)\n     save_temps = true;\n   else if (strcmp (option, \"-nop\") == 0)\n     nop = 1;\n-  else if (!strncmp (option, \"-pass-through=\", strlen(\"-pass-through=\")))\n+  else if (startswith (option, \"-pass-through=\"))\n     {\n       num_pass_through_items++;\n       pass_through_items = xrealloc (pass_through_items,\n \t\t\t\t     num_pass_through_items * sizeof (char *));\n       pass_through_items[num_pass_through_items - 1] =\n           xstrdup (option + strlen (\"-pass-through=\"));\n     }\n-  else if (!strncmp (option, \"-sym-style=\", sizeof (\"-sym-style=\") - 1))\n+  else if (startswith (option, \"-sym-style=\"))\n     {\n       switch (option[sizeof (\"-sym-style=\") - 1])\n \t{\n@@ -1356,7 +1353,7 @@ process_option (const char *option)\n       size = lto_wrapper_num_args * sizeof (char *);\n       lto_wrapper_argv = (char **) xrealloc (lto_wrapper_argv, size);\n       lto_wrapper_argv[lto_wrapper_num_args - 1] = opt;\n-      if (strncmp (option, \"-fresolution=\", sizeof (\"-fresolution=\") - 1) == 0)\n+      if (startswith (option, \"-fresolution=\"))\n \tresolution_file = opt + sizeof (\"-fresolution=\") - 1;\n     }\n   save_temps = save_temps || debug;"}]}