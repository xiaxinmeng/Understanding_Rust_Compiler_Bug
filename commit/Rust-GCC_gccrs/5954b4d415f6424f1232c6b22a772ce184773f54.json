{"sha": "5954b4d415f6424f1232c6b22a772ce184773f54", "node_id": "C_kwDOANBUbNoAKDU5NTRiNGQ0MTVmNjQyNGYxMjMyYzZiMjJhNzcyY2UxODQ3NzNmNTQ", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2021-12-13T14:15:16Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2021-12-13T15:16:59Z"}, "message": "aarch64: Add command-line support for Armv8.8-a\n\nThis final patch in the series is much simpler and adds command-line support for -march=armv8.8-a,\nmaking use of the +mops features added in the previous patches.\n\nBootstrapped and tested on aarch64-none-linux-gnu.\n\ngcc/ChangeLog:\n\n\t* config/aarch64/aarch64-arches.def (armv8.8-a): Define.\n\t* config/aarch64/aarch64.h (AARCH64_FL_V8_8): Define.\n\t(AARCH64_FL_FOR_ARCH8_8): Define.\n\t* doc/invoke.texi: Document -march=armv8.8-a.", "tree": {"sha": "c4ba2642c856cd63e659766e4e3bc0f88a2bb1ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4ba2642c856cd63e659766e4e3bc0f88a2bb1ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5954b4d415f6424f1232c6b22a772ce184773f54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5954b4d415f6424f1232c6b22a772ce184773f54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5954b4d415f6424f1232c6b22a772ce184773f54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5954b4d415f6424f1232c6b22a772ce184773f54/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3bd985e799b63e2133e89870472ac36d06015d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3bd985e799b63e2133e89870472ac36d06015d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3bd985e799b63e2133e89870472ac36d06015d3"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "1b5f062694b7984127eab916936e59b5420318e7", "filename": "gcc/config/aarch64/aarch64-arches.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5954b4d415f6424f1232c6b22a772ce184773f54/gcc%2Fconfig%2Faarch64%2Faarch64-arches.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5954b4d415f6424f1232c6b22a772ce184773f54/gcc%2Fconfig%2Faarch64%2Faarch64-arches.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-arches.def?ref=5954b4d415f6424f1232c6b22a772ce184773f54", "patch": "@@ -38,6 +38,7 @@ AARCH64_ARCH(\"armv8.4-a\",     generic,\t     8_4A,\t8,  AARCH64_FL_FOR_ARCH8_4)\n AARCH64_ARCH(\"armv8.5-a\",     generic,\t     8_5A,\t8,  AARCH64_FL_FOR_ARCH8_5)\n AARCH64_ARCH(\"armv8.6-a\",     generic,\t     8_6A,\t8,  AARCH64_FL_FOR_ARCH8_6)\n AARCH64_ARCH(\"armv8.7-a\",     generic,       8_7A,      8,  AARCH64_FL_FOR_ARCH8_7)\n+AARCH64_ARCH(\"armv8.8-a\",     generic,       8_8A,      8,  AARCH64_FL_FOR_ARCH8_8)\n AARCH64_ARCH(\"armv8-r\",       generic,\t     8R  ,\t8,  AARCH64_FL_FOR_ARCH8_R)\n AARCH64_ARCH(\"armv9-a\",       generic,\t     9A  ,\t9,  AARCH64_FL_FOR_ARCH9)\n "}, {"sha": "5a590aaa3fbddfbab3f035edc724d10ad653c148", "filename": "gcc/config/aarch64/aarch64.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5954b4d415f6424f1232c6b22a772ce184773f54/gcc%2Fconfig%2Faarch64%2Faarch64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5954b4d415f6424f1232c6b22a772ce184773f54/gcc%2Fconfig%2Faarch64%2Faarch64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.h?ref=5954b4d415f6424f1232c6b22a772ce184773f54", "patch": "@@ -243,6 +243,9 @@ extern unsigned aarch64_architecture_version;\n /* Hardware memory operation instructions.  */\n #define AARCH64_FL_MOPS       (1ULL << 44)\n \n+/* Armv8.8-a architecture extensions.  */\n+#define AARCH64_FL_V8_8       (1ULL << 45)\n+\n /* Has FP and SIMD.  */\n #define AARCH64_FL_FPSIMD     (AARCH64_FL_FP | AARCH64_FL_SIMD)\n \n@@ -269,6 +272,8 @@ extern unsigned aarch64_architecture_version;\n    | AARCH64_FL_I8MM | AARCH64_FL_BF16)\n #define AARCH64_FL_FOR_ARCH8_7\t\t\t\\\n   (AARCH64_FL_FOR_ARCH8_6 | AARCH64_FL_V8_7 | AARCH64_FL_LS64)\n+#define AARCH64_FL_FOR_ARCH8_8\t\t\t\\\n+  (AARCH64_FL_FOR_ARCH8_7 | AARCH64_FL_V8_8 | AARCH64_FL_MOPS)\n \n #define AARCH64_FL_FOR_ARCH8_R     \\\n   (AARCH64_FL_FOR_ARCH8_4 | AARCH64_FL_V8_R)"}, {"sha": "221c7c3ea486c4565299c1964931c14d7deb7043", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5954b4d415f6424f1232c6b22a772ce184773f54/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5954b4d415f6424f1232c6b22a772ce184773f54/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=5954b4d415f6424f1232c6b22a772ce184773f54", "patch": "@@ -18853,6 +18853,7 @@ and the features that they enable by default:\n @item @samp{armv8.5-a} @tab Armv8.5-A @tab @samp{armv8.4-a}, @samp{+sb}, @samp{+ssbs}, @samp{+predres}\n @item @samp{armv8.6-a} @tab Armv8.6-A @tab @samp{armv8.5-a}, @samp{+bf16}, @samp{+i8mm}\n @item @samp{armv8.7-a} @tab Armv8.7-A @tab @samp{armv8.6-a}, @samp{+ls64}\n+@item @samp{armv8.8-a} @tab Armv8.8-a @tab @samp{armv8.7-a}, @samp{+mops}\n @item @samp{armv9-a} @tab Armv9-A @tab @samp{armv8.5-a}, @samp{+sve}, @samp{+sve2}\n @item @samp{armv8-r} @tab Armv8-R @tab @samp{armv8-r}\n @end multitable\n@@ -19146,7 +19147,8 @@ Enable the 64-byte atomic load and store instructions for accelerators.\n This option is enabled by default for @option{-march=armv8.7-a}.\n @item mops\n Enable the instructions to accelerate memory operations like @code{memcpy},\n-@code{memmove}, @code{memset}.\n+@code{memmove}, @code{memset}.  This option is enabled by default for\n+@option{-march=armv8.8-a}\n @item flagm\n Enable the Flag Manipulation instructions Extension.\n @item pauth"}]}