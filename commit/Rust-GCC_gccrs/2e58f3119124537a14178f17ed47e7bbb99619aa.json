{"sha": "2e58f3119124537a14178f17ed47e7bbb99619aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU1OGYzMTE5MTI0NTM3YTE0MTc4ZjE3ZWQ0N2U3YmJiOTk2MTlhYQ==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.ch", "date": "2005-11-11T22:31:35Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2005-11-11T22:31:35Z"}, "message": "target-libpath.exp (get_shlib_extension): New proc.\n\n2005-11-11  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* lib/target-libpath.exp (get_shlib_extension): New proc.\n\t* lib/g++.exp (g++_link_flags): Add flags in case of shared only build.\n\t* lib/gfortran.exp (gfortran_link_flags): Likewise.\n\t* lib/objc.exp (objc_target_compile): Likewise.\n\t* lib/obj-c++.exp (obj-c++_link_flags): Likewise. Fix multilib libgcc\n\tdetection.\n\nFrom-SVN: r106802", "tree": {"sha": "9912b445975387b48d7dcfe5b9db490ec311b6e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9912b445975387b48d7dcfe5b9db490ec311b6e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e58f3119124537a14178f17ed47e7bbb99619aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e58f3119124537a14178f17ed47e7bbb99619aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e58f3119124537a14178f17ed47e7bbb99619aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e58f3119124537a14178f17ed47e7bbb99619aa/comments", "author": null, "committer": null, "parents": [{"sha": "ef9db8d5dd2a8a1685693090b2225ab1db8c0a73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef9db8d5dd2a8a1685693090b2225ab1db8c0a73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef9db8d5dd2a8a1685693090b2225ab1db8c0a73"}], "stats": {"total": 151, "additions": 117, "deletions": 34}, "files": [{"sha": "59e5d45929c5b2ffbd4990274208a666e74f894b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e58f3119124537a14178f17ed47e7bbb99619aa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e58f3119124537a14178f17ed47e7bbb99619aa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2e58f3119124537a14178f17ed47e7bbb99619aa", "patch": "@@ -1,3 +1,12 @@\n+2005-11-11  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* lib/target-libpath.exp (get_shlib_extension): New proc.\n+\t* lib/g++.exp (g++_link_flags): Add flags in case of shared only build.\n+\t* lib/gfortran.exp (gfortran_link_flags): Likewise.\n+\t* lib/objc.exp (objc_target_compile): Likewise.\n+\t* lib/obj-c++.exp (obj-c++_link_flags): Likewise. Fix multilib libgcc\n+\tdetection.\n+\n 2005-11-11  Andreas Tobler  <a.tobler@schweiz.ch>\n \n \t* gfortran.dg/static_linking_1.f: Fix static_libgfortran processing."}, {"sha": "c907e5422d4ffe23cdd04fc450795574ac0e22e3", "filename": "gcc/testsuite/lib/g++.exp", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e58f3119124537a14178f17ed47e7bbb99619aa/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e58f3119124537a14178f17ed47e7bbb99619aa/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp?ref=2e58f3119124537a14178f17ed47e7bbb99619aa", "patch": "@@ -1,16 +1,16 @@\n-# Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 2000, 2001, 2002, 2003, 2004\n-# Free Software Foundation, Inc.\n+# Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 2000, 2001, 2002, 2003,\n+# 2004, 2005 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n # the Free Software Foundation; either version 2 of the License, or\n # (at your option) any later version.\n-# \n+#\n # This program is distributed in the hope that it will be useful,\n # but WITHOUT ANY WARRANTY; without even the implied warranty of\n # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n # GNU General Public License for more details.\n-# \n+#\n # You should have received a copy of the GNU General Public License\n # along with this program; if not, write to the Free Software\n # Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n@@ -100,12 +100,16 @@ proc g++_link_flags { paths } {\n     global srcdir\n     global ld_library_path\n     global GXX_UNDER_TEST\n+    global shlib_ext\n \n     set gccpath ${paths}\n     set libio_dir \"\"\n     set flags \"\"\n     set ld_library_path \".\"\n \n+    set shlib_ext [get_shlib_extension]\n+    verbose \"shared lib extension: $shlib_ext\"\n+\n     if { $gccpath != \"\" } {\n       if [file exists \"${gccpath}/lib/libstdc++.a\"] {\n           append ld_library_path \":${gccpath}/lib\"\n@@ -122,6 +126,12 @@ proc g++_link_flags { paths } {\n           append flags \" -L${gccpath}/libstdc++-v3/src/.libs \"\n           append ld_library_path \":${gccpath}/libstdc++-v3/src/.libs\"\n       }\n+      # Look for libstdc++.${shlib_ext}.\n+      if [file exists \"${gccpath}/libstdc++-v3/src/.libs/libstdc++.${shlib_ext}\"] {\n+\t  append flags \" -L${gccpath}/libstdc++-v3/src/.libs \"\n+\t  append ld_library_path \":${gccpath}/libstdc++-v3/src/.libs\"\n+      }\n+\n       if [file exists \"${gccpath}/libiberty/libiberty.a\"] {\n           append flags \"-L${gccpath}/libiberty \"\n       }"}, {"sha": "435d715ceef82579e741cd395efda37c68f1c1e7", "filename": "gcc/testsuite/lib/gfortran.exp", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e58f3119124537a14178f17ed47e7bbb99619aa/gcc%2Ftestsuite%2Flib%2Fgfortran.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e58f3119124537a14178f17ed47e7bbb99619aa/gcc%2Ftestsuite%2Flib%2Fgfortran.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgfortran.exp?ref=2e58f3119124537a14178f17ed47e7bbb99619aa", "patch": "@@ -1,15 +1,15 @@\n-# Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+# Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n # the Free Software Foundation; either version 2 of the License, or\n # (at your option) any later version.\n-# \n+#\n # This program is distributed in the hope that it will be useful,\n # but WITHOUT ANY WARRANTY; without even the implied warranty of\n # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n # GNU General Public License for more details.\n-# \n+#\n # You should have received a copy of the GNU General Public License\n # along with this program; if not, write to the Free Software\n # Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n@@ -76,17 +76,24 @@ proc gfortran_link_flags { paths } {\n     global srcdir\n     global ld_library_path\n     global GFORTRAN_UNDER_TEST\n+    global shlib_ext\n \n     set gccpath ${paths}\n     set libio_dir \"\"\n     set flags \"\"\n     set ld_library_path \".\"\n+    set shlib_ext [get_shlib_extension]\n+    verbose \"shared lib extension: $shlib_ext\"\n \n     if { $gccpath != \"\" } {\n       if [file exists \"${gccpath}/libgfortran/.libs/libgfortran.a\"] {\n           append flags \"-L${gccpath}/libgfortran/.libs \"\n           append ld_library_path \":${gccpath}/libgfortran/.libs\"\n       }\n+      if [file exists \"${gccpath}/libgfortran/.libs/libgfortran.${shlib_ext}\"] {\n+\t  append flags \"-L${gccpath}/libgfortran/.libs \"\n+\t  append ld_library_path \":${gccpath}/libgfortran/.libs\"\n+      }\n       if [file exists \"${gccpath}/libgfortran/libgforbegin.a\"] {\n           append flags \"-L${gccpath}/libgfortran \"\n       }"}, {"sha": "ccb82d0ffc7e711fd68cb49b0b5df6cefc4fba97", "filename": "gcc/testsuite/lib/obj-c++.exp", "status": "modified", "additions": 42, "deletions": 20, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e58f3119124537a14178f17ed47e7bbb99619aa/gcc%2Ftestsuite%2Flib%2Fobj-c%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e58f3119124537a14178f17ed47e7bbb99619aa/gcc%2Ftestsuite%2Flib%2Fobj-c%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fobj-c%2B%2B.exp?ref=2e58f3119124537a14178f17ed47e7bbb99619aa", "patch": "@@ -1,15 +1,15 @@\n-# Copyright (C) 2004 Free Software Foundation, Inc.\n+# Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n # the Free Software Foundation; either version 2 of the License, or\n # (at your option) any later version.\n-# \n+#\n # This program is distributed in the hope that it will be useful,\n # but WITHOUT ANY WARRANTY; without even the implied warranty of\n # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n # GNU General Public License for more details.\n-# \n+#\n # You should have received a copy of the GNU General Public License\n # along with this program; if not, write to the Free Software\n # Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n@@ -100,11 +100,14 @@ proc obj-c++_link_flags { paths } {\n     global srcdir\n     global ld_library_path\n     global OBJCXX_UNDER_TEST\n+    global shlib_ext\n \n     set gccpath ${paths}\n     set libio_dir \"\"\n     set flags \"\"\n     set ld_library_path \".\"\n+    set shlib_ext [get_shlib_extension]\n+    verbose \"shared lib extension: $shlib_ext\"\n \n     if { $gccpath != \"\" } {\n       if [file exists \"${gccpath}/lib/libstdc++.a\"] {\n@@ -122,6 +125,11 @@ proc obj-c++_link_flags { paths } {\n           append flags \" -L${gccpath}/libstdc++-v3/src/.libs \"\n           append ld_library_path \":${gccpath}/libstdc++-v3/src/.libs\"\n       }\n+      # Look for libstdc++.${shlib_ext}.\n+      if [file exists \"${gccpath}/libstdc++-v3/src/.libs/libstdc++.${shlib_ext}\"] {\n+\t  append flags \" -L${gccpath}/libstdc++-v3/src/.libs \"\n+\t  append ld_library_path \":${gccpath}/libstdc++-v3/src/.libs\"\n+      }\n       if [file exists \"${gccpath}/libiberty/libiberty.a\"] {\n           append flags \"-L${gccpath}/libiberty \"\n       }\n@@ -134,27 +142,26 @@ proc obj-c++_link_flags { paths } {\n       if { $libobjc_dir == \"\"} {\n \t  set libobjc_dir [lookfor_file ${objcpath} libobjc/.libs/libobjc-gnu.a]\n       }\n+      # Now check if we have a shared only build.\n+      if { $libobjc_dir == \"\"} {\n+\t  set libobjc_dir \\\n+\t      [lookfor_file ${objcpath} libobjc/.libs/libobjc.${shlib_ext}]\n+      }\n+      if { $libobjc_dir == \"\"} {\n+\t  set libobjc_dir \\\n+\t      [lookfor_file ${objcpath} libobjc/.libs/libobjc-gnu.${shlib_ext}]\n+      }\n+\n+      verbose \"libobjc_dir: $libobjc_dir\"\n+\n       if { $libobjc_dir != \"\" } {\n \t  set libobjc_dir [file dirname ${libobjc_dir}]\n \t  append flags \"-L${libobjc_dir}\"\n \t  append ld_library_path \":${libobjc_dir}\"\n       }\n-    \n-      append ld_library_path \":${rootme}\"\n-      set compiler [lindex $OBJCXX_UNDER_TEST 0]\n-      if { [is_remote host] == 0 && [which $compiler] != 0 } {\n-\tforeach i \"[exec $compiler --print-multi-lib]\" {\n-\t  set mldir \"\"\n-\t  regexp -- \"\\[a-z0-9=/\\.-\\]*;\" $i mldir\n-\t  set mldir [string trimright $mldir \"\\;@\"]\n-\t  if { \"$mldir\" == \".\" } {\n-\t    continue\n-\t  }\n-\t  if { [llength [glob -nocomplain ${rootme}/${mldir}/libgcc_s*.so.*]] == 1 } {\n-\t    append ld_library_path \":${rootme}/${mldir}\"\n-\t  }\n-\t}\n-      }\n+      append ld_library_path \\\n+\t  [gcc-set-multilib-library-path $OBJCXX_UNDER_TEST]\n+\n     } else {\n       global tool_root_dir;\n \n@@ -274,8 +281,11 @@ proc obj-c++_target_compile { source dest type options } {\n     global gluefile wrap_flags\n     global ALWAYS_OBJCXXFLAGS\n     global OBJCXX_UNDER_TEST\n+    global shlib_ext\n \n     lappend options \"libs=-lobjc\"\n+    set shlib_ext [get_shlib_extension]\n+    verbose \"shared lib extension: $shlib_ext\"\n \n     if { [target_info needs_status_wrapper] != \"\" && [info exists gluefile] } {\n \tlappend options \"libs=${gluefile}\"\n@@ -292,9 +302,21 @@ proc obj-c++_target_compile { source dest type options } {\n     if { $libobjc_dir == \"\"} {\n       verbose \"see if we have -fgnu-runtime in options\"\n       if [regexp \".*-fgnu-runtime.*\" \"${options}\" ] {\n-        set libobjc_dir [lookfor_file ${objcpath} libobjc/.libs/libobjc-gnu.a]\n+\t  set libobjc_dir [lookfor_file ${objcpath} libobjc/.libs/libobjc-gnu.a]\n       }\n     }\n+    if { $libobjc_dir == \"\"} {\n+\tset libobjc_dir \\\n+\t    [lookfor_file ${objcpath} libobjc/.libs/libobjc.${shlib_ext}]\n+    }\n+    if { $libobjc_dir == \"\"} {\n+\tverbose \"see if we have -fgnu-runtime in options\"\n+\tif [regexp \".*-fgnu-runtime.*\" \"${options}\"] {\n+\t set libobjc_dir \\\n+\t     [lookfor_file ${objcpath} libobjc/.libs/libobjc-gnu.${shlib_ext}]\n+\t}\n+    }\n+\n     if { $libobjc_dir != \"\" } {\n \tset objc_include_dir \"${srcdir}/../../libobjc\"\n \tlappend options \"additional_flags=-I${objc_include_dir}\""}, {"sha": "18cdfeaa880a3ee7046b37e3139eb1276bb5c9c8", "filename": "gcc/testsuite/lib/objc.exp", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e58f3119124537a14178f17ed47e7bbb99619aa/gcc%2Ftestsuite%2Flib%2Fobjc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e58f3119124537a14178f17ed47e7bbb99619aa/gcc%2Ftestsuite%2Flib%2Fobjc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fobjc.exp?ref=2e58f3119124537a14178f17ed47e7bbb99619aa", "patch": "@@ -1,16 +1,16 @@\n-# Copyright (C) 1992, 1993, 1994, 1996, 1997, 2000, 2001, 2002, 2004\n+# Copyright (C) 1992, 1993, 1994, 1996, 1997, 2000, 2001, 2002, 2004, 2005\n # Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n # the Free Software Foundation; either version 2 of the License, or\n # (at your option) any later version.\n-# \n+#\n # This program is distributed in the hope that it will be useful,\n # but WITHOUT ANY WARRANTY; without even the implied warranty of\n # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n # GNU General Public License for more details.\n-# \n+#\n # You should have received a copy of the GNU General Public License\n # along with this program; if not, write to the Free Software\n # Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n@@ -127,9 +127,12 @@ proc objc_target_compile { source dest type options } {\n     global TOOL_OPTIONS\n     global ld_library_path\n     global objc_libgcc_s_path\n+    global shlib_ext\n \n     set ld_library_path \".:${objc_libgcc_s_path}\"\n     lappend options \"libs=-lobjc\"\n+    set shlib_ext [get_shlib_extension]\n+    verbose \"shared lib extension: $shlib_ext\"\n \n     if { [target_info needs_status_wrapper]!=\"\" && [info exists gluefile] } {\n \tlappend options \"libs=${gluefile}\"\n@@ -161,9 +164,21 @@ proc objc_target_compile { source dest type options } {\n     if { $libobjc_dir == \"\"} {\n       verbose \"see if we have -fgnu-runtime in options\"\n       if [regexp \".*-fgnu-runtime.*\" \"${options}\"] {\n-        set libobjc_dir [lookfor_file ${objcpath} libobjc/.libs/libobjc-gnu.a]\n+\tset libobjc_dir [lookfor_file ${objcpath} libobjc/.libs/libobjc-gnu.a]\n       }\n     }\n+    # Now check if we have a shared only build.\n+    if { $libobjc_dir == \"\"} {\n+     set libobjc_dir \\\n+\t [lookfor_file ${objcpath} libobjc/.libs/libobjc.${shlib_ext}]\n+    }\n+    if { $libobjc_dir == \"\"} {\n+\tverbose \"see if we have -fgnu-runtime in options\"\n+\tif [regexp \".*-fgnu-runtime.*\" \"${options}\"] {\n+\t set libobjc_dir \\\n+\t     [lookfor_file ${objcpath} libobjc/.libs/libobjc-gnu.${shlib_ext}]\n+\t}\n+    }\n     if { $libobjc_dir != \"\" } {\n \tset objc_include_dir \"${srcdir}/../../libobjc\"\n \tlappend options \"additional_flags=-I${objc_include_dir}\""}, {"sha": "8aca0edf43e946afab8d7fbe3734b3084fe736fd", "filename": "gcc/testsuite/lib/target-libpath.exp", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e58f3119124537a14178f17ed47e7bbb99619aa/gcc%2Ftestsuite%2Flib%2Ftarget-libpath.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e58f3119124537a14178f17ed47e7bbb99619aa/gcc%2Ftestsuite%2Flib%2Ftarget-libpath.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-libpath.exp?ref=2e58f3119124537a14178f17ed47e7bbb99619aa", "patch": "@@ -1,15 +1,15 @@\n-# Copyright (C) 2004 Free Software Foundation, Inc.\n+# Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n # the Free Software Foundation; either version 2 of the License, or\n # (at your option) any later version.\n-# \n+#\n # This program is distributed in the hope that it will be useful,\n # but WITHOUT ANY WARRANTY; without even the implied warranty of\n # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n # GNU General Public License for more details.\n-# \n+#\n # You should have received a copy of the GNU General Public License\n # along with this program; if not, write to the Free Software\n # Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n@@ -235,3 +235,23 @@ proc restore_ld_library_path_env_vars { } {\n     unsetenv DYLD_LIBRARY_PATH\n   }\n }\n+\n+#######################################\n+# proc get_shlib_extension { }\n+#######################################\n+\n+proc get_shlib_extension { } {\n+    global shlib_ext\n+\n+    if { [ istarget *-*-darwin* ] } {\n+\tset shlib_ext \"dylib\"\n+    } elseif { [ istarget *-*-cygwin* ] || [ istarget *-*-mingw* ] } {\n+\tset shlib_ext \"dll\"\n+    } elseif { [ istarget hppa*-*-hpux* ] } {\n+\tset shlib_ext \"sl\"\n+    } else {\n+\tset shlib_ext \"so\"\n+    }\n+    return $shlib_ext\n+}\n+"}]}