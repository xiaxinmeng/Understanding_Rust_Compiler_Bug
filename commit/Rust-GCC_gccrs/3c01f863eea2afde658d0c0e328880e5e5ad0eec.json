{"sha": "3c01f863eea2afde658d0c0e328880e5e5ad0eec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MwMWY4NjNlZWEyYWZkZTY1OGQwYzBlMzI4ODgwZTVlNWFkMGVlYw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-04-07T01:33:35Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-04-07T01:33:35Z"}, "message": "(va_arg): Cast argument pointer to (char *).\n\nFrom-SVN: r4039", "tree": {"sha": "4201807b7f15c9abfe77973142ab8bfa5c0ef096", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4201807b7f15c9abfe77973142ab8bfa5c0ef096"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c01f863eea2afde658d0c0e328880e5e5ad0eec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c01f863eea2afde658d0c0e328880e5e5ad0eec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c01f863eea2afde658d0c0e328880e5e5ad0eec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c01f863eea2afde658d0c0e328880e5e5ad0eec/comments", "author": null, "committer": null, "parents": [{"sha": "39ab948e9d625b83d5bae53e88f3695032e0722e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39ab948e9d625b83d5bae53e88f3695032e0722e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39ab948e9d625b83d5bae53e88f3695032e0722e"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "f3bac34a5603c230c32323d5a42f942d42d1b630", "filename": "gcc/ginclude/va-sparc.h", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c01f863eea2afde658d0c0e328880e5e5ad0eec/gcc%2Fginclude%2Fva-sparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c01f863eea2afde658d0c0e328880e5e5ad0eec/gcc%2Fginclude%2Fva-sparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-sparc.h?ref=3c01f863eea2afde658d0c0e328880e5e5ad0eec", "patch": "@@ -64,21 +64,22 @@ void va_end (__gnuc_va_list);\t\t/* Defined in libgcc.a */\n /* We don't declare the union member `d' to have type TYPE\n    because that would lose in C++ if TYPE has a constructor.  */\n /* We cast to void * and then to TYPE * because this avoids\n-   a warning about increasing the alignment requirement.  */\n+   a warning about increasing the alignment requirement.\n+   The casts to char * avoid warnings about invalid pointer arithmetic.  */\n #define va_arg(pvar,TYPE)\t\t\t\t\t\\\n __extension__\t\t\t\t\t\t\t\\\n ({ TYPE __va_temp;\t\t\t\t\t\t\\\n    ((__builtin_classify_type (__va_temp) >= 12)\t\t\t\\\n-    ? ((pvar) += __va_rounded_size (TYPE *),\t\t\t\\\n-       **(TYPE **) (void *) ((pvar) - __va_rounded_size (TYPE *))) \\\n+    ? ((pvar) = (char *)(pvar) + __va_rounded_size (TYPE *),\t\\\n+       **(TYPE **) (void *) ((char *)(pvar) - __va_rounded_size (TYPE *))) \\\n     : __va_rounded_size (TYPE) == 8\t\t\t\t\\\n     ? ({ union {char __d[sizeof (TYPE)]; int __i[2];} __u;\t\\\n \t __u.__i[0] = ((int *) (void *) (pvar))[0];\t\t\\\n \t __u.__i[1] = ((int *) (void *) (pvar))[1];\t\t\\\n-\t (pvar) += 8;\t\t\t\t\t\t\\\n+\t (pvar) = (char *)(pvar) + 8;\t\t\t\t\\\n \t *(TYPE *) (void *) __u.__d; })\t\t\t\t\\\n-    : ((pvar) += __va_rounded_size (TYPE),\t\t\t\\\n-       *((TYPE *) (void *) ((pvar) - __va_rounded_size (TYPE)))));})\n+    : ((pvar) = (char *)(pvar) + __va_rounded_size (TYPE),\t\\\n+       *((TYPE *) (void *) ((char *)(pvar) - __va_rounded_size (TYPE)))));})\n \n #endif /* defined (_STDARG_H) || defined (_VARARGS_H) */\n "}]}