{"sha": "83b83ae97a8d5d291a6209bad3610c686a7138e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNiODNhZTk3YThkNWQyOTFhNjIwOWJhZDM2MTBjNjg2YTcxMzhlMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-10-27T15:01:28Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-10-27T15:01:28Z"}, "message": "re PR libstdc++/37522 (Incorrect vswprintf prototype breaks __to_xstring)\n\n2008-10-27  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/37522\n\t* config/os/mingw32/os_defines.h: Define _GLIBCXX_HAVE_BROKEN_VSWPRINTF\n\t* include/bits/basic_string.h: Guard string conversions with \n\t!defined(_GLIBCXX_HAVE_BROKEN_VSWPRINTF) too.\n\t* testsuite/lib/libstdc++.exp (check_v3_target_string_conversions):\n\tNew.\n\t* testsuite/lib/dg-options.exp (dg-require-string-conversions): New.\n\t* testsuite/21_strings/basic_string/numeric_conversions/char/stof.cc:\n\tUse the latter.\n\t* testsuite/21_strings/basic_string/numeric_conversions/char/stoll.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/char/stoi.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/char/stol.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/char/\n\tstoull.cc: Likewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/char/stold.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/char/stoul.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/char/\n\tto_string.cc: Likewise.\n\t* testsuite/21_strings/basic_string/numeric_conversions/char/stod.cc:\n\tLikewise.\n\nFrom-SVN: r141382", "tree": {"sha": "1dfe1ecc3ac16dd429c9cf7558681b2482700887", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1dfe1ecc3ac16dd429c9cf7558681b2482700887"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83b83ae97a8d5d291a6209bad3610c686a7138e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83b83ae97a8d5d291a6209bad3610c686a7138e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83b83ae97a8d5d291a6209bad3610c686a7138e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83b83ae97a8d5d291a6209bad3610c686a7138e3/comments", "author": null, "committer": null, "parents": [{"sha": "c3e39a4729808963ecc5426ce563628568c2c4ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3e39a4729808963ecc5426ce563628568c2c4ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3e39a4729808963ecc5426ce563628568c2c4ba"}], "stats": {"total": 158, "additions": 120, "deletions": 38}, "files": [{"sha": "af59f6383076787f183e98a28fa897074d705b16", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=83b83ae97a8d5d291a6209bad3610c686a7138e3", "patch": "@@ -1,3 +1,31 @@\n+2008-10-27  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/37522\n+\t* config/os/mingw32/os_defines.h: Define _GLIBCXX_HAVE_BROKEN_VSWPRINTF\n+\t* include/bits/basic_string.h: Guard string conversions with \n+\t!defined(_GLIBCXX_HAVE_BROKEN_VSWPRINTF) too.\n+\t* testsuite/lib/libstdc++.exp (check_v3_target_string_conversions):\n+\tNew.\n+\t* testsuite/lib/dg-options.exp (dg-require-string-conversions): New.\n+\t* testsuite/21_strings/basic_string/numeric_conversions/char/stof.cc:\n+\tUse the latter.\n+\t* testsuite/21_strings/basic_string/numeric_conversions/char/stoll.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/numeric_conversions/char/stoi.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/numeric_conversions/char/stol.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/numeric_conversions/char/\n+\tstoull.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/numeric_conversions/char/stold.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/numeric_conversions/char/stoul.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/numeric_conversions/char/\n+\tto_string.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/numeric_conversions/char/stod.cc:\n+\tLikewise.\n+\n 2008-10-24  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* config/os/generic/error_constants.h (enum errc): Remove"}, {"sha": "017fd8759bd33f607131bdc6291f3e678fde4d12", "filename": "libstdc++-v3/config/os/mingw32/os_defines.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fos_defines.h?ref=83b83ae97a8d5d291a6209bad3610c686a7138e3", "patch": "@@ -1,6 +1,7 @@\n // Specific definitions for generic platforms  -*- C++ -*-\n \n-// Copyright (C) 2000, 2001, 2002, 2003, 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -52,4 +53,7 @@\n // See libstdc++/20806.\n #define _GLIBCXX_HAVE_DOS_BASED_FILESYSTEM 1\n \n+// See  libstdc++/37522.\n+#define _GLIBCXX_HAVE_BROKEN_VSWPRINTF 1\n+\n #endif"}, {"sha": "595a1560fa6f8064b8d317e7362b42f2282fd2bf", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=83b83ae97a8d5d291a6209bad3610c686a7138e3", "patch": "@@ -2562,7 +2562,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n _GLIBCXX_END_NAMESPACE\n \n-#if (defined(__GXX_EXPERIMENTAL_CXX0X__) && defined(_GLIBCXX_USE_C99))\n+#if (defined(__GXX_EXPERIMENTAL_CXX0X__) && defined(_GLIBCXX_USE_C99) \\\n+     && !defined(_GLIBCXX_HAVE_BROKEN_VSWPRINTF))\n \n #include <ext/string_conversions.h>\n "}, {"sha": "1f6ec0fc2de403a5be68fa073fba969bdf2783e1", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/numeric_conversions/char/stod.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstod.cc?ref=83b83ae97a8d5d291a6209bad3610c686a7138e3", "patch": "@@ -1,4 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n+// { dg-require-string-conversions \"\" }\n+\n // 2008-06-15  Paolo Carlini  <paolo.carlini@oracle.com>\n \n // Copyright (C) 2008 Free Software Foundation, Inc.\n@@ -29,8 +31,6 @@\n void\n test01()\n {\n-#ifdef _GLIBCXX_USE_C99\n-\n   bool test __attribute__((unused)) = false;\n   using namespace std;\n \n@@ -129,8 +129,6 @@ test01()\n       VERIFY( test );\n       VERIFY( d1 == -1.0 );\n     }\n-\n-#endif\n }\n \n int main()"}, {"sha": "32510e0f47fdc080656bf4bae012522265da3458", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/numeric_conversions/char/stof.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstof.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstof.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstof.cc?ref=83b83ae97a8d5d291a6209bad3610c686a7138e3", "patch": "@@ -1,4 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n+// { dg-require-string-conversions \"\" }\n+\n // 2008-06-15  Paolo Carlini  <paolo.carlini@oracle.com>\n \n // Copyright (C) 2008 Free Software Foundation, Inc.\n@@ -29,8 +31,6 @@\n void\n test01()\n {\n-#ifdef _GLIBCXX_USE_C99\n-\n   bool test __attribute__((unused)) = false;\n   using namespace std;\n \n@@ -129,8 +129,6 @@ test01()\n       VERIFY( test );\n       VERIFY( f1 == -1.0f );\n     }\n-\n-#endif\n }\n \n int main()"}, {"sha": "0dc2df22df91260f830a8fd408c4e190e087c60d", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/numeric_conversions/char/stoi.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstoi.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstoi.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstoi.cc?ref=83b83ae97a8d5d291a6209bad3610c686a7138e3", "patch": "@@ -1,4 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n+// { dg-require-string-conversions \"\" }\n+\n // 2008-06-15  Paolo Carlini  <paolo.carlini@oracle.com>\n \n // Copyright (C) 2008 Free Software Foundation, Inc.\n@@ -29,8 +31,6 @@\n void\n test01()\n {\n-#ifdef _GLIBCXX_USE_C99\n-\n   bool test __attribute__((unused)) = false;\n   using namespace std;\n \n@@ -194,8 +194,6 @@ test01()\n     }\n   VERIFY( test );\n   VERIFY( i1 == 1 );\n-\n-#endif\n }\n \n int main()"}, {"sha": "25970f2eb5fa49c6f3d494d46e960656b2cc0c13", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/numeric_conversions/char/stol.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstol.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstol.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstol.cc?ref=83b83ae97a8d5d291a6209bad3610c686a7138e3", "patch": "@@ -1,4 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n+// { dg-require-string-conversions \"\" }\n+\n // 2008-06-15  Paolo Carlini  <paolo.carlini@oracle.com>\n \n // Copyright (C) 2008 Free Software Foundation, Inc.\n@@ -29,8 +31,6 @@\n void\n test01()\n {\n-#ifdef _GLIBCXX_USE_C99\n-\n   bool test __attribute__((unused)) = false;\n   using namespace std;\n \n@@ -157,8 +157,6 @@ test01()\n     }\n   VERIFY( test );\n   VERIFY( l1 == numeric_limits<long>::min() );\n-\n-#endif\n }\n \n int main()"}, {"sha": "54f4ffe1eae59ba12a857e011544f8c295f8b902", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/numeric_conversions/char/stold.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstold.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstold.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstold.cc?ref=83b83ae97a8d5d291a6209bad3610c686a7138e3", "patch": "@@ -1,4 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n+// { dg-require-string-conversions \"\" }\n+\n // 2008-06-15  Paolo Carlini  <paolo.carlini@oracle.com>\n \n // Copyright (C) 2008 Free Software Foundation, Inc.\n@@ -29,8 +31,6 @@\n void\n test01()\n {\n-#ifdef _GLIBCXX_USE_C99\n-\n   bool test __attribute__((unused)) = false;\n   using namespace std;\n \n@@ -106,8 +106,6 @@ test01()\n       test = false;\n     }\n   VERIFY( test );\n-\n-#endif\n }\n \n int main()"}, {"sha": "b20c5c5efebd70753651c33a50ed0e589a5bb783", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/numeric_conversions/char/stoll.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstoll.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstoll.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstoll.cc?ref=83b83ae97a8d5d291a6209bad3610c686a7138e3", "patch": "@@ -1,4 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n+// { dg-require-string-conversions \"\" }\n+\n // 2008-06-15  Paolo Carlini  <paolo.carlini@oracle.com>\n \n // Copyright (C) 2008 Free Software Foundation, Inc.\n@@ -29,8 +31,6 @@\n void\n test01()\n {\n-#ifdef _GLIBCXX_USE_C99\n-\n   bool test __attribute__((unused)) = false;\n   using namespace std;\n \n@@ -157,8 +157,6 @@ test01()\n     }\n   VERIFY( test );\n   VERIFY( ll1 == numeric_limits<long long>::min() );\n-\n-#endif\n }\n \n int main()"}, {"sha": "20c6e08d2fcc61bbd397b81b9a591e89ecc03028", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/numeric_conversions/char/stoul.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstoul.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstoul.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstoul.cc?ref=83b83ae97a8d5d291a6209bad3610c686a7138e3", "patch": "@@ -1,4 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n+// { dg-require-string-conversions \"\" }\n+\n // 2008-06-15  Paolo Carlini  <paolo.carlini@oracle.com>\n \n // Copyright (C) 2008 Free Software Foundation, Inc.\n@@ -29,8 +31,6 @@\n void\n test01()\n {\n-#ifdef _GLIBCXX_USE_C99\n-\n   bool test __attribute__((unused)) = false;\n   using namespace std;\n \n@@ -144,8 +144,6 @@ test01()\n     }\n   VERIFY( test );\n   VERIFY( ul1 == numeric_limits<unsigned long>::max() );\n-\n-#endif\n }\n \n int main()"}, {"sha": "94ef49602fbe0a7af5a55d6b7461a5fad2e6e2bd", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/numeric_conversions/char/stoull.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstoull.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstoull.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstoull.cc?ref=83b83ae97a8d5d291a6209bad3610c686a7138e3", "patch": "@@ -1,4 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n+// { dg-require-string-conversions \"\" }\n+\n // 2008-06-15  Paolo Carlini  <paolo.carlini@oracle.com>\n \n // Copyright (C) 2008 Free Software Foundation, Inc.\n@@ -29,8 +31,6 @@\n void\n test01()\n {\n-#ifdef _GLIBCXX_USE_C99\n-\n   bool test __attribute__((unused)) = false;\n   using namespace std;\n \n@@ -144,8 +144,6 @@ test01()\n     }\n   VERIFY( test );\n   VERIFY( ull1 == numeric_limits<unsigned long long>::max() );\n-\n-#endif\n }\n \n int main()"}, {"sha": "a332c41a1db70459b7095cd880a25f4f01a216b9", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/numeric_conversions/char/to_string.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fto_string.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fto_string.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fto_string.cc?ref=83b83ae97a8d5d291a6209bad3610c686a7138e3", "patch": "@@ -1,4 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n+// { dg-require-string-conversions \"\" }\n+\n // 2008-06-15  Paolo Carlini  <paolo.carlini@oracle.com>\n \n // Copyright (C) 2008 Free Software Foundation, Inc.\n@@ -27,8 +29,6 @@\n void\n test01()\n {\n-#ifdef _GLIBCXX_USE_C99\n-\n   bool test __attribute__((unused)) = true;\n   using namespace std;\n   \n@@ -55,8 +55,6 @@ test01()\n   long double ld2 = -4.0L;\n   string six(to_string(ld2));\n   VERIFY( six == \"-4.000000\" );\n-\n-#endif\n }\n \n int main()"}, {"sha": "78072256476fbbeff40d48434e181203d80d44a2", "filename": "libstdc++-v3/testsuite/lib/dg-options.exp", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fdg-options.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fdg-options.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fdg-options.exp?ref=83b83ae97a8d5d291a6209bad3610c686a7138e3", "patch": "@@ -124,3 +124,12 @@ proc dg-require-nanosleep { args } {\n     }\n     return\n }\n+\n+proc dg-require-string-conversions { args } {\n+    if { ![ check_v3_target_string_conversions ] } {\n+        upvar dg-do-what dg-do-what\n+        set dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n+        return\n+    }\n+    return\n+}"}, {"sha": "8a4e8c430c4a88baa4cede1aae2a6d4b04a565ce", "filename": "libstdc++-v3/testsuite/lib/libstdc++.exp", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83b83ae97a8d5d291a6209bad3610c686a7138e3/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp?ref=83b83ae97a8d5d291a6209bad3610c686a7138e3", "patch": "@@ -1236,3 +1236,61 @@ proc check_v3_target_nanosleep { } {\n     verbose \"check_v3_target_nanosleep: $et_nanosleep\" 2\n     return $et_nanosleep\n }\n+\n+proc check_v3_target_string_conversions { } {\n+    global cxxflags\n+    global DEFAULT_CXXFLAGS\n+    global et_string_conversions\n+\n+    global tool\n+\n+    if { ![info exists et_string_conversions_target_name] } {\n+        set et_string_conversions_target_name \"\"\n+    }\n+\n+    # If the target has changed since we set the cached value, clear it.\n+    set current_target [current_target_name]\n+    if { $current_target != $et_string_conversions_target_name } {\n+        verbose \"check_v3_target_string_conversions: `$et_string_conversions_target_name'\" 2\n+        set et_string_conversions_target_name $current_target\n+        if [info exists et_string_conversions] {\n+            verbose \"check_v3_target_string_conversions: removing cached result\" 2\n+            unset et_string_conversions\n+        }\n+    }\n+\n+    if [info exists et_string_conversions] {\n+        verbose \"check_v3_target_string_conversions: using cached result\" 2\n+    } else {\n+        set et_string_conversions 0\n+\t\n+\t# Set up and compile a C++0x test program that depends\n+        # on the string_conversions facilities to be available.\n+        set src string_conversions[pid].cc\n+        set exe string_conversions[pid].exe\n+\n+        set f [open $src \"w\"]\n+        puts $f \"#include <bits/c++config.h>\"\n+        puts $f \"int main()\"\n+        puts $f \"#if defined(_GLIBCXX_USE_C99) && !defined(_GLIBCXX_HAVE_BROKEN_VSWPRINTF)\"\n+        puts $f \"{ return 0; }\"\n+        puts $f \"#endif\"\n+        close $f\n+\n+        set cxxflags_saved $cxxflags\n+        set cxxflags \"$cxxflags $DEFAULT_CXXFLAGS -Werror\"\n+\n+        set lines [v3_target_compile $src $exe executable \"\"]\n+        set cxxflags $cxxflags_saved\n+        file delete $src\n+\n+        if [string match \"\" $lines] {\n+            # No error message, compilation succeeded.\n+            set et_string_conversions 1\n+        } else {\n+            verbose \"check_v3_target_string_conversions: compilation failed\" 2\n+        }\n+    }\n+    verbose \"check_v3_target_string_conversions: $et_string_conversions\" 2\n+    return $et_string_conversions\n+}"}]}