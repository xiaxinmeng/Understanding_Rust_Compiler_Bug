{"sha": "08298a8c195e4bf6f8e32d309de9ac7ea6ba0962", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDgyOThhOGMxOTVlNGJmNmY4ZTMyZDMwOWRlOWFjN2VhNmJhMDk2Mg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-08-21T11:25:28Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-08-21T11:25:28Z"}, "message": "re PR tree-optimization/37181 (FAIL: Divide_1 -O3)\n\n2008-08-21  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/37181\n\t* tree-vrp.c (extract_range_from_binary_expr): Check for NULL\n\tfolding result.\n\t(extract_range_from_unary_expr): Likewise.\n\nFrom-SVN: r139375", "tree": {"sha": "610e178ec54f2b0d0f38da0dfdb5f3a5065c0490", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/610e178ec54f2b0d0f38da0dfdb5f3a5065c0490"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08298a8c195e4bf6f8e32d309de9ac7ea6ba0962", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08298a8c195e4bf6f8e32d309de9ac7ea6ba0962", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08298a8c195e4bf6f8e32d309de9ac7ea6ba0962", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08298a8c195e4bf6f8e32d309de9ac7ea6ba0962/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "96501113618dd86ec855db2931c1b5f9038c3e51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96501113618dd86ec855db2931c1b5f9038c3e51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96501113618dd86ec855db2931c1b5f9038c3e51"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "98a28e661743873add107cd0b4521ca632c297b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08298a8c195e4bf6f8e32d309de9ac7ea6ba0962/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08298a8c195e4bf6f8e32d309de9ac7ea6ba0962/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=08298a8c195e4bf6f8e32d309de9ac7ea6ba0962", "patch": "@@ -1,3 +1,10 @@\n+2008-08-21  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/37181\n+\t* tree-vrp.c (extract_range_from_binary_expr): Check for NULL\n+\tfolding result.\n+\t(extract_range_from_unary_expr): Likewise.\n+\n 2008-08-21  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n \t* diagnostic.c (pedwarn_at): Rename as pedwarn."}, {"sha": "a61f292c43f550879568475060effc2d4bf24296", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08298a8c195e4bf6f8e32d309de9ac7ea6ba0962/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08298a8c195e4bf6f8e32d309de9ac7ea6ba0962/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=08298a8c195e4bf6f8e32d309de9ac7ea6ba0962", "patch": "@@ -2062,7 +2062,8 @@ extract_range_from_binary_expr (value_range_t *vr,\n \t  && (op1 = op_with_constant_singleton_value_range (op1)) != NULL_TREE)\n \t{\n \t  tree tem = fold_binary (code, expr_type, op0, op1);\n-\t  if (is_gimple_min_invariant (tem)\n+\t  if (tem\n+\t      && is_gimple_min_invariant (tem)\n \t      && !is_overflow_infinity (tem))\n \t    {\n \t      set_value_range (vr, VR_RANGE, tem, tem, NULL);\n@@ -2477,7 +2478,8 @@ extract_range_from_unary_expr (value_range_t *vr, enum tree_code code,\n       if ((op0 = op_with_constant_singleton_value_range (op0)) != NULL_TREE)\n \t{\n \t  tree tem = fold_unary (code, type, op0);\n-\t  if (is_gimple_min_invariant (tem)\n+\t  if (tem\n+\t      && is_gimple_min_invariant (tem)\n \t      && !is_overflow_infinity (tem))\n \t    {\n \t      set_value_range (vr, VR_RANGE, tem, tem, NULL);"}]}