{"sha": "cf92ae7f061c922227f76feaeb443c01fbe5c195", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y5MmFlN2YwNjFjOTIyMjI3Zjc2ZmVhZWI0NDNjMDFmYmU1YzE5NQ==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-09-11T06:42:29Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-09-11T06:42:29Z"}, "message": "AVX-512. Extend vpermvar insn patterns.\n\ngcc/\n\t* config/i386/sse.md\n\t(define_mode_attr avx2_avx512): Rename from avx2_avx512bw.\n\t(define_mode_iterator VI48F_256_512): Extend to AVX-512VL.\n\t(define_insn \"<avx2_avx512>_permvar<mode><mask_name>\"): Rename from\n\t\"<avx2_avx512f>_permvar<mode><mask_name>\".\n\t(define_insn \"<avx512>_permvar<mode><mask_name>\"): New.\n\t(define_insn \"<avx2_avx512>_ashrv<VI48_AVX512F_AVX512VL:mode><mask_name>\"):\n\tRename from \"<avx2_avx512f>_ashrv<mode><mask_name>\".\n\t(define_insn \"<avx2_avx512>_ashrv<VI2_AVX512VL:mode><mask_name>\"):\n\tDitto.\n\t(define_insn \"<avx2_avx512>_<shift_insn>v<VI48_AVX512F:mode><mask_name>\"):\n\tRename from \"<avx2_avx512bw>_<shift_insn>v<mode><mask_name>\".\n\t(define_insn \"<avx2_avx512>_<shift_insn>v<VI2_AVX512VL:mode><mask_name>\"):\n\tRename from \"<avx2_avx512bw>_<shift_insn>v<mode><mask_name>\".\n\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r215148", "tree": {"sha": "ca90f75533da70c54e6a8bc829241be5253ce389", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca90f75533da70c54e6a8bc829241be5253ce389"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf92ae7f061c922227f76feaeb443c01fbe5c195", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf92ae7f061c922227f76feaeb443c01fbe5c195", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf92ae7f061c922227f76feaeb443c01fbe5c195", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf92ae7f061c922227f76feaeb443c01fbe5c195/comments", "author": null, "committer": null, "parents": [{"sha": "dec3f82af20326841a549f13d3318fc854a2c50f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dec3f82af20326841a549f13d3318fc854a2c50f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dec3f82af20326841a549f13d3318fc854a2c50f"}], "stats": {"total": 51, "additions": 44, "deletions": 7}, "files": [{"sha": "a6b52583bae7f8809fb6b9a6e39e5ca2230a89f5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf92ae7f061c922227f76feaeb443c01fbe5c195/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf92ae7f061c922227f76feaeb443c01fbe5c195/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cf92ae7f061c922227f76feaeb443c01fbe5c195", "patch": "@@ -1,3 +1,27 @@\n+2014-09-11  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/sse.md\n+\t(define_mode_attr avx2_avx512): Rename from avx2_avx512bw.\n+\t(define_mode_iterator VI48F_256_512): Extend to AVX-512VL.\n+\t(define_insn \"<avx2_avx512>_permvar<mode><mask_name>\"): Rename from\n+\t\"<avx2_avx512f>_permvar<mode><mask_name>\".\n+\t(define_insn \"<avx512>_permvar<mode><mask_name>\"): New.\n+\t(define_insn \"<avx2_avx512>_ashrv<VI48_AVX512F_AVX512VL:mode><mask_name>\"):\n+\tRename from \"<avx2_avx512f>_ashrv<mode><mask_name>\".\n+\t(define_insn \"<avx2_avx512>_ashrv<VI2_AVX512VL:mode><mask_name>\"):\n+\tDitto.\n+\t(define_insn \"<avx2_avx512>_<shift_insn>v<VI48_AVX512F:mode><mask_name>\"):\n+\tRename from \"<avx2_avx512bw>_<shift_insn>v<mode><mask_name>\".\n+\t(define_insn \"<avx2_avx512>_<shift_insn>v<VI2_AVX512VL:mode><mask_name>\"):\n+\tRename from \"<avx2_avx512bw>_<shift_insn>v<mode><mask_name>\".\n+\n 2014-09-10  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* config/rs6000/vsx.md (vsx_fmav4sf4): Use correct constraints for"}, {"sha": "91ec8fdfa5493ac31329c54089cbc73b367f931c", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 20, "deletions": 7, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf92ae7f061c922227f76feaeb443c01fbe5c195/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf92ae7f061c922227f76feaeb443c01fbe5c195/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=cf92ae7f061c922227f76feaeb443c01fbe5c195", "patch": "@@ -449,7 +449,7 @@\n    (V8SF \"avx2\") (V16SF \"avx512f\")\n    (V4DF \"avx2\") (V8DF \"avx512f\")])\n \n-(define_mode_attr avx2_avx512bw\n+(define_mode_attr avx2_avx512\n   [(V4SI \"avx2\") (V8SI \"avx2\") (V16SI \"avx512f\")\n    (V2DI \"avx2\") (V4DI \"avx2\") (V8DI \"avx512f\")\n    (V4SF \"avx2\") (V8SF \"avx2\") (V16SF \"avx512f\")\n@@ -515,7 +515,8 @@\n (define_mode_iterator VI48F_256_512\n   [V8SI V8SF\n   (V16SI \"TARGET_AVX512F\") (V16SF \"TARGET_AVX512F\")\n-  (V8DI  \"TARGET_AVX512F\") (V8DF  \"TARGET_AVX512F\")])\n+  (V8DI  \"TARGET_AVX512F\") (V8DF  \"TARGET_AVX512F\")\n+  (V4DI  \"TARGET_AVX512VL\") (V4DF  \"TARGET_AVX512VL\")])\n (define_mode_iterator VI48F_512 [V16SI V16SF V8DI V8DF])\n (define_mode_iterator VI48F\n   [V16SI V16SF V8DI V8DF\n@@ -15202,7 +15203,7 @@\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_insn \"<avx2_avx512f>_permvar<mode><mask_name>\"\n+(define_insn \"<avx2_avx512>_permvar<mode><mask_name>\"\n   [(set (match_operand:VI48F_256_512 0 \"register_operand\" \"=v\")\n \t(unspec:VI48F_256_512\n \t  [(match_operand:VI48F_256_512 1 \"nonimmediate_operand\" \"vm\")\n@@ -15214,6 +15215,18 @@\n    (set_attr \"prefix\" \"<mask_prefix2>\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n+(define_insn \"<avx512>_permvar<mode><mask_name>\"\n+  [(set (match_operand:VI2_AVX512VL 0 \"register_operand\" \"=v\")\n+\t(unspec:VI2_AVX512VL\n+\t  [(match_operand:VI2_AVX512VL 1 \"nonimmediate_operand\" \"vm\")\n+\t   (match_operand:<sseintvecmode> 2 \"register_operand\" \"v\")]\n+\t  UNSPEC_VPERMVAR))]\n+  \"TARGET_AVX512BW && <mask_mode512bit_condition>\"\n+  \"vperm<ssemodesuffix>\\t{%1, %2, %0<mask_operand3>|%0<mask_operand3>, %2, %1}\"\n+  [(set_attr \"type\" \"sselog\")\n+   (set_attr \"prefix\" \"<mask_prefix2>\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n (define_expand \"<avx2_avx512f>_perm<mode>\"\n   [(match_operand:VI8F_256_512 0 \"register_operand\")\n    (match_operand:VI8F_256_512 1 \"nonimmediate_operand\")\n@@ -16171,7 +16184,7 @@\n   DONE;\n })\n \n-(define_insn \"<avx2_avx512bw>_ashrv<mode><mask_name>\"\n+(define_insn \"<avx2_avx512>_ashrv<mode><mask_name>\"\n   [(set (match_operand:VI48_AVX512F_AVX512VL 0 \"register_operand\" \"=v\")\n \t(ashiftrt:VI48_AVX512F_AVX512VL\n \t  (match_operand:VI48_AVX512F_AVX512VL 1 \"register_operand\" \"v\")\n@@ -16182,7 +16195,7 @@\n    (set_attr \"prefix\" \"maybe_evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_insn \"<avx2_avx512bw>_ashrv<mode><mask_name>\"\n+(define_insn \"<avx2_avx512>_ashrv<mode><mask_name>\"\n   [(set (match_operand:VI2_AVX512VL 0 \"register_operand\" \"=v\")\n \t(ashiftrt:VI2_AVX512VL\n \t  (match_operand:VI2_AVX512VL 1 \"register_operand\" \"v\")\n@@ -16193,7 +16206,7 @@\n    (set_attr \"prefix\" \"maybe_evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_insn \"<avx2_avx512bw>_<shift_insn>v<mode><mask_name>\"\n+(define_insn \"<avx2_avx512>_<shift_insn>v<mode><mask_name>\"\n   [(set (match_operand:VI48_AVX512F 0 \"register_operand\" \"=v\")\n \t(any_lshift:VI48_AVX512F\n \t  (match_operand:VI48_AVX512F 1 \"register_operand\" \"v\")\n@@ -16204,7 +16217,7 @@\n    (set_attr \"prefix\" \"maybe_evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_insn \"<avx2_avx512bw>_<shift_insn>v<mode><mask_name>\"\n+(define_insn \"<avx2_avx512>_<shift_insn>v<mode><mask_name>\"\n   [(set (match_operand:VI2_AVX512VL 0 \"register_operand\" \"=v\")\n \t(any_lshift:VI2_AVX512VL\n \t  (match_operand:VI2_AVX512VL 1 \"register_operand\" \"v\")"}]}