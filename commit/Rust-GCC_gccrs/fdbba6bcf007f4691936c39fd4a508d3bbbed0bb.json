{"sha": "fdbba6bcf007f4691936c39fd4a508d3bbbed0bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRiYmE2YmNmMDA3ZjQ2OTE5MzZjMzlmZDRhNTA4ZDNiYmJlZDBiYg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2005-04-01T20:20:22Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2005-04-01T20:20:22Z"}, "message": "Makefile.am (noinst_PROGRAMS): Remove.\n\n\t* testsuite/Makefile.am (noinst_PROGRAMS): Remove.\n\t(site.exp): Write out the path to the baseline file.\n\t(check-abi): Use DejaGNU.\n\t(check-abi-verbose): Remove.\n\t* testsuite/Makefile.in: Regenerated.\n\t* testsuite/abi_check.cc (main): Check the return value from\n\tcompare_symbols.\n\t* testsuite/testsuite_abi.cc (compare_symbols): Return a value.\n\t* testsuite/testsuite_abi.h (compare_symbols): Adjust prototype.\n\t* testsuite/libstdc++-abi/abi.exp: New file.\n\nFrom-SVN: r97417", "tree": {"sha": "a0f95ae69cfd718b19b083c95a258e99a23146ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0f95ae69cfd718b19b083c95a258e99a23146ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdbba6bcf007f4691936c39fd4a508d3bbbed0bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdbba6bcf007f4691936c39fd4a508d3bbbed0bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdbba6bcf007f4691936c39fd4a508d3bbbed0bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdbba6bcf007f4691936c39fd4a508d3bbbed0bb/comments", "author": null, "committer": null, "parents": [{"sha": "c6cc541b36aaf32335a6e4b420b55bf7c9a979be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6cc541b36aaf32335a6e4b420b55bf7c9a979be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6cc541b36aaf32335a6e4b420b55bf7c9a979be"}], "stats": {"total": 143, "additions": 76, "deletions": 67}, "files": [{"sha": "9873fb170d92db570be82a4c62c5bbdc305ab938", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdbba6bcf007f4691936c39fd4a508d3bbbed0bb/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdbba6bcf007f4691936c39fd4a508d3bbbed0bb/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=fdbba6bcf007f4691936c39fd4a508d3bbbed0bb", "patch": "@@ -1,3 +1,16 @@\n+2005-04-01  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* testsuite/Makefile.am (noinst_PROGRAMS): Remove.\n+\t(site.exp): Write out the path to the baseline file.\n+\t(check-abi): Use DejaGNU.\n+\t(check-abi-verbose): Remove.\n+\t* testsuite/Makefile.in: Regenerated.\n+\t* testsuite/abi_check.cc (main): Check the return value from\n+\tcompare_symbols.\n+\t* testsuite/testsuite_abi.cc (compare_symbols): Return a value.\n+\t* testsuite/testsuite_abi.h (compare_symbols): Adjust prototype.\n+\t* testsuite/libstdc++-abi/abi.exp: New file.\n+\n 2005-03-31  Chris Jefferson  <chris@bubblescope.net>\n \n         * include/tr1/tuple: Support iteration via tuple_iterate.h."}, {"sha": "3cfa19b67edbe7346f52477ea7c93f8345806e4c", "filename": "libstdc++-v3/testsuite/Makefile.am", "status": "modified", "additions": 3, "deletions": 20, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdbba6bcf007f4691936c39fd4a508d3bbbed0bb/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdbba6bcf007f4691936c39fd4a508d3bbbed0bb/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am?ref=fdbba6bcf007f4691936c39fd4a508d3bbbed0bb", "patch": "@@ -50,15 +50,6 @@ libv3test_a_SOURCES = \\\n \ttestsuite_allocator.cc \\\n \ttestsuite_hooks.cc \n \n-## Build support utilities.\n-if GLIBCXX_TEST_ABI\n-noinst_PROGRAMS = abi_check\n-else\n-noinst_PROGRAMS =\n-endif\n-abi_check_SOURCES = abi_check.cc\n-abi_check_DEPENDENCIES = libv3test.a\n-\n all-local: stamp_wchar stamp_thread\n \n # Enable wchar_t tests if capable.\n@@ -104,6 +95,7 @@ site.exp: Makefile\n \t@echo 'set target_triplet $(target_triplet)' >>site.tmp\n \t@echo 'set target_triplet $(target_triplet)' >>site.tmp\n \t@echo 'set libiconv \"$(LIBICONV)\"' >>site.tmp\n+\t@echo 'set baseline_file \"$(baseline_file)\"' >> site.tmp\n \t@echo '## All variables above are generated by configure. Do Not Edit ##' >>site.tmp\n \t@test ! -f site.exp || \\\n \t  sed '1,/^## All variables above are.*##/ d' site.exp >> site.tmp\n@@ -141,19 +133,10 @@ new-abi-baseline:\n if GLIBCXX_TEST_ABI\n # Use 'new-abi-baseline' to create an initial symbol file.  Then run\n # 'check-abi' to test for changes against that file.\n-check-abi: abi_check baseline_symbols current_symbols.txt\n-\t-@./abi_check --check ./current_symbols.txt ${baseline_file} \\\n-\t  2>&1 | tee libstdc++-abi.sum\n-\t-@cp libstdc++-abi.sum libstdc++-abi.log\n-\n-check-abi-verbose: abi_check baseline_symbols current_symbols.txt\n-\t-@./abi_check --check-verbose ./current_symbols.txt ${baseline_file} \\\n-\t  2>&1 | tee libstdc++-abi.sum\n-\t-@cp libstdc++-abi.sum libstdc++-abi.log\n-\n+check-abi: baseline_symbols current_symbols.txt site.exp\n+\t-@runtest --tool libstdc++ abi.exp\n else\n check-abi:\n-check-abi-verbose:\n endif\n \n "}, {"sha": "d62b56a1d7bb817872b9cd6df61cb787561a40a6", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 18, "deletions": 44, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdbba6bcf007f4691936c39fd4a508d3bbbed0bb/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdbba6bcf007f4691936c39fd4a508d3bbbed0bb/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=fdbba6bcf007f4691936c39fd4a508d3bbbed0bb", "patch": "@@ -14,8 +14,7 @@\n \n @SET_MAKE@\n \n-\n-SOURCES = $(libv3test_a_SOURCES) $(abi_check_SOURCES)\n+SOURCES = $(libv3test_a_SOURCES)\n \n srcdir = @srcdir@\n top_srcdir = @top_srcdir@\n@@ -42,7 +41,6 @@ host_triplet = @host@\n target_triplet = @target@\n DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \\\n \t$(top_srcdir)/fragment.am\n-@GLIBCXX_TEST_ABI_TRUE@noinst_PROGRAMS = abi_check$(EXEEXT)\n subdir = testsuite\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \\\n@@ -61,10 +59,6 @@ libv3test_a_LIBADD =\n am_libv3test_a_OBJECTS = testsuite_abi.$(OBJEXT) \\\n \ttestsuite_allocator.$(OBJEXT) testsuite_hooks.$(OBJEXT)\n libv3test_a_OBJECTS = $(am_libv3test_a_OBJECTS)\n-PROGRAMS = $(noinst_PROGRAMS)\n-am_abi_check_OBJECTS = abi_check.$(OBJEXT)\n-abi_check_OBJECTS = $(am_abi_check_OBJECTS)\n-abi_check_LDADD = $(LDADD)\n DEFAULT_INCLUDES = \n depcomp =\n am__depfiles_maybe =\n@@ -74,8 +68,8 @@ LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \\\n \t$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \\\n \t$(AM_CXXFLAGS) $(CXXFLAGS)\n CXXLD = $(CXX)\n-SOURCES = $(libv3test_a_SOURCES) $(abi_check_SOURCES)\n-DIST_SOURCES = $(libv3test_a_SOURCES) $(abi_check_SOURCES)\n+SOURCES = $(libv3test_a_SOURCES)\n+DIST_SOURCES = $(libv3test_a_SOURCES)\n ETAGS = etags\n CTAGS = ctags\n DEJATOOL = $(PACKAGE)\n@@ -289,8 +283,6 @@ libv3test_a_SOURCES = \\\n \ttestsuite_allocator.cc \\\n \ttestsuite_hooks.cc \n \n-abi_check_SOURCES = abi_check.cc\n-abi_check_DEPENDENCIES = libv3test.a\n \n # Generated lists of files to run.  All of these names are valid make\n # targets, if you wish to generate a list manually.\n@@ -364,16 +356,6 @@ libv3test.a: $(libv3test_a_OBJECTS) $(libv3test_a_DEPENDENCIES)\n \t$(libv3test_a_AR) libv3test.a $(libv3test_a_OBJECTS) $(libv3test_a_LIBADD)\n \t$(RANLIB) libv3test.a\n \n-clean-noinstPROGRAMS:\n-\t@list='$(noinst_PROGRAMS)'; for p in $$list; do \\\n-\t  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \\\n-\t  echo \" rm -f $$p $$f\"; \\\n-\t  rm -f $$p $$f ; \\\n-\tdone\n-abi_check$(EXEEXT): $(abi_check_OBJECTS) $(abi_check_DEPENDENCIES) \n-\t@rm -f abi_check$(EXEEXT)\n-\t$(CXXLINK) $(abi_check_LDFLAGS) $(abi_check_OBJECTS) $(abi_check_LDADD) $(LIBS)\n-\n mostlyclean-compile:\n \t-rm -f *.$(OBJEXT)\n \n@@ -495,7 +477,7 @@ distdir: $(DISTFILES)\n check-am: all-am\n \t$(MAKE) $(AM_MAKEFLAGS) check-DEJAGNU check-local\n check: check-am\n-all-am: Makefile $(LIBRARIES) $(PROGRAMS) all-local\n+all-am: Makefile $(LIBRARIES) all-local\n installdirs:\n install: install-am\n install-exec: install-exec-am\n@@ -525,7 +507,7 @@ maintainer-clean-generic:\n clean: clean-am\n \n clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \\\n-\tclean-noinstPROGRAMS mostlyclean-am\n+\tmostlyclean-am\n \n distclean: distclean-am\n \t-rm -f Makefile\n@@ -573,16 +555,16 @@ uninstall-am: uninstall-info-am\n \n .PHONY: CTAGS GTAGS all all-am all-local check check-DEJAGNU check-am \\\n \tcheck-local clean clean-generic clean-libtool \\\n-\tclean-noinstLIBRARIES clean-noinstPROGRAMS ctags distclean \\\n-\tdistclean-DEJAGNU distclean-compile distclean-generic \\\n-\tdistclean-libtool distclean-tags distdir dvi dvi-am html \\\n-\thtml-am info info-am install install-am install-data \\\n-\tinstall-data-am install-exec install-exec-am install-info \\\n-\tinstall-info-am install-man install-strip installcheck \\\n-\tinstallcheck-am installdirs maintainer-clean \\\n-\tmaintainer-clean-generic mostlyclean mostlyclean-compile \\\n-\tmostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \\\n-\ttags uninstall uninstall-am uninstall-info-am\n+\tclean-noinstLIBRARIES ctags distclean distclean-DEJAGNU \\\n+\tdistclean-compile distclean-generic distclean-libtool \\\n+\tdistclean-tags distdir dvi dvi-am html html-am info info-am \\\n+\tinstall install-am install-data install-data-am install-exec \\\n+\tinstall-exec-am install-info install-info-am install-man \\\n+\tinstall-strip installcheck installcheck-am installdirs \\\n+\tmaintainer-clean maintainer-clean-generic mostlyclean \\\n+\tmostlyclean-compile mostlyclean-generic mostlyclean-libtool \\\n+\tpdf pdf-am ps ps-am tags uninstall uninstall-am \\\n+\tuninstall-info-am\n \n \n all-local: stamp_wchar stamp_thread\n@@ -616,6 +598,7 @@ site.exp: Makefile\n \t@echo 'set target_triplet $(target_triplet)' >>site.tmp\n \t@echo 'set target_triplet $(target_triplet)' >>site.tmp\n \t@echo 'set libiconv \"$(LIBICONV)\"' >>site.tmp\n+\t@echo 'set baseline_file \"$(baseline_file)\"' >> site.tmp\n \t@echo '## All variables above are generated by configure. Do Not Edit ##' >>site.tmp\n \t@test ! -f site.exp || \\\n \t  sed '1,/^## All variables above are.*##/ d' site.exp >> site.tmp\n@@ -649,18 +632,9 @@ new-abi-baseline:\n \n # Use 'new-abi-baseline' to create an initial symbol file.  Then run\n # 'check-abi' to test for changes against that file.\n-@GLIBCXX_TEST_ABI_TRUE@check-abi: abi_check baseline_symbols current_symbols.txt\n-@GLIBCXX_TEST_ABI_TRUE@\t-@./abi_check --check ./current_symbols.txt ${baseline_file} \\\n-@GLIBCXX_TEST_ABI_TRUE@\t  2>&1 | tee libstdc++-abi.sum\n-@GLIBCXX_TEST_ABI_TRUE@\t-@cp libstdc++-abi.sum libstdc++-abi.log\n-\n-@GLIBCXX_TEST_ABI_TRUE@check-abi-verbose: abi_check baseline_symbols current_symbols.txt\n-@GLIBCXX_TEST_ABI_TRUE@\t-@./abi_check --check-verbose ./current_symbols.txt ${baseline_file} \\\n-@GLIBCXX_TEST_ABI_TRUE@\t  2>&1 | tee libstdc++-abi.sum\n-@GLIBCXX_TEST_ABI_TRUE@\t-@cp libstdc++-abi.sum libstdc++-abi.log\n-\n+@GLIBCXX_TEST_ABI_TRUE@check-abi: baseline_symbols current_symbols.txt site.exp\n+@GLIBCXX_TEST_ABI_TRUE@\t-@runtest --tool libstdc++ abi.exp\n @GLIBCXX_TEST_ABI_FALSE@check-abi:\n-@GLIBCXX_TEST_ABI_FALSE@check-abi-verbose:\n check-script: ${survey_script}\n \t-@(chmod + ${survey_script}; \\\n \t  ${survey_script} 0)"}, {"sha": "028db89c93e9d35298166a7f39fb747f89a04b01", "filename": "libstdc++-v3/testsuite/abi_check.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdbba6bcf007f4691936c39fd4a508d3bbbed0bb/libstdc%2B%2B-v3%2Ftestsuite%2Fabi_check.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdbba6bcf007f4691936c39fd4a508d3bbbed0bb/libstdc%2B%2B-v3%2Ftestsuite%2Fabi_check.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fabi_check.cc?ref=fdbba6bcf007f4691936c39fd4a508d3bbbed0bb", "patch": "@@ -77,7 +77,8 @@ main(int argc, char** argv)\n \t  cerr << \"Cannot read baseline file \" << baseline_file << endl;\n \texit(1);\n \t}\n-      compare_symbols(baseline_file, test_file, verbose);\n+      if (!compare_symbols(baseline_file, test_file, verbose))\n+\texit (1);\n     }\n   \n   if (argv1 == \"--examine\")"}, {"sha": "12504f940f9abe0436a2a517b63234497b05c953", "filename": "libstdc++-v3/testsuite/libstdc++-abi/abi.exp", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdbba6bcf007f4691936c39fd4a508d3bbbed0bb/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-abi%2Fabi.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdbba6bcf007f4691936c39fd4a508d3bbbed0bb/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-abi%2Fabi.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-abi%2Fabi.exp?ref=fdbba6bcf007f4691936c39fd4a508d3bbbed0bb", "patch": "@@ -0,0 +1,36 @@\n+# Copyright (C) 2005 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2 of the License, or\n+# (at your option) any later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  \n+\n+# If there is no current_symbols.txt file, then skip this test.\n+if { ![file exists \"current_symbols.txt\"] } {\n+    return\n+}\n+\n+# Build the support objects.\n+v3-build_support\n+\n+# Build the abi_check program.\n+if { [v3_target_compile \"$srcdir/abi_check.cc\" \"abi_check\" \\\n+      \"executable\" [list \"additional_flags=-w\"]] != \"\" } {\n+    error \"could not compile abi_check.cc\"\n+}\n+\n+remote_download \"target\" $baseline_file \"baseline_symbols.txt\"\n+remote_download \"target\" \"current_symbols.txt\" \"current_symbols.txt\"\n+set result [${tool}_load \"./abi_check\" \\\n+\t\t[list \"--check-verbose\" \"current_symbols.txt\" \\\n+\t\t     \"baseline_symbols.txt\"]]\n+[lindex $result 0] \"abi_check\""}, {"sha": "5f6e23ed83b96a69759f7aa6520051c0edd7c574", "filename": "libstdc++-v3/testsuite/testsuite_abi.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdbba6bcf007f4691936c39fd4a508d3bbbed0bb/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_abi.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdbba6bcf007f4691936c39fd4a508d3bbbed0bb/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_abi.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_abi.cc?ref=fdbba6bcf007f4691936c39fd4a508d3bbbed0bb", "patch": "@@ -281,7 +281,7 @@ examine_symbol(const char* name, const char* file)\n     { __throw_exception_again; }\n }\n \n-void \n+int\n compare_symbols(const char* baseline_file, const char* test_file, \n \t\tbool verbose)\n {\n@@ -393,6 +393,8 @@ compare_symbols(const char* baseline_file, const char* test_file,\n   cout << \"# of incompatible symbols:\\t \" << incompatible.size() << endl;\n   cout << endl;\n   cout << \"using: \" << baseline_file << endl;\n+\n+  return !(missing_names.size() || incompatible.size());\n }\n \n "}, {"sha": "e682274951f3c641a060a8b9c41e74a58473da07", "filename": "libstdc++-v3/testsuite/testsuite_abi.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdbba6bcf007f4691936c39fd4a508d3bbbed0bb/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_abi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdbba6bcf007f4691936c39fd4a508d3bbbed0bb/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_abi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_abi.h?ref=fdbba6bcf007f4691936c39fd4a508d3bbbed0bb", "patch": "@@ -94,7 +94,7 @@ get_symbol(const std::string& mangled, const symbols& list);\n extern \"C\" void\n examine_symbol(const char* name, const char* file);\n \n-extern \"C\" void\n+extern \"C\" int\n compare_symbols(const char* baseline_file, const char* test_file, bool verb);\n \n "}]}