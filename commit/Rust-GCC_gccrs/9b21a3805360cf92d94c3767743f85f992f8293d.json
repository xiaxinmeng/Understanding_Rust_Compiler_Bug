{"sha": "9b21a3805360cf92d94c3767743f85f992f8293d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIyMWEzODA1MzYwY2Y5MmQ5NGMzNzY3NzQzZjg1Zjk5MmY4MjkzZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-08-23T23:25:42Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-08-23T23:25:42Z"}, "message": "decl.c (variable_decl): Don't share charlen structs if length == NULL.\n\n\t* decl.c (variable_decl): Don't share charlen structs if\n\tlength == NULL.\n\t* trans-decl.c (create_function_arglist): Assert\n\tf->sym->ts.cl->backend_decl is NULL instead of unsharing\n\tcharlen struct here.\n\n\t* gfortran.dg/assumed_charlen_sharing.f90: New test.\n\nFrom-SVN: r127748", "tree": {"sha": "8c453da406c283968faca7997474722567e1f1d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c453da406c283968faca7997474722567e1f1d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b21a3805360cf92d94c3767743f85f992f8293d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b21a3805360cf92d94c3767743f85f992f8293d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b21a3805360cf92d94c3767743f85f992f8293d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b21a3805360cf92d94c3767743f85f992f8293d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c6f3d2f4636f58ed99c9d84898c7807c068da925", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6f3d2f4636f58ed99c9d84898c7807c068da925", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6f3d2f4636f58ed99c9d84898c7807c068da925"}], "stats": {"total": 69, "additions": 46, "deletions": 23}, "files": [{"sha": "80111f3155139f01a555d802acdf100a362bac1f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b21a3805360cf92d94c3767743f85f992f8293d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b21a3805360cf92d94c3767743f85f992f8293d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9b21a3805360cf92d94c3767743f85f992f8293d", "patch": "@@ -1,3 +1,11 @@\n+2007-08-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* decl.c (variable_decl): Don't share charlen structs if\n+\tlength == NULL.\n+\t* trans-decl.c (create_function_arglist): Assert\n+\tf->sym->ts.cl->backend_decl is NULL instead of unsharing\n+\tcharlen struct here.\n+\n 2007-08-23  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/33095"}, {"sha": "70098b4f0534ffcc9c500df32c19848cbdfe5e25", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b21a3805360cf92d94c3767743f85f992f8293d/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b21a3805360cf92d94c3767743f85f992f8293d/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=9b21a3805360cf92d94c3767743f85f992f8293d", "patch": "@@ -1462,10 +1462,11 @@ variable_decl (int elem)\n \t  break;\n \n \t/* Non-constant lengths need to be copied after the first\n-\t   element.  */\n+\t   element.  Also copy assumed lengths.  */\n \tcase MATCH_NO:\n-\t  if (elem > 1 && current_ts.cl->length\n-\t      && current_ts.cl->length->expr_type != EXPR_CONSTANT)\n+\t  if (elem > 1\n+\t      && (current_ts.cl->length == NULL\n+\t\t  || current_ts.cl->length->expr_type != EXPR_CONSTANT))\n \t    {\n \t      cl = gfc_get_charlen ();\n \t      cl->next = gfc_current_ns->cl_list;"}, {"sha": "047ced92c1ba9257fae283f74eed7eb817416905", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 2, "deletions": 19, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b21a3805360cf92d94c3767743f85f992f8293d/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b21a3805360cf92d94c3767743f85f992f8293d/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=9b21a3805360cf92d94c3767743f85f992f8293d", "patch": "@@ -1458,25 +1458,8 @@ create_function_arglist (gfc_symbol * sym)\n \t  if (!f->sym->ts.cl->length)\n \t    {\n \t      TREE_USED (length) = 1;\n-\t      if (!f->sym->ts.cl->backend_decl)\n-\t\tf->sym->ts.cl->backend_decl = length;\n-\t      else\n-\t\t{\n-\t\t  /* there is already another variable using this\n-\t\t     gfc_charlen node, build a new one for this variable\n-\t\t     and chain it into the list of gfc_charlens.\n-\t\t     This happens for e.g. in the case\n-\t\t     CHARACTER(*)::c1,c2\n-\t\t     since CHARACTER declarations on the same line share\n-\t\t     the same gfc_charlen node.  */\n-\t\t  gfc_charlen *cl;\n-\t      \n-\t\t  cl = gfc_get_charlen ();\n-\t\t  cl->backend_decl = length;\n-\t\t  cl->next = f->sym->ts.cl->next;\n-\t\t  f->sym->ts.cl->next = cl;\n-\t\t  f->sym->ts.cl = cl;\n-\t\t}\n+\t      gcc_assert (!f->sym->ts.cl->backend_decl);\n+\t      f->sym->ts.cl->backend_decl = length;\n \t    }\n \n \t  hidden_typelist = TREE_CHAIN (hidden_typelist);"}, {"sha": "b004d097d9cdabdf1a10a6a184d1af49cb2af5c6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b21a3805360cf92d94c3767743f85f992f8293d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b21a3805360cf92d94c3767743f85f992f8293d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9b21a3805360cf92d94c3767743f85f992f8293d", "patch": "@@ -1,4 +1,6 @@\n-2007-08-23  Jakub Jelinek  <jakub@redhat.com>\n+2007-08-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gfortran.dg/assumed_charlen_sharing.f90: New test.\n \n \tPR c++/31941\n \t* g++.dg/parse/crash37.C: New test."}, {"sha": "0c1c38a87e269faef2d387f66fc72c2d6f2c1931", "filename": "gcc/testsuite/gfortran.dg/assumed_charlen_sharing.f90", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b21a3805360cf92d94c3767743f85f992f8293d/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_charlen_sharing.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b21a3805360cf92d94c3767743f85f992f8293d/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_charlen_sharing.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_charlen_sharing.f90?ref=9b21a3805360cf92d94c3767743f85f992f8293d", "patch": "@@ -0,0 +1,29 @@\n+! This testcase was miscompiled, because ts.cl\n+! in function bar was initially shared between both\n+! dummy arguments.  Although it was later unshared,\n+! all expressions which copied ts.cl from bar2\n+! before that used incorrectly bar1's length\n+! instead of bar2.\n+! { dg-do run }\n+\n+subroutine foo (foo1, foo2)\n+  implicit none\n+  integer, intent(in) :: foo2\n+  character(*), intent(in) :: foo1(foo2)\n+end subroutine foo\n+\n+subroutine bar (bar1, bar2)\n+  implicit none\n+  character(*), intent(in) :: bar1, bar2\n+\n+  call foo ((/ bar2 /), 1)\n+end subroutine bar\n+\n+program test\n+  character(80) :: str1\n+  character(5) :: str2\n+\n+  str1 = 'String'\n+  str2 = 'Strng'\n+  call bar (str2, str1)\n+end program test"}]}