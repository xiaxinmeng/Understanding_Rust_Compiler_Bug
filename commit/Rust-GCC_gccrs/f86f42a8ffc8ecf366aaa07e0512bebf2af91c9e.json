{"sha": "f86f42a8ffc8ecf366aaa07e0512bebf2af91c9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg2ZjQyYThmZmM4ZWNmMzY2YWFhMDdlMDUxMmJlYmYyYWY5MWM5ZQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2001-01-26T23:00:19Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-01-26T23:00:19Z"}, "message": "jni.cc (_Jv_JNI_GetAnyMethodID): Rewrite signature from external to internal representation.\n\n\t* jni.cc (_Jv_JNI_GetAnyMethodID): Rewrite signature from external\n\tto internal representation.\n\t(_Jv_JNI_GetAnyFieldID): Likewise.  Also, only use\n\t_Jv_FindClassFromSignature.\n\nFrom-SVN: r39289", "tree": {"sha": "72c1eaf28683215ac81bfb6c01e04e7180cce70c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72c1eaf28683215ac81bfb6c01e04e7180cce70c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f86f42a8ffc8ecf366aaa07e0512bebf2af91c9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f86f42a8ffc8ecf366aaa07e0512bebf2af91c9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f86f42a8ffc8ecf366aaa07e0512bebf2af91c9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f86f42a8ffc8ecf366aaa07e0512bebf2af91c9e/comments", "author": null, "committer": null, "parents": [{"sha": "45291dd5855ad2c9c38088864c7b047e483d2a61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45291dd5855ad2c9c38088864c7b047e483d2a61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45291dd5855ad2c9c38088864c7b047e483d2a61"}], "stats": {"total": 31, "additions": 21, "deletions": 10}, "files": [{"sha": "55fb358c47301144c1f333fbc3a7d98a454b4333", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f86f42a8ffc8ecf366aaa07e0512bebf2af91c9e/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f86f42a8ffc8ecf366aaa07e0512bebf2af91c9e/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=f86f42a8ffc8ecf366aaa07e0512bebf2af91c9e", "patch": "@@ -1,3 +1,10 @@\n+2001-01-26  Tom Tromey  <tromey@redhat.com>\n+\n+\t* jni.cc (_Jv_JNI_GetAnyMethodID): Rewrite signature from external\n+\tto internal representation.\n+\t(_Jv_JNI_GetAnyFieldID): Likewise.  Also, only use\n+\t_Jv_FindClassFromSignature.\n+\n 2001-01-26  Warren Levy  <warrenl@redhat.com>\n \n \t* java/lang/natSystem.cc (getSystemTimeZone): Only use tm_gmtoff"}, {"sha": "dcc620b6224a3728a8dc636c95e63bcbda1bd447", "filename": "libjava/jni.cc", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f86f42a8ffc8ecf366aaa07e0512bebf2af91c9e/libjava%2Fjni.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f86f42a8ffc8ecf366aaa07e0512bebf2af91c9e/libjava%2Fjni.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni.cc?ref=f86f42a8ffc8ecf366aaa07e0512bebf2af91c9e", "patch": "@@ -1,6 +1,6 @@\n // jni.cc - JNI implementation, including the jump table.\n \n-/* Copyright (C) 1998, 1999, 2000  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -593,7 +593,13 @@ _Jv_JNI_GetAnyMethodID (JNIEnv *env, jclass clazz,\n       _Jv_InitClass (clazz);\n \n       _Jv_Utf8Const *name_u = _Jv_makeUtf8Const ((char *) name, -1);\n-      _Jv_Utf8Const *sig_u = _Jv_makeUtf8Const ((char *) sig, -1);\n+\n+      // FIXME: assume that SIG isn't too long.\n+      int len = strlen (sig);\n+      char s[len + 1];\n+      for (int i = 0; i <= len; ++i)\n+\ts[i] = (sig[i] == '/') ? '.' : sig[i];\n+      _Jv_Utf8Const *sig_u = _Jv_makeUtf8Const ((char *) s, -1);\n \n       JvAssert (! clazz->isPrimitive());\n \n@@ -1053,14 +1059,12 @@ _Jv_JNI_GetAnyFieldID (JNIEnv *env, jclass clazz,\n \n       _Jv_Utf8Const *a_name = _Jv_makeUtf8Const ((char *) name, -1);\n \n-      jclass field_class = NULL;\n-      if (sig[0] == '[')\n-\tfield_class = _Jv_FindClassFromSignature ((char *) sig, NULL);\n-      else\n-\t{\n-\t  _Jv_Utf8Const *sig_u = _Jv_makeUtf8Const ((char *) sig, -1);\n-\t  field_class = _Jv_FindClass (sig_u, NULL);\n-\t}\n+      // FIXME: assume that SIG isn't too long.\n+      int len = strlen (sig);\n+      char s[len + 1];\n+      for (int i = 0; i <= len; ++i)\n+\ts[i] = (sig[i] == '/') ? '.' : sig[i];\n+      jclass field_class = _Jv_FindClassFromSignature ((char *) s, NULL);\n \n       // FIXME: what if field_class == NULL?\n "}]}