{"sha": "959434e6ba489bceb258ae02936e789be894d0e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU5NDM0ZTZiYTQ4OWJjZWIyNThhZTAyOTM2ZTc4OWJlODk0ZDBlNw==", "commit": {"author": {"name": "Edgar E. Iglesias", "email": "edgar.iglesias@gmail.com", "date": "2013-02-19T23:05:40Z"}, "committer": {"name": "Michael Eager", "email": "eager@gcc.gnu.org", "date": "2013-02-19T23:05:40Z"}, "message": "microblaze.md (call_value_intern): Check symbol is function before branching.\n\n*  config/microblaze/microblaze.md (call_value_intern): Check symbol is \nfunction before branching.\n\nFrom-SVN: r196157", "tree": {"sha": "33dd06db317ab7fd847303bd864c7ad0e8bd94e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33dd06db317ab7fd847303bd864c7ad0e8bd94e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/959434e6ba489bceb258ae02936e789be894d0e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/959434e6ba489bceb258ae02936e789be894d0e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/959434e6ba489bceb258ae02936e789be894d0e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/959434e6ba489bceb258ae02936e789be894d0e7/comments", "author": {"login": "edgarigl", "id": 86901, "node_id": "MDQ6VXNlcjg2OTAx", "avatar_url": "https://avatars.githubusercontent.com/u/86901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgarigl", "html_url": "https://github.com/edgarigl", "followers_url": "https://api.github.com/users/edgarigl/followers", "following_url": "https://api.github.com/users/edgarigl/following{/other_user}", "gists_url": "https://api.github.com/users/edgarigl/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgarigl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgarigl/subscriptions", "organizations_url": "https://api.github.com/users/edgarigl/orgs", "repos_url": "https://api.github.com/users/edgarigl/repos", "events_url": "https://api.github.com/users/edgarigl/events{/privacy}", "received_events_url": "https://api.github.com/users/edgarigl/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7c422dbbc7446d733bc080617efe7afa3e6c0e20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c422dbbc7446d733bc080617efe7afa3e6c0e20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c422dbbc7446d733bc080617efe7afa3e6c0e20"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "98b01b4b9dc3c89508e999db36fd704952fbc6b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/959434e6ba489bceb258ae02936e789be894d0e7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/959434e6ba489bceb258ae02936e789be894d0e7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=959434e6ba489bceb258ae02936e789be894d0e7", "patch": "@@ -1,3 +1,8 @@\n+2012-02-19  Edgar E. Iglesias <edgar.iglesias@gmail.com>\n+\n+\t*  config/microblaze/microblaze.md (call_value_intern): Check symbol is \n+\tfunction before branching.\n+\n 2012-02-19  Andrey Belevantsev  <abel@ispras.ru>\n \n \t* sel-sched-dump.c (dump_insn_rtx_flags): Explicitly set"}, {"sha": "b3d0514ded96b65799d9de1f6ffdf986001bf2e7", "filename": "gcc/config/microblaze/microblaze.md", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/959434e6ba489bceb258ae02936e789be894d0e7/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/959434e6ba489bceb258ae02936e789be894d0e7/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.md?ref=959434e6ba489bceb258ae02936e789be894d0e7", "patch": "@@ -2128,9 +2128,17 @@\n     register rtx target = operands[1];\n     register rtx target2=gen_rtx_REG (Pmode,GP_REG_FIRST + MB_ABI_SUB_RETURN_ADDR_REGNUM);\n \n-    if (GET_CODE (target) == SYMBOL_REF){\n-\tgen_rtx_CLOBBER (VOIDmode,target2);\n-\treturn \"brlid\\tr15,%1\\;%#\";\n+    if (GET_CODE (target) == SYMBOL_REF)\n+    {\n+      gen_rtx_CLOBBER (VOIDmode,target2);\n+      if (SYMBOL_REF_FLAGS (target) & SYMBOL_FLAG_FUNCTION)\n+        {\n+\t  return \"brlid\\tr15,%1\\;%#\";\n+        }\n+      else\n+        {\n+\t  return \"bralid\\tr15,%1\\;%#\";\n+        }\n     }\n     else if (GET_CODE (target) == CONST_INT)\n         return \"la\\t%@,r0,%1\\;brald\\tr15,%@\\;%#\";"}]}