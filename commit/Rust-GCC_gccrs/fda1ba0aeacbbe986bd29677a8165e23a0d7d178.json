{"sha": "fda1ba0aeacbbe986bd29677a8165e23a0d7d178", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRhMWJhMGFlYWNiYmU5ODZiZDI5Njc3YTgxNjVlMjNhMGQ3ZDE3OA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-11-06T07:48:50Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-11-06T07:48:50Z"}, "message": "re PR middle-end/58970 (internal compiler error: in get_bit_range, at expr.c:4562)\n\n\tPR middle-end/58970\n\t* expr.c (get_bit_range): Handle *offset == NULL_TREE.\n\t(expand_assignment): If *bitpos is negative, set *offset\n\tand adjust *bitpos, so that it is not negative.\n\n\t* gcc.c-torture/compile/pr58970.c: New test.\n\nFrom-SVN: r204444", "tree": {"sha": "a98bd0cd4b8f5495fcad8eaad4dd8f843662c5bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a98bd0cd4b8f5495fcad8eaad4dd8f843662c5bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fda1ba0aeacbbe986bd29677a8165e23a0d7d178", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fda1ba0aeacbbe986bd29677a8165e23a0d7d178", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fda1ba0aeacbbe986bd29677a8165e23a0d7d178", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fda1ba0aeacbbe986bd29677a8165e23a0d7d178/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "10180dd30203ea20aca4b05902d5fd26603b1ec6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10180dd30203ea20aca4b05902d5fd26603b1ec6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10180dd30203ea20aca4b05902d5fd26603b1ec6"}], "stats": {"total": 57, "additions": 50, "deletions": 7}, "files": [{"sha": "3b468540b62190e088c604da8d0f051f6044aa40", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fda1ba0aeacbbe986bd29677a8165e23a0d7d178/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fda1ba0aeacbbe986bd29677a8165e23a0d7d178/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fda1ba0aeacbbe986bd29677a8165e23a0d7d178", "patch": "@@ -1,3 +1,10 @@\n+2013-11-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/58970\n+\t* expr.c (get_bit_range): Handle *offset == NULL_TREE.\n+\t(expand_assignment): If *bitpos is negative, set *offset\n+\tand adjust *bitpos, so that it is not negative.\n+\n 2013-11-06  Ganesh Gopalasubramanian  <Ganesh.Gopalasubramanian@amd.com>\n \n \t* config/i386/bdver3.md : Added two additional decoder units "}, {"sha": "4c64489976f1af0f6a86d8a87a3f13d719903bf6", "filename": "gcc/expr.c", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fda1ba0aeacbbe986bd29677a8165e23a0d7d178/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fda1ba0aeacbbe986bd29677a8165e23a0d7d178/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=fda1ba0aeacbbe986bd29677a8165e23a0d7d178", "patch": "@@ -4576,19 +4576,19 @@ get_bit_range (unsigned HOST_WIDE_INT *bitstart,\n \t\t- tree_low_cst (DECL_FIELD_BIT_OFFSET (repr), 1));\n \n   /* If the adjustment is larger than bitpos, we would have a negative bit\n-     position for the lower bound and this may wreak havoc later.  This can\n-     occur only if we have a non-null offset, so adjust offset and bitpos\n-     to make the lower bound non-negative.  */\n+     position for the lower bound and this may wreak havoc later.  Adjust\n+     offset and bitpos to make the lower bound non-negative in that case.  */\n   if (bitoffset > *bitpos)\n     {\n       HOST_WIDE_INT adjust = bitoffset - *bitpos;\n-\n       gcc_assert ((adjust % BITS_PER_UNIT) == 0);\n-      gcc_assert (*offset != NULL_TREE);\n \n       *bitpos += adjust;\n-      *offset\n-\t= size_binop (MINUS_EXPR, *offset, size_int (adjust / BITS_PER_UNIT));\n+      if (*offset == NULL_TREE)\n+\t*offset = size_int (-adjust / BITS_PER_UNIT);\n+      else\n+\t*offset\n+\t  = size_binop (MINUS_EXPR, *offset, size_int (adjust / BITS_PER_UNIT));\n       *bitstart = 0;\n     }\n   else\n@@ -4721,6 +4721,15 @@ expand_assignment (tree to, tree from, bool nontemporal)\n       tem = get_inner_reference (to, &bitsize, &bitpos, &offset, &mode1,\n \t\t\t\t &unsignedp, &volatilep, true);\n \n+      /* Make sure bitpos is not negative, it can wreak havoc later.  */\n+      if (bitpos < 0)\n+\t{\n+\t  gcc_assert (offset == NULL_TREE);\n+\t  offset = size_int (bitpos >> (BITS_PER_UNIT == 8\n+\t\t\t\t\t? 3 : exact_log2 (BITS_PER_UNIT)));\n+\t  bitpos &= BITS_PER_UNIT - 1;\n+\t}\n+\n       if (TREE_CODE (to) == COMPONENT_REF\n \t  && DECL_BIT_FIELD_TYPE (TREE_OPERAND (to, 1)))\n \tget_bit_range (&bitregion_start, &bitregion_end, to, &bitpos, &offset);"}, {"sha": "ad1d4db8373a028fc47c87a23650c04b6bea438c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fda1ba0aeacbbe986bd29677a8165e23a0d7d178/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fda1ba0aeacbbe986bd29677a8165e23a0d7d178/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fda1ba0aeacbbe986bd29677a8165e23a0d7d178", "patch": "@@ -1,3 +1,8 @@\n+2013-11-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/58970\n+\t* gcc.c-torture/compile/pr58970.c: New test.\n+\n 2013-11-05  Wei Mi  <wmi@google.com>\n \n \tPR regression/58985"}, {"sha": "45aad2b2e65428f8b23ec48d3344a5bacab32421", "filename": "gcc/testsuite/gcc.c-torture/compile/pr58970-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fda1ba0aeacbbe986bd29677a8165e23a0d7d178/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr58970-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fda1ba0aeacbbe986bd29677a8165e23a0d7d178/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr58970-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr58970-1.c?ref=fda1ba0aeacbbe986bd29677a8165e23a0d7d178", "patch": "@@ -0,0 +1,11 @@\n+/* PR middle-end/58970 */\n+\n+struct T { int b : 1; };\n+struct S { struct T t[1]; };\n+\n+void\n+foo (int x, struct S *s)\n+{\n+  if (x == -1)\n+    s->t[x].b = 0;\n+}"}, {"sha": "3103b31e179e2ba436270d868220219cff509551", "filename": "gcc/testsuite/gcc.c-torture/compile/pr58970-2.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fda1ba0aeacbbe986bd29677a8165e23a0d7d178/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr58970-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fda1ba0aeacbbe986bd29677a8165e23a0d7d178/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr58970-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr58970-2.c?ref=fda1ba0aeacbbe986bd29677a8165e23a0d7d178", "patch": "@@ -0,0 +1,11 @@\n+/* PR middle-end/58970 */\n+\n+struct T { char a : 8; char b : 1; };\n+struct S { char x; struct T t[1]; };\n+\n+void\n+foo (int x, struct S *s)\n+{\n+  if (x == -1)\n+    s->t[x].b = 0;\n+}"}]}