{"sha": "0ef8d7621cf691560ed83b3eabf8a7dd89dd5bc6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVmOGQ3NjIxY2Y2OTE1NjBlZDgzYjNlYWJmOGE3ZGQ4OWRkNWJjNg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-24T00:11:19Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-24T00:11:19Z"}, "message": "(save_def_or_dec): If function's aux info doesn't end with a closeparen, ignore it.\n\n(save_def_or_dec): If function's aux info doesn't end\nwith a closeparen, ignore it.\n(xmalloc, xrealloc): Cast result of malloc.\n\nFrom-SVN: r6152", "tree": {"sha": "9808cc038efc6e5b029dd53a32f9db72218b1def", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9808cc038efc6e5b029dd53a32f9db72218b1def"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ef8d7621cf691560ed83b3eabf8a7dd89dd5bc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ef8d7621cf691560ed83b3eabf8a7dd89dd5bc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ef8d7621cf691560ed83b3eabf8a7dd89dd5bc6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ef8d7621cf691560ed83b3eabf8a7dd89dd5bc6/comments", "author": null, "committer": null, "parents": [{"sha": "9db931afe6a4dd7329b958ef45116cb4f22f6a80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9db931afe6a4dd7329b958ef45116cb4f22f6a80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9db931afe6a4dd7329b958ef45116cb4f22f6a80"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "5cff35de671ba17a22fcc8cdbc4706bfc47f904a", "filename": "gcc/protoize.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ef8d7621cf691560ed83b3eabf8a7dd89dd5bc6/gcc%2Fprotoize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ef8d7621cf691560ed83b3eabf8a7dd89dd5bc6/gcc%2Fprotoize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprotoize.c?ref=0ef8d7621cf691560ed83b3eabf8a7dd89dd5bc6", "patch": "@@ -611,7 +611,7 @@ xmalloc (byte_count)\n {\n   pointer_type rv;\n \n-  rv = malloc (byte_count);\n+  rv = (pointer_type) malloc (byte_count);\n   if (rv == NULL)\n     {\n       fprintf (stderr, \"\\n%s: virtual memory exceeded\\n\", pname);\n@@ -631,7 +631,7 @@ xrealloc (old_space, byte_count)\n {\n   pointer_type rv;\n \n-  rv = realloc (old_space, byte_count);\n+  rv = (pointer_type) realloc (old_space, byte_count);\n   if (rv == NULL)\n     {\n       fprintf (stderr, \"\\n%s: virtual memory exceeded\\n\", pname);\n@@ -1710,11 +1710,18 @@ save_def_or_dec (l, is_syscalls)\n \n     def_dec_p->ansi_decl\n       = dupnstr (ansi_start, (size_t) ((semicolon_p+1) - ansi_start));\n-  }\n \n-  /* Backup and point at the final right paren of the final argument list.  */\n+    /* Backup and point at the final right paren of the final argument list.  */\n+\n+    p--;\n \n-  p--;\n+    while (p != ansi_start && (p[-1] == ' ' || p[-1] == '\\t')) p--;\n+    if (p[-1] != ')')\n+      {\n+\tfree_def_dec (def_dec_p);\n+\treturn;\n+      }\n+  }\n \n   /* Now isolate a whole set of formal argument lists, one-by-one.  Normally,\n      there will only be one list to isolate, but there could be more.  */"}]}