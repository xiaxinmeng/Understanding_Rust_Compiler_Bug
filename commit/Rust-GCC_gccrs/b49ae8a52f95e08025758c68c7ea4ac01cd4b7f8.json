{"sha": "b49ae8a52f95e08025758c68c7ea4ac01cd4b7f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ5YWU4YTUyZjk1ZTA4MDI1NzU4YzY4YzdlYTRhYzAxY2Q0YjdmOA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2019-06-30T19:40:32Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2019-06-30T19:40:32Z"}, "message": "i386.md (mmx_isa): Rename x64, x64_noavx and x64_avx to sse, sse_noavx and avx.\n\n\t* config/i386/i386.md (mmx_isa): Rename x64, x64_noavx and x64_avx\n\tto sse, sse_noavx and avx.  Update all uses.\n\n\t* config/i386/mmx.md (sse_movntq): Add \"isa\" attribute.\n\t(*mmx_<plusminus_insn><mode>3): Ditto.\n\t(*mmx_mulv4hi3\"): Ditto.\n\t(*mmx_smulv4hi3_highpart): Ditto.\n\t(*mmx_umulv4hi3_highpart): Ditto.\n\t(*mmx_pmaddwd): Ditto.\n\t(*sse2_umulv1siv1di3): Ditto.\n\t(*mmx_<code>v4hi3): Ditto.\n\t(*mmx_<code>v8qi3): Ditto.\n\t(mmx_ashr<mode>3): Ditto.\n\t(\"mmx_<shift_insn><mode>3): Ditto.\n\t(*mmx_eq<mode>3): Ditto.\n\t(mmx_gt<mode>3): Ditto.\n\t(mmx_andnot<mode>3): Ditto.\n\t(*mmx_<code><mode>3): Ditto.\n\t(*mmx_pinsrw): Ditto.\n\t(*mmx_pextrw): Ditto.\n\t(mmx_pshufw_1): Ditto.\n\t(*mmx_uavgv8qi3): Ditto.\n\t(*mmx_uavgv4hi3): Ditto.\n\t(\"mmx_psadbw): Ditto.\n\t* config/i386/sse.md (sse_cvtps2pi): Ditto.\n\t(sse_cvttps2pi): Ditto.\n\t(ssse3_pmaddubsw): Ditto.\n\t(*ssse3_pmulhrswv4hi3): Ditto.\n\t(ssse3_psign<mode>3): Ditto.\n\nFrom-SVN: r272834", "tree": {"sha": "ca5454a1d9cfe12e2310a372be2ec3d7f2c594e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca5454a1d9cfe12e2310a372be2ec3d7f2c594e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b49ae8a52f95e08025758c68c7ea4ac01cd4b7f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b49ae8a52f95e08025758c68c7ea4ac01cd4b7f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b49ae8a52f95e08025758c68c7ea4ac01cd4b7f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b49ae8a52f95e08025758c68c7ea4ac01cd4b7f8/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b09e0af6b290a797e7c6b8ffc611a8d708583c70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b09e0af6b290a797e7c6b8ffc611a8d708583c70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b09e0af6b290a797e7c6b8ffc611a8d708583c70"}], "stats": {"total": 194, "additions": 132, "deletions": 62}, "files": [{"sha": "879aa2eac7d000efafe89680846bf2ef038e30e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b49ae8a52f95e08025758c68c7ea4ac01cd4b7f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b49ae8a52f95e08025758c68c7ea4ac01cd4b7f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b49ae8a52f95e08025758c68c7ea4ac01cd4b7f8", "patch": "@@ -1,3 +1,37 @@\n+2019-06-30  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (mmx_isa): Rename x64, x64_noavx and x64_avx\n+\tto sse, sse_noavx and avx.  Update all uses.\n+\n+2019-06-30  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/mmx.md (sse_movntq): Add \"isa\" attribute.\n+\t(*mmx_<plusminus_insn><mode>3): Ditto.\n+\t(*mmx_mulv4hi3\"): Ditto.\n+\t(*mmx_smulv4hi3_highpart): Ditto.\n+\t(*mmx_umulv4hi3_highpart): Ditto.\n+\t(*mmx_pmaddwd): Ditto.\n+\t(*sse2_umulv1siv1di3): Ditto.\n+\t(*mmx_<code>v4hi3): Ditto.\n+\t(*mmx_<code>v8qi3): Ditto.\n+\t(mmx_ashr<mode>3): Ditto.\n+\t(\"mmx_<shift_insn><mode>3): Ditto.\n+\t(*mmx_eq<mode>3): Ditto.\n+\t(mmx_gt<mode>3): Ditto.\n+\t(mmx_andnot<mode>3): Ditto.\n+\t(*mmx_<code><mode>3): Ditto.\n+\t(*mmx_pinsrw): Ditto.\n+\t(*mmx_pextrw): Ditto.\n+\t(mmx_pshufw_1): Ditto.\n+\t(*mmx_uavgv8qi3): Ditto.\n+\t(*mmx_uavgv4hi3): Ditto.\n+\t(\"mmx_psadbw): Ditto.\n+\t* config/i386/sse.md (sse_cvtps2pi): Ditto.\n+\t(sse_cvttps2pi): Ditto.\n+\t(ssse3_pmaddubsw): Ditto.\n+\t(*ssse3_pmulhrswv4hi3): Ditto.\n+\t(ssse3_psign<mode>3): Ditto.\n+\n 2019-06-29  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* expr.c (expand_expr_real_1) <BIT_FIELD_REF>: Apply the big-endian"}, {"sha": "c362a72411a2b73d187676634b4aedad6ebfe94e", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b49ae8a52f95e08025758c68c7ea4ac01cd4b7f8/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b49ae8a52f95e08025758c68c7ea4ac01cd4b7f8/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=b49ae8a52f95e08025758c68c7ea4ac01cd4b7f8", "patch": "@@ -801,7 +801,7 @@\n   (const_string \"base\"))\n \n ;; Define instruction set of MMX instructions\n-(define_attr \"mmx_isa\" \"base,native,x64,x64_noavx,x64_avx\"\n+(define_attr \"mmx_isa\" \"base,native,sse,sse_noavx,avx\"\n   (const_string \"base\"))\n \n (define_attr \"enabled\" \"\"\n@@ -845,12 +845,12 @@\n \n \t (eq_attr \"mmx_isa\" \"native\")\n \t   (symbol_ref \"!TARGET_MMX_WITH_SSE\")\n-\t (eq_attr \"mmx_isa\" \"x64\")\n+\t (eq_attr \"mmx_isa\" \"sse\")\n \t   (symbol_ref \"TARGET_MMX_WITH_SSE\")\n-\t (eq_attr \"mmx_isa\" \"x64_avx\")\n-\t   (symbol_ref \"TARGET_MMX_WITH_SSE && TARGET_AVX\")\n-\t (eq_attr \"mmx_isa\" \"x64_noavx\")\n+\t (eq_attr \"mmx_isa\" \"sse_noavx\")\n \t   (symbol_ref \"TARGET_MMX_WITH_SSE && !TARGET_AVX\")\n+\t (eq_attr \"mmx_isa\" \"avx\")\n+\t   (symbol_ref \"TARGET_MMX_WITH_SSE && TARGET_AVX\")\n \t]\n \t(const_int 1)))\n "}, {"sha": "70413349390c6d2c6d5ad1c4e9984dd6ea042bb7", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 77, "deletions": 46, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b49ae8a52f95e08025758c68c7ea4ac01cd4b7f8/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b49ae8a52f95e08025758c68c7ea4ac01cd4b7f8/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=b49ae8a52f95e08025758c68c7ea4ac01cd4b7f8", "patch": "@@ -247,7 +247,8 @@\n   \"@\n    movntq\\t{%1, %0|%0, %1}\n    movnti\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"mmx_isa\" \"native,x64\")\n+  [(set_attr \"isa\" \"*,x64\")\n+   (set_attr \"mmx_isa\" \"native,*\")\n    (set_attr \"type\" \"mmxmov,ssemov\")\n    (set_attr \"mode\" \"DI\")])\n \n@@ -594,7 +595,7 @@\n \t(vec_duplicate:V4SF (match_dup 1)))]\n   \"operands[0] = lowpart_subreg (V4SFmode, operands[0],\n \t\t\t\t GET_MODE (operands[0]));\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"mmx_isa\" \"native,sse_noavx,avx\")\n    (set_attr \"type\" \"mmxcvt,ssemov,ssemov\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n@@ -730,7 +731,8 @@\n    p<plusminus_mnemonic><mmxvecsize>\\t{%2, %0|%0, %2}\n    p<plusminus_mnemonic><mmxvecsize>\\t{%2, %0|%0, %2}\n    vp<plusminus_mnemonic><mmxvecsize>\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"isa\" \"*,sse2_noavx,avx\")\n+   (set_attr \"mmx_isa\" \"native,*,*\")\n    (set_attr \"type\" \"mmxadd,sseadd,sseadd\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n@@ -753,7 +755,8 @@\n    p<plusminus_mnemonic><mmxvecsize>\\t{%2, %0|%0, %2}\n    p<plusminus_mnemonic><mmxvecsize>\\t{%2, %0|%0, %2}\n    vp<plusminus_mnemonic><mmxvecsize>\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"isa\" \"*,sse2_noavx,avx\")\n+   (set_attr \"mmx_isa\" \"native,*,*\")\n    (set_attr \"type\" \"mmxadd,sseadd,sseadd\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n@@ -781,7 +784,8 @@\n    pmullw\\t{%2, %0|%0, %2}\n    pmullw\\t{%2, %0|%0, %2}\n    vpmullw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"isa\" \"*,sse2_noavx,avx\")\n+   (set_attr \"mmx_isa\" \"native,*,*\")\n    (set_attr \"type\" \"mmxmul,ssemul,ssemul\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n@@ -814,7 +818,8 @@\n    pmulhw\\t{%2, %0|%0, %2}\n    pmulhw\\t{%2, %0|%0, %2}\n    vpmulhw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"isa\" \"*,sse2_noavx,avx\")\n+   (set_attr \"mmx_isa\" \"native,*,*\")\n    (set_attr \"type\" \"mmxmul,ssemul,ssemul\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n@@ -849,7 +854,8 @@\n    pmulhuw\\t{%2, %0|%0, %2}\n    pmulhuw\\t{%2, %0|%0, %2}\n    vpmulhuw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"isa\" \"*,sse2_noavx,avx\")\n+   (set_attr \"mmx_isa\" \"native,*,*\")\n    (set_attr \"type\" \"mmxmul,ssemul,ssemul\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n@@ -900,7 +906,8 @@\n    pmaddwd\\t{%2, %0|%0, %2}\n    pmaddwd\\t{%2, %0|%0, %2}\n    vpmaddwd\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"isa\" \"*,sse2_noavx,avx\")\n+   (set_attr \"mmx_isa\" \"native,*,*\")\n    (set_attr \"type\" \"mmxmul,sseiadd,sseiadd\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n@@ -971,7 +978,8 @@\n    pmuludq\\t{%2, %0|%0, %2}\n    pmuludq\\t{%2, %0|%0, %2}\n    vpmuludq\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"isa\" \"*,sse2_noavx,avx\")\n+   (set_attr \"mmx_isa\" \"native,*,*\")\n    (set_attr \"type\" \"mmxmul,ssemul,ssemul\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n@@ -1004,7 +1012,8 @@\n    p<maxmin_int>w\\t{%2, %0|%0, %2}\n    p<maxmin_int>w\\t{%2, %0|%0, %2}\n    vp<maxmin_int>w\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"isa\" \"*,sse2_noavx,avx\")\n+   (set_attr \"mmx_isa\" \"native,*,*\")\n    (set_attr \"type\" \"mmxadd,sseiadd,sseiadd\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n@@ -1037,7 +1046,8 @@\n    p<maxmin_int>b\\t{%2, %0|%0, %2}\n    p<maxmin_int>b\\t{%2, %0|%0, %2}\n    vp<maxmin_int>b\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"isa\" \"*,sse2_noavx,avx\")\n+   (set_attr \"mmx_isa\" \"native,*,*\")\n    (set_attr \"type\" \"mmxadd,sseiadd,sseiadd\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n@@ -1051,7 +1061,8 @@\n    psra<mmxvecsize>\\t{%2, %0|%0, %2}\n    psra<mmxvecsize>\\t{%2, %0|%0, %2}\n    vpsra<mmxvecsize>\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"isa\" \"*,sse2_noavx,avx\")\n+   (set_attr \"mmx_isa\" \"native,*,*\")\n    (set_attr \"type\" \"mmxshft,sseishft,sseishft\")\n    (set (attr \"length_immediate\")\n      (if_then_else (match_operand 2 \"const_int_operand\")\n@@ -1076,7 +1087,8 @@\n    p<vshift><mmxvecsize>\\t{%2, %0|%0, %2}\n    p<vshift><mmxvecsize>\\t{%2, %0|%0, %2}\n    vp<vshift><mmxvecsize>\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"isa\" \"*,sse2_noavx,avx\")\n+   (set_attr \"mmx_isa\" \"native,*,*\")\n    (set_attr \"type\" \"mmxshft,sseishft,sseishft\")\n    (set (attr \"length_immediate\")\n      (if_then_else (match_operand 2 \"const_int_operand\")\n@@ -1116,7 +1128,8 @@\n    pcmpeq<mmxvecsize>\\t{%2, %0|%0, %2}\n    pcmpeq<mmxvecsize>\\t{%2, %0|%0, %2}\n    vpcmpeq<mmxvecsize>\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"isa\" \"*,sse2_noavx,avx\")\n+   (set_attr \"mmx_isa\" \"native,*,*\")\n    (set_attr \"type\" \"mmxcmp,ssecmp,ssecmp\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n@@ -1130,7 +1143,8 @@\n    pcmpgt<mmxvecsize>\\t{%2, %0|%0, %2}\n    pcmpgt<mmxvecsize>\\t{%2, %0|%0, %2}\n    vpcmpgt<mmxvecsize>\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"isa\" \"*,sse2_noavx,avx\")\n+   (set_attr \"mmx_isa\" \"native,*,*\")\n    (set_attr \"type\" \"mmxcmp,ssecmp,ssecmp\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n@@ -1150,7 +1164,8 @@\n    pandn\\t{%2, %0|%0, %2}\n    pandn\\t{%2, %0|%0, %2}\n    vpandn\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"isa\" \"*,sse2_noavx,avx\")\n+   (set_attr \"mmx_isa\" \"native,*,*\")\n    (set_attr \"type\" \"mmxadd,sselog,sselog\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n@@ -1181,7 +1196,8 @@\n    p<logic>\\t{%2, %0|%0, %2}\n    p<logic>\\t{%2, %0|%0, %2}\n    vp<logic>\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"isa\" \"*,sse2_noavx,avx\")\n+   (set_attr \"mmx_isa\" \"native,*,*\")\n    (set_attr \"type\" \"mmxadd,sselog,sselog\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n@@ -1211,7 +1227,7 @@\n   \"TARGET_MMX_WITH_SSE && reload_completed\"\n   [(const_int 0)]\n   \"ix86_split_mmx_pack (operands, <any_s_truncate:CODE>); DONE;\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"mmx_isa\" \"native,sse_noavx,avx\")\n    (set_attr \"type\" \"mmxshft,sselog,sselog\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n@@ -1230,7 +1246,7 @@\n   \"TARGET_MMX_WITH_SSE && reload_completed\"\n   [(const_int 0)]\n   \"ix86_split_mmx_pack (operands, SS_TRUNCATE); DONE;\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"mmx_isa\" \"native,sse_noavx,avx\")\n    (set_attr \"type\" \"mmxshft,sselog,sselog\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n@@ -1252,7 +1268,7 @@\n   \"TARGET_MMX_WITH_SSE && reload_completed\"\n   [(const_int 0)]\n   \"ix86_split_mmx_punpck (operands, true); DONE;\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"mmx_isa\" \"native,sse_noavx,avx\")\n    (set_attr \"type\" \"mmxcvt,sselog,sselog\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n@@ -1274,7 +1290,7 @@\n   \"TARGET_MMX_WITH_SSE && reload_completed\"\n   [(const_int 0)]\n   \"ix86_split_mmx_punpck (operands, false); DONE;\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"mmx_isa\" \"native,sse_noavx,avx\")\n    (set_attr \"type\" \"mmxcvt,sselog,sselog\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n@@ -1294,7 +1310,7 @@\n   \"TARGET_MMX_WITH_SSE && reload_completed\"\n   [(const_int 0)]\n   \"ix86_split_mmx_punpck (operands, true); DONE;\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"mmx_isa\" \"native,sse_noavx,avx\")\n    (set_attr \"type\" \"mmxcvt,sselog,sselog\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n@@ -1314,7 +1330,7 @@\n   \"TARGET_MMX_WITH_SSE && reload_completed\"\n   [(const_int 0)]\n   \"ix86_split_mmx_punpck (operands, false); DONE;\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"mmx_isa\" \"native,sse_noavx,avx\")\n    (set_attr \"type\" \"mmxcvt,sselog,sselog\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n@@ -1334,7 +1350,7 @@\n   \"TARGET_MMX_WITH_SSE && reload_completed\"\n   [(const_int 0)]\n   \"ix86_split_mmx_punpck (operands, true); DONE;\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"mmx_isa\" \"native,sse_noavx,avx\")\n    (set_attr \"type\" \"mmxcvt,sselog,sselog\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n@@ -1354,7 +1370,7 @@\n   \"TARGET_MMX_WITH_SSE && reload_completed\"\n   [(const_int 0)]\n   \"ix86_split_mmx_punpck (operands, false); DONE;\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"mmx_isa\" \"native,sse_noavx,avx\")\n    (set_attr \"type\" \"mmxcvt,sselog,sselog\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n@@ -1385,22 +1401,25 @@\n        < GET_MODE_NUNITS (V4HImode))\"\n {\n   operands[3] = GEN_INT (exact_log2 (INTVAL (operands[3])));\n-  if (TARGET_MMX_WITH_SSE && TARGET_AVX)\n+  switch (which_alternative)\n     {\n+    case 2:\n       if (MEM_P (operands[2]))\n \treturn \"vpinsrw\\t{%3, %2, %1, %0|%0, %1, %2, %3}\";\n       else\n \treturn \"vpinsrw\\t{%3, %k2, %1, %0|%0, %1, %k2, %3}\";\n-    }\n-  else\n-    {\n+    case 1:\n+    case 0:\n       if (MEM_P (operands[2]))\n \treturn \"pinsrw\\t{%3, %2, %0|%0, %2, %3}\";\n       else\n \treturn \"pinsrw\\t{%3, %k2, %0|%0, %k2, %3}\";\n+    default:\n+      gcc_unreachable ();\n     }\n }\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"isa\" \"*,sse2_noavx,avx\")\n+   (set_attr \"mmx_isa\" \"native,*,*\")\n    (set_attr \"type\" \"mmxcvt,sselog,sselog\")\n    (set_attr \"length_immediate\" \"1\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n@@ -1416,7 +1435,8 @@\n   \"@\n    pextrw\\t{%2, %1, %0|%0, %1, %2}\n    %vpextrw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"mmx_isa\" \"native,x64\")\n+  [(set_attr \"isa\" \"*,sse2\")\n+   (set_attr \"mmx_isa\" \"native,*\")\n    (set_attr \"type\" \"mmxcvt,sselog1\")\n    (set_attr \"length_immediate\" \"1\")\n    (set_attr \"mode\" \"DI,TI\")])\n@@ -1465,7 +1485,8 @@\n       gcc_unreachable ();\n     }\n }\n-  [(set_attr \"mmx_isa\" \"native,x64\")\n+  [(set_attr \"isa\" \"*,sse2\")\n+   (set_attr \"mmx_isa\" \"native,*\")\n    (set_attr \"type\" \"mmxcvt,sselog\")\n    (set_attr \"length_immediate\" \"1\")\n    (set_attr \"mode\" \"DI,TI\")])\n@@ -1524,7 +1545,7 @@\n   emit_insn (gen_rtx_SET (operands[0], op));\n   DONE;\n }\n-  [(set_attr \"mmx_isa\" \"native,x64,x64_avx\")\n+  [(set_attr \"mmx_isa\" \"native,sse,avx\")\n    (set_attr \"type\" \"mmxcvt,sselog1,ssemov\")\n    (set_attr \"length_immediate\" \"1,1,0\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n@@ -1544,7 +1565,7 @@\n \t(vec_duplicate:V4SI (match_dup 1)))]\n   \"operands[0] = lowpart_subreg (V4SImode, operands[0],\n \t\t\t\t GET_MODE (operands[0]));\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx,x64_avx\")\n+  [(set_attr \"mmx_isa\" \"native,sse_noavx,avx,avx\")\n    (set_attr \"type\" \"mmxcvt,ssemov,ssemov,ssemov\")\n    (set_attr \"mode\" \"DI,TI,TI,TI\")])\n \n@@ -1766,16 +1787,24 @@\n    && (TARGET_SSE || TARGET_3DNOW)\n    && ix86_binary_operator_ok (PLUS, V8QImode, operands)\"\n {\n-  /* These two instructions have the same operation, but their encoding\n-     is different.  Prefer the one that is de facto standard.  */\n-  if (TARGET_MMX_WITH_SSE && TARGET_AVX)\n-    return \"vpavgb\\t{%2, %1, %0|%0, %1, %2}\";\n-  else if (TARGET_SSE || TARGET_3DNOW_A)\n-    return \"pavgb\\t{%2, %0|%0, %2}\";\n-  else\n-    return \"pavgusb\\t{%2, %0|%0, %2}\";\n+  switch (which_alternative)\n+    {\n+    case 2:\n+      return \"vpavgb\\t{%2, %1, %0|%0, %1, %2}\";\n+    case 1:\n+    case 0:\n+      /* These two instructions have the same operation, but their encoding\n+\t is different.  Prefer the one that is de facto standard.  */\n+      if (TARGET_SSE || TARGET_3DNOW_A)\n+\treturn \"pavgb\\t{%2, %0|%0, %2}\";\n+      else\n+\treturn \"pavgusb\\t{%2, %0|%0, %2}\";\n+      default:\n+\tgcc_unreachable ();\n+    }\n }\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"isa\" \"*,sse2_noavx,avx\")\n+   (set_attr \"mmx_isa\" \"native,*,*\")\n    (set_attr \"type\" \"mmxshft,sseiadd,sseiadd\")\n    (set (attr \"prefix_extra\")\n      (if_then_else\n@@ -1822,7 +1851,8 @@\n    pavgw\\t{%2, %0|%0, %2}\n    pavgw\\t{%2, %0|%0, %2}\n    vpavgw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"isa\" \"*,sse2_noavx,avx\")\n+   (set_attr \"mmx_isa\" \"native,*,*\")\n    (set_attr \"type\" \"mmxshft,sseiadd,sseiadd\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n@@ -1837,7 +1867,8 @@\n    psadbw\\t{%2, %0|%0, %2}\n    psadbw\\t{%2, %0|%0, %2}\n    vpsadbw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"isa\" \"*,sse2_noavx,avx\")\n+   (set_attr \"mmx_isa\" \"native,*,*\")\n    (set_attr \"type\" \"mmxshft,sseiadd,sseiadd\")\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n@@ -1862,7 +1893,7 @@\n   operands[2] = lowpart_subreg (QImode, operands[0],\n \t\t\t\tGET_MODE (operands[0]));\n }\n-  [(set_attr \"mmx_isa\" \"native,x64\")\n+  [(set_attr \"mmx_isa\" \"native,sse\")\n    (set_attr \"type\" \"mmxcvt,ssemov\")\n    (set_attr \"mode\" \"DI,TI\")])\n "}, {"sha": "e46a83e70142fe9ae980aad81ef2d4cd14c3392a", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b49ae8a52f95e08025758c68c7ea4ac01cd4b7f8/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b49ae8a52f95e08025758c68c7ea4ac01cd4b7f8/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=b49ae8a52f95e08025758c68c7ea4ac01cd4b7f8", "patch": "@@ -5150,7 +5150,7 @@\n     }\n   DONE;\n }\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"mmx_isa\" \"native,sse_noavx,avx\")\n    (set_attr \"type\" \"ssecvt\")\n    (set_attr \"mode\" \"V4SF\")])\n \n@@ -5164,7 +5164,8 @@\n   \"@\n    cvtps2pi\\t{%1, %0|%0, %q1}\n    %vcvtps2dq\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"mmx_isa\" \"native,x64\")\n+  [(set_attr \"isa\" \"*,sse2\")\n+   (set_attr \"mmx_isa\" \"native,*\")\n    (set_attr \"type\" \"ssecvt\")\n    (set_attr \"unit\" \"mmx,*\")\n    (set_attr \"mode\" \"DI\")])\n@@ -5178,7 +5179,8 @@\n   \"@\n    cvttps2pi\\t{%1, %0|%0, %q1}\n    %vcvttps2dq\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"mmx_isa\" \"native,x64\")\n+  [(set_attr \"isa\" \"*,sse2\")\n+   (set_attr \"mmx_isa\" \"native,*\")\n    (set_attr \"type\" \"ssecvt\")\n    (set_attr \"unit\" \"mmx,*\")\n    (set_attr \"prefix_rep\" \"0\")\n@@ -15893,7 +15895,7 @@\n   ix86_move_vector_high_sse_to_mmx (op0);\n   DONE;\n }\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"mmx_isa\" \"native,sse_noavx,avx\")\n    (set_attr \"type\" \"sseiadd\")\n    (set_attr \"atom_unit\" \"complex\")\n    (set_attr \"prefix_extra\" \"1\")\n@@ -16009,7 +16011,7 @@\n   ix86_move_vector_high_sse_to_mmx (op0);\n   DONE;\n }\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"mmx_isa\" \"native,sse_noavx,avx\")\n    (set_attr \"type\" \"sseiadd\")\n    (set_attr \"atom_unit\" \"complex\")\n    (set_attr \"prefix_extra\" \"1\")\n@@ -16192,7 +16194,8 @@\n    pmaddubsw\\t{%2, %0|%0, %2}\n    pmaddubsw\\t{%2, %0|%0, %2}\n    vpmaddubsw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"isa\" \"*,noavx,avx\")\n+   (set_attr \"mmx_isa\" \"native,*,*\")\n    (set_attr \"type\" \"sseiadd\")\n    (set_attr \"atom_unit\" \"simul\")\n    (set_attr \"prefix_extra\" \"1\")\n@@ -16313,7 +16316,8 @@\n    pmulhrsw\\t{%2, %0|%0, %2}\n    pmulhrsw\\t{%2, %0|%0, %2}\n    vpmulhrsw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"isa\" \"*,noavx,avx\")\n+   (set_attr \"mmx_isa\" \"native,*,*\")\n    (set_attr \"type\" \"sseimul\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set (attr \"prefix_rex\") (symbol_ref \"x86_extended_reg_mentioned_p (insn)\"))\n@@ -16373,7 +16377,7 @@\n   rtx vec_const = gen_rtx_CONST_VECTOR (V4SImode, par);\n   operands[5] = force_const_mem (V4SImode, vec_const);\n }\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"mmx_isa\" \"native,sse_noavx,avx\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set (attr \"prefix_rex\") (symbol_ref \"x86_extended_reg_mentioned_p (insn)\"))\n    (set_attr \"mode\" \"DI,TI,TI\")])\n@@ -16406,7 +16410,8 @@\n    psign<mmxvecsize>\\t{%2, %0|%0, %2}\n    psign<mmxvecsize>\\t{%2, %0|%0, %2}\n    vpsign<mmxvecsize>\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"isa\" \"*,noavx,avx\")\n+   (set_attr \"mmx_isa\" \"native,*,*\")\n    (set_attr \"type\" \"sselog1\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set (attr \"prefix_rex\") (symbol_ref \"x86_extended_reg_mentioned_p (insn)\"))\n@@ -16510,7 +16515,7 @@\n     }\n   operands[0] = lowpart_subreg (V1TImode, op0, GET_MODE (op0));\n }\n-  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+  [(set_attr \"mmx_isa\" \"native,sse_noavx,avx\")\n    (set_attr \"type\" \"sseishft\")\n    (set_attr \"atom_unit\" \"sishuf\")\n    (set_attr \"prefix_extra\" \"1\")\n@@ -16587,7 +16592,7 @@\n   \"@\n    pabs<mmxvecsize>\\t{%1, %0|%0, %1}\n    %vpabs<mmxvecsize>\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"mmx_isa\" \"native,x64\")\n+  [(set_attr \"mmx_isa\" \"native,*\")\n    (set_attr \"type\" \"sselog1\")\n    (set_attr \"prefix_rep\" \"0\")\n    (set_attr \"prefix_extra\" \"1\")"}]}