{"sha": "09e18d113b3c3dae896ac1a8ad1e0087adbb153b", "node_id": "C_kwDOANBUbNoAKDA5ZTE4ZDExM2IzYzNkYWU4OTZhYzFhOGFkMWUwMDg3YWRiYjE1M2I", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2021-09-21T18:44:26Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2021-09-21T21:31:10Z"}, "message": "runtime: set runtime.GOROOT value at build time\n\nIn Go 1.17 the gc toolchain changed to set runtime.GOROOT in cmd/link\n(previously it was runtime/internal/sys.GOROOT).  Do the same in libgo.\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/351313\n\ngotools/:\n\t* Makefile.am (check-runtime): Add goroot.go to --extrafiles.\n\t* Makefile.in: Regenerate.", "tree": {"sha": "66b099a6ebc2076ef353afa90d9703824d023812", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66b099a6ebc2076ef353afa90d9703824d023812"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09e18d113b3c3dae896ac1a8ad1e0087adbb153b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09e18d113b3c3dae896ac1a8ad1e0087adbb153b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09e18d113b3c3dae896ac1a8ad1e0087adbb153b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09e18d113b3c3dae896ac1a8ad1e0087adbb153b/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97cfb54c3ff15b9691fd1c12a29de56966bf8e0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97cfb54c3ff15b9691fd1c12a29de56966bf8e0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97cfb54c3ff15b9691fd1c12a29de56966bf8e0d"}], "stats": {"total": 37, "additions": 27, "deletions": 10}, "files": [{"sha": "edfbe46d8f4ec86807d7895acc3931216b85cc76", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09e18d113b3c3dae896ac1a8ad1e0087adbb153b/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09e18d113b3c3dae896ac1a8ad1e0087adbb153b/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=09e18d113b3c3dae896ac1a8ad1e0087adbb153b", "patch": "@@ -1,4 +1,4 @@\n-850235e4b974b9c5c2d7a1f9860583bd07f2a45c\n+e3bfc0889237a5bb8aa7ae30e1cff14f90a5f941\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "199899b9ef0aab3ecbaf011a384792be1ebe3791", "filename": "gotools/Makefile.am", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09e18d113b3c3dae896ac1a8ad1e0087adbb153b/gotools%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09e18d113b3c3dae896ac1a8ad1e0087adbb153b/gotools%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gotools%2FMakefile.am?ref=09e18d113b3c3dae896ac1a8ad1e0087adbb153b", "patch": "@@ -245,14 +245,14 @@ check-runtime: go$(EXEEXT) $(noinst_PROGRAMS) check-head check-gccgo check-gcc\n \texport LD_LIBRARY_PATH; \\\n \tGOARCH=`$(abs_builddir)/go$(EXEEXT) env GOARCH`; \\\n \tGOOS=`$(abs_builddir)/go$(EXEEXT) env GOOS`; \\\n-\tfiles=`$(SHELL) $(libgosrcdir)/../match.sh --goarch=$${GOARCH} --goos=$${GOOS} --srcdir=$(libgosrcdir)/runtime --extrafiles=\"$(libgodir)/runtime_linknames.go $(libgodir)/runtime_sysinfo.go $(libgodir)/sigtab.go\" --tag=libffi`; \\\n+\tfiles=`$(SHELL) $(libgosrcdir)/../match.sh --goarch=$${GOARCH} --goos=$${GOOS} --srcdir=$(libgosrcdir)/runtime --extrafiles=\"$(libgodir)/runtime_linknames.go $(libgodir)/runtime_sysinfo.go $(libgodir)/sigtab.go $(libgodir)/goroot.go\" --tag=libffi`; \\\n \techo \"$(ECHO_ENV) GC='$(abs_builddir)/check-gccgo -fgo-compiling-runtime' GOARCH=$${GOARCH} GOOS=$${GOOS} $(SHELL) $(libgosrcdir)/../testsuite/gotest --goarch=$${GOARCH} --goos=$${GOOS} --basedir=$(libgosrcdir)/.. --srcdir=$(libgosrcdir)/runtime --pkgpath=runtime --pkgfiles='$${files}' $(GOTESTFLAGS) -test.timeout=$(GOTOOLS_TEST_TIMEOUT)s -test.v\" > runtime-testlog\n \t$(CHECK_ENV) \\\n \tGC=\"$${GCCGO} -fgo-compiling-runtime\"; \\\n \texport GC; \\\n \tGOARCH=`$(abs_builddir)/go$(EXEEXT) env GOARCH`; \\\n \tGOOS=`$(abs_builddir)/go$(EXEEXT) env GOOS`; \\\n-\tfiles=`$(SHELL) $(libgosrcdir)/../match.sh --goarch=$${GOARCH} --goos=$${GOOS} --srcdir=$(libgosrcdir)/runtime --extrafiles=\"$(libgodir)/runtime_linknames.go $(libgodir)/runtime_sysinfo.go $(libgodir)/sigtab.go\" --tag=libffi`; \\\n+\tfiles=`$(SHELL) $(libgosrcdir)/../match.sh --goarch=$${GOARCH} --goos=$${GOOS} --srcdir=$(libgosrcdir)/runtime --extrafiles=\"$(libgodir)/runtime_linknames.go $(libgodir)/runtime_sysinfo.go $(libgodir)/sigtab.go $(libgodir)/goroot.go\" --tag=libffi`; \\\n \t$(SHELL) $(libgosrcdir)/../testsuite/gotest --goarch=$${GOARCH} --goos=$${GOOS} --basedir=$(libgosrcdir)/.. --srcdir=$(libgosrcdir)/runtime --pkgpath=runtime --pkgfiles=\"$${files}\" $(GOTESTFLAGS) -test.timeout=$(GOTOOLS_TEST_TIMEOUT)s -test.v >> runtime-testlog 2>&1 || echo \"--- $${fl}: go test runtime (0.00s)\" >> runtime-testlog\n \tgrep '^--- ' runtime-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/' | sort -k 2\n "}, {"sha": "e2c30bf15ff0f6384d4b940ba67e218900e4ea64", "filename": "gotools/Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09e18d113b3c3dae896ac1a8ad1e0087adbb153b/gotools%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09e18d113b3c3dae896ac1a8ad1e0087adbb153b/gotools%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gotools%2FMakefile.in?ref=09e18d113b3c3dae896ac1a8ad1e0087adbb153b", "patch": "@@ -703,8 +703,8 @@ distclean-generic:\n maintainer-clean-generic:\n \t@echo \"This command is intended for maintainers to use\"\n \t@echo \"it deletes files that may require special tools to rebuild.\"\n-@NATIVE_FALSE@uninstall-local:\n @NATIVE_FALSE@install-exec-local:\n+@NATIVE_FALSE@uninstall-local:\n clean: clean-am\n \n clean-am: clean-binPROGRAMS clean-generic clean-noinstPROGRAMS \\\n@@ -916,14 +916,14 @@ mostlyclean-local:\n @NATIVE_TRUE@\texport LD_LIBRARY_PATH; \\\n @NATIVE_TRUE@\tGOARCH=`$(abs_builddir)/go$(EXEEXT) env GOARCH`; \\\n @NATIVE_TRUE@\tGOOS=`$(abs_builddir)/go$(EXEEXT) env GOOS`; \\\n-@NATIVE_TRUE@\tfiles=`$(SHELL) $(libgosrcdir)/../match.sh --goarch=$${GOARCH} --goos=$${GOOS} --srcdir=$(libgosrcdir)/runtime --extrafiles=\"$(libgodir)/runtime_linknames.go $(libgodir)/runtime_sysinfo.go $(libgodir)/sigtab.go\" --tag=libffi`; \\\n+@NATIVE_TRUE@\tfiles=`$(SHELL) $(libgosrcdir)/../match.sh --goarch=$${GOARCH} --goos=$${GOOS} --srcdir=$(libgosrcdir)/runtime --extrafiles=\"$(libgodir)/runtime_linknames.go $(libgodir)/runtime_sysinfo.go $(libgodir)/sigtab.go $(libgodir)/goroot.go\" --tag=libffi`; \\\n @NATIVE_TRUE@\techo \"$(ECHO_ENV) GC='$(abs_builddir)/check-gccgo -fgo-compiling-runtime' GOARCH=$${GOARCH} GOOS=$${GOOS} $(SHELL) $(libgosrcdir)/../testsuite/gotest --goarch=$${GOARCH} --goos=$${GOOS} --basedir=$(libgosrcdir)/.. --srcdir=$(libgosrcdir)/runtime --pkgpath=runtime --pkgfiles='$${files}' $(GOTESTFLAGS) -test.timeout=$(GOTOOLS_TEST_TIMEOUT)s -test.v\" > runtime-testlog\n @NATIVE_TRUE@\t$(CHECK_ENV) \\\n @NATIVE_TRUE@\tGC=\"$${GCCGO} -fgo-compiling-runtime\"; \\\n @NATIVE_TRUE@\texport GC; \\\n @NATIVE_TRUE@\tGOARCH=`$(abs_builddir)/go$(EXEEXT) env GOARCH`; \\\n @NATIVE_TRUE@\tGOOS=`$(abs_builddir)/go$(EXEEXT) env GOOS`; \\\n-@NATIVE_TRUE@\tfiles=`$(SHELL) $(libgosrcdir)/../match.sh --goarch=$${GOARCH} --goos=$${GOOS} --srcdir=$(libgosrcdir)/runtime --extrafiles=\"$(libgodir)/runtime_linknames.go $(libgodir)/runtime_sysinfo.go $(libgodir)/sigtab.go\" --tag=libffi`; \\\n+@NATIVE_TRUE@\tfiles=`$(SHELL) $(libgosrcdir)/../match.sh --goarch=$${GOARCH} --goos=$${GOOS} --srcdir=$(libgosrcdir)/runtime --extrafiles=\"$(libgodir)/runtime_linknames.go $(libgodir)/runtime_sysinfo.go $(libgodir)/sigtab.go $(libgodir)/goroot.go\" --tag=libffi`; \\\n @NATIVE_TRUE@\t$(SHELL) $(libgosrcdir)/../testsuite/gotest --goarch=$${GOARCH} --goos=$${GOOS} --basedir=$(libgosrcdir)/.. --srcdir=$(libgosrcdir)/runtime --pkgpath=runtime --pkgfiles=\"$${files}\" $(GOTESTFLAGS) -test.timeout=$(GOTOOLS_TEST_TIMEOUT)s -test.v >> runtime-testlog 2>&1 || echo \"--- $${fl}: go test runtime (0.00s)\" >> runtime-testlog\n @NATIVE_TRUE@\tgrep '^--- ' runtime-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/' | sort -k 2\n "}, {"sha": "5c377a30df996c726191d3510bfe982f69ad8577", "filename": "libgo/Makefile.am", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09e18d113b3c3dae896ac1a8ad1e0087adbb153b/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09e18d113b3c3dae896ac1a8ad1e0087adbb153b/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=09e18d113b3c3dae896ac1a8ad1e0087adbb153b", "patch": "@@ -545,6 +545,14 @@ s-gcpu: Makefile\n \t$(SHELL) $(srcdir)/mvifdiff.sh gcpugen.go.tmp gcpugen.go\n \t$(STAMP) $@\n \n+goroot.go: s-goroot; @true\n+s-goroot: Makefile\n+\trm -f goroot.go.tmp\n+\techo \"package runtime\" > goroot.go.tmp\n+\techo 'var defaultGOROOT = `$(prefix)`' >> goroot.go.tmp\n+\t$(SHELL) $(srcdir)/mvifdiff.sh goroot.go.tmp goroot.go\n+\t$(STAMP) $@\n+\n buildcfg.go: s-buildcfg; @true\n s-buildcfg: Makefile\n \trm -f buildcfg.go.tmp\n@@ -1005,7 +1013,8 @@ math_lo_GOCFLAGS = $(MATH_FLAG)\n math_check_GOCFLAGS = $(MATH_FLAG)\n \n # Add generated files to the runtime package.\n-extra_go_files_runtime = runtime_linknames.go runtime_sysinfo.go sigtab.go\n+extra_go_files_runtime = \\\n+\truntime_linknames.go runtime_sysinfo.go sigtab.go goroot.go\n runtime.lo.dep: $(extra_go_files_runtime)\n \n # Add generated files to the syscall package."}, {"sha": "1240b16d4438ee71536fe7786924c654d65e6dcf", "filename": "libgo/Makefile.in", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09e18d113b3c3dae896ac1a8ad1e0087adbb153b/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09e18d113b3c3dae896ac1a8ad1e0087adbb153b/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=09e18d113b3c3dae896ac1a8ad1e0087adbb153b", "patch": "@@ -1098,7 +1098,9 @@ math_lo_GOCFLAGS = $(MATH_FLAG)\n math_check_GOCFLAGS = $(MATH_FLAG)\n \n # Add generated files to the runtime package.\n-extra_go_files_runtime = runtime_linknames.go runtime_sysinfo.go sigtab.go\n+extra_go_files_runtime = \\\n+\truntime_linknames.go runtime_sysinfo.go sigtab.go goroot.go\n+\n \n # Add generated files to the syscall package.\n extra_go_files_syscall = \\\n@@ -2752,6 +2754,14 @@ s-gcpu: Makefile\n \t$(SHELL) $(srcdir)/mvifdiff.sh gcpugen.go.tmp gcpugen.go\n \t$(STAMP) $@\n \n+goroot.go: s-goroot; @true\n+s-goroot: Makefile\n+\trm -f goroot.go.tmp\n+\techo \"package runtime\" > goroot.go.tmp\n+\techo 'var defaultGOROOT = `$(prefix)`' >> goroot.go.tmp\n+\t$(SHELL) $(srcdir)/mvifdiff.sh goroot.go.tmp goroot.go\n+\t$(STAMP) $@\n+\n buildcfg.go: s-buildcfg; @true\n s-buildcfg: Makefile\n \trm -f buildcfg.go.tmp"}, {"sha": "6bd612fcf32b263603fc08b67c3b8c1712b96491", "filename": "libgo/go/runtime/extern.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09e18d113b3c3dae896ac1a8ad1e0087adbb153b/libgo%2Fgo%2Fruntime%2Fextern.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09e18d113b3c3dae896ac1a8ad1e0087adbb153b/libgo%2Fgo%2Fruntime%2Fextern.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fextern.go?ref=09e18d113b3c3dae896ac1a8ad1e0087adbb153b", "patch": "@@ -211,8 +211,6 @@ func Caller(skip int) (pc uintptr, file string, line int, ok bool)\n // program counter adjustment.\n func Callers(skip int, pc []uintptr) int\n \n-var defaultGOROOT string // set by cmd/link\n-\n // GOROOT returns the root of the Go tree. It uses the\n // GOROOT environment variable, if set at process start,\n // or else the root used during the Go build."}]}