{"sha": "6413509bd47c3d3c2c9160d5d13a5d4f40903456", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQxMzUwOWJkNDdjM2QzYzJjOTE2MGQ1ZDEzYTVkNGY0MDkwMzQ1Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-06T11:02:11Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-06T11:02:11Z"}, "message": "Minor reformatting.\n\nFrom-SVN: r244131", "tree": {"sha": "378c5cf31d3b8756ae2a4d5c713c5cf54a338534", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/378c5cf31d3b8756ae2a4d5c713c5cf54a338534"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6413509bd47c3d3c2c9160d5d13a5d4f40903456", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6413509bd47c3d3c2c9160d5d13a5d4f40903456", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6413509bd47c3d3c2c9160d5d13a5d4f40903456", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6413509bd47c3d3c2c9160d5d13a5d4f40903456/comments", "author": null, "committer": null, "parents": [{"sha": "07b3e137a246b6b6073c25aac46cb4e8a6fbdf10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07b3e137a246b6b6073c25aac46cb4e8a6fbdf10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07b3e137a246b6b6073c25aac46cb4e8a6fbdf10"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "c6e26d4d336ebe817d488a318609aab3481473e0", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6413509bd47c3d3c2c9160d5d13a5d4f40903456/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6413509bd47c3d3c2c9160d5d13a5d4f40903456/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=6413509bd47c3d3c2c9160d5d13a5d4f40903456", "patch": "@@ -2020,7 +2020,6 @@ package body Exp_Util is\n    -----------------------------------\n \n    function Corresponding_Runtime_Package (Typ : Entity_Id) return RTU_Id is\n-\n       function Has_One_Entry_And_No_Queue (T : Entity_Id) return Boolean;\n       --  Return True if protected type T has one entry and the maximum queue\n       --  length is one.\n@@ -2030,37 +2029,43 @@ package body Exp_Util is\n       --------------------------------\n \n       function Has_One_Entry_And_No_Queue (T : Entity_Id) return Boolean is\n+         Item     : Entity_Id;\n          Is_First : Boolean := True;\n-         Ent      : Entity_Id;\n+\n       begin\n-         Ent := First_Entity (T);\n-         while Present (Ent) loop\n-            if Is_Entry (Ent) then\n-               if not Is_First then\n-                  --  More than one entry\n+         Item := First_Entity (T);\n+         while Present (Item) loop\n+            if Is_Entry (Item) then\n \n+               --  The protected type has more than one entry\n+\n+               if not Is_First then\n                   return False;\n                end if;\n \n+               --  The queue length is not one\n+\n                if not Restriction_Active (No_Entry_Queue)\n-                 and then Get_Max_Queue_Length (Ent) /= Uint_1\n+                 and then Get_Max_Queue_Length (Item) /= Uint_1\n                then\n-                  --  Max queue length is not 1\n-\n                   return False;\n                end if;\n \n                Is_First := False;\n             end if;\n \n-            Ent := Next_Entity (Ent);\n+            Next_Entity (Item);\n          end loop;\n \n          return True;\n       end Has_One_Entry_And_No_Queue;\n \n+      --  Local variables\n+\n       Pkg_Id : RTU_Id := RTU_Null;\n \n+   --  Start of processing for Corresponding_Runtime_Package\n+\n    begin\n       pragma Assert (Is_Concurrent_Type (Typ));\n "}]}