{"sha": "76dd48f8956b5e17adf0ae1cd1ed3d804a005470", "node_id": "C_kwDOANBUbNoAKDc2ZGQ0OGY4OTU2YjVlMTdhZGYwYWUxY2QxZWQzZDgwNGEwMDU0NzA", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-11-29T18:07:28Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-12-02T16:50:05Z"}, "message": "Fix a few incorrect accesses.\n\nThis consists of 3 changes which stronger type checking has indicated\nare incorrect.\n\n\tgcc/\n\t* fold-const.cc (fold_unary_loc): Check TREE_TYPE of node.\n\t(tree_invalid_nonnegative_warnv_p): Likewise.\n\n\tgcc/c-family/\n\t* c-attribs.cc (handle_deprecated_attribute): Use type when\n\tusing TYPE_NAME.", "tree": {"sha": "e3dec229a8348bf01153d3505661220d0745b781", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3dec229a8348bf01153d3505661220d0745b781"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76dd48f8956b5e17adf0ae1cd1ed3d804a005470", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76dd48f8956b5e17adf0ae1cd1ed3d804a005470", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76dd48f8956b5e17adf0ae1cd1ed3d804a005470", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76dd48f8956b5e17adf0ae1cd1ed3d804a005470/comments", "author": null, "committer": null, "parents": [{"sha": "6d3c634c8baebd9ff12c39d61947752486758bd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d3c634c8baebd9ff12c39d61947752486758bd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d3c634c8baebd9ff12c39d61947752486758bd3"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "b36dd97802b9c2003afdbe67a120aba322d2766c", "filename": "gcc/c-family/c-attribs.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dd48f8956b5e17adf0ae1cd1ed3d804a005470/gcc%2Fc-family%2Fc-attribs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dd48f8956b5e17adf0ae1cd1ed3d804a005470/gcc%2Fc-family%2Fc-attribs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-attribs.cc?ref=76dd48f8956b5e17adf0ae1cd1ed3d804a005470", "patch": "@@ -4240,7 +4240,7 @@ handle_deprecated_attribute (tree *node, tree name,\n       if (type && TYPE_NAME (type))\n \t{\n \t  if (TREE_CODE (TYPE_NAME (type)) == IDENTIFIER_NODE)\n-\t    what = TYPE_NAME (*node);\n+\t    what = TYPE_NAME (type);\n \t  else if (TREE_CODE (TYPE_NAME (type)) == TYPE_DECL\n \t\t   && DECL_NAME (TYPE_NAME (type)))\n \t    what = DECL_NAME (TYPE_NAME (type));"}, {"sha": "e80be8049e1680d73042d610f534e7f4858c0e46", "filename": "gcc/fold-const.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76dd48f8956b5e17adf0ae1cd1ed3d804a005470/gcc%2Ffold-const.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76dd48f8956b5e17adf0ae1cd1ed3d804a005470/gcc%2Ffold-const.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.cc?ref=76dd48f8956b5e17adf0ae1cd1ed3d804a005470", "patch": "@@ -9369,8 +9369,8 @@ fold_unary_loc (location_t loc, enum tree_code code, tree type, tree op0)\n \t      && TREE_CODE (tem) == COND_EXPR\n \t      && TREE_CODE (TREE_OPERAND (tem, 1)) == code\n \t      && TREE_CODE (TREE_OPERAND (tem, 2)) == code\n-\t      && ! VOID_TYPE_P (TREE_OPERAND (tem, 1))\n-\t      && ! VOID_TYPE_P (TREE_OPERAND (tem, 2))\n+\t      && ! VOID_TYPE_P (TREE_TYPE (TREE_OPERAND (tem, 1)))\n+\t      && ! VOID_TYPE_P (TREE_TYPE (TREE_OPERAND (tem, 2)))\n \t      && (TREE_TYPE (TREE_OPERAND (TREE_OPERAND (tem, 1), 0))\n \t\t  == TREE_TYPE (TREE_OPERAND (TREE_OPERAND (tem, 2), 0)))\n \t      && (! (INTEGRAL_TYPE_P (TREE_TYPE (tem))\n@@ -15002,7 +15002,7 @@ tree_invalid_nonnegative_warnv_p (tree t, bool *strict_overflow_p, int depth)\n \n \t/* If the initializer is non-void, then it's a normal expression\n \t   that will be assigned to the slot.  */\n-\tif (!VOID_TYPE_P (t))\n+\tif (!VOID_TYPE_P (TREE_TYPE (t)))\n \t  return RECURSE (t);\n \n \t/* Otherwise, the initializer sets the slot in some way.  One common"}]}