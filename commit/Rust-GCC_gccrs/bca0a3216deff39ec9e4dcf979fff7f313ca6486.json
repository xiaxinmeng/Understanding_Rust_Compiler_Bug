{"sha": "bca0a3216deff39ec9e4dcf979fff7f313ca6486", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNhMGEzMjE2ZGVmZjM5ZWM5ZTRkY2Y5NzlmZmY3ZjMxM2NhNjQ4Ng==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2019-05-07T10:38:45Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2019-05-07T10:38:45Z"}, "message": "Check if Solaris ld supports -z relax=transtls\n\n\t* m4/druntime/os.m4 (DRUNTIME_OS_LINK_SPEC): Only use -z\n\trelax=transtls if linker supports it.\n\t* configure.ac (enable_libphobos, LIBPHOBOS_SUPPORTED): Move down.\n\t(x86_64-*-solaris2.* | i?86-*-solaris2.*): Only\n\tmark supported with either gld or ld -z relax=transtls.\n\t* configure: Regenerate.\n\nFrom-SVN: r270939", "tree": {"sha": "d79aa195465ae2ce02cb47114bdbe8ec96cd4401", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d79aa195465ae2ce02cb47114bdbe8ec96cd4401"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bca0a3216deff39ec9e4dcf979fff7f313ca6486", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bca0a3216deff39ec9e4dcf979fff7f313ca6486", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bca0a3216deff39ec9e4dcf979fff7f313ca6486", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bca0a3216deff39ec9e4dcf979fff7f313ca6486/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9edfa4c015a3ae0451a30259ef654c632f9f4ca5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9edfa4c015a3ae0451a30259ef654c632f9f4ca5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9edfa4c015a3ae0451a30259ef654c632f9f4ca5"}], "stats": {"total": 231, "additions": 136, "deletions": 95}, "files": [{"sha": "c15227b4f97a126cfb0f9409c824848460d97ab9", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bca0a3216deff39ec9e4dcf979fff7f313ca6486/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bca0a3216deff39ec9e4dcf979fff7f313ca6486/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=bca0a3216deff39ec9e4dcf979fff7f313ca6486", "patch": "@@ -1,3 +1,12 @@\n+2019-05-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* m4/druntime/os.m4 (DRUNTIME_OS_LINK_SPEC): Only use -z\n+\trelax=transtls if linker supports it.\n+\t* configure.ac (enable_libphobos, LIBPHOBOS_SUPPORTED): Move down.\n+\t(x86_64-*-solaris2.* | i?86-*-solaris2.*): Only\n+\tmark supported with either gld or ld -z relax=transtls.\n+\t* configure: Regenerate.\n+\n 2019-05-02  Maciej W. Rozycki  <macro@wdc.com>\n \n \t* std/math.d (IeeeFlags.getIeeeFlags): Handle RISC-V soft-float ABI."}, {"sha": "95a2b423218741a0510b8618fbf1f49fe3698f3b", "filename": "libphobos/configure", "status": "modified", "additions": 75, "deletions": 59, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bca0a3216deff39ec9e4dcf979fff7f313ca6486/libphobos%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bca0a3216deff39ec9e4dcf979fff7f313ca6486/libphobos%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure?ref=bca0a3216deff39ec9e4dcf979fff7f313ca6486", "patch": "@@ -636,6 +636,8 @@ LIBOBJS\n GDCFLAGSX\n libtool_VERSION\n SPEC_PHOBOS_DEPS\n+ENABLE_LIBPHOBOS_FALSE\n+ENABLE_LIBPHOBOS_TRUE\n gdc_include_dir\n libphobos_toolexeclibdir\n libphobos_toolexecdir\n@@ -698,8 +700,6 @@ DRUNTIME_GC_ENABLE_TRUE\n libphobos_srcdir\n libphobos_builddir\n get_gcc_base_ver\n-ENABLE_LIBPHOBOS_FALSE\n-ENABLE_LIBPHOBOS_TRUE\n phobos_compiler_shared_flag\n phobos_compiler_pic_flag\n OTOOL64\n@@ -827,7 +827,6 @@ with_pic\n enable_fast_install\n with_gnu_ld\n enable_libtool_lock\n-enable_libphobos\n with_gcc_major_version_only\n enable_werror\n enable_druntime_gc\n@@ -838,6 +837,7 @@ with_libbacktrace\n with_target_system_zlib\n with_cross_host\n enable_version_specific_runtime_libs\n+enable_libphobos\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1478,7 +1478,6 @@ Optional Features:\n   --enable-fast-install[=PKGS]\n                           optimize for fast installation [default=yes]\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n-  --enable-libphobos      Enable libphobos\n   --enable-werror         turns on -Werror [default=no]\n   --enable-druntime-gc    enable D runtime garbage collector (default: yes)\n   --enable-unix           enables Unix runtime (default: yes, for Unix\n@@ -1489,6 +1488,7 @@ Optional Features:\n   --enable-version-specific-runtime-libs\n                           Specify that runtime libraries should be installed\n                           in a compiler-specific directory\n+  --enable-libphobos      Enable libphobos\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -13921,56 +13921,6 @@ fi\n lt_prog_compiler_pic_D=\"$phobos_compiler_shared_flag\"\n pic_mode='default'\n \n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for --enable-libphobos\" >&5\n-$as_echo_n \"checking for --enable-libphobos... \" >&6; }\n-# Check whether --enable-libphobos was given.\n-if test \"${enable_libphobos+set}\" = set; then :\n-  enableval=$enable_libphobos;\n-fi\n-\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $enable_libphobos\" >&5\n-$as_echo \"$enable_libphobos\" >&6; }\n-\n-# See if supported.\n-unset LIBPHOBOS_SUPPORTED\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for host support for libphobos\" >&5\n-$as_echo_n \"checking for host support for libphobos... \" >&6; }\n-. ${srcdir}/configure.tgt\n-case ${host} in\n-  x86_64-*-solaris2.* | i?86-*-solaris2.*)\n-    # libphobos doesn't compile with the Solaris/x86 assembler due to a\n-    # relatively low linelength limit.\n-    as_prog=`$CC -print-prog-name=as`\n-    if test -n \"$as_prog\" && $as_prog -v /dev/null 2>&1 | grep GNU > /dev/null 2>&1; then\n-      druntime_cv_use_gas=yes;\n-    else\n-      druntime_cv_use_gas=no;\n-    fi\n-    rm -f a.out\n-    if test x$druntime_cv_use_gas = xno; then\n-      LIBPHOBOS_SUPPORTED=no\n-    fi\n-    ;;\n-esac\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $LIBPHOBOS_SUPPORTED\" >&5\n-$as_echo \"$LIBPHOBOS_SUPPORTED\" >&6; }\n-\n-# Decide if it's usable.\n-case $LIBPHOBOS_SUPPORTED:$enable_libphobos in\n-*:no)  use_libphobos=no  ;;\n-*:yes) use_libphobos=yes ;;\n-yes:*) use_libphobos=yes ;;\n-*:*)   use_libphobos=no  ;;\n-esac\n- if test x$use_libphobos = xyes; then\n-  ENABLE_LIBPHOBOS_TRUE=\n-  ENABLE_LIBPHOBOS_FALSE='#'\n-else\n-  ENABLE_LIBPHOBOS_TRUE='#'\n-  ENABLE_LIBPHOBOS_FALSE=\n-fi\n-\n-\n # Determine what GCC version number to use in filesystem paths.\n \n   get_gcc_base_ver=\"cat\"\n@@ -14407,10 +14357,22 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n       # relocs.  Work around by disabling TLS transitions.  Not necessary\n       # on 32-bit x86, but cannot be distinguished reliably in specs.\n       druntime_ld_prog=`$CC -print-prog-name=ld`\n+      druntime_ld_gld=no\n+      druntime_ld_relax_transtls=no\n       if test -n \"$druntime_ld_prog\" \\\n          && $druntime_ld_prog -v 2>&1 | grep GNU > /dev/null 2>&1; then\n-        :\n+        druntime_ld_gld=yes\n       else\n+        echo 'int main (void) { return 0; }' > conftest.c\n+        save_LDFLAGS=\"$LDFLAGS\"\n+        LDFLAGS=\"$LDFLAGS -Wl,-z,relax=transtls\"\n+        if $CC $CFLAGS $LDFLAGS -o conftest conftest.c > /dev/null 2>&1; then\n+          druntime_ld_relax_transtls=yes\n+        fi\n+        LDFLAGS=\"$save_LDFLAGS\"\n+        rm -f conftest.c conftest\n+      fi\n+      if test \"$druntime_ld_relax_transtls\" = \"yes\"; then\n         OS_LINK_SPEC='-z relax=transtls'\n       fi\n       ;;\n@@ -15298,6 +15260,60 @@ $as_echo \"$version_specific_libs\" >&6; }\n \n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for --enable-libphobos\" >&5\n+$as_echo_n \"checking for --enable-libphobos... \" >&6; }\n+# Check whether --enable-libphobos was given.\n+if test \"${enable_libphobos+set}\" = set; then :\n+  enableval=$enable_libphobos;\n+fi\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $enable_libphobos\" >&5\n+$as_echo \"$enable_libphobos\" >&6; }\n+\n+# See if supported.\n+unset LIBPHOBOS_SUPPORTED\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for host support for libphobos\" >&5\n+$as_echo_n \"checking for host support for libphobos... \" >&6; }\n+. ${srcdir}/configure.tgt\n+case ${host} in\n+  x86_64-*-solaris2.* | i?86-*-solaris2.*)\n+    # libphobos doesn't compile with the Solaris/x86 assembler due to a\n+    # relatively low linelength limit.\n+    as_prog=`$CC -print-prog-name=as`\n+    if test -n \"$as_prog\" && $as_prog -v /dev/null 2>&1 | grep GNU > /dev/null 2>&1; then\n+      druntime_cv_use_gas=yes;\n+    else\n+      druntime_cv_use_gas=no;\n+    fi\n+    rm -f a.out\n+    if test x$druntime_cv_use_gas = xno; then\n+      LIBPHOBOS_SUPPORTED=no\n+    fi\n+    # 64-bit D execution fails with Solaris ld without -z relax=transtls support.\n+    if test \"$druntime_ld_gld\" = \"no\" && test \"$druntime_ld_relax_transtls\" = \"no\"; then\n+      LIBPHOBOS_SUPPORTED=no\n+    fi\n+    ;;\n+esac\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $LIBPHOBOS_SUPPORTED\" >&5\n+$as_echo \"$LIBPHOBOS_SUPPORTED\" >&6; }\n+\n+# Decide if it's usable.\n+case $LIBPHOBOS_SUPPORTED:$enable_libphobos in\n+*:no)  use_libphobos=no  ;;\n+*:yes) use_libphobos=yes ;;\n+yes:*) use_libphobos=yes ;;\n+*:*)   use_libphobos=no  ;;\n+esac\n+ if test x$use_libphobos = xyes; then\n+  ENABLE_LIBPHOBOS_TRUE=\n+  ENABLE_LIBPHOBOS_FALSE='#'\n+else\n+  ENABLE_LIBPHOBOS_TRUE='#'\n+  ENABLE_LIBPHOBOS_FALSE=\n+fi\n+\n+\n # Add drtbegin.o/drtend.o to startfile/endfile specs in libgphobos.spec\n if test \"$DCFG_MINFO_BRACKETING\" = \"false\"; then\n     DRTSTUFF_SPEC=$srcdir/src/drtstuff.spec\n@@ -15485,10 +15501,6 @@ if test -z \"${MAINTAINER_MODE_TRUE}\" && test -z \"${MAINTAINER_MODE_FALSE}\"; then\n   as_fn_error $? \"conditional \\\"MAINTAINER_MODE\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n-if test -z \"${ENABLE_LIBPHOBOS_TRUE}\" && test -z \"${ENABLE_LIBPHOBOS_FALSE}\"; then\n-  as_fn_error $? \"conditional \\\"ENABLE_LIBPHOBOS\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n-fi\n if test -z \"${DRUNTIME_GC_ENABLE_TRUE}\" && test -z \"${DRUNTIME_GC_ENABLE_FALSE}\"; then\n   as_fn_error $? \"conditional \\\"DRUNTIME_GC_ENABLE\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n@@ -15569,6 +15581,10 @@ if test -z \"${DRUNTIME_OS_MINFO_BRACKETING_TRUE}\" && test -z \"${DRUNTIME_OS_MINF\n   as_fn_error $? \"conditional \\\"DRUNTIME_OS_MINFO_BRACKETING\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${ENABLE_LIBPHOBOS_TRUE}\" && test -z \"${ENABLE_LIBPHOBOS_FALSE}\"; then\n+  as_fn_error $? \"conditional \\\"ENABLE_LIBPHOBOS\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n \n : \"${CONFIG_STATUS=./config.status}\"\n ac_write_fail=0"}, {"sha": "3b4d46a60e44bc87b67639a43f455bb9381da0c4", "filename": "libphobos/configure.ac", "status": "modified", "additions": 39, "deletions": 35, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bca0a3216deff39ec9e4dcf979fff7f313ca6486/libphobos%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bca0a3216deff39ec9e4dcf979fff7f313ca6486/libphobos%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure.ac?ref=bca0a3216deff39ec9e4dcf979fff7f313ca6486", "patch": "@@ -113,6 +113,41 @@ AC_SUBST(phobos_compiler_shared_flag)\n lt_prog_compiler_pic_D=\"$phobos_compiler_shared_flag\"\n pic_mode='default'\n \n+# Determine what GCC version number to use in filesystem paths.\n+GCC_BASE_VER\n+\n+# libphobos/libdruntime specific options and feature detection\n+DRUNTIME_CONFIGURE\n+DRUNTIME_MULTILIB\n+DRUNTIME_WERROR\n+DRUNTIME_GC\n+DRUNTIME_CPU_SOURCES\n+DRUNTIME_OS_UNIX\n+DRUNTIME_OS_SOURCES\n+DRUNTIME_OS_THREAD_MODEL\n+DRUNTIME_OS_ARM_EABI_UNWINDER\n+DRUNTIME_OS_MINFO_BRACKETING\n+DRUNTIME_OS_DLPI_TLS_MODID\n+DRUNTIME_OS_LINK_SPEC\n+DRUNTIME_LIBRARIES_CLIB\n+\n+WITH_LOCAL_DRUNTIME([\n+  AC_LANG_PUSH([D])\n+  AC_SEARCH_LIBS([malloc], [c])\n+  DRUNTIME_LIBRARIES_THREAD\n+  AC_SEARCH_LIBS([cosf], [m])\n+  AC_SEARCH_LIBS([clock_gettime], [rt])\n+  DRUNTIME_ENABLE_ATOMIC_BUILTINS\n+  AC_LANG_POP([D])\n+], [-nophoboslib])\n+\n+DRUNTIME_LIBRARIES_ATOMIC\n+DRUNTIME_LIBRARIES_BACKTRACE\n+DRUNTIME_LIBRARIES_DLOPEN\n+DRUNTIME_LIBRARIES_NET\n+DRUNTIME_LIBRARIES_ZLIB\n+DRUNTIME_INSTALL_DIRECTORIES\n+\n AC_MSG_CHECKING([for --enable-libphobos])\n AC_ARG_ENABLE(libphobos,\n   [AS_HELP_STRING([--enable-libphobos], [Enable libphobos])])\n@@ -136,6 +171,10 @@ case ${host} in\n     if test x$druntime_cv_use_gas = xno; then\n       LIBPHOBOS_SUPPORTED=no\n     fi\n+    # 64-bit D execution fails with Solaris ld without -z relax=transtls support.\n+    if test \"$druntime_ld_gld\" = \"no\" && test \"$druntime_ld_relax_transtls\" = \"no\"; then\n+      LIBPHOBOS_SUPPORTED=no\n+    fi\n     ;;\n esac\n AC_MSG_RESULT($LIBPHOBOS_SUPPORTED)\n@@ -149,41 +188,6 @@ yes:*) use_libphobos=yes ;;\n esac\n AM_CONDITIONAL(ENABLE_LIBPHOBOS, test x$use_libphobos = xyes)\n \n-# Determine what GCC version number to use in filesystem paths.\n-GCC_BASE_VER\n-\n-# libphobos/libdruntime specific options and feature detection\n-DRUNTIME_CONFIGURE\n-DRUNTIME_MULTILIB\n-DRUNTIME_WERROR\n-DRUNTIME_GC\n-DRUNTIME_CPU_SOURCES\n-DRUNTIME_OS_UNIX\n-DRUNTIME_OS_SOURCES\n-DRUNTIME_OS_THREAD_MODEL\n-DRUNTIME_OS_ARM_EABI_UNWINDER\n-DRUNTIME_OS_MINFO_BRACKETING\n-DRUNTIME_OS_DLPI_TLS_MODID\n-DRUNTIME_OS_LINK_SPEC\n-DRUNTIME_LIBRARIES_CLIB\n-\n-WITH_LOCAL_DRUNTIME([\n-  AC_LANG_PUSH([D])\n-  AC_SEARCH_LIBS([malloc], [c])\n-  DRUNTIME_LIBRARIES_THREAD\n-  AC_SEARCH_LIBS([cosf], [m])\n-  AC_SEARCH_LIBS([clock_gettime], [rt])\n-  DRUNTIME_ENABLE_ATOMIC_BUILTINS\n-  AC_LANG_POP([D])\n-], [-nophoboslib])\n-\n-DRUNTIME_LIBRARIES_ATOMIC\n-DRUNTIME_LIBRARIES_BACKTRACE\n-DRUNTIME_LIBRARIES_DLOPEN\n-DRUNTIME_LIBRARIES_NET\n-DRUNTIME_LIBRARIES_ZLIB\n-DRUNTIME_INSTALL_DIRECTORIES\n-\n # Add drtbegin.o/drtend.o to startfile/endfile specs in libgphobos.spec\n if test \"$DCFG_MINFO_BRACKETING\" = \"false\"; then\n     DRTSTUFF_SPEC=$srcdir/src/drtstuff.spec"}, {"sha": "74167aa2cdee8bca45d7b34ceaaafdbf42baf927", "filename": "libphobos/m4/druntime/os.m4", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bca0a3216deff39ec9e4dcf979fff7f313ca6486/libphobos%2Fm4%2Fdruntime%2Fos.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bca0a3216deff39ec9e4dcf979fff7f313ca6486/libphobos%2Fm4%2Fdruntime%2Fos.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fm4%2Fdruntime%2Fos.m4?ref=bca0a3216deff39ec9e4dcf979fff7f313ca6486", "patch": "@@ -209,10 +209,22 @@ AC_DEFUN([DRUNTIME_OS_LINK_SPEC],\n       # relocs.  Work around by disabling TLS transitions.  Not necessary\n       # on 32-bit x86, but cannot be distinguished reliably in specs.\n       druntime_ld_prog=`$CC -print-prog-name=ld`\n+      druntime_ld_gld=no\n+      druntime_ld_relax_transtls=no\n       if test -n \"$druntime_ld_prog\" \\\n          && $druntime_ld_prog -v 2>&1 | grep GNU > /dev/null 2>&1; then\n-        :\n+        druntime_ld_gld=yes\n       else\n+        echo 'int main (void) { return 0; }' > conftest.c\n+        save_LDFLAGS=\"$LDFLAGS\"\n+        LDFLAGS=\"$LDFLAGS -Wl,-z,relax=transtls\"\n+        if $CC $CFLAGS $LDFLAGS -o conftest conftest.c > /dev/null 2>&1; then\n+          druntime_ld_relax_transtls=yes\n+        fi\n+        LDFLAGS=\"$save_LDFLAGS\"\n+        rm -f conftest.c conftest\n+      fi\n+      if test \"$druntime_ld_relax_transtls\" = \"yes\"; then\n         OS_LINK_SPEC='-z relax=transtls'\n       fi\n       ;;"}]}