{"sha": "70be5895658d9da5135957bd9af7b14ba4a82a70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBiZTU4OTU2NThkOWRhNTEzNTk1N2JkOWFmN2IxNGJhNGE4MmE3MA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-08-04T05:13:44Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-08-04T05:23:43Z"}, "message": "Adjust simplify_conversion_using_ranges for irange API.\n\ngcc/ChangeLog:\n\n\t* vr-values.c (simplify_conversion_using_ranges): Convert to irange API.", "tree": {"sha": "eede7f20cc52a429ef73b9e170633f6bb435f795", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eede7f20cc52a429ef73b9e170633f6bb435f795"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70be5895658d9da5135957bd9af7b14ba4a82a70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70be5895658d9da5135957bd9af7b14ba4a82a70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70be5895658d9da5135957bd9af7b14ba4a82a70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70be5895658d9da5135957bd9af7b14ba4a82a70/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92877ab81bf07ba732a3ac3263bcf3ecd45ec266", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92877ab81bf07ba732a3ac3263bcf3ecd45ec266", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92877ab81bf07ba732a3ac3263bcf3ecd45ec266"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "38c9a657dad4e404ba58b3b710b24055242a5583", "filename": "gcc/vr-values.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70be5895658d9da5135957bd9af7b14ba4a82a70/gcc%2Fvr-values.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70be5895658d9da5135957bd9af7b14ba4a82a70/gcc%2Fvr-values.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvr-values.c?ref=70be5895658d9da5135957bd9af7b14ba4a82a70", "patch": "@@ -3969,11 +3969,14 @@ simplify_conversion_using_ranges (gimple_stmt_iterator *gsi, gimple *stmt)\n   /* Get the value-range of the inner operand.  Use get_range_info in\n      case innerop was created during substitute-and-fold.  */\n   wide_int imin, imax;\n-  if (!INTEGRAL_TYPE_P (TREE_TYPE (innerop))\n-      || get_range_info (innerop, &imin, &imax) != VR_RANGE)\n+  value_range vr;\n+  if (!INTEGRAL_TYPE_P (TREE_TYPE (innerop)))\n     return false;\n-  innermin = widest_int::from (imin, TYPE_SIGN (TREE_TYPE (innerop)));\n-  innermax = widest_int::from (imax, TYPE_SIGN (TREE_TYPE (innerop)));\n+  get_range_info (innerop, vr);\n+  if (vr.undefined_p () || vr.varying_p ())\n+    return false;\n+  innermin = widest_int::from (vr.lower_bound (), TYPE_SIGN (TREE_TYPE (innerop)));\n+  innermax = widest_int::from (vr.upper_bound (), TYPE_SIGN (TREE_TYPE (innerop)));\n \n   /* Simulate the conversion chain to check if the result is equal if\n      the middle conversion is removed.  */"}]}