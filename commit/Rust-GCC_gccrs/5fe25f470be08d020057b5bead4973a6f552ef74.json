{"sha": "5fe25f470be08d020057b5bead4973a6f552ef74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZlMjVmNDcwYmUwOGQwMjAwNTdiNWJlYWQ0OTczYTZmNTUyZWY3NA==", "commit": {"author": {"name": "Stan Cox", "email": "scox@redhat.com", "date": "2003-07-15T08:34:54Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2003-07-15T08:34:54Z"}, "message": "mips.h (PROCESSOR_R7000): New processor_type.\n\n\t* config/mips/mips.h (PROCESSOR_R7000): New processor_type.\n\t(TARGET_MIPS7000, TUNE_MIPS7000): New macros.\n\t(GENERATE_MULT3_SI): True for TARGET_MIPS7000.\n\t* config/mips/mips.c (mips_cpu_info_table): Add rm7000 entry.\n\t(mips_rtx_costs): Adjust integer multiplication costs for the rm7000.\n\t(mips_issue_rate): Handle PROCESSOR_R7000.\n\t(mips_use_dfa_pipeline_interface): Likewise.\n\t* config/mips/7000.md: New file.\n\t* config/mips/mips.md: Include it.\n\t(define_attr cpu): Add r7000.\n\t(mulsi3_mult3): Use \"mul\" for rm7000 code.\n\nFrom-SVN: r69394", "tree": {"sha": "600ff0b45f6bfee2527762d31b586b352dcd02f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/600ff0b45f6bfee2527762d31b586b352dcd02f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fe25f470be08d020057b5bead4973a6f552ef74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fe25f470be08d020057b5bead4973a6f552ef74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fe25f470be08d020057b5bead4973a6f552ef74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fe25f470be08d020057b5bead4973a6f552ef74/comments", "author": {"login": "stanfordcox", "id": 18171344, "node_id": "MDQ6VXNlcjE4MTcxMzQ0", "avatar_url": "https://avatars.githubusercontent.com/u/18171344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stanfordcox", "html_url": "https://github.com/stanfordcox", "followers_url": "https://api.github.com/users/stanfordcox/followers", "following_url": "https://api.github.com/users/stanfordcox/following{/other_user}", "gists_url": "https://api.github.com/users/stanfordcox/gists{/gist_id}", "starred_url": "https://api.github.com/users/stanfordcox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stanfordcox/subscriptions", "organizations_url": "https://api.github.com/users/stanfordcox/orgs", "repos_url": "https://api.github.com/users/stanfordcox/repos", "events_url": "https://api.github.com/users/stanfordcox/events{/privacy}", "received_events_url": "https://api.github.com/users/stanfordcox/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5a2515e667f2964495876931e08b4dbaccc56822", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a2515e667f2964495876931e08b4dbaccc56822", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a2515e667f2964495876931e08b4dbaccc56822"}], "stats": {"total": 238, "additions": 237, "deletions": 1}, "files": [{"sha": "0ee3138578f9a09bd7307aefaf0b793b016e5958", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fe25f470be08d020057b5bead4973a6f552ef74/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fe25f470be08d020057b5bead4973a6f552ef74/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5fe25f470be08d020057b5bead4973a6f552ef74", "patch": "@@ -1,3 +1,17 @@\n+2003-07-15  Stan Cox  <scox@redhat.com>\n+\n+\t* config/mips/mips.h (PROCESSOR_R7000): New processor_type.\n+\t(TARGET_MIPS7000, TUNE_MIPS7000): New macros.\n+\t(GENERATE_MULT3_SI): True for TARGET_MIPS7000.\n+\t* config/mips/mips.c (mips_cpu_info_table): Add rm7000 entry.\n+\t(mips_rtx_costs): Adjust integer multiplication costs for the rm7000.\n+\t(mips_issue_rate): Handle PROCESSOR_R7000.\n+\t(mips_use_dfa_pipeline_interface): Likewise.\n+\t* config/mips/7000.md: New file.\n+\t* config/mips/mips.md: Include it.\n+\t(define_attr cpu): Add r7000.\n+\t(mulsi3_mult3): Use \"mul\" for rm7000 code.\n+\n 2003-07-15  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips.md (define_attr type): Add condmove.  Use it for"}, {"sha": "2ea6298fddfe6ccdd818a3da0e818c813ca34927", "filename": "gcc/config/mips/7000.md", "status": "added", "additions": 211, "deletions": 0, "changes": 211, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fe25f470be08d020057b5bead4973a6f552ef74/gcc%2Fconfig%2Fmips%2F7000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fe25f470be08d020057b5bead4973a6f552ef74/gcc%2Fconfig%2Fmips%2F7000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F7000.md?ref=5fe25f470be08d020057b5bead4973a6f552ef74", "patch": "@@ -0,0 +1,211 @@\n+;; DFA-based pipeline description for the RM7000.\n+;;   Copyright (C) 2003 Free Software Foundation, Inc.\n+;;\n+;; This file is part of GCC.\n+\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 2, or (at your\n+;; option) any later version.\n+\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING.  If not, write to the\n+;; Free Software Foundation, 59 Temple Place - Suite 330, Boston,\n+;; MA 02111-1307, USA.\n+\n+;; .........................\n+;;\n+;; The RM7000 is a dual-issue processor that can bundle instructions as:\n+;; {arith|load|store}{arith|imul|idiv|branch|float}\n+;;\n+;; Reference:\n+;;   \"RM7000 Family User Manual, PMC-2002296\"\n+;;\n+;; .........................\n+\n+;; Use three automata to isolate long latency operations, reducing space.\n+(define_automaton \"rm7000_other, rm7000_fdiv, rm7000_idiv\")\n+\n+;;\n+;; Describe the resources.\n+;;\n+\n+;; Global\n+(define_cpu_unit \"rm7_iss0,rm7_iss1\" \"rm7000_other\")\n+\n+;; Integer execution unit (M-Pipe).\n+(define_cpu_unit \"ixum_addsub_agen\" \"rm7000_other\")\n+\n+;; Integer execution unit (F-Pipe).\n+(define_cpu_unit \"ixuf_addsub\"\t\"rm7000_other\")\n+(define_cpu_unit \"ixuf_branch\"\t\"rm7000_other\")\n+(define_cpu_unit \"ixuf_mpydiv\"\t\"rm7000_other\")\n+(define_cpu_unit \"ixuf_mpydiv_iter\" \"rm7000_idiv\")\n+;; Floating-point unit (F-Pipe).\n+(define_cpu_unit \"fxuf_add\"\t\"rm7000_other\")\n+(define_cpu_unit \"fxuf_mpy\"\t\"rm7000_other\")\n+(define_cpu_unit \"fxuf_mpy_iter\" \"rm7000_fdiv\")\n+(define_cpu_unit \"fxuf_divsqrt\" \"rm7000_other\")\n+(define_cpu_unit \"fxuf_divsqrt_iter\" \"rm7000_fdiv\")\n+\n+(exclusion_set \"ixuf_addsub\"\n+\t       \"ixuf_branch,ixuf_mpydiv,fxuf_add,fxuf_mpy,fxuf_divsqrt\")\n+(exclusion_set \"ixuf_branch\"\t\"ixuf_mpydiv,fxuf_add,fxuf_mpy,fxuf_divsqrt\")\n+(exclusion_set \"ixuf_mpydiv\"\t\"fxuf_add,fxuf_mpy,fxuf_divsqrt\")\n+(exclusion_set \"fxuf_add\"\t\"fxuf_mpy,fxuf_divsqrt\")\n+(exclusion_set \"fxuf_mpy\"\t\"fxuf_divsqrt\")\n+\n+;; After branch any insn can not be issued.\n+(absence_set \"rm7_iss0,rm7_iss1\" \"ixuf_branch\")\n+\n+;;\n+;; Define reservations for unit name mnemonics or combinations.\n+;;\n+\n+(define_reservation \"rm7_iss\"\t\t\"rm7_iss0|rm7_iss1\")\n+(define_reservation \"rm7_single_dispatch\" \"rm7_iss0+rm7_iss1\")\n+\n+(define_reservation \"rm7_iaddsub\" \"rm7_iss+(ixum_addsub_agen|ixuf_addsub)\")\n+(define_reservation \"rm7_imem\"\t\t\"rm7_iss+ixum_addsub_agen\")\n+(define_reservation \"rm7_impydiv\"\t\"rm7_iss+ixuf_mpydiv\")\n+(define_reservation \"rm7_impydiv_iter\"\t\"ixuf_mpydiv_iter\")\n+(define_reservation \"rm7_branch\"\t\"rm7_iss+ixuf_branch\")\n+\n+(define_reservation \"rm7_fpadd\"\t\"rm7_iss+fxuf_add\")\n+(define_reservation \"rm7_fpmpy\"\t\"rm7_iss+fxuf_mpy\")\n+(define_reservation \"rm7_fpmpy_iter\" \"fxuf_mpy_iter\")\n+(define_reservation \"rm7_fpdivsqr\" \"rm7_iss+fxuf_divsqrt\")\n+(define_reservation \"rm7_fpdivsqr_iter\" \"fxuf_divsqrt_iter\")\n+\n+;;\n+;; Describe instruction reservations for integer operations.\n+;;\n+\n+(define_insn_reservation \"rm7_int_other\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"r7000\")\n+\t\t\t      (eq_attr \"type\" \"arith,darith,const,move,condmove,icmp,nop\"))\n+\t\t\t \"rm7_iaddsub\")\n+\n+(define_insn_reservation \"rm7_ld\" 2 (and (eq_attr \"cpu\" \"r7000\")\n+\t\t\t\t         (eq_attr \"type\" \"load\"))\n+\t\t\t \"rm7_imem\")\n+\n+(define_insn_reservation \"rm7_st\" 1 (and (eq_attr \"cpu\" \"r7000\")\n+\t\t\t\t         (eq_attr \"type\" \"store\"))\n+\t\t\t \"rm7_imem\")\n+\n+(define_insn_reservation \"rm7_idiv_si\" 36 (and (eq_attr \"cpu\" \"r7000\")\n+\t\t\t\t\t   (and (eq_attr \"type\" \"idiv\")\n+\t\t\t\t\t\t(eq_attr \"mode\" \"SI\")))\n+\t\t\t \"rm7_impydiv+(rm7_impydiv_iter*36)\")\n+\n+(define_insn_reservation \"rm7_idiv_di\" 68 (and (eq_attr \"cpu\" \"r7000\")\n+\t\t\t\t\t   (and (eq_attr \"type\" \"idiv\")\n+\t\t\t\t\t\t(eq_attr \"mode\" \"DI\")))\n+\t\t\t \"rm7_impydiv+(rm7_impydiv_iter*68)\")\n+\n+(define_insn_reservation \"rm7_impy_si_mult\" 5\n+\t\t (and (eq_attr \"cpu\" \"r7000\")\n+\t\t      (and (eq_attr \"type\" \"imul,imadd\")\n+\t\t\t   (and (eq_attr \"mode\" \"SI\")\n+\t\t\t\t(match_operand 0 \"hilo_operand\" \"\"))))\n+\t\t\t \"rm7_impydiv+(rm7_impydiv_iter*3)\")\n+\n+;; There are an additional 2 stall cycles.\n+(define_insn_reservation \"rm7_impy_si_mul\" 2\n+\t\t (and (eq_attr \"cpu\" \"r7000\")\n+\t\t      (and (eq_attr \"type\" \"imul,imadd\")\n+\t\t\t   (and (eq_attr \"mode\" \"SI\")\n+\t\t\t\t(not (match_operand 0 \"hilo_operand\" \"\")))))\n+\t\t\t \"rm7_impydiv\")\n+\n+(define_insn_reservation \"rm7_impy_di\" 9 (and (eq_attr \"cpu\" \"r7000\")\n+\t\t\t\t\t  (and (eq_attr \"type\" \"imul\")\n+\t\t\t\t\t       (eq_attr \"mode\" \"DI\")))\n+\t\t\t \"rm7_impydiv+(rm7_impydiv_iter*8)\")\n+\n+;; Move to/from HI/LO.\n+(define_insn_reservation \"rm7_mthilo\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"r7000\")\n+\t\t\t      (and (eq_attr \"type\" \"hilo\")\n+\t\t\t\t   (match_operand 0 \"hilo_operand\" \"\")))\n+\t\t\t \"rm7_impydiv\")\n+\n+(define_insn_reservation \"rm7_mfhilo\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"r7000\")\n+\t\t\t      (and (eq_attr \"type\" \"hilo\")\n+\t\t\t\t   (not (match_operand 0 \"hilo_operand\" \"\"))))\n+\t\t\t \"rm7_impydiv\")\n+\n+;; Move to/from fp coprocessor.\n+(define_insn_reservation \"rm7_ixfer\" 2 (and (eq_attr \"cpu\" \"r7000\")\n+\t\t\t\t\t(eq_attr \"type\" \"xfer\"))\n+\t\t\t \"rm7_iaddsub\")\n+\n+(define_insn_reservation \"rm7_ibr\" 3 (and (eq_attr \"cpu\" \"r7000\")\n+\t\t\t\t      (eq_attr \"type\" \"branch,jump,call\"))\n+\t\t\t \"rm7_branch\")\n+\n+;;\n+;; Describe instruction reservations for the floating-point operations.\n+;;\n+(define_insn_reservation \"rm7_fp_quick\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"r7000\")\n+\t\t\t      (eq_attr \"type\" \"fneg,fcmp,fabs\"))\n+\t\t\t \"rm7_fpadd\")\n+\n+(define_insn_reservation \"rm7_fp_other\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"r7000\")\n+\t\t\t      (eq_attr \"type\" \"fadd\"))\n+\t\t\t \"rm7_fpadd\")\n+\n+(define_insn_reservation \"rm7_fp_cvt\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"r7000\")\n+\t\t\t      (eq_attr \"type\" \"fcvt\"))\n+\t\t\t \"rm7_fpadd\")\n+\n+(define_insn_reservation \"rm7_fp_divsqrt_df\" 36\n+\t\t\t (and (eq_attr \"cpu\" \"r7000\")\n+\t\t\t      (and (eq_attr \"type\" \"fdiv,fsqrt\")\n+\t\t\t\t   (eq_attr \"mode\" \"DF\")))\n+\t\t\t \"rm7_fpdivsqr+(rm7_fpdivsqr_iter*36)\")\n+\n+(define_insn_reservation \"rm7_fp_divsqrt_sf\" 21\n+\t\t\t (and (eq_attr \"cpu\" \"r7000\")\n+\t\t\t      (and (eq_attr \"type\" \"fdiv,fsqrt\")\n+\t\t\t\t   (eq_attr \"mode\" \"SF\")))\n+\t\t\t \"rm7_fpdivsqr+(rm7_fpdivsqr_iter*21)\")\n+\n+(define_insn_reservation \"rm7_fp_rsqrt_df\" 68\n+\t\t\t (and (eq_attr \"cpu\" \"r7000\")\n+\t\t\t      (and (eq_attr \"type\" \"frsqrt\")\n+\t\t\t\t   (eq_attr \"mode\" \"DF\")))\n+\t\t\t \"rm7_fpdivsqr+(rm7_fpdivsqr_iter*68)\")\n+\n+(define_insn_reservation \"rm7_fp_rsqrt_sf\" 38\n+\t\t\t (and (eq_attr \"cpu\" \"r7000\")\n+\t\t\t      (and (eq_attr \"type\" \"frsqrt\")\n+\t\t\t\t   (eq_attr \"mode\" \"SF\")))\n+\t\t\t \"rm7_fpdivsqr+(rm7_fpdivsqr_iter*38)\")\n+\n+(define_insn_reservation \"rm7_fp_mpy_sf\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"r7000\")\n+\t\t\t      (and (eq_attr \"type\" \"fmul,fmadd\")\n+\t\t\t\t   (eq_attr \"mode\" \"SF\")))\n+\t\t\t \"rm7_fpmpy+rm7_fpmpy_iter\")\n+\n+(define_insn_reservation \"rm7_fp_mpy_df\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"r7000\")\n+\t\t\t      (and (eq_attr \"type\" \"fmul,fmadd\")\n+\t\t\t\t   (eq_attr \"mode\" \"DF\")))\n+\t\t\t \"rm7_fpmpy+(rm7_fpmpy_iter*2)\")\n+\n+;; Force single-dispatch for unknown or multi.\n+(define_insn_reservation \"rm7_unknown\" 1 (and (eq_attr \"cpu\" \"r7000\")\n+\t\t\t\t\t  (eq_attr \"type\" \"unknown,multi\"))\n+\t\t\t \"rm7_single_dispatch\")"}, {"sha": "648aa8847c914d2e6cb2c77e88e98a9ef29efc74", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fe25f470be08d020057b5bead4973a6f552ef74/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fe25f470be08d020057b5bead4973a6f552ef74/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=5fe25f470be08d020057b5bead4973a6f552ef74", "patch": "@@ -807,6 +807,7 @@ const struct mips_cpu_info mips_cpu_info_table[] = {\n   { \"vr5000\", PROCESSOR_R5000, 4 },\n   { \"vr5400\", PROCESSOR_R5400, 4 },\n   { \"vr5500\", PROCESSOR_R5500, 4 },\n+  { \"rm7000\", PROCESSOR_R7000, 4 },\n \n   /* MIPS32 */\n   { \"4kc\", PROCESSOR_4KC, 32 },\n@@ -2661,6 +2662,8 @@ mips_rtx_costs (x, code, outer_code, total)\n         *total = COSTS_N_INSNS (2);\n       else if (TUNE_MIPS5400 || TUNE_MIPS5500)\n         *total = COSTS_N_INSNS ((mode == DImode) ? 4 : 3);\n+      else if (TUNE_MIPS7000)\n+        *total = COSTS_N_INSNS (mode == DImode ? 9 : 5);\n       else if (TUNE_MIPS6000)\n         *total = COSTS_N_INSNS (17);\n       else if (TUNE_MIPS5000)\n@@ -10261,6 +10264,7 @@ mips_issue_rate ()\n     case PROCESSOR_R3000: return 1;\n     case PROCESSOR_R5400: return 2;\n     case PROCESSOR_R5500: return 2;\n+    case PROCESSOR_R7000: return 2;\n \n     default:\n       return 1;\n@@ -10280,6 +10284,7 @@ mips_use_dfa_pipeline_interface ()\n     {\n     case PROCESSOR_R5400:\n     case PROCESSOR_R5500:\n+    case PROCESSOR_R7000:\n     case PROCESSOR_SR71000:\n       return true;\n "}, {"sha": "9115fea27d2aef0e760c284e98b66e17ebd0ad58", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fe25f470be08d020057b5bead4973a6f552ef74/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fe25f470be08d020057b5bead4973a6f552ef74/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=5fe25f470be08d020057b5bead4973a6f552ef74", "patch": "@@ -65,6 +65,7 @@ enum processor_type {\n   PROCESSOR_R5000,\n   PROCESSOR_R5400,\n   PROCESSOR_R5500,\n+  PROCESSOR_R7000,\n   PROCESSOR_R8000,\n   PROCESSOR_SB1,\n   PROCESSOR_SR71000\n@@ -329,6 +330,7 @@ extern const struct mips_cpu_info *mips_tune_info;\n #define TARGET_MIPS5KC              (mips_arch == PROCESSOR_5KC)\n #define TARGET_MIPS5400             (mips_arch == PROCESSOR_R5400)\n #define TARGET_MIPS5500             (mips_arch == PROCESSOR_R5500)\n+#define TARGET_MIPS7000             (mips_arch == PROCESSOR_R7000)\n #define TARGET_SB1                  (mips_arch == PROCESSOR_SB1)\n #define TARGET_SR71K                (mips_arch == PROCESSOR_SR71000)\n \n@@ -340,6 +342,7 @@ extern const struct mips_cpu_info *mips_tune_info;\n #define TUNE_MIPS5400               (mips_tune == PROCESSOR_R5400)\n #define TUNE_MIPS5500               (mips_tune == PROCESSOR_R5500)\n #define TUNE_MIPS6000               (mips_tune == PROCESSOR_R6000)\n+#define TUNE_MIPS7000               (mips_tune == PROCESSOR_R7000)\n #define TUNE_SB1                    (mips_tune == PROCESSOR_SB1)\n #define TUNE_SR71K                  (mips_tune == PROCESSOR_SR71000)\n \n@@ -762,6 +765,7 @@ extern const struct mips_cpu_info *mips_tune_info;\n #define GENERATE_MULT3_SI       ((TARGET_MIPS3900                       \\\n                                   || TARGET_MIPS5400                    \\\n                                   || TARGET_MIPS5500                    \\\n+                                  || TARGET_MIPS7000                    \\\n                                   || ISA_MIPS32\t                        \\\n                                   || ISA_MIPS32R2                       \\\n                                   || ISA_MIPS64)                        \\"}, {"sha": "6b5603fa95cca631988918a731314b115574c541", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fe25f470be08d020057b5bead4973a6f552ef74/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fe25f470be08d020057b5bead4973a6f552ef74/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=5fe25f470be08d020057b5bead4973a6f552ef74", "patch": "@@ -195,7 +195,7 @@\n \n ;; ??? Fix everything that tests this attribute.\n (define_attr \"cpu\"\n-  \"default,4kc,5kc,20kc,m4k,r3000,r3900,r6000,r4000,r4100,r4111,r4120,r4300,r4600,r4650,r5000,r5400,r5500,r8000,sb1,sr71000\"\n+  \"default,4kc,5kc,20kc,m4k,r3000,r3900,r6000,r4000,r4100,r4111,r4120,r4300,r4600,r4650,r5000,r5400,r5500,r7000,r8000,sb1,sr71000\"\n   (const (symbol_ref \"mips_cpu_attr\")))\n \n ;; The type of hardware hazard associated with this instruction.\n@@ -623,6 +623,7 @@\n \n (include \"5400.md\")\n (include \"5500.md\")\n+(include \"7000.md\")\n (include \"sr71k.md\")\n \n \n@@ -1496,6 +1497,7 @@\n   if (TARGET_MAD\n       || TARGET_MIPS5400\n       || TARGET_MIPS5500\n+      || TARGET_MIPS7000\n       || ISA_MIPS32\n       || ISA_MIPS32R2\n       || ISA_MIPS64)"}]}