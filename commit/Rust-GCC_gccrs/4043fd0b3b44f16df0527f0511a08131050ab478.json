{"sha": "4043fd0b3b44f16df0527f0511a08131050ab478", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA0M2ZkMGIzYjQ0ZjE2ZGYwNTI3ZjA1MTFhMDgxMzEwNTBhYjQ3OA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-29T15:21:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-29T15:21:59Z"}, "message": "[multiple changes]\n\n2014-01-29  Tristan Gingold  <gingold@adacore.com>\n\n\t* exp_ch9.adb (Is_Exception_Safe): Return true if no exceptions.\n\n2014-01-29  Yannick Moy  <moy@adacore.com>\n\n\t* inline.ads (Pending_Body_Info): Add SPARK_Mode and\n\tSPARK_Mode_Pragma components to be able to analyze generic\n\tinstance.\n\t* sem_ch12.adb (Analyze_Package_Instantiation,\n\tInline_Instance_Body, Need_Subprogram_Instance_Body,\n\tLoad_Parent_Of_Generic): Pass in SPARK_Mode from instantiation\n\tfor future analysis of the instance.\n\t(Instantiate_Package_Body,\n\tInstantiate_Subprogram_Body, Set_Instance_Inv): Set SPARK_Mode\n\tfrom instantiation to analyze the instance.\n\nFrom-SVN: r207244", "tree": {"sha": "3f90b6d6b0946a6c44d79e9aef701c809be663e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f90b6d6b0946a6c44d79e9aef701c809be663e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4043fd0b3b44f16df0527f0511a08131050ab478", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4043fd0b3b44f16df0527f0511a08131050ab478", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4043fd0b3b44f16df0527f0511a08131050ab478", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4043fd0b3b44f16df0527f0511a08131050ab478/comments", "author": null, "committer": null, "parents": [{"sha": "cf3e6845fd41439d52fb06791dbf13785be3db75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf3e6845fd41439d52fb06791dbf13785be3db75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf3e6845fd41439d52fb06791dbf13785be3db75"}], "stats": {"total": 68, "additions": 61, "deletions": 7}, "files": [{"sha": "cdef61ed1edf1b1d9ac1125aeefeb75a94a95ddc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4043fd0b3b44f16df0527f0511a08131050ab478/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4043fd0b3b44f16df0527f0511a08131050ab478/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4043fd0b3b44f16df0527f0511a08131050ab478", "patch": "@@ -1,3 +1,20 @@\n+2014-01-29  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* exp_ch9.adb (Is_Exception_Safe): Return true if no exceptions.\n+\n+2014-01-29  Yannick Moy  <moy@adacore.com>\n+\n+\t* inline.ads (Pending_Body_Info): Add SPARK_Mode and\n+\tSPARK_Mode_Pragma components to be able to analyze generic\n+\tinstance.\n+\t* sem_ch12.adb (Analyze_Package_Instantiation,\n+\tInline_Instance_Body, Need_Subprogram_Instance_Body,\n+\tLoad_Parent_Of_Generic): Pass in SPARK_Mode from instantiation\n+\tfor future analysis of the instance.\n+\t(Instantiate_Package_Body,\n+\tInstantiate_Subprogram_Body, Set_Instance_Inv): Set SPARK_Mode\n+\tfrom instantiation to analyze the instance.\n+\n 2014-01-29  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch7.adb, sem_prag.adb, sem_ch4.adb, sem_ch6.adb: Minor code"}, {"sha": "8f78f0619f776ba0ed807757f280ab94a741721e", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4043fd0b3b44f16df0527f0511a08131050ab478/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4043fd0b3b44f16df0527f0511a08131050ab478/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=4043fd0b3b44f16df0527f0511a08131050ab478", "patch": "@@ -13425,6 +13425,14 @@ package body Exp_Ch9 is\n    --  Start of processing for Is_Exception_Safe\n \n    begin\n+\n+      --  When exceptions can not be propagated, the subprogram will always\n+      --  return normaly.\n+\n+      if No_Exception_Handlers_Set then\n+         return True;\n+      end if;\n+\n       --  If the checks handled by the back end are not disabled, we cannot\n       --  ensure that no exception will be raised.\n "}, {"sha": "fd0e965f3f2304881fb250fa7872bf709a019c65", "filename": "gcc/ada/inline.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4043fd0b3b44f16df0527f0511a08131050ab478/gcc%2Fada%2Finline.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4043fd0b3b44f16df0527f0511a08131050ab478/gcc%2Fada%2Finline.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.ads?ref=4043fd0b3b44f16df0527f0511a08131050ab478", "patch": "@@ -96,6 +96,11 @@ package Inline is\n \n       Warnings : Warning_Record;\n       --  Capture values of warning flags\n+\n+      SPARK_Mode        : SPARK_Mode_Type;\n+      SPARK_Mode_Pragma : Node_Id;\n+      --  SPARK_Mode for an instance is the one applicable at the point of\n+      --  instantiation.\n    end record;\n \n    package Pending_Instantiations is new Table.Table ("}, {"sha": "c9adaaca353a314b68dd00f3a42b5529d9310bb8", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 31, "deletions": 7, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4043fd0b3b44f16df0527f0511a08131050ab478/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4043fd0b3b44f16df0527f0511a08131050ab478/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=4043fd0b3b44f16df0527f0511a08131050ab478", "patch": "@@ -3899,7 +3899,9 @@ package body Sem_Ch12 is\n                    Local_Suppress_Stack_Top => Local_Suppress_Stack_Top,\n                    Version                  => Ada_Version,\n                    Version_Pragma           => Ada_Version_Pragma,\n-                   Warnings                 => Save_Warnings));\n+                   Warnings                 => Save_Warnings,\n+                   SPARK_Mode               => SPARK_Mode,\n+                   SPARK_Mode_Pragma        => SPARK_Mode_Pragma));\n             end if;\n          end if;\n \n@@ -4245,7 +4247,9 @@ package body Sem_Ch12 is\n                Local_Suppress_Stack_Top => Local_Suppress_Stack_Top,\n                Version                  => Ada_Version,\n                Version_Pragma           => Ada_Version_Pragma,\n-               Warnings                 => Save_Warnings)),\n+               Warnings                 => Save_Warnings,\n+               SPARK_Mode               => SPARK_Mode,\n+               SPARK_Mode_Pragma        => SPARK_Mode_Pragma)),\n             Inlined_Body => True);\n \n          Pop_Scope;\n@@ -4363,7 +4367,9 @@ package body Sem_Ch12 is\n                Local_Suppress_Stack_Top => Local_Suppress_Stack_Top,\n                Version                  => Ada_Version,\n                Version_Pragma           => Ada_Version_Pragma,\n-               Warnings                 => Save_Warnings)),\n+               Warnings                 => Save_Warnings,\n+               SPARK_Mode               => SPARK_Mode,\n+               SPARK_Mode_Pragma        => SPARK_Mode_Pragma)),\n             Inlined_Body => True);\n       end if;\n    end Inline_Instance_Body;\n@@ -4421,7 +4427,9 @@ package body Sem_Ch12 is\n              Local_Suppress_Stack_Top => Local_Suppress_Stack_Top,\n              Version                  => Ada_Version,\n              Version_Pragma           => Ada_Version_Pragma,\n-             Warnings                 => Save_Warnings));\n+             Warnings                 => Save_Warnings,\n+             SPARK_Mode               => SPARK_Mode,\n+             SPARK_Mode_Pragma        => SPARK_Mode_Pragma));\n          return True;\n \n       --  Here if not inlined, or we ignore the inlining\n@@ -9913,6 +9921,8 @@ package body Sem_Ch12 is\n       Opt.Ada_Version          := Body_Info.Version;\n       Opt.Ada_Version_Pragma   := Body_Info.Version_Pragma;\n       Restore_Warnings (Body_Info.Warnings);\n+      Opt.SPARK_Mode           := Body_Info.SPARK_Mode;\n+      Opt.SPARK_Mode_Pragma    := Body_Info.SPARK_Mode_Pragma;\n \n       if No (Gen_Body_Id) then\n          Load_Parent_Of_Generic\n@@ -10203,6 +10213,8 @@ package body Sem_Ch12 is\n       Opt.Ada_Version          := Body_Info.Version;\n       Opt.Ada_Version_Pragma   := Body_Info.Version_Pragma;\n       Restore_Warnings (Body_Info.Warnings);\n+      Opt.SPARK_Mode           := Body_Info.SPARK_Mode;\n+      Opt.SPARK_Mode_Pragma    := Body_Info.SPARK_Mode_Pragma;\n \n       if No (Gen_Body_Id) then\n \n@@ -12091,7 +12103,9 @@ package body Sem_Ch12 is\n                                 Local_Suppress_Stack_Top,\n                               Version                  => Ada_Version,\n                               Version_Pragma           => Ada_Version_Pragma,\n-                              Warnings                 => Save_Warnings);\n+                              Warnings                 => Save_Warnings,\n+                              SPARK_Mode               => SPARK_Mode,\n+                              SPARK_Mode_Pragma        => SPARK_Mode_Pragma);\n \n                            --  Package instance\n \n@@ -12133,7 +12147,9 @@ package body Sem_Ch12 is\n                          Local_Suppress_Stack_Top => Local_Suppress_Stack_Top,\n                          Version                  => Ada_Version,\n                          Version_Pragma           => Ada_Version_Pragma,\n-                         Warnings                 => Save_Warnings)),\n+                         Warnings                 => Save_Warnings,\n+                         SPARK_Mode               => SPARK_Mode,\n+                         SPARK_Mode_Pragma        => SPARK_Mode_Pragma)),\n                      Body_Optional => Body_Optional);\n                end;\n             end if;\n@@ -13799,7 +13815,9 @@ package body Sem_Ch12 is\n      (Gen_Unit : Entity_Id;\n       Act_Unit : Entity_Id)\n    is\n-      Assertion_Status : constant Boolean := Assertions_Enabled;\n+      Assertion_Status       : constant Boolean := Assertions_Enabled;\n+      Save_SPARK_Mode        : constant SPARK_Mode_Type := SPARK_Mode;\n+      Save_SPARK_Mode_Pragma : constant Node_Id := SPARK_Mode_Pragma;\n \n    begin\n       --  Regardless of the current mode, predefined units are analyzed in the\n@@ -13822,6 +13840,12 @@ package body Sem_Ch12 is\n          if Ada_Version >= Ada_2012 then\n             Assertions_Enabled := Assertion_Status;\n          end if;\n+\n+         --  SPARK_Mode for an instance is the one applicable at the point of\n+         --  instantiation.\n+\n+         SPARK_Mode := Save_SPARK_Mode;\n+         SPARK_Mode_Pragma := Save_SPARK_Mode_Pragma;\n       end if;\n \n       Current_Instantiated_Parent :="}]}