{"sha": "5c280133c9545b5828b1d2fcb805746506efe249", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMyODAxMzNjOTU0NWI1ODI4YjFkMmZjYjgwNTc0NjUwNmVmZTI0OQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "1999-01-08T11:54:27Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "1999-01-08T11:54:27Z"}, "message": "parse-scan.y (variable_declarator_id): Set or increment bracket_count.\n\n\t* parse-scan.y (variable_declarator_id): Set or increment\n\tbracket_count.\n\t(bracket_count): New global.\n\t(formal_parameter): Handle case where bracket pairs trail variable\n\tdeclarator id.\n\nFrom-SVN: r24573", "tree": {"sha": "b102e530e3dffebe955b98f5608c73da83507661", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b102e530e3dffebe955b98f5608c73da83507661"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c280133c9545b5828b1d2fcb805746506efe249", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c280133c9545b5828b1d2fcb805746506efe249", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c280133c9545b5828b1d2fcb805746506efe249", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c280133c9545b5828b1d2fcb805746506efe249/comments", "author": null, "committer": null, "parents": [{"sha": "9de843ca79e321b77f66484a3e4792aaae219d0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9de843ca79e321b77f66484a3e4792aaae219d0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9de843ca79e321b77f66484a3e4792aaae219d0c"}], "stats": {"total": 249, "additions": 157, "deletions": 92}, "files": [{"sha": "4adf90820208c9a039a0f71d7d422fb53002a8a0", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c280133c9545b5828b1d2fcb805746506efe249/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c280133c9545b5828b1d2fcb805746506efe249/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=5c280133c9545b5828b1d2fcb805746506efe249", "patch": "@@ -1,3 +1,11 @@\n+1999-01-08  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* parse-scan.y (variable_declarator_id): Set or increment\n+\tbracket_count.\n+\t(bracket_count): New global.\n+\t(formal_parameter): Handle case where bracket pairs trail variable\n+\tdeclarator id.\n+\n 1999-01-07  Andrew Haley  <aph@viagra.cygnus.co.uk>\n \n \t* jcf-parse.c (yyparse): variable len changed from a char to an"}, {"sha": "4e79853cdf11793029f824833fa8337783e30b17", "filename": "gcc/java/parse-scan.c", "status": "modified", "additions": 118, "deletions": 88, "changes": 206, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c280133c9545b5828b1d2fcb805746506efe249/gcc%2Fjava%2Fparse-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c280133c9545b5828b1d2fcb805746506efe249/gcc%2Fjava%2Fparse-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse-scan.c?ref=5c280133c9545b5828b1d2fcb805746506efe249", "patch": "@@ -151,6 +151,10 @@ static int previous_output;\n /* Record modifier uses  */\n static int modifier_value;\n \n+/* Keep track of number of bracket pairs after a variable declarator\n+   id.  */\n+static int bracket_count; \n+\n /* Record a method declaration  */\n struct method_declarator {\n   char *method_name;\n@@ -171,7 +175,7 @@ static void report_main_declaration PROTO ((struct method_declarator *));\n #include \"lex.h\"\n #include \"parse.h\"\n \n-#line 95 \"./parse-scan.y\"\n+#line 99 \"./parse-scan.y\"\n typedef union {\n   char *node;\n   struct method_declarator *declarator;\n@@ -396,41 +400,41 @@ static const short yyrhs[] = {   123,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   166,   171,   173,   174,   175,   176,   177,   181,   183,   186,\n-   192,   197,   204,   206,   209,   213,   217,   221,   223,   230,\n-   240,   242,   245,   249,   258,   263,   264,   265,   266,   267,\n-   268,   269,   270,   273,   275,   278,   280,   283,   288,   290,\n-   293,   297,   301,   303,   304,   310,   319,   330,   337,   337,\n-   340,   342,   343,   346,   347,   350,   353,   357,   359,   362,\n-   364,   367,   369,   370,   371,   374,   376,   377,   378,   382,\n-   385,   389,   392,   395,   397,   400,   403,   406,   408,   412,\n-   416,   419,   420,   422,   429,   436,   442,   445,   447,   455,\n-   461,   465,   466,   469,   472,   476,   478,   479,   483,   485,\n-   488,   498,   500,   503,   505,   511,   514,   518,   520,   521,\n-   522,   526,   528,   531,   533,   537,   539,   544,   546,   548,\n-   549,   553,   555,   558,   560,   563,   565,   568,   570,   571,\n-   572,   575,   579,   584,   586,   587,   588,   591,   593,   597,\n-   599,   602,   604,   607,   609,   610,   613,   617,   620,   624,\n-   626,   627,   628,   629,   630,   633,   635,   636,   637,   638,\n-   641,   643,   644,   645,   646,   647,   648,   649,   650,   651,\n-   652,   655,   659,   664,   668,   674,   678,   680,   681,   682,\n-   683,   684,   685,   688,   692,   696,   700,   704,   706,   707,\n-   708,   711,   713,   716,   721,   723,   726,   728,   731,   735,\n-   739,   743,   747,   751,   753,   756,   758,   761,   765,   768,\n-   769,   770,   773,   774,   777,   779,   782,   784,   787,   789,\n-   792,   794,   797,   801,   803,   806,   811,   813,   814,   817,\n-   819,   822,   826,   831,   833,   836,   838,   839,   840,   841,\n-   842,   843,   847,   849,   851,   855,   859,   861,   865,   866,\n-   870,   871,   872,   873,   876,   879,   882,   884,   885,   888,\n-   890,   891,   892,   895,   896,   899,   901,   904,   908,   910,\n-   913,   915,   918,   921,   923,   924,   925,   926,   929,   932,\n-   935,   937,   939,   940,   943,   947,   951,   953,   954,   955,\n-   956,   959,   963,   967,   969,   970,   971,   974,   976,   977,\n-   978,   981,   983,   984,   985,   988,   990,   991,   994,   996,\n-   997,   998,  1001,  1003,  1004,  1005,  1006,  1007,  1010,  1012,\n-  1013,  1016,  1018,  1021,  1023,  1026,  1028,  1031,  1033,  1036,\n-  1038,  1041,  1043,  1046,  1048,  1051,  1055,  1058,  1059,  1062,\n-  1064,  1067,  1071\n+   170,   175,   177,   178,   179,   180,   181,   185,   187,   190,\n+   196,   201,   208,   210,   213,   217,   221,   225,   227,   234,\n+   244,   246,   249,   253,   262,   267,   268,   269,   270,   271,\n+   272,   273,   274,   277,   279,   282,   284,   287,   292,   294,\n+   297,   301,   305,   307,   308,   314,   323,   334,   341,   341,\n+   344,   346,   347,   350,   351,   354,   357,   361,   363,   366,\n+   368,   371,   373,   374,   375,   378,   380,   381,   382,   386,\n+   389,   393,   396,   399,   401,   404,   407,   411,   413,   417,\n+   421,   424,   425,   427,   434,   441,   447,   450,   452,   460,\n+   476,   492,   493,   496,   499,   503,   505,   506,   510,   512,\n+   515,   525,   527,   530,   532,   538,   541,   545,   547,   548,\n+   549,   553,   555,   558,   560,   564,   566,   571,   573,   575,\n+   576,   580,   582,   585,   587,   590,   592,   595,   597,   598,\n+   599,   602,   606,   611,   613,   614,   615,   618,   620,   624,\n+   626,   629,   631,   634,   636,   637,   640,   644,   647,   651,\n+   653,   654,   655,   656,   657,   660,   662,   663,   664,   665,\n+   668,   670,   671,   672,   673,   674,   675,   676,   677,   678,\n+   679,   682,   686,   691,   695,   701,   705,   707,   708,   709,\n+   710,   711,   712,   715,   719,   723,   727,   731,   733,   734,\n+   735,   738,   740,   743,   748,   750,   753,   755,   758,   762,\n+   766,   770,   774,   778,   780,   783,   785,   788,   792,   795,\n+   796,   797,   800,   801,   804,   806,   809,   811,   814,   816,\n+   819,   821,   824,   828,   830,   833,   838,   840,   841,   844,\n+   846,   849,   853,   858,   860,   863,   865,   866,   867,   868,\n+   869,   870,   874,   876,   878,   882,   886,   888,   892,   893,\n+   897,   898,   899,   900,   903,   906,   909,   911,   912,   915,\n+   917,   918,   919,   922,   923,   926,   928,   931,   935,   937,\n+   940,   942,   945,   948,   950,   951,   952,   953,   956,   959,\n+   962,   964,   966,   967,   970,   974,   978,   980,   981,   982,\n+   983,   986,   990,   994,   996,   997,   998,  1001,  1003,  1004,\n+  1005,  1008,  1010,  1011,  1012,  1015,  1017,  1018,  1021,  1023,\n+  1024,  1025,  1028,  1030,  1031,  1032,  1033,  1034,  1037,  1039,\n+  1040,  1043,  1045,  1048,  1050,  1053,  1055,  1058,  1060,  1063,\n+  1065,  1068,  1070,  1073,  1075,  1078,  1082,  1085,  1086,  1089,\n+  1091,  1094,  1098\n };\n #endif\n \n@@ -1868,28 +1872,28 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 10:\n-#line 188 \"./parse-scan.y\"\n+#line 192 \"./parse-scan.y\"\n {\n \t\t  /* use preset global here. FIXME */\n \t\t  yyval.node = xstrdup (\"int\");\n \t\t;\n     break;}\n case 11:\n-#line 193 \"./parse-scan.y\"\n+#line 197 \"./parse-scan.y\"\n {\n \t\t  /* use preset global here. FIXME */\n \t\t  yyval.node = xstrdup (\"double\");\n \t\t;\n     break;}\n case 12:\n-#line 198 \"./parse-scan.y\"\n+#line 202 \"./parse-scan.y\"\n {\n \t\t  /* use preset global here. FIXME */\n \t\t  yyval.node = xstrdup (\"boolean\");\n \t\t;\n     break;}\n case 19:\n-#line 224 \"./parse-scan.y\"\n+#line 228 \"./parse-scan.y\"\n {\n \t\t  char *n = xmalloc (strlen (yyvsp[-2].node)+2);\n \t\t  n [0] = '[';\n@@ -1898,7 +1902,7 @@ case 19:\n \t\t;\n     break;}\n case 20:\n-#line 231 \"./parse-scan.y\"\n+#line 235 \"./parse-scan.y\"\n {\t\n \t\t  char *n = xmalloc (strlen (yyvsp[-2].node)+2);\n \t\t  n [0] = '[';\n@@ -1907,19 +1911,19 @@ case 20:\n \t\t;\n     break;}\n case 24:\n-#line 251 \"./parse-scan.y\"\n+#line 255 \"./parse-scan.y\"\n { \n \t\t  char *n = xmalloc (strlen (yyvsp[-2].node)+strlen (yyvsp[0].node)+2);\n \t\t  sprintf (n, \"%s.%s\", yyvsp[-2].node, yyvsp[0].node);\n \t\t  yyval.node = n;\n \t\t;\n     break;}\n case 38:\n-#line 285 \"./parse-scan.y\"\n+#line 289 \"./parse-scan.y\"\n { package_name = yyvsp[-1].node; ;\n     break;}\n case 46:\n-#line 312 \"./parse-scan.y\"\n+#line 316 \"./parse-scan.y\"\n { \n \t\t  if (yyvsp[0].value == PUBLIC_TK)\n \t\t    modifier_value++;\n@@ -1929,7 +1933,7 @@ case 46:\n \t\t;\n     break;}\n case 47:\n-#line 320 \"./parse-scan.y\"\n+#line 324 \"./parse-scan.y\"\n { \n \t\t  if (yyvsp[0].value == PUBLIC_TK)\n \t\t    modifier_value++;\n@@ -1939,180 +1943,206 @@ case 47:\n \t\t;\n     break;}\n case 48:\n-#line 332 \"./parse-scan.y\"\n+#line 336 \"./parse-scan.y\"\n { \n \t\t  report_class_declaration(yyvsp[-2].node);\n \t\t  modifier_value = 0;\n                 ;\n     break;}\n case 50:\n-#line 338 \"./parse-scan.y\"\n+#line 342 \"./parse-scan.y\"\n { report_class_declaration(yyvsp[-2].node); ;\n     break;}\n case 56:\n-#line 352 \"./parse-scan.y\"\n+#line 356 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 57:\n-#line 354 \"./parse-scan.y\"\n+#line 358 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 70:\n-#line 384 \"./parse-scan.y\"\n+#line 388 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 71:\n-#line 386 \"./parse-scan.y\"\n+#line 390 \"./parse-scan.y\"\n { modifier_value = 0; ;\n     break;}\n case 76:\n-#line 402 \"./parse-scan.y\"\n-{ USE_ABSORBER; ;\n+#line 406 \"./parse-scan.y\"\n+{ bracket_count = 0; USE_ABSORBER; ;\n+    break;}\n+case 77:\n+#line 408 \"./parse-scan.y\"\n+{ ++bracket_count; ;\n     break;}\n case 81:\n-#line 418 \"./parse-scan.y\"\n+#line 423 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 83:\n-#line 421 \"./parse-scan.y\"\n+#line 426 \"./parse-scan.y\"\n { modifier_value = 0; ;\n     break;}\n case 84:\n-#line 423 \"./parse-scan.y\"\n+#line 428 \"./parse-scan.y\"\n { \n                   report_main_declaration (yyvsp[-1].declarator);\n \t\t  modifier_value = 0;\n \t\t;\n     break;}\n case 85:\n-#line 431 \"./parse-scan.y\"\n+#line 436 \"./parse-scan.y\"\n { \n \t\t  struct method_declarator *d;\n \t\t  NEW_METHOD_DECLARATOR (d, yyvsp[-2].node, NULL);\n \t\t  yyval.declarator = d;\n \t\t;\n     break;}\n case 86:\n-#line 437 \"./parse-scan.y\"\n+#line 442 \"./parse-scan.y\"\n { \n \t\t  struct method_declarator *d;\n \t\t  NEW_METHOD_DECLARATOR (d, yyvsp[-3].node, yyvsp[-1].node);\n \t\t  yyval.declarator = d;\n \t\t;\n     break;}\n case 89:\n-#line 448 \"./parse-scan.y\"\n+#line 453 \"./parse-scan.y\"\n {\n \t\t  char *n = xmalloc (strlen (yyvsp[-2].node)+strlen(yyvsp[0].node)+2);\n \t\t  sprintf (n, \"%s,%s\", yyvsp[-2].node, yyvsp[0].node);\n \t\t  yyval.node = n;\n \t\t;\n     break;}\n case 90:\n-#line 457 \"./parse-scan.y\"\n+#line 462 \"./parse-scan.y\"\n { \n \t\t  USE_ABSORBER;\n-\t\t  yyval.node = yyvsp[-1].node;\n+\t\t  if (bracket_count)\n+\t\t    {\n+\t\t      int i;\n+\t\t      char *n = xmalloc (bracket_count + 1 + strlen (yyval.node));\n+\t\t      for (i = 0; i < bracket_count; ++i)\n+\t\t\tn[i] = '[';\n+\t\t      strcpy (n + bracket_count, yyval.node);\n+\t\t      yyval.node = n;\n+\t\t    }\n+\t\t  else\n+\t\t    yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 91:\n-#line 462 \"./parse-scan.y\"\n-{ yyval.node = yyvsp[-1].node; ;\n+#line 477 \"./parse-scan.y\"\n+{\n+\t\t  if (bracket_count)\n+\t\t    {\n+\t\t      int i;\n+\t\t      char *n = xmalloc (bracket_count + 1 + strlen (yyval.node));\n+\t\t      for (i = 0; i < bracket_count; ++i)\n+\t\t\tn[i] = '[';\n+\t\t      strcpy (n + bracket_count, yyval.node);\n+\t\t      yyval.node = n;\n+\t\t    }\n+\t\t  else\n+\t\t    yyval.node = yyvsp[-1].node;\n+\t\t;\n     break;}\n case 94:\n-#line 471 \"./parse-scan.y\"\n+#line 498 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 95:\n-#line 473 \"./parse-scan.y\"\n+#line 500 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 101:\n-#line 490 \"./parse-scan.y\"\n+#line 517 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 103:\n-#line 501 \"./parse-scan.y\"\n+#line 528 \"./parse-scan.y\"\n { modifier_value = 0; ;\n     break;}\n case 105:\n-#line 506 \"./parse-scan.y\"\n+#line 533 \"./parse-scan.y\"\n { modifier_value = 0; ;\n     break;}\n case 106:\n-#line 513 \"./parse-scan.y\"\n+#line 540 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 107:\n-#line 515 \"./parse-scan.y\"\n+#line 542 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 114:\n-#line 532 \"./parse-scan.y\"\n+#line 559 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 115:\n-#line 534 \"./parse-scan.y\"\n+#line 561 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 119:\n-#line 547 \"./parse-scan.y\"\n+#line 574 \"./parse-scan.y\"\n { modifier_value = 0; ;\n     break;}\n case 121:\n-#line 550 \"./parse-scan.y\"\n+#line 577 \"./parse-scan.y\"\n { modifier_value = 0; ;\n     break;}\n case 148:\n-#line 619 \"./parse-scan.y\"\n+#line 646 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 149:\n-#line 621 \"./parse-scan.y\"\n+#line 648 \"./parse-scan.y\"\n { modifier_value = 0; ;\n     break;}\n case 173:\n-#line 661 \"./parse-scan.y\"\n+#line 688 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 226:\n-#line 808 \"./parse-scan.y\"\n+#line 835 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 243:\n-#line 848 \"./parse-scan.y\"\n+#line 875 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 244:\n-#line 850 \"./parse-scan.y\"\n+#line 877 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 246:\n-#line 856 \"./parse-scan.y\"\n+#line 883 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 255:\n-#line 878 \"./parse-scan.y\"\n+#line 905 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 273:\n-#line 920 \"./parse-scan.y\"\n+#line 947 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 274:\n-#line 922 \"./parse-scan.y\"\n+#line 949 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 279:\n-#line 931 \"./parse-scan.y\"\n+#line 958 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 282:\n-#line 938 \"./parse-scan.y\"\n+#line 965 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 337:\n-#line 1057 \"./parse-scan.y\"\n+#line 1084 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n }\n@@ -2313,7 +2343,7 @@ case 337:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 1075 \"./parse-scan.y\"\n+#line 1102 \"./parse-scan.y\"\n \n \f\n #include \"lex.c\""}, {"sha": "25f87c8520140f26126dcc3197adcbfc7b48164b", "filename": "gcc/java/parse-scan.y", "status": "modified", "additions": 31, "deletions": 4, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c280133c9545b5828b1d2fcb805746506efe249/gcc%2Fjava%2Fparse-scan.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c280133c9545b5828b1d2fcb805746506efe249/gcc%2Fjava%2Fparse-scan.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse-scan.y?ref=5c280133c9545b5828b1d2fcb805746506efe249", "patch": "@@ -1,5 +1,5 @@\n /* Parser grammar for quick source code scan of Java(TM) language programs.\n-   Copyright (C) 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999 Free Software Foundation, Inc.\n    Contributed by Alexandre Petit-Bianco (apbianco@cygnus.com)\n \n This file is part of GNU CC.\n@@ -71,6 +71,10 @@ static int previous_output;\n /* Record modifier uses  */\n static int modifier_value;\n \n+/* Keep track of number of bracket pairs after a variable declarator\n+   id.  */\n+static int bracket_count; \n+\n /* Record a method declaration  */\n struct method_declarator {\n   char *method_name;\n@@ -399,8 +403,9 @@ variable_declarator:\n \n variable_declarator_id:\n \tidentifier\n-\t\t{ USE_ABSORBER; }\n+\t\t{ bracket_count = 0; USE_ABSORBER; }\n |\tvariable_declarator_id OSB_TK CSB_TK\n+\t\t{ ++bracket_count; }\n ;\n \n variable_initializer:\n@@ -456,10 +461,32 @@ formal_parameter:\n \ttype variable_declarator_id\n \t\t{ \n \t\t  USE_ABSORBER;\n-\t\t  $$ = $1;\n+\t\t  if (bracket_count)\n+\t\t    {\n+\t\t      int i;\n+\t\t      char *n = xmalloc (bracket_count + 1 + strlen ($$));\n+\t\t      for (i = 0; i < bracket_count; ++i)\n+\t\t\tn[i] = '[';\n+\t\t      strcpy (n + bracket_count, $$);\n+\t\t      $$ = n;\n+\t\t    }\n+\t\t  else\n+\t\t    $$ = $1;\n \t\t}\n |\tmodifiers type variable_declarator_id /* Added, JDK1.1 final locals */\n-\t\t{ $$ = $2; }\n+\t\t{\n+\t\t  if (bracket_count)\n+\t\t    {\n+\t\t      int i;\n+\t\t      char *n = xmalloc (bracket_count + 1 + strlen ($$));\n+\t\t      for (i = 0; i < bracket_count; ++i)\n+\t\t\tn[i] = '[';\n+\t\t      strcpy (n + bracket_count, $$);\n+\t\t      $$ = n;\n+\t\t    }\n+\t\t  else\n+\t\t    $$ = $2;\n+\t\t}\n ;\n \n throws:"}]}