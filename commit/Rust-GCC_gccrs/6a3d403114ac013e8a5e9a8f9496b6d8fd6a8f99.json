{"sha": "6a3d403114ac013e8a5e9a8f9496b6d8fd6a8f99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEzZDQwMzExNGFjMDEzZThhNWU5YThmOTQ5NmI2ZDhmZDZhOGY5OQ==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@waitaki.otago.ac.nz", "date": "2001-09-13T23:20:19Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2001-09-13T23:20:19Z"}, "message": "Hashtable.java (Enumerator): Ensure that if hasMoreElements() returns true...\n\n\t* java/util/Hashtable.java (Enumerator): Ensure that if\n\thasMoreElements() returns true, nextElement() will always return\n\tsomething even if the table has been modified.\n\nFrom-SVN: r45584", "tree": {"sha": "e91afa34b8fe397cfc21764b75025a4034a96d56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e91afa34b8fe397cfc21764b75025a4034a96d56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a3d403114ac013e8a5e9a8f9496b6d8fd6a8f99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a3d403114ac013e8a5e9a8f9496b6d8fd6a8f99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a3d403114ac013e8a5e9a8f9496b6d8fd6a8f99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a3d403114ac013e8a5e9a8f9496b6d8fd6a8f99/comments", "author": null, "committer": null, "parents": [{"sha": "7364d5f851b8430aa3fdd8d9fa30efa5755873ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7364d5f851b8430aa3fdd8d9fa30efa5755873ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7364d5f851b8430aa3fdd8d9fa30efa5755873ef"}], "stats": {"total": 51, "additions": 34, "deletions": 17}, "files": [{"sha": "2278b73c0e6bf2b82b535a850373df501fcabfeb", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a3d403114ac013e8a5e9a8f9496b6d8fd6a8f99/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a3d403114ac013e8a5e9a8f9496b6d8fd6a8f99/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=6a3d403114ac013e8a5e9a8f9496b6d8fd6a8f99", "patch": "@@ -3,6 +3,10 @@\n \t* java/io/File.java (normalizePath): Use equals() not '==' for string \n \tcomparison.\n \n+\t* java/util/Hashtable.java (Enumerator): Ensure that if \n+\thasMoreElements() returns true, nextElement() will always return\n+\tsomething even if the table has been modified.\n+\n 2001-09-12  Tom Tromey  <tromey@redhat.com>\n \n \t* Makefile.in: Rebuilt."}, {"sha": "48939b25f1579df03a4f2367b9ec8e4c9cc3aae1", "filename": "libjava/java/util/Hashtable.java", "status": "modified", "additions": 30, "deletions": 17, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a3d403114ac013e8a5e9a8f9496b6d8fd6a8f99/libjava%2Fjava%2Futil%2FHashtable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a3d403114ac013e8a5e9a8f9496b6d8fd6a8f99/libjava%2Fjava%2Futil%2FHashtable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FHashtable.java?ref=6a3d403114ac013e8a5e9a8f9496b6d8fd6a8f99", "patch": "@@ -833,44 +833,57 @@ class Enumerator implements Enumeration\n     static final int VALUES = 1;\n     \n     int type;\n-    // The total number of elements returned by nextElement(). Used to \n-    // determine if there are more elements remaining.\n-    int count;\n     // current index in the physical hash table.\n     int idx;\n-    // the last Entry returned.\n+    // the last Entry returned by nextEntry().\n     Entry last;\n+    // Entry which will be returned by the next nextElement() call.\n+    Entry next;\n     \n     Enumerator(int type)\n     {\n       this.type = type;\n-      this.count = 0;\n       this.idx = buckets.length;\n     }\n+    \n+    private Entry nextEntry()\n+    {\n+      Entry e = null;\n+\n+      if (last != null)\n+        e = last.next;\n+\n+      while (e == null && idx > 0)\n+\t{\n+\t  e = buckets[--idx];\n+\t}\n+      last = e;\n+      return e;\n+    }\n \n     public boolean hasMoreElements()\n     {\n-      return count < Hashtable.this.size;    \n+      if (next != null)\n+        return true;\n+      next = nextEntry();\n+      return (next != null);\n     }\n \n     public Object nextElement()\n     {\n-      if (count >= size)\n-        throw new NoSuchElementException();\n-      count++;\n       Entry e = null;\n-      if (last != null)\n-        e = last.next;\n-\n-      while (e == null)\n+      if (next != null)\n         {\n-\t  e = buckets[--idx];\n+          e = next;\n+\t  next = null;\n \t}\n-\n-      last = e;\n+      else\n+        e = nextEntry();\n+      if (e == null)\n+        throw new NoSuchElementException(\"Hashtable Enumerator\");\n       if (type == VALUES)\n         return e.value;\n       return e.key;\n     }\n-  }  \n+  }\n }"}]}