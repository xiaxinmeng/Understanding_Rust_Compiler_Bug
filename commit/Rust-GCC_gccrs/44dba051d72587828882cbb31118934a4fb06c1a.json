{"sha": "44dba051d72587828882cbb31118934a4fb06c1a", "node_id": "C_kwDOANBUbNoAKDQ0ZGJhMDUxZDcyNTg3ODI4ODgyY2JiMzExMTg5MzRhNGZiMDZjMWE", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-09-22T13:18:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-09-22T13:19:44Z"}, "message": "tree-optimization/102801 - testcase for uninit diagnostic\n\nThe following testcase is fixed in GCC 12+\n\n\tPR tree-optimization/102801\ngcc/testsuite/\n\t* g++.dg/warn/Wuninitialized-33.C: New testcase.", "tree": {"sha": "657d24f6ebda2a9f41a34bd5972bbaea1807fe4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/657d24f6ebda2a9f41a34bd5972bbaea1807fe4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44dba051d72587828882cbb31118934a4fb06c1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44dba051d72587828882cbb31118934a4fb06c1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44dba051d72587828882cbb31118934a4fb06c1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44dba051d72587828882cbb31118934a4fb06c1a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32d8123cd6ce87acb557aec230e8359051316f9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32d8123cd6ce87acb557aec230e8359051316f9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32d8123cd6ce87acb557aec230e8359051316f9f"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "1bb0639ee300f2acc73137c0201ec58561d65a60", "filename": "gcc/testsuite/g++.dg/warn/Wuninitialized-33.C", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44dba051d72587828882cbb31118934a4fb06c1a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-33.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44dba051d72587828882cbb31118934a4fb06c1a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-33.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-33.C?ref=44dba051d72587828882cbb31118934a4fb06c1a", "patch": "@@ -0,0 +1,55 @@\n+// PR102801\n+// { dg-do compile }\n+// { dg-require-effective-target c++17 }\n+// { dg-options \"-O2 -Wall\" }\n+\n+#include <algorithm>\n+#include <memory>\n+#include <optional>\n+#include <string>\n+#include <utility>\n+#include <vector>\n+\n+class C {\n+    bool b{}; // { dg-bogus \"uninitialized\" }\n+\n+    struct Shared {};\n+    using SharedPtr = std::shared_ptr<const Shared>;\n+\n+    SharedPtr shared;\n+\n+public:\n+    C() = delete;\n+    C(bool bIn) : b(bIn) {}\n+    ~C();\n+    int someMethod() const;\n+};\n+\n+using OptC = std::optional<C>;\n+\n+class C2 {\n+    OptC c;\n+public:\n+    C2() = default;\n+    C2(const C &cIn) : c(cIn) {}\n+    ~C2();\n+    void operator()() const;\n+    void swap(C2 &o) { std::swap(c, o.c); }\n+};\n+\n+\n+template <typename T>\n+class Q {\n+    std::vector<T> queue;\n+public:\n+    void Add(std::vector<T> &items) {\n+        for (T & item : items) {\n+            queue.push_back(T());\n+            item.swap(queue.back());\n+        }\n+    }\n+    void Exec();\n+};\n+\n+extern void foo(Q<C2> & q, std::vector<C2> &items);\n+void foo(Q<C2> & q, std::vector<C2> &items) { q.Add(items); q.Exec(); }"}]}