{"sha": "a42e7952b0af76c0c16d341d25eaad7f044b5dc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQyZTc5NTJiMGFmNzZjMGMxNmQzNDFkMjVlYWFkN2YwNDRiNWRjNA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2016-09-06T19:23:25Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2016-09-06T19:23:25Z"}, "message": "PR c/77336 -  -Wsuggest-attribute=format warning overly simplistic\n\ngcc/c-family/ChangeLog:\n\n\tPR c/77336\n\t* c-format.c (check_function_format): Avoid issuing warnings for\n\tfunctions unless they call format functions with non-constant\n\tformat strings.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c/77336\n\t* gcc.dg/format/miss-7.c: New test.\n\nFrom-SVN: r240013", "tree": {"sha": "ae5a9b8a7617d4b1169e24175cd87edde40ae3ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae5a9b8a7617d4b1169e24175cd87edde40ae3ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a42e7952b0af76c0c16d341d25eaad7f044b5dc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a42e7952b0af76c0c16d341d25eaad7f044b5dc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a42e7952b0af76c0c16d341d25eaad7f044b5dc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a42e7952b0af76c0c16d341d25eaad7f044b5dc4/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e6cb85d435baf64ba081e4e9c6a3387680fc1772", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6cb85d435baf64ba081e4e9c6a3387680fc1772", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6cb85d435baf64ba081e4e9c6a3387680fc1772"}], "stats": {"total": 64, "additions": 61, "deletions": 3}, "files": [{"sha": "5d642d71ecee9c20deb4bf164188930c5f74891a", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a42e7952b0af76c0c16d341d25eaad7f044b5dc4/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a42e7952b0af76c0c16d341d25eaad7f044b5dc4/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=a42e7952b0af76c0c16d341d25eaad7f044b5dc4", "patch": "@@ -1,3 +1,10 @@\n+2016-09-06 Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/77336\n+\t* c-format.c (check_function_format): Avoid issuing warnings for\n+\tfunctions unless they call format functions with non-constant\n+\tformat strings.\n+\n 2016-09-06  Richard Biener  <rguenther@suse.de>\n \n \tPR c/77450"}, {"sha": "413962eec21086d9eb0b719360124baa87a8512a", "filename": "gcc/c-family/c-format.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a42e7952b0af76c0c16d341d25eaad7f044b5dc4/gcc%2Fc-family%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a42e7952b0af76c0c16d341d25eaad7f044b5dc4/gcc%2Fc-family%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-format.c?ref=a42e7952b0af76c0c16d341d25eaad7f044b5dc4", "patch": "@@ -31,6 +31,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"c-format.h\"\n #include \"diagnostic.h\"\n #include \"selftest.h\"\n+#include \"builtins.h\"\n \n /* Handle attributes associated with format checking.  */\n \n@@ -1212,9 +1213,17 @@ check_function_format (tree attrs, int nargs, tree *argarray)\n \t\tparams = tree_cons (NULL_TREE, argarray[i], params);\n \t      check_format_info (&info, params);\n \t    }\n+\n+\t  /* Attempt to detect whether the current function might benefit\n+\t     from the format attribute if the called function is decorated\n+\t     with it.  Avoid using calls with string literal formats for\n+\t     guidance since those are unlikely to be viable candidates.  */\n \t  if (warn_suggest_attribute_format && info.first_arg_num == 0\n \t      && (format_types[info.format_type].flags\n-\t\t  & (int) FMT_FLAG_ARG_CONVERT))\n+\t\t  & (int) FMT_FLAG_ARG_CONVERT)\n+\t      /* c_strlen will fail for a function parameter but succeed\n+\t\t for a literal or constant array.  */\n+\t      && !c_strlen (argarray[info.format_num - 1], 1))\n \t    {\n \t      tree c;\n \t      for (c = TYPE_ATTRIBUTES (TREE_TYPE (current_function_decl));\n@@ -1242,8 +1251,9 @@ check_function_format (tree attrs, int nargs, tree *argarray)\n \t\t\tbreak;\n \t\t    }\n \t\t  if (args != 0)\n-\t\t    warning (OPT_Wsuggest_attribute_format, \"function might \"\n-\t\t\t     \"be possible candidate for %qs format attribute\",\n+\t\t    warning (OPT_Wsuggest_attribute_format, \"function %qD \"\n+\t\t\t     \"might be a candidate for %qs format attribute\",\n+\t\t\t     current_function_decl,\n \t\t\t     format_types[info.format_type].name);\n \t\t}\n \t    }"}, {"sha": "4e24658c99384033a4f6adc9cafa8e19557bb130", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a42e7952b0af76c0c16d341d25eaad7f044b5dc4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a42e7952b0af76c0c16d341d25eaad7f044b5dc4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a42e7952b0af76c0c16d341d25eaad7f044b5dc4", "patch": "@@ -1,3 +1,8 @@\n+2016-09-06 Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/77336\n+\t* gcc.dg/format/miss-7.c: New test.\n+\n 2016-09-06  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gfortran.dg/c_by_val_1.f: Correct the call to c_to_c and c_to_c8."}, {"sha": "828b781e0e697e97d84a3e363a7c692bb0c494d5", "filename": "gcc/testsuite/gcc.dg/format/miss-7.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a42e7952b0af76c0c16d341d25eaad7f044b5dc4/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fmiss-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a42e7952b0af76c0c16d341d25eaad7f044b5dc4/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fmiss-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fmiss-7.c?ref=a42e7952b0af76c0c16d341d25eaad7f044b5dc4", "patch": "@@ -0,0 +1,36 @@\n+/* PR77336 - -Wsuggest-attribute=format warning overly simplistic */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wsuggest-attribute=format\" } */\n+\n+#include \"format.h\"\n+\n+const char format[] = \"%i\";\n+\n+void foo (char *d, unsigned n, va_list va)\n+{\n+  (void)&n;\n+\n+  /* The following calls don't imply that the enclosing function is\n+     a candiate for the format attribute because it uses a string\n+     constant as the format.  */\n+  vsnprintf (d, n, \"%i\", va);\n+\n+  vsnprintf (d, n, format, va);\n+\n+  /* In theory this should not trigger the warning either but GCC\n+     doesn't treat the local static constant the same way as the\n+     global and issues a false positive.\n+  const char fmt[] = \"%i\";\n+  vsnprintf (d, n, fmt, va);\n+  */\n+}\n+\n+void bar (char *d, unsigned n, const char *f, va_list va)\n+{\n+  (void)&n;\n+\n+  /* The following call suggests that the enclosing function might\n+     be a candiate for the format attribute because it doesn't use\n+     a string literal as the format.  */\n+  vsnprintf (d, n, f, va);   /* { dg-warning \"function .bar. might be a candidate for .gnu_printf. format attribute\" } */\n+}"}]}