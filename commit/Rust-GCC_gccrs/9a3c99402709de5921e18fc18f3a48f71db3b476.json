{"sha": "9a3c99402709de5921e18fc18f3a48f71db3b476", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWEzYzk5NDAyNzA5ZGU1OTIxZTE4ZmMxOGYzYTQ4ZjcxZGIzYjQ3Ng==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2008-05-27T10:44:21Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-27T10:44:21Z"}, "message": "makeutl.adb: Minor reformatting\n\n2008-05-27  Robert Dewar  <dewar@adacore.com>\n\n\t* makeutl.adb: Minor reformatting\n\t* prj-nmsc.adb: Minor reformatting\n\t* s-stausa.adb: Minor reformatting\n\t* s-stausa.ads: Minor reformatting\n\t* sem_ch6.adb: Minor reformatting\n\nFrom-SVN: r136005", "tree": {"sha": "13f37c41f2ec345b0316a95404fb6281de178a42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13f37c41f2ec345b0316a95404fb6281de178a42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a3c99402709de5921e18fc18f3a48f71db3b476", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a3c99402709de5921e18fc18f3a48f71db3b476", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a3c99402709de5921e18fc18f3a48f71db3b476", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a3c99402709de5921e18fc18f3a48f71db3b476/comments", "author": null, "committer": null, "parents": [{"sha": "6ba6b1e33331f89ae41ce79e4edf3aee5b744f9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ba6b1e33331f89ae41ce79e4edf3aee5b744f9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ba6b1e33331f89ae41ce79e4edf3aee5b744f9c"}], "stats": {"total": 94, "additions": 46, "deletions": 48}, "files": [{"sha": "442f4312126f906222df9b5b9d882456982bdaa7", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a3c99402709de5921e18fc18f3a48f71db3b476/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a3c99402709de5921e18fc18f3a48f71db3b476/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=9a3c99402709de5921e18fc18f3a48f71db3b476", "patch": "@@ -528,7 +528,6 @@ package body Makeutl is\n       begin\n          if Current in Names.First .. Names.Last then\n             return Names.Table (Current).Location;\n-\n          else\n             return No_Location;\n          end if;\n@@ -542,7 +541,6 @@ package body Makeutl is\n       begin\n          if Current >= Names.Last then\n             return \"\";\n-\n          else\n             Current := Current + 1;\n             return Get_Name_String (Names.Table (Current).File_Name);"}, {"sha": "54877c812ee8a3232194b3bed6d9bdb5cc5e273e", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a3c99402709de5921e18fc18f3a48f71db3b476/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a3c99402709de5921e18fc18f3a48f71db3b476/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=9a3c99402709de5921e18fc18f3a48f71db3b476", "patch": "@@ -8595,18 +8595,18 @@ package body Prj.Nmsc is\n                  and then Src_Data.Unit = Unit\n                  and then\n                    ((Src_Data.Kind = Spec and then Kind = Impl)\n-                    or else\n+                      or else\n                     (Src_Data.Kind = Impl and then Kind = Spec))\n                then\n                   Other_Part := Source;\n \n                elsif (Unit /= No_Name\n                        and then Src_Data.Unit = Unit\n-                      and then\n-                        (Src_Data.Kind = Kind\n-                         or else\n+                       and then\n+                         (Src_Data.Kind = Kind\n+                            or else\n                          (Src_Data.Kind = Sep and then Kind = Impl)\n-                         or else\n+                            or else\n                          (Src_Data.Kind = Impl and then Kind = Sep)))\n                  or else (Unit = No_Name and then Src_Data.File = File_Name)\n                then"}, {"sha": "07668da318ee0346577ad7ff58f6d094d45f0d8d", "filename": "gcc/ada/s-stausa.adb", "status": "modified", "additions": 23, "deletions": 19, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a3c99402709de5921e18fc18f3a48f71db3b476/gcc%2Fada%2Fs-stausa.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a3c99402709de5921e18fc18f3a48f71db3b476/gcc%2Fada%2Fs-stausa.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stausa.adb?ref=9a3c99402709de5921e18fc18f3a48f71db3b476", "patch": "@@ -259,21 +259,24 @@ package body System.Stack_Usage is\n       --  likely to happen.\n \n       Current_Stack_Level : aliased Integer;\n+\n    begin\n       --  Reajust the pattern size. When we arrive in this function, there is\n       --  already a given amount of stack used, that we won't analyze.\n \n-      Analyzer.Stack_Used_When_Filling := Stack_Size\n-        (Analyzer.Bottom_Of_Stack,\n-         To_Stack_Address (Current_Stack_Level'Address))\n-        + Natural (Current_Stack_Level'Size);\n+      Analyzer.Stack_Used_When_Filling :=\n+        Stack_Size\n+         (Analyzer.Bottom_Of_Stack,\n+          To_Stack_Address (Current_Stack_Level'Address))\n+          + Natural (Current_Stack_Level'Size);\n \n-      Analyzer.Pattern_Size := Analyzer.Pattern_Size\n-        - Analyzer.Stack_Used_When_Filling;\n+      Analyzer.Pattern_Size :=\n+        Analyzer.Pattern_Size - Analyzer.Stack_Used_When_Filling;\n \n       declare\n          Stack : aliased Stack_Slots\n-           (1 .. Analyzer.Pattern_Size / Bytes_Per_Pattern);\n+                           (1 .. Analyzer.Pattern_Size / Bytes_Per_Pattern);\n+\n       begin\n          Stack := (others => Analyzer.Pattern);\n \n@@ -318,8 +321,7 @@ package body System.Stack_Usage is\n \n       Analyzer.Task_Name := (others => ' ');\n \n-      --  Compute the task name, and truncate it if it's bigger than\n-      --  Task_Name_Length\n+      --  Compute the task name, and truncate if bigger than Task_Name_Length\n \n       if Task_Name'Length <= Task_Name_Length then\n          Analyzer.Task_Name (1 .. Task_Name'Length) := Task_Name;\n@@ -538,16 +540,18 @@ package body System.Stack_Usage is\n \n    procedure Report_Result (Analyzer : Stack_Analyzer) is\n       Measure : constant Natural :=\n-        Stack_Size\n-          (Analyzer.Topmost_Touched_Mark,\n-           Analyzer.Bottom_Of_Stack)\n-        + Analyzer.Stack_Used_When_Filling;\n-      Result : constant Task_Result :=\n-        (Task_Name      => Analyzer.Task_Name,\n-         Max_Size       => Analyzer.Stack_Size,\n-         Min_Measure    => Measure,\n-         Max_Measure    => Measure + Analyzer.Stack_Size\n-         - Analyzer.Pattern_Size);\n+                  Stack_Size\n+                    (Analyzer.Topmost_Touched_Mark,\n+                     Analyzer.Bottom_Of_Stack)\n+                  + Analyzer.Stack_Used_When_Filling;\n+\n+      Result  : constant Task_Result :=\n+                  (Task_Name      => Analyzer.Task_Name,\n+                   Max_Size       => Analyzer.Stack_Size,\n+                   Min_Measure    => Measure,\n+                   Max_Measure    => Measure + Analyzer.Stack_Size\n+                                             - Analyzer.Pattern_Size);\n+\n    begin\n       if Analyzer.Result_Id in Result_Array'Range then\n "}, {"sha": "7c500bffaec74887260126239f6008cac2915165", "filename": "gcc/ada/s-stausa.ads", "status": "modified", "additions": 16, "deletions": 20, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a3c99402709de5921e18fc18f3a48f71db3b476/gcc%2Fada%2Fs-stausa.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a3c99402709de5921e18fc18f3a48f71db3b476/gcc%2Fada%2Fs-stausa.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stausa.ads?ref=9a3c99402709de5921e18fc18f3a48f71db3b476", "patch": "@@ -41,10 +41,6 @@ package System.Stack_Usage is\n \n    package SSE renames System.Storage_Elements;\n \n-   --  The alignment clause seems dubious, what about architectures where\n-   --  the maximum alignment is less than 4???\n-   --  Anyway, why not use Interfaces.Unsigned_32???\n-\n    subtype Stack_Address is SSE.Integer_Address;\n    --  Address on the stack\n \n@@ -53,9 +49,8 @@ package System.Stack_Usage is\n       renames System.Storage_Elements.To_Integer;\n \n    type Stack_Analyzer is private;\n-   --  Type of the stack analyzer tool. It is used to fill a portion of\n-   --  the stack with Pattern, and to compute the stack used after some\n-   --  execution.\n+   --  Type of the stack analyzer tool. It is used to fill a portion of the\n+   --  stack with Pattern, and to compute the stack used after some execution.\n \n    --  Usage:\n \n@@ -90,9 +85,9 @@ package System.Stack_Usage is\n    --  Errors:\n    --\n    --  We are instrumenting the code to measure the stack used by the user\n-   --  code. This method has a number of systematic errors, but several\n-   --  methods can be used to evaluate or reduce those errors. Here are\n-   --  those errors and the strategy that we use to deal with them:\n+   --  code. This method has a number of systematic errors, but several methods\n+   --  can be used to evaluate or reduce those errors. Here are those errors\n+   --  and the strategy that we use to deal with them:\n \n    --  Bottom offset:\n \n@@ -164,8 +159,8 @@ package System.Stack_Usage is\n    --     Description: The pattern zone does not fit on the stack. This may\n    --       lead to an erroneous execution.\n \n-   --    Strategy: Specify a storage size that is bigger than the size of the\n-   --      pattern. 2 times bigger should be enough.\n+   --     Strategy: Specify a storage size that is bigger than the size of the\n+   --       pattern. 2 times bigger should be enough.\n \n    --   Augmentation of the user stack frames:\n \n@@ -220,8 +215,8 @@ package System.Stack_Usage is\n    --  Should be called before any use of a Stack_Analyzer, to initialize it.\n    --  Max_Pattern_Size is the size of the pattern zone, might be smaller than\n    --  the full stack size in order to take into account e.g. the secondary\n-   --  stack and a gard against overflow. The actual size taken will be\n-   --  reajusted, with data already used at the time the stack is actually\n+   --  stack and a guard against overflow. The actual size taken will be\n+   --  reajusted with data already used at the time the stack is actually\n    --  filled.\n \n    Is_Enabled : Boolean := False;\n@@ -320,15 +315,16 @@ private\n    Compute_Environment_Task  : Boolean;\n \n    type Task_Result is record\n-      Task_Name      : String (1 .. Task_Name_Length);\n-      Min_Measure    : Natural;\n-      --  Minimal value for the measure.\n+      Task_Name : String (1 .. Task_Name_Length);\n+\n+      Min_Measure : Natural;\n+      --  Minimum value for the measure\n \n-      Max_Measure    : Natural;\n-      --  Maximal value for the measure, taking into account the actual size\n+      Max_Measure : Natural;\n+      --  Maximum value for the measure, taking into account the actual size\n       --  of the pattern filled.\n \n-      Max_Size       : Natural;\n+      Max_Size : Natural;\n    end record;\n \n    type Result_Array_Type is array (Positive range <>) of Task_Result;"}, {"sha": "14a305b5090759c7fd018b24c7a55b56687a23aa", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a3c99402709de5921e18fc18f3a48f71db3b476/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a3c99402709de5921e18fc18f3a48f71db3b476/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=9a3c99402709de5921e18fc18f3a48f71db3b476", "patch": "@@ -5826,10 +5826,10 @@ package body Sem_Ch6 is\n \n       elsif Implements_Interface (Typ, Iface) then\n          if (Ekind (Etype (Prim)) = E_Anonymous_Access_Type)\n-            /= (Ekind (Etype (Iface_Prim)) = E_Anonymous_Access_Type)\n+              /=\n+            (Ekind (Etype (Iface_Prim)) = E_Anonymous_Access_Type)\n          then\n             return False;\n-\n          else\n             return\n               Type_Conformant (Prim, Iface_Prim,"}]}