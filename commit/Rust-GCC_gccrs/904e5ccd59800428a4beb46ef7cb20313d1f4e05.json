{"sha": "904e5ccd59800428a4beb46ef7cb20313d1f4e05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA0ZTVjY2Q1OTgwMDQyOGE0YmViNDZlZjdjYjIwMzEzZDFmNGUwNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-01-27T16:33:39Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2014-01-27T16:33:39Z"}, "message": "re PR bootstrap/59934 (Bootstrap fail since r206941: expmed.h:252:33: error: array subscript is above array bounds)\n\n       PR bootstrap/59934\n        * expmed.h (expmed_mode_index): Rework so that analysis and optimziers\n        know when the MODE_PARTIAL_INT and MODE_VECTOR_INT cases can never be\n        reached.\n\nFrom-SVN: r207137", "tree": {"sha": "26d81ac85799658a9f470a135d72f105684f54b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26d81ac85799658a9f470a135d72f105684f54b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/904e5ccd59800428a4beb46ef7cb20313d1f4e05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/904e5ccd59800428a4beb46ef7cb20313d1f4e05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/904e5ccd59800428a4beb46ef7cb20313d1f4e05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/904e5ccd59800428a4beb46ef7cb20313d1f4e05/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "48b08b187f27bfe437479ae68a54508cb59251b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48b08b187f27bfe437479ae68a54508cb59251b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48b08b187f27bfe437479ae68a54508cb59251b5"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "95a324cebcacfd66e0dfc20fa2ffbfc0577fc4f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/904e5ccd59800428a4beb46ef7cb20313d1f4e05/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/904e5ccd59800428a4beb46ef7cb20313d1f4e05/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=904e5ccd59800428a4beb46ef7cb20313d1f4e05", "patch": "@@ -1,3 +1,10 @@\n+2014-01-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR bootstrap/59934\n+\t* expmed.h (expmed_mode_index): Rework so that analysis and optimziers\n+\tknow when the MODE_PARTIAL_INT and MODE_VECTOR_INT cases can never be\n+\treached.\n+\n 2014-01-27  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* common/config/arm/arm-common.c"}, {"sha": "4d01d1f0ec8b8c30fc4a6c23db8d42af0734f0c5", "filename": "gcc/expmed.h", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/904e5ccd59800428a4beb46ef7cb20313d1f4e05/gcc%2Fexpmed.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/904e5ccd59800428a4beb46ef7cb20313d1f4e05/gcc%2Fexpmed.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.h?ref=904e5ccd59800428a4beb46ef7cb20313d1f4e05", "patch": "@@ -221,12 +221,21 @@ expmed_mode_index (enum machine_mode mode)\n     case MODE_INT:\n       return mode - MIN_MODE_INT;\n     case MODE_PARTIAL_INT:\n-      return mode - MIN_MODE_PARTIAL_INT + NUM_MODE_INT;\n+      /* If there are no partial integer modes, help the compiler\n+\t to figure out this will never happen.  See PR59934.  */\n+      if (MIN_MODE_PARTIAL_INT != VOIDmode)\n+\treturn mode - MIN_MODE_PARTIAL_INT + NUM_MODE_INT;\n+      break;\n     case MODE_VECTOR_INT:\n-      return mode - MIN_MODE_VECTOR_INT + NUM_MODE_IP_INT;\n+      /* If there are no vector integer modes, help the compiler\n+\t to figure out this will never happen.  See PR59934.  */\n+      if (MIN_MODE_VECTOR_INT != VOIDmode)\n+\treturn mode - MIN_MODE_VECTOR_INT + NUM_MODE_IP_INT;\n+      break;\n     default:\n-      gcc_unreachable ();\n+      break;\n     }\n+  gcc_unreachable ();\n }\n \n /* Return a pointer to a boolean contained in EOC indicating whether"}]}