{"sha": "12eabbda6bd7fab8482c288ed30c73b15c49680c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJlYWJiZGE2YmQ3ZmFiODQ4MmMyODhlZDMwYzczYjE1YzQ5NjgwYw==", "commit": {"author": {"name": "Simon Wright", "email": "simon@pushface.org", "date": "2013-02-07T18:07:18Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2013-02-07T18:07:18Z"}, "message": "re PR target/50678 (FAIL: c52104y on x86_64-apple-darwin10)\n\n\tPR target/50678\n\t* init.c (__darwin_major_version): New function for x86-64/Darwin.\n\t(__gnat_adjust_context_for_raise) [Darwin]: Disable the workaround\n\ton Darwin 12 and above.\n\nFrom-SVN: r195862", "tree": {"sha": "c8a4d160a84cb95d6996c7358cba3d60ef424b6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8a4d160a84cb95d6996c7358cba3d60ef424b6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12eabbda6bd7fab8482c288ed30c73b15c49680c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12eabbda6bd7fab8482c288ed30c73b15c49680c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12eabbda6bd7fab8482c288ed30c73b15c49680c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12eabbda6bd7fab8482c288ed30c73b15c49680c/comments", "author": {"login": "simonjwright", "id": 1824512, "node_id": "MDQ6VXNlcjE4MjQ1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1824512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonjwright", "html_url": "https://github.com/simonjwright", "followers_url": "https://api.github.com/users/simonjwright/followers", "following_url": "https://api.github.com/users/simonjwright/following{/other_user}", "gists_url": "https://api.github.com/users/simonjwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonjwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonjwright/subscriptions", "organizations_url": "https://api.github.com/users/simonjwright/orgs", "repos_url": "https://api.github.com/users/simonjwright/repos", "events_url": "https://api.github.com/users/simonjwright/events{/privacy}", "received_events_url": "https://api.github.com/users/simonjwright/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "553752e19f26f21464f4be36be574440040c9db4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/553752e19f26f21464f4be36be574440040c9db4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/553752e19f26f21464f4be36be574440040c9db4"}], "stats": {"total": 59, "additions": 50, "deletions": 9}, "files": [{"sha": "b7c755200de8dcbbd7b2c680cdddfcc984b75d5d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12eabbda6bd7fab8482c288ed30c73b15c49680c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12eabbda6bd7fab8482c288ed30c73b15c49680c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=12eabbda6bd7fab8482c288ed30c73b15c49680c", "patch": "@@ -1,3 +1,10 @@\n+2013-02-07  Simon Wright  <simon@pushface.org>\n+\n+\tPR target/50678\n+\t* init.c (__darwin_major_version): New function for x86-64/Darwin.\n+\t(__gnat_adjust_context_for_raise) [Darwin]: Disable the workaround\n+\ton Darwin 12 and above.\n+\n 2013-02-06  Rainer Emrich  <rainer@emrich-ebersheim.de>\n \n \tPR target/52123"}, {"sha": "f5c3a814411559e28b395a63f21cdb8e947f9c97", "filename": "gcc/ada/init.c", "status": "modified", "additions": 43, "deletions": 9, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12eabbda6bd7fab8482c288ed30c73b15c49680c/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12eabbda6bd7fab8482c288ed30c73b15c49680c/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=12eabbda6bd7fab8482c288ed30c73b15c49680c", "patch": "@@ -2056,7 +2056,9 @@ __gnat_install_handler(void)\n #elif defined(__APPLE__)\n \n #include <signal.h>\n+#include <stdlib.h>\n #include <sys/syscall.h>\n+#include <sys/sysctl.h>\n #include <mach/mach_vm.h>\n #include <mach/mach_init.h>\n #include <mach/vm_statistics.h>\n@@ -2095,20 +2097,52 @@ __gnat_is_stack_guard (mach_vm_address_t addr)\n \n #define HAVE_GNAT_ADJUST_CONTEXT_FOR_RAISE\n \n+#if defined (__x86_64__)\n+static int\n+__darwin_major_version (void)\n+{\n+  static int cache = -1;\n+  if (cache < 0)\n+    {\n+      int mib[2] = {CTL_KERN, KERN_OSRELEASE};\n+      size_t len;\n+\n+      /* Find out how big the buffer needs to be (and set cache to 0\n+         on failure).  */\n+      if (sysctl (mib, 2, NULL, &len, NULL, 0) == 0)\n+        {\n+          char release[len];\n+          sysctl (mib, 2, release, &len, NULL, 0);\n+          /* Darwin releases are of the form L.M.N where L is the major\n+             version, so strtol will return L.  */\n+          cache = (int) strtol (release, NULL, 10);\n+        }\n+      else\n+        {\n+          cache = 0;\n+        }\n+    }\n+  return cache;\n+}\n+#endif\n+\n void\n __gnat_adjust_context_for_raise (int signo ATTRIBUTE_UNUSED,\n \t\t\t\t void *ucontext ATTRIBUTE_UNUSED)\n {\n #if defined (__x86_64__)\n-  /* Work around radar #10302855/pr50678, where the unwinders (libunwind or\n-     libgcc_s depending on the system revision) and the DWARF unwind data for\n-     the sigtramp have different ideas about register numbering (causing rbx\n-     and rdx to be transposed)..  */\n-  ucontext_t *uc = (ucontext_t *)ucontext ;\n-  unsigned long t = uc->uc_mcontext->__ss.__rbx;\n-\n-  uc->uc_mcontext->__ss.__rbx = uc->uc_mcontext->__ss.__rdx;\n-  uc->uc_mcontext->__ss.__rdx = t;\n+  if (__darwin_major_version () < 12)\n+    {\n+      /* Work around radar #10302855, where the unwinders (libunwind or\n+\t libgcc_s depending on the system revision) and the DWARF unwind\n+\t data for sigtramp have different ideas about register numbering,\n+\t causing rbx and rdx to be transposed.  */\n+      ucontext_t *uc = (ucontext_t *)ucontext;\n+      unsigned long t = uc->uc_mcontext->__ss.__rbx;\n+\n+      uc->uc_mcontext->__ss.__rbx = uc->uc_mcontext->__ss.__rdx;\n+      uc->uc_mcontext->__ss.__rdx = t;\n+    }\n #endif\n }\n "}]}