{"sha": "0cc1540d55a2e7ff710588b78c0b6efc8dc6a51f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNjMTU0MGQ1NWEyZTdmZjcxMDU4OGI3OGMwYjZlZmM4ZGM2YTUxZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-12T08:08:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-12T08:08:10Z"}, "message": "Minor reformatting.\n\nFrom-SVN: r223037", "tree": {"sha": "559b963f6e7c4987fc9aee7df337164a14153e5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/559b963f6e7c4987fc9aee7df337164a14153e5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cc1540d55a2e7ff710588b78c0b6efc8dc6a51f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cc1540d55a2e7ff710588b78c0b6efc8dc6a51f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cc1540d55a2e7ff710588b78c0b6efc8dc6a51f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cc1540d55a2e7ff710588b78c0b6efc8dc6a51f/comments", "author": null, "committer": null, "parents": [{"sha": "84dad5564e15efedd6e41950ae856ec3bb201052", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84dad5564e15efedd6e41950ae856ec3bb201052", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84dad5564e15efedd6e41950ae856ec3bb201052"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "1bafe663fe1e9975712099e6240d7ac2de0afb7a", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cc1540d55a2e7ff710588b78c0b6efc8dc6a51f/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cc1540d55a2e7ff710588b78c0b6efc8dc6a51f/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=0cc1540d55a2e7ff710588b78c0b6efc8dc6a51f", "patch": "@@ -8133,7 +8133,7 @@ package body Exp_Util is\n \n    begin\n       --  If the expression is the RHS of an assignment or object declaration\n-      --   we are always OK because there will always be a target.\n+      --  we are always OK because there will always be a target.\n \n       --  Object renaming declarations, (generated for view conversions of\n       --  actuals in inlined calls), like object declarations, provide an\n@@ -8174,8 +8174,8 @@ package body Exp_Util is\n          Otyp := Entity (Subtype_Mark (Exp));\n       end if;\n \n-      --  The input type always comes from the expression, and we assume\n-      --  this is indeed always analyzed, so we can simply get the Etype.\n+      --  The input type always comes from the expression, and we assume this\n+      --  is indeed always analyzed, so we can simply get the Etype.\n \n       Ityp := Etype (Expression (Exp));\n \n@@ -8246,8 +8246,8 @@ package body Exp_Util is\n       then\n          return True;\n \n-      --  If either type is tagged, then we know the alignment is OK so\n-      --  Gigi will be able to use pointer punning.\n+      --  If either type is tagged, then we know the alignment is OK so Gigi\n+      --  will be able to use pointer punning.\n \n       elsif Is_Tagged_Type (Otyp) or else Is_Tagged_Type (Ityp) then\n          return True;"}]}