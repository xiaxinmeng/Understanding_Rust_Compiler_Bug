{"sha": "652bef70d392f9541b12ef65b461009c8c8fd54a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjUyYmVmNzBkMzkyZjk1NDFiMTJlZjY1YjQ2MTAwOWM4YzhmZDU0YQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-09-04T15:28:00Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-09-06T12:13:47Z"}, "message": "x86: Add non-destructive source to @xorsign<mode>3_1\n\nAdd non-destructive source alternative to @xorsign<mode>3_1 for AVX.\n\ngcc/\n\n\tPR target/89984\n\t* config/i386/i386-expand.c (ix86_split_xorsign): Use operands[2].\n\t* config/i386/i386.md (@xorsign<mode>3_1): Add non-destructive\n\tsource alternative for AVX.\n\ngcc/testsuite/\n\n\tPR target/89984\n\t* gcc.target/i386/pr89984-1.c: New test.\n\t* gcc.target/i386/pr89984-2.c: Likewise.\n\t* gcc.target/i386/xorsign-avx.c: Likewise.", "tree": {"sha": "c64312ed9038e9f61801558203050d358cc05a16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c64312ed9038e9f61801558203050d358cc05a16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/652bef70d392f9541b12ef65b461009c8c8fd54a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/652bef70d392f9541b12ef65b461009c8c8fd54a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/652bef70d392f9541b12ef65b461009c8c8fd54a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/652bef70d392f9541b12ef65b461009c8c8fd54a/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93e6809459f34ca7b5928f1729246b2e9dfb3eb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93e6809459f34ca7b5928f1729246b2e9dfb3eb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93e6809459f34ca7b5928f1729246b2e9dfb3eb4"}], "stats": {"total": 46, "additions": 36, "deletions": 10}, "files": [{"sha": "273a0ba8e3dc3ecb29c0603e3ba83fa653dc0f72", "filename": "gcc/config/i386/i386-expand.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/652bef70d392f9541b12ef65b461009c8c8fd54a/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/652bef70d392f9541b12ef65b461009c8c8fd54a/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.c?ref=652bef70d392f9541b12ef65b461009c8c8fd54a", "patch": "@@ -2279,21 +2279,24 @@ void\n ix86_split_xorsign (rtx operands[])\n {\n   machine_mode mode, vmode;\n-  rtx dest, op0, mask, x;\n+  rtx dest, op0, op1, mask, x;\n \n   dest = operands[0];\n   op0 = operands[1];\n+  op1 = operands[2];\n   mask = operands[3];\n \n   mode = GET_MODE (dest);\n   vmode = GET_MODE (mask);\n \n-  dest = lowpart_subreg (vmode, dest, mode);\n-  x = gen_rtx_AND (vmode, dest, mask);\n-  emit_insn (gen_rtx_SET (dest, x));\n+  op1 = lowpart_subreg (vmode, op1, mode);\n+  x = gen_rtx_AND (vmode, op1, mask);\n+  emit_insn (gen_rtx_SET (op1, x));\n \n   op0 = lowpart_subreg (vmode, op0, mode);\n-  x = gen_rtx_XOR (vmode, dest, op0);\n+  x = gen_rtx_XOR (vmode, op1, op0);\n+\n+  dest = lowpart_subreg (vmode, dest, mode);\n   emit_insn (gen_rtx_SET (dest, x));\n }\n "}, {"sha": "18b91c77937271335698ff9d80de435405379e5d", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/652bef70d392f9541b12ef65b461009c8c8fd54a/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/652bef70d392f9541b12ef65b461009c8c8fd54a/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=652bef70d392f9541b12ef65b461009c8c8fd54a", "patch": "@@ -10806,17 +10806,18 @@\n   \"ix86_expand_xorsign (operands); DONE;\")\n \n (define_insn_and_split \"@xorsign<mode>3_1\"\n-  [(set (match_operand:MODEF 0 \"register_operand\" \"=Yv\")\n+  [(set (match_operand:MODEF 0 \"register_operand\" \"=Yv,Yv\")\n \t(unspec:MODEF\n-\t  [(match_operand:MODEF 1 \"register_operand\" \"Yv\")\n-\t   (match_operand:MODEF 2 \"register_operand\" \"0\")\n-\t   (match_operand:<ssevecmode> 3 \"nonimmediate_operand\" \"Yvm\")]\n+\t  [(match_operand:MODEF 1 \"register_operand\" \"Yv,Yv\")\n+\t   (match_operand:MODEF 2 \"register_operand\" \"0,Yv\")\n+\t   (match_operand:<ssevecmode> 3 \"nonimmediate_operand\" \"Yvm,Yvm\")]\n \t  UNSPEC_XORSIGN))]\n   \"SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\"\n   \"#\"\n   \"&& reload_completed\"\n   [(const_int 0)]\n-  \"ix86_split_xorsign (operands); DONE;\")\n+  \"ix86_split_xorsign (operands); DONE;\"\n+  [(set_attr \"isa\" \"noavx,avx\")])\n \f\n ;; One complement instructions\n "}, {"sha": "d77691c0da07a7208fefd3c0395fc019046886e0", "filename": "gcc/testsuite/gcc.target/i386/pr89984-1.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/652bef70d392f9541b12ef65b461009c8c8fd54a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89984-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/652bef70d392f9541b12ef65b461009c8c8fd54a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89984-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89984-1.c?ref=652bef70d392f9541b12ef65b461009c8c8fd54a", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -mno-avx -msse2\" } */\n+\n+float\n+check_f_pos (float x, float y)\n+{\n+  return x * __builtin_copysignf (1.0f, y);\n+}"}, {"sha": "ff6a8e50573301d2a014c98e5c9db67ea588194e", "filename": "gcc/testsuite/gcc.target/i386/pr89984-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/652bef70d392f9541b12ef65b461009c8c8fd54a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89984-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/652bef70d392f9541b12ef65b461009c8c8fd54a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89984-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89984-2.c?ref=652bef70d392f9541b12ef65b461009c8c8fd54a", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -mavx\" } */\n+\n+float\n+check_f_pos (float x, float y)\n+{\n+  return x * __builtin_copysignf (1.0f, y);\n+}\n+\n+/* { dg-final { scan-assembler-not \"vmovaps\" } } */"}, {"sha": "f2e2054b6fb15b6f8e1926cc862721c27006d72e", "filename": "gcc/testsuite/gcc.target/i386/xorsign-avx.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/652bef70d392f9541b12ef65b461009c8c8fd54a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxorsign-avx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/652bef70d392f9541b12ef65b461009c8c8fd54a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxorsign-avx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxorsign-avx.c?ref=652bef70d392f9541b12ef65b461009c8c8fd54a", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do run { target avx_runtime } } */\n+/* { dg-options \"-O2 -mavx -mfpmath=sse -ftree-vectorize\" } */\n+\n+#include \"xorsign.c\""}]}