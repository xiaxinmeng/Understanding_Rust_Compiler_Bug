{"sha": "eb0a45986f505b3d55aa74a30d24c2341f47fcf3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIwYTQ1OTg2ZjUwNWIzZDU1YWE3NGEzMGQyNGMyMzQxZjQ3ZmNmMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-04-08T07:13:49Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-04-08T07:13:49Z"}, "message": "(Task_Address): New subtype of System.Address\n\n(Task_Address): New subtype of System.Address\n(Task_Address_Size): New constant size of System.Address\n(Alternate_Stack_Size): New constant.\n\nFrom-SVN: r134079", "tree": {"sha": "869ca500893bc6c068cedb4e1671a265df34d337", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/869ca500893bc6c068cedb4e1671a265df34d337"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb0a45986f505b3d55aa74a30d24c2341f47fcf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb0a45986f505b3d55aa74a30d24c2341f47fcf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb0a45986f505b3d55aa74a30d24c2341f47fcf3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb0a45986f505b3d55aa74a30d24c2341f47fcf3/comments", "author": null, "committer": null, "parents": [{"sha": "9874e252439e6e9ba21829d257201fa02a87259e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9874e252439e6e9ba21829d257201fa02a87259e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9874e252439e6e9ba21829d257201fa02a87259e"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "23723f829a45f396e38a8279fa769d692ad50634", "filename": "gcc/ada/s-taspri-posix.ads", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb0a45986f505b3d55aa74a30d24c2341f47fcf3/gcc%2Fada%2Fs-taspri-posix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb0a45986f505b3d55aa74a30d24c2341f47fcf3/gcc%2Fada%2Fs-taspri-posix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taspri-posix.ads?ref=eb0a45986f505b3d55aa74a30d24c2341f47fcf3", "patch": "@@ -65,6 +65,18 @@ package System.Task_Primitives is\n    --  A component of this type is guaranteed to be included in the\n    --  Ada_Task_Control_Block.\n \n+   subtype Task_Address is System.Address;\n+   --  In some versions of Task_Primitives, notably for VMS, Task_Address is\n+   --  the short version of address defined in System.Aux_DEC. To avoid\n+   --  dragging Aux_DEC into tasking packages a tasking specific subtype is\n+   --  defined here.\n+\n+   Task_Address_Size : constant := Standard'Address_Size;\n+   --  The size of Task_Address\n+\n+   Alternate_Stack_Size : constant := System.OS_Interface.Alternate_Stack_Size;\n+   --  Import value from System.OS_Interface\n+\n private\n \n    type Lock is new System.OS_Interface.pthread_mutex_t;"}, {"sha": "8f5cb28bc59072727f25df069ef6a9677ddba470", "filename": "gcc/ada/s-taspri-vms.ads", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb0a45986f505b3d55aa74a30d24c2341f47fcf3/gcc%2Fada%2Fs-taspri-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb0a45986f505b3d55aa74a30d24c2341f47fcf3/gcc%2Fada%2Fs-taspri-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taspri-vms.ads?ref=eb0a45986f505b3d55aa74a30d24c2341f47fcf3", "patch": "@@ -42,6 +42,7 @@ pragma Polling (Off);\n with Interfaces.C;\n \n with System.OS_Interface;\n+with System.Aux_DEC;\n \n package System.Task_Primitives is\n    pragma Preelaborate;\n@@ -66,6 +67,17 @@ package System.Task_Primitives is\n    --  A component of this type is guaranteed to be included in the\n    --  Ada_Task_Control_Block.\n \n+   subtype Task_Address is System.Aux_DEC.Short_Address;\n+   --  Task_Address is the short version of address defined in System.Aux_DEC.\n+   --  To avoid dragging Aux_DEC into tasking packages a tasking specific\n+   --  subtype is defined here.\n+\n+   Task_Address_Size : constant := System.Aux_DEC.Short_Address_Size;\n+   --  The size of Task_Address\n+\n+   Alternate_Stack_Size : constant := 0;\n+   --  No alternate signal stack is used on this platform\n+\n private\n \n    type Exc_Stack_T is array (0 .. 8192) of aliased Character;"}]}