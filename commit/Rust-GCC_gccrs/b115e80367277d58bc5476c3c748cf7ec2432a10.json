{"sha": "b115e80367277d58bc5476c3c748cf7ec2432a10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjExNWU4MDM2NzI3N2Q1OGJjNTQ3NmMzYzc0OGNmN2VjMjQzMmExMA==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2017-08-08T12:52:22Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2017-08-08T12:52:22Z"}, "message": "re PR tree-optimization/81354 (Segmentation fault in SSA Strength Reduction using -O3)\n\n[gcc]\n\n2017-08-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\tPR tree-optimization/81354\n\t* gimple-ssa-strength-reduction.c (create_add_on_incoming_edge):\n\tInsert on edges rather than explicitly creating landing pads.\n\t(analyze_candidates_and_replace): Commit edge inserts.\n\n\n[gcc/testsuite]\n\n2017-08-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\tPR tree-optimization/81354\n\t* g++.dg/torture/pr81354.C: New file.\n\nFrom-SVN: r250955", "tree": {"sha": "ee1285d136d13ca5a855ccee90ea0165ff209691", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee1285d136d13ca5a855ccee90ea0165ff209691"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b115e80367277d58bc5476c3c748cf7ec2432a10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b115e80367277d58bc5476c3c748cf7ec2432a10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b115e80367277d58bc5476c3c748cf7ec2432a10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b115e80367277d58bc5476c3c748cf7ec2432a10/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "51bd28edcbf49844d696c38af4945ce5fc25ba15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51bd28edcbf49844d696c38af4945ce5fc25ba15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51bd28edcbf49844d696c38af4945ce5fc25ba15"}], "stats": {"total": 70, "additions": 46, "deletions": 24}, "files": [{"sha": "6051e8f50689c088f536522db707514e8ef7425f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b115e80367277d58bc5476c3c748cf7ec2432a10/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b115e80367277d58bc5476c3c748cf7ec2432a10/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b115e80367277d58bc5476c3c748cf7ec2432a10", "patch": "@@ -1,3 +1,8 @@\n+2017-08-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\tPR tree-optimization/81354\n+\t* g++.dg/torture/pr81354.C: New file.\n+\n 2017-08-08  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/81719"}, {"sha": "780e07914f6a971c5e02fd705100d356ae2a8ff4", "filename": "gcc/gimple-ssa-strength-reduction.c", "status": "modified", "additions": 12, "deletions": 24, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b115e80367277d58bc5476c3c748cf7ec2432a10/gcc%2Fgimple-ssa-strength-reduction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b115e80367277d58bc5476c3c748cf7ec2432a10/gcc%2Fgimple-ssa-strength-reduction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-strength-reduction.c?ref=b115e80367277d58bc5476c3c748cf7ec2432a10", "patch": "@@ -2224,8 +2224,6 @@ create_add_on_incoming_edge (slsr_cand_t c, tree basis_name,\n \t\t\t     widest_int increment, edge e, location_t loc,\n \t\t\t     bool known_stride)\n {\n-  basic_block insert_bb;\n-  gimple_stmt_iterator gsi;\n   tree lhs, basis_type;\n   gassign *new_stmt, *cast_stmt = NULL;\n \n@@ -2294,39 +2292,25 @@ create_add_on_incoming_edge (slsr_cand_t c, tree basis_name,\n       }\n     }\n \n-  insert_bb = single_succ_p (e->src) ? e->src : split_edge (e);\n-  gsi = gsi_last_bb (insert_bb);\n-\n-  if (!gsi_end_p (gsi) && stmt_ends_bb_p (gsi_stmt (gsi)))\n+  if (cast_stmt)\n     {\n-      gsi_insert_before (&gsi, new_stmt, GSI_SAME_STMT);\n-      if (cast_stmt)\n-\t{\n-\t  gsi_insert_before (&gsi, cast_stmt, GSI_SAME_STMT);\n-\t  gimple_set_location (cast_stmt, loc);\n-\t}\n-    }\n-  else\n-    {\n-      if (cast_stmt)\n-\t{\n-\t  gsi_insert_after (&gsi, cast_stmt, GSI_NEW_STMT);\n-\t  gimple_set_location (cast_stmt, loc);\n-\t}\n-      gsi_insert_after (&gsi, new_stmt, GSI_NEW_STMT);\n+      gimple_set_location (cast_stmt, loc);\n+      gsi_insert_on_edge (e, cast_stmt);\n     }\n \n   gimple_set_location (new_stmt, loc);\n+  gsi_insert_on_edge (e, new_stmt);\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n       if (cast_stmt)\n \t{\n-\t  fprintf (dump_file, \"Inserting cast in block %d: \",\n-\t\t   insert_bb->index);\n+\t  fprintf (dump_file, \"Inserting cast on edge %d->%d: \",\n+\t\t   e->src->index, e->dest->index);\n \t  print_gimple_stmt (dump_file, cast_stmt, 0);\n \t}\n-      fprintf (dump_file, \"Inserting in block %d: \", insert_bb->index);\n+      fprintf (dump_file, \"Inserting on edge %d->%d: \", e->src->index,\n+\t       e->dest->index);\n       print_gimple_stmt (dump_file, new_stmt, 0);\n     }\n \n@@ -3770,6 +3754,10 @@ analyze_candidates_and_replace (void)\n \t  free (incr_vec);\n \t}\n     }\n+\n+  /* For conditional candidates, we may have uncommitted insertions\n+     on edges to clean up.  */\n+  gsi_commit_edge_inserts ();\n }\n \n namespace {"}, {"sha": "e2d081d8e267009e75e8b0a34cf2e4a7cb4af4bf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b115e80367277d58bc5476c3c748cf7ec2432a10/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b115e80367277d58bc5476c3c748cf7ec2432a10/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b115e80367277d58bc5476c3c748cf7ec2432a10", "patch": "@@ -1,3 +1,8 @@\n+2017-08-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\tPR tree-optimization/81354\n+\t* g++.dg/torture/pr81354.C: New file.\n+\n 2017-08-08  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/81719"}, {"sha": "b3ba8f09371096fccf55913525fbbdc650a52a1f", "filename": "gcc/testsuite/g++.dg/torture/pr81354.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b115e80367277d58bc5476c3c748cf7ec2432a10/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr81354.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b115e80367277d58bc5476c3c748cf7ec2432a10/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr81354.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr81354.C?ref=b115e80367277d58bc5476c3c748cf7ec2432a10", "patch": "@@ -0,0 +1,24 @@\n+// PR81354 reported this test as crashing in a limited range of revisions.\n+// { dg-do compile }\n+\n+struct T { double a; double b; };\n+\n+void foo(T Ad[], int As[2])\n+{\n+  int j;\n+  int i;\n+  int Bs[2] = {0,0};\n+  T Bd[16];\n+\n+  for (j = 0; j < 4; j++) {\n+    for (i = 0; i + 1 <= j + 1; i++) {\n+      Ad[i + As[0] * j] = Bd[i + Bs[0] * j];\n+    }\n+\n+    i = j + 1;  // <- comment out this line and it does not crash\n+    for (; i + 1 < 5; i++) {\n+      Ad[i + As[0] * j].a = 0.0;\n+      Ad[i + As[0] * j].b = 0.0;\n+    }\n+  }\n+}"}]}