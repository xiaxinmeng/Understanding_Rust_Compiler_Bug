{"sha": "cd91501c62733d6bc51340cbbdcb6ca0b8015524", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q5MTUwMWM2MjczM2Q2YmM1MTM0MGNiYmRjYjZjYTBiODAxNTUyNA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@gnat.com", "date": "2004-10-04T14:58:21Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-10-04T14:58:21Z"}, "message": "a-except.adb: Add a comment for last change\n\n2004-10-04  Robert Dewar  <dewar@gnat.com>\n\n\t* a-except.adb: Add a comment for last change\n\n\t* einfo.ads: Minor spelling correction in comment\n\n\t* exp_pakd.adb, gnatdll.adb, prj-attr.ads: Minor reformatting\n\n\t* sem_ch11.adb: Fix a case of using | instead of \\ for continuation\n\tmessages.\n\n\t* sem_util.ads: Minor comment update\n\nFrom-SVN: r88499", "tree": {"sha": "f29e625169dcfc496f3050d84735507fd3f0e5d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f29e625169dcfc496f3050d84735507fd3f0e5d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd91501c62733d6bc51340cbbdcb6ca0b8015524", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd91501c62733d6bc51340cbbdcb6ca0b8015524", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd91501c62733d6bc51340cbbdcb6ca0b8015524", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd91501c62733d6bc51340cbbdcb6ca0b8015524/comments", "author": null, "committer": null, "parents": [{"sha": "c71c53a8554e4bab6e4c375319f1af5d8584b88a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c71c53a8554e4bab6e4c375319f1af5d8584b88a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c71c53a8554e4bab6e4c375319f1af5d8584b88a"}], "stats": {"total": 47, "additions": 27, "deletions": 20}, "files": [{"sha": "e7bd215c0b956d98f1164e3545000a2eba6c305a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd91501c62733d6bc51340cbbdcb6ca0b8015524/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd91501c62733d6bc51340cbbdcb6ca0b8015524/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cd91501c62733d6bc51340cbbdcb6ca0b8015524", "patch": "@@ -1,3 +1,16 @@\n+2004-10-04  Robert Dewar  <dewar@gnat.com>\n+\n+\t* a-except.adb: Add a comment for last change\n+\n+\t* einfo.ads: Minor spelling correction in comment\n+\n+\t* exp_pakd.adb, gnatdll.adb, prj-attr.ads: Minor reformatting\n+\n+\t* sem_ch11.adb: Fix a case of using | instead of \\ for continuation\n+\tmessages.\n+\n+\t* sem_util.ads: Minor comment update\n+\n 2004-10-04  Ed Schonberg  <schonberg@gnat.com>\n \n \t* sem_ch6.adb (Analyze_Subprogram_Body): Do not treat Inline as"}, {"sha": "1ca819011c5379252af7863b11d3943ec05ae5fa", "filename": "gcc/ada/a-except.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd91501c62733d6bc51340cbbdcb6ca0b8015524/gcc%2Fada%2Fa-except.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd91501c62733d6bc51340cbbdcb6ca0b8015524/gcc%2Fada%2Fa-except.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except.adb?ref=cd91501c62733d6bc51340cbbdcb6ca0b8015524", "patch": "@@ -516,6 +516,10 @@ package body Ada.Exceptions is\n    pragma Export (C, Rcheck_28, \"__gnat_rcheck_28\");\n    pragma Export (C, Rcheck_29, \"__gnat_rcheck_29\");\n \n+   --  None of these procedures ever returns (they raise an exception!). By\n+   --  using pragma No_Return, we ensure that any junk code after the call,\n+   --  such as normal return epilog stuff, can be eliminated).\n+\n    pragma No_Return (Rcheck_00);\n    pragma No_Return (Rcheck_01);\n    pragma No_Return (Rcheck_02);"}, {"sha": "863f624da92c7f70c8ac42834cdc9ce731a3a931", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd91501c62733d6bc51340cbbdcb6ca0b8015524/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd91501c62733d6bc51340cbbdcb6ca0b8015524/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=cd91501c62733d6bc51340cbbdcb6ca0b8015524", "patch": "@@ -1614,7 +1614,7 @@ package Einfo is\n --       and packages. Set to Empty unless an export, import, or interface\n --       name pragma has explicitly specified an external name, in which\n --       case it references an N_String_Literal node for the specified\n---       exteral name. In the case of exceptions, the field is set by\n+--       external name. In the case of exceptions, the field is set by\n --       Import_Exception/Export_Exception (which can be used in OpenVMS\n --       versions only). Note that if this field is Empty, and Is_Imported\n --       or Is_Exported is set, then the default interface name is the name"}, {"sha": "f8415093bf3fda10d6e0e352461ab1fb9db3e9c9", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd91501c62733d6bc51340cbbdcb6ca0b8015524/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd91501c62733d6bc51340cbbdcb6ca0b8015524/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=cd91501c62733d6bc51340cbbdcb6ca0b8015524", "patch": "@@ -469,8 +469,7 @@ package body Exp_Pakd is\n \n    function RJ_Unchecked_Convert_To\n      (Typ  : Entity_Id;\n-      Expr : Node_Id)\n-      return Node_Id;\n+      Expr : Node_Id) return Node_Id;\n    --  The packed array code does unchecked conversions which in some cases\n    --  may involve non-discrete types with differing sizes. The semantics of\n    --  such conversions is potentially endian dependent, and the effect we\n@@ -2410,8 +2409,7 @@ package body Exp_Pakd is\n \n    function RJ_Unchecked_Convert_To\n      (Typ  : Entity_Id;\n-      Expr : Node_Id)\n-      return Node_Id\n+      Expr : Node_Id) return Node_Id\n    is\n       Source_Typ : constant Entity_Id := Etype (Expr);\n       Target_Typ : constant Entity_Id := Typ;"}, {"sha": "09f0ea7d903a9a1acac17227cb21cc3801f211bf", "filename": "gcc/ada/gnatdll.adb", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd91501c62733d6bc51340cbbdcb6ca0b8015524/gcc%2Fada%2Fgnatdll.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd91501c62733d6bc51340cbbdcb6ca0b8015524/gcc%2Fada%2Fgnatdll.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatdll.adb?ref=cd91501c62733d6bc51340cbbdcb6ca0b8015524", "patch": "@@ -212,7 +212,6 @@ procedure Gnatdll is\n       procedure Add_File (Filename : in String) is\n       begin\n          if Is_Ali (Filename) then\n-\n             Check (Filename);\n \n             --  Record it to generate the binder program when\n@@ -222,7 +221,6 @@ procedure Gnatdll is\n             A := A + 1;\n \n          elsif Is_Obj (Filename) then\n-\n             Check (Filename);\n \n             --  Just record this object file\n@@ -474,7 +472,6 @@ procedure Gnatdll is\n       end if;\n \n    exception\n-\n       when Invalid_Switch    =>\n          Raise_Exception\n            (Syntax_Error'Identity,\n@@ -484,7 +481,6 @@ procedure Gnatdll is\n          Raise_Exception\n            (Syntax_Error'Identity,\n             Message => \"No parameter for \" & Full_Switch);\n-\n    end Parse_Command_Line;\n \n    -------------------\n@@ -493,7 +489,6 @@ procedure Gnatdll is\n \n    procedure Check_Context is\n    begin\n-\n       Check (To_String (Def_Filename));\n \n       --  Check that each object file specified exists and raise exception\n@@ -529,7 +524,6 @@ begin\n       Check_Context;\n \n       case Build_Mode is\n-\n          when Import_Lib =>\n             MDLL.Build_Import_Library\n               (To_String (Lib_Filename),\n@@ -571,7 +565,6 @@ begin\n    Set_Exit_Status (Success);\n \n exception\n-\n    when SE : Syntax_Error =>\n       Put_Line (\"Syntax error : \" & Exception_Message (SE));\n       New_Line;\n@@ -585,5 +578,4 @@ exception\n    when others =>\n       Put_Line (\"gnatdll: INTERNAL ERROR. Please report\");\n       Set_Exit_Status (Failure);\n-\n end Gnatdll;"}, {"sha": "31042989601b25125efd90606fce8c8676b8c961", "filename": "gcc/ada/prj-attr.ads", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd91501c62733d6bc51340cbbdcb6ca0b8015524/gcc%2Fada%2Fprj-attr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd91501c62733d6bc51340cbbdcb6ca0b8015524/gcc%2Fada%2Fprj-attr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.ads?ref=cd91501c62733d6bc51340cbbdcb6ca0b8015524", "patch": "@@ -96,11 +96,10 @@ package Prj.Attr is\n    procedure Register_New_Package\n      (Name       : String;\n       Attributes : Attribute_Data_Array);\n-   --  Add a new package with its attributes.\n-   --  This procedure can only be called after Initialize, but before any\n-   --  other call to a service of the Project Managers.\n-   --  Fail if the name of the package is empty or not unique, or if the names\n-   --  of the attributes are not different.\n+   --  Add a new package with its attributes. This procedure can only be\n+   --  called after Initialize, but before any other call to a service of\n+   --  the Project Manager. Fail if the name of the package is empty or not\n+   --  unique, or if the names of the attributes are not different.\n \n    ----------------\n    -- Attributes --"}, {"sha": "616b2282308530597e119142ca12c9a6f3b08622", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd91501c62733d6bc51340cbbdcb6ca0b8015524/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd91501c62733d6bc51340cbbdcb6ca0b8015524/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=cd91501c62733d6bc51340cbbdcb6ca0b8015524", "patch": "@@ -247,7 +247,7 @@ package body Sem_Ch11 is\n                              (\"Numeric_Error is an \" &\n                               \"obsolescent feature ('R'M 'J.6(1))?\", Id);\n                            Error_Msg_N\n-                             (\"|use Constraint_Error instead?\", Id);\n+                             (\"\\use Constraint_Error instead?\", Id);\n                         end if;\n                      end if;\n "}, {"sha": "a356eae219ddbbc25b914753d32ec79d6ea9107e", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd91501c62733d6bc51340cbbdcb6ca0b8015524/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd91501c62733d6bc51340cbbdcb6ca0b8015524/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=cd91501c62733d6bc51340cbbdcb6ca0b8015524", "patch": "@@ -544,7 +544,8 @@ package Sem_Util is\n    function Is_Statement (N : Node_Id) return Boolean;\n    --  Check if the node N is a statement node. Note that this includes\n    --  the case of procedure call statements (unlike the direct use of\n-   --  the N_Statement_Other_Than_Procedure_Call subtype from Sinfo)\n+   --  the N_Statement_Other_Than_Procedure_Call subtype from Sinfo).\n+   --  Note that a label is *not* a statement, and will return False.\n \n    function Is_Transfer (N : Node_Id) return Boolean;\n    --  Returns True if the node N is a statement which is known to cause"}]}