{"sha": "a6f361669312430748d51e6435da8f0d5c4b34c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZmMzYxNjY5MzEyNDMwNzQ4ZDUxZTY0MzVkYThmMGQ1YzRiMzRjNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-03-26T13:38:53Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-03-26T13:38:53Z"}, "message": "mem-stats.h (mem_alloc_description::unregister_descriptor): New method.\n\n\t* mem-stats.h (mem_alloc_description::unregister_descriptor): New\n\tmethod.\n\t(mem_alloc_description::release_object_overhead): Fix comment typos.\n\t* hash-table.h (hash_table::~hash_table): Call\n\trelease_instance_overhead only if m_entries is non-NULL, otherwise\n\tcall unregister_descriptor.\n\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\n\nFrom-SVN: r269943", "tree": {"sha": "da534f921edf26922a5dfe3db8bc95262bf3145e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da534f921edf26922a5dfe3db8bc95262bf3145e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6f361669312430748d51e6435da8f0d5c4b34c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6f361669312430748d51e6435da8f0d5c4b34c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6f361669312430748d51e6435da8f0d5c4b34c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6f361669312430748d51e6435da8f0d5c4b34c4/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "11767f80f0be06988b3b317ae0205ae9f79c190c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11767f80f0be06988b3b317ae0205ae9f79c190c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11767f80f0be06988b3b317ae0205ae9f79c190c"}], "stats": {"total": 42, "additions": 35, "deletions": 7}, "files": [{"sha": "132a8f926b9a7c99a4d71ccc6158702c8328217f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6f361669312430748d51e6435da8f0d5c4b34c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6f361669312430748d51e6435da8f0d5c4b34c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a6f361669312430748d51e6435da8f0d5c4b34c4", "patch": "@@ -1,3 +1,13 @@\n+2019-03-26  Jason Merrill  <jason@redhat.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* mem-stats.h (mem_alloc_description::unregister_descriptor): New\n+\tmethod.\n+\t(mem_alloc_description::release_object_overhead): Fix comment typos.\n+\t* hash-table.h (hash_table::~hash_table): Call\n+\trelease_instance_overhead only if m_entries is non-NULL, otherwise\n+\tcall unregister_descriptor.\n+\n 2019-03-26  Bin Cheng  <bin.cheng@linux.alibaba.com>\n \n \tPR tree-optimization/81740"}, {"sha": "37e4b83b876869c2cc7e46fcb05bdcd21573e8c9", "filename": "gcc/hash-table.h", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6f361669312430748d51e6435da8f0d5c4b34c4/gcc%2Fhash-table.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6f361669312430748d51e6435da8f0d5c4b34c4/gcc%2Fhash-table.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash-table.h?ref=a6f361669312430748d51e6435da8f0d5c4b34c4", "patch": "@@ -652,12 +652,13 @@ hash_table<Descriptor, Lazy, Allocator>::~hash_table ()\n \tAllocator <value_type> ::data_free (m_entries);\n       else\n \tggc_free (m_entries);\n+      if (m_gather_mem_stats)\n+\thash_table_usage ().release_instance_overhead (this,\n+\t\t\t\t\t\t       sizeof (value_type)\n+\t\t\t\t\t\t       * m_size, true);\n     }\n-\n-  if (m_gather_mem_stats)\n-    hash_table_usage ().release_instance_overhead (this,\n-\t\t\t\t\t\t   sizeof (value_type)\n-\t\t\t\t\t\t   * m_size, true);\n+  else if (m_gather_mem_stats)\n+    hash_table_usage ().unregister_descriptor (this);\n }\n \n /* This function returns an array of empty hash table elements.  */"}, {"sha": "63ce8712e2b0f7a676b04dd8f55ad749231a761f", "filename": "gcc/mem-stats.h", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6f361669312430748d51e6435da8f0d5c4b34c4/gcc%2Fmem-stats.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6f361669312430748d51e6435da8f0d5c4b34c4/gcc%2Fmem-stats.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmem-stats.h?ref=a6f361669312430748d51e6435da8f0d5c4b34c4", "patch": "@@ -342,9 +342,15 @@ class mem_alloc_description\n   T *release_instance_overhead (void *ptr, size_t size,\n \t\t\t\tbool remove_from_map = false);\n \n-  /* Release intance object identified by PTR pointer.  */\n+  /* Release instance object identified by PTR pointer.  */\n   void release_object_overhead (void *ptr);\n \n+  /* Unregister a memory allocation descriptor registered with\n+     register_descriptor (remove from reverse map), unless it is\n+     unregistered through release_instance_overhead with\n+     REMOVE_FROM_MAP = true.  */\n+  void unregister_descriptor (void *ptr);\n+\n   /* Get sum value for ORIGIN type of allocation for the descriptor.  */\n   T get_sum (mem_alloc_origin origin);\n \n@@ -522,7 +528,7 @@ mem_alloc_description<T>::release_instance_overhead (void *ptr, size_t size,\n   return usage;\n }\n \n-/* Release intance object identified by PTR pointer.  */\n+/* Release instance object identified by PTR pointer.  */\n \n template <class T>\n inline void\n@@ -536,6 +542,17 @@ mem_alloc_description<T>::release_object_overhead (void *ptr)\n     }\n }\n \n+/* Unregister a memory allocation descriptor registered with\n+   register_descriptor (remove from reverse map), unless it is\n+   unregistered through release_instance_overhead with\n+   REMOVE_FROM_MAP = true.  */\n+template <class T>\n+inline void\n+mem_alloc_description<T>::unregister_descriptor (void *ptr)\n+{\n+  m_reverse_map->remove (ptr);\n+}\n+\n /* Default contructor.  */\n \n template <class T>"}]}