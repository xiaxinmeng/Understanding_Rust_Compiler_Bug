{"sha": "0335cc372c9849c61b9a5583655820d88ecf829e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDMzNWNjMzcyYzk4NDljNjFiOWE1NTgzNjU1ODIwZDg4ZWNmODI5ZQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-01-15T22:18:55Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-01-15T22:18:55Z"}, "message": "re PR fortran/43072 (unneeded temporary (s=s+f(a)))\n\n2019-01-15  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/43072\n\t* resolve.c (resolve_array_ref): Add equal_length argument; set it\n\tif the length of the substring equals that of the orignal\n\tvariable.\n\t(resolve_ref): Remove the substring if it is equal in length to\n\tthe original variable, unless it is an EXPR_SUBSTRING).\n\n2019-01-15  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/43072\n\t* gfortran.dg/actual_array_substr_3.f90: New test.\n\nFrom-SVN: r267953", "tree": {"sha": "422262bd5ef07f5e981b8ccb2e3429ce59dd8e15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/422262bd5ef07f5e981b8ccb2e3429ce59dd8e15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0335cc372c9849c61b9a5583655820d88ecf829e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0335cc372c9849c61b9a5583655820d88ecf829e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0335cc372c9849c61b9a5583655820d88ecf829e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0335cc372c9849c61b9a5583655820d88ecf829e/comments", "author": null, "committer": null, "parents": [{"sha": "6a0c8e77f289a5c2e1b1ad0f2c8a5c5105f599a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a0c8e77f289a5c2e1b1ad0f2c8a5c5105f599a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a0c8e77f289a5c2e1b1ad0f2c8a5c5105f599a6"}], "stats": {"total": 53, "additions": 49, "deletions": 4}, "files": [{"sha": "574f50a4a1e5411adcbc509e2c2d133b1859d08e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0335cc372c9849c61b9a5583655820d88ecf829e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0335cc372c9849c61b9a5583655820d88ecf829e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0335cc372c9849c61b9a5583655820d88ecf829e", "patch": "@@ -1,3 +1,12 @@\n+2019-01-15  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/43072\n+\t* resolve.c (resolve_array_ref): Add equal_length argument; set it\n+\tif the length of the substring equals that of the orignal\n+\tvariable.\n+\t(resolve_ref): Remove the substring if it is equal in length to\n+\tthe original variable, unless it is an EXPR_SUBSTRING).\n+\n 2019-01-15  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/81849"}, {"sha": "b1c9292900323453ce898f809b88bbe947fde262", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0335cc372c9849c61b9a5583655820d88ecf829e/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0335cc372c9849c61b9a5583655820d88ecf829e/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=0335cc372c9849c61b9a5583655820d88ecf829e", "patch": "@@ -4873,7 +4873,7 @@ resolve_array_ref (gfc_array_ref *ar)\n \n \n static bool\n-resolve_substring (gfc_ref *ref)\n+resolve_substring (gfc_ref *ref, bool *equal_length)\n {\n   int k = gfc_validate_kind (BT_INTEGER, gfc_charlen_int_kind, false);\n \n@@ -4944,6 +4944,13 @@ resolve_substring (gfc_ref *ref)\n \t\t     &ref->u.ss.end->where);\n \t  return false;\n \t}\n+      /*  If the substring has the same length as the original\n+\t  variable, the reference itself can be deleted.  */\n+\n+      if (ref->u.ss.length != NULL\n+\t  && compare_bound (ref->u.ss.end, ref->u.ss.length->length) == CMP_EQ\n+\t  && compare_bound_int (ref->u.ss.start, 1) == CMP_EQ)\n+\t*equal_length = true;\n     }\n \n   return true;\n@@ -5037,7 +5044,8 @@ static bool\n resolve_ref (gfc_expr *expr)\n {\n   int current_part_dimension, n_components, seen_part_dimension;\n-  gfc_ref *ref;\n+  gfc_ref *ref, **prev;\n+  bool equal_length;\n \n   for (ref = expr->ref; ref; ref = ref->next)\n     if (ref->type == REF_ARRAY && ref->u.ar.as == NULL)\n@@ -5046,7 +5054,8 @@ resolve_ref (gfc_expr *expr)\n \tbreak;\n       }\n \n-  for (ref = expr->ref; ref; ref = ref->next)\n+  \n+  for (ref = expr->ref, prev = &expr->ref; ref; prev = &ref->next, ref = ref->next)\n     switch (ref->type)\n       {\n       case REF_ARRAY:\n@@ -5059,8 +5068,19 @@ resolve_ref (gfc_expr *expr)\n \tbreak;\n \n       case REF_SUBSTRING:\n-\tif (!resolve_substring (ref))\n+\tequal_length = false;\n+\tif (!resolve_substring (ref, &equal_length))\n \t  return false;\n+\n+\tif (expr->expr_type != EXPR_SUBSTRING && equal_length)\n+\t  {\n+\t    /* Remove the reference and move the charlen, if any.  */\n+\t    *prev = ref->next;\n+\t    ref->next = NULL;\n+\t    expr->ts.u.cl = ref->u.ss.length;\n+\t    ref->u.ss.length = NULL;\n+\t    gfc_free_ref_list (ref);\n+\t  }\n \tbreak;\n       }\n "}, {"sha": "9c9299e074ca07c6afa45784128967514f330254", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0335cc372c9849c61b9a5583655820d88ecf829e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0335cc372c9849c61b9a5583655820d88ecf829e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0335cc372c9849c61b9a5583655820d88ecf829e", "patch": "@@ -1,3 +1,8 @@\n+2019-01-15  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/43072\n+\t* gfortran.dg/actual_array_substr_3.f90: New test.\n+\n 2019-01-15  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/81849"}, {"sha": "30d8edf2d4209283901447599925ffbb428c18c1", "filename": "gcc/testsuite/gfortran.dg/actual_array_substr_3.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0335cc372c9849c61b9a5583655820d88ecf829e/gcc%2Ftestsuite%2Fgfortran.dg%2Factual_array_substr_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0335cc372c9849c61b9a5583655820d88ecf829e/gcc%2Ftestsuite%2Fgfortran.dg%2Factual_array_substr_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Factual_array_substr_3.f90?ref=0335cc372c9849c61b9a5583655820d88ecf829e", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do compile }\n+! { dg-additional-options \"-fdump-tree-original\" }\n+! PR 43072 - no temporary needed because the substring\n+! is of equal length to the string.\n+subroutine foo2\n+  implicit none\n+  external foo\n+  character(len=20) :: str(2) = '1234567890'\n+  call foo(str(:)(1:20))\n+end\n+! { dg-final { scan-tree-dump-not \"memmove\" \"original\" } }"}]}