{"sha": "83bf7f5eb6e8507d1c8fad3e19c1fff801f19b37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNiZjdmNWViNmU4NTA3ZDFjOGZhZDNlMTljMWZmZjgwMWYxOWIzNw==", "commit": {"author": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2010-05-30T16:43:45Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2010-05-30T16:43:45Z"}, "message": "darwin.c (output_objc_section_asm_op): Add comment.\n\n2010-05-30  Iain Sandoe  <iains@gcc.gnu.org>\n\n\t    * config/darwin.c (output_objc_section_asm_op): Add comment.\n\t    (name_needs_quotes): Add '_' to list of valid comment chars.\n\t    (machopic_output_function_base_name): Remove unneeded quotes.\n\t    (darwin_encode_section_info): Adjust asm whitespace.\n\t    * config/i386/darwin.h (ASM_OUTPUT_COMMON): Adjust asm tabs.\n\t    (ASM_OUTPUT_LOCAL): Ditto.\n\t    * config/rs6000/darwin.h (ASM_OUTPUT_COMMON): Ditto.\n\t    * config/darwin.h (GLOBAL_ASM_OP): Ditto.\n\t    * config/darwin9.h (ASM_OUTPUT_ALIGNED_COMMON): Ditto.\n\nFrom-SVN: r160058", "tree": {"sha": "274537cb853d4c6d03f645037a0bd59508744748", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/274537cb853d4c6d03f645037a0bd59508744748"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83bf7f5eb6e8507d1c8fad3e19c1fff801f19b37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83bf7f5eb6e8507d1c8fad3e19c1fff801f19b37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83bf7f5eb6e8507d1c8fad3e19c1fff801f19b37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83bf7f5eb6e8507d1c8fad3e19c1fff801f19b37/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18fc5f4404ceabb11f7be632cca8fd0d23598585", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18fc5f4404ceabb11f7be632cca8fd0d23598585", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18fc5f4404ceabb11f7be632cca8fd0d23598585"}], "stats": {"total": 35, "additions": 26, "deletions": 9}, "files": [{"sha": "bf40f35f11a2b0529078e5fec7c22046c7efe09a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83bf7f5eb6e8507d1c8fad3e19c1fff801f19b37/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83bf7f5eb6e8507d1c8fad3e19c1fff801f19b37/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=83bf7f5eb6e8507d1c8fad3e19c1fff801f19b37", "patch": "@@ -1,3 +1,15 @@\n+2010-05-30  Iain Sandoe  <iains@gcc.gnu.org>\n+\n+\t* config/darwin.c (output_objc_section_asm_op): Add comment.\n+\t(name_needs_quotes): Add '_' to list of valid comment chars.\n+\t(machopic_output_function_base_name): Remove unneeded quotes.\n+\t(darwin_encode_section_info): Adjust asm whitespace.\n+\t* config/i386/darwin.h (ASM_OUTPUT_COMMON): Adjust asm tabs.\n+\t(ASM_OUTPUT_LOCAL): Ditto.\n+\t* config/rs6000/darwin.h (ASM_OUTPUT_COMMON): Ditto.\n+\t* config/darwin.h (GLOBAL_ASM_OP): Ditto.\n+\t* config/darwin9.h (ASM_OUTPUT_ALIGNED_COMMON): Ditto.\n+\t\n 2010-05-30  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/rs6000/rs6000.c (rs6000_output_function_entry): Use"}, {"sha": "9a9dde160c597d2393b22a66b6b95deedd552865", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83bf7f5eb6e8507d1c8fad3e19c1fff801f19b37/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83bf7f5eb6e8507d1c8fad3e19c1fff801f19b37/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=83bf7f5eb6e8507d1c8fad3e19c1fff801f19b37", "patch": "@@ -92,6 +92,10 @@ output_objc_section_asm_op (const void *directive)\n {\n   static bool been_here = false;\n \n+  /* The NeXT ObjC Runtime requires these sections to be present and in \n+     order in the object.  The code below implements this by emitting \n+     a section header for each ObjC section the first time that an ObjC\n+     section is requested.  */\n   if (! been_here)\n     {\n       static const enum darwin_section_enum tomark[] =\n@@ -152,7 +156,8 @@ name_needs_quotes (const char *name)\n {\n   int c;\n   while ((c = *name++) != '\\0')\n-    if (! ISIDNUM (c) && c != '.' && c != '$')\n+    if (! ISIDNUM (c) \n+\t  && c != '.' && c != '$' && c != '_' )\n       return 1;\n   return 0;\n }\n@@ -305,7 +310,7 @@ machopic_output_function_base_name (FILE *file)\n       ++current_pic_label_num;\n       function_base_func_name = current_name;\n     }\n-  fprintf (file, \"\\\"L%011d$pb\\\"\", current_pic_label_num);\n+  fprintf (file, \"L%011d$pb\", current_pic_label_num);\n }\n \n /* The suffix attached to non-lazy pointer symbols.  */\n@@ -1076,7 +1081,7 @@ darwin_encode_section_info (tree decl, rtx rtl, int first ATTRIBUTE_UNUSED)\n void\n darwin_mark_decl_preserved (const char *name)\n {\n-  fprintf (asm_out_file, \".no_dead_strip \");\n+  fprintf (asm_out_file, \"\\t.no_dead_strip \");\n   assemble_name (asm_out_file, name);\n   fputc ('\\n', asm_out_file);\n }"}, {"sha": "149ef4a697289c2fe0e0cffdf2070cdf51b7f47e", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83bf7f5eb6e8507d1c8fad3e19c1fff801f19b37/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83bf7f5eb6e8507d1c8fad3e19c1fff801f19b37/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=83bf7f5eb6e8507d1c8fad3e19c1fff801f19b37", "patch": "@@ -725,7 +725,7 @@ int darwin_label_is_anonymous_local_objc_name (const char *name);\n #define ASM_OUTPUT_ALIGNED_DECL_LOCAL(FILE, DECL, NAME, SIZE, ALIGN)\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     unsigned HOST_WIDE_INT _new_size = SIZE;\t\t\t\t\\\n-    fputs (\".lcomm \", (FILE));\t\t\t\t\t\t\\\n+    fputs (\"\\t.lcomm \", (FILE));\t\t\t\t\t\t\\\n     assemble_name ((FILE), (NAME));\t\t\t\t\t\\\n     if (_new_size == 0) _new_size = 1;\t\t\t\t\t\\\n     fprintf ((FILE), \",\"HOST_WIDE_INT_PRINT_UNSIGNED\",%u\\n\", _new_size,\t\\\n@@ -793,7 +793,7 @@ extern GTY(()) section * darwin_sections[NUM_DARWIN_SECTIONS];\n        } while (0)\n \n /* Globalizing directive for a label.  */\n-#define GLOBAL_ASM_OP \".globl \"\n+#define GLOBAL_ASM_OP \"\\t.globl \"\n #define TARGET_ASM_GLOBALIZE_LABEL darwin_globalize_label\n \n /* Emit an assembler directive to set visibility for a symbol.  Used"}, {"sha": "7a073742cb634752b683a2dcf2fe24f3d356dbd2", "filename": "gcc/config/darwin9.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83bf7f5eb6e8507d1c8fad3e19c1fff801f19b37/gcc%2Fconfig%2Fdarwin9.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83bf7f5eb6e8507d1c8fad3e19c1fff801f19b37/gcc%2Fconfig%2Fdarwin9.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin9.h?ref=83bf7f5eb6e8507d1c8fad3e19c1fff801f19b37", "patch": "@@ -51,7 +51,7 @@ along with GCC; see the file COPYING3.  If not see\n #define ASM_OUTPUT_ALIGNED_COMMON(FILE, NAME, SIZE, ALIGN)\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     unsigned HOST_WIDE_INT _new_size = (SIZE);\t\t\t\t\\\n-    fprintf ((FILE), \".comm \");\t\t\t\t\t\t\\\n+    fprintf ((FILE), \"\\t.comm \");\t\t\t\t\t\t\\\n     assemble_name ((FILE), (NAME));\t\t\t\t\t\\\n     if (_new_size == 0) _new_size = 1;\t\t\t\t\t\\\n     fprintf ((FILE), \",\"HOST_WIDE_INT_PRINT_UNSIGNED\",%u\\n\",\t\t\\"}, {"sha": "d26ef2d422ddb45930bc42d998b2652acb542da7", "filename": "gcc/config/i386/darwin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83bf7f5eb6e8507d1c8fad3e19c1fff801f19b37/gcc%2Fconfig%2Fi386%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83bf7f5eb6e8507d1c8fad3e19c1fff801f19b37/gcc%2Fconfig%2Fi386%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin.h?ref=83bf7f5eb6e8507d1c8fad3e19c1fff801f19b37", "patch": "@@ -209,15 +209,15 @@ along with GCC; see the file COPYING3.  If not see\n    to define a global common symbol.  */\n \n #define ASM_OUTPUT_COMMON(FILE, NAME, SIZE, ROUNDED)  \\\n-( fputs (\".comm \", (FILE)),\t\t\t\\\n+( fputs (\"\\t.comm \", (FILE)),\t\t\t\\\n   assemble_name ((FILE), (NAME)),\t\t\\\n   fprintf ((FILE), \",\"HOST_WIDE_INT_PRINT_UNSIGNED\"\\n\", (ROUNDED)))\n \n /* This says how to output an assembler line\n    to define a local common symbol.  */\n \n #define ASM_OUTPUT_LOCAL(FILE, NAME, SIZE, ROUNDED)  \\\n-( fputs (\".lcomm \", (FILE)),\t\t\t\\\n+( fputs (\"\\t.lcomm \", (FILE)),\t\t\t\\\n   assemble_name ((FILE), (NAME)),\t\t\\\n   fprintf ((FILE), \",\"HOST_WIDE_INT_PRINT_UNSIGNED\"\\n\", (ROUNDED)))\n "}, {"sha": "98d44cfbde55dcdc01c3318d82baa3f0583c49e7", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83bf7f5eb6e8507d1c8fad3e19c1fff801f19b37/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83bf7f5eb6e8507d1c8fad3e19c1fff801f19b37/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=83bf7f5eb6e8507d1c8fad3e19c1fff801f19b37", "patch": "@@ -247,7 +247,7 @@\n #define ASM_OUTPUT_COMMON(FILE, NAME, SIZE, ROUNDED)\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     unsigned HOST_WIDE_INT _new_size = SIZE;\t\t\t\t\\\n-    fputs (\".comm \", (FILE));\t\t\t\t\t\t\\\n+    fputs (\"\\t.comm \", (FILE));\t\t\t\t\t\t\\\n     RS6000_OUTPUT_BASENAME ((FILE), (NAME));\t\t\t\t\\\n     if (_new_size == 0) _new_size = 1;\t\t\t\t\t\\\n     fprintf ((FILE), \",\"HOST_WIDE_INT_PRINT_UNSIGNED\"\\n\", _new_size);\t\\"}]}