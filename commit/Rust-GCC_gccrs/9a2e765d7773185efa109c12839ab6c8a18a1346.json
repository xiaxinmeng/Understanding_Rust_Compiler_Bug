{"sha": "9a2e765d7773185efa109c12839ab6c8a18a1346", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWEyZTc2NWQ3NzczMTg1ZWZhMTA5YzEyODM5YWI2YzhhMThhMTM0Ng==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-11-02T16:43:17Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-11-02T16:56:39Z"}, "message": "core: id_equal should forward\n\nI noticed the two id_equal functions directly called strcmp.  This\nchanges one of them to call the other with args swapped.\n\n\tgcc/\n\t* tree.h (id_equal): Call the symetric predicate with swapped\n\targuments.", "tree": {"sha": "f2bbbd02bd3825a400b6fc2323463318f7b2d762", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2bbbd02bd3825a400b6fc2323463318f7b2d762"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a2e765d7773185efa109c12839ab6c8a18a1346", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a2e765d7773185efa109c12839ab6c8a18a1346", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a2e765d7773185efa109c12839ab6c8a18a1346", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a2e765d7773185efa109c12839ab6c8a18a1346/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8a737930bb0bd0714970cf04ea0463fddb5c6ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8a737930bb0bd0714970cf04ea0463fddb5c6ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8a737930bb0bd0714970cf04ea0463fddb5c6ef"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "caf6287f90969ecaa07b5931536f7d16bd98c776", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a2e765d7773185efa109c12839ab6c8a18a1346/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a2e765d7773185efa109c12839ab6c8a18a1346/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=9a2e765d7773185efa109c12839ab6c8a18a1346", "patch": "@@ -3859,7 +3859,7 @@ id_equal (const_tree id, const char *str)\n inline bool\n id_equal (const char *str, const_tree id)\n {\n-  return !strcmp (str, IDENTIFIER_POINTER (id));\n+  return id_equal (id, str);\n }\n \n /* Return the number of elements in the VECTOR_TYPE given by NODE.  */"}]}