{"sha": "5a09d908bcbc74f78d066568c6d535c1e9d6d3fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWEwOWQ5MDhiY2JjNzRmNzhkMDY2NTY4YzZkNTM1YzFlOWQ2ZDNmZA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-11-21T13:46:34Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-11-21T13:46:34Z"}, "message": "re PR libquadmath/55225 (Fail to build lgammaq.c from trunk with mingw-w64)\n\n2012-11-21  Tobias Burnus  <burnus@net-b.de>\n\n        PR libquadmath/55225\n        * math/lgammaq.c (lgammaq): Use local variable if\n        math.h does not provide signgam.\n        * acinclude.m4 (LIBQUAD_CHECK_MATH_H_SIGNGAM): New check.\n        * configure.ac: Use it.\n        * configure: Regenerate.\n        * config.h.in: Regenerate.\n\nFrom-SVN: r193695", "tree": {"sha": "8af2198385df0e740a9f5be20efa8808ecd8d2d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8af2198385df0e740a9f5be20efa8808ecd8d2d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a09d908bcbc74f78d066568c6d535c1e9d6d3fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a09d908bcbc74f78d066568c6d535c1e9d6d3fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a09d908bcbc74f78d066568c6d535c1e9d6d3fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a09d908bcbc74f78d066568c6d535c1e9d6d3fd/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d80556b2fb448a92b706535fbaa811a685339355", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d80556b2fb448a92b706535fbaa811a685339355", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d80556b2fb448a92b706535fbaa811a685339355"}], "stats": {"total": 76, "additions": 75, "deletions": 1}, "files": [{"sha": "b97a45868b3b1d0523d2d29678d2787c3f0e8108", "filename": "libquadmath/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a09d908bcbc74f78d066568c6d535c1e9d6d3fd/libquadmath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a09d908bcbc74f78d066568c6d535c1e9d6d3fd/libquadmath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2FChangeLog?ref=5a09d908bcbc74f78d066568c6d535c1e9d6d3fd", "patch": "@@ -1,3 +1,13 @@\n+2012-11-21  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR libquadmath/55225\n+\t* math/lgammaq.c (lgammaq): Use local variable if\n+\tmath.h does not provide signgam.\n+\t* acinclude.m4 (LIBQUAD_CHECK_MATH_H_SIGNGAM): New check.\n+\t* configure.ac: Use it.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\n 2012-11-15  Tobias Burnus  <burnus@net-b.de>\n \t    Joseph Myers  <joseph@codesourcery.com>\n "}, {"sha": "ab73fb52e05420413da60a70e2a5eec9b462c1e5", "filename": "libquadmath/acinclude.m4", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a09d908bcbc74f78d066568c6d535c1e9d6d3fd/libquadmath%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a09d908bcbc74f78d066568c6d535c1e9d6d3fd/libquadmath%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Facinclude.m4?ref=5a09d908bcbc74f78d066568c6d535c1e9d6d3fd", "patch": "@@ -10,3 +10,20 @@ AC_DEFUN([AM_PROG_LIBTOOL])\n AC_DEFUN([AC_LIBTOOL_DLOPEN])\n AC_DEFUN([AC_PROG_LD])\n ])\n+\n+dnl Check whether POSIX's signgam is defined in math.h.\n+AC_DEFUN([LIBQUAD_CHECK_MATH_H_SIGNGAM], [\n+  AC_CACHE_CHECK([whether the math.h includes POSIX's signgam],\n+                 libgfor_cv_have_math_h_signgam, [\n+  save_CFLAGS=\"$CFLAGS\"\n+  CFLAGS=\"$CFLAGS -Werror\"\n+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+#include <math.h>\n+void foo(void) { signgam = 1; }]], [])],\n+                    libgfor_cv_have_math_h_signgam=yes,\n+                    libgfor_cv_have_math_h_signgam=no)\n+  CFLAGS=\"$save_CFLAGS\"])\n+  if test $libgfor_cv_have_math_h_signgam = yes; then\n+    AC_DEFINE(HAVE_MATH_H_SIGNGAM, 1,\n+      [Define to 1 if the math.h includes POSIX's signgam.])\n+  fi])"}, {"sha": "9d18cc3ee3504ef1b3ef92fd08b49bd8b9d4aeba", "filename": "libquadmath/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a09d908bcbc74f78d066568c6d535c1e9d6d3fd/libquadmath%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a09d908bcbc74f78d066568c6d535c1e9d6d3fd/libquadmath%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Fconfig.h.in?ref=5a09d908bcbc74f78d066568c6d535c1e9d6d3fd", "patch": "@@ -45,6 +45,9 @@\n /* Define to 1 if you have the <locale.h> header file. */\n #undef HAVE_LOCALE_H\n \n+/* Define to 1 if the math.h includes POSIX's signgam. */\n+#undef HAVE_MATH_H_SIGNGAM\n+\n /* Define to 1 if you have the <memory.h> header file. */\n #undef HAVE_MEMORY_H\n "}, {"sha": "0ea6e07455d85f8c7defee9ffb99842abbe383f4", "filename": "libquadmath/configure", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a09d908bcbc74f78d066568c6d535c1e9d6d3fd/libquadmath%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a09d908bcbc74f78d066568c6d535c1e9d6d3fd/libquadmath%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Fconfigure?ref=5a09d908bcbc74f78d066568c6d535c1e9d6d3fd", "patch": "@@ -11947,6 +11947,43 @@ fi\n done\n \n \n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the math.h includes POSIX's signgam\" >&5\n+$as_echo_n \"checking whether the math.h includes POSIX's signgam... \" >&6; }\n+if test \"${libgfor_cv_have_math_h_signgam+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+  save_CFLAGS=\"$CFLAGS\"\n+  CFLAGS=\"$CFLAGS -Werror\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <math.h>\n+void foo(void) { signgam = 1; }\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  libgfor_cv_have_math_h_signgam=yes\n+else\n+  libgfor_cv_have_math_h_signgam=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+  CFLAGS=\"$save_CFLAGS\"\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $libgfor_cv_have_math_h_signgam\" >&5\n+$as_echo \"$libgfor_cv_have_math_h_signgam\" >&6; }\n+  if test $libgfor_cv_have_math_h_signgam = yes; then\n+\n+$as_echo \"#define HAVE_MATH_H_SIGNGAM 1\" >>confdefs.h\n+\n+  fi\n+\n # If available, sqrtl and cbrtl speed up the calculation -\n # but they are not required\n if test x$gcc_no_link != xyes; then"}, {"sha": "c547da8dc20675d39fbb08927bab6ab60ccfdc56", "filename": "libquadmath/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a09d908bcbc74f78d066568c6d535c1e9d6d3fd/libquadmath%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a09d908bcbc74f78d066568c6d535c1e9d6d3fd/libquadmath%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Fconfigure.ac?ref=5a09d908bcbc74f78d066568c6d535c1e9d6d3fd", "patch": "@@ -113,6 +113,7 @@ AC_SUBST(toolexecdir)\n AC_SUBST(toolexeclibdir)\n \n AC_CHECK_HEADERS(fenv.h langinfo.h locale.h wchar.h wctype.h limits.h ctype.h printf.h errno.h)\n+LIBQUAD_CHECK_MATH_H_SIGNGAM\n \n # If available, sqrtl and cbrtl speed up the calculation -\n # but they are not required"}, {"sha": "eef62dbc91f6c9d28a890c99895ba9a047fe2636", "filename": "libquadmath/math/lgammaq.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a09d908bcbc74f78d066568c6d535c1e9d6d3fd/libquadmath%2Fmath%2Flgammaq.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a09d908bcbc74f78d066568c6d535c1e9d6d3fd/libquadmath%2Fmath%2Flgammaq.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Fmath%2Flgammaq.c?ref=5a09d908bcbc74f78d066568c6d535c1e9d6d3fd", "patch": "@@ -69,7 +69,10 @@\n     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA */\n \n #include \"quadmath-imp.h\"\n-#include <math.h>  /* For extern int signgam.  */\n+\n+#ifdef HAVE_MATH_H_SIGNGAM\n+#include <math.h>  /* For POSIX's extern int signgam.  */\n+#endif\n \n static const __float128 PIQ = 3.1415926535897932384626433832795028841972E0Q;\n static const __float128 MAXLGM = 1.0485738685148938358098967157129705071571E4928Q;\n@@ -759,6 +762,9 @@ lgammaq (__float128 x)\n {\n   __float128 p, q, w, z, nx;\n   int i, nn;\n+#ifndef HAVE_MATH_H_SIGNGAM\n+  int signgam;\n+#endif\n \n   signgam = 1;\n "}]}