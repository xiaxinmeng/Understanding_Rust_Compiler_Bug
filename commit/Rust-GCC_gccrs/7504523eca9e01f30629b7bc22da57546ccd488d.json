{"sha": "7504523eca9e01f30629b7bc22da57546ccd488d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzUwNDUyM2VjYTllMDFmMzA2MjliN2JjMjJkYTU3NTQ2Y2NkNDg4ZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-10-12T12:27:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-10-12T12:27:25Z"}, "message": "[multiple changes]\n\n2016-10-12  Tristan Gingold  <gingold@adacore.com>\n\n\t* exp_ch9.adb (Expand_N_Delay_Relative_Statement): Add support\n\tfor a secondary procedure in case of missing Ada.Calendar.Delays\n\t* rtsfind.ads (RTU_Id): Add System_Relative_Delays.\n\t(RE_Id): Add RO_RD_Delay_For.\n\t* rtsfind.adb (Output_Entity_Name): Handle correctly units RO_XX.\n\t* s-rident.ads: Remove No_Relative_Delays\n\trestriction for GNAT_Extended_Ravenscar.\n\n2016-10-12  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_elab.adb (Within_Initial_Condition):  When deternining\n\tthe context of the expression, use the original node if it is\n\ta pragma, because Check pragmas are rewritten as conditionals\n\twhen assertions are not enabled.\n\n2016-10-12  Bob Duff  <duff@adacore.com>\n\n\t* spitbol_table.ads, spitbol_table.adb (Adjust, Finalize): Add\n\t\"overriding\".\n\n2016-10-12  Bob Duff  <duff@adacore.com>\n\n\t* a-strunb-shared.ads, a-strunb-shared.adb (Finalize):\n\tMake sure Finalize is idempotent.\n\t(Unreference): Check for\n\tEmpty_Shared_String, in case the reference count of the empty\n\tstring wraps around.\n\tAlso add \"not null\" in various places that can't be null.\n\n2016-10-12  Jerome Lambourg  <lambourg@adacore.com>\n\n\t* init.c: Fix sigtramp with the x86_64-vx7-vxsim target on\n\tWindows host.\n\n2016-10-12  Vadim Godunko  <godunko@adacore.com>\n\n\t* s-os_lib.ads (Is_Owner_Readable_File): Renamed from\n\tIs_Readable_File.\n\t(Is_Owner_Writable_File): Renamed from Is_Writable_File.\n\t(Is_Readable_File): Renames Is_Read_Accessible_File.\n\t(Is_Writable_File): Renames Is_Write_Accessible_File.\n\nFrom-SVN: r241035", "tree": {"sha": "116e0fc7db9fa240a145b0a22b5febac58f2de96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/116e0fc7db9fa240a145b0a22b5febac58f2de96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7504523eca9e01f30629b7bc22da57546ccd488d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7504523eca9e01f30629b7bc22da57546ccd488d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7504523eca9e01f30629b7bc22da57546ccd488d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7504523eca9e01f30629b7bc22da57546ccd488d/comments", "author": null, "committer": null, "parents": [{"sha": "cfbdc34f25dac9e6568618f69e3ee46ff1714766", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfbdc34f25dac9e6568618f69e3ee46ff1714766", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfbdc34f25dac9e6568618f69e3ee46ff1714766"}], "stats": {"total": 183, "additions": 136, "deletions": 47}, "files": [{"sha": "37ab195c5bbfba9b1a4d36103e3820c2b472b4f6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7504523eca9e01f30629b7bc22da57546ccd488d", "patch": "@@ -1,3 +1,47 @@\n+2016-10-12  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* exp_ch9.adb (Expand_N_Delay_Relative_Statement): Add support\n+\tfor a secondary procedure in case of missing Ada.Calendar.Delays\n+\t* rtsfind.ads (RTU_Id): Add System_Relative_Delays.\n+\t(RE_Id): Add RO_RD_Delay_For.\n+\t* rtsfind.adb (Output_Entity_Name): Handle correctly units RO_XX.\n+\t* s-rident.ads: Remove No_Relative_Delays\n+\trestriction for GNAT_Extended_Ravenscar.\n+\n+2016-10-12  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_elab.adb (Within_Initial_Condition):  When deternining\n+\tthe context of the expression, use the original node if it is\n+\ta pragma, because Check pragmas are rewritten as conditionals\n+\twhen assertions are not enabled.\n+\n+2016-10-12  Bob Duff  <duff@adacore.com>\n+\n+\t* spitbol_table.ads, spitbol_table.adb (Adjust, Finalize): Add\n+\t\"overriding\".\n+\n+2016-10-12  Bob Duff  <duff@adacore.com>\n+\n+\t* a-strunb-shared.ads, a-strunb-shared.adb (Finalize):\n+\tMake sure Finalize is idempotent.\n+\t(Unreference): Check for\n+\tEmpty_Shared_String, in case the reference count of the empty\n+\tstring wraps around.\n+\tAlso add \"not null\" in various places that can't be null.\n+\n+2016-10-12  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* init.c: Fix sigtramp with the x86_64-vx7-vxsim target on\n+\tWindows host.\n+\n+2016-10-12  Vadim Godunko  <godunko@adacore.com>\n+\n+\t* s-os_lib.ads (Is_Owner_Readable_File): Renamed from\n+\tIs_Readable_File.\n+\t(Is_Owner_Writable_File): Renamed from Is_Writable_File.\n+\t(Is_Readable_File): Renames Is_Read_Accessible_File.\n+\t(Is_Writable_File): Renames Is_Write_Accessible_File.\n+\n 2016-10-12  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch12.adb (Check_Formal_Package_Instance): Skip an internal"}, {"sha": "ba308f5cdc43ee46cbffcb8f1fa3be5aeb79e0dc", "filename": "gcc/ada/a-strunb-shared.adb", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2Fa-strunb-shared.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2Fa-strunb-shared.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strunb-shared.adb?ref=7504523eca9e01f30629b7bc22da57546ccd488d", "patch": "@@ -499,7 +499,9 @@ package body Ada.Strings.Unbounded is\n    -- Allocate --\n    --------------\n \n-   function Allocate (Max_Length : Natural) return Shared_String_Access is\n+   function Allocate\n+     (Max_Length : Natural) return not null Shared_String_Access\n+   is\n    begin\n       --  Empty string requested, return shared empty string\n \n@@ -622,7 +624,7 @@ package body Ada.Strings.Unbounded is\n    -------------------\n \n    function Can_Be_Reused\n-     (Item   : Shared_String_Access;\n+     (Item   : not null Shared_String_Access;\n       Length : Natural) return Boolean is\n    begin\n       return\n@@ -785,10 +787,9 @@ package body Ada.Strings.Unbounded is\n    --------------\n \n    procedure Finalize (Object : in out Unbounded_String) is\n-      SR : constant Shared_String_Access := Object.Reference;\n-\n+      SR : constant not null Shared_String_Access := Object.Reference;\n    begin\n-      if SR /= null then\n+      if SR /= Null_Unbounded_String.Reference then\n \n          --  The same controlled object can be finalized several times for\n          --  some reason. As per 7.6.1(24) this should have no ill effect,\n@@ -2101,11 +2102,12 @@ package body Ada.Strings.Unbounded is\n    begin\n       if System.Atomic_Counters.Decrement (Aux.Counter) then\n \n-         --  Reference counter of Empty_Shared_String must never reach zero\n+         --  Reference counter of Empty_Shared_String should never reach\n+         --  zero. We check here in case it wraps around.\n \n-         pragma Assert (Aux /= Empty_Shared_String'Access);\n-\n-         Free (Aux);\n+         if Aux /= Empty_Shared_String'Access then\n+            Free (Aux);\n+         end if;\n       end if;\n    end Unreference;\n "}, {"sha": "c5f96b38f17d6b4ec210963d30a1fdf35f02ee4b", "filename": "gcc/ada/a-strunb-shared.ads", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2Fa-strunb-shared.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2Fa-strunb-shared.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strunb-shared.ads?ref=7504523eca9e01f30629b7bc22da57546ccd488d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -449,14 +449,15 @@ private\n    --  Decrement reference counter, deallocate Item when counter goes to zero\n \n    function Can_Be_Reused\n-     (Item   : Shared_String_Access;\n+     (Item   : not null Shared_String_Access;\n       Length : Natural) return Boolean;\n    --  Returns True if Shared_String can be reused. There are two criteria when\n    --  Shared_String can be reused: its reference counter must be one (thus\n    --  Shared_String is owned exclusively) and its size is sufficient to\n    --  store string with specified length effectively.\n \n-   function Allocate (Max_Length : Natural) return Shared_String_Access;\n+   function Allocate\n+     (Max_Length : Natural) return not null Shared_String_Access;\n    --  Allocates new Shared_String with at least specified maximum length.\n    --  Actual maximum length of the allocated Shared_String can be slightly\n    --  greater. Returns reference to Empty_Shared_String when requested length\n@@ -469,7 +470,7 @@ private\n    --  This renames are here only to be used in the pragma Stream_Convert\n \n    type Unbounded_String is new AF.Controlled with record\n-      Reference : Shared_String_Access := Empty_Shared_String'Access;\n+      Reference : not null Shared_String_Access := Empty_Shared_String'Access;\n    end record;\n \n    pragma Stream_Convert (Unbounded_String, To_Unbounded, To_String);"}, {"sha": "9467303e2fc087f0b8bbca43e950e83d3d8d3ec0", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=7504523eca9e01f30629b7bc22da57546ccd488d", "patch": "@@ -8388,11 +8388,23 @@ package body Exp_Ch9 is\n    --  simple delays imposed by the use of Protected Objects.\n \n    procedure Expand_N_Delay_Relative_Statement (N : Node_Id) is\n-      Loc : constant Source_Ptr := Sloc (N);\n+      Loc  : constant Source_Ptr := Sloc (N);\n+      Proc : Entity_Id;\n    begin\n+      if RTE_Available (RO_RD_Delay_For) then\n+         --  Try to use System.Relative_Delays.Delay_For only if available.\n+         --  This is the implementation used on restricted platforms when\n+         --  Ada.Calendar is not available.\n+         Proc := RTE (RO_RD_Delay_For);\n+      else\n+         --  Otherwise, use Ada.Calendar.Delays.Delay_For and emit an error\n+         --  message if not available.\n+         Proc := RTE (RO_CA_Delay_For);\n+      end if;\n+\n       Rewrite (N,\n         Make_Procedure_Call_Statement (Loc,\n-          Name => New_Occurrence_Of (RTE (RO_CA_Delay_For), Loc),\n+          Name => New_Occurrence_Of (Proc, Loc),\n           Parameter_Associations => New_List (Expression (N))));\n       Analyze (N);\n    end Expand_N_Delay_Relative_Statement;"}, {"sha": "26753bd0b112d194d93c5f4332de60a5d646ab61", "filename": "gcc/ada/g-spitbo.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2Fg-spitbo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2Fg-spitbo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-spitbo.adb?ref=7504523eca9e01f30629b7bc22da57546ccd488d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1998-2012, AdaCore                     --\n+--                     Copyright (C) 1998-2016, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -333,7 +333,7 @@ package body GNAT.Spitbol is\n       -- Adjust --\n       ------------\n \n-      procedure Adjust (Object : in out Table) is\n+      overriding procedure Adjust (Object : in out Table) is\n          Ptr1 : Hash_Element_Ptr;\n          Ptr2 : Hash_Element_Ptr;\n \n@@ -555,7 +555,7 @@ package body GNAT.Spitbol is\n       -- Finalize --\n       --------------\n \n-      procedure Finalize (Object : in out Table) is\n+      overriding procedure Finalize (Object : in out Table) is\n          Ptr1 : Hash_Element_Ptr;\n          Ptr2 : Hash_Element_Ptr;\n "}, {"sha": "b07a21451fc8f2ef732460a55186073c15c6a947", "filename": "gcc/ada/g-spitbo.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2Fg-spitbo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2Fg-spitbo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-spitbo.ads?ref=7504523eca9e01f30629b7bc22da57546ccd488d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1997-2012, AdaCore                     --\n+--                     Copyright (C) 1997-2016, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -379,12 +379,12 @@ package GNAT.Spitbol is\n \n       pragma Finalize_Storage_Only (Table);\n \n-      procedure Adjust (Object : in out Table);\n+      overriding procedure Adjust (Object : in out Table);\n       --  The Adjust procedure does a deep copy of the table structure\n       --  so that the effect of assignment is, like other assignments\n       --  in Ada, value-oriented.\n \n-      procedure Finalize (Object : in out Table);\n+      overriding procedure Finalize (Object : in out Table);\n       --  This is the finalization routine that ensures that all storage\n       --  associated with a table is properly released when a table object\n       --  is abandoned and finalized."}, {"sha": "114310dd5a092fffca6a97494025a10345479035", "filename": "gcc/ada/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=7504523eca9e01f30629b7bc22da57546ccd488d", "patch": "@@ -2109,7 +2109,7 @@ __gnat_install_handler (void)\n     if ((strncmp (model, \"Linux\", 5) == 0)\n         || (strncmp (model, \"Windows\", 7) == 0)\n         || (strncmp (model, \"SIMLINUX\", 8) == 0) /* vx7 */\n-        || (strncmp (model, \"SIMWINDOWS\", 10) == 0)) /* ditto */\n+        || (strncmp (model, \"SIMNT\", 5) == 0)) /* ditto */\n       __gnat_set_is_vxsim (TRUE);\n   }\n #endif"}, {"sha": "5745b00cfd8bb056d9b0ac4d2ad200d756131fbd", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=7504523eca9e01f30629b7bc22da57546ccd488d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1144,6 +1144,9 @@ package body Rtsfind is\n       --  M (1 .. P) is current message to be output\n \n       RE_Image : constant String := RE_Id'Image (Id);\n+      S : Natural;\n+      --  RE_Image (S .. RE_Image'Last) is the name of the entity without the\n+      --  \"RE_\" or \"RO_XX_\" prefix.\n \n    begin\n       if Id = RE_Null then\n@@ -1168,8 +1171,15 @@ package body Rtsfind is\n \n       --  Add entity name and closing quote to message\n \n-      Name_Len := RE_Image'Length - 3;\n-      Name_Buffer (1 .. Name_Len) := RE_Image (4 .. RE_Image'Length);\n+      if RE_Image (2) = 'E' then\n+         --  Strip \"RE\"\n+         S := 4;\n+      else\n+         --  Strip \"RO_XX\"\n+         S := 7;\n+      end if;\n+      Name_Len := RE_Image'Length - S + 1;\n+      Name_Buffer (1 .. Name_Len) := RE_Image (S .. RE_Image'Last);\n       Set_Casing (Mixed_Case);\n       M (P + 1 .. P + Name_Len) := Name_Buffer (1 .. Name_Len);\n       P := P + Name_Len;"}, {"sha": "6163f0bf27c04ff46fc8310e85e8a6c0df20f9f9", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=7504523eca9e01f30629b7bc22da57546ccd488d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -349,6 +349,7 @@ package Rtsfind is\n       System_Pool_Empty,\n       System_Pool_Local,\n       System_Pool_Size,\n+      System_Relative_Delays,\n       System_RPC,\n       System_Scalar_Values,\n       System_Secondary_Stack,\n@@ -1403,6 +1404,8 @@ package Rtsfind is\n      RE_Tk_Objref,                       -- System.Partition_Interface\n      RE_Tk_Union,                        -- System.Partition_Interface\n \n+     RO_RD_Delay_For,                    -- System.Relative_Delays\n+\n      RE_IS_Is1,                          -- System.Scalar_Values\n      RE_IS_Is2,                          -- System.Scalar_Values\n      RE_IS_Is4,                          -- System.Scalar_Values\n@@ -2635,6 +2638,8 @@ package Rtsfind is\n \n      RE_Stack_Bounded_Pool               => System_Pool_Size,\n \n+     RO_RD_Delay_For                     => System_Relative_Delays,\n+\n      RE_Do_Apc                           => System_RPC,\n      RE_Do_Rpc                           => System_RPC,\n      RE_Params_Stream_Type               => System_RPC,"}, {"sha": "5da95112340e67a39fd5d195ba143b0ab21b7074", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=7504523eca9e01f30629b7bc22da57546ccd488d", "patch": "@@ -1510,24 +1510,24 @@ package body System.OS_Lib is\n       return Is_Read_Accessible_File (F_Name'Address) /= 0;\n    end Is_Read_Accessible_File;\n \n-   ----------------------\n-   -- Is_Readable_File --\n-   ----------------------\n+   ----------------------------\n+   -- Is_Owner_Readable_File --\n+   ----------------------------\n \n-   function Is_Readable_File (Name : C_File_Name) return Boolean is\n+   function Is_Owner_Readable_File (Name : C_File_Name) return Boolean is\n       function Is_Readable_File (Name : Address) return Integer;\n       pragma Import (C, Is_Readable_File, \"__gnat_is_readable_file\");\n    begin\n       return Is_Readable_File (Name) /= 0;\n-   end Is_Readable_File;\n+   end Is_Owner_Readable_File;\n \n-   function Is_Readable_File (Name : String) return Boolean is\n+   function Is_Owner_Readable_File (Name : String) return Boolean is\n       F_Name : String (1 .. Name'Length + 1);\n    begin\n       F_Name (1 .. Name'Length) := Name;\n       F_Name (F_Name'Last)      := ASCII.NUL;\n-      return Is_Readable_File (F_Name'Address);\n-   end Is_Readable_File;\n+      return Is_Owner_Readable_File (F_Name'Address);\n+   end Is_Owner_Readable_File;\n \n    ------------------------\n    -- Is_Executable_File --\n@@ -1601,24 +1601,24 @@ package body System.OS_Lib is\n       return Is_Write_Accessible_File (F_Name'Address) /= 0;\n    end Is_Write_Accessible_File;\n \n-   ----------------------\n-   -- Is_Writable_File --\n-   ----------------------\n+   ----------------------------\n+   -- Is_Owner_Writable_File --\n+   ----------------------------\n \n-   function Is_Writable_File (Name : C_File_Name) return Boolean is\n+   function Is_Owner_Writable_File (Name : C_File_Name) return Boolean is\n       function Is_Writable_File (Name : Address) return Integer;\n       pragma Import (C, Is_Writable_File, \"__gnat_is_writable_file\");\n    begin\n       return Is_Writable_File (Name) /= 0;\n-   end Is_Writable_File;\n+   end Is_Owner_Writable_File;\n \n-   function Is_Writable_File (Name : String) return Boolean is\n+   function Is_Owner_Writable_File (Name : String) return Boolean is\n       F_Name : String (1 .. Name'Length + 1);\n    begin\n       F_Name (1 .. Name'Length) := Name;\n       F_Name (F_Name'Last)      := ASCII.NUL;\n-      return Is_Writable_File (F_Name'Address);\n-   end Is_Writable_File;\n+      return Is_Owner_Writable_File (F_Name'Address);\n+   end Is_Owner_Writable_File;\n \n    ----------\n    -- Kill --"}, {"sha": "e4a2624ea7b09a07e73fc046fc195460c8b6348d", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=7504523eca9e01f30629b7bc22da57546ccd488d", "patch": "@@ -425,7 +425,7 @@ package System.OS_Lib is\n    --  not actually be readable due to some other process having exclusive\n    --  access.\n \n-   function Is_Readable_File (Name : String) return Boolean;\n+   function Is_Owner_Readable_File (Name : String) return Boolean;\n    --  Determines if the given string, Name, is the name of an existing file\n    --  that is readable. Returns True if so, False otherwise. Note that this\n    --  function simply interrogates the file attributes (e.g. using the C\n@@ -449,7 +449,7 @@ package System.OS_Lib is\n    --  contains the name of the file to which it is linked. Symbolic links may\n    --  span file systems and may refer to directories.\n \n-   function Is_Writable_File (Name : String) return Boolean;\n+   function Is_Owner_Writable_File (Name : String) return Boolean;\n    --  Determines if the given string, Name, is the name of an existing file\n    --  that is writable. Returns True if so, False otherwise. Note that this\n    --  function simply interrogates the file attributes (e.g. using the C\n@@ -465,6 +465,14 @@ package System.OS_Lib is\n    --  Determines if the given string, Name, is the name of an existing file\n    --  that is writable. Returns True if so, False otherwise.\n \n+   function Is_Readable_File (Name : String) return Boolean\n+     renames Is_Read_Accessible_File;\n+   function Is_Writable_File (Name : String) return Boolean\n+     renames Is_Write_Accessible_File;\n+   --  These subprograms provided for backward compatibility and should not be\n+   --  used. Use Is_Owner_Readable_File/Is_Owner_Writable_File or\n+   --  Is_Read_Accessible_File/Is_Write_Accessible_File instead.\n+\n    function Locate_Exec_On_Path (Exec_Name : String) return String_Access;\n    --  Try to locate an executable whose name is given by Exec_Name in the\n    --  directories listed in the environment Path. If the Exec_Name does not\n@@ -683,10 +691,10 @@ package System.OS_Lib is\n \n    function Is_Directory (Name : C_File_Name) return Boolean;\n    function Is_Executable_File (Name : C_File_Name) return Boolean;\n-   function Is_Readable_File (Name : C_File_Name) return Boolean;\n+   function Is_Owner_Readable_File (Name : C_File_Name) return Boolean;\n    function Is_Regular_File (Name : C_File_Name) return Boolean;\n    function Is_Symbolic_Link (Name : C_File_Name) return Boolean;\n-   function Is_Writable_File (Name : C_File_Name) return Boolean;\n+   function Is_Owner_Writable_File (Name : C_File_Name) return Boolean;\n \n    function Locate_Regular_File\n      (File_Name : C_File_Name;"}, {"sha": "ab234c304fe1568ad25ef60beb3795cd5303068d", "filename": "gcc/ada/s-rident.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rident.ads?ref=7504523eca9e01f30629b7bc22da57546ccd488d", "patch": "@@ -574,7 +574,6 @@ package System.Rident is\n                            No_Implicit_Protected_Object_Allocations\n                                                             => True,\n                            No_Local_Timing_Events           => True,\n-                           No_Relative_Delay                => True,\n                            No_Select_Statements             => True,\n                            No_Specific_Termination_Handlers => True,\n                            No_Task_Termination              => True,"}, {"sha": "66eaca70e27ba95f3fb8e79dfd4dc81465d4ae9d", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7504523eca9e01f30629b7bc22da57546ccd488d/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=7504523eca9e01f30629b7bc22da57546ccd488d", "patch": "@@ -2126,6 +2126,14 @@ package body Sem_Elab is\n             end if;\n \n             Par := Parent (Par);\n+\n+            --  If assertions are not enabled, the check pragma is rewritten\n+            --  as an if_statement in sem_prag, to generate various warnings\n+            --  on boolean expressions. Retrieve the original pragma.\n+\n+            if Nkind (Original_Node (Par)) = N_Pragma then\n+               Par := Original_Node (Par);\n+            end if;\n          end loop;\n \n          return False;"}]}