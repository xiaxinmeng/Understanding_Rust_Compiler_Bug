{"sha": "18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "node_id": "C_kwDOANBUbNoAKDE4YzAwYTRjMGMxMmU3MjE3NTVhZGY0YTQ4NjliNmZhN2VmMTc4NGQ", "commit": {"author": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2023-06-01T11:51:18Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2023-06-01T15:09:29Z"}, "message": "gccrs: get rid of useless helper class and fix header usage\n\ngcc/rust/ChangeLog:\n\n\t* Make-lang.in: remove files\n\t* backend/rust-compile-block.h: fix headers\n\t* backend/rust-compile-expr.h: likewise\n\t* backend/rust-compile-fnparam.h: likewise\n\t* backend/rust-compile-item.h: likewise\n\t* backend/rust-compile-pattern.h: likewise\n\t* backend/rust-compile-resolve-path.h: likewise\n\t* backend/rust-compile-stmt.h: likewise\n\t* typecheck/rust-autoderef.cc: likewise\n\t* typecheck/rust-hir-path-probe.cc: likewise\n\t* typecheck/rust-hir-path-probe.h: likewise\n\t* typecheck/rust-hir-trait-reference.h: likewise\n\t* typecheck/rust-hir-trait-resolve.cc: use a for loop instead\n\t* typecheck/rust-hir-trait-resolve.h: fix headers\n\t* typecheck/rust-hir-type-check-expr.h: likewise\n\t* typecheck/rust-hir-type-check-implitem.h: likewise\n\t* typecheck/rust-hir-type-check-item.h: likewise\n\t* typecheck/rust-hir-type-check-path.cc: likewise\n\t* typecheck/rust-hir-type-check-pattern.h: likewise\n\t* typecheck/rust-hir-type-check-stmt.h: likewise\n\t* typecheck/rust-hir-type-check-type.h: likewise\n\t* typecheck/rust-hir-type-check-util.cc: Removed.\n\t* typecheck/rust-hir-type-check-util.h: Removed.\n\nSigned-off-by: Philip Herron <herron.philip@googlemail.com>", "tree": {"sha": "8859a1511cc934c71419fe951510863cce260753", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8859a1511cc934c71419fe951510863cce260753"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1eef15537f20e7077ace626f55170c70c60191b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eef15537f20e7077ace626f55170c70c60191b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1eef15537f20e7077ace626f55170c70c60191b5"}], "stats": {"total": 163, "additions": 47, "deletions": 116}, "files": [{"sha": "0e8cd0218ba3c6890fc1fd13bc883080969e9f30", "filename": "gcc/rust/Make-lang.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2FMake-lang.in?ref=18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "patch": "@@ -130,7 +130,6 @@ GRS_OBJS = \\\n     rust/rust-tyty-subst.o \\\n     rust/rust-typecheck-context.o \\\n     rust/rust-tyty-bounds.o \\\n-    rust/rust-hir-type-check-util.o \\\n     rust/rust-hir-trait-resolve.o \\\n     rust/rust-hir-trait-reference.o \\\n     rust/rust-hir-type-check-item.o \\"}, {"sha": "a58b0da55a9c42fcabc8c35ee968409d8d860bad", "filename": "gcc/rust/backend/rust-compile-block.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Fbackend%2Frust-compile-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Fbackend%2Frust-compile-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-block.h?ref=18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "patch": "@@ -20,6 +20,7 @@\n #define RUST_COMPILE_BLOCK\n \n #include \"rust-compile-base.h\"\n+#include \"rust-hir-visitor.h\"\n \n namespace Rust {\n namespace Compile {"}, {"sha": "6505698203cc2907efe5f7502199c6f0d6e01869", "filename": "gcc/rust/backend/rust-compile-expr.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Fbackend%2Frust-compile-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Fbackend%2Frust-compile-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-expr.h?ref=18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "patch": "@@ -20,6 +20,7 @@\n #define RUST_COMPILE_EXPR\n \n #include \"rust-compile-base.h\"\n+#include \"rust-hir-visitor.h\"\n \n namespace Rust {\n namespace Compile {"}, {"sha": "9a3a58fa2df65f941c584eb207dea320c456cf11", "filename": "gcc/rust/backend/rust-compile-fnparam.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Fbackend%2Frust-compile-fnparam.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Fbackend%2Frust-compile-fnparam.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-fnparam.h?ref=18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "patch": "@@ -20,6 +20,7 @@\n #define RUST_COMPILE_FNPARAM\n \n #include \"rust-compile-base.h\"\n+#include \"rust-hir-visitor.h\"\n \n namespace Rust {\n namespace Compile {"}, {"sha": "42ff8750df880fdf37e6675155af37a3a5c62ec6", "filename": "gcc/rust/backend/rust-compile-item.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Fbackend%2Frust-compile-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Fbackend%2Frust-compile-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-item.h?ref=18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "patch": "@@ -20,6 +20,7 @@\n #define RUST_COMPILE_ITEM\n \n #include \"rust-compile-base.h\"\n+#include \"rust-hir-visitor.h\"\n \n namespace Rust {\n namespace Compile {"}, {"sha": "a0aab7b368fd553a7ff595dc41153729b1413d90", "filename": "gcc/rust/backend/rust-compile-pattern.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Fbackend%2Frust-compile-pattern.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Fbackend%2Frust-compile-pattern.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-pattern.h?ref=18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "patch": "@@ -17,6 +17,7 @@\n // <http://www.gnu.org/licenses/>.\n \n #include \"rust-compile-base.h\"\n+#include \"rust-hir-visitor.h\"\n \n namespace Rust {\n namespace Compile {"}, {"sha": "56dcfe5f527cdcf26e1f32bb146bf6f3013a9a53", "filename": "gcc/rust/backend/rust-compile-resolve-path.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Fbackend%2Frust-compile-resolve-path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Fbackend%2Frust-compile-resolve-path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-resolve-path.h?ref=18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "patch": "@@ -20,6 +20,7 @@\n #define RUST_COMPILE_RESOLVE_PATH\n \n #include \"rust-compile-base.h\"\n+#include \"rust-hir-visitor.h\"\n \n namespace Rust {\n namespace Compile {"}, {"sha": "e33bad9751ad07c26465c2f17ce3d1011d4a64d2", "filename": "gcc/rust/backend/rust-compile-stmt.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Fbackend%2Frust-compile-stmt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Fbackend%2Frust-compile-stmt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-stmt.h?ref=18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "patch": "@@ -20,6 +20,7 @@\n #define RUST_COMPILE_STMT\n \n #include \"rust-compile-base.h\"\n+#include \"rust-hir-visitor.h\"\n \n namespace Rust {\n namespace Compile {"}, {"sha": "7d91156c05930b2e87a3c320321715a9f7936dc7", "filename": "gcc/rust/typecheck/rust-autoderef.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-autoderef.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-autoderef.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-autoderef.cc?ref=18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "patch": "@@ -21,6 +21,7 @@\n #include \"rust-hir-dot-operator.h\"\n #include \"rust-hir-trait-resolve.h\"\n #include \"rust-type-util.h\"\n+#include \"rust-substitution-mapper.h\"\n \n namespace Rust {\n namespace Resolver {"}, {"sha": "7140c65f012602ac9d01fbd72f4681120081d0f8", "filename": "gcc/rust/typecheck/rust-hir-path-probe.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-hir-path-probe.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-hir-path-probe.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-path-probe.cc?ref=18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "patch": "@@ -19,6 +19,8 @@\n #include \"rust-hir-path-probe.h\"\n #include \"rust-hir-trait-resolve.h\"\n #include \"rust-type-util.h\"\n+#include \"rust-hir-type-bounds.h\"\n+#include \"rust-hir-full.h\"\n \n namespace Rust {\n namespace Resolver {"}, {"sha": "a569feaa8c57298a320fc08113117d1394dc9fcf", "filename": "gcc/rust/typecheck/rust-hir-path-probe.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-hir-path-probe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-hir-path-probe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-path-probe.h?ref=18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "patch": "@@ -20,10 +20,8 @@\n #define RUST_HIR_PATH_PROBE_H\n \n #include \"rust-hir-type-check-base.h\"\n-#include \"rust-hir-full.h\"\n+#include \"rust-hir-visitor.h\"\n #include \"rust-tyty.h\"\n-#include \"rust-substitution-mapper.h\"\n-#include \"rust-hir-type-bounds.h\"\n \n namespace Rust {\n namespace Resolver {"}, {"sha": "8062406a6c36e1b897041786751881645e00ee4e", "filename": "gcc/rust/typecheck/rust-hir-trait-reference.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-hir-trait-reference.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-hir-trait-reference.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-trait-reference.h?ref=18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "patch": "@@ -20,7 +20,6 @@\n #define RUST_HIR_TRAIT_REF_H\n \n #include \"rust-hir-full.h\"\n-#include \"rust-hir-type-check-util.h\"\n #include \"rust-tyty-visitor.h\"\n \n namespace Rust {"}, {"sha": "a2c6a976df0644263f4ed66a8e6ebc3a57eed1df", "filename": "gcc/rust/typecheck/rust-hir-trait-resolve.cc", "status": "modified", "additions": 28, "deletions": 20, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-hir-trait-resolve.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-hir-trait-resolve.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-trait-resolve.cc?ref=18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "patch": "@@ -567,26 +567,34 @@ AssociatedImplTrait::setup_associated_types (\n   TyTy::SubstitutionArgumentMappings associated_type_args (\n     std::move (associated_arguments), {}, locus);\n \n-  ImplTypeIterator iter (*impl, [&] (HIR::TypeAlias &type) {\n-    TraitItemReference *resolved_trait_item = nullptr;\n-    bool ok = trait->lookup_trait_item (type.get_new_type_name (),\n-\t\t\t\t\t&resolved_trait_item);\n-    if (!ok)\n-      return;\n-    if (resolved_trait_item->get_trait_item_type ()\n-\t!= TraitItemReference::TraitItemType::TYPE)\n-      return;\n-\n-    TyTy::BaseType *lookup;\n-    if (!context->lookup_type (type.get_mappings ().get_hirid (), &lookup))\n-      return;\n-\n-    // this might be generic\n-    TyTy::BaseType *substituted\n-      = SubstMapperInternal::Resolve (lookup, associated_type_args);\n-    resolved_trait_item->associated_type_set (substituted);\n-  });\n-  iter.go ();\n+  auto &impl_items = impl->get_impl_items ();\n+  for (auto &impl_item : impl_items)\n+    {\n+      bool is_type_alias = impl_item->get_impl_item_type ()\n+\t\t\t   == HIR::ImplItem::ImplItemType::TYPE_ALIAS;\n+      if (!is_type_alias)\n+\tcontinue;\n+\n+      HIR::TypeAlias &type = *static_cast<HIR::TypeAlias *> (impl_item.get ());\n+\n+      TraitItemReference *resolved_trait_item = nullptr;\n+      bool ok = trait->lookup_trait_item (type.get_new_type_name (),\n+\t\t\t\t\t  &resolved_trait_item);\n+      if (!ok)\n+\tcontinue;\n+      if (resolved_trait_item->get_trait_item_type ()\n+\t  != TraitItemReference::TraitItemType::TYPE)\n+\tcontinue;\n+\n+      TyTy::BaseType *lookup;\n+      if (!context->lookup_type (type.get_mappings ().get_hirid (), &lookup))\n+\tcontinue;\n+\n+      // this might be generic\n+      TyTy::BaseType *substituted\n+\t= SubstMapperInternal::Resolve (lookup, associated_type_args);\n+      resolved_trait_item->associated_type_set (substituted);\n+    }\n \n   return self_result;\n }"}, {"sha": "92cb62cb0359252ed54f649b0cd06de3af50c681", "filename": "gcc/rust/typecheck/rust-hir-trait-resolve.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-hir-trait-resolve.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-hir-trait-resolve.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-trait-resolve.h?ref=18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "patch": "@@ -20,6 +20,7 @@\n #define RUST_HIR_TRAIT_RESOLVE_H\n \n #include \"rust-hir-type-check-type.h\"\n+#include \"rust-hir-visitor.h\"\n \n namespace Rust {\n namespace Resolver {"}, {"sha": "8b2db54dfe9d44b99834d8edc62e851641968f1f", "filename": "gcc/rust/typecheck/rust-hir-type-check-expr.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h?ref=18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "patch": "@@ -20,6 +20,7 @@\n #define RUST_HIR_TYPE_CHECK_EXPR\n \n #include \"rust-hir-type-check-base.h\"\n+#include \"rust-hir-visitor.h\"\n #include \"rust-tyty.h\"\n \n namespace Rust {"}, {"sha": "031fdc221623b6401014ae1abb4dd44510849106", "filename": "gcc/rust/typecheck/rust-hir-type-check-implitem.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-implitem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-implitem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-implitem.h?ref=18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "patch": "@@ -20,6 +20,7 @@\n #define RUST_HIR_TYPE_CHECK_IMPLITEM_H\n \n #include \"rust-hir-type-check-base.h\"\n+#include \"rust-hir-visitor.h\"\n \n namespace Rust {\n namespace Resolver {"}, {"sha": "68eac7c13f18f0062efa431228e27308deb91088", "filename": "gcc/rust/typecheck/rust-hir-type-check-item.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-item.h?ref=18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "patch": "@@ -20,6 +20,7 @@\n #define RUST_HIR_TYPE_CHECK_ITEM\n \n #include \"rust-hir-type-check-base.h\"\n+#include \"rust-hir-visitor.h\"\n \n namespace Rust {\n namespace Resolver {"}, {"sha": "02821fc18176108cf9430a686b662a1dd89501ce", "filename": "gcc/rust/typecheck/rust-hir-type-check-path.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-path.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-path.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-path.cc?ref=18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "patch": "@@ -23,6 +23,7 @@\n #include \"rust-substitution-mapper.h\"\n #include \"rust-hir-path-probe.h\"\n #include \"rust-type-util.h\"\n+#include \"rust-hir-type-bounds.h\"\n \n namespace Rust {\n namespace Resolver {"}, {"sha": "9f1e5fe9bdea796a01f68e96c72c71447deb456e", "filename": "gcc/rust/typecheck/rust-hir-type-check-pattern.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-pattern.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-pattern.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-pattern.h?ref=18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "patch": "@@ -20,6 +20,7 @@\n #define RUST_HIR_TYPE_CHECK_PATTERN\n \n #include \"rust-hir-type-check-base.h\"\n+#include \"rust-hir-visitor.h\"\n \n namespace Rust {\n namespace Resolver {"}, {"sha": "abc2140f0d2edcb88a68fe4c1669116f8a4d302e", "filename": "gcc/rust/typecheck/rust-hir-type-check-stmt.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-stmt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-stmt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-stmt.h?ref=18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "patch": "@@ -20,6 +20,7 @@\n #define RUST_HIR_TYPE_CHECK_STMT\n \n #include \"rust-hir-type-check-base.h\"\n+#include \"rust-hir-visitor.h\"\n \n namespace Rust {\n namespace Resolver {"}, {"sha": "64d0c268c40f5122a84be44066347beebd66d754", "filename": "gcc/rust/typecheck/rust-hir-type-check-type.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-type.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c00a4c0c12e721755adf4a4869b6fa7ef1784d/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-type.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-type.h?ref=18c00a4c0c12e721755adf4a4869b6fa7ef1784d", "patch": "@@ -20,6 +20,7 @@\n #define RUST_HIR_TYPE_CHECK_TYPE\n \n #include \"rust-hir-type-check-base.h\"\n+#include \"rust-hir-visitor.h\"\n \n namespace Rust {\n namespace Resolver {"}, {"sha": "a90a1532621959ddafb05c09dd4b9fcd27f4e23b", "filename": "gcc/rust/typecheck/rust-hir-type-check-util.cc", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eef15537f20e7077ace626f55170c70c60191b5/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-util.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eef15537f20e7077ace626f55170c70c60191b5/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-util.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-util.cc?ref=1eef15537f20e7077ace626f55170c70c60191b5", "patch": "@@ -1,41 +0,0 @@\n-// Copyright (C) 2021-2023 Free Software Foundation, Inc.\n-\n-// This file is part of GCC.\n-\n-// GCC is free software; you can redistribute it and/or modify it under\n-// the terms of the GNU General Public License as published by the Free\n-// Software Foundation; either version 3, or (at your option) any later\n-// version.\n-\n-// GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-// WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-// for more details.\n-\n-// You should have received a copy of the GNU General Public License\n-// along with GCC; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-#include \"rust-hir-type-check-util.h\"\n-#include \"rust-hir-full.h\"\n-\n-namespace Rust {\n-namespace Resolver {\n-\n-void\n-ImplTypeIterator::go ()\n-{\n-  for (auto &item : impl.get_impl_items ())\n-    {\n-      item->accept_vis (*this);\n-    }\n-}\n-\n-void\n-ImplTypeIterator::visit (HIR::TypeAlias &alias)\n-{\n-  cb (alias);\n-}\n-\n-} // namespace Resolver\n-} // namespace Rust"}, {"sha": "575830999da1cfa4646e7c714c333bf66b6003a0", "filename": "gcc/rust/typecheck/rust-hir-type-check-util.h", "status": "removed", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eef15537f20e7077ace626f55170c70c60191b5/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-util.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eef15537f20e7077ace626f55170c70c60191b5/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-util.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-util.h?ref=1eef15537f20e7077ace626f55170c70c60191b5", "patch": "@@ -1,50 +0,0 @@\n-// Copyright (C) 2021-2023 Free Software Foundation, Inc.\n-\n-// This file is part of GCC.\n-\n-// GCC is free software; you can redistribute it and/or modify it under\n-// the terms of the GNU General Public License as published by the Free\n-// Software Foundation; either version 3, or (at your option) any later\n-// version.\n-\n-// GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-// WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-// for more details.\n-\n-// You should have received a copy of the GNU General Public License\n-// along with GCC; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-#ifndef RUST_HIR_TYPE_CHECK_UTIL_H\n-#define RUST_HIR_TYPE_CHECK_UTIL_H\n-\n-#include \"rust-system.h\"\n-#include \"rust-hir-visitor.h\"\n-\n-namespace Rust {\n-namespace Resolver {\n-\n-class ImplTypeIterator : public HIR::HIRFullVisitorBase\n-{\n-  using HIR::HIRFullVisitorBase::visit;\n-\n-public:\n-  ImplTypeIterator (HIR::ImplBlock &impl,\n-\t\t    std::function<void (HIR::TypeAlias &alias)> cb)\n-    : impl (impl), cb (cb)\n-  {}\n-\n-  void go ();\n-\n-  void visit (HIR::TypeAlias &alias) override;\n-\n-private:\n-  HIR::ImplBlock &impl;\n-  std::function<void (HIR::TypeAlias &alias)> cb;\n-};\n-\n-} // namespace Resolver\n-} // namespace Rust\n-\n-#endif // RUST_HIR_TYPE_CHECK_UTIL_H"}]}