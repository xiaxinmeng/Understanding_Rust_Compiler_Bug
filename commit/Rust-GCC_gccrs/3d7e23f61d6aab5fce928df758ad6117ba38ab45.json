{"sha": "3d7e23f61d6aab5fce928df758ad6117ba38ab45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q3ZTIzZjYxZDZhYWI1ZmNlOTI4ZGY3NThhZDYxMTdiYTM4YWI0NQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2008-10-21T20:48:16Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2008-10-21T20:48:16Z"}, "message": "re PR middle-end/37815 (ICE in vt_add_function_parameters (bootstrap error))\n\n        PR 37815\n        * emit-rtl.c (get_spill_slot_decl): Export.\n        * emit-rtl.h (get_spill_slot_decl): Declare.\n        * var-tracking.c (vt_add_function_parameters): Relax assertion\n        on the contents of MEM_EXPR in a PARM_DECL to include a spill slot.\n\nFrom-SVN: r141278", "tree": {"sha": "052bfb82b1dc059871fa44b6f66ba8b9ead7deca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/052bfb82b1dc059871fa44b6f66ba8b9ead7deca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d7e23f61d6aab5fce928df758ad6117ba38ab45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d7e23f61d6aab5fce928df758ad6117ba38ab45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d7e23f61d6aab5fce928df758ad6117ba38ab45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d7e23f61d6aab5fce928df758ad6117ba38ab45/comments", "author": null, "committer": null, "parents": [{"sha": "86b9515c41b13f0fca9d0e89dd495772a014d364", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86b9515c41b13f0fca9d0e89dd495772a014d364", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86b9515c41b13f0fca9d0e89dd495772a014d364"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "79b2c01ab6f15e21365310ae4b7a318272cd3d62", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d7e23f61d6aab5fce928df758ad6117ba38ab45/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d7e23f61d6aab5fce928df758ad6117ba38ab45/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d7e23f61d6aab5fce928df758ad6117ba38ab45", "patch": "@@ -1,3 +1,11 @@\n+2008-10-21  Richard Henderson  <rth@redhat.com>\n+\n+\tPR 37815\n+\t* emit-rtl.c (get_spill_slot_decl): Export.\n+\t* emit-rtl.h (get_spill_slot_decl): Declare.\n+\t* var-tracking.c (vt_add_function_parameters): Relax assertion\n+\ton the contents of MEM_EXPR in a PARM_DECL to include a spill slot.\n+\n 2008-10-21  Bob Wilson  <bob.wilson@acm.org>\n \n \t* var-tracking.c (insn_stack_adjust_offset_pre_post): If insn has a"}, {"sha": "ced4e58b160623f4e547f6a6ed170aa3a0228bf5", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d7e23f61d6aab5fce928df758ad6117ba38ab45/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d7e23f61d6aab5fce928df758ad6117ba38ab45/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=3d7e23f61d6aab5fce928df758ad6117ba38ab45", "patch": "@@ -2141,13 +2141,13 @@ widen_memory_access (rtx memref, enum machine_mode mode, HOST_WIDE_INT offset)\n /* A fake decl that is used as the MEM_EXPR of spill slots.  */\n static GTY(()) tree spill_slot_decl;\n \n-static tree\n-get_spill_slot_decl (void)\n+tree\n+get_spill_slot_decl (bool force_build_p)\n {\n   tree d = spill_slot_decl;\n   rtx rd;\n \n-  if (d)\n+  if (d || !force_build_p)\n     return d;\n \n   d = build_decl (VAR_DECL, get_identifier (\"%sfp\"), void_type_node);\n@@ -2179,7 +2179,7 @@ set_mem_attrs_for_spill (rtx mem)\n   rtx addr, offset;\n   tree expr;\n \n-  expr = get_spill_slot_decl ();\n+  expr = get_spill_slot_decl (true);\n   alias = MEM_ALIAS_SET (DECL_RTL (expr));\n \n   /* We expect the incoming memory to be of the form:"}, {"sha": "11921a4e737c94ae8d123fc89d97a81e423f27ae", "filename": "gcc/emit-rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d7e23f61d6aab5fce928df758ad6117ba38ab45/gcc%2Femit-rtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d7e23f61d6aab5fce928df758ad6117ba38ab45/gcc%2Femit-rtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.h?ref=3d7e23f61d6aab5fce928df758ad6117ba38ab45", "patch": "@@ -37,6 +37,7 @@ extern void set_mem_size (rtx, rtx);\n \n /* Set the attributes for MEM appropriate for a spill slot.  */\n extern void set_mem_attrs_for_spill (rtx);\n+extern tree get_spill_slot_decl (bool);\n \n /* Return a memory reference like MEMREF, but with its address changed to\n    ADDR.  The caller is asserting that the actual piece of memory pointed"}, {"sha": "1451278e8a460f6f1b21388d8010b891371ddbd9", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d7e23f61d6aab5fce928df758ad6117ba38ab45/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d7e23f61d6aab5fce928df758ad6117ba38ab45/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=3d7e23f61d6aab5fce928df758ad6117ba38ab45", "patch": "@@ -3182,7 +3182,16 @@ vt_add_function_parameters (void)\n       if (!decl)\n \tcontinue;\n \n-      gcc_assert (parm == decl);\n+      if (parm != decl)\n+\t{\n+\t  /* Assume that DECL_RTL was a pseudo that got spilled to\n+\t     memory.  The spill slot sharing code will force the\n+\t     memory to reference spill_slot_decl (%sfp), so we don't\n+\t     match above.  That's ok, the pseudo must have referenced\n+\t     the entire parameter, so just reset OFFSET.  */\n+\t  gcc_assert (decl == get_spill_slot_decl (false));\n+\t  offset = 0;\n+\t}\n \n       if (!track_loc_p (incoming, parm, offset, false, &mode, &offset))\n \tcontinue;"}]}