{"sha": "9f6de2b92db75e90a8a2c56d0bc9b5ee96cfbb05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY2ZGUyYjkyZGI3NWU5MGE4YTJjNTZkMGJjOWI1ZWU5NmNmYmIwNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-02-13T13:13:14Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-02-13T13:13:14Z"}, "message": "(quality_type prototype): Typo, rename as qualify_type.\n\n(build_binary_op): Fix precedence error.\n\nFrom-SVN: r11250", "tree": {"sha": "e6ff3d2b2a83d50781d6175f2151f540ca0e065c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6ff3d2b2a83d50781d6175f2151f540ca0e065c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f6de2b92db75e90a8a2c56d0bc9b5ee96cfbb05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f6de2b92db75e90a8a2c56d0bc9b5ee96cfbb05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f6de2b92db75e90a8a2c56d0bc9b5ee96cfbb05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f6de2b92db75e90a8a2c56d0bc9b5ee96cfbb05/comments", "author": null, "committer": null, "parents": [{"sha": "ac02eb622c2c5e68eee6f176f78b6ea15a1b0e0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac02eb622c2c5e68eee6f176f78b6ea15a1b0e0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac02eb622c2c5e68eee6f176f78b6ea15a1b0e0d"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "b53da181ce996b7c7e9439293b19ff6976ac88e6", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f6de2b92db75e90a8a2c56d0bc9b5ee96cfbb05/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f6de2b92db75e90a8a2c56d0bc9b5ee96cfbb05/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=9f6de2b92db75e90a8a2c56d0bc9b5ee96cfbb05", "patch": "@@ -42,7 +42,7 @@ static int missing_braces_mentioned;\n extern char *index ();\n extern char *rindex ();\n \n-static tree quality_type\t\tPROTO((tree, tree));\n+static tree qualify_type\t\tPROTO((tree, tree));\n static int comp_target_types\t\tPROTO((tree, tree));\n static int function_types_compatible_p\tPROTO((tree, tree));\n static int type_lists_compatible_p\tPROTO((tree, tree));\n@@ -2481,9 +2481,9 @@ build_binary_op (code, orig_op0, orig_op1, convert_p)\n                  not use the most significant bit of result_type.  */\n \t      else if ((resultcode == EQ_EXPR || resultcode == NE_EXPR)\n \t\t       && ((op0_signed && TREE_CODE (xop1) == INTEGER_CST\n-\t\t\t    && int_fits_type_p (xop1, signed_type (result_type))\n+\t\t\t    && int_fits_type_p (xop1, signed_type (result_type)))\n \t\t\t   || (op1_signed && TREE_CODE (xop0) == INTEGER_CST\n-\t\t\t       && int_fits_type_p (xop0, signed_type (result_type))))))\n+\t\t\t       && int_fits_type_p (xop0, signed_type (result_type)))))\n \t\t/* OK */;\n \t      else\n \t\twarning (\"comparison between signed and unsigned\");"}]}