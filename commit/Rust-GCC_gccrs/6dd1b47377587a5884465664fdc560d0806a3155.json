{"sha": "6dd1b47377587a5884465664fdc560d0806a3155", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRkMWI0NzM3NzU4N2E1ODg0NDY1NjY0ZmRjNTYwZDA4MDZhMzE1NQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-03-12T22:24:57Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-03-12T22:24:57Z"}, "message": "(__LONG_MAX__): on Alpha, use 64 bit value.\n\nFrom-SVN: r11521", "tree": {"sha": "ad8b67f450a0e7f37f22ddc589348ac38e680324", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad8b67f450a0e7f37f22ddc589348ac38e680324"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6dd1b47377587a5884465664fdc560d0806a3155", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dd1b47377587a5884465664fdc560d0806a3155", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dd1b47377587a5884465664fdc560d0806a3155", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dd1b47377587a5884465664fdc560d0806a3155/comments", "author": null, "committer": null, "parents": [{"sha": "bf1b20dab8c1b971e2330918fe4b3707b7f876db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf1b20dab8c1b971e2330918fe4b3707b7f876db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf1b20dab8c1b971e2330918fe4b3707b7f876db"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "d413427c7d63faa73857c7003fafe3908c5e3547", "filename": "gcc/glimits.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd1b47377587a5884465664fdc560d0806a3155/gcc%2Fglimits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd1b47377587a5884465664fdc560d0806a3155/gcc%2Fglimits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fglimits.h?ref=6dd1b47377587a5884465664fdc560d0806a3155", "patch": "@@ -63,7 +63,11 @@\n /* Minimum and maximum values a `signed long int' can hold.\n    (Same as `int').  */\n #ifndef __LONG_MAX__\n+#ifndef __alpha__\n #define __LONG_MAX__ 2147483647L\n+#else\n+#define __LONG_MAX__ 9223372036854775807L\n+# endif /* __alpha__ */\n #endif\n #undef LONG_MIN\n #define LONG_MIN (-LONG_MAX-1)"}]}