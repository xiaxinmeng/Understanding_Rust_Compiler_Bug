{"sha": "3d9850f4f8a4bcc9b0dcc04ea27b7ad8965096d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q5ODUwZjRmOGE0YmNjOWIwZGNjMDRlYTI3YjdhZDg5NjUwOTZkMQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-08-21T18:57:06Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-08-21T18:57:06Z"}, "message": "search.c (lookup_field_r): Remove obsolete code for type-named field in PoD.\n\n\t* search.c (lookup_field_r): Remove obsolete code for type-named\n\tfield in PoD.\n\nFrom-SVN: r251243", "tree": {"sha": "4cfc35e8db2d08de0c2757722c2f236bcbcc56b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cfc35e8db2d08de0c2757722c2f236bcbcc56b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d9850f4f8a4bcc9b0dcc04ea27b7ad8965096d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d9850f4f8a4bcc9b0dcc04ea27b7ad8965096d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d9850f4f8a4bcc9b0dcc04ea27b7ad8965096d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d9850f4f8a4bcc9b0dcc04ea27b7ad8965096d1/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8e063904ef8bb900f2eeb01106abca25cdd8a8cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e063904ef8bb900f2eeb01106abca25cdd8a8cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e063904ef8bb900f2eeb01106abca25cdd8a8cc"}], "stats": {"total": 42, "additions": 14, "deletions": 28}, "files": [{"sha": "dd94fdb1c4e50bb81801adfaa7a1cceb2979b938", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d9850f4f8a4bcc9b0dcc04ea27b7ad8965096d1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d9850f4f8a4bcc9b0dcc04ea27b7ad8965096d1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3d9850f4f8a4bcc9b0dcc04ea27b7ad8965096d1", "patch": "@@ -1,5 +1,8 @@\n 2017-08-21  Nathan Sidwell  <nathan@acm.org>\n \n+\t* search.c (lookup_field_r): Remove obsolete code for type-named\n+\tfield in PoD.\n+\n \t* search.c (lookup_field_1): Assert TYPE is a class and VFIELD\n \tisn't special.\n \t(lookup_field_fuzzy_info::fuzzy_lookup_fnfields): Delete."}, {"sha": "6628a1b22910e403ae1dcba1cb828b645c9748d0", "filename": "gcc/cp/search.c", "status": "modified", "additions": 11, "deletions": 28, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d9850f4f8a4bcc9b0dcc04ea27b7ad8965096d1/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d9850f4f8a4bcc9b0dcc04ea27b7ad8965096d1/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=3d9850f4f8a4bcc9b0dcc04ea27b7ad8965096d1", "patch": "@@ -1111,39 +1111,22 @@ lookup_field_r (tree binfo, void *data)\n \tnval = dep_using;\n     }\n \n-  /* If there is no declaration with the indicated name in this type,\n-     then there's nothing to do.  */\n-  if (!nval)\n-    goto done;\n-\n   /* If we're looking up a type (as with an elaborated type specifier)\n      we ignore all non-types we find.  */\n-  if (lfi->want_type && !DECL_DECLARES_TYPE_P (nval))\n+  if (lfi->want_type && nval && !DECL_DECLARES_TYPE_P (nval))\n     {\n-      if (lfi->name == TYPE_IDENTIFIER (type))\n-\t{\n-\t  /* If the aggregate has no user defined constructors, we allow\n-\t     it to have fields with the same name as the enclosing type.\n-\t     If we are looking for that name, find the corresponding\n-\t     TYPE_DECL.  */\n-\t  for (nval = TREE_CHAIN (nval); nval; nval = TREE_CHAIN (nval))\n-\t    if (DECL_NAME (nval) == lfi->name\n-\t\t&& TREE_CODE (nval) == TYPE_DECL)\n-\t      break;\n-\t}\n-      else\n-\tnval = NULL_TREE;\n-      if (!nval && CLASSTYPE_NESTED_UTDS (type) != NULL)\n-\t{\n-\t  binding_entry e = binding_table_find (CLASSTYPE_NESTED_UTDS (type),\n-\t\t\t\t\t\tlfi->name);\n-\t  if (e != NULL)\n-\t    nval = TYPE_MAIN_DECL (e->type);\n-\t  else\n-\t    goto done;\n-\t}\n+      nval = NULL_TREE;\n+      if (CLASSTYPE_NESTED_UTDS (type))\n+\tif (binding_entry e = binding_table_find (CLASSTYPE_NESTED_UTDS (type),\n+\t\t\t\t\t\t  lfi->name))\n+\t  nval = TYPE_MAIN_DECL (e->type);\n     }\n \n+  /* If there is no declaration with the indicated name in this type,\n+     then there's nothing to do.  */\n+  if (!nval)\n+    goto done;\n+\n   /* If the lookup already found a match, and the new value doesn't\n      hide the old one, we might have an ambiguity.  */\n   if (lfi->rval_binfo"}]}