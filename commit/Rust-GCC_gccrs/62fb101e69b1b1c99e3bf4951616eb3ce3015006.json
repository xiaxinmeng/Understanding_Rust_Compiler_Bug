{"sha": "62fb101e69b1b1c99e3bf4951616eb3ce3015006", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJmYjEwMWU2OWIxYjFjOTllM2JmNDk1MTYxNmViM2NlMzAxNTAwNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-04-29T14:44:07Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-04-29T14:44:07Z"}, "message": "re PR tree-optimization/60971 (Wrong code when coercing unsigned char to bool)\n\n\tPR tree-optimization/60971\n\t* tree-tailcall.c (process_assignment): Reject conversions which\n\treduce precision.\n\n\t* c-c++-common/turtore/pr60971.c: New test.\n\nFrom-SVN: r209900", "tree": {"sha": "09f0906e732040a14e4c16680206a15c68ca8130", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09f0906e732040a14e4c16680206a15c68ca8130"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62fb101e69b1b1c99e3bf4951616eb3ce3015006", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62fb101e69b1b1c99e3bf4951616eb3ce3015006", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62fb101e69b1b1c99e3bf4951616eb3ce3015006", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62fb101e69b1b1c99e3bf4951616eb3ce3015006/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d77f7b19b7f15ac0fec0823e7cc507f39ab36c30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d77f7b19b7f15ac0fec0823e7cc507f39ab36c30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d77f7b19b7f15ac0fec0823e7cc507f39ab36c30"}], "stats": {"total": 61, "additions": 58, "deletions": 3}, "files": [{"sha": "f22fe1d136a22c110c7abd1c7cfcc761932c6e5e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62fb101e69b1b1c99e3bf4951616eb3ce3015006/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62fb101e69b1b1c99e3bf4951616eb3ce3015006/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=62fb101e69b1b1c99e3bf4951616eb3ce3015006", "patch": "@@ -1,3 +1,9 @@\n+2014-04-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/60971\n+\t* tree-tailcall.c (process_assignment): Reject conversions which\n+\treduce precision.\n+\n 2014-04-29  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* calls.c (initialize_argument_information): Always treat"}, {"sha": "689f4e847fbf969b387d3106470256a3895de857", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62fb101e69b1b1c99e3bf4951616eb3ce3015006/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62fb101e69b1b1c99e3bf4951616eb3ce3015006/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=62fb101e69b1b1c99e3bf4951616eb3ce3015006", "patch": "@@ -1,3 +1,8 @@\n+2014-04-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/60971\n+\t* c-c++-common/turtore/pr60971.c: New test.\n+\n 2014-04-29  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* gcc.target/aarch64/simd/simd.exp: New file."}, {"sha": "b7a967dabb45f60a265ff9ab57fc1d7a3dc2b2f2", "filename": "gcc/testsuite/c-c++-common/torture/pr60971.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62fb101e69b1b1c99e3bf4951616eb3ce3015006/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftorture%2Fpr60971.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62fb101e69b1b1c99e3bf4951616eb3ce3015006/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftorture%2Fpr60971.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftorture%2Fpr60971.c?ref=62fb101e69b1b1c99e3bf4951616eb3ce3015006", "patch": "@@ -0,0 +1,34 @@\n+/* PR tree-optimization/60971 */\n+/* { dg-do run } */\n+\n+#ifndef __cplusplus\n+#define bool _Bool\n+#endif\n+\n+volatile unsigned char c;\n+\n+__attribute__((noinline)) unsigned char\n+foo (void)\n+{\n+  return c;\n+}\n+\n+__attribute__((noinline)) bool\n+bar (void)\n+{\n+  return foo () & 1;\n+}\n+\n+int\n+main ()\n+{\n+  c = 0x41;\n+  c = bar ();\n+  if (c != 1)\n+    __builtin_abort ();\n+  c = 0x20;\n+  c = bar ();\n+  if (c != 0)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "9ad25d81c6d49b77f161879e95d55284e93fa89d", "filename": "gcc/tree-tailcall.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62fb101e69b1b1c99e3bf4951616eb3ce3015006/gcc%2Ftree-tailcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62fb101e69b1b1c99e3bf4951616eb3ce3015006/gcc%2Ftree-tailcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-tailcall.c?ref=62fb101e69b1b1c99e3bf4951616eb3ce3015006", "patch": "@@ -285,9 +285,19 @@ process_assignment (gimple stmt, gimple_stmt_iterator call, tree *m,\n     {\n       /* Reject a tailcall if the type conversion might need\n \t additional code.  */\n-      if (gimple_assign_cast_p (stmt)\n-\t  && TYPE_MODE (TREE_TYPE (dest)) != TYPE_MODE (TREE_TYPE (src_var)))\n-\treturn false;\n+      if (gimple_assign_cast_p (stmt))\n+\t{\n+\t  if (TYPE_MODE (TREE_TYPE (dest)) != TYPE_MODE (TREE_TYPE (src_var)))\n+\t    return false;\n+\n+\t  /* Even if the type modes are the same, if the precision of the\n+\t     type is smaller than mode's precision,\n+\t     reduce_to_bit_field_precision would generate additional code.  */\n+\t  if (INTEGRAL_TYPE_P (TREE_TYPE (dest))\n+\t      && (GET_MODE_PRECISION (TYPE_MODE (TREE_TYPE (dest)))\n+\t\t  > TYPE_PRECISION (TREE_TYPE (dest))))\n+\t    return false;\n+\t}\n \n       if (src_var != *ass_var)\n \treturn false;"}]}