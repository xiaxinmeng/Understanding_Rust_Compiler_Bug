{"sha": "d30ab8e0b79a37150f0bbcc8b0d7c390ee47f042", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMwYWI4ZTBiNzlhMzcxNTBmMGJiY2M4YjBkN2MzOTBlZTQ3ZjA0Mg==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2015-09-15T11:39:12Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2015-09-15T11:39:12Z"}, "message": "[AArch64 array_mode 1/8] Rename vec_store_lanes<mode>_lane to aarch64_vec_store_lanes<mode>_lane\n\n\t* config/aarch64/aarch64-simd.md (vec_store_lanesoi_lane<mode>): Rename\n\tto...\n\t(aarch64_vec_store_lanesoi_lane<mode>): ...this.\n\n\t(vec_store_lanesci_lane<mode>): Rename to...\n\t(aarch64_vec_store_lanesci_lane<mode>): ...this.\n\n\t(vec_store_lanesxi_lane<mode>): Rename to...\n\t(aarch64_vec_store_lanesxi_lane<mode>): ...this.\n\n\t(aarch64_st2_lane<mode>, aarch64_st3_lane<mode>,\n\taarch64_st4_lane<mode>): Follow renaming.\n\nFrom-SVN: r227781", "tree": {"sha": "a62b03fba137746c459b70ed6edbd35094d0f9b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a62b03fba137746c459b70ed6edbd35094d0f9b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d30ab8e0b79a37150f0bbcc8b0d7c390ee47f042", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d30ab8e0b79a37150f0bbcc8b0d7c390ee47f042", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d30ab8e0b79a37150f0bbcc8b0d7c390ee47f042", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d30ab8e0b79a37150f0bbcc8b0d7c390ee47f042/comments", "author": null, "committer": null, "parents": [{"sha": "ceab0d1618f190e46cded2f48a4c5e458e6fd310", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ceab0d1618f190e46cded2f48a4c5e458e6fd310", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ceab0d1618f190e46cded2f48a4c5e458e6fd310"}], "stats": {"total": 33, "additions": 27, "deletions": 6}, "files": [{"sha": "95e2d320947a7959aaddbe5a06649ef12ebf0526", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d30ab8e0b79a37150f0bbcc8b0d7c390ee47f042/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d30ab8e0b79a37150f0bbcc8b0d7c390ee47f042/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d30ab8e0b79a37150f0bbcc8b0d7c390ee47f042", "patch": "@@ -1,3 +1,18 @@\n+2015-09-15  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* config/aarch64/aarch64-simd.md (vec_store_lanesoi_lane<mode>): Rename\n+\tto...\n+\t(aarch64_vec_store_lanesoi_lane<mode>): ...this.\n+\n+\t(vec_store_lanesci_lane<mode>): Rename to...\n+\t(aarch64_vec_store_lanesci_lane<mode>): ...this.\n+\n+\t(vec_store_lanesxi_lane<mode>): Rename to...\n+\t(aarch64_vec_store_lanesxi_lane<mode>): ...this.\n+\n+\t(aarch64_st2_lane<mode>, aarch64_st3_lane<mode>,\n+\taarch64_st4_lane<mode>): Follow renaming.\n+\n 2015-09-15  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n         * config/s390/s390.c (s390_const_operand_ok): Add missing"}, {"sha": "67cb4c9bffd35942868676eb1f3688e44c73f3d8", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d30ab8e0b79a37150f0bbcc8b0d7c390ee47f042/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d30ab8e0b79a37150f0bbcc8b0d7c390ee47f042/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=d30ab8e0b79a37150f0bbcc8b0d7c390ee47f042", "patch": "@@ -3981,7 +3981,7 @@\n )\n \n ;; RTL uses GCC vector extension indices, so flip only for assembly.\n-(define_insn \"vec_store_lanesoi_lane<mode>\"\n+(define_insn \"aarch64_vec_store_lanesoi_lane<mode>\"\n   [(set (match_operand:<V_TWO_ELEM> 0 \"aarch64_simd_struct_operand\" \"=Utv\")\n \t(unspec:<V_TWO_ELEM> [(match_operand:OI 1 \"register_operand\" \"w\")\n \t\t    (unspec:VALLDIF [(const_int 0)] UNSPEC_VSTRUCTDUMMY)\n@@ -4079,7 +4079,7 @@\n )\n \n ;; RTL uses GCC vector extension indices, so flip only for assembly.\n-(define_insn \"vec_store_lanesci_lane<mode>\"\n+(define_insn \"aarch64_vec_store_lanesci_lane<mode>\"\n   [(set (match_operand:<V_THREE_ELEM> 0 \"aarch64_simd_struct_operand\" \"=Utv\")\n \t(unspec:<V_THREE_ELEM> [(match_operand:CI 1 \"register_operand\" \"w\")\n \t\t    (unspec:VALLDIF [(const_int 0)] UNSPEC_VSTRUCTDUMMY)\n@@ -4177,7 +4177,7 @@\n )\n \n ;; RTL uses GCC vector extension indices, so flip only for assembly.\n-(define_insn \"vec_store_lanesxi_lane<mode>\"\n+(define_insn \"aarch64_vec_store_lanesxi_lane<mode>\"\n   [(set (match_operand:<V_FOUR_ELEM> 0 \"aarch64_simd_struct_operand\" \"=Utv\")\n \t(unspec:<V_FOUR_ELEM> [(match_operand:XI 1 \"register_operand\" \"w\")\n \t\t    (unspec:VALLDIF [(const_int 0)] UNSPEC_VSTRUCTDUMMY)\n@@ -4886,7 +4886,9 @@\n   machine_mode mode = <V_TWO_ELEM>mode;\n   rtx mem = gen_rtx_MEM (mode, operands[0]);\n \n-  emit_insn (gen_vec_store_lanesoi_lane<mode> (mem, operands[1], operands[2]));\n+  emit_insn (gen_aarch64_vec_store_lanesoi_lane<mode> (mem,\n+\t\t\t\t\t\t       operands[1],\n+\t\t\t\t\t\t       operands[2]));\n   DONE;\n })\n \n@@ -4900,7 +4902,9 @@\n   machine_mode mode = <V_THREE_ELEM>mode;\n   rtx mem = gen_rtx_MEM (mode, operands[0]);\n \n-  emit_insn (gen_vec_store_lanesci_lane<mode> (mem, operands[1], operands[2]));\n+  emit_insn (gen_aarch64_vec_store_lanesci_lane<mode> (mem,\n+\t\t\t\t\t\t       operands[1],\n+\t\t\t\t\t\t       operands[2]));\n   DONE;\n })\n \n@@ -4914,7 +4918,9 @@\n   machine_mode mode = <V_FOUR_ELEM>mode;\n   rtx mem = gen_rtx_MEM (mode, operands[0]);\n \n-  emit_insn (gen_vec_store_lanesxi_lane<mode> (mem, operands[1], operands[2]));\n+  emit_insn (gen_aarch64_vec_store_lanesxi_lane<mode> (mem,\n+\t\t\t\t\t\t       operands[1],\n+\t\t\t\t\t\t       operands[2]));\n   DONE;\n })\n "}]}