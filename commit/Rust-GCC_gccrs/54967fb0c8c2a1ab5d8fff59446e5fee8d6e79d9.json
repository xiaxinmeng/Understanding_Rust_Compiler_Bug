{"sha": "54967fb0c8c2a1ab5d8fff59446e5fee8d6e79d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ5NjdmYjBjOGMyYTFhYjVkOGZmZjU5NDQ2ZTVmZWU4ZDZlNzlkOQ==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-10-14T08:15:32Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-10-14T08:15:32Z"}, "message": "AVX-512. 59/n. Add vptest[n]m, ucmp, cmpeq insn patterns.\n\ngcc/\n\t* config/i386/i386.c\n\t(ix86_expand_args_builtin): Handle CODE_FOR_avx512vl_cmpv4di3_mask,\n\tCODE_FOR_avx512vl_cmpv8si3_mask, CODE_FOR_avx512vl_ucmpv4di3_mask,\n\tCODE_FOR_avx512vl_ucmpv8si3_mask, CODE_FOR_avx512vl_cmpv2di3_mask,\n\tCODE_FOR_avx512vl_cmpv4si3_mask, CODE_FOR_avx512vl_ucmpv2di3_mask,\n\tCODE_FOR_avx512vl_ucmpv4si3_mask.\n\t* config/i386/sse.md\n\t(define_insn \"avx512f_ucmp<mode>3<mask_scalar_merge_name>\"): Delete.\n\t\"<avx512>_ucmp<VI12_AVX512VL:mode>3<mask_scalar_merge_name>\"):New.\n\t(define_insn\n\t\"<avx512>_ucmp<VI48_AVX512VL:mode>3<mask_scalar_merge_name>\"):Ditto.\n\t(define_expand \"<avx512>_eq<mode>3<mask_scalar_merge_name>\"): Ditto.\n\t(define_insn \"<avx512>_eq<mode>3<mask_scalar_merge_name>_1\"): Ditto.\n\t(define_insn \"<avx512>_gt<mode>3<mask_scalar_merge_name>\"): Ditto.\n\t(define_insn \"<avx512>_testm<mode>3<mask_scalar_merge_name>\"): Ditto.\n\t(define_insn \"<avx512>_testnm<mode>3<mask_scalar_merge_name>\"): Ditto.\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r216177", "tree": {"sha": "e6771cce27f07b6e1954ab2091ba28525c35f435", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6771cce27f07b6e1954ab2091ba28525c35f435"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54967fb0c8c2a1ab5d8fff59446e5fee8d6e79d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54967fb0c8c2a1ab5d8fff59446e5fee8d6e79d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54967fb0c8c2a1ab5d8fff59446e5fee8d6e79d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54967fb0c8c2a1ab5d8fff59446e5fee8d6e79d9/comments", "author": null, "committer": null, "parents": [{"sha": "f1df7a1c5210814e7580aaf7b2a71d8f9710cfbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1df7a1c5210814e7580aaf7b2a71d8f9710cfbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1df7a1c5210814e7580aaf7b2a71d8f9710cfbf"}], "stats": {"total": 140, "additions": 122, "deletions": 18}, "files": [{"sha": "5ee1d70950e58f596dd18fc41f9d6630e6585702", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54967fb0c8c2a1ab5d8fff59446e5fee8d6e79d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54967fb0c8c2a1ab5d8fff59446e5fee8d6e79d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=54967fb0c8c2a1ab5d8fff59446e5fee8d6e79d9", "patch": "@@ -1,3 +1,29 @@\n+2014-10-14  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/i386.c\n+\t(ix86_expand_args_builtin): Handle CODE_FOR_avx512vl_cmpv4di3_mask,\n+\tCODE_FOR_avx512vl_cmpv8si3_mask, CODE_FOR_avx512vl_ucmpv4di3_mask,\n+\tCODE_FOR_avx512vl_ucmpv8si3_mask, CODE_FOR_avx512vl_cmpv2di3_mask,\n+\tCODE_FOR_avx512vl_cmpv4si3_mask, CODE_FOR_avx512vl_ucmpv2di3_mask,\n+\tCODE_FOR_avx512vl_ucmpv4si3_mask.\n+\t* config/i386/sse.md\n+\t(define_insn \"avx512f_ucmp<mode>3<mask_scalar_merge_name>\"): Delete.\n+\t\"<avx512>_ucmp<VI12_AVX512VL:mode>3<mask_scalar_merge_name>\"):New.\n+\t(define_insn\n+\t\"<avx512>_ucmp<VI48_AVX512VL:mode>3<mask_scalar_merge_name>\"):Ditto.\n+\t(define_expand \"<avx512>_eq<mode>3<mask_scalar_merge_name>\"): Ditto.\n+\t(define_insn \"<avx512>_eq<mode>3<mask_scalar_merge_name>_1\"): Ditto.\n+\t(define_insn \"<avx512>_gt<mode>3<mask_scalar_merge_name>\"): Ditto.\n+\t(define_insn \"<avx512>_testm<mode>3<mask_scalar_merge_name>\"): Ditto.\n+\t(define_insn \"<avx512>_testnm<mode>3<mask_scalar_merge_name>\"): Ditto.\n+\n 2014-10-14  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Anna Tikhonova  <anna.tikhonova@intel.com>"}, {"sha": "a485bb1872813102e9bc9444e92c748956317602", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54967fb0c8c2a1ab5d8fff59446e5fee8d6e79d9/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54967fb0c8c2a1ab5d8fff59446e5fee8d6e79d9/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=54967fb0c8c2a1ab5d8fff59446e5fee8d6e79d9", "patch": "@@ -34108,6 +34108,14 @@ ix86_expand_args_builtin (const struct builtin_description *d,\n \t      case CODE_FOR_avx512f_cmpv16si3_mask:\n \t      case CODE_FOR_avx512f_ucmpv8di3_mask:\n \t      case CODE_FOR_avx512f_ucmpv16si3_mask:\n+\t      case CODE_FOR_avx512vl_cmpv4di3_mask:\n+\t      case CODE_FOR_avx512vl_cmpv8si3_mask:\n+\t      case CODE_FOR_avx512vl_ucmpv4di3_mask:\n+\t      case CODE_FOR_avx512vl_ucmpv8si3_mask:\n+\t      case CODE_FOR_avx512vl_cmpv2di3_mask:\n+\t      case CODE_FOR_avx512vl_cmpv4si3_mask:\n+\t      case CODE_FOR_avx512vl_ucmpv2di3_mask:\n+\t      case CODE_FOR_avx512vl_ucmpv4si3_mask:\n \t\terror (\"the last argument must be a 3-bit immediate\");\n \t\treturn const0_rtx;\n "}, {"sha": "99fd5cf75ff6a849eeed5c4949af4aa0e7fb5ad2", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 88, "deletions": 18, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54967fb0c8c2a1ab5d8fff59446e5fee8d6e79d9/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54967fb0c8c2a1ab5d8fff59446e5fee8d6e79d9/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=54967fb0c8c2a1ab5d8fff59446e5fee8d6e79d9", "patch": "@@ -2522,11 +2522,25 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_insn \"avx512f_ucmp<mode>3<mask_scalar_merge_name>\"\n+(define_insn \"<avx512>_ucmp<mode>3<mask_scalar_merge_name>\"\n   [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=Yk\")\n \t(unspec:<avx512fmaskmode>\n-\t  [(match_operand:VI48_512 1 \"register_operand\" \"v\")\n-\t   (match_operand:VI48_512 2 \"nonimmediate_operand\" \"vm\")\n+\t  [(match_operand:VI12_AVX512VL 1 \"register_operand\" \"v\")\n+\t   (match_operand:VI12_AVX512VL 2 \"nonimmediate_operand\" \"vm\")\n+\t   (match_operand:SI 3 \"const_0_to_7_operand\" \"n\")]\n+\t  UNSPEC_UNSIGNED_PCMP))]\n+  \"TARGET_AVX512BW\"\n+  \"vpcmpu<ssemodesuffix>\\t{%3, %2, %1, %0<mask_scalar_merge_operand4>|%0<mask_scalar_merge_operand4>, %1, %2, %3}\"\n+  [(set_attr \"type\" \"ssecmp\")\n+   (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n+(define_insn \"<avx512>_ucmp<mode>3<mask_scalar_merge_name>\"\n+  [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=Yk\")\n+\t(unspec:<avx512fmaskmode>\n+\t  [(match_operand:VI48_AVX512VL 1 \"register_operand\" \"v\")\n+\t   (match_operand:VI48_AVX512VL 2 \"nonimmediate_operand\" \"vm\")\n \t   (match_operand:SI 3 \"const_0_to_7_operand\" \"n\")]\n \t  UNSPEC_UNSIGNED_PCMP))]\n   \"TARGET_AVX512F\"\n@@ -10152,20 +10166,42 @@\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_expand \"avx512f_eq<mode>3<mask_scalar_merge_name>\"\n+(define_expand \"<avx512>_eq<mode>3<mask_scalar_merge_name>\"\n+  [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\")\n+\t(unspec:<avx512fmaskmode>\n+\t  [(match_operand:VI12_AVX512VL 1 \"register_operand\")\n+\t   (match_operand:VI12_AVX512VL 2 \"nonimmediate_operand\")]\n+\t  UNSPEC_MASKED_EQ))]\n+  \"TARGET_AVX512BW\"\n+  \"ix86_fixup_binary_operands_no_copy (EQ, <MODE>mode, operands);\")\n+\n+(define_expand \"<avx512>_eq<mode>3<mask_scalar_merge_name>\"\n   [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\")\n \t(unspec:<avx512fmaskmode>\n-\t  [(match_operand:VI48_512 1 \"register_operand\")\n-\t   (match_operand:VI48_512 2 \"nonimmediate_operand\")]\n+\t  [(match_operand:VI48_AVX512VL 1 \"register_operand\")\n+\t   (match_operand:VI48_AVX512VL 2 \"nonimmediate_operand\")]\n \t  UNSPEC_MASKED_EQ))]\n   \"TARGET_AVX512F\"\n   \"ix86_fixup_binary_operands_no_copy (EQ, <MODE>mode, operands);\")\n \n-(define_insn \"avx512f_eq<mode>3<mask_scalar_merge_name>_1\"\n+(define_insn \"<avx512>_eq<mode>3<mask_scalar_merge_name>_1\"\n   [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=Yk\")\n \t(unspec:<avx512fmaskmode>\n-\t  [(match_operand:VI48_512 1 \"register_operand\" \"%v\")\n-\t   (match_operand:VI48_512 2 \"nonimmediate_operand\" \"vm\")]\n+\t  [(match_operand:VI12_AVX512VL 1 \"register_operand\" \"%v\")\n+\t   (match_operand:VI12_AVX512VL 2 \"nonimmediate_operand\" \"vm\")]\n+\t  UNSPEC_MASKED_EQ))]\n+  \"TARGET_AVX512F && ix86_binary_operator_ok (EQ, <MODE>mode, operands)\"\n+  \"vpcmpeq<ssemodesuffix>\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\"\n+  [(set_attr \"type\" \"ssecmp\")\n+   (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n+(define_insn \"<avx512>_eq<mode>3<mask_scalar_merge_name>_1\"\n+  [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=Yk\")\n+\t(unspec:<avx512fmaskmode>\n+\t  [(match_operand:VI48_AVX512VL 1 \"register_operand\" \"%v\")\n+\t   (match_operand:VI48_AVX512VL 2 \"nonimmediate_operand\" \"vm\")]\n \t  UNSPEC_MASKED_EQ))]\n   \"TARGET_AVX512F && ix86_binary_operator_ok (EQ, <MODE>mode, operands)\"\n   \"vpcmpeq<ssemodesuffix>\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\"\n@@ -10248,18 +10284,30 @@\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_insn \"avx512f_gt<mode>3<mask_scalar_merge_name>\"\n+(define_insn \"<avx512>_gt<mode>3<mask_scalar_merge_name>\"\n   [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=Yk\")\n \t(unspec:<avx512fmaskmode>\n-\t  [(match_operand:VI48_512 1 \"register_operand\" \"v\")\n-\t   (match_operand:VI48_512 2 \"nonimmediate_operand\" \"vm\")] UNSPEC_MASKED_GT))]\n+\t  [(match_operand:VI48_AVX512VL 1 \"register_operand\" \"v\")\n+\t   (match_operand:VI48_AVX512VL 2 \"nonimmediate_operand\" \"vm\")] UNSPEC_MASKED_GT))]\n   \"TARGET_AVX512F\"\n   \"vpcmpgt<ssemodesuffix>\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\"\n   [(set_attr \"type\" \"ssecmp\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n+(define_insn \"<avx512>_gt<mode>3<mask_scalar_merge_name>\"\n+  [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=Yk\")\n+\t(unspec:<avx512fmaskmode>\n+\t  [(match_operand:VI12_AVX512VL 1 \"register_operand\" \"v\")\n+\t   (match_operand:VI12_AVX512VL 2 \"nonimmediate_operand\" \"vm\")] UNSPEC_MASKED_GT))]\n+  \"TARGET_AVX512BW\"\n+  \"vpcmpgt<ssemodesuffix>\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\"\n+  [(set_attr \"type\" \"ssecmp\")\n+   (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n (define_insn \"sse2_gt<mode>3\"\n   [(set (match_operand:VI124_128 0 \"register_operand\" \"=x,x\")\n \t(gt:VI124_128\n@@ -10653,22 +10701,44 @@\n \t      ]\n \t      (const_string \"<sseinsnmode>\")))])\n \n-(define_insn \"avx512f_testm<mode>3<mask_scalar_merge_name>\"\n+(define_insn \"<avx512>_testm<mode>3<mask_scalar_merge_name>\"\n   [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=Yk\")\n \t(unspec:<avx512fmaskmode>\n-\t [(match_operand:VI48_512 1 \"register_operand\" \"v\")\n-\t  (match_operand:VI48_512 2 \"nonimmediate_operand\" \"vm\")]\n+\t [(match_operand:VI12_AVX512VL 1 \"register_operand\" \"v\")\n+\t  (match_operand:VI12_AVX512VL 2 \"nonimmediate_operand\" \"vm\")]\n+\t UNSPEC_TESTM))]\n+  \"TARGET_AVX512BW\"\n+  \"vptestm<ssemodesuffix>\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\"\n+  [(set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\"  \"<sseinsnmode>\")])\n+\n+(define_insn \"<avx512>_testm<mode>3<mask_scalar_merge_name>\"\n+  [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=Yk\")\n+\t(unspec:<avx512fmaskmode>\n+\t [(match_operand:VI48_AVX512VL 1 \"register_operand\" \"v\")\n+\t  (match_operand:VI48_AVX512VL 2 \"nonimmediate_operand\" \"vm\")]\n \t UNSPEC_TESTM))]\n   \"TARGET_AVX512F\"\n   \"vptestm<ssemodesuffix>\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\"\n   [(set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\"  \"<sseinsnmode>\")])\n \n-(define_insn \"avx512f_testnm<mode>3<mask_scalar_merge_name>\"\n+(define_insn \"<avx512>_testnm<mode>3<mask_scalar_merge_name>\"\n+  [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=Yk\")\n+\t(unspec:<avx512fmaskmode>\n+\t [(match_operand:VI12_AVX512VL 1 \"register_operand\" \"v\")\n+\t  (match_operand:VI12_AVX512VL 2 \"nonimmediate_operand\" \"vm\")]\n+\t UNSPEC_TESTNM))]\n+  \"TARGET_AVX512BW\"\n+  \"vptestnm<ssemodesuffix>\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\"\n+  [(set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\"  \"<sseinsnmode>\")])\n+\n+(define_insn \"<avx512>_testnm<mode>3<mask_scalar_merge_name>\"\n   [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=Yk\")\n \t(unspec:<avx512fmaskmode>\n-\t [(match_operand:VI48_512 1 \"register_operand\" \"v\")\n-\t  (match_operand:VI48_512 2 \"nonimmediate_operand\" \"vm\")]\n+\t [(match_operand:VI48_AVX512VL 1 \"register_operand\" \"v\")\n+\t  (match_operand:VI48_AVX512VL 2 \"nonimmediate_operand\" \"vm\")]\n \t UNSPEC_TESTNM))]\n   \"TARGET_AVX512F\"\n   \"vptestnm<ssemodesuffix>\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\""}]}