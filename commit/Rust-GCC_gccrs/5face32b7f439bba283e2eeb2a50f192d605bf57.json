{"sha": "5face32b7f439bba283e2eeb2a50f192d605bf57", "node_id": "C_kwDOANBUbNoAKDVmYWNlMzJiN2Y0MzliYmEyODNlMmVlYjJhNTBmMTkyZDYwNWJmNTc", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-04-26T07:40:03Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-04-26T07:40:03Z"}, "message": "i386: Fix up ICE with -mveclibabi={acml,svml} [PR105367]\n\nThe following testcase ICEs, because conversion between scalar float types\nwhich have the same mode are useless in GIMPLE, but for mathfn_built_in the\nexact type matters (it treats say double and _Float64 or float and _Float32\ndifferently, using different suffixes and for the _Float* sometimes\nreturning NULL when float/double do have a builtin).\n\nIn ix86_veclibabi_{svml,acml} we are using mathfn_built_in just so that\nwe don't have to translate the combined_fn and SFmode vs. DFmode into\nstrings ourselfs, and we already earlier punt on anything but SFmode and\nDFmode.  So, this patch just uses the double or float types depending\non the modes, rather than the types we actually got and which might be\n_Float64 or _Float32 etc.\n\n2022-04-26  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/105367\n\t* config/i386/i386.cc (ix86_veclibabi_svml, ix86_veclibabi_acml): Pass\n\tel_mode == DFmode ? double_type_node : float_type_node instead of\n\tTREE_TYPE (type_in) as first arguments to mathfn_built_in.\n\n\t* gcc.target/i386/pr105367.c: New test.", "tree": {"sha": "031b130bcae306a5f61f34be1e3d89b52d2f1181", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/031b130bcae306a5f61f34be1e3d89b52d2f1181"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5face32b7f439bba283e2eeb2a50f192d605bf57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5face32b7f439bba283e2eeb2a50f192d605bf57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5face32b7f439bba283e2eeb2a50f192d605bf57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5face32b7f439bba283e2eeb2a50f192d605bf57/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22c24ba48a20a4944a50cca06449debed7d1b3f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22c24ba48a20a4944a50cca06449debed7d1b3f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22c24ba48a20a4944a50cca06449debed7d1b3f4"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "52040da8c47f55ded0389b241d1a482142af4ba0", "filename": "gcc/config/i386/i386.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5face32b7f439bba283e2eeb2a50f192d605bf57/gcc%2Fconfig%2Fi386%2Fi386.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5face32b7f439bba283e2eeb2a50f192d605bf57/gcc%2Fconfig%2Fi386%2Fi386.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.cc?ref=5face32b7f439bba283e2eeb2a50f192d605bf57", "patch": "@@ -18807,7 +18807,8 @@ ix86_veclibabi_svml (combined_fn fn, tree type_out, tree type_in)\n       return NULL_TREE;\n     }\n \n-  tree fndecl = mathfn_built_in (TREE_TYPE (type_in), fn);\n+  tree fndecl = mathfn_built_in (el_mode == DFmode\n+\t\t\t\t ? double_type_node : float_type_node, fn);\n   bname = IDENTIFIER_POINTER (DECL_NAME (fndecl));\n \n   if (DECL_FUNCTION_CODE (fndecl) == BUILT_IN_LOGF)\n@@ -18899,7 +18900,8 @@ ix86_veclibabi_acml (combined_fn fn, tree type_out, tree type_in)\n       return NULL_TREE;\n     }\n \n-  tree fndecl = mathfn_built_in (TREE_TYPE (type_in), fn);\n+  tree fndecl = mathfn_built_in (el_mode == DFmode\n+\t\t\t\t ? double_type_node : float_type_node, fn);\n   bname = IDENTIFIER_POINTER (DECL_NAME (fndecl));\n   sprintf (name + 7, \"%s\", bname+10);\n "}, {"sha": "558e3e58e4edd2e10e087c74874bb9515cc97a05", "filename": "gcc/testsuite/gcc.target/i386/pr105367.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5face32b7f439bba283e2eeb2a50f192d605bf57/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr105367.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5face32b7f439bba283e2eeb2a50f192d605bf57/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr105367.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr105367.c?ref=5face32b7f439bba283e2eeb2a50f192d605bf57", "patch": "@@ -0,0 +1,12 @@\n+/* PR target/105367 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Ofast -mveclibabi=acml\" } */\n+\n+_Float64 g;\n+\n+void\n+foo (void)\n+{\n+  _Float64 f = __builtin_sin (g);\n+  g = __builtin_fmax (__builtin_sin (f), f);\n+}"}]}