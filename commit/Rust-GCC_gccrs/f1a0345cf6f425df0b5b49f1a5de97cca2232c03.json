{"sha": "f1a0345cf6f425df0b5b49f1a5de97cca2232c03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFhMDM0NWNmNmY0MjVkZjBiNWI0OWYxYTVkZTk3Y2NhMjIzMmMwMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2001-03-23T22:12:55Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2001-03-23T22:12:55Z"}, "message": "mangle.c (write_discriminator): Use `_0' for discriminator 1, not `_'.\n\n\t* mangle.c (write_discriminator): Use `_0' for discriminator 1,\n\tnot `_'.\n\n\t* cp-demangle.c (demangle_discriminator): `_0' is discriminator #1,\n\t`_' not followed by a digit is invalid.\n\nFrom-SVN: r40795", "tree": {"sha": "92d0d68f87e318b21c083075c8eb1c6aa9404b27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92d0d68f87e318b21c083075c8eb1c6aa9404b27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1a0345cf6f425df0b5b49f1a5de97cca2232c03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1a0345cf6f425df0b5b49f1a5de97cca2232c03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1a0345cf6f425df0b5b49f1a5de97cca2232c03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1a0345cf6f425df0b5b49f1a5de97cca2232c03/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6008088011584c779e326dc0e3dc3fb4a8c000a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6008088011584c779e326dc0e3dc3fb4a8c000a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6008088011584c779e326dc0e3dc3fb4a8c000a8"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "5f63a6785cf672854090e2b6793572548a4d806b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a0345cf6f425df0b5b49f1a5de97cca2232c03/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a0345cf6f425df0b5b49f1a5de97cca2232c03/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f1a0345cf6f425df0b5b49f1a5de97cca2232c03", "patch": "@@ -1,3 +1,8 @@\n+2001-03-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* mangle.c (write_discriminator): Use `_0' for discriminator 1,\n+\tnot `_'.\n+\n 2001-03-23  Jakub Jelinek  <jakub@redhat.com>\n \n \t* decl.c (local_names): Define."}, {"sha": "e2641a74c6e229efc6f8d2423b5c7e4b2635bca4", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a0345cf6f425df0b5b49f1a5de97cca2232c03/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a0345cf6f425df0b5b49f1a5de97cca2232c03/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=f1a0345cf6f425df0b5b49f1a5de97cca2232c03", "patch": "@@ -1196,10 +1196,7 @@ write_discriminator (discriminator)\n   if (discriminator > 0)\n     {\n       write_char ('_');\n-      /* The number is omitted for discriminator == 1.  Beyond 1, the\n-\t numbering starts at 0.  */\n-      if (discriminator > 1)\n-\twrite_unsigned_number (discriminator - 2);\n+      write_unsigned_number (discriminator - 1);\n     }\n }\n "}, {"sha": "7a1e8268551c7e0f788eb54a216700c772f215fe", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a0345cf6f425df0b5b49f1a5de97cca2232c03/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a0345cf6f425df0b5b49f1a5de97cca2232c03/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=f1a0345cf6f425df0b5b49f1a5de97cca2232c03", "patch": "@@ -1,3 +1,8 @@\n+2001-03-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* cp-demangle.c (demangle_discriminator): `_0' is discriminator #1,\n+\t`_' not followed by a digit is invalid.\n+\n 2001-03-22  Jim Blandy  <jimb@redhat.com>\n \n \t* cp-demangle.c (string_list_delete): Use dyn_string_delete"}, {"sha": "8419eef34259093a916bdeb5bf0628a4f3a1456b", "filename": "libiberty/cp-demangle.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a0345cf6f425df0b5b49f1a5de97cca2232c03/libiberty%2Fcp-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a0345cf6f425df0b5b49f1a5de97cca2232c03/libiberty%2Fcp-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.c?ref=f1a0345cf6f425df0b5b49f1a5de97cca2232c03", "patch": "@@ -3446,15 +3446,11 @@ demangle_discriminator (dm, suppress_first)\n \t    /* Write the discriminator.  The mangled number is two\n \t       less than the discriminator ordinal, counting from\n \t       zero.  */\n-\t    RETURN_IF_ERROR (int_to_dyn_string (discriminator + 2, \n+\t    RETURN_IF_ERROR (int_to_dyn_string (discriminator + 1,\n \t\t\t\t\t\t(dyn_string_t) dm->result));\n \t}\n       else\n-\t{\n-\t  if (flag_verbose)\n-\t    /* A missing digit correspond to one.  */\n-\t    RETURN_IF_ERROR (result_add_char (dm, '1'));\n-\t}\n+\treturn STATUS_ERROR;\n       if (flag_verbose)\n \tRETURN_IF_ERROR (result_add_char (dm, ']'));\n     }"}]}