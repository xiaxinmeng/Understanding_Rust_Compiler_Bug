{"sha": "9127884102347420f8185b819c137610b7e51126", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTEyNzg4NDEwMjM0NzQyMGY4MTg1YjgxOWMxMzc2MTBiN2U1MTEyNg==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2004-06-20T17:03:04Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-06-20T17:03:04Z"}, "message": "re PR middle-end/16089 (unwind-dw2.c:1311: error: insn outside basic block)\n\n2004-06-20  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR middle-end/16089\n        * builtins.c (entry_of_function): Move to ...\n        * cfgrtl.c (entry_of_function): Here and make non-static.\n        * integrate.c (emit_initial_value_sets): Use entry_of_function.\n        * rtl.h (entry_of_function): Prototype.\n\nFrom-SVN: r83415", "tree": {"sha": "db58f3f22a75c656aac8cc7600fc97e0aca34138", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db58f3f22a75c656aac8cc7600fc97e0aca34138"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9127884102347420f8185b819c137610b7e51126", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9127884102347420f8185b819c137610b7e51126", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9127884102347420f8185b819c137610b7e51126", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9127884102347420f8185b819c137610b7e51126/comments", "author": null, "committer": null, "parents": [{"sha": "e0c003921ff62fde521a14436bbeac899181a7b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0c003921ff62fde521a14436bbeac899181a7b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0c003921ff62fde521a14436bbeac899181a7b3"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "744f3967782d58a7bf8a370fb9d9b1e0cbc6449e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9127884102347420f8185b819c137610b7e51126/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9127884102347420f8185b819c137610b7e51126/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9127884102347420f8185b819c137610b7e51126", "patch": "@@ -1,3 +1,11 @@\n+2004-06-20  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR middle-end/16089\n+\t* builtins.c (entry_of_function): Move to ...\n+\t* cfgrtl.c (entry_of_function): Here and make non-static.\n+\t* integrate.c (emit_initial_value_sets): Use entry_of_function.\n+\t* rtl.h (entry_of_function): Prototype.\n+\n 2004-06-20  Roger Sayle  <roger@eyesopen.com>\n \n \t* config/i386/i386.c (pentium4_cost): Increase \"lea\" cost from 1 to 3."}, {"sha": "92a4dc3b2f7e3f8fc6310e286ae709031d4de2a1", "filename": "gcc/builtins.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9127884102347420f8185b819c137610b7e51126/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9127884102347420f8185b819c137610b7e51126/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=9127884102347420f8185b819c137610b7e51126", "patch": "@@ -1206,13 +1206,6 @@ expand_builtin_apply_args_1 (void)\n   return copy_addr_to_reg (XEXP (registers, 0));\n }\n \n-/* Return RTX to emit after when we want to emit code on the entry of function.  */\n-static rtx\n-entry_of_function (void)\n-{\n-  return (n_basic_blocks ? BB_HEAD (ENTRY_BLOCK_PTR->next_bb) : get_insns ());\n-}\n-\n /* __builtin_apply_args returns block of memory allocated on\n    the stack into which is stored the arg pointer, structure\n    value address, static chain, and all the registers that might"}, {"sha": "8ef48d092a1143a717056d5a9ba55ab055b9a229", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9127884102347420f8185b819c137610b7e51126/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9127884102347420f8185b819c137610b7e51126/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=9127884102347420f8185b819c137610b7e51126", "patch": "@@ -440,6 +440,13 @@ free_bb_for_insn (void)\n       BLOCK_FOR_INSN (insn) = NULL;\n }\n \n+/* Return RTX to emit after when we want to emit code on the entry of function.  */\n+rtx\n+entry_of_function (void)\n+{\n+  return (n_basic_blocks ? BB_HEAD (ENTRY_BLOCK_PTR->next_bb) : get_insns ());\n+}\n+\n /* Update insns block within BB.  */\n \n void"}, {"sha": "c5befd5cd2ffb960704e06c213be4b3ba8cd0dd0", "filename": "gcc/integrate.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9127884102347420f8185b819c137610b7e51126/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9127884102347420f8185b819c137610b7e51126/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=9127884102347420f8185b819c137610b7e51126", "patch": "@@ -1300,7 +1300,7 @@ emit_initial_value_sets (void)\n   seq = get_insns ();\n   end_sequence ();\n \n-  emit_insn_after (seq, get_insns ());\n+  emit_insn_after (seq, entry_of_function ());\n }\n \n /* If the backend knows where to allocate pseudos for hard"}, {"sha": "333c95d507d62ac26ca449a589ad99cbef346b34", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9127884102347420f8185b819c137610b7e51126/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9127884102347420f8185b819c137610b7e51126/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=9127884102347420f8185b819c137610b7e51126", "patch": "@@ -2199,6 +2199,7 @@ void restore_line_number_status (int old_value);\n extern void renumber_insns (FILE *);\n extern void remove_unnecessary_notes (void);\n extern rtx delete_insn (rtx);\n+extern rtx entry_of_function (void);\n extern void delete_insn_chain (rtx, rtx);\n extern rtx unlink_insn_chain (rtx, rtx);\n extern rtx delete_insn_and_edges (rtx);"}]}