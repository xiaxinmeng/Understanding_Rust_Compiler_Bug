{"sha": "f8a219349a28d326ca09932040eec82c9fd841c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhhMjE5MzQ5YTI4ZDMyNmNhMDk5MzIwNDBlZWM4MmM5ZmQ4NDFjNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T08:52:22Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T08:52:22Z"}, "message": "[multiple changes]\n\n2017-04-25  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_attr.adb: minor reformatting.\n\n2017-04-25  Doug Rupp  <rupp@adacore.com>\n\n\t* sigtramp-vxworks-target.inc [PPC64]: Add a .localentry pseudo-op.\n\n2017-04-25  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch5.adb (Analyze_Assignment): Reset Full_Analysis flag on\n\tthe first pass over an assignment statement with target names,\n\tto prevent the generation of subtypes (such as discriminated\n\trecord components)that may carry the target name outside of the\n\ttree for the assignment. The subtypes will be generated when\n\tthe assignment is reanalyzed in full.\n\t(Analyze_Target_Name): Handle properly class-wide types.\n\nFrom-SVN: r247149", "tree": {"sha": "c7bf49ef0c483ef59ae84253a890247354844577", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7bf49ef0c483ef59ae84253a890247354844577"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8a219349a28d326ca09932040eec82c9fd841c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8a219349a28d326ca09932040eec82c9fd841c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8a219349a28d326ca09932040eec82c9fd841c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8a219349a28d326ca09932040eec82c9fd841c4/comments", "author": null, "committer": null, "parents": [{"sha": "b619c88ebaa63de53de21684bdd4555598f68d49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b619c88ebaa63de53de21684bdd4555598f68d49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b619c88ebaa63de53de21684bdd4555598f68d49"}], "stats": {"total": 65, "additions": 42, "deletions": 23}, "files": [{"sha": "d3635f86c1f8552526e26bcc8a4f28c7441fa009", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8a219349a28d326ca09932040eec82c9fd841c4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8a219349a28d326ca09932040eec82c9fd841c4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f8a219349a28d326ca09932040eec82c9fd841c4", "patch": "@@ -1,3 +1,21 @@\n+2017-04-25  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_attr.adb: minor reformatting.\n+\n+2017-04-25  Doug Rupp  <rupp@adacore.com>\n+\n+\t* sigtramp-vxworks-target.inc [PPC64]: Add a .localentry pseudo-op.\n+\n+2017-04-25  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Assignment): Reset Full_Analysis flag on\n+\tthe first pass over an assignment statement with target names,\n+\tto prevent the generation of subtypes (such as discriminated\n+\trecord components)that may carry the target name outside of the\n+\ttree for the assignment. The subtypes will be generated when\n+\tthe assignment is reanalyzed in full.\n+\t(Analyze_Target_Name): Handle properly class-wide types.\n+\n 2017-04-25  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* elists.ads, elists.adb (Prepend_Unique_Elmt): New routine."}, {"sha": "98c057e5ef5f008ee1e4999dc8f1fc23d286d929", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8a219349a28d326ca09932040eec82c9fd841c4/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8a219349a28d326ca09932040eec82c9fd841c4/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=f8a219349a28d326ca09932040eec82c9fd841c4", "patch": "@@ -10545,8 +10545,8 @@ package body Sem_Attr is\n                                     Entity (Name (Parent (N)));\n                         begin\n                            if Convention (Subp) = Convention_Intrinsic then\n-                              Error_Msg_FE (\"subprogram and its formal \"\n-                              & \"parameters have convention Intrinsic\",\n+                              Error_Msg_FE (\"?subprogram and its formal \"\n+                              & \"access parameters have convention Intrinsic\",\n                                 Parent (N), Subp);\n                               Error_Msg_N\n                                 (\"actual cannot be access attribute\", N);"}, {"sha": "694c45f6dc105e613a36dbe9c74dd5d2ebaba4c0", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8a219349a28d326ca09932040eec82c9fd841c4/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8a219349a28d326ca09932040eec82c9fd841c4/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=f8a219349a28d326ca09932040eec82c9fd841c4", "patch": "@@ -64,10 +64,12 @@ with Uintp;    use Uintp;\n \n package body Sem_Ch5 is\n \n-   Current_LHS : Node_Id := Empty;\n-   --  Holds the left-hand side of the assignment statement being analyzed.\n-   --  Used to determine the type of a target_name appearing on the RHS, for\n-   --  AI12-0125 and the use of '@' as an abbreviation for the LHS.\n+   Current_Assignment : Node_Id := Empty;\n+   --  This variable holds the node for an assignment that contains target\n+   --  names. The corresponding flag has been set by the parser, and when\n+   --  set the analysis of the RHS must be done with all expansion disabled,\n+   --  because the assignment is reanalyzed after expansion has replaced all\n+   --  occurrences of the target name appropriately.\n \n    Unblocked_Exit_Count : Nat := 0;\n    --  This variable is used when processing if statements, case statements,\n@@ -98,11 +100,12 @@ package body Sem_Ch5 is\n    --  Ghost mode.\n \n    procedure Analyze_Assignment (N : Node_Id) is\n-      Lhs  : constant Node_Id := Name (N);\n-      Rhs  : constant Node_Id := Expression (N);\n-      T1   : Entity_Id;\n-      T2   : Entity_Id;\n-      Decl : Node_Id;\n+      Lhs                : constant Node_Id := Name (N);\n+      Rhs                : constant Node_Id := Expression (N);\n+      T1                 : Entity_Id;\n+      T2                 : Entity_Id;\n+      Decl               : Node_Id;\n+      Save_Full_Analysis : Boolean;\n \n       procedure Diagnose_Non_Variable_Lhs (N : Node_Id);\n       --  N is the node for the left hand side of an assignment, and it is not\n@@ -284,10 +287,6 @@ package body Sem_Ch5 is\n    --  Start of processing for Analyze_Assignment\n \n    begin\n-      --  Save LHS for use in target names (AI12-125)\n-\n-      Current_LHS := Lhs;\n-\n       Mark_Coextensions (N, Rhs);\n \n       --  Analyze the target of the assignment first in case the expression\n@@ -301,7 +300,12 @@ package body Sem_Ch5 is\n       --  during analysis and expansion are properly marked as Ghost.\n \n       if Has_Target_Names (N) then\n+         Current_Assignment := N;\n          Expander_Mode_Save_And_Set (False);\n+         Save_Full_Analysis := Full_Analysis;\n+         Full_Analysis      := False;\n+      else\n+         Current_Assignment := Empty;\n       end if;\n \n       Mark_And_Set_Ghost_Assignment (N, Mode);\n@@ -932,7 +936,6 @@ package body Sem_Ch5 is\n       Analyze_Dimension (N);\n \n    <<Leave>>\n-      Current_LHS := Empty;\n       Restore_Ghost_Mode (Mode);\n \n       --  If the right-hand side contains target names, expansion has been\n@@ -942,6 +945,7 @@ package body Sem_Ch5 is\n \n       if Nkind (N) = N_Assignment_Statement and then Has_Target_Names (N) then\n          Expander_Mode_Restore;\n+         Full_Analysis := Save_Full_Analysis;\n       end if;\n    end Analyze_Assignment;\n \n@@ -3543,14 +3547,10 @@ package body Sem_Ch5 is\n \n    procedure Analyze_Target_Name (N : Node_Id) is\n    begin\n-      if No (Current_LHS) then\n-         Error_Msg_N (\"target name can only appear within an assignment\", N);\n-         Set_Etype (N, Any_Type);\n+      --  A target name has the type of the left-hand side of the enclosing\n+      --  assignment.\n \n-      else\n-         Set_Has_Target_Names (Parent (Current_LHS));\n-         Set_Etype (N, Etype (Current_LHS));\n-      end if;\n+      Set_Etype (N, Etype (Name (Current_Assignment)));\n    end Analyze_Target_Name;\n \n    ------------------------"}, {"sha": "3db6782bdc6b05cdc0d6d04bf20ac74146e3b827", "filename": "gcc/ada/sigtramp-vxworks-target.inc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8a219349a28d326ca09932040eec82c9fd841c4/gcc%2Fada%2Fsigtramp-vxworks-target.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8a219349a28d326ca09932040eec82c9fd841c4/gcc%2Fada%2Fsigtramp-vxworks-target.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsigtramp-vxworks-target.inc?ref=f8a219349a28d326ca09932040eec82c9fd841c4", "patch": "@@ -305,6 +305,7 @@ CR(\"\") \\\n TCR(\"0:\") \\\n TCR(\"addis 2,12,.TOC.-0@ha\") \\\n TCR(\"addi 2,2,.TOC.-0@l\") \\\n+TCR(\".localentry\t__gnat_sigtramp_common,.-__gnat_sigtramp_common\") \\\n TCR(\"# Allocate frame and save the non-volatile\") \\\n TCR(\"# registers we're going to modify\") \\\n TCR(\"mflr %r0\")\t\\"}]}