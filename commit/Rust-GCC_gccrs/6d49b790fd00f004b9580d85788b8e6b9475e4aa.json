{"sha": "6d49b790fd00f004b9580d85788b8e6b9475e4aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ0OWI3OTBmZDAwZjAwNGI5NTgwZDg1Nzg4YjhlNmI5NDc1ZTRhYQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2016-09-28T22:03:17Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2016-09-28T22:03:17Z"}, "message": "Disable .gnu.attributes tags in compatibility-ldbl.o\n\ncompatibility-ldbl.o is compiled with -mlong-double-64.  When\nlong double .gnu.attributes tags are checked by the linker, it\ncomplains about the mismatch between this file and others in\nlibstdc++.\n\n\t* configure.ac (LONG_DOUBLE_COMPAT_FLAGS): New ACSUBST.\n\t* src/Makefile.am (compatibility-ldbl.o, compatibility-ldbl.lo):\n\tUse LONG_DOUBLE_COMPAT_FLAGS.\n\t* Makefile.in: Regenerate.\n\t* configure: Regenerate.\n\t* doc/Makefile.in: Regenerate.\n\t* include/Makefile.in: Regenerate.\n\t* libsupc++/Makefile.in: Regenerate.\n\t* po/Makefile.in: Regenerate.\n\t* python/Makefile.in: Regenerate.\n\t* src/Makefile.in: Regenerate.\n\t* src/c++11/Makefile.in: Regenerate.\n\t* src/c++98/Makefile.in: Regenerate.\n\t* src/filesystem/Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\nFrom-SVN: r240602", "tree": {"sha": "e3270e5f00239bfd57cd2ed75ccf2a52687a1fd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3270e5f00239bfd57cd2ed75ccf2a52687a1fd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d49b790fd00f004b9580d85788b8e6b9475e4aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d49b790fd00f004b9580d85788b8e6b9475e4aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d49b790fd00f004b9580d85788b8e6b9475e4aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d49b790fd00f004b9580d85788b8e6b9475e4aa/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e9dda04f0760e78c5834b1beddab39cd562ad7c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9dda04f0760e78c5834b1beddab39cd562ad7c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9dda04f0760e78c5834b1beddab39cd562ad7c1"}], "stats": {"total": 68, "additions": 55, "deletions": 13}, "files": [{"sha": "d0e2980462cbc2e69690b7486b00117d367c0461", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6d49b790fd00f004b9580d85788b8e6b9475e4aa", "patch": "@@ -1,3 +1,21 @@\n+2016-09-29  Alan Modra  <amodra@gmail.com>\n+\n+\t* configure.ac (LONG_DOUBLE_COMPAT_FLAGS): New ACSUBST.\n+\t* src/Makefile.am (compatibility-ldbl.o, compatibility-ldbl.lo):\n+\tUse LONG_DOUBLE_COMPAT_FLAGS.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* doc/Makefile.in: Regenerate.\n+\t* include/Makefile.in: Regenerate.\n+\t* libsupc++/Makefile.in: Regenerate.\n+\t* po/Makefile.in: Regenerate.\n+\t* python/Makefile.in: Regenerate.\n+\t* src/Makefile.in: Regenerate.\n+\t* src/c++11/Makefile.in: Regenerate.\n+\t* src/c++98/Makefile.in: Regenerate.\n+\t* src/filesystem/Makefile.in: Regenerate.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n 2016-09-28  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/std/chrono (system_clock): Fix typo in comment."}, {"sha": "c29c09c126f9bed85619e46612acd67002fbe308", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=6d49b790fd00f004b9580d85788b8e6b9475e4aa", "patch": "@@ -191,6 +191,7 @@ LIBS = @LIBS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@\n+LONG_DOUBLE_COMPAT_FLAGS = @LONG_DOUBLE_COMPAT_FLAGS@\n LTLIBICONV = @LTLIBICONV@\n LTLIBOBJS = @LTLIBOBJS@\n MAINT = @MAINT@"}, {"sha": "f7b424b9e63554dc238293a1aaabe8d78f49b16d", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=6d49b790fd00f004b9580d85788b8e6b9475e4aa", "patch": "@@ -645,6 +645,7 @@ baseline_dir\n HWCAP_FLAGS\n GLIBCXX_LDBL_COMPAT_FALSE\n GLIBCXX_LDBL_COMPAT_TRUE\n+LONG_DOUBLE_COMPAT_FLAGS\n ENABLE_CXX11_ABI_FALSE\n ENABLE_CXX11_ABI_TRUE\n glibcxx_cxx98_abi\n@@ -11596,7 +11597,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11599 \"configure\"\n+#line 11600 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11702,7 +11703,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11705 \"configure\"\n+#line 11706 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15388,7 +15389,7 @@ $as_echo \"$glibcxx_cv_atomic_long_long\" >&6; }\n   # Fake what AC_TRY_COMPILE does.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15391 \"configure\"\n+#line 15392 \"configure\"\n int main()\n {\n   typedef bool atomic_type;\n@@ -15423,7 +15424,7 @@ $as_echo \"$glibcxx_cv_atomic_bool\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15426 \"configure\"\n+#line 15427 \"configure\"\n int main()\n {\n   typedef short atomic_type;\n@@ -15458,7 +15459,7 @@ $as_echo \"$glibcxx_cv_atomic_short\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15461 \"configure\"\n+#line 15462 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int.\n@@ -15494,7 +15495,7 @@ $as_echo \"$glibcxx_cv_atomic_int\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15497 \"configure\"\n+#line 15498 \"configure\"\n int main()\n {\n   typedef long long atomic_type;\n@@ -15575,7 +15576,7 @@ $as_echo \"$as_me: WARNING: Performance of certain classes will degrade as a resu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15578 \"configure\"\n+#line 15579 \"configure\"\n int main()\n {\n   _Decimal32 d1;\n@@ -15617,7 +15618,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15620 \"configure\"\n+#line 15621 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -15651,7 +15652,7 @@ $as_echo \"$enable_int128\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15654 \"configure\"\n+#line 15655 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -79344,6 +79345,7 @@ $as_echo \"${default_libstdcxx_abi}\" >&6; }\n \n \n ac_ldbl_compat=no\n+LONG_DOUBLE_COMPAT_FLAGS=\"-mlong-double-64\"\n case \"$target\" in\n   powerpc*-*-linux* | \\\n   sparc*-*-linux* | \\\n@@ -79375,10 +79377,15 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n $as_echo \"#define _GLIBCXX_LONG_DOUBLE_COMPAT 1\" >>confdefs.h\n \n     port_specific_symbol_files=\"\\$(top_srcdir)/config/os/gnu-linux/ldbl-extra.ver\"\n+    case \"$target\" in\n+      powerpc*-*-linux*)\n+\tLONG_DOUBLE_COMPAT_FLAGS=\"$LONG_DOUBLE_COMPAT_FLAGS -mno-gnu-attribute\" ;;\n+    esac\n   fi\n esac\n \n \n+\n # Check if assembler supports disabling hardware capability support.\n \n   test -z \"$HWCAP_FLAGS\" && HWCAP_FLAGS=''"}, {"sha": "7d0fafab514365411b1074aff94dd14fc2d5ccf4", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=6d49b790fd00f004b9580d85788b8e6b9475e4aa", "patch": "@@ -375,6 +375,7 @@ GLIBCXX_ENABLE_LIBSTDCXX_DUAL_ABI([yes])\n GLIBCXX_DEFAULT_ABI\n \n ac_ldbl_compat=no\n+LONG_DOUBLE_COMPAT_FLAGS=\"-mlong-double-64\"\n case \"$target\" in\n   powerpc*-*-linux* | \\\n   sparc*-*-linux* | \\\n@@ -389,8 +390,13 @@ case \"$target\" in\n     AC_DEFINE([_GLIBCXX_LONG_DOUBLE_COMPAT],1,\n \t      [Define if compatibility should be provided for -mlong-double-64.])\n     port_specific_symbol_files=\"\\$(top_srcdir)/config/os/gnu-linux/ldbl-extra.ver\"\n+    case \"$target\" in\n+      powerpc*-*-linux*)\n+\tLONG_DOUBLE_COMPAT_FLAGS=\"$LONG_DOUBLE_COMPAT_FLAGS -mno-gnu-attribute\" ;;\n+    esac\n   fi\n esac\n+AC_SUBST(LONG_DOUBLE_COMPAT_FLAGS)\n GLIBCXX_CONDITIONAL(GLIBCXX_LDBL_COMPAT, test $ac_ldbl_compat = yes)\n \n # Check if assembler supports disabling hardware capability support."}, {"sha": "c3874f757a4f79d0165913eac02aa320e269210a", "filename": "libstdc++-v3/doc/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in?ref=6d49b790fd00f004b9580d85788b8e6b9475e4aa", "patch": "@@ -163,6 +163,7 @@ LIBS = @LIBS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@\n+LONG_DOUBLE_COMPAT_FLAGS = @LONG_DOUBLE_COMPAT_FLAGS@\n LTLIBICONV = @LTLIBICONV@\n LTLIBOBJS = @LTLIBOBJS@\n MAINT = @MAINT@"}, {"sha": "4e2b9e4f6763d4512d67a48ab0b70dd6c7584484", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=6d49b790fd00f004b9580d85788b8e6b9475e4aa", "patch": "@@ -163,6 +163,7 @@ LIBS = @LIBS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@\n+LONG_DOUBLE_COMPAT_FLAGS = @LONG_DOUBLE_COMPAT_FLAGS@\n LTLIBICONV = @LTLIBICONV@\n LTLIBOBJS = @LTLIBOBJS@\n MAINT = @MAINT@"}, {"sha": "3e663e0026aed5ea399fbd39ac3a1e845f1828b9", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=6d49b790fd00f004b9580d85788b8e6b9475e4aa", "patch": "@@ -236,6 +236,7 @@ LIBS = @LIBS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@\n+LONG_DOUBLE_COMPAT_FLAGS = @LONG_DOUBLE_COMPAT_FLAGS@\n LTLIBICONV = @LTLIBICONV@\n LTLIBOBJS = @LTLIBOBJS@\n MAINT = @MAINT@"}, {"sha": "83f13d08a956eaa42a96d8820375bc2cf79fe5e8", "filename": "libstdc++-v3/po/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.in?ref=6d49b790fd00f004b9580d85788b8e6b9475e4aa", "patch": "@@ -163,6 +163,7 @@ LIBS = @LIBS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@\n+LONG_DOUBLE_COMPAT_FLAGS = @LONG_DOUBLE_COMPAT_FLAGS@\n LTLIBICONV = @LTLIBICONV@\n LTLIBOBJS = @LTLIBOBJS@\n MAINT = @MAINT@"}, {"sha": "dcc9e06be43b6f61a30e78854d409ae9f1922d47", "filename": "libstdc++-v3/python/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Fpython%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Fpython%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2FMakefile.in?ref=6d49b790fd00f004b9580d85788b8e6b9475e4aa", "patch": "@@ -193,6 +193,7 @@ LIBS = @LIBS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@\n+LONG_DOUBLE_COMPAT_FLAGS = @LONG_DOUBLE_COMPAT_FLAGS@\n LTLIBICONV = @LTLIBICONV@\n LTLIBOBJS = @LTLIBOBJS@\n MAINT = @MAINT@"}, {"sha": "d9830c2a8db7316453b2ba74da0adb601e45463c", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=6d49b790fd00f004b9580d85788b8e6b9475e4aa", "patch": "@@ -109,9 +109,9 @@ libstdc___la_LINK = $(CXXLINK) $(libstdc___la_LDFLAGS)\n # pass -mlong-double-64.\n if GLIBCXX_LDBL_COMPAT\n compatibility-ldbl.lo: compatibility-ldbl.cc\n-\t$(LTCXXCOMPILE) -mlong-double-64 -c $<\n+\t$(LTCXXCOMPILE) $(LONG_DOUBLE_COMPAT_FLAGS) -c $<\n compatibility-ldbl.o: compatibility-ldbl.cc\n-\t$(CXXCOMPILE) -mlong-double-64 -c $<\n+\t$(CXXCOMPILE) $(LONG_DOUBLE_COMPAT_FLAGS) -c $<\n endif\n \n # Use special rules for C++11 files/objects."}, {"sha": "ed532699fe736175810d5c27edb56216462fa6a0", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=6d49b790fd00f004b9580d85788b8e6b9475e4aa", "patch": "@@ -226,6 +226,7 @@ LIBS = @LIBS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@\n+LONG_DOUBLE_COMPAT_FLAGS = @LONG_DOUBLE_COMPAT_FLAGS@\n LTLIBICONV = @LTLIBICONV@\n LTLIBOBJS = @LTLIBOBJS@\n MAINT = @MAINT@\n@@ -902,9 +903,9 @@ vpath % $(top_srcdir)/src/c++11\n # Use special rules for compatibility-ldbl.cc compilation, as we need to\n # pass -mlong-double-64.\n @GLIBCXX_LDBL_COMPAT_TRUE@compatibility-ldbl.lo: compatibility-ldbl.cc\n-@GLIBCXX_LDBL_COMPAT_TRUE@\t$(LTCXXCOMPILE) -mlong-double-64 -c $<\n+@GLIBCXX_LDBL_COMPAT_TRUE@\t$(LTCXXCOMPILE) $(LONG_DOUBLE_COMPAT_FLAGS) -c $<\n @GLIBCXX_LDBL_COMPAT_TRUE@compatibility-ldbl.o: compatibility-ldbl.cc\n-@GLIBCXX_LDBL_COMPAT_TRUE@\t$(CXXCOMPILE) -mlong-double-64 -c $<\n+@GLIBCXX_LDBL_COMPAT_TRUE@\t$(CXXCOMPILE) $(LONG_DOUBLE_COMPAT_FLAGS) -c $<\n \n # Use special rules for C++11 files/objects.\n compatibility-c++0x.lo: compatibility-c++0x.cc"}, {"sha": "465ec3a4fb82312cc87d151dd5e139eafcb930c0", "filename": "libstdc++-v3/src/c++11/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in?ref=6d49b790fd00f004b9580d85788b8e6b9475e4aa", "patch": "@@ -196,6 +196,7 @@ LIBS = @LIBS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@\n+LONG_DOUBLE_COMPAT_FLAGS = @LONG_DOUBLE_COMPAT_FLAGS@\n LTLIBICONV = @LTLIBICONV@\n LTLIBOBJS = @LTLIBOBJS@\n MAINT = @MAINT@"}, {"sha": "591fe709476a7929ec964774eb8c419ec919edf3", "filename": "libstdc++-v3/src/c++98/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in?ref=6d49b790fd00f004b9580d85788b8e6b9475e4aa", "patch": "@@ -197,6 +197,7 @@ LIBS = @LIBS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@\n+LONG_DOUBLE_COMPAT_FLAGS = @LONG_DOUBLE_COMPAT_FLAGS@\n LTLIBICONV = @LTLIBICONV@\n LTLIBOBJS = @LTLIBOBJS@\n MAINT = @MAINT@"}, {"sha": "a620c68f0171cf99e757fd5a7b2d59a4017db105", "filename": "libstdc++-v3/src/filesystem/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2FMakefile.in?ref=6d49b790fd00f004b9580d85788b8e6b9475e4aa", "patch": "@@ -205,6 +205,7 @@ LIBS = @LIBS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@\n+LONG_DOUBLE_COMPAT_FLAGS = @LONG_DOUBLE_COMPAT_FLAGS@\n LTLIBICONV = @LTLIBICONV@\n LTLIBOBJS = @LTLIBOBJS@\n MAINT = @MAINT@"}, {"sha": "b37758b2ccbc9969a57e6f7b82f5b035f06efe4b", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d49b790fd00f004b9580d85788b8e6b9475e4aa/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=6d49b790fd00f004b9580d85788b8e6b9475e4aa", "patch": "@@ -163,6 +163,7 @@ LIBS = @LIBS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@\n+LONG_DOUBLE_COMPAT_FLAGS = @LONG_DOUBLE_COMPAT_FLAGS@\n LTLIBICONV = @LTLIBICONV@\n LTLIBOBJS = @LTLIBOBJS@\n MAINT = @MAINT@"}]}