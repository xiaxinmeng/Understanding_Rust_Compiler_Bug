{"sha": "ca37d49a63a8ec9ccea471fab39bc03cc5867b33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2EzN2Q0OWE2M2E4ZWM5Y2NlYTQ3MWZhYjM5YmMwM2NjNTg2N2IzMw==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@suse.de", "date": "2016-03-14T08:54:06Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2016-03-14T08:54:06Z"}, "message": "Summary: libcc1: rerun configure when gcc/BASE-VER changes\n\n* configure.ac (CONFIG_STATUS_DEPENDENCIES): Substitute.\n* configure: Regenerate.\n* Makefile.in: Regenerate.\n\nFrom-SVN: r234176", "tree": {"sha": "9d1129f36fb1da8747ffd0b3f8215791996f4225", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d1129f36fb1da8747ffd0b3f8215791996f4225"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca37d49a63a8ec9ccea471fab39bc03cc5867b33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca37d49a63a8ec9ccea471fab39bc03cc5867b33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca37d49a63a8ec9ccea471fab39bc03cc5867b33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca37d49a63a8ec9ccea471fab39bc03cc5867b33/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8c5c545cfadfcf1162a4bd4be4651855c1e5766f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c5c545cfadfcf1162a4bd4be4651855c1e5766f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c5c545cfadfcf1162a4bd4be4651855c1e5766f"}], "stats": {"total": 43, "additions": 39, "deletions": 4}, "files": [{"sha": "1efcb68e04b03ced926e7029fd1b091f24610791", "filename": "libcc1/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca37d49a63a8ec9ccea471fab39bc03cc5867b33/libcc1%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca37d49a63a8ec9ccea471fab39bc03cc5867b33/libcc1%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2FChangeLog?ref=ca37d49a63a8ec9ccea471fab39bc03cc5867b33", "patch": "@@ -1,3 +1,9 @@\n+2016-03-14  Andreas Schwab  <schwab@suse.de>\n+\n+\t* configure.ac (CONFIG_STATUS_DEPENDENCIES): Substitute.\n+\t* configure: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\n 2015-06-25  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* plugin.cc (decl_addr_hasher): Inherit from free_ptr_hash"}, {"sha": "9e0036823639cb8164328883b9d5199c0536f17c", "filename": "libcc1/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca37d49a63a8ec9ccea471fab39bc03cc5867b33/libcc1%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca37d49a63a8ec9ccea471fab39bc03cc5867b33/libcc1%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2FMakefile.in?ref=ca37d49a63a8ec9ccea471fab39bc03cc5867b33", "patch": "@@ -151,6 +151,7 @@ AWK = @AWK@\n CC = @CC@\n CCDEPMODE = @CCDEPMODE@\n CFLAGS = @CFLAGS@\n+CONFIG_STATUS_DEPENDENCIES = @CONFIG_STATUS_DEPENDENCIES@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CXX = @CXX@"}, {"sha": "bf112bb4671ca9657c85e9ca8148747e16598c07", "filename": "libcc1/configure", "status": "modified", "additions": 31, "deletions": 4, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca37d49a63a8ec9ccea471fab39bc03cc5867b33/libcc1%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca37d49a63a8ec9ccea471fab39bc03cc5867b33/libcc1%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Fconfigure?ref=ca37d49a63a8ec9ccea471fab39bc03cc5867b33", "patch": "@@ -608,6 +608,7 @@ libsuffix\n GMPINC\n WERROR\n WARN_FLAGS\n+CONFIG_STATUS_DEPENDENCIES\n gcc_version\n visibility\n CXXCPP\n@@ -8511,7 +8512,7 @@ _LT_EOF\n \tif $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n \t  export_symbols_cmds='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n \telse\n-\t  export_symbols_cmds='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n+\t  export_symbols_cmds='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"L\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n \tfi\n \taix_use_runtimelinking=no\n \n@@ -10539,7 +10540,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10542 \"configure\"\n+#line 10543 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10645,7 +10646,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10648 \"configure\"\n+#line 10649 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13403,7 +13404,7 @@ $as_echo_n \"checking whether the $compiler linker ($LD) supports shared librarie\n     if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n       export_symbols_cmds_CXX='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n     else\n-      export_symbols_cmds_CXX='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n+      export_symbols_cmds_CXX='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"L\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n     fi\n     ;;\n   pw32*)\n@@ -14306,6 +14307,14 @@ _ACEOF\n \n gcc_version=`cat $srcdir/../gcc/BASE-VER`\n \n+CONFIG_STATUS_DEPENDENCIES='$(top_srcdir)/../gcc/BASE-VER'\n+\n+\n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n WARN_FLAGS=\n save_CFLAGS=\"$CFLAGS\"\n@@ -14351,8 +14360,20 @@ $as_echo \"$ac_res\" >&6; }\n fi\n   done\n CFLAGS=\"$save_CFLAGS\"\n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n \n \n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n WERROR=\n # Check whether --enable-werror-always was given.\n if test \"${enable_werror_always+set}\" = set; then :\n@@ -14365,6 +14386,12 @@ if test $enable_werror_always = yes; then :\n   WERROR=\"$WERROR${WERROR:+ }-Werror\"\n fi\n \n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n \n \n "}, {"sha": "e2e3fdae0b4e3528fc2722541043abd87b7591d9", "filename": "libcc1/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca37d49a63a8ec9ccea471fab39bc03cc5867b33/libcc1%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca37d49a63a8ec9ccea471fab39bc03cc5867b33/libcc1%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Fconfigure.ac?ref=ca37d49a63a8ec9ccea471fab39bc03cc5867b33", "patch": "@@ -50,6 +50,7 @@ AC_CHECK_DECLS([basename])\n \n gcc_version=`cat $srcdir/../gcc/BASE-VER`\n AC_SUBST(gcc_version)\n+AC_SUBST([CONFIG_STATUS_DEPENDENCIES], ['$(top_srcdir)/../gcc/BASE-VER'])\n \n ACX_PROG_CC_WARNING_OPTS([-W -Wall], [WARN_FLAGS])\n AC_SUBST(WARN_FLAGS)"}]}