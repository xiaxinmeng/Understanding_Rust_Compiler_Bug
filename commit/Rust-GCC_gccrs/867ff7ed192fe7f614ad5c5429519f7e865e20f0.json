{"sha": "867ff7ed192fe7f614ad5c5429519f7e865e20f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY3ZmY3ZWQxOTJmZTdmNjE0YWQ1YzU0Mjk1MTlmN2U4NjVlMjBmMA==", "commit": {"author": {"name": "Christian Bruel", "email": "christian.bruel@st.com", "date": "2012-07-19T11:56:09Z"}, "committer": {"name": "Christian Bruel", "email": "chrbr@gcc.gnu.org", "date": "2012-07-19T11:56:09Z"}, "message": "re PR target/54029 (SH: ICE in find_dead_or_set_registers)\n\nPR target/54029\n* config/sh/sh.c (gen_far_branch): Set JUMP_LABEL for return jumps.\n\nFrom-SVN: r189652", "tree": {"sha": "fe0126199a92fbdf278c300ebc554dfe4466a58f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe0126199a92fbdf278c300ebc554dfe4466a58f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/867ff7ed192fe7f614ad5c5429519f7e865e20f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/867ff7ed192fe7f614ad5c5429519f7e865e20f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/867ff7ed192fe7f614ad5c5429519f7e865e20f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/867ff7ed192fe7f614ad5c5429519f7e865e20f0/comments", "author": null, "committer": null, "parents": [{"sha": "95cbf8515a67cc41daa12f858d5db1277f1f2fa0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95cbf8515a67cc41daa12f858d5db1277f1f2fa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95cbf8515a67cc41daa12f858d5db1277f1f2fa0"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "1ad278a950ee4d948395397e3c1cbe975ed0256e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/867ff7ed192fe7f614ad5c5429519f7e865e20f0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/867ff7ed192fe7f614ad5c5429519f7e865e20f0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=867ff7ed192fe7f614ad5c5429519f7e865e20f0", "patch": "@@ -1,3 +1,8 @@\n+2012-07-19  Christian Bruel  <christian.bruel@st.com>\n+\n+\tPR target/54029\n+\t* config/sh/sh.c (gen_far_branch): Set JUMP_LABEL for return jumps.\n+\n 2012-07-19  Richard Guenther  <rguenther@suse.de>\n \tEric Botcazou  <ebotcazou@adacore.com>\n "}, {"sha": "02a373488121e2bb4ae285626f4f62ebd35671fb", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/867ff7ed192fe7f614ad5c5429519f7e865e20f0/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/867ff7ed192fe7f614ad5c5429519f7e865e20f0/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=867ff7ed192fe7f614ad5c5429519f7e865e20f0", "patch": "@@ -5304,6 +5304,7 @@ gen_far_branch (struct far_branch *bp)\n     }\n   else\n     jump = emit_jump_insn_after (gen_return (), insn);\n+\n   /* Emit a barrier so that reorg knows that any following instructions\n      are not reachable via a fall-through path.\n      But don't do this when not optimizing, since we wouldn't suppress the\n@@ -5312,10 +5313,19 @@ gen_far_branch (struct far_branch *bp)\n   if (optimize)\n     emit_barrier_after (jump);\n   emit_label_after (bp->near_label, insn);\n-  JUMP_LABEL (jump) = bp->far_label;\n+\n+  if (bp->far_label)\n+    JUMP_LABEL (jump) = bp->far_label;\n+  else\n+    {\n+      rtx pat = PATTERN (jump);\n+      gcc_assert (ANY_RETURN_P (pat));\n+      JUMP_LABEL (jump) = pat;\n+    }\n+\n   ok = invert_jump (insn, label, 1);\n   gcc_assert (ok);\n-  \n+\n   /* If we are branching around a jump (rather than a return), prevent\n      reorg from using an insn from the jump target as the delay slot insn -\n      when reorg did this, it pessimized code (we rather hide the delay slot)"}]}