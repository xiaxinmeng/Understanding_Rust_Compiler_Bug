{"sha": "8f7ad986515580265f4315a6036ef3b49eb6be47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY3YWQ5ODY1MTU1ODAyNjVmNDMxNWE2MDM2ZWYzYjQ5ZWI2YmU0Nw==", "commit": {"author": {"name": "Matthias Kretz", "email": "kretz@kde.org", "date": "2021-02-03T15:49:30Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-02-03T15:49:30Z"}, "message": "libstdc++: Support timeout and timeout-factor options\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/experimental/simd/driver.sh: Abstract reading test\n\toptions into read_src_option function. Read skip, only,\n\texpensive, and xfail via read_src_option. Add timeout and\n\ttimeout-factor options and adjust timeout variable accordingly.\n\t* testsuite/experimental/simd/tests/loadstore.cc: Set\n\ttimeout-factor 2.", "tree": {"sha": "abd31aff66e308d034de8422d361c28310fc700d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/abd31aff66e308d034de8422d361c28310fc700d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f7ad986515580265f4315a6036ef3b49eb6be47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f7ad986515580265f4315a6036ef3b49eb6be47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f7ad986515580265f4315a6036ef3b49eb6be47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f7ad986515580265f4315a6036ef3b49eb6be47/comments", "author": {"login": "mattkretz", "id": 3306474, "node_id": "MDQ6VXNlcjMzMDY0NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3306474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattkretz", "html_url": "https://github.com/mattkretz", "followers_url": "https://api.github.com/users/mattkretz/followers", "following_url": "https://api.github.com/users/mattkretz/following{/other_user}", "gists_url": "https://api.github.com/users/mattkretz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattkretz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattkretz/subscriptions", "organizations_url": "https://api.github.com/users/mattkretz/orgs", "repos_url": "https://api.github.com/users/mattkretz/repos", "events_url": "https://api.github.com/users/mattkretz/events{/privacy}", "received_events_url": "https://api.github.com/users/mattkretz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec384c56900748ef1f0cabb7df0f71f716bb2313", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec384c56900748ef1f0cabb7df0f71f716bb2313", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec384c56900748ef1f0cabb7df0f71f716bb2313"}], "stats": {"total": 39, "additions": 27, "deletions": 12}, "files": [{"sha": "f2d31c70bd000ce9cd6b5ad54e891f70c899eb9a", "filename": "libstdc++-v3/testsuite/experimental/simd/driver.sh", "status": "modified", "additions": 26, "deletions": 12, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7ad986515580265f4315a6036ef3b49eb6be47/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Fdriver.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7ad986515580265f4315a6036ef3b49eb6be47/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Fdriver.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Fdriver.sh?ref=8f7ad986515580265f4315a6036ef3b49eb6be47", "patch": "@@ -214,42 +214,56 @@ trap \"rm -f '$log' '$sum' $exe; exit\" INT\n rm -f \"$log\" \"$sum\"\n touch \"$log\" \"$sum\"\n \n-skip=\"$(head -n25 \"$src\" | grep '^//\\s*skip: ')\"\n-if [ -n \"$skip\" ]; then\n-  skip=\"$(echo \"$skip\" | sed -e 's/^.*:\\s*//' -e 's/ \\+/ /g')\"\n+read_src_option() {\n+  local key tmp var\n+  key=\"$1\"\n+  var=\"$2\"\n+  [ -z \"$var\" ] && var=\"$1\"\n+  local tmp=\"$(head -n25 \"$src\" | grep \"^//\\\\s*${key}: \")\"\n+  if [ -n \"$tmp\" ]; then\n+    tmp=\"$(echo \"${tmp#//*${key}: }\" | sed -e 's/ \\+/ /g' -e 's/^ //' -e 's/$//')\"\n+    eval \"$var=\\\"$tmp\\\"\"\n+  else\n+    return 1\n+  fi\n+}\n+\n+if read_src_option skip; then\n   if test_selector \"$skip\"; then\n     # silently skip this test\n     exit 0\n   fi\n fi\n-only=\"$(head -n25 \"$src\" | grep '^//\\s*only: ')\"\n-if [ -n \"$only\" ]; then\n-  only=\"$(echo \"$only\" | sed -e 's/^.*:\\s*//' -e 's/ \\+/ /g')\"\n+if read_src_option only; then\n   if ! test_selector \"$only\"; then\n     # silently skip this test\n     exit 0\n   fi\n fi\n+\n if ! $run_expensive; then\n-  expensive=\"$(head -n25 \"$src\" | grep '^//\\s*expensive: ')\"\n-  if [ -n \"$expensive\" ]; then\n-    expensive=\"$(echo \"$expensive\" | sed -e 's/^.*:\\s*//' -e 's/ \\+/ /g')\"\n+  if read_src_option expensive; then\n     if test_selector \"$expensive\"; then\n       unsupported \"skip expensive tests\"\n       exit 0\n     fi\n   fi\n fi\n-xfail=\"$(head -n25 \"$src\" | grep '^//\\s*xfail: ')\"\n-if [ -n \"$xfail\" ]; then\n-  xfail=\"$(echo \"$xfail\" | sed -e 's/^.*:\\s*//' -e 's/ \\+/ /g')\"\n+\n+if read_src_option xfail; then\n   if test_selector \"${xfail#* }\"; then\n     xfail=\"${xfail%% *}\"\n   else\n     unset xfail\n   fi\n fi\n \n+read_src_option timeout\n+\n+if read_src_option timeout-factor factor; then\n+  timeout=$(awk \"BEGIN { print int($timeout * $factor) }\")\n+fi\n+\n log_output() {\n   if $verbose; then\n     maxcol=${1:-1024}"}, {"sha": "451d3b8c2a55f24e4deb5a37431d6e4a1afea841", "filename": "libstdc++-v3/testsuite/experimental/simd/tests/loadstore.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7ad986515580265f4315a6036ef3b49eb6be47/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Floadstore.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7ad986515580265f4315a6036ef3b49eb6be47/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Floadstore.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Ftests%2Floadstore.cc?ref=8f7ad986515580265f4315a6036ef3b49eb6be47", "patch": "@@ -16,6 +16,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // expensive: * [1-9] * *\n+// timeout-factor: 2\n #include \"bits/verify.h\"\n #include \"bits/make_vec.h\"\n #include \"bits/conversions.h\""}]}