{"sha": "c7f36d55a63c3328c60e4198781867d61e14d886", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdmMzZkNTVhNjNjMzMyOGM2MGU0MTk4NzgxODY3ZDYxZTE0ZDg4Ng==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2013-10-03T17:25:42Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2013-10-03T17:25:42Z"}, "message": "i386.c (ix86_option_override_internal): Do not enable accumulate-outgoing-args when producing unwind info.\n\n\t* i386.c (ix86_option_override_internal): Do not enable\n\taccumulate-outgoing-args when producing unwind info.\n\nFrom-SVN: r203171", "tree": {"sha": "6a2403a59958d2806cf5d3dde9a3129d95ed6ffc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a2403a59958d2806cf5d3dde9a3129d95ed6ffc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7f36d55a63c3328c60e4198781867d61e14d886", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7f36d55a63c3328c60e4198781867d61e14d886", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7f36d55a63c3328c60e4198781867d61e14d886", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7f36d55a63c3328c60e4198781867d61e14d886/comments", "author": null, "committer": null, "parents": [{"sha": "4f0bee4c9ae0c361ea1cb8731d928e92f610f593", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f0bee4c9ae0c361ea1cb8731d928e92f610f593", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f0bee4c9ae0c361ea1cb8731d928e92f610f593"}], "stats": {"total": 24, "additions": 6, "deletions": 18}, "files": [{"sha": "93cd63d73b3d4f02ebfcaa1654d3c2cd4fd8dfcb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7f36d55a63c3328c60e4198781867d61e14d886/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7f36d55a63c3328c60e4198781867d61e14d886/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c7f36d55a63c3328c60e4198781867d61e14d886", "patch": "@@ -1,3 +1,8 @@\n+2013-10-03  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (ix86_option_override_internal): Do not enable\n+\taccumulate-outgoing-args when producing unwind info.\n+\n 2013-10-03  Wei Mi  <wmi@google.com>\n \n \t* lra-constraints.c (insert_move_for_subreg): New function"}, {"sha": "09b0fc507703f7e2fea2061a3d08c23ade6103c9", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7f36d55a63c3328c60e4198781867d61e14d886/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7f36d55a63c3328c60e4198781867d61e14d886/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=c7f36d55a63c3328c60e4198781867d61e14d886", "patch": "@@ -3793,28 +3793,11 @@ ix86_option_override_internal (bool main_args_p)\n       }\n \n   ix86_tune_mask = 1u << ix86_tune;\n-  if ((!USE_IX86_FRAME_POINTER\n-       || (x86_accumulate_outgoing_args & ix86_tune_mask))\n+  if ((x86_accumulate_outgoing_args & ix86_tune_mask)\n       && !(target_flags_explicit & MASK_ACCUMULATE_OUTGOING_ARGS)\n       && !optimize_size)\n     target_flags |= MASK_ACCUMULATE_OUTGOING_ARGS;\n \n-  /* ??? Unwind info is not correct around the CFG unless either a frame\n-     pointer is present or M_A_O_A is set.  Fixing this requires rewriting\n-     unwind info generation to be aware of the CFG and propagating states\n-     around edges.  */\n-  if ((flag_unwind_tables || flag_asynchronous_unwind_tables\n-       || flag_exceptions || flag_non_call_exceptions)\n-      && flag_omit_frame_pointer\n-      && !(target_flags & MASK_ACCUMULATE_OUTGOING_ARGS))\n-    {\n-      if (target_flags_explicit & MASK_ACCUMULATE_OUTGOING_ARGS)\n-\twarning (0, \"unwind tables currently require either a frame pointer \"\n-\t\t \"or %saccumulate-outgoing-args%s for correctness\",\n-\t\t prefix, suffix);\n-      target_flags |= MASK_ACCUMULATE_OUTGOING_ARGS;\n-    }\n-\n   /* If stack probes are required, the space used for large function\n      arguments on the stack must also be probed, so enable\n      -maccumulate-outgoing-args so this happens in the prologue.  */"}]}