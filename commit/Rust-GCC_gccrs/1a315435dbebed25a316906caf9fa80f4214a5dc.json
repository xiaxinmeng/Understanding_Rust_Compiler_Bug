{"sha": "1a315435dbebed25a316906caf9fa80f4214a5dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWEzMTU0MzVkYmViZWQyNWEzMTY5MDZjYWY5ZmE4MGY0MjE0YTVkYw==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2020-01-10T10:01:33Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2020-01-10T10:01:33Z"}, "message": "IPA-CP: Access param_ipa_sra_max_replacements through opt_for_fn\n\n2020-01-10  Martin Jambor  <mjambor@suse.cz>\n\n\t* params.opt (param_ipa_sra_max_replacements): Mark as Optimization.\n\t* ipa-sra.c (pull_accesses_from_callee): New parameter caller, use it\n\tto get param_ipa_sra_max_replacements.\n\t(param_splitting_across_edge): Pass the caller to\n\tpull_accesses_from_callee.\n\nFrom-SVN: r280100", "tree": {"sha": "21ea88f2ef5b7d06a7d67dfc171ab02658558f6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21ea88f2ef5b7d06a7d67dfc171ab02658558f6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a315435dbebed25a316906caf9fa80f4214a5dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a315435dbebed25a316906caf9fa80f4214a5dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a315435dbebed25a316906caf9fa80f4214a5dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a315435dbebed25a316906caf9fa80f4214a5dc/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f7725a488382e7ed47a808cecaed692e0ed78edb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7725a488382e7ed47a808cecaed692e0ed78edb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7725a488382e7ed47a808cecaed692e0ed78edb"}], "stats": {"total": 34, "additions": 22, "deletions": 12}, "files": [{"sha": "61e3ef54c9ac15e322954b387ec220b975d31afa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a315435dbebed25a316906caf9fa80f4214a5dc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a315435dbebed25a316906caf9fa80f4214a5dc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a315435dbebed25a316906caf9fa80f4214a5dc", "patch": "@@ -1,3 +1,11 @@\n+2020-01-10  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* params.opt (param_ipa_sra_max_replacements): Mark as Optimization.\n+\t* ipa-sra.c (pull_accesses_from_callee): New parameter caller, use it\n+\tto get param_ipa_sra_max_replacements.\n+\t(param_splitting_across_edge): Pass the caller to\n+\tpull_accesses_from_callee.\n+\n 2020-01-10  Martin Jambor  <mjambor@suse.cz>\n \n \t* params.opt (param_ipcp_unit_growth): Mark as Optimization."}, {"sha": "31de527d11162d81b636df5ba674e8660e033b6c", "filename": "gcc/ipa-sra.c", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a315435dbebed25a316906caf9fa80f4214a5dc/gcc%2Fipa-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a315435dbebed25a316906caf9fa80f4214a5dc/gcc%2Fipa-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-sra.c?ref=1a315435dbebed25a316906caf9fa80f4214a5dc", "patch": "@@ -3248,16 +3248,17 @@ all_callee_accesses_present_p (isra_param_desc *param_desc,\n enum acc_prop_kind {ACC_PROP_DONT, ACC_PROP_COPY, ACC_PROP_CERTAIN};\n \n \n-/* Attempt to propagate all definite accesses from ARG_DESC to PARAM_DESC, if\n-   they would not violate some constraint there.  If successful, return NULL,\n-   otherwise return the string reason for failure (which can be written to the\n-   dump file).  DELTA_OFFSET is the known offset of the actual argument withing\n-   the formal parameter (so of ARG_DESCS within PARAM_DESCS), ARG_SIZE is the\n-   size of the actual argument or zero, if not known. In case of success, set\n-   *CHANGE_P to true if propagation actually changed anything.  */\n+/* Attempt to propagate all definite accesses from ARG_DESC to PARAM_DESC,\n+   (which belongs to CALLER) if they would not violate some constraint there.\n+   If successful, return NULL, otherwise return the string reason for failure\n+   (which can be written to the dump file).  DELTA_OFFSET is the known offset\n+   of the actual argument withing the formal parameter (so of ARG_DESCS within\n+   PARAM_DESCS), ARG_SIZE is the size of the actual argument or zero, if not\n+   known. In case of success, set *CHANGE_P to true if propagation actually\n+   changed anything.  */\n \n static const char *\n-pull_accesses_from_callee (isra_param_desc *param_desc,\n+pull_accesses_from_callee (cgraph_node *caller, isra_param_desc *param_desc,\n \t\t\t   isra_param_desc *arg_desc,\n \t\t\t   unsigned delta_offset, unsigned arg_size,\n \t\t\t   bool *change_p)\n@@ -3337,7 +3338,7 @@ pull_accesses_from_callee (isra_param_desc *param_desc,\n       return NULL;\n \n     if ((prop_count + pclen\n-\t > (unsigned) param_ipa_sra_max_replacements)\n+\t > (unsigned) opt_for_fn (caller->decl, param_ipa_sra_max_replacements))\n \t|| size_would_violate_limit_p (param_desc,\n \t\t\t\t       param_desc->size_reached + prop_size))\n       return \"propagating accesses would violate the count or size limit\";\n@@ -3457,7 +3458,8 @@ param_splitting_across_edge (cgraph_edge *cs)\n \t  else\n \t    {\n \t      const char *pull_failure\n-\t\t= pull_accesses_from_callee (param_desc, arg_desc, 0, 0, &res);\n+\t\t= pull_accesses_from_callee (cs->caller, param_desc, arg_desc,\n+\t\t\t\t\t     0, 0, &res);\n \t      if (pull_failure)\n \t\t{\n \t\t  if (dump_file && (dump_flags & TDF_DETAILS))\n@@ -3518,7 +3520,7 @@ param_splitting_across_edge (cgraph_edge *cs)\n \t  else\n \t    {\n \t      const char *pull_failure\n-\t\t= pull_accesses_from_callee (param_desc, arg_desc,\n+\t\t= pull_accesses_from_callee (cs->caller, param_desc, arg_desc,\n \t\t\t\t\t     ipf->unit_offset,\n \t\t\t\t\t     ipf->unit_size, &res);\n \t      if (pull_failure)"}, {"sha": "a669bbc1aa5fc78602146b1db79753350a65e8be", "filename": "gcc/params.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a315435dbebed25a316906caf9fa80f4214a5dc/gcc%2Fparams.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a315435dbebed25a316906caf9fa80f4214a5dc/gcc%2Fparams.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.opt?ref=1a315435dbebed25a316906caf9fa80f4214a5dc", "patch": "@@ -239,7 +239,7 @@ Common Joined UInteger Var(param_ipa_max_switch_predicate_bounds) Init(5) Param\n Maximal number of boundary endpoints of case ranges of switch statement used during IPA functoin summary generation.\n \n -param=ipa-sra-max-replacements=\n-Common Joined UInteger Var(param_ipa_sra_max_replacements) Init(8) IntegerRange(0, 16) Param\n+Common Joined UInteger Var(param_ipa_sra_max_replacements) Optimization Init(8) IntegerRange(0, 16) Param\n Maximum pieces that IPA-SRA tracks per formal parameter, as a consequence, also the maximum number of replacements of a formal parameter.\n \n -param=ipa-sra-ptr-growth-factor="}]}