{"sha": "af7b9e82d00bc5488538a583fe717e0b7d8d49c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY3YjllODJkMDBiYzU0ODg1MzhhNTgzZmU3MTdlMGI3ZDhkNDljMw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2012-01-14T17:47:18Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2012-01-14T17:47:18Z"}, "message": "* include/bits/stl_iterator.h (reverse_iterator): Doxygen comments.\n\nFrom-SVN: r183182", "tree": {"sha": "accb639f3c83dc91afce892a534bd91a416f5616", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/accb639f3c83dc91afce892a534bd91a416f5616"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af7b9e82d00bc5488538a583fe717e0b7d8d49c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af7b9e82d00bc5488538a583fe717e0b7d8d49c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af7b9e82d00bc5488538a583fe717e0b7d8d49c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af7b9e82d00bc5488538a583fe717e0b7d8d49c3/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "068ed5e0e1d108c2f8be2ec1c1d1ec3757b68faa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/068ed5e0e1d108c2f8be2ec1c1d1ec3757b68faa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/068ed5e0e1d108c2f8be2ec1c1d1ec3757b68faa"}], "stats": {"total": 63, "additions": 37, "deletions": 26}, "files": [{"sha": "490f7d5f5740e8927938ad7934e48913a5820565", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af7b9e82d00bc5488538a583fe717e0b7d8d49c3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af7b9e82d00bc5488538a583fe717e0b7d8d49c3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=af7b9e82d00bc5488538a583fe717e0b7d8d49c3", "patch": "@@ -1,3 +1,7 @@\n+2012-01-14  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* include/bits/stl_iterator.h (reverse_iterator): Doxygen comments.\n+\n 2012-01-13  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* include/bits/hashtable_policy.h (_Hash_node_base): New, use it as"}, {"sha": "100d30e300a6e5d7429684915840c7f727bce285", "filename": "libstdc++-v3/include/bits/stl_iterator.h", "status": "modified", "additions": 33, "deletions": 26, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af7b9e82d00bc5488538a583fe717e0b7d8d49c3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af7b9e82d00bc5488538a583fe717e0b7d8d49c3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h?ref=af7b9e82d00bc5488538a583fe717e0b7d8d49c3", "patch": "@@ -1,7 +1,7 @@\n // Iterators -*- C++ -*-\n \n // Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,\n-// 2010, 2011\n+// 2010, 2011, 2012\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -114,7 +114,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       typedef typename __traits_type::reference\t\treference;\n \n       /**\n-       *  The default constructor default-initializes member @p current.\n+       *  The default constructor value-initializes member @p current.\n        *  If it is a pointer, that means it is zero-initialized.\n       */\n       // _GLIBCXX_RESOLVE_LIB_DEFECTS\n@@ -134,8 +134,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       : current(__x.current) { }\n \n       /**\n-       *  A reverse_iterator across other types can be copied in the normal\n-       *  fashion.\n+       *  A %reverse_iterator across other types can be copied if the\n+       *  underlying %iterator can be converted to the type of @c current.\n       */\n       template<typename _Iter>\n         reverse_iterator(const reverse_iterator<_Iter>& __x)\n@@ -149,9 +149,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       { return current; }\n \n       /**\n-       *  @return  TODO\n+       *  @return  A reference to the value at @c --current\n        *\n-       *  @doctodo\n+       *  This requires that @c --current is dereferenceable.\n+       *\n+       *  @warning This implementation requires that for an iterator of the\n+       *           underlying iterator type, @c x, a reference obtained by\n+       *           @c *x remains valid after @c x has been modified or\n+       *           destroyed. This is a bug: http://gcc.gnu.org/PR51823\n       */\n       reference\n       operator*() const\n@@ -161,18 +166,18 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       }\n \n       /**\n-       *  @return  TODO\n+       *  @return  A pointer to the value at @c --current\n        *\n-       *  @doctodo\n+       *  This requires that @c --current is dereferenceable.\n       */\n       pointer\n       operator->() const\n       { return &(operator*()); }\n \n       /**\n-       *  @return  TODO\n+       *  @return  @c *this\n        *\n-       *  @doctodo\n+       *  Decrements the underlying iterator.\n       */\n       reverse_iterator&\n       operator++()\n@@ -182,9 +187,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       }\n \n       /**\n-       *  @return  TODO\n+       *  @return  The original value of @c *this\n        *\n-       *  @doctodo\n+       *  Decrements the underlying iterator.\n       */\n       reverse_iterator\n       operator++(int)\n@@ -195,9 +200,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       }\n \n       /**\n-       *  @return  TODO\n+       *  @return  @c *this\n        *\n-       *  @doctodo\n+       *  Increments the underlying iterator.\n       */\n       reverse_iterator&\n       operator--()\n@@ -207,9 +212,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       }\n \n       /**\n-       *  @return  TODO\n+       *  @return  A reverse_iterator with the previous value of @c *this\n        *\n-       *  @doctodo\n+       *  Increments the underlying iterator.\n       */\n       reverse_iterator\n       operator--(int)\n@@ -220,18 +225,19 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       }\n \n       /**\n-       *  @return  TODO\n+       *  @return  A reverse_iterator that refers to @c current - @a __n\n        *\n-       *  @doctodo\n+       *  The underlying iterator must be a Random Access Iterator.\n       */\n       reverse_iterator\n       operator+(difference_type __n) const\n       { return reverse_iterator(current - __n); }\n \n       /**\n-       *  @return  TODO\n+       *  @return  *this\n        *\n-       *  @doctodo\n+       *  Moves the underlying iterator backwards @a __n steps.\n+       *  The underlying iterator must be a Random Access Iterator.\n       */\n       reverse_iterator&\n       operator+=(difference_type __n)\n@@ -241,18 +247,19 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       }\n \n       /**\n-       *  @return  TODO\n+       *  @return  A reverse_iterator that refers to @c current - @a __n\n        *\n-       *  @doctodo\n+       *  The underlying iterator must be a Random Access Iterator.\n       */\n       reverse_iterator\n       operator-(difference_type __n) const\n       { return reverse_iterator(current + __n); }\n \n       /**\n-       *  @return  TODO\n+       *  @return  *this\n        *\n-       *  @doctodo\n+       *  Moves the underlying iterator forwards @a __n steps.\n+       *  The underlying iterator must be a Random Access Iterator.\n       */\n       reverse_iterator&\n       operator-=(difference_type __n)\n@@ -262,9 +269,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       }\n \n       /**\n-       *  @return  TODO\n+       *  @return  The value at @c current - @a __n - 1\n        *\n-       *  @doctodo\n+       *  The underlying iterator must be a Random Access Iterator.\n       */\n       reference\n       operator[](difference_type __n) const"}]}