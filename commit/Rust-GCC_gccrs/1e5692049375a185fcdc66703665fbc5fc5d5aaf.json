{"sha": "1e5692049375a185fcdc66703665fbc5fc5d5aaf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU1NjkyMDQ5Mzc1YTE4NWZjZGM2NjcwMzY2NWZiYzVmYzVkNWFhZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-20T15:21:18Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-20T15:21:18Z"}, "message": "[multiple changes]\n\n2014-01-20  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: Document that Loop_Variant is included in\n\tStatement_Assertions.\n\t* sem_prag.adb (Check_Kind): Add Loop_Variant to\n\tStatement_Assertions (Check_Applicable_Policy): Add Loop_Variant\n\tto Statement_Assertions.\n\n2014-01-20  Doug Rupp  <rupp@adacore.com>\n\n\t* sysdep.c (__gnat_is_file_not_found_error) [vxworks6]: Add case\n\tfor errno ENOENT from RTP on NFS mounted file system.\n\nFrom-SVN: r206821", "tree": {"sha": "939b2cc5bdbad992680347fe439897a1abb53309", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/939b2cc5bdbad992680347fe439897a1abb53309"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e5692049375a185fcdc66703665fbc5fc5d5aaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e5692049375a185fcdc66703665fbc5fc5d5aaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e5692049375a185fcdc66703665fbc5fc5d5aaf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e5692049375a185fcdc66703665fbc5fc5d5aaf/comments", "author": null, "committer": null, "parents": [{"sha": "0969e96dcb682892a69c2ef26135dbfd79da5d1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0969e96dcb682892a69c2ef26135dbfd79da5d1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0969e96dcb682892a69c2ef26135dbfd79da5d1b"}], "stats": {"total": 58, "additions": 42, "deletions": 16}, "files": [{"sha": "68186c39c3b6a28bbb3e853be9457079f9adcb09", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e5692049375a185fcdc66703665fbc5fc5d5aaf/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e5692049375a185fcdc66703665fbc5fc5d5aaf/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1e5692049375a185fcdc66703665fbc5fc5d5aaf", "patch": "@@ -1,3 +1,16 @@\n+2014-01-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi: Document that Loop_Variant is included in\n+\tStatement_Assertions.\n+\t* sem_prag.adb (Check_Kind): Add Loop_Variant to\n+\tStatement_Assertions (Check_Applicable_Policy): Add Loop_Variant\n+\tto Statement_Assertions.\n+\n+2014-01-20  Doug Rupp  <rupp@adacore.com>\n+\n+\t* sysdep.c (__gnat_is_file_not_found_error) [vxworks6]: Add case\n+\tfor errno ENOENT from RTP on NFS mounted file system.\n+\n 2014-01-20  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_util.adb (Check_Function_Writable_Actuals): 1) Do not"}, {"sha": "465da2b0ebb977b556b3b974a146a626b930b05b", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e5692049375a185fcdc66703665fbc5fc5d5aaf/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e5692049375a185fcdc66703665fbc5fc5d5aaf/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=1e5692049375a185fcdc66703665fbc5fc5d5aaf", "patch": "@@ -1431,7 +1431,7 @@ implementation defined).\n \n The implementation defined policy @code{Statement_Assertions}\n applies to @code{Assert}, @code{Assert_And_Cut},\n-@code{Assume}, and @code{Loop_Invariant}.\n+@code{Assume}, @code{Loop_Invariant}, and @code{Loop_Variant}.\n \n @node Pragma Assume\n @unnumberedsec Pragma Assume"}, {"sha": "e678c8b6860b13d507012cdb4b05f89669dc37ce", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e5692049375a185fcdc66703665fbc5fc5d5aaf/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e5692049375a185fcdc66703665fbc5fc5d5aaf/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=1e5692049375a185fcdc66703665fbc5fc5d5aaf", "patch": "@@ -1,4 +1,4 @@\n-------------------------------------------------------------------------------\n+-----------------------------------------------------------------------------\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n@@ -21903,14 +21903,14 @@ package body Sem_Prag is\n \n             procedure Collect_Abstract_States (States : Elist_Id) is\n                State_Elmt : Elmt_Id;\n-\n             begin\n-               State_Elmt := First_Elmt (States);\n-               while Present (State_Elmt) loop\n-                  Add_Item (Node (State_Elmt), Hidden_States);\n-\n-                  Next_Elmt (State_Elmt);\n-               end loop;\n+               if Present (States) then\n+                  State_Elmt := First_Elmt (States);\n+                  while Present (State_Elmt) loop\n+                     Add_Item (Node (State_Elmt), Hidden_States);\n+                     Next_Elmt (State_Elmt);\n+                  end loop;\n+               end if;\n             end Collect_Abstract_States;\n \n             --  Local variables\n@@ -22147,7 +22147,8 @@ package body Sem_Prag is\n                         and then Nam_In (Nam, Name_Assert,\n                                               Name_Assert_And_Cut,\n                                               Name_Assume,\n-                                              Name_Loop_Invariant))\n+                                              Name_Loop_Invariant,\n+                                              Name_Loop_Variant))\n             then\n                case (Chars (Get_Pragma_Arg (Last (PPA)))) is\n                   when Name_On | Name_Check =>\n@@ -22207,10 +22208,11 @@ package body Sem_Prag is\n             if Ename = Pnm\n               or else Pnm = Name_Assertion\n               or else (Pnm = Name_Statement_Assertions\n-                        and then (Ename = Name_Assert         or else\n-                                  Ename = Name_Assert_And_Cut or else\n-                                  Ename = Name_Assume         or else\n-                                  Ename = Name_Loop_Invariant))\n+                        and then Nam_In (Ename, Name_Assert,\n+                                                Name_Assert_And_Cut,\n+                                                Name_Assume,\n+                                                Name_Loop_Invariant,\n+                                                Name_Loop_Variant))\n             then\n                Policy := Chars (Get_Pragma_Arg (Last (PPA)));\n "}, {"sha": "9f427077c6dc062f0896ac39ccdc8aaecf7a5e7d", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e5692049375a185fcdc66703665fbc5fc5d5aaf/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e5692049375a185fcdc66703665fbc5fc5d5aaf/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=1e5692049375a185fcdc66703665fbc5fc5d5aaf", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *         Copyright (C) 1992-2012, Free Software Foundation, Inc.          *\n+ *         Copyright (C) 1992-2013, Free Software Foundation, Inc.          *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -42,6 +42,12 @@\n #endif\n #include \"selectLib.h\"\n #include \"vxWorks.h\"\n+#if defined (__RTP__)\n+# include \"version.h\"\n+# if (_WRS_VXWORKS_MAJOR == 6)\n+#  include \"vwModNum.h\"\n+# endif /* _WRS_VXWORKS_MAJOR == 6 */\n+#endif /* __RTP__ */\n #endif\n \n #ifdef __ANDROID__\n@@ -920,11 +926,16 @@ __gnat_is_file_not_found_error (int errno_val) {\n #if ! defined (__RTP__) && (! defined (VTHREADS) || defined (__VXWORKSMILS__))\n       case S_nfsLib_NFSERR_NOENT:\n #endif\n+#if defined (__RTP__) && (_WRS_VXWORKS_MAJOR == 6)\n+\t/* An RTP can return an NFS file not found, and the NFS bits must\n+\t   first be masked off to check the errno.  */\n+      case M_nfsStat | ENOENT:\n+#endif\n #endif\n          return 1;\n \n       default:\n-         return 0;\n+        return 0;\n    }\n }\n "}]}