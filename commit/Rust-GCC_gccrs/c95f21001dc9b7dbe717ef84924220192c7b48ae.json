{"sha": "c95f21001dc9b7dbe717ef84924220192c7b48ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk1ZjIxMDAxZGM5YjdkYmU3MTdlZjg0OTI0MjIwMTkyYzdiNDhhZQ==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2020-07-05T17:29:02Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-19T09:53:35Z"}, "message": "[Ada] AI12-0170: Abstract subprogram calls in class-wide precond exprs\n\ngcc/ada/\n\n\t* sem_disp.adb (Check_Dispatching_Context): When the enclosing\n\tsubprogram is abstract, bypass early return if the call is\n\ttag-indeterminate, to continue with the later error checking.", "tree": {"sha": "552d7eeddfbee58526b7693e9a34383765d1b905", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/552d7eeddfbee58526b7693e9a34383765d1b905"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c95f21001dc9b7dbe717ef84924220192c7b48ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c95f21001dc9b7dbe717ef84924220192c7b48ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c95f21001dc9b7dbe717ef84924220192c7b48ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c95f21001dc9b7dbe717ef84924220192c7b48ae/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e40cb362d0b3d49e5dc5a68c5dec1d5672c2832a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e40cb362d0b3d49e5dc5a68c5dec1d5672c2832a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e40cb362d0b3d49e5dc5a68c5dec1d5672c2832a"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "cf54337631d863a32776864db7447b3bf0927d55", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c95f21001dc9b7dbe717ef84924220192c7b48ae/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c95f21001dc9b7dbe717ef84924220192c7b48ae/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=c95f21001dc9b7dbe717ef84924220192c7b48ae", "patch": "@@ -575,12 +575,16 @@ package body Sem_Disp is\n             --  Similarly, if this is a pre/postcondition for an abstract\n             --  subprogram, it may call another abstract function which is\n             --  a primitive of an abstract type. The call is non-dispatching\n-            --  but will be legal in overridings of the operation.\n+            --  but will be legal in overridings of the operation. However,\n+            --  if the call is tag-indeterminate we want to continue with\n+            --  with the error checking below, as this case is illegal even\n+            --  for abstract subprograms (see AI12-0170).\n \n             elsif (Is_Subprogram (Scop)\n                     or else Chars (Scop) = Name_Postcondition)\n               and then\n-                (Is_Abstract_Subprogram (Scop)\n+                ((Is_Abstract_Subprogram (Scop)\n+                   and then not Is_Tag_Indeterminate (N))\n                   or else\n                     (Nkind (Parent (Scop)) = N_Procedure_Specification\n                       and then Null_Present (Parent (Scop))))"}]}