{"sha": "4a9aa9dec7fc413654807890061a4d7df8a1c5e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE5YWE5ZGVjN2ZjNDEzNjU0ODA3ODkwMDYxYTRkN2RmOGExYzVlNw==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-06-02T00:16:25Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-06-02T00:16:25Z"}, "message": "Daily bump.", "tree": {"sha": "82d6d27df53114b759d2bc07374bb39b0827354c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82d6d27df53114b759d2bc07374bb39b0827354c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a9aa9dec7fc413654807890061a4d7df8a1c5e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a9aa9dec7fc413654807890061a4d7df8a1c5e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a9aa9dec7fc413654807890061a4d7df8a1c5e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a9aa9dec7fc413654807890061a4d7df8a1c5e7/comments", "author": null, "committer": null, "parents": [{"sha": "cd3f067b82a1331f5fb695879ba5c3d9bb2cca3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd3f067b82a1331f5fb695879ba5c3d9bb2cca3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd3f067b82a1331f5fb695879ba5c3d9bb2cca3a"}], "stats": {"total": 169, "additions": 168, "deletions": 1}, "files": [{"sha": "ffe02a5325c3c1a1511e410dbb3ffb65f5c6c076", "filename": "gcc/ChangeLog", "status": "modified", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a9aa9dec7fc413654807890061a4d7df8a1c5e7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a9aa9dec7fc413654807890061a4d7df8a1c5e7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4a9aa9dec7fc413654807890061a4d7df8a1c5e7", "patch": "@@ -1,3 +1,78 @@\n+2020-06-01  Jeff Law  <law@torsion.usersys.redhat.com>\n+\n+\t* lower-subreg.c (resolve_simple_move): If simplify_gen_subreg_concatn\n+\treturns (const_int 0) for the destination, then emit nothing.\n+\n+2020-06-01  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* lto-streamer.h (enum LTO_tags): Remove LTO_field_decl_ref,\n+\tLTO_function_decl_ref, LTO_label_decl_ref, LTO_namespace_decl_ref,\n+\tLTO_result_decl_ref, LTO_type_decl_ref, LTO_type_ref,\n+\tLTO_const_decl_ref, LTO_imported_decl_ref,\n+\tLTO_translation_unit_decl_ref, LTO_global_decl_ref and\n+\tLTO_namelist_decl_ref; add LTO_global_stream_ref.\n+\t* lto-streamer-in.c (lto_input_tree_ref): Simplify.\n+\t(lto_input_scc): Update.\n+\t(lto_input_tree_1): Update.\n+\t* lto-streamer-out.c (lto_indexable_tree_ref): Simlify.\n+\t* lto-streamer.c (lto_tag_name): Update.\n+\n+2020-06-01  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-reference.c (stream_out_bitmap): Use lto_output_var_decl_ref.\n+\t(ipa_reference_read_optimization_summary): Use lto_intput_var_decl_ref.\n+\t* lto-cgraph.c (lto_output_node): Likewise.\n+\t(lto_output_varpool_node): Likewise.\n+\t(output_offload_tables): Likewise.\n+\t(input_node): Likewise.\n+\t(input_varpool_node): Likewise.\n+\t(input_offload_tables): Likewise.\n+\t* lto-streamer-in.c (lto_input_tree_ref): Declare.\n+\t(lto_input_var_decl_ref): Declare.\n+\t(lto_input_fn_decl_ref): Declare.\n+\t* lto-streamer-out.c (lto_indexable_tree_ref): Use only one decl stream.\n+\t(lto_output_var_decl_index): Rename to ..\n+\t(lto_output_var_decl_ref): ... this.\n+\t(lto_output_fn_decl_index): Rename to ...\n+\t(lto_output_fn_decl_ref): ... this.\n+\t* lto-streamer.h (enum lto_decl_stream_e_t): Remove per-type streams.\n+\t(DEFINE_DECL_STREAM_FUNCS): Remove.\n+\t(lto_output_var_decl_index): Remove.\n+\t(lto_output_fn_decl_index): Remove.\n+\t(lto_output_var_decl_ref): Declare.\n+\t(lto_output_fn_decl_ref): Declare.\n+\t(lto_input_var_decl_ref): Declare.\n+\t(lto_input_fn_decl_ref): Declare.\n+\n+2020-06-01  Feng Xue  <fxue@os.amperecomputing.com>\n+\n+\t* cgraphclones.c (materialize_all_clones): Adjust replace map dump.\n+\t* ipa-param-manipulation.c (ipa_dump_adjusted_parameters): Do not\n+\tdump infomation if there is no adjusted parameter.\n+\t* (ipa_param_adjustments::dump): Adjust prefix spaces for dump string.\n+\n+2020-06-01  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* Makefile.in (gimple-array-bounds.o): New.\n+\t* tree-vrp.c: Move array bounds code...\n+\t* gimple-array-bounds.cc: ...here...\n+\t* gimple-array-bounds.h: ...and here.\n+\n+2020-06-01  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* Makefile.in (OBJS): Add value-range-equiv.o.\n+\t* tree-vrp.c (*value_range_equiv*): Move to...\n+\t* value-range-equiv.cc: ...here.\n+\t* tree-vrp.h (class value_range_equiv): Move to...\n+\t* value-range-equiv.h: ...here.\n+\t* vr-values.h: Include value-range-equiv.h.\n+\n+2020-06-01  Feng Xue  <fxue@os.amperecomputing.com>\n+\n+\tPR ipa/93429\n+\t* ipa-cp.c (propagate_aggs_across_jump_function): Check aggregate\n+\tlattice for simple pass-through by-ref argument.\n+\n 2020-05-31  Jeff Law  <law@redhat.com>\n \n \t* lra.c (add_auto_inc_notes): Remove function."}, {"sha": "2bd6d2b45fc73d1d61cc3be054d87a113c3b4105", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a9aa9dec7fc413654807890061a4d7df8a1c5e7/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a9aa9dec7fc413654807890061a4d7df8a1c5e7/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=4a9aa9dec7fc413654807890061a4d7df8a1c5e7", "patch": "@@ -1 +1 @@\n-20200601\n+20200602"}, {"sha": "382d3b1253419f2633dcc83e922ee2dcded8adc6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a9aa9dec7fc413654807890061a4d7df8a1c5e7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a9aa9dec7fc413654807890061a4d7df8a1c5e7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4a9aa9dec7fc413654807890061a4d7df8a1c5e7", "patch": "@@ -1,3 +1,19 @@\n+2020-06-01  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/95466\n+\tPR c++/95311\n+\tPR c++/95221\n+\t* class.c (build_vfn_ref): Revert 95311 change.\n+\t* cp-ubsan.c (cp_ubsan_maybe_instrument_member_call): Build a\n+\tCOMPOUND_EXPR.\n+\n+2020-06-01  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/95350\n+\t* coroutines.cc (struct param_info): Remove rv_ref field.\n+\t(build_actor_fn): Remove specifial rvalue ref handling.\n+\t(morph_fn_to_coro): Likewise.\n+\n 2020-05-31  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR c++/95087"}, {"sha": "45a9a6827920932e1783a51cf2d5770a1be2968e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a9aa9dec7fc413654807890061a4d7df8a1c5e7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a9aa9dec7fc413654807890061a4d7df8a1c5e7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4a9aa9dec7fc413654807890061a4d7df8a1c5e7", "patch": "@@ -1,3 +1,23 @@\n+2020-06-01  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/95466\n+\t* g++.dg/ubsan/vptr-17.C: New test.\n+\n+2020-06-01  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/95350\n+\t* g++.dg/coroutines/torture/func-params-08.C: Adjust test to\n+\treflect that all rvalue refs are dangling.\n+\t* g++.dg/coroutines/torture/func-params-09-awaitable-parms.C:\n+\tLikewise.\n+\t* g++.dg/coroutines/pr95350.C: New test.\n+\n+2020-06-01  Feng Xue  <fxue@os.amperecomputing.com>\n+\n+\tPR ipa/93429\n+\t* gcc.dg/ipa/ipcp-agg-8.c: Change dump string.\n+\t* gcc.dg/ipa/ipcp-agg-13.c: New test.\n+\n 2020-05-31  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR c++/95087"}, {"sha": "fc92015fbc970ae764ed83220aee91adeb3a7c62", "filename": "libatomic/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a9aa9dec7fc413654807890061a4d7df8a1c5e7/libatomic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a9aa9dec7fc413654807890061a4d7df8a1c5e7/libatomic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FChangeLog?ref=4a9aa9dec7fc413654807890061a4d7df8a1c5e7", "patch": "@@ -1,3 +1,7 @@\n+2020-06-01  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/x86/fenv.c (struct fenv): Add __attribute__ ((gcc_struct)).\n+\n 2020-05-29  H.J. Lu  <hjl.tools@gmail.com>\n \n \tPR bootstrap/95413"}, {"sha": "e39bd90add82e336315be1bb2f450dc4cf283acf", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a9aa9dec7fc413654807890061a4d7df8a1c5e7/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a9aa9dec7fc413654807890061a4d7df8a1c5e7/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=4a9aa9dec7fc413654807890061a4d7df8a1c5e7", "patch": "@@ -1,3 +1,8 @@\n+2020-06-01  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/sfp-exceptions.c (struct fenv):\n+\tAdd __attribute__ ((gcc_struct)).\n+\n 2020-05-29  H.J. Lu  <hjl.tools@gmail.com>\n \n \tPR bootstrap/95413"}, {"sha": "c2358cbe4e75172638ecb88503899de1c1292d07", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a9aa9dec7fc413654807890061a4d7df8a1c5e7/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a9aa9dec7fc413654807890061a4d7df8a1c5e7/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=4a9aa9dec7fc413654807890061a4d7df8a1c5e7", "patch": "@@ -1,3 +1,8 @@\n+2020-06-01  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR libfortran/95418\n+\t* config/fpu-387.h (struct fenv): Add __attribute__ ((gcc_struct)).\n+\n 2020-05-29  H.J. Lu  <hjl.tools@gmail.com>\n \n \tPR bootstrap/95413"}, {"sha": "21387bbfba934950cdc671bfa82c280ef2d1f58b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a9aa9dec7fc413654807890061a4d7df8a1c5e7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a9aa9dec7fc413654807890061a4d7df8a1c5e7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4a9aa9dec7fc413654807890061a4d7df8a1c5e7", "patch": "@@ -1,3 +1,45 @@\n+2020-06-01  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/95392\n+\t* include/bits/fs_path.h (path::_S_to_string): Move to\n+\tnamespace-scope and rename to ...\n+\t(__detail::__string_from_range): ... this.\n+\t[WINDOWS] (__detail::__wstr_from_utf8): New function template to\n+\tconvert a char sequence containing UTF-8 to wstring.\n+\t(path::_S_convert(Iter, Iter)): Adjust call to _S_to_string.\n+\t(path::_S_convert_loc(Iter, Iter, const locale&)): Likewise.\n+\t(u8path(InputIterator, InputIterator)) [WINDOWS]: Use\n+\t__string_from_range to obtain a contiguous range and\n+\t__wstr_from_utf8 to obtain a wide string.\n+\t(u8path(const Source&)) [WINDOWS]: Use __effective_range to\n+\tobtain a contiguous range and __wstr_from_utf8 to obtain a wide\n+\tstring.\n+\t(path::_S_convert(const _EcharT*, const _EcharT)) [WINDOWS]:\n+\tUse __wstr_from_utf8.\n+\n+2020-06-01  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/util/testsuite_iterators.h:\n+\t(input_iterator_wrapper::operator++(int)): Return proxy object.\n+\n+2020-06-01  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/evolution.xml: Document deprecation of\n+\t__is_nullptr_t and removal of std::allocator members.\n+\t* doc/html/manual/api.html: Regenerate.\n+\n+2020-06-01  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/containers.xml: Replace <xref> with <link>.\n+\t* doc/xml/manual/evolution.xml: Likewise.\n+\t* doc/html/manual/api.html: Regenerate.\n+\t* doc/html/manual/containers.html: Regenerate.\n+\n+2020-06-01  Gerald Pfeifer  <gerald@pfeifer.com>\n+\n+\t* doc/xml/faq.xml: Adjust Valgrind reference and remove another.\n+\t* doc/html/faq.html: Regenerate.\n+\n 2020-06-01  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/xml/manual/policy_data_structures_biblio.xml: Remove"}]}