{"sha": "2f228199b9cbcc7b3b1a3cc978bf9e3b8ddec8f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYyMjgxOTliOWNiY2M3YjNiMWEzY2M5NzhiZjllM2I4ZGRlYzhmMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-04-16T16:06:21Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-04-16T16:06:21Z"}, "message": "re PR libstdc++/14975 ([3.4 only] Segfault on low-level write error during imbue)\n\n2004-04-16  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/14975\n\t* include/bits/fstream.tcc (basic_filebuf::imbue): Zero _M_codecvt\n\tin case of error.\n\t* testsuite/27_io/basic_filebuf/imbue/char/14975-1.cc: New.\n\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/14975-2.cc: New.\n\nFrom-SVN: r80753", "tree": {"sha": "f31e1b1a84213751dba4e376e28508fbdd2c5af7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f31e1b1a84213751dba4e376e28508fbdd2c5af7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f228199b9cbcc7b3b1a3cc978bf9e3b8ddec8f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f228199b9cbcc7b3b1a3cc978bf9e3b8ddec8f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f228199b9cbcc7b3b1a3cc978bf9e3b8ddec8f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f228199b9cbcc7b3b1a3cc978bf9e3b8ddec8f3/comments", "author": null, "committer": null, "parents": [{"sha": "c805f22eca87725368c7c00fcd56477daf888598", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c805f22eca87725368c7c00fcd56477daf888598", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c805f22eca87725368c7c00fcd56477daf888598"}], "stats": {"total": 160, "additions": 160, "deletions": 0}, "files": [{"sha": "f6846551c128ab4a7f7c04c477d7806e32a9b068", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f228199b9cbcc7b3b1a3cc978bf9e3b8ddec8f3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f228199b9cbcc7b3b1a3cc978bf9e3b8ddec8f3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2f228199b9cbcc7b3b1a3cc978bf9e3b8ddec8f3", "patch": "@@ -1,3 +1,11 @@\n+2004-04-16  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/14975\n+\t* include/bits/fstream.tcc (basic_filebuf::imbue): Zero _M_codecvt\n+\tin case of error.\n+\t* testsuite/27_io/basic_filebuf/imbue/char/14975-1.cc: New.\n+\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/14975-2.cc: New.\n+\n 2004-04-16  Paolo Carlini  <pcarlini@suse.de>\n \n \t* acconfig.h: Remove _GLIBCXX_USE_LONG_DOUBLE entry, not"}, {"sha": "9f46279bea53dbf8d5e09aadbe9ef2b9b543c1ea", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f228199b9cbcc7b3b1a3cc978bf9e3b8ddec8f3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f228199b9cbcc7b3b1a3cc978bf9e3b8ddec8f3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=2f228199b9cbcc7b3b1a3cc978bf9e3b8ddec8f3", "patch": "@@ -786,6 +786,8 @@ namespace std\n \n       if (__testvalid)\n \t_M_codecvt = _M_codecvt_tmp;\n+      else\n+\t_M_codecvt = 0;\n     }\n \n   // Inhibit implicit instantiations for required instantiations,"}, {"sha": "0b7369e12b1a9ff484f682e59074f1c759ee6cbc", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/imbue/char/14975-1.cc", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f228199b9cbcc7b3b1a3cc978bf9e3b8ddec8f3/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F14975-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f228199b9cbcc7b3b1a3cc978bf9e3b8ddec8f3/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F14975-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F14975-1.cc?ref=2f228199b9cbcc7b3b1a3cc978bf9e3b8ddec8f3", "patch": "@@ -0,0 +1,67 @@\n+// 2004-04-16  Petur Runolfsson  <peturr02@ru.is>\n+\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.8.1.4 Overridden virtual functions\n+\n+#include <fstream>\n+#include <locale>\n+#include <testsuite_hooks.h>\n+\n+class Buf : public std::filebuf\n+{\n+protected:\n+  virtual int_type\n+  overflow(int_type c = traits_type::eof())\n+  {\n+    return traits_type::eq_int_type(c, traits_type::eof()) ?\n+      traits_type::eof() : std::filebuf::overflow(c);\n+  }\n+};\n+\n+// libstdc++/14975\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  Buf fb;\n+  locale loc_us = __gnu_test::try_named_locale(\"en_US\");\n+  fb.pubimbue(loc_us);\n+  fb.open(\"tmp_14975-1\", ios_base::out);\n+  \n+  try\n+    {\n+      fb.sputc('a');\n+      fb.sputc('b');\n+      fb.pubimbue(locale::classic());\n+      fb.sputc('c');\n+      fb.pubsync();\n+      fb.close();\n+    }\n+  catch (std::exception&)\n+    {\n+    }\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "8789b9aa4d8eebab681d673e9006cade67c519d4", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/imbue/wchar_t/14975-2.cc", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f228199b9cbcc7b3b1a3cc978bf9e3b8ddec8f3/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fwchar_t%2F14975-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f228199b9cbcc7b3b1a3cc978bf9e3b8ddec8f3/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fwchar_t%2F14975-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fwchar_t%2F14975-2.cc?ref=2f228199b9cbcc7b3b1a3cc978bf9e3b8ddec8f3", "patch": "@@ -0,0 +1,83 @@\n+// 2004-04-16  Petur Runolfsson  <peturr02@ru.is>\n+\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+#include <fstream>\n+#include <locale>\n+#include <unistd.h>\n+#include <signal.h>\n+#include <fcntl.h>\n+#include <sys/types.h>\n+#include <sys/stat.h>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/14975\n+void test01()\n+{\n+  using namespace std;\n+  using namespace __gnu_test;\n+  bool test __attribute__((unused)) = true;\n+\n+  locale loc_us = try_named_locale(\"en_US\");\n+\n+  const char* name = \"tmp_14975-2\";\n+\n+  signal(SIGPIPE, SIG_IGN);\n+\n+  unlink(name);  \n+  try_mkfifo(name, S_IRWXU);\n+  \n+  int child = fork();\n+  VERIFY( child != -1 );\n+\n+  if (child == 0)\n+    {\n+      filebuf fbin;\n+      fbin.open(name, ios_base::in);\n+      sleep(2);\n+      exit(0);\n+    }\n+  \n+  wfilebuf fb;\n+  fb.pubimbue(loc_us);\n+  sleep(1);\n+  wfilebuf* ret = fb.open(name, ios_base::out);\n+  VERIFY( ret != NULL );\n+  VERIFY( fb.is_open() );\n+\n+  sleep(3);\n+\n+  try\n+    {\n+      fb.sputc(L'a');\n+      fb.sputc(L'b');\n+      fb.pubimbue(locale::classic());\n+      fb.sputc(L'c');\n+      fb.close();\n+    }\n+  catch (std::exception&)\n+    {\n+    }\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}