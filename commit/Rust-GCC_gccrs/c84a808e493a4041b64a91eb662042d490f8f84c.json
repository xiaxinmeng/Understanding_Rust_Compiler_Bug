{"sha": "c84a808e493a4041b64a91eb662042d490f8f84c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg0YTgwOGU0OTNhNDA0MWI2NGE5MWViNjYyMDQyZDQ5MGY4Zjg0Yw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-12-21T21:38:11Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-12-21T21:38:11Z"}, "message": "rtlanal.c (volatile_insn_p): Delete commented out code.\n\n\t* rtlanal.c (volatile_insn_p): Delete commented out code.\n\t(side_effects_p): Likewise.\n\t(may_trap_p_1) <UNSPEC_VOLATILE>: Return 1 again.\n\t* target.def (unspec_may_trap_p): Adjust comment.\n\t* targhooks.c (default_unspec_may_trap_p): Don't handle UNSPEC_VOLATILE.\n\t* config/ia64/ia64.c (ia64_unspec_may_trap_p): Adjust to above change.\n\nFrom-SVN: r194681", "tree": {"sha": "aa471bb608b713f86590a8f15f209ec14179168c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa471bb608b713f86590a8f15f209ec14179168c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c84a808e493a4041b64a91eb662042d490f8f84c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c84a808e493a4041b64a91eb662042d490f8f84c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c84a808e493a4041b64a91eb662042d490f8f84c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c84a808e493a4041b64a91eb662042d490f8f84c/comments", "author": null, "committer": null, "parents": [{"sha": "8e3a4869029faad868154af6869caad476ffdcb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e3a4869029faad868154af6869caad476ffdcb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e3a4869029faad868154af6869caad476ffdcb7"}], "stats": {"total": 45, "additions": 23, "deletions": 22}, "files": [{"sha": "21af1477892192dc4d8d43dffd25ea901b4d4049", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c84a808e493a4041b64a91eb662042d490f8f84c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c84a808e493a4041b64a91eb662042d490f8f84c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c84a808e493a4041b64a91eb662042d490f8f84c", "patch": "@@ -1,3 +1,12 @@\n+2012-12-21  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* rtlanal.c (volatile_insn_p): Delete commented out code.\n+\t(side_effects_p): Likewise.\n+\t(may_trap_p_1) <UNSPEC_VOLATILE>: Return 1 again.\n+\t* target.def (unspec_may_trap_p): Adjust comment.\n+\t* targhooks.c (default_unspec_may_trap_p): Don't handle UNSPEC_VOLATILE.\n+\t* config/ia64/ia64.c (ia64_unspec_may_trap_p): Adjust to above change.\n+\n 2012-12-21  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR middle-end/55775"}, {"sha": "9be9b42146d87bcf9999ac9cf02b695cf516ef0d", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c84a808e493a4041b64a91eb662042d490f8f84c/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c84a808e493a4041b64a91eb662042d490f8f84c/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=c84a808e493a4041b64a91eb662042d490f8f84c", "patch": "@@ -5845,19 +5845,16 @@ ia64_secondary_reload_class (enum reg_class rclass,\n static int\n ia64_unspec_may_trap_p (const_rtx x, unsigned flags)\n {\n-  if (GET_CODE (x) == UNSPEC)\n+  switch (XINT (x, 1))\n     {\n-      switch (XINT (x, 1))\n-\t{\n-\tcase UNSPEC_LDA:\n-\tcase UNSPEC_LDS:\n-\tcase UNSPEC_LDSA:\n-\tcase UNSPEC_LDCCLR:\n-\tcase UNSPEC_CHKACLR:\n-\tcase UNSPEC_CHKS:\n-\t  /* These unspecs are just wrappers.  */\n-\t  return may_trap_p_1 (XVECEXP (x, 0, 0), flags);\n-\t}\n+    case UNSPEC_LDA:\n+    case UNSPEC_LDS:\n+    case UNSPEC_LDSA:\n+    case UNSPEC_LDCCLR:\n+    case UNSPEC_CHKACLR:\n+    case UNSPEC_CHKS:\n+      /* These unspecs are just wrappers.  */\n+      return may_trap_p_1 (XVECEXP (x, 0, 0), flags);\n     }\n \n   return default_unspec_may_trap_p (x, flags);"}, {"sha": "b14a2a87853e1ad947e0bb3b667b3c8e1f3b5ad0", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c84a808e493a4041b64a91eb662042d490f8f84c/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c84a808e493a4041b64a91eb662042d490f8f84c/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=c84a808e493a4041b64a91eb662042d490f8f84c", "patch": "@@ -2107,7 +2107,6 @@ volatile_insn_p (const_rtx x)\n       return 0;\n \n     case UNSPEC_VOLATILE:\n- /* case TRAP_IF: This isn't clear yet.  */\n       return 1;\n \n     case ASM_INPUT:\n@@ -2240,7 +2239,6 @@ side_effects_p (const_rtx x)\n     case POST_MODIFY:\n     case CALL:\n     case UNSPEC_VOLATILE:\n- /* case TRAP_IF: This isn't clear yet.  */\n       return 1;\n \n     case MEM:\n@@ -2312,9 +2310,9 @@ may_trap_p_1 (const_rtx x, unsigned flags)\n       return 0;\n \n     case UNSPEC:\n-    case UNSPEC_VOLATILE:\n       return targetm.unspec_may_trap_p (x, flags);\n \n+    case UNSPEC_VOLATILE:\n     case ASM_INPUT:\n     case TRAP_IF:\n       return 1;\n@@ -2406,8 +2404,7 @@ may_trap_p_1 (const_rtx x, unsigned flags)\n \n     default:\n       /* Any floating arithmetic may trap.  */\n-      if (SCALAR_FLOAT_MODE_P (GET_MODE (x))\n-\t  && flag_trapping_math)\n+      if (SCALAR_FLOAT_MODE_P (GET_MODE (x)) && flag_trapping_math)\n \treturn 1;\n     }\n "}, {"sha": "c5bbfae6f18532ace00420ba6360f0302bfae230", "filename": "gcc/target.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c84a808e493a4041b64a91eb662042d490f8f84c/gcc%2Ftarget.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c84a808e493a4041b64a91eb662042d490f8f84c/gcc%2Ftarget.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.def?ref=c84a808e493a4041b64a91eb662042d490f8f84c", "patch": "@@ -1816,7 +1816,7 @@ DEFHOOK\n  \"\",\n  rtx, (rtx hard_reg), NULL)\n \n-/* Return nonzero if evaluating UNSPEC[_VOLATILE] X might cause a trap.\n+/* Return nonzero if evaluating UNSPEC X might cause a trap.\n    FLAGS has the same meaning as in rtlanal.c: may_trap_p_1.  */\n DEFHOOK\n (unspec_may_trap_p,"}, {"sha": "954cdb9d1bed4f0b92e7e351e04910697a73c3d1", "filename": "gcc/targhooks.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c84a808e493a4041b64a91eb662042d490f8f84c/gcc%2Ftarghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c84a808e493a4041b64a91eb662042d490f8f84c/gcc%2Ftarghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.c?ref=c84a808e493a4041b64a91eb662042d490f8f84c", "patch": "@@ -102,10 +102,8 @@ default_unspec_may_trap_p (const_rtx x, unsigned flags)\n {\n   int i;\n \n-  if (GET_CODE (x) == UNSPEC_VOLATILE\n-      /* Any floating arithmetic may trap.  */\n-      || (SCALAR_FLOAT_MODE_P (GET_MODE (x))\n-\t  && flag_trapping_math))\n+  /* Any floating arithmetic may trap.  */\n+  if ((SCALAR_FLOAT_MODE_P (GET_MODE (x)) && flag_trapping_math))\n     return 1;\n \n   for (i = 0; i < XVECLEN (x, 0); ++i)"}]}