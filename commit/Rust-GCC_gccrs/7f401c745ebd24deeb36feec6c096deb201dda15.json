{"sha": "7f401c745ebd24deeb36feec6c096deb201dda15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y0MDFjNzQ1ZWJkMjRkZWViMzZmZWVjNmMwOTZkZWIyMDFkZGExNQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-07-12T20:20:10Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-07-12T20:20:10Z"}, "message": "Duh.  INTVAL only wants the rtx, not an operand #.\n\nFrom-SVN: r28072", "tree": {"sha": "0e4afa143d39a6882e601df061f0bd788e0120c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e4afa143d39a6882e601df061f0bd788e0120c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f401c745ebd24deeb36feec6c096deb201dda15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f401c745ebd24deeb36feec6c096deb201dda15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f401c745ebd24deeb36feec6c096deb201dda15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f401c745ebd24deeb36feec6c096deb201dda15/comments", "author": null, "committer": null, "parents": [{"sha": "8f1824d91b26b2a4ad38f07b40a7f802c16e5e54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f1824d91b26b2a4ad38f07b40a7f802c16e5e54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f1824d91b26b2a4ad38f07b40a7f802c16e5e54"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "7bbb499c252dd1f59481383e16d7a45cb17e6e8e", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f401c745ebd24deeb36feec6c096deb201dda15/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f401c745ebd24deeb36feec6c096deb201dda15/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=7f401c745ebd24deeb36feec6c096deb201dda15", "patch": "@@ -6984,7 +6984,7 @@ expand_expr (exp, target, tmode, modifier)\n \t\t= immed_double_const (TREE_INT_CST_LOW (TREE_OPERAND (exp, 0)),\n \t\t\t\t      (HOST_WIDE_INT) 0,\n \t\t\t\t      GET_MODE (op1));\n-\t      op1 = plus_constant (op1, INTVAL (constant_part, 0));\n+\t      op1 = plus_constant (op1, INTVAL (constant_part));\n \t      if (modifier != EXPAND_SUM && modifier != EXPAND_INITIALIZER)\n \t\top1 = force_operand (op1, target);\n \t      return op1;\n@@ -7016,7 +7016,7 @@ expand_expr (exp, target, tmode, modifier)\n \t\t= immed_double_const (TREE_INT_CST_LOW (TREE_OPERAND (exp, 1)),\n \t\t\t\t      (HOST_WIDE_INT) 0,\n \t\t\t\t      GET_MODE (op0));\n-\t      op0 = plus_constant (op0, INTVAL (constant_part, 0));\n+\t      op0 = plus_constant (op0, INTVAL (constant_part));\n \t      if (modifier != EXPAND_SUM && modifier != EXPAND_INITIALIZER)\n \t\top0 = force_operand (op0, target);\n \t      return op0;"}]}