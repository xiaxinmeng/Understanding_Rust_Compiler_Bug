{"sha": "0d67a51060e7d67b685ace6ba5395d9a98e2f5be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ2N2E1MTA2MGU3ZDY3YjY4NWFjZTZiYTUzOTVkOWE5OGUyZjViZQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-04-30T09:19:41Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-04-30T09:19:41Z"}, "message": "Refactor gimple_fold_builtin_memory_op function.\n\n2019-04-30  Martin Liska  <mliska@suse.cz>\n\n\t* gimple-fold.c (gimple_fold_builtin_memory_op): Change endp\n\tinto built_in_function enum. Remove code for endp == 2 and\n\tuse BUILT_IN_* constants.\n\t(gimple_fold_builtin): Call the function with fcode.\n\nFrom-SVN: r270682", "tree": {"sha": "0758a0dc6eae8aa23b68cc00717958f8f7388f5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0758a0dc6eae8aa23b68cc00717958f8f7388f5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d67a51060e7d67b685ace6ba5395d9a98e2f5be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d67a51060e7d67b685ace6ba5395d9a98e2f5be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d67a51060e7d67b685ace6ba5395d9a98e2f5be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d67a51060e7d67b685ace6ba5395d9a98e2f5be/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "791536baadc9f469ec8eef2d7213c6f6091c5fa9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/791536baadc9f469ec8eef2d7213c6f6091c5fa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/791536baadc9f469ec8eef2d7213c6f6091c5fa9"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "cb69c4d0841c2fd7bb3c5fbd4aabcc8d2221c704", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d67a51060e7d67b685ace6ba5395d9a98e2f5be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d67a51060e7d67b685ace6ba5395d9a98e2f5be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d67a51060e7d67b685ace6ba5395d9a98e2f5be", "patch": "@@ -1,3 +1,10 @@\n+2019-04-30  Martin Liska  <mliska@suse.cz>\n+\n+\t* gimple-fold.c (gimple_fold_builtin_memory_op): Change endp\n+\tinto built_in_function enum. Remove code for endp == 2 and\n+\tuse BUILT_IN_* constants.\n+\t(gimple_fold_builtin): Call the function with fcode.\n+\n 2019-04-30  Martin Liska  <mliska@suse.cz>\n \n \t* config/i386/i386.c (ix86_builtin_reciprocal): Cast"}, {"sha": "d3ef05b52433c5065be815ebced880e2f3129657", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d67a51060e7d67b685ace6ba5395d9a98e2f5be/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d67a51060e7d67b685ace6ba5395d9a98e2f5be/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=0d67a51060e7d67b685ace6ba5395d9a98e2f5be", "patch": "@@ -692,7 +692,7 @@ size_must_be_zero_p (tree size)\n \n static bool\n gimple_fold_builtin_memory_op (gimple_stmt_iterator *gsi,\n-\t\t\t       tree dest, tree src, int endp)\n+\t\t\t       tree dest, tree src, enum built_in_function code)\n {\n   gimple *stmt = gsi_stmt (*gsi);\n   tree lhs = gimple_call_lhs (stmt);\n@@ -839,7 +839,7 @@ gimple_fold_builtin_memory_op (gimple_stmt_iterator *gsi,\n \t    }\n \t}\n \n-      if (endp == 3)\n+      if (code == BUILT_IN_MEMMOVE)\n \t{\n \t  /* Both DEST and SRC must be pointer types.\n \t     ??? This is what old code did.  Is the testing for pointer types\n@@ -1102,17 +1102,16 @@ gimple_fold_builtin_memory_op (gimple_stmt_iterator *gsi,\n \n done:\n   gimple_seq stmts = NULL;\n-  if (endp == 0 || endp == 3)\n+  if (code == BUILT_IN_MEMCPY || code == BUILT_IN_MEMMOVE)\n     len = NULL_TREE;\n-  else if (endp == 2)\n-    len = gimple_build (&stmts, loc, MINUS_EXPR, TREE_TYPE (len), len,\n-\t\t\tssize_int (1));\n-  if (endp == 2 || endp == 1)\n+  else if (code == BUILT_IN_MEMPCPY)\n     {\n       len = gimple_convert_to_ptrofftype (&stmts, loc, len);\n       dest = gimple_build (&stmts, loc, POINTER_PLUS_EXPR,\n \t\t\t   TREE_TYPE (dest), dest, len);\n     }\n+  else\n+    gcc_unreachable ();\n \n   gsi_insert_seq_before (gsi, stmts, GSI_SAME_STMT);\n   gimple *repl = gimple_build_assign (lhs, dest);\n@@ -3847,14 +3846,10 @@ gimple_fold_builtin (gimple_stmt_iterator *gsi)\n \t\t\t\t\t gimple_call_arg (stmt, 1),\n \t\t\t\t\t gimple_call_arg (stmt, 2));\n     case BUILT_IN_MEMCPY:\n-      return gimple_fold_builtin_memory_op (gsi, gimple_call_arg (stmt, 0),\n-\t\t\t\t\t    gimple_call_arg (stmt, 1), 0);\n     case BUILT_IN_MEMPCPY:\n-      return gimple_fold_builtin_memory_op (gsi, gimple_call_arg (stmt, 0),\n-\t\t\t\t\t    gimple_call_arg (stmt, 1), 1);\n     case BUILT_IN_MEMMOVE:\n       return gimple_fold_builtin_memory_op (gsi, gimple_call_arg (stmt, 0),\n-\t\t\t\t\t    gimple_call_arg (stmt, 1), 3);\n+\t\t\t\t\t    gimple_call_arg (stmt, 1), fcode);\n     case BUILT_IN_SPRINTF_CHK:\n     case BUILT_IN_VSPRINTF_CHK:\n       return gimple_fold_builtin_sprintf_chk (gsi, fcode);"}]}