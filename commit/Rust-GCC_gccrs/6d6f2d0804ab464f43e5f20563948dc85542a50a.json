{"sha": "6d6f2d0804ab464f43e5f20563948dc85542a50a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ2ZjJkMDgwNGFiNDY0ZjQzZTVmMjA1NjM5NDhkYzg1NTQyYTUwYQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2005-04-04T17:18:54Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2005-04-04T17:18:54Z"}, "message": "re PR target/4198 ([sparclite-elf] does not build, needs tweaking for crtstuff.c changes)\n\n\tPR target/4198\n\tPR target/12027\n\t* config.gcc (Obsolete configurations): Remove\n\tsparclite-*-coff*, sparclite-*-elf* and sparc-*-openbsd*.\n\t(sparclite-*-coff*): Delete.\n\t(sparclite-*-elf*): Likewise.\n\t(sparc86x-*-elf*): Likewise.\n\t(target_cpu_default) <sparc*-*-*>: Remove sparc86x.\n\t* config/sparc/lite.h: Delete.\n\t* config/sparc/litecoff.h: Likewise.\n\t* config/sparc/liteelf.h: Likewise.\n\t* config/sparc/sp86x-elf.h: Likewise.\n\t* config/sparc/t-sparclite: Likewise.\n\t* config/sparc/t-sp86x: Likewise.\n\nFrom-SVN: r97555", "tree": {"sha": "3239007397179a8eb58f3a589a25119fce37be3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3239007397179a8eb58f3a589a25119fce37be3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d6f2d0804ab464f43e5f20563948dc85542a50a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d6f2d0804ab464f43e5f20563948dc85542a50a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d6f2d0804ab464f43e5f20563948dc85542a50a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d6f2d0804ab464f43e5f20563948dc85542a50a/comments", "author": null, "committer": null, "parents": [{"sha": "0bfc3f69702dc3162629a236fa21987bebf6524a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bfc3f69702dc3162629a236fa21987bebf6524a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bfc3f69702dc3162629a236fa21987bebf6524a"}], "stats": {"total": 290, "additions": 19, "deletions": 271}, "files": [{"sha": "403e706dda3a232dac86513be113761d1295f780", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d6f2d0804ab464f43e5f20563948dc85542a50a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d6f2d0804ab464f43e5f20563948dc85542a50a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d6f2d0804ab464f43e5f20563948dc85542a50a", "patch": "@@ -1,4 +1,21 @@\n-2005-04-04  Adrian Strae\ufffdtling  <straetling@de.ibm.com>\n+2005-04-04  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR target/4198\n+\tPR target/12027\n+\t* config.gcc (Obsolete configurations): Remove\n+\tsparclite-*-coff*, sparclite-*-elf* and sparc-*-openbsd*.\n+\t(sparclite-*-coff*): Delete.\n+\t(sparclite-*-elf*): Likewise.\n+\t(sparc86x-*-elf*): Likewise.\n+\t(target_cpu_default) <sparc*-*-*>: Remove sparc86x.\n+\t* config/sparc/lite.h: Delete.\n+\t* config/sparc/litecoff.h: Likewise.\n+\t* config/sparc/liteelf.h: Likewise.\n+\t* config/sparc/sp86x-elf.h: Likewise.\n+\t* config/sparc/t-sparclite: Likewise.\n+\t* config/sparc/t-sp86x: Likewise.\n+\n+2005-04-04  Adrian Straetling  <straetling@de.ibm.com>\n \n \t* config/s390/s390-protos.h: (s390_comparison,\n \ts390_alc_comparison, s390_slb_comparison, const0_operand,"}, {"sha": "d8c914f39a243feeceff2d2a5f02097675822296", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 23, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d6f2d0804ab464f43e5f20563948dc85542a50a/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d6f2d0804ab464f43e5f20563948dc85542a50a/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=6d6f2d0804ab464f43e5f20563948dc85542a50a", "patch": "@@ -184,10 +184,7 @@ md_file=\n \n # Obsolete configurations.\n case ${target} in\n-   sparclite-*-coff*\t\\\n- | sparclite-*-elf*\t\\\n- | sparc86x-*-elf*\t\\\n- | sparc-*-openbsd*\t\\\n+   sparc-*-openbsd*\t\\\n  | i860-*-sysv4*\t\\\n  | ip2k-*-elf\t\t\\\n  | ns32k-*-netbsdelf*\t\\\n@@ -2031,22 +2028,6 @@ sparc-*-sysv4*)\n \textra_parts=\"crtbegin.o crtend.o\"\n \tuse_fixproto=yes\n \t;;\n-sparclite-*-coff*)\n-\ttm_file=\"${tm_file} sparc/lite.h svr3.h sparc/litecoff.h dbxcoff.h libgloss.h\"\n-\ttmake_file=sparc/t-sparclite\n-\t;;\n-sparclite-*-elf*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h sparc/sysv4.h sparc/sp-elf.h sparc/liteelf.h\"\n-\ttmake_file=\"sparc/t-sparclite sparc/t-crtfm\"\n-        extra_parts=\"crtbegin.o crtend.o\"\n-\tuse_fixproto=yes\n-\t;;\n-sparc86x-*-elf*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h sparc/sysv4.h sparc/sp-elf.h sparc/sp86x-elf.h\"\n-\ttmake_file=\"sparc/t-sp86x sparc/t-crtfm\"\n-        extra_parts=\"crtbegin.o crtend.o\"\n-\tuse_fixproto=yes\n-\t;;\n sparc64-*-elf*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h sparc/sysv4.h sparc/sp64-elf.h\"\n \ttmake_file=\"${tmake_file} sparc/t-crtfm\"\n@@ -2774,9 +2755,6 @@ case ${target} in\n \t\txsparc)\n \t\t\twith_cpu=v7\n \t\t\t;;\n-\t\txsparc86x)\n-\t\t\twith_cpu=sparclite86x\n-\t\t\t;;\n \t\txsparcv9 | xsparc64)\n \t\t\twith_cpu=v9\n \t\t\t;;"}, {"sha": "cac67ec1d0b672a514dabf3c4f2c071b346f68cc", "filename": "gcc/config/sparc/lite.h", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bfc3f69702dc3162629a236fa21987bebf6524a/gcc%2Fconfig%2Fsparc%2Flite.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bfc3f69702dc3162629a236fa21987bebf6524a/gcc%2Fconfig%2Fsparc%2Flite.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flite.h?ref=0bfc3f69702dc3162629a236fa21987bebf6524a", "patch": "@@ -1,31 +0,0 @@\n-/* Definitions of target machine for GCC, for SPARClite w/o FPU.\n-   Copyright (C) 1993, 1996 Free Software Foundation, Inc.\n-   Contributed by Jim Wilson (wilson@cygnus.com).\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (sparclite)\");\n-\n-/* Enable app-regs and epilogue options.  Do not enable the fpu.  */\n-\n-#undef TARGET_DEFAULT\n-#define TARGET_DEFAULT MASK_APP_REGS\n-\n-/* Enable US Software GOFAST library support.  */\n-#define US_SOFTWARE_GOFAST"}, {"sha": "c58c55817b8a4770364646807a6028e8a473f7c8", "filename": "gcc/config/sparc/litecoff.h", "status": "removed", "additions": 0, "deletions": 63, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bfc3f69702dc3162629a236fa21987bebf6524a/gcc%2Fconfig%2Fsparc%2Flitecoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bfc3f69702dc3162629a236fa21987bebf6524a/gcc%2Fconfig%2Fsparc%2Flitecoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flitecoff.h?ref=0bfc3f69702dc3162629a236fa21987bebf6524a", "patch": "@@ -1,63 +0,0 @@\n-/* Definitions of target machine for GCC, for SPARClite w/o FPU, COFF.\n-   Copyright (C) 1994, 1996, 2000, 2002, 2004, 2005\n-   Free Software Foundation, Inc.\n-   Written by Ken Raeburn (raeburn@cygnus.com).\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#define BSS_SECTION_ASM_OP\t\"\\t.section\\t\\\".bss\\\"\"\n-\n-#define TARGET_OS_CPP_BUILTINS()\t\t\\\n-  do\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-\tbuiltin_define_std (\"sparclite\");\t\\\n-    }\t\t\t\t\t\t\\\n-  while (0)\n-\n-/* Default to stabs in COFF.  */\n-\n-#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n-\n-/* Support the ctors and dtors sections for g++.  */\n-\n-#undef INIT_SECTION_ASM_OP\n-\n-#undef DO_GLOBAL_CTORS_BODY\n-#undef DO_GLOBAL_DTORS_BODY\n-\n-/* These compiler options take an argument.  We ignore -target for now.  */\n-\n-#define WORD_SWITCH_TAKES_ARG(STR)\t\t\t\t\\\n- (DEFAULT_WORD_SWITCH_TAKES_ARG (STR)\t\t\t\t\\\n-  || !strcmp (STR, \"target\") || !strcmp (STR, \"assert\"))\n-\n-/* Output the label for a function definition.  */\n-\n-#define ASM_DECLARE_FUNCTION_NAME(FILE, NAME, DECL)\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  ASM_DECLARE_RESULT (FILE, DECL_RESULT (DECL));\t\t\t\\\n-  ASM_OUTPUT_LABEL (FILE, NAME);\t\t\t\t\t\\\n-} while (0)\n-\n-/* Output before read-only data.  */\n-\n-#define TEXT_SECTION_ASM_OP \"\\t.text\"\n-\n-/* Output before writable data.  */\n-\n-#define DATA_SECTION_ASM_OP \"\\t.data\""}, {"sha": "584816b4a1e1a75d4133ec99b2c3251ec1f6c74a", "filename": "gcc/config/sparc/liteelf.h", "status": "removed", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bfc3f69702dc3162629a236fa21987bebf6524a/gcc%2Fconfig%2Fsparc%2Fliteelf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bfc3f69702dc3162629a236fa21987bebf6524a/gcc%2Fconfig%2Fsparc%2Fliteelf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fliteelf.h?ref=0bfc3f69702dc3162629a236fa21987bebf6524a", "patch": "@@ -1,46 +0,0 @@\n-/* Definitions of target machine for GCC, for SPARClite w/o FPU, ELF.\n-   Copyright (C) 1998, 1999, 2005 Free Software Foundation, Inc.\n-   Contributed by Stan Cox (scox@cygnus.com).\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (sparclite)\");\n-\n-#undef TARGET_OS_CPP_BUILTINS\n-#define TARGET_OS_CPP_BUILTINS()\t\t\\\n-  do\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-\tbuiltin_define (\"__sparclite__\");\t\\\n-    }\t\t\t\t\t\t\\\n-  while (0)\n-\n-/* Enable app-regs and epilogue options.  Do not enable the fpu.  */\n-\n-#undef TARGET_DEFAULT\n-#define TARGET_DEFAULT MASK_APP_REGS\n-\n-/* Enable US Software GOFAST library support.  */\n-#define US_SOFTWARE_GOFAST\n-\n-#undef STARTFILE_SPEC\n-#define STARTFILE_SPEC \"crti.o%s crtbegin.o%s\"\n-\n-/* Use __main method of constructor invocation.  */\n-#undef INIT_SECTION_ASM_OP\n-#undef FINI_SECTION_ASM_OP"}, {"sha": "971f3583b7fae3e221c5a2ab81a82f15b137671e", "filename": "gcc/config/sparc/sp86x-elf.h", "status": "removed", "additions": 0, "deletions": 61, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bfc3f69702dc3162629a236fa21987bebf6524a/gcc%2Fconfig%2Fsparc%2Fsp86x-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bfc3f69702dc3162629a236fa21987bebf6524a/gcc%2Fconfig%2Fsparc%2Fsp86x-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsp86x-elf.h?ref=0bfc3f69702dc3162629a236fa21987bebf6524a", "patch": "@@ -1,61 +0,0 @@\n-/* Definitions of target machine for GCC, for sparclite 86x w/o FPU.\n-   Copyright (C) 1998, 1999, 2000, 2005 Free Software Foundation, Inc.\n-   Contributed by Stan Cox (scox@cygnus.com).\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (sparclite 86x)\");\n-\n-#undef TARGET_OS_CPP_BUILTINS\n-#define TARGET_OS_CPP_BUILTINS()\t\t\\\n-  do\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-\tbuiltin_define (\"__sparclite86x__\");\t\\\n-    }\t\t\t\t\t\t\\\n-  while (0)\n-\n-/* Enable app-regs and epilogue options.  Do not enable the fpu.  */\n-\n-#undef TARGET_DEFAULT\n-#define TARGET_DEFAULT MASK_APP_REGS\n-\n-#undef ASM_SPEC\n-#define ASM_SPEC \"%{v:-V} %{mlittle-endian-data:--little-endian-data} %(asm_cpu)\"\n-\n-/* Enable US Software GOFAST library support.  */\n-#define US_SOFTWARE_GOFAST\n-\n-#undef STARTFILE_SPEC\n-#define STARTFILE_SPEC \"crti.o%s crtbegin.o%s\"\n-\n-#undef LINK_SPEC\n-#define LINK_SPEC \"%{v:-V} %{mlittle-endian-data:-EL}\"\n-\n-#undef BYTES_BIG_ENDIAN\n-#define BYTES_BIG_ENDIAN (! TARGET_LITTLE_ENDIAN_DATA)\n-#undef WORDS_BIG_ENDIAN\n-#define WORDS_BIG_ENDIAN (! TARGET_LITTLE_ENDIAN_DATA)\n-\n-/* Use __main method of constructor invocation */\n-#undef INIT_SECTION_ASM_OP\n-\n-#define TARGET_LITTLE_ENDIAN_DATA (target_flags & MASK_LITTLE_ENDIAN)\n-#undef  SUBTARGET_SWITCHES\n-#define SUBTARGET_SWITCHES \\\n-    { \"little-endian-data\",              MASK_LITTLE_ENDIAN,\tN_(\"Use little-endian byte order for data\")},"}, {"sha": "6dd5c03e619664119d8f62e4199623a43a314615", "filename": "gcc/config/sparc/t-sp86x", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bfc3f69702dc3162629a236fa21987bebf6524a/gcc%2Fconfig%2Fsparc%2Ft-sp86x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bfc3f69702dc3162629a236fa21987bebf6524a/gcc%2Fconfig%2Fsparc%2Ft-sp86x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-sp86x?ref=0bfc3f69702dc3162629a236fa21987bebf6524a", "patch": "@@ -1,23 +0,0 @@\n-LIB1ASMSRC = sparc/lb1spc.asm\n-LIB1ASMFUNCS = _divsi3 _modsi3\n-\n-# We want fine grained libraries, so use the new code to build the\n-# floating point emulation libraries.\n-FPBIT = fp-bit.c\n-DPBIT = dp-bit.c\n-\n-dp-bit.c: $(srcdir)/config/fp-bit.c\n-\techo '#define US_SOFTWARE_GOFAST' > dp-bit.c\n-\tcat $(srcdir)/config/fp-bit.c >> dp-bit.c\n-\n-fp-bit.c: $(srcdir)/config/fp-bit.c\n-\techo '#define FLOAT' > fp-bit.c\n-\techo '#define US_SOFTWARE_GOFAST' >> fp-bit.c\n-\tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n-\n-MULTILIB_OPTIONS = mlittle-endian-data\n-MULTILIB_DIRNAMES = little\n-\n-LIBGCC = stmp-multilib\n-INSTALL_LIBGCC = install-multilib\n-"}, {"sha": "27492b91cb89b7917e16b16bfc83a059ec4a74c8", "filename": "gcc/config/sparc/t-sparclite", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bfc3f69702dc3162629a236fa21987bebf6524a/gcc%2Fconfig%2Fsparc%2Ft-sparclite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bfc3f69702dc3162629a236fa21987bebf6524a/gcc%2Fconfig%2Fsparc%2Ft-sparclite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-sparclite?ref=0bfc3f69702dc3162629a236fa21987bebf6524a", "patch": "@@ -1,23 +0,0 @@\n-LIB1ASMSRC = sparc/lb1spl.asm\n-LIB1ASMFUNCS = _divsi3 _udivsi3 _modsi3 _umodsi3\n-\n-# We want fine grained libraries, so use the new code to build the\n-# floating point emulation libraries.\n-FPBIT = fp-bit.c\n-DPBIT = dp-bit.c\n-\n-dp-bit.c: $(srcdir)/config/fp-bit.c\n-\techo '#define US_SOFTWARE_GOFAST' > dp-bit.c\n-\tcat $(srcdir)/config/fp-bit.c >> dp-bit.c\n-\n-fp-bit.c: $(srcdir)/config/fp-bit.c\n-\techo '#define FLOAT' > fp-bit.c\n-\techo '#define US_SOFTWARE_GOFAST' >> fp-bit.c\n-\tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n-\n-MULTILIB_OPTIONS = mfpu\n-MULTILIB_DIRNAMES =\n-MULTILIB_MATCHES = mfpu=mhard-float mfpu=mcpu?f934\n-\n-LIBGCC = stmp-multilib\n-INSTALL_LIBGCC = install-multilib"}]}