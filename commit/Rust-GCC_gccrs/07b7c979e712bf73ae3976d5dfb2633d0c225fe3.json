{"sha": "07b7c979e712bf73ae3976d5dfb2633d0c225fe3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdiN2M5NzllNzEyYmY3M2FlMzk3NmQ1ZGZiMjYzM2QwYzIyNWZlMw==", "commit": {"author": {"name": "Matt Kraai", "email": "kraai@alumni.cmu.edu", "date": "2003-05-20T01:49:12Z"}, "committer": {"name": "Matt Kraai", "email": "kraai@gcc.gnu.org", "date": "2003-05-20T01:49:12Z"}, "message": "* alias.c (nonlocal_mentioned_p, nonlocal_referenced_p)\n\t(nonlocal_set_p): Remove initial blank line.\n\t* dwarf2out.c (simple_type_size_in_bits): Likewise.\n\t* et-forest.c (et_forest_create): Likewise.\n\t* explow.c (stabilize): Likewise.\n\t* fix-header.c (write_lbrac): Likewise.\n\t* graph.c (start_fct, node_data): Likewise.\n\t* jump.c (only_sets_cc0_p, sets_cc0_p): Likewise.\n\t* rtlanal.c (global_reg_mentioned_p): Likewise.\n\t* tree.c (bit_position): Likewise.\n\nFrom-SVN: r66984", "tree": {"sha": "a0ae90c628c4a05fd6ad65bf2161b3503e772089", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0ae90c628c4a05fd6ad65bf2161b3503e772089"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07b7c979e712bf73ae3976d5dfb2633d0c225fe3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07b7c979e712bf73ae3976d5dfb2633d0c225fe3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07b7c979e712bf73ae3976d5dfb2633d0c225fe3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07b7c979e712bf73ae3976d5dfb2633d0c225fe3/comments", "author": null, "committer": null, "parents": [{"sha": "7e2dbcef0122c12e67af1bc737796c574fc10128", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e2dbcef0122c12e67af1bc737796c574fc10128", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e2dbcef0122c12e67af1bc737796c574fc10128"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "a3c36bade55e1e2cb8090f64237198572fdecb85", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b7c979e712bf73ae3976d5dfb2633d0c225fe3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b7c979e712bf73ae3976d5dfb2633d0c225fe3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=07b7c979e712bf73ae3976d5dfb2633d0c225fe3", "patch": "@@ -1,3 +1,16 @@\n+2003-05-19  Matt Kraai  <kraai@alumni.cmu.edu>\n+\n+\t* alias.c (nonlocal_mentioned_p, nonlocal_referenced_p)\n+\t(nonlocal_set_p): Remove initial blank line.\n+\t* dwarf2out.c (simple_type_size_in_bits): Likewise.\n+\t* et-forest.c (et_forest_create): Likewise.\n+\t* explow.c (stabilize): Likewise.\n+\t* fix-header.c (write_lbrac): Likewise.\n+\t* graph.c (start_fct, node_data): Likewise.\n+\t* jump.c (only_sets_cc0_p, sets_cc0_p): Likewise.\n+\t* rtlanal.c (global_reg_mentioned_p): Likewise.\n+\t* tree.c (bit_position): Likewise.\n+\n 2003-05-19  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* config/mips/linux64.h (LIB_SPEC): Add missing -lc and correct"}, {"sha": "6a73d64334395c32991eccf9b4d0519790ef8aba", "filename": "gcc/alias.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b7c979e712bf73ae3976d5dfb2633d0c225fe3/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b7c979e712bf73ae3976d5dfb2633d0c225fe3/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=07b7c979e712bf73ae3976d5dfb2633d0c225fe3", "patch": "@@ -2446,7 +2446,6 @@ static int\n nonlocal_mentioned_p (x)\n      rtx x;\n {\n-\n   if (INSN_P (x))\n     {\n       if (GET_CODE (x) == CALL_INSN)\n@@ -2544,7 +2543,6 @@ static int\n nonlocal_referenced_p (x)\n      rtx x;\n {\n-\n   if (INSN_P (x))\n     {\n       if (GET_CODE (x) == CALL_INSN)\n@@ -2624,7 +2622,6 @@ static int\n nonlocal_set_p (x)\n      rtx x;\n {\n-\n   if (INSN_P (x))\n     {\n       if (GET_CODE (x) == CALL_INSN)"}, {"sha": "aa657802e3fb33289cf8a435291caec3fa5d7a46", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b7c979e712bf73ae3976d5dfb2633d0c225fe3/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b7c979e712bf73ae3976d5dfb2633d0c225fe3/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=07b7c979e712bf73ae3976d5dfb2633d0c225fe3", "patch": "@@ -8032,7 +8032,6 @@ static inline unsigned HOST_WIDE_INT\n simple_type_size_in_bits (type)\n      tree type;\n {\n-\n   if (TREE_CODE (type) == ERROR_MARK)\n     return BITS_PER_WORD;\n   else if (TYPE_SIZE (type) == NULL_TREE)"}, {"sha": "1a9d5a350691b6d28b03a3171f9c02d100a39448", "filename": "gcc/et-forest.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b7c979e712bf73ae3976d5dfb2633d0c225fe3/gcc%2Fet-forest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b7c979e712bf73ae3976d5dfb2633d0c225fe3/gcc%2Fet-forest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fet-forest.c?ref=07b7c979e712bf73ae3976d5dfb2633d0c225fe3", "patch": "@@ -439,7 +439,6 @@ calculate_value (node)\n et_forest_t\n et_forest_create ()\n {\n-\n   et_forest_t forest = xmalloc (sizeof (struct et_forest));\n \n   forest->nnodes = 0;"}, {"sha": "7114094d2d64826927ef1457ed9f2e5c23380e94", "filename": "gcc/explow.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b7c979e712bf73ae3976d5dfb2633d0c225fe3/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b7c979e712bf73ae3976d5dfb2633d0c225fe3/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=07b7c979e712bf73ae3976d5dfb2633d0c225fe3", "patch": "@@ -684,7 +684,6 @@ rtx\n stabilize (x)\n      rtx x;\n {\n-\n   if (GET_CODE (x) != MEM\n       || ! rtx_unstable_p (XEXP (x, 0)))\n     return x;"}, {"sha": "745570c0e32fc83161c2a696af6ba4d8f6c6015f", "filename": "gcc/fix-header.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b7c979e712bf73ae3976d5dfb2633d0c225fe3/gcc%2Ffix-header.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b7c979e712bf73ae3976d5dfb2633d0c225fe3/gcc%2Ffix-header.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffix-header.c?ref=07b7c979e712bf73ae3976d5dfb2633d0c225fe3", "patch": "@@ -415,7 +415,6 @@ int required_other = 0;\n static void\n write_lbrac ()\n {\n-\n #if ADD_MISSING_EXTERN_C\n   if (missing_extern_C_count + required_unseen_count > 0)\n     fprintf (outf, \"#ifdef __cplusplus\\nextern \\\"C\\\" {\\n#endif\\n\");"}, {"sha": "009d87679281020ad872b29bd55c066e4385836d", "filename": "gcc/graph.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b7c979e712bf73ae3976d5dfb2633d0c225fe3/gcc%2Fgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b7c979e712bf73ae3976d5dfb2633d0c225fe3/gcc%2Fgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraph.c?ref=07b7c979e712bf73ae3976d5dfb2633d0c225fe3", "patch": "@@ -51,7 +51,6 @@ static void\n start_fct (fp)\n      FILE *fp;\n {\n-\n   switch (graph_dump_format)\n     {\n     case vcg:\n@@ -110,7 +109,6 @@ node_data (fp, tmp_rtx)\n      FILE *fp;\n      rtx tmp_rtx;\n {\n-\n   if (PREV_INSN (tmp_rtx) == 0)\n     {\n       /* This is the first instruction.  Add an edge from the starting"}, {"sha": "f59fdbcf9a2c1f4f3aa0d36b1e61c7e94f798e6a", "filename": "gcc/jump.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b7c979e712bf73ae3976d5dfb2633d0c225fe3/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b7c979e712bf73ae3976d5dfb2633d0c225fe3/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=07b7c979e712bf73ae3976d5dfb2633d0c225fe3", "patch": "@@ -1278,7 +1278,6 @@ int\n only_sets_cc0_p (x)\n      rtx x;\n {\n-\n   if (! x)\n     return 0;\n \n@@ -1297,7 +1296,6 @@ int\n sets_cc0_p (x)\n      rtx x;\n {\n-\n   if (! x)\n     return 0;\n "}, {"sha": "b7fbe4a05ce7075126e3fb30ee111a276e38e4e9", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b7c979e712bf73ae3976d5dfb2633d0c225fe3/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b7c979e712bf73ae3976d5dfb2633d0c225fe3/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=07b7c979e712bf73ae3976d5dfb2633d0c225fe3", "patch": "@@ -636,7 +636,6 @@ int\n global_reg_mentioned_p (x)\n      rtx x;\n {\n-\n   if (INSN_P (x))\n     {\n       if (GET_CODE (x) == CALL_INSN)"}, {"sha": "3271a5bd16351c1ca8bad2cde3fc7aea6b43b233", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b7c979e712bf73ae3976d5dfb2633d0c225fe3/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b7c979e712bf73ae3976d5dfb2633d0c225fe3/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=07b7c979e712bf73ae3976d5dfb2633d0c225fe3", "patch": "@@ -1186,7 +1186,6 @@ tree\n bit_position (field)\n      tree field;\n {\n-\n   return bit_from_pos (DECL_FIELD_OFFSET (field),\n \t\t       DECL_FIELD_BIT_OFFSET (field));\n }"}]}