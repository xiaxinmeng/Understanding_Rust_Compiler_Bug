{"sha": "e56fc090cbe11459d7570c04c3fdbe8fa655a8c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU2ZmMwOTBjYmUxMTQ1OWQ3NTcwYzA0YzNmZGJlOGZhNjU1YThjOA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2002-08-12T00:57:55Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2002-08-12T00:57:55Z"}, "message": "expr.c (store_expr): In condition for checking if value is generated in TARGET...\n\n\t* expr.c (store_expr): In condition for checking if value is\n\tgenerated in TARGET, move call to expr_size last.\n\nFrom-SVN: r56217", "tree": {"sha": "dc5bc1335e3a9eec8102f10a6796b72eacee24e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc5bc1335e3a9eec8102f10a6796b72eacee24e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e56fc090cbe11459d7570c04c3fdbe8fa655a8c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e56fc090cbe11459d7570c04c3fdbe8fa655a8c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e56fc090cbe11459d7570c04c3fdbe8fa655a8c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e56fc090cbe11459d7570c04c3fdbe8fa655a8c8/comments", "author": null, "committer": null, "parents": [{"sha": "76c3e73e325f8452a05e8912d15740b1a5fb7ed9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76c3e73e325f8452a05e8912d15740b1a5fb7ed9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76c3e73e325f8452a05e8912d15740b1a5fb7ed9"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "00690e6614d020c3e03e6718cbee88cd1b7150fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56fc090cbe11459d7570c04c3fdbe8fa655a8c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56fc090cbe11459d7570c04c3fdbe8fa655a8c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e56fc090cbe11459d7570c04c3fdbe8fa655a8c8", "patch": "@@ -1,3 +1,8 @@\n+2002-08-12  Hans-Peter Nilsson  <hp@bitrange.com>\n+\n+\t* expr.c (store_expr): In condition for checking if value is\n+\tgenerated in TARGET, move call to expr_size last.\n+\n 2002-08-11  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* c-common.c (c_common_init): Call preprocess_file instead."}, {"sha": "123398a901a6145f96ac422240947ecfe8ea449a", "filename": "gcc/expr.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56fc090cbe11459d7570c04c3fdbe8fa655a8c8/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56fc090cbe11459d7570c04c3fdbe8fa655a8c8/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=e56fc090cbe11459d7570c04c3fdbe8fa655a8c8", "patch": "@@ -4238,14 +4238,17 @@ store_expr (exp, target, want_value)\n        || (temp != target && (side_effects_p (temp)\n \t\t\t      || side_effects_p (target))))\n       && TREE_CODE (exp) != ERROR_MARK\n-      /* If there's nothing to copy, don't bother.  */\n-      && expr_size (exp) != const0_rtx\n       && ! dont_store_target\n \t /* If store_expr stores a DECL whose DECL_RTL(exp) == TARGET,\n \t    but TARGET is not valid memory reference, TEMP will differ\n \t    from TARGET although it is really the same location.  */\n       && (TREE_CODE_CLASS (TREE_CODE (exp)) != 'd'\n-\t  || target != DECL_RTL_IF_SET (exp)))\n+\t  || target != DECL_RTL_IF_SET (exp))\n+      /* If there's nothing to copy, don't bother.  Don't call expr_size\n+\t unless necessary, because some front-ends (C++) expr_size-hook\n+\t aborts on objects that are not supposed to be bit-copied or\n+\t bit-initialized.  */\n+      && expr_size (exp) != const0_rtx)\n     {\n       target = protect_from_queue (target, 1);\n       if (GET_MODE (temp) != GET_MODE (target)"}]}