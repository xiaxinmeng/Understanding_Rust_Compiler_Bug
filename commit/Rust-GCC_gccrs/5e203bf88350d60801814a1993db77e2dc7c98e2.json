{"sha": "5e203bf88350d60801814a1993db77e2dc7c98e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWUyMDNiZjg4MzUwZDYwODAxODE0YTE5OTNkYjc3ZTJkYzdjOThlMg==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2007-01-31T02:15:45Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2007-01-31T02:15:45Z"}, "message": "error.c (dump_type_suffix): Avoid use of cp_build_binary_op when calculating the size of an array (to avoid...\n\n\n\t* error.c (dump_type_suffix): Avoid use of cp_build_binary_op when\n\tcalculating the size of an array (to avoid recursive errors).\n\nFrom-SVN: r121371", "tree": {"sha": "704bec3269c5aecdf4f58a146dcaa2e30e30c502", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/704bec3269c5aecdf4f58a146dcaa2e30e30c502"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e203bf88350d60801814a1993db77e2dc7c98e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e203bf88350d60801814a1993db77e2dc7c98e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e203bf88350d60801814a1993db77e2dc7c98e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e203bf88350d60801814a1993db77e2dc7c98e2/comments", "author": null, "committer": null, "parents": [{"sha": "5c3f8c97a70f90fec62050b353aa949443914af3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c3f8c97a70f90fec62050b353aa949443914af3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c3f8c97a70f90fec62050b353aa949443914af3"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "c89e3836055fc64595b8d6516023e6dec9967874", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e203bf88350d60801814a1993db77e2dc7c98e2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e203bf88350d60801814a1993db77e2dc7c98e2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5e203bf88350d60801814a1993db77e2dc7c98e2", "patch": "@@ -1,3 +1,8 @@\n+2007-01-30  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* error.c (dump_type_suffix): Avoid use of cp_build_binary_op when\n+\tcalculating the size of an array (to avoid recursive errors).\n+\n 2007-01-30  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n \tPR c++/24745"}, {"sha": "00f0767745483e538d4b2ab6ba8119ed28ce5f83", "filename": "gcc/cp/error.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e203bf88350d60801814a1993db77e2dc7c98e2/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e203bf88350d60801814a1993db77e2dc7c98e2/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=5e203bf88350d60801814a1993db77e2dc7c98e2", "patch": "@@ -1,7 +1,7 @@\n /* Call-backs for C++ error reporting.\n    This code is non-reentrant.\n    Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002,\n-   2003, 2004, 2005 Free Software Foundation, Inc.\n+   2003, 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n    This file is part of GCC.\n \n GCC is free software; you can redistribute it and/or modify\n@@ -629,16 +629,16 @@ dump_type_suffix (tree t, int flags)\n       pp_cxx_left_bracket (cxx_pp);\n       if (TYPE_DOMAIN (t))\n \t{\n-\t  if (host_integerp (TYPE_MAX_VALUE (TYPE_DOMAIN (t)), 0))\n-\t    pp_wide_integer\n-\t      (cxx_pp, tree_low_cst (TYPE_MAX_VALUE (TYPE_DOMAIN (t)), 0) + 1);\n-\t  else if (TREE_CODE (TYPE_MAX_VALUE (TYPE_DOMAIN (t))) == MINUS_EXPR)\n-\t    dump_expr (TREE_OPERAND (TYPE_MAX_VALUE (TYPE_DOMAIN (t)), 0),\n+\t  tree dtype = TYPE_DOMAIN (t);\n+\t  tree max = TYPE_MAX_VALUE (dtype);\n+\t  if (host_integerp (max, 0))\n+\t    pp_wide_integer (cxx_pp, tree_low_cst (max, 0) + 1);\n+\t  else if (TREE_CODE (max) == MINUS_EXPR)\n+\t    dump_expr (TREE_OPERAND (max, 0),\n \t\t       flags & ~TFF_EXPR_IN_PARENS);\n \t  else\n-\t    dump_expr (fold (cp_build_binary_op\n-\t\t\t     (PLUS_EXPR, TYPE_MAX_VALUE (TYPE_DOMAIN (t)),\n-\t\t\t      integer_one_node)),\n+\t    dump_expr (fold_build2 (PLUS_EXPR, dtype, max,\n+\t\t\t\t    build_int_cst (dtype, 1)),\n \t\t       flags & ~TFF_EXPR_IN_PARENS);\n \t}\n       pp_cxx_right_bracket (cxx_pp);"}]}