{"sha": "7a0b46c94487106de5d4ee7f865fea92302f8d1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2EwYjQ2Yzk0NDg3MTA2ZGU1ZDRlZTdmODY1ZmVhOTIzMDJmOGQxYw==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2006-04-22T01:33:34Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2006-04-22T01:33:34Z"}, "message": "Commit ChangeLog entries.\n\nFrom-SVN: r113168", "tree": {"sha": "e9f1604046135bf564fef0b6a5b63cab33c5a244", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9f1604046135bf564fef0b6a5b63cab33c5a244"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a0b46c94487106de5d4ee7f865fea92302f8d1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a0b46c94487106de5d4ee7f865fea92302f8d1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a0b46c94487106de5d4ee7f865fea92302f8d1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a0b46c94487106de5d4ee7f865fea92302f8d1c/comments", "author": null, "committer": null, "parents": [{"sha": "d1c788827fae72b7119230a1963d41d5655b3824", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1c788827fae72b7119230a1963d41d5655b3824", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1c788827fae72b7119230a1963d41d5655b3824"}], "stats": {"total": 55, "additions": 32, "deletions": 23}, "files": [{"sha": "7f8cd76597a4168fae8608a1f7c5cfaecf552d71", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a0b46c94487106de5d4ee7f865fea92302f8d1c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a0b46c94487106de5d4ee7f865fea92302f8d1c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a0b46c94487106de5d4ee7f865fea92302f8d1c", "patch": "@@ -1,3 +1,8 @@\n+2006-04-21  Eric Christopher  <echristo@apple.com>\n+\n+\t* df-core.c, tree-outof-ssa.c, config/i386/i386.c: Fix typos\n+\tin comments and function names.\n+\n 2006-04-21  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \tPR c/25875\n@@ -73,7 +78,7 @@\n \t    Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c/26774\n-\t* stor-layout.c (update_alignment_for_field): Do not align \n+\t* stor-layout.c (update_alignment_for_field): Do not align\n \tERROR_MARK nodes.\n \t(place_union_field): Place union field at the start of the union.\n \t(place_field): Move ERROR_MARK check later, and use the current\n@@ -91,7 +96,7 @@\n \tPR rtl-optimization/14261\n \t* ifcvt.c (noce_emit_move_insn): Call store_bit_field if the resulting\n \tmove would be an INSV insn.\n-\t(noce_process_if_block): Don't optimize if the destination is a \n+\t(noce_process_if_block): Don't optimize if the destination is a\n \tZERO_EXTRACT which can't be handled by noce_emit_move_insn.\n \n 2006-04-19  Andreas Krebbel  <krebbel1@de.ibm.com>\n@@ -138,7 +143,7 @@\n 2006-04-18  Devang Patel  <dpatel@apple.com>\n \n \t* doc/invoke.texi (-Wuninitialized): Clarify -O connection.\n-\t\n+\n 2006-04-18  Nick Clifton  <nickc@redhat.com>\n \n \t* config/sh/t-symbian: Add rule to build sh-c.o\n@@ -148,7 +153,7 @@\n \n 2006-04-18  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n-\t* builtins.c (expand_builtin_strcmp): Cover label definition of \n+\t* builtins.c (expand_builtin_strcmp): Cover label definition of\n \tdo_libcall with HAVE_cmpstrnsi.\n \n 2006-04-18  Kazu Hirata  <kazu@codesourcery.com>\n@@ -412,7 +417,7 @@\n \t(make_omp_sections_edges): Remove.\n \t(is_ctrl_altering_stmt): Don't bother checking flag_openmp.\n \t(move_stmt_r): Handle OMP_CONTINUE.\n-\t* tree-flow.h (struct omp_region): Move from omp-low.c.  Switch \n+\t* tree-flow.h (struct omp_region): Move from omp-low.c.  Switch\n \tstatement pointers to basic blocks.  Add type member.\n \t(root_omp_region, new_omp_region, free_omp_regions): Declare.\n \t* tree-gimple.c (is_gimple_stmt): Handle OMP_RETURN, OMP_CONTINUE.\n@@ -678,7 +683,7 @@\n \twe're about to assign a vector to it using vec_init_optab.\n \n 2006-04-10 Daniel Berlin  <dberlin@dberlin.org>\n-\t\n+\n \t* tree-ssa-alias.c (lhs_may_store_to): New function.\n \t(recalculate_used_alone): Handle LHS of calls.\n \n@@ -765,7 +770,7 @@\n \t* tree-ssa-loop-niter.c (inverse, number_of_iterations_ne,\n \tassert_no_overflow_lt, assert_loop_rolls_lt, number_of_iterations_lt,\n \tnumber_of_iterations_le, number_of_iterations_cond, find_loop_niter,\n-\testimate_numbers_of_iterations_loop): Use build_int_cst instead of \n+\testimate_numbers_of_iterations_loop): Use build_int_cst instead of\n \tbuild_int_cst_type.\n \t* tree-chrec.c (chrec_fold_multiply_poly_poly,\n \tchrec_fold_multiply): Same.\n@@ -863,7 +868,7 @@\n \t(Downloading the source): Refer to SVN instead of CVS.\n \tAdjust a link to our web site accordingly.\n \t(Configuration): Fix casing of Bison.\n-\t(Building): Refer to SVN instead of CVS.  \n+\t(Building): Refer to SVN instead of CVS.\n \tFix a sentence on the use of Bison and remove duplicate (and\n \tincorrect) version number of Bison requirement.\n \tRemove one redundant list of packages needed for building."}, {"sha": "c480ef6dc959877a9fc83875d486a251231e4876", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 19, "deletions": 15, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a0b46c94487106de5d4ee7f865fea92302f8d1c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a0b46c94487106de5d4ee7f865fea92302f8d1c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7a0b46c94487106de5d4ee7f865fea92302f8d1c", "patch": "@@ -1,3 +1,7 @@\n+2006-04-21  Eric Christopher  <echristo@apple.com>\n+\n+\t* decl.c: Fix typo in function name.\n+\n 2006-04-19  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \tPR c++/26558\n@@ -30,7 +34,7 @@\n \tand return.  Return error_mark_node instead of NULL_TREE in more\n \tplaces.  Issue errors about function definitions that do not have\n \ta function declarator.  Check for complete types for all function\n-\tdefinitions. \n+\tdefinitions.\n \t* cp-tree.h (cp_error_declarator): Remove.\n \t(currently_open_class): Change return type.\n \t* parser.c (cp_parser_id_expression): Add optional_p parameter.\n@@ -47,7 +51,7 @@\n \tAssume that start_function indicates failure only if it has issued\n \tan error.\n \t(cp_parser_omp_var_list_no_open): Adjust calls.\n-\t\n+\n 2006-04-17  Janis Johnson  <janis187@us.ibm.com>\n \n \tPR c++/26114, c++/26115\n@@ -107,11 +111,11 @@\n \t* semantics.c (finish_call_expr): Likewise.\n \t* parser.c (cp_parser_postfix_expression): Likewise.\n \t* typeck2.c (cxx_incomplete_type_diagnostic): Refer to\n-\t\"incomplete\", not \"undefined\", types. \n+\t\"incomplete\", not \"undefined\", types.\n \n \tPR c++/26295\n \t* decl.c (grokdeclarator): Remove namespace-handling code for\n-\tpointers-to-members.  \n+\tpointers-to-members.\n \t* parser.c (cp_parser_ptr_operator): Check for qualified names\n \tusing namespaces.\n \n@@ -159,7 +163,7 @@\n \tPR c++/21581\n \t* parser.c (cp_parser_declaration): Support attributes on\n \tanonymous namespaces.\n-\t* name-lookup.c (push_namespace_with_attribs): Anonymous \n+\t* name-lookup.c (push_namespace_with_attribs): Anonymous\n \tnamespaces default to hidden visibility.\n \n 2006-03-20  Jason Merrill  <jason@redhat.com>\n@@ -169,16 +173,16 @@\n \t(start_preparsed_function): Likewise.\n \t* cp-tree.h (CP_TYPE_CONTEXT, TYPE_NAMESPACE_SCOPE_P): New macros.\n \t(TYPE_CLASS_SCOPE_P, TYPE_FUNCTION_SCOPE_P): New macros.\n-\t* name-lookup.h (struct cp_binding_level): Add has_visibility \n+\t* name-lookup.h (struct cp_binding_level): Add has_visibility\n \tbitfield.\n \t* name-lookup.c: Include c-pragma.h.\n \t(push_namespace_with_attribs): Split out from push_namespace.\n \tPush visibility if appropriate.  Set TREE_PUBLIC on namespaces.\n \t(leave_scope): Pop visibility if appropriate.\n \t* decl2.c (determine_visibility_from_class): Split out from...\n-\t(determine_visibility): ...here.  Handle function scope and \n+\t(determine_visibility): ...here.  Handle function scope and\n \tnested classes.\n-\t(import_export_decl): Move visibility handling to \n+\t(import_export_decl): Move visibility handling to\n \tdetermine_visibility_from_class.\n \t* parser.c (cp_parser_declaration, cp_parser_namespace_name): Allow\n \tattributes on namespace declarations.\n@@ -765,7 +769,7 @@\n 2006-02-12  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/24996\n-\t* except.c (build_throw): Add a CLEANUP_POINT_EXPR inside the \n+\t* except.c (build_throw): Add a CLEANUP_POINT_EXPR inside the\n \tTRY_CATCH_EXPR or MUST_NOT_THROW_EXPR.\n \n 2006-02-10  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n@@ -912,7 +916,7 @@\n \n \t* Make-lang.in (cp-warn): Include CXX_COMPAT_WARN.\n \t* repo.c (extract_string, afgets): Use cast when converting from\n-\tvoid *. \n+\tvoid *.\n \n 2006-01-29  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n@@ -946,7 +950,7 @@\n 2006-01-28  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* call.c (joust): Pass option code to warning.  Use inform for\n-\texplanation. \n+\texplanation.\n \t* class.c (check_bases): Likewise.\n \t(maybe_warn_about_overly_private_class): Likewise.\n \t(check_field_decls): Likewise.\n@@ -1010,7 +1014,7 @@\n \t(pfn_from_ptrmemfunc): Add prototype, make static.\n \n 2006-01-24  Dirk Mueller  <dmueller@suse.de>\n-\t\n+\n \t* typeck.c (build_binary_op): Use OPT_Wfloat_equal in warning().\n \n 2006-01-24  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n@@ -1061,7 +1065,7 @@\n \n \tPR c++/10891\n \t* rtti.c (build_dynamic_cast): Reject dynamic_cast use if\n-\t-fno-rtti. \n+\t-fno-rtti.\n \n 2006-01-21  Mark Mitchell  <mark@codesourcery.com>\n \n@@ -1073,9 +1077,9 @@\n \tPR c++/25856\n \t* decl.c (begin_destructor_body): Robustify.\n \n-\tPR c++/25858 \n+\tPR c++/25858\n \t* parser.c (cp_parser_direct_declarator): Robustify.\n-\t\n+\n 2006-01-20  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \t* parser.c (cp_lexer_next_token_is_keyword): Simplify."}]}