{"sha": "4cdc2a35e5b66feec1e11b6a5a30bc4b15721513", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNkYzJhMzVlNWI2NmZlZWMxZTExYjZhNWEzMGJjNGIxNTcyMTUxMw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2005-03-07T15:46:59Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2005-03-07T15:46:59Z"}, "message": "reorg.c (relax_delay_slots): Check that the jump is conditional before trying to invert it.\n\n\t* reorg.c (relax_delay_slots): Check that the jump is\n\tconditional before trying to invert it.\n\nFrom-SVN: r96027", "tree": {"sha": "f6ec56ef8fbfd4d601546bdb07c86e47c3fc9efc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6ec56ef8fbfd4d601546bdb07c86e47c3fc9efc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cdc2a35e5b66feec1e11b6a5a30bc4b15721513", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cdc2a35e5b66feec1e11b6a5a30bc4b15721513", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cdc2a35e5b66feec1e11b6a5a30bc4b15721513", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cdc2a35e5b66feec1e11b6a5a30bc4b15721513/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d48fcd1c9bfc79d69e77139913a9a5fde076fa8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d48fcd1c9bfc79d69e77139913a9a5fde076fa8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d48fcd1c9bfc79d69e77139913a9a5fde076fa8"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "9c6b4483e0442f3d4783b99c1b1c73fd0bba0175", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cdc2a35e5b66feec1e11b6a5a30bc4b15721513/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cdc2a35e5b66feec1e11b6a5a30bc4b15721513/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4cdc2a35e5b66feec1e11b6a5a30bc4b15721513", "patch": "@@ -1,3 +1,8 @@\n+2005-03-07  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* reorg.c (relax_delay_slots): Check that the jump is\n+\tconditional before trying to invert it.\n+\n 2005-03-07  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* bb-reorder.c (max_entry_frequency, max_entry_frequency):"}, {"sha": "09c8ea583c5d4ed3fc6f24ed6bf8b4699c5abdca", "filename": "gcc/reorg.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cdc2a35e5b66feec1e11b6a5a30bc4b15721513/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cdc2a35e5b66feec1e11b6a5a30bc4b15721513/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=4cdc2a35e5b66feec1e11b6a5a30bc4b15721513", "patch": "@@ -3379,6 +3379,7 @@ relax_delay_slots (rtx first)\n \t annulled jumps, though.  Again, don't convert a jump to a RETURN\n \t here.  */\n       if (! INSN_ANNULLED_BRANCH_P (delay_insn)\n+\t  && any_condjump_p (delay_insn)\n \t  && next && JUMP_P (next)\n \t  && (simplejump_p (next) || GET_CODE (PATTERN (next)) == RETURN)\n \t  && next_active_insn (target_label) == next_active_insn (next)"}]}