{"sha": "a52f938b1b4daec4b915bd99203a76dda21b87be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUyZjkzOGIxYjRkYWVjNGI5MTViZDk5MjAzYTc2ZGRhMjFiODdiZQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2016-01-21T13:53:28Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2016-01-21T13:53:28Z"}, "message": "configure.ac (gcc_cv_as_dwloc): Test support for debug frame section label reference.\n\n* configure.ac (gcc_cv_as_dwloc): Test support for debug frame section\nlabel reference.\n* configure: Regenerate.\n\nFrom-SVN: r232673", "tree": {"sha": "a36691dafc7e5ac9c3725fcd00a9605c145ddc50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a36691dafc7e5ac9c3725fcd00a9605c145ddc50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a52f938b1b4daec4b915bd99203a76dda21b87be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a52f938b1b4daec4b915bd99203a76dda21b87be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a52f938b1b4daec4b915bd99203a76dda21b87be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a52f938b1b4daec4b915bd99203a76dda21b87be/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ab56cbed60ad78b3d77065a5a84b7c1306fe3b5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab56cbed60ad78b3d77065a5a84b7c1306fe3b5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab56cbed60ad78b3d77065a5a84b7c1306fe3b5e"}], "stats": {"total": 34, "additions": 19, "deletions": 15}, "files": [{"sha": "fd386b920505954e0bdc9d59161aa4b7659f88a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a52f938b1b4daec4b915bd99203a76dda21b87be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a52f938b1b4daec4b915bd99203a76dda21b87be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a52f938b1b4daec4b915bd99203a76dda21b87be", "patch": "@@ -1,3 +1,9 @@\n+2016-01-21  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* configure.ac (gcc_cv_as_dwloc): Test support for debug frame section\n+\tlabel reference.\n+\t* configure: Regenerate.\n+\n 2016-01-21  Richard Biener  <rguenther@suse.de>\n \n \t* graphite-optimize-isl.c (get_schedule_map): Fix typo."}, {"sha": "b6d32d0a7a057d43c9ad03c973bd3913b6207ef7", "filename": "gcc/configure", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a52f938b1b4daec4b915bd99203a76dda21b87be/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a52f938b1b4daec4b915bd99203a76dda21b87be/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=a52f938b1b4daec4b915bd99203a76dda21b87be", "patch": "@@ -26615,8 +26615,8 @@ fi\n \n     case $target in\n       *-*-aix*)\n-\t{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for .ref support\" >&5\n-$as_echo_n \"checking assembler for .ref support... \" >&6; }\n+\t{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for AIX .ref support\" >&5\n+$as_echo_n \"checking assembler for AIX .ref support... \" >&6; }\n if test \"${gcc_cv_as_aix_ref+set}\" = set; then :\n   $as_echo_n \"(cached) \" >&6\n else\n@@ -26655,12 +26655,9 @@ $as_echo \"#define HAVE_AS_REF 1\" >>confdefs.h\n \n fi\n \t;;\n-    esac\n \n-    case $target in\n-      *-*-aix*)\n-\t{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for dwarf location lists section support\" >&5\n-$as_echo_n \"checking assembler for dwarf location lists section support... \" >&6; }\n+\t{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for AIX DWARF location lists section support\" >&5\n+$as_echo_n \"checking assembler for AIX DWARF location lists section support... \" >&6; }\n if test \"${gcc_cv_as_aix_dwloc+set}\" = set; then :\n   $as_echo_n \"(cached) \" >&6\n else\n@@ -26670,7 +26667,9 @@ else\n   then gcc_cv_as_aix_dwloc=yes\n fi\n   elif test x$gcc_cv_as != x; then\n-    $as_echo '\t.dwsect 0xB0000\n+    $as_echo '\t.dwsect 0xA0000\n+\tLframe..0:\n+\t\t.vbyte 4,Lframe..0:\n \t  ' > conftest.s\n     if { ac_try='$gcc_cv_as $gcc_cv_as_flags  -o conftest.o conftest.s >&5'\n   { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5"}, {"sha": "7ad674ed8ff9bbd90b10f60b3cf2c099953b7445", "filename": "gcc/configure.ac", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a52f938b1b4daec4b915bd99203a76dda21b87be/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a52f938b1b4daec4b915bd99203a76dda21b87be/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=a52f938b1b4daec4b915bd99203a76dda21b87be", "patch": "@@ -4396,7 +4396,7 @@ LCF0:\n \n     case $target in\n       *-*-aix*)\n-\tgcc_GAS_CHECK_FEATURE([.ref support],\n+\tgcc_GAS_CHECK_FEATURE([AIX .ref support],\n \t  gcc_cv_as_aix_ref, [2,21,0],,\n \t  [\t.csect stuff[[rw]]\n \t     stuff:\n@@ -4407,16 +4407,15 @@ LCF0:\n \t  [AC_DEFINE(HAVE_AS_REF, 1,\n \t    [Define if your assembler supports .ref])])\n \t;;\n-    esac\n \n-    case $target in\n-      *-*-aix*)\n-\tgcc_GAS_CHECK_FEATURE([dwarf location lists section support],\n+\tgcc_GAS_CHECK_FEATURE([AIX DWARF location lists section support],\n \t  gcc_cv_as_aix_dwloc, [2,21,0],,\n-\t  [\t.dwsect 0xB0000\n+\t  [\t.dwsect 0xA0000\n+\tLframe..0:\n+\t\t.vbyte 4,Lframe..0:\n \t  ],,\n \t  [AC_DEFINE(HAVE_XCOFF_DWARF_EXTRAS, 1,\n-\t    [Define if your assembler supports .dwsect 0xB0000])])\n+\t    [Define if your assembler supports AIX debug frame section label reference.])])\n \t;;\n     esac\n     ;;"}]}