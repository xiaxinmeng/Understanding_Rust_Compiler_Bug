{"sha": "ee7a54c550753ba90949d1fea472e0586b6cd954", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU3YTU0YzU1MDc1M2JhOTA5NDlkMWZlYTQ3MmUwNTg2YjZjZDk1NA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-12-15T16:38:08Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-12-15T16:38:08Z"}, "message": "re PR debug/51567 (ICE in splice_child_die, at dwarf2out.c:5009 with -flto -g)\n\n2011-12-15  Richard Guenther  <rguenther@suse.de>\n\n\tPR lto/51567\n\t* gimple.c (compare_type_names_p): Also compare the TREE_CODE.\n\t(iterative_hash_name): Also hash the TREE_CODE.\n\t(gimple_types_compatible_p_1): For types with a TYPE_DECL\n\tname and a type DECL_CONTEXT recurse to that type.\n\t(iterative_hash_gimple_type): Likewise.\n\n\t* g++.dg/lto/pr51567-1_0.C: New testcase.\n\nFrom-SVN: r182377", "tree": {"sha": "c953b72b7d663af460cc1abd3269cf69ca79d5ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c953b72b7d663af460cc1abd3269cf69ca79d5ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee7a54c550753ba90949d1fea472e0586b6cd954", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee7a54c550753ba90949d1fea472e0586b6cd954", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee7a54c550753ba90949d1fea472e0586b6cd954", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee7a54c550753ba90949d1fea472e0586b6cd954/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6a2045bfd3938fe09a026f5d7ff041e28c94950e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a2045bfd3938fe09a026f5d7ff041e28c94950e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a2045bfd3938fe09a026f5d7ff041e28c94950e"}], "stats": {"total": 75, "additions": 73, "deletions": 2}, "files": [{"sha": "966c5c86799330371da3d78307a5b9211c2be126", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee7a54c550753ba90949d1fea472e0586b6cd954/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee7a54c550753ba90949d1fea472e0586b6cd954/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ee7a54c550753ba90949d1fea472e0586b6cd954", "patch": "@@ -1,3 +1,12 @@\n+2011-12-15  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/51567\n+\t* gimple.c (compare_type_names_p): Also compare the TREE_CODE.\n+\t(iterative_hash_name): Also hash the TREE_CODE.\n+\t(gimple_types_compatible_p_1): For types with a TYPE_DECL\n+\tname and a type DECL_CONTEXT recurse to that type.\n+\t(iterative_hash_gimple_type): Likewise.\n+\n 2011-12-15  Iain Sandoe  <iains@gcc.gnu.org>\n \n \t* config/rs6000/rs6000.c  (rs6000_emit_prologue): Move update of"}, {"sha": "3a90358bae68d1f43f467c03cc50b1e2636e565b", "filename": "gcc/gimple.c", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee7a54c550753ba90949d1fea472e0586b6cd954/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee7a54c550753ba90949d1fea472e0586b6cd954/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=ee7a54c550753ba90949d1fea472e0586b6cd954", "patch": "@@ -3318,11 +3318,21 @@ compare_type_names_p (tree t1, tree t2)\n   tree name1 = TYPE_NAME (t1);\n   tree name2 = TYPE_NAME (t2);\n \n-  if (name1 && TREE_CODE (name1) == TYPE_DECL)\n+  if ((name1 != NULL_TREE) != (name2 != NULL_TREE))\n+    return false;\n+\n+  if (name1 == NULL_TREE)\n+    return true;\n+\n+  /* Either both should be a TYPE_DECL or both an IDENTIFIER_NODE.  */\n+  if (TREE_CODE (name1) != TREE_CODE (name2))\n+    return false;\n+\n+  if (TREE_CODE (name1) == TYPE_DECL)\n     name1 = DECL_NAME (name1);\n   gcc_checking_assert (!name1 || TREE_CODE (name1) == IDENTIFIER_NODE);\n \n-  if (name2 && TREE_CODE (name2) == TYPE_DECL)\n+  if (TREE_CODE (name2) == TYPE_DECL)\n     name2 = DECL_NAME (name2);\n   gcc_checking_assert (!name2 || TREE_CODE (name2) == IDENTIFIER_NODE);\n \n@@ -3537,6 +3547,19 @@ gimple_types_compatible_p_1 (tree t1, tree t2, type_pair_t p,\n   if (!compare_type_names_p (t1, t2))\n     goto different_types;\n \n+  /* We may not merge typedef types to the same type in different\n+     contexts.  */\n+  if (TYPE_NAME (t1)\n+      && TREE_CODE (TYPE_NAME (t1)) == TYPE_DECL\n+      && DECL_CONTEXT (TYPE_NAME (t1))\n+      && TYPE_P (DECL_CONTEXT (TYPE_NAME (t1))))\n+    {\n+      if (!gtc_visit (DECL_CONTEXT (TYPE_NAME (t1)),\n+\t\t      DECL_CONTEXT (TYPE_NAME (t2)),\n+\t\t      state, sccstack, sccstate, sccstate_obstack))\n+\tgoto different_types;\n+    }\n+\n   /* If their attributes are not the same they can't be the same type.  */\n   if (!attribute_list_equal (TYPE_ATTRIBUTES (t1), TYPE_ATTRIBUTES (t2)))\n     goto different_types;\n@@ -3980,6 +4003,7 @@ iterative_hash_name (tree name, hashval_t v)\n {\n   if (!name)\n     return v;\n+  v = iterative_hash_hashval_t (TREE_CODE (name), v);\n   if (TREE_CODE (name) == TYPE_DECL)\n     name = DECL_NAME (name);\n   if (!name)\n@@ -4046,6 +4070,12 @@ iterative_hash_gimple_type (tree type, hashval_t val,\n      only existing types having the same features as the new type will be\n      checked.  */\n   v = iterative_hash_name (TYPE_NAME (type), 0);\n+  if (TYPE_NAME (type)\n+      && TREE_CODE (TYPE_NAME (type)) == TYPE_DECL\n+      && DECL_CONTEXT (TYPE_NAME (type))\n+      && TYPE_P (DECL_CONTEXT (TYPE_NAME (type))))\n+    v = visit (DECL_CONTEXT (TYPE_NAME (type)), state, v,\n+\t       sccstack, sccstate, sccstate_obstack);\n   v = iterative_hash_hashval_t (TREE_CODE (type), v);\n   v = iterative_hash_hashval_t (TYPE_QUALS (type), v);\n   v = iterative_hash_hashval_t (TREE_ADDRESSABLE (type), v);"}, {"sha": "faac48923e43b41a356de4b0c92e6f8b61602227", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee7a54c550753ba90949d1fea472e0586b6cd954/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee7a54c550753ba90949d1fea472e0586b6cd954/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ee7a54c550753ba90949d1fea472e0586b6cd954", "patch": "@@ -1,3 +1,8 @@\n+2011-12-15  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/51567\n+\t* g++.dg/lto/pr51567-1_0.C: New testcase.\n+\n 2011-12-15  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/51473"}, {"sha": "87a7e97b4e2e916fb3e9a480a27e550aa86ddec2", "filename": "gcc/testsuite/g++.dg/lto/pr51567-1_0.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee7a54c550753ba90949d1fea472e0586b6cd954/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr51567-1_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee7a54c550753ba90949d1fea472e0586b6cd954/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr51567-1_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr51567-1_0.C?ref=ee7a54c550753ba90949d1fea472e0586b6cd954", "patch": "@@ -0,0 +1,27 @@\n+// { dg-lto-do link }\n+// { dg-lto-options { { -flto -g } } }\n+\n+struct _Deque_iterator {\n+    int* _M_cur;\n+    void foo() {}\n+};\n+class _Deque_base {\n+public:\n+    typedef _Deque_iterator iterator;\n+    iterator _M_impl;\n+};\n+class deque : public _Deque_base {\n+public:\n+    typedef _Deque_base::iterator iterator;\n+};\n+class OutputContextStack {\n+public:\n+    deque m_stack;\n+    deque::iterator m_stackPosition;\n+};\n+int main()\n+{\n+  OutputContextStack s;\n+  s.m_stackPosition.foo();\n+}\n+"}]}