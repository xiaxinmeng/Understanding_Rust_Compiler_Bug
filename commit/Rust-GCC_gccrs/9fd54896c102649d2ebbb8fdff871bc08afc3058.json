{"sha": "9fd54896c102649d2ebbb8fdff871bc08afc3058", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZkNTQ4OTZjMTAyNjQ5ZDJlYmJiOGZkZmY4NzFiYzA4YWZjMzA1OA==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-04-11T20:52:56Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-04-11T20:52:56Z"}, "message": "(REG_ALLOC_ORDER): Restore to original setting.\n\nFrom-SVN: r13858", "tree": {"sha": "da9adc862289f61683e8ae6ab76edaad45c1c055", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da9adc862289f61683e8ae6ab76edaad45c1c055"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fd54896c102649d2ebbb8fdff871bc08afc3058", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fd54896c102649d2ebbb8fdff871bc08afc3058", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fd54896c102649d2ebbb8fdff871bc08afc3058", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fd54896c102649d2ebbb8fdff871bc08afc3058/comments", "author": null, "committer": null, "parents": [{"sha": "4d6c607f2e7c6a0a443e33356eaf2bcd5ff8eb17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d6c607f2e7c6a0a443e33356eaf2bcd5ff8eb17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d6c607f2e7c6a0a443e33356eaf2bcd5ff8eb17"}], "stats": {"total": 8, "additions": 2, "deletions": 6}, "files": [{"sha": "78259fa659b213159d55d6c672f1a981c0aa83ee", "filename": "gcc/config/m32r/m32r.h", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fd54896c102649d2ebbb8fdff871bc08afc3058/gcc%2Fconfig%2Fm32r%2Fm32r.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fd54896c102649d2ebbb8fdff871bc08afc3058/gcc%2Fconfig%2Fm32r%2Fm32r.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.h?ref=9fd54896c102649d2ebbb8fdff871bc08afc3058", "patch": "@@ -453,14 +453,10 @@ if (GET_MODE_CLASS (MODE) == MODE_INT\t\t\\\n /* If defined, an initializer for a vector of integers, containing the\n    numbers of hard registers in the order in which GNU CC should\n    prefer to use them (from most preferred to least).  */\n-/* FIXME: revisit.\n-   GCC seemed very poor at optimizing register allocations for libcalls.\n-   By ordering the regs according to function arguments, all problems were\n-   alleviated.  Leave changed for now but revisit again in awhile.  */\n-#if 0\n+#if 1 /* better for int code */\n #define REG_ALLOC_ORDER \\\n { 4, 5, 6, 7, 2, 3, 8, 9, 10, 11, 12, 13, 14, 0, 1, 15, 16, 17 }\n-#else\n+#else /* better for fp code at expense of int code */\n #define REG_ALLOC_ORDER \\\n { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }\n #endif"}]}