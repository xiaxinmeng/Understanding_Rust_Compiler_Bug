{"sha": "0a2562409bc550c88c60cf3622802bb05483edb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGEyNTYyNDA5YmM1NTBjODhjNjBjZjM2MjI4MDJiYjA1NDgzZWRiOQ==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2011-02-17T21:34:10Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2011-02-17T21:34:10Z"}, "message": "Added -fobjc-abi-version=N and -fobjc-nilcheck flags, and documented them\n\nFrom-SVN: r170257", "tree": {"sha": "45768ebf67ebf2be2a54d828cf3ed40e2cacd6b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45768ebf67ebf2be2a54d828cf3ed40e2cacd6b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a2562409bc550c88c60cf3622802bb05483edb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a2562409bc550c88c60cf3622802bb05483edb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a2562409bc550c88c60cf3622802bb05483edb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a2562409bc550c88c60cf3622802bb05483edb9/comments", "author": null, "committer": null, "parents": [{"sha": "e3ae330d55dcda25b076d27c043f28d9f9a149fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3ae330d55dcda25b076d27c043f28d9f9a149fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3ae330d55dcda25b076d27c043f28d9f9a149fc"}], "stats": {"total": 47, "additions": 45, "deletions": 2}, "files": [{"sha": "26a0c96f366d2d8ff64aa7ebe62334439fca838c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a2562409bc550c88c60cf3622802bb05483edb9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a2562409bc550c88c60cf3622802bb05483edb9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a2562409bc550c88c60cf3622802bb05483edb9", "patch": "@@ -1,3 +1,10 @@\n+2011-02-17  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* doc/invoke.texi (fobjc-abi-version): Documented.\n+\t(fobjc-nilcheck): Documented.\n+\t(fno-nil-receiver): Updated documentation to refer to the NeXT ABI\n+\tversion.\n+\n 2011-02-17  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR driver/47390"}, {"sha": "fece41158c1de5e6e610a751b037f74624223164", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a2562409bc550c88c60cf3622802bb05483edb9/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a2562409bc550c88c60cf3622802bb05483edb9/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=0a2562409bc550c88c60cf3622802bb05483edb9", "patch": "@@ -1,3 +1,8 @@\n+2011-02-17  Iain Sandoe  <iains@gcc.gnu.org>\n+\n+\t* c.opt (fobjc-abi-version=) New.\n+\t(fobjc-nilcheck): New.\n+\n 2011-02-03  Nathan Froyd  <froydnj@codesourcery.com>\n \n \tPR c++/46890"}, {"sha": "bb928fa914618e6a4d606ee14e95ffc8e84d8a43", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a2562409bc550c88c60cf3622802bb05483edb9/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a2562409bc550c88c60cf3622802bb05483edb9/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=0a2562409bc550c88c60cf3622802bb05483edb9", "patch": "@@ -853,6 +853,10 @@ fnothrow-opt\n C++ ObjC++ Optimization Var(flag_nothrow_opt)\n Treat a throw() exception specification as noexcept to improve code size\n \n+fobjc-abi-version=\n+ObjC ObjC++ Joined Report RejectNegative UInteger Var(flag_objc_abi)\n+Specify which ABI to use for Objective-C family code and meta-data generation.\n+\n ; Generate special '- .cxx_construct' and '- .cxx_destruct' methods\n ; to initialize any non-POD ivars in Objective-C++ classes.\n fobjc-call-cxx-cdtors\n@@ -873,6 +877,10 @@ fobjc-gc\n ObjC ObjC++ Var(flag_objc_gc)\n Enable garbage collection (GC) in Objective-C/Objective-C++ programs\n \n+fobjc-nilcheck\n+ObjC ObjC++ Var(flag_objc_nilcheck,1)\n+Enable inline checks for nil receivers with the NeXT runtime and ABI version 2.\n+\n ; Nonzero means that we generate NeXT setjmp based exceptions.\n fobjc-sjlj-exceptions\n ObjC ObjC++ Var(flag_objc_sjlj_exceptions) Init(-1)"}, {"sha": "5295c39b09ca41ef9b45baaeb1460e1efcc9f294", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a2562409bc550c88c60cf3622802bb05483edb9/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a2562409bc550c88c60cf3622802bb05483edb9/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=0a2562409bc550c88c60cf3622802bb05483edb9", "patch": "@@ -208,10 +208,12 @@ Objective-C and Objective-C++ Dialects}.\n @gccoptlist{-fconstant-string-class=@var{class-name} @gol\n -fgnu-runtime  -fnext-runtime @gol\n -fno-nil-receivers @gol\n+-fobjc-abi-version=@var{n} @gol\n -fobjc-call-cxx-cdtors @gol\n -fobjc-direct-dispatch @gol\n -fobjc-exceptions @gol\n -fobjc-gc @gol\n+-fobjc-nilcheck @gol\n -fobjc-std=objc1 @gol\n -freplace-objc-classes @gol\n -fzero-link @gol\n@@ -2555,8 +2557,19 @@ used.\n Assume that all Objective-C message dispatches (@code{[receiver\n message:arg]}) in this translation unit ensure that the receiver is\n not @code{nil}.  This allows for more efficient entry points in the\n-runtime to be used.  Currently, this option is only available in\n-conjunction with the NeXT runtime on Mac OS X 10.3 and later.\n+runtime to be used.  This option is only available in conjunction with\n+the NeXT runtime and ABI version 0 or 1.\n+\n+@item -fobjc-abi-version=@var{n}\n+@opindex fobjc-abi-version\n+Use version @var{n} of the Objective-C ABI for the selected runtime.\n+This option is currently supported only for the NeXT runtime.  In that\n+case, Version 0 is the traditional (32-bit) ABI without support for\n+properties and other Objective-C 2.0 additions.  Version 1 is the\n+traditional (32-bit) ABI with support for properties and other\n+Objective-C 2.0 additions.  Version 2 is the modern (64-bit) ABI.  If\n+nothing is specified, the default is Version 0 on 32-bit target\n+machines, and Version 2 on 64-bit target machines.\n \n @item -fobjc-call-cxx-cdtors\n @opindex fobjc-call-cxx-cdtors\n@@ -2605,6 +2618,16 @@ programs.  This option is only available with the NeXT runtime; the\n GNU runtime has a different garbage collection implementation that\n does not require special compiler flags.\n \n+@item -fobjc-nilcheck\n+@opindex fobjc-nilcheck\n+For the NeXT runtime with version 2 of the ABI, check for a nil\n+receiver in method invocations before doing the actual method call.\n+This is the default and can be disabled using\n+@option{-fno-objc-nilcheck}.  Class methods and super calls are never\n+checked for nil in this way no matter what this flag is set to.\n+Currently this flag does nothing when the GNU runtime, or an older\n+version of the NeXT runtime ABI, is used.\n+\n @item -fobjc-std=objc1\n @opindex fobjc-std\n Conform to the language syntax of Objective-C 1.0, the language"}]}