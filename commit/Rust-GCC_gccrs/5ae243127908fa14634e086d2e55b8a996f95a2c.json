{"sha": "5ae243127908fa14634e086d2e55b8a996f95a2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFlMjQzMTI3OTA4ZmExNDYzNGUwODZkMmU1NWI4YTk5NmY5NWEyYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T14:53:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T14:53:10Z"}, "message": "[multiple changes]\n\n2014-07-29  Vincent Celier  <celier@adacore.com>\n\n\t* frontend.adb: Add dependency on gnat.adc when taken into account\n\tand on non-temporary configuration pragmas files specified in\n\tswitches -gnatec.\n\t* prepcomp.ads, prepcomp.adb (Add_Dependency): New procedure to add\n\tdependencies on configuration pragmas files.\n\n2014-07-29  Pat Rogers  <rogers@adacore.com>\n\n\t* gnat_ugn.texi: Minor clarification to the explanation for the\n\tGNATtest -v switch.\n\nFrom-SVN: r213204", "tree": {"sha": "796fc6ce2f5ce29e6152b38ef2f353d67a74b52b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/796fc6ce2f5ce29e6152b38ef2f353d67a74b52b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ae243127908fa14634e086d2e55b8a996f95a2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ae243127908fa14634e086d2e55b8a996f95a2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ae243127908fa14634e086d2e55b8a996f95a2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ae243127908fa14634e086d2e55b8a996f95a2c/comments", "author": null, "committer": null, "parents": [{"sha": "3c04da40217fd70dea865002a045625bc7a62fd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c04da40217fd70dea865002a045625bc7a62fd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c04da40217fd70dea865002a045625bc7a62fd6"}], "stats": {"total": 64, "additions": 53, "deletions": 11}, "files": [{"sha": "7f36e12d715991fbfdc82a165e8456aa81127dc1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae243127908fa14634e086d2e55b8a996f95a2c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae243127908fa14634e086d2e55b8a996f95a2c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5ae243127908fa14634e086d2e55b8a996f95a2c", "patch": "@@ -1,3 +1,16 @@\n+2014-07-29  Vincent Celier  <celier@adacore.com>\n+\n+\t* frontend.adb: Add dependency on gnat.adc when taken into account\n+\tand on non-temporary configuration pragmas files specified in\n+\tswitches -gnatec.\n+\t* prepcomp.ads, prepcomp.adb (Add_Dependency): New procedure to add\n+\tdependencies on configuration pragmas files.\n+\n+2014-07-29  Pat Rogers  <rogers@adacore.com>\n+\n+\t* gnat_ugn.texi: Minor clarification to the explanation for the\n+\tGNATtest -v switch.\n+\n 2014-07-29  Robert Dewar  <dewar@adacore.com>\n \n \t* types.ads (Mechanism_Type): Change range back to -18 .. Int'Last with"}, {"sha": "8d59e6ceeee4f99df3caa54f918d5de0e799ce67", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae243127908fa14634e086d2e55b8a996f95a2c/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae243127908fa14634e086d2e55b8a996f95a2c/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=5ae243127908fa14634e086d2e55b8a996f95a2c", "patch": "@@ -144,6 +144,8 @@ begin\n \n       Prag : Node_Id;\n \n+      Temp_File : Boolean;\n+\n    begin\n       --  We always analyze config files with style checks off, since\n       --  we don't want a miscellaneous gnat.adc that is around to\n@@ -167,6 +169,7 @@ begin\n          if Source_gnat_adc /= No_Source_File then\n             Initialize_Scanner (No_Unit, Source_gnat_adc);\n             Config_Pragmas := Par (Configuration_Pragmas => True);\n+            Prepcomp.Add_Dependency (Source_gnat_adc);\n          else\n             Config_Pragmas := Empty_List;\n          end if;\n@@ -196,12 +199,22 @@ begin\n          for Index in Opt.Config_File_Names'Range loop\n             Name_Len := Config_File_Names (Index)'Length;\n             Name_Buffer (1 .. Name_Len) := Config_File_Names (Index).all;\n+            Temp_File :=\n+              Name_Len > 4\n+              and then\n+                (Name_Buffer (Name_Len - 3 .. Name_Len) = \".TMP\"\n+                 or else\n+                 Name_Buffer (Name_Len - 3 .. Name_Len) = \".tmp\");\n+\n             Source_Config_File := Load_Config_File (Name_Enter);\n \n             if Source_Config_File = No_Source_File then\n                Osint.Fail\n                  (\"cannot find configuration pragmas file \"\n                   & Config_File_Names (Index).all);\n+\n+            elsif not Temp_File then\n+               Prepcomp.Add_Dependency (Source_Config_File);\n             end if;\n \n             Initialize_Scanner (No_Unit, Source_Config_File);"}, {"sha": "3b0394062ea45822bf9d1b4fbc33863ead1c37df", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae243127908fa14634e086d2e55b8a996f95a2c/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae243127908fa14634e086d2e55b8a996f95a2c/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=5ae243127908fa14634e086d2e55b8a996f95a2c", "patch": "@@ -10968,7 +10968,7 @@ in the loop.  Consider for example the procedure:\n @noindent\n By default, the compiler cannot unconditionally vectorize the loop because\n assigning to a component of the array designated by R in one iteration could\n-change the value read from the components of the arrays designated by X or Y\n+change the value read from the components of the array designated by X or Y\n in a later iteration.  As a result, the compiler will generate two versions\n of the loop in the object code, one vectorized and the other not vectorized,\n as well as a test to select the appropriate version at run time.  This can\n@@ -19834,7 +19834,9 @@ Suppresses noncritical output messages.\n \n @item -v\n @cindex @option{-v} (@command{gnattest})\n-Verbose mode: generates version information.\n+Verbose mode: generates version information if specified by itself on the\n+command line.  If specified via GNATtest_Switches, produces output\n+about the execution of the tool.\n \n @item --validate-type-extensions\n @cindex @option{--validate-type-extensions} (@command{gnattest})"}, {"sha": "737ebf25e51f1b71fd3c098fe7259f16f6de1c38", "filename": "gcc/ada/prepcomp.adb", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae243127908fa14634e086d2e55b8a996f95a2c/gcc%2Fada%2Fprepcomp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae243127908fa14634e086d2e55b8a996f95a2c/gcc%2Fada%2Fprepcomp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprepcomp.adb?ref=5ae243127908fa14634e086d2e55b8a996f95a2c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,7 +34,6 @@ with Scn;      use Scn;\n with Sinput.L; use Sinput.L;\n with Stringt;  use Stringt;\n with Table;\n-with Types;    use Types;\n \n package body Prepcomp is\n \n@@ -137,6 +136,16 @@ package body Prepcomp is\n       end loop;\n    end Add_Command_Line_Symbols;\n \n+   --------------------\n+   -- Add_Dependency --\n+   --------------------\n+\n+   procedure Add_Dependency (S : Source_File_Index) is\n+   begin\n+      Dependencies.Increment_Last;\n+      Dependencies.Table (Dependencies.Last) := S;\n+   end Add_Dependency;\n+\n    ----------------------\n    -- Add_Dependencies --\n    ----------------------\n@@ -543,9 +552,7 @@ package body Prepcomp is\n \n       --  Record the dependency on the preprocessor data file\n \n-      Dependencies.Increment_Last;\n-      Dependencies.Table (Dependencies.Last) :=\n-        Source_Index_Of_Preproc_Data_File;\n+      Add_Dependency (Source_Index_Of_Preproc_Data_File);\n    end Parse_Preprocessing_Data_File;\n \n    ---------------------------\n@@ -676,8 +683,7 @@ package body Prepcomp is\n             end loop;\n \n             if Add_Deffile then\n-               Dependencies.Increment_Last;\n-               Dependencies.Table (Dependencies.Last) := Deffile;\n+               Add_Dependency (Deffile);\n             end if;\n          end;\n "}, {"sha": "ea132ffea4c6d3bb773b99a0bce7396bafe46b4f", "filename": "gcc/ada/prepcomp.ads", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae243127908fa14634e086d2e55b8a996f95a2c/gcc%2Fada%2Fprepcomp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae243127908fa14634e086d2e55b8a996f95a2c/gcc%2Fada%2Fprepcomp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprepcomp.ads?ref=5ae243127908fa14634e086d2e55b8a996f95a2c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2002-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,12 +26,20 @@\n --  This package stores all preprocessing data for the compiler\n \n with Namet; use Namet;\n+with Types; use Types;\n \n package Prepcomp is\n \n+   procedure Add_Dependency (S : Source_File_Index);\n+   --  Add a dependency on a non-source file.\n+   --  This is used internally for the preprocessing data file and the\n+   --  preprocessing definition file, and also externally for non-temporary\n+   --  configuration pragmas files.\n+\n    procedure Add_Dependencies;\n    --  Add dependencies on the preprocessing data file and the preprocessing\n-   --  definition files, if any.\n+   --  definition files, if any, and the non-temporary configuration pragmas\n+   --  files, if any.\n \n    procedure Check_Symbols;\n    --  Check if there are preprocessing symbols on the command line and set"}]}