{"sha": "116c9aab44ca6baa493e7bbbdb6231e3d795523d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE2YzlhYWI0NGNhNmJhYTQ5M2U3YmJiZGI2MjMxZTNkNzk1NTIzZA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-15T02:08:56Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-15T02:08:56Z"}, "message": "Test __bsdi__ like __BSD_NET2__.\n\nFrom-SVN: r6093", "tree": {"sha": "67b47599491f04e02c5a48d10f9188c4bcb41713", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67b47599491f04e02c5a48d10f9188c4bcb41713"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/116c9aab44ca6baa493e7bbbdb6231e3d795523d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/116c9aab44ca6baa493e7bbbdb6231e3d795523d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/116c9aab44ca6baa493e7bbbdb6231e3d795523d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/116c9aab44ca6baa493e7bbbdb6231e3d795523d/comments", "author": null, "committer": null, "parents": [{"sha": "3d709ff063605677945823394a0d6748c3206e95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d709ff063605677945823394a0d6748c3206e95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d709ff063605677945823394a0d6748c3206e95"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "00ed69665cde5a0e0223ae57cef5e469c85f5956", "filename": "gcc/ginclude/stdarg.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116c9aab44ca6baa493e7bbbdb6231e3d795523d/gcc%2Fginclude%2Fstdarg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116c9aab44ca6baa493e7bbbdb6231e3d795523d/gcc%2Fginclude%2Fstdarg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fstdarg.h?ref=116c9aab44ca6baa493e7bbbdb6231e3d795523d", "patch": "@@ -136,13 +136,13 @@ typedef __gnuc_va_list va_list;\n    But on BSD NET2 we must not test or define or undef it.\n    (Note that the comments in NET 2's ansi.h\n    are incorrect for _VA_LIST_--see stdio.h!)  */\n-#if !defined (_VA_LIST_) || defined (__BSD_NET2__) || defined (____386BSD____)\n+#if !defined (_VA_LIST_) || defined (__BSD_NET2__) || defined (____386BSD____) || defined (__bsdi__)\n /* The macro _VA_LIST is used in SCO Unix 3.2.  */\n #ifndef _VA_LIST\n /* The macro _VA_LIST_T_H is used in the Bull dpx2  */\n #ifndef _VA_LIST_T_H\n #define _VA_LIST_T_H\n-#if !(defined (__BSD_NET2__) || defined (____386BSD____))\n+#if !(defined (__BSD_NET2__) || defined (____386BSD____) || defined (__bsdi__))\n #define _VA_LIST_\n #endif\n #define _VA_LIST"}, {"sha": "ba3b4e2053045938b38af3b95f69313135a39166", "filename": "gcc/ginclude/varargs.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116c9aab44ca6baa493e7bbbdb6231e3d795523d/gcc%2Fginclude%2Fvarargs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116c9aab44ca6baa493e7bbbdb6231e3d795523d/gcc%2Fginclude%2Fvarargs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fvarargs.h?ref=116c9aab44ca6baa493e7bbbdb6231e3d795523d", "patch": "@@ -150,13 +150,13 @@ typedef __gnuc_va_list va_list;\n /* Michael Eriksson <mer@sics.se> at Thu Sep 30 11:00:57 1993:\n    Sequent defines _VA_LIST_ in <machine/machtypes.h> to be the type to\n    use for va_list (``typedef _VA_LIST_ va_list'') */\n-#if !defined (_VA_LIST_) || defined (__BSD_NET2__) || defined (____386BSD____) || defined (__sequent__)\n+#if !defined (_VA_LIST_) || defined (__BSD_NET2__) || defined (____386BSD____) || defined (__bsdi__) || defined (__sequent__)\n /* The macro _VA_LIST is used in SCO Unix 3.2.  */\n #ifndef _VA_LIST\n /* The macro _VA_LIST_T_H is used in the Bull dpx2  */\n #ifndef _VA_LIST_T_H\n #define _VA_LIST_T_H\n-#if !(defined (__BSD_NET2__) || defined (____386BSD____) || defined (__sequent__))\n+#if !(defined (__BSD_NET2__) || defined (____386BSD____) || defined (__bsdi__) || defined (__sequent__))\n #define _VA_LIST_\n #endif\n #define _VA_LIST"}]}