{"sha": "b911390762464c3b679507533e8236d373d6e0e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjkxMTM5MDc2MjQ2NGMzYjY3OTUwNzUzM2U4MjM2ZDM3M2Q2ZTBlMg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-08-25T15:52:23Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-08-25T15:52:23Z"}, "message": "* ChangeLog: Fix whitespace.\n\nFrom-SVN: r190666", "tree": {"sha": "ff757fcc19bce45b4a666e0217247e84d4ecb617", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff757fcc19bce45b4a666e0217247e84d4ecb617"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b911390762464c3b679507533e8236d373d6e0e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b911390762464c3b679507533e8236d373d6e0e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b911390762464c3b679507533e8236d373d6e0e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b911390762464c3b679507533e8236d373d6e0e2/comments", "author": null, "committer": null, "parents": [{"sha": "f27a59cf8a51f4c28cec55545673405b20a02a98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f27a59cf8a51f4c28cec55545673405b20a02a98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f27a59cf8a51f4c28cec55545673405b20a02a98"}], "stats": {"total": 121, "additions": 48, "deletions": 73}, "files": [{"sha": "df571c833abc1cc254a85d7adcf58b004725b4b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 48, "deletions": 73, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b911390762464c3b679507533e8236d373d6e0e2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b911390762464c3b679507533e8236d373d6e0e2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b911390762464c3b679507533e8236d373d6e0e2", "patch": "@@ -72,7 +72,8 @@\n \t* gimple-pretty-print.c (gimple_dump_bb_buff): Checking-assert that\n \tDECL_STRUCT_FUNCTION (current_function_decl) is not NULL.  Pass it to\n \tdump_histograms_for_stmt.\n-\t(dump_gimple_mem_ops): Pass DECL_STRUCT_FUNCTION (current_function_decl)\n+\t(dump_gimple_mem_ops): Pass\n+\tDECL_STRUCT_FUNCTION (current_function_decl)\n \tas an argument to dump_gimple_mem_ops.\n \t* tree-cfg.c (dump_function_to_file): Rename parameter fn to fndecl.\n \tDo not change cfun.  Change and restore current_function_decl.\n@@ -90,7 +91,7 @@\n \t(MOVMODE): Add: QQ, UQQ, HQ, UHQ, HA, UHA, SQ, USQ, SA, USA.\n \t(MPUSH): Add: HQ, UHQ, HA, UHA, SQ, USQ, SA, USA.\n \t(pushqi1, xload8_A, xload_8, movqi_insn, *reload_inqi, addqi3,\n-\tsubqi3, ashlqi3, *ashlqi3, ashrqi3, lshrqi3, *lshrqi3, *cmpqi, \n+\tsubqi3, ashlqi3, *ashlqi3, ashrqi3, lshrqi3, *lshrqi3, *cmpqi,\n \tcbranchqi4, *cpse.eq): Generalize to handle all 8-bit modes in ALL1.\n \t(*movhi, reload_inhi, addhi3, *addhi3, addhi3_clobber, subhi3,\n \tashlhi3, *ashlhi3_const, ashrhi3, *ashirhi3_const, lshrhi3,\n@@ -144,8 +145,7 @@\n \tto CASE_CONST_ANY.\n  \t* cse.c (exp_equiv_p, canon_reg, fold_rtx, cse_process_notes_1,\n \tcount_reg_usage): Convert constant cases.\n-\t* cselib.c (cselib_expand_value_rtx_1): Convert to\n-\tCASE_CONST_ANY.\n+\t* cselib.c (cselib_expand_value_rtx_1): Convert to CASE_CONST_ANY.\n \t(cselib_subst_to_values): Convert constant cases.\n \t* df-scan.c (df_uses_record): Ditto.\n \t* dse.c (const_or_frame_p): Convert case statements to explicit\n@@ -174,7 +174,7 @@\n \t* rtl.c (copy_rtx, rtx_equal_p_cb, rtx_equal_p): Ditto.\n \t* sched-deps.c (sched_analyze_2): Ditto.\n \t* valtrack.c (cleanup_auto_inc_dec): Ditto.\n-\t* rtl.h: (CASE_CONST_SCALAR_INT, CASE_CONST_UNIQUE, \n+\t* rtl.h: (CASE_CONST_SCALAR_INT, CASE_CONST_UNIQUE,\n \tCASE_CONST_ANY): New macros.\n \n 2012-08-23  Julian Brown  <julian@codesourcery.com>\n@@ -400,7 +400,7 @@\n \t(m32c_extra_constraint_p): Delete.\n \t(m32c_extra_address_constraint, m32c_extra_memory_constraint): Delete.\n \t(m32c_split_move): Use satisfies_constraint_Ss.\n-\t* config/m32c/predicates.md (memsym_operand): Use \n+\t* config/m32c/predicates.md (memsym_operand): Use\n \tsatisfies_constraint_Si.\n \t(memimmed_operand): Use satisfies_constraint_Sp.\n \t(m32c_psi_scale, m32c_1bit8_operand): Use satisfies_constraint_Ilb.\n@@ -433,18 +433,19 @@\n \tmulti-line asm output strings.\n \t(divsi_inv_qitable, divsi_inv_hitable): Use single-alternative asm\n \toutput.\n-\t(*andsi3_bclr, rotldi3_mextr, rotrdi3_mextr, calli, call_valuei_tbr_rel,\n-\tmovml_push_banked, movml_pop_banked, bclr_m2a, bclrmem_m2a, bset_m2a,\n-\tbsetmem_m2a, bst_m2a, bld_m2a, bldsign_m2a, bld_reg, *bld_regqi,\n-\tband_m2a, bor_m2a, bxor_m2a, mextr_rl, *mextr_lr, ): Use tab char\n-\tinstead of '\\\\t'.\n+\t(*andsi3_bclr, rotldi3_mextr, rotrdi3_mextr, calli,\n+\tcall_valuei_tbr_rel, movml_push_banked, movml_pop_banked, bclr_m2a,\n+\tbclrmem_m2a, bset_m2a, bsetmem_m2a, bst_m2a, bld_m2a, bldsign_m2a,\n+\tbld_reg, *bld_regqi, band_m2a, bor_m2a, bxor_m2a, mextr_rl, *mextr_lr):\n+\tUse tab char instead of '\\\\t'.\n \t(iordi3): Use braced string.\n \t(*movsi_pop): Use tab chars instead of spaces.\n \n 2012-08-21  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/39423\n-\t* config/sh/sh.md (*movhi_index_disp): Add support for SH2A movu.w insn.\n+\t* config/sh/sh.md (*movhi_index_disp): Add support for SH2A\n+\tmovu.w insn.\n \n 2012-08-21  H.J. Lu  <hongjiu.lu@intel.com>\n \n@@ -648,7 +649,7 @@\n \tdevritualization happens.\n \t(estimate_node_size_and_time): New hints argument.\n \t(do_estimate_edge_time): Cache hints.\n-\t(do_estimate_edge_growth): Update.\t\n+\t(do_estimate_edge_growth): Update.\n \t(do_estimate_edge_hints): New function\n \n 2012-08-18  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n@@ -718,18 +719,15 @@\n \n \t* config/ia64/hpux.h (MEMBER_TYPE_FORCES_BLK): Removed.\n \n-\t* config/ia64/ia64.c (ia64_member_type_forces_blk): New\n-\tfunction.\n+\t* config/ia64/ia64.c (ia64_member_type_forces_blk): New function.\n \t(TARGET_MEMBER_TYPE_FORCES_BLK): New macro.\n \n-\t* config/rs6000/rs6000.c (TARGET_MEMBER_TYPE_FORCES_BLK): New\n-\tmacro.\n+\t* config/rs6000/rs6000.c (TARGET_MEMBER_TYPE_FORCES_BLK): New macro.\n \t(rs6000_member_type_forces_blk): New function.\n \n \t* config/rs6000/rs6000.h (MEMBER_TYPE_FORCES_BLK): Removed.\n \n-\t* config/xtensa/xtensa.c (xtensa_member_type_forces_blk): New\n-\tfunction.\n+\t* config/xtensa/xtensa.c (xtensa_member_type_forces_blk): New function.\n \t(TARGET_MEMBER_TYPE_FORCES_BLK): New macro.\n \n \t* config/xtensa/xtensa.h (MEMBER_TYPE_FORCES_BLK): Removed.\n@@ -810,22 +808,19 @@\n \n 2012-08-17  Nick Clifton  <nickc@redhat.com>\n \n-\t* config/fr30/fr30.md  (cbranchsi4): Remove mode from\n-\tcomparison.\n+\t* config/fr30/fr30.md  (cbranchsi4): Remove mode from comparison.\n \t(branch_true): Likewise.\n \t(branch_false): Likewise.\n \n-\t* config/mcore/mcore.md (cbranchsi4): Remove mode from\n-\tcomparison.\n+\t* config/mcore/mcore.md (cbranchsi4): Remove mode from comparison.\n \n \t* config/iq2000/iq2000.md (cbranchsi4): Remove mode from\n \tcomparison and label.\n \t(branch_zero): Likewise.\n \t(branch_zero_inverted): Likewise.\n \t(branch_equality): Likewise.\n \t(branch_equality_inverted): Likewise.\n-\t(extend-and-compare): Disable until reload issues can be\n-\tresolved.\n+\t(extend-and-compare): Disable until reload issues can be resolved.\n \t* config/iq2000/iq2000.c (gen_conditional_branch): Use VOIDmode\n \tfor comparison.\n \t(iq2000_function_arg_advance): Remove CONST_CAST2.\n@@ -847,13 +842,11 @@\n 2012-08-17  Richard Guenther  <rguenther@suse.de>\n \n \t* hash-table.h (class hash_table): Use a descriptor template\n-\targument instead of decomposed element type and support\n-\tfunctions.\n+\targument instead of decomposed element type and support functions.\n \t(struct pointer_hash): New generic typed pointer-hash.\n \t(struct typed_free_remove, struct typed_noop_remove): Generic\n \thash_table support pieces.\n-\t* coverage.c (struct counts_entry): Add hash_table support\n-\tmembers.\n+\t* coverage.c (struct counts_entry): Add hash_table support members.\n \t* tree-ssa-ccp.c (gimple_htab): Use pointer_hash.\n \t* tree-ssa-coalesce.c (struct ssa_name_var_hash): New generic\n \tSSA name by SSA_NAME_VAR hash.\n@@ -865,8 +858,7 @@\n \t(phi_trans_lookup): Likewise.\n \t(phi_trans_add): Likewise.\n \t(do_regular_insertion): Likewise.\n-\t* tree-ssa-tail-merge.c (struct same_succ_def): Add hash_table\n-\tsupport.\n+\t* tree-ssa-tail-merge.c (struct same_succ_def): Add hash_table support.\n \t(same_succ_htab): Adjust.\n \t(find_same_succ_bb): Likewise.\n \t(find_same_succ): Likewise.\n@@ -979,8 +971,7 @@\n \t* ipa-pure-const.c (analyze_function): Use FOR_EACH_LOOP_BREAK.\n \t* cfgloop.h (FOR_EACH_LOOP_BREAK): Fix.\n \t* tree-ssa-structalias.c (handle_lhs_call): Properly free rhsc.\n-\t* tree-into-ssa.c (get_ssa_name_ann): Allocate info only when\n-\tneeded.\n+\t* tree-into-ssa.c (get_ssa_name_ann): Allocate info only when needed.\n \t* tree-ssa-loop-im.c (analyze_memory_references): Adjust.\n \t(tree_ssa_lim_finalize): Free all mem_refs.\n \t* tree-ssa-sccvn.c (extract_and_process_scc_for_name): Free\n@@ -1038,30 +1029,23 @@\n \n \t* config/rs6000/aix43.h (TARGET_DEFAULT): Delete MASK_NEW_MNEMONICS.\n \t(RS6000_CALL_GLUE): Adjust for single assembler syntax.\n-\t* config/rs6000/aix51.h (TARGET_DEFAULT, RS6000_CALL_GLUE):\n-\tDitto.\n-\t* config/rs6000/aix52.h (TARGET_DEFAULT, RS6000_CALL_GLUE):\n-\tDitto.\n-\t* config/rs6000/aix53.h (TARGET_DEFAULT, RS6000_CALL_GLUE):\n-\tDitto.\n-\t* config/rs6000/aix61.h (TARGET_DEFAULT, RS6000_CALL_GLUE):\n-\tDitto.\n+\t* config/rs6000/aix51.h (TARGET_DEFAULT, RS6000_CALL_GLUE): Ditto.\n+\t* config/rs6000/aix52.h (TARGET_DEFAULT, RS6000_CALL_GLUE): Ditto.\n+\t* config/rs6000/aix53.h (TARGET_DEFAULT, RS6000_CALL_GLUE): Ditto.\n+\t* config/rs6000/aix61.h (TARGET_DEFAULT, RS6000_CALL_GLUE): Ditto.\n \t* config/rs6000/darwin.h (TARGET_DEFAULT): Ditto.\n \t* config/rs6000/darwin.md (whole file): Adjust to single\n \tassembler syntax.\n-\t* config/rs6000/darwin64.h (TARGET_DEFAULT): Delete\n-\tMASK_NEW_MNEMONICS.\n+\t* config/rs6000/darwin64.h (TARGET_DEFAULT): Delete MASK_NEW_MNEMONICS.\n \t* config/rs6000/default64.h (TARGET_DEFAULT): Ditto.\n \t* config/rs6000/dfp.md: (whole file): Adjust to single\n \tassembler syntax.\n-\t* config/rs6000/eabi.h (TARGET_DEFAULT): Delete\n-\tMASK_NEW_MNEMONICS.\n+\t* config/rs6000/eabi.h (TARGET_DEFAULT): Delete MASK_NEW_MNEMONICS.\n \t* config/rs6000/eabialtivec.h (TARGET_DEFAULT): Ditto.\n \t* config/rs6000/eabispe.h (TARGET_DEFAULT): Ditto.\n \t* config/rs6000/linuxaltivec.h (TARGET_DEFAULT): Ditto.\n \t* config/rs6000/linuxspe.h (TARGET_DEFAULT): Ditto.\n-\t* config/rs6000/rs6000-cpus.def (whole file): Delete\n-\tPOWERPC_BASE_MASK.\n+\t* config/rs6000/rs6000-cpus.def (whole file): Delete POWERPC_BASE_MASK.\n \t* config/rs6000/rs6000-tables.opt: Regenerate.\n \t* config/rs6000/rs6000.c (POWERPC_BASE_MASK): Delete.\n \t(num_insns_constant_wide): Adjust comments.\n@@ -1076,16 +1060,13 @@\n \tassembler syntax.\n \t* config/rs6000/sync.md: (whole file): Adjust to single\n \tassembler syntax.\n-\t* config/rs6000/sysv4.h (TARGET_DEFAULT): Delete\n-\tMASK_NEW_MNEMONICS.\n+\t* config/rs6000/sysv4.h (TARGET_DEFAULT): Delete MASK_NEW_MNEMONICS.\n \t(ASM_OUTPUT_REG_PUSH): Adjust.\n \t(ASM_OUTPUT_REG_POP): Adjust.\n-\t* config/rs6000/sysv4le.h (TARGET_DEFAULT): Delete\n-\tMASK_NEW_MNEMONICS.\n+\t* config/rs6000/sysv4le.h (TARGET_DEFAULT): Delete MASK_NEW_MNEMONICS.\n \t* config/rs6000/vsx.md: (whole file): Adjust to single\n \tassembler syntax.\n-\t* config/rs6000/vxworks.h (TARGET_DEFAULT): Delete\n-\tMASK_NEW_MNEMONICS.\n+\t* config/rs6000/vxworks.h (TARGET_DEFAULT): Delete MASK_NEW_MNEMONICS.\n \t* doc/invoke.texi: Adjust documentation to reflect the\n \tremoval of -mnew-mnemonics and -mold-mnemonics.\n \n@@ -1111,8 +1092,7 @@\n \t* config/rs6000/linuxspe.h (TARGET_DEFAULT): Ditto.\n \t* config/rs6000/rs6000-builtin.def (RS6000_BUILTIN_CFSTRING):\n \tUse RS6000_BTM_ALWAYS instead of RS6000_BTM_POWERPC.\n-\t* config/rs6000/rs6000-c.c (rs6000_target_modify_macros):\n-\tAdjust.\n+\t* config/rs6000/rs6000-c.c (rs6000_target_modify_macros): Adjust.\n \t(rs6000_cpu_cpp_builtins): Adjust.\n \t* config/rs6000/rs6000.c (POWERPC_BASE_MASK): Delete MASK_POWERPC.\n \t(rs6000_builtin_mask_calculate): Adjust.\n@@ -1121,8 +1101,7 @@\n \t(rs6000_output_function_prologue): Ditto.\n \t(rs6000_opt_masks): Delete MASK_POWERPC.\n \t(rs6000_builtin_mask_names): Delete RS6000_BTM_POWERPC.\n-\t* config/rs6000/rs6000.h (ASM_CPU_SPEC): Delete handling for\n-\t-mpowerpc.\n+\t* config/rs6000/rs6000.h (ASM_CPU_SPEC): Delete handling for -mpowerpc.\n \t(RS6000_BTM_POWERPC): Delete.\n \t(RS6000_BTM_COMMON): Delete RS6000_BTM_POWERPC.\n \t* config/rs6000/rs6000.md (extendqisi2 patterns): Adjust for\n@@ -1237,7 +1216,7 @@\n \t(mips_dpa_w_ph, mips_dps_w_ph, mips_mulsa_w_ph, mips_dpax_w_ph)\n \t(mips_dpsx_w_ph, mips_dpaqx_s_w_ph, mips_dpsqx_s_w_ph): Set type to\n \tdspmac.  Set accum_in attribute.\n-\t(mips_subu_s_ph): Set type to dspalusat. \n+\t(mips_subu_s_ph): Set type to dspalusat.\n \t(mips_dpaqx_sa_w_ph, mips_dpsqx_sa_w_ph): Set type to dspmacsat.\n \tSet accum_in attribute.\n \t* config/mips/mips-protos.h (mips_dspalu_bypass_p): Add prototype.\n@@ -1318,8 +1297,7 @@\n \n 2012-08-15  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n \n-\t* config/arm/neon.md (neon_vaba<mode> VDQIW): Canonicalize\n-\toperands.\n+\t* config/arm/neon.md (neon_vaba<mode> VDQIW): Canonicalize operands.\n \t(neon_vabal<mode> VDQIW): Likewise.\n \n 2012-08-15  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n@@ -1342,7 +1320,7 @@\n \t* config/mips/mips.c (mips_linked_madd_p): Use accum_in to extract\n \taccumulator register.\n \n-2012-08-14   Diego Novillo  <dnovillo@google.com>\n+2012-08-14  Diego Novillo  <dnovillo@google.com>\n \n \tMerge from cxx-conversion branch.  Configury.\n \n@@ -1357,7 +1335,7 @@\n \t* doc/install.texi: Remove documentation for --enable-build-with-cxx\n \tand --enable-build-poststage1-with-cxx.\n \n-2012-08-14   Diego Novillo  <dnovillo@google.com>\n+2012-08-14  Diego Novillo  <dnovillo@google.com>\n \n \tMerge from cxx-conversion branch.  Re-implement VEC in C++.\n \n@@ -1374,9 +1352,8 @@\n \t(vec_heap_o_reserve_exact): Remove.\n \t(vec_stack_p_reserve): Remove.\n \t(vec_stack_p_reserve_exact): Remove.\n-\t* vec.h (VEC_CHECK_INFO, VEC_CHECK_DECL, VEC_CHECK_PASS,\n-\tVEC_ASSERT, VEC_ASSERT_FAIL, vec_assert_fail): Move earlier\n-\tin the file.\n+\t* vec.h (VEC_CHECK_INFO, VEC_CHECK_DECL, VEC_CHECK_PASS, VEC_ASSERT,\n+\tVEC_ASSERT_FAIL, vec_assert_fail): Move earlier in the file.\n \t(VEC): Define to vec_t<T>.\n \t(vec_allocation_t): Define.\n \t(struct vec_prefix): Move earlier in the file.\n@@ -1511,7 +1488,7 @@\n \t(discover_loops): Likewise.\n \t(reorg_loops): Likewise.\n \n-2012-08-14   Diego Novillo  <dnovillo@google.com>\n+2012-08-14  Diego Novillo  <dnovillo@google.com>\n \n \tMerge from cxx-conversion branch.  C++ support in gengtype.\n \n@@ -1520,8 +1497,7 @@\n \t* doc/gty.texi: Document support for C++ templates and\n \tuser-provided markers.\n \t* gcc/gengtype-lex.l: Update copyright year.\n-\tRemove support for recognizing DEF_VEC_O, DEF_VEC_P and\n-\tDEFVEC_I.\n+\tRemove support for recognizing DEF_VEC_O, DEF_VEC_P and DEFVEC_I.\n \t* gengtype-parse.c: Update copyright year.\n \t(token_names): Remove DEF_VEC_O, DEF_VEC_P and DEF_VEC_I.\n \t(require_template_declaration): New.\n@@ -1622,7 +1598,7 @@\n \t* gengtype.h (USER_GTY): Add.\n \t* doc/gty.texi: Update.\n \n-2012-08-14   Lawrence Crowl  <crowl@google.com>\n+2012-08-14  Lawrence Crowl  <crowl@google.com>\n \n \tMerge cxx-conversion branch.  Implement C++ hash table.\n \n@@ -1690,7 +1666,7 @@\n \t* Makefile.in: Add hash-table.o to OBJS-libcommon-target.\n \tAdd $(HASH_TABLE_H). Add new dependences on $(HASH_TABLE_H).\n \n-2012-08-14   Lawrence Crowl  <crowl@google.com>\n+2012-08-14  Lawrence Crowl  <crowl@google.com>\n \n \tMerge from cxx-conversion branch.  Re-write double_int in C++.\n \n@@ -1882,10 +1858,9 @@\n \t(double_int_max_value): Likewise.\n \t* fixed-value.c: Change to use member functions introduced above.\n \n-2012-08-14   Lawrence Crowl  <crowl@google.com>\n+2012-08-14  Lawrence Crowl  <crowl@google.com>\n \n-\tMerge cxx-conversion branch.  Support tree macro calling\n-\tfrom gdb.\n+\tMerge cxx-conversion branch.  Support tree macro calling from gdb.\n \n \t* tree.h (tree_check): New.\n \t(TREE_CHECK): Use inline function above instead of __extension__."}]}