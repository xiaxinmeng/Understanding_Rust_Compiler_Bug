{"sha": "0c34509f6d35696dc5fc4213cbe774eef26785aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMzNDUwOWY2ZDM1Njk2ZGM1ZmM0MjEzY2JlNzc0ZWVmMjY3ODVhYQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-10-12T22:31:04Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-10-12T22:31:04Z"}, "message": "cppmain.c (struct printer): New member source.\n\n\t* cppmain.c (struct printer): New member source.\n\t(scan_translation_unit): Fix spacing at start of lines.\n\t(cb_line_change): Update.\n\n\t* gcc.dg/cpp/spacing2.c: New test.\n\nFrom-SVN: r46237", "tree": {"sha": "396e9eb3781e3ea20599a3d2a23360d73b3cc621", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/396e9eb3781e3ea20599a3d2a23360d73b3cc621"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c34509f6d35696dc5fc4213cbe774eef26785aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c34509f6d35696dc5fc4213cbe774eef26785aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c34509f6d35696dc5fc4213cbe774eef26785aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c34509f6d35696dc5fc4213cbe774eef26785aa/comments", "author": null, "committer": null, "parents": [{"sha": "42273f32259f7a52ff32e8dc4f5dce29281d0c56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42273f32259f7a52ff32e8dc4f5dce29281d0c56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42273f32259f7a52ff32e8dc4f5dce29281d0c56"}], "stats": {"total": 48, "additions": 40, "deletions": 8}, "files": [{"sha": "a6de0e377bedaa94e3edb69eb55b7fd801001a15", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c34509f6d35696dc5fc4213cbe774eef26785aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c34509f6d35696dc5fc4213cbe774eef26785aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c34509f6d35696dc5fc4213cbe774eef26785aa", "patch": "@@ -1,3 +1,11 @@\n+2001-10-12  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* cppmain.c (struct printer): New member source.\n+\t(scan_translation_unit): Fix spacing at start of lines.\n+\t(cb_line_change): Update.\n+\n+\t* gcc.dg/cpp/spacing2.c: New test.\n+\n 2001-10-12  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* config/cris/arit.c: Use __builtin_labs, not abs."}, {"sha": "a70b41732ae7c15dde6e91b2aef458d037697150", "filename": "gcc/cppmain.c", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c34509f6d35696dc5fc4213cbe774eef26785aa/gcc%2Fcppmain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c34509f6d35696dc5fc4213cbe774eef26785aa/gcc%2Fcppmain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppmain.c?ref=0c34509f6d35696dc5fc4213cbe774eef26785aa", "patch": "@@ -33,6 +33,7 @@ struct printer\n   FILE *outf;\t\t\t/* Stream to write to.  */\n   const struct line_map *map;\t/* Logical to physical line mappings.  */\n   const cpp_token *prev;\t/* Previous token.  */\n+  const cpp_token *source;\t/* Source token for spacing.  */\n   unsigned int line;\t\t/* Line currently being written.  */\n   unsigned char printed;\t/* Nonzero if something output at line.  */\n };\n@@ -222,18 +223,19 @@ scan_translation_unit (pfile)\n      cpp_reader *pfile;\n {\n   bool avoid_paste = false;\n-  const cpp_token *source = NULL;\n \n+  print.source = NULL;\n   for (;;)\n     {\n       const cpp_token *token = cpp_get_token (pfile);\n \n       if (token->type == CPP_PADDING)\n \t{\n \t  avoid_paste = true;\n-\t  if (source == NULL\n-\t      || (!(source->flags & PREV_WHITE) && token->val.source == NULL))\n-\t    source = token->val.source;\n+\t  if (print.source == NULL\n+\t      || (!(print.source->flags & PREV_WHITE)\n+\t\t  && token->val.source == NULL))\n+\t    print.source = token->val.source;\n \t  continue;\n \t}\n \n@@ -243,9 +245,9 @@ scan_translation_unit (pfile)\n       /* Subtle logic to output a space if and only if necessary.  */\n       if (avoid_paste)\n \t{\n-\t  if (source == NULL)\n-\t    source = token;\n-\t  if (source->flags & PREV_WHITE\n+\t  if (print.source == NULL)\n+\t    print.source = token;\n+\t  if (print.source->flags & PREV_WHITE\n \t      || (print.prev && cpp_avoid_paste (pfile, print.prev, token))\n \t      || (print.prev == NULL && token->type == CPP_HASH))\n \t    putc (' ', print.outf);\n@@ -254,7 +256,7 @@ scan_translation_unit (pfile)\n \tputc (' ', print.outf);\n \n       avoid_paste = false;\n-      source = NULL;\n+      print.source = NULL;\n       print.prev = token;\n       cpp_output_token (token, print.outf);\n \n@@ -348,6 +350,7 @@ cb_line_change (pfile, token, parsing_args)\n   maybe_print_line (print.map, token->line);\n   print.printed = 1;\n   print.prev = 0;\n+  print.source = 0;\n \n   /* Supply enough spaces to put this token in its original column,\n      one space per column greater than 2, since scan_translation_unit"}, {"sha": "760872aea393804a8b6d0b9e448fc72f249d06d2", "filename": "gcc/testsuite/gcc.dg/cpp/spacing2.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c34509f6d35696dc5fc4213cbe774eef26785aa/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fspacing2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c34509f6d35696dc5fc4213cbe774eef26785aa/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fspacing2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fspacing2.c?ref=0c34509f6d35696dc5fc4213cbe774eef26785aa", "patch": "@@ -0,0 +1,21 @@\n+/* Copyright (C) 2001 Free Software Foundation, Inc.  */\n+\n+/* { dg-do preprocess } */\n+\n+/* We used to output an unnecessary leading space, leading to Emacs\n+   confusion with its Makefile abuse.\n+\n+   Neil Booth, 12 Oct 2001.  */\n+\n+#define EMPTY\n+#define foo bar\n+\n+a = EMPTY\n+foo..\t\t\t\t/* No leading space on output.  */\n+\n+/*\n+   { dg-final { if ![file exists spacing2.i] { return }                   } }\n+   { dg-final { if \\{ [grep spacing2.i \"^bar\\.\\.\"] != \"\" \\}           \\{  } }\n+   { dg-final { return \\}                                                 } }\n+   { dg-final { fail \"spacing2.c: spacing issues\"\t\t\t  } }\n+*/"}]}