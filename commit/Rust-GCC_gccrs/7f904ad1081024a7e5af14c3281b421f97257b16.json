{"sha": "7f904ad1081024a7e5af14c3281b421f97257b16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y5MDRhZDEwODEwMjRhN2U1YWYxNGMzMjgxYjQyMWY5NzI1N2IxNg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2010-11-10T00:39:08Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-11-10T00:39:08Z"}, "message": "exgettext: Look for .cc files.\n\n\t* exgettext: Look for .cc files.  Look in subdirectories of\n\tlanguage subdirectories.\n\t* EXCLUDES: Update comment.\n\nFrom-SVN: r166515", "tree": {"sha": "c1b6bceccb863f354b811eee5f22e60d40c446b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1b6bceccb863f354b811eee5f22e60d40c446b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f904ad1081024a7e5af14c3281b421f97257b16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f904ad1081024a7e5af14c3281b421f97257b16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f904ad1081024a7e5af14c3281b421f97257b16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f904ad1081024a7e5af14c3281b421f97257b16/comments", "author": null, "committer": null, "parents": [{"sha": "fa4da94d1d886daaf0a987caf85c9929e94a63ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa4da94d1d886daaf0a987caf85c9929e94a63ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa4da94d1d886daaf0a987caf85c9929e94a63ab"}], "stats": {"total": 55, "additions": 41, "deletions": 14}, "files": [{"sha": "b0a05dcfcad715771842b3f2773bf0bb294ba0fb", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f904ad1081024a7e5af14c3281b421f97257b16/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f904ad1081024a7e5af14c3281b421f97257b16/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=7f904ad1081024a7e5af14c3281b421f97257b16", "patch": "@@ -1,3 +1,9 @@\n+2010-11-09  Ian Lance Taylor  <iant@google.com>\n+\n+\t* exgettext: Look for .cc files.  Look in subdirectories of\n+\tlanguage subdirectories.\n+\t* EXCLUDES: Update comment.\n+\n 2010-10-22  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.pot: Regenerate."}, {"sha": "b7874d170dfa5faddc6bbe5289935bad46bed53c", "filename": "gcc/po/EXCLUDES", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f904ad1081024a7e5af14c3281b421f97257b16/gcc%2Fpo%2FEXCLUDES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f904ad1081024a7e5af14c3281b421f97257b16/gcc%2Fpo%2FEXCLUDES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FEXCLUDES?ref=7f904ad1081024a7e5af14c3281b421f97257b16", "patch": "@@ -18,8 +18,8 @@\n \n # This file lists all the sources which should *not* be scanned for\n # strings to translate.  Only the first word on each line is used; the\n-# rest is ignored.  Only files with an extension of .c or .h or .def are\n-# examined to begin with.\n+# rest is ignored.  Only files with an extension of .c, .cc, .h, or\n+# .def are examined to begin with.\n \n #   These files are part of libgcc, or target headers provided by gcc.\n config/darwin-crt2.c"}, {"sha": "f422c1e1acb39d2392c4d582134ca1fac2dcd0d9", "filename": "gcc/po/exgettext", "status": "modified", "additions": 33, "deletions": 12, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f904ad1081024a7e5af14c3281b421f97257b16/gcc%2Fpo%2Fexgettext", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f904ad1081024a7e5af14c3281b421f97257b16/gcc%2Fpo%2Fexgettext", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2Fexgettext?ref=7f904ad1081024a7e5af14c3281b421f97257b16", "patch": "@@ -63,14 +63,21 @@ kopt=$pwd/$T/keyword-options\n kopt2=$pwd/$T/keyword2-options\n emsg=$pwd/$T/emsgids.c\n posr=$pwd/$T/po-sources\n+posrcxx=$pwd/$T/po-cxx-sources\n pottmp1=$pwd/$T/tmp1.pot\n pottmp2=$pwd/$T/tmp2.pot\n+pottmp3=$pwd/$T/tmp3.pot\n pottmp=$pwd/$T/tmp.pot\n \n-# Locate files to scan, and generate the list.  All .c, .h, and .def files\n-# in $srcdir are examined, likewise $srcdir/config and $srcdir/config/*\n-# (directories).  Also, all subdirectories of $srcdir that contain a\n-# config-lang.in.  Exclusions come from $srcdir/po/EXCLUDE.\n+# Locate files to scan.  We scan the following directories:\n+#  $srcdir\n+#  $srcdir/c-family\n+#  $srcdir/config\n+#  $srcdir/config/*\n+#  all subdirectories of $srcdir containing a config-lang.in file, and\n+#    all subdirectories of those directories.\n+# Within those directories, we examine all .c, .cc, .h, and .def files.\n+# However, any files listed in $srcdir/po/EXCLUDE are not examined.\n #\n # Then generate keyword options for xgettext, by scanning for declarations\n # of functions whose parameter names end in \"msgid\".\n@@ -83,14 +90,15 @@ pottmp=$pwd/$T/tmp.pot\n echo \"scanning for keywords, %e and %n strings...\" >&2\n \n ( cd $srcdir\n-  lang_subdirs=`echo */config-lang.in */*/config-lang.in | sed -e 's|config-lang\\.in||g'`\n-  { for dir in \"\" c-family/ config/ config/*/ $lang_subdirs\n-    do  for glob in '*.c' '*.h' '*.def'\n+  lang_subdirs=`echo */config-lang.in */*/config-lang.in | sed -e 's|/config-lang\\.in||g'`\n+  { for dir in \"\" c-family/ config/ config/*/ \\\n+      `find $lang_subdirs -type d -print | fgrep -v .svn | sort | sed -e 's|$|/|'`\n+    do  for glob in '*.c' '*.cc' '*.h' '*.def'\n         do  eval echo $dir$glob\n         done\n     done;\n   } | tr ' ' \"$nl\" | grep -v '\\*' |\n-  $AWK -v excl=po/EXCLUDES -v posr=$posr -v kopt=$kopt -v kopt2=$kopt2 -v emsg=$emsg '\n+  $AWK -v excl=po/EXCLUDES -v posr=$posr -v posrcxx=$posrcxx -v kopt=$kopt -v kopt2=$kopt2 -v emsg=$emsg '\n function keyword_option(line) {\n     paren_index = index(line, \"(\")\n     name = substr(line, 1, paren_index - 1)\n@@ -178,7 +186,11 @@ BEGIN {\n }\n \n { if (!($0 in excludes)) {\n-    print > posr\n+    if ($0 ~ /.cc$/) {\n+      print > posrcxx\n+    } else {\n+      print > posr\n+    }\n     files[NR] = $0\n   }\n }\n@@ -256,20 +268,29 @@ echo \"scanning option files...\" >&2\n     }\n   }') >> $emsg\n \n-# Run the xgettext command, with temporary added as a file to scan.\n+# Run the xgettext commands, with temporary added as a file to scan.\n echo \"running xgettext...\" >&2\n $xgettext --default-domain=$package --directory=$srcdir \\\n \t  --add-comments `cat $kopt` --files-from=$posr \\\n \t  --copyright-holder=\"Free Software Foundation, Inc.\" \\\n \t  --msgid-bugs-address=\"http://gcc.gnu.org/bugs.html\" \\\n \t  --language=c -o $pottmp1\n+if test -s $posrcxx; then\n+  $xgettext --default-domain=$package --directory=$srcdir \\\n+\t    --add-comments `cat $kopt` --files-from=$posrcxx \\\n+\t    --copyright-holder=\"Free Software Foundation, Inc.\" \\\n+\t    --msgid-bugs-address=\"http://gcc.gnu.org/bugs.html\" \\\n+\t    --language=c++ -o $pottmp2\n+else\n+  echo > $pottmp2\n+fi\n $xgettext --default-domain=$package --directory=$srcdir \\\n \t  --add-comments --keyword= `cat $kopt2` --files-from=$posr \\\n \t  --copyright-holder=\"Free Software Foundation, Inc.\" \\\n \t  --msgid-bugs-address=\"http://gcc.gnu.org/bugs.html\" \\\n-\t  --language=GCC-source -o $pottmp2\n+\t  --language=GCC-source -o $pottmp3\n $xgettext --default-domain=$package \\\n-\t  --add-comments $pottmp1 $pottmp2 \\\n+\t  --add-comments $pottmp1 $pottmp2 $pottmp3 \\\n \t  --copyright-holder=\"Free Software Foundation, Inc.\" \\\n \t  --msgid-bugs-address=\"http://gcc.gnu.org/bugs.html\" \\\n \t  --language=PO -o $pottmp"}]}