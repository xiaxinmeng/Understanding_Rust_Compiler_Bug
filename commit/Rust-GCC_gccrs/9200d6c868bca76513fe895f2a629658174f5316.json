{"sha": "9200d6c868bca76513fe895f2a629658174f5316", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTIwMGQ2Yzg2OGJjYTc2NTEzZmU4OTVmMmE2Mjk2NTgxNzRmNTMxNg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-04-03T09:17:56Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-04-03T09:17:56Z"}, "message": "config.gcc (mips-wrs-vxworks): Add vx-common.h to tm_file.\n\ngcc/\n\t* config.gcc (mips-wrs-vxworks): Add vx-common.h to tm_file.\n\tSet the default --with-arch setting to mips2.\n\t* config/mips/t-vxworks (MULTILIB_OPTIONS, MULTILIB_MATCHES)\n\t(MULTILIB_EXCEPTIONS): Redefine with new multilibs.\n\t(MULTILIB_OSDIRNAMES): Delete.\n\t(MULTILIB_DIRNAMES): Define.\n\t* config/mips/vxworks.h (LINK_SPEC): Add VXWORKS_LINK_SPEC.\n\t(LIB_SPEC, STARTFILE_SPEC, ENDFILE_SPEC): Define.\n\t(TARGET_OS_CPP_BUILTINS): Incorporate old SUBTARGET_CPP_SPEC\n\tdefinitions, except for _WRS_R3K_EXC_SUPPORT.  Call\n\tVXWORKS_OS_CPP_BUILTINS.\n\t(SUBTARGET_CPP_SPEC): Redefine to VXWORKS_ADDITIONAL_CPP_SPEC.\n\t(MIPS_DEBUGGING_INFO): Undefine.\n\t(FUNCTION_PROFILER): Define to VXWORKS_FUNCTION_PROFILER.\n\nFrom-SVN: r123459", "tree": {"sha": "2d1466559c15d4b47a081aa9b6bea3d4d4b84343", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d1466559c15d4b47a081aa9b6bea3d4d4b84343"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9200d6c868bca76513fe895f2a629658174f5316", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9200d6c868bca76513fe895f2a629658174f5316", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9200d6c868bca76513fe895f2a629658174f5316", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9200d6c868bca76513fe895f2a629658174f5316/comments", "author": null, "committer": null, "parents": [{"sha": "f0920e6c645e58c9fa456ff58b3ac0898e835cb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0920e6c645e58c9fa456ff58b3ac0898e835cb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0920e6c645e58c9fa456ff58b3ac0898e835cb2"}], "stats": {"total": 87, "additions": 64, "deletions": 23}, "files": [{"sha": "0737cbeaeecbf9940ca586fa464e0ea77cc7bbed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9200d6c868bca76513fe895f2a629658174f5316/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9200d6c868bca76513fe895f2a629658174f5316/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9200d6c868bca76513fe895f2a629658174f5316", "patch": "@@ -1,3 +1,20 @@\n+2007-04-03  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* config.gcc (mips-wrs-vxworks): Add vx-common.h to tm_file.\n+\tSet the default --with-arch setting to mips2.\n+\t* config/mips/t-vxworks (MULTILIB_OPTIONS, MULTILIB_MATCHES)\n+\t(MULTILIB_EXCEPTIONS): Redefine with new multilibs.\n+\t(MULTILIB_OSDIRNAMES): Delete.\n+\t(MULTILIB_DIRNAMES): Define.\n+\t* config/mips/vxworks.h (LINK_SPEC): Add VXWORKS_LINK_SPEC.\n+\t(LIB_SPEC, STARTFILE_SPEC, ENDFILE_SPEC): Define.\n+\t(TARGET_OS_CPP_BUILTINS): Incorporate old SUBTARGET_CPP_SPEC\n+\tdefinitions, except for _WRS_R3K_EXC_SUPPORT.  Call\n+\tVXWORKS_OS_CPP_BUILTINS.\n+\t(SUBTARGET_CPP_SPEC): Redefine to VXWORKS_ADDITIONAL_CPP_SPEC.\n+\t(MIPS_DEBUGGING_INFO): Undefine.\n+\t(FUNCTION_PROFILER): Define to VXWORKS_FUNCTION_PROFILER.\n+\n 2007-04-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/30704"}, {"sha": "14f79d6382bd5356497c7a9a72a0d5fc17a194bb", "filename": "gcc/config.gcc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9200d6c868bca76513fe895f2a629658174f5316/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9200d6c868bca76513fe895f2a629658174f5316/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=9200d6c868bca76513fe895f2a629658174f5316", "patch": "@@ -1708,7 +1708,7 @@ mips*-*-rtems*)\n mips-wrs-vxworks)\n \t# We want vxworks.h after mips/elf.h, which unfortunately means we\n \t# have to redo the tm_file list from scratch.\n-\ttm_file=\"elfos.h mips/mips.h svr4.h mips/elf.h vxworks.h mips/vxworks.h\"\n+\ttm_file=\"elfos.h mips/mips.h svr4.h mips/elf.h vx-common.h vxworks.h mips/vxworks.h\"\n \ttmake_file=\"${tmake_file} mips/t-vxworks\"\n \t;;\n mips-wrs-windiss)\t# Instruction-level simulator for VxWorks.\n@@ -2692,6 +2692,9 @@ if test x$with_cpu = x ; then\n \t  ;;\n       esac\n       ;;\n+    mips*-*-vxworks)\n+      with_arch=mips2\n+      ;;\n     sparc*-*-*)\n       with_cpu=\"`echo ${target} | sed 's/-.*$//'`\"\n       ;;"}, {"sha": "01a9a5f24fa9eebeaee0d0d3420c0716a47e64d4", "filename": "gcc/config/mips/t-vxworks", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9200d6c868bca76513fe895f2a629658174f5316/gcc%2Fconfig%2Fmips%2Ft-vxworks", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9200d6c868bca76513fe895f2a629658174f5316/gcc%2Fconfig%2Fmips%2Ft-vxworks", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-vxworks?ref=9200d6c868bca76513fe895f2a629658174f5316", "patch": "@@ -1,16 +1,17 @@\n-# Multilibs for VxWorks.\n-\n-# default is mips1 EB hard-float\n-MULTILIB_OPTIONS = mips2/mips3 EL msoft-float\n-MULTILIB_MATCHES = EL=mel mips2=mips32 mips3=mips4 mips3=mips64\n-\n-MULTILIB_EXCEPTIONS = EL EL/msoft-float mips3/msoft-float mips3/EL/msoft-float\n+# Multilibs for VxWorks.  We want these 8 architecture combinations:\n+#\n+#    {-mips2,-mips3} x {-EB,-EL} x {-mhard-float,-msoft-float}\n+#\n+# where the first option in each group is the default.  The -mips2\n+# multilibs use o32 and the -mips3 multilibs use o64.\n+#\n+# We want three multilibs for each architecture combination:\n+# default (kernel mode), -mrtp and -mrtp/-fPIC.\n+MULTILIB_OPTIONS = mabi=o64 mips3 EL msoft-float mrtp fPIC\n+MULTILIB_DIRNAMES = o64 mips3 EL msoft-float mrtp pic\n+MULTILIB_MATCHES = EL=mel fPIC=fpic\n+MULTILIB_EXCEPTIONS = mips3* mabi=o64 fPIC \\\n+\t\t      $(addprefix mabi=o64/, EL* msoft-float* mrtp* fPIC*) \\\n+\t\t      $(addsuffix /fPIC, *mabi=o64 *mips3 *EL *msoft-float)\n \n MUTLILIB_EXTRA_OPTS = -G 0 -mno-branch-likely\n-\n-MULTILIB_OSDIRNAMES = msoft-float=!MIPS32sfr3kgnu \\\n-\t\t    mips2=!MIPS32gnu mips2/msoft-float=!MIPS32sfgnu \\\n-\t\t    mips2/EL=!MIPS32gnule \\\n-\t\t    mips2/EL/msoft-float=!MIPS32sfgnule \\\n-\t\t    mips3=!MIPS64gnu mips3/EL=!MIPS64gnule \n-"}, {"sha": "574221f3f997de0b97e74d8951d4b9e9ce75ed78", "filename": "gcc/config/mips/vxworks.h", "status": "modified", "additions": 28, "deletions": 8, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9200d6c868bca76513fe895f2a629658174f5316/gcc%2Fconfig%2Fmips%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9200d6c868bca76513fe895f2a629658174f5316/gcc%2Fconfig%2Fmips%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fvxworks.h?ref=9200d6c868bca76513fe895f2a629658174f5316", "patch": "@@ -46,23 +46,43 @@ Boston, MA 02110-1301, USA.  */\n #define LINK_SPEC \"\\\n %(endian_spec) \\\n %{!G:-G 0} %{G*} %{mips1} %{mips2} %{mips3} %{mips4} %{mips32} %{mips64} \\\n-%{bestGnum}\"\n+%{bestGnum}\" \\\n+VXWORKS_LINK_SPEC\n+\n+#undef  LIB_SPEC\n+#define LIB_SPEC VXWORKS_LIB_SPEC\n+#undef  STARTFILE_SPEC\n+#define STARTFILE_SPEC VXWORKS_STARTFILE_SPEC\n+#undef  ENDFILE_SPEC\n+#define ENDFILE_SPEC VXWORKS_ENDFILE_SPEC\n \n #define TARGET_OS_CPP_BUILTINS()                        \\\n   do                                                    \\\n     {                                                   \\\n-      builtin_define (\"__vxworks\");                     \\\n-      builtin_assert (\"system=unix\");                   \\\n+      if (TARGET_64BIT)\t\t\t\t\t\\\n+\tbuiltin_define (\"CPU=MIPS64\");\t\t\t\\\n+      else\t\t\t\t\t\t\\\n+\tbuiltin_define (\"CPU=MIPS32\");\t\t\t\\\n+      if (TARGET_BIG_ENDIAN)\t\t\t\t\\\n+\tbuiltin_define (\"MIPSEB\");\t\t\t\\\n+      else\t\t\t\t\t\t\\\n+\tbuiltin_define (\"MIPSEL\");\t\t\t\\\n+      if (TARGET_SOFT_FLOAT)\t\t\t\t\\\n+\tbuiltin_define (\"SOFT_FLOAT\");\t\t\t\\\n+      VXWORKS_OS_CPP_BUILTINS ();\t\t\t\\\n     }                                                   \\\n   while (0)\n \n #undef SUBTARGET_CPP_SPEC\n-#define SUBTARGET_CPP_SPEC \\\n-\"%{!DCPU=*: %{mips3|mips4|mips64:-DCPU=MIPS64;:-DCPU=MIPS32}} \\\n-  %{EL|mel:-DMIPSEL;:-DMIPSEB} \\\n-  %{msoft-float:-DSOFT_FLOAT} \\\n-  %{mips1:-D_WRS_R3K_EXC_SUPPORT}\"\n+#define SUBTARGET_CPP_SPEC VXWORKS_ADDITIONAL_CPP_SPEC\n \n /* No sdata.  */\n #undef MIPS_DEFAULT_GVALUE\n #define MIPS_DEFAULT_GVALUE 0\n+\n+/* Other formats are already disabled in config/vxworks.h.  */\n+#undef MIPS_DEBUGGING_INFO\n+\n+/* No _mcount profiling on VxWorks.  */\n+#undef FUNCTION_PROFILER\n+#define FUNCTION_PROFILER VXWORKS_FUNCTION_PROFILER"}]}