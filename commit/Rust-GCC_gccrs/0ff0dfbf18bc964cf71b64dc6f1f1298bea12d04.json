{"sha": "0ff0dfbf18bc964cf71b64dc6f1f1298bea12d04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZmMGRmYmYxOGJjOTY0Y2Y3MWI2NGRjNmYxZjEyOThiZWExMmQwNA==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobias.schlueter@physik.uni-muenchen.de", "date": "2004-06-26T11:48:55Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2004-06-26T11:48:55Z"}, "message": "Andrew Vaught <andyv@firstinter.net>\n\n2004-06-25  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\nAndrew Vaught <andyv@firstinter.net>\n\nPR fortran/15190\n* decl.c (gfc_match_type_spec), io.c (match_io), parse.c\n(decode_statement): Enforce required space in free-form.\n\nCo-Authored-By: Andrew Vaught <andyv@firstinter.net>\n\nFrom-SVN: r83708", "tree": {"sha": "ca81227af63fdf3b92639bbe4738863f47220ab2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca81227af63fdf3b92639bbe4738863f47220ab2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ff0dfbf18bc964cf71b64dc6f1f1298bea12d04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ff0dfbf18bc964cf71b64dc6f1f1298bea12d04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ff0dfbf18bc964cf71b64dc6f1f1298bea12d04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ff0dfbf18bc964cf71b64dc6f1f1298bea12d04/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9e4d4ee5bd8785e26bc03f932ffbcfd6b19b918", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9e4d4ee5bd8785e26bc03f932ffbcfd6b19b918", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9e4d4ee5bd8785e26bc03f932ffbcfd6b19b918"}], "stats": {"total": 36, "additions": 31, "deletions": 5}, "files": [{"sha": "581c7fab1d9ee1c22a54c8af41bd86a0231a7a35", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ff0dfbf18bc964cf71b64dc6f1f1298bea12d04/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ff0dfbf18bc964cf71b64dc6f1f1298bea12d04/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0ff0dfbf18bc964cf71b64dc6f1f1298bea12d04", "patch": "@@ -1,3 +1,10 @@\n+2004-06-25  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\tAndrew Vaught <andyv@firstinter.net>\n+\n+\tPR fortran/15190\n+\t* decl.c (gfc_match_type_spec), io.c (match_io), parse.c\n+\t(decode_statement): Enforce required space in free-form.\n+\n 2004-06-21  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* f95-lang.c (LANG_HOOKS_GIMPLE_BEFORE_INLINING): Deleted."}, {"sha": "2790865025fde745c348f919f314e310c6e19811", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ff0dfbf18bc964cf71b64dc6f1f1298bea12d04/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ff0dfbf18bc964cf71b64dc6f1f1298bea12d04/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=0ff0dfbf18bc964cf71b64dc6f1f1298bea12d04", "patch": "@@ -884,6 +884,7 @@ gfc_match_type_spec (gfc_typespec * ts, int kind_flag)\n   char name[GFC_MAX_SYMBOL_LEN + 1];\n   gfc_symbol *sym;\n   match m;\n+  int c;\n \n   gfc_clear_ts (ts);\n \n@@ -962,6 +963,14 @@ gfc_match_type_spec (gfc_typespec * ts, int kind_flag)\n   if (kind_flag == 0)\n     return MATCH_YES;\n \n+  if (gfc_current_form == FORM_FREE)\n+    {\n+      c = gfc_peek_char();\n+      if (!gfc_is_whitespace(c) && c != '*' && c != '('\n+         && c != ':' && c != ',')\n+       return MATCH_NO;\n+    }\n+\n   m = gfc_match_kind_spec (ts);\n   if (m == MATCH_NO && ts->type != BT_CHARACTER)\n     m = gfc_match_old_kind_spec (ts);"}, {"sha": "048f6f851a96985fcbfcca23bec95969507dbb58", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ff0dfbf18bc964cf71b64dc6f1f1298bea12d04/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ff0dfbf18bc964cf71b64dc6f1f1298bea12d04/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=0ff0dfbf18bc964cf71b64dc6f1f1298bea12d04", "patch": "@@ -2046,7 +2046,7 @@ match_io (io_kind k)\n   gfc_code *io_code;\n   gfc_symbol *sym;\n   gfc_expr *expr;\n-  int comma_flag;\n+  int comma_flag, c;\n   locus where;\n   gfc_dt *dt;\n   match m;\n@@ -2059,6 +2059,16 @@ match_io (io_kind k)\n       if (k == M_WRITE)\n \tgoto syntax;\n \n+      if (gfc_current_form == FORM_FREE)\n+       {\n+         c = gfc_peek_char();\n+         if (c != ' ' && c != '*' && c != '\\'' && c != '\"')\n+           {\n+             m = MATCH_NO;\n+             goto cleanup;\n+           }\n+       }\n+\n       m = match_dt_format (dt);\n       if (m == MATCH_ERROR)\n \tgoto cleanup;"}, {"sha": "3983db71650be5f239afb2b4310ec4f155f15df9", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ff0dfbf18bc964cf71b64dc6f1f1298bea12d04/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ff0dfbf18bc964cf71b64dc6f1f1298bea12d04/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=0ff0dfbf18bc964cf71b64dc6f1f1298bea12d04", "patch": "@@ -177,7 +177,7 @@ decode_statement (void)\n \n     case 'b':\n       match (\"backspace\", gfc_match_backspace, ST_BACKSPACE);\n-      match (\"block data\", gfc_match_block_data, ST_BLOCK_DATA);\n+      match (\"block data% \", gfc_match_block_data, ST_BLOCK_DATA);\n       break;\n \n     case 'c':\n@@ -206,7 +206,7 @@ decode_statement (void)\n       if (gfc_match_end (&st) == MATCH_YES)\n \treturn st;\n \n-      match (\"entry\", gfc_match_entry, ST_ENTRY);\n+      match (\"entry% \", gfc_match_entry, ST_ENTRY);\n       match (\"equivalence\", gfc_match_equivalence, ST_EQUIVALENCE);\n       match (\"external\", gfc_match_external, ST_ATTR_DECL);\n       break;\n@@ -229,7 +229,7 @@ decode_statement (void)\n       break;\n \n     case 'm':\n-      match (\"module% procedure\", gfc_match_modproc, ST_MODULE_PROC);\n+      match (\"module% procedure% \", gfc_match_modproc, ST_MODULE_PROC);\n       match (\"module\", gfc_match_module, ST_MODULE);\n       break;\n \n@@ -273,7 +273,7 @@ decode_statement (void)\n       break;\n \n     case 'u':\n-      match (\"use\", gfc_match_use, ST_USE);\n+      match (\"use% \", gfc_match_use, ST_USE);\n       break;\n \n     case 'w':"}]}