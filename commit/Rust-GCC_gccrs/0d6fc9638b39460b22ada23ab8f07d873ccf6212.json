{"sha": "0d6fc9638b39460b22ada23ab8f07d873ccf6212", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ2ZmM5NjM4YjM5NDYwYjIyYWRhMjNhYjhmMDdkODczY2NmNjIxMg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2015-02-13T16:57:28Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2015-02-13T16:57:28Z"}, "message": "re PR fortran/64506 (FORMAT Parse Error with Continuation Line)\n\n2015-02-13  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/64506\n\t* scanner.c (gfc_next_char_literal): For free form source,\n\tcheck for '!' and if found, clear the comment and go back\n\tand get the next character. For fixed form source, skip the\n\trest of the line.\n\nFrom-SVN: r220687", "tree": {"sha": "ac9e6643f4a6e2e3205743e8c92ba2fc2d5db2bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac9e6643f4a6e2e3205743e8c92ba2fc2d5db2bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d6fc9638b39460b22ada23ab8f07d873ccf6212", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d6fc9638b39460b22ada23ab8f07d873ccf6212", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d6fc9638b39460b22ada23ab8f07d873ccf6212", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d6fc9638b39460b22ada23ab8f07d873ccf6212/comments", "author": null, "committer": null, "parents": [{"sha": "1f261e64a380c3200c811cf385928d135a8f77e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f261e64a380c3200c811cf385928d135a8f77e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f261e64a380c3200c811cf385928d135a8f77e5"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "b6dd48089e93c9a35159f82b8c5113fc94ebb536", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d6fc9638b39460b22ada23ab8f07d873ccf6212/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d6fc9638b39460b22ada23ab8f07d873ccf6212/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0d6fc9638b39460b22ada23ab8f07d873ccf6212", "patch": "@@ -1,3 +1,11 @@\n+2015-02-13  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/64506\n+\t* scanner.c (gfc_next_char_literal): For free form source,\n+\tcheck for '!' and if found, clear the comment and go back\n+\tand get the next character. For fixed form source, skip the\n+\trest of the line.\n+\n 2015-02-12  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/64932"}, {"sha": "f0e6404c6254ac355c2562becf6a8ace7dfda227", "filename": "gcc/fortran/scanner.c", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d6fc9638b39460b22ada23ab8f07d873ccf6212/gcc%2Ffortran%2Fscanner.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d6fc9638b39460b22ada23ab8f07d873ccf6212/gcc%2Ffortran%2Fscanner.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fscanner.c?ref=0d6fc9638b39460b22ada23ab8f07d873ccf6212", "patch": "@@ -1268,13 +1268,25 @@ gfc_next_char_literal (gfc_instring in_string)\n \tc = next_char ();\n \n       /* Character constants to be continued cannot have commentary\n-\t after the '&'.  */\n+\t after the '&'. However, there are cases where we may think we\n+\t are still in a string and we are looking for a possible\n+\t doubled quote and we end up here. See PR64506.  */\n \n-      if (in_string && c != '\\n')\n+      if (in_string)\n \t{\n \t  gfc_current_locus = old_loc;\n-\t  c = '&';\n-\t  goto done;\n+\n+\t  if (c == '!')\n+\t    {\n+\t      skip_comment_line ();\n+\t      goto restart;\n+\t    }\n+\n+\t  if (c != '\\n')\n+\t    {\n+\t      c = '&';\n+\t      goto done;\n+\t    }\n \t}\n \n       if (c != '!' && c != '\\n')\n@@ -1395,7 +1407,7 @@ gfc_next_char_literal (gfc_instring in_string)\n   else /* Fixed form.  */\n     {\n       /* Fixed form continuation.  */\n-      if (!in_string && c == '!')\n+      if (in_string != INSTRING_WARN && c == '!')\n \t{\n \t  /* Skip comment at end of line.  */\n \t  do"}]}