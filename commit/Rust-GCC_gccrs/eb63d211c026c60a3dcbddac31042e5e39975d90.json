{"sha": "eb63d211c026c60a3dcbddac31042e5e39975d90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI2M2QyMTFjMDI2YzYwYTNkY2JkZGFjMzEwNDJlNWUzOTk3NWQ5MA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2015-07-08T09:31:34Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-07-08T09:31:34Z"}, "message": "i386.md (*jcc_bt<mode>): Only allow const_int values more than or equal 8 and less than 32 when...\n\n\t* config/i386/i386.md (*jcc_bt<mode>): Only allow const_int values\n\tmore than or equal 8 and less than 32 when optimizing for size.\n\nFrom-SVN: r225539", "tree": {"sha": "83da5090637ba0a2099062b5d58ffe5d05834666", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83da5090637ba0a2099062b5d58ffe5d05834666"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb63d211c026c60a3dcbddac31042e5e39975d90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb63d211c026c60a3dcbddac31042e5e39975d90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb63d211c026c60a3dcbddac31042e5e39975d90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb63d211c026c60a3dcbddac31042e5e39975d90/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "94381a904de0f8afff0ea8bce7243649cbb3a6e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94381a904de0f8afff0ea8bce7243649cbb3a6e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94381a904de0f8afff0ea8bce7243649cbb3a6e9"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "fa6df55e5ca2167d5c59a4d04f851b124e6bf2ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb63d211c026c60a3dcbddac31042e5e39975d90/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb63d211c026c60a3dcbddac31042e5e39975d90/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb63d211c026c60a3dcbddac31042e5e39975d90", "patch": "@@ -1,3 +1,8 @@\n+2015-07-08  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*jcc_bt<mode>): Only allow const_int values\n+\tmore than or equal 8 and less than 32 when optimizing for size.\n+\n 2015-07-08  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/arm.c (arm_new_rtx_costs): Initialise cost to"}, {"sha": "e7df31dd57c97df2e0cdc0c2c01381a5cdbcdc04", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb63d211c026c60a3dcbddac31042e5e39975d90/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb63d211c026c60a3dcbddac31042e5e39975d90/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=eb63d211c026c60a3dcbddac31042e5e39975d90", "patch": "@@ -10811,7 +10811,7 @@\n    && (CONST_INT_P (operands[2])\n        ? (INTVAL (operands[2]) < GET_MODE_BITSIZE (<MODE>mode)\n \t  && INTVAL (operands[2])\n-\t       >= (optimize_function_for_size_p (cfun) ? 0 : 32))\n+\t       >= (optimize_function_for_size_p (cfun) ? 8 : 32))\n        : register_operand (operands[2], SImode))\n    && can_create_pseudo_p ()\"\n   \"#\""}]}