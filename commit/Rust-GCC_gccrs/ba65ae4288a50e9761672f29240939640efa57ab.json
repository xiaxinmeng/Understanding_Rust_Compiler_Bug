{"sha": "ba65ae4288a50e9761672f29240939640efa57ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE2NWFlNDI4OGE1MGU5NzYxNjcyZjI5MjQwOTM5NjQwZWZhNTdhYg==", "commit": {"author": {"name": "Ira Rosen", "email": "ira.rosen@linaro.org", "date": "2011-11-04T12:55:06Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2011-11-04T12:55:06Z"}, "message": "Unrevert:\n\n        2011-10-24  Ira Rosen  <ira.rosen@linaro.org>\n\n        PR tree-optimization/50730\n        * tree-vect-data-refs.c (vect_analyze_data_refs): Stop basic\n        block analysis if encountered unsupported data-ref.\n\nFrom-SVN: r180945", "tree": {"sha": "d0bbc4a3f5f026a34a2a5c9c5a5a874fee919cc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0bbc4a3f5f026a34a2a5c9c5a5a874fee919cc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba65ae4288a50e9761672f29240939640efa57ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba65ae4288a50e9761672f29240939640efa57ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba65ae4288a50e9761672f29240939640efa57ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba65ae4288a50e9761672f29240939640efa57ab/comments", "author": null, "committer": null, "parents": [{"sha": "b25dd954c41bf75d2bc892c7e9114908eaa7d314", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b25dd954c41bf75d2bc892c7e9114908eaa7d314", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b25dd954c41bf75d2bc892c7e9114908eaa7d314"}], "stats": {"total": 59, "additions": 57, "deletions": 2}, "files": [{"sha": "b13f4d71c4c24d23e9025fc0536f4613cbfc00bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba65ae4288a50e9761672f29240939640efa57ab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba65ae4288a50e9761672f29240939640efa57ab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ba65ae4288a50e9761672f29240939640efa57ab", "patch": "@@ -1,3 +1,12 @@\n+2011-11-04  Ira Rosen  <ira.rosen@linaro.org>\n+\n+\tUnrevert:\n+\t2011-10-24  Ira Rosen  <ira.rosen@linaro.org>\n+\n+\tPR tree-optimization/50730\n+\t* tree-vect-data-refs.c (vect_analyze_data_refs): Stop basic block\n+\tanalysis if encountered unsupported data-ref.\n+\n 2011-11-04  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/i386.c (ix86_expand_vector_convert_uns_vsivsf): New"}, {"sha": "a239216cf2df38a697bc647c1946ec8ea79e4e05", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 48, "deletions": 2, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba65ae4288a50e9761672f29240939640efa57ab/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba65ae4288a50e9761672f29240939640efa57ab/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=ba65ae4288a50e9761672f29240939640efa57ab", "patch": "@@ -2524,7 +2524,7 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo,\n   VEC (data_reference_p, heap) *datarefs;\n   struct data_reference *dr;\n   tree scalar_type;\n-  bool res;\n+  bool res, stop_bb_analysis = false;\n \n   if (vect_print_dump_info (REPORT_DETAILS))\n     fprintf (vect_dump, \"=== vect_analyze_data_refs ===\\n\");\n@@ -2586,6 +2586,12 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo,\n       stmt = DR_STMT (dr);\n       stmt_info = vinfo_for_stmt (stmt);\n \n+      if (stop_bb_analysis)\n+        {\n+          STMT_VINFO_VECTORIZABLE (stmt_info) = false;\n+          continue;\n+        }\n+\n       /* Check that analysis of the data-ref succeeded.  */\n       if (!DR_BASE_ADDRESS (dr) || !DR_OFFSET (dr) || !DR_INIT (dr)\n           || !DR_STEP (dr))\n@@ -2596,6 +2602,13 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo,\n               print_gimple_stmt (vect_dump, stmt, 0, TDF_SLIM);\n             }\n \n+          if (bb_vinfo)\n+            {\n+              STMT_VINFO_VECTORIZABLE (stmt_info) = false;\n+              stop_bb_analysis = true;\n+              continue;\n+            }\n+\n           return false;\n         }\n \n@@ -2604,7 +2617,15 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo,\n           if (vect_print_dump_info (REPORT_UNVECTORIZED_LOCATIONS))\n             fprintf (vect_dump, \"not vectorized: base addr of dr is a \"\n                      \"constant\");\n-          return false;\n+\n+          if (bb_vinfo)\n+            {\n+              STMT_VINFO_VECTORIZABLE (stmt_info) = false;\n+              stop_bb_analysis = true;\n+              continue;\n+            }\n+\n+           return false;\n         }\n \n       if (TREE_THIS_VOLATILE (DR_REF (dr)))\n@@ -2614,6 +2635,14 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo,\n               fprintf (vect_dump, \"not vectorized: volatile type \");\n               print_gimple_stmt (vect_dump, stmt, 0, TDF_SLIM);\n             }\n+\n+          if (bb_vinfo)\n+            {\n+              STMT_VINFO_VECTORIZABLE (stmt_info) = false;\n+              stop_bb_analysis = true;\n+              continue;\n+            }\n+\n           return false;\n         }\n \n@@ -2629,6 +2658,14 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo,\n                        \"exception \");\n               print_gimple_stmt (vect_dump, stmt, 0, TDF_SLIM);\n             }\n+\n+          if (bb_vinfo)\n+            {\n+              STMT_VINFO_VECTORIZABLE (stmt_info) = false;\n+              stop_bb_analysis = true;\n+              continue;\n+            }\n+\n           return false;\n         }\n \n@@ -2746,6 +2783,14 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo,\n                        \"not vectorized: more than one data ref in stmt: \");\n               print_gimple_stmt (vect_dump, stmt, 0, TDF_SLIM);\n             }\n+\n+          if (bb_vinfo)\n+            {\n+              STMT_VINFO_VECTORIZABLE (stmt_info) = false;\n+              stop_bb_analysis = true;\n+              continue;\n+            }\n+\n           return false;\n         }\n \n@@ -2770,6 +2815,7 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo,\n             {\n               /* Mark the statement as not vectorizable.  */\n               STMT_VINFO_VECTORIZABLE (stmt_info) = false;\n+              stop_bb_analysis = true;\n               continue;\n             }\n           else"}]}