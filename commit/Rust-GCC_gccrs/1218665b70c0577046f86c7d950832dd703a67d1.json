{"sha": "1218665b70c0577046f86c7d950832dd703a67d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTIxODY2NWI3MGMwNTc3MDQ2Zjg2YzdkOTUwODMyZGQ3MDNhNjdkMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2001-12-05T14:17:49Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2001-12-05T14:17:49Z"}, "message": "gcse.c (store_killed_in_insn): Consider pure calls as potential store killers in addition to normal calls.\n\n\t* gcse.c (store_killed_in_insn): Consider pure calls\n\tas potential store killers in addition to normal calls.\n\n\t* gcc.c-torture/execute/20011024-1.c: New test.\n\nFrom-SVN: r47675", "tree": {"sha": "7da38ae698680c56e10b64fb0ae11aa0acbcc3a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7da38ae698680c56e10b64fb0ae11aa0acbcc3a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1218665b70c0577046f86c7d950832dd703a67d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1218665b70c0577046f86c7d950832dd703a67d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1218665b70c0577046f86c7d950832dd703a67d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1218665b70c0577046f86c7d950832dd703a67d1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7254c5fa7355f071477c329a9495a726810a5d63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7254c5fa7355f071477c329a9495a726810a5d63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7254c5fa7355f071477c329a9495a726810a5d63"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "cbd8b3ca91934143b315eed9c5cfe8b94f8b9f47", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1218665b70c0577046f86c7d950832dd703a67d1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1218665b70c0577046f86c7d950832dd703a67d1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1218665b70c0577046f86c7d950832dd703a67d1", "patch": "@@ -1,3 +1,8 @@\n+2001-12-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcse.c (store_killed_in_insn): Consider pure calls\n+\tas potential store killers in addition to normal calls.\n+\n 2001-12-05  Jakub Jelinek  <jakub@redhat.com>\n \n \t* expr.c (expand_expr): When checking promoted value, use"}, {"sha": "71ee0c6bead453ef93663c5263786bc48109c072", "filename": "gcc/gcse.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1218665b70c0577046f86c7d950832dd703a67d1/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1218665b70c0577046f86c7d950832dd703a67d1/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=1218665b70c0577046f86c7d950832dd703a67d1", "patch": "@@ -6498,8 +6498,21 @@ store_killed_in_insn (x, insn)\n   \n   if (GET_CODE (insn) == CALL_INSN)\n     {\n+      /* A normal or pure call might read from pattern,\n+\t but a const call will not.  */\n       if (CONST_OR_PURE_CALL_P (insn))\n-\treturn 0;\n+\t{\n+\t  rtx link;\n+\n+\t  for (link = CALL_INSN_FUNCTION_USAGE (insn);\n+\t       link;\n+\t       link = XEXP (link, 1))\n+\t    if (GET_CODE (XEXP (link, 0)) == USE\n+\t\t&& GET_CODE (XEXP (XEXP (link, 0), 0)) == MEM\n+\t\t&& GET_CODE (XEXP (XEXP (XEXP (link, 0), 0), 0)) == SCRATCH)\n+\t      return 1;\n+\t  return 0;\n+\t}\n       else\n \treturn 1;\n     }"}, {"sha": "95b055cb7a1304db5af0c5a3ab6f38fee3dea9c7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1218665b70c0577046f86c7d950832dd703a67d1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1218665b70c0577046f86c7d950832dd703a67d1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1218665b70c0577046f86c7d950832dd703a67d1", "patch": "@@ -6,6 +6,8 @@\n \n \t* g++.dg/other/anon-union.C: New test.\n \n+\t* gcc.c-torture/execute/20011024-1.c: New test.\n+\n 2001-12-04  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* gcc.c-torture/execute/20000722-1.x,"}, {"sha": "5b871bbb9ec7c7852ab9d49f92774a867d4e1505", "filename": "gcc/testsuite/gcc.c-torture/execute/20011024-1.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1218665b70c0577046f86c7d950832dd703a67d1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20011024-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1218665b70c0577046f86c7d950832dd703a67d1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20011024-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20011024-1.c?ref=1218665b70c0577046f86c7d950832dd703a67d1", "patch": "@@ -0,0 +1,22 @@\n+/* Test whether store motion recognizes pure functions as potentially reading\n+   any memory.  */\n+\n+typedef __SIZE_TYPE__ size_t;\n+extern void *memcpy (void *dest, const void *src, size_t n);\n+extern size_t strlen (const char *s);\n+extern int strcmp (const char *s1, const char *s2) __attribute__((pure));\n+\n+char buf[50];\n+\n+static void foo (void)\n+{\n+  if (memcpy (buf, \"abc\", 4) != buf) abort ();\n+  if (strcmp (buf, \"abc\")) abort ();\n+  memcpy (buf, \"abcdefgh\", strlen (\"abcdefgh\") + 1);\n+}\n+\n+int main (void)\n+{\n+  foo ();\n+  return 0;\n+}"}]}