{"sha": "bcf640f76d83f5dcf813b5fca8075291872985eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNmNjQwZjc2ZDgzZjVkY2Y4MTNiNWZjYTgwNzUyOTE4NzI5ODVlYg==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2006-09-27T17:09:40Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2006-09-27T17:09:40Z"}, "message": "re PR target/29230 (gcc-4.1 generates faulty asm on ARM when compiling openmsx 0.6.1 with -O3)\n\n2006-09-27  Paul Brook  <paul@codesourcery.com>\n\n\tPR target/29230\n\tgcc/\n\t* config/arm/arm.md (arith_adjacentmem): Handle large offsets.\n\nFrom-SVN: r117253", "tree": {"sha": "1a457e50a5ed31f77de836efeab6e0551ee16c3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a457e50a5ed31f77de836efeab6e0551ee16c3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bcf640f76d83f5dcf813b5fca8075291872985eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcf640f76d83f5dcf813b5fca8075291872985eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcf640f76d83f5dcf813b5fca8075291872985eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcf640f76d83f5dcf813b5fca8075291872985eb/comments", "author": null, "committer": null, "parents": [{"sha": "63a7a62b25dcea2f63b2f50ee7502084ac8991f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63a7a62b25dcea2f63b2f50ee7502084ac8991f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63a7a62b25dcea2f63b2f50ee7502084ac8991f1"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "856bcb254331d657cddd6b31fd7aad0a7da325af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcf640f76d83f5dcf813b5fca8075291872985eb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcf640f76d83f5dcf813b5fca8075291872985eb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bcf640f76d83f5dcf813b5fca8075291872985eb", "patch": "@@ -1,3 +1,8 @@\n+2006-09-27  Paul Brook  <paul@codesourcery.com>\n+\n+\tPR target/29230\n+\t* config/arm/arm.md (arith_adjacentmem): Handle large offsets.\n+\n 2006-09-27  Richard Sandiford  <richard@codesourcery.com>\n \n \t* reload1.c (alter_reg): Require the alignment of the stack slot to"}, {"sha": "b28e3d01a573f95010de5a79b3a24632efc10402", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcf640f76d83f5dcf813b5fca8075291872985eb/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcf640f76d83f5dcf813b5fca8075291872985eb/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=bcf640f76d83f5dcf813b5fca8075291872985eb", "patch": "@@ -9508,14 +9508,14 @@\n     ldm[0] = base_reg;\n     if (val1 !=0 && val2 != 0)\n       {\n+\trtx ops[3];\n+\n \tif (val1 == 4 || val2 == 4)\n \t  /* Other val must be 8, since we know they are adjacent and neither\n \t     is zero.  */\n \t  output_asm_insn (\\\"ldm%?ib\\\\t%0, {%1, %2}\\\", ldm);\n-\telse\n+\telse if (const_ok_for_arm (val1) || const_ok_for_arm (-val1))\n \t  {\n-\t    rtx ops[3];\n-\n \t    ldm[0] = ops[0] = operands[4];\n \t    ops[1] = base_reg;\n \t    ops[2] = GEN_INT (val1);\n@@ -9525,6 +9525,17 @@\n \t    else\n \t      output_asm_insn (\\\"ldm%?da\\\\t%0, {%1, %2}\\\", ldm);\n \t  }\n+\telse\n+\t  {\n+\t    /* Offset is out of range for a single add, so use two ldr.  */\n+\t    ops[0] = ldm[1];\n+\t    ops[1] = base_reg;\n+\t    ops[2] = GEN_INT (val1);\n+\t    output_asm_insn (\\\"ldr%?\\\\t%0, [%1, %2]\\\", ops);\n+\t    ops[0] = ldm[2];\n+\t    ops[2] = GEN_INT (val2);\n+\t    output_asm_insn (\\\"ldr%?\\\\t%0, [%1, %2]\\\", ops);\n+\t  }\n       }\n     else if (val1 != 0)\n       {"}]}