{"sha": "f0e1b9a9887363dc693310491da72bd22b061cf4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBlMWI5YTk4ODczNjNkYzY5MzMxMDQ5MWRhNzJiZDIyYjA2MWNmNA==", "commit": {"author": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1994-06-24T19:35:38Z"}, "committer": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1994-06-24T19:35:38Z"}, "message": "(jump_optimize): If we reverse \"if (foo) bar else break;\" and there follows a NOTE_INSN_LOOP_END...\n\n(jump_optimize): If we reverse \"if (foo) bar else break;\"\nand there follows a NOTE_INSN_LOOP_END, move the note before \"bar\".\n\nFrom-SVN: r7557", "tree": {"sha": "339f0e0298905ef53480ec8f6e9b5e8d11d50833", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/339f0e0298905ef53480ec8f6e9b5e8d11d50833"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0e1b9a9887363dc693310491da72bd22b061cf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0e1b9a9887363dc693310491da72bd22b061cf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0e1b9a9887363dc693310491da72bd22b061cf4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0e1b9a9887363dc693310491da72bd22b061cf4/comments", "author": null, "committer": null, "parents": [{"sha": "c9d4d2b46bee41014c266cf657f65852edaf95cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9d4d2b46bee41014c266cf657f65852edaf95cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9d4d2b46bee41014c266cf657f65852edaf95cd"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "2f9621f47f52b6fce8c65147131a5352d9254535", "filename": "gcc/jump.c", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0e1b9a9887363dc693310491da72bd22b061cf4/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0e1b9a9887363dc693310491da72bd22b061cf4/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=f0e1b9a9887363dc693310491da72bd22b061cf4", "patch": "@@ -1750,6 +1750,7 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n \t\t\trtx range2beg = next_active_insn (label1);\n \t\t\trtx range1after, range2after;\n \t\t\trtx range1before, range2before;\n+\t\t\trtx rangenext;\n \n \t\t\t/* Include in each range any notes before it, to be\n \t\t\t   sure that we get the line number note if any, even\n@@ -1783,6 +1784,34 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n \t\t\tPREV_INSN (range1beg) = range2before;\n \t\t\tNEXT_INSN (range1end) = range2after;\n \t\t\tPREV_INSN (range2after) = range1end;\n+\n+\t\t\t/* Check for a loop end note between the end of\n+\t\t\t   range2, and the next code label.  If there is one,\n+\t\t\t   then what we have really seen is\n+\t\t\t   if (foo) break; end_of_loop;\n+\t\t\t   and moved the break sequence outside the loop.\n+\t\t\t   We must move the LOOP_END note to where the\n+\t\t\t   loop really ends now, or we will confuse loop\n+\t\t\t   optimization.  */\n+\t\t\tfor (;range2after != label2; range2after = rangenext)\n+\t\t\t  {\n+\t\t\t    rangenext = NEXT_INSN (range2after);\n+\t\t\t    if (GET_CODE (range2after) == NOTE\n+\t\t\t\t&& (NOTE_LINE_NUMBER (range2after)\n+\t\t\t\t    == NOTE_INSN_LOOP_END))\n+\t\t\t      {\n+\t\t\t\tNEXT_INSN (PREV_INSN (range2after))\n+\t\t\t\t  = rangenext;\n+\t\t\t\tPREV_INSN (rangenext)\n+\t\t\t\t  = PREV_INSN (range2after);\n+\t\t\t\tPREV_INSN (range2after) \n+\t\t\t\t  = PREV_INSN (range1beg);\n+\t\t\t\tNEXT_INSN (range2after) = range1beg;\n+\t\t\t\tNEXT_INSN (PREV_INSN (range1beg))\n+\t\t\t\t  = range2after;\n+\t\t\t\tPREV_INSN (range1beg) = range2after;\n+\t\t\t      }\n+\t\t\t  }\n \t\t\tchanged = 1;\n \t\t\tcontinue;\n \t\t      }"}]}