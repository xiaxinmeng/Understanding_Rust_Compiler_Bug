{"sha": "dfa4fcdba374ed44d4aa1a22b2738f3f5c5b37af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGZhNGZjZGJhMzc0ZWQ0NGQ0YWExYTIyYjI3MzhmM2Y1YzViMzdhZg==", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-04-14T06:53:19Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-05-20T07:17:48Z"}, "message": "Fix alignment for local variable [PR90811]\n\n - The alignment for local variable was adjust during estimate_stack_frame_size,\n   however it seems wrong spot to adjust that, expand phase will adjust that\n   but it little too late to some gimple optimization, which rely on certain\n   target hooks need to check alignment, forwprop is an example for\n   that, result of simplify_builtin_call rely on the alignment on some\n   target like ARM or RISC-V.\n\n - Exclude static local var and hard register var in the process of\n   alignment adjustment.\n\n - This patch fix gfortran.dg/pr45636.f90 for arm and riscv.\n\n - Regression test on riscv32/riscv64 and x86_64-linux-gnu, no new fail\n   introduced.\n\ngcc/ChangeLog\n\n\tPR target/90811\n\t* Makefile.in (OBJS): Add adjust-alignment.o.\n\t* adjust-alignment.c (pass_data_adjust_alignment): New.\n\t(pass_adjust_alignment): New.\n\t(pass_adjust_alignment::execute): New.\n\t(make_pass_adjust_alignment): New.\n\t* tree-pass.h (make_pass_adjust_alignment): New.\n\t* passes.def: Add pass_adjust_alignment.", "tree": {"sha": "afbbdd4decae7fe2579c968b4b242b54f02a67f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afbbdd4decae7fe2579c968b4b242b54f02a67f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dfa4fcdba374ed44d4aa1a22b2738f3f5c5b37af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfa4fcdba374ed44d4aa1a22b2738f3f5c5b37af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfa4fcdba374ed44d4aa1a22b2738f3f5c5b37af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfa4fcdba374ed44d4aa1a22b2738f3f5c5b37af/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b17a002ef579ed85edbe2c241222bfd0a86682db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b17a002ef579ed85edbe2c241222bfd0a86682db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b17a002ef579ed85edbe2c241222bfd0a86682db"}], "stats": {"total": 98, "additions": 98, "deletions": 0}, "files": [{"sha": "fdaa94ae8b94ae84aebf3f36ea087c9d49a2c487", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfa4fcdba374ed44d4aa1a22b2738f3f5c5b37af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfa4fcdba374ed44d4aa1a22b2738f3f5c5b37af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dfa4fcdba374ed44d4aa1a22b2738f3f5c5b37af", "patch": "@@ -1,3 +1,14 @@\n+2020-05-20  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\tPR target/90811\n+\t* Makefile.in (OBJS): Add adjust-alignment.o.\n+\t* adjust-alignment.c (pass_data_adjust_alignment): New.\n+\t(pass_adjust_alignment): New.\n+\t(pass_adjust_alignment::execute): New.\n+\t(make_pass_adjust_alignment): New.\n+\t* tree-pass.h (make_pass_adjust_alignment): New.\n+\t* passes.def: Add pass_adjust_alignment.\n+\n 2020-05-19  Alex Coplan  <alex.coplan@arm.com>\n \n \tPR target/94591"}, {"sha": "0fe2ba241e398cb6d7346d329f6196cdde9932ad", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfa4fcdba374ed44d4aa1a22b2738f3f5c5b37af/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfa4fcdba374ed44d4aa1a22b2738f3f5c5b37af/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=dfa4fcdba374ed44d4aa1a22b2738f3f5c5b37af", "patch": "@@ -1267,6 +1267,7 @@ OBJS = \\\n \tinsn-recog.o \\\n \tinsn-enums.o \\\n \tggc-page.o \\\n+\tadjust-alignment.o \\\n \talias.o \\\n \talloc-pool.o \\\n \tauto-inc-dec.o \\"}, {"sha": "40cfd1889280ef2421c160bed80ff3e5fc445322", "filename": "gcc/adjust-alignment.c", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfa4fcdba374ed44d4aa1a22b2738f3f5c5b37af/gcc%2Fadjust-alignment.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfa4fcdba374ed44d4aa1a22b2738f3f5c5b37af/gcc%2Fadjust-alignment.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fadjust-alignment.c?ref=dfa4fcdba374ed44d4aa1a22b2738f3f5c5b37af", "patch": "@@ -0,0 +1,84 @@\n+/* Adjust alignment for local variable.\n+   Copyright (C) 2020 Free Software Foundation, Inc.\n+   Contributed by Kito Cheng <kito.cheng@sifive.com>\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"backend.h\"\n+#include \"target.h\"\n+#include \"tree.h\"\n+#include \"tree-pass.h\"\n+#include \"tm_p.h\"\n+\n+namespace {\n+\n+const pass_data pass_data_adjust_alignment =\n+{\n+  GIMPLE_PASS, /* type */\n+  \"adjust_alignment\", /* name */\n+  OPTGROUP_NONE, /* optinfo_flags */\n+  TV_NONE, /* tv_id */\n+  0, /* properties_required */\n+  0, /* properties_provided */\n+  0, /* properties_destroyed */\n+  0, /* todo_flags_start */\n+  0, /* todo_flags_finish */\n+};\n+\n+class pass_adjust_alignment : public gimple_opt_pass\n+{\n+public:\n+  pass_adjust_alignment (gcc::context *ctxt)\n+    : gimple_opt_pass (pass_data_adjust_alignment, ctxt)\n+  {}\n+\n+  virtual unsigned int execute (function *);\n+}; // class pass_adjust_alignment\n+\n+} // anon namespace\n+\n+/* Entry point to adjust_alignment pass.  */\n+unsigned int\n+pass_adjust_alignment::execute (function *fun)\n+{\n+  size_t i;\n+  tree var;\n+\n+  FOR_EACH_LOCAL_DECL (fun, i, var)\n+    {\n+      /* Don't adjust aligment for static local var and hard register var.  */\n+      if (is_global_var (var) || DECL_HARD_REGISTER (var))\n+\tcontinue;\n+\n+      unsigned align = LOCAL_DECL_ALIGNMENT (var);\n+\n+      /* Make sure alignment only increase.  */\n+      gcc_assert (align >= DECL_ALIGN (var));\n+\n+      SET_DECL_ALIGN (var, align);\n+    }\n+  return 0;\n+}\n+\n+gimple_opt_pass *\n+make_pass_adjust_alignment (gcc::context *ctxt)\n+{\n+  return new pass_adjust_alignment (ctxt);\n+}"}, {"sha": "92cbe587a8a5bb080c9c3bb4bcd67d55d3ea6c6f", "filename": "gcc/passes.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfa4fcdba374ed44d4aa1a22b2738f3f5c5b37af/gcc%2Fpasses.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfa4fcdba374ed44d4aa1a22b2738f3f5c5b37af/gcc%2Fpasses.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.def?ref=dfa4fcdba374ed44d4aa1a22b2738f3f5c5b37af", "patch": "@@ -183,6 +183,7 @@ along with GCC; see the file COPYING3.  If not see\n   NEXT_PASS (pass_oacc_device_lower);\n   NEXT_PASS (pass_omp_device_lower);\n   NEXT_PASS (pass_omp_target_link);\n+  NEXT_PASS (pass_adjust_alignment);\n   NEXT_PASS (pass_all_optimizations);\n   PUSH_INSERT_PASSES_WITHIN (pass_all_optimizations)\n       NEXT_PASS (pass_remove_cgraph_callee_edges);"}, {"sha": "576b3f674340087ee7a236846ad835458b8b2091", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfa4fcdba374ed44d4aa1a22b2738f3f5c5b37af/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfa4fcdba374ed44d4aa1a22b2738f3f5c5b37af/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=dfa4fcdba374ed44d4aa1a22b2738f3f5c5b37af", "patch": "@@ -480,6 +480,7 @@ extern gimple_opt_pass *make_pass_sprintf_length (gcc::context *ctxt);\n extern gimple_opt_pass *make_pass_walloca (gcc::context *ctxt);\n extern gimple_opt_pass *make_pass_coroutine_lower_builtins (gcc::context *ctxt);\n extern gimple_opt_pass *make_pass_coroutine_early_expand_ifns (gcc::context *ctxt);\n+extern gimple_opt_pass *make_pass_adjust_alignment (gcc::context *ctxt);\n \n /* IPA Passes */\n extern simple_ipa_opt_pass *make_pass_ipa_lower_emutls (gcc::context *ctxt);"}]}