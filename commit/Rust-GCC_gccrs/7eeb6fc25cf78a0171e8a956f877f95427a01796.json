{"sha": "7eeb6fc25cf78a0171e8a956f877f95427a01796", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VlYjZmYzI1Y2Y3OGEwMTcxZThhOTU2Zjg3N2Y5NTQyN2EwMTc5Ng==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-02-05T08:32:16Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-02-05T08:32:16Z"}, "message": "re PR middle-end/89150 (Tree form bitmaps break GC)\n\n2019-02-05  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/89150\n\t* bitmap.h (struct bitmap_obstack): Do not mark GTY.\n\t(struct bitmap_element): Drop chain_prev so we properly recurse on\n\tthe prev member, supporting tree views.\n\t(struct bitmap_head): GTY skip the obstack member.\n\nFrom-SVN: r268530", "tree": {"sha": "111c364402430c952f98ed2c3d1ecc780d8ee728", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/111c364402430c952f98ed2c3d1ecc780d8ee728"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7eeb6fc25cf78a0171e8a956f877f95427a01796", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eeb6fc25cf78a0171e8a956f877f95427a01796", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7eeb6fc25cf78a0171e8a956f877f95427a01796", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eeb6fc25cf78a0171e8a956f877f95427a01796/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e1bbb0bcf74966cbd5199d6391bdef5e8f592ef1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1bbb0bcf74966cbd5199d6391bdef5e8f592ef1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1bbb0bcf74966cbd5199d6391bdef5e8f592ef1"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "f7c8b50e142ed917e34fc5f7efc719fbc117f7c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eeb6fc25cf78a0171e8a956f877f95427a01796/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eeb6fc25cf78a0171e8a956f877f95427a01796/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7eeb6fc25cf78a0171e8a956f877f95427a01796", "patch": "@@ -1,3 +1,11 @@\n+2019-02-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/89150\n+\t* bitmap.h (struct bitmap_obstack): Do not mark GTY.\n+\t(struct bitmap_element): Drop chain_prev so we properly recurse on\n+\tthe prev member, supporting tree views.\n+\t(struct bitmap_head): GTY skip the obstack member.\n+\n 2019-02-04  Alexander Monakov  <amonakov@ispras.ru>\n \n \tPR c/88698"}, {"sha": "11c75e9ef69e9135ea0982c8072130a649137ec1", "filename": "gcc/bitmap.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eeb6fc25cf78a0171e8a956f877f95427a01796/gcc%2Fbitmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eeb6fc25cf78a0171e8a956f877f95427a01796/gcc%2Fbitmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.h?ref=7eeb6fc25cf78a0171e8a956f877f95427a01796", "patch": "@@ -288,10 +288,10 @@ typedef unsigned long BITMAP_WORD;\n #define BITMAP_ELEMENT_ALL_BITS (BITMAP_ELEMENT_WORDS * BITMAP_WORD_BITS)\n \n /* Obstack for allocating bitmaps and elements from.  */\n-struct GTY (()) bitmap_obstack {\n+struct bitmap_obstack {\n   struct bitmap_element *elements;\n   struct bitmap_head *heads;\n-  struct obstack GTY ((skip)) obstack;\n+  struct obstack obstack;\n };\n \n /* Bitmap set element.  We use a linked list to hold only the bits that\n@@ -306,7 +306,7 @@ struct GTY (()) bitmap_obstack {\n    bitmap_elt_clear_from to be implemented in unit time rather than\n    linear in the number of elements to be freed.  */\n \n-struct GTY((chain_next (\"%h.next\"), chain_prev (\"%h.prev\"))) bitmap_element {\n+struct GTY((chain_next (\"%h.next\"))) bitmap_element {\n   /* In list form, the next element in the linked list;\n      in tree form, the left child node in the tree.  */\n   struct bitmap_element *next;\n@@ -340,7 +340,7 @@ struct GTY(()) bitmap_head {\n   /* Last element looked at.  */\n   bitmap_element * GTY((skip(\"\"))) current;\n   /* Obstack to allocate elements from.  If NULL, then use GGC allocation.  */\n-  bitmap_obstack *obstack;\n+  bitmap_obstack * GTY((skip(\"\"))) obstack;\n   void dump ();\n };\n "}]}