{"sha": "308cd611711b0cd8924c2a6081e7a50c75cc2d5a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA4Y2Q2MTE3MTFiMGNkODkyNGMyYTYwODFlN2E1MGM3NWNjMmQ1YQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-08-30T18:31:08Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-08-30T18:31:08Z"}, "message": "mips.c (MIPS_FP_CONDITIONS): New macro.\n\n\t* config/mips/mips.c (MIPS_FP_CONDITIONS): New macro.\n\t(mips_fp_condition): New enum.\n\t(mips_fp_conditions): New array.\n\t(print_fcc_operand): Delete.\n\t(print_operand): Remove %V, %v and %Q.  Redefine %Z so that it prints\n\tthe operand and comma if and only if ISA_HAS_8CC.  Add %Y.\n\t(builtin_description): Add \"cond\" field.\n\t(DIRECT_BUILTIN): Initialize it.\n\t(CMP_{SCALAR,PS,4S}_BUILTINS, MOVTF_BUILTINS): Split INSN parameter\n\tinto INSN and CODE.  Initialize the \"cond\" field.\n\t(CMP_BUILTINS): Update accordingly.\n\t(mips_bdesc): Use MIPS_FP_CONDITIONS to invoke CMP_BUILTINS.\n\t(mips_expand_builtin_movtf, mips_expand_builtin_compare): Take the\n\tmips_fp_condition as argument.  Make it the final operand of the\n\tcomparison instruction.\n\t(mips_expand_builtin): Update accordingly.\n\t* config/mips/mips.md (UNSPEC_C_*, UNSPEC_CABS_*): Delete.\n\t(UNSPEC_C, UNSPEC_CABS): New constants.  Shuffle others to fill\n\tthe gaps.\n\t* config/mips/mips-ps-3d.md (mips_cond_move_tf_ps, bc1any[24][ft]):\n\tDon't use the 'Q' operand prefix; just print the operand normally.\n\t(mips_cabs_*, mips_c_*): Delete, replacing with...\n\t(mips_c_cond_{ps,4s}, mips_cabs_cond_{s,d,ps,4s}): ...these new\n\tpatterns.  Split the 4s versions into 2 ps patterns after reload.\n\nFrom-SVN: r86791", "tree": {"sha": "cc89a215dfda405e347fcdcea39c6811775bfff5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc89a215dfda405e347fcdcea39c6811775bfff5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/308cd611711b0cd8924c2a6081e7a50c75cc2d5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/308cd611711b0cd8924c2a6081e7a50c75cc2d5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/308cd611711b0cd8924c2a6081e7a50c75cc2d5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/308cd611711b0cd8924c2a6081e7a50c75cc2d5a/comments", "author": null, "committer": null, "parents": [{"sha": "fa016245146b1217d617ea2f7555e00945a48f84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa016245146b1217d617ea2f7555e00945a48f84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa016245146b1217d617ea2f7555e00945a48f84"}], "stats": {"total": 1412, "additions": 226, "deletions": 1186}, "files": [{"sha": "e8a423c4f04b77243e008a3df2ffc57148ee1741", "filename": "gcc/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308cd611711b0cd8924c2a6081e7a50c75cc2d5a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308cd611711b0cd8924c2a6081e7a50c75cc2d5a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=308cd611711b0cd8924c2a6081e7a50c75cc2d5a", "patch": "@@ -1,3 +1,30 @@\n+2004-08-30  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.c (MIPS_FP_CONDITIONS): New macro.\n+\t(mips_fp_condition): New enum.\n+\t(mips_fp_conditions): New array.\n+\t(print_fcc_operand): Delete.\n+\t(print_operand): Remove %V, %v and %Q.  Redefine %Z so that it prints\n+\tthe operand and comma if and only if ISA_HAS_8CC.  Add %Y.\n+\t(builtin_description): Add \"cond\" field.\n+\t(DIRECT_BUILTIN): Initialize it.\n+\t(CMP_{SCALAR,PS,4S}_BUILTINS, MOVTF_BUILTINS): Split INSN parameter\n+\tinto INSN and CODE.  Initialize the \"cond\" field.\n+\t(CMP_BUILTINS): Update accordingly.\n+\t(mips_bdesc): Use MIPS_FP_CONDITIONS to invoke CMP_BUILTINS.\n+\t(mips_expand_builtin_movtf, mips_expand_builtin_compare): Take the\n+\tmips_fp_condition as argument.  Make it the final operand of the\n+\tcomparison instruction.\n+\t(mips_expand_builtin): Update accordingly.\n+\t* config/mips/mips.md (UNSPEC_C_*, UNSPEC_CABS_*): Delete.\n+\t(UNSPEC_C, UNSPEC_CABS): New constants.  Shuffle others to fill\n+\tthe gaps.\n+\t* config/mips/mips-ps-3d.md (mips_cond_move_tf_ps, bc1any[24][ft]):\n+\tDon't use the 'Q' operand prefix; just print the operand normally.\n+\t(mips_cabs_*, mips_c_*): Delete, replacing with...\n+\t(mips_c_cond_{ps,4s}, mips_cabs_cond_{s,d,ps,4s}): ...these new\n+\tpatterns.  Split the 4s versions into 2 ps patterns after reload.\n+\n 2004-08-30  Richard Henderson  <rth@redhat.com>\n \n \t* fold-const.c (tree_expr_nonzero_p): Use get_base_address before"}, {"sha": "c2615619b057fc5bff47d737b2c83bf2ec6e9f02", "filename": "gcc/config/mips/mips-ps-3d.md", "status": "modified", "additions": 67, "deletions": 1037, "changes": 1104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308cd611711b0cd8924c2a6081e7a50c75cc2d5a/gcc%2Fconfig%2Fmips%2Fmips-ps-3d.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308cd611711b0cd8924c2a6081e7a50c75cc2d5a/gcc%2Fconfig%2Fmips%2Fmips-ps-3d.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-ps-3d.md?ref=308cd611711b0cd8924c2a6081e7a50c75cc2d5a", "patch": "@@ -41,8 +41,8 @@\n \t\t     UNSPEC_MOVE_TF_PS))]\n   \"TARGET_PAIRED_SINGLE_FLOAT\"\n   \"@\n-    movt.ps\\t%0,%1,%Q3\n-    movf.ps\\t%0,%2,%Q3\"\n+    movt.ps\\t%0,%1,%3\n+    movf.ps\\t%0,%2,%3\"\n   [(set_attr \"type\" \"condmove\")\n    (set_attr \"mode\" \"SF\")])\n \n@@ -277,1080 +277,110 @@\n    (set_attr \"mode\" \"SF\")])\n \n ;----------------------------------------------------------------------------\n-; Floating Point Absolute Comparisions for Singles\n+; Floating Point Comparisions for Scalars\n ;----------------------------------------------------------------------------\n \n-(define_insn \"mips_cabs_f_s\"\n+(define_insn \"mips_cabs_cond_<fmt>\"\n   [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:SF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_F))]\n+\t(unspec:CC [(match_operand:SCALARF 1 \"register_operand\" \"f\")\n+\t\t    (match_operand:SCALARF 2 \"register_operand\" \"f\")\n+\t\t    (match_operand 3 \"const_int_operand\" \"\")]\n+\t\t   UNSPEC_CABS))]\n   \"TARGET_MIPS3D\"\n-  \"cabs.f.s\\t%Q0,%1,%2\"\n+  \"cabs.%Y3.<fmt>\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fcmp\")\n    (set_attr \"mode\" \"FPSW\")])\n \n-(define_insn \"mips_cabs_un_s\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:SF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_UN))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.un.s\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_eq_s\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:SF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_EQ))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.eq.s\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ueq_s\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:SF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_UEQ))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ueq.s\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_olt_s\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:SF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_OLT))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.olt.s\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ult_s\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:SF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_ULT))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ult.s\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ole_s\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:SF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_OLE))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ole.s\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ule_s\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:SF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_ULE))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ule.s\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_sf_s\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:SF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_SF))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.sf.s\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ngle_s\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:SF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_NGLE))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ngle.s\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_seq_s\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:SF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_SEQ))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.seq.s\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ngl_s\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:SF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_NGL))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ngl.s\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_lt_s\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:SF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_LT))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.lt.s\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_nge_s\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:SF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_NGE))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.nge.s\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_le_s\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:SF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_LE))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.le.s\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ngt_s\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:SF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_NGT))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ngt.s\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-;----------------------------------------------------------------------------\n-; Floating Point Absolute Comparisions for Doubles\n-;----------------------------------------------------------------------------\n-(define_insn \"mips_cabs_f_d\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:DF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_F))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.f.d\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_un_d\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:DF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_UN))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.un.d\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_eq_d\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:DF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_EQ))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.eq.d\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ueq_d\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:DF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_UEQ))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ueq.d\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_olt_d\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:DF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_OLT))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.olt.d\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ult_d\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:DF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_ULT))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ult.d\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ole_d\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:DF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_OLE))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ole.d\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ule_d\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:DF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_ULE))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ule.d\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_sf_d\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:DF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_SF))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.sf.d\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ngle_d\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:DF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_NGLE))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ngle.d\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_seq_d\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:DF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_SEQ))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.seq.d\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ngl_d\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:DF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_NGL))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ngl.d\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_lt_d\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:DF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_LT))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.lt.d\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_nge_d\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:DF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_NGE))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.nge.d\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_le_d\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:DF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_LE))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.le.d\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ngt_d\"\n-  [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n-\t(unspec:CC [(match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:DF 2 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_CABS_NGT))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ngt.d\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-;----------------------------------------------------------------------------\n-; Floating Point Comparisions for Four Singles\n-;----------------------------------------------------------------------------\n-\n-(define_insn \"mips_c_f_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_C_F))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.f.ps\\t%v0,%1,%2\\n\\tc.f.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_un_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_C_UN))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.un.ps\\t%v0,%1,%2\\n\\tc.un.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_eq_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_C_EQ))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.eq.ps\\t%v0,%1,%2\\n\\tc.eq.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_ueq_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_C_UEQ))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.ueq.ps\\t%v0,%1,%2\\n\\tc.ueq.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_olt_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_C_OLT))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.olt.ps\\t%v0,%1,%2\\n\\tc.olt.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_ult_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_C_ULT))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.ult.ps\\t%v0,%1,%2\\n\\tc.ult.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_ole_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_C_OLE))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.ole.ps\\t%v0,%1,%2\\n\\tc.ole.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_ule_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_C_ULE))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.ule.ps\\t%v0,%1,%2\\n\\tc.ule.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_sf_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_C_SF))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.sf.ps\\t%v0,%1,%2\\n\\tc.sf.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_ngle_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_C_NGLE))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.ngle.ps\\t%v0,%1,%2\\n\\tc.ngle.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_seq_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_C_SEQ))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.seq.ps\\t%v0,%1,%2\\n\\tc.seq.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_ngl_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_C_NGL))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.ngl.ps\\t%v0,%1,%2\\n\\tc.ngl.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_lt_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_C_LT))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.lt.ps\\t%v0,%1,%2\\n\\tc.lt.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_nge_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_C_NGE))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.nge.ps\\t%v0,%1,%2\\n\\tc.nge.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_le_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_C_LE))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.le.ps\\t%v0,%1,%2\\n\\tc.le.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_ngt_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_C_NGT))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.ngt.ps\\t%v0,%1,%2\\n\\tc.ngt.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-;----------------------------------------------------------------------------\n-; Floating Point Absolute Comparisions for Four Singles\n-;----------------------------------------------------------------------------\n-(define_insn \"mips_cabs_f_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_CABS_F))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.f.ps\\t%v0,%1,%2\\n\\tcabs.f.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_un_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_CABS_UN))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.un.ps\\t%v0,%1,%2\\n\\tcabs.un.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_eq_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_CABS_EQ))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.eq.ps\\t%v0,%1,%2\\n\\tcabs.eq.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ueq_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_CABS_UEQ))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ueq.ps\\t%v0,%1,%2\\n\\tcabs.ueq.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_olt_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_CABS_OLT))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.olt.ps\\t%v0,%1,%2\\n\\tcabs.olt.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ult_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_CABS_ULT))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ult.ps\\t%v0,%1,%2\\n\\tcabs.ult.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ole_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_CABS_OLE))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ole.ps\\t%v0,%1,%2\\n\\tcabs.ole.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ule_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_CABS_ULE))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ule.ps\\t%v0,%1,%2\\n\\tcabs.ule.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_sf_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_CABS_SF))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.sf.ps\\t%v0,%1,%2\\n\\tcabs.sf.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ngle_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_CABS_NGLE))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ngle.ps\\t%v0,%1,%2\\n\\tcabs.ngle.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_seq_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_CABS_SEQ))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.seq.ps\\t%v0,%1,%2\\n\\tcabs.seq.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ngl_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_CABS_NGL))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ngl.ps\\t%v0,%1,%2\\n\\tcabs.ngl.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n \n-(define_insn \"mips_cabs_lt_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_CABS_LT))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.lt.ps\\t%v0,%1,%2\\n\\tcabs.lt.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n+;----------------------------------------------------------------------------\n+; Floating Point Comparisions for Four Singles\n+;----------------------------------------------------------------------------\n \n-(define_insn \"mips_cabs_nge_4s\"\n+(define_insn_and_split \"mips_c_cond_4s\"\n   [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n \t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n \t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n \t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_CABS_NGE))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.nge.ps\\t%v0,%1,%2\\n\\tcabs.nge.ps\\t%V0,%3,%4\"\n+\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")\n+\t\t      (match_operand 5 \"const_int_operand\" \"\")]\n+\t\t     UNSPEC_C))]\n+  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(set (match_dup 6)\n+\t(unspec:CCV2 [(match_dup 1)\n+\t\t      (match_dup 2)\n+\t\t      (match_dup 5)]\n+\t\t     UNSPEC_C))\n+   (set (match_dup 7)\n+\t(unspec:CCV2 [(match_dup 3)\n+\t\t      (match_dup 4)\n+\t\t      (match_dup 5)]\n+\t\t     UNSPEC_C))]\n+{\n+  operands[6] = simplify_gen_subreg (CCV2mode, operands[0], CCV4mode, 0);\n+  operands[7] = simplify_gen_subreg (CCV2mode, operands[0], CCV4mode, 8);\n+}\n   [(set_attr \"type\" \"fcmp\")\n    (set_attr \"length\" \"8\")\n    (set_attr \"mode\" \"FPSW\")])\n \n-(define_insn \"mips_cabs_le_4s\"\n+(define_insn_and_split \"mips_cabs_cond_4s\"\n   [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n \t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n \t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n \t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_CABS_LE))]\n+\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")\n+\t\t      (match_operand 5 \"const_int_operand\" \"\")]\n+\t\t     UNSPEC_CABS))]\n   \"TARGET_MIPS3D\"\n-  \"cabs.le.ps\\t%v0,%1,%2\\n\\tcabs.le.ps\\t%V0,%3,%4\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(set (match_dup 6)\n+\t(unspec:CCV2 [(match_dup 1)\n+\t\t      (match_dup 2)\n+\t\t      (match_dup 5)]\n+\t\t     UNSPEC_CABS))\n+   (set (match_dup 7)\n+\t(unspec:CCV2 [(match_dup 3)\n+\t\t      (match_dup 4)\n+\t\t      (match_dup 5)]\n+\t\t     UNSPEC_CABS))]\n+{\n+  operands[6] = simplify_gen_subreg (CCV2mode, operands[0], CCV4mode, 0);\n+  operands[7] = simplify_gen_subreg (CCV2mode, operands[0], CCV4mode, 8);\n+}\n   [(set_attr \"type\" \"fcmp\")\n    (set_attr \"length\" \"8\")\n    (set_attr \"mode\" \"FPSW\")])\n \n-(define_insn \"mips_cabs_ngt_4s\"\n-  [(set (match_operand:CCV4 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV4 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 3 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")]\n-\t\t     UNSPEC_CABS_NGT))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ngt.ps\\t%v0,%1,%2\\n\\tcabs.ngt.ps\\t%V0,%3,%4\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"mode\" \"FPSW\")])\n \n ;----------------------------------------------------------------------------\n ; Floating Point Comparisions for Paired Singles\n ;----------------------------------------------------------------------------\n-(define_insn \"mips_c_f_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_C_F))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.f.ps\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_un_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_C_UN))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.un.ps\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_eq_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_C_EQ))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.eq.ps\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_ueq_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_C_UEQ))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.ueq.ps\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_olt_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_C_OLT))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.olt.ps\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_ult_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_C_ULT))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.ult.ps\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_ole_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_C_OLE))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.ole.ps\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_ule_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_C_ULE))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.ule.ps\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_sf_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_C_SF))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.sf.ps\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_ngle_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_C_NGLE))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.ngle.ps\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_seq_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_C_SEQ))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.seq.ps\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_ngl_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_C_NGL))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.ngl.ps\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_lt_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_C_LT))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.lt.ps\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_nge_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_C_NGE))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.nge.ps\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_c_le_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_C_LE))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.le.ps\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n \n-(define_insn \"mips_c_ngt_ps\"\n+(define_insn \"mips_c_cond_ps\"\n   [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n \t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_C_NGT))]\n+\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n+\t\t      (match_operand 3 \"const_int_operand\" \"\")]\n+\t\t     UNSPEC_C))]\n   \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"c.ngt.ps\\t%Z0%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-;----------------------------------------------------------------------------\n-; Floating Point Absolute Comparisions for Paired Singles\n-;----------------------------------------------------------------------------\n-(define_insn \"mips_cabs_f_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_CABS_F))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.f.ps\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_un_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_CABS_UN))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.un.ps\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_eq_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_CABS_EQ))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.eq.ps\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ueq_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_CABS_UEQ))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ueq.ps\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_olt_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_CABS_OLT))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.olt.ps\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ult_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_CABS_ULT))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ult.ps\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ole_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_CABS_OLE))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ole.ps\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ule_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_CABS_ULE))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ule.ps\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_sf_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_CABS_SF))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.sf.ps\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ngle_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_CABS_NGLE))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ngle.ps\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_seq_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_CABS_SEQ))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.seq.ps\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_ngl_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_CABS_NGL))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ngl.ps\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_lt_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_CABS_LT))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.lt.ps\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n-\n-(define_insn \"mips_cabs_nge_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_CABS_NGE))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.nge.ps\\t%Q0,%1,%2\"\n+  \"c.%Y3.ps\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fcmp\")\n    (set_attr \"mode\" \"FPSW\")])\n \n-(define_insn \"mips_cabs_le_ps\"\n+(define_insn \"mips_cabs_cond_ps\"\n   [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n \t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_CABS_LE))]\n+\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n+\t\t      (match_operand 3 \"const_int_operand\" \"\")]\n+\t\t     UNSPEC_CABS))]\n   \"TARGET_MIPS3D\"\n-  \"cabs.le.ps\\t%Q0,%1,%2\"\n+  \"cabs.%Y3.ps\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fcmp\")\n    (set_attr \"mode\" \"FPSW\")])\n \n-(define_insn \"mips_cabs_ngt_ps\"\n-  [(set (match_operand:CCV2 0 \"register_operand\" \"=z\")\n-\t(unspec:CCV2 [(match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")] \n-\t\t     UNSPEC_CABS_NGT))]\n-  \"TARGET_MIPS3D\"\n-  \"cabs.ngt.ps\\t%Q0,%1,%2\"\n-  [(set_attr \"type\" \"fcmp\")\n-   (set_attr \"mode\" \"FPSW\")])\n \n ;----------------------------------------------------------------------------\n ; Floating Point Branch Instructions.\n@@ -1364,7 +394,7 @@\n \t\t      (label_ref (match_operand 1 \"\" \"\"))\n \t\t      (pc)))]\n   \"TARGET_MIPS3D\"\n-  \"%*bc1any4t\\t%Q0,%1%/\"\n+  \"%*bc1any4t\\t%0,%1%/\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"mode\" \"none\")])\n \n@@ -1376,7 +406,7 @@\n \t\t      (label_ref (match_operand 1 \"\" \"\"))\n \t\t      (pc)))]\n   \"TARGET_MIPS3D\"\n-  \"%*bc1any4f\\t%Q0,%1%/\"\n+  \"%*bc1any4f\\t%0,%1%/\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"mode\" \"none\")])\n \n@@ -1388,7 +418,7 @@\n \t\t      (label_ref (match_operand 1 \"\" \"\"))\n \t\t      (pc)))]\n   \"TARGET_MIPS3D\"\n-  \"%*bc1any2t\\t%Q0,%1%/\"\n+  \"%*bc1any2t\\t%0,%1%/\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"mode\" \"none\")])\n \n@@ -1400,7 +430,7 @@\n \t\t      (label_ref (match_operand 1 \"\" \"\"))\n \t\t      (pc)))]\n   \"TARGET_MIPS3D\"\n-  \"%*bc1any2f\\t%Q0,%1%/\"\n+  \"%*bc1any2f\\t%0,%1%/\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"mode\" \"none\")])\n "}, {"sha": "cad42a7db726f03939673678d66c7526f294694e", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 120, "deletions": 106, "changes": 226, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308cd611711b0cd8924c2a6081e7a50c75cc2d5a/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308cd611711b0cd8924c2a6081e7a50c75cc2d5a/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=308cd611711b0cd8924c2a6081e7a50c75cc2d5a", "patch": "@@ -188,6 +188,37 @@ enum mips_builtin_type\n   MIPS_BUILTIN_CMP_SINGLE\n };\n \n+/* Invokes MACRO (COND) for each c.cond.fmt condition.  */\n+#define MIPS_FP_CONDITIONS(MACRO) \\\n+  MACRO (f),\t\\\n+  MACRO (un),\t\\\n+  MACRO (eq),\t\\\n+  MACRO (ueq),\t\\\n+  MACRO (olt),\t\\\n+  MACRO (ult),\t\\\n+  MACRO (ole),\t\\\n+  MACRO (ule),\t\\\n+  MACRO (sf),\t\\\n+  MACRO (ngle),\t\\\n+  MACRO (seq),\t\\\n+  MACRO (ngl),\t\\\n+  MACRO (lt),\t\\\n+  MACRO (nge),\t\\\n+  MACRO (le),\t\\\n+  MACRO (ngt)\n+\n+/* Enumerates the codes above as MIPS_FP_COND_<X>.  */\n+#define DECLARE_MIPS_COND(X) MIPS_FP_COND_ ## X\n+enum mips_fp_condition {\n+  MIPS_FP_CONDITIONS (DECLARE_MIPS_COND)\n+};\n+\n+/* Index X provides the string representation of MIPS_FP_COND_<X>.  */\n+#define STRINGIFY(X) #X\n+static const char *const mips_fp_conditions[] = {\n+  MIPS_FP_CONDITIONS (STRINGIFY)\n+};\n+\n /* A function to save or store a register.  The first argument is the\n    register and the second is the stack slot.  */\n typedef void (*mips_save_restore_fn) (rtx, rtx);\n@@ -325,9 +356,11 @@ static rtx mips_expand_builtin (tree, rtx, rtx, enum machine_mode, int);\n static void mips_init_builtins (void);\n static rtx mips_expand_builtin_direct (enum insn_code, rtx, tree);\n static rtx mips_expand_builtin_movtf (enum mips_builtin_type,\n-\t\t\t\t      enum insn_code, rtx, tree);\n+\t\t\t\t      enum insn_code, enum mips_fp_condition,\n+\t\t\t\t      rtx, tree);\n static rtx mips_expand_builtin_compare (enum mips_builtin_type,\n-\t\t\t\t\tenum insn_code, rtx, tree);\n+\t\t\t\t\tenum insn_code, enum mips_fp_condition,\n+\t\t\t\t\trtx, tree);\n \n /* Structure to be filled in by compute_frame_size with register\n    save masks, and offsets for the current function.  */\n@@ -4586,31 +4619,6 @@ mips_debugger_offset (rtx addr, HOST_WIDE_INT offset)\n   return offset;\n }\n \f\n-/* A helper function for print_operand.  This prints out a floating point\n-   condition code register.  OP is the operand we are printing.  CODE is the\n-   rtx code of OP.  ALIGN is the required register alignment for OP.  OFFSET\n-   is the index into operand for multiple register operands.  If IGNORE is\n-   true, then we only print the register name if it isn't fcc0, and we\n-   follow it with a comma.  */\n-\n-static void\n-print_fcc_operand (FILE *file, rtx op, enum rtx_code code,\n-\t\t   int align, int offset, int ignore)\n-{\n-  int regnum;\n-\n-  if (code != REG)\n-    abort ();\n-\n-  regnum = REGNO (op);\n-  if (!ST_REG_P (regnum)\n-      || (regnum - ST_REG_FIRST) % align != 0)\n-    abort ();\n-\n-  if (!ignore || regnum != ST_REG_FIRST)\n-    fprintf (file, \"%s%s\", reg_names[regnum+offset], (ignore ? \",\" : \"\"));\n-}\n-\n /* Implement the PRINT_OPERAND macro.  The MIPS-specific operand codes are:\n \n    'X'  OP is CONST_INT, prints 32 bits in hexadecimal format = \"0x%08x\",\n@@ -4628,13 +4636,9 @@ print_fcc_operand (FILE *file, rtx op, enum rtx_code code,\n    'T'  print 'f' for (eq:CC ...), 't' for (ne:CC ...),\n \t      'z' for (eq:?I ...), 'n' for (ne:?I ...).\n    't'  like 'T', but with the EQ/NE cases reversed\n-   'Z'  print register and a comma, but print nothing for $fcc0\n+   'Y'  for a CONST_INT X, print mips_fp_conditions[X]\n+   'Z'  print the operand and a comma for ISA_HAS_8CC, otherwise print nothing\n    'R'  print the reloc associated with LO_SUM\n-   'V'  Check if the fcc register number divided by 4 is zero.  Then print \n-        the fcc register plus 2.\n-   'v'  Check if the fcc register number divided by 4 is zero.  Then print \n-        the fcc register.\n-   'Q'  print the fcc register.\n \n    The punctuation characters are:\n \n@@ -4866,17 +4870,24 @@ print_operand (FILE *file, rtx op, int letter)\n   else if (letter == 'R')\n     print_operand_reloc (file, op, mips_lo_relocs);\n \n-  else if (letter == 'Z')\n-    print_fcc_operand (file, op, code, 1, 0, 1);\n-\n-  else if (letter == 'V')\n-    print_fcc_operand (file, op, code, 4, 2, 0);\n-\n-  else if (letter == 'v')\n-    print_fcc_operand (file, op, code, 4, 0, 0);\n+  else if (letter == 'Y')\n+    {\n+      if (GET_CODE (op) == CONST_INT\n+\t  && ((unsigned HOST_WIDE_INT) INTVAL (op)\n+\t      < ARRAY_SIZE (mips_fp_conditions)))\n+\tfputs (mips_fp_conditions[INTVAL (op)], file);\n+      else\n+\toutput_operand_lossage (\"invalid %%Y value\");\n+    }\n \n-  else if (letter == 'Q')\n-    print_fcc_operand (file, op, code, 1, 0, 0);\n+  else if (letter == 'Z')\n+    {\n+      if (ISA_HAS_8CC)\n+\t{\n+\t  print_operand (file, op, 0);\n+\t  fputc (',', file);\n+\t}\n+    }\n \n   else if (code == REG || code == SUBREG)\n     {\n@@ -9274,6 +9285,9 @@ struct builtin_description\n      for more information.  */\n   enum insn_code icode;\n \n+  /* The floating-point comparison code to use with ICODE, if any.  */\n+  enum mips_fp_condition cond;\n+\n   /* The name of the builtin function.  */\n   const char *name;              \n \n@@ -9290,60 +9304,69 @@ struct builtin_description\n /* Define a MIPS_BUILTIN_DIRECT function for instruction CODE_FOR_mips_<INSN>.\n    FUNCTION_TYPE and TARGET_FLAGS are builtin_description fields.  */\n #define DIRECT_BUILTIN(INSN, FUNCTION_TYPE, TARGET_FLAGS)\t\t\\\n-  { CODE_FOR_mips_ ## INSN, \"__builtin_mips_\" #INSN,\t\t\t\\\n+  { CODE_FOR_mips_ ## INSN, 0, \"__builtin_mips_\" #INSN,\t\t\t\\\n     MIPS_BUILTIN_DIRECT, FUNCTION_TYPE, TARGET_FLAGS }\n \n-/* Define builtins for scalar comparison instructions CODE_FOR_mips_<INSN>_s\n-   and CODE_FOR_mips_<INSN>_d, both of which require TARGET_FLAGS.  */\n-#define CMP_SCALAR_BUILTINS(INSN, TARGET_FLAGS)\t\t\t\t\\\n-  { CODE_FOR_mips_ ## INSN ## _s, \"__builtin_mips_\" #INSN \"_s\",\t\t\\\n+/* Define __builtin_mips_<INSN>_<COND>_{s,d}, both of which require\n+   TARGET_FLAGS.  */\n+#define CMP_SCALAR_BUILTINS(INSN, COND, TARGET_FLAGS)\t\t\t\\\n+  { CODE_FOR_mips_ ## INSN ## _cond_s, MIPS_FP_COND_ ## COND,\t\t\\\n+    \"__builtin_mips_\" #INSN \"_\" #COND \"_s\",\t\t\t\t\\\n     MIPS_BUILTIN_CMP_SINGLE, MIPS_INT_FTYPE_SF_SF, TARGET_FLAGS },\t\\\n-  { CODE_FOR_mips_ ## INSN ## _d, \"__builtin_mips_\" #INSN \"_d\",\t\t\\\n+  { CODE_FOR_mips_ ## INSN ## _cond_d, MIPS_FP_COND_ ## COND,\t\t\\\n+    \"__builtin_mips_\" #INSN \"_\" #COND \"_d\",\t\t\t\t\\\n     MIPS_BUILTIN_CMP_SINGLE, MIPS_INT_FTYPE_DF_DF, TARGET_FLAGS }\n \n-/* Define builtins for PS comparison instruction CODE_FOR_mips_<INSN>_ps.\n+/* Define __builtin_mips_{any,all,upper,lower}_<INSN>_<COND>_ps.\n    The lower and upper forms require TARGET_FLAGS while the any and all\n    forms require MASK_MIPS3D.  */\n-#define CMP_PS_BUILTINS(INSN, TARGET_FLAGS)\t\t\t\t\\\n-  { CODE_FOR_mips_ ## INSN ## _ps, \"__builtin_mips_any_\" #INSN \"_ps\",\t\\\n+#define CMP_PS_BUILTINS(INSN, COND, TARGET_FLAGS)\t\t\t\\\n+  { CODE_FOR_mips_ ## INSN ## _cond_ps, MIPS_FP_COND_ ## COND,\t\t\\\n+    \"__builtin_mips_any_\" #INSN \"_\" #COND \"_ps\",\t\t\t\\\n     MIPS_BUILTIN_CMP_ANY, MIPS_INT_FTYPE_V2SF_V2SF, MASK_MIPS3D },\t\\\n-  { CODE_FOR_mips_ ## INSN ## _ps, \"__builtin_mips_all_\" #INSN \"_ps\",\t\\\n+  { CODE_FOR_mips_ ## INSN ## _cond_ps, MIPS_FP_COND_ ## COND,\t\t\\\n+    \"__builtin_mips_all_\" #INSN \"_\" #COND \"_ps\",\t\t\t\\\n     MIPS_BUILTIN_CMP_ALL, MIPS_INT_FTYPE_V2SF_V2SF, MASK_MIPS3D },\t\\\n-  { CODE_FOR_mips_ ## INSN ## _ps, \"__builtin_mips_lower_\" #INSN \"_ps\",\t\\\n+  { CODE_FOR_mips_ ## INSN ## _cond_ps, MIPS_FP_COND_ ## COND,\t\t\\\n+    \"__builtin_mips_lower_\" #INSN \"_\" #COND \"_ps\",\t\t\t\\\n     MIPS_BUILTIN_CMP_LOWER, MIPS_INT_FTYPE_V2SF_V2SF, TARGET_FLAGS },\t\\\n-  { CODE_FOR_mips_ ## INSN ## _ps, \"__builtin_mips_upper_\" #INSN \"_ps\",\t\\\n+  { CODE_FOR_mips_ ## INSN ## _cond_ps, MIPS_FP_COND_ ## COND,\t\t\\\n+    \"__builtin_mips_upper_\" #INSN \"_\" #COND \"_ps\",\t\t\t\\\n     MIPS_BUILTIN_CMP_UPPER, MIPS_INT_FTYPE_V2SF_V2SF, TARGET_FLAGS }\n \n-/* Define builtins for instruction CODE_FOR_mips_<INSN>_4s, which compares\n-   two pairs of V2SF vectors.  The functions require MASK_MIPS3D.  */\n-#define CMP_4S_BUILTINS(INSN)\t\t\t\t\t\t\\\n-  { CODE_FOR_mips_ ## INSN ## _4s, \"__builtin_mips_any_\" #INSN \"_4s\",\t\\\n+/* Define __builtin_mips_{any,all}_<INSN>_<COND>_4s.  The functions\n+   require MASK_MIPS3D.  */\n+#define CMP_4S_BUILTINS(INSN, COND)\t\t\t\t\t\\\n+  { CODE_FOR_mips_ ## INSN ## _cond_4s, MIPS_FP_COND_ ## COND,\t\t\\\n+    \"__builtin_mips_any_\" #INSN \"_\" #COND \"_4s\",\t\t\t\\\n     MIPS_BUILTIN_CMP_ANY, MIPS_INT_FTYPE_V2SF_V2SF_V2SF_V2SF,\t\t\\\n     MASK_MIPS3D },\t\t\t\t\t\t\t\\\n-  { CODE_FOR_mips_ ## INSN ## _4s, \"__builtin_mips_all_\" #INSN \"_4s\",\t\\\n+  { CODE_FOR_mips_ ## INSN ## _cond_4s, MIPS_FP_COND_ ## COND,\t\t\\\n+    \"__builtin_mips_all_\" #INSN \"_\" #COND \"_4s\",\t\t\t\\\n     MIPS_BUILTIN_CMP_ALL, MIPS_INT_FTYPE_V2SF_V2SF_V2SF_V2SF,\t\t\\\n     MASK_MIPS3D }\n \n-/* Define movt and movf builtins that use CODE_FOR_mips_<INSN>_ps as\n-   the comparison instruction.  The comparison instruction requires\n-   TARGET_FLAGS.  */\n-#define MOVTF_BUILTINS(INSN, TARGET_FLAGS)\t\t\t\t\\\n-  { CODE_FOR_mips_ ## INSN ## _ps, \"__builtin_mips_movt_\" #INSN \"_ps\",\t\\\n+/* Define __builtin_mips_mov{t,f}_<INSN>_<COND>_ps.  The comparison\n+   instruction requires TARGET_FLAGS.  */\n+#define MOVTF_BUILTINS(INSN, COND, TARGET_FLAGS)\t\t\t\\\n+  { CODE_FOR_mips_ ## INSN ## _cond_ps, MIPS_FP_COND_ ## COND,\t\t\\\n+    \"__builtin_mips_movt_\" #INSN \"_\" #COND \"_ps\",\t\t\t\\\n     MIPS_BUILTIN_MOVT, MIPS_V2SF_FTYPE_V2SF_V2SF_V2SF_V2SF,\t\t\\\n     TARGET_FLAGS },\t\t\t\t\t\t\t\\\n-  { CODE_FOR_mips_ ## INSN ## _ps, \"__builtin_mips_movf_\" #INSN \"_ps\",\t\\\n+  { CODE_FOR_mips_ ## INSN ## _cond_ps, MIPS_FP_COND_ ## COND,\t\t\\\n+    \"__builtin_mips_movf_\" #INSN \"_\" #COND \"_ps\",\t\t\t\\\n     MIPS_BUILTIN_MOVF, MIPS_V2SF_FTYPE_V2SF_V2SF_V2SF_V2SF,\t\t\\\n     TARGET_FLAGS }\n \n /* Define all the builtins related to c.cond.fmt condition COND.  */\n #define CMP_BUILTINS(COND)\t\t\t\t\t\t\\\n-  MOVTF_BUILTINS (c_ ## COND, MASK_PAIRED_SINGLE),\t\t\t\\\n-  MOVTF_BUILTINS (cabs_ ## COND, MASK_MIPS3D),\t\t\t\t\\\n-  CMP_SCALAR_BUILTINS (cabs_ ## COND, MASK_MIPS3D),\t\t\t\\\n-  CMP_PS_BUILTINS (c_ ## COND, MASK_PAIRED_SINGLE),\t\t\t\\\n-  CMP_PS_BUILTINS (cabs_ ## COND, MASK_MIPS3D),\t\t\t\t\\\n-  CMP_4S_BUILTINS (c_ ## COND),\t\t\t\t\t\t\\\n-  CMP_4S_BUILTINS (cabs_ ## COND)\n+  MOVTF_BUILTINS (c, COND, MASK_PAIRED_SINGLE),\t\t\t\t\\\n+  MOVTF_BUILTINS (cabs, COND, MASK_MIPS3D),\t\t\t\t\\\n+  CMP_SCALAR_BUILTINS (cabs, COND, MASK_MIPS3D),\t\t\t\\\n+  CMP_PS_BUILTINS (c, COND, MASK_PAIRED_SINGLE),\t\t\t\\\n+  CMP_PS_BUILTINS (cabs, COND, MASK_MIPS3D),\t\t\t\t\\\n+  CMP_4S_BUILTINS (c, COND),\t\t\t\t\t\t\\\n+  CMP_4S_BUILTINS (cabs, COND)\n \n /* __builtin_mips_abs_ps() maps to the standard absM2 pattern.  */\n #define CODE_FOR_mips_abs_ps CODE_FOR_absv2sf2\n@@ -9379,22 +9402,7 @@ static const struct builtin_description mips_bdesc[] =\n   DIRECT_BUILTIN (rsqrt2_d, MIPS_DF_FTYPE_DF_DF, MASK_MIPS3D),\n   DIRECT_BUILTIN (rsqrt2_ps, MIPS_V2SF_FTYPE_V2SF_V2SF, MASK_MIPS3D),\n \n-  CMP_BUILTINS (f),\n-  CMP_BUILTINS (un),\n-  CMP_BUILTINS (eq),\n-  CMP_BUILTINS (ueq),\n-  CMP_BUILTINS (olt),\n-  CMP_BUILTINS (ult),\n-  CMP_BUILTINS (ole),\n-  CMP_BUILTINS (ule),\n-  CMP_BUILTINS (sf),\n-  CMP_BUILTINS (ngle),\n-  CMP_BUILTINS (seq),\n-  CMP_BUILTINS (ngl),\n-  CMP_BUILTINS (lt),\n-  CMP_BUILTINS (nge),\n-  CMP_BUILTINS (le),\n-  CMP_BUILTINS (ngt)\n+  MIPS_FP_CONDITIONS (CMP_BUILTINS)\n };\n \n \n@@ -9460,14 +9468,16 @@ mips_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n \n     case MIPS_BUILTIN_MOVT:\n     case MIPS_BUILTIN_MOVF:\n-      return mips_expand_builtin_movtf (type, icode, target, arglist);\n+      return mips_expand_builtin_movtf (type, icode, mips_bdesc[fcode].cond,\n+\t\t\t\t\ttarget, arglist);\n \n     case MIPS_BUILTIN_CMP_ANY:\n     case MIPS_BUILTIN_CMP_ALL:\n     case MIPS_BUILTIN_CMP_UPPER:\n     case MIPS_BUILTIN_CMP_LOWER:\n     case MIPS_BUILTIN_CMP_SINGLE:\n-      return mips_expand_builtin_compare (type, icode, target, arglist);\n+      return mips_expand_builtin_compare (type, icode, mips_bdesc[fcode].cond,\n+\t\t\t\t\t  target, arglist);\n \n     default:\n       return 0;\n@@ -9587,21 +9597,22 @@ mips_expand_builtin_direct (enum insn_code icode, rtx target, tree arglist)\n }\n \n /* Expand a __builtin_mips_movt_*_ps() or __builtin_mips_movf_*_ps()\n-   function (TYPE says which).  ARGLIST is the list of arguments to\n-   the function and ICODE says which instruction should be used to\n-   compare the first two arguments.  TARGET, if nonnull, suggests a\n-   good place to put the result.  */\n+   function (TYPE says which).  ARGLIST is the list of arguments to the\n+   function, ICODE is the instruction that should be used to compare\n+   the first two arguments, and COND is the conditon it should test.\n+   TARGET, if nonnull, suggests a good place to put the result.  */\n \n static rtx\n-mips_expand_builtin_movtf (enum mips_builtin_type type, enum insn_code icode,\n+mips_expand_builtin_movtf (enum mips_builtin_type type,\n+\t\t\t   enum insn_code icode, enum mips_fp_condition cond,\n \t\t\t   rtx target, tree arglist)\n {\n   rtx cmp_result, op0, op1;\n \n   cmp_result = mips_prepare_builtin_target (icode, 0, 0);\n   op0 = mips_prepare_builtin_arg (icode, 1, &arglist);\n   op1 = mips_prepare_builtin_arg (icode, 2, &arglist);\n-  emit_insn (GEN_FCN (icode) (cmp_result, op0, op1));\n+  emit_insn (GEN_FCN (icode) (cmp_result, op0, op1, GEN_INT (cond)));\n \n   icode = CODE_FOR_mips_cond_move_tf_ps;\n   target = mips_prepare_builtin_target (icode, 0, target);\n@@ -9619,13 +9630,15 @@ mips_expand_builtin_movtf (enum mips_builtin_type type, enum insn_code icode,\n   return target;\n }\n \n-/* Expand a comparison builtin of type BUILTIN_TYPE.  ICODE is the code of\n-   the comparison instruction and ARGLIST is the list of function arguments.\n-   TARGET, if nonnull, suggests a good place to put the boolean result.  */\n+/* Expand a comparison builtin of type BUILTIN_TYPE.  ICODE is the code\n+   of the comparison instruction and COND is the condition it should test.\n+   ARGLIST is the list of function arguments and TARGET, if nonnull,\n+   suggests a good place to put the boolean result.  */\n \n static rtx\n mips_expand_builtin_compare (enum mips_builtin_type builtin_type,\n-\t\t\t     enum insn_code icode, rtx target, tree arglist)\n+\t\t\t     enum insn_code icode, enum mips_fp_condition cond,\n+\t\t\t     rtx target, tree arglist)\n {\n   rtx label1, label2, if_then_else;\n   rtx pat, cmp_result, ops[MAX_RECOG_OPERANDS];\n@@ -9637,17 +9650,18 @@ mips_expand_builtin_compare (enum mips_builtin_type builtin_type,\n \n   /* Prepare the operands to the comparison.  */\n   cmp_result = mips_prepare_builtin_target (icode, 0, 0);\n-  for (i = 1; i < insn_data[icode].n_operands; i++)\n+  for (i = 1; i < insn_data[icode].n_operands - 1; i++)\n     ops[i] = mips_prepare_builtin_arg (icode, i, &arglist);\n \n   switch (insn_data[icode].n_operands)\n     {\n-    case 3:\n-      pat = GEN_FCN (icode) (cmp_result, ops[1], ops[2]);\n+    case 4:\n+      pat = GEN_FCN (icode) (cmp_result, ops[1], ops[2], GEN_INT (cond));\n       break;\n \n-    case 5:\n-      pat = GEN_FCN (icode) (cmp_result, ops[1], ops[2], ops[3], ops[4]);\n+    case 6:\n+      pat = GEN_FCN (icode) (cmp_result, ops[1], ops[2],\n+\t\t\t     ops[3], ops[4], GEN_INT (cond));\n       break;\n \n     default:"}, {"sha": "037ee042e9b7f37f86f2df37fbf509af97e5a16b", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 12, "deletions": 43, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308cd611711b0cd8924c2a6081e7a50c75cc2d5a/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308cd611711b0cd8924c2a6081e7a50c75cc2d5a/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=308cd611711b0cd8924c2a6081e7a50c75cc2d5a", "patch": "@@ -53,54 +53,23 @@\n    ;; For MIPS Paired-Singled Floating Point Instructions.\n \n    (UNSPEC_MOVE_TF_PS\t\t200)\n-   (UNSPEC_C_F\t\t\t201)\n-   (UNSPEC_C_UN\t\t\t202)\n-   (UNSPEC_C_EQ\t\t\t203)\n-   (UNSPEC_C_UEQ\t\t204)\n-   (UNSPEC_C_OLT\t\t205)\n-   (UNSPEC_C_ULT\t\t206)\n-   (UNSPEC_C_OLE\t\t207)\n-   (UNSPEC_C_ULE\t\t208)\n-   (UNSPEC_C_SF\t\t\t209)\n-   (UNSPEC_C_NGLE\t\t210)\n-   (UNSPEC_C_SEQ\t\t211)\n-   (UNSPEC_C_NGL\t\t212)\n-   (UNSPEC_C_LT\t\t\t213)\n-   (UNSPEC_C_NGE\t\t214)\n-   (UNSPEC_C_LE\t\t\t215)\n-   (UNSPEC_C_NGT\t\t216)\n+   (UNSPEC_C\t\t\t201)\n \n    ;; MIPS64/MIPS32R2 alnv.ps\n-   (UNSPEC_ALNV_PS\t\t217)\n+   (UNSPEC_ALNV_PS\t\t202)\n \n    ;; MIPS-3D instructions\n+   (UNSPEC_CABS\t\t\t203)\n \n-   (UNSPEC_CABS_F\t\t218)\n-   (UNSPEC_CABS_UN\t\t219)\n-   (UNSPEC_CABS_EQ\t\t220)\n-   (UNSPEC_CABS_UEQ\t\t221)\n-   (UNSPEC_CABS_OLT\t\t222)\n-   (UNSPEC_CABS_ULT\t\t223)\n-   (UNSPEC_CABS_OLE\t\t224)\n-   (UNSPEC_CABS_ULE\t\t225)\n-   (UNSPEC_CABS_SF\t\t226)\n-   (UNSPEC_CABS_NGLE\t\t227)\n-   (UNSPEC_CABS_SEQ\t\t228)\n-   (UNSPEC_CABS_NGL\t\t229)\n-   (UNSPEC_CABS_LT\t\t230)\n-   (UNSPEC_CABS_NGE\t\t231)\n-   (UNSPEC_CABS_LE\t\t232)\n-   (UNSPEC_CABS_NGT\t\t233)\n-\n-   (UNSPEC_ADDR_PS\t\t234)\n-   (UNSPEC_CVT_PW_PS\t\t235)\n-   (UNSPEC_CVT_PS_PW\t\t236)\n-   (UNSPEC_MULR_PS\t\t237)\n-\n-   (UNSPEC_RSQRT1\t\t238)\n-   (UNSPEC_RSQRT2\t\t239)\n-   (UNSPEC_RECIP1\t\t240)\n-   (UNSPEC_RECIP2\t\t241)\n+   (UNSPEC_ADDR_PS\t\t204)\n+   (UNSPEC_CVT_PW_PS\t\t205)\n+   (UNSPEC_CVT_PS_PW\t\t206)\n+   (UNSPEC_MULR_PS\t\t207)\n+\n+   (UNSPEC_RSQRT1\t\t208)\n+   (UNSPEC_RSQRT2\t\t209)\n+   (UNSPEC_RECIP1\t\t210)\n+   (UNSPEC_RECIP2\t\t211)\n   ]\n )\n "}]}