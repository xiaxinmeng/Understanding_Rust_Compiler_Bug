{"sha": "79f512ffebee22885684ff63bc3d66e7e6db9b4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzlmNTEyZmZlYmVlMjI4ODU2ODRmZjYzYmMzZDY2ZTdlNmRiOWI0Yg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-03-27T08:07:49Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-03-27T08:07:49Z"}, "message": "re PR tree-optimization/80170 (SLP vectorization creates aligned access)\n\n2017-03-27  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/80170\n\t* tree-vect-data-refs.c (vect_compute_data_ref_alignment): Make\n\tsure DR/SCEV didnt fold in constants we do not see when looking\n\tat the reference base alignment.\n\n\t* gcc.dg/pr80170.c: New testcase.\n\nFrom-SVN: r246491", "tree": {"sha": "e2509265db26833fc9b5658703ccb50c1e0e2dc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2509265db26833fc9b5658703ccb50c1e0e2dc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79f512ffebee22885684ff63bc3d66e7e6db9b4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79f512ffebee22885684ff63bc3d66e7e6db9b4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79f512ffebee22885684ff63bc3d66e7e6db9b4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79f512ffebee22885684ff63bc3d66e7e6db9b4b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "672d9f8eab3e81bd80098fc5b16eac116eec7658", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/672d9f8eab3e81bd80098fc5b16eac116eec7658", "html_url": "https://github.com/Rust-GCC/gccrs/commit/672d9f8eab3e81bd80098fc5b16eac116eec7658"}], "stats": {"total": 69, "additions": 66, "deletions": 3}, "files": [{"sha": "8dcd897593514a13aa789d8acac5de538f26cb19", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79f512ffebee22885684ff63bc3d66e7e6db9b4b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79f512ffebee22885684ff63bc3d66e7e6db9b4b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=79f512ffebee22885684ff63bc3d66e7e6db9b4b", "patch": "@@ -1,3 +1,10 @@\n+2017-03-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/80170\n+\t* tree-vect-data-refs.c (vect_compute_data_ref_alignment): Make\n+\tsure DR/SCEV didnt fold in constants we do not see when looking\n+\tat the reference base alignment.\n+\n 2017-03-27  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/80171"}, {"sha": "0b04afeec541c2e1a149b0b707a080d31cd2e61d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79f512ffebee22885684ff63bc3d66e7e6db9b4b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79f512ffebee22885684ff63bc3d66e7e6db9b4b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=79f512ffebee22885684ff63bc3d66e7e6db9b4b", "patch": "@@ -1,3 +1,8 @@\n+2017-03-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/80170\n+\t* gcc.dg/pr80170.c: New testcase.\n+\n 2017-03-27  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/80171"}, {"sha": "5ffd866c5883c2d887d37c6e91709683d16a31be", "filename": "gcc/testsuite/gcc.dg/pr80170.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79f512ffebee22885684ff63bc3d66e7e6db9b4b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr80170.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79f512ffebee22885684ff63bc3d66e7e6db9b4b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr80170.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr80170.c?ref=79f512ffebee22885684ff63bc3d66e7e6db9b4b", "patch": "@@ -0,0 +1,42 @@\n+/* { dg-do run } */\n+/* { dg-options \"-fgimple -O2 -ftree-slp-vectorize\" } */\n+\n+struct  A\n+{\n+  void * a;\n+  void * b;\n+};\n+\n+struct __attribute__((aligned(16))) B\n+{\n+  void * pad;\n+  void * misaligned;\n+  void * pad2;\n+\n+  struct A a;\n+};\n+\n+__attribute__((noclone, noinline))\n+void __GIMPLE (startwith(\"slp\"))\n+NullB (void * misalignedPtr)\n+{\n+  struct B * b;\n+\n+  bb_2:\n+#if __SIZEOF_LONG__ == 8\n+  b_2 = misalignedPtr_1(D) + 18446744073709551608ul;\n+#else\n+  b_2 = misalignedPtr_1(D) + 4294967292ul;\n+#endif\n+  __MEM <struct B> (b_2).a.a = _Literal (void *) 0;\n+  __MEM <struct B> (b_2).a.b = _Literal (void *) 0;\n+  return;\n+\n+}\n+\n+int main()\n+{\n+  struct B b;\n+  NullB (&b.misaligned);\n+  return 0;\n+}"}, {"sha": "3d1d7e7f918b98a045b17276369ab6d5519891a3", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79f512ffebee22885684ff63bc3d66e7e6db9b4b/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79f512ffebee22885684ff63bc3d66e7e6db9b4b/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=79f512ffebee22885684ff63bc3d66e7e6db9b4b", "patch": "@@ -779,7 +779,7 @@ vect_compute_data_ref_alignment (struct data_reference *dr)\n   base = ref;\n   while (handled_component_p (base))\n     base = TREE_OPERAND (base, 0);\n-  unsigned int base_alignment;\n+  unsigned int base_alignment = 0;\n   unsigned HOST_WIDE_INT base_bitpos;\n   get_object_alignment_1 (base, &base_alignment, &base_bitpos);\n   /* As data-ref analysis strips the MEM_REF down to its base operand\n@@ -788,8 +788,17 @@ vect_compute_data_ref_alignment (struct data_reference *dr)\n      DR_BASE_ADDRESS.  */\n   if (TREE_CODE (base) == MEM_REF)\n     {\n-      base_bitpos -= mem_ref_offset (base).to_short_addr () * BITS_PER_UNIT;\n-      base_bitpos &= (base_alignment - 1);\n+      /* Note all this only works if DR_BASE_ADDRESS is the same as\n+\t MEM_REF operand zero, otherwise DR/SCEV analysis might have factored\n+\t in other offsets.  We need to rework DR to compute the alingment\n+\t of DR_BASE_ADDRESS as long as all information is still available.  */\n+      if (operand_equal_p (TREE_OPERAND (base, 0), base_addr, 0))\n+\t{\n+\t  base_bitpos -= mem_ref_offset (base).to_short_addr () * BITS_PER_UNIT;\n+\t  base_bitpos &= (base_alignment - 1);\n+\t}\n+      else\n+\tbase_bitpos = BITS_PER_UNIT;\n     }\n   if (base_bitpos != 0)\n     base_alignment = base_bitpos & -base_bitpos;"}]}