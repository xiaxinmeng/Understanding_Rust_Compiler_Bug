{"sha": "043fdfc83e4f2e5d2b355df7ee722fd118c97e5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQzZmRmYzgzZTRmMmU1ZDJiMzU1ZGY3ZWU3MjJmZDExOGM5N2U1Yw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2004-07-16T17:06:56Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2004-07-16T17:06:56Z"}, "message": "revert: cp-lang.c (cxx_types_compatible_p): To the middle-end, references and pointers are compatible.\n\nrevert:\n        * cp-lang.c (cxx_types_compatible_p): To the middle-end,\n        references and pointers are compatible.\n\nFrom-SVN: r84820", "tree": {"sha": "d5ceb1a918139fa3424cc2377ba90dfcfde50d27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5ceb1a918139fa3424cc2377ba90dfcfde50d27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/043fdfc83e4f2e5d2b355df7ee722fd118c97e5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/043fdfc83e4f2e5d2b355df7ee722fd118c97e5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/043fdfc83e4f2e5d2b355df7ee722fd118c97e5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/043fdfc83e4f2e5d2b355df7ee722fd118c97e5c/comments", "author": null, "committer": null, "parents": [{"sha": "11368579a1469381e9d48b743e7462d9f20e9fba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11368579a1469381e9d48b743e7462d9f20e9fba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11368579a1469381e9d48b743e7462d9f20e9fba"}], "stats": {"total": 21, "additions": 1, "deletions": 20}, "files": [{"sha": "189ff972bbd828c3a0baabc1c1392c1a795fe3d0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/043fdfc83e4f2e5d2b355df7ee722fd118c97e5c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/043fdfc83e4f2e5d2b355df7ee722fd118c97e5c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=043fdfc83e4f2e5d2b355df7ee722fd118c97e5c", "patch": "@@ -60,11 +60,6 @@\n \t(add_conversions): Likewise.\n \t* semantics.c (finish_member_declaration): Adjust call to add_method.\n \n-2004-07-15  Jason Merrill  <jason@redhat.com>\n-\n-\t* cp-lang.c (cxx_types_compatible_p): To the middle-end,\n-\treferences and pointers are compatible.\n-\n 2004-07-15  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* decl.c (xref_basetypes): Refactor."}, {"sha": "5f38fbb10257e8951f18d7ad9f96830ae36a2015", "filename": "gcc/cp/cp-lang.c", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/043fdfc83e4f2e5d2b355df7ee722fd118c97e5c/gcc%2Fcp%2Fcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/043fdfc83e4f2e5d2b355df7ee722fd118c97e5c/gcc%2Fcp%2Fcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-lang.c?ref=043fdfc83e4f2e5d2b355df7ee722fd118c97e5c", "patch": "@@ -317,23 +317,9 @@ cp_var_mod_type_p (tree type, tree fn)\n   return false;\n }\n \n-/* This compares two types for equivalence (\"compatible\" in C-based languages).\n-   This routine should only return 1 if it is sure.  It should not be used\n-   in contexts where erroneously returning 0 causes problems.  */\n-\n static int cxx_types_compatible_p (tree x, tree y)\n {\n-  if (same_type_ignoring_top_level_qualifiers_p (x, y))\n-    return 1;\n-\n-  /* Once we get to the middle-end, references and pointers are\n-     interchangeable.  FIXME should we try to replace all references with\n-     pointers?  */\n-  if (POINTER_TYPE_P (x) && POINTER_TYPE_P (y)\n-      && same_type_p (TREE_TYPE (x), TREE_TYPE (y)))\n-    return 1;\n-\n-  return 0;\n+  return same_type_ignoring_top_level_qualifiers_p (x, y);\n }\n \n /* Construct a C++-aware pretty-printer for CONTEXT.  It is assumed"}]}