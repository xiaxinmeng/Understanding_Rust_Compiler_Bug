{"sha": "ea1135b83e3c021e45af01ed4cdc5149cd676933", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWExMTM1YjgzZTNjMDIxZTQ1YWYwMWVkNGNkYzUxNDljZDY3NjkzMw==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2017-01-06T10:40:04Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-06T10:40:04Z"}, "message": "sem_prag.adb, [...]: Minor typo fixes.\n\n2017-01-06  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_prag.adb, rtsfind.adb, sem_util.adb: Minor typo fixes.\n\nFrom-SVN: r244127", "tree": {"sha": "21465567ae34a1f4cb181a6a1e4236c272866fb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21465567ae34a1f4cb181a6a1e4236c272866fb1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea1135b83e3c021e45af01ed4cdc5149cd676933", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea1135b83e3c021e45af01ed4cdc5149cd676933", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea1135b83e3c021e45af01ed4cdc5149cd676933", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea1135b83e3c021e45af01ed4cdc5149cd676933/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "442d1abbc4915d78e2309392b126443fe54c6b37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442d1abbc4915d78e2309392b126443fe54c6b37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/442d1abbc4915d78e2309392b126443fe54c6b37"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "74082655728d176de8c5a457cc1b20b7f5f6f1eb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1135b83e3c021e45af01ed4cdc5149cd676933/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1135b83e3c021e45af01ed4cdc5149cd676933/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ea1135b83e3c021e45af01ed4cdc5149cd676933", "patch": "@@ -1,3 +1,7 @@\n+2017-01-06  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_prag.adb, rtsfind.adb, sem_util.adb: Minor typo fixes.\n+\n 2017-01-06  Tristan Gingold  <gingold@adacore.com>\n \n \t* ada.ads, a-unccon.ads: Add pragma No_Elaboration_Code_All."}, {"sha": "d6e76cfbe287c7b71c655f563b5cb10e403f0ae3", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1135b83e3c021e45af01ed4cdc5149cd676933/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1135b83e3c021e45af01ed4cdc5149cd676933/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=ea1135b83e3c021e45af01ed4cdc5149cd676933", "patch": "@@ -1351,7 +1351,7 @@ package body Rtsfind is\n       --  is System. If so, return the value from the already compiled\n       --  declaration and otherwise do a regular find.\n \n-      --  Not pleasant, but these kinds of annoying recursion senarios when\n+      --  Not pleasant, but these kinds of annoying recursion scenarios when\n       --  writing an Ada compiler in Ada have to be broken somewhere.\n \n       if Present (Main_Unit_Entity)"}, {"sha": "9b773269ee8c4d428db4bdf8f39ebb60d792cfd5", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1135b83e3c021e45af01ed4cdc5149cd676933/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1135b83e3c021e45af01ed4cdc5149cd676933/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ea1135b83e3c021e45af01ed4cdc5149cd676933", "patch": "@@ -17728,8 +17728,8 @@ package body Sem_Prag is\n \n             end if;\n \n-            --  Manually subsitute the expression value of the pragma argument\n-            --  if it not an integer literally because this is not taken care\n+            --  Manually substitute the expression value of the pragma argument\n+            --  if it's not an integer literal because this is not taken care\n             --  of automatically elsewhere.\n \n             if Nkind (Arg) /= N_Integer_Literal then"}, {"sha": "6055e82d4edd1135b309bdf6b9b4e93e45d5cb4c", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1135b83e3c021e45af01ed4cdc5149cd676933/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1135b83e3c021e45af01ed4cdc5149cd676933/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=ea1135b83e3c021e45af01ed4cdc5149cd676933", "patch": "@@ -8359,8 +8359,8 @@ package body Sem_Util is\n       Prag : constant Entity_Id := Get_Pragma (Id, Pragma_Max_Queue_Length);\n \n    begin\n-      --  A value of 0 represents no maximum specified and entries and entry\n-      --  families with no Max_Queue_Length aspect or pragma defaults to it.\n+      --  A value of 0 represents no maximum specified, and entries and entry\n+      --  families with no Max_Queue_Length aspect or pragma default to it.\n \n       if not Has_Max_Queue_Length (Id) or else not Present (Prag) then\n          return Uint_0;"}]}