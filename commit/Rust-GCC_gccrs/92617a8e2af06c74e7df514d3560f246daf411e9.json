{"sha": "92617a8e2af06c74e7df514d3560f246daf411e9", "node_id": "C_kwDOANBUbNoAKDkyNjE3YThlMmFmMDZjNzRlN2RmNTE0ZDM1NjBmMjQ2ZGFmNDExZTk", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2021-11-10T12:02:39Z"}, "committer": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2021-11-10T12:05:50Z"}, "message": "middle-end: Fix signbit tests when ran on ISA with support for masks.\n\nThese test don't work on vector ISAs where the truth\ntype don't match the vector mode of the operation.\n\nHowever I still want the tests to run on these\narchitectures but just turn off the ISA modes that\nenable masks.\n\nThis thus turns off SVE is it's on and turns off\nAVX512 if it's on.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/signbit-2.c: Turn off masks.\n\t* gcc.dg/signbit-5.c: Likewise.", "tree": {"sha": "f7c0dbf4aac16995b48fcbbc160f12a117f2e7dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7c0dbf4aac16995b48fcbbc160f12a117f2e7dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92617a8e2af06c74e7df514d3560f246daf411e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92617a8e2af06c74e7df514d3560f246daf411e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92617a8e2af06c74e7df514d3560f246daf411e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92617a8e2af06c74e7df514d3560f246daf411e9/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5cfa174e08e4964703387aa7de5ece448cc660b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cfa174e08e4964703387aa7de5ece448cc660b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cfa174e08e4964703387aa7de5ece448cc660b8"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "d8501e9b7a2d82b511ad0b3a44c0121d635972c0", "filename": "gcc/testsuite/gcc.dg/signbit-2.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92617a8e2af06c74e7df514d3560f246daf411e9/gcc%2Ftestsuite%2Fgcc.dg%2Fsignbit-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92617a8e2af06c74e7df514d3560f246daf411e9/gcc%2Ftestsuite%2Fgcc.dg%2Fsignbit-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsignbit-2.c?ref=92617a8e2af06c74e7df514d3560f246daf411e9", "patch": "@@ -1,6 +1,10 @@\n /* { dg-do assemble } */\n /* { dg-options \"-O3 --save-temps -fdump-tree-optimized\" } */\n \n+/* This test does not work when the truth type does not match vector type.  */\n+/* { dg-additional-options \"-mno-avx512f\" { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-additional-options \"-march=armv8-a\" { target aarch64_sve } } */\n+\n #include <stdint.h>\n \n void fun1(int32_t *x, int n)\n@@ -15,5 +19,5 @@ void fun2(int32_t *x, int n)\n       x[i] = (-x[i]) >> 30;\n }\n \n-/* { dg-final { scan-tree-dump-times {\\s+>\\s+\\{ 0, 0, 0, 0 \\}} 1 optimized } } */\n+/* { dg-final { scan-tree-dump {\\s+>\\s+\\{ 0, 0, 0(, 0)+ \\}} optimized } } */\n /* { dg-final { scan-tree-dump-not {\\s+>>\\s+31} optimized } } */"}, {"sha": "2b119cdfda7d2888f914633c809b0aa7da5244b7", "filename": "gcc/testsuite/gcc.dg/signbit-5.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92617a8e2af06c74e7df514d3560f246daf411e9/gcc%2Ftestsuite%2Fgcc.dg%2Fsignbit-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92617a8e2af06c74e7df514d3560f246daf411e9/gcc%2Ftestsuite%2Fgcc.dg%2Fsignbit-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsignbit-5.c?ref=92617a8e2af06c74e7df514d3560f246daf411e9", "patch": "@@ -1,6 +1,11 @@\n /* { dg-do run } */\n /* { dg-options \"-O3\" } */\n \n+/* This test does not work when the truth type does not match vector type.  */\n+/* { dg-additional-options \"-mno-avx512f\" { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-additional-options \"-march=armv8-a\" { target aarch64_sve } } */\n+\n+\n #include <stdint.h>\n #include <limits.h>\n #include <stdio.h>"}]}