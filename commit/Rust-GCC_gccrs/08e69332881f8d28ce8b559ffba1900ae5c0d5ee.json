{"sha": "08e69332881f8d28ce8b559ffba1900ae5c0d5ee", "node_id": "C_kwDOANBUbNoAKDA4ZTY5MzMyODgxZjhkMjhjZThiNTU5ZmZiYTE5MDBhZTVjMGQ1ZWU", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2022-03-27T18:07:39Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2022-03-27T18:54:09Z"}, "message": "x86: Use Yw constraint on *ssse3_pshufbv8qi3\n\nSince AVX512VL and AVX512BW are required for AVX512 VPSHUFB, replace the\n\"Yv\" register constraint with the \"Yw\" register constraint.\n\ngcc/\n\n\tPR target/105068\n\t* config/i386/sse.md (*ssse3_pshufbv8qi3): Replace \"Yv\" with\n\t\"Yw\".\n\ngcc/testsuite/\n\n\tPR target/105068\n\t* gcc.target/i386/pr105068.c: New test.", "tree": {"sha": "d686726fcd8b393c0731e8abc0eb2253800bbd56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d686726fcd8b393c0731e8abc0eb2253800bbd56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08e69332881f8d28ce8b559ffba1900ae5c0d5ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08e69332881f8d28ce8b559ffba1900ae5c0d5ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08e69332881f8d28ce8b559ffba1900ae5c0d5ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08e69332881f8d28ce8b559ffba1900ae5c0d5ee/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b78e0ce28b32a1b89886219c557506aeae6caffc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b78e0ce28b32a1b89886219c557506aeae6caffc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b78e0ce28b32a1b89886219c557506aeae6caffc"}], "stats": {"total": 53, "additions": 50, "deletions": 3}, "files": [{"sha": "58d2bd972ed9b1f3c73f9e7f72a977144e66db5d", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08e69332881f8d28ce8b559ffba1900ae5c0d5ee/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08e69332881f8d28ce8b559ffba1900ae5c0d5ee/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=08e69332881f8d28ce8b559ffba1900ae5c0d5ee", "patch": "@@ -20758,9 +20758,9 @@\n })\n \n (define_insn_and_split \"*ssse3_pshufbv8qi3\"\n-  [(set (match_operand:V8QI 0 \"register_operand\" \"=y,x,Yv\")\n-\t(unspec:V8QI [(match_operand:V8QI 1 \"register_operand\" \"0,0,Yv\")\n-\t\t      (match_operand:V8QI 2 \"register_mmxmem_operand\" \"ym,x,Yv\")\n+  [(set (match_operand:V8QI 0 \"register_operand\" \"=y,x,Yw\")\n+\t(unspec:V8QI [(match_operand:V8QI 1 \"register_operand\" \"0,0,Yw\")\n+\t\t      (match_operand:V8QI 2 \"register_mmxmem_operand\" \"ym,x,Yw\")\n \t\t      (match_operand:V4SI 4 \"reg_or_const_vector_operand\"\n \t\t\t\t\t  \"i,3,3\")]\n \t\t     UNSPEC_PSHUFB))"}, {"sha": "e5fb0338e3b40ece1ce094a8a94fa7323293f0ca", "filename": "gcc/testsuite/gcc.target/i386/pr105068.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08e69332881f8d28ce8b559ffba1900ae5c0d5ee/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr105068.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08e69332881f8d28ce8b559ffba1900ae5c0d5ee/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr105068.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr105068.c?ref=08e69332881f8d28ce8b559ffba1900ae5c0d5ee", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Og -march=x86-64 -mavx512vl -fsanitize=thread -fstack-protector-all\" } */\n+\n+typedef char __attribute__((__vector_size__(8))) C;\n+typedef int __attribute__((__vector_size__(8))) U;\n+typedef int __attribute__((__vector_size__(16))) V;\n+typedef int __attribute__((__vector_size__(32))) W;\n+typedef long long __attribute__((__vector_size__(64))) L;\n+typedef _Float64 __attribute__((__vector_size__(16))) F;\n+typedef _Float64 __attribute__((__vector_size__(64))) G;\n+C c;\n+int i;\n+\n+U foo0( W v256u32_0,\n+           W v256s32_0,\n+           V v128u64_0,\n+           V v128s64_0,\n+           W v256u64_0,\n+           W v256s64_0,\n+           L v512s64_0,\n+           W v256u128_0,\n+           W v256s128_0,\n+           V v128f32_0,\n+           W v256f32_0,\n+           F F_0,\n+           W v256f64_0,\n+           G G_0) {\n+  C U_1 = __builtin_ia32_pshufb(c, c);\n+  G_0 += __builtin_convertvector(v512s64_0, G);\n+  F F_1 = __builtin_shufflevector(F_0, G_0, 2, 2);\n+  W W_r = v256u32_0 + v256s32_0 + v256u64_0 + v256s64_0 + v256u128_0 +\n+                    v256s128_0 + v256f32_0 + v256f64_0;\n+  V V_r = ((union {\n+                      W a;\n+                      V b;\n+                    })W_r)\n+                        .b +\n+                    i + v128u64_0 + v128s64_0 + v128f32_0 +\n+                    (V)F_1;\n+  U U_r = ((union {\n+                    V a;\n+                    U b;\n+                  })V_r)\n+                      .b +\n+                  (U)U_1;\n+  return U_r;\n+}"}]}