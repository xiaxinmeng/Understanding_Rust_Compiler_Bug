{"sha": "3e1484c9ee7d218f9e07f13916cbeb0ada3164c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2UxNDg0YzllZTdkMjE4ZjllMDdmMTM5MTZjYmViMGFkYTMxNjRjMg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2010-10-27T02:48:42Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-10-27T02:48:42Z"}, "message": "Put back unspec_volatile on split_stack_return.\n\n2010-10-26  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/i386.md (split_stack_return): Put back\n\tunspec_volatile.\n\nFrom-SVN: r165995", "tree": {"sha": "66b71dbc59a39b0e99583879ddfc037783c9ffdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66b71dbc59a39b0e99583879ddfc037783c9ffdd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e1484c9ee7d218f9e07f13916cbeb0ada3164c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e1484c9ee7d218f9e07f13916cbeb0ada3164c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e1484c9ee7d218f9e07f13916cbeb0ada3164c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e1484c9ee7d218f9e07f13916cbeb0ada3164c2/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "78b9aee5d7cc67febd65b6ab5141887f8cc4e1b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78b9aee5d7cc67febd65b6ab5141887f8cc4e1b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78b9aee5d7cc67febd65b6ab5141887f8cc4e1b6"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "3686a295f6bc7a2b34e3662746da4b7e5f338bd8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1484c9ee7d218f9e07f13916cbeb0ada3164c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1484c9ee7d218f9e07f13916cbeb0ada3164c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e1484c9ee7d218f9e07f13916cbeb0ada3164c2", "patch": "@@ -1,3 +1,8 @@\n+2010-10-26  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/i386.md (split_stack_return): Put back\n+\tunspec_volatile.\n+\n 2010-10-26  Jan Hubicka  <jh@suse.cz>\n \n \t* ipa.c (process_references): Enqueue all referenced nodes;"}, {"sha": "475e530ae4ed444d6c9f9529c2e9de9428c6ce4b", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1484c9ee7d218f9e07f13916cbeb0ada3164c2/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1484c9ee7d218f9e07f13916cbeb0ada3164c2/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=3e1484c9ee7d218f9e07f13916cbeb0ada3164c2", "patch": "@@ -11751,8 +11751,8 @@\n ;; In order to support the call/return predictor, we use a return\n ;; instruction which the middle-end doesn't see.\n (define_insn \"split_stack_return\"\n-  [(unspec [(match_operand:SI 0 \"const_int_operand\" \"\")]\n-\t    UNSPEC_STACK_CHECK)]\n+  [(unspec_volatile [(match_operand:SI 0 \"const_int_operand\" \"\")]\n+\t\t    UNSPEC_STACK_CHECK)]\n   \"\"\n {\n   if (operands[0] == const0_rtx)"}]}