{"sha": "2946bd342db2de4c95a6b33481d05b0c9109d517", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk0NmJkMzQyZGIyZGU0Yzk1YTZiMzM0ODFkMDViMGM5MTA5ZDUxNw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-08-19T14:26:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-08-19T14:26:13Z"}, "message": "re PR tree-optimization/50067 (Wrong code with -fpredictive-commoning)\n\n2011-08-19  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/50067\n\t* tree-data-ref.c (dr_analyze_indices): Simplify, strip MEM_REF\n\toffset only if we accounted for it.\n\nFrom-SVN: r177903", "tree": {"sha": "344cbc6a924b0938fd46d8936660a382d88f1139", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/344cbc6a924b0938fd46d8936660a382d88f1139"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2946bd342db2de4c95a6b33481d05b0c9109d517", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2946bd342db2de4c95a6b33481d05b0c9109d517", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2946bd342db2de4c95a6b33481d05b0c9109d517", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2946bd342db2de4c95a6b33481d05b0c9109d517/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5dfe80ba7191cbb482530fbec77bffbdda659108", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dfe80ba7191cbb482530fbec77bffbdda659108", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dfe80ba7191cbb482530fbec77bffbdda659108"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "74b58ff59c2da11d6792cae631eeeb643f7492b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2946bd342db2de4c95a6b33481d05b0c9109d517/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2946bd342db2de4c95a6b33481d05b0c9109d517/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2946bd342db2de4c95a6b33481d05b0c9109d517", "patch": "@@ -1,3 +1,9 @@\n+2011-08-19  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/50067\n+\t* tree-data-ref.c (dr_analyze_indices): Simplify, strip MEM_REF\n+\toffset only if we accounted for it.\n+\n 2011-08-19  Andrew Stubbs  <ams@codesourcery.com>\n \n \t* config/arm/arm.md (maddhidi4): Remove '*' from name."}, {"sha": "f7c7ae5e45ae0d72a6b253196261e7fa6e5154b6", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2946bd342db2de4c95a6b33481d05b0c9109d517/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2946bd342db2de4c95a6b33481d05b0c9109d517/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=2946bd342db2de4c95a6b33481d05b0c9109d517", "patch": "@@ -863,28 +863,27 @@ dr_analyze_indices (struct data_reference *dr, loop_p nest, loop_p loop)\n     }\n \n   if (nest\n-      && (INDIRECT_REF_P (aref)\n-\t  || TREE_CODE (aref) == MEM_REF))\n+      && TREE_CODE (aref) == MEM_REF)\n     {\n       op = TREE_OPERAND (aref, 0);\n       access_fn = analyze_scalar_evolution (loop, op);\n       access_fn = instantiate_scev (before_loop, loop, access_fn);\n       base = initial_condition (access_fn);\n       split_constant_offset (base, &base, &off);\n-      if (TREE_CODE (aref) == MEM_REF)\n-\toff = size_binop (PLUS_EXPR, off,\n-\t\t\t  fold_convert (ssizetype, TREE_OPERAND (aref, 1)));\n+      if (!integer_zerop (TREE_OPERAND (aref, 1)))\n+\t{\n+\t  off = size_binop (PLUS_EXPR, off,\n+\t\t\t    fold_convert (ssizetype, TREE_OPERAND (aref, 1)));\n+\t  TREE_OPERAND (aref, 1)\n+\t    = build_int_cst (TREE_TYPE (TREE_OPERAND (aref, 1)), 0);\n+\t}\n       access_fn = chrec_replace_initial_condition (access_fn,\n \t\t\tfold_convert (TREE_TYPE (base), off));\n \n       TREE_OPERAND (aref, 0) = base;\n       VEC_safe_push (tree, heap, access_fns, access_fn);\n     }\n \n-  if (TREE_CODE (aref) == MEM_REF)\n-    TREE_OPERAND (aref, 1)\n-      = build_int_cst (TREE_TYPE (TREE_OPERAND (aref, 1)), 0);\n-\n   if (TREE_CODE (ref) == MEM_REF\n       && TREE_CODE (TREE_OPERAND (ref, 0)) == ADDR_EXPR\n       && integer_zerop (TREE_OPERAND (ref, 1)))"}]}