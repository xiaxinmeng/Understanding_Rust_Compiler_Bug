{"sha": "bff948aa337807260344c83ac9079d6386410094", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZmOTQ4YWEzMzc4MDcyNjAzNDRjODNhYzkwNzlkNjM4NjQxMDA5NA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-28T07:46:23Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-28T07:46:23Z"}, "message": "i386: Fix ix86_fold_builtin shift folding [PR93418]\n\nThe following testcase is miscompiled, because the variable shift left\noperand, { -1, -1, -1, -1 } is represented as a VECTOR_CST with\nVECTOR_CST_NPATTERNS 1 and VECTOR_CST_NELTS_PER_PATTERN 1, so when\nwe call builder.new_unary_operation, builder.encoded_nelts () will be just 1\nand thus we encode the resulting vector as if all the elements were the\nsame.\nFor non-masked is_vshift, we could perhaps call builder.new_binary_operation\n(TREE_TYPE (args[0]), args[0], args[1], false), but then there are masked\nshifts, for non-is_vshift we could perhaps call it too but with args[2]\ninstead of args[1], but there is no builder.new_ternary_operation.\nAll this stuff is primarily for aarch64 anyway, on x86 we don't have any\nvariable length vectors, and it is not a big deal to compute all elements\nand just let builder.finalize () find the most efficient VECTOR_CST\nrepresentation of the vector.  So, instead of doing too much, this just\nkeeps using new_unary_operation only if only one VECTOR_CST is involved\n(i.e. non-masked shift by constant) and for the rest just compute all elts.\n\n2020-01-28  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/93418\n\t* config/i386/i386.c (ix86_fold_builtin) <do_shift>: If mask is not\n\t-1 or is_vshift is true, use new_vector with number of elts npatterns\n\trather than new_unary_operation.\n\n\t* gcc.target/i386/avx2-pr93418.c: New test.", "tree": {"sha": "b033aaaf56846dc0de6a6010fc24b1a12989810b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b033aaaf56846dc0de6a6010fc24b1a12989810b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bff948aa337807260344c83ac9079d6386410094", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bff948aa337807260344c83ac9079d6386410094", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bff948aa337807260344c83ac9079d6386410094", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bff948aa337807260344c83ac9079d6386410094/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c076c9642fd8877def0a0597ec7e4adfb5aa3b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c076c9642fd8877def0a0597ec7e4adfb5aa3b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c076c9642fd8877def0a0597ec7e4adfb5aa3b3"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "3489428938c4a82aa4f1fd076e02ebb56a825add", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bff948aa337807260344c83ac9079d6386410094/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bff948aa337807260344c83ac9079d6386410094/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bff948aa337807260344c83ac9079d6386410094", "patch": "@@ -1,5 +1,10 @@\n 2020-01-28  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/93418\n+\t* config/i386/i386.c (ix86_fold_builtin) <do_shift>: If mask is not\n+\t-1 or is_vshift is true, use new_vector with number of elts npatterns\n+\trather than new_unary_operation.\n+\n \tPR tree-optimization/93454\n \t* gimple-fold.c (fold_array_ctor_reference): Perform\n \telt_size.to_uhwi () just once, instead of calling it in every"}, {"sha": "ffda3e8fd21eb7cc2fcc61fca78a9fa42bb2bd9b", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bff948aa337807260344c83ac9079d6386410094/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bff948aa337807260344c83ac9079d6386410094/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=bff948aa337807260344c83ac9079d6386410094", "patch": "@@ -17278,8 +17278,13 @@ ix86_fold_builtin (tree fndecl, int n_args,\n \t\t    countt = build_int_cst (integer_type_node, count);\n \t\t}\n \t      tree_vector_builder builder;\n-\t      builder.new_unary_operation (TREE_TYPE (args[0]), args[0],\n-\t\t\t\t\t   false);\n+\t      if (mask != HOST_WIDE_INT_M1U || is_vshift)\n+\t\tbuilder.new_vector (TREE_TYPE (args[0]),\n+\t\t\t\t    TYPE_VECTOR_SUBPARTS (TREE_TYPE (args[0])),\n+\t\t\t\t    1);\n+\t      else\n+\t\tbuilder.new_unary_operation (TREE_TYPE (args[0]), args[0],\n+\t\t\t\t\t     false);\n \t      unsigned int cnt = builder.encoded_nelts ();\n \t      for (unsigned int i = 0; i < cnt; ++i)\n \t\t{"}, {"sha": "6518f7f2307863ac71790bfb677cbcbbe15e8c55", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bff948aa337807260344c83ac9079d6386410094/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bff948aa337807260344c83ac9079d6386410094/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bff948aa337807260344c83ac9079d6386410094", "patch": "@@ -1,5 +1,8 @@\n 2020-01-28  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/93418\n+\t* gcc.target/i386/avx2-pr93418.c: New test.\n+\n \tPR tree-optimization/93454\n \t* gcc.dg/pr93454.c: New test.\n "}, {"sha": "67ed33ddf9d1a4f20e5ec6451ab5c8caca89882b", "filename": "gcc/testsuite/gcc.target/i386/avx2-pr93418.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bff948aa337807260344c83ac9079d6386410094/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-pr93418.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bff948aa337807260344c83ac9079d6386410094/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-pr93418.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-pr93418.c?ref=bff948aa337807260344c83ac9079d6386410094", "patch": "@@ -0,0 +1,20 @@\n+/* PR target/93418 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx2 -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump-not \"link_error\" \"optimized\" } } */\n+\n+#include <x86intrin.h>\n+\n+void link_error (void);\n+\n+void\n+foo (void)\n+{\n+  __m128i a = _mm_set1_epi32 (0xffffffffU);\n+  __m128i b = _mm_setr_epi32 (16, 31, -34, 3);\n+  __m128i c = _mm_sllv_epi32 (a, b);\n+  __v4su d = (__v4su) c;\n+  if (d[0] != 0xffff0000U || d[1] != 0x80000000U\n+      || d[2] != 0 || d[3] != 0xfffffff8U)\n+    link_error ();\n+}"}]}