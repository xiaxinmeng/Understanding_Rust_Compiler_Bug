{"sha": "206b48e4e7fcc47d9877fe5aaae9eaecde21b3bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA2YjQ4ZTRlN2ZjYzQ3ZDk4NzdmZTVhYWFlOWVhZWNkZTIxYjNiZg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-10-17T16:58:45Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-10-17T16:58:45Z"}, "message": "re PR c++/58596 ([c++11] ICE with decltype in non-static data member initializer)\n\n/cp\n2013-10-17  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/58596\n\t* lambda.c (lambda_expr_this_capture): Handle NSDMIs in the\n\tcp_unevaluated_operand case.\n\n/testsuite\n2013-10-17  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/58596\n\t* g++.dg/cpp0x/lambda/lambda-nsdmi5.C: New\n\nFrom-SVN: r203780", "tree": {"sha": "f53ed8e96db4c070a9d795f2b68c14be414fba19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f53ed8e96db4c070a9d795f2b68c14be414fba19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/206b48e4e7fcc47d9877fe5aaae9eaecde21b3bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/206b48e4e7fcc47d9877fe5aaae9eaecde21b3bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/206b48e4e7fcc47d9877fe5aaae9eaecde21b3bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/206b48e4e7fcc47d9877fe5aaae9eaecde21b3bf/comments", "author": null, "committer": null, "parents": [{"sha": "f541a48127a1940dce8dc8f48d88ccb04aa2a31e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f541a48127a1940dce8dc8f48d88ccb04aa2a31e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f541a48127a1940dce8dc8f48d88ccb04aa2a31e"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "3ce68e8e75c00e548b2d0ba59d75b24d02972a70", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/206b48e4e7fcc47d9877fe5aaae9eaecde21b3bf/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/206b48e4e7fcc47d9877fe5aaae9eaecde21b3bf/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=206b48e4e7fcc47d9877fe5aaae9eaecde21b3bf", "patch": "@@ -1,3 +1,9 @@\n+2013-10-17  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/58596\n+\t* lambda.c (lambda_expr_this_capture): Handle NSDMIs in the\n+\tcp_unevaluated_operand case.\n+\n 2013-10-16  Jason Merrill  <jason@redhat.com>\n \n \t* pt.c (apply_late_template_attributes): Use"}, {"sha": "62812a50c85c0b261c853990bb9f11abe348ad07", "filename": "gcc/cp/lambda.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/206b48e4e7fcc47d9877fe5aaae9eaecde21b3bf/gcc%2Fcp%2Flambda.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/206b48e4e7fcc47d9877fe5aaae9eaecde21b3bf/gcc%2Fcp%2Flambda.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flambda.c?ref=206b48e4e7fcc47d9877fe5aaae9eaecde21b3bf", "patch": "@@ -628,7 +628,14 @@ lambda_expr_this_capture (tree lambda)\n   /* In unevaluated context this isn't an odr-use, so just return the\n      nearest 'this'.  */\n   if (cp_unevaluated_operand)\n-    return lookup_name (this_identifier);\n+    {\n+      /* In an NSDMI the fake 'this' pointer that we're using for\n+\t parsing is in scope_chain.  */\n+      if (LAMBDA_EXPR_EXTRA_SCOPE (lambda)\n+\t  && TREE_CODE (LAMBDA_EXPR_EXTRA_SCOPE (lambda)) == FIELD_DECL)\n+\treturn scope_chain->x_current_class_ptr;\n+      return lookup_name (this_identifier);\n+    }\n \n   /* Try to default capture 'this' if we can.  */\n   if (!this_capture"}, {"sha": "4c6c320c540fcd5622fdec5952f6c297f039e6bc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/206b48e4e7fcc47d9877fe5aaae9eaecde21b3bf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/206b48e4e7fcc47d9877fe5aaae9eaecde21b3bf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=206b48e4e7fcc47d9877fe5aaae9eaecde21b3bf", "patch": "@@ -1,3 +1,8 @@\n+2013-10-17  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/58596\n+\t* g++.dg/cpp0x/lambda/lambda-nsdmi5.C: New\n+\n 2013-10-17  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.target/aarch64/c-output-template.c: New testcase."}, {"sha": "1d2778fb5ac66f68e938fcaa636e96abd8e45135", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-nsdmi5.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/206b48e4e7fcc47d9877fe5aaae9eaecde21b3bf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-nsdmi5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/206b48e4e7fcc47d9877fe5aaae9eaecde21b3bf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-nsdmi5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-nsdmi5.C?ref=206b48e4e7fcc47d9877fe5aaae9eaecde21b3bf", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/58596\n+// { dg-do compile { target c++11 } }\n+\n+struct A\n+{\n+  int i = [] { return decltype(i)(); }();\n+};"}]}