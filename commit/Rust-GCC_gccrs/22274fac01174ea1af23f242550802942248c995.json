{"sha": "22274fac01174ea1af23f242550802942248c995", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIyNzRmYWMwMTE3NGVhMWFmMjNmMjQyNTUwODAyOTQyMjQ4Yzk5NQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2014-10-06T12:26:45Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-10-06T12:26:45Z"}, "message": "Makefile.am: Add new header.\n\n\t* include/Makefile.am: Add new header.\n\t* include/Makefile.in: Regenerate.\n\t* include/experimental/tuple: New\n\t* doc/xml/manual/status_cxx2014.xml: Update.\n\t* doc/html/manual/status.html: Regenerate.\n\t* testsuite/experimental/feat-lib-fund.cc: Test for new header.\n\t* testsuite/experimental/tuple/apply.cc: New.\n\nFrom-SVN: r215930", "tree": {"sha": "ef3250caf4cb90ca1d6279b70e3e63ca6ac65e15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef3250caf4cb90ca1d6279b70e3e63ca6ac65e15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22274fac01174ea1af23f242550802942248c995", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22274fac01174ea1af23f242550802942248c995", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22274fac01174ea1af23f242550802942248c995", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22274fac01174ea1af23f242550802942248c995/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1d62412c3e5e146a586106ccff7755c8b4a36a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1d62412c3e5e146a586106ccff7755c8b4a36a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1d62412c3e5e146a586106ccff7755c8b4a36a6"}], "stats": {"total": 146, "additions": 140, "deletions": 6}, "files": [{"sha": "9ebe1f7f4feecc6b9686da05856e417ac0f54e8a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22274fac01174ea1af23f242550802942248c995/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22274fac01174ea1af23f242550802942248c995/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=22274fac01174ea1af23f242550802942248c995", "patch": "@@ -1,3 +1,13 @@\n+2014-10-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/Makefile.am: Add new header.\n+\t* include/Makefile.in: Regenerate.\n+\t* include/experimental/tuple: New\n+\t* doc/xml/manual/status_cxx2014.xml: Update.\n+\t* doc/html/manual/status.html: Regenerate.\n+\t* testsuite/experimental/feat-lib-fund.cc: Test for new header.\n+\t* testsuite/experimental/tuple/apply.cc: New.\n+\n 2014-10-05  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \tPR libstdc++/63456"}, {"sha": "a90b435b5816eb42d60fcf90da37591ecb71ebad", "filename": "libstdc++-v3/doc/html/manual/status.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22274fac01174ea1af23f242550802942248c995/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22274fac01174ea1af23f242550802942248c995/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html?ref=22274fac01174ea1af23f242550802942248c995", "patch": "@@ -391,11 +391,11 @@\n \t<a class=\"link\" href=\"\" target=\"_top\">\n \t  N3905\n \t</a>\n-      </td><td align=\"left\">Faster string searching (Boyer-Moore et al.)</td><td align=\"left\">N</td><td align=\"left\">Library Fundamentals TS</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\">\n+      </td><td align=\"left\">Faster string searching (Boyer-Moore et al.)</td><td align=\"left\">N</td><td align=\"left\">Library Fundamentals TS</td></tr><tr><td align=\"left\">\n \t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n3915.pdf\" target=\"_top\">\n \t  N3915\n \t</a>\n-      </td><td align=\"left\">apply() call a function with arguments from a tuple</td><td align=\"left\">N</td><td align=\"left\">Library Fundamentals TS</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\">\n+      </td><td align=\"left\">apply() call a function with arguments from a tuple</td><td align=\"left\">Y</td><td align=\"left\">Library Fundamentals TS</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\">\n \t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n3916.pdf\" target=\"_top\">\n \t  N3916\n \t</a>"}, {"sha": "b7ed7ed72f640a8729ea448689120a1534f9399c", "filename": "libstdc++-v3/doc/xml/manual/status_cxx2014.xml", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22274fac01174ea1af23f242550802942248c995/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2014.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22274fac01174ea1af23f242550802942248c995/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2014.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2014.xml?ref=22274fac01174ea1af23f242550802942248c995", "patch": "@@ -353,14 +353,13 @@ not in any particular release.\n     </row>\n \n     <row>\n-      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n       <entry>\n \t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n3915.pdf\">\n \t  N3915\n \t</link>\n       </entry>\n       <entry>apply() call a function with arguments from a tuple</entry>\n-      <entry>N</entry>\n+      <entry>Y</entry>\n       <entry>Library Fundamentals TS</entry>\n     </row>\n "}, {"sha": "dee4a3fc6f8b9985f00969a4bb868c5ed8ad32a2", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22274fac01174ea1af23f242550802942248c995/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22274fac01174ea1af23f242550802942248c995/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=22274fac01174ea1af23f242550802942248c995", "patch": "@@ -642,7 +642,8 @@ experimental_headers = \\\n \t${experimental_srcdir}/any \\\n \t${experimental_srcdir}/optional \\\n \t${experimental_srcdir}/string_view \\\n-\t${experimental_srcdir}/string_view.tcc\n+\t${experimental_srcdir}/string_view.tcc \\\n+\t${experimental_srcdir}/tuple\n \n # This is the common subset of C++ files that all three \"C\" header models use.\n c_base_srcdir = $(C_INCLUDE_DIR)"}, {"sha": "83dcefbd2df5539c807b1fcd817725bdb0db4fe6", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22274fac01174ea1af23f242550802942248c995/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22274fac01174ea1af23f242550802942248c995/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=22274fac01174ea1af23f242550802942248c995", "patch": "@@ -908,7 +908,8 @@ experimental_headers = \\\n \t${experimental_srcdir}/any \\\n \t${experimental_srcdir}/optional \\\n \t${experimental_srcdir}/string_view \\\n-\t${experimental_srcdir}/string_view.tcc\n+\t${experimental_srcdir}/string_view.tcc \\\n+\t${experimental_srcdir}/tuple\n \n \n # This is the common subset of C++ files that all three \"C\" header models use."}, {"sha": "bbfbdfa52dce2a42e75d2124eeee4427113b15f9", "filename": "libstdc++-v3/include/experimental/tuple", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22274fac01174ea1af23f242550802942248c995/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22274fac01174ea1af23f242550802942248c995/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftuple?ref=22274fac01174ea1af23f242550802942248c995", "patch": "@@ -0,0 +1,70 @@\n+// <experimental/tuple> -*- C++ -*-\n+\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+/** @file experimental/tuple\n+ *  This is a TS C++ Library header.\n+ */\n+\n+#ifndef _GLIBCXX_EXPERIMENTAL_TUPLE\n+#define _GLIBCXX_EXPERIMENTAL_TUPLE 1\n+\n+#pragma GCC system_header\n+\n+#if __cplusplus <= 201103L\n+# include <bits/c++14_warning.h>\n+#else\n+\n+#include <tuple>\n+\n+namespace std _GLIBCXX_VISIBILITY(default)\n+{\n+namespace experimental\n+{\n+inline namespace fundamentals_v1\n+{\n+_GLIBCXX_BEGIN_NAMESPACE_VERSION\n+\n+  template <typename _Fn, typename _Tuple, std::size_t... _Idx>\n+    constexpr decltype(auto)\n+    __apply_impl(_Fn&& f, _Tuple&& t, std::index_sequence<_Idx...>)\n+    { return std::forward<_Fn>(f)(get<_Idx>(forward<_Tuple>(t))...); }\n+\n+  template <typename _Fn, typename _Tuple>\n+    constexpr decltype(auto)\n+    apply(_Fn&& f, _Tuple&& t)\n+    {\n+      using _Indices =\n+\tstd::make_index_sequence<std::tuple_size<std::decay_t<_Tuple>>::value>;\n+      return __apply_impl(std::forward<_Fn>(f), std::forward<_Tuple>(t),\n+\t\t\t  _Indices{});\n+    }\n+\n+_GLIBCXX_END_NAMESPACE_VERSION\n+} // namespace fundamentals_v1\n+} // namespace experimental\n+} // namespace std\n+\n+#endif // C++14\n+\n+#endif // _GLIBCXX_EXPERIMENTAL_TUPLE"}, {"sha": "0c73f097a10263fdd2fba8ad171cc5e633683c1d", "filename": "libstdc++-v3/testsuite/experimental/feat-lib-fund.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22274fac01174ea1af23f242550802942248c995/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffeat-lib-fund.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22274fac01174ea1af23f242550802942248c995/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffeat-lib-fund.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffeat-lib-fund.cc?ref=22274fac01174ea1af23f242550802942248c995", "patch": "@@ -23,3 +23,7 @@\n #if !__has_include(<experimental/string_view>)\n #  error \"<experimental/string_view>\"\n #endif\n+\n+#if !__has_include(<experimental/tuple>)\n+#  error \"<experimental/tuple>\"\n+#endif"}, {"sha": "170a8d9fad97d5422bb290c8f6cec2d5f0bc8427", "filename": "libstdc++-v3/testsuite/experimental/tuple/apply.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22274fac01174ea1af23f242550802942248c995/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ftuple%2Fapply.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22274fac01174ea1af23f242550802942248c995/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ftuple%2Fapply.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ftuple%2Fapply.cc?ref=22274fac01174ea1af23f242550802942248c995", "patch": "@@ -0,0 +1,49 @@\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++14\" }\n+\n+#include <experimental/tuple>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  auto t = std::make_tuple(1, '2', 3.0);\n+  std::experimental::apply( [&](int& i, char& c, double& d) {\n+      VERIFY(&i == &std::get<int>(t));\n+      VERIFY(&c == &std::get<char>(t));\n+      VERIFY(&d == &std::get<double>(t));\n+    }, t);\n+}\n+\n+constexpr int func(int i, int j) { return i + j; }\n+\n+void\n+test02()\n+{\n+  constexpr auto t = std::make_tuple(1, 2);\n+  constexpr int i = std::experimental::apply(func, t);\n+  VERIFY( i == 3 );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  test02();\n+}"}]}