{"sha": "15ab6f00bc3d5b60ab59205bc9e39d2b3e5273ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVhYjZmMDBiYzNkNWI2MGFiNTkyMDViYzllMzlkMmIzZTUyNzNjYQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2015-12-18T14:39:52Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2015-12-18T14:39:52Z"}, "message": "nvptx.c (worker_bcast_name, [...]): Delete.\n\n\t* config/nvptx/nvptx.c (worker_bcast_name, worker_red_name): Delete.\n\t(nvptx_option_override): Adjust worker symbol creation.\n\t(nvptx_gen_wcast): Wrap worker address in UNSPEC_TO_GENERIC.\n\t(write_worker_buffer): New.\n\t(nvptx_file_end): Call write_worker_buffer.\n\t* config/nvptx/nvptx.md (UNSPEC_SHARED_DATA): Delete.\n\t(worker_load<mode>, worker_store<mode>): Delete.\n\nFrom-SVN: r231818", "tree": {"sha": "d892fd5a06e9ff48981ee70fcaef02b75d59c374", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d892fd5a06e9ff48981ee70fcaef02b75d59c374"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15ab6f00bc3d5b60ab59205bc9e39d2b3e5273ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15ab6f00bc3d5b60ab59205bc9e39d2b3e5273ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15ab6f00bc3d5b60ab59205bc9e39d2b3e5273ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15ab6f00bc3d5b60ab59205bc9e39d2b3e5273ca/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b837da5a5d18c06e43d085a6ea88a2c5729efe07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b837da5a5d18c06e43d085a6ea88a2c5729efe07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b837da5a5d18c06e43d085a6ea88a2c5729efe07"}], "stats": {"total": 77, "additions": 32, "deletions": 45}, "files": [{"sha": "cb11d02bcce0ede2c997a4e1c742f3de3f621ccc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ab6f00bc3d5b60ab59205bc9e39d2b3e5273ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ab6f00bc3d5b60ab59205bc9e39d2b3e5273ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=15ab6f00bc3d5b60ab59205bc9e39d2b3e5273ca", "patch": "@@ -1,3 +1,13 @@\n+2015-12-18  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* config/nvptx/nvptx.c (worker_bcast_name, worker_red_name): Delete.\n+\t(nvptx_option_override): Adjust worker symbol creation.\n+\t(nvptx_gen_wcast): Wrap worker address in UNSPEC_TO_GENERIC.\n+\t(write_worker_buffer): New.\n+\t(nvptx_file_end): Call write_worker_buffer.\n+\t* config/nvptx/nvptx.md (UNSPEC_SHARED_DATA): Delete.\n+\t(worker_load<mode>, worker_store<mode>): Delete.\n+\n 2015-12-18  Richard Biener  <rguenther@suse.de>\n \n \tPR testsuite/68776"}, {"sha": "07d7cffe5d7a3090b062ae6ede6d9361e3d790c3", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 22, "deletions": 29, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ab6f00bc3d5b60ab59205bc9e39d2b3e5273ca/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ab6f00bc3d5b60ab59205bc9e39d2b3e5273ca/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=15ab6f00bc3d5b60ab59205bc9e39d2b3e5273ca", "patch": "@@ -128,14 +128,12 @@ static GTY((cache)) hash_table<tree_hasher> *needed_fndecls_htab;\n    shared across TUs (taking the largest size).  */\n static unsigned worker_bcast_size;\n static unsigned worker_bcast_align;\n-#define worker_bcast_name \"__worker_bcast\"\n static GTY(()) rtx worker_bcast_sym;\n \n /* Buffer needed for worker reductions.  This has to be distinct from\n    the worker broadcast array, as both may be live concurrently.  */\n static unsigned worker_red_size;\n static unsigned worker_red_align;\n-#define worker_red_name \"__worker_red\"\n static GTY(()) rtx worker_red_sym;\n \n /* Global lock variable, needed for 128bit worker & gang reductions.  */\n@@ -172,11 +170,11 @@ nvptx_option_override (void)\n   declared_libfuncs_htab\n     = hash_table<declared_libfunc_hasher>::create_ggc (17);\n \n-  worker_bcast_sym = gen_rtx_SYMBOL_REF (Pmode, worker_bcast_name);\n+  worker_bcast_sym = gen_rtx_SYMBOL_REF (Pmode, \"__worker_bcast\");\n   SET_SYMBOL_DATA_AREA (worker_bcast_sym, DATA_AREA_SHARED);\n   worker_bcast_align = GET_MODE_ALIGNMENT (SImode) / BITS_PER_UNIT;\n \n-  worker_red_sym = gen_rtx_SYMBOL_REF (Pmode, worker_red_name);\n+  worker_red_sym = gen_rtx_SYMBOL_REF (Pmode, \"__worker_red\");\n   SET_SYMBOL_DATA_AREA (worker_red_sym, DATA_AREA_SHARED);\n   worker_red_align = GET_MODE_ALIGNMENT (SImode) / BITS_PER_UNIT;\n }\n@@ -1382,7 +1380,6 @@ nvptx_gen_wcast (rtx reg, propagate_mask pm, unsigned rep, wcast_data_t *data)\n \t  }\n \t\n \taddr = gen_rtx_MEM (mode, addr);\n-\taddr = gen_rtx_UNSPEC (mode, gen_rtvec (1, addr), UNSPEC_SHARED_DATA);\n \tif (pm == PM_read)\n \t  res = gen_rtx_SET (addr, reg);\n \telse if (pm == PM_write)\n@@ -3356,9 +3353,11 @@ nvptx_wpropagate (bool pre_p, basic_block block, rtx_insn *insn)\n   if (data.offset)\n     {\n       /* Stuff was emitted, initialize the base pointer now.  */\n-      rtx init = gen_rtx_SET (data.base, worker_bcast_sym);\n+      rtx init = gen_rtx_UNSPEC (Pmode, gen_rtvec (1, worker_bcast_sym),\n+\t\t\t\t UNSPEC_TO_GENERIC);\n+      init = gen_rtx_SET (data.base, init);\n       emit_insn_after (init, insn);\n-      \n+\n       if (worker_bcast_size < data.offset)\n \tworker_bcast_size = data.offset;\n     }\n@@ -3922,6 +3921,18 @@ nvptx_file_start (void)\n   fputs (\"// END PREAMBLE\\n\", asm_out_file);\n }\n \n+/* Emit a declaration for a worker-level buffer in .shared memory.  */\n+\n+static void\n+write_worker_buffer (FILE *file, rtx sym, unsigned align, unsigned size)\n+{\n+  const char *name = XSTR (sym, 0);\n+\n+  write_var_marker (file, true, false, name);\n+  fprintf (file, \".shared .align %d .u8 %s[%d];\\n\",\n+\t   align, name, size);\n+}\n+\n /* Write out the function declarations we've collected and declare storage\n    for the broadcast buffer.  */\n \n@@ -3935,30 +3946,12 @@ nvptx_file_end (void)\n   fputs (func_decls.str().c_str(), asm_out_file);\n \n   if (worker_bcast_size)\n-    {\n-      /* Define the broadcast buffer.  */\n-\n-      worker_bcast_size = (worker_bcast_size + worker_bcast_align - 1)\n-\t& ~(worker_bcast_align - 1);\n-      \n-      write_var_marker (asm_out_file, true, false, worker_bcast_name);\n-      fprintf (asm_out_file, \".shared .align %d .u8 %s[%d];\\n\",\n-\t       worker_bcast_align,\n-\t       worker_bcast_name, worker_bcast_size);\n-    }\n+    write_worker_buffer (asm_out_file, worker_bcast_sym,\n+\t\t\t worker_bcast_align, worker_bcast_size);\n \n   if (worker_red_size)\n-    {\n-      /* Define the reduction buffer.  */\n-\n-      worker_red_size = ((worker_red_size + worker_red_align - 1)\n-\t\t\t & ~(worker_red_align - 1));\n-\n-      write_var_marker (asm_out_file, true, false, worker_red_name);\n-      fprintf (asm_out_file, \".shared .align %d .u8 %s[%d];\\n\",\n-\t       worker_red_align,\n-\t       worker_red_name, worker_red_size);\n-    }\n+    write_worker_buffer (asm_out_file, worker_red_sym,\n+\t\t\t worker_red_align, worker_red_size);\n }\n \n /* Expander for the shuffle builtins.  */"}, {"sha": "6bf6141f71bcb7c22a637d97aa298a04761e3b13", "filename": "gcc/config/nvptx/nvptx.md", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ab6f00bc3d5b60ab59205bc9e39d2b3e5273ca/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ab6f00bc3d5b60ab59205bc9e39d2b3e5273ca/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.md?ref=15ab6f00bc3d5b60ab59205bc9e39d2b3e5273ca", "patch": "@@ -39,8 +39,6 @@\n \n    UNSPEC_DIM_SIZE\n \n-   UNSPEC_SHARED_DATA\n-\n    UNSPEC_BIT_CONV\n \n    UNSPEC_SHUFFLE\n@@ -1193,20 +1191,6 @@\n   \"\"\n   \"%.\\\\tmov.b64\\\\t%0, {%1,%2};\")\n \n-(define_insn \"worker_load<mode>\"\n-  [(set (match_operand:SDISDFM 0 \"nvptx_register_operand\" \"=R\")\n-        (unspec:SDISDFM [(match_operand:SDISDFM 1 \"memory_operand\" \"m\")]\n-\t\t\t UNSPEC_SHARED_DATA))]\n-  \"\"\n-  \"%.\\\\tld.shared%u0\\\\t%0, %1;\")\n-\n-(define_insn \"worker_store<mode>\"\n-  [(set (unspec:SDISDFM [(match_operand:SDISDFM 1 \"memory_operand\" \"=m\")]\n-\t\t\t UNSPEC_SHARED_DATA)\n-\t(match_operand:SDISDFM 0 \"nvptx_register_operand\" \"R\"))]\n-  \"\"\n-  \"%.\\\\tst.shared%u1\\\\t%1, %0;\")\n-\n ;; Atomic insns.\n \n (define_expand \"atomic_compare_and_swap<mode>\""}]}