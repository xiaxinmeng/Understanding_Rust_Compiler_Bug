{"sha": "3742998dca66dedacda8209e8a8557a4694da41e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc0Mjk5OGRjYTY2ZGVkYWNkYTgyMDllOGE4NTU3YTQ2OTRkYTQxZQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-12-12T21:35:02Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-12-12T21:35:02Z"}, "message": "compiler: Better error messages for { on line after if/for/switch.\n\nFrom-SVN: r205944", "tree": {"sha": "2444aad3c6eeed45b576c7b0b86bf2ee87d2b21d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2444aad3c6eeed45b576c7b0b86bf2ee87d2b21d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3742998dca66dedacda8209e8a8557a4694da41e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3742998dca66dedacda8209e8a8557a4694da41e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3742998dca66dedacda8209e8a8557a4694da41e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3742998dca66dedacda8209e8a8557a4694da41e/comments", "author": null, "committer": null, "parents": [{"sha": "ed6b1c92199bc887e4ca98305b21817a12c55abc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed6b1c92199bc887e4ca98305b21817a12c55abc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed6b1c92199bc887e4ca98305b21817a12c55abc"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "7614e6fc7957ec42586e3f97a3a3ee9a79f986e1", "filename": "gcc/go/gofrontend/parse.cc", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3742998dca66dedacda8209e8a8557a4694da41e/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3742998dca66dedacda8209e8a8557a4694da41e/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fparse.cc?ref=3742998dca66dedacda8209e8a8557a4694da41e", "patch": "@@ -4287,6 +4287,16 @@ Parse::if_stat()\n \tcond = this->expression(PRECEDENCE_NORMAL, false, false, NULL, NULL);\n     }\n \n+  // Check for the easy error of a newline before starting the block.\n+  if (this->peek_token()->is_op(OPERATOR_SEMICOLON))\n+    {\n+      Location semi_loc = this->location();\n+      if (this->advance_token()->is_op(OPERATOR_LCURLY))\n+\terror_at(semi_loc, \"missing %<{%> after if clause\");\n+      // Otherwise we will get an error when we call this->block\n+      // below.\n+    }\n+\n   this->gogo_->start_block(this->location());\n   Location end_loc = this->block();\n   Block* then_block = this->gogo_->finish_block(end_loc);\n@@ -4431,7 +4441,7 @@ Parse::switch_stat(Label* label)\n       Location token_loc = this->location();\n       if (this->peek_token()->is_op(OPERATOR_SEMICOLON)\n \t  && this->advance_token()->is_op(OPERATOR_LCURLY))\n-\terror_at(token_loc, \"unexpected semicolon or newline before %<{%>\");\n+\terror_at(token_loc, \"missing %<{%> after switch clause\");\n       else if (this->peek_token()->is_op(OPERATOR_COLONEQ))\n \t{\n \t  error_at(token_loc, \"invalid variable name\");\n@@ -5158,6 +5168,16 @@ Parse::for_stat(Label* label)\n \t}\n     }\n \n+  // Check for the easy error of a newline before starting the block.\n+  if (this->peek_token()->is_op(OPERATOR_SEMICOLON))\n+    {\n+      Location semi_loc = this->location();\n+      if (this->advance_token()->is_op(OPERATOR_LCURLY))\n+\terror_at(semi_loc, \"missing %<{%> after for clause\");\n+      // Otherwise we will get an error when we call this->block\n+      // below.\n+    }\n+\n   // Build the For_statement and note that it is the current target\n   // for break and continue statements.\n \n@@ -5224,8 +5244,7 @@ Parse::for_clause(Expression** cond, Block** post)\n     *cond = NULL;\n   else if (this->peek_token()->is_op(OPERATOR_LCURLY))\n     {\n-      error_at(this->location(),\n-\t       \"unexpected semicolon or newline before %<{%>\");\n+      error_at(this->location(), \"missing %<{%> after for clause\");\n       *cond = NULL;\n       *post = NULL;\n       return;"}]}