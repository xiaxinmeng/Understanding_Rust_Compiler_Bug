{"sha": "499d66aafd1f12e5fa8171b03dca6c8e3178302c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk5ZDY2YWFmZDFmMTJlNWZhODE3MWIwM2RjYTZjOGUzMTc4MzAyYw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2019-11-04T13:40:12Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2019-11-04T13:40:12Z"}, "message": "pass --enable-obsolete down to gcc/configure for auto-build.h\n\nConfiguring GCC for obsolete targets works as long as build = host.\nWhen it isn't, --enable-obsolete is not passed down to the additional\nbuild configure started by gcc/configure, used to generate\nauto-build.h.  The build configure fails and we end up without a\nauto-build.h, but the host configure proceeds, so we only get a fatal\nfailure much later, when make realizes auto-build.h is not there and\nthere's no rule to create it.\n\nThis patch gets the host configure to fail when the build configure\ndoes, leaving the temporary build configure dir behind for\ninvestigation.  It also arranges for --eanble-obsolete to be passed\ndown to the build configure.\n\nAlas, the latter triggered a warning in the build configure because\n--enable-obsolete is not a recognized configure option.  That's not\nreported in the host configure because of the\n--disable-option-checking passed by the top-level configure, so I\narranged for that to be passed down to the build configure as well.\n\nFinally, since my initial suspicion when investigating this failure\nwas that auto-build.h had been removed after configuration and there\nwas no rule to rebuild it, I'm adding rules to gcc/Makefile to get it\ncreated or updated as needed.  Since it is configure that creates it,\nas run by e.g. config.status --recheck, and config.status is created\nafter auto-build.h, I've made config.status depend on auto-build.h,\nand added a dummy rule to create auto-build.h.  This would normally\nnot be enough to create a header when needed, but since Makefile\ndepends on config.status, and make first updates Makefile, it ends up\nworking, as long as nothing else that Makefile depends on requires\nauto-build.h but not config.status.  The config.status dependency and\nthe auto-build.h rule are only enabled in the cases in which\nauto-build.h is actually used, namely when build != host.\n\n\nfor  gcc/ChangeLog\n\n\t* configure.ac: Pass --enable-obsolete=* and\n\t--enable-option-checking=* down to build configure, and fail\n\tif it fails.  AC_SUBST HAVE_AUTO_BUILD.\n\t* configure: Rebuild.\n\t* Makefile.in [HAVE_AUTO_BUILD] (auto-build.h): New rule.\n\t[HAVE_AUTO_BUILD] (config.status): Depend on auto-build.h.\n\nFrom-SVN: r277777", "tree": {"sha": "2b4259d4eed5d9bb081edc0ae535db9249e6d953", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b4259d4eed5d9bb081edc0ae535db9249e6d953"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/499d66aafd1f12e5fa8171b03dca6c8e3178302c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/499d66aafd1f12e5fa8171b03dca6c8e3178302c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/499d66aafd1f12e5fa8171b03dca6c8e3178302c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/499d66aafd1f12e5fa8171b03dca6c8e3178302c/comments", "author": null, "committer": null, "parents": [{"sha": "d8f03b03417e8e37a38ed9d55d1e96ab76df8c0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8f03b03417e8e37a38ed9d55d1e96ab76df8c0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8f03b03417e8e37a38ed9d55d1e96ab76df8c0e"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "536ad7fd4bcfeacf5a822a668694b67cc91bad1b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499d66aafd1f12e5fa8171b03dca6c8e3178302c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499d66aafd1f12e5fa8171b03dca6c8e3178302c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=499d66aafd1f12e5fa8171b03dca6c8e3178302c", "patch": "@@ -1,3 +1,12 @@\n+2019-11-04  Alexandre Oliva <oliva@adacore.com>\n+\n+\t* configure.ac: Pass --enable-obsolete=* and\n+\t--enable-option-checking=* down to build configure, and fail\n+\tif it fails.  AC_SUBST HAVE_AUTO_BUILD.\n+\t* configure: Rebuild.\n+\t* Makefile.in [HAVE_AUTO_BUILD] (auto-build.h): New rule.\n+\t[HAVE_AUTO_BUILD] (config.status): Depend on auto-build.h.\n+\n 2019-11-04  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n \t* config.in: Regenerate."}, {"sha": "95f054c4d4f35a9cb12e2b7c94bfce361f9ac877", "filename": "gcc/Makefile.in", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499d66aafd1f12e5fa8171b03dca6c8e3178302c/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499d66aafd1f12e5fa8171b03dca6c8e3178302c/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=499d66aafd1f12e5fa8171b03dca6c8e3178302c", "patch": "@@ -1899,6 +1899,14 @@ cstamp-h: config.in config.status\n \tCONFIG_FILES= \\\n \tLANGUAGES=\"$(CONFIG_LANGUAGES)\" $(SHELL) config.status\n \n+# On configurations that require auto-build.h, it is created while\n+# running configure, so make config.status depend on it, so that\n+# config.status --recheck runs and updates or creates it.\n+@HAVE_AUTO_BUILD@auto-build.h: $(srcdir)/configure $(srcdir)/config.gcc\n+@HAVE_AUTO_BUILD@\t@if test -f $@; then echo rerunning config.status to update $@; \\\n+@HAVE_AUTO_BUILD@\telse echo rerunning config.status to update $@; fi\n+@HAVE_AUTO_BUILD@config.status: auto-build.h\n+\n # Really, really stupid make features, such as SUN's KEEP_STATE, may force\n # a target to build even if it is up-to-date.  So we must verify that\n # config.status does not exist before failing."}, {"sha": "6808c23d26b847ff2408ef6e8bb3aba126fd3cb5", "filename": "gcc/configure", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499d66aafd1f12e5fa8171b03dca6c8e3178302c/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499d66aafd1f12e5fa8171b03dca6c8e3178302c/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=499d66aafd1f12e5fa8171b03dca6c8e3178302c", "patch": "@@ -774,6 +774,7 @@ LIBINTL_DEP\n LIBINTL\n USE_NLS\n get_gcc_base_ver\n+HAVE_AUTO_BUILD\n extra_opt_files\n extra_modes_file\n NATIVE_SYSTEM_HEADER_DIR\n@@ -12208,6 +12209,7 @@ done\n if test x$host = x$build\n then\n \tbuild_auto=auto-host.h\n+\tHAVE_AUTO_BUILD='# '\n else\n \t# We create a subdir, then run autoconf in the subdir.\n \t# To prevent recursion we set host and build for the new\n@@ -12230,17 +12232,22 @@ else\n \tGMPINC=\"\" CPPFLAGS=\"${CPPFLAGS} -DGENERATOR_FILE\" \\\n \t${realsrcdir}/configure \\\n \t\t--enable-languages=${enable_languages-all} \\\n-\t\t--target=$target_alias --host=$build_alias --build=$build_alias\n+\t\t${enable_obsolete+--enable-obsolete=\"$enable_obsolete\"} \\\n+\t\t${enable_option_checking+--enable-option-checking=\"$enable_option_checking\"} \\\n+\t\t--target=$target_alias --host=$build_alias \\\n+\t\t--build=$build_alias || exit # retaining $tempdir\n \n \t# We just finished tests for the build machine, so rename\n \t# the file auto-build.h in the gcc directory.\n \tmv auto-host.h ../auto-build.h\n \tcd ..\n \trm -rf $tempdir\n \tbuild_auto=auto-build.h\n+\tHAVE_AUTO_BUILD=\n fi\n \n \n+\n tm_file=\"${tm_file} defaults.h\"\n tm_p_file=\"${tm_p_file} tm-preds.h\"\n tm_d_file=\"${tm_d_file} defaults.h\"\n@@ -18926,7 +18933,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18929 \"configure\"\n+#line 18936 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -19032,7 +19039,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19035 \"configure\"\n+#line 19042 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "1a0d68208e4b51b3360c293a1565ce4afa228c5d", "filename": "gcc/configure.ac", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499d66aafd1f12e5fa8171b03dca6c8e3178302c/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499d66aafd1f12e5fa8171b03dca6c8e3178302c/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=499d66aafd1f12e5fa8171b03dca6c8e3178302c", "patch": "@@ -1838,6 +1838,7 @@ AC_SUBST(extra_opt_files)\n if test x$host = x$build\n then\n \tbuild_auto=auto-host.h\n+\tHAVE_AUTO_BUILD='# '\n else\n \t# We create a subdir, then run autoconf in the subdir.\n \t# To prevent recursion we set host and build for the new\n@@ -1860,16 +1861,21 @@ else\n \tGMPINC=\"\" CPPFLAGS=\"${CPPFLAGS} -DGENERATOR_FILE\" \\\n \t${realsrcdir}/configure \\\n \t\t--enable-languages=${enable_languages-all} \\\n-\t\t--target=$target_alias --host=$build_alias --build=$build_alias\n+\t\t${enable_obsolete+--enable-obsolete=\"$enable_obsolete\"} \\\n+\t\t${enable_option_checking+--enable-option-checking=\"$enable_option_checking\"} \\\n+\t\t--target=$target_alias --host=$build_alias \\\n+\t\t--build=$build_alias || exit # retaining $tempdir\n \n \t# We just finished tests for the build machine, so rename\n \t# the file auto-build.h in the gcc directory.\n \tmv auto-host.h ../auto-build.h\n \tcd ..\n \trm -rf $tempdir\n \tbuild_auto=auto-build.h\n+\tHAVE_AUTO_BUILD=\n fi\n AC_SUBST(build_subdir)\n+AC_SUBST(HAVE_AUTO_BUILD)\n \n tm_file=\"${tm_file} defaults.h\"\n tm_p_file=\"${tm_p_file} tm-preds.h\""}]}