{"sha": "438c239d7629e2107dd831760835895c82f7d8f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM4YzIzOWQ3NjI5ZTIxMDdkZDgzMTc2MDgzNTg5NWM4MmY3ZDhmMw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-04-20T14:01:52Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-04-20T14:01:52Z"}, "message": "basic-block.h (get_all_dominated_blocks): Declare.\n\n2009-04-20  Richard Guenther  <rguenther@suse.de>\n\n\t* basic-block.h (get_all_dominated_blocks): Declare.\n\t* dominance.c (get_all_dominated_blocks): New function.\n\t* tree-cfg.c (get_all_dominated_blocks): Remove.\n\t(remove_edge_and_dominated_blocks): Adjust.\n\t* tree-ssa-phiprop.c (tree_ssa_phiprop_1): Fold in ...\n\t(tree_ssa_phiprop): ... here.  Use get_all_dominated_blocks\n\tinstead of recursing.\n\nFrom-SVN: r146425", "tree": {"sha": "1f17a313bc30e85d418e64815f036e5b5545b849", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f17a313bc30e85d418e64815f036e5b5545b849"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/438c239d7629e2107dd831760835895c82f7d8f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/438c239d7629e2107dd831760835895c82f7d8f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/438c239d7629e2107dd831760835895c82f7d8f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/438c239d7629e2107dd831760835895c82f7d8f3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e69614ada0f86b7583c6d834e02f2835b2b58bb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e69614ada0f86b7583c6d834e02f2835b2b58bb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e69614ada0f86b7583c6d834e02f2835b2b58bb1"}], "stats": {"total": 92, "additions": 55, "deletions": 37}, "files": [{"sha": "0fb72226bab03a79df3d2b533215b9754e10920a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/438c239d7629e2107dd831760835895c82f7d8f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/438c239d7629e2107dd831760835895c82f7d8f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=438c239d7629e2107dd831760835895c82f7d8f3", "patch": "@@ -1,3 +1,13 @@\n+2009-04-20  Richard Guenther  <rguenther@suse.de>\n+\n+\t* basic-block.h (get_all_dominated_blocks): Declare.\n+\t* dominance.c (get_all_dominated_blocks): New function.\n+\t* tree-cfg.c (get_all_dominated_blocks): Remove.\n+\t(remove_edge_and_dominated_blocks): Adjust.\n+\t* tree-ssa-phiprop.c (tree_ssa_phiprop_1): Fold in ...\n+\t(tree_ssa_phiprop): ... here.  Use get_all_dominated_blocks\n+\tinstead of recursing.\n+\n 2009-04-20  Doug Kwan  <dougkwan@google.com>\n \n \t* cgraph.h (cgraph_node_ptr): New type for vector functions."}, {"sha": "dfde67391d4a41ef471fb4880f5bdc64dae97777", "filename": "gcc/basic-block.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/438c239d7629e2107dd831760835895c82f7d8f3/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/438c239d7629e2107dd831760835895c82f7d8f3/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=438c239d7629e2107dd831760835895c82f7d8f3", "patch": "@@ -938,6 +938,8 @@ extern VEC (basic_block, heap) *get_dominated_by (enum cdi_direction, basic_bloc\n extern VEC (basic_block, heap) *get_dominated_by_region (enum cdi_direction,\n \t\t\t\t\t\t\t basic_block *,\n \t\t\t\t\t\t\t unsigned);\n+extern VEC (basic_block, heap) *get_all_dominated_blocks (enum cdi_direction,\n+\t\t\t\t\t\t\t  basic_block);\n extern void add_to_dominance_info (enum cdi_direction, basic_block);\n extern void delete_from_dominance_info (enum cdi_direction, basic_block);\n basic_block recompute_dominator (enum cdi_direction, basic_block);"}, {"sha": "2cc14145848870361ad207a31720eca235651def", "filename": "gcc/dominance.c", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/438c239d7629e2107dd831760835895c82f7d8f3/gcc%2Fdominance.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/438c239d7629e2107dd831760835895c82f7d8f3/gcc%2Fdominance.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdominance.c?ref=438c239d7629e2107dd831760835895c82f7d8f3", "patch": "@@ -782,6 +782,33 @@ get_dominated_by_region (enum cdi_direction dir, basic_block *region,\n   return doms;\n }\n \n+/* Returns the list of basic blocks including BB dominated by BB, in the\n+   direction DIR.  The vector will be sorted in preorder.  */\n+\n+VEC (basic_block, heap) *\n+get_all_dominated_blocks (enum cdi_direction dir, basic_block bb)\n+{\n+  VEC(basic_block, heap) *bbs = NULL;\n+  unsigned i;\n+\n+  i = 0;\n+  VEC_safe_push (basic_block, heap, bbs, bb);\n+\n+  do\n+    {\n+      basic_block son;\n+\n+      bb = VEC_index (basic_block, bbs, i++);\n+      for (son = first_dom_son (dir, bb);\n+\t   son;\n+\t   son = next_dom_son (dir, son))\n+\tVEC_safe_push (basic_block, heap, bbs, son);\n+    }\n+  while (i < VEC_length (basic_block, bbs));\n+\n+  return bbs;\n+}\n+\n /* Redirect all edges pointing to BB to TO.  */\n void\n redirect_immediate_dominators (enum cdi_direction dir, basic_block bb,"}, {"sha": "009f9a96388bcc8e47abe1383a3f6e800f955935", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/438c239d7629e2107dd831760835895c82f7d8f3/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/438c239d7629e2107dd831760835895c82f7d8f3/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=438c239d7629e2107dd831760835895c82f7d8f3", "patch": "@@ -6681,20 +6681,6 @@ gimple_purge_dead_abnormal_call_edges (basic_block bb)\n   return changed;\n }\n \n-/* Stores all basic blocks dominated by BB to DOM_BBS.  */\n-\n-static void\n-get_all_dominated_blocks (basic_block bb, VEC (basic_block, heap) **dom_bbs)\n-{\n-  basic_block son;\n-\n-  VEC_safe_push (basic_block, heap, *dom_bbs, bb);\n-  for (son = first_dom_son (CDI_DOMINATORS, bb);\n-       son;\n-       son = next_dom_son (CDI_DOMINATORS, son))\n-    get_all_dominated_blocks (son, dom_bbs);\n-}\n-\n /* Removes edge E and all the blocks dominated by it, and updates dominance\n    information.  The IL in E->src needs to be updated separately.\n    If dominance info is not available, only the edge E is removed.*/\n@@ -6754,7 +6740,7 @@ remove_edge_and_dominated_blocks (edge e)\n \t\t    get_immediate_dominator (CDI_DOMINATORS, e->dest)->index);\n   else\n     {\n-      get_all_dominated_blocks (e->dest, &bbs_to_remove);\n+      bbs_to_remove = get_all_dominated_blocks (CDI_DOMINATORS, e->dest);\n       for (i = 0; VEC_iterate (basic_block, bbs_to_remove, i, bb); i++)\n \t{\n \t  FOR_EACH_EDGE (f, ei, bb->succs)"}, {"sha": "f608f1d056ec94df220fcdd2ae4ff11afd064521", "filename": "gcc/tree-ssa-phiprop.c", "status": "modified", "additions": 15, "deletions": 22, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/438c239d7629e2107dd831760835895c82f7d8f3/gcc%2Ftree-ssa-phiprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/438c239d7629e2107dd831760835895c82f7d8f3/gcc%2Ftree-ssa-phiprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiprop.c?ref=438c239d7629e2107dd831760835895c82f7d8f3", "patch": "@@ -325,41 +325,34 @@ next:;\n   return phi_inserted;\n }\n \n-/* Helper walking the dominator tree starting from BB and processing\n-   phi nodes with global data PHIVN and N.  */\n-\n-static bool\n-tree_ssa_phiprop_1 (basic_block bb, struct phiprop_d *phivn, size_t n)\n-{\n-  bool did_something = false; \n-  basic_block son;\n-  gimple_stmt_iterator gsi;\n-\n-  for (gsi = gsi_start_phis (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n-    did_something |= propagate_with_phi (bb, gsi_stmt (gsi), phivn, n);\n-\n-  for (son = first_dom_son (CDI_DOMINATORS, bb);\n-       son;\n-       son = next_dom_son (CDI_DOMINATORS, son))\n-    did_something |= tree_ssa_phiprop_1 (son, phivn, n);\n-\n-  return did_something;\n-}\n-\n /* Main entry for phiprop pass.  */\n \n static unsigned int\n tree_ssa_phiprop (void)\n {\n+  VEC(basic_block, heap) *bbs;\n   struct phiprop_d *phivn;\n+  bool did_something = false; \n+  basic_block bb;\n+  gimple_stmt_iterator gsi;\n+  unsigned i;\n \n   calculate_dominance_info (CDI_DOMINATORS);\n \n   phivn = XCNEWVEC (struct phiprop_d, num_ssa_names);\n \n-  if (tree_ssa_phiprop_1 (ENTRY_BLOCK_PTR, phivn, num_ssa_names))\n+  /* Walk the dominator tree in preorder.  */\n+  bbs = get_all_dominated_blocks (CDI_DOMINATORS,\n+\t\t\t\t  single_succ (ENTRY_BLOCK_PTR));\n+  for (i = 0; VEC_iterate (basic_block, bbs, i, bb); ++i)\n+    for (gsi = gsi_start_phis (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n+      did_something |= propagate_with_phi (bb, gsi_stmt (gsi),\n+\t\t\t\t\t   phivn, num_ssa_names);\n+\n+  if (did_something)\n     gsi_commit_edge_inserts ();\n \n+  VEC_free (basic_block, heap, bbs);\n   free (phivn);\n \n   return 0;"}]}