{"sha": "27a68020110f671ef3b64cdce27f7b723f8a1fec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdhNjgwMjAxMTBmNjcxZWYzYjY0Y2RjZTI3ZjdiNzIzZjhhMWZlYw==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-06-25T07:33:26Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-06-25T15:02:47Z"}, "message": "d: Do not implicitly set DECL_DECLARED_INLINE_P on member functions.\n\nThis has been questionable behaviour since it was added, and though it\nhas no effect on wider discussions around what should be the correct\nsemantics of pragma(inline) within D modules, doing this tree-level\noptimization has mostly zero benefit as cross-module inlining doesn't\nhappen anyway.\n\ngcc/d/ChangeLog:\n\n\t* decl.cc (get_symbol_decl): Do not implicitly set\n\tDECL_DECLARED_INLINE_P on member functions.", "tree": {"sha": "ad5539bbd94257fce30003983dd45f6b6482905a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad5539bbd94257fce30003983dd45f6b6482905a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27a68020110f671ef3b64cdce27f7b723f8a1fec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27a68020110f671ef3b64cdce27f7b723f8a1fec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27a68020110f671ef3b64cdce27f7b723f8a1fec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27a68020110f671ef3b64cdce27f7b723f8a1fec/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbd6a326f4e630f017e4cd715f617587048d4501", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbd6a326f4e630f017e4cd715f617587048d4501", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbd6a326f4e630f017e4cd715f617587048d4501"}], "stats": {"total": 7, "additions": 0, "deletions": 7}, "files": [{"sha": "15eb9a43399e1fe78940817783e36896df41fede", "filename": "gcc/d/decl.cc", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27a68020110f671ef3b64cdce27f7b723f8a1fec/gcc%2Fd%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27a68020110f671ef3b64cdce27f7b723f8a1fec/gcc%2Fd%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdecl.cc?ref=27a68020110f671ef3b64cdce27f7b723f8a1fec", "patch": "@@ -1250,13 +1250,6 @@ get_symbol_decl (Declaration *decl)\n \t}\n \n       /* Miscellaneous function flags.  */\n-      if (fd->isMember2 () || fd->isFuncLiteralDeclaration ())\n-\t{\n-\t  /* See grokmethod in cp/decl.c.  Maybe we shouldn't be setting inline\n-\t     flags without reason or proper handling.  */\n-\t  DECL_DECLARED_INLINE_P (decl->csym) = 1;\n-\t  DECL_NO_INLINE_WARNING_P (decl->csym) = 1;\n-\t}\n \n       /* In [pragma/inline], functions decorated with `pragma(inline)' affects\n \t whether they are inlined or not.  */"}]}