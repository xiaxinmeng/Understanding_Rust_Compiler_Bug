{"sha": "7370b9df65e5d88148d1d3feffc90fdff00bc1af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM3MGI5ZGY2NWU1ZDg4MTQ4ZDFkM2ZlZmZjOTBmZGZmMDBiYzFhZg==", "commit": {"author": {"name": "Bernhard Reutner-Fischer", "email": "aldot@gcc.gnu.org", "date": "2014-01-23T21:17:15Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2014-01-23T21:17:15Z"}, "message": "acinclude.m4 (GLIBCXX_CHECK_TMPNAM): New check for tmpnam function.\n\n2014-01-23  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n\t    Steve Ellcey  <sellcey@mips.com>\n\n\t* acinclude.m4 (GLIBCXX_CHECK_TMPNAM): New check for tmpnam\n\tfunction.\n\t* configure.ac: Use GLIBCXX_CHECK_TMPNAM.\n\t* (configure, config.h.in): Regenerate.\n\t* include/c_global/cstdio: Guard ::tmpnam with _GLIBCXX_USE_TMPNAM\n\nCo-Authored-By: Steve Ellcey <sellcey@mips.com>\n\nFrom-SVN: r207009", "tree": {"sha": "653ae282650fbf9b6ae0cf8824160ca78993a7b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/653ae282650fbf9b6ae0cf8824160ca78993a7b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7370b9df65e5d88148d1d3feffc90fdff00bc1af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7370b9df65e5d88148d1d3feffc90fdff00bc1af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7370b9df65e5d88148d1d3feffc90fdff00bc1af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7370b9df65e5d88148d1d3feffc90fdff00bc1af/comments", "author": null, "committer": null, "parents": [{"sha": "393e8e8b0ca526d8909ace6303785dd522b1c8ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/393e8e8b0ca526d8909ace6303785dd522b1c8ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/393e8e8b0ca526d8909ace6303785dd522b1c8ce"}], "stats": {"total": 119, "additions": 119, "deletions": 0}, "files": [{"sha": "211f7317131279c5593e9e0534f47398b05d33e1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7370b9df65e5d88148d1d3feffc90fdff00bc1af/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7370b9df65e5d88148d1d3feffc90fdff00bc1af/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7370b9df65e5d88148d1d3feffc90fdff00bc1af", "patch": "@@ -1,3 +1,12 @@\n+2014-01-23  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n+\t    Steve Ellcey  <sellcey@mips.com>\n+\n+\t* acinclude.m4 (GLIBCXX_CHECK_TMPNAM): New check for tmpnam\n+\tfunction.\n+\t* configure.ac: Use GLIBCXX_CHECK_TMPNAM.\n+\t* (configure, config.h.in): Regenerate.\n+\t* include/c_global/cstdio: Guard ::tmpnam with _GLIBCXX_USE_TMPNAM\n+\n 2014-01-23  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* doc/xml/faq.xml (a-how_to_set_paths): Expand FAQ answer."}, {"sha": "2b606968895bc39c36e583043ee113b6a8e9d09a", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7370b9df65e5d88148d1d3feffc90fdff00bc1af/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7370b9df65e5d88148d1d3feffc90fdff00bc1af/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=7370b9df65e5d88148d1d3feffc90fdff00bc1af", "patch": "@@ -3771,6 +3771,33 @@ AC_DEFUN([GLIBCXX_ENABLE_WERROR], [\n   GLIBCXX_CONDITIONAL(ENABLE_WERROR, test $enable_werror = yes)\n ])\n \n+dnl\n+dnl Check whether obsolescent tmpnam is available in <stdio.h>,\n+dnl and define _GLIBCXX_USE_TMPNAM.\n+dnl\n+AC_DEFUN([GLIBCXX_CHECK_TMPNAM], [dnl\n+dnl\n+  AC_LANG_SAVE\n+  AC_LANG_CPLUSPLUS\n+  ac_save_CXXFLAGS=\"$CXXFLAGS\"\n+  CXXFLAGS=\"$CXXFLAGS -fno-exceptions\"\n+dnl\n+  AC_MSG_CHECKING([for tmpnam])\n+  AC_CACHE_VAL(glibcxx_cv_TMPNAM, [dnl\n+    GCC_TRY_COMPILE_OR_LINK(\n+      [#include <stdio.h>],\n+      [char *tmp = tmpnam(NULL);],\n+      [glibcxx_cv_TMPNAM=yes],\n+      [glibcxx_cv_TMPNAM=no])\n+  ])\n+  if test $glibcxx_cv_TMPNAM = yes; then\n+    AC_DEFINE(_GLIBCXX_USE_TMPNAM, 1, [Define if obsolescent tmpnam is available in <stdio.h>.])\n+  fi\n+  AC_MSG_RESULT($glibcxx_cv_TMPNAM)\n+dnl\n+  CXXFLAGS=\"$ac_save_CXXFLAGS\"\n+  AC_LANG_RESTORE\n+])\n \n dnl\n dnl Check to see if sys/sdt.h exists and that it is suitable for use."}, {"sha": "adc7d44ee4886be44af74c276426e8f0676c6212", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7370b9df65e5d88148d1d3feffc90fdff00bc1af/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7370b9df65e5d88148d1d3feffc90fdff00bc1af/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=7370b9df65e5d88148d1d3feffc90fdff00bc1af", "patch": "@@ -867,6 +867,9 @@\n /* Define if sysctl(), CTL_HW and HW_NCPU are available in <sys/sysctl.h>. */\n #undef _GLIBCXX_USE_SYSCTL_HW_NCPU\n \n+/* Define if obsolescent tmpnam is available in <stdio.h>. */\n+#undef _GLIBCXX_USE_TMPNAM\n+\n /* Define if code specialized for wchar_t should be used. */\n #undef _GLIBCXX_USE_WCHAR_T\n "}, {"sha": "d2799511774d797c88ee07cc79f12a25b8c56fc6", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7370b9df65e5d88148d1d3feffc90fdff00bc1af/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7370b9df65e5d88148d1d3feffc90fdff00bc1af/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=7370b9df65e5d88148d1d3feffc90fdff00bc1af", "patch": "@@ -20120,6 +20120,81 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n+# Check for tmpnam which is obsolescent in POSIX.1-2008\n+\n+  ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+  ac_save_CXXFLAGS=\"$CXXFLAGS\"\n+  CXXFLAGS=\"$CXXFLAGS -fno-exceptions\"\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for tmpnam\" >&5\n+$as_echo_n \"checking for tmpnam... \" >&6; }\n+  if test \"${glibcxx_cv_TMPNAM+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+      if test x$gcc_no_link = xyes; then\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <stdio.h>\n+int\n+main ()\n+{\n+char *tmp = tmpnam(NULL);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_cxx_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_TMPNAM=yes\n+else\n+  glibcxx_cv_TMPNAM=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+else\n+  if test x$gcc_no_link = xyes; then\n+  as_fn_error \"Link tests are not allowed after GCC_NO_EXECUTABLES.\" \"$LINENO\" 5\n+fi\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <stdio.h>\n+int\n+main ()\n+{\n+char *tmp = tmpnam(NULL);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_cxx_try_link \"$LINENO\"; then :\n+  glibcxx_cv_TMPNAM=yes\n+else\n+  glibcxx_cv_TMPNAM=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+fi\n+\n+fi\n+\n+  if test $glibcxx_cv_TMPNAM = yes; then\n+\n+$as_echo \"#define _GLIBCXX_USE_TMPNAM 1\" >>confdefs.h\n+\n+  fi\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_TMPNAM\" >&5\n+$as_echo \"$glibcxx_cv_TMPNAM\" >&6; }\n+  CXXFLAGS=\"$ac_save_CXXFLAGS\"\n+  ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+\n+\n \n   ac_fn_c_check_header_mongrel \"$LINENO\" \"locale.h\" \"ac_cv_header_locale_h\" \"$ac_includes_default\"\n if test \"x$ac_cv_header_locale_h\" = x\"\"yes; then :"}, {"sha": "1de0f6c1cbf2e21cd64a15686d32bdb0bd602b70", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7370b9df65e5d88148d1d3feffc90fdff00bc1af/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7370b9df65e5d88148d1d3feffc90fdff00bc1af/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=7370b9df65e5d88148d1d3feffc90fdff00bc1af", "patch": "@@ -213,6 +213,9 @@ GLIBCXX_CHECK_GETTIMEOFDAY\n # For clock_gettime, nanosleep and sched_yield support.\n GLIBCXX_ENABLE_LIBSTDCXX_TIME\n \n+# Check for tmpnam which is obsolescent in POSIX.1-2008\n+GLIBCXX_CHECK_TMPNAM\n+\n AC_LC_MESSAGES\n \n # For hardware_concurrency"}, {"sha": "6043b3de2bf3b2b29b43d8ee0685cc6590c29fde", "filename": "libstdc++-v3/include/c_global/cstdio", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7370b9df65e5d88148d1d3feffc90fdff00bc1af/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstdio", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7370b9df65e5d88148d1d3feffc90fdff00bc1af/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstdio", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstdio?ref=7370b9df65e5d88148d1d3feffc90fdff00bc1af", "patch": "@@ -137,7 +137,9 @@ namespace std\n   using ::sprintf;\n   using ::sscanf;\n   using ::tmpfile;\n+#if _GLIBCXX_USE_TMPNAM\n   using ::tmpnam;\n+#endif\n   using ::ungetc;\n   using ::vfprintf;\n   using ::vprintf;"}]}