{"sha": "6ef44cfd0bb7d3cd4d534748d424a171f761b792", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmVmNDRjZmQwYmI3ZDNjZDRkNTM0NzQ4ZDQyNGExNzFmNzYxYjc5Mg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-06-01T11:57:10Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-06-01T11:57:10Z"}, "message": "2004-06-01  Michael Koch  <konqueror@gmx.de>\n\n\t* java/security/Security.java\n\t(insertProviderAt): Use equals() instead of ==.\n\t(removeProvicer): Likewise.\n\t(getProvider): Likewise.\n\t* java/security/Signature.java\n\t(sign): Don't set state to UNINITIALIZED.\n\t(verify): Likewise.\n\nFrom-SVN: r82543", "tree": {"sha": "1ca0ef7ef911e89dea84f63192fe8dc1b2b0538e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ca0ef7ef911e89dea84f63192fe8dc1b2b0538e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ef44cfd0bb7d3cd4d534748d424a171f761b792", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ef44cfd0bb7d3cd4d534748d424a171f761b792", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ef44cfd0bb7d3cd4d534748d424a171f761b792", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ef44cfd0bb7d3cd4d534748d424a171f761b792/comments", "author": null, "committer": null, "parents": [{"sha": "1460af9501354afbba460db4c8e731fdc8f5805f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1460af9501354afbba460db4c8e731fdc8f5805f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1460af9501354afbba460db4c8e731fdc8f5805f"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "d775572f2290616445f732e9e692518d5441b161", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ef44cfd0bb7d3cd4d534748d424a171f761b792/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ef44cfd0bb7d3cd4d534748d424a171f761b792/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=6ef44cfd0bb7d3cd4d534748d424a171f761b792", "patch": "@@ -1,3 +1,13 @@\n+2004-06-01  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/security/Security.java\n+\t(insertProviderAt): Use equals() instead of ==.\n+\t(removeProvicer): Likewise.\n+\t(getProvider): Likewise.\n+\t* java/security/Signature.java\n+\t(sign): Don't set state to UNINITIALIZED.\n+\t(verify): Likewise.\n+\n 2004-06-01  Mark Wielaard  <mark@klomp.org>\n \n \t* gnu/java/awt/peer/gtk/GtkComponentPeer.java (requestFocus):"}, {"sha": "6c8d2b4c04c7e308cd4d89f615c985c660f9fc33", "filename": "libjava/java/security/Security.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ef44cfd0bb7d3cd4d534748d424a171f761b792/libjava%2Fjava%2Fsecurity%2FSecurity.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ef44cfd0bb7d3cd4d534748d424a171f761b792/libjava%2Fjava%2Fsecurity%2FSecurity.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FSecurity.java?ref=6ef44cfd0bb7d3cd4d534748d424a171f761b792", "patch": "@@ -1,5 +1,5 @@\n /* Security.java --- Java base security class implementation\n-   Copyright (C) 1999, 2001, 2002, 2003, 2004, Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2001, 2002, 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -237,7 +237,7 @@ public static int insertProviderAt(Provider provider, int position)\n     int max = providers.size ();\n     for (int i = 0; i < max; i++)\n       {\n-\tif (((Provider) providers.elementAt(i)).getName() == provider.getName())\n+\tif (((Provider) providers.elementAt(i)).getName().equals(provider.getName()))\n \t  return -1;\n       }\n \n@@ -312,7 +312,7 @@ public static void removeProvider(String name)\n     int max = providers.size ();\n     for (int i = 0; i < max; i++)\n       {\n-\tif (((Provider) providers.elementAt(i)).getName() == name)\n+\tif (((Provider) providers.elementAt(i)).getName().equals(name))\n \t  {\n \t    providers.remove(i);\n \t    break;\n@@ -349,7 +349,7 @@ public static Provider getProvider(String name)\n     for (int i = 0; i < max; i++)\n       {\n \tp = (Provider) providers.elementAt(i);\n-\tif (p.getName() == name)\n+\tif (p.getName().equals(name))\n \t  return p;\n       }\n     return null;"}, {"sha": "b7979791042f8cdcb43a4c981462bb3f3b97c006", "filename": "libjava/java/security/Signature.java", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ef44cfd0bb7d3cd4d534748d424a171f761b792/libjava%2Fjava%2Fsecurity%2FSignature.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ef44cfd0bb7d3cd4d534748d424a171f761b792/libjava%2Fjava%2Fsecurity%2FSignature.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FSignature.java?ref=6ef44cfd0bb7d3cd4d534748d424a171f761b792", "patch": "@@ -1,5 +1,5 @@\n /* Signature.java --- Signature Class\n-   Copyright (C) 1999, 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -368,10 +368,7 @@ public final void initSign(PrivateKey privateKey, SecureRandom random)\n   public final byte[] sign() throws SignatureException\n   {\n     if (state == SIGN)\n-      {\n-        state = UNINITIALIZED;\n-        return engineSign();\n-      }\n+      return engineSign();\n     else\n       throw new SignatureException();\n   }\n@@ -398,10 +395,7 @@ public final int sign(byte[] outbuf, int offset, int len)\n     throws SignatureException\n   {\n     if (state == SIGN)\n-      {\n-        state = UNINITIALIZED;\n-        return engineSign(outbuf, offset, len);\n-      }\n+      return engineSign(outbuf, offset, len);\n     else\n       throw new SignatureException();\n   }\n@@ -425,10 +419,7 @@ public final int sign(byte[] outbuf, int offset, int len)\n   public final boolean verify(byte[]signature) throws SignatureException\n   {\n     if (state == VERIFY)\n-      {\n-        state = UNINITIALIZED;\n-        return engineVerify(signature);\n-      }\n+      return engineVerify(signature);\n     else\n       throw new SignatureException();\n   }\n@@ -464,15 +455,14 @@ public final boolean verify(byte[] signature, int offset, int length)\n       throw new SignatureException(\"illegal state\");\n \n     if (signature == null)\n-      throw new IllegalArgumentException(\"signaure is null\");\n+      throw new IllegalArgumentException(\"signature is null\");\n     if (offset < 0)\n       throw new IllegalArgumentException(\"offset is less than 0\");\n     if (length < 0)\n       throw new IllegalArgumentException(\"length is less than 0\");\n     if (offset + length < signature.length)\n       throw new IllegalArgumentException(\"range is out of bounds\");\n \n-    state = UNINITIALIZED;\n     return engineVerify(signature, offset, length);\n   }\n "}]}