{"sha": "9e357cd84301dc6c5be517e8b48be3e2e365edc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUzNTdjZDg0MzAxZGM2YzViZTUxN2U4YjQ4YmUzZTJlMzY1ZWRjOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-26T21:22:19Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-26T21:22:19Z"}, "message": "(TYPE_PARSE_INFO): Delete unused field.\n\n(TYPE_PACKED): Add new macro.\n(struct tree_type): Delete unused field `parse_info'.\nAdd new field `packed_flag'.\n\nFrom-SVN: r9483", "tree": {"sha": "a9416ba36139c501b8901c2f57caf8cc16b4c08b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9416ba36139c501b8901c2f57caf8cc16b4c08b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e357cd84301dc6c5be517e8b48be3e2e365edc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e357cd84301dc6c5be517e8b48be3e2e365edc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e357cd84301dc6c5be517e8b48be3e2e365edc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e357cd84301dc6c5be517e8b48be3e2e365edc9/comments", "author": null, "committer": null, "parents": [{"sha": "40a4b13fc1fe65425151fb2dc3a0f54d2275142a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40a4b13fc1fe65425151fb2dc3a0f54d2275142a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40a4b13fc1fe65425151fb2dc3a0f54d2275142a"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "7077912f1f99427edf621fbe2172898732e3f83f", "filename": "gcc/tree.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e357cd84301dc6c5be517e8b48be3e2e365edc9/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e357cd84301dc6c5be517e8b48be3e2e365edc9/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=9e357cd84301dc6c5be517e8b48be3e2e365edc9", "patch": "@@ -573,7 +573,6 @@ struct tree_block\n #define TYPE_MIN_VALUE(NODE) ((NODE)->type.minval)\n #define TYPE_MAX_VALUE(NODE) ((NODE)->type.maxval)\n #define TYPE_PRECISION(NODE) ((NODE)->type.precision)\n-#define TYPE_PARSE_INFO(NODE) ((NODE)->type.parse_info)\n #define TYPE_SYMTAB_ADDRESS(NODE) ((NODE)->type.symtab.address)\n #define TYPE_SYMTAB_POINTER(NODE) ((NODE)->type.symtab.pointer)\n #define TYPE_NAME(NODE) ((NODE)->type.name)\n@@ -628,6 +627,10 @@ struct tree_block\n    the same way that the first union alternative would be passed.  */\n #define TYPE_TRANSPARENT_UNION(NODE) ((NODE)->type.transparent_union_flag)\n \n+/* Indicated that objects of this type should be layed out in as\n+   compact a way as possible.  */\n+#define TYPE_PACKED(NODE) ((NODE)->type.packed_flag)\n+\n struct tree_type\n {\n   char common[sizeof (struct tree_common)];\n@@ -647,19 +650,19 @@ struct tree_type\n   unsigned no_force_blk_flag : 1;\n   unsigned needs_constructing_flag : 1;\n   unsigned transparent_union_flag : 1;\n+  unsigned packed_flag : 1;\n   unsigned lang_flag_0 : 1;\n   unsigned lang_flag_1 : 1;\n   unsigned lang_flag_2 : 1;\n   unsigned lang_flag_3 : 1;\n   unsigned lang_flag_4 : 1;\n   unsigned lang_flag_5 : 1;\n   unsigned lang_flag_6 : 1;\n-  /* room for 5 more bits */\n+  /* room for 4 more bits */\n \n   unsigned int align;\n   union tree_node *pointer_to;\n   union tree_node *reference_to;\n-  int parse_info;\n   union {int address; char *pointer; } symtab;\n   union tree_node *name;\n   union tree_node *minval;"}]}