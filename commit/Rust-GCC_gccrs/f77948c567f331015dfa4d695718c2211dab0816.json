{"sha": "f77948c567f331015dfa4d695718c2211dab0816", "node_id": "C_kwDOANBUbNoAKGY3Nzk0OGM1NjdmMzMxMDE1ZGZhNGQ2OTU3MThjMjIxMWRhYjA4MTY", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2023-02-03T22:40:20Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2023-02-21T14:33:38Z"}, "message": "libphobos: Merge upstream phobos e5a521ab2.\n\nPhobos changes:\n\n    - Unicode tables have been updated to version 15.\n\nlibphobos/ChangeLog:\n\n\t* src/MERGE: Merge upstream phobos e5a521ab2.", "tree": {"sha": "4d4e5c155090bf7b63b02a0a85f497647a02f851", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d4e5c155090bf7b63b02a0a85f497647a02f851"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f77948c567f331015dfa4d695718c2211dab0816", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f77948c567f331015dfa4d695718c2211dab0816", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f77948c567f331015dfa4d695718c2211dab0816", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f77948c567f331015dfa4d695718c2211dab0816/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f99303eb4aafef70075951731b3ad99266fe6225", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f99303eb4aafef70075951731b3ad99266fe6225", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f99303eb4aafef70075951731b3ad99266fe6225"}], "stats": {"total": 21942, "additions": 2527, "deletions": 19415}, "files": [{"sha": "0b4fe4586450d6a9921f6bc41d5d266601a0c8fe", "filename": "libphobos/src/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f77948c567f331015dfa4d695718c2211dab0816/libphobos%2Fsrc%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f77948c567f331015dfa4d695718c2211dab0816/libphobos%2Fsrc%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2FMERGE?ref=f77948c567f331015dfa4d695718c2211dab0816", "patch": "@@ -1,4 +1,4 @@\n-13ef27a56e4c22e122fc4dd54bb46b5955babdb0\n+e5a521ab2bddfa0a42ecf371910ffe6a2fe0a03a\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/phobos repository."}, {"sha": "6ce79e1f66ad41cfabd0ab672b000aa2bb13dae3", "filename": "libphobos/src/std/internal/unicode_comp.d", "status": "modified", "additions": 25, "deletions": 2972, "changes": 2997, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f77948c567f331015dfa4d695718c2211dab0816/libphobos%2Fsrc%2Fstd%2Finternal%2Funicode_comp.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f77948c567f331015dfa4d695718c2211dab0816/libphobos%2Fsrc%2Fstd%2Finternal%2Funicode_comp.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Finternal%2Funicode_comp.d?ref=f77948c567f331015dfa4d695718c2211dab0816"}, {"sha": "66bb35217c039a3d5d0524d0de3742ba1afd30fb", "filename": "libphobos/src/std/internal/unicode_decomp.d", "status": "modified", "additions": 37, "deletions": 5289, "changes": 5326, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f77948c567f331015dfa4d695718c2211dab0816/libphobos%2Fsrc%2Fstd%2Finternal%2Funicode_decomp.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f77948c567f331015dfa4d695718c2211dab0816/libphobos%2Fsrc%2Fstd%2Finternal%2Funicode_decomp.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Finternal%2Funicode_decomp.d?ref=f77948c567f331015dfa4d695718c2211dab0816"}, {"sha": "d7b2c29119ec91946e3d5cf1281343e76cc204fe", "filename": "libphobos/src/std/internal/unicode_grapheme.d", "status": "modified", "additions": 33, "deletions": 281, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f77948c567f331015dfa4d695718c2211dab0816/libphobos%2Fsrc%2Fstd%2Finternal%2Funicode_grapheme.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f77948c567f331015dfa4d695718c2211dab0816/libphobos%2Fsrc%2Fstd%2Finternal%2Funicode_grapheme.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Finternal%2Funicode_grapheme.d?ref=f77948c567f331015dfa4d695718c2211dab0816", "patch": "@@ -1,293 +1,45 @@\n+//Written in the D programming language\n+/**\n+ * License: $(HTTP boost.org/LICENSE_1_0.txt, Boost License 1.0).\n+ *\n+ * Authors: Dmitry Olshansky\n+ *\n+ */\n+// !!! DO NOT EDIT !!!\n+// !!! Did you even read the comment? !!!\n+// This module is automatically generated from Unicode Character Database files\n+// https://github.com/dlang/phobos/blob/master/tools/unicode_table_generator.d\n+//dfmt off\n module std.internal.unicode_grapheme;\n import std.internal.unicode_tables;\n \n package(std):\n \n-static if (size_t.sizeof == 8)\n+\n+static if (size_t.sizeof == 4)\n {\n-    //832 bytes\n-    enum hangulLVTrieEntries = TrieEntry!(bool, 8, 5, 8)([0x0, 0x20, 0x40],\n-            [0x100, 0x80, 0xa00], [0x2010000000000, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x4000300020001, 0x1000700060005, 0x5000400030002, 0x2000100070006,\n-            0x6000500040003, 0x3000200010007, 0x7000600050004, 0x4000300020001,\n-            0x1000700060005, 0x5000400030002, 0x8000100070006, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x100000010000001, 0x1000000100000, 0x10000001000,\n-            0x1000000100000010, 0x10000001000000, 0x100000010000, 0x1000000100,\n-            0x100000010000001, 0x1000000100000, 0x10000001000,\n-            0x1000000100000010, 0x10000001000000, 0x100000010000, 0x1000000100,\n-            0x100000010000001, 0x1000000100000, 0x10000001000,\n-            0x1000000100000010, 0x10000001000000, 0x100000010000, 0x1000000100,\n-            0x100000010000001, 0x1000000100000, 0x10000001000,\n-            0x1000000100000010, 0x10000001000000, 0x100000010000, 0x1000000100,\n-            0x10000001000000, 0x100000010000, 0x100, 0x0, 0x0, 0x0, 0x0, 0x0]);\n-    //832 bytes\n-    enum hangulLVTTrieEntries = TrieEntry!(bool, 8, 5, 8)([0x0, 0x20, 0x40],\n-            [0x100, 0x80, 0xa00], [0x2010000000000, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x4000300020001, 0x1000700060005, 0x5000400030002, 0x2000100070006,\n-            0x6000500040003, 0x3000200010007, 0x7000600050004, 0x4000300020001,\n-            0x1000700060005, 0x5000400030002, 0x8000100070006, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0xfeffffffeffffffe, 0xfffeffffffefffff, 0xfffffeffffffefff,\n-            0xeffffffeffffffef, 0xffeffffffeffffff, 0xffffeffffffeffff,\n-            0xffffffeffffffeff, 0xfeffffffeffffffe, 0xfffeffffffefffff,\n-            0xfffffeffffffefff, 0xeffffffeffffffef, 0xffeffffffeffffff,\n-            0xffffeffffffeffff, 0xffffffeffffffeff, 0xfeffffffeffffffe,\n-            0xfffeffffffefffff, 0xfffffeffffffefff, 0xeffffffeffffffef,\n-            0xffeffffffeffffff, 0xffffeffffffeffff, 0xffffffeffffffeff,\n-            0xfeffffffeffffffe, 0xfffeffffffefffff, 0xfffffeffffffefff,\n-            0xeffffffeffffffef, 0xffeffffffeffffff, 0xffffeffffffeffff,\n-            0xffffffeffffffeff, 0xffeffffffeffffff, 0xffffeffffffeffff,\n-            0xffffffeff, 0x0, 0x0, 0x0, 0x0, 0x0]);\n-    //1536 bytes\n-    enum mcTrieEntries = TrieEntry!(bool, 8, 5, 8)([0x0, 0x20, 0x60], [0x100,\n-            0x100, 0x1800], [0x202030202020100, 0x206020205020204,\n-            0x202020202020202, 0x202020202020202, 0x202020202020202,\n-            0x202020202020202, 0x202020202020202, 0x202020202020202,\n-            0x202020202020202, 0x202020202020202, 0x202020202020202,\n-            0x202020202020202, 0x202020202020202, 0x202020202020202,\n-            0x202020202020202, 0x202020202020202, 0x202020202020202, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x3000200010000, 0x6000000050004, 0x7, 0x8000000000000,\n-            0xb000a00090000, 0xc, 0x0, 0x0, 0x0, 0x0, 0xd, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x110010000f000e, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x130012, 0x1400000000,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x15000000000000, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x160000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc800000000000008, 0xde01,\n-            0xc00000000000000c, 0x801981, 0xc000000000000008, 0x1,\n-            0xc000000000000008, 0x1a01, 0x400000000000000c, 0x801981,\n-            0xc000000000000000, 0x801dc6, 0xe, 0x1e, 0x400000000000000c,\n-            0x600d9f, 0xc00000000000000c, 0x801dc1, 0xc, 0xc0000ff038000,\n-            0xc000000000000000, 0x8000000000000000, 0x0, 0x0,\n-            0x1902180000000000, 0x3f9c00c00000, 0x1c009f98, 0x0, 0x0, 0x0,\n-            0xc040000000000000, 0x1bf, 0x1fb0e7800000000, 0x0,\n-            0xffff000000000000, 0x301, 0x6000000, 0x7e01a00a00000, 0x0, 0x0,\n-            0xe820000000000010, 0x1b, 0x34c200000004, 0xc5c8000000000,\n-            0x300ff000000000, 0x0, 0x0, 0xc000200000000, 0xc00000000000, 0x0,\n-            0x0, 0x0, 0x9800000000, 0x0, 0xfff0000000000003, 0xf, 0x0, 0xc0000,\n-            0xec30000000000008, 0x1, 0x19800000000000, 0x800000000002000, 0x0,\n-            0x20c80000000000, 0x0, 0x0, 0x0, 0x16d800000000, 0x5, 0x0,\n-            0x187000000000004, 0x0, 0x100000000000, 0x0, 0x8038000000000004,\n-            0x1, 0x0, 0x0, 0x40d00000000000, 0x0, 0x0, 0x7ffffffffffe0000, 0x0,\n-            0x0, 0x0, 0x7e06000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]);\n-    //2336 bytes\n-    enum graphemeExtendTrieEntries = TrieEntry!(bool, 8, 5, 8)([0x0, 0x20,\n-            0x70], [0x100, 0x140, 0x2d00], [0x402030202020100,\n-            0x207020206020205, 0x202020202020202, 0x202020202020202,\n-            0x202020202020202, 0x202020202020202, 0x202020202020202,\n-            0x202020202020202, 0x202020202020202, 0x202020202020202,\n-            0x202020202020202, 0x202020202020202, 0x202020202020202,\n-            0x202020202020202, 0x202020202020208, 0x202020202020202,\n-            0x202020202020202, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1000000000000, 0x5000400030002,\n-            0x9000800070006, 0xd000c000b000a, 0xf00000000000e,\n-            0x10000000000000, 0x14001300120011, 0x160015, 0x17, 0x0, 0x0,\n-            0x190018, 0x1a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x1b00000000, 0x1f001e001d001c, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20000000000000, 0x22002100000000,\n-            0x230000, 0x0, 0x2400000000, 0x0, 0x260025, 0x2700000000, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x28000000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x2a00290000, 0x0, 0x0, 0x0, 0x2b0000, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0xffffffffffffffff, 0xffffffffffff, 0x0, 0x0, 0x0, 0x0,\n-            0x3f8, 0x0, 0x0, 0x0, 0xbffffffffffe0000, 0xb6, 0x7ff0000,\n-            0x10000fffff800, 0x0, 0x3d9f9fc00000, 0xffff000000020000, 0x7ff,\n-            0x1ffc000000000, 0xff80000000000, 0x3eeffbc00000, 0xe000000, 0x0,\n-            0x7ffffff000000000, 0x1400000000000007, 0xc00fe21fe,\n-            0x5000000000000002, 0xc0080201e, 0x1000000000000006,\n-            0x23000000023986, 0x1000000000000006, 0xc000021be,\n-            0xd000000000000002, 0xc00c0201e, 0x4000000000000004, 0x802001,\n-            0xc000000000000000, 0xc00603dc1, 0x9000000000000000, 0xc00603044,\n-            0x4000000000000000, 0xc0080201e, 0x0, 0x805c8400,\n-            0x7f2000000000000, 0x7f80, 0x1bf2000000000000, 0x3f00,\n-            0x2a0000003000000, 0x7ffe000000000000, 0x1ffffffffeffe0df, 0x40,\n-            0x66fde00000000000, 0x1e0001c3000000, 0x20002064, 0x0, 0x0,\n-            0xe0000000, 0x0, 0x0, 0x1c0000001c0000, 0xc0000000c0000,\n-            0x3fb0000000000000, 0x200ffe40, 0x3800, 0x0, 0x20000000000, 0x0,\n-            0xe04018700000000, 0x0, 0x0, 0x0, 0x9800000, 0x9ff81fe57f400000,\n-            0x0, 0x0, 0x17d000000000000f, 0xff80000000004, 0xb3c00000003,\n-            0x3a34000000000, 0xcff00000000000, 0x0, 0x0, 0x1021fdfff70000, 0x0,\n-            0x0, 0x0, 0xf000007fffffffff, 0x3000, 0x0, 0x0, 0x1ffffffff0000,\n-            0x0, 0x0, 0x0, 0x3800000000000, 0x0, 0x8000000000000000, 0x0,\n-            0xffffffff00000000, 0xfc0000000000, 0x0, 0x6000000, 0x0, 0x0,\n-            0x3ff7800000000000, 0x80000000, 0x3000000000000, 0x6000000844, 0x0,\n-            0x0, 0x3ffff00000010, 0x3fc000000000, 0x3ff80, 0x13c8000000000007,\n-            0x0, 0x667e0000000000, 0x1008, 0xc19d000000000000,\n-            0x40300000000002, 0x0, 0x0, 0x0, 0x212000000000, 0x40000000, 0x0,\n-            0x0, 0x0, 0x7f0000ffff, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0000000, 0x0,\n-            0x0, 0x0, 0x0, 0x2000000000000000, 0x870000000000f06e, 0x0, 0x0,\n-            0x0, 0xff00000000000002, 0x7f, 0x678000000000003, 0x0,\n-            0x1fef8000000007, 0x0, 0x7fc0000000000003, 0x0, 0x0, 0x0,\n-            0xbf280000000000, 0x0, 0x0, 0x0, 0x78000, 0x0, 0x0,\n-            0xf807c3a000000000, 0x3c0000000fe7, 0x0, 0x0, 0x1c, 0x0, 0x0,\n-            0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff,\n-            0xffffffffffff, 0x0, 0x0, 0x0, 0x0]);\n+//832 bytes\n+enum hangulLVTrieEntries = TrieEntry!(bool, 8, 5, 8)([ 0x0,  0x40,  0x80], [ 0x100,  0x80,  0xa00], [ 0x0,  0x20100,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x20001,  0x40003,  0x60005,  0x10007,  0x30002,  0x50004,  0x70006,  0x20001,  0x40003,  0x60005,  0x10007,  0x30002,  0x50004,  0x70006,  0x20001,  0x40003,  0x60005,  0x10007,  0x30002,  0x50004,  0x70006,  0x80001,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x10000001,  0x1000000,  0x100000,  0x10000,  0x1000,  0x100,  0x10,  0x10000001,  0x1000000,  0x100000,  0x10000,  0x1000,  0x100,  0x10,  0x10000001,  0x1000000,  0x100000,  0x10000,  0x1000,  0x100,  0x10,  0x10000001,  0x1000000,  0x100000,  0x10000,  0x1000,  0x100,  0x10,  0x10000001,  0x1000000,  0x100000,  0x10000,  0x1000,  0x100,  0x10,  0x10000001,  0x1000000,  0x100000,  0x10000,  0x1000,  0x100,  0x10,  0x10000001,  0x1000000,  0x100000,  0x10000,  0x1000,  0x100,  0x10,  0x10000001,  0x1000000,  0x100000,  0x10000,  0x1000,  0x100,  0x10,  0x1000000,  0x100000,  0x10000,  0x1000,  0x100,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0]);\n+//832 bytes\n+enum hangulLVTTrieEntries = TrieEntry!(bool, 8, 5, 8)([ 0x0,  0x40,  0x80], [ 0x100,  0x80,  0xa00], [ 0x0,  0x20100,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x20001,  0x40003,  0x60005,  0x10007,  0x30002,  0x50004,  0x70006,  0x20001,  0x40003,  0x60005,  0x10007,  0x30002,  0x50004,  0x70006,  0x20001,  0x40003,  0x60005,  0x10007,  0x30002,  0x50004,  0x70006,  0x80001,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xeffffffe,  0xfeffffff,  0xffefffff,  0xfffeffff,  0xffffefff,  0xfffffeff,  0xffffffef,  0xeffffffe,  0xfeffffff,  0xffefffff,  0xfffeffff,  0xffffefff,  0xfffffeff,  0xffffffef,  0xeffffffe,  0xfeffffff,  0xffefffff,  0xfffeffff,  0xffffefff,  0xfffffeff,  0xffffffef,  0xeffffffe,  0xfeffffff,  0xffefffff,  0xfffeffff,  0xffffefff,  0xfffffeff,  0xffffffef,  0xeffffffe,  0xfeffffff,  0xffefffff,  0xfffeffff,  0xffffefff,  0xfffffeff,  0xffffffef,  0xeffffffe,  0xfeffffff,  0xffefffff,  0xfffeffff,  0xffffefff,  0xfffffeff,  0xffffffef,  0xeffffffe,  0xfeffffff,  0xffefffff,  0xfffeffff,  0xffffefff,  0xfffffeff,  0xffffffef,  0xeffffffe,  0xfeffffff,  0xffefffff,  0xfffeffff,  0xffffefff,  0xfffffeff,  0xffffffef,  0xfeffffff,  0xffefffff,  0xfffeffff,  0xffffefff,  0xfffffeff,  0xf,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0]);\n+//1920 bytes\n+enum mcTrieEntries = TrieEntry!(bool, 8, 5, 8)([ 0x0,  0x40,  0xc0], [ 0x100,  0x100,  0x2400], [ 0x2020100,  0x2020302,  0x5020204,  0x2060202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x10000,  0x30002,  0x50004,  0x60000,  0x7,  0x0,  0x0,  0x80000,  0x90000,  0xb000a,  0xc,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xd,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xf000e,  0x110010,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x130012,  0x150014,  0x170016,  0x190018,  0x1b001a,  0x1c,  0x1e001d,  0x20001f,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x210000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x220000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x8,  0xc8000000,  0xde01,  0x0,  0xc,  0xc0000000,  0x801981,  0x0,  0x8,  0xc0000000,  0x1,  0x0,  0x8,  0xc0000000,  0x1a01,  0x0,  0xc,  0x40000000,  0x801981,  0x0,  0x0,  0xc0000000,  0x801dc6,  0x0,  0xe,  0x0,  0x1e,  0x0,  0xc,  0x40000000,  0x600d9f,  0x80000,  0xc,  0xc0000000,  0x801dc1,  0x0,  0xc,  0x0,  0xff038000,  0xc0000,  0x0,  0xc0000000,  0x0,  0x80000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x19021800,  0xc00000,  0x3f9c,  0x1c009f98,  0x0,  0x0,  0x0,  0x200000,  0x100000,  0x0,  0x0,  0x0,  0xc0400000,  0x1bf,  0x0,  0x0,  0x1fb0e78,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x6000000,  0x0,  0xa00000,  0x7e01a,  0x0,  0x0,  0x0,  0x0,  0x10,  0xe8200000,  0x1b,  0x0,  0x4,  0x4c2,  0x0,  0xc5c80,  0x0,  0x300ff0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x800002,  0x0,  0xc000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x98,  0x0,  0x0,  0x3,  0xfff00000,  0xf,  0x0,  0x0,  0x0,  0xc0000,  0x0,  0x8,  0xcc300000,  0x1,  0x0,  0x0,  0x198000,  0x2000,  0x28000000,  0x0,  0x0,  0x0,  0x20c800,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x16d8,  0x5,  0x0,  0x0,  0x0,  0x4,  0x1870000,  0x0,  0x0,  0x0,  0x1000,  0x60,  0x0,  0x4,  0x80380000,  0x4001,  0x0,  0x0,  0x2c7000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7,  0xc,  0xc0000000,  0x80399e,  0xc,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe00000,  0x23,  0x0,  0x0,  0x7a070000,  0x2,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x4f038000,  0x0,  0x0,  0x0,  0x58070000,  0x0,  0x0,  0x0,  0x40d000,  0x0,  0x0,  0x0,  0x43,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1007000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x21bf0000,  0x5,  0x0,  0x0,  0x0,  0xf00e0000,  0x10,  0x0,  0x2000000,  0x1800000,  0x0,  0x800000,  0x0,  0x0,  0x0,  0x0,  0x40008000,  0x0,  0x0,  0x0,  0x120200,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x587c00,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x600000,  0x8,  0xc0300000,  0x2,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xfffe0000,  0xffffffff,  0xff,  0x0,  0x0,  0x30000,  0x0,  0x0,  0x0,  0x7e060,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0]);\n+//3456 bytes\n+enum graphemeExtendTrieEntries = TrieEntry!(bool, 8, 5, 8)([ 0x0,  0x40,  0x110], [ 0x100,  0x1a0,  0x4a00], [ 0x2020100,  0x4020302,  0x7020605,  0xa090802,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x202020b,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x10000,  0x30002,  0x50004,  0x70006,  0x90008,  0xb000a,  0xd000c,  0xe,  0xf0000,  0x0,  0x100000,  0x120011,  0x140013,  0x160015,  0x0,  0x17,  0x0,  0x0,  0x0,  0x0,  0x0,  0x190018,  0x0,  0x1a,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1b,  0x1d001c,  0x1f001e,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x200000,  0x0,  0x220021,  0x230000,  0x250024,  0x0,  0x0,  0x0,  0x26,  0x270000,  0x290028,  0x2b002a,  0x2d002c,  0x2f002e,  0x310030,  0x330032,  0x34,  0x360035,  0x380037,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x39,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3b003a,  0x0,  0x3c0000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3d,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3e0000,  0x3f0000,  0x40,  0x0,  0x0,  0x0,  0x41,  0x0,  0x0,  0x3b0042,  0x43,  0x44,  0x0,  0x460045,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x480047,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3f8,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xfffe0000,  0xbfffffff,  0xb6,  0x0,  0x7ff0000,  0x0,  0xfffff800,  0x10000,  0x0,  0x0,  0x9fc00000,  0x3d9f,  0x20000,  0xffff0000,  0x7ff,  0x0,  0x0,  0x1ffc0,  0x0,  0x200ff800,  0xfbc00000,  0x3eef,  0xe000000,  0x0,  0xff000000,  0x0,  0xfffffc00,  0xfffffffb,  0x7,  0x14000000,  0xfe21fe,  0xc,  0x2,  0x50000000,  0x80201e,  0x4000000c,  0x6,  0x10000000,  0x23986,  0x230000,  0x6,  0x10000000,  0x21be,  0xfc00000c,  0x2,  0xd0000000,  0xe0201e,  0xc,  0x4,  0x40000000,  0x802001,  0x0,  0x11,  0xd0000000,  0x603dc1,  0xc,  0x2,  0x90000000,  0x603044,  0xc,  0x3,  0x58000000,  0x80201e,  0xc,  0x2,  0x0,  0x805c8400,  0x0,  0x0,  0x7f20000,  0x7f80,  0x0,  0x0,  0x1ff20000,  0x7f00,  0x0,  0x3000000,  0x2a00000,  0x0,  0x7ffe0000,  0xfeffe0df,  0x1fffffff,  0x40,  0x0,  0x0,  0x66fde000,  0xc3000000,  0x1e0001,  0x20002064,  0x0,  0x0,  0x0,  0x0,  0x0,  0xe0000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1c0000,  0xc0000,  0xc0000,  0xc0000,  0x0,  0x3fb00000,  0x200ffe40,  0x0,  0xb800,  0x0,  0x0,  0x0,  0x60,  0x200,  0x0,  0x0,  0x0,  0xe040187,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x9800000,  0x0,  0x7f400000,  0x9ff81fe5,  0x0,  0xffff0000,  0x7fff,  0x0,  0xf,  0x17f00000,  0x4,  0xff800,  0x3,  0x3b3c,  0x0,  0x3a340,  0x0,  0xcff000,  0x0,  0x0,  0x0,  0x0,  0xfff70000,  0x31021fd,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xffffffff,  0xffffffff,  0x1000,  0x0,  0x0,  0x0,  0x0,  0x0,  0xffff0000,  0x1ffff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x38000,  0x0,  0x0,  0x0,  0x80000000,  0x0,  0x0,  0x0,  0xffffffff,  0x0,  0xfc00,  0x0,  0x0,  0x6000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3ff78000,  0xc0000000,  0x0,  0x0,  0x30000,  0x844,  0x1060,  0x0,  0x0,  0x0,  0x0,  0x30,  0x8003ffff,  0x0,  0x3fc0,  0x3ff80,  0x0,  0x7,  0x33c80000,  0x0,  0x20,  0x0,  0x667e00,  0x1008,  0x10000000,  0x0,  0xc19d0000,  0x2,  0x403000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x2120,  0x40000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xffff,  0xffff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xc0000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x20000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1,  0x0,  0x0,  0x0,  0x7c00000,  0x0,  0x0,  0x0,  0x0,  0xf06e,  0x87000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x60,  0x0,  0xf0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1800,  0x0,  0xe0000000,  0x0,  0x0,  0x1ffc0,  0x0,  0x3c,  0x0,  0x0,  0x0,  0x2,  0xff000000,  0x7f,  0x80190000,  0x3,  0x6780000,  0x4,  0x0,  0x7,  0x1fef80,  0x0,  0x80000,  0x3,  0x7fc00000,  0x9e00,  0x0,  0x0,  0x40d38000,  0x2,  0x0,  0x0,  0x0,  0x80000000,  0x7f8,  0x3,  0x58000000,  0x800001,  0x1f1fc0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xff000000,  0x4000005c,  0x0,  0x0,  0xa5f90000,  0xd,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xb03c8000,  0x30000001,  0x0,  0x0,  0xa7f80000,  0x1,  0x0,  0x0,  0xbf2800,  0x0,  0x0,  0xe0000000,  0xfbc,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x6ff8000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x58010000,  0x8,  0x0,  0x0,  0x0,  0xcf00000,  0x1,  0x7fe,  0x79f80000,  0xe7e0080,  0x0,  0x37ffc00,  0x0,  0x0,  0x0,  0x0,  0xbf7f0000,  0x0,  0x0,  0xfffc0000,  0x6dfcff,  0x0,  0x0,  0x0,  0xb47e0000,  0xbf,  0x0,  0xa30000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x180000,  0x3,  0x7c00000,  0x5,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3fff81,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1f0000,  0x0,  0x7f0000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x8000,  0x0,  0x78000,  0x0,  0x0,  0x10,  0x0,  0x0,  0x0,  0x0,  0x60000000,  0x0,  0x0,  0x0,  0xffffffff,  0xffff3fff,  0x7f,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xf807c3a0,  0xfe7,  0x3c00,  0x0,  0x0,  0x0,  0x0,  0x1c,  0x0,  0x0,  0x0,  0x0,  0x0,  0xffffffff,  0xf87fffff,  0xffffffff,  0x201fff,  0xf8000010,  0xfffe,  0x0,  0x0,  0xf9ffff7f,  0x7db,  0x0,  0x0,  0x8000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x4000,  0x0,  0xf000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xf000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7f0000,  0x0,  0x0,  0x0,  0x7f0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xffffffff,  0xffffffff,  0xffffffff,  0x0,  0x0,  0x0,  0x0,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0]);\n \n }\n \n-static if (size_t.sizeof == 4)\n+\n+static if (size_t.sizeof == 8)\n {\n-    //832 bytes\n-    enum hangulLVTrieEntries = TrieEntry!(bool, 8, 5, 8)([0x0, 0x40, 0x80],\n-            [0x100, 0x80, 0xa00], [0x0, 0x20100, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x20001, 0x40003, 0x60005, 0x10007, 0x30002, 0x50004, 0x70006,\n-            0x20001, 0x40003, 0x60005, 0x10007, 0x30002, 0x50004, 0x70006,\n-            0x20001, 0x40003, 0x60005, 0x10007, 0x30002, 0x50004, 0x70006,\n-            0x80001, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x10000001, 0x1000000, 0x100000, 0x10000,\n-            0x1000, 0x100, 0x10, 0x10000001, 0x1000000, 0x100000, 0x10000,\n-            0x1000, 0x100, 0x10, 0x10000001, 0x1000000, 0x100000, 0x10000,\n-            0x1000, 0x100, 0x10, 0x10000001, 0x1000000, 0x100000, 0x10000,\n-            0x1000, 0x100, 0x10, 0x10000001, 0x1000000, 0x100000, 0x10000,\n-            0x1000, 0x100, 0x10, 0x10000001, 0x1000000, 0x100000, 0x10000,\n-            0x1000, 0x100, 0x10, 0x10000001, 0x1000000, 0x100000, 0x10000,\n-            0x1000, 0x100, 0x10, 0x10000001, 0x1000000, 0x100000, 0x10000,\n-            0x1000, 0x100, 0x10, 0x1000000, 0x100000, 0x10000, 0x1000, 0x100,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]);\n-    //832 bytes\n-    enum hangulLVTTrieEntries = TrieEntry!(bool, 8, 5, 8)([0x0, 0x40, 0x80],\n-            [0x100, 0x80, 0xa00], [0x0, 0x20100, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x20001, 0x40003, 0x60005, 0x10007, 0x30002, 0x50004, 0x70006,\n-            0x20001, 0x40003, 0x60005, 0x10007, 0x30002, 0x50004, 0x70006,\n-            0x20001, 0x40003, 0x60005, 0x10007, 0x30002, 0x50004, 0x70006,\n-            0x80001, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0xeffffffe, 0xfeffffff, 0xffefffff, 0xfffeffff,\n-            0xffffefff, 0xfffffeff, 0xffffffef, 0xeffffffe, 0xfeffffff,\n-            0xffefffff, 0xfffeffff, 0xffffefff, 0xfffffeff, 0xffffffef,\n-            0xeffffffe, 0xfeffffff, 0xffefffff, 0xfffeffff, 0xffffefff,\n-            0xfffffeff, 0xffffffef, 0xeffffffe, 0xfeffffff, 0xffefffff,\n-            0xfffeffff, 0xffffefff, 0xfffffeff, 0xffffffef, 0xeffffffe,\n-            0xfeffffff, 0xffefffff, 0xfffeffff, 0xffffefff, 0xfffffeff,\n-            0xffffffef, 0xeffffffe, 0xfeffffff, 0xffefffff, 0xfffeffff,\n-            0xffffefff, 0xfffffeff, 0xffffffef, 0xeffffffe, 0xfeffffff,\n-            0xffefffff, 0xfffeffff, 0xffffefff, 0xfffffeff, 0xffffffef,\n-            0xeffffffe, 0xfeffffff, 0xffefffff, 0xfffeffff, 0xffffefff,\n-            0xfffffeff, 0xffffffef, 0xfeffffff, 0xffefffff, 0xfffeffff,\n-            0xffffefff, 0xfffffeff, 0xf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0]);\n-    //1536 bytes\n-    enum mcTrieEntries = TrieEntry!(bool, 8, 5, 8)([0x0, 0x40, 0xc0], [0x100,\n-            0x100, 0x1800], [0x2020100, 0x2020302, 0x5020204, 0x2060202,\n-            0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10000, 0x30002, 0x50004,\n-            0x60000, 0x7, 0x0, 0x0, 0x80000, 0x90000, 0xb000a, 0xc, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf000e, 0x110010,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x130012, 0x0, 0x0, 0x14, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x150000, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x160000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0xc8000000, 0xde01, 0x0,\n-            0xc, 0xc0000000, 0x801981, 0x0, 0x8, 0xc0000000, 0x1, 0x0, 0x8,\n-            0xc0000000, 0x1a01, 0x0, 0xc, 0x40000000, 0x801981, 0x0, 0x0,\n-            0xc0000000, 0x801dc6, 0x0, 0xe, 0x0, 0x1e, 0x0, 0xc, 0x40000000,\n-            0x600d9f, 0x0, 0xc, 0xc0000000, 0x801dc1, 0x0, 0xc, 0x0,\n-            0xff038000, 0xc0000, 0x0, 0xc0000000, 0x0, 0x80000000, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x19021800, 0xc00000, 0x3f9c, 0x1c009f98, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0400000, 0x1bf, 0x0, 0x0,\n-            0x1fb0e78, 0x0, 0x0, 0x0, 0xffff0000, 0x301, 0x0, 0x6000000, 0x0,\n-            0xa00000, 0x7e01a, 0x0, 0x0, 0x0, 0x0, 0x10, 0xe8200000, 0x1b, 0x0,\n-            0x4, 0x34c2, 0x0, 0xc5c80, 0x0, 0x300ff0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0xc0002, 0x0, 0xc000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x0,\n-            0x0, 0x3, 0xfff00000, 0xf, 0x0, 0x0, 0x0, 0xc0000, 0x0, 0x8,\n-            0xec300000, 0x1, 0x0, 0x0, 0x198000, 0x2000, 0x8000000, 0x0, 0x0,\n-            0x0, 0x20c800, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x16d8, 0x5, 0x0,\n-            0x0, 0x0, 0x4, 0x1870000, 0x0, 0x0, 0x0, 0x1000, 0x0, 0x0, 0x4,\n-            0x80380000, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40d000, 0x0, 0x0,\n-            0x0, 0x0, 0xfffe0000, 0x7fffffff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x7e060, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]);\n-    //2336 bytes\n-    enum graphemeExtendTrieEntries = TrieEntry!(bool, 8, 5, 8)([0x0, 0x40,\n-            0xe0], [0x100, 0x140, 0x2d00], [0x2020100, 0x4020302, 0x6020205,\n-            0x2070202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x2020208, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10000, 0x30002, 0x50004,\n-            0x70006, 0x90008, 0xb000a, 0xd000c, 0xe, 0xf0000, 0x0, 0x100000,\n-            0x120011, 0x140013, 0x160015, 0x0, 0x17, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x190018, 0x0, 0x1a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x1b, 0x1d001c, 0x1f001e, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x200000, 0x0, 0x220021, 0x230000,\n-            0x0, 0x0, 0x0, 0x0, 0x24, 0x0, 0x0, 0x260025, 0x0, 0x0, 0x27, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x280000, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x290000, 0x2a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2b0000,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0xffffffff, 0xffffffff, 0xffffffff, 0xffff, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x3f8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0xfffe0000, 0xbfffffff, 0xb6, 0x0, 0x7ff0000, 0x0, 0xfffff800,\n-            0x10000, 0x0, 0x0, 0x9fc00000, 0x3d9f, 0x20000, 0xffff0000, 0x7ff,\n-            0x0, 0x0, 0x1ffc0, 0x0, 0xff800, 0xfbc00000, 0x3eef, 0xe000000,\n-            0x0, 0x0, 0x0, 0x0, 0x7ffffff0, 0x7, 0x14000000, 0xfe21fe, 0xc,\n-            0x2, 0x50000000, 0x80201e, 0xc, 0x6, 0x10000000, 0x23986, 0x230000,\n-            0x6, 0x10000000, 0x21be, 0xc, 0x2, 0xd0000000, 0xc0201e, 0xc, 0x4,\n-            0x40000000, 0x802001, 0x0, 0x0, 0xc0000000, 0x603dc1, 0xc, 0x0,\n-            0x90000000, 0x603044, 0xc, 0x0, 0x40000000, 0x80201e, 0xc, 0x0,\n-            0x0, 0x805c8400, 0x0, 0x0, 0x7f20000, 0x7f80, 0x0, 0x0, 0x1bf20000,\n-            0x3f00, 0x0, 0x3000000, 0x2a00000, 0x0, 0x7ffe0000, 0xfeffe0df,\n-            0x1fffffff, 0x40, 0x0, 0x0, 0x66fde000, 0xc3000000, 0x1e0001,\n-            0x20002064, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0000000, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x1c0000, 0x1c0000, 0xc0000, 0xc0000, 0x0, 0x3fb00000,\n-            0x200ffe40, 0x0, 0x3800, 0x0, 0x0, 0x0, 0x0, 0x200, 0x0, 0x0, 0x0,\n-            0xe040187, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9800000, 0x0,\n-            0x7f400000, 0x9ff81fe5, 0x0, 0x0, 0x0, 0x0, 0xf, 0x17d00000, 0x4,\n-            0xff800, 0x3, 0xb3c, 0x0, 0x3a340, 0x0, 0xcff000, 0x0, 0x0, 0x0,\n-            0x0, 0xfff70000, 0x1021fd, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0xffffffff, 0xf000007f, 0x3000, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0xffff0000, 0x1ffff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38000,\n-            0x0, 0x0, 0x0, 0x80000000, 0x0, 0x0, 0x0, 0xffffffff, 0x0, 0xfc00,\n-            0x0, 0x0, 0x6000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3ff78000,\n-            0x80000000, 0x0, 0x0, 0x30000, 0x844, 0x60, 0x0, 0x0, 0x0, 0x0,\n-            0x10, 0x3ffff, 0x0, 0x3fc0, 0x3ff80, 0x0, 0x7, 0x13c80000, 0x0,\n-            0x0, 0x0, 0x667e00, 0x1008, 0x0, 0x0, 0xc19d0000, 0x2, 0x403000,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2120, 0x40000000, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0xffff, 0x7f, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0xc0000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x20000000, 0xf06e, 0x87000000, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x2, 0xff000000, 0x7f, 0x0, 0x3, 0x6780000, 0x0,\n-            0x0, 0x7, 0x1fef80, 0x0, 0x0, 0x3, 0x7fc00000, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0xbf2800, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78000,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf807c3a0, 0xfe7, 0x3c00, 0x0, 0x0,\n-            0x0, 0x0, 0x1c, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffffff, 0xffffffff,\n-            0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffff,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]);\n+//832 bytes\n+enum hangulLVTrieEntries = TrieEntry!(bool, 8, 5, 8)([ 0x0,  0x20,  0x40], [ 0x100,  0x80,  0xa00], [ 0x2010000000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x4000300020001,  0x1000700060005,  0x5000400030002,  0x2000100070006,  0x6000500040003,  0x3000200010007,  0x7000600050004,  0x4000300020001,  0x1000700060005,  0x5000400030002,  0x8000100070006,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x100000010000001,  0x1000000100000,  0x10000001000,  0x1000000100000010,  0x10000001000000,  0x100000010000,  0x1000000100,  0x100000010000001,  0x1000000100000,  0x10000001000,  0x1000000100000010,  0x10000001000000,  0x100000010000,  0x1000000100,  0x100000010000001,  0x1000000100000,  0x10000001000,  0x1000000100000010,  0x10000001000000,  0x100000010000,  0x1000000100,  0x100000010000001,  0x1000000100000,  0x10000001000,  0x1000000100000010,  0x10000001000000,  0x100000010000,  0x1000000100,  0x10000001000000,  0x100000010000,  0x100,  0x0,  0x0,  0x0,  0x0,  0x0]);\n+//832 bytes\n+enum hangulLVTTrieEntries = TrieEntry!(bool, 8, 5, 8)([ 0x0,  0x20,  0x40], [ 0x100,  0x80,  0xa00], [ 0x2010000000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x4000300020001,  0x1000700060005,  0x5000400030002,  0x2000100070006,  0x6000500040003,  0x3000200010007,  0x7000600050004,  0x4000300020001,  0x1000700060005,  0x5000400030002,  0x8000100070006,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xfeffffffeffffffe,  0xfffeffffffefffff,  0xfffffeffffffefff,  0xeffffffeffffffef,  0xffeffffffeffffff,  0xffffeffffffeffff,  0xffffffeffffffeff,  0xfeffffffeffffffe,  0xfffeffffffefffff,  0xfffffeffffffefff,  0xeffffffeffffffef,  0xffeffffffeffffff,  0xffffeffffffeffff,  0xffffffeffffffeff,  0xfeffffffeffffffe,  0xfffeffffffefffff,  0xfffffeffffffefff,  0xeffffffeffffffef,  0xffeffffffeffffff,  0xffffeffffffeffff,  0xffffffeffffffeff,  0xfeffffffeffffffe,  0xfffeffffffefffff,  0xfffffeffffffefff,  0xeffffffeffffffef,  0xffeffffffeffffff,  0xffffeffffffeffff,  0xffffffeffffffeff,  0xffeffffffeffffff,  0xffffeffffffeffff,  0xffffffeff,  0x0,  0x0,  0x0,  0x0,  0x0]);\n+//1920 bytes\n+enum mcTrieEntries = TrieEntry!(bool, 8, 5, 8)([ 0x0,  0x20,  0x60], [ 0x100,  0x100,  0x2400], [ 0x202030202020100,  0x206020205020204,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3000200010000,  0x6000000050004,  0x7,  0x8000000000000,  0xb000a00090000,  0xc,  0x0,  0x0,  0x0,  0x0,  0xd,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x110010000f000e,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x15001400130012,  0x19001800170016,  0x1c001b001a,  0x20001f001e001d,  0x0,  0x0,  0x0,  0x21000000000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x220000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xc800000000000008,  0xde01,  0xc00000000000000c,  0x801981,  0xc000000000000008,  0x1,  0xc000000000000008,  0x1a01,  0x400000000000000c,  0x801981,  0xc000000000000000,  0x801dc6,  0xe,  0x1e,  0x400000000000000c,  0x8000000600d9f,  0xc00000000000000c,  0x801dc1,  0xc,  0xc0000ff038000,  0xc000000000000000,  0x8000000000000000,  0x0,  0x0,  0x1902180000000000,  0x3f9c00c00000,  0x1c009f98,  0x0,  0x10000000200000,  0x0,  0xc040000000000000,  0x1bf,  0x1fb0e7800000000,  0x0,  0x0,  0x0,  0x6000000,  0x7e01a00a00000,  0x0,  0x0,  0xe820000000000010,  0x1b,  0x4c200000004,  0xc5c8000000000,  0x300ff000000000,  0x0,  0x0,  0x80000200000000,  0xc00000000000,  0x0,  0x0,  0x0,  0x9800000000,  0x0,  0xfff0000000000003,  0xf,  0x0,  0xc0000,  0xcc30000000000008,  0x1,  0x19800000000000,  0x2800000000002000,  0x0,  0x20c80000000000,  0x0,  0x0,  0x0,  0x16d800000000,  0x5,  0x0,  0x187000000000004,  0x0,  0x100000000000,  0x60,  0x8038000000000004,  0x4001,  0x2c700000000000,  0x0,  0x0,  0x700000000,  0xc00000000000000c,  0xc0080399e,  0x0,  0x0,  0xe0000000000000,  0x23,  0x7a07000000000000,  0x2,  0x0,  0x0,  0x4f03800000000000,  0x0,  0x5807000000000000,  0x0,  0x40d00000000000,  0x0,  0x4300000000,  0x0,  0x0,  0x0,  0x100700000000000,  0x0,  0x0,  0x0,  0x21bf000000000000,  0x5,  0x0,  0x10f00e0000,  0x200000000000000,  0x1800000,  0x800000,  0x0,  0x4000800000000000,  0x0,  0x12020000000000,  0x0,  0x0,  0x0,  0x587c00,  0x0,  0x0,  0x0,  0x0,  0x60000000000000,  0xc030000000000008,  0x2,  0x0,  0x0,  0x0,  0xfffffffffffe0000,  0xff,  0x3000000000000,  0x0,  0x7e06000000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0]);\n+//3456 bytes\n+enum graphemeExtendTrieEntries = TrieEntry!(bool, 8, 5, 8)([ 0x0,  0x20,  0x88], [ 0x100,  0x1a0,  0x4a00], [ 0x402030202020100,  0xa09080207020605,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x20202020202020b,  0x202020202020202,  0x202020202020202,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1000000000000,  0x5000400030002,  0x9000800070006,  0xd000c000b000a,  0xf00000000000e,  0x10000000000000,  0x14001300120011,  0x160015,  0x17,  0x0,  0x0,  0x190018,  0x1a,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1b00000000,  0x1f001e001d001c,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x20000000000000,  0x22002100000000,  0x25002400230000,  0x0,  0x2600000000,  0x29002800270000,  0x2d002c002b002a,  0x310030002f002e,  0x3400330032,  0x38003700360035,  0x0,  0x0,  0x0,  0x0,  0x0,  0x39,  0x0,  0x0,  0x0,  0x0,  0x3b003a00000000,  0x3c000000000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3d,  0x0,  0x0,  0x0,  0x3e000000000000,  0x40003f0000,  0x0,  0x4100000000,  0x0,  0x43003b0042,  0x44,  0x460045,  0x0,  0x0,  0x0,  0x0,  0x0,  0x480047,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xffffffffffffffff,  0xffffffffffff,  0x0,  0x0,  0x0,  0x0,  0x3f8,  0x0,  0x0,  0x0,  0xbffffffffffe0000,  0xb6,  0x7ff0000,  0x10000fffff800,  0x0,  0x3d9f9fc00000,  0xffff000000020000,  0x7ff,  0x1ffc000000000,  0x200ff80000000000,  0x3eeffbc00000,  0xe000000,  0xff000000,  0xfffffffbfffffc00,  0x1400000000000007,  0xc00fe21fe,  0x5000000000000002,  0x4000000c0080201e,  0x1000000000000006,  0x23000000023986,  0x1000000000000006,  0xfc00000c000021be,  0xd000000000000002,  0xc00e0201e,  0x4000000000000004,  0x802001,  0xd000000000000011,  0xc00603dc1,  0x9000000000000002,  0xc00603044,  0x5800000000000003,  0xc0080201e,  0x2,  0x805c8400,  0x7f2000000000000,  0x7f80,  0x1ff2000000000000,  0x7f00,  0x2a0000003000000,  0x7ffe000000000000,  0x1ffffffffeffe0df,  0x40,  0x66fde00000000000,  0x1e0001c3000000,  0x20002064,  0x0,  0x0,  0xe0000000,  0x0,  0x0,  0xc0000001c0000,  0xc0000000c0000,  0x3fb0000000000000,  0x200ffe40,  0xb800,  0x0,  0x20000000060,  0x0,  0xe04018700000000,  0x0,  0x0,  0x0,  0x9800000,  0x9ff81fe57f400000,  0xffff000000000000,  0x7fff,  0x17f000000000000f,  0xff80000000004,  0x3b3c00000003,  0x3a34000000000,  0xcff00000000000,  0x0,  0x0,  0x31021fdfff70000,  0x0,  0x0,  0x0,  0xffffffffffffffff,  0x1000,  0x0,  0x0,  0x1ffffffff0000,  0x0,  0x0,  0x0,  0x3800000000000,  0x0,  0x8000000000000000,  0x0,  0xffffffff00000000,  0xfc0000000000,  0x0,  0x6000000,  0x0,  0x0,  0x3ff7800000000000,  0xc0000000,  0x3000000000000,  0x106000000844,  0x0,  0x0,  0x8003ffff00000030,  0x3fc000000000,  0x3ff80,  0x33c8000000000007,  0x2000000000,  0x667e0000000000,  0x1000000000001008,  0xc19d000000000000,  0x40300000000002,  0x0,  0x0,  0x0,  0x212000000000,  0x40000000,  0x0,  0x0,  0x0,  0xffff0000ffff,  0x0,  0x0,  0x0,  0x0,  0x0,  0xc0000000,  0x0,  0x0,  0x0,  0x0,  0x2000000000000000,  0x0,  0x0,  0x0,  0x100000000,  0x0,  0x7c0000000000000,  0x0,  0x0,  0x870000000000f06e,  0x0,  0x0,  0x6000000000,  0xf000000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x180000000000,  0xe000000000000000,  0x0,  0x1ffc0,  0x3c,  0x0,  0xff00000000000002,  0x801900000000007f,  0x678000000000003,  0x4,  0x1fef8000000007,  0x8000000000000,  0x7fc0000000000003,  0x9e00,  0x40d3800000000000,  0x2,  0x0,  0x7f880000000,  0x5800000000000003,  0x1f1fc000800001,  0x0,  0x0,  0xff00000000000000,  0x4000005c,  0xa5f9000000000000,  0xd,  0x0,  0x0,  0xb03c800000000000,  0x30000001,  0xa7f8000000000000,  0x1,  0xbf280000000000,  0x0,  0xfbce0000000,  0x0,  0x0,  0x0,  0x6ff800000000000,  0x0,  0x0,  0x0,  0x5801000000000000,  0x8,  0x0,  0x10cf00000,  0x79f80000000007fe,  0xe7e0080,  0x37ffc00,  0x0,  0xbf7f000000000000,  0x0,  0x6dfcfffffc0000,  0x0,  0xb47e000000000000,  0xbf,  0xa30000,  0x0,  0x0,  0x0,  0x0,  0x18000000000000,  0x7c0000000000003,  0x5,  0x0,  0x0,  0x0,  0x3fff81,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1f000000000000,  0x7f000000000000,  0x0,  0x0,  0x0,  0x0,  0x8000,  0x78000,  0x1000000000,  0x0,  0x0,  0x60000000,  0x0,  0xffff3fffffffffff,  0x7f,  0x0,  0x0,  0x0,  0xf807c3a000000000,  0x3c0000000fe7,  0x0,  0x0,  0x1c,  0x0,  0x0,  0xf87fffffffffffff,  0x201fffffffffff,  0xfffef8000010,  0x0,  0x7dbf9ffff7f,  0x0,  0x8000,  0x0,  0x0,  0x0,  0x400000000000,  0xf00000000000,  0x0,  0x0,  0x0,  0xf00000000000,  0x0,  0x0,  0x0,  0x7f0000,  0x0,  0x7f0,  0x0,  0x0,  0xffffffff00000000,  0xffffffffffffffff,  0x0,  0x0,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffff,  0x0,  0x0,  0x0,  0x0]);\n \n }\n+"}, {"sha": "d459357896f18892a31e73c74d778cfdc8df03ab", "filename": "libphobos/src/std/internal/unicode_norm.d", "status": "modified", "additions": 33, "deletions": 536, "changes": 569, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f77948c567f331015dfa4d695718c2211dab0816/libphobos%2Fsrc%2Fstd%2Finternal%2Funicode_norm.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f77948c567f331015dfa4d695718c2211dab0816/libphobos%2Fsrc%2Fstd%2Finternal%2Funicode_norm.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Finternal%2Funicode_norm.d?ref=f77948c567f331015dfa4d695718c2211dab0816", "patch": "@@ -1,548 +1,45 @@\n+//Written in the D programming language\n+/**\n+ * License: $(HTTP boost.org/LICENSE_1_0.txt, Boost License 1.0).\n+ *\n+ * Authors: Dmitry Olshansky\n+ *\n+ */\n+// !!! DO NOT EDIT !!!\n+// !!! Did you even read the comment? !!!\n+// This module is automatically generated from Unicode Character Database files\n+// https://github.com/dlang/phobos/blob/master/tools/unicode_table_generator.d\n+//dfmt off\n module std.internal.unicode_norm;\n import std.internal.unicode_tables;\n \n package(std):\n \n-static if (size_t.sizeof == 8)\n+\n+static if (size_t.sizeof == 4)\n {\n-    //1600 bytes\n-    enum nfcQCTrieEntries = TrieEntry!(bool, 8, 5, 8)([0x0, 0x20, 0x60],\n-            [0x100, 0x100, 0x1a00], [0x302020202020100, 0x205020202020204,\n-            0x602020202020202, 0x202020202020202, 0x202020202020202,\n-            0x202020202020202, 0x202020202020202, 0x202020202020202,\n-            0x202020202020202, 0x202020202020202, 0x202020202020202,\n-            0x202020202020202, 0x202020202020202, 0x202020202020202,\n-            0x202020202020202, 0x202020202020202, 0x202020202020202, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x1000000000000, 0x200000000, 0x5000400030000, 0x8000000070006,\n-            0xa0009, 0x0, 0xb000000000000, 0xc000000000000, 0xf0000000e000d,\n-            0x0, 0x1000000000, 0x0, 0x11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x14001300120000,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x160015, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x170000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x1800120012, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x10361f8081a9fdf, 0x401000000000003f, 0x80, 0x0,\n-            0x0, 0x380000, 0x0, 0x0, 0x1000000000000000, 0xff000000,\n-            0x4000000000000000, 0xb0800000, 0x48000000000000, 0x4e000000, 0x0,\n-            0x0, 0x4000000000000000, 0x30c00000, 0x4000000000000000, 0x800000,\n-            0x0, 0x400000, 0x0, 0x600004, 0x4000000000000000, 0x800000, 0x0,\n-            0x80008400, 0x0, 0x168020010842008, 0x200108420080002, 0x0,\n-            0x400000000000, 0x0, 0x0, 0x0, 0x0, 0x3ffffe00000000,\n-            0xffffff0000000000, 0x7, 0x20000000000000, 0x0, 0x0, 0x0, 0x0,\n-            0x2aaa000000000000, 0x4800000000000000, 0x2a00c80808080a00, 0x3,\n-            0x0, 0x0, 0x0, 0xc4000000000, 0x0, 0x0, 0x0, 0x60000000000, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x10000000, 0x0, 0x0, 0x6000000, 0x0,\n-            0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff,\n-            0xffffffffffffffff, 0xfffffc657fe53fff, 0xffff3fffffffffff,\n-            0xffffffffffffffff, 0x3ffffff, 0x5f7ffc00a0000000, 0x7fdb, 0x0,\n-            0x0, 0x0, 0x0, 0x400000000000000, 0x0, 0x8000000000, 0x0, 0x0, 0x0,\n-            0x0, 0x1fc0000000, 0xf800000000000000, 0x1, 0x3fffffff, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0]);\n-    //1920 bytes\n-    enum nfdQCTrieEntries = TrieEntry!(bool, 8, 5, 8)([0x0, 0x20, 0x70],\n-            [0x100, 0x140, 0x2000], [0x504030202020100, 0x207020202020206,\n-            0x802020202020202, 0x202020202020202, 0x202020202020202,\n-            0x202020202020202, 0x202020202020202, 0x202020202020202,\n-            0x202020202020202, 0x202020202020202, 0x202020202020202,\n-            0x202020202020202, 0x202020202020202, 0x202020202020202,\n-            0x202020202020202, 0x202020202020202, 0x202020202020202, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x3000200010000, 0x5000600050004, 0x9000800070005, 0xc0005000b000a,\n-            0x500050005000d, 0x5000500050005, 0xe000500050005,\n-            0x10000f00050005, 0x14001300120011, 0x5000500050005,\n-            0x5001500050005, 0x5000500050005, 0x5000500050016, 0x5000500050005,\n-            0x5000500050005, 0x5000500050005, 0x5000500050005, 0x5000500050005,\n-            0x5000500050005, 0x5000500050005, 0x5000500050005, 0x5000500050005,\n-            0x5000500050005, 0x5000500050005, 0x5000500050005, 0x5000500050005,\n-            0x5000500050005, 0x17001700170017, 0x17001700170017,\n-            0x17001700170017, 0x17001700170017, 0x17001700170017,\n-            0x17001700170017, 0x17001700170017, 0x17001700170017,\n-            0x17001700170017, 0x17001700170017, 0x18001700170017,\n-            0x5000500050005, 0x5000500050005, 0x5000500050005, 0x5000500050005,\n-            0x5000500050005, 0x5000500050005, 0x5000500050005, 0x5000500050005,\n-            0x1a001900170005, 0x5000500050005, 0x5000500050005,\n-            0x5000500050005, 0x5000500050005, 0x5000500050005, 0x50005001c001b,\n-            0x5000500050005, 0x5000500050005, 0x5000500050005, 0x5000500050005,\n-            0x5000500050005, 0x5000500050005, 0x5000500050005, 0x50005001d0005,\n-            0x5000500050005, 0x5000500050005, 0x5000500050005, 0x5000500050005,\n-            0x5000500050005, 0x5000500050005, 0x5000500050005, 0x5000500050005,\n-            0x5000500050005, 0x5001e00170017, 0x5000500050005, 0x5000500050005,\n-            0x5000500050005, 0x5000500050005, 0x5000500050005, 0x5000500050005,\n-            0x5000500050005, 0x5000500050005, 0x5000500050005, 0x0, 0x0, 0x0,\n-            0xbe7effbf3e7effbf, 0x7ef1ff3ffffcffff, 0x7fffff3ffff3f1f8,\n-            0x1800300000000, 0xff31ffcfdfffe000, 0xfffc0cfffffff, 0x0, 0x0,\n-            0x0, 0x0, 0x401000000000001b, 0x1fc000001d7e0, 0x187c00,\n-            0x20000000200708b, 0xc00000708b0000, 0x0, 0x33ffcfcfccf0006, 0x0,\n-            0x0, 0x0, 0x0, 0x7c00000000, 0x0, 0x0, 0x80005, 0x12020000000000,\n-            0xff000000, 0x0, 0xb0001800, 0x48000000000000, 0x4e000000, 0x0,\n-            0x0, 0x0, 0x30001900, 0x100000, 0x1c00, 0x0, 0x100, 0x0, 0xd81,\n-            0x0, 0x1c00, 0x0, 0x74000000, 0x0, 0x168020010842008,\n-            0x200108420080002, 0x0, 0x4000000000, 0x0, 0x0, 0x0,\n-            0x2800000000045540, 0xb, 0x0, 0x0, 0xffffffffffffffff,\n-            0xffffffffffffffff, 0xffffffff0bffffff, 0x3ffffffffffffff,\n-            0xffffffff3f3fffff, 0x3fffffffaaff3f3f, 0x5fdfffffffffffff,\n-            0x3fdcffffefcfffde, 0x3, 0x0, 0x0, 0x0, 0xc4000000000, 0x0,\n-            0x40000c000000, 0xe000, 0x5000001210, 0x333e00500000292,\n-            0xf00000000333, 0x3c0f00000000, 0x60000000000, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x10000000, 0x0, 0x36db02a555555000, 0x5555500040100000,\n-            0x4790000036db02a5, 0xffffffffffffffff, 0xffffffffffffffff,\n-            0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff,\n-            0xffffffffffffffff, 0xfffffffff, 0x0, 0xfffffc657fe53fff,\n-            0xffff3fffffffffff, 0xffffffffffffffff, 0x3ffffff,\n-            0x5f7ffc00a0000000, 0x7fdb, 0x0, 0x0, 0x0, 0x0, 0x80014000000, 0x0,\n-            0xc00000000000, 0x0, 0x0, 0x0, 0x0, 0x1fc0000000,\n-            0xf800000000000000, 0x1, 0x3fffffff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]);\n-    //2560 bytes\n-    enum nfkcQCTrieEntries = TrieEntry!(bool, 8, 5, 8)([0x0, 0x20, 0x70],\n-            [0x100, 0x140, 0x3400], [0x402030202020100, 0x706020202020205,\n-            0x802020202020202, 0x202020202020202, 0x202020202020202,\n-            0x202020202020202, 0x202020202020202, 0x202020202020202,\n-            0x202020202020202, 0x202020202020202, 0x202020202020202,\n-            0x202020202020202, 0x202020202020202, 0x202020202020202,\n-            0x202020202020202, 0x202020202020202, 0x202020202020202, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x3000200010000, 0x4000600050004, 0x9000800070004, 0xd000c000b000a,\n-            0x40004000f000e, 0x4000400040004, 0x10000400040004,\n-            0x13001200110004, 0x17001600150014, 0x4000400040018,\n-            0x4001900040004, 0x1d001c001b001a, 0x210020001f001e,\n-            0x4000400040004, 0x4000400040004, 0x4000400040004, 0x4000400040004,\n-            0x4000400040004, 0x4000400040004, 0x4000400040004, 0x4000400040004,\n-            0x4000400040004, 0x4000400040004, 0x4000400040004, 0x4000400040004,\n-            0x22000400040004, 0x4000400040004, 0x4000400040004,\n-            0x4000400040004, 0x4000400040004, 0x4000400040004, 0x4000400040004,\n-            0x4000400040004, 0x4000400040004, 0x4000400040004, 0x4000400040004,\n-            0x4000400040004, 0x4000400040004, 0x24002300210004,\n-            0x27002600250021, 0x4000400040004, 0x4000400040004,\n-            0x4000400040004, 0x4000400040004, 0x4000400290028, 0x4000400040004,\n-            0x4000400040004, 0x4000400040004, 0x4000400040004, 0x4000400040004,\n-            0x4000400040004, 0x4000400040004, 0x40004002a0004,\n-            0x2e002d002c002b, 0x4000400040004, 0x4000400040004,\n-            0x4000400040004, 0x4000400040004, 0x4000400040004, 0x4002f00040004,\n-            0x4003100300004, 0x4000400040004, 0x4000400040004, 0x4000400040004,\n-            0x4000400040004, 0x4000400040004, 0x4000400040004, 0x4000400040004,\n-            0x4000400040004, 0x4000400040004, 0x4003200210021, 0x4000400040004,\n-            0x4000400040004, 0x4000400040004, 0x4000400040004, 0x4000400040004,\n-            0x4000400040004, 0x4000400040004, 0x4000400040004, 0x4000400040004,\n-            0x0, 0x0, 0x773c850100000000, 0x0, 0x800c000000000000,\n-            0x8000000000000201, 0x0, 0xe000000001ff0, 0x0, 0x0,\n-            0x1ff000000000000, 0x1f3f000000, 0x10361f8081a9fdf,\n-            0x441000000000003f, 0xb0, 0x2370000007f0000, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x80, 0x0, 0x0, 0x1e0000000380000, 0x0, 0x0,\n-            0x1000000000000000, 0xff000000, 0x4000000000000000, 0xb0800000,\n-            0x48000000000000, 0x4e000000, 0x0, 0x0, 0x4000000000000000,\n-            0x30c00000, 0x4000000000000000, 0x800000, 0x0, 0x400000, 0x0,\n-            0x600004, 0x4000000000000000, 0x800000, 0x0, 0x80008400,\n-            0x8000000000000, 0x0, 0x8000000000000, 0x30000000, 0x1000,\n-            0x3e8020010842008, 0x200108420080002, 0x0, 0x400000000000, 0x0,\n-            0x0, 0x1000000000000000, 0x0, 0x3ffffe00000000, 0xffffff0000000000,\n-            0x7, 0x20000000000000, 0x0, 0x0, 0x0, 0xf7ff700000000000,\n-            0x10007ffffffbfff, 0xfffffffff8000000, 0x0, 0x0, 0x0, 0xc000000,\n-            0x0, 0x0, 0x2aaa000000000000, 0xe800000000000000,\n-            0x6a00e808e808ea03, 0x50d88070008207ff, 0xfff3000080800380,\n-            0x1001fff7fff, 0x0, 0xfbfbbd573e6ffeef, 0xffffffffffff03e1, 0x200,\n-            0x0, 0x1b00000000000, 0x0, 0x0, 0x0, 0x60000000000, 0x0, 0x0, 0x0,\n-            0x0, 0xffffffff00000000, 0xffffffffffffffff, 0x7ffffffffff, 0x1000,\n-            0x70000000000000, 0x0, 0x10000000, 0x0, 0x3000000000000000, 0x0,\n-            0x0, 0x0, 0x800000000000, 0x0, 0x0, 0x0, 0x0, 0x80000000,\n-            0x8000000000000, 0xffffffffffffffff, 0xffffffffffffffff,\n-            0xffffffffffffffff, 0x3fffff, 0x740000000000001, 0x0, 0x9e000000,\n-            0x8000000000000000, 0xfffe000000000000, 0xffffffffffffffff,\n-            0xfffc7fff, 0x0, 0xffffffff7fffffff, 0x7fffffffffff00ff,\n-            0xffffffffffffffff, 0x7fffffffffffffff, 0xffffffffffffffff,\n-            0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0x0,\n-            0x1000000000000, 0x0, 0x300000000000000, 0xfffffc657fe53fff,\n-            0xffff3fffffffffff, 0xffffffffffffffff, 0x3ffffff,\n-            0x5f7fffffa0f8007f, 0xffffffffffffffdb, 0x3ffffffffffff,\n-            0xfffffffffff80000, 0x3fffffffffffffff, 0xffffffffffff0000,\n-            0xfffffffffffcffff, 0x1fff0000000000ff, 0xffff000003ff0000,\n-            0xffd70f7ffff7ff9f, 0xffffffffffffffff, 0x1fffffffffffffff,\n-            0xfffffffffffffffe, 0xffffffffffffffff, 0x7fffffffffffffff,\n-            0x7f7f1cfcfcfc, 0x0, 0x0, 0x400000000000000, 0x0, 0x8000000000,\n-            0x0, 0x0, 0x0, 0x0, 0x1fc0000000, 0xf800000000000000, 0x1,\n-            0xffffffffffffffff, 0xffffffffffdfffff, 0xebffde64dfffffff,\n-            0xffffffffffffffef, 0x7bffffffdfdfe7bf, 0xfffffffffffdfc5f,\n-            0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff,\n-            0xffffffffffffffff, 0xffffff3fffffffff, 0xffffffffffffffff,\n-            0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff,\n-            0xffffffffffffcfff, 0xaf7fe96ffffffef, 0x5ef7f796aa96ea84,\n-            0xffffbee0ffffbff, 0x0, 0xffff7fffffff07ff, 0xc000000ffff, 0x10000,\n-            0x0, 0x7ffffffffff0007, 0x301ff, 0x0, 0x0, 0x3fffffff, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0]);\n-    //2656 bytes\n-    enum nfkdQCTrieEntries = TrieEntry!(bool, 8, 5, 8)([0x0, 0x20, 0x78],\n-            [0x100, 0x160, 0x3500], [0x504030202020100, 0x807020202020206,\n-            0x902020202020202, 0x202020202020202, 0x202020202020202,\n-            0x202020202020202, 0x202020202020202, 0x202020202020202,\n-            0x202020202020202, 0x202020202020202, 0x202020202020202,\n-            0x202020202020202, 0x202020202020202, 0x202020202020202,\n-            0x202020202020202, 0x202020202020202, 0x202020202020202, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x3000200010000, 0x7000600050004, 0xa000900080007, 0xe000d000c000b,\n-            0x700070007000f, 0x7000700070007, 0x10000700070007,\n-            0x13001200110007, 0x17001600150014, 0x7000700070018,\n-            0x7001900070007, 0x1d001c001b001a, 0x210020001f001e,\n-            0x7000700070007, 0x7000700070007, 0x7000700070007, 0x7000700070007,\n-            0x7000700070007, 0x7000700070007, 0x7000700070007, 0x7000700070007,\n-            0x7000700070007, 0x7000700070007, 0x7000700070007, 0x7000700070007,\n-            0x22000700070007, 0x7000700070007, 0x21002100210021,\n-            0x21002100210021, 0x21002100210021, 0x21002100210021,\n-            0x21002100210021, 0x21002100210021, 0x21002100210021,\n-            0x21002100210021, 0x21002100210021, 0x21002100210021,\n-            0x23002100210021, 0x7000700070007, 0x7000700070007,\n-            0x7000700070007, 0x7000700070007, 0x7000700070007, 0x7000700070007,\n-            0x7000700070007, 0x7000700070007, 0x25002400210007,\n-            0x28002700260021, 0x7000700070007, 0x7000700070007,\n-            0x7000700070007, 0x7000700070007, 0x70007002a0029, 0x7000700070007,\n-            0x7000700070007, 0x7000700070007, 0x7000700070007, 0x7000700070007,\n-            0x7000700070007, 0x7000700070007, 0x70007002b0007,\n-            0x2f002e002d002c, 0x7000700070007, 0x7000700070007,\n-            0x7000700070007, 0x7000700070007, 0x7000700070007, 0x7003000070007,\n-            0x7003200310007, 0x7000700070007, 0x7000700070007, 0x7000700070007,\n-            0x7000700070007, 0x7000700070007, 0x7000700070007, 0x7000700070007,\n-            0x7000700070007, 0x7000700070007, 0x7003300210021, 0x7000700070007,\n-            0x7000700070007, 0x7000700070007, 0x7000700070007, 0x7000700070007,\n-            0x7000700070007, 0x7000700070007, 0x7000700070007, 0x7000700070007,\n-            0x0, 0x0, 0x773c850100000000, 0xbe7effbf3e7effbf,\n-            0xfefdff3ffffcffff, 0xffffff3ffff3f3f9, 0x1800300000000,\n-            0xff3fffcfdffffff0, 0xfffc0cfffffff, 0x0, 0x1ff000000000000,\n-            0x1f3f000000, 0x0, 0x441000000000001b, 0x1fc000001d7f0,\n-            0x2370000007f7c00, 0x20000000200708b, 0xc00000708b0000, 0x0,\n-            0x33ffcfcfccf0006, 0x0, 0x0, 0x80, 0x0, 0x7c00000000,\n-            0x1e0000000000000, 0x0, 0x80005, 0x0, 0x0, 0x0, 0x0,\n-            0x12020000000000, 0xff000000, 0x0, 0xb0001800, 0x48000000000000,\n-            0x4e000000, 0x0, 0x0, 0x0, 0x30001900, 0x100000, 0x1c00, 0x0,\n-            0x100, 0x0, 0xd81, 0x0, 0x1c00, 0x0, 0x74000000, 0x8000000000000,\n-            0x0, 0x8000000000000, 0x30000000, 0x1000, 0x3e8020010842008,\n-            0x200108420080002, 0x0, 0x4000000000, 0x0, 0x0, 0x1000000000000000,\n-            0x2800000000045540, 0xb, 0x0, 0x0, 0xf7ff700000000000,\n-            0x10007ffffffbfff, 0xfffffffff8000000, 0x0, 0xffffffffffffffff,\n-            0xffffffffffffffff, 0xffffffff0fffffff, 0x3ffffffffffffff,\n-            0xffffffff3f3fffff, 0x3fffffffaaff3f3f, 0xffdfffffffffffff,\n-            0x7fdcffffefcfffdf, 0x50d88070008207ff, 0xfff3000080800380,\n-            0x1001fff7fff, 0x0, 0xfbfbbd573e6ffeef, 0xffffffffffff03e1,\n-            0x40000c000200, 0xe000, 0x1b05000001210, 0x333e00500000292,\n-            0xf00000000333, 0x3c0f00000000, 0x60000000000, 0x0, 0x0, 0x0, 0x0,\n-            0xffffffff00000000, 0xffffffffffffffff, 0x7ffffffffff, 0x1000,\n-            0x70000000000000, 0x0, 0x10000000, 0x0, 0x3000000000000000, 0x0,\n-            0x0, 0x0, 0x800000000000, 0x0, 0x0, 0x0, 0x0, 0x80000000,\n-            0x8000000000000, 0xffffffffffffffff, 0xffffffffffffffff,\n-            0xffffffffffffffff, 0x3fffff, 0x740000000000001,\n-            0x36db02a555555000, 0x55555000d8100000, 0xc790000036db02a5,\n-            0xfffe000000000000, 0xffffffffffffffff, 0xfffc7fff, 0x0,\n-            0xffffffff7fffffff, 0x7fffffffffff00ff, 0xffffffffffffffff,\n-            0x7fffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff,\n-            0xffffffffffffffff, 0xffffffffffffffff, 0x0, 0x1000000000000, 0x0,\n-            0x300000000000000, 0xffffffffffffffff, 0xffffffffffffffff,\n-            0xfffffffff, 0x0, 0xfffffc657fe53fff, 0xffff3fffffffffff,\n-            0xffffffffffffffff, 0x3ffffff, 0x5f7fffffa0f8007f,\n-            0xffffffffffffffdb, 0x3ffffffffffff, 0xfffffffffff80000,\n-            0x3fffffffffffffff, 0xffffffffffff0000, 0xfffffffffffcffff,\n-            0x1fff0000000000ff, 0xffff000003ff0000, 0xffd70f7ffff7ff9f,\n-            0xffffffffffffffff, 0x1fffffffffffffff, 0xfffffffffffffffe,\n-            0xffffffffffffffff, 0x7fffffffffffffff, 0x7f7f1cfcfcfc, 0x0, 0x0,\n-            0x80014000000, 0x0, 0xc00000000000, 0x0, 0x0, 0x0, 0x0,\n-            0x1fc0000000, 0xf800000000000000, 0x1, 0xffffffffffffffff,\n-            0xffffffffffdfffff, 0xebffde64dfffffff, 0xffffffffffffffef,\n-            0x7bffffffdfdfe7bf, 0xfffffffffffdfc5f, 0xffffffffffffffff,\n-            0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff,\n-            0xffffff3fffffffff, 0xffffffffffffffff, 0xffffffffffffffff,\n-            0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffcfff,\n-            0xaf7fe96ffffffef, 0x5ef7f796aa96ea84, 0xffffbee0ffffbff, 0x0,\n-            0xffff7fffffff07ff, 0xc000000ffff, 0x10000, 0x0, 0x7ffffffffff0007,\n-            0x301ff, 0x0, 0x0, 0x3fffffff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]);\n+//1728 bytes\n+enum nfcQCTrieEntries = TrieEntry!(bool, 8, 5, 8)([ 0x0,  0x40,  0xc0], [ 0x100,  0x100,  0x1e00], [ 0x2020100,  0x3020202,  0x2020204,  0x2050202,  0x2020202,  0x6020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x10000,  0x0,  0x2,  0x30000,  0x50004,  0x70006,  0x80000,  0xa0009,  0x0,  0x0,  0x0,  0x0,  0xb0000,  0x0,  0xc0000,  0xe000d,  0xf0000,  0x0,  0x0,  0x0,  0x10,  0x0,  0x0,  0x11,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x120000,  0x140013,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x160015,  0x170000,  0x190018,  0x0,  0x1a0000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1b0000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x120012,  0x1c,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x81a9fdf,  0x10361f8,  0x3f,  0x40100000,  0x80,  0x0,  0x0,  0x0,  0x0,  0x0,  0x380000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x10000000,  0xff000000,  0x0,  0x0,  0x40000000,  0xb0800000,  0x0,  0x0,  0x480000,  0x4e000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x40000000,  0x30c00000,  0x0,  0x0,  0x40000000,  0x800000,  0x0,  0x0,  0x0,  0x400000,  0x0,  0x0,  0x0,  0x600004,  0x0,  0x0,  0x40000000,  0x800000,  0x0,  0x0,  0x0,  0x80008400,  0x0,  0x0,  0x0,  0x10842008,  0x1680200,  0x20080002,  0x2001084,  0x0,  0x0,  0x0,  0x4000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3ffffe,  0x0,  0xffffff00,  0x7,  0x0,  0x0,  0x200000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x2aaa0000,  0x0,  0x48000000,  0x8080a00,  0x2a00c808,  0x3,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xc40,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x600,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x10000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x6000000,  0x0,  0x0,  0x0,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x7fe53fff,  0xfffffc65,  0xffffffff,  0xffff3fff,  0xffffffff,  0xffffffff,  0x3ffffff,  0x0,  0xa0000000,  0x5f7ffc00,  0x7fdb,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x4000000,  0x0,  0x0,  0x0,  0x80,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x40000000,  0x800000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x24010000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x8000,  0x0,  0x0,  0x0,  0x10000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xc0000000,  0x1f,  0x0,  0xf8000000,  0x1,  0x0,  0x3fffffff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0]);\n+//2048 bytes\n+enum nfdQCTrieEntries = TrieEntry!(bool, 8, 5, 8)([ 0x0,  0x40,  0xe0], [ 0x100,  0x140,  0x2400], [ 0x2020100,  0x5040302,  0x2020206,  0x2070202,  0x2020202,  0x8020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x10000,  0x30002,  0x50004,  0x50006,  0x70005,  0x90008,  0xb000a,  0xc0005,  0x5000d,  0x50005,  0x50005,  0x50005,  0x50005,  0xe0005,  0x50005,  0x10000f,  0x120011,  0x140013,  0x50005,  0x50005,  0x50005,  0x50015,  0x50005,  0x50005,  0x50016,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x170017,  0x170017,  0x170017,  0x170017,  0x170017,  0x170017,  0x170017,  0x170017,  0x170017,  0x170017,  0x170017,  0x170017,  0x170017,  0x170017,  0x170017,  0x170017,  0x170017,  0x170017,  0x170017,  0x170017,  0x170017,  0x180017,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x170005,  0x1a0019,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x1c001b,  0x1d0005,  0x1f001e,  0x50005,  0x200005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x210005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x170017,  0x50022,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x50005,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3e7effbf,  0xbe7effbf,  0xfffcffff,  0x7ef1ff3f,  0xfff3f1f8,  0x7fffff3f,  0x0,  0x18003,  0xdfffe000,  0xff31ffcf,  0xcfffffff,  0xfffc0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1b,  0x40100000,  0x1d7e0,  0x1fc00,  0x187c00,  0x0,  0x200708b,  0x2000000,  0x708b0000,  0xc00000,  0x0,  0x0,  0xfccf0006,  0x33ffcfc,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x7c,  0x0,  0x0,  0x0,  0x0,  0x80005,  0x0,  0x0,  0x120200,  0xff000000,  0x0,  0x0,  0x0,  0xb0001800,  0x0,  0x0,  0x480000,  0x4e000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x30001900,  0x0,  0x100000,  0x0,  0x1c00,  0x0,  0x0,  0x0,  0x100,  0x0,  0x0,  0x0,  0xd81,  0x0,  0x0,  0x0,  0x1c00,  0x0,  0x0,  0x0,  0x74000000,  0x0,  0x0,  0x0,  0x10842008,  0x1680200,  0x20080002,  0x2001084,  0x0,  0x0,  0x0,  0x40,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x45540,  0x28000000,  0xb,  0x0,  0x0,  0x0,  0x0,  0x0,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xbffffff,  0xffffffff,  0xffffffff,  0x3ffffff,  0x3f3fffff,  0xffffffff,  0xaaff3f3f,  0x3fffffff,  0xffffffff,  0x5fdfffff,  0xefcfffde,  0x3fdcffff,  0x3,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xc40,  0x0,  0x0,  0xc000000,  0x4000,  0xe000,  0x0,  0x1210,  0x50,  0x292,  0x333e005,  0x333,  0xf000,  0x0,  0x3c0f,  0x0,  0x600,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x10000000,  0x0,  0x0,  0x0,  0x55555000,  0x36db02a5,  0x40100000,  0x55555000,  0x36db02a5,  0x47900000,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xf,  0x0,  0x0,  0x7fe53fff,  0xfffffc65,  0xffffffff,  0xffff3fff,  0xffffffff,  0xffffffff,  0x3ffffff,  0x0,  0xa0000000,  0x5f7ffc00,  0x7fdb,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x14000000,  0x800,  0x0,  0x0,  0x0,  0xc000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1800,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x58000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xc000000,  0x0,  0x0,  0x0,  0x1000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xc0000000,  0x1f,  0x0,  0xf8000000,  0x1,  0x0,  0x3fffffff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0]);\n+//2848 bytes\n+enum nfkcQCTrieEntries = TrieEntry!(bool, 8, 5, 8)([ 0x0,  0x40,  0xe0], [ 0x100,  0x140,  0x3d00], [ 0x2020100,  0x4020302,  0x2020205,  0x7060202,  0x2020202,  0x8020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x10000,  0x30002,  0x50004,  0x40006,  0x70004,  0x90008,  0xb000a,  0xd000c,  0xf000e,  0x40004,  0x40004,  0x40004,  0x40004,  0x100004,  0x110004,  0x130012,  0x150014,  0x170016,  0x40018,  0x40004,  0x40004,  0x40019,  0x1b001a,  0x1d001c,  0x1f001e,  0x210020,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x230022,  0x40004,  0x240004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x210004,  0x260025,  0x270021,  0x290028,  0x40004,  0x40004,  0x40004,  0x2a0004,  0x40004,  0x40004,  0x40004,  0x40004,  0x2c002b,  0x2d0004,  0x2f002e,  0x40004,  0x300004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x310004,  0x40004,  0x330032,  0x350034,  0x40004,  0x40004,  0x40004,  0x40004,  0x40036,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40037,  0x380004,  0x40039,  0x40004,  0x40004,  0x40004,  0x3a0004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x210021,  0x4003b,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x40004,  0x0,  0x0,  0x0,  0x0,  0x0,  0x773c8501,  0x0,  0x0,  0x0,  0x800c0000,  0x201,  0x80000000,  0x0,  0x0,  0x1ff0,  0xe0000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1ff0000,  0x3f000000,  0x1f,  0x81a9fdf,  0x10361f8,  0x3f,  0x44100000,  0xb0,  0x0,  0x7f0000,  0x2370000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x80,  0x0,  0x0,  0x0,  0x0,  0x0,  0x380000,  0x1e00000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x10000000,  0xff000000,  0x0,  0x0,  0x40000000,  0xb0800000,  0x0,  0x0,  0x480000,  0x4e000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x40000000,  0x30c00000,  0x0,  0x0,  0x40000000,  0x800000,  0x0,  0x0,  0x0,  0x400000,  0x0,  0x0,  0x0,  0x600004,  0x0,  0x0,  0x40000000,  0x800000,  0x0,  0x0,  0x0,  0x80008400,  0x0,  0x0,  0x80000,  0x0,  0x0,  0x0,  0x80000,  0x30000000,  0x0,  0x1000,  0x0,  0x10842008,  0x3e80200,  0x20080002,  0x2001084,  0x0,  0x0,  0x0,  0x4000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x10000000,  0x0,  0x0,  0x0,  0x3ffffe,  0x0,  0xffffff00,  0x7,  0x0,  0x0,  0x200000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xf7ff7000,  0xffffbfff,  0x10007ff,  0xf8000000,  0xffffffff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xc000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x2aaa0000,  0x0,  0xe8000000,  0xe808ea03,  0x6a00e808,  0x8207ff,  0x50d88070,  0x80800380,  0xfff30000,  0x1fff7fff,  0x100,  0x0,  0x0,  0x3e6ffeef,  0xfbfbbd57,  0xffff03e1,  0xffffffff,  0x200,  0x0,  0x0,  0x0,  0x0,  0x1b000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x600,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x7ff,  0x1000,  0x0,  0x0,  0x700000,  0x0,  0x0,  0x10000000,  0x0,  0x0,  0x0,  0x0,  0x30000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x8000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x80000000,  0x0,  0x0,  0x80000,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x3fffff,  0x0,  0x1,  0x7400000,  0x0,  0x0,  0x9e000000,  0x0,  0x0,  0x80000000,  0x0,  0xfffe0000,  0xffffffff,  0xffffffff,  0xfffc7fff,  0x0,  0x0,  0x0,  0x7fffffff,  0xffffffff,  0xffff00ff,  0x7fffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x0,  0x0,  0x0,  0x0,  0x30000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x10000,  0x0,  0x0,  0x0,  0x31c0000,  0x0,  0x0,  0xf0000000,  0x200,  0x0,  0x0,  0x0,  0x0,  0x7fe53fff,  0xfffffc65,  0xffffffff,  0xffff3fff,  0xffffffff,  0xffffffff,  0x3ffffff,  0x0,  0xa0f8007f,  0x5f7fffff,  0xffffffdb,  0xffffffff,  0xffffffff,  0x3ffff,  0xfff80000,  0xffffffff,  0xffffffff,  0x3fffffff,  0xffff0000,  0xffffffff,  0xfffcffff,  0xffffffff,  0xff,  0x1fff0000,  0x3ff0000,  0xffff0000,  0xfff7ff9f,  0xffd70f7f,  0xffffffff,  0xffffffff,  0xffffffff,  0x1fffffff,  0xfffffffe,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x7fffffff,  0x1cfcfcfc,  0x7f7f,  0x0,  0x0,  0x0,  0x0,  0xffffffbe,  0x7fdffff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x4000000,  0x0,  0x0,  0x0,  0x80,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x40000000,  0x800000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x24010000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x8000,  0x0,  0x0,  0x0,  0x10000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xc0000000,  0x1f,  0x0,  0xf8000000,  0x1,  0x0,  0xffffffff,  0xffffffff,  0xffdfffff,  0xffffffff,  0xdfffffff,  0xebffde64,  0xffffffef,  0xffffffff,  0xdfdfe7bf,  0x7bffffff,  0xfffdfc5f,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffff3f,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffcfff,  0xffffffff,  0x0,  0xffff0000,  0xffffffff,  0x3fff,  0x0,  0x0,  0x0,  0x0,  0xffffffef,  0xaf7fe96,  0xaa96ea84,  0x5ef7f796,  0xffffbff,  0xffffbee,  0x0,  0x0,  0xffff07ff,  0xffff7fff,  0xffff,  0x1c00,  0x10000,  0x0,  0x0,  0x0,  0xffff0007,  0xfffffff,  0x301ff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3ff0000,  0x3fffffff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0]);\n+//2944 bytes\n+enum nfkdQCTrieEntries = TrieEntry!(bool, 8, 5, 8)([ 0x0,  0x40,  0xf0], [ 0x100,  0x160,  0x3e00], [ 0x2020100,  0x5040302,  0x2020206,  0x8070202,  0x2020202,  0x9020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x2020202,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x10000,  0x30002,  0x50004,  0x70006,  0x80007,  0xa0009,  0xc000b,  0xe000d,  0x7000f,  0x70007,  0x70007,  0x70007,  0x70007,  0x100007,  0x110007,  0x130012,  0x150014,  0x170016,  0x70018,  0x70007,  0x70007,  0x70019,  0x1b001a,  0x1d001c,  0x1f001e,  0x210020,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x230022,  0x70007,  0x240007,  0x210021,  0x210021,  0x210021,  0x210021,  0x210021,  0x210021,  0x210021,  0x210021,  0x210021,  0x210021,  0x210021,  0x210021,  0x210021,  0x210021,  0x210021,  0x210021,  0x210021,  0x210021,  0x210021,  0x210021,  0x210021,  0x250021,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x210007,  0x270026,  0x280021,  0x2a0029,  0x70007,  0x70007,  0x70007,  0x2b0007,  0x70007,  0x70007,  0x70007,  0x70007,  0x2d002c,  0x2e0007,  0x30002f,  0x70007,  0x310007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x320007,  0x70007,  0x340033,  0x360035,  0x70007,  0x70007,  0x70007,  0x70007,  0x70037,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70038,  0x390007,  0x7003a,  0x70007,  0x70007,  0x70007,  0x3b0007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x210021,  0x7003c,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x70007,  0x0,  0x0,  0x0,  0x0,  0x0,  0x773c8501,  0x3e7effbf,  0xbe7effbf,  0xfffcffff,  0xfefdff3f,  0xfff3f3f9,  0xffffff3f,  0x0,  0x18003,  0xdffffff0,  0xff3fffcf,  0xcfffffff,  0xfffc0,  0x0,  0x0,  0x0,  0x1ff0000,  0x3f000000,  0x1f,  0x0,  0x0,  0x1b,  0x44100000,  0x1d7f0,  0x1fc00,  0x7f7c00,  0x2370000,  0x200708b,  0x2000000,  0x708b0000,  0xc00000,  0x0,  0x0,  0xfccf0006,  0x33ffcfc,  0x0,  0x0,  0x0,  0x0,  0x80,  0x0,  0x0,  0x0,  0x0,  0x7c,  0x0,  0x1e00000,  0x0,  0x0,  0x80005,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x120200,  0xff000000,  0x0,  0x0,  0x0,  0xb0001800,  0x0,  0x0,  0x480000,  0x4e000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x30001900,  0x0,  0x100000,  0x0,  0x1c00,  0x0,  0x0,  0x0,  0x100,  0x0,  0x0,  0x0,  0xd81,  0x0,  0x0,  0x0,  0x1c00,  0x0,  0x0,  0x0,  0x74000000,  0x0,  0x0,  0x80000,  0x0,  0x0,  0x0,  0x80000,  0x30000000,  0x0,  0x1000,  0x0,  0x10842008,  0x3e80200,  0x20080002,  0x2001084,  0x0,  0x0,  0x0,  0x40,  0x0,  0x0,  0x0,  0x0,  0x0,  0x10000000,  0x45540,  0x28000000,  0xb,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xf7ff7000,  0xffffbfff,  0x10007ff,  0xf8000000,  0xffffffff,  0x0,  0x0,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xfffffff,  0xffffffff,  0xffffffff,  0x3ffffff,  0x3f3fffff,  0xffffffff,  0xaaff3f3f,  0x3fffffff,  0xffffffff,  0xffdfffff,  0xefcfffdf,  0x7fdcffff,  0x8207ff,  0x50d88070,  0x80800380,  0xfff30000,  0x1fff7fff,  0x100,  0x0,  0x0,  0x3e6ffeef,  0xfbfbbd57,  0xffff03e1,  0xffffffff,  0xc000200,  0x4000,  0xe000,  0x0,  0x1210,  0x1b050,  0x292,  0x333e005,  0x333,  0xf000,  0x0,  0x3c0f,  0x0,  0x600,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x7ff,  0x1000,  0x0,  0x0,  0x700000,  0x0,  0x0,  0x10000000,  0x0,  0x0,  0x0,  0x0,  0x30000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x8000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x80000000,  0x0,  0x0,  0x80000,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x3fffff,  0x0,  0x1,  0x7400000,  0x55555000,  0x36db02a5,  0xd8100000,  0x55555000,  0x36db02a5,  0xc7900000,  0x0,  0xfffe0000,  0xffffffff,  0xffffffff,  0xfffc7fff,  0x0,  0x0,  0x0,  0x7fffffff,  0xffffffff,  0xffff00ff,  0x7fffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x0,  0x0,  0x0,  0x0,  0x30000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x10000,  0x0,  0x0,  0x0,  0x31c0000,  0x0,  0x0,  0xf0000000,  0x200,  0x0,  0x0,  0x0,  0x0,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xf,  0x0,  0x0,  0x7fe53fff,  0xfffffc65,  0xffffffff,  0xffff3fff,  0xffffffff,  0xffffffff,  0x3ffffff,  0x0,  0xa0f8007f,  0x5f7fffff,  0xffffffdb,  0xffffffff,  0xffffffff,  0x3ffff,  0xfff80000,  0xffffffff,  0xffffffff,  0x3fffffff,  0xffff0000,  0xffffffff,  0xfffcffff,  0xffffffff,  0xff,  0x1fff0000,  0x3ff0000,  0xffff0000,  0xfff7ff9f,  0xffd70f7f,  0xffffffff,  0xffffffff,  0xffffffff,  0x1fffffff,  0xfffffffe,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0x7fffffff,  0x1cfcfcfc,  0x7f7f,  0x0,  0x0,  0x0,  0x0,  0xffffffbe,  0x7fdffff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x14000000,  0x800,  0x0,  0x0,  0x0,  0xc000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1800,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x58000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xc000000,  0x0,  0x0,  0x0,  0x1000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xc0000000,  0x1f,  0x0,  0xf8000000,  0x1,  0x0,  0xffffffff,  0xffffffff,  0xffdfffff,  0xffffffff,  0xdfffffff,  0xebffde64,  0xffffffef,  0xffffffff,  0xdfdfe7bf,  0x7bffffff,  0xfffdfc5f,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffff3f,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffffff,  0xffffcfff,  0xffffffff,  0x0,  0xffff0000,  0xffffffff,  0x3fff,  0x0,  0x0,  0x0,  0x0,  0xffffffef,  0xaf7fe96,  0xaa96ea84,  0x5ef7f796,  0xffffbff,  0xffffbee,  0x0,  0x0,  0xffff07ff,  0xffff7fff,  0xffff,  0x1c00,  0x10000,  0x0,  0x0,  0x0,  0xffff0007,  0xfffffff,  0x301ff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3ff0000,  0x3fffffff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0]);\n \n }\n \n-static if (size_t.sizeof == 4)\n+\n+static if (size_t.sizeof == 8)\n {\n-    //1600 bytes\n-    enum nfcQCTrieEntries = TrieEntry!(bool, 8, 5, 8)([0x0, 0x40, 0xc0],\n-            [0x100, 0x100, 0x1a00], [0x2020100, 0x3020202, 0x2020204,\n-            0x2050202, 0x2020202, 0x6020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10000, 0x0, 0x2, 0x30000,\n-            0x50004, 0x70006, 0x80000, 0xa0009, 0x0, 0x0, 0x0, 0x0, 0xb0000,\n-            0x0, 0xc0000, 0xe000d, 0xf0000, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0,\n-            0x11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x120000,\n-            0x140013, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x160015, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x170000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x120012, 0x18, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x81a9fdf, 0x10361f8, 0x3f, 0x40100000, 0x80, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x380000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x10000000, 0xff000000, 0x0, 0x0, 0x40000000, 0xb0800000, 0x0, 0x0,\n-            0x480000, 0x4e000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40000000,\n-            0x30c00000, 0x0, 0x0, 0x40000000, 0x800000, 0x0, 0x0, 0x0,\n-            0x400000, 0x0, 0x0, 0x0, 0x600004, 0x0, 0x0, 0x40000000, 0x800000,\n-            0x0, 0x0, 0x0, 0x80008400, 0x0, 0x0, 0x0, 0x10842008, 0x1680200,\n-            0x20080002, 0x2001084, 0x0, 0x0, 0x0, 0x4000, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x3ffffe, 0x0, 0xffffff00, 0x7, 0x0, 0x0,\n-            0x200000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2aaa0000,\n-            0x0, 0x48000000, 0x8080a00, 0x2a00c808, 0x3, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0xc40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x600, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x10000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6000000, 0x0, 0x0, 0x0,\n-            0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,\n-            0xffffffff, 0xffffffff, 0xffffffff, 0x7fe53fff, 0xfffffc65,\n-            0xffffffff, 0xffff3fff, 0xffffffff, 0xffffffff, 0x3ffffff, 0x0,\n-            0xa0000000, 0x5f7ffc00, 0x7fdb, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x4000000, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0xc0000000, 0x1f, 0x0, 0xf8000000, 0x1, 0x0,\n-            0x3fffffff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0]);\n-    //1920 bytes\n-    enum nfdQCTrieEntries = TrieEntry!(bool, 8, 5, 8)([0x0, 0x40, 0xe0],\n-            [0x100, 0x140, 0x2000], [0x2020100, 0x5040302, 0x2020206,\n-            0x2070202, 0x2020202, 0x8020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10000, 0x30002, 0x50004, 0x50006,\n-            0x70005, 0x90008, 0xb000a, 0xc0005, 0x5000d, 0x50005, 0x50005,\n-            0x50005, 0x50005, 0xe0005, 0x50005, 0x10000f, 0x120011, 0x140013,\n-            0x50005, 0x50005, 0x50005, 0x50015, 0x50005, 0x50005, 0x50016,\n-            0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005,\n-            0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005,\n-            0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005,\n-            0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005,\n-            0x50005, 0x170017, 0x170017, 0x170017, 0x170017, 0x170017,\n-            0x170017, 0x170017, 0x170017, 0x170017, 0x170017, 0x170017,\n-            0x170017, 0x170017, 0x170017, 0x170017, 0x170017, 0x170017,\n-            0x170017, 0x170017, 0x170017, 0x170017, 0x180017, 0x50005, 0x50005,\n-            0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005,\n-            0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005,\n-            0x170005, 0x1a0019, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005,\n-            0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x1c001b, 0x50005,\n-            0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005,\n-            0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005,\n-            0x1d0005, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005,\n-            0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005,\n-            0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x170017,\n-            0x5001e, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005,\n-            0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x50005,\n-            0x50005, 0x50005, 0x50005, 0x50005, 0x50005, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x3e7effbf, 0xbe7effbf, 0xfffcffff, 0x7ef1ff3f,\n-            0xfff3f1f8, 0x7fffff3f, 0x0, 0x18003, 0xdfffe000, 0xff31ffcf,\n-            0xcfffffff, 0xfffc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1b,\n-            0x40100000, 0x1d7e0, 0x1fc00, 0x187c00, 0x0, 0x200708b, 0x2000000,\n-            0x708b0000, 0xc00000, 0x0, 0x0, 0xfccf0006, 0x33ffcfc, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7c, 0x0, 0x0, 0x0, 0x0,\n-            0x80005, 0x0, 0x0, 0x120200, 0xff000000, 0x0, 0x0, 0x0, 0xb0001800,\n-            0x0, 0x0, 0x480000, 0x4e000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x30001900, 0x0, 0x100000, 0x0, 0x1c00, 0x0, 0x0, 0x0, 0x100, 0x0,\n-            0x0, 0x0, 0xd81, 0x0, 0x0, 0x0, 0x1c00, 0x0, 0x0, 0x0, 0x74000000,\n-            0x0, 0x0, 0x0, 0x10842008, 0x1680200, 0x20080002, 0x2001084, 0x0,\n-            0x0, 0x0, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x45540, 0x28000000,\n-            0xb, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffffff, 0xffffffff, 0xffffffff,\n-            0xffffffff, 0xbffffff, 0xffffffff, 0xffffffff, 0x3ffffff,\n-            0x3f3fffff, 0xffffffff, 0xaaff3f3f, 0x3fffffff, 0xffffffff,\n-            0x5fdfffff, 0xefcfffde, 0x3fdcffff, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0xc40, 0x0, 0x0, 0xc000000, 0x4000, 0xe000, 0x0,\n-            0x1210, 0x50, 0x292, 0x333e005, 0x333, 0xf000, 0x0, 0x3c0f, 0x0,\n-            0x600, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x10000000, 0x0, 0x0, 0x0, 0x55555000, 0x36db02a5, 0x40100000,\n-            0x55555000, 0x36db02a5, 0x47900000, 0xffffffff, 0xffffffff,\n-            0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,\n-            0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,\n-            0xffffffff, 0xf, 0x0, 0x0, 0x7fe53fff, 0xfffffc65, 0xffffffff,\n-            0xffff3fff, 0xffffffff, 0xffffffff, 0x3ffffff, 0x0, 0xa0000000,\n-            0x5f7ffc00, 0x7fdb, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x14000000, 0x800, 0x0, 0x0, 0x0, 0xc000, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0xc0000000, 0x1f, 0x0, 0xf8000000, 0x1, 0x0,\n-            0x3fffffff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0]);\n-    //2560 bytes\n-    enum nfkcQCTrieEntries = TrieEntry!(bool, 8, 5, 8)([0x0, 0x40, 0xe0],\n-            [0x100, 0x140, 0x3400], [0x2020100, 0x4020302, 0x2020205,\n-            0x7060202, 0x2020202, 0x8020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10000, 0x30002, 0x50004, 0x40006,\n-            0x70004, 0x90008, 0xb000a, 0xd000c, 0xf000e, 0x40004, 0x40004,\n-            0x40004, 0x40004, 0x100004, 0x110004, 0x130012, 0x150014, 0x170016,\n-            0x40018, 0x40004, 0x40004, 0x40019, 0x1b001a, 0x1d001c, 0x1f001e,\n-            0x210020, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004,\n-            0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004,\n-            0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004,\n-            0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x220004, 0x40004,\n-            0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004,\n-            0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004,\n-            0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004,\n-            0x40004, 0x40004, 0x210004, 0x240023, 0x250021, 0x270026, 0x40004,\n-            0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004,\n-            0x290028, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004,\n-            0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004,\n-            0x40004, 0x40004, 0x2a0004, 0x40004, 0x2c002b, 0x2e002d, 0x40004,\n-            0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004,\n-            0x40004, 0x40004, 0x40004, 0x4002f, 0x300004, 0x40031, 0x40004,\n-            0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004,\n-            0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004,\n-            0x40004, 0x40004, 0x40004, 0x210021, 0x40032, 0x40004, 0x40004,\n-            0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004,\n-            0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004, 0x40004,\n-            0x40004, 0x40004, 0x0, 0x0, 0x0, 0x0, 0x0, 0x773c8501, 0x0, 0x0,\n-            0x0, 0x800c0000, 0x201, 0x80000000, 0x0, 0x0, 0x1ff0, 0xe0000, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x1ff0000, 0x3f000000, 0x1f, 0x81a9fdf,\n-            0x10361f8, 0x3f, 0x44100000, 0xb0, 0x0, 0x7f0000, 0x2370000, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x380000, 0x1e00000, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x10000000, 0xff000000, 0x0, 0x0, 0x40000000, 0xb0800000, 0x0, 0x0,\n-            0x480000, 0x4e000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40000000,\n-            0x30c00000, 0x0, 0x0, 0x40000000, 0x800000, 0x0, 0x0, 0x0,\n-            0x400000, 0x0, 0x0, 0x0, 0x600004, 0x0, 0x0, 0x40000000, 0x800000,\n-            0x0, 0x0, 0x0, 0x80008400, 0x0, 0x0, 0x80000, 0x0, 0x0, 0x0,\n-            0x80000, 0x30000000, 0x0, 0x1000, 0x0, 0x10842008, 0x3e80200,\n-            0x20080002, 0x2001084, 0x0, 0x0, 0x0, 0x4000, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x10000000, 0x0, 0x0, 0x0, 0x3ffffe, 0x0, 0xffffff00, 0x7,\n-            0x0, 0x0, 0x200000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf7ff7000,\n-            0xffffbfff, 0x10007ff, 0xf8000000, 0xffffffff, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0xc000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2aaa0000, 0x0,\n-            0xe8000000, 0xe808ea03, 0x6a00e808, 0x8207ff, 0x50d88070,\n-            0x80800380, 0xfff30000, 0x1fff7fff, 0x100, 0x0, 0x0, 0x3e6ffeef,\n-            0xfbfbbd57, 0xffff03e1, 0xffffffff, 0x200, 0x0, 0x0, 0x0, 0x0,\n-            0x1b000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x600, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffffff, 0xffffffff, 0xffffffff,\n-            0xffffffff, 0x7ff, 0x1000, 0x0, 0x0, 0x700000, 0x0, 0x0,\n-            0x10000000, 0x0, 0x0, 0x0, 0x0, 0x30000000, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x8000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x80000000, 0x0, 0x0, 0x80000, 0xffffffff, 0xffffffff, 0xffffffff,\n-            0xffffffff, 0xffffffff, 0xffffffff, 0x3fffff, 0x0, 0x1, 0x7400000,\n-            0x0, 0x0, 0x9e000000, 0x0, 0x0, 0x80000000, 0x0, 0xfffe0000,\n-            0xffffffff, 0xffffffff, 0xfffc7fff, 0x0, 0x0, 0x0, 0x7fffffff,\n-            0xffffffff, 0xffff00ff, 0x7fffffff, 0xffffffff, 0xffffffff,\n-            0xffffffff, 0x7fffffff, 0xffffffff, 0xffffffff, 0xffffffff,\n-            0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x0,\n-            0x0, 0x0, 0x10000, 0x0, 0x0, 0x0, 0x3000000, 0x7fe53fff,\n-            0xfffffc65, 0xffffffff, 0xffff3fff, 0xffffffff, 0xffffffff,\n-            0x3ffffff, 0x0, 0xa0f8007f, 0x5f7fffff, 0xffffffdb, 0xffffffff,\n-            0xffffffff, 0x3ffff, 0xfff80000, 0xffffffff, 0xffffffff,\n-            0x3fffffff, 0xffff0000, 0xffffffff, 0xfffcffff, 0xffffffff, 0xff,\n-            0x1fff0000, 0x3ff0000, 0xffff0000, 0xfff7ff9f, 0xffd70f7f,\n-            0xffffffff, 0xffffffff, 0xffffffff, 0x1fffffff, 0xfffffffe,\n-            0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x7fffffff,\n-            0x1cfcfcfc, 0x7f7f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4000000, 0x0, 0x0,\n-            0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0000000,\n-            0x1f, 0x0, 0xf8000000, 0x1, 0x0, 0xffffffff, 0xffffffff,\n-            0xffdfffff, 0xffffffff, 0xdfffffff, 0xebffde64, 0xffffffef,\n-            0xffffffff, 0xdfdfe7bf, 0x7bffffff, 0xfffdfc5f, 0xffffffff,\n-            0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,\n-            0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffff3f,\n-            0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,\n-            0xffffffff, 0xffffffff, 0xffffffff, 0xffffcfff, 0xffffffff,\n-            0xffffffef, 0xaf7fe96, 0xaa96ea84, 0x5ef7f796, 0xffffbff,\n-            0xffffbee, 0x0, 0x0, 0xffff07ff, 0xffff7fff, 0xffff, 0xc00,\n-            0x10000, 0x0, 0x0, 0x0, 0xffff0007, 0x7ffffff, 0x301ff, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x3fffffff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]);\n-    //2656 bytes\n-    enum nfkdQCTrieEntries = TrieEntry!(bool, 8, 5, 8)([0x0, 0x40, 0xf0],\n-            [0x100, 0x160, 0x3500], [0x2020100, 0x5040302, 0x2020206,\n-            0x8070202, 0x2020202, 0x9020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202, 0x2020202,\n-            0x2020202, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10000, 0x30002, 0x50004, 0x70006,\n-            0x80007, 0xa0009, 0xc000b, 0xe000d, 0x7000f, 0x70007, 0x70007,\n-            0x70007, 0x70007, 0x100007, 0x110007, 0x130012, 0x150014, 0x170016,\n-            0x70018, 0x70007, 0x70007, 0x70019, 0x1b001a, 0x1d001c, 0x1f001e,\n-            0x210020, 0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x70007,\n-            0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x70007,\n-            0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x70007,\n-            0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x220007, 0x70007,\n-            0x70007, 0x210021, 0x210021, 0x210021, 0x210021, 0x210021,\n-            0x210021, 0x210021, 0x210021, 0x210021, 0x210021, 0x210021,\n-            0x210021, 0x210021, 0x210021, 0x210021, 0x210021, 0x210021,\n-            0x210021, 0x210021, 0x210021, 0x210021, 0x230021, 0x70007, 0x70007,\n-            0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x70007,\n-            0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x70007,\n-            0x210007, 0x250024, 0x260021, 0x280027, 0x70007, 0x70007, 0x70007,\n-            0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x2a0029, 0x70007,\n-            0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x70007,\n-            0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x70007,\n-            0x2b0007, 0x70007, 0x2d002c, 0x2f002e, 0x70007, 0x70007, 0x70007,\n-            0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x70007,\n-            0x70007, 0x70030, 0x310007, 0x70032, 0x70007, 0x70007, 0x70007,\n-            0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x70007,\n-            0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x70007,\n-            0x70007, 0x210021, 0x70033, 0x70007, 0x70007, 0x70007, 0x70007,\n-            0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x70007,\n-            0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x70007, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x773c8501, 0x3e7effbf, 0xbe7effbf, 0xfffcffff,\n-            0xfefdff3f, 0xfff3f3f9, 0xffffff3f, 0x0, 0x18003, 0xdffffff0,\n-            0xff3fffcf, 0xcfffffff, 0xfffc0, 0x0, 0x0, 0x0, 0x1ff0000,\n-            0x3f000000, 0x1f, 0x0, 0x0, 0x1b, 0x44100000, 0x1d7f0, 0x1fc00,\n-            0x7f7c00, 0x2370000, 0x200708b, 0x2000000, 0x708b0000, 0xc00000,\n-            0x0, 0x0, 0xfccf0006, 0x33ffcfc, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0,\n-            0x0, 0x0, 0x0, 0x7c, 0x0, 0x1e00000, 0x0, 0x0, 0x80005, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x120200, 0xff000000, 0x0,\n-            0x0, 0x0, 0xb0001800, 0x0, 0x0, 0x480000, 0x4e000000, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x30001900, 0x0, 0x100000, 0x0, 0x1c00,\n-            0x0, 0x0, 0x0, 0x100, 0x0, 0x0, 0x0, 0xd81, 0x0, 0x0, 0x0, 0x1c00,\n-            0x0, 0x0, 0x0, 0x74000000, 0x0, 0x0, 0x80000, 0x0, 0x0, 0x0,\n-            0x80000, 0x30000000, 0x0, 0x1000, 0x0, 0x10842008, 0x3e80200,\n-            0x20080002, 0x2001084, 0x0, 0x0, 0x0, 0x40, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x10000000, 0x45540, 0x28000000, 0xb, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0xf7ff7000, 0xffffbfff, 0x10007ff, 0xf8000000, 0xffffffff,\n-            0x0, 0x0, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,\n-            0xfffffff, 0xffffffff, 0xffffffff, 0x3ffffff, 0x3f3fffff,\n-            0xffffffff, 0xaaff3f3f, 0x3fffffff, 0xffffffff, 0xffdfffff,\n-            0xefcfffdf, 0x7fdcffff, 0x8207ff, 0x50d88070, 0x80800380,\n-            0xfff30000, 0x1fff7fff, 0x100, 0x0, 0x0, 0x3e6ffeef, 0xfbfbbd57,\n-            0xffff03e1, 0xffffffff, 0xc000200, 0x4000, 0xe000, 0x0, 0x1210,\n-            0x1b050, 0x292, 0x333e005, 0x333, 0xf000, 0x0, 0x3c0f, 0x0, 0x600,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffffff,\n-            0xffffffff, 0xffffffff, 0xffffffff, 0x7ff, 0x1000, 0x0, 0x0,\n-            0x700000, 0x0, 0x0, 0x10000000, 0x0, 0x0, 0x0, 0x0, 0x30000000,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8000, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x80000000, 0x0, 0x0, 0x80000, 0xffffffff,\n-            0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,\n-            0x3fffff, 0x0, 0x1, 0x7400000, 0x55555000, 0x36db02a5, 0xd8100000,\n-            0x55555000, 0x36db02a5, 0xc7900000, 0x0, 0xfffe0000, 0xffffffff,\n-            0xffffffff, 0xfffc7fff, 0x0, 0x0, 0x0, 0x7fffffff, 0xffffffff,\n-            0xffff00ff, 0x7fffffff, 0xffffffff, 0xffffffff, 0xffffffff,\n-            0x7fffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,\n-            0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x0, 0x0, 0x0,\n-            0x10000, 0x0, 0x0, 0x0, 0x3000000, 0xffffffff, 0xffffffff,\n-            0xffffffff, 0xffffffff, 0xffffffff, 0xf, 0x0, 0x0, 0x7fe53fff,\n-            0xfffffc65, 0xffffffff, 0xffff3fff, 0xffffffff, 0xffffffff,\n-            0x3ffffff, 0x0, 0xa0f8007f, 0x5f7fffff, 0xffffffdb, 0xffffffff,\n-            0xffffffff, 0x3ffff, 0xfff80000, 0xffffffff, 0xffffffff,\n-            0x3fffffff, 0xffff0000, 0xffffffff, 0xfffcffff, 0xffffffff, 0xff,\n-            0x1fff0000, 0x3ff0000, 0xffff0000, 0xfff7ff9f, 0xffd70f7f,\n-            0xffffffff, 0xffffffff, 0xffffffff, 0x1fffffff, 0xfffffffe,\n-            0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x7fffffff,\n-            0x1cfcfcfc, 0x7f7f, 0x0, 0x0, 0x0, 0x0, 0x14000000, 0x800, 0x0,\n-            0x0, 0x0, 0xc000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0xc0000000, 0x1f, 0x0, 0xf8000000, 0x1, 0x0, 0xffffffff,\n-            0xffffffff, 0xffdfffff, 0xffffffff, 0xdfffffff, 0xebffde64,\n-            0xffffffef, 0xffffffff, 0xdfdfe7bf, 0x7bffffff, 0xfffdfc5f,\n-            0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,\n-            0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,\n-            0xffffff3f, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,\n-            0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffcfff,\n-            0xffffffff, 0xffffffef, 0xaf7fe96, 0xaa96ea84, 0x5ef7f796,\n-            0xffffbff, 0xffffbee, 0x0, 0x0, 0xffff07ff, 0xffff7fff, 0xffff,\n-            0xc00, 0x10000, 0x0, 0x0, 0x0, 0xffff0007, 0x7ffffff, 0x301ff, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x3fffffff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n-            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]);\n+//1728 bytes\n+enum nfcQCTrieEntries = TrieEntry!(bool, 8, 5, 8)([ 0x0,  0x20,  0x60], [ 0x100,  0x100,  0x1e00], [ 0x302020202020100,  0x205020202020204,  0x602020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1000000000000,  0x200000000,  0x5000400030000,  0x8000000070006,  0xa0009,  0x0,  0xb000000000000,  0xc000000000000,  0xf0000000e000d,  0x0,  0x1000000000,  0x0,  0x11,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x14001300120000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x17000000160015,  0x190018,  0x1a0000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1b0000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1c00120012,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x10361f8081a9fdf,  0x401000000000003f,  0x80,  0x0,  0x0,  0x380000,  0x0,  0x0,  0x1000000000000000,  0xff000000,  0x4000000000000000,  0xb0800000,  0x48000000000000,  0x4e000000,  0x0,  0x0,  0x4000000000000000,  0x30c00000,  0x4000000000000000,  0x800000,  0x0,  0x400000,  0x0,  0x600004,  0x4000000000000000,  0x800000,  0x0,  0x80008400,  0x0,  0x168020010842008,  0x200108420080002,  0x0,  0x400000000000,  0x0,  0x0,  0x0,  0x0,  0x3ffffe00000000,  0xffffff0000000000,  0x7,  0x20000000000000,  0x0,  0x0,  0x0,  0x0,  0x2aaa000000000000,  0x4800000000000000,  0x2a00c80808080a00,  0x3,  0x0,  0x0,  0x0,  0xc4000000000,  0x0,  0x0,  0x0,  0x60000000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x10000000,  0x0,  0x0,  0x6000000,  0x0,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0xfffffc657fe53fff,  0xffff3fffffffffff,  0xffffffffffffffff,  0x3ffffff,  0x5f7ffc00a0000000,  0x7fdb,  0x0,  0x0,  0x0,  0x0,  0x400000000000000,  0x0,  0x8000000000,  0x0,  0x0,  0x0,  0x4000000000000000,  0x800000,  0x0,  0x0,  0x0,  0x0,  0x2401000000000000,  0x0,  0x0,  0x0,  0x800000000000,  0x0,  0x1000000000000,  0x0,  0x0,  0x0,  0x0,  0x1fc0000000,  0xf800000000000000,  0x1,  0x3fffffff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0]);\n+//2048 bytes\n+enum nfdQCTrieEntries = TrieEntry!(bool, 8, 5, 8)([ 0x0,  0x20,  0x70], [ 0x100,  0x140,  0x2400], [ 0x504030202020100,  0x207020202020206,  0x802020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3000200010000,  0x5000600050004,  0x9000800070005,  0xc0005000b000a,  0x500050005000d,  0x5000500050005,  0xe000500050005,  0x10000f00050005,  0x14001300120011,  0x5000500050005,  0x5001500050005,  0x5000500050005,  0x5000500050016,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x17001700170017,  0x17001700170017,  0x17001700170017,  0x17001700170017,  0x17001700170017,  0x17001700170017,  0x17001700170017,  0x17001700170017,  0x17001700170017,  0x17001700170017,  0x18001700170017,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x1a001900170005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x1d0005001c001b,  0x50005001f001e,  0x5000500200005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500210005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5002200170017,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x5000500050005,  0x0,  0x0,  0x0,  0xbe7effbf3e7effbf,  0x7ef1ff3ffffcffff,  0x7fffff3ffff3f1f8,  0x1800300000000,  0xff31ffcfdfffe000,  0xfffc0cfffffff,  0x0,  0x0,  0x0,  0x0,  0x401000000000001b,  0x1fc000001d7e0,  0x187c00,  0x20000000200708b,  0xc00000708b0000,  0x0,  0x33ffcfcfccf0006,  0x0,  0x0,  0x0,  0x0,  0x7c00000000,  0x0,  0x0,  0x80005,  0x12020000000000,  0xff000000,  0x0,  0xb0001800,  0x48000000000000,  0x4e000000,  0x0,  0x0,  0x0,  0x30001900,  0x100000,  0x1c00,  0x0,  0x100,  0x0,  0xd81,  0x0,  0x1c00,  0x0,  0x74000000,  0x0,  0x168020010842008,  0x200108420080002,  0x0,  0x4000000000,  0x0,  0x0,  0x0,  0x2800000000045540,  0xb,  0x0,  0x0,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffff0bffffff,  0x3ffffffffffffff,  0xffffffff3f3fffff,  0x3fffffffaaff3f3f,  0x5fdfffffffffffff,  0x3fdcffffefcfffde,  0x3,  0x0,  0x0,  0x0,  0xc4000000000,  0x0,  0x40000c000000,  0xe000,  0x5000001210,  0x333e00500000292,  0xf00000000333,  0x3c0f00000000,  0x60000000000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x10000000,  0x0,  0x36db02a555555000,  0x5555500040100000,  0x4790000036db02a5,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0xfffffffff,  0x0,  0xfffffc657fe53fff,  0xffff3fffffffffff,  0xffffffffffffffff,  0x3ffffff,  0x5f7ffc00a0000000,  0x7fdb,  0x0,  0x0,  0x0,  0x0,  0x80014000000,  0x0,  0xc00000000000,  0x0,  0x0,  0x0,  0x0,  0x1800,  0x0,  0x0,  0x0,  0x0,  0x5800000000000000,  0x0,  0x0,  0x0,  0xc00000000000000,  0x0,  0x100000000000000,  0x0,  0x0,  0x0,  0x0,  0x1fc0000000,  0xf800000000000000,  0x1,  0x3fffffff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0]);\n+//2848 bytes\n+enum nfkcQCTrieEntries = TrieEntry!(bool, 8, 5, 8)([ 0x0,  0x20,  0x70], [ 0x100,  0x140,  0x3d00], [ 0x402030202020100,  0x706020202020205,  0x802020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3000200010000,  0x4000600050004,  0x9000800070004,  0xd000c000b000a,  0x40004000f000e,  0x4000400040004,  0x10000400040004,  0x13001200110004,  0x17001600150014,  0x4000400040018,  0x4001900040004,  0x1d001c001b001a,  0x210020001f001e,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x23002200040004,  0x24000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x26002500210004,  0x29002800270021,  0x4000400040004,  0x2a000400040004,  0x4000400040004,  0x4000400040004,  0x2d0004002c002b,  0x40004002f002e,  0x4000400300004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400310004,  0x35003400330032,  0x4000400040004,  0x4000400040004,  0x4000400040036,  0x4000400040004,  0x4000400040004,  0x4003700040004,  0x4003900380004,  0x4000400040004,  0x3a000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4003b00210021,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x4000400040004,  0x0,  0x0,  0x773c850100000000,  0x0,  0x800c000000000000,  0x8000000000000201,  0x0,  0xe000000001ff0,  0x0,  0x0,  0x1ff000000000000,  0x1f3f000000,  0x10361f8081a9fdf,  0x441000000000003f,  0xb0,  0x2370000007f0000,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x80,  0x0,  0x0,  0x1e0000000380000,  0x0,  0x0,  0x1000000000000000,  0xff000000,  0x4000000000000000,  0xb0800000,  0x48000000000000,  0x4e000000,  0x0,  0x0,  0x4000000000000000,  0x30c00000,  0x4000000000000000,  0x800000,  0x0,  0x400000,  0x0,  0x600004,  0x4000000000000000,  0x800000,  0x0,  0x80008400,  0x8000000000000,  0x0,  0x8000000000000,  0x30000000,  0x1000,  0x3e8020010842008,  0x200108420080002,  0x0,  0x400000000000,  0x0,  0x0,  0x1000000000000000,  0x0,  0x3ffffe00000000,  0xffffff0000000000,  0x7,  0x20000000000000,  0x0,  0x0,  0x0,  0xf7ff700000000000,  0x10007ffffffbfff,  0xfffffffff8000000,  0x0,  0x0,  0x0,  0xc000000,  0x0,  0x0,  0x2aaa000000000000,  0xe800000000000000,  0x6a00e808e808ea03,  0x50d88070008207ff,  0xfff3000080800380,  0x1001fff7fff,  0x0,  0xfbfbbd573e6ffeef,  0xffffffffffff03e1,  0x200,  0x0,  0x1b00000000000,  0x0,  0x0,  0x0,  0x60000000000,  0x0,  0x0,  0x0,  0x0,  0xffffffff00000000,  0xffffffffffffffff,  0x7ffffffffff,  0x1000,  0x70000000000000,  0x0,  0x10000000,  0x0,  0x3000000000000000,  0x0,  0x0,  0x0,  0x800000000000,  0x0,  0x0,  0x0,  0x0,  0x80000000,  0x8000000000000,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0x3fffff,  0x740000000000001,  0x0,  0x9e000000,  0x8000000000000000,  0xfffe000000000000,  0xffffffffffffffff,  0xfffc7fff,  0x0,  0xffffffff7fffffff,  0x7fffffffffff00ff,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0x0,  0x0,  0x30000000,  0x0,  0x0,  0x1000000000000,  0x0,  0x31c000000000000,  0x0,  0x200f0000000,  0x0,  0x0,  0xfffffc657fe53fff,  0xffff3fffffffffff,  0xffffffffffffffff,  0x3ffffff,  0x5f7fffffa0f8007f,  0xffffffffffffffdb,  0x3ffffffffffff,  0xfffffffffff80000,  0x3fffffffffffffff,  0xffffffffffff0000,  0xfffffffffffcffff,  0x1fff0000000000ff,  0xffff000003ff0000,  0xffd70f7ffff7ff9f,  0xffffffffffffffff,  0x1fffffffffffffff,  0xfffffffffffffffe,  0xffffffffffffffff,  0x7fffffffffffffff,  0x7f7f1cfcfcfc,  0x0,  0x0,  0x7fdffffffffffbe,  0x0,  0x0,  0x0,  0x400000000000000,  0x0,  0x8000000000,  0x0,  0x0,  0x0,  0x4000000000000000,  0x800000,  0x0,  0x0,  0x0,  0x0,  0x2401000000000000,  0x0,  0x0,  0x0,  0x800000000000,  0x0,  0x1000000000000,  0x0,  0x0,  0x0,  0x0,  0x1fc0000000,  0xf800000000000000,  0x1,  0xffffffffffffffff,  0xffffffffffdfffff,  0xebffde64dfffffff,  0xffffffffffffffef,  0x7bffffffdfdfe7bf,  0xfffffffffffdfc5f,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffff3fffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffcfff,  0xffff000000000000,  0x3fffffffffff,  0x0,  0x0,  0xaf7fe96ffffffef,  0x5ef7f796aa96ea84,  0xffffbee0ffffbff,  0x0,  0xffff7fffffff07ff,  0x1c000000ffff,  0x10000,  0x0,  0xfffffffffff0007,  0x301ff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3ff000000000000,  0x3fffffff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0]);\n+//2944 bytes\n+enum nfkdQCTrieEntries = TrieEntry!(bool, 8, 5, 8)([ 0x0,  0x20,  0x78], [ 0x100,  0x160,  0x3e00], [ 0x504030202020100,  0x807020202020206,  0x902020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x202020202020202,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3000200010000,  0x7000600050004,  0xa000900080007,  0xe000d000c000b,  0x700070007000f,  0x7000700070007,  0x10000700070007,  0x13001200110007,  0x17001600150014,  0x7000700070018,  0x7001900070007,  0x1d001c001b001a,  0x210020001f001e,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x23002200070007,  0x24000700070007,  0x21002100210021,  0x21002100210021,  0x21002100210021,  0x21002100210021,  0x21002100210021,  0x21002100210021,  0x21002100210021,  0x21002100210021,  0x21002100210021,  0x21002100210021,  0x25002100210021,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x27002600210007,  0x2a002900280021,  0x7000700070007,  0x2b000700070007,  0x7000700070007,  0x7000700070007,  0x2e0007002d002c,  0x700070030002f,  0x7000700310007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700320007,  0x36003500340033,  0x7000700070007,  0x7000700070007,  0x7000700070037,  0x7000700070007,  0x7000700070007,  0x7003800070007,  0x7003a00390007,  0x7000700070007,  0x3b000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7003c00210021,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x7000700070007,  0x0,  0x0,  0x773c850100000000,  0xbe7effbf3e7effbf,  0xfefdff3ffffcffff,  0xffffff3ffff3f3f9,  0x1800300000000,  0xff3fffcfdffffff0,  0xfffc0cfffffff,  0x0,  0x1ff000000000000,  0x1f3f000000,  0x0,  0x441000000000001b,  0x1fc000001d7f0,  0x2370000007f7c00,  0x20000000200708b,  0xc00000708b0000,  0x0,  0x33ffcfcfccf0006,  0x0,  0x0,  0x80,  0x0,  0x7c00000000,  0x1e0000000000000,  0x0,  0x80005,  0x0,  0x0,  0x0,  0x0,  0x12020000000000,  0xff000000,  0x0,  0xb0001800,  0x48000000000000,  0x4e000000,  0x0,  0x0,  0x0,  0x30001900,  0x100000,  0x1c00,  0x0,  0x100,  0x0,  0xd81,  0x0,  0x1c00,  0x0,  0x74000000,  0x8000000000000,  0x0,  0x8000000000000,  0x30000000,  0x1000,  0x3e8020010842008,  0x200108420080002,  0x0,  0x4000000000,  0x0,  0x0,  0x1000000000000000,  0x2800000000045540,  0xb,  0x0,  0x0,  0xf7ff700000000000,  0x10007ffffffbfff,  0xfffffffff8000000,  0x0,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffff0fffffff,  0x3ffffffffffffff,  0xffffffff3f3fffff,  0x3fffffffaaff3f3f,  0xffdfffffffffffff,  0x7fdcffffefcfffdf,  0x50d88070008207ff,  0xfff3000080800380,  0x1001fff7fff,  0x0,  0xfbfbbd573e6ffeef,  0xffffffffffff03e1,  0x40000c000200,  0xe000,  0x1b05000001210,  0x333e00500000292,  0xf00000000333,  0x3c0f00000000,  0x60000000000,  0x0,  0x0,  0x0,  0x0,  0xffffffff00000000,  0xffffffffffffffff,  0x7ffffffffff,  0x1000,  0x70000000000000,  0x0,  0x10000000,  0x0,  0x3000000000000000,  0x0,  0x0,  0x0,  0x800000000000,  0x0,  0x0,  0x0,  0x0,  0x80000000,  0x8000000000000,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0x3fffff,  0x740000000000001,  0x36db02a555555000,  0x55555000d8100000,  0xc790000036db02a5,  0xfffe000000000000,  0xffffffffffffffff,  0xfffc7fff,  0x0,  0xffffffff7fffffff,  0x7fffffffffff00ff,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0x0,  0x0,  0x30000000,  0x0,  0x0,  0x1000000000000,  0x0,  0x31c000000000000,  0x0,  0x200f0000000,  0x0,  0x0,  0xffffffffffffffff,  0xffffffffffffffff,  0xfffffffff,  0x0,  0xfffffc657fe53fff,  0xffff3fffffffffff,  0xffffffffffffffff,  0x3ffffff,  0x5f7fffffa0f8007f,  0xffffffffffffffdb,  0x3ffffffffffff,  0xfffffffffff80000,  0x3fffffffffffffff,  0xffffffffffff0000,  0xfffffffffffcffff,  0x1fff0000000000ff,  0xffff000003ff0000,  0xffd70f7ffff7ff9f,  0xffffffffffffffff,  0x1fffffffffffffff,  0xfffffffffffffffe,  0xffffffffffffffff,  0x7fffffffffffffff,  0x7f7f1cfcfcfc,  0x0,  0x0,  0x7fdffffffffffbe,  0x0,  0x0,  0x0,  0x80014000000,  0x0,  0xc00000000000,  0x0,  0x0,  0x0,  0x0,  0x1800,  0x0,  0x0,  0x0,  0x0,  0x5800000000000000,  0x0,  0x0,  0x0,  0xc00000000000000,  0x0,  0x100000000000000,  0x0,  0x0,  0x0,  0x0,  0x1fc0000000,  0xf800000000000000,  0x1,  0xffffffffffffffff,  0xffffffffffdfffff,  0xebffde64dfffffff,  0xffffffffffffffef,  0x7bffffffdfdfe7bf,  0xfffffffffffdfc5f,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffff3fffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffffff,  0xffffffffffffcfff,  0xffff000000000000,  0x3fffffffffff,  0x0,  0x0,  0xaf7fe96ffffffef,  0x5ef7f796aa96ea84,  0xffffbee0ffffbff,  0x0,  0xffff7fffffff07ff,  0x1c000000ffff,  0x10000,  0x0,  0xfffffffffff0007,  0x301ff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x3ff000000000000,  0x3fffffff,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0]);\n \n }\n+"}, {"sha": "22419270a99f0316dc6378465d958e6a4a564be9", "filename": "libphobos/src/std/internal/unicode_tables.d", "status": "modified", "additions": 2368, "deletions": 10317, "changes": 12685, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f77948c567f331015dfa4d695718c2211dab0816/libphobos%2Fsrc%2Fstd%2Finternal%2Funicode_tables.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f77948c567f331015dfa4d695718c2211dab0816/libphobos%2Fsrc%2Fstd%2Finternal%2Funicode_tables.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Finternal%2Funicode_tables.d?ref=f77948c567f331015dfa4d695718c2211dab0816"}, {"sha": "5c0659ec7c63ffcdbed107b11320c08abfb5ccdb", "filename": "libphobos/src/std/uni/package.d", "status": "modified", "additions": 30, "deletions": 19, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f77948c567f331015dfa4d695718c2211dab0816/libphobos%2Fsrc%2Fstd%2Funi%2Fpackage.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f77948c567f331015dfa4d695718c2211dab0816/libphobos%2Fsrc%2Fstd%2Funi%2Fpackage.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Funi%2Fpackage.d?ref=f77948c567f331015dfa4d695718c2211dab0816", "patch": "@@ -1528,7 +1528,7 @@ if (is(Unqual!T == T))\n     return SliceOverIndexed!T(a, b, x);\n }\n \n-@safe unittest\n+@system unittest\n {\n     int[] idxArray = [2, 3, 5, 8, 13];\n     auto sliced = sliceOverIndexed(0, idxArray.length, &idxArray);\n@@ -2472,19 +2472,19 @@ public:\n         import std.format : format;\n         import std.uni : unicode;\n \n-        assert(unicode.Cyrillic.to!string ==\n-            \"[1024..1157) [1159..1320) [7467..7468) [7544..7545) [11744..11776) [42560..42648) [42655..42656)\");\n+        // This was originally using Cyrillic script.\n+        // Unfortunately this is a pretty active range for changes,\n+        // and hence broke in an update.\n+        // Therefore the range Basic latin was used instead as it\n+        // unlikely to ever change.\n \n-        // The specs '%s' and '%d' are equivalent to the to!string call above.\n-        assert(format(\"%d\", unicode.Cyrillic) == unicode.Cyrillic.to!string);\n+        assert(unicode.InBasic_latin.to!string == \"[0..128)\");\n \n-        assert(format(\"%#x\", unicode.Cyrillic) ==\n-            \"[0x400..0x485) [0x487..0x528) [0x1d2b..0x1d2c) [0x1d78..0x1d79) [0x2de0..0x2e00) \"\n-            ~\"[0xa640..0xa698) [0xa69f..0xa6a0)\");\n+        // The specs '%s' and '%d' are equivalent to the to!string call above.\n+        assert(format(\"%d\", unicode.InBasic_latin) == unicode.InBasic_latin.to!string);\n \n-        assert(format(\"%#X\", unicode.Cyrillic) ==\n-            \"[0X400..0X485) [0X487..0X528) [0X1D2B..0X1D2C) [0X1D78..0X1D79) [0X2DE0..0X2E00) \"\n-            ~\"[0XA640..0XA698) [0XA69F..0XA6A0)\");\n+        assert(format(\"%#x\", unicode.InBasic_latin) == \"[0..0x80)\");\n+        assert(format(\"%#X\", unicode.InBasic_latin) == \"[0..0X80)\");\n     }\n \n     pure @safe unittest\n@@ -4872,6 +4872,7 @@ template Utf8Matcher()\n             enum mode = Mode.neverSkip;\n             assert(!inp.empty);\n             auto ch = inp[0];\n+\n             static if (hasASCII)\n             {\n                 if (ch < 0x80)\n@@ -4970,6 +4971,7 @@ template Utf8Matcher()\n             else\n             {\n                 static assert(mode == Mode.skipOnMatch);\n+\n                 if (tab!size[needle])\n                 {\n                     inp.popFrontN(size);\n@@ -5312,23 +5314,31 @@ pure @safe unittest\n     auto utf8 =  utf8Matcher(unicode.Letter);\n     auto asc = utf8.subMatcher!(1);\n     auto uni = utf8.subMatcher!(2,3,4);\n+\n+    // h\n     assert(asc.test(codec));\n     assert(!uni.match(codec));\n     assert(utf8.skip(codec));\n     assert(codec.idx == 1);\n \n-    assert(!uni.match(codec));\n+    // i\n     assert(asc.test(codec));\n+    assert(!uni.match(codec));\n     assert(utf8.skip(codec));\n     assert(codec.idx == 2);\n-    assert(!asc.match(codec));\n \n+    // !\n+    assert(!asc.match(codec));\n     assert(!utf8.test(codec));\n     assert(!utf8.skip(codec));\n+    assert(codec.idx == 3);\n \n+    // space\n     assert(!asc.test(codec));\n     assert(!utf8.test(codec));\n     assert(!utf8.skip(codec));\n+    assert(codec.idx == 4);\n+\n     assert(utf8.test(codec));\n     foreach (i; 0 .. 7)\n     {\n@@ -5338,6 +5348,7 @@ pure @safe unittest\n     }\n     assert(!utf8.test(codec));\n     assert(!utf8.skip(codec));\n+\n     //the same with match where applicable\n     codec = rs.decoder;\n     assert(utf8.match(codec));\n@@ -5360,7 +5371,7 @@ pure @safe unittest\n     assert(codec.idx == i);\n }\n \n-pure @safe unittest\n+pure @system unittest\n {\n     import std.range : stride;\n     static bool testAll(Matcher, Range)(ref Matcher m, ref Range r) @safe\n@@ -6020,11 +6031,11 @@ bool loadProperty(Set=CodepointSet, C)\n     }\n     else if (ucmp(name, \"C\") == 0 || ucmp(name, \"Other\") == 0)\n     {\n-        target = asSet(uniProps.Co);\n-        target |= asSet(uniProps.Lo);\n-        target |= asSet(uniProps.No);\n-        target |= asSet(uniProps.So);\n-        target |= asSet(uniProps.Po);\n+        target = asSet(uniProps.Cc);\n+        target |= asSet(uniProps.Cf);\n+        target |= asSet(uniProps.Cs);\n+        target |= asSet(uniProps.Co);\n+        target |= asSet(uniProps.Cn);\n     }\n     else if (ucmp(name, \"graphical\") == 0)\n     {"}]}