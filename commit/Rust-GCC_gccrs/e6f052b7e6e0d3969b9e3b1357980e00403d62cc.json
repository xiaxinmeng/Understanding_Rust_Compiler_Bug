{"sha": "e6f052b7e6e0d3969b9e3b1357980e00403d62cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZmMDUyYjdlNmUwZDM5NjliOWUzYjEzNTc5ODBlMDA0MDNkNjJjYw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2002-10-23T18:38:23Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-10-23T18:38:23Z"}, "message": "re PR c++/7679 (The compiler crashes wen a right parentesis is missing)\n\n\tPR c++/7679\n\t* spew.c (next_token): Do not return an endless stream of\n\tEND_OF_SAVED_INPUT tokens.\n\t(snarf_method): Add three END_OF_SAVED_INPUT tokens to the end of\n\tthe cached token stream.\n\t(snarf_defarg): Likewise.\n\n\tPR c++/7679\n\t* g++.dg/parse/inline1.C: New test.\n\nFrom-SVN: r58465", "tree": {"sha": "a026babb434289dd715599cb3c26a633d808ded5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a026babb434289dd715599cb3c26a633d808ded5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6f052b7e6e0d3969b9e3b1357980e00403d62cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6f052b7e6e0d3969b9e3b1357980e00403d62cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6f052b7e6e0d3969b9e3b1357980e00403d62cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6f052b7e6e0d3969b9e3b1357980e00403d62cc/comments", "author": null, "committer": null, "parents": [{"sha": "16448fd4f0b1c5ef78e5b5e463cc77e8aec14c96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16448fd4f0b1c5ef78e5b5e463cc77e8aec14c96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16448fd4f0b1c5ef78e5b5e463cc77e8aec14c96"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "bca3b4c3570132cd90be92ae996ecc4aaa325092", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6f052b7e6e0d3969b9e3b1357980e00403d62cc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6f052b7e6e0d3969b9e3b1357980e00403d62cc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e6f052b7e6e0d3969b9e3b1357980e00403d62cc", "patch": "@@ -1,3 +1,12 @@\n+2002-10-23  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/7679\n+\t* spew.c (next_token): Do not return an endless stream of\n+\tEND_OF_SAVED_INPUT tokens.\n+\t(snarf_method): Add three END_OF_SAVED_INPUT tokens to the end of\n+\tthe cached token stream.\n+\t(snarf_defarg): Likewise.\n+\n 2002-10-23  Zack Weinberg  <zack@codesourcery.com>\n \n \t* cp-lang.c (cp_var_mod_type_p): New: C++ hook for"}, {"sha": "380d6936b8320e050e6b03630df53049635dbc5a", "filename": "gcc/cp/spew.c", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6f052b7e6e0d3969b9e3b1357980e00403d62cc/gcc%2Fcp%2Fspew.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6f052b7e6e0d3969b9e3b1357980e00403d62cc/gcc%2Fcp%2Fspew.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fspew.c?ref=e6f052b7e6e0d3969b9e3b1357980e00403d62cc", "patch": "@@ -477,8 +477,7 @@ next_token (t)\n       return t->yychar;\n     }\n \n-  memcpy (t, &Teosi, sizeof (struct token));\n-  return END_OF_SAVED_INPUT;\n+  return 0;\n }\n \n /* Shift the next token onto the fifo.  */\n@@ -1195,6 +1194,14 @@ snarf_method (decl)\n \t\t\t\t\t\t: (interface_only ? 0 : 2)));\n \n   snarf_block (meth);\n+  /* Add three END_OF_SAVED_INPUT tokens.  We used to provide an\n+     infinite stream of END_OF_SAVED_INPUT tokens -- but that can\n+     cause the compiler to get stuck in an infinite loop when\n+     encountering invalid code.  We need more than one because the\n+     parser sometimes peeks ahead several tokens.  */\n+  memcpy (space_for_token (meth), &Teosi, sizeof (struct token));\n+  memcpy (space_for_token (meth), &Teosi, sizeof (struct token));\n+  memcpy (space_for_token (meth), &Teosi, sizeof (struct token));\n \n   /* Happens when we get two declarations of the same function in the\n      same scope.  */\n@@ -1253,6 +1260,14 @@ snarf_defarg ()\n \n   /* Unget the last token.  */\n   push_token (remove_last_token (buf));\n+  /* Add three END_OF_SAVED_INPUT tokens.  We used to provide an\n+     infinite stream of END_OF_SAVED_INPUT tokens -- but that can\n+     cause the compiler to get stuck in an infinite loop when\n+     encountering invalid code.  We need more than one because the\n+     parser sometimes peeks ahead several tokens.  */\n+  memcpy (space_for_token (buf), &Teosi, sizeof (struct token));\n+  memcpy (space_for_token (buf), &Teosi, sizeof (struct token));\n+  memcpy (space_for_token (buf), &Teosi, sizeof (struct token));\n \n  done:\n #ifdef SPEW_DEBUG"}, {"sha": "d0c5776b5eb63320ac52bf82a0275edc2db7cb37", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6f052b7e6e0d3969b9e3b1357980e00403d62cc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6f052b7e6e0d3969b9e3b1357980e00403d62cc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e6f052b7e6e0d3969b9e3b1357980e00403d62cc", "patch": "@@ -1,3 +1,8 @@\n+2002-10-23  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/7679\n+\t* g++.dg/parse/inline1.C: New test.\n+\t\n 2002-10-23  Richard Henderson  <rth@redhat.com>\n \n \t* g++.dg/inherit/thunk1.C: Enable for x86_64."}, {"sha": "5c3034c6ec28c6a25d935bb4c28dab6264caa6f4", "filename": "gcc/testsuite/g++.dg/parse/inline1.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6f052b7e6e0d3969b9e3b1357980e00403d62cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Finline1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6f052b7e6e0d3969b9e3b1357980e00403d62cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Finline1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Finline1.C?ref=e6f052b7e6e0d3969b9e3b1357980e00403d62cc", "patch": "@@ -0,0 +1,7 @@\n+struct f\n+{\n+  int oo()\n+  {\n+    return (2; // { dg-error \"\" }\n+  }\n+};"}]}