{"sha": "7f7c467fed603c8ad387e731d99ad889e7f2a501", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y3YzQ2N2ZlZDYwM2M4YWQzODdlNzMxZDk5YWQ4ODllN2YyYTUwMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2010-06-10T20:23:00Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2010-06-10T20:23:00Z"}, "message": "read-md.h (read_char): Increment read_md_lineno after reading '\\n'.\n\ngcc/\n\t* read-md.h (read_char): Increment read_md_lineno after reading '\\n'.\n\t(unread_char): Decrement read_md_lineno after putting back '\\n'.\n\t* read-md.c (fatal_with_file_and_line): Push back any characters\n\tthat we decide not to add to the context.\n\t(read_skip_spaces): Don't increment read_md_lineno here.  Avoid using\n\tfatal_expected_char in cases where '/' ends a line (for example).\n\t(read_name): Don't increment read_md_lineno here.\n\t(read_escape): Likewise.\n\t(read_quoted_string): Likewise.\n\t(read_braced_string): Likewise.\n\nFrom-SVN: r160576", "tree": {"sha": "91d59b44f33747a188102e54bc43cca44943e99a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91d59b44f33747a188102e54bc43cca44943e99a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f7c467fed603c8ad387e731d99ad889e7f2a501", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f7c467fed603c8ad387e731d99ad889e7f2a501", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f7c467fed603c8ad387e731d99ad889e7f2a501", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f7c467fed603c8ad387e731d99ad889e7f2a501/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9f418533f26281f5d9bf776d9d18605f8b2c3b0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f418533f26281f5d9bf776d9d18605f8b2c3b0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f418533f26281f5d9bf776d9d18605f8b2c3b0f"}], "stats": {"total": 54, "additions": 33, "deletions": 21}, "files": [{"sha": "aeb277f8aef243e8421d74e8233c921f529a1e39", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f7c467fed603c8ad387e731d99ad889e7f2a501/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f7c467fed603c8ad387e731d99ad889e7f2a501/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7f7c467fed603c8ad387e731d99ad889e7f2a501", "patch": "@@ -1,3 +1,16 @@\n+2010-06-10  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* read-md.h (read_char): Increment read_md_lineno after reading '\\n'.\n+\t(unread_char): Decrement read_md_lineno after putting back '\\n'.\n+\t* read-md.c (fatal_with_file_and_line): Push back any characters\n+\tthat we decide not to add to the context.\n+\t(read_skip_spaces): Don't increment read_md_lineno here.  Avoid using\n+\tfatal_expected_char in cases where '/' ends a line (for example).\n+\t(read_name): Don't increment read_md_lineno here.\n+\t(read_escape): Likewise.\n+\t(read_quoted_string): Likewise.\n+\t(read_braced_string): Likewise.\n+\n 2010-06-10  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* Makefile.in (READ_MD_H): Add $(HASHTAB_H)."}, {"sha": "140292189fbf5325faddd5068fb111df7fc0cbfc", "filename": "gcc/read-md.c", "status": "modified", "additions": 12, "deletions": 20, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f7c467fed603c8ad387e731d99ad889e7f2a501/gcc%2Fread-md.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f7c467fed603c8ad387e731d99ad889e7f2a501/gcc%2Fread-md.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fread-md.c?ref=7f7c467fed603c8ad387e731d99ad889e7f2a501", "patch": "@@ -259,7 +259,10 @@ fatal_with_file_and_line (const char *msg, ...)\n       if (c == EOF)\n \tbreak;\n       if (c == '\\r' || c == '\\n')\n-\tbreak;\n+\t{\n+\t  unread_char (c);\n+\t  break;\n+\t}\n       context[i] = c;\n     }\n   context[i] = '\\0';\n@@ -298,33 +301,29 @@ read_skip_spaces (void)\n       c = read_char ();\n       switch (c)\n \t{\n-\tcase '\\n':\n-\t  read_md_lineno++;\n-\t  break;\n-\n-\tcase ' ': case '\\t': case '\\f': case '\\r':\n+\tcase ' ': case '\\t': case '\\f': case '\\r': case '\\n':\n \t  break;\n \n \tcase ';':\n \t  do\n \t    c = read_char ();\n \t  while (c != '\\n' && c != EOF);\n-\t  read_md_lineno++;\n \t  break;\n \n \tcase '/':\n \t  {\n \t    int prevc;\n \t    c = read_char ();\n \t    if (c != '*')\n-\t      fatal_expected_char ('*', c);\n+\t      {\n+\t\tunread_char (c);\n+\t\tfatal_with_file_and_line (\"stray '/' in file\");\n+\t      }\n \n \t    prevc = 0;\n \t    while ((c = read_char ()) && c != EOF)\n \t      {\n-\t\tif (c == '\\n')\n-\t\t   read_md_lineno++;\n-\t        else if (prevc == '*' && c == '/')\n+\t\tif (prevc == '*' && c == '/')\n \t\t  break;\n \t        prevc = c;\n \t      }\n@@ -370,8 +369,6 @@ read_name (struct md_name *name)\n \n   if (i == 0)\n     fatal_with_file_and_line (\"missing name or number\");\n-  if (c == '\\n')\n-    read_md_lineno++;\n \n   name->buffer[i] = 0;\n   name->string = name->buffer;\n@@ -406,7 +403,6 @@ read_escape (void)\n     {\n       /* Backslash-newline is replaced by nothing, as in C.  */\n     case '\\n':\n-      read_md_lineno++;\n       return;\n \n       /* \\\" \\' \\\\ are replaced by the second character.  */\n@@ -458,9 +454,7 @@ read_quoted_string (void)\n   while (1)\n     {\n       c = read_char (); /* Read the string  */\n-      if (c == '\\n')\n-\tread_md_lineno++;\n-      else if (c == '\\\\')\n+      if (c == '\\\\')\n \t{\n \t  read_escape ();\n \t  continue;\n@@ -491,9 +485,7 @@ read_braced_string (void)\n     {\n       c = read_char (); /* Read the string  */\n \n-      if (c == '\\n')\n-\tread_md_lineno++;\n-      else if (c == '{')\n+      if (c == '{')\n \tbrace_depth++;\n       else if (c == '}')\n \tbrace_depth--;"}, {"sha": "0ebebde057d27c3d69c59943f6ac306d39cf3934", "filename": "gcc/read-md.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f7c467fed603c8ad387e731d99ad889e7f2a501/gcc%2Fread-md.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f7c467fed603c8ad387e731d99ad889e7f2a501/gcc%2Fread-md.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fread-md.h?ref=7f7c467fed603c8ad387e731d99ad889e7f2a501", "patch": "@@ -51,14 +51,21 @@ extern struct obstack string_obstack;\n static inline int\n read_char (void)\n {\n-  return getc (read_md_file);\n+  int ch;\n+\n+  ch = getc (read_md_file);\n+  if (ch == '\\n')\n+    read_md_lineno++;\n+  return ch;\n }\n \n /* Put back CH, which was the last character read from the MD file.  */\n \n static inline void\n unread_char (int ch)\n {\n+  if (ch == '\\n')\n+    read_md_lineno--;\n   ungetc (ch, read_md_file);\n }\n "}]}