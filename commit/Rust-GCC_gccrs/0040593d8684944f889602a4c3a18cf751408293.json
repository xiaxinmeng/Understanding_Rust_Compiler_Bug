{"sha": "0040593d8684944f889602a4c3a18cf751408293", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA0MDU5M2Q4Njg0OTQ0Zjg4OTYwMmE0YzNhMThjZjc1MTQwODI5Mw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-07-28T17:13:53Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-07-28T17:13:53Z"}, "message": "(move_block_from_reg): New argument SIZE.\n\n(move_block_from_reg): New argument SIZE.  If SIZE less\nthan word and BYTES_BIG_ENDIAN, shift block left to align it\nbefore storing it to memory.\n\nFrom-SVN: r5014", "tree": {"sha": "41835f38ee795120fd0e6361929159ca3cc54eb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41835f38ee795120fd0e6361929159ca3cc54eb1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0040593d8684944f889602a4c3a18cf751408293", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0040593d8684944f889602a4c3a18cf751408293", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0040593d8684944f889602a4c3a18cf751408293", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0040593d8684944f889602a4c3a18cf751408293/comments", "author": null, "committer": null, "parents": [{"sha": "8498efd0821d30f473d873bd4378484f914d9be5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8498efd0821d30f473d873bd4378484f914d9be5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8498efd0821d30f473d873bd4378484f914d9be5"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "6a4a258c859c25274f181926aac826224c5d0be9", "filename": "gcc/expr.c", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0040593d8684944f889602a4c3a18cf751408293/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0040593d8684944f889602a4c3a18cf751408293/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=0040593d8684944f889602a4c3a18cf751408293", "patch": "@@ -1460,17 +1460,38 @@ move_block_to_reg (regno, x, nregs, mode)\n }\n \n /* Copy all or part of a BLKmode value X out of registers starting at REGNO.\n-   The number of registers to be filled is NREGS.  */\n+   The number of registers to be filled is NREGS.  SIZE indicates the number\n+   of bytes in the object X.  */\n+\n \n void\n-move_block_from_reg (regno, x, nregs)\n+move_block_from_reg (regno, x, nregs, size)\n      int regno;\n      rtx x;\n      int nregs;\n+     int size;\n {\n   int i;\n   rtx pat, last;\n \n+  /* Blocks smaller than a word on a BYTES_BIG_ENDIAN machine must be aligned\n+     to the left before storing to memory.  */\n+  if (size < UNITS_PER_WORD && BYTES_BIG_ENDIAN)\n+    {\n+      rtx tem = operand_subword (x, 0, 1, BLKmode);\n+      rtx shift;\n+\n+      if (tem == 0)\n+\tabort ();\n+\n+      shift = expand_shift (LSHIFT_EXPR, word_mode,\n+\t\t\t    gen_rtx (REG, word_mode, regno),\n+\t\t\t    build_int_2 ((UNITS_PER_WORD - size)\n+\t\t\t\t\t * BITS_PER_UNIT, 0), NULL_RTX, 0);\n+      emit_move_insn (tem, shift);\n+      return;\n+    }\n+\n   /* See if the machine can do this with a store multiple insn.  */\n #ifdef HAVE_store_multiple\n   last = get_last_insn ();"}]}