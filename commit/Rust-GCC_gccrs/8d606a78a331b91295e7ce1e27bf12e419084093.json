{"sha": "8d606a78a331b91295e7ce1e27bf12e419084093", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ2MDZhNzhhMzMxYjkxMjk1ZTdjZTFlMjdiZjEyZTQxOTA4NDA5Mw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2011-08-01T15:59:50Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T15:59:50Z"}, "message": "sem_ch3.adb, [...]: Minor reformatting\n\n2011-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch3.adb, sem_ch3.ads, sem_ch5.adb, prj-part.adb, par-ch4.adb,\n\tsem_util.adb, sem_ch4.adb, sem_ch6.adb, sem_ch6.ads, sem_ch8.adb,\n\tsem_ch8.ads, sem_ch13.ads, par-ch5.adb, prj-env.ads: Minor reformatting\n\nFrom-SVN: r177055", "tree": {"sha": "7d4732f0abe2b223aae59d11f570aaab5a66bdf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d4732f0abe2b223aae59d11f570aaab5a66bdf0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d606a78a331b91295e7ce1e27bf12e419084093", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d606a78a331b91295e7ce1e27bf12e419084093", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d606a78a331b91295e7ce1e27bf12e419084093", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d606a78a331b91295e7ce1e27bf12e419084093/comments", "author": null, "committer": null, "parents": [{"sha": "1982d5a85436cb4798d3b58a6f306b33c996ff24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1982d5a85436cb4798d3b58a6f306b33c996ff24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1982d5a85436cb4798d3b58a6f306b33c996ff24"}], "stats": {"total": 210, "additions": 115, "deletions": 95}, "files": [{"sha": "97fc48e4bb8f61e34866b08d0b30e6be363a5fdb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8d606a78a331b91295e7ce1e27bf12e419084093", "patch": "@@ -1,3 +1,9 @@\n+2011-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch3.adb, sem_ch3.ads, sem_ch5.adb, prj-part.adb, par-ch4.adb,\n+\tsem_util.adb, sem_ch4.adb, sem_ch6.adb, sem_ch6.ads, sem_ch8.adb,\n+\tsem_ch8.ads, sem_ch13.ads, par-ch5.adb, prj-env.ads: Minor reformatting\n+\n 2011-08-01  Pascal Obry  <obry@adacore.com>\n \n \t* prj-part.ads, prj-part.adb (Parse): Add Target_Name parameter. Pass"}, {"sha": "e80a7ccdda6c940d095f25ce3d389520a7e94781", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=8d606a78a331b91295e7ce1e27bf12e419084093", "patch": "@@ -673,6 +673,7 @@ package body Ch4 is\n                   Formal_Error_Msg_SP (\"no mixing of positional and named \"\n                                        & \"parameter association\");\n                end if;\n+\n                Restore_Scan_State (Scan_State); -- to Id\n                goto LP_State_Call;\n "}, {"sha": "27bc899f09e7aa7cd695504388cf32573ab38c48", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=8d606a78a331b91295e7ce1e27bf12e419084093", "patch": "@@ -2138,8 +2138,9 @@ package body Ch5 is\n \n                Inner : while Present (Decl) loop\n                   if (Nkind (Decl) not in N_Later_Decl_Item\n-                      or else (SPARK_Mode\n-                               and then Nkind (Decl) = N_Package_Declaration))\n+                       or else (SPARK_Mode\n+                                 and then\n+                                   Nkind (Decl) = N_Package_Declaration))\n                     and then Nkind (Decl) /= N_Pragma\n                   then\n                      if Ada_Version = Ada_83 then"}, {"sha": "b576e2d54124bbc1fdff1b076a296a01738fa3b8", "filename": "gcc/ada/prj-env.ads", "status": "modified", "additions": 20, "deletions": 23, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fprj-env.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fprj-env.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.ads?ref=8d606a78a331b91295e7ce1e27bf12e419084093", "patch": "@@ -35,7 +35,7 @@ package Prj.Env is\n    --  Initialize global components relative to environment variables\n \n    procedure Print_Sources (In_Tree : Project_Tree_Ref);\n-   --  Output the list of sources, after Project files have been scanned\n+   --  Output the list of sources after Project files have been scanned\n \n    procedure Create_Mapping (In_Tree : Project_Tree_Ref);\n    --  Create in memory mapping from the sources of all the projects (in body\n@@ -47,35 +47,34 @@ package Prj.Env is\n       Path_FD   : out File_Descriptor;\n       Path_Name : out Path_Name_Type;\n       File_Use  : String);\n-   --  Create temporary file, and fail with an error if it could not be created\n+   --  Create temporary file, fail with an error if it could not be created\n \n    procedure Create_Mapping_File\n      (Project  : Project_Id;\n       Language : Name_Id;\n       In_Tree  : Project_Tree_Ref;\n       Name     : out Path_Name_Type);\n    --  Create a temporary mapping file for project Project. For each source or\n-   --  template of Language in the Project, put the mapping of its file\n-   --  name and path name in this file.\n+   --  template of Language in the Project, put the mapping of its file name\n+   --  and path name in this file. See fmap for a description of the format\n+   --  of the mapping file.\n    --\n    --  Implementation note: we pass a language name, not a language_index here,\n    --  since the latter would have to match exactly the index of that language\n    --  for the specified project, and that is not information available in\n    --  buildgpr.adb.\n-   --\n-   --  See fmap for a description of the format of the mapping file\n \n    procedure Create_Config_Pragmas_File\n      (For_Project : Project_Id;\n       In_Tree     : Project_Tree_Ref);\n-   --  If there needs to have SFN pragmas, either for non standard naming\n-   --  schemes or for individual units.\n+   --  If we need SFN pragmas, either for non standard naming schemes or for\n+   --  individual units.\n \n    procedure Create_New_Path_File\n      (In_Tree   : Project_Tree_Ref;\n       Path_FD   : out File_Descriptor;\n       Path_Name : out Path_Name_Type);\n-   --  Create a new temporary path file. Get the file name in Path_Name\n+   --  Create a new temporary path file, placing file name in Path_Name\n \n    function Ada_Include_Path\n      (Project   : Project_Id;\n@@ -115,7 +114,6 @@ package Prj.Env is\n    --  name of the spec is returned.\n    --\n    --  If Full_Path is False (the default), the simple file name is returned.\n-   --\n    --  If Full_Path is True, the absolute path name is returned.\n    --\n    --  If neither a body nor a spec can be found, an empty string is returned.\n@@ -152,16 +150,16 @@ package Prj.Env is\n    generic\n       with procedure Action (Path : String);\n    procedure For_All_Object_Dirs (Project : Project_Id);\n-   --  Iterate through all the object directories of a project, including\n-   --  those of imported or modified projects.\n+   --  Iterate through all the object directories of a project, including those\n+   --  of imported or modified projects.\n \n    ------------------\n    -- Project Path --\n    ------------------\n \n    type Project_Search_Path is private;\n-   --  An abstraction of the project path. This object provides subprograms to\n-   --  search for projects on the path (and caches the results for more\n+   --  An abstraction of the project path. This object provides subprograms\n+   --  to search for projects on the path (and caches the results to improve\n    --  efficiency).\n \n    procedure Free (Self : in out Project_Search_Path);\n@@ -176,22 +174,21 @@ package Prj.Env is\n    --  will remove the default project directory from the project path.\n    --\n    --  Calls to this subprogram must be performed before the first call to\n-   --  Find_Project below, or PATH will be added at the end of the search\n-   --  path.\n+   --  Find_Project below, or PATH will be added at the end of the search path.\n \n    procedure Get_Path\n      (Self        : in out Project_Search_Path;\n       Path        : out String_Access;\n       Target_Name : String := \"\");\n    --  Return the current value of the project path, either the value set\n    --  during elaboration of the package or, if procedure Set_Project_Path has\n-   --  been called, the value set by the last call to Set_Project_Path.\n-   --  The returned value must not be modified.\n+   --  been called, the value set by the last call to Set_Project_Path. The\n+   --  returned value must not be modified.\n \n    procedure Set_Path\n      (Self : in out Project_Search_Path; Path : String);\n-   --  Override the value of the project path.\n-   --  This also removes the implicit default search directories\n+   --  Override the value of the project path. This also removes the implicit\n+   --  default search directories\n \n    procedure Find_Project\n      (Self               : in out Project_Search_Path;\n@@ -220,9 +217,9 @@ private\n \n    type Project_Search_Path is record\n       Path : GNAT.OS_Lib.String_Access;\n-      --  As a special case, if the first character is '#:\" or this variable is\n-      --  unset, this means that the PATH has not been fully initialized yet\n-      --  (although subprograms above will properly take care of that).\n+      --  As a special case, if the first character is '#:\" or this variable\n+      --  is unset, this means that the PATH has not been fully initialized\n+      --  yet (although subprograms above will properly take care of that).\n \n       Cache : Projects_Paths.Instance;\n    end record;"}, {"sha": "3219e68af3abfdcf37a3cbd329b08dc4ab0c71b5", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=8d606a78a331b91295e7ce1e27bf12e419084093", "patch": "@@ -1552,7 +1552,9 @@ package body Prj.Part is\n             declare\n                Original_Path_Name : constant String :=\n                                       Get_Name_String (Token_Name);\n+\n                Extended_Project_Path_Name_Id : Path_Name_Type;\n+\n             begin\n                Find_Project\n                  (In_Tree.Project_Path,\n@@ -1569,8 +1571,7 @@ package body Prj.Part is\n \n                   Error_Msg (Flags, \"unknown project file: %%\", Token_Ptr);\n \n-                  --  If we are not in the main project file, display the\n-                  --  import path.\n+                  --  If not in the main project file, display the import path\n \n                   if Project_Stack.Last > 1 then\n                      Error_Msg_Name_1 :=\n@@ -1621,8 +1622,8 @@ package body Prj.Part is\n                      end if;\n \n                      --  An abstract project can only extend an abstract\n-                     --  project, otherwise we may have an abstract project\n-                     --  with sources, if it inherits sources from the project\n+                     --  project. Otherwise we may have an abstract project\n+                     --  with sources if it inherits sources from the project\n                      --  it extends.\n \n                      if Project_Qualifier_Of (Project, In_Tree) = Dry and then"}, {"sha": "80d44e6282ff47d9dbc1824bb6a909a758aed967", "filename": "gcc/ada/sem_ch13.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fsem_ch13.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fsem_ch13.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.ads?ref=8d606a78a331b91295e7ce1e27bf12e419084093", "patch": "@@ -41,9 +41,9 @@ package Sem_Ch13 is\n       E : Entity_Id;\n       L : List_Id);\n    --  This procedure is called to analyze aspect specifications for node N.\n-   --  E is the corresponding entity declared by the declaration node N, and L\n-   --  is the list of aspect specifications for this node. If L is No_List, the\n-   --  call is ignored. Note that we can't use a simpler interface of just\n+   --  E is the corresponding entity declared by the declaration node N, and\n+   --  L is the list of aspect specifications for this node. If L is No_List,\n+   --  the call is ignored. Note that we can't use a simpler interface of just\n    --  passing the node N, since the analysis of the node may cause it to be\n    --  rewritten to a node not permitting aspect specifications.\n "}, {"sha": "5aaf772a0e4993b9984192bcaf0d23d446ea6b53", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=8d606a78a331b91295e7ce1e27bf12e419084093", "patch": "@@ -2028,7 +2028,7 @@ package body Sem_Ch3 is\n       while Present (D) loop\n \n          --  Package specification cannot contain a package declaration in\n-         --  SPARK or ALFA\n+         --  SPARK or ALFA.\n \n          if Formal_Verification_Mode\n            and then Nkind (D) = N_Package_Declaration"}, {"sha": "7888a3200b0125fc196ef48851bd4090bd1126d6", "filename": "gcc/ada/sem_ch3.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fsem_ch3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fsem_ch3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.ads?ref=8d606a78a331b91295e7ce1e27bf12e419084093", "patch": "@@ -171,10 +171,10 @@ package Sem_Ch3 is\n    --  Constraint, return the value of that discriminant.\n \n    function Is_Constant_Bound (Exp : Node_Id) return Boolean;\n-   --  Determines whether the given bound is a compile-time known value, or a\n-   --  constant entity, or an enumeration literal, or an expression composed\n-   --  of constant-bound subexpressions which are evaluated by means of\n-   --  standard operators.\n+   --  Exp is the expression for an array bound. Determines whether the\n+   --  bound is a compile-time known value, or a constant entity, or an\n+   --  enumeration literal, or an expression composed of constant-bound\n+   --  subexpressions which are evaluated by means of standard operators.\n \n    function Is_Null_Extension (T : Entity_Id) return Boolean;\n    --  Returns True if the tagged type T has an N_Full_Type_Declaration that"}, {"sha": "cd247cb8180d2d07605deb798e1a47b477a551cb", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=8d606a78a331b91295e7ce1e27bf12e419084093", "patch": "@@ -1494,17 +1494,23 @@ package body Sem_Ch4 is\n \n          begin\n             Set_Etype (N, Any_Type);\n+\n+            --  Shouldn't the following statement be down in the ELSE of the\n+            --  following loop? ???\n+\n             Get_First_Interp (Then_Expr, I, It);\n-            if No (Else_Expr) then\n-               --  if no else_expression the conditional must be boolean.\n \n+            --  if no Else_Expression the conditional must be boolean\n+\n+            if No (Else_Expr) then\n                Set_Etype (N, Standard_Boolean);\n-            else\n-               while Present (It.Nam) loop\n \n-                  --  For each possible intepretation of the Then Expression,\n-                  --  add it only if the else expression has a compatible type.\n+            --  Else_Expression Present. For each possible intepretation of\n+            --  the Then_Expression, add it only if the Else_Expression has\n+            --  a compatible type.\n \n+            else\n+               while Present (It.Nam) loop\n                   if Has_Compatible_Type (Else_Expr, It.Typ) then\n                      Add_One_Interp (N, It.Typ, It.Typ);\n                   end if;"}, {"sha": "42b474a0c39c690a4e19656b37199549bdfedde9", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=8d606a78a331b91295e7ce1e27bf12e419084093", "patch": "@@ -1100,7 +1100,7 @@ package body Sem_Ch5 is\n       Analyze_Choices (N, Exp_Type, Dont_Care, Others_Present);\n \n       --  A case statement with a single \"others\" alternative is not allowed\n-      --  in SPARK or ALFA\n+      --  in SPARK or ALFA.\n \n       if Formal_Verification_Mode\n         and then Others_Present\n@@ -1225,32 +1225,34 @@ package body Sem_Ch5 is\n       end if;\n \n       --  In formal mode, verify that the exit statement respects the SPARK\n-      --  restrictions\n+      --  restrictions.\n \n       if Formal_Verification_Mode then\n          if Present (Cond) then\n             if Nkind (Parent (N)) /= N_Loop_Statement then\n                Formal_Error_Msg_N\n                  (\"exit with when clause must be directly in loop\", N);\n             end if;\n+\n          else\n             if Nkind (Parent (N)) /= N_If_Statement then\n                if Nkind (Parent (N)) = N_Elsif_Part then\n                   Formal_Error_Msg_N (\"exit must be in IF without ELSIF\", N);\n                else\n                   Formal_Error_Msg_N (\"exit must be directly in IF\", N);\n                end if;\n+\n             elsif Nkind (Parent (Parent (N))) /= N_Loop_Statement then\n                Formal_Error_Msg_N (\"exit must be in IF directly in loop\", N);\n \n             --  First test the presence of ELSE, so that an exit in an ELSE\n-            --  leads to an error mentioning the ELSE\n+            --  leads to an error mentioning the ELSE.\n \n             elsif Present (Else_Statements (Parent (N))) then\n                Formal_Error_Msg_N (\"exit must be in IF without ELSE\", N);\n \n             --  An exit in an ELSIF does not reach here, as it would have been\n-            --  detected in the case (Nkind (Parent (N)) /= N_If_Statement)\n+            --  detected in the case (Nkind (Parent (N)) /= N_If_Statement).\n \n             elsif Present (Elsif_Parts (Parent (N))) then\n                Formal_Error_Msg_N (\"exit must be in IF without ELSIF\", N);\n@@ -1866,7 +1868,7 @@ package body Sem_Ch5 is\n                end;\n \n                --  Loop parameter specification must include subtype mark in\n-               --  SPARK or ALFA\n+               --  SPARK or ALFA.\n \n                if Formal_Verification_Mode\n                  and then Nkind (DS) = N_Range"}, {"sha": "530a51c9f218daeeb56033e8bc47882f700f6bba", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 16, "deletions": 12, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=8d606a78a331b91295e7ce1e27bf12e419084093", "patch": "@@ -335,9 +335,10 @@ package body Sem_Ch6 is\n          Error_Msg_N (\"illegal context for return statement\", N);\n       end if;\n \n-      if Kind = E_Function or else Kind = E_Generic_Function then\n+      if Ekind_In (Kind, E_Function, E_Generic_Function) then\n          Analyze_Function_Return (N);\n-      elsif Kind = E_Procedure or else Kind = E_Generic_Procedure then\n+\n+      elsif Ekind_In (Kind, E_Procedure, E_Generic_Procedure) then\n          Set_Return_Present (Scope_Id);\n       end if;\n \n@@ -685,13 +686,13 @@ package body Sem_Ch6 is\n          Check_Limited_Return (Expr);\n \n          --  The only RETURN allowed in SPARK or ALFA is as the last statement\n-         --  of the function\n+         --  of the function.\n \n          if Formal_Verification_Mode\n            and then Nkind (Parent (N)) /= N_Handled_Sequence_Of_Statements\n            and then\n              (Nkind (Parent (Parent (N))) /= N_Subprogram_Body\n-              or else Present (Next (N)))\n+               or else Present (Next (N)))\n          then\n             Formal_Error_Msg_N\n               (\"RETURN should be the last statement in function\", N);\n@@ -1633,9 +1634,9 @@ package body Sem_Ch6 is\n \n       procedure Check_Missing_Return;\n       --  Checks for a function with a no return statements, and also performs\n-      --  the warning checks implemented by Check_Returns.\n-      --  In formal mode, also verify that a function ends with a RETURN and\n-      --  that a procedure does not contain any RETURN.\n+      --  the warning checks implemented by Check_Returns. In formal mode, also\n+      --  verify that a function ends with a RETURN and that a procedure does\n+      --  not contain any RETURN.\n \n       function Disambiguate_Spec return Entity_Id;\n       --  When a primitive is declared between the private view and the full\n@@ -1845,16 +1846,16 @@ package body Sem_Ch6 is\n                Id := Body_Id;\n             end if;\n \n-            --  In formal mode, the last statement of a function should be\n-            --  a return statement\n+            --  In formal mode, the last statement of a function should be a\n+            --  return statement.\n \n             if Formal_Verification_Mode then\n                declare\n                   Last_Kind : constant Node_Kind :=\n                                 Nkind (Last (Statements (HSS)));\n                begin\n-                  if Last_Kind /= N_Simple_Return_Statement\n-                    and then Last_Kind /= N_Extended_Return_Statement\n+                  if not Nkind_In (Last_Kind, N_Simple_Return_Statement,\n+                                              N_Extended_Return_Statement)\n                   then\n                      Formal_Error_Msg_N\n                        (\"last statement in function should be RETURN\", N);\n@@ -1886,6 +1887,9 @@ package body Sem_Ch6 is\n                Id := Body_Id;\n             end if;\n \n+            --  Would be nice to point to return statement here, can we\n+            --  borrow the Check_Returns procedure here ???\n+\n             if Return_Present (Id) then\n                Formal_Error_Msg_N (\"procedure should not have RETURN\", N);\n             end if;\n@@ -6100,7 +6104,7 @@ package body Sem_Ch6 is\n \n             if Scope (E) /= Scope (S)\n                   and then (not Is_Overloadable (E)\n-                              or else Subtype_Conformant (E, S))\n+                             or else Subtype_Conformant (E, S))\n                   and then (Is_Immediately_Visible (E)\n                               or else\n                             Is_Potentially_Use_Visible (S))"}, {"sha": "90fd520a71bff9b208bacfd22445bfca7b8aeb12", "filename": "gcc/ada/sem_ch6.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fsem_ch6.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fsem_ch6.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.ads?ref=8d606a78a331b91295e7ce1e27bf12e419084093", "patch": "@@ -204,8 +204,8 @@ package Sem_Ch6 is\n       Derived_Type : Entity_Id := Empty);\n    --  Process new overloaded entity. Overloaded entities are created by\n    --  enumeration type declarations, subprogram specifications, entry\n-   --  declarations, and (implicitly) by type derivations. Derived_Type non-\n-   --  Empty indicates that this is a subprogram derived for that type.\n+   --  declarations, and (implicitly) by type derivations. If Derived_Type\n+   --  is non-empty then this is a subprogram derived for that type.\n \n    procedure Process_Formals (T : List_Id; Related_Nod : Node_Id);\n    --  Enter the formals in the scope of the subprogram or entry, and\n@@ -239,7 +239,7 @@ package Sem_Ch6 is\n       Old_Id                   : Entity_Id;\n       Skip_Controlling_Formals : Boolean := False) return Boolean;\n    --  Determine whether two callable entities (subprograms, entries, literals)\n-   --  are subtype conformant (RM6.3.1(16)). Skip_Controlling_Formals is True\n+   --  are subtype conformant (RM 6.3.1(16)). Skip_Controlling_Formals is True\n    --  when checking the conformance of a subprogram that implements an\n    --  interface operation. In that case, only the non-controlling formals\n    --  can (and must) be examined.\n@@ -249,10 +249,10 @@ package Sem_Ch6 is\n       Old_Id                   : Entity_Id;\n       Skip_Controlling_Formals : Boolean := False) return Boolean;\n    --  Determine whether two callable entities (subprograms, entries, literals)\n-   --  are type conformant (RM6.3.1(14)). Skip_Controlling_Formals is True when\n-   --  checking the conformance of a subprogram that implements an interface\n-   --  operation. In that case, only the non-controlling formals can (and must)\n-   --  be examined.\n+   --  are type conformant (RM 6.3.1(14)). Skip_Controlling_Formals is True\n+   --  when checking the conformance of a subprogram that implements an\n+   --  interface operation. In that case, only the non-controlling formals\n+   --  can (and must) be examined.\n \n    procedure Valid_Operator_Definition (Designator : Entity_Id);\n    --  Verify that an operator definition has the proper number of formals"}, {"sha": "59e9610938820fd90b0cebf23265ba90e4d70d79", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=8d606a78a331b91295e7ce1e27bf12e419084093", "patch": "@@ -6282,11 +6282,15 @@ package body Sem_Ch8 is\n       --  active set of scopes.\n \n       for J in reverse 0 .. Scope_Stack.Last loop\n+\n+         --  S was reached without seing a loop scope first\n+\n          if Scope_Stack.Table (J).Entity = S then\n-            --  S was reached without seing a loop scope first\n             return False;\n+\n+         --  S was not yet reached, so it contains at least one inner loop\n+\n          elsif Ekind (Scope_Stack.Table (J).Entity) = E_Loop then\n-            --  S was not yet reached, so it contains at least one inner loop\n             return True;\n          end if;\n "}, {"sha": "6d02a41b76a8fe8041b29b18b6763d90916bff06", "filename": "gcc/ada/sem_ch8.ads", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fsem_ch8.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fsem_ch8.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.ads?ref=8d606a78a331b91295e7ce1e27bf12e419084093", "patch": "@@ -102,13 +102,13 @@ package Sem_Ch8 is\n    --  processing for 'Class attribute references.\n \n    function Has_Loop_In_Inner_Open_Scopes (S : Entity_Id) return Boolean;\n-   --  S is the entity of an open scope. This function determines if there\n-   --  is an inner scope of S which is a loop (i.e. it appears somewhere in\n-   --  the scope stack after S).\n+   --  S is the entity of an open scope. This function determines if there is\n+   --  an inner scope of S which is a loop (i.e. it appears somewhere in the\n+   --  scope stack after S).\n \n    function In_Open_Scopes (S : Entity_Id) return Boolean;\n-   --  S is the entity of a scope. This function determines if this scope\n-   --  is currently open (i.e. it appears somewhere in the scope stack).\n+   --  S is the entity of a scope. This function determines if this scope is\n+   --  currently open (i.e. it appears somewhere in the scope stack).\n \n    procedure Initialize;\n    --  Initializes data structures used for visibility analysis. Must be\n@@ -125,13 +125,13 @@ package Sem_Ch8 is\n    --  analysis of the subunit, the parent's environment is again identical.\n \n    procedure Push_Scope (S : Entity_Id);\n-   --  Make new scope stack entry, pushing S, the entity for a scope\n-   --  onto the top of the scope table. The current setting of the scope\n-   --  suppress flags is saved for restoration on exit.\n+   --  Make new scope stack entry, pushing S, the entity for a scope onto the\n+   --  top of the scope table. The current setting of the scope suppress flags\n+   --  is saved for restoration on exit.\n \n    procedure Pop_Scope;\n-   --  Remove top entry from scope stack, restoring the saved setting\n-   --  of the scope suppress flags.\n+   --  Remove top entry from scope stack, restoring the saved setting of the\n+   --  scope suppress flags.\n \n    function Present_System_Aux (N : Node_Id := Empty) return Boolean;\n    --  Return True if the auxiliary system file has been successfully loaded."}, {"sha": "9974ec985269b5de836b3ed8dfca73c996e5341c", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d606a78a331b91295e7ce1e27bf12e419084093/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=8d606a78a331b91295e7ce1e27bf12e419084093", "patch": "@@ -3200,32 +3200,30 @@ package body Sem_Util is\n       Append_Entity     (Def_Id, S);\n       Set_Public_Status (Def_Id);\n \n-      --  Declaring an homonym is not allowed in SPARK or ALFA...\n+      --  Declaring a homonym is not allowed in SPARK or ALFA ...\n \n       if Formal_Verification_Mode and then Present (C)\n \n-        --  ...unless the new declaration is in a subprogram, and the visible\n+        --  ... unless the new declaration is in a subprogram, and the visible\n         --  declaration is a variable declaration or a parameter specification\n-        --  outside that subprogram;\n+        --  outside that subprogram.\n \n         and then not\n-          (Nkind_In (Parent (Parent (Def_Id)),\n-                     N_Subprogram_Body,\n-                     N_Function_Specification,\n-                     N_Procedure_Specification)\n+          (Nkind_In (Parent (Parent (Def_Id)), N_Subprogram_Body,\n+                                               N_Function_Specification,\n+                                               N_Procedure_Specification)\n            and then\n-             Nkind_In (Parent (C),\n-                       N_Object_Declaration,\n-                       N_Parameter_Specification))\n+             Nkind_In (Parent (C), N_Object_Declaration,\n+                                   N_Parameter_Specification))\n \n-        --  ...or the new declaration is in a package, and the visible\n-        --  declaration occurs outside that package;\n+        --  ... or the new declaration is in a package, and the visible\n+        --  declaration occurs outside that package.\n \n-        and then not Nkind_In (Parent (Parent (Def_Id)),\n-                               N_Package_Specification,\n-                               N_Package_Body)\n+        and then not\n+          Nkind_In (Parent (Parent (Def_Id)), N_Package_Specification,\n+                                              N_Package_Body)\n \n-        --  ...or the new declaration is a component declaration in a record\n+        --  ... or the new declaration is a component declaration in a record\n         --  type definition.\n \n         and then Nkind (Parent (Def_Id)) /= N_Component_Declaration"}]}