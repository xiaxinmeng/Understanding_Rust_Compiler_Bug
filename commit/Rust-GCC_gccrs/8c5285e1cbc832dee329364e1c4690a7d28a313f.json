{"sha": "8c5285e1cbc832dee329364e1c4690a7d28a313f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM1Mjg1ZTFjYmM4MzJkZWUzMjkzNjRlMWM0NjkwYTdkMjhhMzEzZg==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@redhat.com", "date": "2005-11-15T02:59:03Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2005-11-15T02:59:03Z"}, "message": "re PR tree-optimization/24840 (ICE process_assert_insertions_for, at tree-vrp.c:2807)\n\n\n\tPR 24840\n\t* tree-vrp.c (infer_value_range): Return false if STMT is a\n\tblock terminator and its basic block has no successors.\n\ntestsuite/\n\n\tPR 24840\n\t* gcc.dg/tree-ssa/pr24840.c: New test.\n\nFrom-SVN: r106930", "tree": {"sha": "01472ccbe2e961644ad8b9fcf25f37493140d337", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01472ccbe2e961644ad8b9fcf25f37493140d337"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c5285e1cbc832dee329364e1c4690a7d28a313f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c5285e1cbc832dee329364e1c4690a7d28a313f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c5285e1cbc832dee329364e1c4690a7d28a313f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c5285e1cbc832dee329364e1c4690a7d28a313f/comments", "author": null, "committer": null, "parents": [{"sha": "1f4c2c57da3143ef0a5e9943c8e16ab05a0883d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f4c2c57da3143ef0a5e9943c8e16ab05a0883d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f4c2c57da3143ef0a5e9943c8e16ab05a0883d9"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "804e6b513bed2750d027af11f95cf8f22a553391", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c5285e1cbc832dee329364e1c4690a7d28a313f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c5285e1cbc832dee329364e1c4690a7d28a313f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c5285e1cbc832dee329364e1c4690a7d28a313f", "patch": "@@ -1,3 +1,9 @@\n+2005-11-14  Diego Novillo  <dnovillo@redhat.com>\n+\n+\tPR 24840\n+\t* tree-vrp.c (infer_value_range): Return false if STMT is a\n+\tblock terminator and its basic block has no successors.\n+\n 2005-11-14  Mike Stump  <mrs@apple.com>\n \n \t* config/i386/i386.c (override_options): -masm=intel isn't"}, {"sha": "2c2f3976be20a1cba93af2adfef3b37989da7104", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c5285e1cbc832dee329364e1c4690a7d28a313f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c5285e1cbc832dee329364e1c4690a7d28a313f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8c5285e1cbc832dee329364e1c4690a7d28a313f", "patch": "@@ -1,3 +1,8 @@\n+2005-11-14  Diego Novillo  <dnovillo@redhat.com>\n+\n+\tPR 24840\n+\t* gcc.dg/tree-ssa/pr24840.c: New test.\n+\n 2005-11-14  Janis Johnson  <janis187@us.ibm.com>\n \n \tPR testsuite/24841"}, {"sha": "736dafdec5974eab7f23540fbae5e02e25770680", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr24840.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c5285e1cbc832dee329364e1c4690a7d28a313f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr24840.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c5285e1cbc832dee329364e1c4690a7d28a313f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr24840.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr24840.c?ref=8c5285e1cbc832dee329364e1c4690a7d28a313f", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+typedef struct\n+{\n+  int tag, y;\n+} Object;\n+\n+void Err_Handler () __attribute__ ((__noreturn__));\n+\n+int\n+P_Error (int argc, Object * argv)\n+{\n+    if (((argv[1]).tag >> 1) != 11)\n+      Wrong_Type (argv[1], 11);\n+  Err_Handler (argv[0], argv[1], argc - 2, argv + 2);\n+}"}, {"sha": "f88b23e1aeb59f3af7bd34ba002a171e5ffe57ee", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c5285e1cbc832dee329364e1c4690a7d28a313f/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c5285e1cbc832dee329364e1c4690a7d28a313f/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=8c5285e1cbc832dee329364e1c4690a7d28a313f", "patch": "@@ -2221,6 +2221,13 @@ infer_value_range (tree stmt, tree op, enum tree_code *comp_code_p, tree *val_p)\n   if (tree_could_throw_p (stmt))\n     return false;\n \n+  /* If STMT is the last statement of a basic block with no\n+     successors, there is no point inferring anything about any of its\n+     operands.  We would not be able to find a proper insertion point\n+     for the assertion, anyway.  */\n+  if (stmt_ends_bb_p (stmt) && EDGE_COUNT (bb_for_stmt (stmt)->succs) == 0)\n+    return false;\n+\n   if (POINTER_TYPE_P (TREE_TYPE (op)))\n     {\n       bool is_store;"}]}