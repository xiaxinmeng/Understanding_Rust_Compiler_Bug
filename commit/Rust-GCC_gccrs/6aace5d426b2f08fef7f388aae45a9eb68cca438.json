{"sha": "6aace5d426b2f08fef7f388aae45a9eb68cca438", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFhY2U1ZDQyNmIyZjA4ZmVmN2YzODhhYWU0NWE5ZWI2OGNjYTQzOA==", "commit": {"author": {"name": "Franz Sirl", "email": "Franz.Sirl-kernel@lauterbach.com", "date": "2001-01-22T22:52:18Z"}, "committer": {"name": "Franz Sirl", "email": "sirl@gcc.gnu.org", "date": "2001-01-22T22:52:18Z"}, "message": "20010122-1.c: New test, exercise __builtin_return_address.\n\n        2001-01-22  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n\n        * gcc.c-torture/execute/20010122-1.c: New test, exercise\n        __builtin_return_address.\n\nFrom-SVN: r39189", "tree": {"sha": "880c9d444b653b4c5be350afac41ee0c5c2ffe5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/880c9d444b653b4c5be350afac41ee0c5c2ffe5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6aace5d426b2f08fef7f388aae45a9eb68cca438", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aace5d426b2f08fef7f388aae45a9eb68cca438", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aace5d426b2f08fef7f388aae45a9eb68cca438", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aace5d426b2f08fef7f388aae45a9eb68cca438/comments", "author": {"login": "jinkama-san", "id": 1462162, "node_id": "MDQ6VXNlcjE0NjIxNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1462162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinkama-san", "html_url": "https://github.com/jinkama-san", "followers_url": "https://api.github.com/users/jinkama-san/followers", "following_url": "https://api.github.com/users/jinkama-san/following{/other_user}", "gists_url": "https://api.github.com/users/jinkama-san/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinkama-san/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinkama-san/subscriptions", "organizations_url": "https://api.github.com/users/jinkama-san/orgs", "repos_url": "https://api.github.com/users/jinkama-san/repos", "events_url": "https://api.github.com/users/jinkama-san/events{/privacy}", "received_events_url": "https://api.github.com/users/jinkama-san/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "71f123ca191d1ddd41c5c6ebcafa9514cb00295b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71f123ca191d1ddd41c5c6ebcafa9514cb00295b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71f123ca191d1ddd41c5c6ebcafa9514cb00295b"}], "stats": {"total": 214, "additions": 214, "deletions": 0}, "files": [{"sha": "d89997cb9a97130052f70427922bfcb466f964eb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aace5d426b2f08fef7f388aae45a9eb68cca438/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aace5d426b2f08fef7f388aae45a9eb68cca438/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6aace5d426b2f08fef7f388aae45a9eb68cca438", "patch": "@@ -1,3 +1,8 @@\n+2001-01-22  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n+\n+\t* gcc.c-torture/execute/20010122-1.c: New test, exercise\n+\t__builtin_return_address.\n+\n 2001-01-22  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.old-deja/g++.martin/sts_partial.C: Remove XFAIL."}, {"sha": "c88144b6022aea6107374953ab23d4264e521924", "filename": "gcc/testsuite/gcc.c-torture/execute/20010122-1.c", "status": "added", "additions": 209, "deletions": 0, "changes": 209, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aace5d426b2f08fef7f388aae45a9eb68cca438/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010122-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aace5d426b2f08fef7f388aae45a9eb68cca438/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010122-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010122-1.c?ref=6aace5d426b2f08fef7f388aae45a9eb68cca438", "patch": "@@ -0,0 +1,209 @@\n+\n+extern void exit (int);\n+extern void abort (void);\n+extern void *alloca (int);\n+char *dummy (void);\n+\n+void *save_ret1[6];\n+void *test4a (char *);\n+void *test5a (char *);\n+void *test6a (char *);\n+\n+void *test1 (void)\n+{\n+  void * temp;\n+  temp = __builtin_return_address (0);\n+  return temp;\n+}\n+\n+void *test2 (void)\n+{\n+  void * temp;\n+  dummy ();\n+  temp = __builtin_return_address (0);\n+  return temp;\n+}\n+\n+void *test3 (void)\n+{\n+  void * temp;\n+  temp = __builtin_return_address (0);\n+  dummy ();\n+  return temp;\n+}\n+\n+void *test4 (void)\n+{\n+  char * save = (char*) alloca (4);\n+  \n+  return test4a (save);\n+}\n+\n+void *test4a (char * p)\n+{\n+  void * temp;\n+  temp = __builtin_return_address (1);\n+  return temp;\n+}\n+\n+void *test5 (void)\n+{\n+  char * save = (char*) alloca (4);\n+  \n+  return test5a (save);\n+}\n+\n+void *test5a (char * p)\n+{\n+  void * temp;\n+  dummy ();\n+  temp = __builtin_return_address (1);\n+  return temp;\n+}\n+\n+void *test6 (void)\n+{\n+  char * save = (char*) alloca (4);\n+  \n+  return test6a (save);\n+}\n+\n+void *test6a (char * p)\n+{\n+  void * temp;\n+  temp = __builtin_return_address (1);\n+  dummy ();\n+  return temp;\n+}\n+\n+void *(*func1[6])(void) = { test1, test2, test3, test4, test5, test6 };\n+\n+char * call_func1 (int i)\n+{\n+  char * save = (char*) alloca (4);\n+\n+  save_ret1[i] = func1[i] ();\n+\n+  return save;\n+}\n+\n+\n+static void *ret_addr;\n+void *save_ret2[6];\n+void test10a (char *);\n+void test11a (char *);\n+void test12a (char *);\n+\n+void test7 (void)\n+{\n+  ret_addr = __builtin_return_address (0);\n+  return;\n+}\n+\n+void test8 (void)\n+{\n+  dummy ();\n+  ret_addr = __builtin_return_address (0);\n+  return;\n+}\n+\n+void test9 (void)\n+{\n+  ret_addr = __builtin_return_address (0);\n+  dummy ();\n+  return;\n+}\n+\n+void test10 (void)\n+{\n+  char * save = (char*) alloca (4);\n+  \n+  test10a (save);\n+}\n+\n+void test10a (char * p)\n+{\n+  ret_addr = __builtin_return_address (1);\n+  return;\n+}\n+\n+void test11 (void)\n+{\n+  char * save = (char*) alloca (4);\n+  \n+  test11a (save);\n+}\n+\n+void test11a (char * p)\n+{\n+  dummy ();\n+  ret_addr = __builtin_return_address (1);\n+  return;\n+}\n+\n+void test12 (void)\n+{\n+  char * save = (char*) alloca (4);\n+  \n+  test12a (save);\n+}\n+\n+void test12a (char * p)\n+{\n+  ret_addr = __builtin_return_address (1);\n+  dummy ();\n+  return;\n+}\n+\n+char * dummy (void)\n+{\n+  char * save = (char*) alloca (4);\n+  \n+  return save;\n+}\n+\n+void (*func2[6])(void) = { test7, test8, test9, test10, test11, test12 };\n+\n+char * call_func2 (int i)\n+{\n+  char * save = (char*) alloca (4);\n+\n+  func2[i] ();\n+  save_ret2[i] = ret_addr;\n+\n+  return save;\n+}\n+\n+int main (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < 6; i++) {\n+    call_func1(i);\n+  }\n+\n+  if (save_ret1[0] != save_ret1[1]\n+      || save_ret1[1] != save_ret1[2])\n+    abort ();\n+  if (save_ret1[3] != save_ret1[4]\n+      || save_ret1[4] != save_ret1[5])\n+    abort ();\n+  if (save_ret1[3] && save_ret1[0] != save_ret1[3])\n+    abort ();\n+\n+\n+  for (i = 0; i < 6; i++) {\n+    call_func2(i);\n+  }\n+\n+  if (save_ret2[0] != save_ret2[1]\n+      || save_ret2[1] != save_ret2[2])\n+    abort ();\n+  if (save_ret2[3] != save_ret2[4]\n+      || save_ret2[4] != save_ret2[5])\n+    abort ();\n+  if (save_ret2[3] && save_ret2[0] != save_ret2[3])\n+    abort ();\n+\n+  exit (0);\n+}"}]}