{"sha": "909b30a17e71253772d2cb174d0dae6d0b8c9401", "node_id": "C_kwDOANBUbNoAKDkwOWIzMGExN2U3MTI1Mzc3MmQyY2IxNzRkMGRhZTZkMGI4Yzk0MDE", "commit": {"author": {"name": "Eric Gallager", "email": "egallager@gcc.gnu.org", "date": "2021-11-29T18:24:12Z"}, "committer": {"name": "Eric Gallager", "email": "egallager@gcc.gnu.org", "date": "2021-11-29T18:24:12Z"}, "message": "Make etags path used by build system configurable\n\nThis commit allows users to specify a path to their \"etags\"\nexecutable for use when doing \"make tags\".\nI based this patch off of this one from upstream automake:\nhttps://git.savannah.gnu.org/cgit/automake.git/commit/m4?id=d2ccbd7eb38d6a4277d6f42b994eb5a29b1edf29\nThis means that I just supplied variables that the user can override\nfor the tags programs, rather than having the configure scripts\nactually check for them. I handle etags and ctags separately because\nthe intl subdirectory has separate targets for them. This commit\nonly affects the subdirectories that use handwritten Makefiles; the\nones that use automake will have to wait until we update the version\nof automake used to be 1.16.4 or newer before they'll be fixed.\n\nAddresses #103021\n\ngcc/ChangeLog:\n\n\tPR other/103021\n\t* Makefile.in: Substitute CTAGS, ETAGS, and CSCOPE\n\tvariables. Use ETAGS variable in TAGS target.\n\t* configure: Regenerate.\n\t* configure.ac: Allow CTAGS, ETAGS, and CSCOPE\n\tvariables to be overridden.\n\ngcc/ada/ChangeLog:\n\n\tPR other/103021\n\t* gcc-interface/Make-lang.in: Use ETAGS variable in\n\tTAGS target.\n\ngcc/c/ChangeLog:\n\n\tPR other/103021\n\t* Make-lang.in: Use ETAGS variable in TAGS target.\n\ngcc/cp/ChangeLog:\n\n\tPR other/103021\n\t* Make-lang.in: Use ETAGS variable in TAGS target.\n\ngcc/d/ChangeLog:\n\n\tPR other/103021\n\t* Make-lang.in: Use ETAGS variable in TAGS target.\n\ngcc/fortran/ChangeLog:\n\n\tPR other/103021\n\t* Make-lang.in: Use ETAGS variable in TAGS target.\n\ngcc/go/ChangeLog:\n\n\tPR other/103021\n\t* Make-lang.in: Use ETAGS variable in TAGS target.\n\ngcc/objc/ChangeLog:\n\n\tPR other/103021\n\t* Make-lang.in: Use ETAGS variable in TAGS target.\n\ngcc/objcp/ChangeLog:\n\n\tPR other/103021\n\t* Make-lang.in: Use ETAGS variable in TAGS target.\n\nintl/ChangeLog:\n\n\tPR other/103021\n\t* Makefile.in: Use ETAGS variable in TAGS target,\n\tCTAGS variable in CTAGS target, and MKID variable\n\tin ID target.\n\t* configure: Regenerate.\n\t* configure.ac: Allow CTAGS, ETAGS, and MKID\n\tvariables to be overridden.\n\nlibcpp/ChangeLog:\n\n\tPR other/103021\n\t* Makefile.in: Use ETAGS variable in TAGS target.\n\t* configure: Regenerate.\n\t* configure.ac: Allow ETAGS variable to be overridden.\n\nlibiberty/ChangeLog:\n\n\tPR other/103021\n\t* Makefile.in: Use ETAGS variable in TAGS target.\n\t* configure: Regenerate.\n\t* configure.ac: Allow ETAGS variable to be overridden.", "tree": {"sha": "13c5f856e33de36cf3c91991bea3914f85d74a52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13c5f856e33de36cf3c91991bea3914f85d74a52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/909b30a17e71253772d2cb174d0dae6d0b8c9401", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/909b30a17e71253772d2cb174d0dae6d0b8c9401", "html_url": "https://github.com/Rust-GCC/gccrs/commit/909b30a17e71253772d2cb174d0dae6d0b8c9401", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/909b30a17e71253772d2cb174d0dae6d0b8c9401/comments", "author": {"login": "cooljeanius", "id": 1388660, "node_id": "MDQ6VXNlcjEzODg2NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/1388660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooljeanius", "html_url": "https://github.com/cooljeanius", "followers_url": "https://api.github.com/users/cooljeanius/followers", "following_url": "https://api.github.com/users/cooljeanius/following{/other_user}", "gists_url": "https://api.github.com/users/cooljeanius/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooljeanius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooljeanius/subscriptions", "organizations_url": "https://api.github.com/users/cooljeanius/orgs", "repos_url": "https://api.github.com/users/cooljeanius/repos", "events_url": "https://api.github.com/users/cooljeanius/events{/privacy}", "received_events_url": "https://api.github.com/users/cooljeanius/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cooljeanius", "id": 1388660, "node_id": "MDQ6VXNlcjEzODg2NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/1388660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooljeanius", "html_url": "https://github.com/cooljeanius", "followers_url": "https://api.github.com/users/cooljeanius/followers", "following_url": "https://api.github.com/users/cooljeanius/following{/other_user}", "gists_url": "https://api.github.com/users/cooljeanius/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooljeanius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooljeanius/subscriptions", "organizations_url": "https://api.github.com/users/cooljeanius/orgs", "repos_url": "https://api.github.com/users/cooljeanius/repos", "events_url": "https://api.github.com/users/cooljeanius/events{/privacy}", "received_events_url": "https://api.github.com/users/cooljeanius/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85289ba36c2e62de84cc0232c954d9a74bda708a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85289ba36c2e62de84cc0232c954d9a74bda708a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85289ba36c2e62de84cc0232c954d9a74bda708a"}], "stats": {"total": 145, "additions": 120, "deletions": 25}, "files": [{"sha": "7054201db522374ff588725a7f167d6b99461c04", "filename": "gcc/Makefile.in", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909b30a17e71253772d2cb174d0dae6d0b8c9401/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909b30a17e71253772d2cb174d0dae6d0b8c9401/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=909b30a17e71253772d2cb174d0dae6d0b8c9401", "patch": "@@ -4319,6 +4319,10 @@ paranoia: paranoia.o real.o $(LIBIBERTY)\n \n # These exist for maintenance purposes.\n \n+CTAGS=@CTAGS@\n+ETAGS=@ETAGS@\n+CSCOPE=@CSCOPE@\n+\n # Update the tags table.\n TAGS: lang.tags\n \t(cd $(srcdir);\t\t\t\t\t\\\n@@ -4328,14 +4332,14 @@ TAGS: lang.tags\n \t    incs=\"$$incs --include $$dir/TAGS.sub\";\t\\\n \t  fi;\t\t\t\t\t\t\\\n \tdone;\t\t\t\t\t\t\\\n-\tetags -o TAGS.sub c-family/*.h c-family/*.c c-family/*.cc \\\n+\t$(ETAGS) -o TAGS.sub c-family/*.h c-family/*.c c-family/*.cc \\\n \t      *.h *.c *.cc \\\n \t      ../include/*.h ../libiberty/*.c \\\n \t      ../libcpp/*.c ../libcpp/include/*.h \\\n \t      --language=none --regex=\"/\\(char\\|unsigned int\\|int\\|bool\\|void\\|HOST_WIDE_INT\\|enum [A-Za-z_0-9]+\\) [*]?\\([A-Za-z_0-9]+\\)/\\2/\" common.opt\t\\\n \t      --language=none --regex=\"/\\(DEF_RTL_EXPR\\|DEFTREECODE\\|DEFGSCODE\\|DEFTIMEVAR\\|DEFPARAM\\|DEFPARAMENUM5\\)[ ]?(\\([A-Za-z_0-9]+\\)/\\2/\" rtl.def tree.def gimple.def timevar.def \\\n \t\t; \\\n-\tetags --include TAGS.sub $$incs)\n+\t$(ETAGS) --include TAGS.sub $$incs)\n \n # -----------------------------------------------------\n # Rules for generating translated message descriptions."}, {"sha": "c01945b4b9fa355aee77ce66141cd478e5f0d2e7", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909b30a17e71253772d2cb174d0dae6d0b8c9401/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909b30a17e71253772d2cb174d0dae6d0b8c9401/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=909b30a17e71253772d2cb174d0dae6d0b8c9401", "patch": "@@ -805,8 +805,8 @@ ada.srcextra:\n ada.srcman:\n \n ada.tags: force\n-\tcd $(srcdir)/ada && etags -o TAGS.sub *.c *.h *.ads *.adb && \\\n-\tetags --include TAGS.sub --include ../TAGS.sub\n+\tcd $(srcdir)/ada && $(ETAGS) -o TAGS.sub *.c *.h *.ads *.adb && \\\n+\t$(ETAGS) --include TAGS.sub --include ../TAGS.sub\n \n \n # Generate documentation."}, {"sha": "90900963d44065de630e14ae81119269861f3e0b", "filename": "gcc/c/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909b30a17e71253772d2cb174d0dae6d0b8c9401/gcc%2Fc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909b30a17e71253772d2cb174d0dae6d0b8c9401/gcc%2Fc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FMake-lang.in?ref=909b30a17e71253772d2cb174d0dae6d0b8c9401", "patch": "@@ -109,8 +109,8 @@ c.srcinfo:\n c.srcextra: gengtype-lex.c\n \t-cp -p $^ $(srcdir)\n c.tags: force\n-\tcd $(srcdir)/c; etags -o TAGS.sub *.c *.h; \\\n-\tetags --include TAGS.sub --include ../TAGS.sub\n+\tcd $(srcdir)/c; $(ETAGS) -o TAGS.sub *.c *.h; \\\n+\t$(ETAGS) --include TAGS.sub --include ../TAGS.sub\n c.man:\n c.srcman:\n "}, {"sha": "40b5ed9e797f2fc05f4cd8696dd41bc6a92be28e", "filename": "gcc/configure", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909b30a17e71253772d2cb174d0dae6d0b8c9401/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909b30a17e71253772d2cb174d0dae6d0b8c9401/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=909b30a17e71253772d2cb174d0dae6d0b8c9401", "patch": "@@ -714,6 +714,9 @@ gcc_tooldir\n enable_lto\n DO_LINK_SERIALIZATION\n DO_LINK_MUTEX\n+CSCOPE\n+ETAGS\n+CTAGS\n MAINT\n zlibinc\n zlibdir\n@@ -19455,7 +19458,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19458 \"configure\"\n+#line 19461 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -19561,7 +19564,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19564 \"configure\"\n+#line 19567 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -31378,6 +31381,19 @@ else\n   MAINT='#'\n fi\n \n+if test -z \"$CTAGS\"; then\n+  CTAGS=ctags\n+fi\n+\n+if test -z \"$ETAGS\"; then\n+  ETAGS=etags\n+fi\n+\n+if test -z \"$CSCOPE\"; then\n+  CSCOPE=cscope\n+fi\n+\n+\n \n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether to avoid linking multiple front-ends at once\" >&5\n $as_echo_n \"checking whether to avoid linking multiple front-ends at once... \" >&6; }\n@@ -33941,3 +33957,4 @@ $as_echo \"$as_me: WARNING: unrecognized options: $ac_unrecognized_opts\" >&2;}\n fi\n \n \n+_AC_FINALIZE"}, {"sha": "aa2f6d834ed484a4eb81a7c1a4427ae4d1624b0a", "filename": "gcc/configure.ac", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909b30a17e71253772d2cb174d0dae6d0b8c9401/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909b30a17e71253772d2cb174d0dae6d0b8c9401/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=909b30a17e71253772d2cb174d0dae6d0b8c9401", "patch": "@@ -7040,6 +7040,20 @@ else\n fi\n AC_SUBST(MAINT)dnl\n \n+dnl Variables for tags utilities; copied from automake 1.16.4+'s init.m4\n+if test -z \"$CTAGS\"; then\n+  CTAGS=ctags\n+fi\n+AC_SUBST([CTAGS])\n+if test -z \"$ETAGS\"; then\n+  ETAGS=etags\n+fi\n+AC_SUBST([ETAGS])\n+if test -z \"$CSCOPE\"; then\n+  CSCOPE=cscope\n+fi\n+AC_SUBST([CSCOPE])\n+\n dnl Whether to prevent multiple front-ends from linking at the same time\n \n AC_MSG_CHECKING([whether to avoid linking multiple front-ends at once])"}, {"sha": "3dfa9cee6b7a064d7cfdf9f43a196d786b732843", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909b30a17e71253772d2cb174d0dae6d0b8c9401/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909b30a17e71253772d2cb174d0dae6d0b8c9401/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=909b30a17e71253772d2cb174d0dae6d0b8c9401", "patch": "@@ -174,9 +174,9 @@ c++.srcinfo:\n c++.srcextra:\n \n c++.tags: force\n-\tcd $(srcdir)/cp; etags -o TAGS.sub *.c *.cc *.h --language=none \\\n+\tcd $(srcdir)/cp; $(ETAGS) -o TAGS.sub *.c *.cc *.h --language=none \\\n \t  --regex='/DEFTREECODE [(]\\([A-Z_]+\\)/\\1/' cp-tree.def; \\\n-\tetags --include TAGS.sub --include ../TAGS.sub\n+\t$(ETAGS) --include TAGS.sub --include ../TAGS.sub\n \n c++.man: doc/g++.1\n "}, {"sha": "1ed813443b396995e951151cf29c8dad2e881036", "filename": "gcc/d/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909b30a17e71253772d2cb174d0dae6d0b8c9401/gcc%2Fd%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909b30a17e71253772d2cb174d0dae6d0b8c9401/gcc%2Fd%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FMake-lang.in?ref=909b30a17e71253772d2cb174d0dae6d0b8c9401", "patch": "@@ -221,8 +221,8 @@ d.srcextra:\n \n d.tags: force\n \tcd $(srcdir)/d; \\\n-\tetags -o TAGS.sub *.c *.cc *.h dmd/*.c dmd/*.h dmd/root/*.h dmd/root/*.c; \\\n-\tetags --include TAGS.sub --include ../TAGS.sub\n+\t$(ETAGS) -o TAGS.sub *.c *.cc *.h dmd/*.c dmd/*.h dmd/root/*.h dmd/root/*.c; \\\n+\t$(ETAGS) --include TAGS.sub --include ../TAGS.sub\n \n d.man: doc/gdc.1\n d.srcman: doc/gdc.1"}, {"sha": "414f3ebf9d21f98caadca7114524d4bf1d65cfe8", "filename": "gcc/fortran/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909b30a17e71253772d2cb174d0dae6d0b8c9401/gcc%2Ffortran%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909b30a17e71253772d2cb174d0dae6d0b8c9401/gcc%2Ffortran%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FMake-lang.in?ref=909b30a17e71253772d2cb174d0dae6d0b8c9401", "patch": "@@ -113,8 +113,8 @@ fortran.srcinfo: doc/gfortran.info\n \t-cp -p $^ $(srcdir)/fortran\n \n fortran.tags: force\n-\tcd $(srcdir)/fortran; etags -o TAGS.sub *.c *.h; \\\n-\tetags --include TAGS.sub --include ../TAGS.sub\n+\tcd $(srcdir)/fortran; $(ETAGS) -o TAGS.sub *.c *.h; \\\n+\t$(ETAGS) --include TAGS.sub --include ../TAGS.sub\n \n fortran.info: doc/gfortran.info doc/gfc-internals.info\n "}, {"sha": "6fdf55b1802a70dd5e47f508dd6538c20c9d7494", "filename": "gcc/go/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909b30a17e71253772d2cb174d0dae6d0b8c9401/gcc%2Fgo%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909b30a17e71253772d2cb174d0dae6d0b8c9401/gcc%2Fgo%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FMake-lang.in?ref=909b30a17e71253772d2cb174d0dae6d0b8c9401", "patch": "@@ -133,8 +133,8 @@ go.srcinfo: doc/gccgo.info\n go.srcextra:\n go.tags: force\n \tcd $(srcdir)/go; \\\n-\tetags -o TAGS.sub *.c *.h gofrontend/*.h gofrontend/*.cc; \\\n-\tetags --include TAGS.sub --include ../TAGS.sub\n+\t$(ETAGS) -o TAGS.sub *.c *.h gofrontend/*.h gofrontend/*.cc; \\\n+\t$(ETAGS) --include TAGS.sub --include ../TAGS.sub\n go.man: doc/gccgo.1\n go.srcman: doc/gccgo.1\n \t-cp -p $^ $(srcdir)/doc"}, {"sha": "2a948158e0415461c4db18232eec33498589b3ab", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909b30a17e71253772d2cb174d0dae6d0b8c9401/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909b30a17e71253772d2cb174d0dae6d0b8c9401/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=909b30a17e71253772d2cb174d0dae6d0b8c9401", "patch": "@@ -102,8 +102,8 @@ objc.srcman:\n objc.install-plugin:\n \n objc.tags: force\n-\tcd $(srcdir)/objc; etags -o TAGS.sub *.c *.h; \\\n-\tetags --include TAGS.sub --include ../TAGS.sub\n+\tcd $(srcdir)/objc; $(ETAGS) -o TAGS.sub *.c *.h; \\\n+\t$(ETAGS) --include TAGS.sub --include ../TAGS.sub\n \n lang_checks += check-objc\n "}, {"sha": "33f448ada1a4aef2635eb39dc1cb3f6921ec02b7", "filename": "gcc/objcp/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909b30a17e71253772d2cb174d0dae6d0b8c9401/gcc%2Fobjcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909b30a17e71253772d2cb174d0dae6d0b8c9401/gcc%2Fobjcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FMake-lang.in?ref=909b30a17e71253772d2cb174d0dae6d0b8c9401", "patch": "@@ -136,8 +136,8 @@ obj-c++.man:\n obj-c++.install-plugin:\n \n obj-c++.tags: force\n-\tcd $(srcdir)/objcp; etags -o TAGS.sub *.c *.h; \\\n-\tetags --include TAGS.sub --include ../TAGS.sub\n+\tcd $(srcdir)/objcp; $(ETAGS) -o TAGS.sub *.c *.h; \\\n+\t$(ETAGS) --include TAGS.sub --include ../TAGS.sub\n \n lang_checks += check-obj-c++\n "}, {"sha": "409d693c48e8eeb885f5bdd1638e9b88b489baa6", "filename": "intl/Makefile.in", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909b30a17e71253772d2cb174d0dae6d0b8c9401/intl%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909b30a17e71253772d2cb174d0dae6d0b8c9401/intl%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2FMakefile.in?ref=909b30a17e71253772d2cb174d0dae6d0b8c9401", "patch": "@@ -50,6 +50,10 @@ LDFLAGS = @LDFLAGS@\n LIBS = @LIBS@\n DEFS = -DHAVE_CONFIG_H\n \n+CTAGS = @CTAGS@\n+ETAGS = @ETAGS@\n+MKID = @MKID@\n+\n COMPILE = $(CC) -c $(CPPFLAGS) $(CFLAGS) $(DEFS) $(DEFS-$@) $(INCLUDES)\n \n HEADERS = \\\n@@ -176,17 +180,17 @@ localealias.o localcharset.o relocatable.o: relocatable.h\n tags: TAGS\n TAGS: $(HEADERS) $(SOURCES)\n \there=`pwd`; cd $(srcdir) && \\\n-\t\tetags -o $$here/TAGS $(HEADERS) $(SOURCES)\n+\t\t$(ETAGS) -o $$here/TAGS $(HEADERS) $(SOURCES)\n \n ctags: CTAGS\n CTAGS: $(HEADERS) $(SOURCES)\n \there=`pwd`; cd $(srcdir) && \\\n-\t\tctags -o $$here/CTAGS $(HEADERS) $(SOURCES)\n+\t\t$(CTAGS) -o $$here/CTAGS $(HEADERS) $(SOURCES)\n \n id: ID\n ID: $(HEADERS) $(SOURCES)\n \there=`pwd`; cd $(srcdir) && \\\n-\t\tmkid -f$$here/ID $(HEADERS) $(SOURCES)\n+\t\t$(MKID) -f$$here/ID $(HEADERS) $(SOURCES)\n \n mostlyclean:\n \trm -f *.a *.la *.o *.obj *.lo core core.* libintl.h"}, {"sha": "03f40487a92b98bcf62711eb69e38c793264266f", "filename": "intl/configure", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909b30a17e71253772d2cb174d0dae6d0b8c9401/intl%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909b30a17e71253772d2cb174d0dae6d0b8c9401/intl%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2Fconfigure?ref=909b30a17e71253772d2cb174d0dae6d0b8c9401", "patch": "@@ -627,6 +627,9 @@ BISON3_NO\n BISON3_YES\n INCINTL\n LIBINTL_DEP\n+MKID\n+ETAGS\n+CTAGS\n MAINT\n AUTOHEADER\n AUTOCONF\n@@ -6799,6 +6802,19 @@ else\n fi\n \n \n+if test -z \"$CTAGS\"; then\n+  CTAGS=ctags\n+fi\n+\n+if test -z \"$ETAGS\"; then\n+  ETAGS=etags\n+fi\n+\n+if test -z \"$MKID\"; then\n+  MKID=mkid\n+fi\n+\n+\n # Additional info for config.intl.\n \n "}, {"sha": "16a740aa230aa29971893b3a59f7a570299e1a45", "filename": "intl/configure.ac", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909b30a17e71253772d2cb174d0dae6d0b8c9401/intl%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909b30a17e71253772d2cb174d0dae6d0b8c9401/intl%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2Fconfigure.ac?ref=909b30a17e71253772d2cb174d0dae6d0b8c9401", "patch": "@@ -32,6 +32,20 @@ else\n fi\n AC_SUBST(MAINT)\n \n+dnl Variables for tags utilities; based on automake 1.16.4+'s init.m4\n+if test -z \"$CTAGS\"; then\n+  CTAGS=ctags\n+fi\n+AC_SUBST([CTAGS])\n+if test -z \"$ETAGS\"; then\n+  ETAGS=etags\n+fi\n+AC_SUBST([ETAGS])\n+if test -z \"$MKID\"; then\n+  MKID=mkid\n+fi\n+AC_SUBST([MKID])\n+\n # Additional info for config.intl.\n AC_SUBST(LIBINTL_DEP)\n AC_SUBST(INCINTL)"}, {"sha": "6b6554bd321c0ae58b355e537d45da48ea9b20d9", "filename": "libcpp/Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909b30a17e71253772d2cb174d0dae6d0b8c9401/libcpp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909b30a17e71253772d2cb174d0dae6d0b8c9401/libcpp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FMakefile.in?ref=909b30a17e71253772d2cb174d0dae6d0b8c9401", "patch": "@@ -264,11 +264,13 @@ po/$(PACKAGE).pot: $(libcpp_a_SOURCES)\n \tsed 's:$(srcdir)/::g' <po/$(PACKAGE).pot.tmp >po/$(PACKAGE).pot\n \trm po/$(PACKAGE).pot.tmp\n \n+ETAGS = @ETAGS@\n+\n TAGS_SOURCES = $(libcpp_a_SOURCES) internal.h system.h ucnid.h \\\n     include/cpplib.h include/line-map.h include/mkdeps.h include/symtab.h\n \n TAGS: $(TAGS_SOURCES)\n-\tcd $(srcdir) && etags $(TAGS_SOURCES)\n+\tcd $(srcdir) && $(ETAGS) $(TAGS_SOURCES)\n \n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded."}, {"sha": "2797292679fc77099adc93a0f054d332d5cd5b23", "filename": "libcpp/configure", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909b30a17e71253772d2cb174d0dae6d0b8c9401/libcpp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909b30a17e71253772d2cb174d0dae6d0b8c9401/libcpp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure?ref=909b30a17e71253772d2cb174d0dae6d0b8c9401", "patch": "@@ -652,6 +652,7 @@ noexception_flags\n WARN_PEDANTIC\n c_warn\n warn\n+ETAGS\n AUTOHEADER\n AUTOCONF\n ACLOCAL\n@@ -4896,6 +4897,11 @@ done\n test -n \"$AUTOHEADER\" || AUTOHEADER=\"$MISSING autoheader\"\n \n \n+if test -z \"$ETAGS\"; then\n+  ETAGS=etags\n+fi\n+\n+\n # Figure out what compiler warnings we can enable.\n # See config/warnings.m4 for details.\n "}, {"sha": "bc2373c8718268b050a854755c0d6b54e0c3afff", "filename": "libcpp/configure.ac", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909b30a17e71253772d2cb174d0dae6d0b8c9401/libcpp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909b30a17e71253772d2cb174d0dae6d0b8c9401/libcpp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure.ac?ref=909b30a17e71253772d2cb174d0dae6d0b8c9401", "patch": "@@ -22,6 +22,11 @@ AC_CHECK_PROGS([ACLOCAL], [aclocal], [$MISSING aclocal])\n AC_CHECK_PROGS([AUTOCONF], [autoconf], [$MISSING autoconf])\n AC_CHECK_PROGS([AUTOHEADER], [autoheader], [$MISSING autoheader])\n \n+if test -z \"$ETAGS\"; then\n+  ETAGS=etags\n+fi\n+AC_SUBST([ETAGS])\n+\n # Figure out what compiler warnings we can enable.\n # See config/warnings.m4 for details.\n "}, {"sha": "0d41a79cc98153e12adf8b1e2160748d314ade7e", "filename": "libiberty/Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909b30a17e71253772d2cb174d0dae6d0b8c9401/libiberty%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909b30a17e71253772d2cb174d0dae6d0b8c9401/libiberty%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FMakefile.in?ref=909b30a17e71253772d2cb174d0dae6d0b8c9401", "patch": "@@ -429,8 +429,10 @@ stamp-noasandir:\n \n .PHONY: all etags tags TAGS ls clean stage1 stage2\n \n+ETAGS = @ETAGS@\n+\n etags tags TAGS: etags-subdir\n-\tcd $(srcdir) && etags $(CFILES)\n+\tcd $(srcdir) && $(ETAGS) $(CFILES)\n \n # The standalone demangler (c++filt) has been moved to binutils.\n # But make this target work anyway for demangler hacking."}, {"sha": "0a797255c70c00f66a569c98ef2ddaa97d21e9f0", "filename": "libiberty/configure", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909b30a17e71253772d2cb174d0dae6d0b8c9401/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909b30a17e71253772d2cb174d0dae6d0b8c9401/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=909b30a17e71253772d2cb174d0dae6d0b8c9401", "patch": "@@ -659,6 +659,7 @@ HAVE_PERL\n PERL\n BUILD_INFO\n MAKEINFO\n+ETAGS\n NOTMAINT\n MAINT\n libiberty_topdir\n@@ -2558,6 +2559,11 @@ else\n   NOTMAINT=''\n fi\n \n+if test -z \"$ETAGS\"; then\n+  ETAGS=etags\n+fi\n+\n+\n # Do we have a single-tree copy of texinfo?  Even if we do, we can't\n # rely on it - libiberty is built before texinfo.\n # Extract the first word of \"makeinfo\", so it can be a program name with args."}, {"sha": "84a7b378fad9d082951d79055a5dd2c435015b37", "filename": "libiberty/configure.ac", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909b30a17e71253772d2cb174d0dae6d0b8c9401/libiberty%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909b30a17e71253772d2cb174d0dae6d0b8c9401/libiberty%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.ac?ref=909b30a17e71253772d2cb174d0dae6d0b8c9401", "patch": "@@ -61,6 +61,11 @@ fi\n AC_SUBST(MAINT)dnl\n AC_SUBST(NOTMAINT)dnl\n \n+if test -z \"$ETAGS\"; then\n+  ETAGS=etags\n+fi\n+AC_SUBST([ETAGS])\n+\n # Do we have a single-tree copy of texinfo?  Even if we do, we can't\n # rely on it - libiberty is built before texinfo.\n AC_CHECK_PROG(MAKEINFO, makeinfo, makeinfo, )"}]}