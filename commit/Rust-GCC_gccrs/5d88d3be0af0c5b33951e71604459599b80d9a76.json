{"sha": "5d88d3be0af0c5b33951e71604459599b80d9a76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ4OGQzYmUwYWYwYzViMzM5NTFlNzE2MDQ0NTk1OTliODBkOWE3Ng==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-12-22T17:49:52Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-12-22T17:49:52Z"}, "message": "re PR target/34571 (Segfault in alpha_expand_mov at -O3)\n\n\t* config/alpha/alpha.h (ASM_OUTPUT_EXTERNAL): New macro.\n\n\tPR target/34571\n\t* config/alpha/predicates.md (symbolic_operand): Return 1 for a\n\tlabel_ref with an offset.\n\nFrom-SVN: r142885", "tree": {"sha": "6abd675d0b8e0b004260ad364566e5940695d4e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6abd675d0b8e0b004260ad364566e5940695d4e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d88d3be0af0c5b33951e71604459599b80d9a76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d88d3be0af0c5b33951e71604459599b80d9a76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d88d3be0af0c5b33951e71604459599b80d9a76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d88d3be0af0c5b33951e71604459599b80d9a76/comments", "author": null, "committer": null, "parents": [{"sha": "82192170e3576ba627a8592079ac0bc4b4d465db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82192170e3576ba627a8592079ac0bc4b4d465db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82192170e3576ba627a8592079ac0bc4b4d465db"}], "stats": {"total": 33, "additions": 26, "deletions": 7}, "files": [{"sha": "2ab58529a5a21c0c3b70502b5b9142358d1b9e99", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d88d3be0af0c5b33951e71604459599b80d9a76/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d88d3be0af0c5b33951e71604459599b80d9a76/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d88d3be0af0c5b33951e71604459599b80d9a76", "patch": "@@ -1,3 +1,11 @@\n+2008-12-22  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/alpha/alpha.h (ASM_OUTPUT_EXTERNAL): New macro.\n+\n+\tPR target/34571\n+\t* config/alpha/predicates.md (symbolic_operand): Return 1 for a\n+\tlabel_ref with an offset.\n+\n 2008-12-21  Andrew Pinski  <pinskia@gmail.com>\n \n \tPR target/38300\n@@ -99,8 +107,8 @@\n \t(df_scan_start_dump, df_get_call_refs, df_hard_reg_init): Rename\n \tdf_invalidated_by_call to invalidated_by_call_regset.\n \t* df.h (df_invalidated_by_call): Remove.\n-\t* regclass.c (regs_invalidated_by_call_regset, persistent_obstack): New\n-\tvariables.\n+\t* regclass.c (regs_invalidated_by_call_regset, persistent_obstack):\n+\tNew variables.\n \t(init_reg_sets_1): Initialize regs_invalidated_by_call_regset.\n \t(globalize_reg): Likewise.\n \t* df-problems.c (df_rd_local_compute, df_lr_confluence_n,\n@@ -116,8 +124,8 @@\n 2008-12-18  Jan Hubicka  <jh@suse.cz>\n \t    Kai Tietz <kai.tietz@onevision.com>\n \n-\t* i386.h (CONDITIONAL_REGISTER_USAGE): Initialize for current function\n-\tABI.\n+\t* i386.h (CONDITIONAL_REGISTER_USAGE): Initialize for current\n+\tfunction ABI.\n \t* i386.c (ix86_call_abi_override): Do not trigger target re-init and\n \tdo not try to modify call used regs.\n \t(ix86_maybe_switch_abi): New function."}, {"sha": "6588f7509f810b4a51de5c50bec680a21bbdcc5e", "filename": "gcc/config/alpha/elf.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d88d3be0af0c5b33951e71604459599b80d9a76/gcc%2Fconfig%2Falpha%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d88d3be0af0c5b33951e71604459599b80d9a76/gcc%2Fconfig%2Falpha%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Felf.h?ref=5d88d3be0af0c5b33951e71604459599b80d9a76", "patch": "@@ -423,3 +423,13 @@ extern int alpha_this_gpdisp_sequence_number;\n #if defined(HAVE_LD_EH_FRAME_HDR)\n #define LINK_EH_SPEC \"%{!static:--eh-frame-hdr} \"\n #endif\n+\n+/* A C statement (sans semicolon) to output to the stdio stream STREAM\n+   any text necessary for declaring the name of an external symbol\n+   named NAME which is referenced in this compilation but not defined.\n+   It is needed to properly support non-default visibility.  */\n+\n+#ifndef ASM_OUTPUT_EXTERNAL\n+#define ASM_OUTPUT_EXTERNAL(FILE, DECL, NAME) \\\n+  default_elf_asm_output_external (FILE, DECL, NAME)\n+#endif"}, {"sha": "4aa06f4c33a032fd3ce573e22ba25a08914dadd5", "filename": "gcc/config/alpha/predicates.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d88d3be0af0c5b33951e71604459599b80d9a76/gcc%2Fconfig%2Falpha%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d88d3be0af0c5b33951e71604459599b80d9a76/gcc%2Fconfig%2Falpha%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fpredicates.md?ref=5d88d3be0af0c5b33951e71604459599b80d9a76", "patch": "@@ -390,7 +390,8 @@\n   (ior (match_code \"symbol_ref,label_ref\")\n        (and (match_code \"const\")\n \t    (match_test \"GET_CODE (XEXP (op,0)) == PLUS\n-\t\t\t && GET_CODE (XEXP (XEXP (op,0), 0)) == SYMBOL_REF\n+\t\t\t && (GET_CODE (XEXP (XEXP (op,0), 0)) == SYMBOL_REF\n+\t\t\t     || GET_CODE (XEXP (XEXP (op,0), 0)) == LABEL_REF)\n \t\t\t && GET_CODE (XEXP (XEXP (op,0), 1)) == CONST_INT\"))))\n \n ;; Return true if OP is valid for 16-bit DTP relative relocations."}, {"sha": "7fed67d297022fd6aa52bd714d05445db43c7085", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d88d3be0af0c5b33951e71604459599b80d9a76/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d88d3be0af0c5b33951e71604459599b80d9a76/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5d88d3be0af0c5b33951e71604459599b80d9a76", "patch": "@@ -393,8 +393,8 @@\n 2008-12-18  Daniel Kraft  <d@domob.eu>\n \n \tPR fortran/31822\n-\t* gfortran.dg/char_pointer_assign_2.f90: Updated expected error message\n-\tto be more detailed.\n+\t* gfortran.dg/char_pointer_assign_2.f90: Updated expected error\n+\tmessage to be more detailed.\n \t* gfortran.dg/char_pointer_assign_4.f90: New test.\n \t* gfortran.dg/char_pointer_assign_5.f90: New test.\n "}]}