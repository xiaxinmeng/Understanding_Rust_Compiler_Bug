{"sha": "c8634a1a24d9c2d8089b72d90af34d43d22010ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg2MzRhMWEyNGQ5YzJkODA4OWI3MmQ5MGFmMzRkNDNkMjIwMTBmZg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-05-11T14:51:07Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-05-11T14:51:07Z"}, "message": "name-lookup.c (pushdecl_outermost_localscope): Always conditionally stop timer.\n\n\t* name-lookup.c (pushdecl_outermost_localscope): Always\n\tconditionally stop timer.\n\nFrom-SVN: r247910", "tree": {"sha": "a3b41dbfebd130355f8f5c9f6009be9cc797f169", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3b41dbfebd130355f8f5c9f6009be9cc797f169"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8634a1a24d9c2d8089b72d90af34d43d22010ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8634a1a24d9c2d8089b72d90af34d43d22010ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8634a1a24d9c2d8089b72d90af34d43d22010ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8634a1a24d9c2d8089b72d90af34d43d22010ff/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c443f3d51e4b8ff0298d1cacff67b2632e8a9264", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c443f3d51e4b8ff0298d1cacff67b2632e8a9264", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c443f3d51e4b8ff0298d1cacff67b2632e8a9264"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "78269de072f3d6c2e9ff6d197027b9a1a11ae1c6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8634a1a24d9c2d8089b72d90af34d43d22010ff/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8634a1a24d9c2d8089b72d90af34d43d22010ff/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c8634a1a24d9c2d8089b72d90af34d43d22010ff", "patch": "@@ -1,5 +1,8 @@\n 2017-05-11  Nathan Sidwell  <nathan@acm.org>\n \n+\t* name-lookup.c (pushdecl_outermost_localscope): Always\n+\tconditionally stop timer.\n+\n \t* decl.c (xref_tag_1): Don't frob ts_lambda scope here.\n \t* name-lookup.c (pushtag_1): Deal with ts_lambda scope.\n "}, {"sha": "b5a60e34005904d3ebdc882a0775de7981ca16e7", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8634a1a24d9c2d8089b72d90af34d43d22010ff/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8634a1a24d9c2d8089b72d90af34d43d22010ff/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=c8634a1a24d9c2d8089b72d90af34d43d22010ff", "patch": "@@ -2874,19 +2874,17 @@ pushdecl_with_scope_1 (tree x, cp_binding_level *level, bool is_friend)\n tree\n pushdecl_outermost_localscope (tree x)\n {\n+  cp_binding_level *b = NULL;\n   bool subtime = timevar_cond_start (TV_NAME_LOOKUP);\n-  cp_binding_level *b  = NULL, *n = current_binding_level;\n \n-  if (n->kind == sk_function_parms)\n-    return error_mark_node;\n-  do\n-    {\n-      b = n;\n-      n = b->level_chain;\n-    }\n-  while (n->kind != sk_function_parms);\n-  tree ret = pushdecl_with_scope_1 (x, b, false);\n+  /* Find the scope just inside the function parms.  */\n+  for (cp_binding_level *n = current_binding_level;\n+       n->kind != sk_function_parms; n = b->level_chain)\n+    b = n;\n+\n+  tree ret = b ? pushdecl_with_scope_1 (x, b, false) : error_mark_node;\n   timevar_cond_stop (TV_NAME_LOOKUP, subtime);\n+\n   return ret;\n }\n "}]}