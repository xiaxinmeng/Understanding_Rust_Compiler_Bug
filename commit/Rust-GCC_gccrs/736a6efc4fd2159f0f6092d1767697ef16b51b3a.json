{"sha": "736a6efc4fd2159f0f6092d1767697ef16b51b3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM2YTZlZmM0ZmQyMTU5ZjBmNjA5MmQxNzY3Njk3ZWYxNmI1MWIzYQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2019-09-25T19:32:44Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2019-09-25T19:32:44Z"}, "message": "Colorize %L and %C text to match diagnostic_show_locus (PR fortran/91426)\n\ngcc/fortran/ChangeLog:\n\tPR fortran/91426\n\t* error.c (curr_diagnostic): New static variable.\n\t(gfc_report_diagnostic): New static function.\n\t(gfc_warning): Replace call to diagnostic_report_diagnostic with\n\tcall to gfc_report_diagnostic.\n\t(gfc_format_decoder): Colorize the text of %L and %C to match the\n\tcolorization used by diagnostic_show_locus.\n\t(gfc_warning_now_at): Replace call to diagnostic_report_diagnostic with\n\tcall to gfc_report_diagnostic.\n\t(gfc_warning_now): Likewise.\n\t(gfc_warning_internal): Likewise.\n\t(gfc_error_now): Likewise.\n\t(gfc_fatal_error): Likewise.\n\t(gfc_error_opt): Likewise.\n\t(gfc_internal_error): Likewise.\n\nFrom-SVN: r276132", "tree": {"sha": "9c982d5d3ca7868104c59fbad0c96cbeb8e422df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c982d5d3ca7868104c59fbad0c96cbeb8e422df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/736a6efc4fd2159f0f6092d1767697ef16b51b3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/736a6efc4fd2159f0f6092d1767697ef16b51b3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/736a6efc4fd2159f0f6092d1767697ef16b51b3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/736a6efc4fd2159f0f6092d1767697ef16b51b3a/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b867051636ee21523b993484a0fa2fe915c25b21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b867051636ee21523b993484a0fa2fe915c25b21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b867051636ee21523b993484a0fa2fe915c25b21"}], "stats": {"total": 62, "additions": 54, "deletions": 8}, "files": [{"sha": "d4946bd2bb04c68eaa678017a9551cb46581ef2a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/736a6efc4fd2159f0f6092d1767697ef16b51b3a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/736a6efc4fd2159f0f6092d1767697ef16b51b3a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=736a6efc4fd2159f0f6092d1767697ef16b51b3a", "patch": "@@ -1,3 +1,21 @@\n+2019-09-25  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR fortran/91426\n+\t* error.c (curr_diagnostic): New static variable.\n+\t(gfc_report_diagnostic): New static function.\n+\t(gfc_warning): Replace call to diagnostic_report_diagnostic with\n+\tcall to gfc_report_diagnostic.\n+\t(gfc_format_decoder): Colorize the text of %L and %C to match the\n+\tcolorization used by diagnostic_show_locus.\n+\t(gfc_warning_now_at): Replace call to diagnostic_report_diagnostic with\n+\tcall to gfc_report_diagnostic.\n+\t(gfc_warning_now): Likewise.\n+\t(gfc_warning_internal): Likewise.\n+\t(gfc_error_now): Likewise.\n+\t(gfc_fatal_error): Likewise.\n+\t(gfc_error_opt): Likewise.\n+\t(gfc_internal_error): Likewise.\n+\n 2019-09-23  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/91729"}, {"sha": "a0ce7a6b19083f7ffc4279d4dfe381214f500677", "filename": "gcc/fortran/error.c", "status": "modified", "additions": 36, "deletions": 8, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/736a6efc4fd2159f0f6092d1767697ef16b51b3a/gcc%2Ffortran%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/736a6efc4fd2159f0f6092d1767697ef16b51b3a/gcc%2Ffortran%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ferror.c?ref=736a6efc4fd2159f0f6092d1767697ef16b51b3a", "patch": "@@ -760,6 +760,23 @@ gfc_clear_pp_buffer (output_buffer *this_buffer)\n   global_dc->last_location = UNKNOWN_LOCATION;\n }\n \n+/* The currently-printing diagnostic, for use by gfc_format_decoder,\n+   for colorizing %C and %L.  */\n+\n+static diagnostic_info *curr_diagnostic;\n+\n+/* A helper function to call diagnostic_report_diagnostic, while setting\n+   curr_diagnostic for the duration of the call.  */\n+\n+static bool\n+gfc_report_diagnostic (diagnostic_info *diagnostic)\n+{\n+  gcc_assert (diagnostic != NULL);\n+  curr_diagnostic = diagnostic;\n+  bool ret = diagnostic_report_diagnostic (global_dc, diagnostic);\n+  curr_diagnostic = NULL;\n+  return ret;\n+}\n \n /* This is just a helper function to avoid duplicating the logic of\n    gfc_warning.  */\n@@ -789,7 +806,7 @@ gfc_warning (int opt, const char *gmsgid, va_list ap)\n   diagnostic_set_info (&diagnostic, gmsgid, &argp, &rich_loc,\n \t\t       DK_WARNING);\n   diagnostic.option_index = opt;\n-  bool ret = diagnostic_report_diagnostic (global_dc, &diagnostic);\n+  bool ret = gfc_report_diagnostic (&diagnostic);\n \n   if (buffered_p)\n     {\n@@ -954,7 +971,18 @@ gfc_format_decoder (pretty_printer *pp, text_info *text, const char *spec,\n \t\t\t\t\t\t loc->lb->location,\n \t\t\t\t\t\t offset);\n \ttext->set_location (loc_num, src_loc, SHOW_RANGE_WITH_CARET);\n+\t/* Colorize the markers to match the color choices of\n+\t   diagnostic_show_locus (the initial location has a color given\n+\t   by the \"kind\" of the diagnostic, the secondary location has\n+\t   color \"range1\").  */\n+\tgcc_assert (curr_diagnostic != NULL);\n+\tconst char *color\n+\t  = (loc_num\n+\t     ? \"range1\"\n+\t     : diagnostic_get_color_for_kind (curr_diagnostic->kind));\n+\tpp_string (pp, colorize_start (pp_show_color (pp), color));\n \tpp_string (pp, result[loc_num]);\n+\tpp_string (pp, colorize_stop (pp_show_color (pp)));\n \treturn true;\n       }\n     default:\n@@ -1153,7 +1181,7 @@ gfc_warning_now_at (location_t loc, int opt, const char *gmsgid, ...)\n   va_start (argp, gmsgid);\n   diagnostic_set_info (&diagnostic, gmsgid, &argp, &rich_loc, DK_WARNING);\n   diagnostic.option_index = opt;\n-  ret = diagnostic_report_diagnostic (global_dc, &diagnostic);\n+  ret = gfc_report_diagnostic (&diagnostic);\n   va_end (argp);\n   return ret;\n }\n@@ -1172,7 +1200,7 @@ gfc_warning_now (int opt, const char *gmsgid, ...)\n   diagnostic_set_info (&diagnostic, gmsgid, &argp, &rich_loc,\n \t\t       DK_WARNING);\n   diagnostic.option_index = opt;\n-  ret = diagnostic_report_diagnostic (global_dc, &diagnostic);\n+  ret = gfc_report_diagnostic (&diagnostic);\n   va_end (argp);\n   return ret;\n }\n@@ -1191,7 +1219,7 @@ gfc_warning_internal (int opt, const char *gmsgid, ...)\n   diagnostic_set_info (&diagnostic, gmsgid, &argp, &rich_loc,\n \t\t       DK_WARNING);\n   diagnostic.option_index = opt;\n-  ret = diagnostic_report_diagnostic (global_dc, &diagnostic);\n+  ret = gfc_report_diagnostic (&diagnostic);\n   va_end (argp);\n   return ret;\n }\n@@ -1209,7 +1237,7 @@ gfc_error_now (const char *gmsgid, ...)\n \n   va_start (argp, gmsgid);\n   diagnostic_set_info (&diagnostic, gmsgid, &argp, &rich_loc, DK_ERROR);\n-  diagnostic_report_diagnostic (global_dc, &diagnostic);\n+  gfc_report_diagnostic (&diagnostic);\n   va_end (argp);\n }\n \n@@ -1225,7 +1253,7 @@ gfc_fatal_error (const char *gmsgid, ...)\n \n   va_start (argp, gmsgid);\n   diagnostic_set_info (&diagnostic, gmsgid, &argp, &rich_loc, DK_FATAL);\n-  diagnostic_report_diagnostic (global_dc, &diagnostic);\n+  gfc_report_diagnostic (&diagnostic);\n   va_end (argp);\n \n   gcc_unreachable ();\n@@ -1310,7 +1338,7 @@ gfc_error_opt (int opt, const char *gmsgid, va_list ap)\n     }\n \n   diagnostic_set_info (&diagnostic, gmsgid, &argp, &richloc, DK_ERROR);\n-  diagnostic_report_diagnostic (global_dc, &diagnostic);\n+  gfc_report_diagnostic (&diagnostic);\n \n   if (buffered_p)\n     {\n@@ -1360,7 +1388,7 @@ gfc_internal_error (const char *gmsgid, ...)\n \n   va_start (argp, gmsgid);\n   diagnostic_set_info (&diagnostic, gmsgid, &argp, &rich_loc, DK_ICE);\n-  diagnostic_report_diagnostic (global_dc, &diagnostic);\n+  gfc_report_diagnostic (&diagnostic);\n   va_end (argp);\n \n   gcc_unreachable ();"}]}