{"sha": "26eaa5a5ebc6b22c7b9abd2ec78fc1428077df7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZlYWE1YTVlYmM2YjIyYzdiOWFiZDJlYzc4ZmMxNDI4MDc3ZGY3Yw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-11-03T17:25:24Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-11-03T17:25:24Z"}, "message": "Remove superfluous gcc/ prefixes\n\nFrom-SVN: r229715", "tree": {"sha": "14835899e2d2057fd8a18644aee98219bf7fefc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14835899e2d2057fd8a18644aee98219bf7fefc0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26eaa5a5ebc6b22c7b9abd2ec78fc1428077df7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26eaa5a5ebc6b22c7b9abd2ec78fc1428077df7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26eaa5a5ebc6b22c7b9abd2ec78fc1428077df7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26eaa5a5ebc6b22c7b9abd2ec78fc1428077df7c/comments", "author": null, "committer": null, "parents": [{"sha": "5993d1c9a36c7b029e9ddea35f71d848d822babc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5993d1c9a36c7b029e9ddea35f71d848d822babc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5993d1c9a36c7b029e9ddea35f71d848d822babc"}], "stats": {"total": 74, "additions": 37, "deletions": 37}, "files": [{"sha": "38e21a3b1fb75c9592b6b71fda5d443271b45bc6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 37, "deletions": 37, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26eaa5a5ebc6b22c7b9abd2ec78fc1428077df7c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26eaa5a5ebc6b22c7b9abd2ec78fc1428077df7c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=26eaa5a5ebc6b22c7b9abd2ec78fc1428077df7c", "patch": "@@ -2717,7 +2717,7 @@\n \t* target.def (get_mask_mode): New.\n \t* targhooks.c (default_get_mask_mode): New.\n \t* targhooks.h (default_get_mask_mode): New.\n-\t* gcc/tree-vect-stmts.c (get_same_sized_vectype): Add special case\n+\t* tree-vect-stmts.c (get_same_sized_vectype): Add special case\n \tfor boolean vector.\n \t* tree.c (MAX_BOOL_CACHED_PREC): New.\n \t(nonstandard_boolean_type_cache): New.\n@@ -3239,10 +3239,10 @@\n \tNew hook.\n \t* doc/tm.texi.in (TARGET_RELAYOUT_FUNCTION): Document.\n \t* doc/tm.texi (TARGET_RELAYOUT_FUNCTION): New hook.\n-\t* gcc/target.def (TARGET_RELAYOUT_FUNCTION): Likewise.\n-\t* gcc/function.c (allocate_struct_function): Call\n+\t* target.def (TARGET_RELAYOUT_FUNCTION): Likewise.\n+\t* function.c (allocate_struct_function): Call\n \trelayout_function hook.\n-\t* gcc/passes.c (rest_of_decl_compilation): Likewise.\n+\t* passes.c (rest_of_decl_compilation): Likewise.\n \n 2015-10-16  Christian Bruel  <christian.bruel@st.com>\n \n@@ -3877,7 +3877,7 @@\n \n 2015-10-13  Nikolai Bozhenov  <n.bozhenov@samsung.com>\n \n-\t* gcc/rtl.h (print_insn): Fix prototype.\n+\t* rtl.h (print_insn): Fix prototype.\n \n 2015-10-13  Tom de Vries  <tom@codesourcery.com>\n \n@@ -4084,7 +4084,7 @@\n 2015-10-11  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR rtl-optimization/67864\n-\t* gcc/bb-reorder (reorder_basic_blocks_simple): Prefer existing\n+\t* bb-reorder (reorder_basic_blocks_simple): Prefer existing\n \tfallthrough edges for conditional jumps.  Don't sort candidate\n \tedges if not optimizing for speed.\n \n@@ -4913,7 +4913,7 @@\n \t* config/i386/sse.md (set_attr znver1_decode): Likewise.\n \t* config/i386/x86-tune.def:  Add znver1 tunings.\n \t* config/i386/znver1.md: Introduce znver1 cpu and include new md file.\n-\t* gcc/doc/invoke.texi: Add details about znver1\n+\t* doc/invoke.texi: Add details about znver1\n \n 2015-10-06  Richard Biener  <rguenther@suse.de>\n \n@@ -6805,14 +6805,14 @@\n \n 2015-09-22  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n-\t* gcc/config/i386/i386.md (define_insn \"kunpckhi\"): Fix\n+\t* config/i386/i386.md (define_insn \"kunpckhi\"): Fix\n \toperand in pattern.\n \t(define_insn \"kunpcksi\"): Ditto.\n \t(define_insn \"kunpckdi\"): Ditto.\n \n 2015-09-22  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n-\t* gcc/config/i386/i386.md (define_split not/xor SWI1248x): Use\n+\t* config/i386/i386.md (define_split not/xor SWI1248x): Use\n \titerator instead of fixed modes.\n \n 2015-09-22  Matthew Wahab  <matthew.wahab@arm.com>\n@@ -7647,7 +7647,7 @@\n \t(TARGET_ARM_SAT, TARGET_IDIV, TARGET_HAVE_LDREX)\n \t(TARGET_HAVE_LDREXBH, TARGET_HAVE_LDREXD, TARGET_ARM_FEATURE_LDREX)\n \t(TARGET_DSP_MULTIPLY, TARGET_INT_SIMD): Redefined macros.\n-\t* gcc/config/arm/arm-protos.h (arm_cpu_builtins): Remove declaration.\n+\t* config/arm/arm-protos.h (arm_cpu_builtins): Remove declaration.\n \n 2015-09-15  Alan Lawrence  <alan.lawrence@arm.com>\n \n@@ -8870,7 +8870,7 @@\n \t* config/mips/mips-opts.h (mips_cb_setting): New enum.\n \t* config/mips/mips-protos.h: Add definitions for\n \tmips_output_jump and mips_output_equal_conditional_branch\n-\t* gcc/config/mips/mips.c (MIPS_JR): Change to support the\n+\t* config/mips/mips.c (MIPS_JR): Change to support the\n \tJIC instruction.\n \t(mips_emit_compare): Add support for the MIPS R6 conditional\n \tcompact branches.\n@@ -8895,7 +8895,7 @@\n \t(mips_trampoline_init): Add compact branch support.\n \t(mips_mult_zero_zero_cost): Allow zero initialisation of\n \taccumulators with TARGET_DSP.\n-\t* gcc/config/mips/mips.h (TARGET_CB_NEVER): New define.\n+\t* config/mips/mips.h (TARGET_CB_NEVER): New define.\n \t(TARGET_CB_MAYBE): New define.\n \t(TARGET_CB_ALWAYS): New define.\n \t(ISA_HAS_DELAY_SLOTS): New define.\n@@ -9640,9 +9640,9 @@\n \n 2015-08-26  Matthew Wahab  <matthew.wahab@arm.com>\n \n-\t* gcc/config/arm/arm-cores.def: Add FL_FOR_ARCH flag for each\n+\t* config/arm/arm-cores.def: Add FL_FOR_ARCH flag for each\n \tARM_CORE entry.  Fix some white-space.\n-\t* gcc/config/arm/arm.c: Remove FL_FOR_ARCH derivation from\n+\t* config/arm/arm.c: Remove FL_FOR_ARCH derivation from\n \tARM_CORE definition.\n \n 2015-08-26  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n@@ -11128,7 +11128,7 @@\n 2015-08-05  Lynn Boger  <laboger@linux.vnet.ibm.com>\n \n \tPR target/66870\n-\t* gcc/config/rs6000/rs6000.c (rs6000_emit_prologue): Check\n+\t* config/rs6000/rs6000.c (rs6000_emit_prologue): Check\n \tfor no_split_stack function attribute along with\n \tflag_split_stack.\n \t(rs6000_expand_split_stack_prologue): Likewise.\n@@ -11759,7 +11759,7 @@\n 2015-08-01  Michael Collison  <michael.collison@linaro.org\n \t    Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n \n-\t* gcc/config/arm/arm.md (*arm_smin_cmp): New pattern.\n+\t* config/arm/arm.md (*arm_smin_cmp): New pattern.\n \t(*arm_umin_cmp): Likewise.\n \n 2015-08-01  Caroline Tice  <cmtice@google.com>\n@@ -12670,7 +12670,7 @@\n \n 2015-07-27  Wilco Dijkstra  <wdijkstr@arm.com>\n \n-\t* gcc/config/aarch64/aarch64.md (aarch64_lshr_sisd_or_int_<mode>3):\n+\t* config/aarch64/aarch64.md (aarch64_lshr_sisd_or_int_<mode>3):\n \tPlace integer variant first.\n \t(aarch64_ashr_sisd_or_int_<mode>3): Likewise.\n \n@@ -19159,7 +19159,7 @@\n \t* config/aarch64/aarch64-arches.def: Add \"armv8.1-a\".\n \t* config/aarch64/aarch64-options-extensions.def: Update \"fP\",\n \t\"simd\" and \"crypto\".  Add \"lse\", \"pan\", \"lor\" and \"rdma\".\n-\t* gcc/config/aarch64/aarch64.h (AARCH64_FL_LSE): New.\n+\t* config/aarch64/aarch64.h (AARCH64_FL_LSE): New.\n \t(AARCH64_FL_PAN): New.\n \t(AARCH64_FL_LOR): New.\n \t(AARCH64_FL_RDMA): New.\n@@ -21828,9 +21828,9 @@\n \n 2015-06-01  James Greenhalgh  <james.greenhalgh@arm.com>\n \n-\t* gcc/config/arm/arm-protos.h (tune_params): Rename fuseable_ops\n+\t* config/arm/arm-protos.h (tune_params): Rename fuseable_ops\n \tto fusible_ops.\n-\t* gcc/config/arm/arm.c (arm_print_tune_info): Likewise.\n+\t* config/arm/arm.c (arm_print_tune_info): Likewise.\n \t(arm_macro_fusion_p): Likewise.\n \t(arm_macro_fusion_pair_p): Likewise.\n \n@@ -21911,7 +21911,7 @@\n \n 2015-05-30  Mike Frysinger  <vapier@gentoo.org>\n \n-\t* gcc/config/alpha/elf.h (ASM_SPEC): Add %{mcpu=*:-m%*}.\n+\t* config/alpha/elf.h (ASM_SPEC): Add %{mcpu=*:-m%*}.\n \n 2015-05-28  DJ Delorie  <dj@redhat.com>\n \n@@ -22116,7 +22116,7 @@\n \tFPIE2_OR_FPIC2_SPEC.\n \t* config/m68k/netbsd-elf.h (ASM_SPEC): Likewise.\n \t* config/m68k/openbsd.h (ASM_SPEC): Likewise.\n-\t* gcc/config/sol2.h (ASM_PIC_SPEC): Likewise.\n+\t* config/sol2.h (ASM_PIC_SPEC): Likewise.\n \t* config/arm/freebsd.h (SUBTARGET_EXTRA_ASM_SPEC): Likewise.\n \t* config/arm/netbsd-elf.h (SUBTARGET_EXTRA_ASM_SPEC): Likewise.\n \t* config/arm/semi.h (SUBTARGET_EXTRA_ASM_SPEC): Likewise.\n@@ -23191,7 +23191,7 @@\n \t* common/config/rs6000/rs6000-common.c (TARGET_SUPPORTS_SPLIT_STACK):\n \tDefine.\n \t(rs6000_supports_split_stack): New function.\n-\t* gcc/config/rs6000/rs6000.c (machine_function): Add\n+\t* config/rs6000/rs6000.c (machine_function): Add\n \tsplit_stack_arg_pointer.\n \t(TARGET_EXTRA_LIVE_ON_ENTRY, TARGET_INTERNAL_ARG_POINTER): Define.\n \t(setup_incoming_varargs): Use crtl->args.internal_arg_pointer\n@@ -23204,12 +23204,12 @@\n \trs6000_internal_arg_pointer, rs6000_live_on_entry,\n \trs6000_split_stack_space_check): New functions.\n \t(rs6000_elf_file_end): Call file_end_indicate_split_stack.\n-\t* gcc/config/rs6000/rs6000.md (UNSPEC_STACK_CHECK): Define.\n+\t* config/rs6000/rs6000.md (UNSPEC_STACK_CHECK): Define.\n \t(UNSPECV_SPLIT_STACK_RETURN): Define.\n \t(split_stack_prologue, load_split_stack_limit,\n \tload_split_stack_limit_di, load_split_stack_limit_si,\n \tsplit_stack_return, split_stack_space_check): New expands and insns.\n-\t* gcc/config/rs6000/rs6000-protos.h\n+\t* config/rs6000/rs6000-protos.h\n \t(rs6000_expand_split_stack_prologue): Declare.\n \t(rs6000_split_stack_space_check): Declare.\n \n@@ -25317,17 +25317,17 @@\n \n 2015-05-05  Matthew Wahab  <matthew.wahab@arm.com>\n \n-\t* gcc/config/aarch64-protos.h (struct cpu_branch_cost): New.\n+\t* config/aarch64-protos.h (struct cpu_branch_cost): New.\n \t(tune_params): Add field branch_costs.\n \t(aarch64_branch_cost): Declare.\n-\t* gcc/config/aarch64.c (generic_branch_cost): New.\n+\t* config/aarch64.c (generic_branch_cost): New.\n \t(generic_tunings): Set field cpu_branch_cost to generic_branch_cost.\n \t(cortexa53_tunings): Likewise.\n \t(cortexa57_tunings): Likewise.\n \t(thunderx_tunings): Likewise.\n \t(xgene1_tunings): Likewise.\n \t(aarch64_branch_cost): Define.\n-\t* gcc/config/aarch64/aarch64.h (BRANCH_COST): Redefine.\n+\t* config/aarch64/aarch64.h (BRANCH_COST): Redefine.\n \n 2015-05-05  Uros Bizjak  <ubizjak@gmail.com>\n \n@@ -25636,9 +25636,9 @@\n \n 2015-05-01  Wilco Dijkstra  <wdijkstr@arm.com>\n \n-\t* gcc/config/aarch64/aarch64-protos.h (tune_params):\n+\t* config/aarch64/aarch64-protos.h (tune_params):\n \tAdd min_div_recip_mul_sf and min_div_recip_mul_df fields.\n-\t* gcc/config/aarch64/aarch64.c (aarch64_min_divisions_for_recip_mul):\n+\t* config/aarch64/aarch64.c (aarch64_min_divisions_for_recip_mul):\n \tReturn value depending on target.\n \t(generic_tunings): Initialize new target settings.\n \t(cortexa53_tunings): Likewise.\n@@ -25648,7 +25648,7 @@\n \n 2015-05-01  Wilco Dijkstra  <wdijkstr@arm.com>\n \n-\t* gcc/config/arm/aarch-cost-tables.h (cortexa53_extra_costs):\n+\t* config/arm/aarch-cost-tables.h (cortexa53_extra_costs):\n \tMake Cortex-A53 shift costs more accurate.\n \n 2015-05-01  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n@@ -25658,7 +25658,7 @@\n \n 2015-05-01  Wilco Dijkstra  <wdijkstr@arm.com>\n \n-\t* gcc/config/aarch64/aarch64.c (aarch64_rtx_costs):\n+\t* config/aarch64/aarch64.c (aarch64_rtx_costs):\n \tCalculate cost of op0 and op1 in PLUS and MINUS cases.\n \n 2015-05-01  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n@@ -30166,8 +30166,8 @@\n 2015-03-02  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \tPR target/65184\n-\t* gcc/config/i386/i386.c (ix86_pass_by_reference) Bounds\n-\tare never passed by reference.\n+\t* config/i386/i386.c (ix86_pass_by_reference): Bounds are never\n+\tpassed by reference.\n \n 2015-03-02  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n@@ -30571,7 +30571,7 @@\n 2015-02-25  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \tPR target/65167\n-\t* gcc/config/i386/i386.c (ix86_function_arg_regno_p): Support\n+\t* config/i386/i386.c (ix86_function_arg_regno_p): Support\n \tbounds registers.\n \t(avoid_func_arg_motion): Add dependencies for BNDSTX insns.\n \n@@ -34330,7 +34330,7 @@\n \n \t* config/aarch64/aarch64-cores.def (xgene1): Update/add the\n \txgene1 (APM XGene-1) core definition.\n-\t* gcc/config/aarch64/aarch64.c: Add cost tables for APM XGene-1\n+\t* config/aarch64/aarch64.c: Add cost tables for APM XGene-1\n \t* config/arm/aarch-cost-tables.h: Add cost tables for APM XGene-1\n \t* doc/invoke.texi: Document -mcpu=xgene1.\n \n@@ -35315,7 +35315,7 @@\n \t* ipa-icf.c (sem_function::equals_private): Use '&&' instead of\n \t'||' to fix typo issue.\n \n-\t* gcc/tree.h (target_opts_for_fn): Check NULL_TREE since it can\n+\t* tree.h (target_opts_for_fn): Check NULL_TREE since it can\n \taccept and return NULL.\n \n 2015-01-12  Martin Liska  <mliska@suse.cz>"}]}