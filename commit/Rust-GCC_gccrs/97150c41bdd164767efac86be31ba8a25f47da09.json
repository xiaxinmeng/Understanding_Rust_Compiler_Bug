{"sha": "97150c41bdd164767efac86be31ba8a25f47da09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTcxNTBjNDFiZGQxNjQ3NjdlZmFjODZiZTMxYmE4YTI1ZjQ3ZGEwOQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2000-11-16T04:14:37Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-11-16T04:14:37Z"}, "message": "arraynew.C: Use `std' where necessary.\n\n\t* g++.old-deja/g++.abi/arraynew.C: Use `std' where necessary.\n\t* g++.old-deja/g++.abi/cxa_vec.C: Likewise.\n\t* g++.old-deja/g++.abi/ptrflags.C: Likewise.\n\t* g++.old-deja/g++.abi/vmihint.C: Likewise.\n\nFrom-SVN: r37492", "tree": {"sha": "09bc811ae8a669948711590fc4fd2643ace59c21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09bc811ae8a669948711590fc4fd2643ace59c21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97150c41bdd164767efac86be31ba8a25f47da09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97150c41bdd164767efac86be31ba8a25f47da09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97150c41bdd164767efac86be31ba8a25f47da09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97150c41bdd164767efac86be31ba8a25f47da09/comments", "author": null, "committer": null, "parents": [{"sha": "c4d3f801a66546624ce2b3f80ecb22776ebb215b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4d3f801a66546624ce2b3f80ecb22776ebb215b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4d3f801a66546624ce2b3f80ecb22776ebb215b"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "27fcc8bbfec7aca34561bcc049ccecd696d844d1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97150c41bdd164767efac86be31ba8a25f47da09/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97150c41bdd164767efac86be31ba8a25f47da09/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=97150c41bdd164767efac86be31ba8a25f47da09", "patch": "@@ -1,3 +1,10 @@\n+2000-11-15  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* g++.old-deja/g++.abi/arraynew.C: Use `std' where necessary.\n+\t* g++.old-deja/g++.abi/cxa_vec.C: Likewise.\n+\t* g++.old-deja/g++.abi/ptrflags.C: Likewise.\n+\t* g++.old-deja/g++.abi/vmihint.C: Likewise.\n+\n 2000-11-15  Neil Booth  <neilb@earthling.net>\n \n         gcc.dg/cpp/_Pragma1.c: Update."}, {"sha": "3aa32c84ab2e7bc69846860a80eaf460060b9688", "filename": "gcc/testsuite/g++.old-deja/g++.abi/arraynew.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97150c41bdd164767efac86be31ba8a25f47da09/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Farraynew.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97150c41bdd164767efac86be31ba8a25f47da09/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Farraynew.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Farraynew.C?ref=97150c41bdd164767efac86be31ba8a25f47da09", "patch": "@@ -7,7 +7,7 @@\n \n void* p;\n \n-void* operator new[](size_t s) throw (bad_alloc)\n+void* operator new[](size_t s) throw (std::bad_alloc)\n {\n   // Record the base of the last array allocated.\n   p = malloc (s);"}, {"sha": "c08ce75e961ebe1b0712b24a93db4aed442819c7", "filename": "gcc/testsuite/g++.old-deja/g++.abi/cxa_vec.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97150c41bdd164767efac86be31ba8a25f47da09/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fcxa_vec.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97150c41bdd164767efac86be31ba8a25f47da09/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fcxa_vec.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fcxa_vec.C?ref=97150c41bdd164767efac86be31ba8a25f47da09", "patch": "@@ -62,7 +62,7 @@ void test0 ()\n   if (!started)\n     {\n       started = true;\n-      set_terminate (test0);\n+      std::set_terminate (test0);\n       \n       ctor_count = dtor_count = 5;\n       dtor_repeat = false;\n@@ -95,7 +95,7 @@ void test1 ()\n   if (!started)\n     {\n       started = true;\n-      set_terminate (test1);\n+      std::set_terminate (test1);\n       \n       ctor_count = dtor_count = 5;\n       dtor_repeat = false;\n@@ -129,7 +129,7 @@ void test2 ()\n   if (!started)\n     {\n       started = true;\n-      set_terminate (test2);\n+      std::set_terminate (test2);\n       ctor_count = dtor_count = 5;\n       dtor_repeat = false;\n       blocks = 0;\n@@ -163,7 +163,7 @@ void test3 ()\n   if (!started)\n     {\n       started = true;\n-      set_terminate (test3);\n+      std::set_terminate (test3);\n       \n       ctor_count = dtor_count = 5;\n       dtor_repeat = false;\n@@ -201,7 +201,7 @@ void test4 ()\n   if (!started)\n     {\n       started = true;\n-      set_terminate (test4);\n+      std::set_terminate (test4);\n       \n       ctor_count = dtor_count = 5;\n       dtor_repeat = false;"}, {"sha": "9c645566d2ebbc05543902e368f4e6b4ea13469e", "filename": "gcc/testsuite/g++.old-deja/g++.abi/ptrflags.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97150c41bdd164767efac86be31ba8a25f47da09/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fptrflags.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97150c41bdd164767efac86be31ba8a25f47da09/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fptrflags.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fptrflags.C?ref=97150c41bdd164767efac86be31ba8a25f47da09", "patch": "@@ -12,13 +12,13 @@ struct B;\n \n using namespace abi;\n \n-int expect (int flags, type_info const &info)\n+int expect (int flags, std::type_info const &info)\n {\n-  __pbase_type_info const *ptr =\n-      dynamic_cast <__pbase_type_info const *> (&info);\n+  abi::__pbase_type_info const *ptr =\n+      dynamic_cast <abi::__pbase_type_info const *> (&info);\n   if (!ptr)\n     return 0;\n-  if (ptr->qualifier_flags != flags)\n+  if (ptr->__qualifier_flags != flags)\n     return 0;\n   return 1;\n }"}, {"sha": "1160e1fe178d3e682b4b362096b4e3ee6381325c", "filename": "gcc/testsuite/g++.old-deja/g++.abi/vmihint.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97150c41bdd164767efac86be31ba8a25f47da09/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvmihint.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97150c41bdd164767efac86be31ba8a25f47da09/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvmihint.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvmihint.C?ref=97150c41bdd164767efac86be31ba8a25f47da09", "patch": "@@ -30,13 +30,13 @@ struct P2 : B, P1 {int m;};\n \n using namespace abi;\n \n-int expect (int flags, type_info const &info)\n+int expect (int flags, std::type_info const &info)\n {\n-  __vmi_class_type_info const *ptr =\n-      dynamic_cast <__vmi_class_type_info const *> (&info);\n+  abi::__vmi_class_type_info const *ptr =\n+      dynamic_cast <abi::__vmi_class_type_info const *> (&info);\n   if (!ptr)\n     return 0;\n-  if (ptr->flags != flags)\n+  if (ptr->__flags != flags)\n     return 0;\n   return 1;\n }"}]}