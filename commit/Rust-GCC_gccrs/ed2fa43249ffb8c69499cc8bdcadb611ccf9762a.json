{"sha": "ed2fa43249ffb8c69499cc8bdcadb611ccf9762a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQyZmE0MzI0OWZmYjhjNjk0OTljYzhiZGNhZGI2MTFjY2Y5NzYyYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2002-03-18T13:27:03Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-03-18T13:27:03Z"}, "message": "re PR c++/4003 (ICE on template instantiation including friendship declaration.)\n\n        PR c++/4003\n        * pt.c (tsubst_friend_function): Use decl_namespace_context.\n\nFrom-SVN: r50966", "tree": {"sha": "c8c232094f3754d4e8ba2595f50a2ca5187741d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8c232094f3754d4e8ba2595f50a2ca5187741d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed2fa43249ffb8c69499cc8bdcadb611ccf9762a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed2fa43249ffb8c69499cc8bdcadb611ccf9762a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed2fa43249ffb8c69499cc8bdcadb611ccf9762a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed2fa43249ffb8c69499cc8bdcadb611ccf9762a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fd70bb6453ba1f09de9c507195cf2f0287b71c6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd70bb6453ba1f09de9c507195cf2f0287b71c6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd70bb6453ba1f09de9c507195cf2f0287b71c6e"}], "stats": {"total": 35, "additions": 18, "deletions": 17}, "files": [{"sha": "632a25726a8d8a96446062a897599d6276f58db5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2fa43249ffb8c69499cc8bdcadb611ccf9762a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2fa43249ffb8c69499cc8bdcadb611ccf9762a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ed2fa43249ffb8c69499cc8bdcadb611ccf9762a", "patch": "@@ -1,5 +1,8 @@\n 2002-03-18  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/4003 - template/friend.C\n+\t* pt.c (tsubst_friend_function): Use decl_namespace_context.\n+\n \tPR c++/3948 -- C++ ABI change, followup to 2001-12-18 patch.\n \t* class.c (finish_struct_bits): Also set TREE_ADDRESSABLE for a\n \ttype with a nontrivial destructor."}, {"sha": "67da22daa9a9a988e11c07fa65a59621266a7143", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2fa43249ffb8c69499cc8bdcadb611ccf9762a/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2fa43249ffb8c69499cc8bdcadb611ccf9762a/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ed2fa43249ffb8c69499cc8bdcadb611ccf9762a", "patch": "@@ -4623,7 +4623,7 @@ tsubst_friend_function (decl, args)\n       tree template_id, arglist, fns;\n       tree new_args;\n       tree tmpl;\n-      tree ns = CP_DECL_CONTEXT (TYPE_MAIN_DECL (current_class_type));\n+      tree ns = decl_namespace_context (TYPE_MAIN_DECL (current_class_type));\n       \n       /* Friend functions are looked up in the containing namespace scope.\n          We must enter that scope, to avoid finding member functions of the\n@@ -6064,15 +6064,6 @@ tsubst_decl (t, args, type, complain)\n \tSET_DECL_RTL (r, NULL_RTX);\n \tDECL_SIZE (r) = DECL_SIZE_UNIT (r) = 0;\n \n-\t/* For __PRETTY_FUNCTION__ we have to adjust the initializer.  */\n-\tif (DECL_PRETTY_FUNCTION_P (r))\n-\t  {\n-\t    const char *const name = (*decl_printable_name)\n-\t      \t\t\t(current_function_decl, 2);\n-\t    DECL_INITIAL (r) = cp_fname_init (name);\n-\t    TREE_TYPE (r) = TREE_TYPE (DECL_INITIAL (r));\n-\t  }\n-\n \t/* Even if the original location is out of scope, the newly\n \t   substituted one is not.  */\n \tif (TREE_CODE (r) == VAR_DECL)\n@@ -7353,10 +7344,6 @@ tsubst_expr (t, args, complain, in_decl)\n \t  {\n \t    init = DECL_INITIAL (decl);\n \t    decl = tsubst (decl, args, complain, in_decl);\n-\t    if (DECL_PRETTY_FUNCTION_P (decl))\n-\t      init = DECL_INITIAL (decl);\n-\t    else\n-\t      init = tsubst_expr (init, args, complain, in_decl);\n \t    if (decl != error_mark_node)\n \t      {\n                 if (TREE_CODE (decl) != TYPE_DECL)\n@@ -7372,6 +7359,17 @@ tsubst_expr (t, args, complain, in_decl)\n \t        if (TREE_CODE (decl) == VAR_DECL)\n \t          DECL_TEMPLATE_INSTANTIATED (decl) = 1;\n \t        maybe_push_decl (decl);\n+\t\tif (DECL_PRETTY_FUNCTION_P (decl))\n+\t\t  {\n+\t\t    /* For __PRETTY_FUNCTION__ we have to adjust the\n+\t\t       initializer.  */\n+\t\t    const char *const name\n+\t\t      = (*decl_printable_name) (current_function_decl, 2);\n+\t\t    init = cp_fname_init (name);\n+\t\t    TREE_TYPE (decl) = TREE_TYPE (init);\n+\t\t  }\n+\t\telse\n+\t\t  init = tsubst_expr (init, args, complain, in_decl);\n \t        cp_finish_decl (decl, init, NULL_TREE, 0);\n \t      }\n \t  }"}, {"sha": "59564ad94372efaf808ed49db1a3ba12f37b370b", "filename": "gcc/testsuite/g++.dg/template/friend.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2fa43249ffb8c69499cc8bdcadb611ccf9762a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2fa43249ffb8c69499cc8bdcadb611ccf9762a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend.C?ref=ed2fa43249ffb8c69499cc8bdcadb611ccf9762a", "patch": "@@ -16,15 +16,15 @@ ostream& operator<<(ostream &o, const typename s<T>::t &x)\n template <class T>\n struct s {\n   struct t\n-  {\t\t\t\t // { dg-bogus \"\" \"\" { xfail *-*-* } }\n+  {\n     friend ostream&\n-    operator<<<T>(ostream&, const typename s<T>::t &); // { dg-bogus \"\" \"\" { xfail *-*-* } }\n+    operator<<<T>(ostream&, const typename s<T>::t &);\n   };\n   t x;\n };\n \n int main()\n {\n-  s<int>::t y;\t\t\t // { dg-bogus \"\" \"\" { xfail *-*-* } }\n+  s<int>::t y;\n   cout << y;\n }"}]}