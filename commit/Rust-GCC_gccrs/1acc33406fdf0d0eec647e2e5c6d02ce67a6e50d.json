{"sha": "1acc33406fdf0d0eec647e2e5c6d02ce67a6e50d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFjYzMzNDA2ZmRmMGQwZWVjNjQ3ZTJlNWM2ZDAyY2U2N2E2ZTUwZA==", "commit": {"author": {"name": "Janis Johnson", "email": "janisjo@codesourcery.com", "date": "2012-07-25T22:09:28Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2012-07-25T22:09:28Z"}, "message": "* g++.dg/cpp0x/nullptr21.c: Remove printfs, make self-checking.\n\nFrom-SVN: r189870", "tree": {"sha": "aa0d27b5f51f299fc304c8574c3abb31165e0ffd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa0d27b5f51f299fc304c8574c3abb31165e0ffd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1acc33406fdf0d0eec647e2e5c6d02ce67a6e50d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1acc33406fdf0d0eec647e2e5c6d02ce67a6e50d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1acc33406fdf0d0eec647e2e5c6d02ce67a6e50d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1acc33406fdf0d0eec647e2e5c6d02ce67a6e50d/comments", "author": null, "committer": null, "parents": [{"sha": "b0c724c227cb3ce649f6117b89e7b84f309b889a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0c724c227cb3ce649f6117b89e7b84f309b889a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0c724c227cb3ce649f6117b89e7b84f309b889a"}], "stats": {"total": 45, "additions": 30, "deletions": 15}, "files": [{"sha": "ff338d5fab3a234df01707fe93ce2c0024b1829f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1acc33406fdf0d0eec647e2e5c6d02ce67a6e50d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1acc33406fdf0d0eec647e2e5c6d02ce67a6e50d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1acc33406fdf0d0eec647e2e5c6d02ce67a6e50d", "patch": "@@ -1,3 +1,7 @@\n+2012-07-25  Janis Johnson  <janisjo@codesourcery.com>\n+\n+\t* g++.dg/cpp0x/nullptr21.c: Remove printfs, make self-checking.\n+\n 2012-07-25  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/noreturn5.ad[sb]: New test."}, {"sha": "8362bd2965b7f4798b2ff1b228587cc613a6ce16", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr21.C", "status": "modified", "additions": 26, "deletions": 15, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1acc33406fdf0d0eec647e2e5c6d02ce67a6e50d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1acc33406fdf0d0eec647e2e5c6d02ce67a6e50d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr21.C?ref=1acc33406fdf0d0eec647e2e5c6d02ce67a6e50d", "patch": "@@ -3,42 +3,53 @@\n \n // Test throw and catch\n \n-#include <cstdio>\n+extern \"C\" void abort (void);\n \n typedef decltype(nullptr) nullptr_t;\n \n+int result[2];\n+\n+void __attribute__((noinline))\n+foo (int i, int j)\n+{\n+  result[i] = j;\n+}\n+\n int main()\n {\n   try {\n     throw nullptr;\n   } catch (void*) {\n-    printf(\"Test 1 Fail\");\n+    foo (0, 1);\n   } catch (bool) {\n-    printf(\"Test 1 Fail\");\n+    foo (0, 2);\n   } catch (int) {\n-    printf(\"Test 1 Fail\");\n+    foo (0, 3);\n   } catch (long int) {\n-    printf(\"Test 1 Fail\");\n+    foo (0, 4);\n   } catch (nullptr_t) {\n-    printf(\"Test 1 OK\");\n+    foo (0, 5);\n   } catch (...) {\n-    printf(\"Test 1 Fail\");\n-  }  // { dg-output \"Test 1 OK\" }\n+    foo (0, 6);\n+  }\n \n   nullptr_t mynull = 0;\n   try {\n     throw mynull;\n   } catch (void*) {\n-    printf(\"Test 2 Fail\");\n+    foo (1, 1);\n   } catch (bool) {\n-    printf(\"Test 2 Fail\");\n+    foo (1, 2);\n   } catch (int) {\n-    printf(\"Test 2 Fail\");\n+    foo (1, 3);\n   } catch (long int) {\n-    printf(\"Test 2 Fail\");\n+    foo (1, 4);\n   } catch (nullptr_t) {\n-    printf(\"Test 2 OK\");\n+    foo (1, 5);\n   } catch (...) {\n-    printf(\"Test 2 Fail\");\n-  }  // { dg-output \"Test 2 OK\" }\n+    foo (1, 6);\n+  }\n+\n+  if (result[0] != 5 || result[1] != 5)\n+    abort ();\n }"}]}