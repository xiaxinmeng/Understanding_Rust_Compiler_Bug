{"sha": "aef6a62423341540cf979a2bb9c45e7463c097b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVmNmE2MjQyMzM0MTU0MGNmOTc5YTJiYjljNDVlNzQ2M2MwOTdiMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2003-11-03T23:47:11Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2003-11-03T23:47:11Z"}, "message": "gty.texi (tag, desc): Say more about role of desc values in selecting between tags.\n\n\t* doc/gty.texi (tag, desc): Say more about role of desc values in\n\tselecting between tags.\n\nFrom-SVN: r73233", "tree": {"sha": "f329ecb8bce257457c0e34d06d9b1ca8c3b60696", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f329ecb8bce257457c0e34d06d9b1ca8c3b60696"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aef6a62423341540cf979a2bb9c45e7463c097b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aef6a62423341540cf979a2bb9c45e7463c097b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aef6a62423341540cf979a2bb9c45e7463c097b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aef6a62423341540cf979a2bb9c45e7463c097b1/comments", "author": null, "committer": null, "parents": [{"sha": "930177d9f0ab0015f02f4961cda28ab63dfd468a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/930177d9f0ab0015f02f4961cda28ab63dfd468a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/930177d9f0ab0015f02f4961cda28ab63dfd468a"}], "stats": {"total": 34, "additions": 23, "deletions": 11}, "files": [{"sha": "268ed0c136a3f6c6b7c7a6fcef49168f50d1637f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef6a62423341540cf979a2bb9c45e7463c097b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef6a62423341540cf979a2bb9c45e7463c097b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aef6a62423341540cf979a2bb9c45e7463c097b1", "patch": "@@ -1,3 +1,8 @@\n+2003-11-03  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* doc/gty.texi (tag, desc): Say more about role of desc values in\n+\tselecting between tags.\n+\n 2003-11-03  Alexander Kabaev  <ak03@gte.com>\n \n \t* real.c (encode_ieee_single): Ensure proper promotion."}, {"sha": "56ce597f8dce86220c12f70473feeb826880dd84", "filename": "gcc/doc/gty.texi", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef6a62423341540cf979a2bb9c45e7463c097b1/gcc%2Fdoc%2Fgty.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef6a62423341540cf979a2bb9c45e7463c097b1/gcc%2Fdoc%2Fgty.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgty.texi?ref=aef6a62423341540cf979a2bb9c45e7463c097b1", "patch": "@@ -132,28 +132,35 @@ field really isn't ever used.\n @itemx default\n \n The type machinery needs to be told which field of a @code{union} is\n-currently active.  This is done by giving each field a constant @code{tag}\n-value, and then specifying a discriminator using @code{desc}.  For example,\n+currently active.  This is done by giving each field a constant\n+@code{tag} value, and then specifying a discriminator using @code{desc}.\n+The value of the expression given by @code{desc} is compared against\n+each @code{tag} value, each of which should be different.  If no\n+@code{tag} is matched, the field marked with @code{default} is used if\n+there is one, otherwise no field in the union will be marked.\n+\n+In the @code{desc} option, the ``current structure'' is the union that\n+it discriminates.  Use @code{%1} to mean the structure containing it.\n+(There are no escapes available to the @code{tag} option, since it's\n+supposed to be a constant.)\n+\n+For example,\n @smallexample\n struct tree_binding GTY(())\n @{\n   struct tree_common common;\n   union tree_binding_u @{\n     tree GTY ((tag (\"0\"))) scope;\n     struct cp_binding_level * GTY ((tag (\"1\"))) level;\n-  @} GTY ((desc (\"BINDING_HAS_LEVEL_P ((tree)&%0)\"))) scope;\n+  @} GTY ((desc (\"BINDING_HAS_LEVEL_P ((tree)&%0)\"))) xscope;\n   tree value;\n @};\n @end smallexample\n \n-In the @code{desc} option, the ``current structure'' is the union that\n-it discriminates.  Use @code{%1} to mean the structure containing it.\n-(There are no escapes available to the @code{tag} option, since it's\n-supposed to be a constant.)\n-\n-Each @code{tag} should be different.  If no @code{tag} is matched,\n-the field marked with @code{default} is used if there is one, otherwise\n-no field in the union will be marked.\n+In this example, the value of BINDING_HAS_LEVEL_P when applied to a\n+@code{struct tree_binding *} is presumed to be 0 or 1.  If 1, the type\n+mechanism will treat the field @code{level} as being present and if 0,\n+will treat the field @code{scope} as being present.\n \n @findex param_is\n @findex use_param"}]}