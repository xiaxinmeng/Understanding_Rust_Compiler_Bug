{"sha": "370f4759839b573d45ed86050d51564dcac629b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzcwZjQ3NTk4MzliNTczZDQ1ZWQ4NjA1MGQ1MTU2NGRjYWM2MjliNw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-08-16T13:55:30Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-08-16T13:55:30Z"}, "message": "tree.h (ptrofftype_p): New helper function.\n\n2011-08-16  Richard Guenther  <rguenther@suse.de>\n\n\t* tree.h (ptrofftype_p): New helper function.\n\t* tree-cfg.c (verify_expr): Use ptrofftype_p for POINTER_PLUS_EXPR\n\toffset verification.\n\t(verify_gimple_assign_binary): Likewise.\n\t* tree.c (build2_stat): Likewise.\n\t* tree-chrec.c (chrec_fold_plus_poly_poly): Likewise.\n\t(reset_evolution_in_loop): Likewise.\n\t* tree-chrec.h (build_polynomial_chrec): Likewise.\n\nFrom-SVN: r177784", "tree": {"sha": "ea6b5640fb50bd80de0488670f53e68836652312", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea6b5640fb50bd80de0488670f53e68836652312"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/370f4759839b573d45ed86050d51564dcac629b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/370f4759839b573d45ed86050d51564dcac629b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/370f4759839b573d45ed86050d51564dcac629b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/370f4759839b573d45ed86050d51564dcac629b7/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c50584186d58165c8cd3978712b5bfc18f18fcc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c50584186d58165c8cd3978712b5bfc18f18fcc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c50584186d58165c8cd3978712b5bfc18f18fcc5"}], "stats": {"total": 42, "additions": 30, "deletions": 12}, "files": [{"sha": "7b672d171622c0f73ef11edb602bda509d6931ac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370f4759839b573d45ed86050d51564dcac629b7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370f4759839b573d45ed86050d51564dcac629b7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=370f4759839b573d45ed86050d51564dcac629b7", "patch": "@@ -1,3 +1,14 @@\n+2011-08-16  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree.h (ptrofftype_p): New helper function.\n+\t* tree-cfg.c (verify_expr): Use ptrofftype_p for POINTER_PLUS_EXPR\n+\toffset verification.\n+\t(verify_gimple_assign_binary): Likewise.\n+\t* tree.c (build2_stat): Likewise.\n+\t* tree-chrec.c (chrec_fold_plus_poly_poly): Likewise.\n+\t(reset_evolution_in_loop): Likewise.\n+\t* tree-chrec.h (build_polynomial_chrec): Likewise.\n+\n 2011-08-16  Liang Wang  <lwang1@marvell.com>\n \n \t* ggc.h (ggc_alloc_rtvec_sized): Change arguments of"}, {"sha": "ea85959bf10a906b81af7152504fe9284b7a9fc6", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370f4759839b573d45ed86050d51564dcac629b7/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370f4759839b573d45ed86050d51564dcac629b7/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=370f4759839b573d45ed86050d51564dcac629b7", "patch": "@@ -2772,13 +2772,11 @@ verify_expr (tree *tp, int *walk_subtrees, void *data ATTRIBUTE_UNUSED)\n \t  error (\"invalid operand to pointer plus, first operand is not a pointer\");\n \t  return t;\n \t}\n-      /* Check to make sure the second operand is an integer with type of\n-\t sizetype.  */\n-      if (!useless_type_conversion_p (sizetype,\n-\t\t\t\t     TREE_TYPE (TREE_OPERAND (t, 1))))\n+      /* Check to make sure the second operand is a ptrofftype.  */\n+      if (!ptrofftype_p (TREE_TYPE (TREE_OPERAND (t, 1))))\n \t{\n \t  error (\"invalid operand to pointer plus, second operand is not an \"\n-\t\t \"integer with type of sizetype\");\n+\t\t \"integer type of appropriate width\");\n \t  return t;\n \t}\n       /* FALLTHROUGH */\n@@ -3525,7 +3523,7 @@ verify_gimple_assign_binary (gimple stmt)\n do_pointer_plus_expr_check:\n \tif (!POINTER_TYPE_P (rhs1_type)\n \t    || !useless_type_conversion_p (lhs_type, rhs1_type)\n-\t    || !useless_type_conversion_p (sizetype, rhs2_type))\n+\t    || !ptrofftype_p (rhs2_type))\n \t  {\n \t    error (\"type mismatch in pointer plus expression\");\n \t    debug_generic_stmt (lhs_type);"}, {"sha": "9ceb6f0cf4d65277b08f95466d89cc8bb6bf9cca", "filename": "gcc/tree-chrec.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370f4759839b573d45ed86050d51564dcac629b7/gcc%2Ftree-chrec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370f4759839b573d45ed86050d51564dcac629b7/gcc%2Ftree-chrec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.c?ref=370f4759839b573d45ed86050d51564dcac629b7", "patch": "@@ -95,14 +95,14 @@ chrec_fold_plus_poly_poly (enum tree_code code,\n   tree left, right;\n   struct loop *loop0 = get_chrec_loop (poly0);\n   struct loop *loop1 = get_chrec_loop (poly1);\n-  tree rtype = code == POINTER_PLUS_EXPR ? sizetype : type;\n+  tree rtype = code == POINTER_PLUS_EXPR ? chrec_type (poly1) : type;\n \n   gcc_assert (poly0);\n   gcc_assert (poly1);\n   gcc_assert (TREE_CODE (poly0) == POLYNOMIAL_CHREC);\n   gcc_assert (TREE_CODE (poly1) == POLYNOMIAL_CHREC);\n   if (POINTER_TYPE_P (chrec_type (poly0)))\n-    gcc_assert (chrec_type (poly1) == sizetype);\n+    gcc_assert (ptrofftype_p (chrec_type (poly1)));\n   else\n     gcc_assert (chrec_type (poly0) == chrec_type (poly1));\n   gcc_assert (type == chrec_type (poly0));\n@@ -831,7 +831,7 @@ reset_evolution_in_loop (unsigned loop_num,\n   struct loop *loop = get_loop (loop_num);\n \n   if (POINTER_TYPE_P (chrec_type (chrec)))\n-    gcc_assert (sizetype == chrec_type (new_evol));\n+    gcc_assert (ptrofftype_p (chrec_type (new_evol)));\n   else\n     gcc_assert (chrec_type (chrec) == chrec_type (new_evol));\n "}, {"sha": "bf9bff0f99974cf389bbf2d78ee90123f44b82f7", "filename": "gcc/tree-chrec.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370f4759839b573d45ed86050d51564dcac629b7/gcc%2Ftree-chrec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370f4759839b573d45ed86050d51564dcac629b7/gcc%2Ftree-chrec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.h?ref=370f4759839b573d45ed86050d51564dcac629b7", "patch": "@@ -145,7 +145,7 @@ build_polynomial_chrec (unsigned loop_num,\n \n   /* Types of left and right sides of a chrec should be compatible.  */\n   if (POINTER_TYPE_P (TREE_TYPE (left)))\n-    gcc_assert (sizetype == TREE_TYPE (right));\n+    gcc_assert (ptrofftype_p (TREE_TYPE (right)));\n   else\n     gcc_assert (TREE_TYPE (left) == TREE_TYPE (right));\n "}, {"sha": "3eaf2f90ea2f2d1e4115c7f8d35145d5d59cc72d", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370f4759839b573d45ed86050d51564dcac629b7/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370f4759839b573d45ed86050d51564dcac629b7/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=370f4759839b573d45ed86050d51564dcac629b7", "patch": "@@ -3784,8 +3784,7 @@ build2_stat (enum tree_code code, tree tt, tree arg0, tree arg1 MEM_STAT_DECL)\n \n   if (code == POINTER_PLUS_EXPR && arg0 && arg1 && tt)\n     gcc_assert (POINTER_TYPE_P (tt) && POINTER_TYPE_P (TREE_TYPE (arg0))\n-\t\t&& INTEGRAL_TYPE_P (TREE_TYPE (arg1))\n-\t\t&& useless_type_conversion_p (sizetype, TREE_TYPE (arg1)));\n+\t\t&& ptrofftype_p (TREE_TYPE (arg1)));\n \n   t = make_node_stat (code PASS_MEM_STAT);\n   TREE_TYPE (t) = tt;"}, {"sha": "139c27616fe885be0e09d921299c775add451aa8", "filename": "gcc/tree.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370f4759839b573d45ed86050d51564dcac629b7/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370f4759839b573d45ed86050d51564dcac629b7/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=370f4759839b573d45ed86050d51564dcac629b7", "patch": "@@ -5313,6 +5313,16 @@ truth_value_p (enum tree_code code)\n \t  || code == TRUTH_XOR_EXPR || code == TRUTH_NOT_EXPR);\n }\n \n+/* Return whether TYPE is a type suitable for an offset for\n+   a POINTER_PLUS_EXPR.  */\n+static inline bool\n+ptrofftype_p (tree type)\n+{\n+  return (INTEGRAL_TYPE_P (type)\n+\t  && TYPE_PRECISION (type) == TYPE_PRECISION (sizetype)\n+\t  && TYPE_UNSIGNED (type) == TYPE_UNSIGNED (sizetype));\n+}\n+\n /* Build and fold a POINTER_PLUS_EXPR at LOC offsetting PTR by OFF.  */\n static inline tree\n fold_build_pointer_plus_loc (location_t loc, tree ptr, tree off)"}]}