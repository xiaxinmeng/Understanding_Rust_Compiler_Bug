{"sha": "b707b4509b0eb1b31919e724ef778a9b210a90b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjcwN2I0NTA5YjBlYjFiMzE5MTllNzI0ZWY3NzhhOWIyMTBhOTBiMA==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1998-10-06T09:03:38Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1998-10-06T09:03:38Z"}, "message": "Cleanup for -fdump-unnumbered:\n\n\t* flags.h (flag_dump_unnumbered): Declare.\n\t* toplev.c (flag_dump_unnumbered): Don't declare.\n\t* print-rtl.c (flags.h): Include.\n\t(print_rtl_single): Add return value.\n\t* rtl.h (print_rtl_single): Update declaration.\n\t* flow.c (flag_dump_unnumbered): Don't declare.\n\t(print_rtl_with_bb): Use return value of print_rtl_single.\n\nFrom-SVN: r22865", "tree": {"sha": "d886cd126771423714dea20b8ad27de6d6273fa0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d886cd126771423714dea20b8ad27de6d6273fa0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b707b4509b0eb1b31919e724ef778a9b210a90b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b707b4509b0eb1b31919e724ef778a9b210a90b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b707b4509b0eb1b31919e724ef778a9b210a90b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b707b4509b0eb1b31919e724ef778a9b210a90b0/comments", "author": null, "committer": null, "parents": [{"sha": "87603ed0ee7dd6667ca5098dffb08a120435f713", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87603ed0ee7dd6667ca5098dffb08a120435f713", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87603ed0ee7dd6667ca5098dffb08a120435f713"}], "stats": {"total": 45, "additions": 36, "deletions": 9}, "files": [{"sha": "f316ada804cd8e1cd5327f4d04ed0646d164be80", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b707b4509b0eb1b31919e724ef778a9b210a90b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b707b4509b0eb1b31919e724ef778a9b210a90b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b707b4509b0eb1b31919e724ef778a9b210a90b0", "patch": "@@ -1,3 +1,13 @@\n+Tue Oct  6 17:00:42 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* flags.h (flag_dump_unnumbered): Declare.\n+\t* toplev.c (flag_dump_unnumbered): Don't declare.\n+\t* print-rtl.c (flags.h): Include.\n+\t(print_rtl_single): Add return value.\n+\t* rtl.h (print_rtl_single): Update declaration.\n+\t* flow.c (flag_dump_unnumbered): Don't declare.\n+\t(print_rtl_with_bb): Use return value of print_rtl_single.\n+\n Tue Oct  6 01:36:00 1998  Bernd Schmidt <crux@Pool.Informatik.RWTH-Aachen.DE>\n \n \t* Makefile.in (stupid.o): Update dependencies."}, {"sha": "3b7dd5ee3b8dd47c5b90f960cec2eec4f22a8ac3", "filename": "gcc/flags.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b707b4509b0eb1b31919e724ef778a9b210a90b0/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b707b4509b0eb1b31919e724ef778a9b210a90b0/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=b707b4509b0eb1b31919e724ef778a9b210a90b0", "patch": "@@ -356,6 +356,11 @@ extern int flag_branch_on_count_reg;\n \n extern int flag_delayed_branch;\n \n+/* Nonzero means suppress output of instruction numbers and line number\n+   notes in debugging dumps.  */\n+\n+extern int flag_dump_unnumbered;\n+\n /* Nonzero means pretend it is OK to examine bits of target floats,\n    even if that isn't true.  The resulting code will have incorrect constants,\n    but the same series of instructions that the native compiler would make.  */"}, {"sha": "d6024369e743d5228f64f026c117ab2190738f77", "filename": "gcc/flow.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b707b4509b0eb1b31919e724ef778a9b210a90b0/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b707b4509b0eb1b31919e724ef778a9b210a90b0/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=b707b4509b0eb1b31919e724ef778a9b210a90b0", "patch": "@@ -3171,7 +3171,6 @@ print_rtl_with_bb (outf, rtx_first)\n      FILE *outf;\n      rtx rtx_first;\n {\n-  extern int flag_dump_unnumbered;\n   register rtx tmp_rtx;\n \n   if (rtx_first == 0)\n@@ -3209,6 +3208,8 @@ print_rtl_with_bb (outf, rtx_first)\n \n       for (tmp_rtx = rtx_first; NULL != tmp_rtx; tmp_rtx = NEXT_INSN (tmp_rtx))\n \t{\n+\t  int did_output;\n+\n \t  if ((bb = start[INSN_UID (tmp_rtx)]) >= 0)\n \t    {\n \t      fprintf (outf, \";; Start of basic block %d, registers live:\",\n@@ -3231,13 +3232,12 @@ print_rtl_with_bb (outf, rtx_first)\n \t  else if (in_bb_p[ INSN_UID(tmp_rtx)] == IN_MULTIPLE_BB)\n \t    fprintf (outf, \";; Insn is in multiple basic blocks\\n\");\n \n-\t  print_rtl_single (outf, tmp_rtx);\n+\t  did_output = print_rtl_single (outf, tmp_rtx);\n \n \t  if ((bb = end[INSN_UID (tmp_rtx)]) >= 0)\n \t    fprintf (outf, \";; End of basic block %d\\n\", bb);\n \n-\t  if (! flag_dump_unnumbered\n-\t      || GET_CODE (tmp_rtx) != NOTE || NOTE_LINE_NUMBER (tmp_rtx) < 0)\n+\t  if (did_output)\n \t    putc ('\\n', outf);\n \t}\n     }"}, {"sha": "d0339e47699c31a9e74d058466cf969d746fc1c2", "filename": "gcc/invoke.texi", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b707b4509b0eb1b31919e724ef778a9b210a90b0/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b707b4509b0eb1b31919e724ef778a9b210a90b0/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=b707b4509b0eb1b31919e724ef778a9b210a90b0", "patch": "@@ -136,7 +136,7 @@ in the following sections.\n @item Debugging Options\n @xref{Debugging Options,,Options for Debugging Your Program or GCC}.\n @smallexample\n--a  -ax  -d@var{letters}  -fpretend-float\n+-a  -ax  -d@var{letters}  -fdump-unnumbered -fpretend-float\n -fprofile-arcs  -ftest-coverage\n -g  -g@var{level}  -gcoff  -gdwarf  -gdwarf-1  -gdwarf-1+  -gdwarf-2\n -ggdb  -gstabs  -gstabs+  -gxcoff  -gxcoff+\n@@ -2033,6 +2033,12 @@ Dump debugging information during parsing, to standard error.\n Annotate the assembler output with miscellaneous debugging information.\n @end table\n \n+@item -fdump-unnumbered\n+When doing debugging dumps (see -d option above), suppress instruction\n+numbers and line number note output.  This makes it more feasible to\n+use diff on debugging dumps for compiler invokations with different\n+options, in particular with and without -g.\n+\n @item -fpretend-float\n When running a cross-compiler, pretend that the target machine uses the\n same floating point format as the host machine.  This causes incorrect"}, {"sha": "e3b36fe0a262170a25d4f5699f35a03a5f830c67", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b707b4509b0eb1b31919e724ef778a9b210a90b0/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b707b4509b0eb1b31919e724ef778a9b210a90b0/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=b707b4509b0eb1b31919e724ef778a9b210a90b0", "patch": "@@ -24,6 +24,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"rtl.h\"\n #include \"bitmap.h\"\n #include \"real.h\"\n+#include \"flags.h\"\n \n \n /* How to print out a register name.\n@@ -54,7 +55,11 @@ static int indent;\n \n extern char **insn_name_ptr;\n \n+/* Nonzero means suppress output of instruction numbers and line number\n+   notes in debugging dumps.\n+   This must be defined here so that programs like gencodes can be linked.  */\n int flag_dump_unnumbered = 0;\n+\n /* Print IN_RTX onto OUTFILE.  This is the recursive part of printing.  */\n \n static void\n@@ -409,8 +414,9 @@ print_rtl (outf, rtx_first)\n }\n \n /* Like print_rtx, except specify a file.  */\n+/* Return nonzero if we actually printed anything.  */\n \n-void\n+int\n print_rtl_single (outf, x)\n      FILE *outf;\n      rtx x;\n@@ -422,5 +428,7 @@ print_rtl_single (outf, x)\n     {\n       print_rtx (x);\n       putc ('\\n', outf);\n+      return 1;\n     }\n+  return 0;\n }"}, {"sha": "18751bbabf5a7b30546b373312616e43ad4d1ade", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b707b4509b0eb1b31919e724ef778a9b210a90b0/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b707b4509b0eb1b31919e724ef778a9b210a90b0/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=b707b4509b0eb1b31919e724ef778a9b210a90b0", "patch": "@@ -1344,7 +1344,7 @@ extern void debug_rtx_list\t\tPROTO ((rtx, int));\n extern rtx debug_rtx_find\t\tPROTO ((rtx, int));\n #ifdef BUFSIZ\n extern void print_rtl\t\t\tPROTO ((FILE *, rtx));\n-extern void print_rtl_single\t\tPROTO ((FILE *, rtx));\n+extern int print_rtl_single\t\tPROTO ((FILE *, rtx));\n extern void print_inline_rtx\t\tPROTO ((FILE *, rtx, int));\n #endif\n "}, {"sha": "7193cecd0222b96cf1cca9070f13cf0dd2c21fb1", "filename": "gcc/toplev.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b707b4509b0eb1b31919e724ef778a9b210a90b0/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b707b4509b0eb1b31919e724ef778a9b210a90b0/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=b707b4509b0eb1b31919e724ef778a9b210a90b0", "patch": "@@ -725,8 +725,6 @@ int flag_argument_noalias = 0;\n    if alias analysis (in general) is enabled.  */\n int flag_strict_aliasing = 0;\n \n-extern int flag_dump_unnumbered;\n-\n /* Instrument functions with calls at entry and exit, for profiling.  */\n int flag_instrument_function_entry_exit = 0;\n "}]}