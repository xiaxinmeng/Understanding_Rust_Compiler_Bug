{"sha": "81d590760c31e11e3a09135f4e182aea232035f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFkNTkwNzYwYzMxZTExZTNhMDkxMzVmNGUxODJhZWEyMzIwMzVmMg==", "commit": {"author": {"name": "Hongyu Wang", "email": "hongyu.wang@intel.com", "date": "2020-11-11T01:41:13Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2020-12-03T02:02:14Z"}, "message": "Add popcount<mode> expander to enable popcount auto vectorization under AVX512BITALG/AVX512POPCNTDQ target.\n\ngcc/ChangeLog\n\n\tPR target/97770\n\t* config/i386/sse.md (popcount<mode>2): New expander\n\tfor SI/DI vector modes.\n\t(popcount<mode>2): Likewise for QI/HI vector modes.\n\ngcc/testsuite/ChangeLog\n\n\tPR target/97770\n\t* gcc.target/i386/avx512bitalg-pr97770-1.c: New test.\n\t* gcc.target/i386/avx512vpopcntdq-pr97770-1.c: Likewise.\n\t* gcc.target/i386/avx512vpopcntdq-pr97770-2.c: Likewise.\n\t* gcc.target/i386/avx512vpopcntdqvl-pr97770-1.c: Likewise.", "tree": {"sha": "57f48ec126c1f100e1a9a314df215499a497a6ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57f48ec126c1f100e1a9a314df215499a497a6ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81d590760c31e11e3a09135f4e182aea232035f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81d590760c31e11e3a09135f4e182aea232035f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81d590760c31e11e3a09135f4e182aea232035f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81d590760c31e11e3a09135f4e182aea232035f2/comments", "author": {"login": "wwwhhhyyy", "id": 5366075, "node_id": "MDQ6VXNlcjUzNjYwNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/5366075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wwwhhhyyy", "html_url": "https://github.com/wwwhhhyyy", "followers_url": "https://api.github.com/users/wwwhhhyyy/followers", "following_url": "https://api.github.com/users/wwwhhhyyy/following{/other_user}", "gists_url": "https://api.github.com/users/wwwhhhyyy/gists{/gist_id}", "starred_url": "https://api.github.com/users/wwwhhhyyy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wwwhhhyyy/subscriptions", "organizations_url": "https://api.github.com/users/wwwhhhyyy/orgs", "repos_url": "https://api.github.com/users/wwwhhhyyy/repos", "events_url": "https://api.github.com/users/wwwhhhyyy/events{/privacy}", "received_events_url": "https://api.github.com/users/wwwhhhyyy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c05ece92c6153289fd6055e31e791e59b8ac4121", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c05ece92c6153289fd6055e31e791e59b8ac4121", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c05ece92c6153289fd6055e31e791e59b8ac4121"}], "stats": {"total": 188, "additions": 188, "deletions": 0}, "files": [{"sha": "559f8426283ac1b9321dc48018b17b6e6ce64171", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81d590760c31e11e3a09135f4e182aea232035f2/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81d590760c31e11e3a09135f4e182aea232035f2/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=81d590760c31e11e3a09135f4e182aea232035f2", "patch": "@@ -22702,6 +22702,12 @@\n     (set_attr (\"prefix\") (\"evex\"))\n     (set_attr (\"mode\") (\"TI\"))])\n \n+(define_expand \"popcount<mode>2\"\n+  [(set (match_operand:VI48_AVX512VL 0 \"register_operand\")\n+\t(popcount:VI48_AVX512VL\n+\t  (match_operand:VI48_AVX512VL 1 \"nonimmediate_operand\")))]\n+  \"TARGET_AVX512VPOPCNTDQ\")\n+\n (define_insn \"vpopcount<mode><mask_name>\"\n   [(set (match_operand:VI48_AVX512VL 0 \"register_operand\" \"=v\")\n \t(popcount:VI48_AVX512VL\n@@ -22746,6 +22752,12 @@\n   \"TARGET_SSE && TARGET_64BIT\"\n   \"jmp\\t%P1\")\n \n+(define_expand \"popcount<mode>2\"\n+  [(set (match_operand:VI12_AVX512VL 0 \"register_operand\" \"=v\")\n+\t(popcount:VI12_AVX512VL\n+\t  (match_operand:VI12_AVX512VL 1 \"nonimmediate_operand\" \"vm\")))]\n+  \"TARGET_AVX512BITALG\")\n+\n (define_insn \"vpopcount<mode><mask_name>\"\n   [(set (match_operand:VI12_AVX512VL 0 \"register_operand\" \"=v\")\n \t(popcount:VI12_AVX512VL"}, {"sha": "c83a477045cabc3227de3817ad5840364ee7a002", "filename": "gcc/testsuite/gcc.target/i386/avx512bitalg-pr97770-1.c", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81d590760c31e11e3a09135f4e182aea232035f2/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bitalg-pr97770-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81d590760c31e11e3a09135f4e182aea232035f2/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bitalg-pr97770-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bitalg-pr97770-1.c?ref=81d590760c31e11e3a09135f4e182aea232035f2", "patch": "@@ -0,0 +1,60 @@\n+/* PR target/97770 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512bitalg -mavx512vl -mprefer-vector-width=512\" } */\n+/* Add xfail since no IFN for QI/HImode popcount */\n+/* { dg-final { scan-assembler-times \"vpopcntb\\[ \\\\t\\]+\\[^\\\\n\\\\r\\]*xmm\" 1 {xfail *-*-*} } } */\n+/* { dg-final { scan-assembler-times \"vpopcntw\\[ \\\\t\\]+\\[^\\\\n\\\\r\\]*xmm\" 1 {xfail *-*-*} } } */\n+/* { dg-final { scan-assembler-times \"vpopcntb\\[ \\\\t\\]+\\[^\\\\n\\\\r\\]*ymm\" 1 {xfail *-*-*} } } */\n+/* { dg-final { scan-assembler-times \"vpopcntw\\[ \\\\t\\]+\\[^\\\\n\\\\r\\]*ymm\" 1 {xfail *-*-*} } } */\n+/* { dg-final { scan-assembler-times \"vpopcntb\\[ \\\\t\\]+\\[^\\\\n\\\\r\\]*zmm\" 1 {xfail *-*-*} } } */\n+/* { dg-final { scan-assembler-times \"vpopcntw\\[ \\\\t\\]+\\[^\\\\n\\\\r\\]*zmm\" 1 {xfail *-*-*} } } */\n+\n+#include <immintrin.h>\n+\n+void\n+__attribute__ ((noipa, optimize(\"-O3\")))\n+popcountb_128 (char * __restrict dest, char* src)\n+{\n+  for (int i = 0; i != 16; i++)\n+    dest[i] = __builtin_popcount (src[i]);\n+}\n+\n+void\n+__attribute__ ((noipa, optimize(\"-O3\")))\n+popcountw_128 (short* __restrict dest, short* src)\n+{\n+  for (int i = 0; i != 8; i++)\n+    dest[i] = __builtin_popcount (src[i]);\n+}\n+\n+void\n+__attribute__ ((noipa, optimize(\"-O3\")))\n+popcountb_256 (char * __restrict dest, char* src)\n+{\n+  for (int i = 0; i != 32; i++)\n+    dest[i] = __builtin_popcount (src[i]);\n+}\n+\n+void\n+__attribute__ ((noipa, optimize(\"-O3\")))\n+popcountw_256 (short* __restrict dest, short* src)\n+{\n+  for (int i = 0; i != 16; i++)\n+    dest[i] = __builtin_popcount (src[i]);\n+}\n+\n+void\n+__attribute__ ((noipa, optimize(\"-O3\")))\n+popcountb_512 (char * __restrict dest, char* src)\n+{\n+  for (int i = 0; i != 64; i++)\n+    dest[i] = __builtin_popcount (src[i]);\n+}\n+\n+void\n+__attribute__ ((noipa, optimize(\"-O3\")))\n+popcountw_512 (short* __restrict dest, short* src)\n+{\n+  for (int i = 0; i != 32; i++)\n+    dest[i] = __builtin_popcount (src[i]);\n+}"}, {"sha": "63bb00d9b4ad18f8771a40944fa310fbc560f75f", "filename": "gcc/testsuite/gcc.target/i386/avx512vpopcntdq-pr97770-1.c", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81d590760c31e11e3a09135f4e182aea232035f2/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vpopcntdq-pr97770-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81d590760c31e11e3a09135f4e182aea232035f2/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vpopcntdq-pr97770-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vpopcntdq-pr97770-1.c?ref=81d590760c31e11e3a09135f4e182aea232035f2", "patch": "@@ -0,0 +1,63 @@\n+/* PR target/97770 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512vpopcntdq -mavx512vl -mprefer-vector-width=512\" } */\n+/* { dg-final { scan-assembler-times \"vpopcntd\\[ \\\\t\\]+\\[^\\\\n\\\\r\\]*xmm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpopcntd\\[ \\\\t\\]+\\[^\\\\n\\\\r\\]*ymm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpopcntd\\[ \\\\t\\]+\\[^\\\\n\\\\r\\]*zmm\" 1 } } */\n+/* Add xfail since current vectorizor cannot generate expected code for DImode popcount */\n+/* { dg-final { scan-assembler-times \"vpopcntq\\[ \\\\t\\]+\\[^\\\\n\\\\r\\]*xmm\" 1 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"vpopcntq\\[ \\\\t\\]+\\[^\\\\n\\\\r\\]*ymm\" 1 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"vpopcntq\\[ \\\\t\\]+\\[^\\\\n\\\\r\\]*zmm\" 1 { xfail *-*-* } } } */\n+#ifndef AVX512VPOPCNTQ_H_INCLUDED\n+#define AVX512VPOPCNTQ_H_INCLUDED\n+\n+#include <immintrin.h>\n+\n+void\n+__attribute__ ((noipa, optimize(\"-O3\")))\n+popcountd_128 (int* __restrict dest, int* src)\n+{\n+  for (int i = 0; i != 4; i++)\n+    dest[i] = __builtin_popcount (src[i]);\n+}\n+\n+void\n+__attribute__ ((noipa, optimize(\"-O3\")))\n+popcountq_128 (long long* __restrict dest, long long* src)\n+{\n+  for (int i = 0; i != 2; i++)\n+    dest[i] = __builtin_popcountll (src[i]);\n+}\n+\n+void\n+__attribute__ ((noipa, optimize(\"-O3\")))\n+popcountd_256 (int* __restrict dest, int* src)\n+{\n+  for (int i = 0; i != 8; i++)\n+    dest[i] = __builtin_popcount (src[i]);\n+}\n+\n+void\n+__attribute__ ((noipa, optimize(\"-O3\")))\n+popcountq_256 (long long* __restrict dest, long long* src)\n+{\n+  for (int i = 0; i != 4; i++)\n+    dest[i] = __builtin_popcountll (src[i]);\n+}\n+\n+void\n+__attribute__ ((noipa, optimize(\"-O3\")))\n+popcountd_512 (int* __restrict dest, int* src)\n+{\n+  for (int i = 0; i != 16; i++)\n+    dest[i] = __builtin_popcount (src[i]);\n+}\n+\n+void\n+__attribute__ ((noipa, optimize(\"-O3\")))\n+popcountq_512 (long long* __restrict dest, long long* src)\n+{\n+  for (int i = 0; i != 8; i++)\n+    dest[i] = __builtin_popcountll (src[i]);\n+}\n+#endif"}, {"sha": "339dc29023bcf511893ee13624766878d8569b1f", "filename": "gcc/testsuite/gcc.target/i386/avx512vpopcntdq-pr97770-2.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81d590760c31e11e3a09135f4e182aea232035f2/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vpopcntdq-pr97770-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81d590760c31e11e3a09135f4e182aea232035f2/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vpopcntdq-pr97770-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vpopcntdq-pr97770-2.c?ref=81d590760c31e11e3a09135f4e182aea232035f2", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mavx512vpopcntdq\" } */\n+\n+#define AVX512VPOPCNTDQ\n+\n+#include \"avx512f-helper.h\"\n+#include \"avx512vpopcntdq-pr97770-1.c\"\n+\n+#define SIZE_D AVX512F_LEN / 32\n+#define SIZE_Q AVX512F_LEN / 64\n+\n+\n+#define RTEST(TYPE, LEN, SIZE, MODE)\t\t\t\\\n+  do\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      TYPE res[SIZE], src[SIZE], res_ref[SIZE], v;\t\\\n+      int i, j, ret;\t\t\t\t\t\\\n+      for (i = 0; i < SIZE; i++)\t\t\t\\\n+\t{\t\t\t\t\t\t\\\n+\t  v = src[i] = i * 2 + 3;\t\t\t\\\n+\t  ret = 0;\t\t\t\t\t\\\n+\t  for (j = 0; j < sizeof(v) * 8; j++)\t\t\\\n+\t    if ((v & ((TYPE)1 << (TYPE) j)))\t\t\\\n+\t      ret++;\t\t\t\t\t\\\n+\t  res_ref[i] = ret;\t\t\t\t\\\n+\t}\t\t\t\t\t\t\\\n+      EVAL(popcount, MODE, LEN) (res, src);\t\t\\\n+\tfor (i = 0; i < SIZE; i++)\t\t\t\\\n+\t  if (res[i] != res_ref[i])\t\t\t\\\n+\t    abort ();\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+  while (0)\n+\n+void\n+TEST (void)\n+{\n+  RTEST (long long, AVX512F_LEN, SIZE_Q, q_);\n+  RTEST (int, AVX512F_LEN, SIZE_D, d_);\n+}"}, {"sha": "7a34f152d0151bf9010f1005a3c4596d655df625", "filename": "gcc/testsuite/gcc.target/i386/avx512vpopcntdqvl-pr97770-1.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81d590760c31e11e3a09135f4e182aea232035f2/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vpopcntdqvl-pr97770-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81d590760c31e11e3a09135f4e182aea232035f2/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vpopcntdqvl-pr97770-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vpopcntdqvl-pr97770-1.c?ref=81d590760c31e11e3a09135f4e182aea232035f2", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O3 -mavx512vpopcntdq -mavx512vl\" } */\n+\n+#define AVX512VL\n+#define AVX512F_LEN 256\n+#define AVX512F_LEN_HALF 128\n+#include \"avx512vpopcntdq-pr97770-2.c\"\n+\n+#undef AVX512F_LEN\n+#undef AVX512F_LEN_HALF\n+\n+#define AVX512F_LEN 128\n+#define AVX512F_LEN_HALF 128\n+#include \"avx512vpopcntdq-pr97770-2.c\""}]}