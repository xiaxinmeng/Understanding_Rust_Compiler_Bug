{"sha": "f7f65c793e4dc8760ba3860b4d3c1f69971a8302", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdmNjVjNzkzZTRkYzg3NjBiYTM4NjBiNGQzYzFmNjk5NzFhODMwMg==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-05-06T00:15:45Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-05-06T00:15:45Z"}, "message": "InflaterInputStream.java: New stub class.\n\n8\n\t* InflaterInputStream.java:  New stub class.\n\t* ZipInputStream.java:  New class.  Partly works.\n\t* ZipConstants.java:  Add two (internal) constants.\n\t* ZipEntry.java (timeFromDOS):  New static (non-public) method.\n\t* ZipFile.java:  Make it mostly work, except for compression.\n\t* ZipOutputStream.java:  Start implementation.\n\nFrom-SVN: r26794", "tree": {"sha": "7bf82f617750267bd127d5d9683c53b930a2ef48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bf82f617750267bd127d5d9683c53b930a2ef48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7f65c793e4dc8760ba3860b4d3c1f69971a8302", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7f65c793e4dc8760ba3860b4d3c1f69971a8302", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7f65c793e4dc8760ba3860b4d3c1f69971a8302", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7f65c793e4dc8760ba3860b4d3c1f69971a8302/comments", "author": null, "committer": null, "parents": [{"sha": "0e9c6b0bf062a7627c286049abdb12b63bc2da65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e9c6b0bf062a7627c286049abdb12b63bc2da65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e9c6b0bf062a7627c286049abdb12b63bc2da65"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "9eb34bab4dbb4999b10f95330129f11b5c6bd469", "filename": "libjava/java/util/zip/ZipEntry.java", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7f65c793e4dc8760ba3860b4d3c1f69971a8302/libjava%2Fjava%2Futil%2Fzip%2FZipEntry.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7f65c793e4dc8760ba3860b4d3c1f69971a8302/libjava%2Fjava%2Futil%2Fzip%2FZipEntry.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FZipEntry.java?ref=f7f65c793e4dc8760ba3860b4d3c1f69971a8302", "patch": "@@ -33,6 +33,7 @@\n   String name;\n   long size = -1;\n   long time = -1;\n+  long relativeOffset = -1;\n \n   ZipEntry next;\n \n@@ -80,5 +81,36 @@ public boolean isDirectory ()\n \n   public void setTime (long time) { this.time = time; }\n \n+  private final static short[] daysToMonthStart = {\n+    //Jan Feb Mar    Apr      May         Jun         Jul\n+    0,    31, 31+28, 2*31+28, 2*31+28+30, 3*31+28+30, 3*31+28+2*30,\n+    // Aug        Sep           Oct           Nov           Dec\n+    4*31+28+2*30, 5*31+28+2*30, 5*31+28+3*30, 6*31+28+3*30, 6*31+28+4*30};\n+\n+  /** Convert a DOS-style type value to milliseconds since 1970. */\n+  static long timeFromDOS (int date, int time)\n+  {\n+    int sec = 2 * (time & 0x1f);\n+    int min = (time >> 5) & 0x3f;\n+    int hrs = (time >> 11) & 0x1f;\n+    int day = date & 0x1f;\n+    int mon = ((date >> 5) & 0xf) - 1;\n+    int year = ((date >> 9) & 0x7f) + 10;  /* Since 1970. */\n+\n+    // Guard against invalid or missing date causing IndexOutOfBoundsException.\n+    if (mon < 0 || mon > 11)\n+      return -1;\n+\n+    long mtime = (((hrs * 60) + min) * 60 + sec) * 1000;\n+\n+    // Leap year calculations are rather trivial in this case ...\n+    int days = 365 * year + ((year+1)>>2);\n+    days += daysToMonthStart[mon];\n+    if ((year & 3) == 0 && mon > 1)\n+      days++;\n+    days += day;\n+    return (days * 24*60*60L + ((hrs * 60) + min) * 60 + sec) * 1000L;\n+  }\n+\n   public String toString () { return name; }\n }"}]}