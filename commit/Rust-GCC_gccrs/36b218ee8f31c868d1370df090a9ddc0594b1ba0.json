{"sha": "36b218ee8f31c868d1370df090a9ddc0594b1ba0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZiMjE4ZWU4ZjMxYzg2OGQxMzcwZGYwOTBhOWRkYzA1OTRiMWJhMA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2015-01-14T22:28:07Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2015-01-14T22:28:07Z"}, "message": "re PR c++/58671 ([c++11] ICE with thread_local and self-referential variable initialization)\n\n/cp\n2015-01-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/58671\n\t* decl2.c (var_defined_without_dynamic_init): Handle gracefully\n\tself-initialization.\n\n/testsuite\n2015-01-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/58671\n\t* g++.dg/tls/thread_local-ice3.C: New.\n\nFrom-SVN: r219621", "tree": {"sha": "96e1255b764e798c3eafe4ea4ecfcc39128e60e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96e1255b764e798c3eafe4ea4ecfcc39128e60e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36b218ee8f31c868d1370df090a9ddc0594b1ba0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36b218ee8f31c868d1370df090a9ddc0594b1ba0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36b218ee8f31c868d1370df090a9ddc0594b1ba0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36b218ee8f31c868d1370df090a9ddc0594b1ba0/comments", "author": null, "committer": null, "parents": [{"sha": "622ef5dae9892df79bc88f7c36a5f6d7d37aa6e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/622ef5dae9892df79bc88f7c36a5f6d7d37aa6e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/622ef5dae9892df79bc88f7c36a5f6d7d37aa6e7"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "02b4fac907b7dd8b4464eb2b42918c6a45fc1ce6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36b218ee8f31c868d1370df090a9ddc0594b1ba0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36b218ee8f31c868d1370df090a9ddc0594b1ba0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=36b218ee8f31c868d1370df090a9ddc0594b1ba0", "patch": "@@ -1,3 +1,9 @@\n+2015-01-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/58671\n+\t* decl2.c (var_defined_without_dynamic_init): Handle gracefully\n+\tself-initialization.\n+\n 2015-01-13  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/64356"}, {"sha": "a7bc08f6e56f4af532db0224b60a737e0bbab848", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36b218ee8f31c868d1370df090a9ddc0594b1ba0/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36b218ee8f31c868d1370df090a9ddc0594b1ba0/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=36b218ee8f31c868d1370df090a9ddc0594b1ba0", "patch": "@@ -3094,8 +3094,11 @@ var_defined_without_dynamic_init (tree var)\n      counts as dynamic initialization.  */\n   if (TYPE_HAS_NONTRIVIAL_DESTRUCTOR (TREE_TYPE (var)))\n     return false;\n-  /* If it's in this TU, its initializer has been processed.  */\n-  gcc_assert (DECL_INITIALIZED_P (var));\n+  /* If it's in this TU, its initializer has been processed, unless\n+     it's a case of self-initialization, then DECL_INITIALIZED_P is\n+     false while the initializer is handled by finish_id_expression.  */\n+  if (!DECL_INITIALIZED_P (var))\n+    return false;\n   /* If it has no initializer or a constant one, it's not dynamic.  */\n   return (!DECL_NONTRIVIALLY_INITIALIZED_P (var)\n \t  || DECL_INITIALIZED_BY_CONSTANT_EXPRESSION_P (var));"}, {"sha": "e58d7098f9814a79c025579cfef4c1b2d96de6c6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36b218ee8f31c868d1370df090a9ddc0594b1ba0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36b218ee8f31c868d1370df090a9ddc0594b1ba0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=36b218ee8f31c868d1370df090a9ddc0594b1ba0", "patch": "@@ -1,3 +1,8 @@\n+2015-01-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/58671\n+\t* g++.dg/tls/thread_local-ice3.C: New.\n+\n 2015-01-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* gcc.target/i386/fentry-override.c: Properly place {} in target\n@@ -9,7 +14,6 @@\n \t* gcc.dg/atomic-invalid.c: Check for invalid memory model\n \twarnings instead of errors.\n \n-\n 2015-01-14  Ilya Verbin  <ilya.verbin@intel.com>\n \n \t* lib/target-supports.exp (check_effective_target_lto): Check for -flto\n@@ -64,7 +68,7 @@\n \n \tPR lto/64415\n \t* gcc.dg/lto/pr64415_0.c: New testcase.\n-\t* gcc.dg/lto/pr64415_1.c: Likewise. \n+\t* gcc.dg/lto/pr64415_1.c: Likewise.\n \n 2015-01-14  Martin Liska  <mliska@suse.cz>\n "}, {"sha": "d061a239f6c2dddc4d4eee5380a582996374c835", "filename": "gcc/testsuite/g++.dg/tls/thread_local-ice3.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36b218ee8f31c868d1370df090a9ddc0594b1ba0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fthread_local-ice3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36b218ee8f31c868d1370df090a9ddc0594b1ba0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fthread_local-ice3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fthread_local-ice3.C?ref=36b218ee8f31c868d1370df090a9ddc0594b1ba0", "patch": "@@ -0,0 +1,5 @@\n+// PR c++/58671\n+// { dg-do compile { target c++11 } }\n+// { dg-require-effective-target tls }\n+\n+thread_local int i = i;"}]}