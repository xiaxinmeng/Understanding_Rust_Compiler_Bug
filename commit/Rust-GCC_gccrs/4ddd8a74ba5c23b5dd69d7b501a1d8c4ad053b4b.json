{"sha": "4ddd8a74ba5c23b5dd69d7b501a1d8c4ad053b4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRkZDhhNzRiYTVjMjNiNWRkNjlkN2I1MDFhMWQ4YzRhZDA1M2I0Yg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-04-18T00:50:31Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-04-18T00:50:31Z"}, "message": "re PR c++/48531 ([C++0x][SFINAE] Hard errors with arrays of unknown bound)\n\n\tPR c++/48531\n\t* typeck2.c (build_functional_cast): Disallow array type.\n\nFrom-SVN: r172632", "tree": {"sha": "cbdcad160c4dcac6149cddb741dbdbd9a60c22f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbdcad160c4dcac6149cddb741dbdbd9a60c22f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ddd8a74ba5c23b5dd69d7b501a1d8c4ad053b4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ddd8a74ba5c23b5dd69d7b501a1d8c4ad053b4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ddd8a74ba5c23b5dd69d7b501a1d8c4ad053b4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ddd8a74ba5c23b5dd69d7b501a1d8c4ad053b4b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "991e015686a39b50e4a756b463d250aeb07267f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/991e015686a39b50e4a756b463d250aeb07267f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/991e015686a39b50e4a756b463d250aeb07267f6"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "9364d01ac19497157f12cc2e111c6ef9975e0f9a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ddd8a74ba5c23b5dd69d7b501a1d8c4ad053b4b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ddd8a74ba5c23b5dd69d7b501a1d8c4ad053b4b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4ddd8a74ba5c23b5dd69d7b501a1d8c4ad053b4b", "patch": "@@ -1,5 +1,8 @@\n 2011-04-17  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/48531\n+\t* typeck2.c (build_functional_cast): Disallow array type.\n+\n \t* tree.c (get_target_expr): Handle VEC_INIT_EXPR.\n \n 2011-04-17  Jan Hubicka  <jh@suse.cz>"}, {"sha": "3280d9b5d0dc221dd089496ab8ad045270ea5902", "filename": "gcc/cp/init.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ddd8a74ba5c23b5dd69d7b501a1d8c4ad053b4b/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ddd8a74ba5c23b5dd69d7b501a1d8c4ad053b4b/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=4ddd8a74ba5c23b5dd69d7b501a1d8c4ad053b4b", "patch": "@@ -369,6 +369,8 @@ build_value_init (tree type, tsubst_flags_t complain)\n tree\n build_value_init_noctor (tree type, tsubst_flags_t complain)\n {\n+  /* FIXME the class and array cases should just use digest_init once it is\n+     SFINAE-enabled.  */\n   if (CLASS_TYPE_P (type))\n     {\n       gcc_assert (!TYPE_NEEDS_CONSTRUCTING (type));\n@@ -450,7 +452,9 @@ build_value_init_noctor (tree type, tsubst_flags_t complain)\n \t  if (ce->value == error_mark_node)\n \t    return error_mark_node;\n \n-\t  /* The gimplifier can't deal with a RANGE_EXPR of TARGET_EXPRs.  */\n+\t  /* We shouldn't have gotten here for anything that would need\n+\t     non-trivial initialization, and gimplify_init_ctor_preeval\n+\t     would need to be fixed to allow it.  */\n \t  gcc_assert (TREE_CODE (ce->value) != TARGET_EXPR\n \t\t      && TREE_CODE (ce->value) != AGGR_INIT_EXPR);\n \t}"}, {"sha": "f0b67f73e21a0238539f73c4f58a8fdea49c53cf", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ddd8a74ba5c23b5dd69d7b501a1d8c4ad053b4b/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ddd8a74ba5c23b5dd69d7b501a1d8c4ad053b4b/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=4ddd8a74ba5c23b5dd69d7b501a1d8c4ad053b4b", "patch": "@@ -1534,6 +1534,15 @@ build_functional_cast (tree exp, tree parms, tsubst_flags_t complain)\n   else\n     type = exp;\n \n+  /* We need to check this explicitly, since value-initialization of\n+     arrays is allowed in other situations.  */\n+  if (TREE_CODE (type) == ARRAY_TYPE)\n+    {\n+      if (complain & tf_error)\n+\terror (\"functional cast to array type %qT\", type);\n+      return error_mark_node;\n+    }\n+\n   if (processing_template_decl)\n     {\n       tree t;"}, {"sha": "5a28f60e49aa413cf3810e4e80030e38f3ab79b4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ddd8a74ba5c23b5dd69d7b501a1d8c4ad053b4b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ddd8a74ba5c23b5dd69d7b501a1d8c4ad053b4b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4ddd8a74ba5c23b5dd69d7b501a1d8c4ad053b4b", "patch": "@@ -1,3 +1,7 @@\n+2011-04-17  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/sfinae16.C: New.\n+\n 2011-04-17  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* gcc.target/mips/reg-var-1.c: New test."}, {"sha": "6470567b7a2f3395de2494a7dc9d86f50ec1b29d", "filename": "gcc/testsuite/g++.dg/cpp0x/sfinae16.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ddd8a74ba5c23b5dd69d7b501a1d8c4ad053b4b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ddd8a74ba5c23b5dd69d7b501a1d8c4ad053b4b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae16.C?ref=4ddd8a74ba5c23b5dd69d7b501a1d8c4ad053b4b", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/48531\n+// { dg-options -std=c++0x }\n+\n+template<class T,\n+  class = decltype(T())\n+>\n+char f(int);\n+\n+template<class>\n+double f(...);\n+\n+struct B2 {\n+  B2(...);\n+};\n+\n+#define SA(X) static_assert ((X), #X);\n+SA(sizeof(f<B2[2]>(0)) != 1);"}]}