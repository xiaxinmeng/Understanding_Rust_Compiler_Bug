{"sha": "625d0ab2fd2894879590ccce150e71516c504288", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI1ZDBhYjJmZDI4OTQ4Nzk1OTBjY2NlMTUwZTcxNTE2YzUwNDI4OA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-01-24T20:52:37Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-01-24T20:52:37Z"}, "message": "compiler: Simple statement in type switch is in different block.\n\nFrom-SVN: r183496", "tree": {"sha": "7878b9c212fd37ad5c2c2305ce698fd7abfa42dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7878b9c212fd37ad5c2c2305ce698fd7abfa42dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/625d0ab2fd2894879590ccce150e71516c504288", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/625d0ab2fd2894879590ccce150e71516c504288", "html_url": "https://github.com/Rust-GCC/gccrs/commit/625d0ab2fd2894879590ccce150e71516c504288", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/625d0ab2fd2894879590ccce150e71516c504288/comments", "author": null, "committer": null, "parents": [{"sha": "1efaf134d4d4037fd219f518aaeccab8591b1c02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1efaf134d4d4037fd219f518aaeccab8591b1c02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1efaf134d4d4037fd219f518aaeccab8591b1c02"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "06faeb61e5872b0a0b343e6c43757f076bd34aff", "filename": "gcc/go/gofrontend/parse.cc", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/625d0ab2fd2894879590ccce150e71516c504288/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/625d0ab2fd2894879590ccce150e71516c504288/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fparse.cc?ref=625d0ab2fd2894879590ccce150e71516c504288", "patch": "@@ -4057,6 +4057,7 @@ Parse::switch_stat(Label* label)\n   Expression* switch_val = NULL;\n   bool saw_send_stmt;\n   Type_switch type_switch;\n+  bool have_type_switch_block = false;\n   if (this->simple_stat_may_start_here())\n     {\n       switch_val = this->simple_stat(false, &saw_send_stmt, NULL,\n@@ -4099,7 +4100,14 @@ Parse::switch_stat(Label* label)\n \t\t\t\t\t\t\t     id_loc));\n \t      if (is_coloneq)\n \t\t{\n-\t\t  // This must be a TypeSwitchGuard.\n+\t\t  // This must be a TypeSwitchGuard.  It is in a\n+\t\t  // different block from any initial SimpleStat.\n+\t\t  if (saw_simple_stat)\n+\t\t    {\n+\t\t      this->gogo_->start_block(id_loc);\n+\t\t      have_type_switch_block = true;\n+\t\t    }\n+\n \t\t  switch_val = this->simple_stat(false, &saw_send_stmt, NULL,\n \t\t\t\t\t\t &type_switch);\n \t\t  if (!type_switch.found)\n@@ -4142,13 +4150,23 @@ Parse::switch_stat(Label* label)\n \t  if (this->peek_token()->is_op(OPERATOR_SEMICOLON))\n \t    this->advance_token();\n \t  if (!this->peek_token()->is_op(OPERATOR_LCURLY))\n-\t    return;\n+\t    {\n+\t      if (have_type_switch_block)\n+\t\tthis->gogo_->add_block(this->gogo_->finish_block(location),\n+\t\t\t\t       location);\n+\t      this->gogo_->add_block(this->gogo_->finish_block(location),\n+\t\t\t\t     location);\n+\t      return;\n+\t    }\n \t  if (type_switch.found)\n \t    type_switch.expr = Expression::make_error(location);\n \t}\n       else\n \t{\n \t  error_at(this->location(), \"expected %<{%>\");\n+\t  if (have_type_switch_block)\n+\t    this->gogo_->add_block(this->gogo_->finish_block(this->location()),\n+\t\t\t\t   location);\n \t  this->gogo_->add_block(this->gogo_->finish_block(this->location()),\n \t\t\t\t location);\n \t  return;\n@@ -4165,6 +4183,10 @@ Parse::switch_stat(Label* label)\n   if (statement != NULL)\n     this->gogo_->add_statement(statement);\n \n+  if (have_type_switch_block)\n+    this->gogo_->add_block(this->gogo_->finish_block(this->location()),\n+\t\t\t   location);\n+\n   this->gogo_->add_block(this->gogo_->finish_block(this->location()),\n \t\t\t location);\n }"}]}