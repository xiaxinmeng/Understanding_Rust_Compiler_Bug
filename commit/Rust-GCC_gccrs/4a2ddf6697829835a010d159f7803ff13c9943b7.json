{"sha": "4a2ddf6697829835a010d159f7803ff13c9943b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGEyZGRmNjY5NzgyOTgzNWEwMTBkMTU5Zjc4MDNmZjEzYzk5NDNiNw==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2005-07-04T13:28:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-07-04T13:28:00Z"}, "message": "exp_intr.adb (Expand_Unc_Deallocation): If the designated type is controlled...\n\n2005-07-04  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_intr.adb (Expand_Unc_Deallocation): If the designated type is\n\tcontrolled, indicate the expected type of the dereference that is\n\tcreated for the call to Deep_Finalize, to prevent spurious errors when\n\tthe designated type is private and completed with a derivation from\n\tanother private type.\n\nFrom-SVN: r101579", "tree": {"sha": "38e64f2e6dd2f26517d091c0b94c090934e9678b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38e64f2e6dd2f26517d091c0b94c090934e9678b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a2ddf6697829835a010d159f7803ff13c9943b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a2ddf6697829835a010d159f7803ff13c9943b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a2ddf6697829835a010d159f7803ff13c9943b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a2ddf6697829835a010d159f7803ff13c9943b7/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "64dd539571685b9a8b052352241b1f110f6d7002", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64dd539571685b9a8b052352241b1f110f6d7002", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64dd539571685b9a8b052352241b1f110f6d7002"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "ea5d74f8b97678f0dd5da15f57d74ed174364676", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a2ddf6697829835a010d159f7803ff13c9943b7/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a2ddf6697829835a010d159f7803ff13c9943b7/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=4a2ddf6697829835a010d159f7803ff13c9943b7", "patch": "@@ -664,12 +664,21 @@ package body Exp_Intr is\n \n          --  If the type is tagged, then we must force dispatching on the\n          --  finalization call because the designated type may not be the\n-         --  actual type of the object\n+         --  actual type of the object.\n \n          if Is_Tagged_Type (Desig_T)\n            and then not Is_Class_Wide_Type (Desig_T)\n          then\n             Deref := Unchecked_Convert_To (Class_Wide_Type (Desig_T), Deref);\n+\n+         elsif not Is_Tagged_Type (Desig_T) then\n+\n+            --  Set type of result, to force a conversion when needed (see\n+            --  exp_ch7, Convert_View), given that Deep_Finalize may be\n+            --  inherited from the parent type, and we need the type of the\n+            --  expression to see whether the conversion is in fact needed.\n+\n+            Set_Etype (Deref, Desig_T);\n          end if;\n \n          Free_Cod :="}]}