{"sha": "faf4220c7236e48607dd8e286f7f555489d3dbef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFmNDIyMGM3MjM2ZTQ4NjA3ZGQ4ZTI4NmY3ZjU1NTQ4OWQzZGJlZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-03-18T13:54:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-03-18T13:54:12Z"}, "message": "re PR tree-optimization/65450 (Unaligned access with -O3 -mtune=k8)\n\n\tPR tree-optimization/65450\n\t* tree-vect-data-refs.c (vect_duplicate_ssa_name_ptr_info): New\n\tfunction.\n\t(vect_create_addr_base_for_vector_ref, vect_create_data_ref_ptr): Use\n\tit instead of duplicate_ssa_name_ptr_info.\n\n\t* gfortran.dg/pr65450.f90: New test.\n\nFrom-SVN: r221490", "tree": {"sha": "4e876e1355cc22a0012f925aa466f8b6450a46e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e876e1355cc22a0012f925aa466f8b6450a46e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/faf4220c7236e48607dd8e286f7f555489d3dbef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faf4220c7236e48607dd8e286f7f555489d3dbef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faf4220c7236e48607dd8e286f7f555489d3dbef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faf4220c7236e48607dd8e286f7f555489d3dbef/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "43939937e8c9585f781534e96539cadefb653115", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43939937e8c9585f781534e96539cadefb653115", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43939937e8c9585f781534e96539cadefb653115"}], "stats": {"total": 76, "additions": 65, "deletions": 11}, "files": [{"sha": "0e9955bcdc49dcbd7afd2144a947bc5bcf415568", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf4220c7236e48607dd8e286f7f555489d3dbef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf4220c7236e48607dd8e286f7f555489d3dbef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=faf4220c7236e48607dd8e286f7f555489d3dbef", "patch": "@@ -1,5 +1,11 @@\n 2015-03-18  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/65450\n+\t* tree-vect-data-refs.c (vect_duplicate_ssa_name_ptr_info): New\n+\tfunction.\n+\t(vect_create_addr_base_for_vector_ref, vect_create_data_ref_ptr): Use\n+\tit instead of duplicate_ssa_name_ptr_info.\n+\n \tPR target/65222\n \t* doc/invoke.texi: Add knl as x86 -march=/-mtune= CPU type.\n "}, {"sha": "c4d283c0d95fd117996b7a7ac1cde76b03253d16", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf4220c7236e48607dd8e286f7f555489d3dbef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf4220c7236e48607dd8e286f7f555489d3dbef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=faf4220c7236e48607dd8e286f7f555489d3dbef", "patch": "@@ -1,5 +1,8 @@\n 2015-03-18  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/65450\n+\t* gfortran.dg/pr65450.f90: New test.\n+\n \tPR target/65078\n \t* gcc.target/i386/pr65078-1.c: New test.\n \t* gcc.target/i386/pr65078-2.c: New test."}, {"sha": "700fc64789cfd50eb48f6445525e2a2bcfdb9243", "filename": "gcc/testsuite/gfortran.dg/pr65450.f90", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf4220c7236e48607dd8e286f7f555489d3dbef/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr65450.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf4220c7236e48607dd8e286f7f555489d3dbef/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr65450.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr65450.f90?ref=faf4220c7236e48607dd8e286f7f555489d3dbef", "patch": "@@ -0,0 +1,35 @@\n+! PR tree-optimization/65450\n+! { dg-do run }\n+! { dg-additional-options \"-mtune=amdfam10\" { target x86_64-*-* i?86-*-* } }\n+\n+program pr65450\n+  integer :: n, m, o, i, k\n+  double precision :: u(500,60,3), h(500,60,3)\n+  double precision :: v(500,60)\n+  u = 0\n+  h = 0\n+  o = 1\n+  m = 2\n+  n = 3\n+  do k = 1, 50\n+    v = foo (u(:,:,m))\n+    u(2:499,1:60,n) = u(2:499,1:60,o)+16.d0\n+    h(1:500,2:59,n) = h(1:500,2:59,o)-4.d0*v(1:500,2:59)-32.0d0\n+    i = o\n+    o = m\n+    m = n\n+    n = i\n+  end do\n+  if (abs (v(17, 23) + h(17, 23, 2) + 768.0d0) > 0.5d0) call abort\n+contains\n+  function foo(a)\n+    double precision :: a(:,:)\n+    double precision :: foo(size(a,dim=1),size(a,dim=2))\n+    integer :: i, j\n+    i = size(a,dim=1)\n+    j = size(a,dim=2)\n+    foo(2:i-1,1:j) = a(3:i,1:j)-a(1:i-2,1:j)\n+    foo(1,1:j) = 2*(a(2,1:j)-a(1,1:j))\n+    foo(i,1:j) = 2*(a(i,1:j)-a(i-1,1:j))\n+  end function foo\n+end program pr65450"}, {"sha": "094275e84394384c39f74457cebf8c0afde8f3b2", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 21, "deletions": 11, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf4220c7236e48607dd8e286f7f555489d3dbef/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf4220c7236e48607dd8e286f7f555489d3dbef/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=faf4220c7236e48607dd8e286f7f555489d3dbef", "patch": "@@ -3845,6 +3845,20 @@ vect_get_new_vect_var (tree type, enum vect_var_kind var_kind, const char *name)\n   return new_vect_var;\n }\n \n+/* Duplicate ptr info and set alignment/misaligment on NAME from DR.  */\n+\n+static void\n+vect_duplicate_ssa_name_ptr_info (tree name, data_reference *dr,\n+\t\t\t\t  stmt_vec_info stmt_info)\n+{\n+  duplicate_ssa_name_ptr_info (name, DR_PTR_INFO (dr));\n+  unsigned int align = TYPE_ALIGN_UNIT (STMT_VINFO_VECTYPE (stmt_info));\n+  int misalign = DR_MISALIGNMENT (dr);\n+  if (misalign == -1)\n+    mark_ptr_info_alignment_unknown (SSA_NAME_PTR_INFO (name));\n+  else\n+    set_ptr_info_alignment (SSA_NAME_PTR_INFO (name), align, misalign);\n+}\n \n /* Function vect_create_addr_base_for_vector_ref.\n \n@@ -3964,13 +3978,9 @@ vect_create_addr_base_for_vector_ref (gimple stmt,\n   if (DR_PTR_INFO (dr)\n       && TREE_CODE (addr_base) == SSA_NAME)\n     {\n-      duplicate_ssa_name_ptr_info (addr_base, DR_PTR_INFO (dr));\n-      unsigned int align = TYPE_ALIGN_UNIT (STMT_VINFO_VECTYPE (stmt_info));\n-      int misalign = DR_MISALIGNMENT (dr);\n-      if (offset || byte_offset || (misalign == -1))\n+      vect_duplicate_ssa_name_ptr_info (addr_base, dr, stmt_info);\n+      if (offset || byte_offset)\n \tmark_ptr_info_alignment_unknown (SSA_NAME_PTR_INFO (addr_base));\n-      else\n-\tset_ptr_info_alignment (SSA_NAME_PTR_INFO (addr_base), align, misalign);\n     }\n \n   if (dump_enabled_p ())\n@@ -4210,7 +4220,7 @@ vect_create_data_ref_ptr (gimple stmt, tree aggr_type, struct loop *at_loop,\n       aggr_ptr_init = make_ssa_name (aggr_ptr, vec_stmt);\n       /* Copy the points-to information if it exists. */\n       if (DR_PTR_INFO (dr))\n-\tduplicate_ssa_name_ptr_info (aggr_ptr_init, DR_PTR_INFO (dr));\n+\tvect_duplicate_ssa_name_ptr_info (aggr_ptr_init, dr, stmt_info);\n       gimple_assign_set_lhs (vec_stmt, aggr_ptr_init);\n       if (pe)\n \t{\n@@ -4253,8 +4263,8 @@ vect_create_data_ref_ptr (gimple stmt, tree aggr_type, struct loop *at_loop,\n       /* Copy the points-to information if it exists. */\n       if (DR_PTR_INFO (dr))\n \t{\n-\t  duplicate_ssa_name_ptr_info (indx_before_incr, DR_PTR_INFO (dr));\n-\t  duplicate_ssa_name_ptr_info (indx_after_incr, DR_PTR_INFO (dr));\n+\t  vect_duplicate_ssa_name_ptr_info (indx_before_incr, dr, stmt_info);\n+\t  vect_duplicate_ssa_name_ptr_info (indx_after_incr, dr, stmt_info);\n \t}\n       if (ptr_incr)\n \t*ptr_incr = incr;\n@@ -4283,8 +4293,8 @@ vect_create_data_ref_ptr (gimple stmt, tree aggr_type, struct loop *at_loop,\n       /* Copy the points-to information if it exists. */\n       if (DR_PTR_INFO (dr))\n \t{\n-\t  duplicate_ssa_name_ptr_info (indx_before_incr, DR_PTR_INFO (dr));\n-\t  duplicate_ssa_name_ptr_info (indx_after_incr, DR_PTR_INFO (dr));\n+\t  vect_duplicate_ssa_name_ptr_info (indx_before_incr, dr, stmt_info);\n+\t  vect_duplicate_ssa_name_ptr_info (indx_after_incr, dr, stmt_info);\n \t}\n       if (ptr_incr)\n \t*ptr_incr = incr;"}]}