{"sha": "3bb5c7a16975806acf62a1d371c54b4402f86508", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JiNWM3YTE2OTc1ODA2YWNmNjJhMWQzNzFjNTRiNDQwMmY4NjUwOA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2002-11-07T08:45:19Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2002-11-07T08:45:19Z"}, "message": "ICC_Profile.java: Added missing constants.\n\n2002-11-07  Michael Koch <konqueror@gmx.de>\n\n\t* java/awt/color/ICC_Profile.java:\n\tAdded missing constants.\n\t* java/awt/color/ICC_ColorSpace.java\n\t(getMinValue): Added dummy implementation.\n\t(getMaxValue): Added dummy implementation.\n\t* java/awt/datatransfer/DataFlavor.java\n\t(imageFlavor): Added.\n\t(isMimeTypeEqual): Must be final.\n\t(getDefaultRepresentationClass): Must be non-static.\n\t(getDefaultRepresentationClassAsString): Must be non-static.\n\t* java/awt/dnd/DragSourceContext.java\n\t(dragExit): Corrected argument.\n\t(dragDropEnd): Corrected argument.\n\t* java/awt/dnd/DragSourceListener.java.java\n\t(dragExit): Corrected argument.\n\t(dragDropEnd): Corrected argument.\n\t* java/awt/font/TextHitInfo.java\n\t(toString): Added stubbed implementation.\n\t* java/awt/geom/PathIterator.java:\n\tThe constants must be static.\n\t* java/awt/image/VolatileImage.java\n\t(IMAGE_INCOMPATIBLE): Fixed typo.\n\t* java/awt/image/renderable/RenderableImage.java\n\t(HINTS_OBSERVED): Must be static.\n\t* java/beans/BeanInfo.java:\n\tConstants must be final.\n\nFrom-SVN: r58885", "tree": {"sha": "cddd30213d89bcf18b520a827dc2080baa5af0b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cddd30213d89bcf18b520a827dc2080baa5af0b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bb5c7a16975806acf62a1d371c54b4402f86508", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bb5c7a16975806acf62a1d371c54b4402f86508", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bb5c7a16975806acf62a1d371c54b4402f86508", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bb5c7a16975806acf62a1d371c54b4402f86508/comments", "author": null, "committer": null, "parents": [{"sha": "d7899d8a4064eeb0640aa97f35595582f4cb6153", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7899d8a4064eeb0640aa97f35595582f4cb6153", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7899d8a4064eeb0640aa97f35595582f4cb6153"}], "stats": {"total": 215, "additions": 195, "deletions": 20}, "files": [{"sha": "5ebd6f8423b6db52fe71c5adb46c5dd4c10874ae", "filename": "libjava/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb5c7a16975806acf62a1d371c54b4402f86508/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb5c7a16975806acf62a1d371c54b4402f86508/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=3bb5c7a16975806acf62a1d371c54b4402f86508", "patch": "@@ -1,3 +1,32 @@\n+2002-11-07  Michael Koch <konqueror@gmx.de>\n+\n+\t* java/awt/color/ICC_Profile.java:\n+\tAdded missing constants.\n+\t* java/awt/color/ICC_ColorSpace.java\n+\t(getMinValue): Added dummy implementation.\n+\t(getMaxValue): Added dummy implementation.\n+\t* java/awt/datatransfer/DataFlavor.java\n+\t(imageFlavor): Added.\n+\t(isMimeTypeEqual): Must be final.\n+\t(getDefaultRepresentationClass): Must be non-static.\n+\t(getDefaultRepresentationClassAsString): Must be non-static.\n+\t* java/awt/dnd/DragSourceContext.java\n+\t(dragExit): Corrected argument.\n+\t(dragDropEnd): Corrected argument.\n+\t* java/awt/dnd/DragSourceListener.java.java\n+\t(dragExit): Corrected argument.\n+\t(dragDropEnd): Corrected argument.\n+\t* java/awt/font/TextHitInfo.java\n+\t(toString): Added stubbed implementation.\n+\t* java/awt/geom/PathIterator.java:\n+\tThe constants must be static.\n+\t* java/awt/image/VolatileImage.java\n+\t(IMAGE_INCOMPATIBLE): Fixed typo.\n+\t* java/awt/image/renderable/RenderableImage.java\n+\t(HINTS_OBSERVED): Must be static.\n+\t* java/beans/BeanInfo.java:\n+\tConstants must be final.\n+\n 2002-11-06  Tom Tromey  <tromey@redhat.com>\n \n \tFrom svens@it.uu.se.  For PR libgcj/8481."}, {"sha": "d3fa10f51da7ae9e0c1ad0425bb9c5eb1bc1a941", "filename": "libjava/java/awt/color/ICC_ColorSpace.java", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb5c7a16975806acf62a1d371c54b4402f86508/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ColorSpace.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb5c7a16975806acf62a1d371c54b4402f86508/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ColorSpace.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ColorSpace.java?ref=3bb5c7a16975806acf62a1d371c54b4402f86508", "patch": "@@ -78,4 +78,28 @@ public float[] fromCIEXYZ(float[] colorvalue)\n     // FIXME: Not implemented\n     throw new UnsupportedOperationException();\n   }\n+\n+  /**\n+   * @param component The index of the color component\n+   * \n+   * @exception IllegalArgumentException If <code>component<code> is less\n+   * then 0 or greater then <code>numComponents - 1</code>\n+   */\n+  public float getMinValue (int component)\n+  {\n+    // FIXME: Not implemented\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  /**\n+   * @param component The index of the color component\n+   * \n+   * @exception IllegalArgumentException If <code>component<code> is less\n+   * then 0 or greater then <code>numComponents - 1</code>\n+   */\n+  public float getMaxValue (int component)\n+  {\n+    // FIXME: Not implemented\n+    throw new UnsupportedOperationException();\n+  }\n }"}, {"sha": "f4ed64f679921a50338b2ede912f8fdcbe4e5b92", "filename": "libjava/java/awt/color/ICC_Profile.java", "status": "modified", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb5c7a16975806acf62a1d371c54b4402f86508/libjava%2Fjava%2Fawt%2Fcolor%2FICC_Profile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb5c7a16975806acf62a1d371c54b4402f86508/libjava%2Fjava%2Fawt%2Fcolor%2FICC_Profile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fcolor%2FICC_Profile.java?ref=3bb5c7a16975806acf62a1d371c54b4402f86508", "patch": "@@ -43,6 +43,118 @@\n  */\n public class ICC_Profile\n {\n+  public static final int CLASS_ABSTRACT = 5;\n+  public static final int CLASS_COLORSPACECONVERSION = 4;\n+  public static final int CLASS_DEVICELINK = 3;\n+  public static final int CLASS_DISPLAY = 1;\n+  public static final int CLASS_INPUT = 0;\n+  public static final int CLASS_NAMEDCOLOR = 6;\n+  public static final int CLASS_OUTPUT = 2;\n+  \n+  public static final int icAbsoluteColorimetric = 3;\n+  public static final int icCurveCount = 8;\n+  public static final int icCurveData = 12;\n+  public static final int icHdrAttributes = 56;\n+  public static final int icHdrCmmId = 4;\n+  public static final int icHdrColorSpace = 16;\n+  public static final int icHdrCreator = 80;\n+  public static final int icHdrDate = 24;\n+  public static final int icHdrDeviceClass = 12;\n+  public static final int icHdrFlags = 44;\n+  public static final int icHdrIlluminant = 68;\n+  public static final int icHdrMagic = 36;\n+  public static final int icHdrManufacturer = 48;\n+  public static final int icHdrModel = 52;\n+  public static final int icHdrPcs = 20;\n+  public static final int icHdrPlatform = 40;\n+  public static final int icHdrRenderingIntent = 64;\n+  public static final int icHdrSize = 0;\n+  public static final int icHdrVersion = 8;\n+  public static final int icPerceptual = 0;\n+  public static final int icRelativeColorimetric = 1;\n+  public static final int icSaturation = 2;\n+  public static final int icSigAbstractClass = 1633842036;\n+  public static final int icSigAToB0Tag = 1093812784;\n+  public static final int icSigAToB1Tag = 1093812785;\n+  public static final int icSigAToB2Tag = 1093812786;\n+  public static final int icSigBlueColorantTag = 1649957210;\n+  public static final int icSigBlueTRCTag = 1649693251;\n+  public static final int icSigBToA0Tag = 1110589744;\n+  public static final int icSigBToA1Tag = 1110589745;\n+  public static final int icSigBToA2Tag = 1110589746;\n+  public static final int icSigCalibrationDateTimeTag = 1667329140;\n+  public static final int icSigCharTargetTag = 1952543335;\n+  public static final int icSigChromaticityTag = 1667789421;\n+  public static final int icSigCmyData = 1129142560;\n+  public static final int icSigCmykData = 1129142603;\n+  public static final int icSigColorSpaceClass = 1936744803;\n+  public static final int icSigCopyrightTag = 1668313716;\n+  public static final int icSigCrdInfoTag = 1668441193;\n+  public static final int icSigDeviceMfgDescTag = 1684893284;\n+  public static final int icSigDeviceModelDescTag = 1684890724;\n+  public static final int icSigDeviceSettingsTag = 1684371059;\n+  public static final int icSigDisplayClass = 1835955314;\n+  public static final int icSigGamutTag = 1734438260;\n+  public static final int icSigGrayData = 1196573017;\n+  public static final int icSigGrayTRCTag = 1800688195;\n+  public static final int icSigGreenColorantTag = 1733;\n+  public static final int icSigGreenTRCTag = 1733579331;\n+  public static final int icSigHead = 1751474532;\n+  public static final int icSigHlsData = 1212961568;\n+  public static final int icSigHsvData = 1213421088;\n+  public static final int icSigInputClass = 1935896178;\n+  public static final int icSigLabData = 1281450528;\n+  public static final int icSigLinkClass = 1818848875;\n+  public static final int icSigLuminanceTag = 1819635049;\n+  public static final int icSigLuvData = 1282766368;\n+  public static final int icSigMeasurementTag = 1835360627;\n+  public static final int icSigMediaBlackPointTag = 1651208308;\n+  public static final int icSigMediaWhitePointTag = 2004119668;\n+  public static final int icSigNamedColor2Tag = 1852009522;\n+  public static final int icSigNamedColorClass = 1852662636;\n+  public static final int icSigOutputClass = 1886549106;\n+  public static final int icSigOutputResponseTag = 1919251312;\n+  public static final int icSigPreview0Tag = 1886545200;\n+  public static final int icSigPreview1Tag = 1886545201;\n+  public static final int icSigPreview2Tag = 1886545202;\n+  public static final int icSigProfileDescriptionTag = 1684370275;\n+  public static final int icSigProfileSequenceDescTag = 1886610801;\n+  public static final int icSigPs2CRD0Tag = 1886610480;\n+  public static final int icSigPs2CRD1Tag = 1886610481;\n+  public static final int icSigPs2CRD2Tag = 1886610482;\n+  public static final int icSigPs2CRD3Tag = 1886610483;\n+  public static final int icSigPs2CSATag = 1886597747;\n+  public static final int icSigPs2RenderingIntentTag = 1886597737;\n+  public static final int icSigRedColorantTag = 1918392666;\n+  public static final int icSigRedTRCTag = 1918128707;\n+  public static final int icSigRgbData = 1380401696;\n+  public static final int icSigScreeningDescTag = 1935897188;\n+  public static final int icSigScreeningTag = 1935897198;\n+  public static final int icSigSpace2CLR = 843271250;\n+  public static final int icSigSpace3CLR = 860048466;\n+  public static final int icSigSpace4CLR = 876825682;\n+  public static final int icSigSpace5CLR = 893602898;\n+  public static final int icSigSpace6CLR = 910380114;\n+  public static final int icSigSpace7CLR = 927157330;\n+  public static final int icSigSpace8CLR = 943934546;\n+  public static final int icSigSpace9CLR = 960711762;\n+  public static final int icSigSpaceACLR = 1094929490;\n+  public static final int icSigSpaceBCLR = 1111706706;\n+  public static final int icSigSpaceCCLR = 1128483922;\n+  public static final int icSigSpaceDCLR = 1145261138;\n+  public static final int icSigSpaceECLR = 1162038354;\n+  public static final int icSigSpaceFCLR = 1178815570;\n+  public static final int icSigTechnologyTag = 1952801640;\n+  public static final int icSigUcrBgTag = 1650877472;\n+  public static final int icSigViewingCondDescTag = 1987405156;\n+  public static final int icSigViewingConditionsTag = 1986618743;\n+  public static final int icSigXYZData = 1482250784;\n+  public static final int icSigYCbCrData = 1497588338;\n+  public static final int icSigYxyData = 1501067552;\n+  public static final int icTagReserved = 4;\n+  public static final int icTagType = 0;\n+  public static final int icXYZNumberX = 8;\n+  \n   long profileID; // why long?\n   \n   ICC_Profile(long profileID)"}, {"sha": "5bce8666601e50788b177c210660feae2e769e21", "filename": "libjava/java/awt/datatransfer/DataFlavor.java", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb5c7a16975806acf62a1d371c54b4402f86508/libjava%2Fjava%2Fawt%2Fdatatransfer%2FDataFlavor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb5c7a16975806acf62a1d371c54b4402f86508/libjava%2Fjava%2Fawt%2Fdatatransfer%2FDataFlavor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdatatransfer%2FDataFlavor.java?ref=3bb5c7a16975806acf62a1d371c54b4402f86508", "patch": "@@ -87,6 +87,8 @@ public class DataFlavor implements java.io.Externalizable, Cloneable\n   */\n public static final DataFlavor javaFileListFlavor;\n \n+public static final DataFlavor imageFlavor;\n+\n /**\n   * This is the MIME type used for transferring a serialized object.\n   * The representation class is the type of object be deserialized.\n@@ -125,6 +127,10 @@ public class DataFlavor implements java.io.Externalizable, Cloneable\n \t\t       \"Java File List\");\n \n   // javaFileListFlavor.mimeType = \"application/x-java-file-list\";\n+\n+  imageFlavor\n+      = new DataFlavor(java.awt.Image.class,\n+                       \"Java Image\");\n }\n \n /*************************************************************************/\n@@ -498,7 +504,7 @@ public class DataFlavor implements java.io.Externalizable, Cloneable\n   * @return <code>true</code> if the MIME type is equal to this object's\n   * MIME type, <code>false</code> otherwise.\n   */\n-public boolean\n+public final boolean\n isMimeTypeEqual(String mimeType)\n {\n   // FIXME: Need to handle default attributes and parameters\n@@ -861,7 +867,7 @@ public class DataFlavor implements java.io.Externalizable, Cloneable\n   *\n   * @since 1.3\n   */\n-public static final Class\n+public final Class\n getDefaultRepresentationClass()\n {\n   return(java.io.InputStream.class);\n@@ -871,7 +877,7 @@ public class DataFlavor implements java.io.Externalizable, Cloneable\n /**\n   * XXX - Currently returns <code>java.io.InputStream</code>.\n   */\n-public static final String\n+public final String\n getDefaultRepresentationClassAsString()\n {\n   return(getDefaultRepresentationClass().getName());"}, {"sha": "3f3285adeb9af09ddf5cbfef71011610991546c5", "filename": "libjava/java/awt/dnd/DragSourceContext.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb5c7a16975806acf62a1d371c54b4402f86508/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb5c7a16975806acf62a1d371c54b4402f86508/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceContext.java?ref=3bb5c7a16975806acf62a1d371c54b4402f86508", "patch": "@@ -111,15 +111,15 @@ public void dragOver(DragSourceDragEvent e)\n   {\n   }\n \n-  public void dragExit(DragSourceDragEvent e)\n+  public void dragExit(DragSourceEvent e)\n   {\n   }\n \n   public void dropActionChanged(DragSourceDragEvent e)\n   {\n   }\n \n-  public void dragDropEnd(DragSourceDragEvent e)\n+  public void dragDropEnd(DragSourceDropEvent e)\n   {\n   }\n "}, {"sha": "2022a32ac76b8a627579877d93e8adbcae594881", "filename": "libjava/java/awt/dnd/DragSourceListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb5c7a16975806acf62a1d371c54b4402f86508/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb5c7a16975806acf62a1d371c54b4402f86508/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceListener.java?ref=3bb5c7a16975806acf62a1d371c54b4402f86508", "patch": "@@ -83,7 +83,7 @@ public interface DragSourceListener extends EventListener\n    *\n    * @param e the drag source drag event\n    */\n-  void dragExit(DragSourceDragEvent e);\n+  void dragExit(DragSourceEvent e);\n \n   /**\n    * Called when the drag and drop operation is complete. After this event,\n@@ -93,5 +93,5 @@ public interface DragSourceListener extends EventListener\n    *\n    * @param e the drag source drag event\n    */\n-  void dragDropEnd(DragSourceDragEvent e);\n+  void dragDropEnd(DragSourceDropEvent e);\n } // interface DragSourceListener"}, {"sha": "903f1f616b9619ccdf92144b2082dcfcfb4cea1f", "filename": "libjava/java/awt/font/TextHitInfo.java", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb5c7a16975806acf62a1d371c54b4402f86508/libjava%2Fjava%2Fawt%2Ffont%2FTextHitInfo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb5c7a16975806acf62a1d371c54b4402f86508/libjava%2Fjava%2Fawt%2Ffont%2FTextHitInfo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Ffont%2FTextHitInfo.java?ref=3bb5c7a16975806acf62a1d371c54b4402f86508", "patch": "@@ -107,4 +107,8 @@ public TextHitInfo getOffsetHit(int offset)\n     return new TextHitInfo();\n   }\n \n+  public String toString()\n+  {\n+    return \"\";\n+  }\n }"}, {"sha": "6cf77d74df21c259a0980b8b229a858fef3bea37", "filename": "libjava/java/awt/geom/PathIterator.java", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb5c7a16975806acf62a1d371c54b4402f86508/libjava%2Fjava%2Fawt%2Fgeom%2FPathIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb5c7a16975806acf62a1d371c54b4402f86508/libjava%2Fjava%2Fawt%2Fgeom%2FPathIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FPathIterator.java?ref=3bb5c7a16975806acf62a1d371c54b4402f86508", "patch": "@@ -59,24 +59,24 @@\n    * from the point to infinity (in any direction) crosses an odd number of\n    * segments.\n    */\n-  int WIND_EVEN_ODD = 0;\n+  static final int WIND_EVEN_ODD = 0;\n \n   /**\n    * The non-zero winding mode: a point is internal to the shape if a ray\n    * from the point to infinity (in any direction) crosses a different number\n    * of segments headed clockwise than those headed counterclockwise.\n    */\n-  int WIND_NON_ZERO = 1;\n+  static final int WIND_NON_ZERO = 1;\n \n   /**\n    * Starts a new subpath. There is no segment from the previous vertex.\n    */\n-  int SEG_MOVETO = 0;\n+  static final int SEG_MOVETO = 0;\n \n   /**\n    * The current segment is a line.\n    */\n-  int SEG_LINETO = 1;\n+  static final int SEG_LINETO = 1;\n \n   /**\n    * The current segment is a quadratic parametric curve. It is interpolated\n@@ -91,7 +91,7 @@\n    *         = n! / (m! * (n-m)!)\n    * </pre>\n    */\n-  int SEG_QUADTO = 2;\n+  static final int SEG_QUADTO = 2;\n \n   /**\n    * The current segment is a cubic parametric curve (more commonly known as\n@@ -107,13 +107,13 @@\n    *         = n! / (m! * (n-m)!)\n    * </pre>\n    */\n-  int SEG_CUBICTO = 3;\n+  static final int SEG_CUBICTO = 3;\n \n   /**\n    * The current segment closes a loop by an implicit line to the previous\n    * SEG_MOVETO coordinate.\n    */\n-  int SEG_CLOSE = 4;\n+  static final int SEG_CLOSE = 4;\n \n   /**\n    * Returns the winding rule to determine which points are inside this path."}, {"sha": "c1abb3529d416c547e1bc76153a61f4cd8cb8ed7", "filename": "libjava/java/awt/image/VolatileImage.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb5c7a16975806acf62a1d371c54b4402f86508/libjava%2Fjava%2Fawt%2Fimage%2FVolatileImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb5c7a16975806acf62a1d371c54b4402f86508/libjava%2Fjava%2Fawt%2Fimage%2FVolatileImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FVolatileImage.java?ref=3bb5c7a16975806acf62a1d371c54b4402f86508", "patch": "@@ -49,7 +49,7 @@ public abstract class VolatileImage extends Image\n {\n   public static final int IMAGE_OK = 0;\n   public static final int IMAGE_RESTORED = 1;\n-  public static final int IMAGE_INCOMPLETE = 2;\n+  public static final int IMAGE_INCOMPATIBLE = 2;\n   public VolatileImage()\n   {\n   }"}, {"sha": "f79442ee5d6e3d54e61fb633139ef8827fdf0142", "filename": "libjava/java/awt/image/renderable/RenderableImage.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb5c7a16975806acf62a1d371c54b4402f86508/libjava%2Fjava%2Fawt%2Fimage%2Frenderable%2FRenderableImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb5c7a16975806acf62a1d371c54b4402f86508/libjava%2Fjava%2Fawt%2Fimage%2Frenderable%2FRenderableImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2Frenderable%2FRenderableImage.java?ref=3bb5c7a16975806acf62a1d371c54b4402f86508", "patch": "@@ -44,7 +44,7 @@\n \n public interface RenderableImage\n {\n-  String HINTS_OBSERVED = \"HINTS_OBSERVED\";\n+  static final String HINTS_OBSERVED = \"HINTS_OBSERVED\";\n   Vector getSources();\n   Object getProperty(String name);\n   String[] getPropertyNames();"}, {"sha": "dcfd78322fce288a7937a8a358a43ec30f1a0e03", "filename": "libjava/java/beans/BeanInfo.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb5c7a16975806acf62a1d371c54b4402f86508/libjava%2Fjava%2Fbeans%2FBeanInfo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb5c7a16975806acf62a1d371c54b4402f86508/libjava%2Fjava%2Fbeans%2FBeanInfo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2FBeanInfo.java?ref=3bb5c7a16975806acf62a1d371c54b4402f86508", "patch": "@@ -74,13 +74,13 @@\n \n public interface BeanInfo {\n \t/** Use this as a parameter for the getIcon() command to retrieve a certain type of icon. **/\n-\tpublic static int ICON_COLOR_16x16 = 1;\n+\tpublic static final int ICON_COLOR_16x16 = 1;\n \t/** Use this as a parameter for the getIcon() command to retrieve a certain type of icon. **/\n-\tpublic static int ICON_COLOR_32x32 = 2;\n+\tpublic static final int ICON_COLOR_32x32 = 2;\n \t/** Use this as a parameter for the getIcon() command to retrieve a certain type of icon. **/\n-\tpublic static int ICON_MONO_16x16 = 3;\n+\tpublic static final int ICON_MONO_16x16 = 3;\n \t/** Use this as a parameter for the getIcon() command to retrieve a certain type of icon. **/\n-\tpublic static int ICON_MONO_32x32 = 4;\n+\tpublic static final int ICON_MONO_32x32 = 4;\n \n \t/** Get the general description of this Bean type.\n \t ** @return the BeanDescriptor for the Bean, or null if"}]}