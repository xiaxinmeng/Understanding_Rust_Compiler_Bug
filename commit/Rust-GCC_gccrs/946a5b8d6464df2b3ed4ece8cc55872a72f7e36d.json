{"sha": "946a5b8d6464df2b3ed4ece8cc55872a72f7e36d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ2YTViOGQ2NDY0ZGYyYjNlZDRlY2U4Y2M1NTg3MmE3MmY3ZTM2ZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-10-30T15:29:00Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-27T09:15:41Z"}, "message": "[Ada] To_Big_Integer and 128bits integers\n\ngcc/ada/\n\n\t* libgnat/s-genbig.ads, libgnat/s-genbig.adb (To_Bignum): New\n\tvariant taking an Unsigned_128.\n\t* libgnat/a-nbnbin.adb (To_Big_Integer): Add support for 128\n\tbits signed and unsigned types.", "tree": {"sha": "dd42c766fc5f4a037a984281aeafb1a365c3c281", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd42c766fc5f4a037a984281aeafb1a365c3c281"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/946a5b8d6464df2b3ed4ece8cc55872a72f7e36d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/946a5b8d6464df2b3ed4ece8cc55872a72f7e36d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/946a5b8d6464df2b3ed4ece8cc55872a72f7e36d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/946a5b8d6464df2b3ed4ece8cc55872a72f7e36d/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69144d48686bb783db02025cdb3fab399afe6259", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69144d48686bb783db02025cdb3fab399afe6259", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69144d48686bb783db02025cdb3fab399afe6259"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "9e051d3d18d0a22b0e8d2775c6ca924143abccdf", "filename": "gcc/ada/libgnat/a-nbnbin.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/946a5b8d6464df2b3ed4ece8cc55872a72f7e36d/gcc%2Fada%2Flibgnat%2Fa-nbnbin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/946a5b8d6464df2b3ed4ece8cc55872a72f7e36d/gcc%2Fada%2Flibgnat%2Fa-nbnbin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-nbnbin.adb?ref=946a5b8d6464df2b3ed4ece8cc55872a72f7e36d", "patch": "@@ -177,7 +177,7 @@ package body Ada.Numerics.Big_Numbers.Big_Integers is\n       function To_Big_Integer (Arg : Int) return Valid_Big_Integer is\n          Result : Big_Integer;\n       begin\n-         Set_Bignum (Result, To_Bignum (Long_Long_Integer (Arg)));\n+         Set_Bignum (Result, To_Bignum (Long_Long_Long_Integer (Arg)));\n          return Result;\n       end To_Big_Integer;\n \n@@ -205,7 +205,7 @@ package body Ada.Numerics.Big_Numbers.Big_Integers is\n       function To_Big_Integer (Arg : Int) return Valid_Big_Integer is\n          Result : Big_Integer;\n       begin\n-         Set_Bignum (Result, To_Bignum (Unsigned_64 (Arg)));\n+         Set_Bignum (Result, To_Bignum (Unsigned_128 (Arg)));\n          return Result;\n       end To_Big_Integer;\n "}, {"sha": "bf222acadc490a27f3a9bd6ecbf2c6f81e386ea6", "filename": "gcc/ada/libgnat/s-genbig.adb", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/946a5b8d6464df2b3ed4ece8cc55872a72f7e36d/gcc%2Fada%2Flibgnat%2Fs-genbig.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/946a5b8d6464df2b3ed4ece8cc55872a72f7e36d/gcc%2Fada%2Flibgnat%2Fs-genbig.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-genbig.adb?ref=946a5b8d6464df2b3ed4ece8cc55872a72f7e36d", "patch": "@@ -1193,7 +1193,7 @@ package body System.Generic_Bignums is\n       return To_Bignum (Long_Long_Long_Integer (X));\n    end To_Bignum;\n \n-   function To_Bignum (X : Unsigned_64) return Big_Integer is\n+   function To_Bignum (X : Unsigned_128) return Big_Integer is\n    begin\n       if X = 0 then\n          return Allocate_Big_Integer ((1 .. 0 => <>), False);\n@@ -1205,11 +1205,33 @@ package body System.Generic_Bignums is\n \n       --  Two word result\n \n-      else\n+      elsif Shift_Right (X, 32) < 2 ** 32 then\n          return Allocate_Big_Integer ((SD (X / Base), SD (X mod Base)), False);\n+\n+      --  Three or four word result\n+\n+      else\n+         declare\n+            Vector : Digit_Vector (1 .. 4);\n+            High   : constant Unsigned_64 := Unsigned_64 (Shift_Right (X, 64));\n+            Low    : constant Unsigned_64 :=\n+              Unsigned_64 (X and 16#FFFF_FFFF_FFFF_FFFF#);\n+\n+         begin\n+            Vector (1) := SD (High / Base);\n+            Vector (2) := SD (High mod Base);\n+            Vector (3) := SD (Low / Base);\n+            Vector (4) := SD (Low mod Base);\n+            return Normalize (Vector, False);\n+         end;\n       end if;\n    end To_Bignum;\n \n+   function To_Bignum (X : Unsigned_64) return Big_Integer is\n+   begin\n+      return To_Bignum (Unsigned_128 (X));\n+   end To_Bignum;\n+\n    ---------------\n    -- To_String --\n    ---------------"}, {"sha": "be8340ed894a007f3cbe606369c694ae85d15e3b", "filename": "gcc/ada/libgnat/s-genbig.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/946a5b8d6464df2b3ed4ece8cc55872a72f7e36d/gcc%2Fada%2Flibgnat%2Fs-genbig.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/946a5b8d6464df2b3ed4ece8cc55872a72f7e36d/gcc%2Fada%2Flibgnat%2Fs-genbig.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-genbig.ads?ref=946a5b8d6464df2b3ed4ece8cc55872a72f7e36d", "patch": "@@ -109,6 +109,10 @@ package System.Generic_Bignums is\n    --  Convert Unsigned_64 to a big integer. No exception can be raised for any\n    --  input argument.\n \n+   function To_Bignum (X : Interfaces.Unsigned_128) return Big_Integer;\n+   --  Convert Unsigned_128 to a big integer. No exception can be raised for\n+   --  any input argument.\n+\n    function From_Bignum (X : Bignum) return Long_Long_Integer;\n    --  Convert Bignum to Long_Long_Integer. Constraint_Error raised with\n    --  appropriate message if value is out of range of Long_Long_Integer."}]}