{"sha": "0d03ac1ba74f1ae9fa71298cc8b275fa0571239b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQwM2FjMWJhNzRmMWFlOWZhNzEyOThjYzhiMjc1ZmEwNTcxMjM5Yg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2012-05-09T13:36:19Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2012-05-09T13:36:19Z"}, "message": "Use a URL for FSF address and replace spaces with tab\n\n\t* longlong.h: Use a URL instead of an FSF postal address.\n\tReplace spaces with tab.\n\nFrom-SVN: r187333", "tree": {"sha": "ee15bfdf087197ee835f2ed0471b73e35df424bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee15bfdf087197ee835f2ed0471b73e35df424bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d03ac1ba74f1ae9fa71298cc8b275fa0571239b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d03ac1ba74f1ae9fa71298cc8b275fa0571239b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d03ac1ba74f1ae9fa71298cc8b275fa0571239b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d03ac1ba74f1ae9fa71298cc8b275fa0571239b/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "af9059026e06dba389703e250292ca5a965ade17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af9059026e06dba389703e250292ca5a965ade17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af9059026e06dba389703e250292ca5a965ade17"}], "stats": {"total": 40, "additions": 22, "deletions": 18}, "files": [{"sha": "b78368619e2d86ad6b54f212528362ef648e5993", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d03ac1ba74f1ae9fa71298cc8b275fa0571239b/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d03ac1ba74f1ae9fa71298cc8b275fa0571239b/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=0d03ac1ba74f1ae9fa71298cc8b275fa0571239b", "patch": "@@ -1,3 +1,8 @@\n+2012-05-09  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* longlong.h: Use a URL instead of an FSF postal address.\n+\tReplace spaces with tab.\n+\n 2012-05-08   Teresa Johnson  <tejohnson@google.com>\n \n \t* libgcov.c (gcov_clear, __gcov_reset): New functions."}, {"sha": "4fa9d46832b511811d2886a3ba0929d1dabe562f", "filename": "libgcc/longlong.h", "status": "modified", "additions": 17, "deletions": 18, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d03ac1ba74f1ae9fa71298cc8b275fa0571239b/libgcc%2Flonglong.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d03ac1ba74f1ae9fa71298cc8b275fa0571239b/libgcc%2Flonglong.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flonglong.h?ref=0d03ac1ba74f1ae9fa71298cc8b275fa0571239b", "patch": "@@ -25,9 +25,8 @@\n    Lesser General Public License for more details.\n \n    You should have received a copy of the GNU Lesser General Public\n-   License along with the GNU C Library; if not, write to the Free\n-   Software Foundation, 51 Franklin Street, Fifth Floor, Boston,\n-   MA 02110-1301, USA.  */\n+   License along with the GNU C Library; if not, see\n+   <http://www.gnu.org/licenses/>.  */\n \n /* You have to define the following before including this file:\n \n@@ -383,21 +382,21 @@ UDItype __umulsidi3 (USItype, USItype);\n   do {                                                                  \\\n     register SItype __r0 __asm__ (\"0\");\t\t\t\t\t\\\n     register SItype __r1 __asm__ (\"1\") = (m0);\t\t\t\t\\\n-                                                                        \\\n+\t\t\t\t\t\t\t\t\t\\\n     __asm__ (\"mr\\t%%r0,%3\"                                              \\\n-             : \"=r\" (__r0), \"=r\" (__r1)\t\t\t\t\t\\\n-             : \"r\"  (__r1),  \"r\" (m1));\t\t\t\t\t\\\n+\t     : \"=r\" (__r0), \"=r\" (__r1)\t\t\t\t\t\\\n+\t     : \"r\"  (__r1),  \"r\" (m1));\t\t\t\t\t\\\n     (xh) = __r0; (xl) = __r1;\t\t\t\t\t\t\\\n   } while (0)\n \n #define sdiv_qrnnd(q, r, n1, n0, d) \\\n-  do {                                                                  \\\n+  do {\t\t\t\t\t\t\t\t\t\\\n     register SItype __r0 __asm__ (\"0\") = (n1);\t\t\t\t\\\n     register SItype __r1 __asm__ (\"1\") = (n0);\t\t\t\t\\\n-                                                                        \\\n+\t\t\t\t\t\t\t\t\t\\\n     __asm__ (\"dr\\t%%r0,%4\"                                              \\\n-             : \"=r\" (__r0), \"=r\" (__r1)\t\t\t\t\t\\\n-             : \"r\" (__r0), \"r\" (__r1), \"r\" (d));\t\t\t\\\n+\t     : \"=r\" (__r0), \"=r\" (__r1)\t\t\t\t\t\\\n+\t     : \"r\" (__r0), \"r\" (__r1), \"r\" (d));\t\t\t\\\n     (q) = __r1; (r) = __r0;\t\t\t\t\t\t\\\n   } while (0)\n #endif /* __zarch__ */\n@@ -840,9 +839,9 @@ UDItype __umulsidi3 (USItype, USItype);\n #define count_trailing_zeros(count,x) \\\n   do {\t\t\t\t\t\t\t\t\t\\\n     __asm__ (\"ffsd     %2,%0\"\t\t\t\t\t\t\\\n-            : \"=r\" ((USItype) (count))\t\t\t\t\t\\\n-            : \"0\" ((USItype) 0),\t\t\t\t\t\\\n-              \"r\" ((USItype) (x)));\t\t\t\t\t\\\n+\t    : \"=r\" ((USItype) (count))\t\t\t\t\t\\\n+\t    : \"0\" ((USItype) 0),\t\t\t\t\t\\\n+\t      \"r\" ((USItype) (x)));\t\t\t\t\t\\\n   } while (0)\n #endif /* __ns32000__ */\n \n@@ -858,7 +857,7 @@ UDItype __umulsidi3 (USItype, USItype);\n      || defined (__ppc__)\t/* Darwin */\t\t\t\t\\\n      || (defined (PPC) && ! defined (CPU_FAMILY)) /* gcc 2.7.x GNU&SysV */    \\\n      || (defined (PPC) && defined (CPU_FAMILY)    /* VxWorks */               \\\n-         && CPU_FAMILY == PPC)                                                \\\n+\t && CPU_FAMILY == PPC)                                                \\\n      ) && W_TYPE_SIZE == 32\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n   do {\t\t\t\t\t\t\t\t\t\\\n@@ -899,7 +898,7 @@ UDItype __umulsidi3 (USItype, USItype);\n   || defined (__ppc__)                                                    \\\n   || (defined (PPC) && ! defined (CPU_FAMILY)) /* gcc 2.7.x GNU&SysV */       \\\n   || (defined (PPC) && defined (CPU_FAMILY)    /* VxWorks */                  \\\n-         && CPU_FAMILY == PPC)\n+\t && CPU_FAMILY == PPC)\n #define umul_ppmm(ph, pl, m0, m1) \\\n   do {\t\t\t\t\t\t\t\t\t\\\n     USItype __m0 = (m0), __m1 = (m1);\t\t\t\t\t\\\n@@ -1067,7 +1066,7 @@ UDItype __umulsidi3 (USItype, USItype);\n #define udiv_qrnnd(q, r, n1, n0, d) \\\n   do {\t\t\t\t\t\t\t\t\t\\\n     extern UWtype __udiv_qrnnd_16 (UWtype, UWtype)\t\t\t\\\n-                        __attribute__ ((visibility (\"hidden\")));\t\\\n+\t\t\t__attribute__ ((visibility (\"hidden\")));\t\\\n     /* r0: rn r1: qn */ /* r0: n1 r4: n0 r5: d r6: d1 */ /* r2: __m */\t\\\n     __asm__ (\t\t\t\t\t\t\t\t\\\n \t\"mov%M4 %4,r5\\n\"\t\t\t\t\t\t\\\n@@ -1202,8 +1201,8 @@ UDItype __umulsidi3 (USItype, USItype);\n #define count_leading_zeros(count, x) \\\n   do {                                                                  \\\n   __asm__ (\"scan %1,1,%0\"                                               \\\n-           : \"=r\" ((USItype) (count))                                   \\\n-           : \"r\" ((USItype) (x)));\t\t\t\t\t\\\n+\t   : \"=r\" ((USItype) (count))                                   \\\n+\t   : \"r\" ((USItype) (x)));\t\t\t\t\t\\\n   } while (0)\n /* Early sparclites return 63 for an argument of 0, but they warn that future\n    implementations might change this.  Therefore, leave COUNT_LEADING_ZEROS_0"}]}