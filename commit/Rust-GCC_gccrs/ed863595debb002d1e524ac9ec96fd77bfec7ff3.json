{"sha": "ed863595debb002d1e524ac9ec96fd77bfec7ff3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ4NjM1OTVkZWJiMDAyZDFlNTI0YWM5ZWM5NmZkNzdiZmVjN2ZmMw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2002-01-21T00:34:29Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-01-21T00:34:29Z"}, "message": "h8300.md: Update the comments at the beginning of the file.\n\n\t* config/h8300/h8300.md: Update the comments at the beginning\n\tof the file.\n\nFrom-SVN: r49025", "tree": {"sha": "7e8b221d566b1c247ecbf861b8b4da68ca578c7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e8b221d566b1c247ecbf861b8b4da68ca578c7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed863595debb002d1e524ac9ec96fd77bfec7ff3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed863595debb002d1e524ac9ec96fd77bfec7ff3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed863595debb002d1e524ac9ec96fd77bfec7ff3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed863595debb002d1e524ac9ec96fd77bfec7ff3/comments", "author": null, "committer": null, "parents": [{"sha": "cbafacd19873f53392a388e8d2be969962b46c2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbafacd19873f53392a388e8d2be969962b46c2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbafacd19873f53392a388e8d2be969962b46c2c"}], "stats": {"total": 30, "additions": 14, "deletions": 16}, "files": [{"sha": "376c33de22bf2259c9cd7cc3943f2a6112a5a245", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed863595debb002d1e524ac9ec96fd77bfec7ff3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed863595debb002d1e524ac9ec96fd77bfec7ff3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed863595debb002d1e524ac9ec96fd77bfec7ff3", "patch": "@@ -1,3 +1,8 @@\n+2002-01-20  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300.md: Update the comments at the beginning\n+\tof the file.\n+\n 2002-01-20  Kazu Hirata  <kazu@hxi.com>\n \n \t* config/i370/i370.c: Fix comment formatting."}, {"sha": "e6229a2b94458d54de0dac017dea6085a1bc09dc", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 9, "deletions": 16, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed863595debb002d1e524ac9ec96fd77bfec7ff3/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed863595debb002d1e524ac9ec96fd77bfec7ff3/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=ed863595debb002d1e524ac9ec96fd77bfec7ff3", "patch": "@@ -22,22 +22,6 @@\n ;; the Free Software Foundation, 59 Temple Place - Suite 330,\n ;; Boston, MA 02111-1307, USA.\n \n-;; The original PO technology requires these to be ordered by speed,\n-;; so that assigner will pick the fastest.\n-\n-;; See file \"rtl.def\" for documentation on define_insn, match_*, et. al.\n-\n-(define_attr \"cpu\" \"h8300,h8300h\"\n-  (const (symbol_ref \"cpu_type\")))\n-\n-;; Many logical operations should have \"bit\" variants if only one\n-;; bit is going to be operated on.\n-\n-;; (and (logical op) (const_int X))\n-;; If const_int only specifies a few bits (like a single byte in a 4 byte\n-;; operation, then it's more efficient to only apply the and and logical_op\n-;; to the bits we care about.\n-\n ;; Some of the extend instructions accept a general_operand_src, which\n ;; allows all the normal memory addressing modes.  The length computations\n ;; don't take this into account.  The lengths in the MD file should be\n@@ -62,6 +46,13 @@\n \n ;; ??? Implement remaining bit ops available on the h8300\n \n+;; ----------------------------------------------------------------------\n+;; ATTRIBUTES\n+;; ----------------------------------------------------------------------\n+\n+(define_attr \"cpu\" \"h8300,h8300h\"\n+  (const (symbol_ref \"cpu_type\")))\n+\n (define_attr \"type\" \"branch,arith\"\n   (const_string \"arith\"))\n \n@@ -90,6 +81,7 @@\n         (const_string \"yes\")))\n \n ;; Condition code settings.\n+;;\n ;; none - insn does not affect cc\n ;; none_0hit - insn does not affect cc but it does modify operand 0\n ;;\tThis attribute is used to keep track of when operand 0 changes.\n@@ -98,6 +90,7 @@\n ;; set_zn  - insn sets z,n to usable values; v,c are unknown.\n ;; compare - compare instruction\n ;; clobber - value of cc is unknown\n+\n (define_attr \"cc\" \"none,none_0hit,set_znv,set_zn,compare,clobber\"\n   (const_string \"clobber\"))\n \f"}]}