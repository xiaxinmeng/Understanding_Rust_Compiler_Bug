{"sha": "211694b6da983c8370217ee81022713bee6827d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjExNjk0YjZkYTk4M2M4MzcwMjE3ZWU4MTAyMjcxM2JlZTY4MjdkNQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-08-28T20:41:53Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-08-28T20:41:53Z"}, "message": "graphite-dependences.c (graphite_legal_transform_bb): Call pbb_remove_duplicate_pdrs.\n\n2009-08-28  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-dependences.c (graphite_legal_transform_bb): Call\n\tpbb_remove_duplicate_pdrs.\n\t* graphite-poly.c (can_collapse_pdr): Removed.\n\t(pdr_find_duplicate): Removed.\n\t(can_collapse_pdrs): New.\n\t(pbb_remove_duplicate_pdrs): New.\n\t(new_poly_dr): Do not look for duplicates.\n\t* graphite-poly.h (struct poly_bb): New field pdr_duplicates_removed.\n\t(PBB_PDR_DUPLICATES_REMOVED): New.\n\t(pbb_remove_duplicate_pdrs): Declared.\n\nFrom-SVN: r151192", "tree": {"sha": "7e9d86aa332086434ad6d20dd863d14f5dae54cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e9d86aa332086434ad6d20dd863d14f5dae54cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/211694b6da983c8370217ee81022713bee6827d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/211694b6da983c8370217ee81022713bee6827d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/211694b6da983c8370217ee81022713bee6827d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/211694b6da983c8370217ee81022713bee6827d5/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bd2a8a7ef778f7425121974cea4204a11c24388", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bd2a8a7ef778f7425121974cea4204a11c24388", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bd2a8a7ef778f7425121974cea4204a11c24388"}], "stats": {"total": 101, "additions": 62, "deletions": 39}, "files": [{"sha": "aec6044e238073934b7170c4355be4e160c6cb03", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/211694b6da983c8370217ee81022713bee6827d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/211694b6da983c8370217ee81022713bee6827d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=211694b6da983c8370217ee81022713bee6827d5", "patch": "@@ -1,3 +1,16 @@\n+2009-08-28  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-dependences.c (graphite_legal_transform_bb): Call\n+\tpbb_remove_duplicate_pdrs.\n+\t* graphite-poly.c (can_collapse_pdr): Removed.\n+\t(pdr_find_duplicate): Removed.\n+\t(can_collapse_pdrs): New.\n+\t(pbb_remove_duplicate_pdrs): New.\n+\t(new_poly_dr): Do not look for duplicates.\n+\t* graphite-poly.h (struct poly_bb): New field pdr_duplicates_removed.\n+\t(PBB_PDR_DUPLICATES_REMOVED): New.\n+\t(pbb_remove_duplicate_pdrs): Declared.\n+\n 2009-08-28  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-interchange.c (pbb_interchange_profitable_p): Adjust"}, {"sha": "2355fc16713e7b3984994432b6833d3f0424fb17", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/211694b6da983c8370217ee81022713bee6827d5/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/211694b6da983c8370217ee81022713bee6827d5/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=211694b6da983c8370217ee81022713bee6827d5", "patch": "@@ -1,3 +1,16 @@\n+2009-08-25  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-dependences.c (graphite_legal_transform_bb): Call\n+\tpbb_remove_duplicate_pdrs.\n+\t* graphite-poly.c (can_collapse_pdr): Removed.\n+\t(pdr_find_duplicate): Removed.\n+\t(can_collapse_pdrs): New.\n+\t(pbb_remove_duplicate_pdrs): New.\n+\t(new_poly_dr): Do not look for duplicates.\n+\t* graphite-poly.h (struct poly_bb): New field pdr_duplicates_removed.\n+\t(PBB_PDR_DUPLICATES_REMOVED): New.\n+\t(pbb_remove_duplicate_pdrs): Declared.\n+\n 2009-08-25  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-interchange.c (pbb_interchange_profitable_p): Adjust"}, {"sha": "7fce3b331e7783151630ffba2e907d61accbf17f", "filename": "gcc/graphite-dependences.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/211694b6da983c8370217ee81022713bee6827d5/gcc%2Fgraphite-dependences.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/211694b6da983c8370217ee81022713bee6827d5/gcc%2Fgraphite-dependences.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-dependences.c?ref=211694b6da983c8370217ee81022713bee6827d5", "patch": "@@ -589,6 +589,12 @@ graphite_legal_transform_bb (poly_bb_p pbb1, poly_bb_p pbb2)\n   int i, j;\n   poly_dr_p pdr1, pdr2;\n \n+  if (!PBB_PDR_DUPLICATES_REMOVED (pbb1))\n+    pbb_remove_duplicate_pdrs (pbb1);\n+\n+  if (!PBB_PDR_DUPLICATES_REMOVED (pbb2))\n+    pbb_remove_duplicate_pdrs (pbb2);\n+\n   for (i = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb1), i, pdr1); i++)\n     for (j = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb2), j, pdr2); j++)\n       if (!graphite_legal_transform_dr (pbb1, pbb2, pdr1, pdr2))"}, {"sha": "535912a87ca244e62663fd4f07c9d9305bc3bb52", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 25, "deletions": 39, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/211694b6da983c8370217ee81022713bee6827d5/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/211694b6da983c8370217ee81022713bee6827d5/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=211694b6da983c8370217ee81022713bee6827d5", "patch": "@@ -261,51 +261,45 @@ apply_poly_transforms (scop_p scop)\n   return transform_done;\n }\n \n-/* Returns true when PDR in the same PBB and is a duplicate of the\n-   data reference described by ACCESSES, TYPE, and NB_SUBSCRIPTS.  */\n+/* Returns true when it PDR1 is a duplicate of PDR2: same PBB, and\n+   their ACCESSES, TYPE, and NB_SUBSCRIPTS are the same.  */\n \n static inline bool\n-can_collapse_pdr (poly_dr_p pdr, poly_bb_p pbb,\n-\t\t  ppl_Pointset_Powerset_C_Polyhedron_t accesses,\n-\t\t  enum poly_dr_type type, graphite_dim_t nb_subscripts)\n+can_collapse_pdrs (poly_dr_p pdr1, poly_dr_p pdr2)\n {\n-  bool res = false;\n-  ppl_Pointset_Powerset_C_Polyhedron_t af, diff;\n+  bool res;\n+  ppl_Pointset_Powerset_C_Polyhedron_t af1, af2, diff;\n \n-  if (PDR_PBB (pdr) != pbb\n-      || PDR_NB_SUBSCRIPTS (pdr) != nb_subscripts\n-      || PDR_TYPE (pdr) != type)\n+  if (PDR_PBB (pdr1) != PDR_PBB (pdr2)\n+      || PDR_NB_SUBSCRIPTS (pdr1) != PDR_NB_SUBSCRIPTS (pdr2)\n+      || PDR_TYPE (pdr1) != PDR_TYPE (pdr2))\n     return false;\n \n+  af1 = PDR_ACCESSES (pdr1);\n+  af2 = PDR_ACCESSES (pdr2);\n   ppl_new_Pointset_Powerset_C_Polyhedron_from_Pointset_Powerset_C_Polyhedron\n-    (&diff, accesses);\n-  af = PDR_ACCESSES (pdr);\n-  ppl_Pointset_Powerset_C_Polyhedron_difference_assign (diff, af);\n-\n-  if (ppl_Pointset_Powerset_C_Polyhedron_is_empty (diff))\n-    res = true;\n+    (&diff, af1);\n+  ppl_Pointset_Powerset_C_Polyhedron_difference_assign (diff, af2);\n \n+  res = ppl_Pointset_Powerset_C_Polyhedron_is_empty (diff);\n   ppl_delete_Pointset_Powerset_C_Polyhedron (diff);\n   return res;\n }\n \n-/* Returns a duplicate of the data reference described by ACCESSES,\n-   TYPE, and NB_SUBSCRIPTS in the vector PBB_DRS (PBB).  If there is\n-   no duplicate, returns NULL.  */\n+/* Removes duplicated data references in PBB.  */\n \n-static inline poly_dr_p\n-pdr_find_duplicate (poly_bb_p pbb,\n-\t\t    ppl_Pointset_Powerset_C_Polyhedron_t accesses,\n-\t\t    enum poly_dr_type type, graphite_dim_t nb_subscripts)\n+void\n+pbb_remove_duplicate_pdrs (poly_bb_p pbb)\n {\n-  int i;\n-  poly_dr_p pdr;\n-\n-  for (i = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb), i, pdr); i++)\n-    if (can_collapse_pdr (pdr, pbb, accesses, type, nb_subscripts))\n-      return pdr;\n+  int i, j;\n+  poly_dr_p pdr1, pdr2;\n+  unsigned n = VEC_length (poly_dr_p, PBB_DRS (pbb));\n+  VEC (poly_dr_p, heap) *collapsed = VEC_alloc (poly_dr_p, heap, n);\n \n-  return NULL;\n+  for (i = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb), i, pdr1); i++)\n+    for (j = 0; VEC_iterate (poly_dr_p, collapsed, j, pdr2); j++)\n+      if (!can_collapse_pdrs (pdr1, pdr2))\n+\tVEC_quick_push (poly_dr_p, collapsed, pdr1);\n }\n \n /* Create a new polyhedral data reference and add it to PBB.  It is\n@@ -318,16 +312,8 @@ new_poly_dr (poly_bb_p pbb,\n \t     enum poly_dr_type type, void *cdr, graphite_dim_t nb_subscripts)\n {\n   static int id = 0;\n-  poly_dr_p pdr;\n-  poly_dr_p same = pdr_find_duplicate (pbb, accesses, type, nb_subscripts);\n-\n-  if (same)\n-    {\n-      PDR_NB_REFS (same) += 1;\n-      return;\n-    }\n+  poly_dr_p pdr = XNEW (struct poly_dr);\n \n-  pdr = XNEW (struct poly_dr);\n   PDR_ID (pdr) = id++;\n   PDR_NB_REFS (pdr) = 1;\n   PDR_PBB (pdr) = pbb;"}, {"sha": "7fe1113ad68e099b8dbd0c23faddcb940cabdb8b", "filename": "gcc/graphite-poly.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/211694b6da983c8370217ee81022713bee6827d5/gcc%2Fgraphite-poly.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/211694b6da983c8370217ee81022713bee6827d5/gcc%2Fgraphite-poly.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.h?ref=211694b6da983c8370217ee81022713bee6827d5", "patch": "@@ -298,6 +298,9 @@ struct poly_bb\n \n   /* A copy of the transformed scattering.  */\n   poly_scattering_p saved;\n+\n+  /* True when the PDR duplicates have already been removed.  */\n+  bool pdr_duplicates_removed;\n };\n \n #define PBB_BLACK_BOX(PBB) ((gimple_bb_p) PBB->black_box)\n@@ -311,6 +314,7 @@ struct poly_bb\n #define PBB_SAVED(PBB) (PBB->saved)\n #define PBB_NB_LOCAL_VARIABLES(PBB) (PBB->transformed->nb_local_variables)\n #define PBB_NB_SCATTERING_TRANSFORM(PBB) (PBB->transformed->nb_scattering)\n+#define PBB_PDR_DUPLICATES_REMOVED(PBB) (PBB->pdr_duplicates_removed)\n \n extern void new_poly_bb (scop_p, void *);\n extern void free_poly_bb (poly_bb_p);\n@@ -336,6 +340,7 @@ extern bool scop_do_interchange (scop_p);\n extern bool scop_do_strip_mine (scop_p);\n extern void pbb_number_of_iterations (poly_bb_p, graphite_dim_t, Value);\n extern void pbb_number_of_iterations_at_time (poly_bb_p, graphite_dim_t, Value);\n+extern void pbb_remove_duplicate_pdrs (poly_bb_p);\n \n /* The index of the PBB.  */\n "}]}