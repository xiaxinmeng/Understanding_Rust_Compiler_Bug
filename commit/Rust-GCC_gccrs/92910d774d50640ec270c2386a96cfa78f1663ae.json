{"sha": "92910d774d50640ec270c2386a96cfa78f1663ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI5MTBkNzc0ZDUwNjQwZWMyNzBjMjM4NmE5NmNmYTc4ZjE2NjNhZQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2009-09-22T15:12:16Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2009-09-22T15:12:16Z"}, "message": "bfin-protos.h (initialize_trampoline): Remove.\n\n\t* config/bfin/bfin-protos.h (initialize_trampoline): Remove.\n\t* config/bfin/bfin.c (bfin_asm_trampoline_template): New.\n\t(bfin_trampoline_init): Rename from initialize_trampoline;\n\tmake static; update for target hook parameters.\n\t(TARGET_ASM_TRAMPOLINE_TEMPLATE, TARGET_TRAMPOLINE_INIT): New.\n\t* config/bfin/bfin.h (TRAMPOLINE_TEMPLATE): Move code to\n\tbfin_asm_trampoline_template.\n\t(INITIALIZE_TRAMPOLINE): Remove.\n\nFrom-SVN: r151988", "tree": {"sha": "a011fc87c218aa889113929577ca2988e764f419", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a011fc87c218aa889113929577ca2988e764f419"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92910d774d50640ec270c2386a96cfa78f1663ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92910d774d50640ec270c2386a96cfa78f1663ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92910d774d50640ec270c2386a96cfa78f1663ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92910d774d50640ec270c2386a96cfa78f1663ae/comments", "author": null, "committer": null, "parents": [{"sha": "6eee506e2f0db40ff2d344c8cff9ebe7d0a6a458", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6eee506e2f0db40ff2d344c8cff9ebe7d0a6a458", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6eee506e2f0db40ff2d344c8cff9ebe7d0a6a458"}], "stats": {"total": 105, "additions": 62, "deletions": 43}, "files": [{"sha": "c9c2cda03f6fe65b92725a81200f318548838e7f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92910d774d50640ec270c2386a96cfa78f1663ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92910d774d50640ec270c2386a96cfa78f1663ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=92910d774d50640ec270c2386a96cfa78f1663ae", "patch": "@@ -70,6 +70,15 @@\n \n \t* config/avr/avr.h (TRAMPOLINE_TEMPLATE, INITIALIZE_TRAMPOLINE): Remove.\n \n+\t* config/bfin/bfin-protos.h (initialize_trampoline): Remove.\n+\t* config/bfin/bfin.c (bfin_asm_trampoline_template): New.\n+\t(bfin_trampoline_init): Rename from initialize_trampoline;\n+\tmake static; update for target hook parameters.\n+\t(TARGET_ASM_TRAMPOLINE_TEMPLATE, TARGET_TRAMPOLINE_INIT): New.\n+\t* config/bfin/bfin.h (TRAMPOLINE_TEMPLATE): Move code to\n+\tbfin_asm_trampoline_template.\n+\t(INITIALIZE_TRAMPOLINE): Remove.\n+\n 2009-09-22  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/rs6000/rs6000.c (bdesc_2arg): Fix CODE_FOR_vector_gt* codes"}, {"sha": "4a9b7a117683751a29777fc16512c5919356fdbc", "filename": "gcc/config/bfin/bfin-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92910d774d50640ec270c2386a96cfa78f1663ae/gcc%2Fconfig%2Fbfin%2Fbfin-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92910d774d50640ec270c2386a96cfa78f1663ae/gcc%2Fconfig%2Fbfin%2Fbfin-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin-protos.h?ref=92910d774d50640ec270c2386a96cfa78f1663ae", "patch": "@@ -110,7 +110,6 @@ extern void asm_conditional_branch (rtx, rtx *, int, int);\n extern rtx bfin_gen_compare (rtx, Mmode);\n \n extern int bfin_local_alignment (tree, int);\n-extern void initialize_trampoline (rtx, rtx, rtx);\n extern rtx bfin_va_arg (tree, tree);\n \n extern void bfin_expand_prologue (void);"}, {"sha": "32d72abc2aa9c43d3716726c5ef325ca29917ad1", "filename": "gcc/config/bfin/bfin.c", "status": "modified", "additions": 53, "deletions": 18, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92910d774d50640ec270c2386a96cfa78f1663ae/gcc%2Fconfig%2Fbfin%2Fbfin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92910d774d50640ec270c2386a96cfa78f1663ae/gcc%2Fconfig%2Fbfin%2Fbfin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.c?ref=92910d774d50640ec270c2386a96cfa78f1663ae", "patch": "@@ -2094,37 +2094,67 @@ bfin_function_ok_for_sibcall (tree decl ATTRIBUTE_UNUSED,\n   return !called_func->local || this_func->local;\n }\n \f\n+/* Write a template for a trampoline to F.  */\n+\n+static void\n+bfin_asm_trampoline_template (FILE *f)\n+{\n+  if (TARGET_FDPIC)\n+    {\n+      fprintf (f, \"\\t.dd\\t0x00000000\\n\");\t/* 0 */\n+      fprintf (f, \"\\t.dd\\t0x00000000\\n\");\t/* 0 */\n+      fprintf (f, \"\\t.dd\\t0x0000e109\\n\");\t/* p1.l = fn low */\n+      fprintf (f, \"\\t.dd\\t0x0000e149\\n\");\t/* p1.h = fn high */\n+      fprintf (f, \"\\t.dd\\t0x0000e10a\\n\");\t/* p2.l = sc low */\n+      fprintf (f, \"\\t.dd\\t0x0000e14a\\n\");\t/* p2.h = sc high */\n+      fprintf (f, \"\\t.dw\\t0xac4b\\n\");\t\t/* p3 = [p1 + 4] */\n+      fprintf (f, \"\\t.dw\\t0x9149\\n\");\t\t/* p1 = [p1] */\n+      fprintf (f, \"\\t.dw\\t0x0051\\n\");\t\t/* jump (p1)*/\n+    }\n+  else\n+    {\n+      fprintf (f, \"\\t.dd\\t0x0000e109\\n\");\t/* p1.l = fn low */\n+      fprintf (f, \"\\t.dd\\t0x0000e149\\n\");\t/* p1.h = fn high */\n+      fprintf (f, \"\\t.dd\\t0x0000e10a\\n\");\t/* p2.l = sc low */\n+      fprintf (f, \"\\t.dd\\t0x0000e14a\\n\");\t/* p2.h = sc high */\n+      fprintf (f, \"\\t.dw\\t0x0051\\n\");\t\t/* jump (p1)*/\n+    }\n+}\n+\n /* Emit RTL insns to initialize the variable parts of a trampoline at\n-   TRAMP. FNADDR is an RTX for the address of the function's pure\n-   code.  CXT is an RTX for the static chain value for the function.  */\n+   M_TRAMP. FNDECL is the target function.  CHAIN_VALUE is an RTX for\n+   the static chain value for the function.  */\n \n-void\n-initialize_trampoline (rtx tramp, rtx fnaddr, rtx cxt)\n+static void\n+bfin_trampoline_init (rtx m_tramp, tree fndecl, rtx chain_value)\n {\n-  rtx t1 = copy_to_reg (fnaddr);\n-  rtx t2 = copy_to_reg (cxt);\n-  rtx addr;\n+  rtx t1 = copy_to_reg (XEXP (DECL_RTL (fndecl), 0));\n+  rtx t2 = copy_to_reg (chain_value);\n+  rtx mem;\n   int i = 0;\n \n+  emit_block_move (m_tramp, assemble_trampoline_template (),\n+\t\t   GEN_INT (TRAMPOLINE_SIZE), BLOCK_OP_NORMAL);\n+\n   if (TARGET_FDPIC)\n     {\n-      rtx a = memory_address (Pmode, plus_constant (tramp, 8));\n-      addr = memory_address (Pmode, tramp);\n-      emit_move_insn (gen_rtx_MEM (SImode, addr), a);\n+      rtx a = force_reg (Pmode, plus_constant (XEXP (m_tramp, 0), 8));\n+      mem = adjust_address (m_tramp, Pmode, 0);\n+      emit_move_insn (mem, a);\n       i = 8;\n     }\n \n-  addr = memory_address (Pmode, plus_constant (tramp, i + 2));\n-  emit_move_insn (gen_rtx_MEM (HImode, addr), gen_lowpart (HImode, t1));\n+  mem = adjust_address (m_tramp, HImode, i + 2);\n+  emit_move_insn (mem, gen_lowpart (HImode, t1));\n   emit_insn (gen_ashrsi3 (t1, t1, GEN_INT (16)));\n-  addr = memory_address (Pmode, plus_constant (tramp, i + 6));\n-  emit_move_insn (gen_rtx_MEM (HImode, addr), gen_lowpart (HImode, t1));\n+  mem = adjust_address (m_tramp, HImode, i + 6);\n+  emit_move_insn (mem, gen_lowpart (HImode, t1));\n \n-  addr = memory_address (Pmode, plus_constant (tramp, i + 10));\n-  emit_move_insn (gen_rtx_MEM (HImode, addr), gen_lowpart (HImode, t2));\n+  mem = adjust_address (m_tramp, HImode, i + 10);\n+  emit_move_insn (mem, gen_lowpart (HImode, t2));\n   emit_insn (gen_ashrsi3 (t2, t2, GEN_INT (16)));\n-  addr = memory_address (Pmode, plus_constant (tramp, i + 14));\n-  emit_move_insn (gen_rtx_MEM (HImode, addr), gen_lowpart (HImode, t2));\n+  mem = adjust_address (m_tramp, HImode, i + 14);\n+  emit_move_insn (mem, gen_lowpart (HImode, t2));\n }\n \n /* Emit insns to move operands[1] into operands[0].  */\n@@ -6619,4 +6649,9 @@ bfin_expand_builtin (tree exp, rtx target ATTRIBUTE_UNUSED,\n #undef TARGET_CAN_ELIMINATE\n #define TARGET_CAN_ELIMINATE bfin_can_eliminate\n \n+#undef TARGET_ASM_TRAMPOLINE_TEMPLATE\n+#define TARGET_ASM_TRAMPOLINE_TEMPLATE bfin_asm_trampoline_template\n+#undef TARGET_TRAMPOLINE_INIT\n+#define TARGET_TRAMPOLINE_INIT bfin_trampoline_init\n+\n struct gcc_target targetm = TARGET_INITIALIZER;"}, {"sha": "03a279036f3321296df4f0b21678a6d64b243af1", "filename": "gcc/config/bfin/bfin.h", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92910d774d50640ec270c2386a96cfa78f1663ae/gcc%2Fconfig%2Fbfin%2Fbfin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92910d774d50640ec270c2386a96cfa78f1663ae/gcc%2Fconfig%2Fbfin%2Fbfin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.h?ref=92910d774d50640ec270c2386a96cfa78f1663ae", "patch": "@@ -386,30 +386,6 @@ extern const char *bfin_library_id_string;\n    && (ALIGN) < BITS_PER_WORD ? BITS_PER_WORD : (ALIGN))    \n \n #define TRAMPOLINE_SIZE (TARGET_FDPIC ? 30 : 18)\n-#define TRAMPOLINE_TEMPLATE(FILE)                                       \\\n-  if (TARGET_FDPIC)\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      fprintf(FILE, \"\\t.dd\\t0x00000000\\n\"); /* 0 */\t\t\t\\\n-      fprintf(FILE, \"\\t.dd\\t0x00000000\\n\"); /* 0 */\t\t\t\\\n-      fprintf(FILE, \"\\t.dd\\t0x0000e109\\n\"); /* p1.l = fn low */\t\t\\\n-      fprintf(FILE, \"\\t.dd\\t0x0000e149\\n\"); /* p1.h = fn high */\t\\\n-      fprintf(FILE, \"\\t.dd\\t0x0000e10a\\n\"); /* p2.l = sc low */\t\t\\\n-      fprintf(FILE, \"\\t.dd\\t0x0000e14a\\n\"); /* p2.h = sc high */\t\\\n-      fprintf(FILE, \"\\t.dw\\t0xac4b\\n\"); /* p3 = [p1 + 4] */\t\t\\\n-      fprintf(FILE, \"\\t.dw\\t0x9149\\n\"); /* p1 = [p1] */\t\t\t\\\n-      fprintf(FILE, \"\\t.dw\\t0x0051\\n\"); /* jump (p1)*/\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      fprintf(FILE, \"\\t.dd\\t0x0000e109\\n\"); /* p1.l = fn low */\t\t\\\n-      fprintf(FILE, \"\\t.dd\\t0x0000e149\\n\"); /* p1.h = fn high */\t\\\n-      fprintf(FILE, \"\\t.dd\\t0x0000e10a\\n\"); /* p2.l = sc low */\t\t\\\n-      fprintf(FILE, \"\\t.dd\\t0x0000e14a\\n\"); /* p2.h = sc high */\t\\\n-      fprintf(FILE, \"\\t.dw\\t0x0051\\n\"); /* jump (p1)*/\t\t\t\\\n-    }\n-\n-#define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT) \\\n-  initialize_trampoline (TRAMP, FNADDR, CXT)\n \f\n /* Definitions for register eliminations.\n "}]}