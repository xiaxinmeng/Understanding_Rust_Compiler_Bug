{"sha": "3b5f3138dceeac609b4c5fe33009302d13592400", "node_id": "C_kwDOANBUbNoAKDNiNWYzMTM4ZGNlZWFjNjA5YjRjNWZlMzMwMDkzMDJkMTM1OTI0MDA", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-11-19T19:43:40Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-22T12:34:51Z"}, "message": "ada: Fix formatting glitches in Make_Tag_Assignment\n\ngcc/ada/\n\n\t* exp_ch3.adb (Make_Tag_Assignment): Fix formatting glitches.", "tree": {"sha": "85f2b59417071de8fdc809de92ea62b790f11882", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85f2b59417071de8fdc809de92ea62b790f11882"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b5f3138dceeac609b4c5fe33009302d13592400", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b5f3138dceeac609b4c5fe33009302d13592400", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b5f3138dceeac609b4c5fe33009302d13592400", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b5f3138dceeac609b4c5fe33009302d13592400/comments", "author": null, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd4b47a9f7db20197bbe25cb60c9a8d8ef46de71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd4b47a9f7db20197bbe25cb60c9a8d8ef46de71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd4b47a9f7db20197bbe25cb60c9a8d8ef46de71"}], "stats": {"total": 40, "additions": 21, "deletions": 19}, "files": [{"sha": "2661a3ff9f62b1a9e501e489ca7fd68d760396b8", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 21, "deletions": 19, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b5f3138dceeac609b4c5fe33009302d13592400/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b5f3138dceeac609b4c5fe33009302d13592400/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=3b5f3138dceeac609b4c5fe33009302d13592400", "patch": "@@ -11769,37 +11769,39 @@ package body Exp_Ch3 is\n \n    function Make_Tag_Assignment (N : Node_Id) return Node_Id is\n       Loc      : constant Source_Ptr := Sloc (N);\n-      Def_If   : constant Entity_Id := Defining_Identifier (N);\n-      Expr     : constant Node_Id := Expression (N);\n-      Typ      : constant Entity_Id := Etype (Def_If);\n-      Full_Typ : constant Entity_Id := Underlying_Type (Typ);\n+      Def_If   : constant Entity_Id  := Defining_Identifier (N);\n+      Expr     : constant Node_Id    := Expression (N);\n+      Typ      : constant Entity_Id  := Etype (Def_If);\n+      Full_Typ : constant Entity_Id  := Underlying_Type (Typ);\n+\n       New_Ref  : Node_Id;\n \n    begin\n-      --  This expansion activity is called during analysis.\n+      --  This expansion activity is called during analysis\n \n       if Is_Tagged_Type (Typ)\n-       and then not Is_Class_Wide_Type (Typ)\n-       and then not Is_CPP_Class (Typ)\n-       and then Tagged_Type_Expansion\n-       and then Nkind (Expr) /= N_Aggregate\n-       and then (Nkind (Expr) /= N_Qualified_Expression\n-                  or else Nkind (Expression (Expr)) /= N_Aggregate)\n+        and then not Is_Class_Wide_Type (Typ)\n+        and then not Is_CPP_Class (Typ)\n+        and then Tagged_Type_Expansion\n+        and then Nkind (Expr) /= N_Aggregate\n+        and then (Nkind (Expr) /= N_Qualified_Expression\n+                   or else Nkind (Expression (Expr)) /= N_Aggregate)\n       then\n          New_Ref :=\n            Make_Selected_Component (Loc,\n-              Prefix        => New_Occurrence_Of (Def_If, Loc),\n-              Selector_Name =>\n-                New_Occurrence_Of (First_Tag_Component (Full_Typ), Loc));\n+             Prefix        => New_Occurrence_Of (Def_If, Loc),\n+             Selector_Name =>\n+               New_Occurrence_Of (First_Tag_Component (Full_Typ), Loc));\n+\n          Set_Assignment_OK (New_Ref);\n \n          return\n            Make_Assignment_Statement (Loc,\n-              Name       => New_Ref,\n-              Expression =>\n-                Unchecked_Convert_To (RTE (RE_Tag),\n-                  New_Occurrence_Of (Node\n-                      (First_Elmt (Access_Disp_Table (Full_Typ))), Loc)));\n+             Name       => New_Ref,\n+             Expression =>\n+               Unchecked_Convert_To (RTE (RE_Tag),\n+                 New_Occurrence_Of\n+                   (Node (First_Elmt (Access_Disp_Table (Full_Typ))), Loc)));\n       else\n          return Empty;\n       end if;"}]}