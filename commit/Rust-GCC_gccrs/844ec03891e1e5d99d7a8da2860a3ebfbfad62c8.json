{"sha": "844ec03891e1e5d99d7a8da2860a3ebfbfad62c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ0ZWMwMzg5MWUxZTVkOTlkN2E4ZGEyODYwYTNlYmZiZmFkNjJjOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-03-07T14:53:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-03-07T14:53:39Z"}, "message": "[multiple changes]\n\n2012-03-07  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch5.adb, s-vaflop.adb, s-taprop-vms.adb, exp_ch6.adb,\n\ts-gearop.adb, sem_ch6.adb, s-bbthre.adb, g-trasym.adb: Minor\n\treformatting.\n\n2012-03-07  Javier Miranda  <miranda@adacore.com>\n\n\t* a-ngrear.ads: Add documentation.\n\nFrom-SVN: r185053", "tree": {"sha": "800812e8ad55fa893c772c327112a7dd5d669ba7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/800812e8ad55fa893c772c327112a7dd5d669ba7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/844ec03891e1e5d99d7a8da2860a3ebfbfad62c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/844ec03891e1e5d99d7a8da2860a3ebfbfad62c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/844ec03891e1e5d99d7a8da2860a3ebfbfad62c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/844ec03891e1e5d99d7a8da2860a3ebfbfad62c8/comments", "author": null, "committer": null, "parents": [{"sha": "207aaeda9d3f95a88122b3c4264cd93ca7f9f63a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/207aaeda9d3f95a88122b3c4264cd93ca7f9f63a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/207aaeda9d3f95a88122b3c4264cd93ca7f9f63a"}], "stats": {"total": 89, "additions": 55, "deletions": 34}, "files": [{"sha": "645f9d59bf23361126dddc5e84a695303ca8b672", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844ec03891e1e5d99d7a8da2860a3ebfbfad62c8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844ec03891e1e5d99d7a8da2860a3ebfbfad62c8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=844ec03891e1e5d99d7a8da2860a3ebfbfad62c8", "patch": "@@ -1,3 +1,12 @@\n+2012-03-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch5.adb, s-vaflop.adb, s-taprop-vms.adb, exp_ch6.adb,\n+\ts-gearop.adb, sem_ch6.adb, g-trasym.adb: Minor reformatting.\n+\n+2012-03-07  Javier Miranda  <miranda@adacore.com>\n+\n+\t* a-ngrear.ads: Add documentation.\n+\n 2012-03-07  Tristan Gingold  <gingold@adacore.com>\n \n \t* s-taprop-vms.adb (Create_Task): set thread name."}, {"sha": "2f38b9051eb6f64fec1358f35be886a3520c1753", "filename": "gcc/ada/a-ngrear.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844ec03891e1e5d99d7a8da2860a3ebfbfad62c8/gcc%2Fada%2Fa-ngrear.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844ec03891e1e5d99d7a8da2860a3ebfbfad62c8/gcc%2Fada%2Fa-ngrear.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngrear.ads?ref=844ec03891e1e5d99d7a8da2860a3ebfbfad62c8", "patch": "@@ -122,11 +122,11 @@ private\n    --  The following operations are either relatively simple compared to the\n    --  expense of returning unconstrained arrays, or are just function wrappers\n    --  calling procedures implementing the actual operation. By having the\n-   --  front end always inline these, the expense of the unconstrained returns\n+   --  front end inline these, the expense of the unconstrained returns\n    --  can be avoided.\n \n-   --  Confusing comment above, why does the front end always inline\n-   --  these functions ???\n+   --  Note: We use an extended return statement in their implementation to\n+   --  allow the frontend to inline these functions.\n \n    pragma Inline (\"+\");\n    pragma Inline (\"-\");"}, {"sha": "2b86d14b0051a1f7474951b993ff8aee778f85e4", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844ec03891e1e5d99d7a8da2860a3ebfbfad62c8/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844ec03891e1e5d99d7a8da2860a3ebfbfad62c8/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=844ec03891e1e5d99d7a8da2860a3ebfbfad62c8", "patch": "@@ -4251,8 +4251,8 @@ package body Exp_Ch6 is\n          return;\n \n       --  Skip inlining if the function returns an unconstrained type using\n-      --  an extended return statement since this part of the new model of\n-      --  inlining which is not yet supported by the current implementation.\n+      --  an extended return statement since this part of the new inlining\n+      --  model which is not yet supported by the current implementation. ???\n \n       elsif Is_Unc\n         and then"}, {"sha": "a825f80b704d2ad5474880fcf76fd83470b699da", "filename": "gcc/ada/g-trasym.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844ec03891e1e5d99d7a8da2860a3ebfbfad62c8/gcc%2Fada%2Fg-trasym.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844ec03891e1e5d99d7a8da2860a3ebfbfad62c8/gcc%2Fada%2Fg-trasym.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-trasym.adb?ref=844ec03891e1e5d99d7a8da2860a3ebfbfad62c8", "patch": "@@ -46,6 +46,7 @@ package body GNAT.Traceback.Symbolic is\n    begin\n       if Traceback'Length = 0 then\n          return \"\";\n+\n       else\n          declare\n             Img : String := System.Address_Image (Traceback (Traceback'First));"}, {"sha": "e1ce7e5d5170e44f56ef0370fa6f869341df33ee", "filename": "gcc/ada/s-gearop.adb", "status": "modified", "additions": 24, "deletions": 16, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844ec03891e1e5d99d7a8da2860a3ebfbfad62c8/gcc%2Fada%2Fs-gearop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844ec03891e1e5d99d7a8da2860a3ebfbfad62c8/gcc%2Fada%2Fs-gearop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-gearop.adb?ref=844ec03891e1e5d99d7a8da2860a3ebfbfad62c8", "patch": "@@ -33,17 +33,15 @@ with Ada.Numerics; use Ada.Numerics;\n \n package body System.Generic_Array_Operations is\n \n-   --  The local function Check_Unit_Last computes the index of the last\n-   --  element returned by Unit_Vector or Unit_Matrix. A separate function is\n-   --  needed to allow raising Constraint_Error before declaring the function\n-   --  result variable. The result variable needs to be declared first, to\n-   --  allow front-end inlining.\n-\n    function Check_Unit_Last\n      (Index : Integer;\n       Order : Positive;\n       First : Integer) return Integer;\n    pragma Inline_Always (Check_Unit_Last);\n+   --  Compute index of last element returned by Unit_Vector or Unit_Matrix.\n+   --  A separate function is needed to allow raising Constraint_Error before\n+   --  declaring the function result variable. The result variable needs to be\n+   --  declared first, to allow front-end inlining.\n \n    --------------\n    -- Diagonal --\n@@ -67,9 +65,9 @@ package body System.Generic_Array_Operations is\n    begin\n       if A'Length (1) /= A'Length (2) then\n          raise Constraint_Error with \"matrix is not square\";\n+      else\n+         return A'Length (1);\n       end if;\n-\n-      return A'Length (1);\n    end Square_Matrix_Length;\n \n    ---------------------\n@@ -111,6 +109,10 @@ package body System.Generic_Array_Operations is\n       --  Elementary row operation that subtracts Factor * M (Source, <>) from\n       --  M (Target, <>)\n \n+      -------------\n+      -- Sub_Row --\n+      -------------\n+\n       procedure Sub_Row\n         (M      : in out Matrix;\n          Target : Integer;\n@@ -255,6 +257,10 @@ package body System.Generic_Array_Operations is\n          procedure Swap (X, Y : in out Scalar);\n          --  Exchange the values of X and Y\n \n+         ----------\n+         -- Swap --\n+         ----------\n+\n          procedure Swap (X, Y : in out Scalar) is\n             T : constant Scalar := X;\n          begin\n@@ -418,8 +424,8 @@ package body System.Generic_Array_Operations is\n    begin\n       return R : Result_Matrix (Left'Range (1), Left'Range (2)) do\n          if Left'Length (1) /= Right'Length (1)\n-           or else\n-             Left'Length (2) /= Right'Length (2)\n+              or else\n+            Left'Length (2) /= Right'Length (2)\n          then\n             raise Constraint_Error with\n               \"matrices are of different dimension in elementwise operation\";\n@@ -443,14 +449,15 @@ package body System.Generic_Array_Operations is\n    ------------------------------------------------\n \n    function Matrix_Matrix_Scalar_Elementwise_Operation\n-     (X    : X_Matrix;\n-      Y    : Y_Matrix;\n-      Z    : Z_Scalar) return Result_Matrix is\n+     (X : X_Matrix;\n+      Y : Y_Matrix;\n+      Z : Z_Scalar) return Result_Matrix\n+   is\n    begin\n       return R : Result_Matrix (X'Range (1), X'Range (2)) do\n          if X'Length (1) /= Y'Length (1)\n-           or else\n-             X'Length (2) /= Y'Length (2)\n+              or else\n+            X'Length (2) /= Y'Length (2)\n          then\n             raise Constraint_Error with\n               \"matrices are of different dimension in elementwise operation\";\n@@ -817,7 +824,8 @@ package body System.Generic_Array_Operations is\n    procedure Update_Matrix_With_Matrix (X : in out X_Matrix; Y : Y_Matrix) is\n    begin\n       if X'Length (1) /= Y'Length (1)\n-        or else X'Length (2) /= Y'Length (2)\n+           or else\n+         X'Length (2) /= Y'Length (2)\n       then\n          raise Constraint_Error with\n            \"matrices are of different dimension in update operation\";"}, {"sha": "046aa037b6d6760934444331700d3b2814c938e8", "filename": "gcc/ada/s-taprop-vms.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844ec03891e1e5d99d7a8da2860a3ebfbfad62c8/gcc%2Fada%2Fs-taprop-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844ec03891e1e5d99d7a8da2860a3ebfbfad62c8/gcc%2Fada%2Fs-taprop-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-vms.adb?ref=844ec03891e1e5d99d7a8da2860a3ebfbfad62c8", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2011, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2012, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -781,6 +781,7 @@ package body System.Task_Primitives.Operations is\n         Ada.Unchecked_Conversion (System.Aux_DEC.Short_Address, Thread_Body);\n \n       Task_Name : String (1 .. System.Parameters.Max_Task_Image_Length + 1);\n+\n    begin\n       --  Since the initial signal mask of a thread is inherited from the\n       --  creator, we need to set our local signal mask to mask all signals\n@@ -811,6 +812,7 @@ package body System.Task_Primitives.Operations is\n       pragma Assert (Result = 0);\n \n       if T.Common.Task_Image_Len > 0 then\n+\n          --  Set thread name to ease debugging\n \n          Task_Name (1 .. T.Common.Task_Image_Len) :="}, {"sha": "ac50817c8d71354cf5329f9715da724a0dea1a22", "filename": "gcc/ada/s-vaflop.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844ec03891e1e5d99d7a8da2860a3ebfbfad62c8/gcc%2Fada%2Fs-vaflop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844ec03891e1e5d99d7a8da2860a3ebfbfad62c8/gcc%2Fada%2Fs-vaflop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vaflop.adb?ref=844ec03891e1e5d99d7a8da2860a3ebfbfad62c8", "patch": "@@ -444,22 +444,22 @@ package body System.Vax_Float_Operations is\n    end Sub_G;\n \n    ------------\n-   -- T_To_G --\n+   -- T_To_D --\n    ------------\n \n-   function T_To_G (X : T) return G is\n+   function T_To_D (X : T) return D is\n    begin\n-      return G (X);\n-   end T_To_G;\n+      return G_To_D (T_To_G (X));\n+   end T_To_D;\n \n    ------------\n-   -- T_To_D --\n+   -- T_To_G --\n    ------------\n \n-   function T_To_D (X : T) return D is\n+   function T_To_G (X : T) return G is\n    begin\n-      return G_To_D (T_To_G (X));\n-   end T_To_D;\n+      return G (X);\n+   end T_To_G;\n \n    -------------\n    -- Valid_D --"}, {"sha": "1ab90ad06c29f1b99563d332215586904ad9df56", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844ec03891e1e5d99d7a8da2860a3ebfbfad62c8/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844ec03891e1e5d99d7a8da2860a3ebfbfad62c8/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=844ec03891e1e5d99d7a8da2860a3ebfbfad62c8", "patch": "@@ -1654,9 +1654,10 @@ package body Sem_Ch5 is\n            (Original_Bound : Node_Id;\n             Analyzed_Bound : Node_Id) return Node_Id\n          is\n-            Assign        : Node_Id;\n-            Decl          : Node_Id;\n-            Id            : Entity_Id;\n+            Assign : Node_Id;\n+            Decl   : Node_Id;\n+            Id     : Entity_Id;\n+\n          begin\n             --  If the bound is a constant or an object, no need for a separate\n             --  declaration. If the bound is the result of previous expansion"}, {"sha": "3679dcc4040250484bba1389c64e6691ea2ed6e7", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844ec03891e1e5d99d7a8da2860a3ebfbfad62c8/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844ec03891e1e5d99d7a8da2860a3ebfbfad62c8/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=844ec03891e1e5d99d7a8da2860a3ebfbfad62c8", "patch": "@@ -9893,7 +9893,7 @@ package body Sem_Ch6 is\n       end if;\n \n       --  Internally generated subprograms, such as type-specific functions,\n-      --  don't get assertions checks.\n+      --  don't get assertion checks.\n \n       if Get_TSS_Name (Designator) /= TSS_Null then\n          return;"}]}