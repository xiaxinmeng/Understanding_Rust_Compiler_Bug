{"sha": "7d31d33130145b7c275746221c6d223abae8f973", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QzMWQzMzEzMDE0NWI3YzI3NTc0NjIyMWM2ZDIyM2FiYWU4Zjk3Mw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2019-04-14T09:38:01Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2019-04-14T09:38:01Z"}, "message": "Enable libphobos on Solaris 11/x86\n\n\ttoplevel:\n\t* configure.ac (enable_libphobos): Check LIBPHOBOS_SUPPORTED.\n\t* configure: Regenerate.\n\n\tlibphobos:\n\t* configure.tgt (LIBPHOBOS_SUPPORTED): Default to no.\n\tSet to yes explicitly.\n\t* configure.ac: Handle --enable-libphobos.\n\t(x86_64-*-solaris2.* | i?86-*-solaris2.*): Only mark supported\n\twith gas.\n\t(ENABLE_LIBPHOBOS): New conditional.\n\t* configure: Regenerate.\n\t* Makefile.am (SUBDIRS): Only set if ENABLE_LIBPHOBOS.\n\t* Makefile.in: Regenerate.\n\nFrom-SVN: r270348", "tree": {"sha": "c2e0b613134e46305a63e7397d181780ca637a15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2e0b613134e46305a63e7397d181780ca637a15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d31d33130145b7c275746221c6d223abae8f973", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d31d33130145b7c275746221c6d223abae8f973", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d31d33130145b7c275746221c6d223abae8f973", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d31d33130145b7c275746221c6d223abae8f973/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "235d1c467babc736f4800c5a26f2989fe41d6351", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/235d1c467babc736f4800c5a26f2989fe41d6351", "html_url": "https://github.com/Rust-GCC/gccrs/commit/235d1c467babc736f4800c5a26f2989fe41d6351"}], "stats": {"total": 141, "additions": 132, "deletions": 9}, "files": [{"sha": "6ad3ad3f18eee1ac4dcbd8970f55c2b579eae10c", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d31d33130145b7c275746221c6d223abae8f973/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d31d33130145b7c275746221c6d223abae8f973/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=7d31d33130145b7c275746221c6d223abae8f973", "patch": "@@ -1,3 +1,8 @@\n+2019-04-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac (enable_libphobos): Check LIBPHOBOS_SUPPORTED.\n+\t* configure: Regenerate.\n+\n 2019-04-12  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* configure.ac: Add target-zlib to target_libraries."}, {"sha": "1bb0a13198508e55ffd67b4979a934d9666bd4d1", "filename": "configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d31d33130145b7c275746221c6d223abae8f973/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d31d33130145b7c275746221c6d223abae8f973/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=7d31d33130145b7c275746221c6d223abae8f973", "patch": "@@ -3411,7 +3411,7 @@ if test -d ${srcdir}/libphobos; then\n $as_echo_n \"checking for libphobos support... \" >&6; }\n \tif (srcdir=${srcdir}/libphobos; \\\n \t\t. ${srcdir}/configure.tgt; \\\n-\t\ttest -n \"$UNSUPPORTED\")\n+\t\ttest \"$LIBPHOBOS_SUPPORTED\" != \"yes\")\n \tthen\n \t    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n $as_echo \"no\" >&6; }"}, {"sha": "e3674a338183a794045485eb493e1fb86c75dae0", "filename": "configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d31d33130145b7c275746221c6d223abae8f973/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d31d33130145b7c275746221c6d223abae8f973/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=7d31d33130145b7c275746221c6d223abae8f973", "patch": "@@ -695,7 +695,7 @@ if test -d ${srcdir}/libphobos; then\n \tAC_MSG_CHECKING([for libphobos support])\n \tif (srcdir=${srcdir}/libphobos; \\\n \t\t. ${srcdir}/configure.tgt; \\\n-\t\ttest -n \"$UNSUPPORTED\")\n+\t\ttest \"$LIBPHOBOS_SUPPORTED\" != \"yes\")\n \tthen\n \t    AC_MSG_RESULT([no])\n \t    noconfigdirs=\"$noconfigdirs target-libphobos\""}, {"sha": "869d96ea77ddf1bff43540b71f3998c77a56deae", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d31d33130145b7c275746221c6d223abae8f973/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d31d33130145b7c275746221c6d223abae8f973/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=7d31d33130145b7c275746221c6d223abae8f973", "patch": "@@ -1,3 +1,16 @@\n+2019-04-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.tgt (LIBPHOBOS_SUPPORTED): Default to no.\n+\tSet to yes explicitly.\n+\t(x86_64-*-solaris2.11* | i?86-*-solaris2.11*): Mark supported.\n+\t* configure.ac: Handle --enable-libphobos.\n+\t(x86_64-*-solaris2.* | i?86-*-solaris2.*): Only mark supported\n+\twith gas.\n+\t(ENABLE_LIBPHOBOS): New conditional.\n+\t* configure: Regenerate.\n+\t* Makefile.am (SUBDIRS): Only set if ENABLE_LIBPHOBOS.\n+\t* Makefile.in: Regenerate.\n+\n 2019-04-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \t    Iain Buclaw  <ibuclaw@gdcproject.org>\n "}, {"sha": "dcc77c3809b527f3c1f195089247b07ba58e5258", "filename": "libphobos/Makefile.am", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d31d33130145b7c275746221c6d223abae8f973/libphobos%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d31d33130145b7c275746221c6d223abae8f973/libphobos%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FMakefile.am?ref=7d31d33130145b7c275746221c6d223abae8f973", "patch": "@@ -15,7 +15,11 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-SUBDIRS = libdruntime src testsuite\n+if ENABLE_LIBPHOBOS\n+  SUBDIRS = libdruntime src testsuite\n+else\n+  SUBDIRS =\n+endif\n \n ACLOCAL_AMFLAGS = -I . -I .. -I ../config\n "}, {"sha": "58368c92b49209f59a0966b48892342525f5ea33", "filename": "libphobos/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d31d33130145b7c275746221c6d223abae8f973/libphobos%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d31d33130145b7c275746221c6d223abae8f973/libphobos%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FMakefile.in?ref=7d31d33130145b7c275746221c6d223abae8f973", "patch": "@@ -188,7 +188,7 @@ am__define_uniq_tagged_files = \\\n ETAGS = etags\n CTAGS = ctags\n CSCOPE = cscope\n-DIST_SUBDIRS = $(SUBDIRS)\n+DIST_SUBDIRS = libdruntime src testsuite\n ACLOCAL = @ACLOCAL@\n AMTAR = @AMTAR@\n AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@\n@@ -335,7 +335,8 @@ target_vendor = @target_vendor@\n top_build_prefix = @top_build_prefix@\n top_builddir = @top_builddir@\n top_srcdir = @top_srcdir@\n-SUBDIRS = libdruntime src testsuite\n+@ENABLE_LIBPHOBOS_FALSE@SUBDIRS = \n+@ENABLE_LIBPHOBOS_TRUE@SUBDIRS = libdruntime src testsuite\n ACLOCAL_AMFLAGS = -I . -I .. -I ../config\n \n # Multilib support."}, {"sha": "87e4e4a7c9b19339bc0d2f30321b75508633ec36", "filename": "libphobos/configure", "status": "modified", "additions": 60, "deletions": 2, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d31d33130145b7c275746221c6d223abae8f973/libphobos%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d31d33130145b7c275746221c6d223abae8f973/libphobos%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure?ref=7d31d33130145b7c275746221c6d223abae8f973", "patch": "@@ -686,6 +686,8 @@ DRUNTIME_GC_ENABLE_TRUE\n libphobos_srcdir\n libphobos_builddir\n get_gcc_base_ver\n+ENABLE_LIBPHOBOS_FALSE\n+ENABLE_LIBPHOBOS_TRUE\n phobos_compiler_shared_flag\n phobos_compiler_pic_flag\n OTOOL64\n@@ -813,6 +815,7 @@ with_pic\n enable_fast_install\n with_gnu_ld\n enable_libtool_lock\n+enable_libphobos\n with_gcc_major_version_only\n enable_werror\n enable_druntime_gc\n@@ -1463,6 +1466,7 @@ Optional Features:\n   --enable-fast-install[=PKGS]\n                           optimize for fast installation [default=yes]\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n+  --enable-libphobos      Enable libphobos\n   --enable-werror         turns on -Werror [default=no]\n   --enable-druntime-gc    enable D runtime garbage collector (default: yes)\n   --enable-unix           enables Unix runtime (default: yes, for Unix\n@@ -11619,7 +11623,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11622 \"configure\"\n+#line 11626 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11725,7 +11729,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11728 \"configure\"\n+#line 11732 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13903,6 +13907,56 @@ fi\n lt_prog_compiler_pic_D=\"$phobos_compiler_shared_flag\"\n pic_mode='default'\n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for --enable-libphobos\" >&5\n+$as_echo_n \"checking for --enable-libphobos... \" >&6; }\n+# Check whether --enable-libphobos was given.\n+if test \"${enable_libphobos+set}\" = set; then :\n+  enableval=$enable_libphobos;\n+fi\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $enable_libphobos\" >&5\n+$as_echo \"$enable_libphobos\" >&6; }\n+\n+# See if supported.\n+unset LIBPHOBOS_SUPPORTED\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for host support for libphobos\" >&5\n+$as_echo_n \"checking for host support for libphobos... \" >&6; }\n+. ${srcdir}/configure.tgt\n+case ${host} in\n+  x86_64-*-solaris2.* | i?86-*-solaris2.*)\n+    # libphobos doesn't compile with the Solaris/x86 assembler due to a\n+    # relatively low linelength limit.\n+    as_prog=`$CC -print-prog-name=as`\n+    if test -n \"$as_prog\" && $as_prog -v /dev/null 2>&1 | grep GNU > /dev/null 2>&1; then\n+      druntime_cv_use_gas=yes;\n+    else\n+      druntime_cv_use_gas=no;\n+    fi\n+    rm -f a.out\n+    if test x$druntime_cv_use_gas = xno; then\n+      LIBPHOBOS_SUPPORTED=no\n+    fi\n+    ;;\n+esac\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $LIBPHOBOS_SUPPORTED\" >&5\n+$as_echo \"$LIBPHOBOS_SUPPORTED\" >&6; }\n+\n+# Decide if it's usable.\n+case $LIBPHOBOS_SUPPORTED:$enable_libphobos in\n+*:no)  use_libphobos=no  ;;\n+*:yes) use_libphobos=yes ;;\n+yes:*) use_libphobos=yes ;;\n+*:*)   use_libphobos=no  ;;\n+esac\n+ if test x$use_libphobos = xyes; then\n+  ENABLE_LIBPHOBOS_TRUE=\n+  ENABLE_LIBPHOBOS_FALSE='#'\n+else\n+  ENABLE_LIBPHOBOS_TRUE='#'\n+  ENABLE_LIBPHOBOS_FALSE=\n+fi\n+\n+\n # Determine what GCC version number to use in filesystem paths.\n \n   get_gcc_base_ver=\"cat\"\n@@ -15349,6 +15403,10 @@ if test -z \"${MAINTAINER_MODE_TRUE}\" && test -z \"${MAINTAINER_MODE_FALSE}\"; then\n   as_fn_error $? \"conditional \\\"MAINTAINER_MODE\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${ENABLE_LIBPHOBOS_TRUE}\" && test -z \"${ENABLE_LIBPHOBOS_FALSE}\"; then\n+  as_fn_error $? \"conditional \\\"ENABLE_LIBPHOBOS\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${DRUNTIME_GC_ENABLE_TRUE}\" && test -z \"${DRUNTIME_GC_ENABLE_FALSE}\"; then\n   as_fn_error $? \"conditional \\\"DRUNTIME_GC_ENABLE\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5"}, {"sha": "d3a7f2709b1c8d499db3d4bd30e09c89738f9645", "filename": "libphobos/configure.ac", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d31d33130145b7c275746221c6d223abae8f973/libphobos%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d31d33130145b7c275746221c6d223abae8f973/libphobos%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure.ac?ref=7d31d33130145b7c275746221c6d223abae8f973", "patch": "@@ -113,6 +113,42 @@ AC_SUBST(phobos_compiler_shared_flag)\n lt_prog_compiler_pic_D=\"$phobos_compiler_shared_flag\"\n pic_mode='default'\n \n+AC_MSG_CHECKING([for --enable-libphobos])\n+AC_ARG_ENABLE(libphobos,\n+  [AS_HELP_STRING([--enable-libphobos], [Enable libphobos])])\n+AC_MSG_RESULT($enable_libphobos)\n+\n+# See if supported.\n+unset LIBPHOBOS_SUPPORTED\n+AC_MSG_CHECKING([for host support for libphobos])\n+. ${srcdir}/configure.tgt\n+case ${host} in\n+  x86_64-*-solaris2.* | i?86-*-solaris2.*)\n+    # libphobos doesn't compile with the Solaris/x86 assembler due to a\n+    # relatively low linelength limit.\n+    as_prog=`$CC -print-prog-name=as`\n+    if test -n \"$as_prog\" && $as_prog -v /dev/null 2>&1 | grep GNU > /dev/null 2>&1; then\n+      druntime_cv_use_gas=yes;\n+    else\n+      druntime_cv_use_gas=no;\n+    fi\n+    rm -f a.out\n+    if test x$druntime_cv_use_gas = xno; then\n+      LIBPHOBOS_SUPPORTED=no\n+    fi\n+    ;;\n+esac\n+AC_MSG_RESULT($LIBPHOBOS_SUPPORTED)\n+\n+# Decide if it's usable.\n+case $LIBPHOBOS_SUPPORTED:$enable_libphobos in\n+*:no)  use_libphobos=no  ;;\n+*:yes) use_libphobos=yes ;;\n+yes:*) use_libphobos=yes ;;\n+*:*)   use_libphobos=no  ;;\n+esac\n+AM_CONDITIONAL(ENABLE_LIBPHOBOS, test x$use_libphobos = xyes)\n+\n # Determine what GCC version number to use in filesystem paths.\n GCC_BASE_VER\n "}, {"sha": "b30f08581080b2c79893936a5887b18125035be1", "filename": "libphobos/configure.tgt", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d31d33130145b7c275746221c6d223abae8f973/libphobos%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d31d33130145b7c275746221c6d223abae8f973/libphobos%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure.tgt?ref=7d31d33130145b7c275746221c6d223abae8f973", "patch": "@@ -21,18 +21,24 @@\n \n # Disable the libphobos or libdruntime components on untested or known\n # broken systems.  More targets shall be added after testing.\n+LIBPHOBOS_SUPPORTED=no\n case \"${target}\" in\n   arm*-*-linux*)\n+\tLIBPHOBOS_SUPPORTED=yes\n \t;;\n   mips*-*-linux*)\n+\tLIBPHOBOS_SUPPORTED=yes\n \t;;\n   x86_64-*-kfreebsd*-gnu | i?86-*-kfreebsd*-gnu)\n+\tLIBPHOBOS_SUPPORTED=yes\n \t;;\n   x86_64-*-linux* | i?86-*-linux*)\n+\tLIBPHOBOS_SUPPORTED=yes\n \t;;\n   x86_64-*-netbsd* | i?86-*-netbsd*)\n+\tLIBPHOBOS_SUPPORTED=yes\n \t;;\n-  *)\n-\tUNSUPPORTED=1\n+  x86_64-*-solaris2.11* | i?86-*-solaris2.11*)\n+\tLIBPHOBOS_SUPPORTED=yes\n \t;;\n esac"}]}