{"sha": "2298ca2d3e133945f5034065e843e2ea0f36e0bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI5OGNhMmQzZTEzMzk0NWY1MDM0MDY1ZTg0M2UyZWEwZjM2ZTBiYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-10-28T09:34:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-10-28T09:36:31Z"}, "message": "openmp: Implicitly discover declare target for variants of declare variant calls\n\nThis marks all variants of declare variant also declare target if the base\nfunctions are called directly in target regions or declare target functions.\n\n2020-10-28  Jakub Jelinek  <jakub@redhat.com>\n\ngcc/\n\t* omp-offload.c (omp_declare_target_tgt_fn_r): Handle direct calls to\n\tdeclare variant base functions.\nlibgomp/\n\t* testsuite/libgomp.c/target-42.c: New test.", "tree": {"sha": "df6cf359ee3a11e786641b73d6f51872410ee4d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df6cf359ee3a11e786641b73d6f51872410ee4d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2298ca2d3e133945f5034065e843e2ea0f36e0bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2298ca2d3e133945f5034065e843e2ea0f36e0bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2298ca2d3e133945f5034065e843e2ea0f36e0bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2298ca2d3e133945f5034065e843e2ea0f36e0bb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f39b64e57ab8e8f69a017e4bd20aa6dd2aec492", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f39b64e57ab8e8f69a017e4bd20aa6dd2aec492", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f39b64e57ab8e8f69a017e4bd20aa6dd2aec492"}], "stats": {"total": 65, "additions": 63, "deletions": 2}, "files": [{"sha": "4490701147caed9c93fda9df5708dc3a5dac04b8", "filename": "gcc/omp-offload.c", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2298ca2d3e133945f5034065e843e2ea0f36e0bb/gcc%2Fomp-offload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2298ca2d3e133945f5034065e843e2ea0f36e0bb/gcc%2Fomp-offload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-offload.c?ref=2298ca2d3e133945f5034065e843e2ea0f36e0bb", "patch": "@@ -196,7 +196,26 @@ omp_declare_target_var_p (tree decl)\n static tree\n omp_discover_declare_target_tgt_fn_r (tree *tp, int *walk_subtrees, void *data)\n {\n-  if (TREE_CODE (*tp) == FUNCTION_DECL)\n+  if (TREE_CODE (*tp) == CALL_EXPR\n+      && CALL_EXPR_FN (*tp)\n+      && TREE_CODE (CALL_EXPR_FN (*tp)) == ADDR_EXPR\n+      && TREE_CODE (TREE_OPERAND (CALL_EXPR_FN (*tp), 0)) == FUNCTION_DECL\n+      && lookup_attribute (\"omp declare variant base\",\n+\t\t\t   DECL_ATTRIBUTES (TREE_OPERAND (CALL_EXPR_FN (*tp),\n+\t\t\t\t\t\t\t  0))))\n+    {\n+      tree fn = TREE_OPERAND (CALL_EXPR_FN (*tp), 0);\n+      for (tree attr = DECL_ATTRIBUTES (fn); attr; attr = TREE_CHAIN (attr))\n+\t{\n+\t  attr = lookup_attribute (\"omp declare variant base\", attr);\n+\t  if (attr == NULL_TREE)\n+\t    break;\n+\t  tree purpose = TREE_PURPOSE (TREE_VALUE (attr));\n+\t  if (TREE_CODE (purpose) == FUNCTION_DECL)\n+\t    omp_discover_declare_target_tgt_fn_r (&purpose, walk_subtrees, data);\n+\t}\n+    }\n+  else if (TREE_CODE (*tp) == FUNCTION_DECL)\n     {\n       tree decl = *tp;\n       tree id = get_identifier (\"omp declare target\");\n@@ -237,7 +256,7 @@ omp_discover_declare_target_tgt_fn_r (tree *tp, int *walk_subtrees, void *data)\n \t}\n       if (omp_declare_target_fn_p (decl)\n \t  || lookup_attribute (\"omp declare target host\",\n-\t\t\t\t    DECL_ATTRIBUTES (decl)))\n+\t\t\t       DECL_ATTRIBUTES (decl)))\n \treturn NULL_TREE;\n \n       if (!DECL_EXTERNAL (decl) && DECL_SAVED_TREE (decl))"}, {"sha": "fc0e26538ac965aaeed5d03d91f69af0c01d0ea8", "filename": "libgomp/testsuite/libgomp.c/target-42.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2298ca2d3e133945f5034065e843e2ea0f36e0bb/libgomp%2Ftestsuite%2Flibgomp.c%2Ftarget-42.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2298ca2d3e133945f5034065e843e2ea0f36e0bb/libgomp%2Ftestsuite%2Flibgomp.c%2Ftarget-42.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Ftarget-42.c?ref=2298ca2d3e133945f5034065e843e2ea0f36e0bb", "patch": "@@ -0,0 +1,42 @@\n+#include <stdio.h>\n+\n+int\n+on_nvptx (void)\n+{\n+  return 1;\n+}\n+\n+int\n+on_gcn (void)\n+{\n+  return 2;\n+}\n+\n+#pragma omp declare variant (on_nvptx) match(construct={target},device={arch(nvptx)})\n+#pragma omp declare variant (on_gcn) match(construct={target},device={arch(gcn)})\n+int\n+on (void)\n+{\n+  return 0;\n+}\n+\n+int\n+main ()\n+{\n+  int v;\n+  #pragma omp target map(from:v)\n+  v = on ();\n+  switch (v)\n+    {\n+    default:\n+      printf (\"Host fallback or unknown offloading\\n\");\n+      break;\n+    case 1:\n+      printf (\"Offloading to NVidia PTX\\n\");\n+      break;\n+    case 2:\n+      printf (\"Offloading to AMD GCN\\n\");\n+      break;\n+    }\n+  return 0;\n+}"}]}