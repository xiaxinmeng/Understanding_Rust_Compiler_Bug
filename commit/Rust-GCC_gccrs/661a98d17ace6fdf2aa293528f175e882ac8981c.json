{"sha": "661a98d17ace6fdf2aa293528f175e882ac8981c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYxYTk4ZDE3YWNlNmZkZjJhYTI5MzUyOGYxNzVlODgyYWM4OTgxYw==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@albatross.co.nz", "date": "2000-10-30T01:51:34Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2000-10-30T01:51:34Z"}, "message": "BitSet.java: Updated @specnote.\n\n2000-10-30  Bryce McKinlay  <bryce@albatross.co.nz>\n\n\t* java/util/BitSet.java: Updated @specnote.\n\nFrom-SVN: r37138", "tree": {"sha": "223576160418ba3d5267dc85b9ee15df44965d20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/223576160418ba3d5267dc85b9ee15df44965d20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/661a98d17ace6fdf2aa293528f175e882ac8981c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/661a98d17ace6fdf2aa293528f175e882ac8981c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/661a98d17ace6fdf2aa293528f175e882ac8981c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/661a98d17ace6fdf2aa293528f175e882ac8981c/comments", "author": null, "committer": null, "parents": [{"sha": "23d3495f4523d1ec1ebda70cdf71168238be7898", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23d3495f4523d1ec1ebda70cdf71168238be7898", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23d3495f4523d1ec1ebda70cdf71168238be7898"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "be1a10a11072a83ac55f65d3c2640c5540874f2a", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/661a98d17ace6fdf2aa293528f175e882ac8981c/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/661a98d17ace6fdf2aa293528f175e882ac8981c/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=661a98d17ace6fdf2aa293528f175e882ac8981c", "patch": "@@ -1,3 +1,7 @@\n+2000-10-30  Bryce McKinlay  <bryce@albatross.co.nz>\n+\n+\t* java/util/BitSet.java: Updated @specnote.\n+\n 2000-10-29  Bryce McKinlay  <bryce@albatross.co.nz>\n \n \t* java/util/AbstractCollection.java (addAll): Use size() instead of"}, {"sha": "fa0f3a13e88230324b979041caeeb794595a0426", "filename": "libjava/java/util/BitSet.java", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/661a98d17ace6fdf2aa293528f175e882ac8981c/libjava%2Fjava%2Futil%2FBitSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/661a98d17ace6fdf2aa293528f175e882ac8981c/libjava%2Fjava%2Futil%2FBitSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FBitSet.java?ref=661a98d17ace6fdf2aa293528f175e882ac8981c", "patch": "@@ -33,17 +33,12 @@\n  * while another thread is simultaneously modifying it, the results are\n  * undefined.\n  *\n- * @specnote There is some confusion as to whether or not this class should\n- *           be synchronized. JDK 1.1 javadocs explicitly state that the \n- *           class is NOT synchronized, however the code listed in the JDK 1.3\n- *           javadoc for the hashCode() method implies that it is. It is not\n- *           stated elsewhere in the 1.2 javadoc that the class is \n- *           synchronized, unlike Hashtable and Vector. From an efficiency \n- *           perspective, it is very undesirable to synchronize this class\n- *           because multiple locks and explicit lock ordering are required\n- *           to safely synchronize some methods. For this reason we're going\n- *           with the unsynchronized implementation unless the specs are \n- *           changed to explicitly say otherwise.\n+ * @specnote Historically, there has been some confusion as to whether or not \n+ *           this class should be synchronized. From an efficiency perspective,\n+ *           it is very undesirable to synchronize it because multiple locks \n+ *           and explicit lock ordering are required to safely synchronize some\n+ *           methods. The JCL 1.2 supplement book specifies that as of JDK \n+ *           1.2, the class is no longer synchronized.\n  *\n  * @author Jochen Hoenicke\n  * @author Tom Tromey <tromey@cygnus.com>"}]}