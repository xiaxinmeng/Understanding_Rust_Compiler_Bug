{"sha": "511820a8dc2a5f750cadd76456f4aac4dd0b640d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTExODIwYThkYzJhNWY3NTBjYWRkNzY0NTZmNGFhYzRkZDBiNjQwZA==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2015-03-08T11:52:51Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2015-03-08T11:52:51Z"}, "message": "re PR fortran/60898 (model compile error with gfortran 4.7 and gcc 4.9)\n\n        PR fortran/60898\nfortran/\n        * resolve.c (resolve_symbol): Check that the symbol found by\n        name lookup really is the current symbol being resolved.\ntestsuite/\n        * gfortran.dg/entry_20.f90: New.\n\nFrom-SVN: r221262", "tree": {"sha": "2e967917def23592876cee5ad306e34bf540e115", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e967917def23592876cee5ad306e34bf540e115"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/511820a8dc2a5f750cadd76456f4aac4dd0b640d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/511820a8dc2a5f750cadd76456f4aac4dd0b640d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/511820a8dc2a5f750cadd76456f4aac4dd0b640d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/511820a8dc2a5f750cadd76456f4aac4dd0b640d/comments", "author": null, "committer": null, "parents": [{"sha": "9e09e4ac1c81c10f79254d7e2308b34f4b7cce83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e09e4ac1c81c10f79254d7e2308b34f4b7cce83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e09e4ac1c81c10f79254d7e2308b34f4b7cce83"}], "stats": {"total": 170, "additions": 166, "deletions": 4}, "files": [{"sha": "85eb3bb8fde06dbe3531d3858ac20be7b79c470b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/511820a8dc2a5f750cadd76456f4aac4dd0b640d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/511820a8dc2a5f750cadd76456f4aac4dd0b640d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=511820a8dc2a5f750cadd76456f4aac4dd0b640d", "patch": "@@ -1,3 +1,9 @@\n+2015-03-08  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/60898\n+\t* resolve.c (resolve_symbol): Check that the symbol found by\n+\tname lookup really is the current symbol being resolved.\n+\n 2015-03-02  Tobias Burnus  <burnus@net-b.de>\n \n \t* check.c (gfc_check_atomic): Properly check for coarrayness"}, {"sha": "942a9ad9ac4df5d432009584fc533a2e48d0a420", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/511820a8dc2a5f750cadd76456f4aac4dd0b640d/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/511820a8dc2a5f750cadd76456f4aac4dd0b640d/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=511820a8dc2a5f750cadd76456f4aac4dd0b640d", "patch": "@@ -13125,10 +13125,13 @@ resolve_symbol (gfc_symbol *sym)\n \t    {\n \t      this_symtree = gfc_find_symtree (gfc_current_ns->sym_root,\n \t\t\t\t\t       sym->name);\n-\t      gfc_release_symbol (sym);\n-\t      symtree->n.sym->refs++;\n-\t      this_symtree->n.sym = symtree->n.sym;\n-\t      return;\n+\t      if (this_symtree->n.sym == sym)\n+\t\t{\n+\t\t  symtree->n.sym->refs++;\n+\t\t  gfc_release_symbol (sym);\n+\t\t  this_symtree->n.sym = symtree->n.sym;\n+\t\t  return;\n+\t\t}\n \t    }\n \t}\n "}, {"sha": "eb9f0dfd5387ae80eec5bb3f5a9c6a0d530651b6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/511820a8dc2a5f750cadd76456f4aac4dd0b640d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/511820a8dc2a5f750cadd76456f4aac4dd0b640d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=511820a8dc2a5f750cadd76456f4aac4dd0b640d", "patch": "@@ -1,3 +1,8 @@\n+2015-03-08  Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/60898\n+\t* gfortran.dg/entry_20.f90: New.\n+\n 2015-03-07  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/65153"}, {"sha": "1069d1e38163741cd273e7e3dad235f281072e1f", "filename": "gcc/testsuite/gfortran.dg/entry_20.f90", "status": "added", "additions": 148, "deletions": 0, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/511820a8dc2a5f750cadd76456f4aac4dd0b640d/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_20.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/511820a8dc2a5f750cadd76456f4aac4dd0b640d/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_20.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_20.f90?ref=511820a8dc2a5f750cadd76456f4aac4dd0b640d", "patch": "@@ -0,0 +1,148 @@\n+! { dg-do compile }\n+!\n+! PR fortran/50898\n+! A symbol was freed prematurely during resolution,\n+! despite remaining reachable\n+!\n+! Original testcase from <shaojuncycle@gmail.com>\n+\n+MODULE MODULE_pmat2\n+\n+IMPLICIT NONE\n+\n+INTERFACE cad1b;  MODULE PROCEDURE cad1b;          END INTERFACE\n+INTERFACE csb1b;  MODULE PROCEDURE csb1b;          END INTERFACE\n+INTERFACE copbt;  MODULE PROCEDURE copbt;          END INTERFACE\n+INTERFACE conbt;  MODULE PROCEDURE conbt;          END INTERFACE\n+INTERFACE copmb;  MODULE PROCEDURE copmb;          END INTERFACE\n+INTERFACE conmb;  MODULE PROCEDURE conmb;          END INTERFACE\n+INTERFACE copbm;  MODULE PROCEDURE copbm;          END INTERFACE\n+INTERFACE conbm;  MODULE PROCEDURE conbm;          END INTERFACE\n+INTERFACE mulvb;  MODULE PROCEDURE mulvb;          END INTERFACE\n+INTERFACE madvb;  MODULE PROCEDURE madvb;          END INTERFACE\n+INTERFACE msbvb;  MODULE PROCEDURE msbvb;          END INTERFACE\n+INTERFACE mulxb;  MODULE PROCEDURE mulxb;          END INTERFACE\n+INTERFACE madxb;  MODULE PROCEDURE madxb;          END INTERFACE\n+INTERFACE msbxb;  MODULE PROCEDURE msbxb;          END INTERFACE\n+\n+integer, parameter :: i_kind=4\n+integer, parameter :: r_kind=4\n+real(r_kind), parameter :: zero=0.0\n+real(r_kind), parameter :: one=1.0\n+real(r_kind), parameter :: two=2.0\n+\n+CONTAINS\n+\n+SUBROUTINE cad1b(a,m1,mah1,mah2,mirror2)\n+implicit none\n+INTEGER(i_kind),  INTENT(IN   ) :: m1,mah1,mah2,mirror2\n+REAL(r_kind),     INTENT(INOUT) :: a(0:m1-1,-mah1:mah2)\n+RETURN\n+ENTRY     csb1b(a,m1,mah1,mah2,mirror2)\n+END SUBROUTINE cad1b\n+\n+SUBROUTINE copbt(a,b,m1,m2,mah1,mah2)\n+implicit none\n+INTEGER(i_kind),  INTENT(IN   ) :: m1, m2, mah1, mah2\n+REAL(r_kind),     INTENT(IN   ) :: a(m1,-mah1:mah2)\n+REAL(r_kind),     INTENT(  OUT) :: b(m2,-mah2:mah1)\n+RETURN\n+ENTRY    conbt(a,b,m1,m2,mah1,mah2)\n+END SUBROUTINE copbt\n+\n+SUBROUTINE copmb(afull,aband,m1,m2,mah1,mah2)\n+implicit none\n+INTEGER(i_kind),                           INTENT(IN   ) :: m1, m2, mah1, mah2\n+REAL(r_kind),     DIMENSION(m1,m2),        INTENT(IN   ) :: afull\n+REAL(r_kind),     DIMENSION(m1,-mah1:mah2),INTENT(  OUT) :: aband\n+RETURN\n+ENTRY      conmb(afull,aband,m1,m2,mah1,mah2)\n+END SUBROUTINE copmb\n+\n+SUBROUTINE copbm(aband,afull,m1,m2,mah1,mah2)\n+implicit none\n+INTEGER(i_kind),                           INTENT(IN   ) :: m1, m2, mah1, mah2\n+REAL(r_kind),     DIMENSION(m1,-mah1:mah2),INTENT(IN   ) :: aband\n+REAL(r_kind),     DIMENSION(m1,m2),        INTENT(  OUT) :: afull\n+RETURN\n+ENTRY      conbm(aband,afull,m1,m2,mah1,mah2)\n+END SUBROUTINE copbm\n+\n+SUBROUTINE mulbb(a,b,c,m1,m2,mah1,mah2,mbh1,mbh2,mch1,mch2)\n+implicit none\n+INTEGER(i_kind),  INTENT(IN   ) :: m1, m2, mah1, mah2, mbh1, mbh2, mch1, mch2\n+REAL(r_kind),     INTENT(IN   ) :: a(m1,-mah1:mah2), b(m2,-mbh1:mbh2)\n+REAL(r_kind),     INTENT(INOUT) :: c(m1,-mch1:mch2)\n+INTEGER(i_kind)                :: nch1, nch2, j, k, jpk, i1,i2\n+c=zero\n+ENTRY      madbb(a,b,c,m1,m2,mah1,mah2,mbh1,mbh2,mch1,mch2)\n+nch1=mah1+mbh1; nch2=mah2+mbh2\n+IF(nch1 /= mch1 .OR. nch2 /= mch2)STOP 'In MULBB, dimensions inconsistent'\n+DO j=-mah1,mah2\n+   DO k=-mbh1,mbh2; jpk=j+k; i1=MAX(1,1-j); i2=MIN(m1,m2-j)\n+      c(i1:i2,jpk)=c(i1:i2,jpk)+a(i1:i2,j)*b(j+i1:j+i2,k)\n+   ENDDO\n+ENDDO\n+END SUBROUTINE mulbb\n+\n+SUBROUTINE MULVB(v1,a,v2, m1,m2,mah1,mah2)\n+implicit none\n+INTEGER(i_kind),  INTENT(IN   ) :: m1, m2, mah1, mah2\n+REAL(r_kind),     INTENT(IN   ) :: v1(m1), a(m1,-mah1:mah2)\n+REAL(r_kind),     INTENT(  OUT) :: v2(m2)\n+INTEGER(i_kind)                 :: j, i1,i2\n+v2=zero\n+ENTRY    madvb(v1,a,v2, m1,m2,mah1,mah2)\n+DO j=-mah1,mah2; i1=MAX(1,1-j); i2=MIN(m1,m2-j)\n+   v2(j+i1:j+i2)=v2(j+i1:j+i2)+v1(i1:i2)*a(i1:i2,j)\n+ENDDO\n+RETURN\n+ENTRY    msbvb(v1,a,v2, m1,m2,mah1,mah2)\n+DO j=-mah1,mah2; i1=MAX(1,1-j); i2=MIN(m1,m2-j)\n+   v2(j+i1:j+i2)=v2(j+i1:j+i2)-v1(i1:i2)*a(i1:i2,j)\n+ENDDO\n+END SUBROUTINE mulvb\n+\n+SUBROUTINE mulxb(v1,a,v2, m1,m2,mah1,mah2,my)\n+implicit none\n+INTEGER(i_kind),  INTENT(IN   ) :: m1, m2, mah1, mah2, my\n+REAL(r_kind),     INTENT(IN   ) :: v1(m1,my), a(m1,-mah1:mah2)\n+REAL(r_kind),     INTENT(  OUT) :: v2(m2,my)\n+INTEGER(i_kind)                 :: i,j\n+v2=zero\n+ENTRY    madxb(v1,a,v2, m1,m2,mah1,mah2,my)\n+DO j=-mah1,mah2\n+   DO i=MAX(1,1-j),MIN(m1,m2-j); v2(j+i,:)=v2(j+i,:)+v1(i,:)*a(i,j); ENDDO\n+ENDDO\n+RETURN\n+ENTRY    msbxb(v1,a,v2, m1,m2,mah1,mah2,my)\n+DO j=-mah1,mah2\n+   DO i=MAX(1,1-j),MIN(m1,m2-j); v2(j+i,:)=v2(j+i,:)-v1(i,:)*a(i,j); ENDDO\n+ENDDO\n+END SUBROUTINE mulxb\n+\n+SUBROUTINE mulyb(v1,a,v2, m1,m2,mah1,mah2,mx)\n+implicit none\n+INTEGER(i_kind),  INTENT(IN   ) :: m1, m2, mah1, mah2, mx\n+REAL(r_kind),     INTENT(IN   ) :: v1(mx,m1), a(m1,-mah1:mah2)\n+REAL(r_kind),     INTENT(  OUT) :: v2(mx,m2)\n+INTEGER(i_kind)                 :: i,j\n+v2=zero\n+ENTRY    madyb(v1,a,v2, m1,m2,mah1,mah2,mx)\n+DO j=-mah1,mah2\n+    DO i=MAX(1,1-j),MIN(m1,m2-j)\n+      v2(:,j+i)=v2(:,j+i)+v1(:,i)*a(i,j)\n+    ENDDO\n+ENDDO\n+RETURN\n+ENTRY    msbyb(v1,a,v2, m1,m2,mah1,mah2,mx)\n+ DO j=-mah1,mah2\n+    DO i=MAX(1,1-j),MIN(m1,m2-j)\n+       v2(:,j+i)=v2(:,j+i)-v1(:,i)*a(i,j)\n+    ENDDO\n+ ENDDO\n+RETURN\n+END SUBROUTINE mulyb\n+\n+END MODULE MODULE_pmat2\n+"}]}