{"sha": "aa0a659ca69cf092fcfb6ebb58a749b63a04be48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWEwYTY1OWNhNjljZjA5MmZjZmI2ZWJiNThhNzQ5YjYzYTA0YmU0OA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-08-14T20:12:32Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-08-14T20:12:32Z"}, "message": "typeck.c (composite_pointer_type, [...]): When a pedwarn is suppressed under SFINAE, return error_mark_node.\n\n2014-08-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* typeck.c (composite_pointer_type, cxx_sizeof_or_alignof_type,\n\tcp_build_array_ref, cp_build_function_call_vec): When a\n\tpedwarn is suppressed under SFINAE, return error_mark_node.\n\n\t* typeck.c (cxx_sizeof_or_alignof_type): Fix complain &\n\ttf_warning_or_error, where complain is a bool, glitch.\n\nFrom-SVN: r213983", "tree": {"sha": "47a77d1ffba8959442daecf27b4f471eed8bb877", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47a77d1ffba8959442daecf27b4f471eed8bb877"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa0a659ca69cf092fcfb6ebb58a749b63a04be48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa0a659ca69cf092fcfb6ebb58a749b63a04be48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa0a659ca69cf092fcfb6ebb58a749b63a04be48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa0a659ca69cf092fcfb6ebb58a749b63a04be48/comments", "author": null, "committer": null, "parents": [{"sha": "0ee9c843d86b7ce96336e21f8bf0193afeaeeea9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ee9c843d86b7ce96336e21f8bf0193afeaeeea9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ee9c843d86b7ce96336e21f8bf0193afeaeeea9"}], "stats": {"total": 86, "additions": 56, "deletions": 30}, "files": [{"sha": "54ed21334510f8c1c2eaddb29f9a4a9bbd11cd3d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa0a659ca69cf092fcfb6ebb58a749b63a04be48/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa0a659ca69cf092fcfb6ebb58a749b63a04be48/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=aa0a659ca69cf092fcfb6ebb58a749b63a04be48", "patch": "@@ -1,3 +1,12 @@\n+2014-08-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* typeck.c (composite_pointer_type, cxx_sizeof_or_alignof_type,\n+\tcp_build_array_ref, cp_build_function_call_vec): When a\n+\tpedwarn is suppressed under SFINAE, return error_mark_node.\n+\n+\t* typeck.c (cxx_sizeof_or_alignof_type): Fix complain &\n+\ttf_warning_or_error, where complain is a bool, glitch.\n+\n 2014-08-14  Ville Voutilainen  <ville.voutilainen@gmail.com>\n \n \tPR c++/62101"}, {"sha": "fa3283d18bd84cd0be1096151a793ed6bf52926d", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 47, "deletions": 30, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa0a659ca69cf092fcfb6ebb58a749b63a04be48/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa0a659ca69cf092fcfb6ebb58a749b63a04be48/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=aa0a659ca69cf092fcfb6ebb58a749b63a04be48", "patch": "@@ -597,28 +597,34 @@ composite_pointer_type (tree t1, tree t2, tree arg1, tree arg2,\n       tree attributes;\n       tree result_type;\n \n-      if (TYPE_PTRFN_P (t2) && (complain & tf_error))\n-        {\n-          switch (operation)\n-              {\n-              case CPO_COMPARISON:\n-                pedwarn (input_location, OPT_Wpedantic, \n-                         \"ISO C++ forbids comparison between \"\n-                         \"pointer of type %<void *%> and pointer-to-function\");\n-                break;\n-              case CPO_CONVERSION:\n-                pedwarn (input_location, OPT_Wpedantic,\n-                         \"ISO C++ forbids conversion between \"\n-                         \"pointer of type %<void *%> and pointer-to-function\");\n-                break;\n-              case CPO_CONDITIONAL_EXPR:\n-                pedwarn (input_location, OPT_Wpedantic,\n-                         \"ISO C++ forbids conditional expression between \"\n-                         \"pointer of type %<void *%> and pointer-to-function\");\n-                break;\n-              default:\n-                gcc_unreachable ();\n-              }\n+      if (TYPE_PTRFN_P (t2))\n+\t{\n+\t  if (complain & tf_error)\n+\t    {\n+\t      switch (operation)\n+\t\t{\n+\t\tcase CPO_COMPARISON:\n+\t\t  pedwarn (input_location, OPT_Wpedantic, \n+\t\t\t   \"ISO C++ forbids comparison between pointer \"\n+\t\t\t   \"of type %<void *%> and pointer-to-function\");\n+\t\t  break;\n+\t\tcase CPO_CONVERSION:\n+\t\t  pedwarn (input_location, OPT_Wpedantic,\n+\t\t\t   \"ISO C++ forbids conversion between pointer \"\n+\t\t\t   \"of type %<void *%> and pointer-to-function\");\n+\t\t  break;\n+\t\tcase CPO_CONDITIONAL_EXPR:\n+\t\t  pedwarn (input_location, OPT_Wpedantic,\n+\t\t\t   \"ISO C++ forbids conditional expression between \"\n+\t\t\t   \"pointer of type %<void *%> and \"\n+\t\t\t   \"pointer-to-function\");\n+\t\t  break;\n+\t\tdefault:\n+\t\t  gcc_unreachable ();\n+\t\t}\n+\t    }\n+\t  else\n+\t    return error_mark_node;\n         }\n       result_type\n \t= cp_build_qualified_type (void_type_node,\n@@ -1536,6 +1542,8 @@ cxx_sizeof_or_alignof_type (tree type, enum tree_code op, bool complain)\n \tpedwarn (input_location, OPT_Wpointer_arith, \n \t\t \"invalid application of %qs to a member function\", \n \t\t operator_name_info[(int) op].name);\n+      else\n+\treturn error_mark_node;\n       value = size_one_node;\n     }\n \n@@ -1561,7 +1569,7 @@ cxx_sizeof_or_alignof_type (tree type, enum tree_code op, bool complain)\n   if (cxx_dialect >= cxx1y && array_of_runtime_bound_p (type)\n       && (flag_iso || warn_vla > 0))\n     {\n-      if (complain & tf_warning_or_error)\n+      if (complain)\n \tpedwarn (input_location, OPT_Wvla,\n \t\t \"taking sizeof array of runtime bound\");\n       else\n@@ -3129,9 +3137,14 @@ cp_build_array_ref (location_t loc, tree array, tree idx,\n \t    return error_mark_node;\n \t}\n \n-      if (!lvalue_p (array) && (complain & tf_error))\n-\tpedwarn (loc, OPT_Wpedantic, \n-\t         \"ISO C++ forbids subscripting non-lvalue array\");\n+      if (!lvalue_p (array))\n+\t{\n+\t  if (complain & tf_error)\n+\t    pedwarn (loc, OPT_Wpedantic, \n+\t\t     \"ISO C++ forbids subscripting non-lvalue array\");\n+\t  else\n+\t    return error_mark_node;\n+\t}\n \n       /* Note in C++ it is valid to subscript a `register' array, since\n \t it is valid to take the address of something with that\n@@ -3467,10 +3480,14 @@ cp_build_function_call_vec (tree function, vec<tree, va_gc> **params,\n       fndecl = function;\n \n       /* Convert anything with function type to a pointer-to-function.  */\n-      if (DECL_MAIN_P (function) && (complain & tf_error))\n-\tpedwarn (input_location, OPT_Wpedantic, \n-\t\t \"ISO C++ forbids calling %<::main%> from within program\");\n-\n+      if (DECL_MAIN_P (function))\n+\t{\n+\t  if (complain & tf_error)\n+\t    pedwarn (input_location, OPT_Wpedantic, \n+\t\t     \"ISO C++ forbids calling %<::main%> from within program\");\n+\t  else\n+\t    return error_mark_node;\n+\t}\n       function = build_addr_func (function, complain);\n     }\n   else"}]}