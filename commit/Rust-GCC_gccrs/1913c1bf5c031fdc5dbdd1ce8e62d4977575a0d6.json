{"sha": "1913c1bf5c031fdc5dbdd1ce8e62d4977575a0d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkxM2MxYmY1YzAzMWZkYzVkYmRkMWNlOGU2MmQ0OTc3NTc1YTBkNg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2017-08-30T18:27:17Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-08-30T18:27:17Z"}, "message": "configure.ac: Substitute GOC_FOR_TARGET and GCC_FOR_TARGET.\n\n\t* configure.ac: Substitute GOC_FOR_TARGET and GCC_FOR_TARGET.\n\t* Makefile.am (MOSTLYCLEANFILES): Add check-gcc.\n\t(check-gccgo): Create via a temporary file.\n\t(check-gcc): New target.\n\t(CHECK_ENV): Set CC.\n\t(ECHO_ENV): Report CC.\n\t(check-go-tool): Depend on check-gcc.\n\t(check-runtime, check-cgo-test, check-carchive-test): Likewise.\n\t* configure, Makefile.in: Rebuild.\n\nFrom-SVN: r251540", "tree": {"sha": "0a84d103b7b8338d07fa562e3a3784579eeed1ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a84d103b7b8338d07fa562e3a3784579eeed1ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1913c1bf5c031fdc5dbdd1ce8e62d4977575a0d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1913c1bf5c031fdc5dbdd1ce8e62d4977575a0d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1913c1bf5c031fdc5dbdd1ce8e62d4977575a0d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1913c1bf5c031fdc5dbdd1ce8e62d4977575a0d6/comments", "author": null, "committer": null, "parents": [{"sha": "6da714c6780f023ee7efa892fba68be404e549f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6da714c6780f023ee7efa892fba68be404e549f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6da714c6780f023ee7efa892fba68be404e549f4"}], "stats": {"total": 94, "additions": 74, "deletions": 20}, "files": [{"sha": "1864293f4c60cdf4a71a4faa2f5612bdb3839685", "filename": "gotools/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1913c1bf5c031fdc5dbdd1ce8e62d4977575a0d6/gotools%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1913c1bf5c031fdc5dbdd1ce8e62d4977575a0d6/gotools%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gotools%2FChangeLog?ref=1913c1bf5c031fdc5dbdd1ce8e62d4977575a0d6", "patch": "@@ -1,3 +1,15 @@\n+2017-08-30  Ian Lance Taylor  <iant@google.com>\n+\n+\t* configure.ac: Substitute GOC_FOR_TARGET and GCC_FOR_TARGET.\n+\t* Makefile.am (MOSTLYCLEANFILES): Add check-gcc.\n+\t(check-gccgo): Create via a temporary file.\n+\t(check-gcc): New target.\n+\t(CHECK_ENV): Set CC.\n+\t(ECHO_ENV): Report CC.\n+\t(check-go-tool): Depend on check-gcc.\n+\t(check-runtime, check-cgo-test, check-carchive-test): Likewise.\n+\t* configure, Makefile.in: Rebuild.\n+\n 2017-07-26  Ian Lance Taylor  <iant@golang.org>\n \n \tPR go/81548"}, {"sha": "41a2c72dc5b82cd7aa35d0bad2f16cf39379b002", "filename": "gotools/Makefile.am", "status": "modified", "additions": 24, "deletions": 10, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1913c1bf5c031fdc5dbdd1ce8e62d4977575a0d6/gotools%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1913c1bf5c031fdc5dbdd1ce8e62d4977575a0d6/gotools%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gotools%2FMakefile.am?ref=1913c1bf5c031fdc5dbdd1ce8e62d4977575a0d6", "patch": "@@ -109,7 +109,8 @@ s-zdefaultcc: Makefile\n \n MOSTLYCLEANFILES = \\\n \tzdefaultcc.go s-zdefaultcc \\\n-\tcheck-gccgo gotools.head *-testlog gotools.sum gotools.log *.sent\n+\tcheck-gccgo check-gcc gotools.head *-testlog gotools.sum gotools.log \\\n+\t*.sent\n \n mostlyclean-local:\n \trm -rf check-go-dir check-runtime-dir cgo-test-dir carchive-test-dir\n@@ -155,11 +156,22 @@ check-head:\n # check-gccgo is a little shell script that executes gccgo with the\n # options to pick up the newly built libgo.\n check-gccgo: Makefile\n-\trm -f $@\n-\techo \"#!/bin/sh\" > $@\n+\trm -f $@ $@.tmp\n+\techo \"#!/bin/sh\" > $@.tmp\n \tabs_libgodir=`cd $(libgodir) && $(PWD_COMMAND)`; \\\n-\techo \"$(GOCOMPILE)\" '\"$$@\"' \"-I $${abs_libgodir} -L $${abs_libgodir} -L $${abs_libgodir}/.libs\" >> $@\n-\tchmod +x $@\n+\techo \"$(GOCOMPILE)\" '\"$$@\"' \"-I $${abs_libgodir} -L $${abs_libgodir} -L $${abs_libgodir}/.libs\" >> $@.tmp\n+\tchmod +x $@.tmp\n+\tmv -f $@.tmp $@\n+\n+# check-gcc is a little shell script that executes the newly built gcc\n+# with the options to pick up the newly built libgo.\n+check-gcc: Makefile\n+\trm -f $@ $@.tmp\n+\techo \"#!/bin/sh\" > $@.tmp\n+\tabs_libgodir=`cd $(libgodir) && $(PWD_COMMAND)`; \\\n+\techo \"$(GCC_FOR_TARGET)\" '\"$$@\"' \"-L $${abs_libgodir} -L $${abs_libgodir}/.libs\" >> $@.tmp\n+\tchmod +x $@.tmp\n+\tmv -f $@.tmp $@\n \n # CHECK_ENV sets up the environment to run the newly built go tool.\n # If you change this, change ECHO_ENV, below.\n@@ -168,6 +180,8 @@ CHECK_ENV = \\\n \texport PATH; \\\n \tGCCGO=\"$(abs_builddir)/check-gccgo\"; \\\n \texport GCCGO; \\\n+\tCC=\"$(abs_builddir)/check-gcc\"; \\\n+\texport CC; \\\n \tGCCGOTOOLDIR=\"$(abs_builddir)\"; \\\n \texport GCCGOTOOLDIR; \\\n \tGO_TESTING_GOTOOLS=yes; \\\n@@ -180,10 +194,10 @@ CHECK_ENV = \\\n \n # ECHO_ENV is a variant of CHECK_ENV to put into a testlog file.\n # It assumes that abs_libgodir is set.\n-ECHO_ENV = PATH=`echo $(abs_builddir):$${PATH} | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'` GCCGO='$(abs_builddir)/check-gccgo' GCCGOTOOLDIR='$(abs_builddir)' GO_TESTING_GOTOOLS=yes LD_LIBRARY_PATH=`echo $${abs_libgodir}/.libs:$${LD_LIBRARY_PATH} | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'` GOROOT=`echo $${abs_libgodir}`\n+ECHO_ENV = PATH=`echo $(abs_builddir):$${PATH} | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'` GCCGO='$(abs_builddir)/check-gccgo' CC='$(abs_builddir)/check-gcc' GCCGOTOOLDIR='$(abs_builddir)' GO_TESTING_GOTOOLS=yes LD_LIBRARY_PATH=`echo $${abs_libgodir}/.libs:$${LD_LIBRARY_PATH} | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'` GOROOT=`echo $${abs_libgodir}`\n \n # check-go-tools runs `go test cmd/go` in our environment.\n-check-go-tool: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo\n+check-go-tool: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo check-gcc\n \trm -rf check-go-dir cmd_go-testlog\n \t$(MKDIR_P) check-go-dir/src/cmd/go\n \tcp $(cmdsrcdir)/go/*.go check-go-dir/src/cmd/go/\n@@ -203,7 +217,7 @@ check-go-tool: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo\n # The runtime package is also tested as part of libgo,\n # but the runtime tests use the go tool heavily, so testing\n # here too will catch more problems.\n-check-runtime: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo\n+check-runtime: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo check-gcc\n \trm -rf check-runtime-dir runtime-testlog\n \t$(MKDIR_P) check-runtime-dir\n \t@abs_libgodir=`cd $(libgodir) && $(PWD_COMMAND)`; \\\n@@ -222,7 +236,7 @@ check-runtime: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo\n \tgrep '^--- ' runtime-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/'\n \n # check-cgo-test runs `go test misc/cgo/test` in our environment.\n-check-cgo-test: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo\n+check-cgo-test: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo check-gcc\n \trm -rf cgo-test-dir cgo-testlog\n \t$(MKDIR_P) cgo-test-dir/misc/cgo\n \tcp -r $(libgomiscdir)/cgo/test cgo-test-dir/misc/cgo/\n@@ -236,7 +250,7 @@ check-cgo-test: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo\n \n # check-carchive-test runs `go test misc/cgo/testcarchive/carchive_test.go`\n # in our environment.\n-check-carchive-test: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo\n+check-carchive-test: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo check-gcc\n \trm -rf carchive-test-dir carchive-testlog\n \t$(MKDIR_P) carchive-test-dir/misc/cgo\n \tcp -r $(libgomiscdir)/cgo/testcarchive carchive-test-dir/misc/cgo/"}, {"sha": "148665a46e9f54beee6b015d05715dff66213fee", "filename": "gotools/Makefile.in", "status": "modified", "additions": 26, "deletions": 10, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1913c1bf5c031fdc5dbdd1ce8e62d4977575a0d6/gotools%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1913c1bf5c031fdc5dbdd1ce8e62d4977575a0d6/gotools%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gotools%2FMakefile.in?ref=1913c1bf5c031fdc5dbdd1ce8e62d4977575a0d6", "patch": "@@ -160,8 +160,10 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n EXEEXT = @EXEEXT@\n+GCC_FOR_TARGET = @GCC_FOR_TARGET@\n GOC = @GOC@\n GOCFLAGS = $(CFLAGS_FOR_TARGET)\n+GOC_FOR_TARGET = @GOC_FOR_TARGET@\n INSTALL = @INSTALL@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n@@ -316,7 +318,8 @@ GCC_INSTALL_NAME := $(shell echo gcc|sed '$(program_transform_name)')\n GXX_INSTALL_NAME := $(shell echo g++|sed '$(program_transform_name)')\n MOSTLYCLEANFILES = \\\n \tzdefaultcc.go s-zdefaultcc \\\n-\tcheck-gccgo gotools.head *-testlog gotools.sum gotools.log *.sent\n+\tcheck-gccgo check-gcc gotools.head *-testlog gotools.sum gotools.log \\\n+\t*.sent\n \n \n # For a native build we build the programs using the newly built libgo\n@@ -332,6 +335,8 @@ MOSTLYCLEANFILES = \\\n @NATIVE_TRUE@\texport PATH; \\\n @NATIVE_TRUE@\tGCCGO=\"$(abs_builddir)/check-gccgo\"; \\\n @NATIVE_TRUE@\texport GCCGO; \\\n+@NATIVE_TRUE@\tCC=\"$(abs_builddir)/check-gcc\"; \\\n+@NATIVE_TRUE@\texport CC; \\\n @NATIVE_TRUE@\tGCCGOTOOLDIR=\"$(abs_builddir)\"; \\\n @NATIVE_TRUE@\texport GCCGOTOOLDIR; \\\n @NATIVE_TRUE@\tGO_TESTING_GOTOOLS=yes; \\\n@@ -345,7 +350,7 @@ MOSTLYCLEANFILES = \\\n \n # ECHO_ENV is a variant of CHECK_ENV to put into a testlog file.\n # It assumes that abs_libgodir is set.\n-@NATIVE_TRUE@ECHO_ENV = PATH=`echo $(abs_builddir):$${PATH} | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'` GCCGO='$(abs_builddir)/check-gccgo' GCCGOTOOLDIR='$(abs_builddir)' GO_TESTING_GOTOOLS=yes LD_LIBRARY_PATH=`echo $${abs_libgodir}/.libs:$${LD_LIBRARY_PATH} | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'` GOROOT=`echo $${abs_libgodir}`\n+@NATIVE_TRUE@ECHO_ENV = PATH=`echo $(abs_builddir):$${PATH} | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'` GCCGO='$(abs_builddir)/check-gccgo' CC='$(abs_builddir)/check-gcc' GCCGOTOOLDIR='$(abs_builddir)' GO_TESTING_GOTOOLS=yes LD_LIBRARY_PATH=`echo $${abs_libgodir}/.libs:$${LD_LIBRARY_PATH} | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'` GOROOT=`echo $${abs_libgodir}`\n all: all-am\n \n .SUFFIXES:\n@@ -734,14 +739,25 @@ mostlyclean-local:\n # check-gccgo is a little shell script that executes gccgo with the\n # options to pick up the newly built libgo.\n @NATIVE_TRUE@check-gccgo: Makefile\n-@NATIVE_TRUE@\trm -f $@\n-@NATIVE_TRUE@\techo \"#!/bin/sh\" > $@\n+@NATIVE_TRUE@\trm -f $@ $@.tmp\n+@NATIVE_TRUE@\techo \"#!/bin/sh\" > $@.tmp\n @NATIVE_TRUE@\tabs_libgodir=`cd $(libgodir) && $(PWD_COMMAND)`; \\\n-@NATIVE_TRUE@\techo \"$(GOCOMPILE)\" '\"$$@\"' \"-I $${abs_libgodir} -L $${abs_libgodir} -L $${abs_libgodir}/.libs\" >> $@\n-@NATIVE_TRUE@\tchmod +x $@\n+@NATIVE_TRUE@\techo \"$(GOCOMPILE)\" '\"$$@\"' \"-I $${abs_libgodir} -L $${abs_libgodir} -L $${abs_libgodir}/.libs\" >> $@.tmp\n+@NATIVE_TRUE@\tchmod +x $@.tmp\n+@NATIVE_TRUE@\tmv -f $@.tmp $@\n+\n+# check-gcc is a little shell script that executes the newly built gcc\n+# with the options to pick up the newly built libgo.\n+@NATIVE_TRUE@check-gcc: Makefile\n+@NATIVE_TRUE@\trm -f $@ $@.tmp\n+@NATIVE_TRUE@\techo \"#!/bin/sh\" > $@.tmp\n+@NATIVE_TRUE@\tabs_libgodir=`cd $(libgodir) && $(PWD_COMMAND)`; \\\n+@NATIVE_TRUE@\techo \"$(GCC_FOR_TARGET)\" '\"$$@\"' \"-L $${abs_libgodir} -L $${abs_libgodir}/.libs\" >> $@.tmp\n+@NATIVE_TRUE@\tchmod +x $@.tmp\n+@NATIVE_TRUE@\tmv -f $@.tmp $@\n \n # check-go-tools runs `go test cmd/go` in our environment.\n-@NATIVE_TRUE@check-go-tool: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo\n+@NATIVE_TRUE@check-go-tool: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo check-gcc\n @NATIVE_TRUE@\trm -rf check-go-dir cmd_go-testlog\n @NATIVE_TRUE@\t$(MKDIR_P) check-go-dir/src/cmd/go\n @NATIVE_TRUE@\tcp $(cmdsrcdir)/go/*.go check-go-dir/src/cmd/go/\n@@ -761,7 +777,7 @@ mostlyclean-local:\n # The runtime package is also tested as part of libgo,\n # but the runtime tests use the go tool heavily, so testing\n # here too will catch more problems.\n-@NATIVE_TRUE@check-runtime: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo\n+@NATIVE_TRUE@check-runtime: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo check-gcc\n @NATIVE_TRUE@\trm -rf check-runtime-dir runtime-testlog\n @NATIVE_TRUE@\t$(MKDIR_P) check-runtime-dir\n @NATIVE_TRUE@\t@abs_libgodir=`cd $(libgodir) && $(PWD_COMMAND)`; \\\n@@ -780,7 +796,7 @@ mostlyclean-local:\n @NATIVE_TRUE@\tgrep '^--- ' runtime-testlog | sed -e 's/^--- \\(.*\\) ([^)]*)$$/\\1/'\n \n # check-cgo-test runs `go test misc/cgo/test` in our environment.\n-@NATIVE_TRUE@check-cgo-test: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo\n+@NATIVE_TRUE@check-cgo-test: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo check-gcc\n @NATIVE_TRUE@\trm -rf cgo-test-dir cgo-testlog\n @NATIVE_TRUE@\t$(MKDIR_P) cgo-test-dir/misc/cgo\n @NATIVE_TRUE@\tcp -r $(libgomiscdir)/cgo/test cgo-test-dir/misc/cgo/\n@@ -794,7 +810,7 @@ mostlyclean-local:\n \n # check-carchive-test runs `go test misc/cgo/testcarchive/carchive_test.go`\n # in our environment.\n-@NATIVE_TRUE@check-carchive-test: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo\n+@NATIVE_TRUE@check-carchive-test: go$(EXEEXT) cgo$(EXEEXT) check-head check-gccgo check-gcc\n @NATIVE_TRUE@\trm -rf carchive-test-dir carchive-testlog\n @NATIVE_TRUE@\t$(MKDIR_P) carchive-test-dir/misc/cgo\n @NATIVE_TRUE@\tcp -r $(libgomiscdir)/cgo/testcarchive carchive-test-dir/misc/cgo/"}, {"sha": "44e25701bd64eb02ad97ff692a29591cd6ebba82", "filename": "gotools/configure", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1913c1bf5c031fdc5dbdd1ce8e62d4977575a0d6/gotools%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1913c1bf5c031fdc5dbdd1ce8e62d4977575a0d6/gotools%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gotools%2Fconfigure?ref=1913c1bf5c031fdc5dbdd1ce8e62d4977575a0d6", "patch": "@@ -558,6 +558,8 @@ LIBOBJS\n NET_LIBS\n NATIVE_FALSE\n NATIVE_TRUE\n+GCC_FOR_TARGET\n+GOC_FOR_TARGET\n GOCFLAGS\n GOC\n am__fastdepCC_FALSE\n@@ -3783,6 +3785,11 @@ ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $\n ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n+# These should be defined by the top-level configure.\n+# Copy them into Makefile.\n+\n+\n+\n  if test \"$host_alias\" = \"$target_alias\"; then\n   NATIVE_TRUE=\n   NATIVE_FALSE='#'"}, {"sha": "5b0920448e30921f67580c924ae6091f789ea39c", "filename": "gotools/configure.ac", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1913c1bf5c031fdc5dbdd1ce8e62d4977575a0d6/gotools%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1913c1bf5c031fdc5dbdd1ce8e62d4977575a0d6/gotools%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gotools%2Fconfigure.ac?ref=1913c1bf5c031fdc5dbdd1ce8e62d4977575a0d6", "patch": "@@ -46,6 +46,11 @@ AC_PROG_INSTALL\n AC_PROG_CC\n AC_PROG_GO\n \n+# These should be defined by the top-level configure.\n+# Copy them into Makefile.\n+AC_SUBST(GOC_FOR_TARGET)\n+AC_SUBST(GCC_FOR_TARGET)\n+\n AM_CONDITIONAL(NATIVE, test \"$host_alias\" = \"$target_alias\")\n \n dnl Test for -lsocket and -lnsl.  Copied from libjava/configure.ac."}]}