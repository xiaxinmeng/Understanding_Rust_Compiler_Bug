{"sha": "d82f74d3ab985da4b217a4942a0b4e2e55021fab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDgyZjc0ZDNhYjk4NWRhNGIyMTdhNDk0MmEwYjRlMmU1NTAyMWZhYg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2010-11-17T01:03:06Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-11-17T01:03:06Z"}, "message": "simple-object.h (simple_object_attributes_merge): Declare, replacing simple_object_attributes_compare.\n\ninclude/:\n\t* simple-object.h (simple_object_attributes_merge): Declare,\n\treplacing simple_object_attributes_compare.\nlibiberty/:\n\t* simple-object.c (simple_object_attributes_merge): Rename from\n\tsimple_object_attributes_compare.  Call merge field.\n\t* simple-object-common.h (struct simple_object_functions): Rename\n\tattributes_compare field to attribute_merge.\n\t* simple-object-elf.c (EM_SPARC): Define.\n\t(EM_SPARC32PLUS): Define.\n\t(simple_object_elf_attributes_merge): Renamed from\n\tsimple_object_elf_attributes_compare.  Permit EM_SPARC and\n\tEM_SPARC32PLUS objects to be merged.\n\t(simple_object_elf_functions): Update function name.\n\t* simple-object-coff.c (simple_object_coff_attributes_merge):\n\tRename from simple_object_coff_attributes_compare.\n\t(simple_object_coff_functions): Update function name.\n\t* simple-object-mach-o.c (simple_object_mach_o_attributes_merge):\n\tRenamed from simple_object_mach_o_attributes_compare.\n\t(simple_object_mach_o_functions): Update function name.\ngcc/lto/:\n\t* lto-object.c (lto_obj_file_open): Call\n\tsimple_object_attributes_merge rather than\n\tsimple_object_attributes_compare.\n\nFrom-SVN: r166848", "tree": {"sha": "8567ed627560514ebbb02791cf4486d8aac87378", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8567ed627560514ebbb02791cf4486d8aac87378"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d82f74d3ab985da4b217a4942a0b4e2e55021fab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d82f74d3ab985da4b217a4942a0b4e2e55021fab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d82f74d3ab985da4b217a4942a0b4e2e55021fab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d82f74d3ab985da4b217a4942a0b4e2e55021fab/comments", "author": null, "committer": null, "parents": [{"sha": "354d8ce1084fadee6f9761fb6b1d1dd897b69ef4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/354d8ce1084fadee6f9761fb6b1d1dd897b69ef4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/354d8ce1084fadee6f9761fb6b1d1dd897b69ef4"}], "stats": {"total": 160, "additions": 113, "deletions": 47}, "files": [{"sha": "c254da1a5fae44a74b328b6230a32b668b5ffac9", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82f74d3ab985da4b217a4942a0b4e2e55021fab/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82f74d3ab985da4b217a4942a0b4e2e55021fab/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=d82f74d3ab985da4b217a4942a0b4e2e55021fab", "patch": "@@ -1,3 +1,9 @@\n+2010-11-16  Ian Lance Taylor  <iant@google.com>\n+\n+\t* lto-object.c (lto_obj_file_open): Call\n+\tsimple_object_attributes_merge rather than\n+\tsimple_object_attributes_compare.\n+\n 2010-11-12  Joseph Myers  <joseph@codesourcery.com>\n \n \t* Make-lang.in (lto/lto.o): Use $(OPTS_H)."}, {"sha": "4a67580d2d3bce39df27a8b31e270d70fa2d89fb", "filename": "gcc/lto/lto-object.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82f74d3ab985da4b217a4942a0b4e2e55021fab/gcc%2Flto%2Flto-object.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82f74d3ab985da4b217a4942a0b4e2e55021fab/gcc%2Flto%2Flto-object.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-object.c?ref=d82f74d3ab985da4b217a4942a0b4e2e55021fab", "patch": "@@ -138,8 +138,8 @@ lto_obj_file_open (const char *filename, bool writable)\n \tsaved_attributes = attrs;\n       else\n \t{\n-\t  errmsg = simple_object_attributes_compare (saved_attributes, attrs,\n-\t\t\t\t\t\t     &err);\n+\t  errmsg = simple_object_attributes_merge (saved_attributes, attrs,\n+\t\t\t\t\t\t   &err);\n \t  if (errmsg != NULL)\n \t    goto fail_errmsg;\n \t}"}, {"sha": "3a3e2443e7e0a42d62ec8e9cb46e702339686850", "filename": "include/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82f74d3ab985da4b217a4942a0b4e2e55021fab/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82f74d3ab985da4b217a4942a0b4e2e55021fab/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=d82f74d3ab985da4b217a4942a0b4e2e55021fab", "patch": "@@ -1,3 +1,8 @@\n+2010-11-16  Ian Lance Taylor  <iant@google.com>\n+\n+\t* simple-object.h (simple_object_attributes_merge): Declare,\n+\treplacing simple_object_attributes_compare.\n+\n 2010-11-04  Ian Lance Taylor  <iant@google.com>\n \n \t* dwarf2.h (enum dwarf_source_language): Add DW_LANG_Go."}, {"sha": "c4786757a1e73e86d4808bbe39fb93077c90c5d4", "filename": "include/simple-object.h", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82f74d3ab985da4b217a4942a0b4e2e55021fab/include%2Fsimple-object.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82f74d3ab985da4b217a4942a0b4e2e55021fab/include%2Fsimple-object.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fsimple-object.h?ref=d82f74d3ab985da4b217a4942a0b4e2e55021fab", "patch": "@@ -117,14 +117,15 @@ extern simple_object_attributes *\n simple_object_fetch_attributes (simple_object_read *simple_object,\n \t\t\t\tconst char **errmsg, int *err);\n \n-/* Compare ATTRS1 and ATTRS2.  If they could be linked together\n-   without error, return NULL.  Otherwise, return an error message,\n-   set *ERR to an errno value or 0 if there isn't one.  */\n+/* Merge the FROM attributes into TO.  If two objects with these\n+   attributes could be linked together without error, returns NULL.\n+   Otherwise, returns an error message, and sets *ERR to an errno\n+   value or 0 if there isn't one.  */\n \n extern const char *\n-simple_object_attributes_compare (simple_object_attributes *attrs1,\n-\t\t\t    simple_object_attributes *attrs2,\n-\t\t\t    int *err);\n+simple_object_attributes_merge (simple_object_attributes *to,\n+\t\t\t\tsimple_object_attributes *from,\n+\t\t\t\tint *err);\n \n /* Release all resources associated with ATTRS.  */\n "}, {"sha": "ed0d0557e16f7ba0a637c6d15da37150971931d9", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82f74d3ab985da4b217a4942a0b4e2e55021fab/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82f74d3ab985da4b217a4942a0b4e2e55021fab/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=d82f74d3ab985da4b217a4942a0b4e2e55021fab", "patch": "@@ -1,3 +1,22 @@\n+2010-11-16  Ian Lance Taylor  <iant@google.com>\n+\n+\t* simple-object.c (simple_object_attributes_merge): Rename from\n+\tsimple_object_attributes_compare.  Call merge field.\n+\t* simple-object-common.h (struct simple_object_functions): Rename\n+\tattributes_compare field to attribute_merge.\n+\t* simple-object-elf.c (EM_SPARC): Define.\n+\t(EM_SPARC32PLUS): Define.\n+\t(simple_object_elf_attributes_merge): Renamed from\n+\tsimple_object_elf_attributes_compare.  Permit EM_SPARC and\n+\tEM_SPARC32PLUS objects to be merged.\n+\t(simple_object_elf_functions): Update function name.\n+\t* simple-object-coff.c (simple_object_coff_attributes_merge):\n+\tRename from simple_object_coff_attributes_compare.\n+\t(simple_object_coff_functions): Update function name.\n+\t* simple-object-mach-o.c (simple_object_mach_o_attributes_merge):\n+\tRenamed from simple_object_mach_o_attributes_compare.\n+\t(simple_object_mach_o_functions): Update function name.\n+\n 2010-11-16  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR other/42670"}, {"sha": "a7802a520760e8a96dcd030b286dbe46579df0ff", "filename": "libiberty/simple-object-coff.c", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82f74d3ab985da4b217a4942a0b4e2e55021fab/libiberty%2Fsimple-object-coff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82f74d3ab985da4b217a4942a0b4e2e55021fab/libiberty%2Fsimple-object-coff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fsimple-object-coff.c?ref=d82f74d3ab985da4b217a4942a0b4e2e55021fab", "patch": "@@ -457,15 +457,14 @@ simple_object_coff_release_read (void *data)\n /* Compare two attributes structures.  */\n \n static const char *\n-simple_object_coff_attributes_compare (void *data1, void *data2, int *err)\n+simple_object_coff_attributes_merge (void *todata, void *fromdata, int *err)\n {\n-  struct simple_object_coff_attributes *attrs1 =\n-    (struct simple_object_coff_attributes *) data1;\n-  struct simple_object_coff_attributes *attrs2 =\n-    (struct simple_object_coff_attributes *) data2;\n+  struct simple_object_coff_attributes *to =\n+    (struct simple_object_coff_attributes *) todata;\n+  struct simple_object_coff_attributes *from =\n+    (struct simple_object_coff_attributes *) fromdata;\n \n-  if (attrs1->magic != attrs2->magic\n-      || attrs1->is_big_endian != attrs2->is_big_endian)\n+  if (to->magic != from->magic || to->is_big_endian != from->is_big_endian)\n     {\n       *err = 0;\n       return \"COFF object format mismatch\";\n@@ -797,7 +796,7 @@ const struct simple_object_functions simple_object_coff_functions =\n   simple_object_coff_find_sections,\n   simple_object_coff_fetch_attributes,\n   simple_object_coff_release_read,\n-  simple_object_coff_attributes_compare,\n+  simple_object_coff_attributes_merge,\n   simple_object_coff_release_attributes,\n   simple_object_coff_start_write,\n   simple_object_coff_write_to_file,"}, {"sha": "264b179955e3330687eb81af412f57981f6d579a", "filename": "libiberty/simple-object-common.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82f74d3ab985da4b217a4942a0b4e2e55021fab/libiberty%2Fsimple-object-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82f74d3ab985da4b217a4942a0b4e2e55021fab/libiberty%2Fsimple-object-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fsimple-object-common.h?ref=d82f74d3ab985da4b217a4942a0b4e2e55021fab", "patch": "@@ -123,10 +123,10 @@ struct simple_object_functions\n   /* Release the private data for an simple_object_read.  */\n   void (*release_read) (void *);\n \n-  /* Compare the private data for the attributes of two files.  If\n-     they are the same, in the sense that they could be linked\n-     together, return NULL.  Otherwise return an error message.  */\n-  const char *(*attributes_compare) (void *, void *, int *err);\n+  /* Merge the private data for the attributes of two files.  If they\n+     could be linked together, return NULL.  Otherwise return an error\n+     message.  */\n+  const char *(*attributes_merge) (void *, void *, int *err);\n \n   /* Release the private data for an simple_object_attributes.  */\n   void (*release_attributes) (void *);"}, {"sha": "4196c537cde5820ca536be6edd407525b0ca8671", "filename": "libiberty/simple-object-elf.c", "status": "modified", "additions": 47, "deletions": 10, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82f74d3ab985da4b217a4942a0b4e2e55021fab/libiberty%2Fsimple-object-elf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82f74d3ab985da4b217a4942a0b4e2e55021fab/libiberty%2Fsimple-object-elf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fsimple-object-elf.c?ref=d82f74d3ab985da4b217a4942a0b4e2e55021fab", "patch": "@@ -115,6 +115,11 @@ typedef struct {\n \n #define ET_REL\t\t1\t/* Relocatable file */\n \n+/* Values for e_machine field of Ehdr.  */\n+\n+#define EM_SPARC\t  2\t/* SUN SPARC */\n+#define EM_SPARC32PLUS\t 18\t/* Sun's \"v8plus\" */\n+\n /* Special section index values.  */\n \n #define SHN_LORESERVE\t0xFF00\t\t/* Begin range of reserved indices */\n@@ -604,20 +609,52 @@ simple_object_elf_release_read (void *data)\n /* Compare two attributes structures.  */\n \n static const char *\n-simple_object_elf_attributes_compare (void *data1, void *data2, int *err)\n+simple_object_elf_attributes_merge (void *todata, void *fromdata, int *err)\n {\n-  struct simple_object_elf_attributes *attrs1 =\n-    (struct simple_object_elf_attributes *) data1;\n-  struct simple_object_elf_attributes *attrs2 =\n-    (struct simple_object_elf_attributes *) data2;\n-\n-  if (attrs1->ei_data != attrs2->ei_data\n-      || attrs1->ei_class != attrs2->ei_class\n-      || attrs1->machine != attrs2->machine)\n+  struct simple_object_elf_attributes *to =\n+    (struct simple_object_elf_attributes *) todata;\n+  struct simple_object_elf_attributes *from =\n+    (struct simple_object_elf_attributes *) fromdata;\n+\n+  if (to->ei_data != from->ei_data || to->ei_class != from->ei_class)\n     {\n       *err = 0;\n       return \"ELF object format mismatch\";\n     }\n+\n+  if (to->machine != from->machine)\n+    {\n+      int ok;\n+\n+      /* EM_SPARC and EM_SPARC32PLUS are compatible and force an\n+\t output of EM_SPARC32PLUS.  */\n+      ok = 0;\n+      switch (to->machine)\n+\t{\n+\tcase EM_SPARC:\n+\t  if (from->machine == EM_SPARC32PLUS)\n+\t    {\n+\t      to->machine = from->machine;\n+\t      ok = 1;\n+\t    }\n+\t  break;\n+\n+\tcase EM_SPARC32PLUS:\n+\t  if (from->machine == EM_SPARC)\n+\t    ok = 1;\n+\t  break;\n+\n+\tdefault:\n+\t  break;\n+\t}\n+\n+      if (!ok)\n+\t{\n+\t  *err = 0;\n+\t  return \"ELF machine number mismatch\";\n+\t}\n+    }\n+\n   return NULL;\n }\n \n@@ -908,7 +945,7 @@ const struct simple_object_functions simple_object_elf_functions =\n   simple_object_elf_find_sections,\n   simple_object_elf_fetch_attributes,\n   simple_object_elf_release_read,\n-  simple_object_elf_attributes_compare,\n+  simple_object_elf_attributes_merge,\n   simple_object_elf_release_attributes,\n   simple_object_elf_start_write,\n   simple_object_elf_write_to_file,"}, {"sha": "bbbbd09de5809257344157e40cb64cfd7c8f3dba", "filename": "libiberty/simple-object-mach-o.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82f74d3ab985da4b217a4942a0b4e2e55021fab/libiberty%2Fsimple-object-mach-o.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82f74d3ab985da4b217a4942a0b4e2e55021fab/libiberty%2Fsimple-object-mach-o.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fsimple-object-mach-o.c?ref=d82f74d3ab985da4b217a4942a0b4e2e55021fab", "patch": "@@ -624,16 +624,16 @@ simple_object_mach_o_release_read (void *data)\n /* Compare two attributes structures.  */\n \n static const char *\n-simple_object_mach_o_attributes_compare (void *data1, void *data2, int *err)\n+simple_object_mach_o_attributes_merge (void *todata, void *fromdata, int *err)\n {\n-  struct simple_object_mach_o_attributes *attrs1 =\n-    (struct simple_object_mach_o_attributes *) data1;\n-  struct simple_object_mach_o_attributes *attrs2 =\n-    (struct simple_object_mach_o_attributes *) data2;\n-\n-  if (attrs1->magic != attrs2->magic\n-      || attrs1->is_big_endian != attrs2->is_big_endian\n-      || attrs1->cputype != attrs2->cputype)\n+  struct simple_object_mach_o_attributes *to =\n+    (struct simple_object_mach_o_attributes *) todata;\n+  struct simple_object_mach_o_attributes *from =\n+    (struct simple_object_mach_o_attributes *) fromdata;\n+\n+  if (to->magic != from->magic\n+      || to->is_big_endian != from->is_big_endian\n+      || to->cputype != from->cputype)\n     {\n       *err = 0;\n       return \"Mach-O object format mismatch\";\n@@ -1014,7 +1014,7 @@ const struct simple_object_functions simple_object_mach_o_functions =\n   simple_object_mach_o_find_sections,\n   simple_object_mach_o_fetch_attributes,\n   simple_object_mach_o_release_read,\n-  simple_object_mach_o_attributes_compare,\n+  simple_object_mach_o_attributes_merge,\n   simple_object_mach_o_release_attributes,\n   simple_object_mach_o_start_write,\n   simple_object_mach_o_write_to_file,"}, {"sha": "d000cfc08067e89dce043bc35de9b2726644cb3a", "filename": "libiberty/simple-object.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82f74d3ab985da4b217a4942a0b4e2e55021fab/libiberty%2Fsimple-object.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82f74d3ab985da4b217a4942a0b4e2e55021fab/libiberty%2Fsimple-object.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fsimple-object.c?ref=d82f74d3ab985da4b217a4942a0b4e2e55021fab", "patch": "@@ -257,20 +257,19 @@ simple_object_release_read (simple_object_read *sobj)\n   XDELETE (sobj);\n }\n \n-/* Compare attributes.  */\n+/* Merge attributes.  */\n \n const char *\n-simple_object_attributes_compare (simple_object_attributes *attrs1,\n-\t\t\t\t  simple_object_attributes *attrs2,\n-\t\t\t\t  int *err)\n+simple_object_attributes_merge (simple_object_attributes *to,\n+\t\t\t\tsimple_object_attributes *from,\n+\t\t\t\tint *err)\n {\n-  if (attrs1->functions != attrs2->functions)\n+  if (to->functions != from->functions)\n     {\n       *err = 0;\n       return \"different object file format\";\n     }\n-  return attrs1->functions->attributes_compare (attrs1->data, attrs2->data,\n-\t\t\t\t\t\terr);\n+  return to->functions->attributes_merge (to->data, from->data, err);\n }\n \n /* Release an attributes structure.  */"}]}