{"sha": "a896d54dcb32fecd5be4db88eeb5fe48004f4652", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg5NmQ1NGRjYjMyZmVjZDViZTRkYjg4ZWViNWZlNDgwMDRmNDY1Mg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2007-07-27T09:49:55Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-07-27T09:49:55Z"}, "message": "re PR fortran/32903 (Default initializer and intent(OUT): default initializer not used)\n\n2007-07-27  Tobias Burnus  <burnus@net-b.de>\n\n\tPR fortran/32903\n\t* gfortran.dg/initialization_11.f90: New test.\n\nFrom-SVN: r126975", "tree": {"sha": "c7b27a13620e2e5a2eebd29519287377f3252a94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7b27a13620e2e5a2eebd29519287377f3252a94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a896d54dcb32fecd5be4db88eeb5fe48004f4652", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a896d54dcb32fecd5be4db88eeb5fe48004f4652", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a896d54dcb32fecd5be4db88eeb5fe48004f4652", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a896d54dcb32fecd5be4db88eeb5fe48004f4652/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "55ed891fa1c90f2051f000b88c33020719cd6311", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55ed891fa1c90f2051f000b88c33020719cd6311", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55ed891fa1c90f2051f000b88c33020719cd6311"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "59653d7101fca61be95525f2545e8053c285ba2e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a896d54dcb32fecd5be4db88eeb5fe48004f4652/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a896d54dcb32fecd5be4db88eeb5fe48004f4652/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a896d54dcb32fecd5be4db88eeb5fe48004f4652", "patch": "@@ -1,3 +1,8 @@\n+2007-07-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/32903\n+\t* gfortran.dg/initialization_11.f90: New test.\n+\n 2007-07-27  Richard Sandiford  <richard@codesourcery.com>\n \n \t* gcc.target/mips/ins-1.c: New test."}, {"sha": "a9acbec22db117f3063ba6a433d376da9c23ad5d", "filename": "gcc/testsuite/gfortran.dg/initialization_11.f90", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a896d54dcb32fecd5be4db88eeb5fe48004f4652/gcc%2Ftestsuite%2Fgfortran.dg%2Finitialization_11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a896d54dcb32fecd5be4db88eeb5fe48004f4652/gcc%2Ftestsuite%2Fgfortran.dg%2Finitialization_11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finitialization_11.f90?ref=a896d54dcb32fecd5be4db88eeb5fe48004f4652", "patch": "@@ -0,0 +1,20 @@\n+! { dg-do run }\n+! PR fortran/32903\n+!\n+program test\n+  implicit none\n+  type data_type\n+    integer :: i=2\n+  end type data_type\n+  type(data_type) :: d\n+  d%i = 4\n+  call set(d)\n+  if(d%i /= 2) then\n+     print *, 'Expect: 2, got: ', d%i\n+     call abort()\n+  end if\n+contains\n+  subroutine set(x1)\n+    type(data_type),intent(out):: x1\n+  end subroutine set\n+end program test"}]}