{"sha": "dcaeffefc5fa5c54077f93091baea17e4004aa47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNhZWZmZWZjNWZhNWM1NDA3N2Y5MzA5MWJhZWExN2U0MDA0YWE0Nw==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-01-03T19:45:34Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-01-03T19:45:34Z"}, "message": "pa.md (branch, [...]): Handle (const_int 0) as first source operand.\n\n        * pa.md (branch, negated branch): Handle (const_int 0) as first\n        source operand.\n        * pa.c (output_cbranch): Likewise.\nShould fix unrolling aborts on the PA.\n\nFrom-SVN: r24465", "tree": {"sha": "07f5f78b4e67470df38c100332b7ac010a2d8184", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07f5f78b4e67470df38c100332b7ac010a2d8184"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcaeffefc5fa5c54077f93091baea17e4004aa47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcaeffefc5fa5c54077f93091baea17e4004aa47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcaeffefc5fa5c54077f93091baea17e4004aa47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcaeffefc5fa5c54077f93091baea17e4004aa47/comments", "author": null, "committer": null, "parents": [{"sha": "ae3de8b7b207ee7cbe2caa8e9d0a8b7c37fb6ef5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae3de8b7b207ee7cbe2caa8e9d0a8b7c37fb6ef5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae3de8b7b207ee7cbe2caa8e9d0a8b7c37fb6ef5"}], "stats": {"total": 34, "additions": 20, "deletions": 14}, "files": [{"sha": "5009cfe9bf023de773f8ab08a29fd5a3582ae649", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcaeffefc5fa5c54077f93091baea17e4004aa47/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcaeffefc5fa5c54077f93091baea17e4004aa47/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dcaeffefc5fa5c54077f93091baea17e4004aa47", "patch": "@@ -1,3 +1,9 @@\n+Sun Jan  3 20:40:34 1999  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* pa.md (branch, negated branch): Handle (const_int 0) as first\n+\tsource operand.\n+\t* pa.c (output_cbranch): Likewise.\n+\n Sun Jan  3 03:20:38 1999  David Edelsohn  <edelsohn@mhpcc.edu>\n \n \t* rs6000.c (rs6000_stack_info): Undo spurious part of last"}, {"sha": "162a0b09a24776a7cf678805ec034c80b66306f8", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcaeffefc5fa5c54077f93091baea17e4004aa47/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcaeffefc5fa5c54077f93091baea17e4004aa47/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=dcaeffefc5fa5c54077f93091baea17e4004aa47", "patch": "@@ -4461,11 +4461,11 @@ output_cbranch (operands, nullify, length, negated, insn)\n \telse\n \t  strcat (buf, \"%S3\");\n \tif (useskip)\n-\t  strcat (buf, \" %2,%1,0\");\n+\t  strcat (buf, \" %2,%r1,0\");\n \telse if (nullify)\n-\t  strcat (buf, \",n %2,%1,%0\");\n+\t  strcat (buf, \",n %2,%r1,%0\");\n \telse\n-\t  strcat (buf, \" %2,%1,%0\");\n+\t  strcat (buf, \" %2,%r1,%0\");\n \tbreak;\n \n      /* All long conditionals.  Note an short backward branch with an\n@@ -4483,7 +4483,7 @@ output_cbranch (operands, nullify, length, negated, insn)\n \t      strcat (buf, \"%S3\");\n \t    else\n \t      strcat (buf, \"%B3\");\n-\t    strcat (buf, \",n %2,%1,.+12\\n\\tbl %0,0\");\n+\t    strcat (buf, \",n %2,%r1,.+12\\n\\tbl %0,0\");\n \t  }\n \t/* Handle short backwards branch with an unfilled delay slot.\n \t   Using a comb;nop rather than comiclr;bl saves 1 cycle for both\n@@ -4496,9 +4496,9 @@ output_cbranch (operands, nullify, length, negated, insn)\n \t  {\n \t    strcpy (buf, \"com%I2b,\");\n \t    if (negated)\n-\t      strcat (buf, \"%B3 %2,%1,%0%#\");\n+\t      strcat (buf, \"%B3 %2,%r1,%0%#\");\n \t    else\n-\t      strcat (buf, \"%S3 %2,%1,%0%#\");\n+\t      strcat (buf, \"%S3 %2,%r1,%0%#\");\n \t  }\n \telse\n \t  {\n@@ -4508,9 +4508,9 @@ output_cbranch (operands, nullify, length, negated, insn)\n \t    else\n \t      strcat (buf, \"%B3\");\n \t    if (nullify)\n-\t      strcat (buf, \" %2,%1,0\\n\\tbl,n %0,0\");\n+\t      strcat (buf, \" %2,%r1,0\\n\\tbl,n %0,0\");\n \t    else\n-\t      strcat (buf, \" %2,%1,0\\n\\tbl %0,0\");\n+\t      strcat (buf, \" %2,%r1,0\\n\\tbl %0,0\");\n \t  }\n \tbreak;\n \n@@ -4523,9 +4523,9 @@ output_cbranch (operands, nullify, length, negated, insn)\n \t/* Create a reversed conditional branch which branches around\n \t   the following insns.  */\n \tif (negated)\n-\t  strcpy (buf, \"com%I2b,%S3,n %2,%1,.+20\");\n+\t  strcpy (buf, \"com%I2b,%S3,n %2,%r1,.+20\");\n \telse\n-\t  strcpy (buf, \"com%I2b,%B3,n %2,%1,.+20\");\n+\t  strcpy (buf, \"com%I2b,%B3,n %2,%r1,.+20\");\n \toutput_asm_insn (buf, operands);\n \n \t/* Output an insn to save %r1.  */\n@@ -4548,9 +4548,9 @@ output_cbranch (operands, nullify, length, negated, insn)\n \t/* Create a reversed conditional branch which branches around\n \t   the following insns.  */\n \tif (negated)\n-\t  strcpy (buf, \"com%I2b,%S3,n %2,%1,.+28\");\n+\t  strcpy (buf, \"com%I2b,%S3,n %2,%r1,.+28\");\n \telse\n-\t  strcpy (buf, \"com%I2b,%B3,n %2,%1,.+28\");\n+\t  strcpy (buf, \"com%I2b,%B3,n %2,%r1,.+28\");\n \toutput_asm_insn (buf, operands);\n \n \t/* Output an insn to save %r1.  */"}, {"sha": "b693f672a5e2f69c3504d8d645e3df1d7aa58aad", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcaeffefc5fa5c54077f93091baea17e4004aa47/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcaeffefc5fa5c54077f93091baea17e4004aa47/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=dcaeffefc5fa5c54077f93091baea17e4004aa47", "patch": "@@ -1031,7 +1031,7 @@\n   [(set (pc)\n \t(if_then_else\n \t (match_operator 3 \"comparison_operator\"\n-\t\t\t [(match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t\t [(match_operand:SI 1 \"reg_or_0_operand\" \"rM\")\n \t\t\t  (match_operand:SI 2 \"arith5_operand\" \"rL\")])\n \t (label_ref (match_operand 0 \"\" \"\"))\n \t (pc)))]\n@@ -1059,7 +1059,7 @@\n   [(set (pc)\n \t(if_then_else\n \t (match_operator 3 \"comparison_operator\"\n-\t\t\t [(match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t\t [(match_operand:SI 1 \"reg_or_0_operand\" \"rM\")\n \t\t\t  (match_operand:SI 2 \"arith5_operand\" \"rL\")])\n \t (pc)\n \t (label_ref (match_operand 0 \"\" \"\"))))]"}]}