{"sha": "c4dfe0fc0670efc7757af77f9b98c521b66a44eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRkZmUwZmMwNjcwZWZjNzc1N2FmNzdmOWI5OGM1MjFiNjZhNDRlYg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-03-23T22:16:55Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-03-23T22:16:55Z"}, "message": "(expand_builtin, BUILT_IN_NEXT_ARG case): Verify that\nparameter is last named argument.\n\nFrom-SVN: r6854", "tree": {"sha": "ab62855921c86085618538965f6b6c34be58e64a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab62855921c86085618538965f6b6c34be58e64a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4dfe0fc0670efc7757af77f9b98c521b66a44eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4dfe0fc0670efc7757af77f9b98c521b66a44eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4dfe0fc0670efc7757af77f9b98c521b66a44eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4dfe0fc0670efc7757af77f9b98c521b66a44eb/comments", "author": null, "committer": null, "parents": [{"sha": "8d0aed47064e753be675137782a541087d20b648", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d0aed47064e753be675137782a541087d20b648", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d0aed47064e753be675137782a541087d20b648"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "84883e3862e802d8f7f37994b33b793d055883de", "filename": "gcc/expr.c", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4dfe0fc0670efc7757af77f9b98c521b66a44eb/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4dfe0fc0670efc7757af77f9b98c521b66a44eb/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=c4dfe0fc0670efc7757af77f9b98c521b66a44eb", "patch": "@@ -6956,24 +6956,31 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n #endif\n       }\n \n-      /* Return the address of the first anonymous stack arg.  */\n+      /* Return the address of the first anonymous stack arg.\n+\t This should only be used for stdarg functions.  */\n     case BUILT_IN_NEXT_ARG:\n       {\n-\ttree parm;\n \ttree fntype = TREE_TYPE (current_function_decl);\n-\ttree fnargs = DECL_ARGUMENTS (current_function_decl);\n-\tif (!(TYPE_ARG_TYPES (fntype) != 0\n-\t      && (TREE_VALUE (tree_last (TYPE_ARG_TYPES (fntype)))\n-\t\t  != void_type_node))\n-\t    && !(fnargs\n-\t\t && (parm = tree_last (fnargs)) != 0\n-\t\t && DECL_NAME (parm)\n-\t\t && (! strcmp (IDENTIFIER_POINTER (DECL_NAME (parm)),\n-\t\t\t       \"__builtin_va_alist\"))))\n+\ttree last_parm = tree_last (DECL_ARGUMENTS (current_function_decl));\n+\ttree arg;\n+\n+\tif (TYPE_ARG_TYPES (fntype) == 0\n+\t    || (TREE_VALUE (tree_last (TYPE_ARG_TYPES (fntype)))\n+\t\t== void_type_node))\n \t  {\n \t    error (\"`va_start' used in function with fixed args\");\n \t    return const0_rtx;\n \t  }\n+\n+\targ = TREE_VALUE (arglist);\n+\t/* Strip off all nops for the sake of the comparison.  This is not\n+\t   quite the same as STRIP_NOPS.  It does more.  */\n+\twhile (TREE_CODE (arg) == NOP_EXPR\n+\t       || TREE_CODE (arg) == CONVERT_EXPR\n+\t       || TREE_CODE (arg) == NON_LVALUE_EXPR)\n+\t  arg = TREE_OPERAND (arg, 0);\n+\tif (arg != last_parm)\n+\t  warning (\"second parameter of `va_start' not last named argument\");\n       }\n \n       return expand_binop (Pmode, add_optab,"}]}