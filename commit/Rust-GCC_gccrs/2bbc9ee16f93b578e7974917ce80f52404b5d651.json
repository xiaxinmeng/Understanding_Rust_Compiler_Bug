{"sha": "2bbc9ee16f93b578e7974917ce80f52404b5d651", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJiYzllZTE2ZjkzYjU3OGU3OTc0OTE3Y2U4MGY1MjQwNGI1ZDY1MQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-02-06T19:01:24Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-02-06T19:01:24Z"}, "message": "Reverted erroneously applied patch\n\nFrom-SVN: r62493", "tree": {"sha": "74518b1eef03e5da93d316d0a16a9fa1a4a156c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74518b1eef03e5da93d316d0a16a9fa1a4a156c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bbc9ee16f93b578e7974917ce80f52404b5d651", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bbc9ee16f93b578e7974917ce80f52404b5d651", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bbc9ee16f93b578e7974917ce80f52404b5d651", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bbc9ee16f93b578e7974917ce80f52404b5d651/comments", "author": null, "committer": null, "parents": [{"sha": "5dc911525c4b8d4366eb7f9270b8af1fb1dedb66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dc911525c4b8d4366eb7f9270b8af1fb1dedb66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dc911525c4b8d4366eb7f9270b8af1fb1dedb66"}], "stats": {"total": 33, "additions": 4, "deletions": 29}, "files": [{"sha": "9ad41a658ba347e8530699a1fb87d7b775ac94d1", "filename": "gcc/java/except.c", "status": "modified", "additions": 4, "deletions": 29, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bbc9ee16f93b578e7974917ce80f52404b5d651/gcc%2Fjava%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bbc9ee16f93b578e7974917ce80f52404b5d651/gcc%2Fjava%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexcept.c?ref=2bbc9ee16f93b578e7974917ce80f52404b5d651", "patch": "@@ -324,35 +324,10 @@ prepare_eh_table_type (tree type)\n   else if (is_compiled_class (type))\n     exp = build_class_ref (type);\n   else\n-    {\n-      tree ctype = make_node (RECORD_TYPE);\n-      tree field = NULL_TREE;\n-      tree cinit, decl;\n-      tree utf8_ref = build_utf8_ref (DECL_NAME (TYPE_NAME (type)));\n-      char buf[64];\n-      sprintf (buf, \"%s_ref\", \n-\t       IDENTIFIER_POINTER (DECL_NAME (TREE_OPERAND (utf8_ref, 0))));\n-      PUSH_FIELD (ctype, field, \"dummy\", ptr_type_node);\n-      PUSH_FIELD (ctype, field, \"utf8\",  utf8const_ptr_type);\n-      FINISH_RECORD (ctype);\n-      START_RECORD_CONSTRUCTOR (cinit, ctype);\n-      PUSH_FIELD_VALUE (cinit, \"dummy\", integer_minus_one_node);\n-      PUSH_FIELD_VALUE (cinit, \"utf8\", utf8_ref);\n-      FINISH_RECORD_CONSTRUCTOR (cinit);\n-      TREE_CONSTANT (cinit) = 1;\n-      decl = build_decl (VAR_DECL, get_identifier (buf), utf8const_type);\n-      TREE_STATIC (decl) = 1;\n-      DECL_ARTIFICIAL (decl) = 1;\n-      DECL_IGNORED_P (decl) = 1;\n-      TREE_READONLY (decl) = 1;\n-      TREE_THIS_VOLATILE (decl) = 0;\n-      DECL_INITIAL (decl) = cinit;\n-      layout_decl (decl, 0);\n-      pushdecl (decl);\n-      rest_of_decl_compilation (decl, (char*) 0, global_bindings_p (), 0);\n-      make_decl_rtl (decl, (char*) 0);\n-      exp = build1 (ADDR_EXPR, utf8const_ptr_type, decl);\n-    }\n+    exp = fold (build \n+\t\t(PLUS_EXPR, ptr_type_node,\n+\t\t build_utf8_ref (DECL_NAME (TYPE_NAME (type))),\n+\t\t size_one_node));\n   return exp;\n }\n "}]}