{"sha": "10a9f2beac265deecca8b66b352b0162cd9713bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBhOWYyYmVhYzI2NWRlZWNjYThiNjZiMzUyYjAxNjJjZDk3MTNiZg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "1998-10-07T12:12:21Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1998-10-07T12:12:21Z"}, "message": "Fix for irix6 -O0 bug, see testcase gcc.c-torture/compile/981007-1.c.\n\n\t* expr.c (emit_group_store): Handle a PARALLEL destination.\n\nFrom-SVN: r22893", "tree": {"sha": "3806ba73d1e8f548364b103a2cb3113f7e3c1120", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3806ba73d1e8f548364b103a2cb3113f7e3c1120"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10a9f2beac265deecca8b66b352b0162cd9713bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10a9f2beac265deecca8b66b352b0162cd9713bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10a9f2beac265deecca8b66b352b0162cd9713bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10a9f2beac265deecca8b66b352b0162cd9713bf/comments", "author": null, "committer": null, "parents": [{"sha": "28833504894ec58ca0ca15b810619b88898b25a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28833504894ec58ca0ca15b810619b88898b25a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28833504894ec58ca0ca15b810619b88898b25a2"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "0ded56ee2e957b574c831d6d28c865e417ca6d62", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10a9f2beac265deecca8b66b352b0162cd9713bf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10a9f2beac265deecca8b66b352b0162cd9713bf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=10a9f2beac265deecca8b66b352b0162cd9713bf", "patch": "@@ -1,3 +1,7 @@\n+Wed Oct  7 12:10:46 1998  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* expr.c (emit_group_store): Handle a PARALLEL destination.\n+\n Wed Oct  7 10:07:29 1998  Richard Henderson  <rth@cygnus.com>\n \n \t* gcse.c (pre_insert_insn): When a call ends a bb, insert"}, {"sha": "d2dcdf8c592fee06e58aad44d8631cf0fef2917e", "filename": "gcc/expr.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10a9f2beac265deecca8b66b352b0162cd9713bf/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10a9f2beac265deecca8b66b352b0162cd9713bf/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=10a9f2beac265deecca8b66b352b0162cd9713bf", "patch": "@@ -2006,7 +2006,26 @@ emit_group_store (orig_dst, src, ssize, align)\n   /* If we won't be storing directly into memory, protect the real destination\n      from strange tricks we might play.  */\n   dst = orig_dst;\n-  if (GET_CODE (dst) != MEM)\n+  if (GET_CODE (dst) == PARALLEL)\n+    {\n+      rtx temp;\n+\n+      /* We can get a PARALLEL dst if there is a conditional expression in\n+\t a return statement.  In that case, the dst and src are the same,\n+\t so no action is necessary.  */\n+      if (rtx_equal_p (dst, src))\n+\treturn;\n+\n+      /* It is unclear if we can ever reach here, but we may as well handle\n+\t it.  Allocate a temporary, and split this into a store/load to/from\n+\t the temporary.  */\n+\n+      temp = assign_stack_temp (GET_MODE (dst), ssize, 0);\n+      emit_group_store (temp, src, ssize, align);\n+      emit_group_load (dst, temp, ssize, align);\n+      return;\n+    }\n+  else if (GET_CODE (dst) != MEM)\n     {\n       dst = gen_reg_rtx (GET_MODE (orig_dst));\n       /* Make life a bit easier for combine.  */"}]}