{"sha": "74155a6f37c3cabdf3875a560876c4b9fa3288f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQxNTVhNmYzN2MzY2FiZGYzODc1YTU2MDg3NmM0YjlmYTMyODhmOQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2011-11-07T18:08:35Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2011-11-07T18:08:35Z"}, "message": "re PR target/49313 (Inefficient libgcc implementations for avr)\n\n\tPR target/49313\n\t* config/avr/lib1funcs.S (__divmodhi4, __divmodsi4): Tweak speed.\n\nFrom-SVN: r181104", "tree": {"sha": "bcb55390e087177125656ae46cc5b16fed327b82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcb55390e087177125656ae46cc5b16fed327b82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74155a6f37c3cabdf3875a560876c4b9fa3288f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74155a6f37c3cabdf3875a560876c4b9fa3288f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74155a6f37c3cabdf3875a560876c4b9fa3288f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74155a6f37c3cabdf3875a560876c4b9fa3288f9/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b42d3defdd1d14a1bb8e6f0e5190045622cf915", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b42d3defdd1d14a1bb8e6f0e5190045622cf915", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b42d3defdd1d14a1bb8e6f0e5190045622cf915"}], "stats": {"total": 109, "additions": 60, "deletions": 49}, "files": [{"sha": "6d05f0e6b5e97f2e432a693a97a1a35cb317958b", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74155a6f37c3cabdf3875a560876c4b9fa3288f9/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74155a6f37c3cabdf3875a560876c4b9fa3288f9/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=74155a6f37c3cabdf3875a560876c4b9fa3288f9", "patch": "@@ -1,3 +1,8 @@\n+2011-11-07  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/49313\n+\t* config/avr/lib1funcs.S (__divmodhi4, __divmodsi4): Tweak speed.\n+\n 2011-11-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config.host (tmake_file): Correct comment."}, {"sha": "f7a8f6335c4d50b5bd77003f923e1865b82e4b18", "filename": "libgcc/config/avr/lib1funcs.S", "status": "modified", "additions": 55, "deletions": 49, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74155a6f37c3cabdf3875a560876c4b9fa3288f9/libgcc%2Fconfig%2Favr%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74155a6f37c3cabdf3875a560876c4b9fa3288f9/libgcc%2Fconfig%2Favr%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Favr%2Flib1funcs.S?ref=74155a6f37c3cabdf3875a560876c4b9fa3288f9", "patch": "@@ -562,30 +562,33 @@ ENDF __udivmodhi4\n \n #if defined (L_divmodhi4)\n DEFUN __divmodhi4\n-\t.global\t_div\n+    .global _div\n _div:\n-        bst     r_arg1H,7\t; store sign of dividend\n-        mov     __tmp_reg__,r_arg1H\n-        eor     __tmp_reg__,r_arg2H   ; r0.7 is sign of result\n-\trcall\t__divmodhi4_neg1 ; dividend negative : negate\n-\tsbrc\tr_arg2H,7\n-\trcall\t__divmodhi4_neg2 ; divisor negative : negate\n-\tXCALL\t__udivmodhi4\t; do the unsigned div/mod\n-\trcall\t__divmodhi4_neg1 ; correct remainder sign\n-\ttst\t__tmp_reg__\n-\tbrpl\t__divmodhi4_exit\n+    bst     r_arg1H,7           ; store sign of dividend\n+    mov     __tmp_reg__,r_arg2H\n+    brtc    0f\n+    com     __tmp_reg__         ; r0.7 is sign of result\n+    rcall   __divmodhi4_neg1    ; dividend negative: negate\n+0:\n+    sbrc    r_arg2H,7\n+    rcall   __divmodhi4_neg2    ; divisor negative: negate\n+    XCALL   __udivmodhi4        ; do the unsigned div/mod\n+    sbrc    __tmp_reg__,7\n+    rcall   __divmodhi4_neg2    ; correct remainder sign\n+    brtc    __divmodhi4_exit\n+__divmodhi4_neg1:\n+    ;; correct dividend/remainder sign\n+    com     r_arg1H\n+    neg     r_arg1L\n+    sbci    r_arg1H,0xff\n+    ret\n __divmodhi4_neg2:\n-\tcom\tr_arg2H\n-\tneg\tr_arg2L\t\t; correct divisor/result sign\n-\tsbci\tr_arg2H,0xff\n+    ;; correct divisor/result sign\n+    com     r_arg2H\n+    neg     r_arg2L\n+    sbci    r_arg2H,0xff\n __divmodhi4_exit:\n-\tret\n-__divmodhi4_neg1:\n-\tbrtc\t__divmodhi4_exit\n-\tcom\tr_arg1H\n-\tneg\tr_arg1L\t\t; correct dividend/remainder sign\n-\tsbci\tr_arg1H,0xff\n-\tret\n+    ret\n ENDF __divmodhi4\n #endif /* defined (L_divmodhi4) */\n \n@@ -807,36 +810,39 @@ ENDF __udivmodsi4\n \n #if defined (L_divmodsi4)\n DEFUN __divmodsi4\n-        bst     r_arg1HH,7\t; store sign of dividend\n-        mov     __tmp_reg__,r_arg1HH\n-        eor     __tmp_reg__,r_arg2HH   ; r0.7 is sign of result\n-\trcall\t__divmodsi4_neg1 ; dividend negative : negate\n-\tsbrc\tr_arg2HH,7\n-\trcall\t__divmodsi4_neg2 ; divisor negative : negate\n-\tXCALL\t__udivmodsi4\t; do the unsigned div/mod\n-\trcall\t__divmodsi4_neg1 ; correct remainder sign\n-\trol\t__tmp_reg__\n-\tbrcc\t__divmodsi4_exit\n+    mov     __tmp_reg__,r_arg2HH\n+    bst     r_arg1HH,7          ; store sign of dividend\n+    brtc    0f\n+    com     __tmp_reg__         ; r0.7 is sign of result\n+    rcall   __divmodsi4_neg1    ; dividend negative: negate\n+0:\n+    sbrc    r_arg2HH,7\n+    rcall   __divmodsi4_neg2    ; divisor negative: negate\n+    XCALL   __udivmodsi4        ; do the unsigned div/mod\n+    sbrc    __tmp_reg__, 7      ; correct quotient sign\n+    rcall   __divmodsi4_neg2\n+    brtc    __divmodsi4_exit    ; correct remainder sign\n+__divmodsi4_neg1:\n+    ;; correct dividend/remainder sign\n+    com     r_arg1HH\n+    com     r_arg1HL\n+    com     r_arg1H\n+    neg     r_arg1L\n+    sbci    r_arg1H, 0xff\n+    sbci    r_arg1HL,0xff\n+    sbci    r_arg1HH,0xff\n+    ret\n __divmodsi4_neg2:\n-\tcom\tr_arg2HH\n-\tcom\tr_arg2HL\n-\tcom\tr_arg2H\n-\tneg\tr_arg2L\t\t; correct divisor/quotient sign\n-\tsbci\tr_arg2H,0xff\n-\tsbci\tr_arg2HL,0xff\n-\tsbci\tr_arg2HH,0xff\n+    ;; correct divisor/quotient sign\n+    com     r_arg2HH\n+    com     r_arg2HL\n+    com     r_arg2H\n+    neg     r_arg2L\n+    sbci    r_arg2H,0xff\n+    sbci    r_arg2HL,0xff\n+    sbci    r_arg2HH,0xff\n __divmodsi4_exit:\n-\tret\n-__divmodsi4_neg1:\n-\tbrtc\t__divmodsi4_exit\n-\tcom\tr_arg1HH\n-\tcom\tr_arg1HL\n-\tcom\tr_arg1H\n-\tneg\tr_arg1L\t\t; correct dividend/remainder sign\n-\tsbci\tr_arg1H, 0xff\n-\tsbci\tr_arg1HL,0xff\n-\tsbci\tr_arg1HH,0xff\n-\tret\n+    ret\n ENDF __divmodsi4\n #endif /* defined (L_divmodsi4) */\n "}]}