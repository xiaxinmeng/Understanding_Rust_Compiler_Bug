{"sha": "fb632ef567d8af061e7f73fcf7bb2b75796cdfb4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI2MzJlZjU2N2Q4YWYwNjFlN2Y3M2ZjZjdiYjJiNzU3OTZjZGZiNA==", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2021-05-11T18:43:31Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-07-06T14:46:59Z"}, "message": "[Ada] Implement missing constraint checks for default streaming operations\n\ngcc/ada/\n\n\t* sem_ch5.adb (Analyze_Assignment): Add new nested function,\n\tOmit_Range_Check_For_Streaming, and make call to\n\tApply_Scalar_Range_Check conditional on the result of this new\n\tfunction.\n\t* exp_attr.adb (Compile_Stream_Body_In_Scope): Eliminate Check\n\tparameter, update callers.  The new\n\tOmit_Range_Check_For_Streaming parameter takes the place of the\n\told use of calling Insert_Action with Suppress => All_Checks,\n\twhich was insufficiently precise (it did not allow suppressing\n\tchecks for one component but not for another).\n\t(Expand_N_Attribute_Reference): Eliminate another \"Suppress =>\n\tAll_Checks\" from an Insert_Action call, this one in generating\n\tthe expansion of a T'Read attribute reference for a composite\n\ttype T.", "tree": {"sha": "d86b1f23fe3daf03c5c6830307fcd265d50586d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d86b1f23fe3daf03c5c6830307fcd265d50586d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb632ef567d8af061e7f73fcf7bb2b75796cdfb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb632ef567d8af061e7f73fcf7bb2b75796cdfb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb632ef567d8af061e7f73fcf7bb2b75796cdfb4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb632ef567d8af061e7f73fcf7bb2b75796cdfb4/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ff47b3f88330ae222d393883d6b4a9c5393dc69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ff47b3f88330ae222d393883d6b4a9c5393dc69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ff47b3f88330ae222d393883d6b4a9c5393dc69"}], "stats": {"total": 114, "additions": 95, "deletions": 19}, "files": [{"sha": "e33a36ef8a3a5624af2b8826408e2e6ec1e0b54f", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 8, "deletions": 18, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb632ef567d8af061e7f73fcf7bb2b75796cdfb4/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb632ef567d8af061e7f73fcf7bb2b75796cdfb4/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=fb632ef567d8af061e7f73fcf7bb2b75796cdfb4", "patch": "@@ -117,8 +117,7 @@ package body Exp_Attr is\n    procedure Compile_Stream_Body_In_Scope\n      (N     : Node_Id;\n       Decl  : Node_Id;\n-      Arr   : Entity_Id;\n-      Check : Boolean);\n+      Arr   : Entity_Id);\n    --  The body for a stream subprogram may be generated outside of the scope\n    --  of the type. If the type is fully private, it may depend on the full\n    --  view of other types (e.g. indexes) that are currently private as well.\n@@ -867,8 +866,7 @@ package body Exp_Attr is\n    procedure Compile_Stream_Body_In_Scope\n      (N     : Node_Id;\n       Decl  : Node_Id;\n-      Arr   : Entity_Id;\n-      Check : Boolean)\n+      Arr   : Entity_Id)\n    is\n       C_Type  : constant Entity_Id := Base_Type (Component_Type (Arr));\n       Curr    : constant Entity_Id := Current_Scope;\n@@ -922,11 +920,7 @@ package body Exp_Attr is\n          Install := False;\n       end if;\n \n-      if Check then\n-         Insert_Action (N, Decl);\n-      else\n-         Insert_Action (N, Decl, Suppress => All_Checks);\n-      end if;\n+      Insert_Action (N, Decl);\n \n       if Install then\n \n@@ -4128,7 +4122,7 @@ package body Exp_Attr is\n \n             elsif Is_Array_Type (U_Type) then\n                Build_Array_Input_Function (Loc, U_Type, Decl, Fname);\n-               Compile_Stream_Body_In_Scope (N, Decl, U_Type, Check => False);\n+               Compile_Stream_Body_In_Scope (N, Decl, U_Type);\n \n             --  Dispatching case with class-wide type\n \n@@ -5238,7 +5232,7 @@ package body Exp_Attr is\n \n             elsif Is_Array_Type (U_Type) then\n                Build_Array_Output_Procedure (Loc, U_Type, Decl, Pname);\n-               Compile_Stream_Body_In_Scope (N, Decl, U_Type, Check => False);\n+               Compile_Stream_Body_In_Scope (N, Decl, U_Type);\n \n             --  Class-wide case, first output external tag, then dispatch\n             --  to the appropriate primitive Output function (RM 13.13.2(31)).\n@@ -6090,7 +6084,7 @@ package body Exp_Attr is\n \n             elsif Is_Array_Type (U_Type) then\n                Build_Array_Read_Procedure (N, U_Type, Decl, Pname);\n-               Compile_Stream_Body_In_Scope (N, Decl, U_Type, Check => False);\n+               Compile_Stream_Body_In_Scope (N, Decl, U_Type);\n \n             --  Tagged type case, use the primitive Read function. Note that\n             --  this will dispatch in the class-wide case which is what we want\n@@ -6129,11 +6123,7 @@ package body Exp_Attr is\n                     (Loc, Full_Base (U_Type), Decl, Pname);\n                end if;\n \n-               --  Suppress checks, uninitialized or otherwise invalid\n-               --  data does not cause constraint errors to be raised for\n-               --  a complete record read.\n-\n-               Insert_Action (N, Decl, All_Checks);\n+               Insert_Action (N, Decl);\n             end if;\n          end if;\n \n@@ -7718,7 +7708,7 @@ package body Exp_Attr is\n \n             elsif Is_Array_Type (U_Type) then\n                Build_Array_Write_Procedure (N, U_Type, Decl, Pname);\n-               Compile_Stream_Body_In_Scope (N, Decl, U_Type, Check => False);\n+               Compile_Stream_Body_In_Scope (N, Decl, U_Type);\n \n             --  Tagged type case, use the primitive Write function. Note that\n             --  this will dispatch in the class-wide case which is what we want"}, {"sha": "fbb6904b2c58537b9aef2d66547a1637af7cd35e", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 87, "deletions": 1, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb632ef567d8af061e7f73fcf7bb2b75796cdfb4/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb632ef567d8af061e7f73fcf7bb2b75796cdfb4/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=fb632ef567d8af061e7f73fcf7bb2b75796cdfb4", "patch": "@@ -33,6 +33,7 @@ with Einfo.Utils;    use Einfo.Utils;\n with Errout;         use Errout;\n with Expander;       use Expander;\n with Exp_Ch6;        use Exp_Ch6;\n+with Exp_Tss;        use Exp_Tss;\n with Exp_Util;       use Exp_Util;\n with Freeze;         use Freeze;\n with Ghost;          use Ghost;\n@@ -979,7 +980,92 @@ package body Sem_Ch5 is\n       end if;\n \n       if Is_Scalar_Type (T1) then\n-         Apply_Scalar_Range_Check (Rhs, Etype (Lhs));\n+         declare\n+\n+            function Omit_Range_Check_For_Streaming return Boolean;\n+            --  Return True if this assignment statement is the expansion of\n+            --  a Some_Scalar_Type'Read procedure call such that all conditions\n+            --  of 13.3.2(35)'s \"no check is made\" rule are met.\n+\n+            ------------------------------------\n+            -- Omit_Range_Check_For_Streaming --\n+            ------------------------------------\n+\n+            function Omit_Range_Check_For_Streaming return Boolean is\n+            begin\n+               --  Have we got an implicitly generated assignment to a\n+               --  component of a composite object? If not, return False.\n+\n+               if Comes_From_Source (N)\n+                 or else Serious_Errors_Detected > 0\n+                 or else Nkind (Lhs)\n+                           not in N_Selected_Component | N_Indexed_Component\n+               then\n+                  return False;\n+               end if;\n+\n+               declare\n+                  Pref : constant Node_Id := Prefix (Lhs);\n+               begin\n+                  --  Are we in the implicitly-defined Read subprogram\n+                  --  for a composite type, reading the value of a scalar\n+                  --  component from the stream? If not, return False.\n+\n+                  if Nkind (Pref) /= N_Identifier\n+                    or else not Is_TSS (Scope (Entity (Pref)), TSS_Stream_Read)\n+                  then\n+                     return False;\n+                  end if;\n+\n+                  --  Return False if Default_Value or Default_Component_Value\n+                  --  aspect applies.\n+\n+                  if Has_Default_Aspect (Etype (Lhs))\n+                    or else Has_Default_Aspect (Etype (Pref))\n+                  then\n+                     return False;\n+\n+                  --  Are we assigning to a record component (as opposed to\n+                  --  an array component)?\n+\n+                  elsif Nkind (Lhs) = N_Selected_Component then\n+\n+                     --  Are we assigning to a nondiscriminant component\n+                     --  that lacks a default initial value expression?\n+                     --  If so, return True.\n+\n+                     declare\n+                        Comp_Id : constant Entity_Id :=\n+                          Original_Record_Component\n+                            (Entity (Selector_Name (Lhs)));\n+                     begin\n+                        if Ekind (Comp_Id) = E_Component\n+                          and then Nkind (Parent (Comp_Id))\n+                                     = N_Component_Declaration\n+                          and then\n+                            not Present (Expression (Parent (Comp_Id)))\n+                        then\n+                           return True;\n+                        end if;\n+                        return False;\n+                     end;\n+\n+                  --  We are assigning to a component of an array\n+                  --  (and we tested for both Default_Value and\n+                  --  Default_Component_Value above), so return True.\n+\n+                  else\n+                     pragma Assert (Nkind (Lhs) = N_Indexed_Component);\n+                     return True;\n+                  end if;\n+               end;\n+            end Omit_Range_Check_For_Streaming;\n+\n+         begin\n+            if not Omit_Range_Check_For_Streaming then\n+               Apply_Scalar_Range_Check (Rhs, Etype (Lhs));\n+            end if;\n+         end;\n \n       --  For array types, verify that lengths match. If the right hand side\n       --  is a function call that has been inlined, the assignment has been"}]}