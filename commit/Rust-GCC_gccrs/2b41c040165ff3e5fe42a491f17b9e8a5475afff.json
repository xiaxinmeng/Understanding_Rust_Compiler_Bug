{"sha": "2b41c040165ff3e5fe42a491f17b9e8a5475afff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI0MWMwNDAxNjVmZjNlNWZlNDJhNDkxZjE3YjllOGE1NDc1YWZmZg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-05-06T19:03:35Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-05-06T19:03:35Z"}, "message": "decl2.c (pending_statics, [...]): Use VEC instead of VARRAY.\n\n\t* decl2.c (pending_statics, note_vague_linkage_var,\n\tcp_finish_file): Use VEC instead of VARRAY.\n\t(pending_statics_used): Remove.\n\nFrom-SVN: r99329", "tree": {"sha": "66663ecc0e0fc97957a95983ce9cc5fe14b27652", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66663ecc0e0fc97957a95983ce9cc5fe14b27652"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b41c040165ff3e5fe42a491f17b9e8a5475afff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b41c040165ff3e5fe42a491f17b9e8a5475afff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b41c040165ff3e5fe42a491f17b9e8a5475afff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b41c040165ff3e5fe42a491f17b9e8a5475afff/comments", "author": null, "committer": null, "parents": [{"sha": "2b04082193a548edcf6c67ec1028e88d1dccfda8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b04082193a548edcf6c67ec1028e88d1dccfda8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b04082193a548edcf6c67ec1028e88d1dccfda8"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "afb3073609f5e4ee71126b47d2f1e6089474fcd9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b41c040165ff3e5fe42a491f17b9e8a5475afff/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b41c040165ff3e5fe42a491f17b9e8a5475afff/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2b41c040165ff3e5fe42a491f17b9e8a5475afff", "patch": "@@ -5,6 +5,10 @@\n \t* decl2.c (ssdf_decls, start_static_storage_duration_function,\n \tgenerate_ctor_or_dtor_function): Use VEC instead of VARRAY.\n \n+\t* decl2.c (pending_statics, note_vague_linkage_var,\n+\tcp_finish_file): Use VEC instead of VARRAY.\n+\t(pending_statics_used): Remove.\n+\n 2005-05-05  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* decl2.c (deferred_fns, note_vague_linkage_fn,"}, {"sha": "e11338f47c8bb579760099fc0f4a9ef1b9220339", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b41c040165ff3e5fe42a491f17b9e8a5475afff/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b41c040165ff3e5fe42a491f17b9e8a5475afff/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=2b41c040165ff3e5fe42a491f17b9e8a5475afff", "patch": "@@ -86,9 +86,7 @@ static tree get_guard_bits (tree);\n /* A list of static class variables.  This is needed, because a\n    static class variable can be declared inside the class without\n    an initializer, and then initialized, statically, outside the class.  */\n-static GTY(()) varray_type pending_statics;\n-#define pending_statics_used \\\n-  (pending_statics ? pending_statics->elements_used : 0)\n+static GTY(()) VEC(tree,gc) *pending_statics;\n \n /* A list of functions which were declared inline, but which we\n    may need to emit outline anyway.  */\n@@ -735,9 +733,7 @@ note_vague_linkage_fn (tree decl)\n static void\n note_vague_linkage_var (tree var)\n {\n-  if (!pending_statics)\n-    VARRAY_TREE_INIT (pending_statics, 32, \"pending_statics\");\n-  VARRAY_PUSH_TREE (pending_statics, var);\n+  VEC_safe_push (tree, gc, pending_statics, var);\n }\n \n /* We have just processed the DECL, which is a static data member.\n@@ -2779,6 +2775,7 @@ cp_finish_file (void)\n   do \n     {\n       tree t;\n+      tree decl;\n \n       reconsider = false;\n \n@@ -2965,9 +2962,8 @@ cp_finish_file (void)\n \treconsider = true;\n \n       /* Static data members are just like namespace-scope globals.  */\n-      for (i = 0; i < pending_statics_used; ++i) \n+      for (i = 0; VEC_iterate (tree, pending_statics, i, decl); ++i) \n \t{\n-\t  tree decl = VARRAY_TREE (pending_statics, i);\n \t  if (var_finalized_p (decl) || DECL_REALLY_EXTERN (decl))\n \t    continue;\n \t  import_export_decl (decl);\n@@ -2976,9 +2972,9 @@ cp_finish_file (void)\n \t  if (DECL_NOT_REALLY_EXTERN (decl) && decl_needed_p (decl))\n \t    DECL_EXTERNAL (decl) = 0;\n \t}\n-      if (pending_statics\n-\t  && wrapup_global_declarations (&VARRAY_TREE (pending_statics, 0),\n-\t\t\t\t\t pending_statics_used))\n+      if (VEC_length (tree, pending_statics) != 0\n+\t  && wrapup_global_declarations (VEC_address (tree, pending_statics),\n+\t\t\t\t\t VEC_length (tree, pending_statics)))\n \treconsider = true;\n \n       retries++;\n@@ -3049,9 +3045,9 @@ cp_finish_file (void)\n   /* Now, issue warnings about static, but not defined, functions,\n      etc., and emit debugging information.  */\n   walk_namespaces (wrapup_globals_for_namespace, /*data=*/&reconsider);\n-  if (pending_statics)\n-    check_global_declarations (&VARRAY_TREE (pending_statics, 0),\n-\t\t\t       pending_statics_used);\n+  if (VEC_length (tree, pending_statics) != 0)\n+    check_global_declarations (VEC_address (tree, pending_statics),\n+\t\t\t       VEC_length (tree, pending_statics));\n \n   finish_repo ();\n "}]}