{"sha": "5ece98479f869dfda91d31c0907b8e97d996c60b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVjZTk4NDc5Zjg2OWRmZGE5MWQzMWMwOTA3YjhlOTdkOTk2YzYwYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-06-04T09:23:27Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-06-04T09:23:27Z"}, "message": "re PR tree-optimization/53550 (ICE with -O{1,2,3} -fprefetch-loop-arrays in build2_stat, at tree.c:3803)\n\n\tPR tree-optimization/53550\n\t* tree-ssa-loop-niter.c (number_of_iterations_cond): If type\n\tis POINTER_TYPE_P, use sizetype as step type instead of type.\n\n\t* gcc.dg/pr53550.c: New test.\n\nFrom-SVN: r188169", "tree": {"sha": "f4c608a38d8dd3ec5a49c5ad456f0376da36c5d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4c608a38d8dd3ec5a49c5ad456f0376da36c5d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ece98479f869dfda91d31c0907b8e97d996c60b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ece98479f869dfda91d31c0907b8e97d996c60b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ece98479f869dfda91d31c0907b8e97d996c60b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ece98479f869dfda91d31c0907b8e97d996c60b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c014f6f54b11651b253192956ef16bdc12a4ddaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c014f6f54b11651b253192956ef16bdc12a4ddaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c014f6f54b11651b253192956ef16bdc12a4ddaa"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "b94c8beaa677d7c505d4bab850d2114a9235c1fd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ece98479f869dfda91d31c0907b8e97d996c60b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ece98479f869dfda91d31c0907b8e97d996c60b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5ece98479f869dfda91d31c0907b8e97d996c60b", "patch": "@@ -1,3 +1,9 @@\n+2012-06-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/53550\n+\t* tree-ssa-loop-niter.c (number_of_iterations_cond): If type\n+\tis POINTER_TYPE_P, use sizetype as step type instead of type.\n+\n 2012-06-04  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-data-ref.c (have_similar_memory_accesses_1): Remove."}, {"sha": "75b5be4f4cf49409d30ce5b7b69a8ff60052b657", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ece98479f869dfda91d31c0907b8e97d996c60b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ece98479f869dfda91d31c0907b8e97d996c60b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5ece98479f869dfda91d31c0907b8e97d996c60b", "patch": "@@ -1,3 +1,8 @@\n+2012-06-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/53550\n+\t* gcc.dg/pr53550.c: New test.\n+\n 2012-06-04  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/tree-ssa/ldist-11.c: Enable -ftree-loop-distribute-patterns."}, {"sha": "1008f43a7e5c491b32395ad282cc7396d5b595b8", "filename": "gcc/testsuite/gcc.dg/pr53550.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ece98479f869dfda91d31c0907b8e97d996c60b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr53550.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ece98479f869dfda91d31c0907b8e97d996c60b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr53550.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr53550.c?ref=5ece98479f869dfda91d31c0907b8e97d996c60b", "patch": "@@ -0,0 +1,12 @@\n+/* PR tree-optimization/53550 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fprefetch-loop-arrays -w\" } */\n+\n+int *\n+foo (int *x)\n+{\n+  int *a = x + 10, *b = x, *c = a;\n+  while (b != c)\n+    *--c = *b++;\n+  return x;\n+}"}, {"sha": "501c431d4c8026756c665e1ce2ea44898334eb48", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ece98479f869dfda91d31c0907b8e97d996c60b/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ece98479f869dfda91d31c0907b8e97d996c60b/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=5ece98479f869dfda91d31c0907b8e97d996c60b", "patch": "@@ -1275,13 +1275,14 @@ number_of_iterations_cond (struct loop *loop,\n      practice, but it is simple enough to manage.  */\n   if (!integer_zerop (iv0->step) && !integer_zerop (iv1->step))\n     {\n+      tree step_type = POINTER_TYPE_P (type) ? sizetype : type;\n       if (code != NE_EXPR)\n \treturn false;\n \n-      iv0->step = fold_binary_to_constant (MINUS_EXPR, type,\n+      iv0->step = fold_binary_to_constant (MINUS_EXPR, step_type,\n \t\t\t\t\t   iv0->step, iv1->step);\n       iv0->no_overflow = false;\n-      iv1->step = build_int_cst (type, 0);\n+      iv1->step = build_int_cst (step_type, 0);\n       iv1->no_overflow = true;\n     }\n "}]}