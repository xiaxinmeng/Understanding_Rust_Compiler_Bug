{"sha": "fc5851fe3df132cc4cccb21f8b1cd8fbb577b38c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM1ODUxZmUzZGYxMzJjYzRjY2NiMjFmOGIxY2Q4ZmJiNTc3YjM4Yw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2015-10-09T12:18:40Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2015-10-09T12:18:40Z"}, "message": "[PR67766] reorder handling of parallels, concats and promoted values in return\n\nfor  gcc/ChangeLog\n\n\tPR middle-end/67766\n\t* function.c (expand_function_end): Move return value\n\tpromotion past the handling of PARALLELs and CONCATs.\n\nFrom-SVN: r228651", "tree": {"sha": "f59af59cf3156be5a68ea0c52a78899cd7a2102d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f59af59cf3156be5a68ea0c52a78899cd7a2102d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc5851fe3df132cc4cccb21f8b1cd8fbb577b38c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc5851fe3df132cc4cccb21f8b1cd8fbb577b38c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc5851fe3df132cc4cccb21f8b1cd8fbb577b38c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc5851fe3df132cc4cccb21f8b1cd8fbb577b38c/comments", "author": null, "committer": null, "parents": [{"sha": "f813d16ec532adc9760b0d6d4574b2028034b73a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f813d16ec532adc9760b0d6d4574b2028034b73a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f813d16ec532adc9760b0d6d4574b2028034b73a"}], "stats": {"total": 28, "additions": 16, "deletions": 12}, "files": [{"sha": "cba70ef5669d109baf3e95415a200abc6927cc1c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc5851fe3df132cc4cccb21f8b1cd8fbb577b38c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc5851fe3df132cc4cccb21f8b1cd8fbb577b38c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc5851fe3df132cc4cccb21f8b1cd8fbb577b38c", "patch": "@@ -1,5 +1,9 @@\n 2015-10-09  Alexandre Oliva <aoliva@redhat.com>\n \n+\tPR middle-end/67766\n+\t* function.c (expand_function_end): Move return value\n+\tpromotion past the handling of PARALLELs and CONCATs.\n+\n \tPR rtl-optimization/67828\n \t* tree-ssa-loop-unswitch.c: Include tree-ssa.h.\n \t(tree_may_unswitch_on): Don't unswitch on expressions"}, {"sha": "d16d6d88818f569abfd95045aed3198c1e7b2582", "filename": "gcc/function.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc5851fe3df132cc4cccb21f8b1cd8fbb577b38c/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc5851fe3df132cc4cccb21f8b1cd8fbb577b38c/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=fc5851fe3df132cc4cccb21f8b1cd8fbb577b38c", "patch": "@@ -5446,18 +5446,6 @@ expand_function_end (void)\n \t\t\t      decl_rtl);\n \t      shift_return_value (GET_MODE (decl_rtl), true, real_decl_rtl);\n \t    }\n-\t  /* If a named return value dumped decl_return to memory, then\n-\t     we may need to re-do the PROMOTE_MODE signed/unsigned\n-\t     extension.  */\n-\t  else if (GET_MODE (real_decl_rtl) != GET_MODE (decl_rtl))\n-\t    {\n-\t      int unsignedp = TYPE_UNSIGNED (TREE_TYPE (decl_result));\n-\t      promote_function_mode (TREE_TYPE (decl_result),\n-\t\t\t\t     GET_MODE (decl_rtl), &unsignedp,\n-\t\t\t\t     TREE_TYPE (current_function_decl), 1);\n-\n-\t      convert_move (real_decl_rtl, decl_rtl, unsignedp);\n-\t    }\n \t  else if (GET_CODE (real_decl_rtl) == PARALLEL)\n \t    {\n \t      /* If expand_function_start has created a PARALLEL for decl_rtl,\n@@ -5488,6 +5476,18 @@ expand_function_end (void)\n \t      emit_move_insn (tmp, decl_rtl);\n \t      emit_move_insn (real_decl_rtl, tmp);\n \t    }\n+\t  /* If a named return value dumped decl_return to memory, then\n+\t     we may need to re-do the PROMOTE_MODE signed/unsigned\n+\t     extension.  */\n+\t  else if (GET_MODE (real_decl_rtl) != GET_MODE (decl_rtl))\n+\t    {\n+\t      int unsignedp = TYPE_UNSIGNED (TREE_TYPE (decl_result));\n+\t      promote_function_mode (TREE_TYPE (decl_result),\n+\t\t\t\t     GET_MODE (decl_rtl), &unsignedp,\n+\t\t\t\t     TREE_TYPE (current_function_decl), 1);\n+\n+\t      convert_move (real_decl_rtl, decl_rtl, unsignedp);\n+\t    }\n \t  else\n \t    emit_move_insn (real_decl_rtl, decl_rtl);\n \t}"}]}