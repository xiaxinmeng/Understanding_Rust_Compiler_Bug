{"sha": "091ace5877b03942e6b71fdf13fa4ac2df8e88cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDkxYWNlNTg3N2IwMzk0MmU2YjcxZmRmMTNmYTRhYzJkZjhlODhjZg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2011-08-31T21:06:29Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2011-08-31T21:06:29Z"}, "message": "genattrtab.c (attr_rtx_1): Hash SYMBOL_REFs.\n\ngcc/\n\t* genattrtab.c (attr_rtx_1): Hash SYMBOL_REFs.\n\t(attr_string): Use copy_md_ptr_loc.\n\nFrom-SVN: r178387", "tree": {"sha": "7f505cbfe91151d42d96eb4b983f66c34c5b04e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f505cbfe91151d42d96eb4b983f66c34c5b04e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/091ace5877b03942e6b71fdf13fa4ac2df8e88cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/091ace5877b03942e6b71fdf13fa4ac2df8e88cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/091ace5877b03942e6b71fdf13fa4ac2df8e88cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/091ace5877b03942e6b71fdf13fa4ac2df8e88cf/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "201176d3483714110201548a37b157a33415a635", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/201176d3483714110201548a37b157a33415a635", "html_url": "https://github.com/Rust-GCC/gccrs/commit/201176d3483714110201548a37b157a33415a635"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "8f403140820db118eb8d5985e64fe5ee3802af8d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/091ace5877b03942e6b71fdf13fa4ac2df8e88cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/091ace5877b03942e6b71fdf13fa4ac2df8e88cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=091ace5877b03942e6b71fdf13fa4ac2df8e88cf", "patch": "@@ -1,3 +1,8 @@\n+2011-08-31  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* genattrtab.c (attr_rtx_1): Hash SYMBOL_REFs.\n+\t(attr_string): Use copy_md_ptr_loc.\n+\n 2011-08-31  Martin Jambor  <mjambor@suse.cz>\n \n \tPR middle-end/49886"}, {"sha": "69e08506fe5edf0b18abd6f310a3e95387e6c17e", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/091ace5877b03942e6b71fdf13fa4ac2df8e88cf/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/091ace5877b03942e6b71fdf13fa4ac2df8e88cf/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=091ace5877b03942e6b71fdf13fa4ac2df8e88cf", "patch": "@@ -434,8 +434,9 @@ attr_rtx_1 (enum rtx_code code, va_list p)\n \t  XEXP (rt_val, 1) = arg1;\n \t}\n     }\n-  else if (GET_RTX_LENGTH (code) == 1\n-\t   && GET_RTX_FORMAT (code)[0] == 's')\n+  else if (code == SYMBOL_REF\n+\t   || (GET_RTX_LENGTH (code) == 1\n+\t       && GET_RTX_FORMAT (code)[0] == 's'))\n     {\n       char *arg0 = va_arg (p, char *);\n \n@@ -453,6 +454,11 @@ attr_rtx_1 (enum rtx_code code, va_list p)\n \t  rtl_obstack = hash_obstack;\n \t  rt_val = rtx_alloc (code);\n \t  XSTR (rt_val, 0) = arg0;\n+\t  if (code == SYMBOL_REF)\n+\t    {\n+\t      X0EXP (rt_val, 1) = NULL_RTX;\n+\t      X0EXP (rt_val, 2) = NULL_RTX;\n+\t    }\n \t}\n     }\n   else if (GET_RTX_LENGTH (code) == 2\n@@ -611,6 +617,7 @@ attr_string (const char *str, int len)\n   memcpy (new_str, str, len);\n   new_str[len] = '\\0';\n   attr_hash_add_string (hashcode, new_str);\n+  copy_md_ptr_loc (new_str, str);\n \n   return new_str;\t\t\t/* Return the new string.  */\n }"}]}