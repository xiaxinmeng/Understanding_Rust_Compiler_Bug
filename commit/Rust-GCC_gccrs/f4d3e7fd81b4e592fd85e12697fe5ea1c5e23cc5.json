{"sha": "f4d3e7fd81b4e592fd85e12697fe5ea1c5e23cc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRkM2U3ZmQ4MWI0ZTU5MmZkODVlMTI2OTdmZTVlYTFjNWUyM2NjNQ==", "commit": {"author": {"name": "Bob Wilson", "email": "bob.wilson@acm.org", "date": "2008-03-25T17:56:31Z"}, "committer": {"name": "Bob Wilson", "email": "bwilson@gcc.gnu.org", "date": "2008-03-25T17:56:31Z"}, "message": "xtensa.c (xtensa_va_start): Use build_int_cst instead of size_int for integer types.\n\n\t* config/xtensa/xtensa.c (xtensa_va_start): Use build_int_cst\n\tinstead of size_int for integer types.\n\t(xtensa_gimplify_va_arg_expr): Likewise.  Convert index to sizetype\n\tto match type of MINUS_EXPR.\n\nFrom-SVN: r133525", "tree": {"sha": "0bf27ee39b54fb0a9aa1eab1aabbc9d167c2013e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bf27ee39b54fb0a9aa1eab1aabbc9d167c2013e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4d3e7fd81b4e592fd85e12697fe5ea1c5e23cc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4d3e7fd81b4e592fd85e12697fe5ea1c5e23cc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4d3e7fd81b4e592fd85e12697fe5ea1c5e23cc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4d3e7fd81b4e592fd85e12697fe5ea1c5e23cc5/comments", "author": null, "committer": null, "parents": [{"sha": "55d059d348a9cffa6eafb135b290b86816ec7abc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55d059d348a9cffa6eafb135b290b86816ec7abc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55d059d348a9cffa6eafb135b290b86816ec7abc"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "39b6058029b0792362cf4d6d6d3f94c0db3d04e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d3e7fd81b4e592fd85e12697fe5ea1c5e23cc5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d3e7fd81b4e592fd85e12697fe5ea1c5e23cc5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4d3e7fd81b4e592fd85e12697fe5ea1c5e23cc5", "patch": "@@ -1,3 +1,10 @@\n+2008-03-25  Bob Wilson  <bob.wilson@acm.org>\n+\t\n+\t* config/xtensa/xtensa.c (xtensa_va_start): Use build_int_cst\n+\tinstead of size_int for integer types.\n+\t(xtensa_gimplify_va_arg_expr): Likewise.  Convert index to sizetype\n+\tto match type of MINUS_EXPR.\n+\t\n 2008-03-25  Tom Tromey  <tromey@redhat.com>\n \n \t* configure: Rebuilt."}, {"sha": "7340ba766b13219d892e279d1af9d45383336481", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d3e7fd81b4e592fd85e12697fe5ea1c5e23cc5/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d3e7fd81b4e592fd85e12697fe5ea1c5e23cc5/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=f4d3e7fd81b4e592fd85e12697fe5ea1c5e23cc5", "patch": "@@ -2542,7 +2542,7 @@ xtensa_va_start (tree valist, rtx nextarg ATTRIBUTE_UNUSED)\n   if (arg_words >= MAX_ARGS_IN_REGISTERS)\n     arg_words += 2;\n   t = build2 (GIMPLE_MODIFY_STMT, integer_type_node, ndx,\n-\t      size_int (arg_words * UNITS_PER_WORD));\n+\t      build_int_cst (integer_type_node, arg_words * UNITS_PER_WORD));\n   TREE_SIDE_EFFECTS (t) = 1;\n   expand_expr (t, const0_rtx, VOIDmode, EXPAND_NORMAL);\n }\n@@ -2607,8 +2607,10 @@ xtensa_gimplify_va_arg_expr (tree valist, tree type, tree *pre_p,\n     {\n       int align = MIN (TYPE_ALIGN (type), STACK_BOUNDARY) / BITS_PER_UNIT;\n \n-      t = build2 (PLUS_EXPR, integer_type_node, orig_ndx, size_int (align - 1));\n-      t = build2 (BIT_AND_EXPR, integer_type_node, t, size_int (-align));\n+      t = build2 (PLUS_EXPR, integer_type_node, orig_ndx,\n+\t\t  build_int_cst (integer_type_node, align - 1));\n+      t = build2 (BIT_AND_EXPR, integer_type_node, t,\n+\t\t  build_int_cst (integer_type_node, -align));\n       t = build2 (GIMPLE_MODIFY_STMT, integer_type_node, orig_ndx, t);\n       gimplify_and_add (t, pre_p);\n     }\n@@ -2639,7 +2641,8 @@ xtensa_gimplify_va_arg_expr (tree valist, tree type, tree *pre_p,\n       lab_over = create_artificial_label ();\n \n       t = build2 (GT_EXPR, boolean_type_node, ndx,\n-\t\t  size_int (MAX_ARGS_IN_REGISTERS * UNITS_PER_WORD));\n+\t\t  build_int_cst (integer_type_node,\n+\t\t\t\t MAX_ARGS_IN_REGISTERS * UNITS_PER_WORD));\n       t = build3 (COND_EXPR, void_type_node, t,\n \t\t  build1 (GOTO_EXPR, void_type_node, lab_false),\n \t\t  NULL_TREE);\n@@ -2669,7 +2672,8 @@ xtensa_gimplify_va_arg_expr (tree valist, tree type, tree *pre_p,\n   lab_false2 = create_artificial_label ();\n \n   t = build2 (GT_EXPR, boolean_type_node, orig_ndx,\n-\t      size_int (MAX_ARGS_IN_REGISTERS * UNITS_PER_WORD));\n+\t      build_int_cst (integer_type_node,\n+\t\t\t     MAX_ARGS_IN_REGISTERS * UNITS_PER_WORD));\n   t = build3 (COND_EXPR, void_type_node, t,\n \t      build1 (GOTO_EXPR, void_type_node, lab_false2),\n \t      NULL_TREE);\n@@ -2714,7 +2718,8 @@ xtensa_gimplify_va_arg_expr (tree valist, tree type, tree *pre_p,\n   else\n     size = va_size;\n \n-  t = build2 (MINUS_EXPR, sizetype, ndx, size);\n+  t = fold_convert (sizetype, ndx);\n+  t = build2 (MINUS_EXPR, sizetype, t, size);\n   addr = build2 (POINTER_PLUS_EXPR, ptr_type_node, array, t);\n \n   addr = fold_convert (build_pointer_type (type), addr);"}]}