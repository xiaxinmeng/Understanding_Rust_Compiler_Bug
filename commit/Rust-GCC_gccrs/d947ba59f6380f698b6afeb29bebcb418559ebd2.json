{"sha": "d947ba59f6380f698b6afeb29bebcb418559ebd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk0N2JhNTlmNjM4MGY2OThiNmFmZWIyOWJlYmNiNDE4NTU5ZWJkMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-15T21:56:27Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-15T21:56:27Z"}, "message": "(expand_elseif): New function.\n\nFrom-SVN: r7931", "tree": {"sha": "4931a62caf71a41300ec6883bf23e5158ec3634d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4931a62caf71a41300ec6883bf23e5158ec3634d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d947ba59f6380f698b6afeb29bebcb418559ebd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d947ba59f6380f698b6afeb29bebcb418559ebd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d947ba59f6380f698b6afeb29bebcb418559ebd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d947ba59f6380f698b6afeb29bebcb418559ebd2/comments", "author": null, "committer": null, "parents": [{"sha": "7695ec5fd4e6a7252beb0aef4b97a0d10ee448bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7695ec5fd4e6a7252beb0aef4b97a0d10ee448bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7695ec5fd4e6a7252beb0aef4b97a0d10ee448bf"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "e65b9fc7bc93220c5aac52137862fd1812772a16", "filename": "gcc/stmt.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d947ba59f6380f698b6afeb29bebcb418559ebd2/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d947ba59f6380f698b6afeb29bebcb418559ebd2/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=d947ba59f6380f698b6afeb29bebcb418559ebd2", "patch": "@@ -1932,6 +1932,17 @@ expand_start_else ()\n   cond_stack->data.cond.next_label = 0;  /* No more _else or _elseif calls. */\n }\n \n+/* After calling expand_start_else, turn this \"else\" into an \"else if\"\n+   by providing another condition.  */\n+\n+void\n+expand_elseif (cond)\n+     tree cond;\n+{\n+  cond_stack->data.cond.next_label = gen_label_rtx ();\n+  do_jump (cond, cond_stack->data.cond.next_label, NULL_RTX);\n+}\n+\n /* Generate RTL for the end of an if-then.\n    Pop the record for it off of cond_stack.  */\n "}]}