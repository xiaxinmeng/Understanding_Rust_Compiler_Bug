{"sha": "628cacef2409f1aae7d75090cbd851f5dd14a80f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI4Y2FjZWYyNDA5ZjFhYWU3ZDc1MDkwY2JkODUxZjVkZDE0YTgwZg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2006-05-13T21:21:28Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2006-05-13T21:21:28Z"}, "message": "sources.am, [...]: Rebuilt.\n\n\t* sources.am, Makefile.in: Rebuilt.\n\t* Makefile.am (nat_source_files): Mention natVMChannels.cc, not\n\tnatChannels.cc.\n\t* java/nio/channels/natVMChannels.cc: Renamed from\n\tnatChannels.cc.\n\t* java/nio/channels/Channels.java: Removed.\n\t* java/nio/channels/natChannels.cc: Removed.\n\t* java/nio/channels/VMChannels.java: New file.\n\nFrom-SVN: r113745", "tree": {"sha": "6f559700cadde5369aa667540dcb9ca0739611c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f559700cadde5369aa667540dcb9ca0739611c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/628cacef2409f1aae7d75090cbd851f5dd14a80f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/628cacef2409f1aae7d75090cbd851f5dd14a80f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/628cacef2409f1aae7d75090cbd851f5dd14a80f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/628cacef2409f1aae7d75090cbd851f5dd14a80f/comments", "author": null, "committer": null, "parents": [{"sha": "becd11a1d8fd608dd1394e6089e84db042bda719", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/becd11a1d8fd608dd1394e6089e84db042bda719", "html_url": "https://github.com/Rust-GCC/gccrs/commit/becd11a1d8fd608dd1394e6089e84db042bda719"}], "stats": {"total": 139, "additions": 41, "deletions": 98}, "files": [{"sha": "fc7eddc21a721cd906fb366fa1a0c309921fd15c", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/628cacef2409f1aae7d75090cbd851f5dd14a80f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/628cacef2409f1aae7d75090cbd851f5dd14a80f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=628cacef2409f1aae7d75090cbd851f5dd14a80f", "patch": "@@ -1,3 +1,14 @@\n+2006-05-13  Tom Tromey  <tromey@redhat.com>\n+\n+\t* sources.am, Makefile.in: Rebuilt.\n+\t* Makefile.am (nat_source_files): Mention natVMChannels.cc, not\n+\tnatChannels.cc.\n+\t* java/nio/channels/natVMChannels.cc: Renamed from\n+\tnatChannels.cc.\n+\t* java/nio/channels/Channels.java: Removed.\n+\t* java/nio/channels/natChannels.cc: Removed.\n+\t* java/nio/channels/VMChannels.java: New file.\n+\n 2006-05-13  Tom Tromey  <tromey@redhat.com>\n \n \t* sources.am, Makefile.in: Rebuilt."}, {"sha": "d2faf9e7fd651308127a7bbc7ad718dc3814a059", "filename": "libjava/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/628cacef2409f1aae7d75090cbd851f5dd14a80f/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/628cacef2409f1aae7d75090cbd851f5dd14a80f/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=628cacef2409f1aae7d75090cbd851f5dd14a80f", "patch": "@@ -821,7 +821,7 @@ java/lang/reflect/natField.cc \\\n java/lang/reflect/natMethod.cc \\\n java/net/natVMNetworkInterface.cc \\\n java/net/natInetAddress.cc \\\n-java/nio/channels/natChannels.cc \\\n+java/nio/channels/natVMChannels.cc \\\n java/nio/natDirectByteBufferImpl.cc \\\n java/text/natCollator.cc \\\n java/util/natResourceBundle.cc \\"}, {"sha": "077b4f36eaec79d302a09d5fd9fb6c657f25c7cf", "filename": "libjava/Makefile.in", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/628cacef2409f1aae7d75090cbd851f5dd14a80f/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/628cacef2409f1aae7d75090cbd851f5dd14a80f/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=628cacef2409f1aae7d75090cbd851f5dd14a80f", "patch": "@@ -277,7 +277,7 @@ am__libgcj_la_SOURCES_DIST = prims.cc jni.cc exception.cc \\\n \tjava/lang/reflect/natConstructor.cc \\\n \tjava/lang/reflect/natField.cc java/lang/reflect/natMethod.cc \\\n \tjava/net/natVMNetworkInterface.cc java/net/natInetAddress.cc \\\n-\tjava/nio/channels/natChannels.cc \\\n+\tjava/nio/channels/natVMChannels.cc \\\n \tjava/nio/natDirectByteBufferImpl.cc java/text/natCollator.cc \\\n \tjava/util/natResourceBundle.cc java/util/natVMTimeZone.cc \\\n \tjava/util/logging/natLogger.cc java/util/zip/natDeflater.cc \\\n@@ -318,7 +318,7 @@ am__objects_2 = gnu/classpath/natSystemProperties.lo \\\n \tjava/lang/reflect/natConstructor.lo \\\n \tjava/lang/reflect/natField.lo java/lang/reflect/natMethod.lo \\\n \tjava/net/natVMNetworkInterface.lo java/net/natInetAddress.lo \\\n-\tjava/nio/channels/natChannels.lo \\\n+\tjava/nio/channels/natVMChannels.lo \\\n \tjava/nio/natDirectByteBufferImpl.lo java/text/natCollator.lo \\\n \tjava/util/natResourceBundle.lo java/util/natVMTimeZone.lo \\\n \tjava/util/logging/natLogger.lo java/util/zip/natDeflater.lo \\\n@@ -3793,7 +3793,7 @@ classpath/java/nio/channels/AsynchronousCloseException.java \\\n classpath/java/nio/channels/ByteChannel.java \\\n classpath/java/nio/channels/CancelledKeyException.java \\\n classpath/java/nio/channels/Channel.java \\\n-java/nio/channels/Channels.java \\\n+classpath/java/nio/channels/Channels.java \\\n classpath/java/nio/channels/ClosedByInterruptException.java \\\n classpath/java/nio/channels/ClosedChannelException.java \\\n classpath/java/nio/channels/ClosedSelectorException.java \\\n@@ -3822,6 +3822,7 @@ classpath/java/nio/channels/ServerSocketChannel.java \\\n classpath/java/nio/channels/SocketChannel.java \\\n classpath/java/nio/channels/UnresolvedAddressException.java \\\n classpath/java/nio/channels/UnsupportedAddressTypeException.java \\\n+java/nio/channels/VMChannels.java \\\n classpath/java/nio/channels/WritableByteChannel.java\n \n java_nio_channels_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(java_nio_channels_source_files)))\n@@ -6789,7 +6790,7 @@ java/lang/reflect/natField.cc \\\n java/lang/reflect/natMethod.cc \\\n java/net/natVMNetworkInterface.cc \\\n java/net/natInetAddress.cc \\\n-java/nio/channels/natChannels.cc \\\n+java/nio/channels/natVMChannels.cc \\\n java/nio/natDirectByteBufferImpl.cc \\\n java/text/natCollator.cc \\\n java/util/natResourceBundle.cc \\\n@@ -7234,7 +7235,7 @@ java/nio/channels/$(am__dirstamp):\n java/nio/channels/$(DEPDIR)/$(am__dirstamp):\n \t@$(mkdir_p) java/nio/channels/$(DEPDIR)\n \t@: > java/nio/channels/$(DEPDIR)/$(am__dirstamp)\n-java/nio/channels/natChannels.lo: java/nio/channels/$(am__dirstamp) \\\n+java/nio/channels/natVMChannels.lo: java/nio/channels/$(am__dirstamp) \\\n \tjava/nio/channels/$(DEPDIR)/$(am__dirstamp)\n java/nio/$(am__dirstamp):\n \t@$(mkdir_p) java/nio\n@@ -7541,8 +7542,8 @@ mostlyclean-compile:\n \t-rm -f java/net/natInetAddress.lo\n \t-rm -f java/net/natVMNetworkInterface.$(OBJEXT)\n \t-rm -f java/net/natVMNetworkInterface.lo\n-\t-rm -f java/nio/channels/natChannels.$(OBJEXT)\n-\t-rm -f java/nio/channels/natChannels.lo\n+\t-rm -f java/nio/channels/natVMChannels.$(OBJEXT)\n+\t-rm -f java/nio/channels/natVMChannels.lo\n \t-rm -f java/nio/natDirectByteBufferImpl.$(OBJEXT)\n \t-rm -f java/nio/natDirectByteBufferImpl.lo\n \t-rm -f java/text/natCollator.$(OBJEXT)\n@@ -7658,7 +7659,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@java/net/$(DEPDIR)/natInetAddress.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/net/$(DEPDIR)/natVMNetworkInterface.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/nio/$(DEPDIR)/natDirectByteBufferImpl.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@java/nio/channels/$(DEPDIR)/natChannels.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@java/nio/channels/$(DEPDIR)/natVMChannels.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/text/$(DEPDIR)/natCollator.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/util/$(DEPDIR)/natResourceBundle.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/util/$(DEPDIR)/natVMTimeZone.Plo@am__quote@"}, {"sha": "4f43a42ad7a023e04b9269b4f779c59d516075cd", "filename": "libjava/java/nio/channels/VMChannels.java", "status": "renamed", "additions": 12, "deletions": 83, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/628cacef2409f1aae7d75090cbd851f5dd14a80f/libjava%2Fjava%2Fnio%2Fchannels%2FVMChannels.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/628cacef2409f1aae7d75090cbd851f5dd14a80f/libjava%2Fjava%2Fnio%2Fchannels%2FVMChannels.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2Fchannels%2FVMChannels.java?ref=628cacef2409f1aae7d75090cbd851f5dd14a80f", "patch": "@@ -1,5 +1,5 @@\n-/* Channels.java --\n-   Copyright (C) 2002, 2003, 2004, 2005  Free Software Foundation, Inc.\n+/* VMChannels.java --\n+   Copyright (C) 2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -40,39 +40,33 @@\n \n import gnu.java.nio.ChannelInputStream;\n import gnu.java.nio.ChannelOutputStream;\n-import gnu.java.nio.ChannelReader;\n-import gnu.java.nio.InputStreamChannel;\n-import gnu.java.nio.OutputStreamChannel;\n import gnu.java.nio.channels.FileChannelImpl;\n \n import java.io.FileInputStream;\n import java.io.FileOutputStream;\n import java.io.InputStream;\n import java.io.OutputStream;\n-import java.io.Reader;\n-import java.io.Writer;\n-import java.nio.charset.Charset;\n-import java.nio.charset.CharsetDecoder;\n-import java.nio.charset.CharsetEncoder;\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.InvocationTargetException;\n \n-\n-/**\n- * @since 1.4\n- */\n-public final class Channels\n+final class VMChannels\n {\n   /**\n    * This class isn't intended to be instantiated.\n    */\n-  private Channels()\n+  private VMChannels()\n   {\n     // Do nothing here.\n   }\n \n+  static native FileInputStream newInputStream(FileChannelImpl ch);\n+\n+  static native FileOutputStream newOutputStream(FileChannelImpl ch);\n+\n   /**\n    * Constructs a stream that reads bytes from the given channel.\n    */\n-  public static InputStream newInputStream(ReadableByteChannel ch)\n+  static InputStream newInputStream(ReadableByteChannel ch)\n   {\n     if (ch instanceof FileChannelImpl)\n       return newInputStream((FileChannelImpl) ch);\n@@ -82,75 +76,10 @@ public static InputStream newInputStream(ReadableByteChannel ch)\n   /**\n    * Constructs a stream that writes bytes to the given channel.\n    */\n-  public static OutputStream newOutputStream(WritableByteChannel ch)\n+  static OutputStream newOutputStream(WritableByteChannel ch)\n   {\n     if (ch instanceof FileChannelImpl)\n       return newOutputStream((FileChannelImpl) ch);\n     return new ChannelOutputStream(ch);\n   }\n-\n-  static native FileInputStream newInputStream(FileChannelImpl ch);\n-\n-  static native FileOutputStream newOutputStream(FileChannelImpl ch);\n-\n-  /**\n-   * Constructs a channel that reads bytes from the given stream.\n-   */\n-  public static ReadableByteChannel newChannel(InputStream in)\n-  {\n-    return new InputStreamChannel(in);\n-  }\n-\n-  /**\n-   * Constructs a channel that writes bytes to the given stream.\n-   */\n-  public static WritableByteChannel newChannel(OutputStream out)\n-  {\n-    return new OutputStreamChannel(out);\n-  }\n-\n-  /**\n-   * Constructs a reader that decodes bytes from the given channel using the\n-   * given decoder.\n-   */\n-  public static Reader newReader(ReadableByteChannel ch, CharsetDecoder dec,\n-                                 int minBufferCap)\n-  {\n-    return new ChannelReader(ch, dec, minBufferCap);\n-  }\n-\n-  /**\n-   * Constructs a reader that decodes bytes from the given channel according to\n-   * the named charset.\n-   *\n-   * @exception UnsupportedCharsetException If no support for the named charset\n-   * is available in this instance of the Java virtual machine.\n-   */\n-  public static Reader newReader(ReadableByteChannel ch, String csName)\n-  {\n-    return newReader(ch, Charset.forName(csName).newDecoder(), -1);\n-  }\n-\n-  /**\n-   * Constructs a writer that encodes characters using the given encoder and\n-   * writes the resulting bytes to the given channel.\n-   */\n-  public static Writer newWriter(WritableByteChannel ch, CharsetEncoder enc,\n-                                 int minBufferCap)\n-  {\n-    // FIXME: implement java.nio.channels.Channel.newWriter(WritableByteChannel, CharsetEncoder, int) \n-    throw new Error(\"not implemented\");\n-  }\n-\n-  /**\n-   * Constructs a writer that encodes characters according to the named charset\n-   * and writes the resulting bytes to the given channel.\n-   *\n-   * @exception UnsupportedCharsetException If no support for the named charset\n-   * is available in this instance of the Java virtual machine.\n-   */\n-  public static Writer newWriter(WritableByteChannel ch, String csName)\n-  {\n-    return newWriter(ch, Charset.forName(csName).newEncoder(), -1);\n-  }\n }", "previous_filename": "libjava/java/nio/channels/Channels.java"}, {"sha": "d40a5165307c67f2cfb6e30d1dfd010bab6d16eb", "filename": "libjava/java/nio/channels/natVMChannels.cc", "status": "renamed", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/628cacef2409f1aae7d75090cbd851f5dd14a80f/libjava%2Fjava%2Fnio%2Fchannels%2FnatVMChannels.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/628cacef2409f1aae7d75090cbd851f5dd14a80f/libjava%2Fjava%2Fnio%2Fchannels%2FnatVMChannels.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2Fchannels%2FnatVMChannels.cc?ref=628cacef2409f1aae7d75090cbd851f5dd14a80f", "patch": "@@ -1,6 +1,6 @@\n-// natChannels.cc - Native part of Channels class.\n+// natVMChannels.cc - Native part of VMChannels class.\n \n-/* Copyright (C) 2004  Free Software Foundation\n+/* Copyright (C) 2004, 2006  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -11,25 +11,26 @@ details.  */\n #include <config.h>\n #include <gcj/cni.h>\n \n+#include <java/nio/channels/VMChannels.h>\n #include <java/nio/channels/Channels.h>\n #include <java/io/FileInputStream.h>\n #include <java/io/FileOutputStream.h>\n #include <gnu/java/nio/channels/FileChannelImpl.h>\n \n-using java::nio::channels::Channels;\n+using java::nio::channels::VMChannels;\n using java::io::FileInputStream;\n using java::io::FileOutputStream;\n using gnu::java::nio::channels::FileChannelImpl;\n \n FileInputStream*\n-Channels::newInputStream(FileChannelImpl* ch)\n+VMChannels::newInputStream(FileChannelImpl* ch)\n {\n   // Needs to be native to bypass Java access protection.\n   return new FileInputStream (ch);\n }\n \n FileOutputStream*\n-Channels::newOutputStream(FileChannelImpl* ch)\n+VMChannels::newOutputStream(FileChannelImpl* ch)\n {\n   // Needs to be native to bypass Java access protection.\n   return new FileOutputStream (ch);", "previous_filename": "libjava/java/nio/channels/natChannels.cc"}, {"sha": "eacb5cc39c6f9fc1ba454f2deb9684dc98d8d47f", "filename": "libjava/sources.am", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/628cacef2409f1aae7d75090cbd851f5dd14a80f/libjava%2Fsources.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/628cacef2409f1aae7d75090cbd851f5dd14a80f/libjava%2Fsources.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fsources.am?ref=628cacef2409f1aae7d75090cbd851f5dd14a80f", "patch": "@@ -4491,7 +4491,7 @@ classpath/java/nio/channels/AsynchronousCloseException.java \\\n classpath/java/nio/channels/ByteChannel.java \\\n classpath/java/nio/channels/CancelledKeyException.java \\\n classpath/java/nio/channels/Channel.java \\\n-java/nio/channels/Channels.java \\\n+classpath/java/nio/channels/Channels.java \\\n classpath/java/nio/channels/ClosedByInterruptException.java \\\n classpath/java/nio/channels/ClosedChannelException.java \\\n classpath/java/nio/channels/ClosedSelectorException.java \\\n@@ -4520,6 +4520,7 @@ classpath/java/nio/channels/ServerSocketChannel.java \\\n classpath/java/nio/channels/SocketChannel.java \\\n classpath/java/nio/channels/UnresolvedAddressException.java \\\n classpath/java/nio/channels/UnsupportedAddressTypeException.java \\\n+java/nio/channels/VMChannels.java \\\n classpath/java/nio/channels/WritableByteChannel.java\n \n java_nio_channels_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(java_nio_channels_source_files)))"}]}