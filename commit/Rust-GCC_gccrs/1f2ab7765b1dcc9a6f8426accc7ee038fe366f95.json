{"sha": "1f2ab7765b1dcc9a6f8426accc7ee038fe366f95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWYyYWI3NzY1YjFkY2M5YTZmODQyNmFjY2M3ZWUwMzhmZTM2NmY5NQ==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2016-05-18T12:57:53Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2016-05-18T12:57:53Z"}, "message": "vget_lane.c: Add fp16 tests.\n\n* gcc.target/aarch64/advsimd-intrinsics/vget_lane.c: Add fp16 tests.\n\nFrom-SVN: r236388", "tree": {"sha": "4d0e34bea746dd00701d43a76d7a9ca0321fcfd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d0e34bea746dd00701d43a76d7a9ca0321fcfd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f2ab7765b1dcc9a6f8426accc7ee038fe366f95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f2ab7765b1dcc9a6f8426accc7ee038fe366f95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f2ab7765b1dcc9a6f8426accc7ee038fe366f95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f2ab7765b1dcc9a6f8426accc7ee038fe366f95/comments", "author": null, "committer": null, "parents": [{"sha": "764894932388bcd3d7e805634472d55840875c4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/764894932388bcd3d7e805634472d55840875c4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/764894932388bcd3d7e805634472d55840875c4c"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "b9a6a8807fa1f5b36fb018ce44b5cd076a130341", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f2ab7765b1dcc9a6f8426accc7ee038fe366f95/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f2ab7765b1dcc9a6f8426accc7ee038fe366f95/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1f2ab7765b1dcc9a6f8426accc7ee038fe366f95", "patch": "@@ -1,3 +1,7 @@\n+2016-05-18  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vget_lane.c: Add fp16 tests.\n+\n 2016-05-18  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vreinterpret.c: Add"}, {"sha": "fe41c5fbe1d1624ebd9ce26f83a2a7d549fccf9e", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vget_lane.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f2ab7765b1dcc9a6f8426accc7ee038fe366f95/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvget_lane.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f2ab7765b1dcc9a6f8426accc7ee038fe366f95/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvget_lane.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvget_lane.c?ref=1f2ab7765b1dcc9a6f8426accc7ee038fe366f95", "patch": "@@ -13,6 +13,7 @@ uint32_t   expected_u32  = 0xfffffff1;\n uint64_t   expected_u64  = 0xfffffffffffffff0;\n poly8_t    expected_p8   = 0xf6;\n poly16_t   expected_p16  = 0xfff2;\n+hfloat16_t expected_f16  = 0xcb80;\n hfloat32_t expected_f32  = 0xc1700000;\n \n int8_t     expectedq_s8  = 0xff;\n@@ -25,6 +26,7 @@ uint32_t   expectedq_u32 = 0xfffffff2;\n uint64_t   expectedq_u64 = 0xfffffffffffffff1;\n poly8_t    expectedq_p8  = 0xfe;\n poly16_t   expectedq_p16 = 0xfff6;\n+hfloat16_t expectedq_f16 = 0xca80;\n hfloat32_t expectedq_f32 = 0xc1500000;\n \n int error_found = 0;\n@@ -52,6 +54,10 @@ void exec_vget_lane (void)\n     uint32_t var_int32;\n     float32_t var_float32;\n   } var_int32_float32;\n+  union {\n+    uint16_t var_int16;\n+    float16_t var_float16;\n+  } var_int16_float16;\n \n #define TEST_VGET_LANE_FP(Q, T1, T2, W, N, L)\t\t\t\t   \\\n   VAR(var, T1, W) = vget##Q##_lane_##T2##W(VECT_VAR(vector, T1, W, N), L); \\\n@@ -81,10 +87,17 @@ void exec_vget_lane (void)\n   VAR_DECL(var, uint, 64);\n   VAR_DECL(var, poly, 8);\n   VAR_DECL(var, poly, 16);\n+#if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n+  VAR_DECL(var, float, 16);\n+#endif\n   VAR_DECL(var, float, 32);\n \n   /* Initialize input values.  */\n   TEST_MACRO_ALL_VARIANTS_2_5(VLOAD, vector, buffer);\n+#if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n+  VLOAD(vector, buffer, , float, f, 16, 4);\n+  VLOAD(vector, buffer, q, float, f, 16, 8);\n+#endif\n   VLOAD(vector, buffer, , float, f, 32, 2);\n   VLOAD(vector, buffer, q, float, f, 32, 4);\n \n@@ -99,6 +112,9 @@ void exec_vget_lane (void)\n   TEST_VGET_LANE(, uint, u, 64, 1, 0);\n   TEST_VGET_LANE(, poly, p, 8, 8, 6);\n   TEST_VGET_LANE(, poly, p, 16, 4, 2);\n+#if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n+  TEST_VGET_LANE_FP(, float, f, 16, 4, 1);\n+#endif\n   TEST_VGET_LANE_FP(, float, f, 32, 2, 1);\n \n   TEST_VGET_LANE(q, int, s, 8, 16, 15);\n@@ -111,6 +127,9 @@ void exec_vget_lane (void)\n   TEST_VGET_LANE(q, uint, u, 64, 2, 1);\n   TEST_VGET_LANE(q, poly, p, 8, 16, 14);\n   TEST_VGET_LANE(q, poly, p, 16, 8, 6);\n+#if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n+  TEST_VGET_LANE_FP(q, float, f, 16, 8, 3);\n+#endif\n   TEST_VGET_LANE_FP(q, float, f, 32, 4, 3);\n }\n "}]}