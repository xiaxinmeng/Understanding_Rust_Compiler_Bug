{"sha": "801a91f9c23b08fd6eff0a429472d669b46db2dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAxYTkxZjljMjNiMDhmZDZlZmYwYTQyOTQ3MmQ2NjliNDZkYjJkYw==", "commit": {"author": {"name": "David Ayers", "email": "d.ayers@inode.at", "date": "2006-01-24T23:37:24Z"}, "committer": {"name": "David Ayers", "email": "ayers@gcc.gnu.org", "date": "2006-01-24T23:37:24Z"}, "message": "re PR libobjc/9751 (malloc of strlen, not strlen+1)\n\n2006-01-24  David Ayers  <d.ayers@inode.at>\n\n\tPR libobjc/9751\n\t* gc.c (class_ivar_set_gcinvisible): Replace strncpy with memcpy\n\tand insure the new strings are '\\0' termintated.\n\nFrom-SVN: r110187", "tree": {"sha": "de0c99688b8eff2a3596b21c0a9f5f90a1728320", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de0c99688b8eff2a3596b21c0a9f5f90a1728320"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/801a91f9c23b08fd6eff0a429472d669b46db2dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/801a91f9c23b08fd6eff0a429472d669b46db2dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/801a91f9c23b08fd6eff0a429472d669b46db2dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/801a91f9c23b08fd6eff0a429472d669b46db2dc/comments", "author": null, "committer": null, "parents": [{"sha": "e7968bd8506be0500fd360ce4384b9e4c93da25b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7968bd8506be0500fd360ce4384b9e4c93da25b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7968bd8506be0500fd360ce4384b9e4c93da25b"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "910ae986922a9fa1c601717d3cb9300c4e52173d", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/801a91f9c23b08fd6eff0a429472d669b46db2dc/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/801a91f9c23b08fd6eff0a429472d669b46db2dc/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=801a91f9c23b08fd6eff0a429472d669b46db2dc", "patch": "@@ -1,3 +1,9 @@\n+2006-01-24  David Ayers  <d.ayers@inode.at>\n+\n+\tPR libobjc/9751\n+\t* gc.c (class_ivar_set_gcinvisible): Replace strncpy with memcpy\n+\tand insure the new strings are '\\0' termintated.\n+\n 2006-01-24  David Ayers  <d.ayers@inode.at>\n \n \tPR libobjc/13946"}, {"sha": "51019993f3d145cad51d253f047b335c9202f264", "filename": "libobjc/gc.c", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/801a91f9c23b08fd6eff0a429472d669b46db2dc/libobjc%2Fgc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/801a91f9c23b08fd6eff0a429472d669b46db2dc/libobjc%2Fgc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fgc.c?ref=801a91f9c23b08fd6eff0a429472d669b46db2dc", "patch": "@@ -397,30 +397,34 @@ class_ivar_set_gcinvisible (Class class, const char *ivarname,\n       if (*type == _C_GCINVISIBLE)\n \t{\n \t  char *new_type;\n+\t  size_t len;\n \n \t  if (gc_invisible || ! __objc_ivar_pointer (type))\n \t    return;\t/* The type of the variable already matches the\n \t\t\t   requested gc_invisible type */\n \n-\t  /* The variable is gc_invisible and we have to reverse it */\n-\t  new_type = objc_atomic_malloc (strlen (ivar->ivar_type));\n-\t  strncpy (new_type, ivar->ivar_type,\n-\t\t   (size_t)(type - ivar->ivar_type));\n+\t  /* The variable is gc_invisible so we make it gc visible.  */\n+\t  new_type = objc_atomic_malloc (strlen(ivar->ivar_type));\n+\t  len = (type - ivar->ivar_type);\n+\t  memcpy (new_type, ivar->ivar_type, len);\n+\t  new_type[len] = 0;\n \t  strcat (new_type, type + 1);\n \t  ivar->ivar_type = new_type;\n \t}\n       else\n \t{\n \t  char *new_type;\n+\t  size_t len;\n \n \t  if (! gc_invisible || ! __objc_ivar_pointer (type))\n \t    return;\t/* The type of the variable already matches the\n \t\t\t   requested gc_invisible type */\n \n-\t  /* The variable is gc visible and we have to make it gc_invisible */\n-\t  new_type = objc_malloc (strlen (ivar->ivar_type) + 2);\n-\t  strncpy (new_type, ivar->ivar_type,\n-\t\t   (size_t)(type - ivar->ivar_type));\n+\t  /* The variable is gc visible so we make it gc_invisible.  */\n+\t  new_type = objc_malloc (strlen(ivar->ivar_type) + 2);\n+\t  len = (type - ivar->ivar_type);\n+\t  memcpy (new_type, ivar->ivar_type, len);\n+\t  new_type[len] = 0;\n \t  strcat (new_type, \"!\");\n \t  strcat (new_type, type);\n \t  ivar->ivar_type = new_type;"}]}