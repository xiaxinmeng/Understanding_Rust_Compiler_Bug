{"sha": "b01fff4882f0c5d35a52e7001832e31c708fffd9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjAxZmZmNDg4MmYwYzVkMzVhNTJlNzAwMTgzMmUzMWM3MDhmZmZkOQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-12-09T08:37:17Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-12-09T08:37:17Z"}, "message": "re PR fortran/83316 (ICE: minval/maxval and characters)\n\n2017-12-09  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/83316\n\t* arith.c (gfc_character2character): New function.\n\t* arith.h: Add prototype.\n\t* simplify.c (gfc_convert_constant): Handle character type.\n\n2017-12-09  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/83316\n\t* gfortran.dg/minval_char_5.f90: New test.\n\nFrom-SVN: r255522", "tree": {"sha": "25ee205b4dca5402eabeed57e569d5310926452a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25ee205b4dca5402eabeed57e569d5310926452a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b01fff4882f0c5d35a52e7001832e31c708fffd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b01fff4882f0c5d35a52e7001832e31c708fffd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b01fff4882f0c5d35a52e7001832e31c708fffd9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b01fff4882f0c5d35a52e7001832e31c708fffd9/comments", "author": null, "committer": null, "parents": [{"sha": "3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "a2be75ab4b34718a437cd26b4b85b197515fc2fd", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b01fff4882f0c5d35a52e7001832e31c708fffd9/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b01fff4882f0c5d35a52e7001832e31c708fffd9/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=b01fff4882f0c5d35a52e7001832e31c708fffd9", "patch": "@@ -1,3 +1,10 @@\n+2017-12-09  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/83316\n+\t* arith.c (gfc_character2character): New function.\n+\t* arith.h: Add prototype.\n+\t* simplify.c (gfc_convert_constant): Handle character type.\n+\n 2017-12-07  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/81544"}, {"sha": "267306713f9d061c1df20900be2609e7bf4fe8a0", "filename": "gcc/fortran/arith.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b01fff4882f0c5d35a52e7001832e31c708fffd9/gcc%2Ffortran%2Farith.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b01fff4882f0c5d35a52e7001832e31c708fffd9/gcc%2Ffortran%2Farith.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farith.c?ref=b01fff4882f0c5d35a52e7001832e31c708fffd9", "patch": "@@ -2514,6 +2514,18 @@ gfc_int2log (gfc_expr *src, int kind)\n   return result;\n }\n \n+/* Convert character to character. We only use wide strings internally,\n+   so we only set the kind.  */\n+\n+gfc_expr *\n+gfc_character2character (gfc_expr *src, int kind)\n+{\n+  gfc_expr *result;\n+  result = gfc_copy_expr (src);\n+  result->ts.kind = kind;\n+\n+  return result;\n+}\n \n /* Helper function to set the representation in a Hollerith conversion.  \n    This assumes that the ts.type and ts.kind of the result have already"}, {"sha": "db042cc765177f15d60abd80cd11b919ee59f81f", "filename": "gcc/fortran/arith.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b01fff4882f0c5d35a52e7001832e31c708fffd9/gcc%2Ffortran%2Farith.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b01fff4882f0c5d35a52e7001832e31c708fffd9/gcc%2Ffortran%2Farith.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farith.h?ref=b01fff4882f0c5d35a52e7001832e31c708fffd9", "patch": "@@ -82,6 +82,7 @@ gfc_expr *gfc_hollerith2real (gfc_expr *, int);\n gfc_expr *gfc_hollerith2complex (gfc_expr *, int);\n gfc_expr *gfc_hollerith2character (gfc_expr *, int);\n gfc_expr *gfc_hollerith2logical (gfc_expr *, int);\n+gfc_expr *gfc_character2character (gfc_expr *, int);\n \n #endif /* GFC_ARITH_H  */\n "}, {"sha": "f11ea42c29252168cae72b3d4bc4dcf6f49cf316", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b01fff4882f0c5d35a52e7001832e31c708fffd9/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b01fff4882f0c5d35a52e7001832e31c708fffd9/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=b01fff4882f0c5d35a52e7001832e31c708fffd9", "patch": "@@ -7130,6 +7130,13 @@ gfc_convert_constant (gfc_expr *e, bt type, int kind)\n \t}\n       break;\n \n+    case BT_CHARACTER:\n+      if (type == BT_CHARACTER)\n+\tf = gfc_character2character;\n+      else\n+\tgoto oops;\n+      break;\n+\n     default:\n     oops:\n       gfc_internal_error (\"gfc_convert_constant(): Unexpected type\");"}, {"sha": "99842f0622aff7184db76c760893ff2c8b006f74", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b01fff4882f0c5d35a52e7001832e31c708fffd9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b01fff4882f0c5d35a52e7001832e31c708fffd9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b01fff4882f0c5d35a52e7001832e31c708fffd9", "patch": "@@ -1,3 +1,8 @@\n+2017-12-09  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/83316\n+\t* gfortran.dg/minval_char_5.f90: New test.\n+\n 2017-12-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/83317"}, {"sha": "5af344dc803d4a88f9f30cc472d57e7c75ed625c", "filename": "gcc/testsuite/gfortran.dg/minval_char_5.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b01fff4882f0c5d35a52e7001832e31c708fffd9/gcc%2Ftestsuite%2Fgfortran.dg%2Fminval_char_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b01fff4882f0c5d35a52e7001832e31c708fffd9/gcc%2Ftestsuite%2Fgfortran.dg%2Fminval_char_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fminval_char_5.f90?ref=b01fff4882f0c5d35a52e7001832e31c708fffd9", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do  run }\n+! PR fortran/83316 - this used to ICE\n+program tminmaxval\n+  implicit none\n+\n+  character(len=*), parameter :: b = \"a\"\n+  character(len=*), parameter :: e = \"c\"\n+  character(len=*), parameter :: s(3) = (/\"a\", \"b\", \"c\"/)\n+\n+  if (minval(s) /= b) then\n+    call abort\n+  end if\n+  \n+  if (maxval(s) /= e) then\n+    call abort\n+  end if\n+\n+end program tminmaxval"}]}