{"sha": "e4541b7a1e63c7c02a1fbea8cbbe397fd436ebfe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ1NDFiN2ExZTYzYzdjMDJhMWZiZWE4Y2JiZTM5N2ZkNDM2ZWJmZQ==", "commit": {"author": {"name": "Dale Johannesen", "email": "dalej@apple.com", "date": "2005-07-12T20:29:51Z"}, "committer": {"name": "Dale Johannesen", "email": "dalej@gcc.gnu.org", "date": "2005-07-12T20:29:51Z"}, "message": "expr.c (compress_float_constant): Add cost check.\n\n2005-07-12  Dale Johannesen  <dalej@apple.com>\n\n        * expr.c (compress_float_constant):  Add cost check.\n        * config/rs6000.c (rs6000_rtx_cost):  Adjust FLOAT_EXTEND cost.\n\nFrom-SVN: r101938", "tree": {"sha": "3fdf52c0ba14a4c842f30934ba59c2b3808ab4ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fdf52c0ba14a4c842f30934ba59c2b3808ab4ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4541b7a1e63c7c02a1fbea8cbbe397fd436ebfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4541b7a1e63c7c02a1fbea8cbbe397fd436ebfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4541b7a1e63c7c02a1fbea8cbbe397fd436ebfe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4541b7a1e63c7c02a1fbea8cbbe397fd436ebfe/comments", "author": null, "committer": null, "parents": [{"sha": "5133e4b923b5648cc7fc2f27bb03f02855dbbe94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5133e4b923b5648cc7fc2f27bb03f02855dbbe94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5133e4b923b5648cc7fc2f27bb03f02855dbbe94"}], "stats": {"total": 43, "additions": 40, "deletions": 3}, "files": [{"sha": "30269f96f6779017003640bb24f3ab1ac54d0771", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4541b7a1e63c7c02a1fbea8cbbe397fd436ebfe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4541b7a1e63c7c02a1fbea8cbbe397fd436ebfe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e4541b7a1e63c7c02a1fbea8cbbe397fd436ebfe", "patch": "@@ -1,3 +1,17 @@\n+2005-07-12  Dale Johannesen  <dalej@apple.com>\n+\n+\t* expr.c (compress_float_constant):  Add cost check.\n+\t* config/rs6000.c (rs6000_rtx_cost):  Adjust FLOAT_EXTEND cost.\n+\n+2005-07-12  Dale Johannesen  <dalej@apple.com>\n+\n+\t* gcc.target/i386/compress-float-sse.c:  New.\n+\t* gcc.target/i386/compress-float-sse-pic.c:  New.\n+\t* gcc.target/i386/compress-float-387.c:  New.\n+\t* gcc.target/i386/compress-float-387-pic.c:  New.\n+\t* gcc.dg/compress-float-ppc.c:  New.\n+\t* gcc.dg/compress-float-ppc-pic.c:  New.\n+\n 2005-07-12  Eric Christopher  <echristo@redhat.com>\n \n \t* gcc.c (struct infile): Update comment for language."}, {"sha": "4cf8dd876e3b1f3a462ad8e910640b6b9e6410de", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4541b7a1e63c7c02a1fbea8cbbe397fd436ebfe/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4541b7a1e63c7c02a1fbea8cbbe397fd436ebfe/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=e4541b7a1e63c7c02a1fbea8cbbe397fd436ebfe", "patch": "@@ -18043,11 +18043,17 @@ rs6000_rtx_costs (rtx x, int code, int outer_code, int *total)\n \t}\n       /* FALLTHRU */\n \n+    case FLOAT_EXTEND:\n+      if (mode == DFmode)\n+\t*total = 0;\n+      else\n+\t*total = rs6000_cost->fp;\n+      return false;\n+\n     case FLOAT:\n     case UNSIGNED_FLOAT:\n     case FIX:\n     case UNSIGNED_FIX:\n-    case FLOAT_EXTEND:\n     case FLOAT_TRUNCATE:\n       *total = rs6000_cost->fp;\n       return false;"}, {"sha": "182ab2382be172d9e23b31ced052045c395076fb", "filename": "gcc/expr.c", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4541b7a1e63c7c02a1fbea8cbbe397fd436ebfe/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4541b7a1e63c7c02a1fbea8cbbe397fd436ebfe/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=e4541b7a1e63c7c02a1fbea8cbbe397fd436ebfe", "patch": "@@ -3202,9 +3202,15 @@ compress_float_constant (rtx x, rtx y)\n   enum machine_mode orig_srcmode = GET_MODE (y);\n   enum machine_mode srcmode;\n   REAL_VALUE_TYPE r;\n+  int oldcost, newcost;\n \n   REAL_VALUE_FROM_CONST_DOUBLE (r, y);\n \n+  if (LEGITIMATE_CONSTANT_P (y))\n+    oldcost = rtx_cost (y, SET);\n+  else\n+    oldcost = rtx_cost (force_const_mem (dstmode, y), SET);\n+\n   for (srcmode = GET_CLASS_NARROWEST_MODE (GET_MODE_CLASS (orig_srcmode));\n        srcmode != orig_srcmode;\n        srcmode = GET_MODE_WIDER_MODE (srcmode))\n@@ -3229,12 +3235,23 @@ compress_float_constant (rtx x, rtx y)\n \t     the extension.  */\n \t  if (! (*insn_data[ic].operand[1].predicate) (trunc_y, srcmode))\n \t    continue;\n+\t  /* This is valid, but may not be cheaper than the original. */\n+\t  newcost = rtx_cost (gen_rtx_FLOAT_EXTEND (dstmode, trunc_y), SET);\n+\t  if (oldcost < newcost)\n+\t    continue;\n \t}\n       else if (float_extend_from_mem[dstmode][srcmode])\n-\ttrunc_y = validize_mem (force_const_mem (srcmode, trunc_y));\n+\t{\n+\t  trunc_y = force_const_mem (srcmode, trunc_y);\n+\t  /* This is valid, but may not be cheaper than the original. */\n+\t  newcost = rtx_cost (gen_rtx_FLOAT_EXTEND (dstmode, trunc_y), SET);\n+\t  if (oldcost < newcost)\n+\t    continue;\n+\t  trunc_y = validize_mem (trunc_y);\n+\t}\n       else\n \tcontinue;\n-\n+ \n       emit_unop_insn (ic, x, trunc_y, UNKNOWN);\n       last_insn = get_last_insn ();\n "}]}