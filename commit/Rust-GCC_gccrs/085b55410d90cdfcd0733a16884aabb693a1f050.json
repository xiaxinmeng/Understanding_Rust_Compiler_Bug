{"sha": "085b55410d90cdfcd0733a16884aabb693a1f050", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg1YjU1NDEwZDkwY2RmY2QwNzMzYTE2ODg0YWFiYjY5M2ExZjA1MA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-11-12T09:59:27Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-11-12T09:59:27Z"}, "message": "PR libstdc++/37986 (cont)\n\n2008-11-12  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/37986 (cont)\n\t* include/tr1_impl/random (struct _Adaptor): Use only remove_reference\n\ton _Engine.\n\t(struct _Adaptor<_Engine*, _Distribution>): Add.\n\t* testsuite/tr1/5_numerical_facilities/random/variate_generator/\n\t37986.cc: Extend.\n\nFrom-SVN: r141784", "tree": {"sha": "19ceff23e80500ce38dd36c04876235629d93498", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19ceff23e80500ce38dd36c04876235629d93498"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/085b55410d90cdfcd0733a16884aabb693a1f050", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/085b55410d90cdfcd0733a16884aabb693a1f050", "html_url": "https://github.com/Rust-GCC/gccrs/commit/085b55410d90cdfcd0733a16884aabb693a1f050", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/085b55410d90cdfcd0733a16884aabb693a1f050/comments", "author": null, "committer": null, "parents": [{"sha": "66e681911005962f96d56daf1a2b80bfe89cfbd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66e681911005962f96d56daf1a2b80bfe89cfbd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66e681911005962f96d56daf1a2b80bfe89cfbd2"}], "stats": {"total": 84, "additions": 79, "deletions": 5}, "files": [{"sha": "c089507e56fd8e6bfe51aac3c0e822e10efdc8b7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/085b55410d90cdfcd0733a16884aabb693a1f050/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/085b55410d90cdfcd0733a16884aabb693a1f050/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=085b55410d90cdfcd0733a16884aabb693a1f050", "patch": "@@ -1,3 +1,12 @@\n+2008-11-12  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/37986 (cont)\n+\t* include/tr1_impl/random (struct _Adaptor): Use only remove_reference\n+\ton _Engine.\n+\t(struct _Adaptor<_Engine*, _Distribution>): Add.\n+\t* testsuite/tr1/5_numerical_facilities/random/variate_generator/\n+\t37986.cc: Extend.\n+\n 2008-11-11  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/37986"}, {"sha": "dd9c57d162b46c1835967d14c2502c23abb0adc6", "filename": "libstdc++-v3/include/tr1_impl/random", "status": "modified", "additions": 66, "deletions": 5, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/085b55410d90cdfcd0733a16884aabb693a1f050/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Frandom", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/085b55410d90cdfcd0733a16884aabb693a1f050/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Frandom", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Frandom?ref=085b55410d90cdfcd0733a16884aabb693a1f050", "patch": "@@ -79,11 +79,9 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     template<typename _Engine, typename _Distribution>\n       struct _Adaptor\n       { \n-\ttypedef typename remove_reference<\n-\t  typename remove_pointer<_Engine>::type>::type _BEngine;\n-\n-\ttypedef typename _BEngine::result_type       _Engine_result_type;\n-\ttypedef typename _Distribution::input_type   result_type;\n+\ttypedef typename remove_reference<_Engine>::type _BEngine;\n+\ttypedef typename _BEngine::result_type           _Engine_result_type;\n+\ttypedef typename _Distribution::input_type       result_type;\n \n       public:\n \t_Adaptor(const _Engine& __g)\n@@ -149,6 +147,69 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       private:\n \t_Engine _M_g;\n       };\n+\n+    // Specialization for _Engine*.\n+    template<typename _Engine, typename _Distribution>\n+      struct _Adaptor<_Engine*, _Distribution>\n+      {\n+\ttypedef typename _Engine::result_type      _Engine_result_type;\n+\ttypedef typename _Distribution::input_type result_type;\n+\n+      public:\n+\t_Adaptor(_Engine* __g)\n+\t: _M_g(__g) { }\n+\n+\tresult_type\n+\tmin() const\n+\t{\n+\t  result_type __return_value;\n+\t  if (is_integral<_Engine_result_type>::value\n+\t      && is_integral<result_type>::value)\n+\t    __return_value = _M_g->min();\n+\t  else\n+\t    __return_value = result_type(0);\n+\t  return __return_value;\n+\t}\n+\n+\tresult_type\n+\tmax() const\n+\t{\n+\t  result_type __return_value;\n+\t  if (is_integral<_Engine_result_type>::value\n+\t      && is_integral<result_type>::value)\n+\t    __return_value = _M_g->max();\n+\t  else if (!is_integral<result_type>::value)\n+\t    __return_value = result_type(1);\n+\t  else\n+\t    __return_value = std::numeric_limits<result_type>::max() - 1;\n+\t  return __return_value;\n+\t}\n+\n+\tresult_type\n+\toperator()()\n+\t{\n+\t  result_type __return_value;\n+\t  if (is_integral<_Engine_result_type>::value\n+\t      && is_integral<result_type>::value)\n+\t    __return_value = (*_M_g)();\n+\t  else if (!is_integral<_Engine_result_type>::value\n+\t\t   && !is_integral<result_type>::value)\n+\t    __return_value = result_type((*_M_g)() - _M_g->min())\n+\t      / result_type(_M_g->max() - _M_g->min());\n+\t  else if (is_integral<_Engine_result_type>::value\n+\t\t   && !is_integral<result_type>::value)\n+\t    __return_value = result_type((*_M_g)() - _M_g->min())\n+\t      / result_type(_M_g->max() - _M_g->min() + result_type(1));\n+\t  else\n+\t    __return_value = ((((*_M_g)() - _M_g->min()) \n+\t\t\t       / (_M_g->max() - _M_g->min()))\n+\t\t\t      * std::numeric_limits<result_type>::max());\n+\t  return __return_value;\n+\t}\n+\n+      private:\n+\t_Engine* _M_g;\n+      };\n   } // namespace __detail\n \n   /**"}, {"sha": "38137f65a00522b3d09f9e14e323213f83e449eb", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/random/variate_generator/37986.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/085b55410d90cdfcd0733a16884aabb693a1f050/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fvariate_generator%2F37986.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/085b55410d90cdfcd0733a16884aabb693a1f050/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fvariate_generator%2F37986.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fvariate_generator%2F37986.cc?ref=085b55410d90cdfcd0733a16884aabb693a1f050", "patch": "@@ -42,4 +42,8 @@ void test01()\n     std::tr1::mt19937*,\n     std::tr1::uniform_real<double>\n     > g3(&mt, dist);\n+\n+  g1();\n+  g2();\n+  g3();\n }"}]}