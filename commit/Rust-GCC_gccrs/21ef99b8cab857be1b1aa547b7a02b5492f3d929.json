{"sha": "21ef99b8cab857be1b1aa547b7a02b5492f3d929", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFlZjk5YjhjYWI4NTdiZTFiMWFhNTQ3YjdhMDJiNTQ5MmYzZDkyOQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "stevenb@suse.de", "date": "2004-09-28T20:34:17Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2004-09-28T20:34:17Z"}, "message": "common.opt (flag_gcse_sm): Disable by default.\n\n\t* common.opt (flag_gcse_sm): Disable by default.\n\t(flag_gcse_las): Likewise.\n\t(flag_web): Likewise.  Create from this file.\n\t* flags.h: Remove flag_web declaration.\n\t* toplev.c (flag_web): Likewise.\n\t(process_options): Never set flag_web.\n\nFrom-SVN: r88250", "tree": {"sha": "d9295737521c5789a351138706d4464bb0b7328c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9295737521c5789a351138706d4464bb0b7328c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21ef99b8cab857be1b1aa547b7a02b5492f3d929", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21ef99b8cab857be1b1aa547b7a02b5492f3d929", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21ef99b8cab857be1b1aa547b7a02b5492f3d929", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21ef99b8cab857be1b1aa547b7a02b5492f3d929/comments", "author": null, "committer": null, "parents": [{"sha": "78492bf5ac71894df6c63fe5eb69c65007d52ad0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78492bf5ac71894df6c63fe5eb69c65007d52ad0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78492bf5ac71894df6c63fe5eb69c65007d52ad0"}], "stats": {"total": 29, "additions": 13, "deletions": 16}, "files": [{"sha": "e90e94fd379dacc2e55500441a4e747d4f572e36", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21ef99b8cab857be1b1aa547b7a02b5492f3d929/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21ef99b8cab857be1b1aa547b7a02b5492f3d929/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=21ef99b8cab857be1b1aa547b7a02b5492f3d929", "patch": "@@ -1,3 +1,12 @@\n+2004-09-28  Steven Bosscher  <stevenb@suse.de>\n+\n+\t* common.opt (flag_gcse_sm): Disable by default.\n+\t(flag_gcse_las): Likewise.\n+\t(flag_web): Likewise.  Create from this file.\n+\t* flags.h: Remove flag_web declaration.\n+\t* toplev.c (flag_web): Likewise.\n+\t(process_options): Never set flag_web.\n+\n 2004-09-28  Steven Bosscher  <stevenb@suse.de>\n \n \t* Makefile.in (tree-ssa-propagate.o): Depend on vec.h."}, {"sha": "f39cde12ac10fdb99e75908967536884a931d271", "filename": "gcc/common.opt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21ef99b8cab857be1b1aa547b7a02b5492f3d929/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21ef99b8cab857be1b1aa547b7a02b5492f3d929/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=21ef99b8cab857be1b1aa547b7a02b5492f3d929", "patch": "@@ -407,11 +407,11 @@ Common Report Var(flag_gcse_lm) Init(1)\n Perform enhanced load motion during global common subexpression elimination\n \n fgcse-sm\n-Common Report Var(flag_gcse_sm) Init(1)\n+Common Report Var(flag_gcse_sm) Init(0)\n Perform store motion after global common subexpression elimination\n \n fgcse-las\n-Common Report Var(flag_gcse_las) Init(1)\n+Common Report Var(flag_gcse_las) Init(0)\n Perform redundant load after store elimination in global common subexpression\n elimination\n \n@@ -936,7 +936,7 @@ Common Report Var(flag_value_profile_transformations)\n Use expression value profiles in optimizations\n \n fweb\n-Common Report Var(flag_web) VarExists\n+Common Report Var(flag_web) Init(0)\n Construct webs and split unrelated uses of single variable\n \n fwrapv"}, {"sha": "91e719a0807ed95078c7a89afa026c5afea71d9f", "filename": "gcc/flags.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21ef99b8cab857be1b1aa547b7a02b5492f3d929/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21ef99b8cab857be1b1aa547b7a02b5492f3d929/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=21ef99b8cab857be1b1aa547b7a02b5492f3d929", "patch": "@@ -240,8 +240,6 @@ extern enum graph_dump_types graph_dump_format;\n    and to print them when we are done.  */\n extern int flag_detailed_statistics;\n \n-extern int flag_web;\n-\n /* Nonzero means that we defer emitting functions until they are actually\n    used.  */\n extern int flag_remove_unreachable_functions;"}, {"sha": "eaeeecaca4d09c8806aa074da76e8ca947bf7a2e", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21ef99b8cab857be1b1aa547b7a02b5492f3d929/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21ef99b8cab857be1b1aa547b7a02b5492f3d929/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=21ef99b8cab857be1b1aa547b7a02b5492f3d929", "patch": "@@ -270,12 +270,6 @@ int flag_pcc_struct_return = DEFAULT_PCC_STRUCT_RETURN;\n \n int flag_complex_divide_method = 0;\n \n-/* Nonzero means performs web construction pass.  When flag_web ==\n-   AUTODETECT_FLAG_VAR_TRACKING it will be set according to optimize\n-   and default_debug_hooks in process_options ().  */\n-\n-int flag_web = AUTODETECT_FLAG_VAR_TRACKING;\n-\n /* Nonzero means that we don't want inlining by virtue of -fno-inline,\n    not just because the tree inliner turned us off.  */\n \n@@ -1827,7 +1821,7 @@ process_options (void)\n \t   debug_type_names[write_symbols]);\n \n   /* Now we know which debug output will be used so we can set\n-     flag_var_tracking, flag_rename_registers and flag_web if the user has\n+     flag_var_tracking, flag_rename_registers if the user has\n      not specified them.  */\n   if (debug_info_level < DINFO_LEVEL_NORMAL\n       || debug_hooks->var_location == do_nothing_debug_hooks.var_location)\n@@ -1848,10 +1842,6 @@ process_options (void)\n     flag_rename_registers = default_debug_hooks->var_location\n \t    \t\t    != do_nothing_debug_hooks.var_location;\n \n-  if (flag_web == AUTODETECT_FLAG_VAR_TRACKING)\n-    flag_web = optimize >= 2 && (default_debug_hooks->var_location\n-\t    \t\t         != do_nothing_debug_hooks.var_location);\n-\n   if (flag_var_tracking == AUTODETECT_FLAG_VAR_TRACKING)\n     flag_var_tracking = optimize >= 1;\n "}]}