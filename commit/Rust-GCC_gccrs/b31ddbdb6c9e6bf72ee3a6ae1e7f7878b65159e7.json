{"sha": "b31ddbdb6c9e6bf72ee3a6ae1e7f7878b65159e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjMxZGRiZGI2YzllNmJmNzJlZTNhNmFlMWU3Zjc4NzhiNjUxNTllNw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2013-06-07T12:51:45Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2013-06-07T12:51:45Z"}, "message": "arm.md (anddi3_insn): Remove duplicate alternatives.\n\n2013-06-07  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n\n\t* config/arm/arm.md (anddi3_insn): Remove duplicate alternatives.\n\tClean up alternatives.\n\nFrom-SVN: r199810", "tree": {"sha": "29fb469e55d3b8a3d54379418e78877f2c8d1b38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29fb469e55d3b8a3d54379418e78877f2c8d1b38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b31ddbdb6c9e6bf72ee3a6ae1e7f7878b65159e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b31ddbdb6c9e6bf72ee3a6ae1e7f7878b65159e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b31ddbdb6c9e6bf72ee3a6ae1e7f7878b65159e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b31ddbdb6c9e6bf72ee3a6ae1e7f7878b65159e7/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ba88423cb23c57fdb49cb1809d6c65cb55c3a6df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba88423cb23c57fdb49cb1809d6c65cb55c3a6df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba88423cb23c57fdb49cb1809d6c65cb55c3a6df"}], "stats": {"total": 48, "additions": 22, "deletions": 26}, "files": [{"sha": "0c66239556a6a48d69bd3838926955ae0c3667e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b31ddbdb6c9e6bf72ee3a6ae1e7f7878b65159e7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b31ddbdb6c9e6bf72ee3a6ae1e7f7878b65159e7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b31ddbdb6c9e6bf72ee3a6ae1e7f7878b65159e7", "patch": "@@ -1,3 +1,8 @@\n+2013-06-07  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.md (anddi3_insn): Remove duplicate alternatives.\n+\tClean up alternatives.\n+\n 2013-06-07  Alan Modra  <amodra@gmail.com>\n \n \t* config/rs6000/rs6000.c (setup_incoming_varargs): Round up"}, {"sha": "dc62caa56694135601317d86f362d3c7bf489b1c", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 17, "deletions": 26, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b31ddbdb6c9e6bf72ee3a6ae1e7f7878b65159e7/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b31ddbdb6c9e6bf72ee3a6ae1e7f7878b65159e7/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=b31ddbdb6c9e6bf72ee3a6ae1e7f7878b65159e7", "patch": "@@ -2183,29 +2183,28 @@\n )\n \n (define_insn_and_split \"*anddi3_insn\"\n-  [(set (match_operand:DI         0 \"s_register_operand\"     \"=&r,&r,&r,&r,w,w ,?&r,?&r,?w,?w\")\n-\t(and:DI (match_operand:DI 1 \"s_register_operand\"     \"%0 ,r ,0,r ,w,0 ,0  ,r  ,w ,0\")\n-\t\t(match_operand:DI 2 \"arm_anddi_operand_neon\" \"r  ,r ,De,De,w,DL,r  ,r  ,w ,DL\")))]\n+  [(set (match_operand:DI         0 \"s_register_operand\"     \"=w,w ,&r,&r,&r,&r,?w,?w\")\n+        (and:DI (match_operand:DI 1 \"s_register_operand\"     \"%w,0 ,0 ,r ,0 ,r ,w ,0\")\n+                (match_operand:DI 2 \"arm_anddi_operand_neon\" \"w ,DL,r ,r ,De,De,w ,DL\")))]\n   \"TARGET_32BIT && !TARGET_IWMMXT\"\n {\n   switch (which_alternative)\n     {\n-    case 0:\n-    case 1:\n+    case 0: /* fall through */\n+    case 6: return \"vand\\t%P0, %P1, %P2\";\n+    case 1: /* fall through */\n+    case 7: return neon_output_logic_immediate (\"vand\", &operands[2],\n+                    DImode, 1, VALID_NEON_QREG_MODE (DImode));\n     case 2:\n-    case 3: /* fall through */\n-      return \"#\";\n-    case 4: /* fall through */\n-    case 8: return \"vand\\t%P0, %P1, %P2\";\n+    case 3:\n+    case 4:\n     case 5: /* fall through */\n-    case 9: return neon_output_logic_immediate (\"vand\", &operands[2],\n-                    DImode, 1, VALID_NEON_QREG_MODE (DImode));\n-    case 6: return \"#\";\n-    case 7: return \"#\";\n+      return \"#\";\n     default: gcc_unreachable ();\n     }\n }\n-  \"TARGET_32BIT && !TARGET_IWMMXT\"\n+  \"TARGET_32BIT && !TARGET_IWMMXT && reload_completed\n+   && !(IS_VFP_REGNUM (REGNO (operands[0])))\"\n   [(set (match_dup 3) (match_dup 4))\n    (set (match_dup 5) (match_dup 6))]\n   \"\n@@ -2221,19 +2220,11 @@\n                                            gen_highpart_mode (SImode, DImode, operands[2]));\n \n   }\"\n-  [(set_attr \"neon_type\" \"*,*,*,*,neon_int_1,neon_int_1,*,*,neon_int_1,neon_int_1\")\n-   (set_attr \"arch\" \"*,*,*,*,neon_for_64bits,neon_for_64bits,*,*,\n+  [(set_attr \"neon_type\" \"neon_int_1,neon_int_1,*,*,*,*,neon_int_1,neon_int_1\")\n+   (set_attr \"arch\" \"neon_for_64bits,neon_for_64bits,*,*,*,*,\n                      avoid_neon_for_64bits,avoid_neon_for_64bits\")\n-   (set_attr \"length\" \"8,8,8,8,*,*,8,8,*,*\")\n-   (set (attr \"insn_enabled\") (if_then_else\n-                                (lt (symbol_ref \"which_alternative\")\n-                                    (const_int 4))\n-                                (if_then_else (match_test \"!TARGET_NEON\")\n-                                              (const_string \"yes\")\n-                                              (const_string \"no\"))\n-                                (if_then_else (match_test \"TARGET_NEON\")\n-                                              (const_string \"yes\")\n-                                              (const_string \"no\"))))]\n+   (set_attr \"length\" \"*,*,8,8,8,8,*,*\")\n+  ]\n )\n \n (define_insn_and_split \"*anddi_zesidi_di\""}]}