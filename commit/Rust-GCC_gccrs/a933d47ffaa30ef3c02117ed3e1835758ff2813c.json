{"sha": "a933d47ffaa30ef3c02117ed3e1835758ff2813c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTkzM2Q0N2ZmYWEzMGVmM2MwMjExN2VkM2UxODM1NzU4ZmYyODEzYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-02-16T14:52:14Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-02-16T14:52:14Z"}, "message": "re PR tree-optimization/63593 (ICE: verify_gimple failed: incompatible types in PHI argument 0 with -O3 -fno-tree-vectorize)\n\n2015-02-16  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/63593\n\t* tree-predcom.c (execute_pred_commoning_chain): Delay removing\n\tstmts and releasing SSA names until...\n\t(execute_pred_commoning): ... after processing all chains.\n\n\t* gcc.dg/pr63593.c: New testcase.\n\nFrom-SVN: r220734", "tree": {"sha": "beb41938260fc4615ba7775f99d4c141516fbeed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/beb41938260fc4615ba7775f99d4c141516fbeed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a933d47ffaa30ef3c02117ed3e1835758ff2813c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a933d47ffaa30ef3c02117ed3e1835758ff2813c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a933d47ffaa30ef3c02117ed3e1835758ff2813c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a933d47ffaa30ef3c02117ed3e1835758ff2813c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "62991c35a8070efed1af4a46f64151cc4e95207e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62991c35a8070efed1af4a46f64151cc4e95207e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62991c35a8070efed1af4a46f64151cc4e95207e"}], "stats": {"total": 52, "additions": 49, "deletions": 3}, "files": [{"sha": "4062b065bad9a17566d2fca4370f3a6ead17906f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a933d47ffaa30ef3c02117ed3e1835758ff2813c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a933d47ffaa30ef3c02117ed3e1835758ff2813c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a933d47ffaa30ef3c02117ed3e1835758ff2813c", "patch": "@@ -1,3 +1,10 @@\n+2015-02-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/63593\n+\t* tree-predcom.c (execute_pred_commoning_chain): Delay removing\n+\tstmts and releasing SSA names until...\n+\t(execute_pred_commoning): ... after processing all chains.\n+\n 2015-02-16  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR ipa/65059"}, {"sha": "c02263ea5cceeea02c3eb3fad349ca08bea25ed9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a933d47ffaa30ef3c02117ed3e1835758ff2813c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a933d47ffaa30ef3c02117ed3e1835758ff2813c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a933d47ffaa30ef3c02117ed3e1835758ff2813c", "patch": "@@ -1,3 +1,8 @@\n+2015-02-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/63593\n+\t* gcc.dg/pr63593.c: New testcase.\n+\n 2015-02-16  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/65066"}, {"sha": "08bc8f976d2d7bca40f4bf79d28cf5752683a5a2", "filename": "gcc/testsuite/gcc.dg/pr63593.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a933d47ffaa30ef3c02117ed3e1835758ff2813c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr63593.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a933d47ffaa30ef3c02117ed3e1835758ff2813c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr63593.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr63593.c?ref=a933d47ffaa30ef3c02117ed3e1835758ff2813c", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fno-tree-vectorize\" } */\n+\n+int in[2 * 4][4];\n+int out[4];\n+\n+void\n+foo (void)\n+{\n+  int sum;\n+  int i, j, k;\n+  for (k = 0; k < 4; k++)\n+    {\n+      sum = 1;\n+      for (j = 0; j < 4; j++)\n+\tfor (i = 0; i < 4; i++)\n+\t  sum *= in[i + k][j];\n+      out[k] = sum;\n+    }\n+}"}, {"sha": "8dac1ba5afd5520368e20596d643a716b1982a5a", "filename": "gcc/tree-predcom.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a933d47ffaa30ef3c02117ed3e1835758ff2813c/gcc%2Ftree-predcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a933d47ffaa30ef3c02117ed3e1835758ff2813c/gcc%2Ftree-predcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-predcom.c?ref=a933d47ffaa30ef3c02117ed3e1835758ff2813c", "patch": "@@ -1745,9 +1745,8 @@ execute_pred_commoning_chain (struct loop *loop, chain_p chain,\n   if (chain->combined)\n     {\n       /* For combined chains, just remove the statements that are used to\n-\t compute the values of the expression (except for the root one).  */\n-      for (i = 1; chain->refs.iterate (i, &a); i++)\n-\tremove_stmt (a->stmt);\n+\t compute the values of the expression (except for the root one).\n+\t We delay this until after all chains are processed.  */\n     }\n   else\n     {\n@@ -1811,6 +1810,21 @@ execute_pred_commoning (struct loop *loop, vec<chain_p> chains,\n \texecute_pred_commoning_chain (loop, chain, tmp_vars);\n     }\n \n+  FOR_EACH_VEC_ELT (chains, i, chain)\n+    {\n+      if (chain->type == CT_INVARIANT)\n+\t;\n+      else if (chain->combined)\n+\t{\n+\t  /* For combined chains, just remove the statements that are used to\n+\t     compute the values of the expression (except for the root one).  */\n+\t  dref a;\n+\t  unsigned j;\n+\t  for (j = 1; chain->refs.iterate (j, &a); j++)\n+\t    remove_stmt (a->stmt);\n+\t}\n+    }\n+\n   update_ssa (TODO_update_ssa_only_virtuals);\n }\n "}]}