{"sha": "bb0f14ae684a38a44aaf42b312c213aedaa74103", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIwZjE0YWU2ODRhMzhhNDRhYWY0MmIzMTJjMjEzYWVkYWE3NDEwMw==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2018-06-12T17:14:31Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2018-06-12T17:14:31Z"}, "message": "PR c/85931 -  -Wsizeof-pointer-memaccess for strncpy with size of source\n\ngcc/c-family/ChangeLog:\n\n\tPR c/85931\n\t* c-warn.c (sizeof_pointer_memaccess_warning): Avoid warning when\n\tsizeof source and destination yields the same value.\n\ngcc/ChangeLog:\n\n\tPR c/85931\n\t* fold-const.c (operand_equal_p): Handle SAVE_EXPR.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c/85931\n\t* gcc.dg/Wstringop-truncation-3.c: New test.\n\nFrom-SVN: r261515", "tree": {"sha": "7e041b94bbe264ea9855d679e7299cd8a1f4281d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e041b94bbe264ea9855d679e7299cd8a1f4281d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb0f14ae684a38a44aaf42b312c213aedaa74103", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb0f14ae684a38a44aaf42b312c213aedaa74103", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb0f14ae684a38a44aaf42b312c213aedaa74103", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb0f14ae684a38a44aaf42b312c213aedaa74103/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "132afeecc3f5adc88a029f9d1e11ca6d64ab3e8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/132afeecc3f5adc88a029f9d1e11ca6d64ab3e8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/132afeecc3f5adc88a029f9d1e11ca6d64ab3e8b"}], "stats": {"total": 93, "additions": 91, "deletions": 2}, "files": [{"sha": "b1b32998fde38c0853524259538cadde0a5d70c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb0f14ae684a38a44aaf42b312c213aedaa74103/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb0f14ae684a38a44aaf42b312c213aedaa74103/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bb0f14ae684a38a44aaf42b312c213aedaa74103", "patch": "@@ -1,3 +1,8 @@\n+2018-06-12  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/85931\n+\t* fold-const.c (operand_equal_p): Handle SAVE_EXPR.\n+\n 2018-06-12  Will Schmidt  <will_schmidt@vnet.ibm.com>\n \n \t* config/rs6000/rs6000-c.c (altivec_overloaded_builtins): Add"}, {"sha": "f63af26624cedd59e87e6f0466515dbb7e779d2d", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb0f14ae684a38a44aaf42b312c213aedaa74103/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb0f14ae684a38a44aaf42b312c213aedaa74103/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=bb0f14ae684a38a44aaf42b312c213aedaa74103", "patch": "@@ -1,3 +1,9 @@\n+2018-06-12  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/85931\n+\t* c-warn.c (sizeof_pointer_memaccess_warning): Avoid warning when\n+\tsizeof source and destination yields the same value.\n+\n 2018-06-12  Martin Liska  <mliska@suse.cz>\n \n \t* c.opt: Make MPX-related options as Deprecated."}, {"sha": "95ac09d76a1e7ed67a94c9dd97152e07417e046f", "filename": "gcc/c-family/c-warn.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb0f14ae684a38a44aaf42b312c213aedaa74103/gcc%2Fc-family%2Fc-warn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb0f14ae684a38a44aaf42b312c213aedaa74103/gcc%2Fc-family%2Fc-warn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-warn.c?ref=bb0f14ae684a38a44aaf42b312c213aedaa74103", "patch": "@@ -792,13 +792,26 @@ sizeof_pointer_memaccess_warning (location_t *sizeof_arg_loc, tree callee,\n     {\n       /* The argument type may be an array.  Diagnose bounded string\n \t copy functions that specify the bound in terms of the source\n-\t argument rather than the destination.  */\n+\t argument rather than the destination unless they are equal\n+\t to one another.  Handle constant sizes and also try to handle\n+\t sizeof expressions involving VLAs.  */\n       if (strop && !cmp && fncode != BUILT_IN_STRNDUP && src)\n \t{\n \t  tem = tree_strip_nop_conversions (src);\n \t  if (TREE_CODE (tem) == ADDR_EXPR)\n \t    tem = TREE_OPERAND (tem, 0);\n-\t  if (operand_equal_p (tem, sizeof_arg[idx], OEP_ADDRESS_OF))\n+\n+\t  tree d = tree_strip_nop_conversions (dest);\n+\t  if (TREE_CODE (d) == ADDR_EXPR)\n+\t    d = TREE_OPERAND (d, 0);\n+\n+\t  tree dstsz = TYPE_SIZE_UNIT (TREE_TYPE (d));\n+\t  tree srcsz = TYPE_SIZE_UNIT (TREE_TYPE (tem));\n+\n+\t  if ((!dstsz\n+\t       || !srcsz\n+\t       || !operand_equal_p (dstsz, srcsz, OEP_LEXICOGRAPHIC))\n+\t      && operand_equal_p (tem, sizeof_arg[idx], OEP_ADDRESS_OF))\n \t    warning_at (sizeof_arg_loc[idx], OPT_Wsizeof_pointer_memaccess,\n \t\t\t\"argument to %<sizeof%> in %qD call is the same \"\n \t\t\t\"expression as the source; did you mean to use \""}, {"sha": "c85a99124351889dd7272b331e46af3188ac668e", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb0f14ae684a38a44aaf42b312c213aedaa74103/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb0f14ae684a38a44aaf42b312c213aedaa74103/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=bb0f14ae684a38a44aaf42b312c213aedaa74103", "patch": "@@ -3358,6 +3358,7 @@ operand_equal_p (const_tree arg0, const_tree arg1, unsigned int flags)\n \n \tcase CLEANUP_POINT_EXPR:\n \tcase EXPR_STMT:\n+\tcase SAVE_EXPR:\n \t  if (flags & OEP_LEXICOGRAPHIC)\n \t    return OP_SAME (0);\n \t  return 0;"}, {"sha": "f9c8d93d3d352d0ad9713f4bbce90e6b47291bfb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb0f14ae684a38a44aaf42b312c213aedaa74103/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb0f14ae684a38a44aaf42b312c213aedaa74103/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bb0f14ae684a38a44aaf42b312c213aedaa74103", "patch": "@@ -1,3 +1,8 @@\n+2018-06-12  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/85931\n+\t* gcc.dg/Wstringop-truncation-3.c: New test.\n+\n 2018-06-12  Will Schmidt  <will_schmidt@vnet.ibm.com>\n \n \t* gcc.target/powerpc/p8-vec-xl-xst-v2.c: New."}, {"sha": "57f4d64188a6a875ab9f96ddb63be6e9c82ee7ea", "filename": "gcc/testsuite/gcc.dg/Wstringop-truncation-3.c", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb0f14ae684a38a44aaf42b312c213aedaa74103/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-truncation-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb0f14ae684a38a44aaf42b312c213aedaa74103/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-truncation-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-truncation-3.c?ref=bb0f14ae684a38a44aaf42b312c213aedaa74103", "patch": "@@ -0,0 +1,59 @@\n+/* PR c/85931 - -Wsizeof-pointer-memaccess for strncpy with size of source\n+   { dg-do compile }\n+   { dg-options \"-O2 -Wall -Wstringop-truncation -ftrack-macro-expansion=0\" } */\n+\n+typedef __SIZE_TYPE__ size_t;\n+\n+extern char* strncpy (char*, const char*, size_t);\n+\n+extern char a3[3], b3[3];\n+extern char a5[5], b5[5];\n+extern char ax[], bx[];\n+\n+struct SA\n+{\n+  char a3[3], b3[3];\n+  char a5[5], b5[5];\n+  char ax[];\n+};\n+\n+void sink (void*, ...);\n+\n+#define T(d, s, n)   sink (strncpy (d, s, n))\n+\n+void test_array (unsigned n)\n+{\n+  T (a3, b3, 3);\n+  /* For the following statemenmt, GCC 8.1 issues warning:\n+\n+       argument to \u2018sizeof\u2019 in \u2018strncpy\u2019 call is the same expression\n+       as the source; did you mean to use the size of the destination?\n+\n+     Since the size of both the source and destination the warning\n+     isn't helpful.  Verify that it isn't issued.  */\n+  T (a3, b3, sizeof b3);    /* { dg-bogus \"\\\\\\[-Wsizeof-pointer-memaccess\" } */\n+\n+  T (a3, ax, sizeof a3);    /* { dg-warning \"\\\\\\[-Wstringop-truncation\" } */\n+  T (ax, a3, sizeof a3);    /* { dg-warning \"argument to .sizeof. in .strncpy. call is the same expression as the source\" } */\n+\n+  char an[n], bn[n];\n+  sink (an, bn);\n+\n+  T (an, bn, sizeof bn);    /* { dg-bogus \"\\\\\\[-Wsizeof-pointer-memaccess\" } */\n+}\n+\n+void test_member_array (struct SA *sa, unsigned n)\n+{\n+  T (sa->a3, sa->b3, 3);\n+  T (sa->a3, sa->b3, sizeof sa->b3);  /* { dg-bogus \"\\\\\\[-Wsizeof-pointer-memaccess\" } */\n+\n+  T (sa->a3, sa->ax, sizeof sa->a3);  /* { dg-warning \"\\\\\\[-Wstringop-truncation\" } */\n+  T (sa->ax, sa->a3, sizeof sa->a3);  /* { dg-warning \"argument to .sizeof. in .strncpy. call is the same expression as the source\" } */\n+\n+  struct VarLenStruct {\n+    char an[n], bn[n];\n+  } x;\n+\n+  sink (&x);\n+  T (x.an, x.bn, sizeof x.bn);        /* { dg-bogus \"\\\\\\[-Wsizeof-pointer-memaccess\" } */\n+}"}]}