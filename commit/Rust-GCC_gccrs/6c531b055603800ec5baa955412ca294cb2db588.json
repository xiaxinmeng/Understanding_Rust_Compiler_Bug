{"sha": "6c531b055603800ec5baa955412ca294cb2db588", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM1MzFiMDU1NjAzODAwZWM1YmFhOTU1NDEyY2EyOTRjYjJkYjU4OA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-08-21T21:25:55Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-08-21T21:25:55Z"}, "message": "ResourceBundle.java (trySomeGetBundle): Removed debugging prints.\n\n\t* java/util/ResourceBundle.java (trySomeGetBundle): Removed\n\tdebugging prints.\n\nFrom-SVN: r35859", "tree": {"sha": "40e946f54b5caadf64b291e13669732a0ddcdb50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40e946f54b5caadf64b291e13669732a0ddcdb50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c531b055603800ec5baa955412ca294cb2db588", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c531b055603800ec5baa955412ca294cb2db588", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c531b055603800ec5baa955412ca294cb2db588", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c531b055603800ec5baa955412ca294cb2db588/comments", "author": null, "committer": null, "parents": [{"sha": "6315f06806fddb632247ac30d5dba61a8ee08feb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6315f06806fddb632247ac30d5dba61a8ee08feb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6315f06806fddb632247ac30d5dba61a8ee08feb"}], "stats": {"total": 33, "additions": 17, "deletions": 16}, "files": [{"sha": "8b72a7b9b8b215d465e8ff3f2f9f400efe8a69ed", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c531b055603800ec5baa955412ca294cb2db588/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c531b055603800ec5baa955412ca294cb2db588/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=6c531b055603800ec5baa955412ca294cb2db588", "patch": "@@ -1,3 +1,8 @@\n+2000-08-21  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* java/util/ResourceBundle.java (trySomeGetBundle): Removed\n+\tdebugging prints.\n+\n Sun Aug 20 21:02:48 2000  Anthony Green  <green@redhat.com>\n \n \t* java/lang/natSystem.cc (init_properties): Change sourceware"}, {"sha": "639872bb838a85bf9e27a1691fa9c7a602e0ac1a", "filename": "libjava/java/util/ResourceBundle.java", "status": "modified", "additions": 12, "deletions": 16, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c531b055603800ec5baa955412ca294cb2db588/libjava%2Fjava%2Futil%2FResourceBundle.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c531b055603800ec5baa955412ca294cb2db588/libjava%2Fjava%2Futil%2FResourceBundle.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FResourceBundle.java?ref=6c531b055603800ec5baa955412ca294cb2db588", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1998, 1999  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -115,26 +115,22 @@ private static final ResourceBundle trySomeGetBundle (String bundleName,\n \t    }\n \n \t  // Look for a properties file.\n-\t  {\n-\t    String prop_name = (bundleName.replace('.', '/') + \".properties\");\n-\t    System.out.println (\"trying '\" + prop_name + \"' for '\" + bundleName);\n-\t    InputStream i = ClassLoader.getSystemResourceAsStream (prop_name);\n-\t    /*\n-\t    InputStream i = \n-\t\tClassLoader.getSystemResourceAsStream (bundleName.replace ('.', '/') \n-\t\t\t\t\t\t       + \".properties\");\n-\t    */\n-\t    if (i != null)\n-\t      {\n-\t\ttry {\n+\t  InputStream i = \n+\t    ClassLoader.getSystemResourceAsStream (bundleName.replace ('.', '/') \n+\t\t\t\t\t\t   + \".properties\");\n+\t  if (i != null)\n+\t    {\n+\t      try\n+\t\t{\n \t\t  return new PropertyResourceBundle (i);\n-\t\t} catch (java.io.IOException e) {\n+\t\t}\n+\t      catch (java.io.IOException e)\n+\t\t{\n \t\t  // The docs don't appear to define what happens in\n \t\t  // this case, but it seems like continuing the\n \t\t  // search is a reasonable thing to do.\n \t\t}\n-\t      }\n-\t  }\n+\t    }\n \n \t  if (bundleName.equals(stopHere))\n \t    return result;"}]}