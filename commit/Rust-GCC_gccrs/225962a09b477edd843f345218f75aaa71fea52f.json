{"sha": "225962a09b477edd843f345218f75aaa71fea52f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI1OTYyYTA5YjQ3N2VkZDg0M2YzNDUyMThmNzVhYWE3MWZlYTUyZg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2005-06-07T16:52:32Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2005-06-07T16:52:32Z"}, "message": "acinclude.m4 (GLIBCXX_ENABLE_C99): Use C++ compiler for complex tests.\n\n\n2005-06-07  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* acinclude.m4 (GLIBCXX_ENABLE_C99): Use C++ compiler for complex\n\ttests.\n\t* configure: Regenerated.\n\nFrom-SVN: r100713", "tree": {"sha": "5c165a896893f947d57b5147fce8fe2dd36400e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c165a896893f947d57b5147fce8fe2dd36400e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/225962a09b477edd843f345218f75aaa71fea52f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/225962a09b477edd843f345218f75aaa71fea52f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/225962a09b477edd843f345218f75aaa71fea52f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/225962a09b477edd843f345218f75aaa71fea52f/comments", "author": null, "committer": null, "parents": [{"sha": "e0374221d9a8296937d7943791de7267a9d7dafa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0374221d9a8296937d7943791de7267a9d7dafa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0374221d9a8296937d7943791de7267a9d7dafa"}], "stats": {"total": 20, "additions": 8, "deletions": 12}, "files": [{"sha": "ed08283e301ffefd30b13fe3308a31f2536a4e9b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/225962a09b477edd843f345218f75aaa71fea52f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/225962a09b477edd843f345218f75aaa71fea52f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=225962a09b477edd843f345218f75aaa71fea52f", "patch": "@@ -1,3 +1,9 @@\n+2005-06-07  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* acinclude.m4 (GLIBCXX_ENABLE_C99): Use C++ compiler for complex\n+\ttests.\n+\t* configure: Regenerated.\n+\n 2005-06-07  Adrian Straetling  <straetling@de.ibm.com>\n \n \t* config/cpu/s390/atomicity.h: (__exchange_and_add, "}, {"sha": "1cf013e38c04c2320b2f4f2f87d4e6d150208d02", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/225962a09b477edd843f345218f75aaa71fea52f/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/225962a09b477edd843f345218f75aaa71fea52f/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=225962a09b477edd843f345218f75aaa71fea52f", "patch": "@@ -797,14 +797,10 @@ AC_DEFUN([GLIBCXX_ENABLE_C99], [\n               in <cmath> in namespace std.])\n   fi\n \n-  # Check for the existence of <complex.h> complex functions.\n+  # Check for the existence of <complex.h> complex math functions.\n   # This is necessary even though libstdc++ uses the builtin versions\n   # of these functions, because if the builtin cannot be used, a reference\n   # to the library function is emitted.\n-  # In addition, need to explicitly specify \"C\" compilation for this\n-  # one, or else the backwards C++ <complex.h> include will be selected.\n-  save_CXXFLAGS=\"$CXXFLAGS\"\n-  CXXFLAGS=\"$CXXFLAGS -x c\"\n   AC_CHECK_HEADERS(complex.h, ac_has_complex_h=yes, ac_has_complex_h=no)\n   ac_c99_complex=no;\n   if test x\"$ac_has_complex_h\" = x\"yes\"; then\n@@ -851,7 +847,6 @@ AC_DEFUN([GLIBCXX_ENABLE_C99], [\n \t\t    cpowl(tmpld, tmpld);\n \t\t   ],[ac_c99_complex=yes], [ac_c99_complex=no])\n   fi\n-  CXXFLAGS=\"$save_CXXFLAGS\"\n   AC_MSG_RESULT($ac_c99_complex)\n   if test x\"$ac_c99_complex\" = x\"yes\"; then\n     AC_DEFINE(_GLIBCXX_USE_C99_COMPLEX, 1,"}, {"sha": "1d36c95ffc1ded805ae3c5017ef20de514c27ea9", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/225962a09b477edd843f345218f75aaa71fea52f/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/225962a09b477edd843f345218f75aaa71fea52f/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=225962a09b477edd843f345218f75aaa71fea52f", "patch": "@@ -6715,14 +6715,10 @@ _ACEOF\n \n   fi\n \n-  # Check for the existence of <complex.h> complex functions.\n+  # Check for the existence of <complex.h> complex math functions.\n   # This is necessary even though libstdc++ uses the builtin versions\n   # of these functions, because if the builtin cannot be used, a reference\n   # to the library function is emitted.\n-  # In addition, need to explicitly specify \"C\" compilation for this\n-  # one, or else the backwards C++ <complex.h> include will be selected.\n-  save_CXXFLAGS=\"$CXXFLAGS\"\n-  CXXFLAGS=\"$CXXFLAGS -x c\"\n \n for ac_header in complex.h\n do\n@@ -6964,7 +6960,6 @@ ac_c99_complex=no\n fi\n rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n   fi\n-  CXXFLAGS=\"$save_CXXFLAGS\"\n   echo \"$as_me:$LINENO: result: $ac_c99_complex\" >&5\n echo \"${ECHO_T}$ac_c99_complex\" >&6\n   if test x\"$ac_c99_complex\" = x\"yes\"; then"}]}