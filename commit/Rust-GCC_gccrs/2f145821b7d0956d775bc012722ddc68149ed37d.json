{"sha": "2f145821b7d0956d775bc012722ddc68149ed37d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYxNDU4MjFiN2QwOTU2ZDc3NWJjMDEyNzIyZGRjNjgxNDllZDM3ZA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-20T08:57:43Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-20T08:57:43Z"}, "message": "(make_node, copy_node): Don't assume node length is multiple of int.\n\nFrom-SVN: r2524", "tree": {"sha": "2bd7b519091ff98859526e1d67acab3f31bbcd48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bd7b519091ff98859526e1d67acab3f31bbcd48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f145821b7d0956d775bc012722ddc68149ed37d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f145821b7d0956d775bc012722ddc68149ed37d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f145821b7d0956d775bc012722ddc68149ed37d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f145821b7d0956d775bc012722ddc68149ed37d/comments", "author": null, "committer": null, "parents": [{"sha": "71bde1f321ed9cb0e5c8289a95bb5d4bce502413", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71bde1f321ed9cb0e5c8289a95bb5d4bce502413", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71bde1f321ed9cb0e5c8289a95bb5d4bce502413"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "142254489a681b038e2446b4191137f87921d76b", "filename": "gcc/tree.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f145821b7d0956d775bc012722ddc68149ed37d/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f145821b7d0956d775bc012722ddc68149ed37d/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=2f145821b7d0956d775bc012722ddc68149ed37d", "patch": "@@ -877,11 +877,12 @@ make_node (code)\n   tree_node_sizes[(int)kind] += length;\n #endif\n \n-  /* We assume here that the length of a tree node is a multiple of the\n-     size of an int.  Rounding up won't work because it would clobber\n-     the next object.  */\n+  /* Clear a word at a time.  */\n   for (i = (length / sizeof (int)) - 1; i >= 0; i--)\n     ((int *) t)[i] = 0;\n+  /* Clear any extra bytes.  */\n+  for (i = length / sizeof (int) * sizeof (int); i < length; i++)\n+    ((char *) t)[i] = 0;\n \n   TREE_SET_CODE (t, code);\n   if (obstack == &permanent_obstack)\n@@ -978,6 +979,9 @@ copy_node (node)\n \n   for (i = (length / sizeof (int)) - 1; i >= 0; i--)\n     ((int *) t)[i] = ((int *) node)[i];\n+  /* Clear any extra bytes.  */\n+  for (i = length / sizeof (int) * sizeof (int); i < length; i++)\n+    ((char *) t)[i] = 0;\n \n   TREE_CHAIN (t) = 0;\n "}]}