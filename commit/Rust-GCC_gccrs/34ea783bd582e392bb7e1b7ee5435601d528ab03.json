{"sha": "34ea783bd582e392bb7e1b7ee5435601d528ab03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRlYTc4M2JkNTgyZTM5MmJiN2UxYjdlZTU0MzU2MDFkNTI4YWIwMw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-01-17T23:56:06Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-01-17T23:56:06Z"}, "message": "(extract_bit_field): For multi-word bitfield, clobber target before\nstoring to it.\n\nFrom-SVN: r11059", "tree": {"sha": "f91a7981990bc1c46f9037e4de0902487ac330c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f91a7981990bc1c46f9037e4de0902487ac330c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34ea783bd582e392bb7e1b7ee5435601d528ab03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34ea783bd582e392bb7e1b7ee5435601d528ab03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34ea783bd582e392bb7e1b7ee5435601d528ab03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34ea783bd582e392bb7e1b7ee5435601d528ab03/comments", "author": null, "committer": null, "parents": [{"sha": "b52ef430a32e02e8936dde2d4d2d6ec897806c86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b52ef430a32e02e8936dde2d4d2d6ec897806c86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b52ef430a32e02e8936dde2d4d2d6ec897806c86"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "dbd7eb2bb4f9da3776214b8c135cfe04c581295c", "filename": "gcc/expmed.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ea783bd582e392bb7e1b7ee5435601d528ab03/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ea783bd582e392bb7e1b7ee5435601d528ab03/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=34ea783bd582e392bb7e1b7ee5435601d528ab03", "patch": "@@ -965,6 +965,9 @@ extract_bit_field (str_rtx, bitsize, bitnum, unsignedp,\n       if (target == 0 || GET_CODE (target) != REG)\n \ttarget = gen_reg_rtx (mode);\n \n+      /* Indicate for flow that the entire target reg is being set.  */\n+      emit_insn (gen_rtx (CLOBBER, VOIDmode, target));\n+\n       for (i = 0; i < nwords; i++)\n \t{\n \t  /* If I is 0, use the low-order word in both field and target;"}]}