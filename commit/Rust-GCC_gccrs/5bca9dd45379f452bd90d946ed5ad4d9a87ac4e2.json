{"sha": "5bca9dd45379f452bd90d946ed5ad4d9a87ac4e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJjYTlkZDQ1Mzc5ZjQ1MmJkOTBkOTQ2ZWQ1YWQ0ZDlhODdhYzRlMg==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2019-07-27T07:43:15Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-07-27T07:43:15Z"}, "message": "[Darwin, PPC, testsuite] Fix fail for bmi2-bzhi64-1a.c\n\nThis test is failing with older cpus because the included header needs both\naltivec and vsx to be enabled to succeed in compiling.  Without this (if these\nare not defaults for the cpu) there are errors like:\n\nIn file included from ... x86intrin.h:41,\n                 from ... bmi2-bzhi64-1a.c:6:\n ... xmmintrin.h: In function '_mm_loadu_ps':\n ... xmmintrin.h:122:11: \nerror: incompatible types when returning type 'int' but '__m128' {aka '__vector(4) float'} was expected\n<snip>\n ... xmmintrin.h: In function '_mm_cvtps_pi32':\n ... xmmintrin.h:996:3: \nerror: use of 'long long' in AltiVec types is invalid without '-mvsx'\n<snip>\n\nFixed by adding -maltivec -mvsx to the options.\n\ngcc/testsuite/\n\n2019-07-27  Iain Sandoe  <iain@sandoe.co.uk>\n\n\t* gcc.target/powerpc/bmi2-bzhi64-1a.c: Add options to enable altivec\n\tand vsx.\n\nFrom-SVN: r273844", "tree": {"sha": "ff970e3a1a4f6a36bb43650f2ccf2819d3745374", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff970e3a1a4f6a36bb43650f2ccf2819d3745374"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bca9dd45379f452bd90d946ed5ad4d9a87ac4e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bca9dd45379f452bd90d946ed5ad4d9a87ac4e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bca9dd45379f452bd90d946ed5ad4d9a87ac4e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bca9dd45379f452bd90d946ed5ad4d9a87ac4e2/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eebbac5830df4170ab1cd07b9baf0598f3235ae3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eebbac5830df4170ab1cd07b9baf0598f3235ae3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eebbac5830df4170ab1cd07b9baf0598f3235ae3"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "7527e730263fec06177c30f0f53fbb80efbe9905", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bca9dd45379f452bd90d946ed5ad4d9a87ac4e2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bca9dd45379f452bd90d946ed5ad4d9a87ac4e2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5bca9dd45379f452bd90d946ed5ad4d9a87ac4e2", "patch": "@@ -1,3 +1,8 @@\n+2019-07-27  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* gcc.target/powerpc/bmi2-bzhi64-1a.c: Add options to enable altivec\n+\tand vsx.\n+\n 2019-07-26  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* lib/scanasm.exp (object-size): Handle Darwin's size command."}, {"sha": "89bee61f0445d51e96d0c22fc07bdd030a58e30d", "filename": "gcc/testsuite/gcc.target/powerpc/bmi2-bzhi64-1a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bca9dd45379f452bd90d946ed5ad4d9a87ac4e2/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-bzhi64-1a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bca9dd45379f452bd90d946ed5ad4d9a87ac4e2/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-bzhi64-1a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-bzhi64-1a.c?ref=5bca9dd45379f452bd90d946ed5ad4d9a87ac4e2", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O3\" } */\n+/* { dg-options \"-O3 -maltivec -mvsx\" } */\n /* { dg-require-effective-target lp64 } */\n \n #define NO_WARN_X86_INTRINSICS 1"}]}