{"sha": "333efaea633971912f2208d37b7b62992759d400", "node_id": "C_kwDOANBUbNoAKDMzM2VmYWVhNjMzOTcxOTEyZjIyMDhkMzdiN2I2Mjk5Mjc1OWQ0MDA", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-11-04T14:17:44Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-11-04T14:19:22Z"}, "message": "libffi: Add --enable-cet to configure\n\nWhen --enable-cet is used to configure GCC, enable Intel CET in libffi.\n\n\t* Makefile.am (AM_CFLAGS): Add $(CET_FLAGS).\n\t(AM_CCASFLAGS): Likewise.\n\t* configure.ac (CET_FLAGS): Add GCC_CET_FLAGS and AC_SUBST.\n\t* Makefile.in: Regenerate.\n\t* aclocal.m4: Likewise.\n\t* configure: Likewise.\n\t* include/Makefile.in: Likewise.\n\t* man/Makefile.in: Likewise.\n\t* testsuite/Makefile.in: Likewise.", "tree": {"sha": "826f932bb3c1d656a2c8d5663e533d14dd0f6725", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/826f932bb3c1d656a2c8d5663e533d14dd0f6725"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/333efaea633971912f2208d37b7b62992759d400", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/333efaea633971912f2208d37b7b62992759d400", "html_url": "https://github.com/Rust-GCC/gccrs/commit/333efaea633971912f2208d37b7b62992759d400", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/333efaea633971912f2208d37b7b62992759d400/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af1bfcc04ca1c80af4fc1cda75c6c1d8509c8bd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af1bfcc04ca1c80af4fc1cda75c6c1d8509c8bd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af1bfcc04ca1c80af4fc1cda75c6c1d8509c8bd0"}], "stats": {"total": 123, "additions": 116, "deletions": 7}, "files": [{"sha": "c6d6f849c535736029015e595f8fe62885a275df", "filename": "libffi/Makefile.am", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333efaea633971912f2208d37b7b62992759d400/libffi%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333efaea633971912f2208d37b7b62992759d400/libffi%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.am?ref=333efaea633971912f2208d37b7b62992759d400", "patch": "@@ -182,7 +182,7 @@ nodist_libffi_convenience_la_SOURCES = $(nodist_libffi_la_SOURCES)\n \n LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n \n-AM_CFLAGS = -Wall -g -fexceptions\n+AM_CFLAGS = -Wall -g -fexceptions $(CET_FLAGS)\n if FFI_DEBUG\n # Build debug. Define FFI_DEBUG on the commandline so that, when building with\n # MSVC, it can link against the debug CRT.\n@@ -218,7 +218,7 @@ libffi_la_LDFLAGS = -no-undefined $(libffi_version_info) $(libffi_version_script\n libffi_la_DEPENDENCIES = $(libffi_la_LIBADD) $(libffi_version_dep)\n \n AM_CPPFLAGS = -I. -I$(top_srcdir)/include -Iinclude -I$(top_srcdir)/src\n-AM_CCASFLAGS = $(AM_CPPFLAGS)\n+AM_CCASFLAGS = $(AM_CPPFLAGS) $(CET_FLAGS)\n \n # Multilib support.  Automake should provide these on its own.\n all-recursive: all-multi"}, {"sha": "5524a6a571e6eef88c78d4e0bbb5242b554030a2", "filename": "libffi/Makefile.in", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333efaea633971912f2208d37b7b62992759d400/libffi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333efaea633971912f2208d37b7b62992759d400/libffi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.in?ref=333efaea633971912f2208d37b7b62992759d400", "patch": "@@ -99,7 +99,9 @@ subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/asmcfi.m4 \\\n+\t$(top_srcdir)/../config/cet.m4 \\\n \t$(top_srcdir)/../config/depstand.m4 \\\n+\t$(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n@@ -320,6 +322,7 @@ CCAS = @CCAS@\n CCASDEPMODE = @CCASDEPMODE@\n CCASFLAGS = @CCASFLAGS@\n CCDEPMODE = @CCDEPMODE@\n+CET_FLAGS = @CET_FLAGS@\n CFLAGS = @CFLAGS@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n@@ -586,7 +589,7 @@ libffi_convenience_la_LIBADD = $(libffi_la_LIBADD)\n libffi_convenience_la_DEPENDENCIES = $(libffi_la_DEPENDENCIES)\n nodist_libffi_convenience_la_SOURCES = $(nodist_libffi_la_SOURCES)\n LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n-AM_CFLAGS = -Wall -g -fexceptions $(am__append_2)\n+AM_CFLAGS = -Wall -g -fexceptions $(CET_FLAGS) $(am__append_2)\n @LIBFFI_BUILD_VERSIONED_SHLIB_FALSE@libffi_version_script = \n @LIBFFI_BUILD_VERSIONED_SHLIB_GNU_TRUE@@LIBFFI_BUILD_VERSIONED_SHLIB_TRUE@libffi_version_script = -Wl,--version-script,libffi.map\n @LIBFFI_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBFFI_BUILD_VERSIONED_SHLIB_TRUE@libffi_version_script = -Wl,-M,libffi.map-sun\n@@ -597,7 +600,7 @@ libffi_version_info = -version-info `grep -v '^\\#' $(srcdir)/libtool-version`\n libffi_la_LDFLAGS = -no-undefined $(libffi_version_info) $(libffi_version_script) $(LTLDFLAGS) $(AM_LTLDFLAGS)\n libffi_la_DEPENDENCIES = $(libffi_la_LIBADD) $(libffi_version_dep)\n AM_CPPFLAGS = -I. -I$(top_srcdir)/include -Iinclude -I$(top_srcdir)/src\n-AM_CCASFLAGS = $(AM_CPPFLAGS)\n+AM_CCASFLAGS = $(AM_CPPFLAGS) $(CET_FLAGS)\n MULTISRCTOP = \n MULTIBUILDTOP = \n MULTIDIRS = "}, {"sha": "736ec308d5b7703c88b882d83b914e4ee2f38c05", "filename": "libffi/aclocal.m4", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333efaea633971912f2208d37b7b62992759d400/libffi%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333efaea633971912f2208d37b7b62992759d400/libffi%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Faclocal.m4?ref=333efaea633971912f2208d37b7b62992759d400", "patch": "@@ -1189,7 +1189,9 @@ AC_SUBST([am__untar])\n \n m4_include([../config/acx.m4])\n m4_include([../config/asmcfi.m4])\n+m4_include([../config/cet.m4])\n m4_include([../config/depstand.m4])\n+m4_include([../config/enable.m4])\n m4_include([../config/lead-dot.m4])\n m4_include([../config/multi.m4])\n m4_include([../config/override.m4])"}, {"sha": "575641cca1d91cdb7a01e69fbe160d87830a8be7", "filename": "libffi/configure", "status": "modified", "additions": 94, "deletions": 3, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333efaea633971912f2208d37b7b62992759d400/libffi%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333efaea633971912f2208d37b7b62992759d400/libffi%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure?ref=333efaea633971912f2208d37b7b62992759d400", "patch": "@@ -692,6 +692,7 @@ am__fastdepCCAS_TRUE\n CCASDEPMODE\n CCASFLAGS\n CCAS\n+CET_FLAGS\n am__fastdepCXX_FALSE\n am__fastdepCXX_TRUE\n CXXDEPMODE\n@@ -802,6 +803,7 @@ enable_multilib\n enable_silent_rules\n enable_generated_files_in_srcdir\n enable_dependency_tracking\n+enable_cet\n enable_shared\n enable_static\n with_pic\n@@ -1457,6 +1459,7 @@ Optional Features:\n                           do not reject slow dependency extractors\n   --disable-dependency-tracking\n                           speeds up one-time build\n+  --enable-cet            enable Intel CET in target libraries [default=auto]\n   --enable-shared[=PKGS]  build shared libraries [default=yes]\n   --enable-static[=PKGS]  build static libraries [default=yes]\n   --enable-fast-install[=PKGS]\n@@ -4877,6 +4880,95 @@ CFLAGS=$save_CFLAGS\n \n \n \n+# Add CET specific flags if CET is enabled\n+\n+ # Check whether --enable-cet was given.\n+if test \"${enable_cet+set}\" = set; then :\n+  enableval=$enable_cet;\n+      case \"$enableval\" in\n+       yes|no|auto) ;;\n+       *) as_fn_error $? \"Unknown argument to enable/disable cet\" \"$LINENO\" 5 ;;\n+                          esac\n+\n+else\n+  enable_cet=auto\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n+$as_echo_n \"checking for CET support... \" >&6; }\n+\n+# NB: Avoid nested save_CFLAGS and save_LDFLAGS.\n+case \"$host\" in\n+  i[34567]86-*-linux* | x86_64-*-linux*)\n+    case \"$enable_cet\" in\n+      auto)\n+\t# Check if target supports multi-byte NOPs\n+\t# and if compiler and assembler support CET insn.\n+\tcet_save_CFLAGS=\"$CFLAGS\"\n+\tCFLAGS=\"$CFLAGS -fcf-protection\"\n+\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+#if !defined(__SSE2__)\n+#error target does not support multi-byte NOPs\n+#else\n+asm (\"setssbsy\");\n+#endif\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  enable_cet=yes\n+else\n+  enable_cet=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\tCFLAGS=\"$cet_save_CFLAGS\"\n+\t;;\n+      yes)\n+\t# Check if assembler supports CET.\n+\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+asm (\"setssbsy\");\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+else\n+  as_fn_error $? \"assembler with CET support is required for --enable-cet\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t;;\n+    esac\n+    ;;\n+  *)\n+    enable_cet=no\n+    ;;\n+esac\n+if test x$enable_cet = xyes; then\n+  CET_FLAGS=\"-fcf-protection -mshstk\"\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+\n # By default we simply use the C compiler to build assembly code.\n \n test \"${CCAS+set}\" = set || CCAS=$CC\n@@ -6901,7 +6993,6 @@ fi\n \n \n \n-\n \n \n # Check whether --enable-libtool-lock was given.\n@@ -11481,7 +11572,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11484 \"configure\"\n+#line 11575 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11587,7 +11678,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11590 \"configure\"\n+#line 11681 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "014d89d042317039832b71ad406573dc3f0c2fdd", "filename": "libffi/configure.ac", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333efaea633971912f2208d37b7b62992759d400/libffi%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333efaea633971912f2208d37b7b62992759d400/libffi%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure.ac?ref=333efaea633971912f2208d37b7b62992759d400", "patch": "@@ -48,6 +48,10 @@ m4_rename_force([real_PRECIOUS],[_AC_ARG_VAR_PRECIOUS])\n \n AC_SUBST(CFLAGS)\n \n+# Add CET specific flags if CET is enabled\n+GCC_CET_FLAGS(CET_FLAGS)\n+AC_SUBST(CET_FLAGS)\n+\n AM_PROG_AS\n AM_PROG_CC_C_O\n AC_PROG_LIBTOOL"}, {"sha": "879cb72296d0d5698776670164be9586e7b84ca6", "filename": "libffi/include/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333efaea633971912f2208d37b7b62992759d400/libffi%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333efaea633971912f2208d37b7b62992759d400/libffi%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2FMakefile.in?ref=333efaea633971912f2208d37b7b62992759d400", "patch": "@@ -93,7 +93,9 @@ subdir = include\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/asmcfi.m4 \\\n+\t$(top_srcdir)/../config/cet.m4 \\\n \t$(top_srcdir)/../config/depstand.m4 \\\n+\t$(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n@@ -192,6 +194,7 @@ CCAS = @CCAS@\n CCASDEPMODE = @CCASDEPMODE@\n CCASFLAGS = @CCASFLAGS@\n CCDEPMODE = @CCDEPMODE@\n+CET_FLAGS = @CET_FLAGS@\n CFLAGS = @CFLAGS@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@"}, {"sha": "9d4f96608c43a3a4307a502b4b12fd9968c99bc5", "filename": "libffi/man/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333efaea633971912f2208d37b7b62992759d400/libffi%2Fman%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333efaea633971912f2208d37b7b62992759d400/libffi%2Fman%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fman%2FMakefile.in?ref=333efaea633971912f2208d37b7b62992759d400", "patch": "@@ -92,7 +92,9 @@ subdir = man\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/asmcfi.m4 \\\n+\t$(top_srcdir)/../config/cet.m4 \\\n \t$(top_srcdir)/../config/depstand.m4 \\\n+\t$(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n@@ -174,6 +176,7 @@ CCAS = @CCAS@\n CCASDEPMODE = @CCASDEPMODE@\n CCASFLAGS = @CCASFLAGS@\n CCDEPMODE = @CCDEPMODE@\n+CET_FLAGS = @CET_FLAGS@\n CFLAGS = @CFLAGS@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@"}, {"sha": "a19b523e54a8dc6c93e77094d63124a3a03f2418", "filename": "libffi/testsuite/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333efaea633971912f2208d37b7b62992759d400/libffi%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333efaea633971912f2208d37b7b62992759d400/libffi%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2FMakefile.in?ref=333efaea633971912f2208d37b7b62992759d400", "patch": "@@ -92,7 +92,9 @@ subdir = testsuite\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/asmcfi.m4 \\\n+\t$(top_srcdir)/../config/cet.m4 \\\n \t$(top_srcdir)/../config/depstand.m4 \\\n+\t$(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n@@ -147,6 +149,7 @@ CCAS = @CCAS@\n CCASDEPMODE = @CCASDEPMODE@\n CCASFLAGS = @CCASFLAGS@\n CCDEPMODE = @CCDEPMODE@\n+CET_FLAGS = @CET_FLAGS@\n CFLAGS = @CFLAGS@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@"}]}