{"sha": "98bfa2fb8363218653eae38c90c6097b2bc7ce6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThiZmEyZmI4MzYzMjE4NjUzZWFlMzhjOTBjNjA5N2IyYmM3Y2U2Yg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2005-12-10T00:22:11Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2005-12-10T00:22:11Z"}, "message": "output.h (init_section, [...]): Delete.\n\n\t* output.h (init_section, fini_section): Delete.\n\t* varasm.c (init_section, fini_section): Delete.\n\t(init_varasm_once): Don't initialize them.\n\t* doc/tm.texi (INIT_SECTION_ASM_OP, FINI_SECTION_ASM_OP): Say that\n\tthere are no corresponding varasm.c variables.\n\nFrom-SVN: r108338", "tree": {"sha": "cea5285063abb408a364b1d36c60e165b2e9fc15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cea5285063abb408a364b1d36c60e165b2e9fc15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98bfa2fb8363218653eae38c90c6097b2bc7ce6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98bfa2fb8363218653eae38c90c6097b2bc7ce6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98bfa2fb8363218653eae38c90c6097b2bc7ce6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98bfa2fb8363218653eae38c90c6097b2bc7ce6b/comments", "author": null, "committer": null, "parents": [{"sha": "0f67af1ce30cdee9273baa65166fabbcb6eb04b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f67af1ce30cdee9273baa65166fabbcb6eb04b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f67af1ce30cdee9273baa65166fabbcb6eb04b8"}], "stats": {"total": 28, "additions": 12, "deletions": 16}, "files": [{"sha": "1d83c906d4470ce8c0490893e4fa83fd6aa63f01", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98bfa2fb8363218653eae38c90c6097b2bc7ce6b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98bfa2fb8363218653eae38c90c6097b2bc7ce6b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98bfa2fb8363218653eae38c90c6097b2bc7ce6b", "patch": "@@ -1,3 +1,11 @@\n+2005-12-10  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* output.h (init_section, fini_section): Delete.\n+\t* varasm.c (init_section, fini_section): Delete.\n+\t(init_varasm_once): Don't initialize them.\n+\t* doc/tm.texi (INIT_SECTION_ASM_OP, FINI_SECTION_ASM_OP): Say that\n+\tthere are no corresponding varasm.c variables.\n+\n 2005-12-10  Richard Sandiford  <richard@codesourcery.com>\n \n \t* dwarf2out.c (default_eh_frame_section): Delete, moving handling"}, {"sha": "64a1a22f9cb4b8f415fd7f5782bd686f509a42be", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98bfa2fb8363218653eae38c90c6097b2bc7ce6b/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98bfa2fb8363218653eae38c90c6097b2bc7ce6b/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=98bfa2fb8363218653eae38c90c6097b2bc7ce6b", "patch": "@@ -5994,14 +5994,16 @@ uninitialized, writable small data.\n If defined, a C expression whose value is a string, including spacing,\n containing the assembler operation to identify the following data as\n initialization code.  If not defined, GCC will assume such a section does\n-not exist.\n+not exist.  This section has no corresponding @code{init_section}\n+variable; it is used entirely in runtime code.\n @end defmac\n \n @defmac FINI_SECTION_ASM_OP\n If defined, a C expression whose value is a string, including spacing,\n containing the assembler operation to identify the following data as\n finalization code.  If not defined, GCC will assume such a section does\n-not exist.\n+not exist.  This section has no corresponding @code{fini_section}\n+variable; it is used entirely in runtime code.\n @end defmac\n \n @defmac INIT_ARRAY_SECTION_ASM_OP"}, {"sha": "c61edce4b56371407bbfa4b1b47dc5f6a778d22e", "filename": "gcc/output.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98bfa2fb8363218653eae38c90c6097b2bc7ce6b/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98bfa2fb8363218653eae38c90c6097b2bc7ce6b/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=98bfa2fb8363218653eae38c90c6097b2bc7ce6b", "patch": "@@ -495,8 +495,6 @@ extern GTY(()) section *ctors_section;\n extern GTY(()) section *dtors_section;\n extern GTY(()) section *bss_section;\n extern GTY(()) section *sbss_section;\n-extern GTY(()) section *init_section;\n-extern GTY(()) section *fini_section;\n extern GTY(()) section *exception_section;\n extern GTY(()) section *eh_frame_section;\n "}, {"sha": "fe5231476f0f499addeff18be60a3cc63dc9401b", "filename": "gcc/varasm.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98bfa2fb8363218653eae38c90c6097b2bc7ce6b/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98bfa2fb8363218653eae38c90c6097b2bc7ce6b/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=98bfa2fb8363218653eae38c90c6097b2bc7ce6b", "patch": "@@ -152,8 +152,6 @@ section *ctors_section;\n section *dtors_section;\n section *bss_section;\n section *sbss_section;\n-section *init_section;\n-section *fini_section;\n \n /* The section that holds the main exception table, when known.  The section\n    is set either by the target's init_sections hook or by the first call to\n@@ -4857,16 +4855,6 @@ init_varasm_once (void)\n \t\t\t\t      SBSS_SECTION_ASM_OP);\n #endif\n \n-#ifdef INIT_SECTION_ASM_OP\n-  init_section = get_unnamed_section (SECTION_CODE, output_section_asm_op,\n-\t\t\t\t      INIT_SECTION_ASM_OP);\n-#endif\n-\n-#ifdef FINI_SECTION_ASM_OP\n-  fini_section = get_unnamed_section (SECTION_CODE, output_section_asm_op,\n-\t\t\t\t      FINI_SECTION_ASM_OP);\n-#endif\n-\n   targetm.asm_out.init_sections ();\n \n   if (readonly_data_section == NULL)"}]}