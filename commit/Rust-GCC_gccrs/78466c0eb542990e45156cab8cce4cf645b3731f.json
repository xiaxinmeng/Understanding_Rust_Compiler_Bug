{"sha": "78466c0eb542990e45156cab8cce4cf645b3731f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg0NjZjMGViNTQyOTkwZTQ1MTU2Y2FiOGNjZTRjZjY0NWIzNzMxZg==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm@polyomino.org.uk", "date": "2004-10-28T01:00:31Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-10-28T01:00:31Z"}, "message": "contrib.texi, [...]: Improve Texinfo formatting.\n\n\t* doc/contrib.texi, doc/cpp.texi, doc/cppopts.texi,\n\tdoc/extend.texi, doc/gcov.texi, doc/install.texi, doc/invoke.texi,\n\tdoc/libgcc.texi, doc/md.texi, doc/passes.texi,\n\tdoc/sourcebuild.texi, doc/tm.texi: Improve Texinfo formatting.\n\nFrom-SVN: r89725", "tree": {"sha": "33d94c787a6ded805929c1022260774aeed28551", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33d94c787a6ded805929c1022260774aeed28551"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78466c0eb542990e45156cab8cce4cf645b3731f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78466c0eb542990e45156cab8cce4cf645b3731f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78466c0eb542990e45156cab8cce4cf645b3731f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78466c0eb542990e45156cab8cce4cf645b3731f/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d78aa55cc9489d582a46e19478b0438d7382423a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d78aa55cc9489d582a46e19478b0438d7382423a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d78aa55cc9489d582a46e19478b0438d7382423a"}], "stats": {"total": 122, "additions": 67, "deletions": 55}, "files": [{"sha": "07ac74ad079dc6646ac02ae370614c641222bedc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78466c0eb542990e45156cab8cce4cf645b3731f", "patch": "@@ -1,3 +1,10 @@\n+2004-10-28  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\t* doc/contrib.texi, doc/cpp.texi, doc/cppopts.texi,\n+\tdoc/extend.texi, doc/gcov.texi, doc/install.texi, doc/invoke.texi,\n+\tdoc/libgcc.texi, doc/md.texi, doc/passes.texi,\n+\tdoc/sourcebuild.texi, doc/tm.texi: Improve Texinfo formatting.\n+\n 2004-10-28  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* doc/c-tree.texi, doc/cpp.texi, doc/implement-c.texi,"}, {"sha": "cf8a61b8ec5e7acc7346e63c45504ce28d6358e1", "filename": "gcc/doc/contrib.texi", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2Fdoc%2Fcontrib.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2Fdoc%2Fcontrib.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcontrib.texi?ref=78466c0eb542990e45156cab8cce4cf645b3731f", "patch": "@@ -215,15 +215,15 @@ Arnaud Desitter for helping to debug gfortran.\n @item\n Gabriel Dos Reis for contributions to G++, contributions and\n maintenance of GCC diagnostics infrastructure, libstdc++-v3,\n-including valarray<>, complex<>, maintaining the numerics library\n-(including that pesky <limits> :-) and keeping up-to-date anything\n+including @code{valarray<>}, @code{complex<>}, maintaining the numerics library\n+(including that pesky @code{<limits>} :-) and keeping up-to-date anything\n to do with numbers.\n \n @item\n Ulrich Drepper for his work on glibc, testing of GCC using glibc, ISO C99\n support, CFG dumping support, etc., plus support of the C++ runtime\n libraries including for all kinds of C interface issues, contributing and\n-maintaining complex<>, sanity checking and disbursement, configuration\n+maintaining @code{complex<>}, sanity checking and disbursement, configuration\n architecture, libio maintenance, and early math work.\n \n @item\n@@ -582,7 +582,7 @@ maintenance, and his ongoing work to make us make Fortran run fast.\n Jason Molenda for major help in the care and feeding of all the services\n on the gcc.gnu.org (formerly egcs.cygnus.com) machine---mail, web\n services, ftp services, etc etc.  Doing all this work on scrap paper and\n-the backs of envelopes would have been... difficult.\n+the backs of envelopes would have been@dots{} difficult.\n \n @item\n Catherine Moore for fixing various ugly problems we have sent her\n@@ -767,9 +767,9 @@ work in the reload pass as well a serving as release manager for\n GCC 2.95.3.\n \n @item\n-Peter Schmid for constant testing of libstdc++ -- especially application\n+Peter Schmid for constant testing of libstdc++---especially application\n testing, going above and beyond what was requested for the release\n-criteria -- and libstdc++ header file tweaks.\n+criteria---and libstdc++ header file tweaks.\n \n @item\n Jason Schroeder for jcf-dump patches."}, {"sha": "efaf86130bca6accd8e732bb8be8742dce259c22", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=78466c0eb542990e45156cab8cce4cf645b3731f", "patch": "@@ -901,7 +901,7 @@ This has two effects.  First, directories appearing before the\n quote marks.  Directories after @option{-I-} are searched for all\n headers.  Second, the directory containing the current file is not\n searched for anything, unless it happens to be one of the directories\n-named by an @option{-I} switch.  @option{-I-} is deprecated, -iquote\n+named by an @option{-I} switch.  @option{-I-} is deprecated, @option{-iquote}\n should be used instead.\n \n @option{-I. -I-} is not the same as no @option{-I} options at all, and does\n@@ -3807,10 +3807,10 @@ characters in the constant than would fit in the target @code{int} the\n compiler issues a warning, and the excess leading characters are\n ignored.\n \n-For example, 'ab' for a target with an 8-bit @code{char} would be\n-interpreted as @w{(int) ((unsigned char) 'a' * 256 + (unsigned char)\n-'b')}, and '\\234a' as @w{(int) ((unsigned char) '\\234' * 256 + (unsigned\n-char) 'a')}.\n+For example, @code{'ab'} for a target with an 8-bit @code{char} would be\n+interpreted as @w{@samp{(int) ((unsigned char) 'a' * 256 + (unsigned char)\n+'b')}}, and @code{'\\234a'} as @w{@samp{(int) ((unsigned char) '\\234' *\n+256 + (unsigned char) 'a')}}.\n \n @item Source file inclusion.\n "}, {"sha": "1905ab667283ddf54e743cc381c276991655088c", "filename": "gcc/doc/cppopts.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2Fdoc%2Fcppopts.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2Fdoc%2Fcppopts.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcppopts.texi?ref=78466c0eb542990e45156cab8cce4cf645b3731f", "patch": "@@ -314,7 +314,7 @@ a dependency output file as a side-effect of the compilation process.\n @item -MMD\n @opindex MMD\n Like @option{-MD} except mention only user header files, not system\n--header files.\n+header files.\n \n @ifclear cppmanual\n @item -fpch-deps"}, {"sha": "45653b122772214fcd03ced277dd4f60c6a4b820", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=78466c0eb542990e45156cab8cce4cf645b3731f", "patch": "@@ -1667,7 +1667,7 @@ attribute is ignored for virtual methods to allow creation of vtables\n using thunks.\n \n On the SH Symbian OS target the @code{dllimport} attribute also has\n-another affect - it can cause the vtable and run-time type information\n+another affect---it can cause the vtable and run-time type information\n for a class to be exported.  This happens when the class has a\n dllimport'ed constructor or a non-inline, non-pure virtual function\n and, for either of those two conditions, the class also has a inline\n@@ -2780,7 +2780,7 @@ return normally.\n @opindex fno-common\n The @code{common} attribute requests GCC to place a variable in\n ``common'' storage.  The @code{nocommon} attribute requests the\n-opposite -- to allocate space for it directly.\n+opposite---to allocate space for it directly.\n \n These attributes override the default chosen by the\n @option{-fno-common} and @option{-fcommon} flags respectively.\n@@ -3159,7 +3159,7 @@ attribute on all @code{enum} definitions.\n \n In the following example @code{struct my_packed_struct}'s members are\n packed closely together, but the internal layout of its @code{s} member\n-is not packed -- to do that, @code{struct my_unpacked_struct} would need to\n+is not packed---to do that, @code{struct my_unpacked_struct} would need to\n be packed too.\n \n @smallexample"}, {"sha": "bd1a51a2b4749fde119fd6de32e165d04f4d645a", "filename": "gcc/doc/gcov.texi", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2Fdoc%2Fgcov.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2Fdoc%2Fgcov.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcov.texi?ref=78466c0eb542990e45156cab8cce4cf645b3731f", "patch": "@@ -184,9 +184,10 @@ included file names will be complete path names.\n @itemx --preserve-paths\n Preserve complete path information in the names of generated\n @file{.gcov} files. Without this option, just the filename component is\n-used. With this option, all directories are used, with '/' characters\n-translated to '#' characters, '.' directory components removed and '..'\n-components renamed to '^'. This is useful if sourcefiles are in several\n+used. With this option, all directories are used, with @samp{/} characters\n+translated to @samp{#} characters, @file{.} directory components\n+removed and @file{..}\n+components renamed to @samp{^}. This is useful if sourcefiles are in several\n different directories. It also affects the @samp{-l} option.\n \n @item -f\n@@ -222,7 +223,7 @@ of the output file name is usually simply the source file name, but can\n be something more complicated if the @samp{-l} or @samp{-p} options are\n given. Refer to those options for details.\n \n-The @file{.gcov} files contain the ':' separated fields along with\n+The @file{.gcov} files contain the @samp{:} separated fields along with\n program source code. The format is\n \n @smallexample"}, {"sha": "acd480544fa6c82bc19ccaebe3a201f008399a68", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=78466c0eb542990e45156cab8cce4cf645b3731f", "patch": "@@ -670,7 +670,7 @@ transformation is explicitly asked for by one of these options.\n For native builds, some of the installed programs are also installed\n with the target alias in front of their name, as in\n @samp{i686-pc-linux-gnu-gcc}. All of the above transformations happen\n-before the target alias is prepended to the name - so, specifying\n+before the target alias is prepended to the name---so, specifying\n @option{--program-prefix=foo-} and @option{program-suffix=-3.1}, the\n resulting binary would be installed as\n @file{/usr/local/bin/i686-pc-linux-gnu-foo-gcc-3.1}.\n@@ -702,7 +702,7 @@ programs---perhaps many others.  (GCC installs its own header files in\n another directory which is based on the @option{--prefix} value.)\n \n Both the local-prefix include directory and the GCC-prefix include\n-directory are part of GCC's \"system include\" directories.  Although these\n+directory are part of GCC's ``system include'' directories.  Although these\n two directories are not fixed, they need to be searched in the proper\n order for the correct processing of the include_next directive.  The\n local-prefix include directory is searched before the GCC-prefix\n@@ -2882,7 +2882,7 @@ you install Support Level Supplement OSS646B or later, and Support Level\n Supplement OSS631C or later.  If you are using release 5.0.7 of\n OpenServer, you must have at least the first maintenance pack installed\n (this includes the relevant portions of OSS646).  OSS646, also known as\n-the \"Execution Environment Update\", provides updated link editors and\n+the ``Execution Environment Update'', provides updated link editors and\n assemblers, as well as updated standard C and math libraries.  The C\n startup modules are also updated to support the System V gABI draft, and\n GCC relies on that behavior.  OSS631 provides a collection of commonly\n@@ -2902,8 +2902,8 @@ use a modern version of GNU binutils.  Version 2.13.2.1 was used for all\n testing.  In general, only the @option{--with-gnu-as} option is tested.\n A modern bintuils (as well as a plethora of other development related\n GNU utilities) can be found in Support Level Supplement OSS658A, the\n-\"GNU Development Tools\" package.  See the SCO web and ftp sites for details.\n-That package also contains the currently \"officially supported\" version of\n+``GNU Development Tools'' package.  See the SCO web and ftp sites for details.\n+That package also contains the currently ``officially supported'' version of\n GCC, version 2.95.3.  It is useful for bootstrapping this version.\n \n @html"}, {"sha": "72d4f57dbdec046a64d82691d5c49e8c0b0277da", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=78466c0eb542990e45156cab8cce4cf645b3731f", "patch": "@@ -961,14 +961,16 @@ If you are compiling multiple source files, this option tells the driver\n to pass all the source files to the compiler at once (for those\n languages for which the compiler can handle this).  This will allow\n intermodule analysis (IMA) to be performed by the compiler.  Currently the only\n-language for which this is supported is C.  If you pass source files for\n+language for which this is supported is C@.  If you pass source files for\n multiple languages to the driver, using this option, the driver will invoke\n the compiler(s) that support IMA once each, passing each compiler all the\n source files appropriate for it.  For those languages that do not support\n IMA this option will be ignored, and the compiler will be invoked once for\n each source file in that language.  If you use this option in conjunction\n-with -save-temps, the compiler will generate multiple pre-processed files\n-(one for each source file), but only one (combined) .o or .s file.\n+with @option{-save-temps}, the compiler will generate multiple\n+pre-processed files\n+(one for each source file), but only one (combined) @file{.o} or\n+@file{.s} file.\n \n @item --help\n @opindex help\n@@ -3957,7 +3959,7 @@ This is useful when @command{gcc} prints the error message\n To resolve this you either need to put @file{cpp0} and the other compiler\n components where @command{gcc} expects to find them, or you can set the environment\n variable @env{GCC_EXEC_PREFIX} to the directory where you installed them.\n-Don't forget the trailing '/'.\n+Don't forget the trailing @samp{/}.\n @xref{Environment Variables}.\n \n @item -dumpmachine\n@@ -5182,7 +5184,7 @@ program.\n With @option{-fbranch-probabilities}, it reads back the data gathered\n and issues prefetch instructions according to them.  In addition to the opportunities\n noticed by @option{-fprefetch-loop-arrays}, it also notices more complicated\n-memory access patterns -- for example accesses to the data stored in linked\n+memory access patterns---for example accesses to the data stored in linked\n list whose elements are usually allocated sequentially.\n \n In order to prevent issuing double prefetches, usage of\n@@ -12146,7 +12148,7 @@ The default without @option{-fpic} is @code{initial-exec}; with\n \n @item -fvisibility=@var{default|internal|hidden|protected}\n @opindex fvisibility\n-Set the default ELF image symbol visibility to the specified option - all\n+Set the default ELF image symbol visibility to the specified option---all\n symbols will be marked with this unless overridden within the code.\n Using this feature can very substantially improve linking and\n load times of shared object libraries, produce more optimized\n@@ -12158,14 +12160,15 @@ Despite the nomenclature, @code{default} always means public ie;\n available to be linked against from outside the shared object.\n @code{protected} and @code{internal} are pretty useless in real-world\n usage so the only other commonly used option will be @code{hidden}.\n-The default if -fvisibility isn't specified is @code{default} ie; make every\n-symbol public - this causes the same behavior as previous versions of\n+The default if @option{-fvisibility} isn't specified is\n+@code{default}, i.e., make every\n+symbol public---this causes the same behavior as previous versions of\n GCC.\n      \n A good explanation of the benefits offered by ensuring ELF\n symbols have the correct visibility is given by ``How To Write\n Shared Libraries'' by Ulrich Drepper (which can be found at\n-@w{@uref{http://people.redhat.com/~drepper/}}) - however a superior\n+@w{@uref{http://people.redhat.com/~drepper/}})---however a superior\n solution made possible by this option to marking things hidden when\n the default is public is to make the default hidden and mark things\n public. This is the norm with DLL's on Windows and with @option{-fvisibility=hidden}\n@@ -12183,7 +12186,7 @@ times. Bear in mind that symbol visibility should be viewed @strong{as\n part of the API interface contract} and thus all new code should\n always specify visibility when it is not the default ie; declarations\n only for use within the local DSO should @strong{always} be marked explicitly\n-as hidden as so to avoid PLT indirection overheads - making this\n+as hidden as so to avoid PLT indirection overheads---making this\n abundantly clear also aids readability and self-documentation of the code.\n Note that due to ISO C++ specification requirements, operator new and\n operator delete must always be of default visibility."}, {"sha": "87fbe56ae324964a6b0a025020556fab76f52c28", "filename": "gcc/doc/libgcc.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2Fdoc%2Flibgcc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2Fdoc%2Flibgcc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Flibgcc.texi?ref=78466c0eb542990e45156cab8cce4cf645b3731f", "patch": "@@ -364,7 +364,7 @@ There are two sets of basic comparison functions.\n @deftypefnx {Runtime Function} int __cmpdf2 (double @var{a}, double @var{b})\n @deftypefnx {Runtime Function} int __cmptf2 (long double @var{a}, long double @var{b})\n These functions calculate @math{a <=> b}.  That is, if @var{a} is less\n-than @var{b}, they return -1; if @var{a} is greater than @var{b}, they\n+than @var{b}, they return @minus{}1; if @var{a} is greater than @var{b}, they\n return 1; and if @var{a} and @var{b} are equal they return 0.  If\n either argument is NaN they return 1, but you should not rely on this;\n if NaN is a possibility, use one of the higher-level comparison"}, {"sha": "23b5e524d0005bfdc491590f4b075bb9571c535b", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=78466c0eb542990e45156cab8cce4cf645b3731f", "patch": "@@ -1962,7 +1962,7 @@ Floating-point constant 0.0 or 1.0\n The constant zero\n \n @item P\n-0 or -1 for @code{dep} instruction\n+0 or @minus{}1 for @code{dep} instruction\n \n @item Q\n Non-volatile memory for floating-point loads and stores\n@@ -2103,7 +2103,7 @@ Non-pointer registers (not @samp{SP}, @samp{DP}, @samp{IP})\n Non-SP registers (everything except @samp{SP})\n \n @item R\n-Indirect through @samp{IP} - Avoid this except for @code{QImode}, since we\n+Indirect through @samp{IP}---Avoid this except for @code{QImode}, since we\n can't access extra bytes\n \n @item S\n@@ -2234,13 +2234,13 @@ Floating point constant that is not a 68881 constant\n @item Motorola 68HC11 & 68HC12 families---@file{m68hc11.h}\n @table @code\n @item a\n-Register 'a'\n+Register `a'\n \n @item b\n-Register 'b'\n+Register `b'\n \n @item d\n-Register 'd'\n+Register `d'\n \n @item q\n An 8-bit register\n@@ -2255,13 +2255,13 @@ A soft register _.d1 to _.d31\n Stack pointer register\n \n @item x\n-Register 'x'\n+Register `x'\n \n @item y\n-Register 'y'\n+Register `y'\n \n @item z\n-Pseudo register 'z' (replaced by 'x' or 'y' at the end)\n+Pseudo register `z' (replaced by `x' or `y' at the end)\n \n @item A\n An address register: x, y or z\n@@ -2495,7 +2495,7 @@ Multiple letter constraint followed by 4 parameter letters.\n          @item D,S,H:\n          mode of the containing operand\n          @item 0,F:\n-         value of the other parts (F - all bits set)\n+         value of the other parts (F---all bits set)\n @end table\n The constraint matches if the specified part of a constant\n has a value different from it's other parts."}, {"sha": "2d3396a2732c6d02751533ff86846486b4295306", "filename": "gcc/doc/passes.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2Fdoc%2Fpasses.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2Fdoc%2Fpasses.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fpasses.texi?ref=78466c0eb542990e45156cab8cce4cf645b3731f", "patch": "@@ -151,7 +151,7 @@ Its job is to run all of the individual passes in the correct order,\n and take care of standard bookkeeping that applies to every pass.\n \n The theory of operation is that each pass defines a structure that\n-represents everything we need to know about that pass --- when it\n+represents everything we need to know about that pass---when it\n should be run, how it should be run, what intermediate language \n form or on-the-side data structures it needs.  We register the pass\n to be run in some particular order, and the pass manager arranges"}, {"sha": "dd5b22c00684691577f5e61e12e2268eaea8a02a", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=78466c0eb542990e45156cab8cce4cf645b3731f", "patch": "@@ -648,7 +648,7 @@ Move to the stage directory files not included in @code{stagestuff} in\n \n @item lang.opt\n This file registers the set of switches that the front end accepts on\n-the command line, and their --help text.  The file format is\n+the command line, and their @option{--help} text.  The file format is\n documented in the file @file{c.opt}.  These files are processed by the\n script @file{opts.sh}.\n @item lang-specs.h\n@@ -928,9 +928,10 @@ to chapter 9, which deals with tasking features of the language.\n There is also an extra chapter called @file{gcc} containing a template for\n creating new executable tests.\n \n-The tests are run using two 'sh' scripts: run_acats and run_all.sh\n-To run the tests using a simulator or a cross target, see the small\n-customization section at the top of run_all.sh\n+The tests are run using two @command{sh} scripts: @file{run_acats} and\n+@file{run_all.sh}.  To run the tests using a simulator or a cross\n+target, see the small\n+customization section at the top of @file{run_all.sh}.\n \n These tests are run using the build tree: they can be run without doing\n a @code{make install}."}, {"sha": "bc11c413057230b7fb0f395f432911bc8a32a53c", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78466c0eb542990e45156cab8cce4cf645b3731f/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=78466c0eb542990e45156cab8cce4cf645b3731f", "patch": "@@ -3811,7 +3811,7 @@ declaration node of the function.  @var{fndecl} is also set when\n being compiled.  @var{n_named_args} is set to the number of named\n arguments, including a structure return address if it is passed as a\n parameter, when making a call.  When processing incoming arguments,\n-@var{n_named_args} is set to -1.\n+@var{n_named_args} is set to @minus{}1.\n \n When processing a call to a compiler support library function,\n @var{libname} identifies which one.  It is a @code{symbol_ref} rtx which\n@@ -4830,7 +4830,7 @@ functions (like @code{__cmpdi2}) return 0 to indicate that the first\n operand is smaller than the second, 1 to indicate that they are equal,\n and 2 to indicate that the first operand is greater than the second.\n If this macro evalutes to @code{false} the comparison functions return\n--1, 0, and 1 instead of 0, 1, and 2.  If the target uses the routines\n+@minus{}1, 0, and 1 instead of 0, 1, and 2.  If the target uses the routines\n in @file{libgcc.a}, you do not need to define this macro.\n @end defmac\n \n@@ -5829,7 +5829,7 @@ where (a) it's practically hopeless to predict the actual data/resource\n delays, however: (b) there's a better chance to predict the actual grouping\n that will be formed, and (c) correctly emulating the grouping can be very\n important.  In such targets one may want to allow issuing dependent insns\n-closer to one another - i.e, closer than the dependence distance;  however,\n+closer to one another---i.e., closer than the dependence distance;  however,\n not in cases of \"costly dependences\", which this hooks allows to define.\n @end deftypefn\n \n@@ -8360,8 +8360,8 @@ If you define @code{OPTIMIZE_MODE_SWITCHING}, you have to define this as\n initializer for an array of integers.  Each initializer element\n N refers to an entity that needs mode switching, and specifies the number\n of different modes that might need to be set for this entity.\n-The position of the initializer in the initializer - starting counting at\n-zero - determines the integer that is used to refer to the mode-switched\n+The position of the initializer in the initializer---starting counting at\n+zero---determines the integer that is used to refer to the mode-switched\n entity in question.\n In macros that take mode arguments / yield a mode result, modes are\n represented as numbers 0 @dots{} N @minus{} 1.  N is used to specify that no mode\n@@ -8599,7 +8599,7 @@ array cookies.  The default is to return @code{false}.\n @deftypefn {Target Hook} int TARGET_CXX_IMPORT_EXPORT_CLASS (tree  @var{type}, int @var{import_export})\n If defined by a backend this hook allows the decision made to export\n class @var{type} to be overruled.  Upon entry @var{import_export}\n-will contain 1 if the class is going to be exported, -1 if it is going\n+will contain 1 if the class is going to be exported, @minus{}1 if it is going\n to be imported and 0 otherwise.  This function should return the\n modified value and perform any other actions necessary to support the\n backend's targeted operating system."}]}