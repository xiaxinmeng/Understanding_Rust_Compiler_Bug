{"sha": "0bcc6fc75583d6f1528ec8ab9a5e8826d5cf97c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJjYzZmYzc1NTgzZDZmMTUyOGVjOGFiOWE1ZTg4MjZkNWNmOTdjMA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-10-28T19:11:15Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-10-28T19:11:15Z"}, "message": "(make_decl_rtl,assemble_variable): Allow named sections for\nuninitialized variables.\n\nFrom-SVN: r13053", "tree": {"sha": "924415258df88805098e2824cd3f5f1c8489397b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/924415258df88805098e2824cd3f5f1c8489397b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0bcc6fc75583d6f1528ec8ab9a5e8826d5cf97c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bcc6fc75583d6f1528ec8ab9a5e8826d5cf97c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bcc6fc75583d6f1528ec8ab9a5e8826d5cf97c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bcc6fc75583d6f1528ec8ab9a5e8826d5cf97c0/comments", "author": null, "committer": null, "parents": [{"sha": "5507b94b23cf2315842a3ad79d7ee24157da999c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5507b94b23cf2315842a3ad79d7ee24157da999c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5507b94b23cf2315842a3ad79d7ee24157da999c"}], "stats": {"total": 16, "additions": 3, "deletions": 13}, "files": [{"sha": "77798286ba576407a2df1f4ab2993eba5a853ba6", "filename": "gcc/varasm.c", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bcc6fc75583d6f1528ec8ab9a5e8826d5cf97c0/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bcc6fc75583d6f1528ec8ab9a5e8826d5cf97c0/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=0bcc6fc75583d6f1528ec8ab9a5e8826d5cf97c0", "patch": "@@ -706,23 +706,13 @@ make_decl_rtl (decl, asmspec, top_level)\n \t\tglobalize_reg (reg_number + --nregs);\n \t    }\n \t}\n-      /* Specifying a section attribute on an uninitialized variable does not\n-\t (and cannot) cause it to be put in the given section.  The linker\n-\t can only put initialized objects in specific sections, everything\n-\t else goes in bss for the linker to sort out later (otherwise the\n-\t linker would give a duplicate definition error for each compilation\n-\t unit that behaved thusly).  So warn the user.  */\n+      /* Specifying a section attribute on a variable forces it into a\n+         non-.bss section, and thus it cannot be common. */\n       else if (TREE_CODE (decl) == VAR_DECL\n \t       && DECL_SECTION_NAME (decl) != NULL_TREE\n \t       && DECL_INITIAL (decl) == NULL_TREE\n \t       && DECL_COMMON (decl))\n-\t{\n-\t  warning_with_decl (decl,\n-\t\t\t     \"section attribute ignored for uninitialized variable `%s'\");\n-\t  /* Remove the section name so subsequent declarations won't see it.\n-\t     We are ignoring it, remember.  */\n-\t  DECL_SECTION_NAME (decl) = NULL_TREE;\n-\t}\n+          DECL_COMMON (decl) = 0;\n \n       /* Now handle ordinary static variables and functions (in memory).\n \t Also handle vars declared register invalidly.  */"}]}