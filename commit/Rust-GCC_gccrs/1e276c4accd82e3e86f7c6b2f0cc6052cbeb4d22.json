{"sha": "1e276c4accd82e3e86f7c6b2f0cc6052cbeb4d22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUyNzZjNGFjY2Q4MmUzZTg2ZjdjNmIyZjBjYzYwNTJjYmViNGQyMg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-08T21:25:25Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-08T21:25:25Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r940", "tree": {"sha": "fb42317473c54f04cd8c4f8f0c384c62efb3fb70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb42317473c54f04cd8c4f8f0c384c62efb3fb70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e276c4accd82e3e86f7c6b2f0cc6052cbeb4d22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e276c4accd82e3e86f7c6b2f0cc6052cbeb4d22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e276c4accd82e3e86f7c6b2f0cc6052cbeb4d22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e276c4accd82e3e86f7c6b2f0cc6052cbeb4d22/comments", "author": null, "committer": null, "parents": [{"sha": "ae34b95d5a9db73b003e146b7e485fca90fd797a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae34b95d5a9db73b003e146b7e485fca90fd797a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae34b95d5a9db73b003e146b7e485fca90fd797a"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "584a4a56bdaadd6e2e0c989b212be322a68e69c7", "filename": "gcc/c-common.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e276c4accd82e3e86f7c6b2f0cc6052cbeb4d22/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e276c4accd82e3e86f7c6b2f0cc6052cbeb4d22/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=1e276c4accd82e3e86f7c6b2f0cc6052cbeb4d22", "patch": "@@ -623,7 +623,7 @@ shorten_compare (op0_ptr, op1_ptr, restype_ptr, rescode_ptr)\n \t  type = unsigned_type (type);\n \t}\n \n-      if (max_lt && !unsignedp0)\n+      if (!max_gt && !unsignedp0)\n \t{\n \t  /* This is the case of (char)x >?< 0x80, which people used to use\n \t     expecting old C compilers to change the 0x80 into -0x80.  */\n@@ -633,9 +633,9 @@ shorten_compare (op0_ptr, op1_ptr, restype_ptr, rescode_ptr)\n \t    warning (\"comparison is always 1 due to limited range of data type\");\n \t}\n \n-      if (min_gt && unsignedp0)\n+      if (!min_lt && unsignedp0)\n \t{\n-\t  /* This is the case of (unsigned char)x >?< -1.  */\n+\t  /* This is the case of (unsigned char)x >?< -1 or < 0.  */\n \t  if (val == integer_zero_node)\n \t    warning (\"comparison is always 0 due to limited range of data type\");\n \t  if (val == integer_one_node)"}]}