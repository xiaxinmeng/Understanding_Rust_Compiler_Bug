{"sha": "80b6ba28787d32f5ca63d9a643c110474ba79160", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBiNmJhMjg3ODdkMzJmNWNhNjNkOWE2NDNjMTEwNDc0YmE3OTE2MA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2014-08-14T23:36:22Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2014-08-14T23:36:22Z"}, "message": "re PR tree-optimization/62091 (ice in before_dom_children)\n\n\n\tPR tree-optimization/62091\n\t* g++.dg/ipa/devirt-38.C: New testcase.\n\t* tree-ssa-alias.c (walk_aliased_vdefs_1): Do not clear\n\tfunction_entry_reached.\n\t(walk_aliased_vdefs): Clear it here.\n\t* ipa-devirt.c (check_stmt_for_type_change): Handle static storage.\n\nFrom-SVN: r213991", "tree": {"sha": "f6a1bda569f302e135bad3e65c640895625724a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6a1bda569f302e135bad3e65c640895625724a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80b6ba28787d32f5ca63d9a643c110474ba79160", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80b6ba28787d32f5ca63d9a643c110474ba79160", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80b6ba28787d32f5ca63d9a643c110474ba79160", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80b6ba28787d32f5ca63d9a643c110474ba79160/comments", "author": null, "committer": null, "parents": [{"sha": "56b1f114de93c27600b9b295ff7efcf9caedfc72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56b1f114de93c27600b9b295ff7efcf9caedfc72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56b1f114de93c27600b9b295ff7efcf9caedfc72"}], "stats": {"total": 50, "additions": 48, "deletions": 2}, "files": [{"sha": "e5e085259b8d54e0298603e5a5bbb4a2c510e833", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b6ba28787d32f5ca63d9a643c110474ba79160/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b6ba28787d32f5ca63d9a643c110474ba79160/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=80b6ba28787d32f5ca63d9a643c110474ba79160", "patch": "@@ -1,3 +1,11 @@\n+2014-08-14  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR tree-optimization/62091\n+\t* tree-ssa-alias.c (walk_aliased_vdefs_1): Do not clear\n+\tfunction_entry_reached.\n+\t(walk_aliased_vdefs): Clear it here.\n+\t* ipa-devirt.c (check_stmt_for_type_change): Handle static storage.\n+\n 2014-08-14  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-utils.h (compare_virtual_tables): Declare."}, {"sha": "ff206eee259efc63d176251a832f42e77c6b602a", "filename": "gcc/ipa-devirt.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b6ba28787d32f5ca63d9a643c110474ba79160/gcc%2Fipa-devirt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b6ba28787d32f5ca63d9a643c110474ba79160/gcc%2Fipa-devirt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.c?ref=80b6ba28787d32f5ca63d9a643c110474ba79160", "patch": "@@ -2777,6 +2777,8 @@ check_stmt_for_type_change (ao_ref *ao ATTRIBUTE_UNUSED, tree vdef, void *data)\n \t\t\t  * BITS_PER_UNIT;\n \t\top = TREE_OPERAND (op, 0);\n \t      }\n+\t    else if (DECL_P (op))\n+\t      ;\n \t    else\n \t      {\n                 tci->speculative = true;"}, {"sha": "73a6ab835bc8f36f7191a8981bc73cc57b1f1aef", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b6ba28787d32f5ca63d9a643c110474ba79160/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b6ba28787d32f5ca63d9a643c110474ba79160/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=80b6ba28787d32f5ca63d9a643c110474ba79160", "patch": "@@ -1,3 +1,8 @@\n+2014-08-14  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR tree-optimization/62091\n+\t* g++.dg/ipa/devirt-38.C: New testcase.\n+\n 2014-08-14  Marek Polacek  <polacek@redhat.com>\n \n \tDR 458"}, {"sha": "be8cbdfa563b2981f015ece6e24cb892cf5e2bfa", "filename": "gcc/testsuite/g++.dg/ipa/devirt-38.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b6ba28787d32f5ca63d9a643c110474ba79160/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-38.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b6ba28787d32f5ca63d9a643c110474ba79160/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-38.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-38.C?ref=80b6ba28787d32f5ca63d9a643c110474ba79160", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\"  } */\n+class SnmpSyntax\n+{\n+public:\n+  virtual SnmpSyntax *m_fn1 () const;\n+  ~SnmpSyntax () {}\n+  virtual SnmpSyntax &operator=(const SnmpSyntax &);\n+};\n+\n+class A : public SnmpSyntax\n+{\n+public:\n+  A (int);\n+  SnmpSyntax *m_fn1 () const {}\n+  SnmpSyntax &operator=(const SnmpSyntax &);\n+};\n+int a;\n+void fn1 ()\n+{\n+  for (;; a++)\n+    switch (0)\n+    case 0:\n+      {\n+        A b (0);\n+        SnmpSyntax &c = b;\n+        c.m_fn1 ();\n+      }\n+}\n+// Devirtualization to A::m_fn1 would be possible, but we can not do it at the moment"}, {"sha": "67419a9cb2f81a9a6ab5aaefb59ff517bb8e3e43", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b6ba28787d32f5ca63d9a643c110474ba79160/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b6ba28787d32f5ca63d9a643c110474ba79160/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=80b6ba28787d32f5ca63d9a643c110474ba79160", "patch": "@@ -2658,8 +2658,6 @@ walk_aliased_vdefs_1 (ao_ref *ref, tree vdef,\n \t\t      bitmap *visited, unsigned int cnt,\n \t\t      bool *function_entry_reached)\n {\n-  if (function_entry_reached)\n-    *function_entry_reached = false;\n   do\n     {\n       gimple def_stmt = SSA_NAME_DEF_STMT (vdef);\n@@ -2709,6 +2707,9 @@ walk_aliased_vdefs (ao_ref *ref, tree vdef,\n \n   timevar_push (TV_ALIAS_STMT_WALK);\n \n+  if (function_entry_reached)\n+    *function_entry_reached = false;\n+\n   ret = walk_aliased_vdefs_1 (ref, vdef, walker, data,\n \t\t\t      visited ? visited : &local_visited, 0,\n \t\t\t      function_entry_reached);"}]}