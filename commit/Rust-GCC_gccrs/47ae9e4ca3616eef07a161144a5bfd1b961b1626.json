{"sha": "47ae9e4ca3616eef07a161144a5bfd1b961b1626", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdhZTllNGNhMzYxNmVlZjA3YTE2MTE0NGE1YmZkMWI5NjFiMTYyNg==", "commit": {"author": {"name": "Sebastian Pop", "email": "pop@cri.ensmp.fr", "date": "2005-11-04T19:10:04Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2005-11-04T19:10:04Z"}, "message": "tree-scalar-evolution.c (instantiate_parameters_1, [...]): Compute the size of an expression to be instantiated and give up the...\n\n\tPR/18595\n\t* tree-scalar-evolution.c (instantiate_parameters_1,\n\tinstantiate_parameters, resolve_mixers): Compute the size of an\n\texpression to be instantiated and give up the instantiation if the\n\tsize exceeds PARAM_SCEV_MAX_EXPR_SIZE.\n\nFrom-SVN: r106501", "tree": {"sha": "1bcb6e7aad000c72981e3e82c64ba3b71ccbcc08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bcb6e7aad000c72981e3e82c64ba3b71ccbcc08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47ae9e4ca3616eef07a161144a5bfd1b961b1626", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47ae9e4ca3616eef07a161144a5bfd1b961b1626", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47ae9e4ca3616eef07a161144a5bfd1b961b1626", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47ae9e4ca3616eef07a161144a5bfd1b961b1626/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d66aecaffd36ef82905a4b225ac5e0932231c9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d66aecaffd36ef82905a4b225ac5e0932231c9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d66aecaffd36ef82905a4b225ac5e0932231c9d"}], "stats": {"total": 55, "additions": 35, "deletions": 20}, "files": [{"sha": "efcd296333c653275ae6455f25b6d35f8d70cd1f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47ae9e4ca3616eef07a161144a5bfd1b961b1626/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47ae9e4ca3616eef07a161144a5bfd1b961b1626/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47ae9e4ca3616eef07a161144a5bfd1b961b1626", "patch": "@@ -1,3 +1,11 @@\n+2005-11-04  Sebastian Pop  <pop@cri.ensmp.fr>\n+\n+\tPR/18595\n+\t* tree-scalar-evolution.c (instantiate_parameters_1,\n+\tinstantiate_parameters, resolve_mixers): Compute the size of an\n+\texpression to be instantiated and give up the instantiation if the\n+\tsize exceeds PARAM_SCEV_MAX_EXPR_SIZE.\n+\n 2005-11-04  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-flow.h (ref_contains_indirect_ref): Rename to"}, {"sha": "104445af1ecf57f6fd5423623129423eac0dca9a", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 27, "deletions": 20, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47ae9e4ca3616eef07a161144a5bfd1b961b1626/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47ae9e4ca3616eef07a161144a5bfd1b961b1626/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=47ae9e4ca3616eef07a161144a5bfd1b961b1626", "patch": "@@ -1982,7 +1982,8 @@ loop_closed_phi_def (tree var)\n /* Analyze all the parameters of the chrec that were left under a symbolic form,\n    with respect to LOOP.  CHREC is the chrec to instantiate.  CACHE is the cache\n    of already instantiated values.  FLAGS modify the way chrecs are\n-   instantiated.  */\n+   instantiated.  SIZE_EXPR is used for computing the size of the expression to\n+   be instantiated, and to stop if it exceeds some limit.  */\n \n /* Values for FLAGS.  */\n enum\n@@ -1995,12 +1996,17 @@ enum\n };\n   \n static tree\n-instantiate_parameters_1 (struct loop *loop, tree chrec, int flags, htab_t cache)\n+instantiate_parameters_1 (struct loop *loop, tree chrec, int flags, htab_t cache,\n+\t\t\t  int size_expr)\n {\n   tree res, op0, op1, op2;\n   basic_block def_bb;\n   struct loop *def_loop;\n \n+  /* Give up if the expression is larger than the MAX that we allow.  */\n+  if (size_expr++ > PARAM_VALUE (PARAM_SCEV_MAX_EXPR_SIZE))\n+    return chrec_dont_know;\n+\n   if (automatically_generated_chrec_p (chrec)\n       || is_gimple_min_invariant (chrec))\n     return chrec;\n@@ -2068,7 +2074,7 @@ instantiate_parameters_1 (struct loop *loop, tree chrec, int flags, htab_t cache\n \t}\n \n       else if (res != chrec_dont_know)\n-\tres = instantiate_parameters_1 (loop, res, flags, cache);\n+\tres = instantiate_parameters_1 (loop, res, flags, cache, size_expr);\n \n       bitmap_clear_bit (already_instantiated, SSA_NAME_VERSION (chrec));\n \n@@ -2078,12 +2084,12 @@ instantiate_parameters_1 (struct loop *loop, tree chrec, int flags, htab_t cache\n \n     case POLYNOMIAL_CHREC:\n       op0 = instantiate_parameters_1 (loop, CHREC_LEFT (chrec),\n-\t\t\t\t      flags, cache);\n+\t\t\t\t      flags, cache, size_expr);\n       if (op0 == chrec_dont_know)\n \treturn chrec_dont_know;\n \n       op1 = instantiate_parameters_1 (loop, CHREC_RIGHT (chrec),\n-\t\t\t\t      flags, cache);\n+\t\t\t\t      flags, cache, size_expr);\n       if (op1 == chrec_dont_know)\n \treturn chrec_dont_know;\n \n@@ -2094,12 +2100,12 @@ instantiate_parameters_1 (struct loop *loop, tree chrec, int flags, htab_t cache\n \n     case PLUS_EXPR:\n       op0 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 0),\n-\t\t\t\t      flags, cache);\n+\t\t\t\t      flags, cache, size_expr);\n       if (op0 == chrec_dont_know)\n \treturn chrec_dont_know;\n \n       op1 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 1),\n-\t\t\t\t      flags, cache);\n+\t\t\t\t      flags, cache, size_expr);\n       if (op1 == chrec_dont_know)\n \treturn chrec_dont_know;\n \n@@ -2110,12 +2116,12 @@ instantiate_parameters_1 (struct loop *loop, tree chrec, int flags, htab_t cache\n \n     case MINUS_EXPR:\n       op0 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 0),\n-\t\t\t\t      flags, cache);\n+\t\t\t\t      flags, cache, size_expr);\n       if (op0 == chrec_dont_know)\n \treturn chrec_dont_know;\n \n       op1 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 1),\n-\t\t\t\t      flags, cache);\n+\t\t\t\t      flags, cache, size_expr);\n       if (op1 == chrec_dont_know)\n \treturn chrec_dont_know;\n \n@@ -2126,12 +2132,12 @@ instantiate_parameters_1 (struct loop *loop, tree chrec, int flags, htab_t cache\n \n     case MULT_EXPR:\n       op0 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 0),\n-\t\t\t\t      flags, cache);\n+\t\t\t\t      flags, cache, size_expr);\n       if (op0 == chrec_dont_know)\n \treturn chrec_dont_know;\n \n       op1 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 1),\n-\t\t\t\t      flags, cache);\n+\t\t\t\t      flags, cache, size_expr);\n       if (op1 == chrec_dont_know)\n \treturn chrec_dont_know;\n \n@@ -2144,7 +2150,7 @@ instantiate_parameters_1 (struct loop *loop, tree chrec, int flags, htab_t cache\n     case CONVERT_EXPR:\n     case NON_LVALUE_EXPR:\n       op0 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 0),\n-\t\t\t\t      flags, cache);\n+\t\t\t\t      flags, cache, size_expr);\n       if (op0 == chrec_dont_know)\n         return chrec_dont_know;\n \n@@ -2174,17 +2180,17 @@ instantiate_parameters_1 (struct loop *loop, tree chrec, int flags, htab_t cache\n     {\n     case 3:\n       op0 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 0),\n-\t\t\t\t      flags, cache);\n+\t\t\t\t      flags, cache, size_expr);\n       if (op0 == chrec_dont_know)\n \treturn chrec_dont_know;\n \n       op1 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 1),\n-\t\t\t\t      flags, cache);\n+\t\t\t\t      flags, cache, size_expr);\n       if (op1 == chrec_dont_know)\n \treturn chrec_dont_know;\n \n       op2 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 2),\n-\t\t\t\t      flags, cache);\n+\t\t\t\t      flags, cache, size_expr);\n       if (op2 == chrec_dont_know)\n         return chrec_dont_know;\n \n@@ -2198,12 +2204,12 @@ instantiate_parameters_1 (struct loop *loop, tree chrec, int flags, htab_t cache\n \n     case 2:\n       op0 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 0),\n-\t\t\t\t      flags, cache);\n+\t\t\t\t      flags, cache, size_expr);\n       if (op0 == chrec_dont_know)\n \treturn chrec_dont_know;\n \n       op1 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 1),\n-\t\t\t\t      flags, cache);\n+\t\t\t\t      flags, cache, size_expr);\n       if (op1 == chrec_dont_know)\n         return chrec_dont_know;\n \n@@ -2214,7 +2220,7 @@ instantiate_parameters_1 (struct loop *loop, tree chrec, int flags, htab_t cache\n \t    \n     case 1:\n       op0 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 0),\n-\t\t\t\t      flags, cache);\n+\t\t\t\t      flags, cache, size_expr);\n       if (op0 == chrec_dont_know)\n         return chrec_dont_know;\n       if (op0 == TREE_OPERAND (chrec, 0))\n@@ -2252,7 +2258,8 @@ instantiate_parameters (struct loop *loop,\n       fprintf (dump_file, \")\\n\");\n     }\n  \n-  res = instantiate_parameters_1 (loop, chrec, INSERT_SUPERLOOP_CHRECS, cache);\n+  res = instantiate_parameters_1 (loop, chrec, INSERT_SUPERLOOP_CHRECS, cache,\n+\t\t\t\t  0);\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n@@ -2275,7 +2282,7 @@ static tree\n resolve_mixers (struct loop *loop, tree chrec)\n {\n   htab_t cache = htab_create (10, hash_scev_info, eq_scev_info, del_scev_info);\n-  tree ret = instantiate_parameters_1 (loop, chrec, FOLD_CONVERSIONS, cache);\n+  tree ret = instantiate_parameters_1 (loop, chrec, FOLD_CONVERSIONS, cache, 0);\n   htab_delete (cache);\n   return ret;\n }"}]}