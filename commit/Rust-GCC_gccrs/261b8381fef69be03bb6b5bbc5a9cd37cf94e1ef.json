{"sha": "261b8381fef69be03bb6b5bbc5a9cd37cf94e1ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjYxYjgzODFmZWY2OWJlMDNiYjZiNWJiYzVhOWNkMzdjZjk0ZTFlZg==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.org", "date": "2008-12-31T13:52:53Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2008-12-31T13:52:53Z"}, "message": "re PR target/35460 (undefined reference to `__builtin_stdarg_start' when compiling 2/29 snapshot on OpenBSD)\n\n2008-12-31  Andreas Tobler  <a.tobler@schweiz.org>\n\n\tPR target/35460\n\t* inclhack.def (openbsd_va_start): Use __builtin_va_start\n\tfor OpenBSD.\n\t* fixincl.x: Regenerate.\n\nFrom-SVN: r142980", "tree": {"sha": "0192e18324612f701182b4acf56c4368d778b837", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0192e18324612f701182b4acf56c4368d778b837"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/261b8381fef69be03bb6b5bbc5a9cd37cf94e1ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/261b8381fef69be03bb6b5bbc5a9cd37cf94e1ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/261b8381fef69be03bb6b5bbc5a9cd37cf94e1ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/261b8381fef69be03bb6b5bbc5a9cd37cf94e1ef/comments", "author": null, "committer": null, "parents": [{"sha": "cc81fd182879509b81a950dd586f8269c970502f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc81fd182879509b81a950dd586f8269c970502f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc81fd182879509b81a950dd586f8269c970502f"}], "stats": {"total": 73, "additions": 68, "deletions": 5}, "files": [{"sha": "876b2c71148638c79960a857b3146def2e3fc152", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261b8381fef69be03bb6b5bbc5a9cd37cf94e1ef/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261b8381fef69be03bb6b5bbc5a9cd37cf94e1ef/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=261b8381fef69be03bb6b5bbc5a9cd37cf94e1ef", "patch": "@@ -1,3 +1,10 @@\n+2008-12-31  Andreas Tobler  <a.tobler@schweiz.org>\n+\n+\tPR target/35460\n+\t* inclhack.def (openbsd_va_start): Use __builtin_va_start\n+\tfor OpenBSD.\n+\t* fixincl.x: Regenerate.\n+\n 2008-12-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* configure: Regenerate."}, {"sha": "0e28396661564c8e75370101eed43d31205d01cc", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 48, "deletions": 5, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261b8381fef69be03bb6b5bbc5a9cd37cf94e1ef/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261b8381fef69be03bb6b5bbc5a9cd37cf94e1ef/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=261b8381fef69be03bb6b5bbc5a9cd37cf94e1ef", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Wednesday December 10, 2008 at 10:13:23 AM PST\n+ * It has been AutoGen-ed  Wednesday December 31, 2008 at 02:49:07 PM CET\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Wed Dec 10 10:13:23 PST 2008\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Wed Dec 31 14:49:07 CET 2008\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 177 fixup descriptions.\n+ * This file contains 178 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -4732,6 +4732,43 @@ static const char* apzObstack_Lvalue_CastPatch[] = {\n     \"((*((%1*)%2) = (%3)), (%2 += sizeof (%1)))\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Openbsd_Va_Start fix\n+ */\n+tSCC zOpenbsd_Va_StartName[] =\n+     \"openbsd_va_start\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zOpenbsd_Va_StartList[] =\n+  \"stdarg.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzOpenbsd_Va_StartMachs[] = {\n+        \"*-*-openbsd*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zOpenbsd_Va_StartSelect0[] =\n+       \"__builtin_stdarg_start\";\n+\n+#define    OPENBSD_VA_START_TEST_CT  1\n+static tTestDesc aOpenbsd_Va_StartTests[] = {\n+  { TT_EGREP,    zOpenbsd_Va_StartSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Openbsd_Va_Start\n+ */\n+static const char* apzOpenbsd_Va_StartPatch[] = {\n+    \"format\",\n+    \"__builtin_va_start\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Osf_Namespace_A fix\n@@ -7182,9 +7219,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          223\n+#define REGEX_COUNT          224\n #define MACH_LIST_SIZE_LIMIT 181\n-#define FIX_COUNT            177\n+#define FIX_COUNT            178\n \n /*\n  *  Enumerate the fixes\n@@ -7307,6 +7344,7 @@ typedef enum {\n     NEXT_WAIT_UNION_FIXIDX,\n     NODEENT_SYNTAX_FIXIDX,\n     OBSTACK_LVALUE_CAST_FIXIDX,\n+    OPENBSD_VA_START_FIXIDX,\n     OSF_NAMESPACE_A_FIXIDX,\n     OSF_NAMESPACE_C_FIXIDX,\n     PTHREAD_PAGE_SIZE_FIXIDX,\n@@ -7955,6 +7993,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      OBSTACK_LVALUE_CAST_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aObstack_Lvalue_CastTests,   apzObstack_Lvalue_CastPatch, 0 },\n \n+  {  zOpenbsd_Va_StartName,    zOpenbsd_Va_StartList,\n+     apzOpenbsd_Va_StartMachs,\n+     OPENBSD_VA_START_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aOpenbsd_Va_StartTests,   apzOpenbsd_Va_StartPatch, 0 },\n+\n   {  zOsf_Namespace_AName,    zOsf_Namespace_AList,\n      apzOsf_Namespace_AMachs,\n      OSF_NAMESPACE_A_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "63871c42abd8e8c16b56e0208dbb9c18d0da9a5b", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261b8381fef69be03bb6b5bbc5a9cd37cf94e1ef/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261b8381fef69be03bb6b5bbc5a9cd37cf94e1ef/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=261b8381fef69be03bb6b5bbc5a9cd37cf94e1ef", "patch": "@@ -2541,6 +2541,19 @@ fix = {\n     test_text = \"*((void **) (h)->next_free)++ = (aptr)\";\n };\n \n+/* \n+ * Fix OpenBSD's va_start define.\n+ */\n+fix = {\n+  hackname  = openbsd_va_start;\n+  mach      = \"*-*-openbsd*\";\n+  files     = stdarg.h;\n+  select    = '__builtin_stdarg_start';\n+  c_fix     = format;\n+  c_fix_arg = __builtin_va_start;\n+\n+  test_text = \"#define va_start(v,l)   __builtin_stdarg_start((v),l)\";\n+};\n \n /*\n  *  sys/lc_core.h on some versions of OSF1/4.x pollutes the namespace by"}]}