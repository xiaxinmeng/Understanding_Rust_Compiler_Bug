{"sha": "4d2a42a1f639e644da9f14af8bb895f7f0710a0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQyYTQyYTFmNjM5ZTY0NGRhOWYxNGFmOGJiODk1ZjdmMDcxMGEwYw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2007-05-25T22:36:10Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-05-25T22:36:10Z"}, "message": "re PR target/32065 (Many dfp testsuite failures for -msse targets)\n\n        PR target/32065\n        * target/i386/i386.c (ix86_expand_vector_move): Force SUBREGs of\n        constants into memory.  Expand unaligned memory references for\n        SSE modes via x86_expand_vector_move_misalign() function.\n\ntestsuite/ChangeLog:\n\n        PR target/32065\n        * gcc.target/i386/pr32065.c: New test.\n\nFrom-SVN: r125077", "tree": {"sha": "d2ea079379840422a1a173736a1a1f4988842dc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2ea079379840422a1a173736a1a1f4988842dc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d2a42a1f639e644da9f14af8bb895f7f0710a0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d2a42a1f639e644da9f14af8bb895f7f0710a0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d2a42a1f639e644da9f14af8bb895f7f0710a0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d2a42a1f639e644da9f14af8bb895f7f0710a0c/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5b98f74d38bb1ec9dfbeedd7d2d39d4e22a37d34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b98f74d38bb1ec9dfbeedd7d2d39d4e22a37d34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b98f74d38bb1ec9dfbeedd7d2d39d4e22a37d34"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "4967fc5a7935fa258f94aec051fbfcd612b8a3d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d2a42a1f639e644da9f14af8bb895f7f0710a0c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d2a42a1f639e644da9f14af8bb895f7f0710a0c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4d2a42a1f639e644da9f14af8bb895f7f0710a0c", "patch": "@@ -1,3 +1,10 @@\n+2007-05-26  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/32065\n+\t* target/i386/i386.c (ix86_expand_vector_move): Force SUBREGs of\n+\tconstants into memory.  Expand unaligned memory references for\n+\tSSE modes via x86_expand_vector_move_misalign() function.\n+\n 2007-05-25  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/sse.md (*vec_extractv2di_1_sse2): Do not calculate"}, {"sha": "dae841c0d21f9a12daac3082931e925d69f90b9d", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d2a42a1f639e644da9f14af8bb895f7f0710a0c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d2a42a1f639e644da9f14af8bb895f7f0710a0c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=4d2a42a1f639e644da9f14af8bb895f7f0710a0c", "patch": "@@ -9727,17 +9727,47 @@ void\n ix86_expand_vector_move (enum machine_mode mode, rtx operands[])\n {\n   rtx op0 = operands[0], op1 = operands[1];\n+  unsigned int align = GET_MODE_ALIGNMENT (mode);\n \n   /* Force constants other than zero into memory.  We do not know how\n      the instructions used to build constants modify the upper 64 bits\n      of the register, once we have that information we may be able\n      to handle some of them more efficiently.  */\n   if ((reload_in_progress | reload_completed) == 0\n       && register_operand (op0, mode)\n-      && CONSTANT_P (op1)\n+      && (CONSTANT_P (op1)\n+\t  || (GET_CODE (op1) == SUBREG\n+\t      && CONSTANT_P (SUBREG_REG (op1))))\n       && standard_sse_constant_p (op1) <= 0)\n     op1 = validize_mem (force_const_mem (mode, op1));\n \n+  /* TDmode values are passed as TImode on the stack.  Timode values\n+     are moved via xmm registers, and moving them to stack can result in\n+     unaligned memory access.  Use ix86_expand_vector_move_misalign()\n+     if memory operand is not aligned correctly.  */\n+  if (!no_new_pseudos\n+      && SSE_REG_MODE_P (mode)\n+      && ((MEM_P (op0) && (MEM_ALIGN (op0) < align))\n+\t  || (MEM_P (op1) && (MEM_ALIGN (op1) < align))))\n+    {\n+      rtx tmp[2];\n+\n+      /* ix86_expand_vector_move_misalign() does not like constants ... */\n+      if (CONSTANT_P (op1)\n+\t  || (GET_CODE (op1) == SUBREG\n+\t      && CONSTANT_P (SUBREG_REG (op1))))\n+\top1 = validize_mem (force_const_mem (mode, op1));\n+\n+      /* ... nor both arguments in memory.  */\n+      if (!register_operand (op0, mode)\n+\t  && !register_operand (op1, mode))\n+\top1 = force_reg (mode, op1);\n+\n+      tmp[0] = op0; tmp[1] = op1;\n+      ix86_expand_vector_move_misalign (mode, tmp);\n+      return;\n+    }\n+\n   /* Make operand1 a register if it isn't already.  */\n   if (!no_new_pseudos\n       && !register_operand (op0, mode)"}, {"sha": "59b193945eab99c2ae347a90b696695ad7c8d87d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d2a42a1f639e644da9f14af8bb895f7f0710a0c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d2a42a1f639e644da9f14af8bb895f7f0710a0c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4d2a42a1f639e644da9f14af8bb895f7f0710a0c", "patch": "@@ -1,3 +1,8 @@\n+007-05-26  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/32065\n+\t* gcc.target/i386/pr32065.c: New test.\n+\n 2007-05-25  Dirk Mueller  <dmueller@suse.de>\n \t    Marcus Meissner <meissner@suse.de>\n "}, {"sha": "d6692b52784fa12f584d2107e2fe5bb4b8ad6f7a", "filename": "gcc/testsuite/gcc.target/i386/pr32065.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d2a42a1f639e644da9f14af8bb895f7f0710a0c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr32065.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d2a42a1f639e644da9f14af8bb895f7f0710a0c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr32065.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr32065.c?ref=4d2a42a1f639e644da9f14af8bb895f7f0710a0c", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile { target dfp } } */\n+/* { dg-options \"-msse\" } */\n+\n+_Decimal128 test (void)\n+{\n+  return 1234123412341234.123412341234dl;\n+}"}]}