{"sha": "b1599033fa7812428362e73975a87b0bc28ff3a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE1OTkwMzNmYTc4MTI0MjgzNjJlNzM5NzVhODdiMGJjMjhmZjNhMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-01-05T08:04:18Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-01-05T08:04:18Z"}, "message": "re PR libstdc++/9168 (codecvt<char, char, mbstate_t> overwrites output buffers)\n\n2003-01-05  Paolo Carlini <pcarlini@unitus.it>\n\n\tPR libstdc++/9168\n\t* src/codecvt.cc\n\t(codecvt<char, char, mbstate_t>::do_in, do_out):\n\tImplement the resolution of DR19 (TC).\n\t* testsuite/22_locale/codecvt_members_char_char.cc\n\t(test01): Tweak.\n\nFrom-SVN: r60901", "tree": {"sha": "564a7c16cec5ba94955253f511a045b0de742456", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/564a7c16cec5ba94955253f511a045b0de742456"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1599033fa7812428362e73975a87b0bc28ff3a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1599033fa7812428362e73975a87b0bc28ff3a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1599033fa7812428362e73975a87b0bc28ff3a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1599033fa7812428362e73975a87b0bc28ff3a3/comments", "author": null, "committer": null, "parents": [{"sha": "c7c50494beb707f6d374c23b7decbacb5e068a87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7c50494beb707f6d374c23b7decbacb5e068a87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7c50494beb707f6d374c23b7decbacb5e068a87"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "75dc14ba3044ac1db1e40cb97fe25b41076f49b9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1599033fa7812428362e73975a87b0bc28ff3a3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1599033fa7812428362e73975a87b0bc28ff3a3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b1599033fa7812428362e73975a87b0bc28ff3a3", "patch": "@@ -1,3 +1,12 @@\n+2003-01-05  Paolo Carlini <pcarlini@unitus.it>\n+\n+\tPR libstdc++/9168\n+\t* src/codecvt.cc\n+\t(codecvt<char, char, mbstate_t>::do_in, do_out):\n+\tImplement the resolution of DR19 (TC).\n+\t* testsuite/22_locale/codecvt_members_char_char.cc\n+\t(test01): Tweak.\n+\n 2003-01-02  Jason Merrill  <jason@redhat.com>\n \n \t* config/cpu/i486/atomicity.h (__exchange_and_add, __atomic_add):"}, {"sha": "b6ccc43acc95a4b097662291108b79ce1566c44d", "filename": "libstdc++-v3/src/codecvt.cc", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1599033fa7812428362e73975a87b0bc28ff3a3/libstdc%2B%2B-v3%2Fsrc%2Fcodecvt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1599033fa7812428362e73975a87b0bc28ff3a3/libstdc%2B%2B-v3%2Fsrc%2Fcodecvt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fcodecvt.cc?ref=b1599033fa7812428362e73975a87b0bc28ff3a3", "patch": "@@ -64,8 +64,9 @@ namespace std\n \t extern_type* __to, extern_type* __to_end, \n \t extern_type*& __to_next) const\n   { \n-    size_t __len = std::min(__from_end - __from, __to_end - __to);\n-    memcpy(__to, __from, __len);\n+    // _GLIBCPP_RESOLVE_LIB_DEFECTS\n+    // According to the resolution of DR19, \"If returns noconv [...]\n+    // there are no changes to the values in [to, to_limit).\"\n     __from_next = __from; \n     __to_next = __to;\n     return noconv;  \n@@ -86,9 +87,10 @@ namespace std\n \tconst extern_type* __from_end, const extern_type*& __from_next,\n \tintern_type* __to, intern_type* __to_end, \n \tintern_type*& __to_next) const\n-  { \n-    size_t __len = std::min(__from_end - __from, __to_end - __to);\n-    memcpy(__to, __from, __len);\n+  {\n+    // _GLIBCPP_RESOLVE_LIB_DEFECTS\n+    // According to the resolution of DR19, \"If returns noconv [...]\n+    // there are no changes to the values in [to, to_limit).\"\n     __from_next = __from; \n     __to_next = __to;\n     return noconv;  "}, {"sha": "b2acb675351d98a818643bad682dbb34d0a6dcad", "filename": "libstdc++-v3/testsuite/22_locale/codecvt_members_char_char.cc", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1599033fa7812428362e73975a87b0bc28ff3a3/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt_members_char_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1599033fa7812428362e73975a87b0bc28ff3a3/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt_members_char_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt_members_char_char.cc?ref=b1599033fa7812428362e73975a87b0bc28ff3a3", "patch": "@@ -36,25 +36,33 @@ void test01()\n   const char* \t        from_next;\n   int \t\t\tsize = 25;\n   char* \t\tc_arr = new char[size];\n+  char*                 c_ref = new char[size];\n   char*\t\t\tto_next;\n \n   locale \t\tloc;\n   c_codecvt::state_type state;\n   const c_codecvt* \tcvt = &use_facet<c_codecvt>(loc); \n \n+  // According to the resolution of DR19 (see also libstd++/9168), in\n+  // case of degenerate conversion ('noconv'), \"there are no changes to\n+  // the values in [to, to_limit).\"\n+  memset(c_ref, 'X', size);\n+\n   // in\n+  memset(c_arr, 'X', size);\n   result r1 = cvt->in(state, c_lit, c_lit + size, from_next, \n \t\t      c_arr, c_arr + size, to_next);\n   VERIFY( r1 == codecvt_base::noconv );\n-  VERIFY( !strcmp(c_arr, c_lit) ); \n+  VERIFY( !memcmp(c_arr, c_ref, size) ); \n   VERIFY( from_next == c_lit );\n   VERIFY( to_next == c_arr );\n \n   // out\n+  memset(c_arr, 'X', size);\n   result r2 = cvt->out(state, c_lit, c_lit + size, from_next, \n \t\t       c_arr, c_arr + size, to_next);\n   VERIFY( r2 == codecvt_base::noconv );\n-  VERIFY( !strcmp(c_arr, c_lit) ); \n+  VERIFY( !memcmp(c_arr, c_ref, size) ); \n   VERIFY( from_next == c_lit );\n   VERIFY( to_next == c_arr );\n \n@@ -77,6 +85,7 @@ void test01()\n   VERIFY( k == 1 );\n \n   delete [] c_arr;\n+  delete [] c_ref;\n }\n \n // libstdc++/5280"}]}