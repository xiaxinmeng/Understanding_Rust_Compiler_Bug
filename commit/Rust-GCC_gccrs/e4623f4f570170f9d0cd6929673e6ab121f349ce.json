{"sha": "e4623f4f570170f9d0cd6929673e6ab121f349ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ2MjNmNGY1NzAxNzBmOWQwY2Q2OTI5NjczZTZhYjEyMWYzNDljZQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-01T22:49:56Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-01T22:49:56Z"}, "message": "(build_modify_expr): Check whether recursive calls return error_mark_node.\n\nFrom-SVN: r5550", "tree": {"sha": "055a2f5afb83282401de3ab8ad989a8e004df47d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/055a2f5afb83282401de3ab8ad989a8e004df47d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4623f4f570170f9d0cd6929673e6ab121f349ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4623f4f570170f9d0cd6929673e6ab121f349ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4623f4f570170f9d0cd6929673e6ab121f349ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4623f4f570170f9d0cd6929673e6ab121f349ce/comments", "author": null, "committer": null, "parents": [{"sha": "a7fd196c670dde3de2867483b0bb5eec17b7eeda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7fd196c670dde3de2867483b0bb5eec17b7eeda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7fd196c670dde3de2867483b0bb5eec17b7eeda"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "483119a60d270f6ef0f4e339eeb19ccea1d466bc", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4623f4f570170f9d0cd6929673e6ab121f349ce/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4623f4f570170f9d0cd6929673e6ab121f349ce/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=e4623f4f570170f9d0cd6929673e6ab121f349ce", "patch": "@@ -4142,11 +4142,13 @@ build_modify_expr (lhs, modifycode, rhs)\n       /* Handle (a, b) used as an \"lvalue\".  */\n     case COMPOUND_EXPR:\n       pedantic_lvalue_warning (COMPOUND_EXPR);\n+      newrhs = build_modify_expr (TREE_OPERAND (lhs, 1),\n+\t\t\t\t  modifycode, rhs);\n+      if (TREE_CODE (newrhs) == ERROR_MARK)\n+\treturn error_mark_node;\n       return build (COMPOUND_EXPR, lhstype,\n-\t\t    TREE_OPERAND (lhs, 0),\n-\t\t    build_modify_expr (TREE_OPERAND (lhs, 1),\n-\t\t\t\t       modifycode, rhs));\n-\n+\t\t    TREE_OPERAND (lhs, 0), newrhs);\n+ \n       /* Handle (a ? b : c) used as an \"lvalue\".  */\n     case COND_EXPR:\n       pedantic_lvalue_warning (COND_EXPR);\n@@ -4161,6 +4163,8 @@ build_modify_expr (lhs, modifycode, rhs)\n \t\t\t\t\t\t       modifycode, rhs),\n \t\t\t\t    build_modify_expr (TREE_OPERAND (lhs, 2),\n \t\t\t\t\t\t       modifycode, rhs));\n+\tif (TREE_CODE (cond) == ERROR_MARK)\n+\t  return cond;\n \t/* Make sure the code to compute the rhs comes out\n \t   before the split.  */\n \treturn build (COMPOUND_EXPR, TREE_TYPE (lhs),\n@@ -4203,6 +4207,8 @@ build_modify_expr (lhs, modifycode, rhs)\n \tresult = build_modify_expr (inner_lhs, NOP_EXPR,\n \t\t\t\t    convert (TREE_TYPE (inner_lhs),\n \t\t\t\t\t     convert (lhstype, newrhs)));\n+\tif (TREE_CODE (result) == ERROR_MARK)\n+\t  return result;\n \tpedantic_lvalue_warning (CONVERT_EXPR);\n \treturn convert (TREE_TYPE (lhs), result);\n       }"}]}