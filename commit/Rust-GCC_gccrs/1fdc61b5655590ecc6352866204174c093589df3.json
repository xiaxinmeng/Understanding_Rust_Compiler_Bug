{"sha": "1fdc61b5655590ecc6352866204174c093589df3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZkYzYxYjU2NTU1OTBlY2M2MzUyODY2MjA0MTc0YzA5MzU4OWRmMw==", "commit": {"author": {"name": "Vasiliy Fofanov", "email": "fofanov@adacore.com", "date": "2007-12-13T10:27:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-12-13T10:27:42Z"}, "message": "g-regist.ads, [...] (Set_Value): new parameter Expand...\n\n2007-12-06  Vasiliy Fofanov  <fofanov@adacore.com>\n\n\t* g-regist.ads, g-regist.adb (Set_Value): new parameter Expand; when\n\tset to True this procedure will create the value of type REG_EXPAND_SZ.\n\tIt was only possible to create REG_SZ values before.\n\nFrom-SVN: r130842", "tree": {"sha": "90f05c1d049e8b447f06fa0196ce71664ad77ee2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90f05c1d049e8b447f06fa0196ce71664ad77ee2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fdc61b5655590ecc6352866204174c093589df3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fdc61b5655590ecc6352866204174c093589df3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fdc61b5655590ecc6352866204174c093589df3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fdc61b5655590ecc6352866204174c093589df3/comments", "author": {"login": "t-14", "id": 18482303, "node_id": "MDQ6VXNlcjE4NDgyMzAz", "avatar_url": "https://avatars.githubusercontent.com/u/18482303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-14", "html_url": "https://github.com/t-14", "followers_url": "https://api.github.com/users/t-14/followers", "following_url": "https://api.github.com/users/t-14/following{/other_user}", "gists_url": "https://api.github.com/users/t-14/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-14/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-14/subscriptions", "organizations_url": "https://api.github.com/users/t-14/orgs", "repos_url": "https://api.github.com/users/t-14/repos", "events_url": "https://api.github.com/users/t-14/events{/privacy}", "received_events_url": "https://api.github.com/users/t-14/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "422ba273d4ee724caa04eb7e1e9c198b4aeb3e1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/422ba273d4ee724caa04eb7e1e9c198b4aeb3e1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/422ba273d4ee724caa04eb7e1e9c198b4aeb3e1a"}], "stats": {"total": 141, "additions": 79, "deletions": 62}, "files": [{"sha": "ec0d974e743c414a84c1bcac6505fbf5c7534673", "filename": "gcc/ada/g-regist.adb", "status": "modified", "additions": 70, "deletions": 59, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fdc61b5655590ecc6352866204174c093589df3/gcc%2Fada%2Fg-regist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fdc61b5655590ecc6352866204174c093589df3/gcc%2Fada%2Fg-regist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-regist.adb?ref=1fdc61b5655590ecc6352866204174c093589df3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 2001-2005, Free Software Foundation, Inc.        --\n+--           Copyright (C) 2001-2007, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -154,7 +154,6 @@ package body GNAT.Registry is\n \n    procedure Check_Result (Result : LONG; Message : String) is\n       use type LONG;\n-\n    begin\n       if Result /= ERROR_SUCCESS then\n          Exceptions.Raise_Exception\n@@ -169,7 +168,6 @@ package body GNAT.Registry is\n \n    procedure Close_Key (Key : HKEY) is\n       Result : LONG;\n-\n    begin\n       Result := RegCloseKey (Key);\n       Check_Result (Result, \"Close_Key\");\n@@ -198,16 +196,17 @@ package body GNAT.Registry is\n       Dispos  : aliased DWORD;\n \n    begin\n-      Result := RegCreateKeyEx\n-        (From_Key,\n-         C_Sub_Key (C_Sub_Key'First)'Address,\n-         0,\n-         C_Class (C_Class'First)'Address,\n-         REG_OPTION_NON_VOLATILE,\n-         C_Mode,\n-         Null_Address,\n-         New_Key'Unchecked_Access,\n-         Dispos'Unchecked_Access);\n+      Result :=\n+        RegCreateKeyEx\n+          (From_Key,\n+           C_Sub_Key (C_Sub_Key'First)'Address,\n+           0,\n+           C_Class (C_Class'First)'Address,\n+           REG_OPTION_NON_VOLATILE,\n+           C_Mode,\n+           Null_Address,\n+           New_Key'Unchecked_Access,\n+           Dispos'Unchecked_Access);\n \n       Check_Result (Result, \"Create_Key \" & Sub_Key);\n       return New_Key;\n@@ -220,7 +219,6 @@ package body GNAT.Registry is\n    procedure Delete_Key (From_Key : HKEY; Sub_Key : String) is\n       C_Sub_Key : constant String := Sub_Key & ASCII.Nul;\n       Result    : LONG;\n-\n    begin\n       Result := RegDeleteKey (From_Key, C_Sub_Key (C_Sub_Key'First)'Address);\n       Check_Result (Result, \"Delete_Key \" & Sub_Key);\n@@ -233,7 +231,6 @@ package body GNAT.Registry is\n    procedure Delete_Value (From_Key : HKEY; Sub_Key : String) is\n       C_Sub_Key : constant String := Sub_Key & ASCII.Nul;\n       Result    : LONG;\n-\n    begin\n       Result := RegDeleteValue (From_Key, C_Sub_Key (C_Sub_Key'First)'Address);\n       Check_Result (Result, \"Delete_Value \" & Sub_Key);\n@@ -271,32 +268,35 @@ package body GNAT.Registry is\n          Size_Sub_Key := Sub_Key'Length;\n          Size_Value   := Value'Length;\n \n-         Result := RegEnumValue\n-           (From_Key, Index,\n-            Sub_Key (1)'Address,\n-            Size_Sub_Key'Unchecked_Access,\n-            null,\n-            Type_Sub_Key'Unchecked_Access,\n-            Value (1)'Address,\n-            Size_Value'Unchecked_Access);\n+         Result :=\n+           RegEnumValue\n+             (From_Key, Index,\n+              Sub_Key (1)'Address,\n+              Size_Sub_Key'Unchecked_Access,\n+              null,\n+              Type_Sub_Key'Unchecked_Access,\n+              Value (1)'Address,\n+              Size_Value'Unchecked_Access);\n \n          exit when not (Result = ERROR_SUCCESS);\n \n          Quit := False;\n \n          if Type_Sub_Key = REG_EXPAND_SZ and then Expand then\n-               Action (Natural (Index) + 1,\n-                       Sub_Key (1 .. Integer (Size_Sub_Key)),\n-                       Directory_Operations.Expand_Path\n-                         (Value (1 .. Integer (Size_Value) - 1),\n-                          Directory_Operations.DOS),\n-                       Quit);\n+            Action\n+              (Natural (Index) + 1,\n+               Sub_Key (1 .. Integer (Size_Sub_Key)),\n+               Directory_Operations.Expand_Path\n+                 (Value (1 .. Integer (Size_Value) - 1),\n+                  Directory_Operations.DOS),\n+               Quit);\n \n          elsif Type_Sub_Key = REG_SZ or else Type_Sub_Key = REG_EXPAND_SZ then\n-            Action (Natural (Index) + 1,\n-                    Sub_Key (1 .. Integer (Size_Sub_Key)),\n-                    Value (1 .. Integer (Size_Value) - 1),\n-                    Quit);\n+            Action\n+              (Natural (Index) + 1,\n+               Sub_Key (1 .. Integer (Size_Sub_Key)),\n+               Value (1 .. Integer (Size_Value) - 1),\n+               Quit);\n          end if;\n \n          exit when Quit;\n@@ -345,16 +345,17 @@ package body GNAT.Registry is\n       C_Sub_Key : constant String := Sub_Key & ASCII.Nul;\n       C_Mode    : constant REGSAM := To_C_Mode (Mode);\n \n-      New_Key   : aliased HKEY;\n-      Result    : LONG;\n+      New_Key : aliased HKEY;\n+      Result  : LONG;\n \n    begin\n-      Result := RegOpenKeyEx\n-        (From_Key,\n-         C_Sub_Key (C_Sub_Key'First)'Address,\n-         0,\n-         C_Mode,\n-         New_Key'Unchecked_Access);\n+      Result :=\n+        RegOpenKeyEx\n+          (From_Key,\n+           C_Sub_Key (C_Sub_Key'First)'Address,\n+           0,\n+           C_Mode,\n+           New_Key'Unchecked_Access);\n \n       Check_Result (Result, \"Open_Key \" & Sub_Key);\n       return New_Key;\n@@ -385,13 +386,14 @@ package body GNAT.Registry is\n    begin\n       Size_Value := Value'Length;\n \n-      Result := RegQueryValueEx\n-        (From_Key,\n-         C_Sub_Key (C_Sub_Key'First)'Address,\n-         null,\n-         Type_Value'Unchecked_Access,\n-         Value (Value'First)'Address,\n-         Size_Value'Unchecked_Access);\n+      Result :=\n+        RegQueryValueEx\n+          (From_Key,\n+           C_Sub_Key (C_Sub_Key'First)'Address,\n+           null,\n+           Type_Value'Unchecked_Access,\n+           Value (Value'First)'Address,\n+           Size_Value'Unchecked_Access);\n \n       Check_Result (Result, \"Query_Value \" & Sub_Key & \" key\");\n \n@@ -408,23 +410,32 @@ package body GNAT.Registry is\n    ---------------\n \n    procedure Set_Value\n-     (From_Key : HKEY;\n-      Sub_Key  : String;\n-      Value    : String)\n+      (From_Key : HKEY;\n+       Sub_Key  : String;\n+       Value    : String;\n+       Expand   : Boolean := False)\n    is\n       C_Sub_Key : constant String := Sub_Key & ASCII.Nul;\n       C_Value   : constant String := Value & ASCII.Nul;\n \n-      Result : LONG;\n+      Value_Type : DWORD;\n+      Result     : LONG;\n \n    begin\n-      Result := RegSetValueEx\n-        (From_Key,\n-         C_Sub_Key (C_Sub_Key'First)'Address,\n-         0,\n-         REG_SZ,\n-         C_Value (C_Value'First)'Address,\n-         C_Value'Length);\n+      if Expand then\n+         Value_Type := REG_EXPAND_SZ;\n+      else\n+         Value_Type := REG_SZ;\n+      end if;\n+\n+      Result :=\n+        RegSetValueEx\n+          (From_Key,\n+           C_Sub_Key (C_Sub_Key'First)'Address,\n+           0,\n+           Value_Type,\n+           C_Value (C_Value'First)'Address,\n+           C_Value'Length);\n \n       Check_Result (Result, \"Set_Value \" & Sub_Key & \" key\");\n    end Set_Value;"}, {"sha": "038b94b315eaa88d412daffb5304a1fafbffc1f3", "filename": "gcc/ada/g-regist.ads", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fdc61b5655590ecc6352866204174c093589df3/gcc%2Fada%2Fg-regist.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fdc61b5655590ecc6352866204174c093589df3/gcc%2Fada%2Fg-regist.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-regist.ads?ref=1fdc61b5655590ecc6352866204174c093589df3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -95,8 +95,14 @@ package GNAT.Registry is\n    --  REG_EXPAND_SZ the returned value will have the %name% variables\n    --  replaced by the corresponding environment variable value.\n \n-   procedure Set_Value (From_Key : HKEY; Sub_Key : String; Value : String);\n-   --  Add the pair (Sub_Key, Value) into From_Key registry key\n+   procedure Set_Value\n+      (From_Key : HKEY;\n+       Sub_Key  : String;\n+       Value    : String;\n+       Expand   : Boolean := False);\n+   --  Add the pair (Sub_Key, Value) into From_Key registry key.\n+   --  By default the value created is of type REG_SZ, unless\n+   --  Expand is True in which case it is of type REG_EXPAND_SZ\n \n    procedure Delete_Key (From_Key : HKEY; Sub_Key : String);\n    --  Remove Sub_Key from the registry key From_Key"}]}