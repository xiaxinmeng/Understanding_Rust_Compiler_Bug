{"sha": "3d7ca1673b3387bf420f02e3b45122ab75ff15e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q3Y2ExNjczYjMzODdiZjQyMGYwMmUzYjQ1MTIyYWI3NWZmMTVlNQ==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "rakdver@atrey.karlin.mff.cuni.cz", "date": "2003-08-27T21:13:17Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2003-08-27T21:13:17Z"}, "message": "gcov.c (typedef struct arc_info): New field cs_count.\n\n\t* gcov.c (typedef struct arc_info): New field cs_count.\n\t(accumulate_line_counts): Find cycles correctly.\n\n\t* gcc.misc-tests/gcov-10b.c: New test.\n\nFrom-SVN: r70859", "tree": {"sha": "7c28704c1941f5fa04436a77f72fd996d53ee36f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c28704c1941f5fa04436a77f72fd996d53ee36f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d7ca1673b3387bf420f02e3b45122ab75ff15e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d7ca1673b3387bf420f02e3b45122ab75ff15e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d7ca1673b3387bf420f02e3b45122ab75ff15e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d7ca1673b3387bf420f02e3b45122ab75ff15e5/comments", "author": null, "committer": null, "parents": [{"sha": "37e0ff11557b3ebc5917151becaaeb9514c8692d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37e0ff11557b3ebc5917151becaaeb9514c8692d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37e0ff11557b3ebc5917151becaaeb9514c8692d"}], "stats": {"total": 48, "additions": 44, "deletions": 4}, "files": [{"sha": "7a97ad585e9a6f40a59c47a3ff96ab4941cbc37f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d7ca1673b3387bf420f02e3b45122ab75ff15e5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d7ca1673b3387bf420f02e3b45122ab75ff15e5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d7ca1673b3387bf420f02e3b45122ab75ff15e5", "patch": "@@ -1,3 +1,8 @@\n+2003-08-27  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n+\n+\t* gcov.c (typedef struct arc_info): New field cs_count.\n+\t(accumulate_line_counts): Find cycles correctly.\n+\n 2003-08-27  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/s390.c (struct machine_function): Remove member"}, {"sha": "d3037c775b8160cfbd1f25fa02d24119250e6576", "filename": "gcc/gcov.c", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d7ca1673b3387bf420f02e3b45122ab75ff15e5/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d7ca1673b3387bf420f02e3b45122ab75ff15e5/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=3d7ca1673b3387bf420f02e3b45122ab75ff15e5", "patch": "@@ -82,6 +82,8 @@ typedef struct arc_info\n \n   /* transition counts.  */\n   gcov_type count;\n+  /* used in cycle search, so that we do not clobber original counts.  */\n+  gcov_type cs_count;\n \n   unsigned int count_valid : 1;\n   unsigned int on_tree : 1;\n@@ -1622,6 +1624,10 @@ accumulate_line_counts (source_t *src)\n \t\t  if (flag_branches)\n \t\t    add_branch_counts (&src->coverage, arc);\n \t\t}\n+\n+\t      /* Initialize the cs_count.  */\n+\t      for (arc = block->succ; arc; arc = arc->succ_next)\n+\t\tarc->cs_count = arc->count;\n \t    }\n \n \t  /* Find the loops. This uses the algorithm described in\n@@ -1638,7 +1644,8 @@ accumulate_line_counts (source_t *src)\n \n \t     For each loop we find, locate the arc with the smallest\n \t     transition count, and add that to the cumulative\n-\t     count. Remove the arc from consideration.  */\n+\t     count.  Decrease flow over the cycle and remove the arc\n+\t     from consideration.  */\n \t  for (block = line->u.blocks; block; block = block->chain)\n \t    {\n \t      block_t *head = block;\n@@ -1664,25 +1671,33 @@ accumulate_line_counts (source_t *src)\n \t\t  if (dst == block)\n \t\t    {\n \t\t      /* Found a closing arc.  */\n-\t\t      gcov_type cycle_count = arc->count;\n+\t\t      gcov_type cycle_count = arc->cs_count;\n \t\t      arc_t *cycle_arc = arc;\n \t\t      arc_t *probe_arc;\n \n \t\t      /* Locate the smallest arc count of the loop.  */\n \t\t      for (dst = head; (probe_arc = dst->u.cycle.arc);\n \t\t\t   dst = probe_arc->src)\n-\t\t\tif (cycle_count > probe_arc->count)\n+\t\t\tif (cycle_count > probe_arc->cs_count)\n \t\t\t  {\n-\t\t\t    cycle_count = probe_arc->count;\n+\t\t\t    cycle_count = probe_arc->cs_count;\n \t\t\t    cycle_arc = probe_arc;\n \t\t\t  }\n \n \t\t      count += cycle_count;\n \t\t      cycle_arc->cycle = 1;\n+\n+\t\t      /* Remove the flow from the cycle.  */\n+\t\t      arc->cs_count -= cycle_count;\n+\t\t      for (dst = head; (probe_arc = dst->u.cycle.arc);\n+\t\t\t   dst = probe_arc->src)\n+\t\t\tprobe_arc->cs_count -= cycle_count;\n+\n \t\t      /* Unwind to the cyclic arc.  */\n \t\t      while (head != cycle_arc->src)\n \t\t\t{\n \t\t\t  arc = head->u.cycle.arc;\n+\t\t\t  head->u.cycle.arc = NULL;\n \t\t\t  head = arc->src;\n \t\t\t}\n \t\t      /* Move on.  */"}, {"sha": "0877585bc0aa41b9cdff410b906537adb4b59b6d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d7ca1673b3387bf420f02e3b45122ab75ff15e5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d7ca1673b3387bf420f02e3b45122ab75ff15e5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3d7ca1673b3387bf420f02e3b45122ab75ff15e5", "patch": "@@ -1,3 +1,7 @@\n+2003-08-27  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n+\n+\t* gcc.misc-tests/gcov-10b.c: New test.\n+\n 2003-08-27  Mark Mitchell  <mark@codesourcery.com>\n \n \t* g++.dg/opt/ptrmem3.C: New test."}, {"sha": "148d779fdb354039e5e1886c34cfa83a8d840101", "filename": "gcc/testsuite/gcc.misc-tests/gcov-10b.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d7ca1673b3387bf420f02e3b45122ab75ff15e5/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-10b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d7ca1673b3387bf420f02e3b45122ab75ff15e5/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-10b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-10b.c?ref=3d7ca1673b3387bf420f02e3b45122ab75ff15e5", "patch": "@@ -0,0 +1,16 @@\n+/* Test gcov block mode.  */\n+\n+/* { dg-options \"-fprofile-arcs -ftest-coverage\" } */\n+/* { dg-do run { target native } } */\n+\n+int main ()\n+{\n+  unsigned ix, jx = 0;\n+  \n+  ix = 10; goto test; loop: ; if (ix & 1) jx++; test: ; if (ix--) goto loop; /* count(11) */\n+\n+  return jx != 5;\n+}\n+\n+/* { dg-final { run-gcov { -a gcov-10b.c } } } */\n+"}]}