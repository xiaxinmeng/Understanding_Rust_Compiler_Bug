{"sha": "f359ba2fa911fd73bb5d22592c695ed5ab497b0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM1OWJhMmZhOTExZmQ3M2JiNWQyMjU5MmM2OTVlZDVhYjQ5N2IwZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-01-24T19:49:09Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-01-24T19:49:09Z"}, "message": "re PR tree-optimization/88964 (ICE in wide_int_to_tree_1, at tree.c:1561)\n\n\tPR tree-optimization/88964\n\t* gimple-loop-interchange.cc (loop_cand::analyze_induction_var): Also\n\tpunt if HONOR_SNANS (chrec).\n\nFrom-SVN: r268247", "tree": {"sha": "d9f75e5c617e4f860d7919bb3cbc55605048ff65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9f75e5c617e4f860d7919bb3cbc55605048ff65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f359ba2fa911fd73bb5d22592c695ed5ab497b0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f359ba2fa911fd73bb5d22592c695ed5ab497b0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f359ba2fa911fd73bb5d22592c695ed5ab497b0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f359ba2fa911fd73bb5d22592c695ed5ab497b0e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3b4218cc9f243cfe796dd933e8d0abd9c610503e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b4218cc9f243cfe796dd933e8d0abd9c610503e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b4218cc9f243cfe796dd933e8d0abd9c610503e"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "03d1b3354999137009533c3a6da594cba4448371", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f359ba2fa911fd73bb5d22592c695ed5ab497b0e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f359ba2fa911fd73bb5d22592c695ed5ab497b0e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f359ba2fa911fd73bb5d22592c695ed5ab497b0e", "patch": "@@ -1,5 +1,9 @@\n 2019-01-24  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/88964\n+\t* gimple-loop-interchange.cc (loop_cand::analyze_induction_var): Also\n+\tpunt if HONOR_SNANS (chrec).\n+\n \tPR middle-end/89015\n \t* tree-nested.c (convert_nonlocal_reference_stmt,\n \tconvert_local_reference_stmt, convert_tramp_reference_stmt,"}, {"sha": "b188ce86d5e307d4f9f455e0caf74bf3b75bdca4", "filename": "gcc/gimple-loop-interchange.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f359ba2fa911fd73bb5d22592c695ed5ab497b0e/gcc%2Fgimple-loop-interchange.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f359ba2fa911fd73bb5d22592c695ed5ab497b0e/gcc%2Fgimple-loop-interchange.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-loop-interchange.cc?ref=f359ba2fa911fd73bb5d22592c695ed5ab497b0e", "patch": "@@ -690,8 +690,8 @@ loop_cand::analyze_induction_var (tree var, tree chrec)\n     {\n       /* Punt on floating point invariants if honoring signed zeros,\n \t representing that as + 0.0 would change the result if init\n-\t is -0.0.  */\n-      if (HONOR_SIGNED_ZEROS (chrec))\n+\t is -0.0.  Similarly for SNaNs it can raise exception.  */\n+      if (HONOR_SIGNED_ZEROS (chrec) || HONOR_SNANS (chrec))\n \treturn false;\n       struct induction *iv = XCNEW (struct induction);\n       iv->var = var;"}]}