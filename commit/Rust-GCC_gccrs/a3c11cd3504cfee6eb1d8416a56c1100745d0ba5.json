{"sha": "a3c11cd3504cfee6eb1d8416a56c1100745d0ba5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNjMTFjZDM1MDRjZmVlNmViMWQ4NDE2YTU2YzExMDA3NDVkMGJhNQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-04-06T19:09:26Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-04-06T19:09:26Z"}, "message": "Add prototypes.\n\nFrom-SVN: r4028", "tree": {"sha": "dc914b97b4f5d0733d0800c82008066fe1cfefd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc914b97b4f5d0733d0800c82008066fe1cfefd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3c11cd3504cfee6eb1d8416a56c1100745d0ba5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3c11cd3504cfee6eb1d8416a56c1100745d0ba5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3c11cd3504cfee6eb1d8416a56c1100745d0ba5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3c11cd3504cfee6eb1d8416a56c1100745d0ba5/comments", "author": null, "committer": null, "parents": [{"sha": "b82b0773d7cd311372e29da6add0d0c48d15d1b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b82b0773d7cd311372e29da6add0d0c48d15d1b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b82b0773d7cd311372e29da6add0d0c48d15d1b3"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "a5bacdd3e019cbdfda42ba544fabb7d9914ec25e", "filename": "gcc/tree.h", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3c11cd3504cfee6eb1d8416a56c1100745d0ba5/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3c11cd3504cfee6eb1d8416a56c1100745d0ba5/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=a3c11cd3504cfee6eb1d8416a56c1100745d0ba5", "patch": "@@ -1301,6 +1301,9 @@ extern tree decl_type_context\t\tPROTO((tree));\n    for the function's name.  */\n \n extern char *function_cannot_inline_p \tPROTO((tree));\n+\n+/* Return 1 if EXPR is the real constant zero.  */\n+extern int real_zerop PROTO((tree));\n \f\n /* Declare commonly used variables for tree structure.  */\n \n@@ -1458,3 +1461,36 @@ extern tree pushdecl\t\t\t\tPROTO((tree));\n extern tree getdecls\t\t\t\tPROTO((void));\n /* Function to return the chain of structure tags in the current scope level.  */\n extern tree gettags\t\t\t\tPROTO((void));\n+\n+extern tree build_range_type PROTO((tree, tree, tree));\n+\n+/* Call when starting to parse a declaration:\n+   make expressions in the declaration last the length of the function.\n+   Returns an argument that should be passed to resume_momentary later.  */\n+extern int suspend_momentary PROTO((void));\n+\n+extern int allocation_temporary_p PROTO((void));\n+\n+/* Call when finished parsing a declaration:\n+   restore the treatment of node-allocation that was\n+   in effect before the suspension.\n+   YES should be the value previously returned by suspend_momentary.  */\n+extern void resume_momentary PROTO((int));\n+\n+/* Called after finishing a record, union or enumeral type.  */\n+extern void rest_of_type_compilation PROTO((tree, int));\n+\n+/* Save the current set of obstacks, but don't change them.  */\n+extern void push_obstacks_nochange PROTO((void));\n+\n+extern void push_momentary PROTO((void));\n+\n+extern void clear_momentary PROTO((void));\n+\n+extern void pop_momentary PROTO((void));\n+\n+extern void end_temporary_allocation PROTO((void));\n+\n+/* Pop the obstack selection stack.  */\n+extern void pop_obstacks PROTO((void));\n+"}]}