{"sha": "f9063d12633c62a089115df032a19295854d8b06", "node_id": "C_kwDOANBUbNoAKGY5MDYzZDEyNjMzYzYyYTA4OTExNWRmMDMyYTE5Mjk1ODU0ZDhiMDY", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2022-01-21T23:08:50Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2022-01-21T23:08:50Z"}, "message": "Mark XXSPLTIW/XXSPLTIDP as prefixed -- PR 104136\n\nIf you compile module_advect_em.F90 with -Ofast -mcpu=power10, one module\nis large enough that we can't use a single conditional jump to span the\nfunction.  Instead, GCC has to reverse the condition, and do a conditional\njump around an unconditional branch.  It turns out when xxspltiw and\nxxspltdp instructions were generated, they were not marked as being\nprefixed (i.e. length of 12 bytes instead of 4 bytes).  This meant the\ncalculations for the branch length were off, which in turn meant the\nassembler raised an error because it couldn't do the conditional jump.\n\nThe fix is to explicitly set the prefixed attribute when we are loading up\nvector constants with the xxspltiw or xxspltidp instructions.\n\nI have removed the code that sets the prefixed attribute for xxspltiw,\nxxspltidp, and xxsplti32dx instructions, since it no longer will be invoked.\n\nI have also explicitly set the prefixed attribute for load SF and DF mode\nconstants with xxsplitw and xxspltidp.  Previously, it was not set on these\ninsns, but when the insn was split to get the XXSPLTIW/XXSPLTIDP forms, those\nforms already had the prefixed attribute set.\n\n2022-01-21  Michael Meissner  <meissner@the-meissners.org>\n\ngcc/\n\tPR target/104136\n\t* config/rs6000/rs6000-protos.h (prefixed_xxsplti_p): Delete.\n\t* config/rs6000/rs6000.cc (prefixed_xxsplti_p): Delete.\n\t* config/rs6000/rs6000.md (prefixed attribute): Delete section\n\tthat sets the prefixed attribute for xxspltiw, xxspltidp, and\n\txxsplti32dx instructions.\n\t(movsf_hardfloat): Explicitly set the prefixed attribute\n\twhen xxspltiw and xxspltidp instructions are generated.\n\t(mov<mode>_hardfloat32): Likewise.\n\t(mov<mode>_hardfloat64): Likewise.\n\t* config/rs6000/vsx.md (vsx_mov<mode>_64bit): Explicitly set the\n\tprefixed attribute for xxspltiw and xxspltidp instructions.\n\t(vsx_mov<mode>_32bit): Likewise.", "tree": {"sha": "3d00c208968cb597c0aae91874b4b12ed0ff1821", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d00c208968cb597c0aae91874b4b12ed0ff1821"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9063d12633c62a089115df032a19295854d8b06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9063d12633c62a089115df032a19295854d8b06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9063d12633c62a089115df032a19295854d8b06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9063d12633c62a089115df032a19295854d8b06/comments", "author": null, "committer": null, "parents": [{"sha": "60953a23d57b13a672f751bec0c6eefc059eb1ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60953a23d57b13a672f751bec0c6eefc059eb1ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60953a23d57b13a672f751bec0c6eefc059eb1ab"}], "stats": {"total": 75, "additions": 27, "deletions": 48}, "files": [{"sha": "3ea010236090bd68bffbbc15449950c556179e24", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9063d12633c62a089115df032a19295854d8b06/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9063d12633c62a089115df032a19295854d8b06/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=f9063d12633c62a089115df032a19295854d8b06", "patch": "@@ -199,7 +199,6 @@ enum non_prefixed_form reg_to_non_prefixed (rtx reg, machine_mode mode);\n extern bool prefixed_load_p (rtx_insn *);\n extern bool prefixed_store_p (rtx_insn *);\n extern bool prefixed_paddi_p (rtx_insn *);\n-extern bool prefixed_xxsplti_p (rtx_insn *);\n extern void rs6000_asm_output_opcode (FILE *);\n extern void output_pcrel_opt_reloc (rtx);\n extern void rs6000_final_prescan_insn (rtx_insn *, rtx [], int);"}, {"sha": "943f53e38bb8eae06660db4102ed86dacde1c1cb", "filename": "gcc/config/rs6000/rs6000.cc", "status": "modified", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9063d12633c62a089115df032a19295854d8b06/gcc%2Fconfig%2Frs6000%2Frs6000.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9063d12633c62a089115df032a19295854d8b06/gcc%2Fconfig%2Frs6000%2Frs6000.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.cc?ref=f9063d12633c62a089115df032a19295854d8b06", "patch": "@@ -26609,44 +26609,6 @@ prefixed_paddi_p (rtx_insn *insn)\n   return (iform == INSN_FORM_PCREL_EXTERNAL || iform == INSN_FORM_PCREL_LOCAL);\n }\n \n-/* Whether an instruction is a prefixed XXSPLTI* instruction.  This is called\n-   from the prefixed attribute processing.  */\n-\n-bool\n-prefixed_xxsplti_p (rtx_insn *insn)\n-{\n-  rtx set = single_set (insn);\n-  if (!set)\n-    return false;\n-\n-  rtx dest = SET_DEST (set);\n-  rtx src = SET_SRC (set);\n-  machine_mode mode = GET_MODE (dest);\n-\n-  if (!REG_P (dest) && !SUBREG_P (dest))\n-    return false;\n-\n-  if (GET_CODE (src) == UNSPEC)\n-    {\n-      int unspec = XINT (src, 1);\n-      return (unspec == UNSPEC_XXSPLTIW\n-\t      || unspec == UNSPEC_XXSPLTIDP\n-\t      || unspec == UNSPEC_XXSPLTI32DX);\n-    }\n-\n-  vec_const_128bit_type vsx_const;\n-  if (vec_const_128bit_to_bytes (src, mode, &vsx_const))\n-    {\n-      if (constant_generates_xxspltiw (&vsx_const))\n-\treturn true;\n-\n-      if (constant_generates_xxspltidp (&vsx_const))\n-\treturn true;\n-    }\n-\n-  return false;\n-}\n-\n /* Whether the next instruction needs a 'p' prefix issued before the\n    instruction is printed out.  */\n static bool prepend_p_to_next_insn;"}, {"sha": "4e221189028118f9a2e5d319882f971a660543f9", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9063d12633c62a089115df032a19295854d8b06/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9063d12633c62a089115df032a19295854d8b06/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=f9063d12633c62a089115df032a19295854d8b06", "patch": "@@ -314,11 +314,6 @@\n \n \t (eq_attr \"type\" \"integer,add\")\n \t (if_then_else (match_test \"prefixed_paddi_p (insn)\")\n-\t\t       (const_string \"yes\")\n-\t\t       (const_string \"no\"))\n-\n-\t (eq_attr \"type\" \"vecperm\")\n-\t (if_then_else (match_test \"prefixed_xxsplti_p (insn)\")\n \t\t       (const_string \"yes\")\n \t\t       (const_string \"no\"))]\n \n@@ -7857,7 +7852,11 @@\n    (set_attr \"isa\"\n \t\"*,          *,         p9v,        p8v,       *,         p9v,\n \t p8v,        *,         *,          *,         *,         *,\n-\t *,          *,         *,          *,         p10\")])\n+\t *,          *,         *,          *,         p10\")\n+   (set_attr \"prefixed\"\n+\t\"*,          *,         *,          *,         *,         *,\n+\t *,          *,         *,          *,         *,         *,\n+\t *,          *,         *,          *,         yes\")])\n \n ;;\tLWZ          LFIWZX     STW        STFIWX     MTVSRWZ    MFVSRWZ\n ;;\tFMR          MR         MT%0       MF%1       NOP\n@@ -8159,7 +8158,11 @@\n    (set_attr \"isa\"\n             \"*,           *,          *,          p9v,        p9v,\n              p7v,         p7v,        *,          *,          *,\n-             *,           *,          *,          p10\")])\n+             *,           *,          *,          p10\")\n+   (set_attr \"prefixed\"\n+            \"*,           *,          *,          *,          *,\n+             *,           *,          *,          *,          *,\n+             *,           *,          *,          yes\")])\n \n ;;           STW      LWZ     MR      G-const H-const F-const\n \n@@ -8232,7 +8235,12 @@\n             \"*,           *,          *,          p9v,        p9v,\n              p7v,         p7v,        *,          *,          *,\n              *,           *,          *,          *,          *,\n-             *,           p8v,        p8v,        p10\")])\n+             *,           p8v,        p8v,        p10\")\n+   (set_attr \"prefixed\"\n+            \"*,           *,          *,          *,          *,\n+             *,           *,          *,          *,          *,\n+             *,           *,          *,          *,          *,\n+             *,           *,          *,          *\")])\n \n ;;           STD      LD       MR      MT<SPR> MF<SPR> G-const\n ;;           H-const  F-const  Special"}, {"sha": "c8c891e13f41b18f361f71f2510e758fe8357a2c", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9063d12633c62a089115df032a19295854d8b06/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9063d12633c62a089115df032a19295854d8b06/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=f9063d12633c62a089115df032a19295854d8b06", "patch": "@@ -1237,7 +1237,12 @@\n                \"<VSisa>,   <VSisa>,   <VSisa>,   *,         *,         *,\n                 *,         *,         *,         *,         p9v,       *,\n                 p10,       p10,\n-                <VSisa>,   *,         *,         *,         *\")])\n+                <VSisa>,   *,         *,         *,         *\")\n+   (set_attr \"prefixed\"\n+               \"*,         *,         *,         *,         *,         *,\n+                *,         *,         *,         *,         *,         *,\n+                *,         yes,\n+                *,         *,         *,         *,         *\")])\n \n ;;              VSX store  VSX load   VSX move   GPR load   GPR store  GPR move\n ;;              LXVKQ      XXSPLTI*\n@@ -1276,6 +1281,11 @@\n                \"<VSisa>,   <VSisa>,   <VSisa>,   *,         *,         *,\n                 p10,       p10,\n                 p9v,       *,         <VSisa>,   *,         *,\n+                *,         *\")\n+   (set_attr \"prefixed\"\n+               \"*,         *,         *,         *,         *,         *,\n+                *,         yes,\n+                *,         *,         *,         *,         *,\n                 *,         *\")])\n \n ;; Explicit  load/store expanders for the builtin functions"}]}