{"sha": "294e7bbb9eb0b1f8d0484e9ddb562a08f7505cab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk0ZTdiYmI5ZWIwYjFmOGQwNDg0ZTlkZGI1NjJhMDhmNzUwNWNhYg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2018-08-21T14:46:40Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-08-21T14:46:40Z"}, "message": "[Ada] Fix internal error on extension of record with representation clause\n\nThis fixes a long-standing issue present for extensions of tagged record\ntypes with a representation clause: the clause is correctly inherited\nfor components inherited in the extension but the position and size are\nnot, which fools the logic of Is_Possibly_Unaligned_Object.\n\nThis can result in an attempt to take the address of a component not\naligned on a byte boundary, which is then flagged as an internal error.\n\n2018-08-21  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* exp_util.adb (Is_Possibly_Unaligned_Object): For the case of a\n\tselected component inherited in a record extension and subject\n\tto a representation clause, retrieve the position and size from\n\tthe original record component.\n\ngcc/testsuite/\n\n\t* gnat.dg/rep_clause7.adb: New testcase.\n\nFrom-SVN: r263717", "tree": {"sha": "4f070890782e75ac457fb293811a7608860bb10c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f070890782e75ac457fb293811a7608860bb10c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/294e7bbb9eb0b1f8d0484e9ddb562a08f7505cab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/294e7bbb9eb0b1f8d0484e9ddb562a08f7505cab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/294e7bbb9eb0b1f8d0484e9ddb562a08f7505cab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/294e7bbb9eb0b1f8d0484e9ddb562a08f7505cab/comments", "author": null, "committer": null, "parents": [{"sha": "2e5df2955f9ec8deafeb2978fcb38fb99f2660fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e5df2955f9ec8deafeb2978fcb38fb99f2660fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e5df2955f9ec8deafeb2978fcb38fb99f2660fd"}], "stats": {"total": 61, "additions": 59, "deletions": 2}, "files": [{"sha": "27bb79d5017211edb92ab61e56a513a5a1059ae1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/294e7bbb9eb0b1f8d0484e9ddb562a08f7505cab/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/294e7bbb9eb0b1f8d0484e9ddb562a08f7505cab/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=294e7bbb9eb0b1f8d0484e9ddb562a08f7505cab", "patch": "@@ -1,3 +1,10 @@\n+2018-08-21  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_util.adb (Is_Possibly_Unaligned_Object): For the case of a\n+\tselected component inherited in a record extension and subject\n+\tto a representation clause, retrieve the position and size from\n+\tthe original record component.\n+\n 2018-08-21  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_util.ads, sem_util.adb (New_External_Entity): Type of"}, {"sha": "632c879892e83e7b8310d5188ba1c1c301033c7d", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/294e7bbb9eb0b1f8d0484e9ddb562a08f7505cab/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/294e7bbb9eb0b1f8d0484e9ddb562a08f7505cab/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=294e7bbb9eb0b1f8d0484e9ddb562a08f7505cab", "patch": "@@ -8402,9 +8402,26 @@ package body Exp_Util is\n \n                declare\n                   Align_In_Bits : constant Nat := M * System_Storage_Unit;\n+                  Off : Uint;\n+                  Siz : Uint;\n                begin\n-                  if Component_Bit_Offset (C) mod Align_In_Bits /= 0\n-                    or else Esize (C) mod Align_In_Bits /= 0\n+                  --  For a component inherited in a record extension, the\n+                  --  clause is inherited but position and size are not set.\n+\n+                  if Is_Base_Type (Etype (P))\n+                    and then Is_Tagged_Type (Etype (P))\n+                    and then Present (Original_Record_Component (C))\n+                  then\n+                     Off :=\n+                       Component_Bit_Offset (Original_Record_Component (C));\n+                     Siz := Esize (Original_Record_Component (C));\n+                  else\n+                     Off := Component_Bit_Offset (C);\n+                     Siz := Esize (C);\n+                  end if;\n+\n+                  if Off mod Align_In_Bits /= 0\n+                    or else Siz mod Align_In_Bits /= 0\n                   then\n                      return True;\n                   end if;"}, {"sha": "e0dfb3db38cee07b8daf0da45578de03fc39a994", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/294e7bbb9eb0b1f8d0484e9ddb562a08f7505cab/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/294e7bbb9eb0b1f8d0484e9ddb562a08f7505cab/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=294e7bbb9eb0b1f8d0484e9ddb562a08f7505cab", "patch": "@@ -1,3 +1,7 @@\n+2018-08-21  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/rep_clause7.adb: New testcase.\n+\n 2018-08-21  Ed Schonberg  <schonberg@adacore.com>\n \n \t* gnat.dg/task1.adb, gnat.dg/task1.ads, gnat.dg/task1_pkg.adb,"}, {"sha": "222b8f5c43be363df2895b339c59114aeade4df7", "filename": "gcc/testsuite/gnat.dg/rep_clause7.adb", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/294e7bbb9eb0b1f8d0484e9ddb562a08f7505cab/gcc%2Ftestsuite%2Fgnat.dg%2Frep_clause7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/294e7bbb9eb0b1f8d0484e9ddb562a08f7505cab/gcc%2Ftestsuite%2Fgnat.dg%2Frep_clause7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Frep_clause7.adb?ref=294e7bbb9eb0b1f8d0484e9ddb562a08f7505cab", "patch": "@@ -0,0 +1,29 @@\n+procedure Rep_Clause7 is\n+\n+   subtype Msg is String (1 .. 3);\n+\n+   type Root is tagged record\n+     B : Boolean;\n+     M : Msg;\n+   end record;\n+   for Root use record\n+     B at 0 range 64 .. 64;\n+     M at 0 range 65 .. 88;\n+   end record;\n+\n+   type Ext is new Root with null record;\n+\n+   procedure Inner (T : Msg) is\n+   begin\n+      null;\n+   end;\n+\n+   pragma Warnings (Off);\n+   T1 : Root;\n+   T2 : Ext;\n+   pragma Warnings (On);\n+\n+begin\n+   Inner (T1.M);\n+   Inner (T2.M);\n+end;"}]}