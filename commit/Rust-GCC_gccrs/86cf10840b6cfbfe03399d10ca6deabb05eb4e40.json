{"sha": "86cf10840b6cfbfe03399d10ca6deabb05eb4e40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZjZjEwODQwYjZjZmJmZTAzMzk5ZDEwY2E2ZGVhYmIwNWViNGU0MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-05-10T18:40:43Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-05-10T18:40:43Z"}, "message": "* lambda.c (lambda_expr_this_capture): Improve logic.\n\nFrom-SVN: r260122", "tree": {"sha": "9cc87b92d390f3ac63dde3a298be136438cdd953", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9cc87b92d390f3ac63dde3a298be136438cdd953"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86cf10840b6cfbfe03399d10ca6deabb05eb4e40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86cf10840b6cfbfe03399d10ca6deabb05eb4e40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86cf10840b6cfbfe03399d10ca6deabb05eb4e40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86cf10840b6cfbfe03399d10ca6deabb05eb4e40/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fa141e9b3c41bab7728cda7cd5a3f672e0193797", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa141e9b3c41bab7728cda7cd5a3f672e0193797", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa141e9b3c41bab7728cda7cd5a3f672e0193797"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "544806d28a43f1e0b93a9da1dd96c7a0b7405ae6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86cf10840b6cfbfe03399d10ca6deabb05eb4e40/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86cf10840b6cfbfe03399d10ca6deabb05eb4e40/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=86cf10840b6cfbfe03399d10ca6deabb05eb4e40", "patch": "@@ -1,5 +1,7 @@\n 2018-05-09  Jason Merrill  <jason@redhat.com>\n \n+\t* lambda.c (lambda_expr_this_capture): Improve logic.\n+\n \t* decl.c (make_typename_type): s/parameters/arguments/.\n \t* parser.c (cp_parser_nested_name_specifier_opt): Likewise.\n \t* pt.c (make_pack_expansion): Correct error message."}, {"sha": "e3f22fcc5b9dec0b6fcb325016fb8ade2cca1094", "filename": "gcc/cp/lambda.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86cf10840b6cfbfe03399d10ca6deabb05eb4e40/gcc%2Fcp%2Flambda.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86cf10840b6cfbfe03399d10ca6deabb05eb4e40/gcc%2Fcp%2Flambda.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flambda.c?ref=86cf10840b6cfbfe03399d10ca6deabb05eb4e40", "patch": "@@ -743,9 +743,7 @@ lambda_expr_this_capture (tree lambda, bool add_capture_p)\n     add_capture_p = false;\n \n   /* Try to default capture 'this' if we can.  */\n-  if (!this_capture\n-      && (!add_capture_p\n-          || LAMBDA_EXPR_DEFAULT_CAPTURE_MODE (lambda) != CPLD_NONE))\n+  if (!this_capture)\n     {\n       tree lambda_stack = NULL_TREE;\n       tree init = NULL_TREE;\n@@ -756,9 +754,15 @@ lambda_expr_this_capture (tree lambda, bool add_capture_p)\n            3. a non-default capturing lambda function.  */\n       for (tree tlambda = lambda; ;)\n \t{\n-          lambda_stack = tree_cons (NULL_TREE,\n-                                    tlambda,\n-                                    lambda_stack);\n+\t  if (add_capture_p\n+\t      && LAMBDA_EXPR_DEFAULT_CAPTURE_MODE (tlambda) == CPLD_NONE)\n+\t    /* tlambda won't let us capture 'this'.  */\n+\t    break;\n+\n+\t  if (add_capture_p)\n+\t    lambda_stack = tree_cons (NULL_TREE,\n+\t\t\t\t      tlambda,\n+\t\t\t\t      lambda_stack);\n \n \t  tree closure = LAMBDA_EXPR_CLOSURE (tlambda);\n \t  tree containing_function\n@@ -807,10 +811,6 @@ lambda_expr_this_capture (tree lambda, bool add_capture_p)\n \t      init = LAMBDA_EXPR_THIS_CAPTURE (tlambda);\n \t      break;\n \t    }\n-\n-\t  if (LAMBDA_EXPR_DEFAULT_CAPTURE_MODE (tlambda) == CPLD_NONE)\n-\t    /* An outer lambda won't let us capture 'this'.  */\n-\t    break;\n \t}\n \n       if (init)"}]}