{"sha": "30480ec4bb9c2ec84d954943728b0d75ba00aa01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA0ODBlYzRiYjljMmVjODRkOTU0OTQzNzI4YjBkNzViYTAwYWEwMQ==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2005-07-22T03:11:24Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2005-07-22T03:11:24Z"}, "message": "... Add warning control to warning call.\n\n* c-common.c (check_function_sentinel): Likewise.\n(check_nonnull_arg): Likewise.\n\nFrom-SVN: r102266", "tree": {"sha": "58cd4ea16457257e1357a3420d2dd7b9392a2f62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58cd4ea16457257e1357a3420d2dd7b9392a2f62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30480ec4bb9c2ec84d954943728b0d75ba00aa01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30480ec4bb9c2ec84d954943728b0d75ba00aa01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30480ec4bb9c2ec84d954943728b0d75ba00aa01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30480ec4bb9c2ec84d954943728b0d75ba00aa01/comments", "author": null, "committer": null, "parents": [{"sha": "c303630a7dd9010c0ef35d7c436dbbd282de36ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c303630a7dd9010c0ef35d7c436dbbd282de36ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c303630a7dd9010c0ef35d7c436dbbd282de36ea"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "2699e1212f44e65f7e64b8d5078ed3a92df4ca7a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30480ec4bb9c2ec84d954943728b0d75ba00aa01/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30480ec4bb9c2ec84d954943728b0d75ba00aa01/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=30480ec4bb9c2ec84d954943728b0d75ba00aa01", "patch": "@@ -4,6 +4,8 @@\n \tcall.\n \t* c-typeck.c (parser_build_binary_op): Likewise.\n \t(c_finish_if_stmt): Likewise.\n+\t* c-common.c (check_function_sentinel): Likewise.\n+\t(check_nonnull_arg): Likewise.\n \n 2005-07-21  Richard Henderson  <rth@redhat.com>\n "}, {"sha": "8646b4cc7ee28b6002d01e5e4ba4c533f1745fe8", "filename": "gcc/c-common.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30480ec4bb9c2ec84d954943728b0d75ba00aa01/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30480ec4bb9c2ec84d954943728b0d75ba00aa01/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=30480ec4bb9c2ec84d954943728b0d75ba00aa01", "patch": "@@ -5259,7 +5259,8 @@ check_function_sentinel (tree attrs, tree params, tree typelist)\n       }\n       \n       if (typelist || !params)\n-\twarning (0, \"not enough variable arguments to fit a sentinel\");\n+\twarning (OPT_Wformat,\n+\t\t \"not enough variable arguments to fit a sentinel\");\n       else\n         {\n \t  tree sentinel, end;\n@@ -5281,7 +5282,8 @@ check_function_sentinel (tree attrs, tree params, tree typelist)\n \t    }\n \t  if (pos > 0)\n \t    {\n-\t      warning (0, \"not enough variable arguments to fit a sentinel\");\n+\t      warning (OPT_Wformat,\n+\t\t       \"not enough variable arguments to fit a sentinel\");\n \t      return;\n \t    }\n \n@@ -5302,7 +5304,7 @@ check_function_sentinel (tree attrs, tree params, tree typelist)\n \t\t We warn with -Wstrict-null-sentinel, though.  */\n               && (warn_strict_null_sentinel\n \t\t  || null_node != TREE_VALUE (sentinel)))\n-\t    warning (0, \"missing sentinel in function call\");\n+\t    warning (OPT_Wformat, \"missing sentinel in function call\");\n \t}\n     }\n }\n@@ -5344,8 +5346,8 @@ check_nonnull_arg (void * ARG_UNUSED (ctx), tree param,\n     return;\n \n   if (integer_zerop (param))\n-    warning (0, \"null argument where non-null required (argument %lu)\",\n-\t     (unsigned long) param_num);\n+    warning (OPT_Wnonnull, \"null argument where non-null required \"\n+\t     \"(argument %lu)\", (unsigned long) param_num);\n }\n \n /* Helper for nonnull attribute handling; fetch the operand number"}]}