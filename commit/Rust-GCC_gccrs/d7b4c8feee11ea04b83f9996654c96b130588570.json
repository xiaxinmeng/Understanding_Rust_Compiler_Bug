{"sha": "d7b4c8feee11ea04b83f9996654c96b130588570", "node_id": "C_kwDOANBUbNoAKGQ3YjRjOGZlZWUxMWVhMDRiODNmOTk5NjY1NGM5NmIxMzA1ODg1NzA", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-03-02T10:04:35Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-03-02T10:04:35Z"}, "message": "testsuite: Fix up pr104637 testcase [PR104637]\n\nThis testcase FAILs everywhere for 3 reasons:\n1) the testcase can't work on ia32, where sizeof (long double) == 12\n   and as it is not a power of 2, we disallow creating vectors with such\n   elements, -mx32 and -m64 are fine\n2) the testcase emits a lot of -Wdiv-by-zero warnings, I've just added\n   -Wno-div-by-zero to dg-options\n3) my fault, when tweaking the testcase I've missed 33 initializers of\n   a 32 element vector which didn't change anything on the ICE, but is\n   still reported\n\nThis patch fixes all of it, tested with\nRUNTESTFLAGS='--target_board=unix\\{-m32,-m64\\} i386.exp=pr104637.c'\nboth without the LRA fix where it ICEs and with it where it passes\neverywhere.\n\n2022-03-02  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR rtl-optimization/104637\n\t* gcc.target/i386/pr104637.c: Don't run on ia32.  Add -Wno-div-by-zero\n\tto dg-options.\n\t(foo): Remove extraneous initializer.", "tree": {"sha": "56850b821c5a541b83b1b48c0f355b2bc844e432", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56850b821c5a541b83b1b48c0f355b2bc844e432"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7b4c8feee11ea04b83f9996654c96b130588570", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7b4c8feee11ea04b83f9996654c96b130588570", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7b4c8feee11ea04b83f9996654c96b130588570", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7b4c8feee11ea04b83f9996654c96b130588570/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58394373a70f4381bcc6d86423cffa05759b699c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58394373a70f4381bcc6d86423cffa05759b699c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58394373a70f4381bcc6d86423cffa05759b699c"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "36e8b6ed97dea66287453ba6bc1dbddb4d32fc96", "filename": "gcc/testsuite/gcc.target/i386/pr104637.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7b4c8feee11ea04b83f9996654c96b130588570/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104637.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7b4c8feee11ea04b83f9996654c96b130588570/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104637.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104637.c?ref=d7b4c8feee11ea04b83f9996654c96b130588570", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-Og -fno-forward-propagate -mavx\" } */\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-Og -fno-forward-propagate -mavx -Wno-div-by-zero\" } */\n \n typedef short __attribute__((__vector_size__ (64))) U;\n typedef unsigned long long __attribute__((__vector_size__ (32))) V;\n@@ -13,7 +13,7 @@ void\n foo (char a, char b, _Complex char c, V v)\n {\n   u = (U) { u[0] / 0, u[1] / 0, u[2] / 0, u[3] / 0, u[4] / 0, u[5] / 0, u[6] / 0, u[7] / 0,\n-\t    u[8] / 0, u[0] / 0, u[9] / 0, u[10] / 0, u[11] / 0, u[12] / 0, u[13] / 0, u[14] / 0, u[15] / 0,\n+\t    u[8] / 0, u[9] / 0, u[10] / 0, u[11] / 0, u[12] / 0, u[13] / 0, u[14] / 0, u[15] / 0,\n \t    u[16] / 0, u[17] / 0, u[18] / 0, u[19] / 0, u[20] / 0, u[21] / 0, u[22] / 0, u[23] / 0,\n \t    u[24] / 0, u[25] / 0, u[26] / 0, u[27] / 0, u[28] / 0, u[29] / 0, u[30] / 0, u[31] / 0 };\n   c += i;"}]}