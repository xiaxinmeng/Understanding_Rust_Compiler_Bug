{"sha": "55d4e6c0909277e0cd19e05de382ac87895b0db8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVkNGU2YzA5MDkyNzdlMGNkMTllMDVkZTM4MmFjODc4OTViMGRiOA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2007-08-31T10:22:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-31T10:22:15Z"}, "message": "exp_ch3.adb (Build_Record_Init_Proc): If there is a static initialization aggregate for the type...\n\n2007-08-31  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch3.adb (Build_Record_Init_Proc): If there is a static\n\tinitialization aggregate for the type, generate itype references for\n\tthetypes of its (sub)components, to prevent out-of-scope errors in gigi.\n\nFrom-SVN: r127972", "tree": {"sha": "22fe6783590bb43ac3b19495cce6ab42ba9d18a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22fe6783590bb43ac3b19495cce6ab42ba9d18a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55d4e6c0909277e0cd19e05de382ac87895b0db8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55d4e6c0909277e0cd19e05de382ac87895b0db8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55d4e6c0909277e0cd19e05de382ac87895b0db8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55d4e6c0909277e0cd19e05de382ac87895b0db8/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f7d2a3f74ae12f8bfec0e273b5d405e4db73b0b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7d2a3f74ae12f8bfec0e273b5d405e4db73b0b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7d2a3f74ae12f8bfec0e273b5d405e4db73b0b7"}], "stats": {"total": 70, "additions": 66, "deletions": 4}, "files": [{"sha": "9c933bb2dc34470c015f9e4aa0fcab7a9e6afb1e", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 66, "deletions": 4, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55d4e6c0909277e0cd19e05de382ac87895b0db8/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55d4e6c0909277e0cd19e05de382ac87895b0db8/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=55d4e6c0909277e0cd19e05de382ac87895b0db8", "patch": "@@ -3091,8 +3091,70 @@ package body Exp_Ch3 is\n             Set_Debug_Info_Off (Proc_Id);\n          end if;\n \n-         Set_Static_Initialization\n-           (Proc_Id, Build_Equivalent_Record_Aggregate (Rec_Type));\n+         declare\n+            Agg : constant Node_Id :=\n+                    Build_Equivalent_Record_Aggregate (Rec_Type);\n+\n+            procedure Collect_Itypes (Comp : Node_Id);\n+            --  Generate references to itypes in the aggregate, because\n+            --  the first use of the aggregate may be in a nested scope.\n+\n+            --------------------\n+            -- Collect_Itypes --\n+            --------------------\n+\n+            procedure Collect_Itypes (Comp : Node_Id) is\n+               Ref      : Node_Id;\n+               Sub_Aggr : Node_Id;\n+               Typ      : Entity_Id;\n+\n+            begin\n+               if Is_Array_Type (Etype (Comp))\n+                 and then Is_Itype (Etype (Comp))\n+               then\n+                  Typ := Etype (Comp);\n+                  Ref := Make_Itype_Reference (Loc);\n+                  Set_Itype (Ref, Typ);\n+                  Append_Freeze_Action (Rec_Type, Ref);\n+\n+                  Ref := Make_Itype_Reference (Loc);\n+                  Set_Itype (Ref, Etype (First_Index (Typ)));\n+                  Append_Freeze_Action (Rec_Type, Ref);\n+\n+                  Sub_Aggr := First (Expressions (Comp));\n+\n+                  --  Recurse on nested arrays\n+\n+                  while Present (Sub_Aggr) loop\n+                     Collect_Itypes (Sub_Aggr);\n+                     Next (Sub_Aggr);\n+                  end loop;\n+               end if;\n+            end Collect_Itypes;\n+\n+         begin\n+            --  If there is a static initialization aggregate for the type,\n+            --  generate itype references for the types of its (sub)components,\n+            --  to prevent out-of-scope errors in the resulting tree.\n+            --  The aggregate may have been rewritten as a Raise node, in which\n+            --  case there are no relevant itypes.\n+\n+            if Present (Agg)\n+              and then Nkind (Agg) = N_Aggregate\n+            then\n+               Set_Static_Initialization (Proc_Id, Agg);\n+\n+               declare\n+                  Comp  : Node_Id;\n+               begin\n+                  Comp := First (Component_Associations (Agg));\n+                  while Present (Comp) loop\n+                     Collect_Itypes (Expression (Comp));\n+                     Next (Comp);\n+                  end loop;\n+               end;\n+            end if;\n+         end;\n       end if;\n    end Build_Record_Init_Proc;\n \n@@ -6779,9 +6841,9 @@ package body Exp_Ch3 is\n       Formal      : Entity_Id;\n       Par_Formal  : Entity_Id;\n       Formal_Node : Node_Id;\n-      Func_Spec   : Node_Id;\n-      Func_Decl   : Node_Id;\n       Func_Body   : Node_Id;\n+      Func_Decl   : Node_Id;\n+      Func_Spec   : Node_Id;\n       Return_Stmt : Node_Id;\n \n    begin"}]}