{"sha": "574c75a3b4ce0f087201efb26f893df20ac3a887", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc0Yzc1YTNiNGNlMGYwODcyMDFlZmIyNmY4OTNkZjIwYWMzYTg4Nw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1993-03-30T21:50:50Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1993-03-30T21:50:50Z"}, "message": "fkx\n\n\nfix CLASS_MAX_NREGS to reflect -mfloat64 and -msoft-float.\n\nFrom-SVN: r3931", "tree": {"sha": "f173f836adf4d8efb42c180d7cd5a786a3acf361", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f173f836adf4d8efb42c180d7cd5a786a3acf361"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/574c75a3b4ce0f087201efb26f893df20ac3a887", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/574c75a3b4ce0f087201efb26f893df20ac3a887", "html_url": "https://github.com/Rust-GCC/gccrs/commit/574c75a3b4ce0f087201efb26f893df20ac3a887", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/574c75a3b4ce0f087201efb26f893df20ac3a887/comments", "author": null, "committer": null, "parents": [{"sha": "dbc131f3ccb06fb898a095ef11289cb56ddc62e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbc131f3ccb06fb898a095ef11289cb56ddc62e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbc131f3ccb06fb898a095ef11289cb56ddc62e4"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "f3a2ead7bea61cdd3936d4a444cc49abc7c5a687", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/574c75a3b4ce0f087201efb26f893df20ac3a887/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/574c75a3b4ce0f087201efb26f893df20ac3a887/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=574c75a3b4ce0f087201efb26f893df20ac3a887", "patch": "@@ -645,7 +645,7 @@ while (0)\n \f\n /* Print subsidiary information on the compiler version in use.  */\n \n-#define MIPS_VERSION \"[AL 1.1, MM 36]\"\n+#define MIPS_VERSION \"[AL 1.1, MM 37]\"\n \n #ifndef MACHINE_TYPE\n #define MACHINE_TYPE \"BSD Mips\"\n@@ -1454,10 +1454,15 @@ extern enum reg_class mips_char_to_class[];\n /* Return the maximum number of consecutive registers\n    needed to represent mode MODE in a register of class CLASS.  */\n \n+#define CLASS_UNITS(mode, num)\t\t\t\t\t\t\\\n+  ((GET_MODE_SIZE (mode) + ((num) * UNITS_PER_WORD) + 1) / ((num) * UNITS_PER_WORD))\n+\n #define CLASS_MAX_NREGS(CLASS, MODE)\t\t\t\t\t\\\n- ((((MODE) == DFmode) || ((MODE) == SFmode)) ? 2\t\t\t\\\n-  : ((MODE) == VOIDmode)? ((CLASS) == FP_REGS ? 2 : 1)\t\t\t\\\n-  : ((GET_MODE_SIZE (MODE) + UNITS_PER_WORD - 1) / UNITS_PER_WORD))\n+  (((CLASS) == FP_REGS && TARGET_FLOAT64)\t\t\t\t\\\n+\t? CLASS_UNITS (MODE, 2)\t\t\t\t\t\t\\\n+\t: (((CLASS) == FP_REGS)\t\t\t\t\t\t\\\n+\t\t? (2*CLASS_UNITS (MODE, 1))\t\t\t\t\\\n+\t\t: CLASS_UNITS (MODE, 1)))\n \n /* If defined, this is a C expression whose value should be\n    nonzero if the insn INSN has the effect of mysteriously"}]}