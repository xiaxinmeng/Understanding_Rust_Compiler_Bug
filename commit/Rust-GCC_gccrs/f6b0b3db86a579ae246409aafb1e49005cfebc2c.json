{"sha": "f6b0b3db86a579ae246409aafb1e49005cfebc2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZiMGIzZGI4NmE1NzlhZTI0NjQwOWFhZmIxZTQ5MDA1Y2ZlYmMyYw==", "commit": {"author": {"name": "Andreas Arnez", "email": "arnez@linux.vnet.ibm.com", "date": "2015-11-09T15:31:32Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2015-11-09T15:31:32Z"}, "message": "[PR debug/67192] Fix C loops' back-jump location\n\ngcc/c/ChangeLog:\n\n\tPR debug/67192\n\t* c-parser.c (c_parser_while_statement): Finish the loop before\n\tparsing ahead for misleading indentation.\n\t(c_parser_for_statement): Likewise.\n\ngcc/testsuite/ChangeLog:\n\n\tPR debug/67192\n\t* gcc.dg/guality/pr67192.c: New test.\n\nFrom-SVN: r230023", "tree": {"sha": "212fe5f1a13669d66d4d51f3f41b7971c1026e86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/212fe5f1a13669d66d4d51f3f41b7971c1026e86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6b0b3db86a579ae246409aafb1e49005cfebc2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6b0b3db86a579ae246409aafb1e49005cfebc2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6b0b3db86a579ae246409aafb1e49005cfebc2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6b0b3db86a579ae246409aafb1e49005cfebc2c/comments", "author": null, "committer": null, "parents": [{"sha": "0e657ecb98b8413b41975ddfce8e240186720977", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e657ecb98b8413b41975ddfce8e240186720977", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e657ecb98b8413b41975ddfce8e240186720977"}], "stats": {"total": 78, "additions": 72, "deletions": 6}, "files": [{"sha": "7e22943f4e9dd6b006e2ef16827e092b961f65da", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6b0b3db86a579ae246409aafb1e49005cfebc2c/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6b0b3db86a579ae246409aafb1e49005cfebc2c/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=f6b0b3db86a579ae246409aafb1e49005cfebc2c", "patch": "@@ -1,3 +1,10 @@\n+2015-11-09  Andreas Arnez  <arnez@linux.vnet.ibm.com>\n+\n+\tPR debug/67192\n+\t* c-parser.c (c_parser_while_statement): Finish the loop before\n+\tparsing ahead for misleading indentation.\n+\t(c_parser_for_statement): Likewise.\n+\n 2015-11-08  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* c-decl.c (finish_struct): If the structure has reverse storage"}, {"sha": "66eb2dd188a2d98be69b0a840816f718b25f6956", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6b0b3db86a579ae246409aafb1e49005cfebc2c/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6b0b3db86a579ae246409aafb1e49005cfebc2c/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=f6b0b3db86a579ae246409aafb1e49005cfebc2c", "patch": "@@ -5437,13 +5437,13 @@ c_parser_while_statement (c_parser *parser, bool ivdep)\n     = get_token_indent_info (c_parser_peek_token (parser));\n \n   body = c_parser_c99_block_statement (parser);\n+  c_finish_loop (loc, cond, NULL, body, c_break_label, c_cont_label, true);\n+  add_stmt (c_end_compound_stmt (loc, block, flag_isoc99));\n \n   token_indent_info next_tinfo\n     = get_token_indent_info (c_parser_peek_token (parser));\n   warn_for_misleading_indentation (while_tinfo, body_tinfo, next_tinfo);\n \n-  c_finish_loop (loc, cond, NULL, body, c_break_label, c_cont_label, true);\n-  add_stmt (c_end_compound_stmt (loc, block, flag_isoc99));\n   c_break_label = save_break;\n   c_cont_label = save_cont;\n }\n@@ -5727,15 +5727,16 @@ c_parser_for_statement (c_parser *parser, bool ivdep)\n \n   body = c_parser_c99_block_statement (parser);\n \n-  token_indent_info next_tinfo\n-    = get_token_indent_info (c_parser_peek_token (parser));\n-  warn_for_misleading_indentation (for_tinfo, body_tinfo, next_tinfo);\n-\n   if (is_foreach_statement)\n     objc_finish_foreach_loop (loc, object_expression, collection_expression, body, c_break_label, c_cont_label);\n   else\n     c_finish_loop (loc, cond, incr, body, c_break_label, c_cont_label, true);\n   add_stmt (c_end_compound_stmt (loc, block, flag_isoc99 || c_dialect_objc ()));\n+\n+  token_indent_info next_tinfo\n+    = get_token_indent_info (c_parser_peek_token (parser));\n+  warn_for_misleading_indentation (for_tinfo, body_tinfo, next_tinfo);\n+\n   c_break_label = save_break;\n   c_cont_label = save_cont;\n }"}, {"sha": "a23420e34f498639fea35e4ac2777068543bea23", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6b0b3db86a579ae246409aafb1e49005cfebc2c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6b0b3db86a579ae246409aafb1e49005cfebc2c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f6b0b3db86a579ae246409aafb1e49005cfebc2c", "patch": "@@ -1,3 +1,8 @@\n+2015-11-09  Andreas Arnez  <arnez@linux.vnet.ibm.com>\n+\n+\tPR debug/67192\n+\t* gcc.dg/guality/pr67192.c: New test.\n+\n 2015-11-09  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/68248"}, {"sha": "f6382ef98c15ac7ed9a486fb7b1793d778023ae2", "filename": "gcc/testsuite/gcc.dg/guality/pr67192.c", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6b0b3db86a579ae246409aafb1e49005cfebc2c/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr67192.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6b0b3db86a579ae246409aafb1e49005cfebc2c/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr67192.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr67192.c?ref=f6b0b3db86a579ae246409aafb1e49005cfebc2c", "patch": "@@ -0,0 +1,53 @@\n+/* PR debug/67192 */\n+/* { dg-do run } */\n+/* { dg-options \"-g -Wmisleading-indentation\" } */\n+\n+volatile int cnt = 0;\n+\n+__attribute__((noinline, noclone)) static int\n+last (void)\n+{\n+  return ++cnt % 5 == 0;\n+}\n+\n+__attribute__((noinline, noclone)) static void\n+do_it (void)\n+{\n+  asm volatile (\"\" : : \"r\" (&cnt) : \"memory\");\n+}\n+\n+__attribute__((noinline, noclone)) static void\n+f1 (void)\n+{\n+  for (;; do_it())\n+    {\n+      if (last ())\n+\tbreak;\n+    }\n+  do_it (); /* { dg-final { gdb-test 27 \"cnt\" \"5\" } } */\n+}\n+\n+__attribute__((noinline, noclone)) static void\n+f2 (void)\n+{\n+  while (1)\n+    {\n+      if (last ())\n+\tbreak;\n+      do_it ();\n+    }\n+  do_it (); /* { dg-final { gdb-test 39 \"cnt\" \"10\" } } */\n+}\n+\n+void (*volatile fnp1) (void) = f1;\n+void (*volatile fnp2) (void) = f2;\n+\n+int\n+main ()\n+{\n+  asm volatile (\"\" : : \"r\" (&fnp1) : \"memory\");\n+  asm volatile (\"\" : : \"r\" (&fnp2) : \"memory\");\n+  fnp1 ();\n+  fnp2 ();\n+  return 0;\n+}"}]}