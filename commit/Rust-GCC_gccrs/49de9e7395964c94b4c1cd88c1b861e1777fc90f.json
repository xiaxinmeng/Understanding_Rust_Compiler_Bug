{"sha": "49de9e7395964c94b4c1cd88c1b861e1777fc90f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDlkZTllNzM5NTk2NGM5NGI0YzFjZDg4YzFiODYxZTE3NzdmYzkwZg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2005-08-06T12:56:19Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-08-06T12:56:19Z"}, "message": "decl.c, [...]: Fix comment/doc typos.\n\n\t* decl.c, dump-parse-tree.c, gfortran.texi, intrinsic.texi,\n\tinvoke.texi, resolve.c, trans-array.c, trans-array.h,\n\ttrans-common.c, trans-expr.c, trans-io.c, trans.h: Fix\n\tcomment/doc typos.  Follow spelling conventions.\n\nFrom-SVN: r102806", "tree": {"sha": "d87937ef8f8d9314aa2f784cad022b79193458bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d87937ef8f8d9314aa2f784cad022b79193458bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49de9e7395964c94b4c1cd88c1b861e1777fc90f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49de9e7395964c94b4c1cd88c1b861e1777fc90f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49de9e7395964c94b4c1cd88c1b861e1777fc90f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49de9e7395964c94b4c1cd88c1b861e1777fc90f/comments", "author": null, "committer": null, "parents": [{"sha": "591baeb02089799b46e5d320bc6f403d583fe3e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/591baeb02089799b46e5d320bc6f403d583fe3e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/591baeb02089799b46e5d320bc6f403d583fe3e9"}], "stats": {"total": 37, "additions": 22, "deletions": 15}, "files": [{"sha": "ed6ebeafadcbf176df786bc01635e93e29977256", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=49de9e7395964c94b4c1cd88c1b861e1777fc90f", "patch": "@@ -1,3 +1,10 @@\n+2005-08-06  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* decl.c, dump-parse-tree.c, gfortran.texi, intrinsic.texi,\n+\tinvoke.texi, resolve.c, trans-array.c, trans-array.h,\n+\ttrans-common.c, trans-expr.c, trans-io.c, trans.h: Fix\n+\tcomment/doc typos.  Follow spelling conventions.\n+\n 2005-08-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/18833"}, {"sha": "ce47150b76df97bd45da037044f3d308acba7ee1", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=49de9e7395964c94b4c1cd88c1b861e1777fc90f", "patch": "@@ -3229,7 +3229,7 @@ gfc_match_save (void)\n \n /* Match a module procedure statement.  Note that we have to modify\n    symbols in the parent's namespace because the current one was there\n-   to receive symbols that are in a interface's formal argument list.  */\n+   to receive symbols that are in an interface's formal argument list.  */\n \n match\n gfc_match_modproc (void)"}, {"sha": "2968c6c022896df21c7474331af2b3eb8549c35d", "filename": "gcc/fortran/dump-parse-tree.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2Fdump-parse-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2Fdump-parse-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdump-parse-tree.c?ref=49de9e7395964c94b4c1cd88c1b861e1777fc90f", "patch": "@@ -122,7 +122,7 @@ gfc_show_actual_arglist (gfc_actual_arglist * a)\n }\n \n \n-/* Show an gfc_array_spec array specification structure.  */\n+/* Show a gfc_array_spec array specification structure.  */\n \n static void\n gfc_show_array_spec (gfc_array_spec * as)\n@@ -165,7 +165,7 @@ gfc_show_array_spec (gfc_array_spec * as)\n }\n \n \n-/* Show an gfc_array_ref array reference structure.  */\n+/* Show a gfc_array_ref array reference structure.  */\n \n static void\n gfc_show_array_ref (gfc_array_ref * ar)"}, {"sha": "30acb8f70c18cd71a56112bbb6320b060b13186f", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=49de9e7395964c94b4c1cd88c1b861e1777fc90f", "patch": "@@ -798,7 +798,7 @@ As a GNU extension for backwards compatibility with other compilers,\n and vice versa.  When converting from a LOGICAL to an INTEGER, the numeric\n value of @code{.FALSE.} is zero, and that of @code{.TRUE.} is one.  When\n converting from INTEGER to LOGICAL, the value zero is interpreted as\n-@code{.FALSE.} and any non-zero value is interpreted as @code{.TRUE.}.\n+@code{.FALSE.} and any nonzero value is interpreted as @code{.TRUE.}.\n \n @smallexample\n        INTEGER*4 i"}, {"sha": "0ac6a54b481fa4fa83bad86a8af35bf347080c63", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=49de9e7395964c94b4c1cd88c1b861e1777fc90f", "patch": "@@ -2684,7 +2684,7 @@ end program test_floor\n \n @table @asis\n @item @emph{Description}:\n-@code{FNUM(UNIT)} returns the Posix file descriptor number coresponding to the\n+@code{FNUM(UNIT)} returns the Posix file descriptor number corresponding to the\n open Fortran I/O unit @code{UNIT}.\n \n @item @emph{Option}:"}, {"sha": "1d14698bf97693e2e715de3e93d1c0a804c4043e", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=49de9e7395964c94b4c1cd88c1b861e1777fc90f", "patch": "@@ -179,7 +179,7 @@ that the compiler accepts:\n @cindex Fortran 90, features\n @item -ffree-form\n @item -ffixed-form\n-Specify the layout used by the the source file. The free form layout\n+Specify the layout used by the source file.  The free form layout\n was introduced in Fortran 90.  Fixed form was traditionally used in\n older Fortran programs.\n "}, {"sha": "d0fa4d9f3cdac6096054dc3a99edaa1333842bc1", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=49de9e7395964c94b4c1cd88c1b861e1777fc90f", "patch": "@@ -404,7 +404,7 @@ resolve_entries (gfc_namespace * ns)\n \t}\n       else\n \t{\n-\t  /* Otherwise the result will be passed through an union by\n+\t  /* Otherwise the result will be passed through a union by\n \t     reference.  */\n \t  proc->attr.mixed_entry_master = 1;\n \t  for (el = ns->entries; el; el = el->next)"}, {"sha": "ca009492090f66120c12fefa1718218bb887e947", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=49de9e7395964c94b4c1cd88c1b861e1777fc90f", "patch": "@@ -286,7 +286,7 @@ gfc_conv_descriptor_ubound (tree desc, tree dim)\n }\n \n \n-/* Build an null array descriptor constructor.  */\n+/* Build a null array descriptor constructor.  */\n \n tree\n gfc_build_null_descriptor (tree type)"}, {"sha": "403b42fd01f7805b8ade5956c825b4960079ef4d", "filename": "gcc/fortran/trans-array.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2Ftrans-array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2Ftrans-array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.h?ref=49de9e7395964c94b4c1cd88c1b861e1777fc90f", "patch": "@@ -72,7 +72,7 @@ void gfc_trans_scalarized_loop_boundary (gfc_loopinfo *, stmtblock_t *);\n void gfc_conv_loop_setup (gfc_loopinfo *);\n /* Resolve array assignment dependencies.  */\n void gfc_conv_resolve_dependencies (gfc_loopinfo *, gfc_ss *, gfc_ss *);\n-/* Build an null array descriptor constructor.  */\n+/* Build a null array descriptor constructor.  */\n tree gfc_build_null_descriptor (tree);\n \n /* Get a single array element.  */"}, {"sha": "ecdfd2c53ed14a49b5830427d4b58e58d571c18b", "filename": "gcc/fortran/trans-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2Ftrans-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2Ftrans-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-common.c?ref=49de9e7395964c94b4c1cd88c1b861e1777fc90f", "patch": "@@ -105,7 +105,7 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n #include \"trans-const.h\"\n \n \n-/* Holds a single variable in a equivalence set.  */\n+/* Holds a single variable in an equivalence set.  */\n typedef struct segment_info\n {\n   gfc_symbol *sym;"}, {"sha": "0e4e55dc69dc602d825e11c74e649fe9f7fd564d", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=49de9e7395964c94b4c1cd88c1b861e1777fc90f", "patch": "@@ -1074,7 +1074,7 @@ gfc_conv_function_val (gfc_se * se, gfc_symbol * sym)\n \n /* Generate code for a procedure call.  Note can return se->post != NULL.\n    If se->direct_byref is set then se->expr contains the return parameter.\n-   Return non-zero, if the call has alternate specifiers.  */\n+   Return nonzero, if the call has alternate specifiers.  */\n \n int\n gfc_conv_function_call (gfc_se * se, gfc_symbol * sym,"}, {"sha": "2af6eb3c292e343dad9b63042c2baaad6674464b", "filename": "gcc/fortran/trans-io.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2Ftrans-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2Ftrans-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-io.c?ref=49de9e7395964c94b4c1cd88c1b861e1777fc90f", "patch": "@@ -327,7 +327,7 @@ gfc_build_io_library_fndecls (void)\n }\n \n \n-/* Generate code to store an non-string I/O parameter into the\n+/* Generate code to store a non-string I/O parameter into the\n    ioparm structure.  This is a pass by value.  */\n \n static void\n@@ -345,7 +345,7 @@ set_parameter_value (stmtblock_t * block, tree var, gfc_expr * e)\n }\n \n \n-/* Generate code to store an non-string I/O parameter into the\n+/* Generate code to store a non-string I/O parameter into the\n    ioparm structure.  This is pass by reference.  */\n \n static void"}, {"sha": "62f79538e8f67baf951a765d428290f95bd1f73f", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49de9e7395964c94b4c1cd88c1b861e1777fc90f/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=49de9e7395964c94b4c1cd88c1b861e1777fc90f", "patch": "@@ -357,7 +357,7 @@ tree gfc_build_indirect_ref (tree);\n /* Build an ARRAY_REF.  */\n tree gfc_build_array_ref (tree, tree);\n \n-/* Creates an label.  Decl is artificial if label_id == NULL_TREE.  */\n+/* Creates a label.  Decl is artificial if label_id == NULL_TREE.  */\n tree gfc_build_label_decl (tree);\n \n /* Return the decl used to hold the function return value.\n@@ -420,7 +420,7 @@ void gfc_trans_runtime_check (tree, tree, stmtblock_t *);\n /* Generate code for an assignment, includes scalarization.  */\n tree gfc_trans_assignment (gfc_expr *, gfc_expr *);\n \n-/* Generate code for an pointer assignment.  */\n+/* Generate code for a pointer assignment.  */\n tree gfc_trans_pointer_assignment (gfc_expr *, gfc_expr *);\n \n /* Initialize function decls for library functions.  */"}]}