{"sha": "75bef4340507e9c9defcfdb6c3cfd916a4a64786", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzViZWY0MzQwNTA3ZTljOWRlZmNmZGI2YzNjZmQ5MTZhNGE2NDc4Ng==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2001-06-26T23:12:45Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-06-26T23:12:45Z"}, "message": "stream_iterator.h (istream_iterator): Add copy ctor.\n\n\n2001-06-26  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/bits/stream_iterator.h (istream_iterator): Add copy ctor.\n\t(ostream_iterator): Same.\n\t* include/bits/stl_iterator.h (front_insert_iterator::operator=):\n\tChange argument to const_reference.\n\t(back_insert_iterator): Same.\n\nFrom-SVN: r43596", "tree": {"sha": "4ca678fe72ffbc2c8e248801fa419b687b5fd2d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ca678fe72ffbc2c8e248801fa419b687b5fd2d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75bef4340507e9c9defcfdb6c3cfd916a4a64786", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75bef4340507e9c9defcfdb6c3cfd916a4a64786", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75bef4340507e9c9defcfdb6c3cfd916a4a64786", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75bef4340507e9c9defcfdb6c3cfd916a4a64786/comments", "author": null, "committer": null, "parents": [{"sha": "767094ddfda30cbecd8944f64395640b217446b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/767094ddfda30cbecd8944f64395640b217446b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/767094ddfda30cbecd8944f64395640b217446b5"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "18b3b5d22d023a065ed5975d2ea526b91bea82c1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75bef4340507e9c9defcfdb6c3cfd916a4a64786/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75bef4340507e9c9defcfdb6c3cfd916a4a64786/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=75bef4340507e9c9defcfdb6c3cfd916a4a64786", "patch": "@@ -1,3 +1,11 @@\n+2001-06-26  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/bits/stream_iterator.h (istream_iterator): Add copy ctor.\n+\t(ostream_iterator): Same.\n+\t* include/bits/stl_iterator.h (front_insert_iterator::operator=):\n+\tChange argument to const_reference.\n+\t(back_insert_iterator): Same.\n+\t\n 2001-06-26  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/sbuf_iter.h: Change to.."}, {"sha": "eb638923b03b737f7e2e0f3ef0afc66d5d197996", "filename": "libstdc++-v3/include/bits/stl_iterator.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75bef4340507e9c9defcfdb6c3cfd916a4a64786/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75bef4340507e9c9defcfdb6c3cfd916a4a64786/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h?ref=75bef4340507e9c9defcfdb6c3cfd916a4a64786", "patch": "@@ -196,7 +196,7 @@ namespace std\n       back_insert_iterator(_Container& __x) : container(&__x) {}\n \n       back_insert_iterator&\n-      operator=(const typename _Container::value_type& __value) \n+      operator=(const typename _Container::const_reference __value) \n       { \n \tcontainer->push_back(__value);\n \treturn *this;\n@@ -230,7 +230,7 @@ namespace std\n       explicit front_insert_iterator(_Container& __x) : container(&__x) {}\n \n       front_insert_iterator&\n-      operator=(const typename _Container::value_type& __value) \n+      operator=(const typename _Container::const_reference __value) \n       { \n \tcontainer->push_front(__value);\n \treturn *this;"}, {"sha": "c6bde4edf17eadf24dd4734ce3df7ebefad71293", "filename": "libstdc++-v3/include/bits/stream_iterator.h", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75bef4340507e9c9defcfdb6c3cfd916a4a64786/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstream_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75bef4340507e9c9defcfdb6c3cfd916a4a64786/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstream_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstream_iterator.h?ref=75bef4340507e9c9defcfdb6c3cfd916a4a64786", "patch": "@@ -51,8 +51,14 @@ namespace std\n \n     public:      \n       istream_iterator() : _M_stream(0), _M_ok(false) {}\n+\n       istream_iterator(istream_type& __s) : _M_stream(&__s) { _M_read(); }\n \n+      istream_iterator(const istream_iterator& __obj) \n+      : _M_stream(__obj._M_stream), _M_value(__obj._M_value), \n+        _M_ok(__obj._M_ok) \n+      { }\n+\n       const _Tp&\n       operator*() const { return _M_value; }\n \n@@ -96,9 +102,9 @@ namespace std\n \n   template <class _Tp, class _CharT, class _Traits, class _Dist>\n     inline bool \n-  operator!=(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x,\n-\t     const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __y) \n-  { return !__x._M_equal(__y); }\n+    operator!=(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x,\n+\t       const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __y) \n+    { return !__x._M_equal(__y); }\n \n \n   template<typename _Tp, typename _CharT = char, \n@@ -117,8 +123,12 @@ namespace std\n \n     public:\n       ostream_iterator(ostream_type& __s) : _M_stream(&__s), _M_string(0) {}\n+\n       ostream_iterator(ostream_type& __s, const _CharT* __c) \n-\t: _M_stream(&__s), _M_string(__c)  { }\n+      : _M_stream(&__s), _M_string(__c)  { }\n+\n+      ostream_iterator(const ostream_iterator& __obj)\n+      : _M_stream(__obj._M_stream), _M_string(__obj._M_string)  { }\n \n       ostream_iterator& \n       operator=(const _Tp& __value) "}]}