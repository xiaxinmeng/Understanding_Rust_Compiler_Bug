{"sha": "866c72a837a675573a684d3275cd562ff156d940", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY2YzcyYTgzN2E2NzU1NzNhNjg0ZDMyNzVjZDU2MmZmMTU2ZDk0MA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-10-24T07:00:53Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-10-24T07:00:53Z"}, "message": "Do not disable aggressive loop opts for\n\n\tPR sanitizer/77966\n\t* opts.c (finish_options): Skip conditionally.\n\tPR sanitizer/77966\n\t* c-c++-common/ubsan/unreachable-3.c: New test.\n\nFrom-SVN: r241463", "tree": {"sha": "82479a6afe1a6bc492ad6bab970f45d7d4382d5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82479a6afe1a6bc492ad6bab970f45d7d4382d5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/866c72a837a675573a684d3275cd562ff156d940", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/866c72a837a675573a684d3275cd562ff156d940", "html_url": "https://github.com/Rust-GCC/gccrs/commit/866c72a837a675573a684d3275cd562ff156d940", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/866c72a837a675573a684d3275cd562ff156d940/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "af460fd74a4b1023b598951ca16a7e137848ea39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af460fd74a4b1023b598951ca16a7e137848ea39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af460fd74a4b1023b598951ca16a7e137848ea39"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "e654d8a1fd86edd12c9052704d578c1885d5247d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/866c72a837a675573a684d3275cd562ff156d940/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/866c72a837a675573a684d3275cd562ff156d940/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=866c72a837a675573a684d3275cd562ff156d940", "patch": "@@ -1,3 +1,8 @@\n+2016-10-24  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/77966\n+\t* opts.c (finish_options): Skip conditionally.\n+\n 2016-10-23  Martin Sebor  <msebor@redhat.com>\n \n \tPR target/77837"}, {"sha": "6b34473d1a460180cf2699aeba1158c8e0943d85", "filename": "gcc/opts.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/866c72a837a675573a684d3275cd562ff156d940/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/866c72a837a675573a684d3275cd562ff156d940/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=866c72a837a675573a684d3275cd562ff156d940", "patch": "@@ -973,7 +973,7 @@ finish_options (struct gcc_options *opts, struct gcc_options *opts_set,\n     opts->x_flag_delete_null_pointer_checks = 0;\n \n   /* Aggressive compiler optimizations may cause false negatives.  */\n-  if (opts->x_flag_sanitize)\n+  if (opts->x_flag_sanitize & ~(SANITIZE_LEAK | SANITIZE_UNREACHABLE))\n     {\n       opts->x_flag_aggressive_loop_optimizations = 0;\n       opts->x_flag_strict_overflow = 0;"}, {"sha": "97fca4001cd089a3fb0fe90049c66243d3772007", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/866c72a837a675573a684d3275cd562ff156d940/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/866c72a837a675573a684d3275cd562ff156d940/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=866c72a837a675573a684d3275cd562ff156d940", "patch": "@@ -1,3 +1,8 @@\n+2016-10-24  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/77966\n+\t* c-c++-common/ubsan/unreachable-3.c: New test.\n+\n 2016-10-23  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/77763"}, {"sha": "b7a0d1aa92bf65d4e964200ba9ca756341a5bc19", "filename": "gcc/testsuite/c-c++-common/ubsan/unreachable-3.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/866c72a837a675573a684d3275cd562ff156d940/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Funreachable-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/866c72a837a675573a684d3275cd562ff156d940/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Funreachable-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Funreachable-3.c?ref=866c72a837a675573a684d3275cd562ff156d940", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fsanitize=unreachable -O2 -fno-reorder-blocks -fsanitize-coverage=trace-pc -fdump-tree-optimized\" } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-flto\" } } */\n+\n+extern unsigned int ioread32(void *);\n+struct vnic_wq_ctrl {\n+    unsigned int error_status;\n+};\n+struct snic {\n+    unsigned int wq_count;\n+    struct vnic_wq_ctrl *wq[1];\n+    int wq_lock[1];\n+};\n+void snic_log_q_error(struct snic *snic)\n+{\n+    unsigned int i;\n+    for (i = 0; i < snic->wq_count; i++)\n+        ioread32(&snic->wq[i]->error_status);\n+}\n+\n+/* { dg-final { scan-tree-dump \"__builtin___ubsan_handle_builtin_unreachable\" \"optimized\" } } */"}]}