{"sha": "ef457bda4a234a0b51446e9d04a7666183ef32db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY0NTdiZGE0YTIzNGEwYjUxNDQ2ZTlkMDRhNzY2NjE4M2VmMzJkYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-09-19T19:40:40Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-09-19T19:40:40Z"}, "message": "(PROMOTE_MODE): New macro.\n\n(BRANCH_COST): Increase from 2 to 3.\n\nFrom-SVN: r2167", "tree": {"sha": "c34849dd85f6db27361680200fd0faca21e21ba2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c34849dd85f6db27361680200fd0faca21e21ba2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef457bda4a234a0b51446e9d04a7666183ef32db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef457bda4a234a0b51446e9d04a7666183ef32db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef457bda4a234a0b51446e9d04a7666183ef32db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef457bda4a234a0b51446e9d04a7666183ef32db/comments", "author": null, "committer": null, "parents": [{"sha": "2f622005460f29dea04d53badc03ab3cfee176e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f622005460f29dea04d53badc03ab3cfee176e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f622005460f29dea04d53badc03ab3cfee176e2"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "5cbb3631f2c8e9d63a80150a187f33b0865e1f65", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef457bda4a234a0b51446e9d04a7666183ef32db/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef457bda4a234a0b51446e9d04a7666183ef32db/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=ef457bda4a234a0b51446e9d04a7666183ef32db", "patch": "@@ -104,6 +104,17 @@ extern int target_flags;\n \f\n /* target machine storage layout */\n \n+/* Define this macro if it is advisible to hold scalars in registers\n+   in a wider mode than that declared by the program.  In such cases, \n+   the value is constrained to be within the bounds of the declared\n+   type, but kept valid in the wider mode.  The signedness of the\n+   extension may differ from that of the type.  */\n+\n+#define PROMOTE_MODE(MODE,UNSIGNEDP,TYPE)  \\\n+  if (GET_MODE_CLASS (MODE) == MODE_INT\t\\\n+      && GET_MODE_SIZE (MODE) < 4)  \t\\\n+    (MODE) == SImode;\n+\n /* Define this if most significant bit is lowest numbered\n    in instructions that operate on numbered bit-fields. */\n /* That is true on RS/6000. */\n@@ -336,10 +347,10 @@ extern int target_flags;\n /* Specify the cost of a branch insn; roughly the number of extra insns that\n    should be added to avoid a branch.\n \n-   Set this to 2 on the RS/6000 since that is roughly the average cost of an\n+   Set this to 3 on the RS/6000 since that is roughly the average cost of an\n    unscheduled conditional branch.  */\n \n-#define BRANCH_COST 2\n+#define BRANCH_COST 3\n \n /* Specify the registers used for certain standard purposes.\n    The values of these macros are register numbers.  */"}]}