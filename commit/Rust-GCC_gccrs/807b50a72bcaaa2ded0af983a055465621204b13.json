{"sha": "807b50a72bcaaa2ded0af983a055465621204b13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA3YjUwYTcyYmNhYWEyZGVkMGFmOTgzYTA1NTQ2NTYyMTIwNGIxMw==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2015-01-26T15:56:03Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2015-01-26T15:56:03Z"}, "message": "re PR fortran/64230 (Invalid memory reference in a compiler-generated finalizer for allocatable component)\n\n2015-01-26  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/64230\n\t* class.c (finalize_component): New argument 'sub_ns'. Insert code to\n\tcheck if 'expr' is associated.\n\t(generate_finalization_wrapper): Rename 'ptr' symbols to 'ptr1' and\n\t'ptr2'. Pass 'sub_ns' to finalize_component.\n\n2015-01-26  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/64230\n\t* gfortran.dg/class_allocate_18.f90: New.\n\nFrom-SVN: r220125", "tree": {"sha": "1c48457ac5f8e61ec073116fae1bdfbb0a887391", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c48457ac5f8e61ec073116fae1bdfbb0a887391"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/807b50a72bcaaa2ded0af983a055465621204b13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/807b50a72bcaaa2ded0af983a055465621204b13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/807b50a72bcaaa2ded0af983a055465621204b13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/807b50a72bcaaa2ded0af983a055465621204b13/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2748ffd373cc9093e24dcb41d6648a6605e27b14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2748ffd373cc9093e24dcb41d6648a6605e27b14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2748ffd373cc9093e24dcb41d6648a6605e27b14"}], "stats": {"total": 70, "additions": 62, "deletions": 8}, "files": [{"sha": "478c59538a2e538fa3ddc4c5be9e893188c58b10", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/807b50a72bcaaa2ded0af983a055465621204b13/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/807b50a72bcaaa2ded0af983a055465621204b13/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=807b50a72bcaaa2ded0af983a055465621204b13", "patch": "@@ -1,3 +1,11 @@\n+2015-01-26  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/64230\n+\t* class.c (finalize_component): New argument 'sub_ns'. Insert code to\n+\tcheck if 'expr' is associated.\n+\t(generate_finalization_wrapper): Rename 'ptr' symbols to 'ptr1' and\n+\t'ptr2'. Pass 'sub_ns' to finalize_component.\n+\n 2015-01-25  Mikael Morin  <mikael@gcc.gnu.org>\n \n \tPR fortran/62044"}, {"sha": "786876c85d99bbf1bd889894d6261b84365b0485", "filename": "gcc/fortran/class.c", "status": "modified", "additions": 27, "deletions": 8, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/807b50a72bcaaa2ded0af983a055465621204b13/gcc%2Ffortran%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/807b50a72bcaaa2ded0af983a055465621204b13/gcc%2Ffortran%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fclass.c?ref=807b50a72bcaaa2ded0af983a055465621204b13", "patch": "@@ -881,7 +881,8 @@ comp_is_finalizable (gfc_component *comp)\n \n static void\n finalize_component (gfc_expr *expr, gfc_symbol *derived, gfc_component *comp,\n-\t\t    gfc_symbol *stat, gfc_symbol *fini_coarray, gfc_code **code)\n+\t\t    gfc_symbol *stat, gfc_symbol *fini_coarray, gfc_code **code,\n+\t\t    gfc_namespace *sub_ns)\n {\n   gfc_expr *e;\n   gfc_ref *ref;\n@@ -950,15 +951,32 @@ finalize_component (gfc_expr *expr, gfc_symbol *derived, gfc_component *comp,\n       dealloc->ext.alloc.list->expr = e;\n       dealloc->expr1 = gfc_lval_expr_from_sym (stat);\n \n+      gfc_code *cond = gfc_get_code (EXEC_IF);\n+      cond->block = gfc_get_code (EXEC_IF);\n+      cond->block->expr1 = gfc_get_expr ();\n+      cond->block->expr1->expr_type = EXPR_FUNCTION;\n+      gfc_get_sym_tree (\"associated\", sub_ns, &cond->block->expr1->symtree, false);\n+      cond->block->expr1->symtree->n.sym->attr.flavor = FL_PROCEDURE;\n+      cond->block->expr1->symtree->n.sym->attr.intrinsic = 1;\n+      cond->block->expr1->symtree->n.sym->result = cond->block->expr1->symtree->n.sym;\n+      gfc_commit_symbol (cond->block->expr1->symtree->n.sym);\n+      cond->block->expr1->ts.type = BT_LOGICAL;\n+      cond->block->expr1->ts.kind = gfc_default_logical_kind;\n+      cond->block->expr1->value.function.isym = gfc_intrinsic_function_by_id (GFC_ISYM_ASSOCIATED);\n+      cond->block->expr1->value.function.actual = gfc_get_actual_arglist ();\n+      cond->block->expr1->value.function.actual->expr = gfc_copy_expr (expr);\n+      cond->block->expr1->value.function.actual->next = gfc_get_actual_arglist ();\n+      cond->block->next = dealloc;\n+\n       if (block)\n-\tblock->next = dealloc;\n+\tblock->next = cond;\n       else if (*code)\n \t{\n-\t  (*code)->next = dealloc;\n+\t  (*code)->next = cond;\n \t  (*code) = (*code)->next;\n \t}\n       else\n-\t(*code) = dealloc;\n+\t(*code) = cond;\n     }\n   else if (comp->ts.type == BT_DERIVED\n \t    && comp->ts.u.derived->f2k_derived\n@@ -994,7 +1012,8 @@ finalize_component (gfc_expr *expr, gfc_symbol *derived, gfc_component *comp,\n       gfc_component *c;\n \n       for (c = comp->ts.u.derived->components; c; c = c->next)\n-\tfinalize_component (e, comp->ts.u.derived, c, stat, fini_coarray, code);\n+\tfinalize_component (e, comp->ts.u.derived, c, stat, fini_coarray, code,\n+\t\t\t    sub_ns);\n       gfc_free_expr (e);\n     }\n }\n@@ -1927,7 +1946,7 @@ generate_finalization_wrapper (gfc_symbol *derived, gfc_namespace *ns,\n     {\n       gfc_finalizer *fini, *fini_elem = NULL;\n \n-      gfc_get_symbol (\"ptr\", sub_ns, &ptr);\n+      gfc_get_symbol (\"ptr1\", sub_ns, &ptr);\n       ptr->ts.type = BT_DERIVED;\n       ptr->ts.u.derived = derived;\n       ptr->attr.flavor = FL_VARIABLE;\n@@ -2051,7 +2070,7 @@ generate_finalization_wrapper (gfc_symbol *derived, gfc_namespace *ns,\n \n       if (!ptr)\n \t{\n-\t  gfc_get_symbol (\"ptr\", sub_ns, &ptr);\n+\t  gfc_get_symbol (\"ptr2\", sub_ns, &ptr);\n \t  ptr->ts.type = BT_DERIVED;\n \t  ptr->ts.u.derived = derived;\n \t  ptr->attr.flavor = FL_VARIABLE;\n@@ -2100,7 +2119,7 @@ generate_finalization_wrapper (gfc_symbol *derived, gfc_namespace *ns,\n \t    continue;\n \n \t  finalize_component (gfc_lval_expr_from_sym (ptr), derived, comp,\n-\t\t\t      stat, fini_coarray, &block);\n+\t\t\t      stat, fini_coarray, &block, sub_ns);\n \t  if (!last_code->block->next)\n \t    last_code->block->next = block;\n \t}"}, {"sha": "128425f09e261f7085ae7353c3a68de4cce3a94c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/807b50a72bcaaa2ded0af983a055465621204b13/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/807b50a72bcaaa2ded0af983a055465621204b13/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=807b50a72bcaaa2ded0af983a055465621204b13", "patch": "@@ -1,3 +1,8 @@\n+2015-01-26  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/64230\n+\t* gfortran.dg/class_allocate_18.f90: New.\n+\n 2015-01-26  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vpaddl.c: New file."}, {"sha": "0dd0c68367e9828c450c152f060f2a98faba02d7", "filename": "gcc/testsuite/gfortran.dg/class_allocate_18.f90", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/807b50a72bcaaa2ded0af983a055465621204b13/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_allocate_18.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/807b50a72bcaaa2ded0af983a055465621204b13/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_allocate_18.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_allocate_18.f90?ref=807b50a72bcaaa2ded0af983a055465621204b13", "patch": "@@ -0,0 +1,22 @@\n+! { dg-do run }\n+! { dg-options \"-fsanitize=undefined\" }\n+!\n+! PR 64230: [4.9/5 Regression] Invalid memory reference in a compiler-generated finalizer for allocatable component\n+!\n+! Contributed by Mat Cross <mathewc@nag.co.uk>\n+\n+Program main\n+  Implicit None\n+  Type :: t1\n+  End Type\n+  Type, Extends (t1) :: t2\n+    Integer, Allocatable :: i\n+  End Type\n+  Type, Extends (t2) :: t3\n+    Integer, Allocatable :: j\n+  End Type\n+  Class (t1), Allocatable :: t\n+  Allocate (t3 :: t)\n+  print *,\"allocated!\"\n+  Deallocate (t)\n+End"}]}