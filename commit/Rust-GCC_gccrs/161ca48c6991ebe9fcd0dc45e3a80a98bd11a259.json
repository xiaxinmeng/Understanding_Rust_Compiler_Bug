{"sha": "161ca48c6991ebe9fcd0dc45e3a80a98bd11a259", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTYxY2E0OGM2OTkxZWJlOWZjZDBkYzQ1ZTNhODBhOThiZDExYTI1OQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-02-03T04:32:05Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-02-03T04:32:05Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r273", "tree": {"sha": "74b9bfafad187b23b3754876cdee49ce30e1e95b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74b9bfafad187b23b3754876cdee49ce30e1e95b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/161ca48c6991ebe9fcd0dc45e3a80a98bd11a259", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/161ca48c6991ebe9fcd0dc45e3a80a98bd11a259", "html_url": "https://github.com/Rust-GCC/gccrs/commit/161ca48c6991ebe9fcd0dc45e3a80a98bd11a259", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/161ca48c6991ebe9fcd0dc45e3a80a98bd11a259/comments", "author": null, "committer": null, "parents": [{"sha": "d0c843905fb80277b804d96c58d07ed444519d32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0c843905fb80277b804d96c58d07ed444519d32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0c843905fb80277b804d96c58d07ed444519d32"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "3e691ff436ac825ff27bd40fdd46e7c63bb40d29", "filename": "gcc/real.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/161ca48c6991ebe9fcd0dc45e3a80a98bd11a259/gcc%2Freal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/161ca48c6991ebe9fcd0dc45e3a80a98bd11a259/gcc%2Freal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.h?ref=161ca48c6991ebe9fcd0dc45e3a80a98bd11a259", "patch": "@@ -128,7 +128,8 @@ extern double (atof) ();\n \n #ifndef REAL_VALUE_TRUNCATE\n #define REAL_VALUE_TRUNCATE(mode, x) \\\n- (GET_MODE_BITSIZE (mode) == GET_MODE_BITSIZE (SFmode) ? (float) (x) : (x))\n+ (GET_MODE_BITSIZE (mode) == sizeof (float) * HOST_BITS_PER_CHAR\t\\\n+  ? (float) (x) : (x))\n #endif\n \n /* Determine whether a floating-point value X is infinite. */"}]}