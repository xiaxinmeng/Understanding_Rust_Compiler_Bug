{"sha": "261450e857ea7f69f12dc9232cf884ade69ab53c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjYxNDUwZTg1N2VhN2Y2OWYxMmRjOTIzMmNmODg0YWRlNjlhYjUzYw==", "commit": {"author": {"name": "Paul Eggert", "email": "eggert@gnu.org", "date": "1993-07-02T01:26:01Z"}, "committer": {"name": "Paul Eggert", "email": "eggert@gnu.org", "date": "1993-07-02T01:26:01Z"}, "message": "(TREE_OVERFLOW): New macro.\n\n(pushcase, pushcase_range): Add a new converter\nfunction argument that specifies how to convert case labels to the\nnominal type.\n\nFrom-SVN: r4826", "tree": {"sha": "6fef8e7117ac3815a1360ed5ea27b49b417e98c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fef8e7117ac3815a1360ed5ea27b49b417e98c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/261450e857ea7f69f12dc9232cf884ade69ab53c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/261450e857ea7f69f12dc9232cf884ade69ab53c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/261450e857ea7f69f12dc9232cf884ade69ab53c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/261450e857ea7f69f12dc9232cf884ade69ab53c/comments", "author": null, "committer": null, "parents": [{"sha": "10d5caece7859aff9317b1c93732a222bd50f05b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10d5caece7859aff9317b1c93732a222bd50f05b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10d5caece7859aff9317b1c93732a222bd50f05b"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "bf90d114f4fe836a780bf0b7fc38e0832fb42c21", "filename": "gcc/tree.h", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261450e857ea7f69f12dc9232cf884ade69ab53c/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261450e857ea7f69f12dc9232cf884ade69ab53c/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=261450e857ea7f69f12dc9232cf884ade69ab53c", "patch": "@@ -246,13 +246,20 @@ struct tree_common\n    implicitly and should not lead to an \"unused value\" warning.  */\n #define TREE_NO_UNUSED_WARNING(NODE) ((NODE)->common.static_flag)\n \n-/* In an INTEGER_CST, this means there was overflow in folding.  */\n-#define TREE_CONSTANT_OVERFLOW(NODE) ((NODE)->common.static_flag)\n-\n /* Nonzero for a TREE_LIST or TREE_VEC node means that the derivation\n    chain is via a `virtual' declaration.  */\n #define TREE_VIA_VIRTUAL(NODE) ((NODE)->common.static_flag)\n \n+/* In an INTEGER_CST, this means there was an overflow in folding.\n+   This is distinct from TREE_OVERFLOW because ANSI C requires a diagnostic\n+   when overflows occur in constant expressions.  */\n+#define TREE_CONSTANT_OVERFLOW(NODE) ((NODE)->common.static_flag)\n+\n+/* In an INTEGER_CST, this means there was an overflow in folding,\n+   and no warning has been issued for this subexpression.\n+   TREE_OVERFLOW implies TREE_CONSTANT_OVERFLOW, but not vice versa.  */\n+#define TREE_OVERFLOW(NODE) ((NODE)->common.public_flag)\n+\n /* In a VAR_DECL or FUNCTION_DECL,\n    nonzero means name is to be accessible from outside this module.\n    In an identifier node, nonzero means an external declaration\n@@ -1415,8 +1422,8 @@ extern void expand_end_bindings\t\t\tPROTO((tree, int, int));\n extern tree last_cleanup_this_contour\t\tPROTO((void));\n extern void expand_start_case\t\t\tPROTO((int, tree, tree, char *));\n extern void expand_end_case\t\t\tPROTO((tree));\n-extern int pushcase\t\t\t\tPROTO((tree, tree, tree *));\n-extern int pushcase_range\t\t\tPROTO((tree, tree, tree, tree *));\n+extern int pushcase\t\t\t\tPROTO((tree, tree (*) (tree, tree), tree, tree *));\n+extern int pushcase_range\t\t\tPROTO((tree, tree, tree (*) (tree, tree), tree, tree *));\n \n /* In fold-const.c */\n "}]}