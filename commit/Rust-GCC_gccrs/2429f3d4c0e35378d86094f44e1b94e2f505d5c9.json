{"sha": "2429f3d4c0e35378d86094f44e1b94e2f505d5c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQyOWYzZDRjMGUzNTM3OGQ4NjA5NGY0NGUxYjk0ZTJmNTA1ZDVjOQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2005-01-24T12:08:06Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2005-01-24T12:08:06Z"}, "message": "re PR bootstrap/18058 (Bootstrap fails with non-GCC compilers)\n\n\tPR bootstrap/18058\n\t* genconditions.c (write_header, write_conditions): Elide file if\n\tnot GCC >= 3.0.1.\n\nFrom-SVN: r94155", "tree": {"sha": "98b96bb43700e6dba182c75528daf9332651826e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98b96bb43700e6dba182c75528daf9332651826e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2429f3d4c0e35378d86094f44e1b94e2f505d5c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2429f3d4c0e35378d86094f44e1b94e2f505d5c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2429f3d4c0e35378d86094f44e1b94e2f505d5c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2429f3d4c0e35378d86094f44e1b94e2f505d5c9/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "deeec1d8a85b6a2d6a2b05153ccb18df0a6df905", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deeec1d8a85b6a2d6a2b05153ccb18df0a6df905", "html_url": "https://github.com/Rust-GCC/gccrs/commit/deeec1d8a85b6a2d6a2b05153ccb18df0a6df905"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "d38a09c0547996e573b903f0d46150645c7ed492", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2429f3d4c0e35378d86094f44e1b94e2f505d5c9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2429f3d4c0e35378d86094f44e1b94e2f505d5c9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2429f3d4c0e35378d86094f44e1b94e2f505d5c9", "patch": "@@ -1,3 +1,9 @@\n+2005-01-24  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\tPR bootstrap/18058\n+\t* genconditions.c (write_header, write_conditions): Elide file if\n+\tnot GCC >= 3.0.1.\n+\n 2005-01-24  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* c-opts.c, expmed.c, gengtype.c, tree-complex.c,"}, {"sha": "b9ef6ab087d396844f981989890e19e7bad15996", "filename": "gcc/genconditions.c", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2429f3d4c0e35378d86094f44e1b94e2f505d5c9/gcc%2Fgenconditions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2429f3d4c0e35378d86094f44e1b94e2f505d5c9/gcc%2Fgenconditions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenconditions.c?ref=2429f3d4c0e35378d86094f44e1b94e2f505d5c9", "patch": "@@ -1,5 +1,5 @@\n /* Process machine description and calculate constant conditions.\n-   Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -86,6 +86,9 @@ write_header (void)\n \n   puts (\"\\\n #include \\\"system.h\\\"\\n\\\n+#if GCC_VERSION < 3001\\n\\\n+#include \\\"dummy-conditions.c\\\"\\n\\\n+#else\\n\\\n #include \\\"coretypes.h\\\"\\n\\\n #include \\\"tm.h\\\"\\n\\\n #include \\\"rtl.h\\\"\\n\\\n@@ -122,14 +125,10 @@ extern rtx operands[];\\n\");\n \n   puts (\"\\\n /* If we don't have __builtin_constant_p, or it's not acceptable in\\n\\\n-   array initializers, fall back to assuming that all conditions\\n\\\n-   potentially vary at run time.  It works in 3.0.1 and later; 3.0\\n\\\n-   only when not optimizing.  */\\n\\\n-#if (GCC_VERSION >= 3001) || ((GCC_VERSION == 3000) && !__OPTIMIZE__)\\n\\\n-# define MAYBE_EVAL(expr) (__builtin_constant_p(expr) ? (int) (expr) : -1)\\n\\\n-#else\\n\\\n-# define MAYBE_EVAL(expr) -1\\n\\\n-#endif\\n\");\n+   array initializers, fall back (by using dummy-conditions.c above)\\n\\\n+   to assuming that all conditions potentially vary at run time.  It\\n\\\n+   works in 3.0.1 and later; 3.0 only when not optimizing.  */\\n\\\n+#define MAYBE_EVAL(expr) (__builtin_constant_p(expr) ? (int) (expr) : -1)\\n\");\n }\n \n /* Write out one entry in the conditions table, using the data pointed\n@@ -176,7 +175,7 @@ const struct c_test insn_conditions[] = {\");\n \n   printf (\"const size_t n_insn_conditions = %lu;\\n\",\n \t  (unsigned long) htab_elements (condition_table));\n-  puts (\"const int insn_elision_unavailable = 0;\");\n+  puts (\"const int insn_elision_unavailable = 0;\\n#endif\");\n }\n \n int"}]}