{"sha": "b41ead3e3537c589c78911ad0426c22a029cfb46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQxZWFkM2UzNTM3YzU4OWM3ODkxMWFkMDQyNmMyMmEwMjljZmI0Ng==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2003-08-26T20:39:45Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2003-08-26T20:39:45Z"}, "message": "s390.c (emit_prologue): Don't check literal pool size.\n\n\t* config/s390/s390.c (emit_prologue): Don't check literal pool size.\n\t* config/s390/s390.h (ASM_OUTPUT_SPECIAL_POOL_ENTRY): Call\n\ts390_output_pool_entry.\n\nFrom-SVN: r70819", "tree": {"sha": "5c2b3eae17f63121fca801e8baefd6f4e5936293", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c2b3eae17f63121fca801e8baefd6f4e5936293"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b41ead3e3537c589c78911ad0426c22a029cfb46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b41ead3e3537c589c78911ad0426c22a029cfb46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b41ead3e3537c589c78911ad0426c22a029cfb46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b41ead3e3537c589c78911ad0426c22a029cfb46/comments", "author": null, "committer": null, "parents": [{"sha": "c2f523ea72d6a1dc9319a14ac7a91de7e02901ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2f523ea72d6a1dc9319a14ac7a91de7e02901ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2f523ea72d6a1dc9319a14ac7a91de7e02901ba"}], "stats": {"total": 43, "additions": 9, "deletions": 34}, "files": [{"sha": "746dec528af77f84cd4d4da0678566ad36ce973a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b41ead3e3537c589c78911ad0426c22a029cfb46/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b41ead3e3537c589c78911ad0426c22a029cfb46/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b41ead3e3537c589c78911ad0426c22a029cfb46", "patch": "@@ -1,3 +1,9 @@\n+2003-08-26  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.c (emit_prologue): Don't check literal pool size.\n+\t* config/s390/s390.h (ASM_OUTPUT_SPECIAL_POOL_ENTRY): Call \n+\ts390_output_pool_entry.\n+\n 2003-08-26  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \t* fixinc/inclhack.def (svr4_preproc_lint_on, "}, {"sha": "c318d4770a34bab5ca8e9f5323e3f5f9509ec737", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b41ead3e3537c589c78911ad0426c22a029cfb46/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b41ead3e3537c589c78911ad0426c22a029cfb46/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=b41ead3e3537c589c78911ad0426c22a029cfb46", "patch": "@@ -5316,7 +5316,6 @@ s390_emit_prologue (void)\n      See below for why TPF must use the register 1.  */\n \n   if (!current_function_is_leaf\n-      && get_pool_size () < S390_POOL_CHUNK_MAX / 2\n       && !TARGET_TPF)\n     temp_reg = gen_rtx_REG (Pmode, RETURN_REGNUM);\n   else"}, {"sha": "541d6892f8ac6b1f3eb756fc4b5d6df37b432c0a", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 3, "deletions": 33, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b41ead3e3537c589c78911ad0426c22a029cfb46/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b41ead3e3537c589c78911ad0426c22a029cfb46/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=b41ead3e3537c589c78911ad0426c22a029cfb46", "patch": "@@ -1034,39 +1034,9 @@ extern int s390_nr_constants;\n #define ASM_OUTPUT_SPECIAL_POOL_ENTRY(FILE, EXP, MODE, ALIGN, LABELNO, WIN) \\\n {\t\t\t\t\t\t\t\t\t    \\\n   fprintf (FILE, \".LC%d:\\n\", LABELNO);\t\t\t\t\t    \\\n-\t\t\t\t\t\t\t\t\t    \\\n-  /* Output the value of the constant itself.  */\t\t\t    \\\n-  switch (GET_MODE_CLASS (MODE))\t\t\t\t\t    \\\n-    {\t\t\t\t\t\t\t\t\t    \\\n-    case MODE_FLOAT:\t\t\t\t\t\t\t    \\\n-      if (GET_CODE (EXP) != CONST_DOUBLE)\t\t\t\t    \\\n-\tabort ();\t\t\t\t\t\t\t    \\\n-\t\t\t\t\t\t\t\t\t    \\\n-      REAL_VALUE_FROM_CONST_DOUBLE (r, EXP);\t\t\t\t    \\\n-      assemble_real (r, MODE, ALIGN);\t\t\t\t\t    \\\n-      break;\t\t\t\t\t\t\t\t    \\\n-\t\t\t\t\t\t\t\t\t    \\\n-    case MODE_INT:\t\t\t\t\t\t\t    \\\n-    case MODE_PARTIAL_INT:\t\t\t\t\t\t    \\\n-      if (GET_CODE (EXP) == CONST\t\t\t\t\t    \\\n-\t  || GET_CODE (EXP) == SYMBOL_REF\t\t\t\t    \\\n-\t  || GET_CODE (EXP) == LABEL_REF)\t\t\t\t    \\\n-        {\t\t\t\t\t\t\t\t    \\\n-\t  fputs (integer_asm_op (UNITS_PER_WORD, TRUE), FILE);\t\t    \\\n-          s390_output_symbolic_const (FILE, EXP);\t\t\t    \\\n-          fputc ('\\n', (FILE));\t\t\t\t\t\t    \\\n-\t}\t\t\t\t\t\t\t\t    \\\n-      else\t\t\t\t\t\t\t\t    \\\n-\t{\t\t\t\t\t\t\t\t    \\\n-\t  assemble_integer (EXP, GET_MODE_SIZE (MODE), ALIGN, 1);\t    \\\n-\t  if (GET_MODE_SIZE (MODE) == 1)\t\t\t\t    \\\n-\t    ASM_OUTPUT_SKIP ((FILE), (unsigned HOST_WIDE_INT)1);\t    \\\n-\t}\t\t\t\t\t\t\t\t    \\\n-      break;\t\t\t\t\t\t\t\t    \\\n-\t\t\t\t\t\t\t\t\t    \\\n-    default:\t\t\t\t\t\t\t\t    \\\n-      abort ();\t\t\t\t\t\t\t\t    \\\n-    }\t\t\t\t\t\t\t\t\t    \\\n+  s390_output_pool_entry (FILE, EXP, MODE, ALIGN);\t\t\t    \\\n+  if (GET_MODE_SIZE (MODE) == 1)\t\t\t\t\t    \\\n+    ASM_OUTPUT_SKIP ((FILE), (unsigned HOST_WIDE_INT)1);\t\t    \\\n   goto WIN;\t\t\t\t\t\t\t\t    \\\n }\n "}]}