{"sha": "0e53a276bc87edde32d88697d27eb38ffb8805ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU1M2EyNzZiYzg3ZWRkZTMyZDg4Njk3ZDI3ZWIzOGZmYjg4MDVhZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-02-20T18:18:30Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-02-20T18:18:30Z"}, "message": "PR c++/78139 - destructor needed by new-expression\n\n\t* call.c (build_special_member_call): Use tf_no_cleanup.\n\nFrom-SVN: r245612", "tree": {"sha": "72d807ed20f236145f422e774af591b9e2f346b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72d807ed20f236145f422e774af591b9e2f346b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e53a276bc87edde32d88697d27eb38ffb8805ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e53a276bc87edde32d88697d27eb38ffb8805ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e53a276bc87edde32d88697d27eb38ffb8805ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e53a276bc87edde32d88697d27eb38ffb8805ad/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f05df2ac59209394588ac62b629bb9c190029a50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f05df2ac59209394588ac62b629bb9c190029a50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f05df2ac59209394588ac62b629bb9c190029a50"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "385c509fb97ae2b975d018d4918be409d2328328", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e53a276bc87edde32d88697d27eb38ffb8805ad/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e53a276bc87edde32d88697d27eb38ffb8805ad/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0e53a276bc87edde32d88697d27eb38ffb8805ad", "patch": "@@ -1,5 +1,8 @@\n 2017-02-19  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/78139 - destructor needed by new-expression\n+\t* call.c (build_special_member_call): Use tf_no_cleanup.\n+\n \tPR c++/78282 - auto template and pack expansion\n \t* pt.c (find_parameter_packs_r): Don't walk into the type of\n \ttemplates other than template template-parameters."}, {"sha": "93fae0d15b6ca0b1a84bf857bb2ef213bf61989c", "filename": "gcc/cp/call.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e53a276bc87edde32d88697d27eb38ffb8805ad/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e53a276bc87edde32d88697d27eb38ffb8805ad/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=0e53a276bc87edde32d88697d27eb38ffb8805ad", "patch": "@@ -8356,9 +8356,15 @@ build_special_member_call (tree instance, tree name, vec<tree, va_gc> **args,\n       /* FIXME P0135 doesn't say how to handle direct initialization from a\n \t type with a suitable conversion operator.  Let's handle it like\n \t copy-initialization, but allowing explict conversions.  */\n+      tsubst_flags_t sub_complain = tf_warning;\n+      if (!is_dummy_object (instance))\n+\t/* If we're using this to initialize a non-temporary object, don't\n+\t   require the destructor to be accessible.  */\n+\tsub_complain |= tf_no_cleanup;\n       if (!reference_related_p (class_type, TREE_TYPE (arg)))\n \targ = perform_implicit_conversion_flags (class_type, arg,\n-\t\t\t\t\t\t tf_warning, flags);\n+\t\t\t\t\t\t sub_complain,\n+\t\t\t\t\t\t flags);\n       if ((TREE_CODE (arg) == TARGET_EXPR\n \t   || TREE_CODE (arg) == CONSTRUCTOR)\n \t  && (same_type_ignoring_top_level_qualifiers_p"}, {"sha": "528a582ea0e93821a09c6317971156278abc94b5", "filename": "gcc/testsuite/g++.dg/init/new48.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e53a276bc87edde32d88697d27eb38ffb8805ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew48.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e53a276bc87edde32d88697d27eb38ffb8805ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew48.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew48.C?ref=0e53a276bc87edde32d88697d27eb38ffb8805ad", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/78139\n+\n+struct A\n+{\n+  A(int);\n+private:\n+  ~A();\n+};\n+\n+struct B\n+{\n+  B(void*);\n+};\n+\n+int main()\n+{\n+  B(new A(42));\n+}"}]}