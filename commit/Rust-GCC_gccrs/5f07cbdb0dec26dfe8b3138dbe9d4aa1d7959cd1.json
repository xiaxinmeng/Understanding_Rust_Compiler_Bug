{"sha": "5f07cbdb0dec26dfe8b3138dbe9d4aa1d7959cd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYwN2NiZGIwZGVjMjZkZmU4YjMxMzhkYmU5ZDRhYTFkNzk1OWNkMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-12-06T21:00:49Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-12-06T21:00:49Z"}, "message": "re PR tree-optimization/59388 (ICE on valid code at -O1 and above on x86_64-linux-gnu)\n\n\tPR tree-optimization/59388\n\t* tree-ssa-reassoc.c (update_range_test): If op == range->exp,\n\tgimplify tem after stmt rather than before it.\n\n\t* gcc.c-torture/execute/pr59388.c: New test.\n\nFrom-SVN: r205761", "tree": {"sha": "2a2ba30b1649b37aeaba96d866e10ceb2cd88d90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a2ba30b1649b37aeaba96d866e10ceb2cd88d90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f07cbdb0dec26dfe8b3138dbe9d4aa1d7959cd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f07cbdb0dec26dfe8b3138dbe9d4aa1d7959cd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f07cbdb0dec26dfe8b3138dbe9d4aa1d7959cd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f07cbdb0dec26dfe8b3138dbe9d4aa1d7959cd1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a3698dfc4a6ef95db7db76ca81266ed2630071a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3698dfc4a6ef95db7db76ca81266ed2630071a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3698dfc4a6ef95db7db76ca81266ed2630071a1"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "cf50c90c4851588354ef25847b49be04193413cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f07cbdb0dec26dfe8b3138dbe9d4aa1d7959cd1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f07cbdb0dec26dfe8b3138dbe9d4aa1d7959cd1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f07cbdb0dec26dfe8b3138dbe9d4aa1d7959cd1", "patch": "@@ -1,5 +1,9 @@\n 2013-12-06  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/59388\n+\t* tree-ssa-reassoc.c (update_range_test): If op == range->exp,\n+\tgimplify tem after stmt rather than before it.\n+\n \t* tree-data-ref.c (struct data_ref_loc_d): Replace pos field with ref.\n \t(get_references_in_stmt): Don't record operand addresses, but\n \toperands themselves."}, {"sha": "2d8d2eb60b41d46a245b80433c3b08d67871474b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f07cbdb0dec26dfe8b3138dbe9d4aa1d7959cd1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f07cbdb0dec26dfe8b3138dbe9d4aa1d7959cd1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5f07cbdb0dec26dfe8b3138dbe9d4aa1d7959cd1", "patch": "@@ -1,3 +1,8 @@\n+2013-12-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/59388\n+\t* gcc.c-torture/execute/pr59388.c: New test.\n+\n 2013-12-06  Dominique d'Humieres  <dominiq@lps.ens.fr>\n \n \tPR testsuite/59043"}, {"sha": "de3648a003eda0240d98964794e3a6924a4088ae", "filename": "gcc/testsuite/gcc.c-torture/execute/pr59388.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f07cbdb0dec26dfe8b3138dbe9d4aa1d7959cd1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr59388.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f07cbdb0dec26dfe8b3138dbe9d4aa1d7959cd1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr59388.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr59388.c?ref=5f07cbdb0dec26dfe8b3138dbe9d4aa1d7959cd1", "patch": "@@ -0,0 +1,11 @@\n+/* PR tree-optimization/59388 */\n+\n+int a;\n+struct S { unsigned int f:1; } b;\n+\n+int\n+main ()\n+{\n+  a = (0 < b.f) | b.f;\n+  return a;\n+}"}, {"sha": "ba6c3c720c60c3a947ee96ea935025230ff79ebe", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f07cbdb0dec26dfe8b3138dbe9d4aa1d7959cd1/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f07cbdb0dec26dfe8b3138dbe9d4aa1d7959cd1/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=5f07cbdb0dec26dfe8b3138dbe9d4aa1d7959cd1", "patch": "@@ -2072,9 +2072,19 @@ update_range_test (struct range_entry *range, struct range_entry *otherrange,\n \n   tem = fold_convert_loc (loc, optype, tem);\n   gsi = gsi_for_stmt (stmt);\n-  tem = force_gimple_operand_gsi (&gsi, tem, true, NULL_TREE, true,\n-\t\t\t\t  GSI_SAME_STMT);\n-  for (gsi_prev (&gsi); !gsi_end_p (gsi); gsi_prev (&gsi))\n+  /* In rare cases range->exp can be equal to lhs of stmt.\n+     In that case we have to insert after the stmt rather then before\n+     it.  */\n+  if (op == range->exp)\n+    tem = force_gimple_operand_gsi (&gsi, tem, true, NULL_TREE, false,\n+\t\t\t\t    GSI_CONTINUE_LINKING);\n+  else\n+    {\n+      tem = force_gimple_operand_gsi (&gsi, tem, true, NULL_TREE, true,\n+\t\t\t\t      GSI_SAME_STMT);\n+      gsi_prev (&gsi);\n+    }\n+  for (; !gsi_end_p (gsi); gsi_prev (&gsi))\n     if (gimple_uid (gsi_stmt (gsi)))\n       break;\n     else"}]}