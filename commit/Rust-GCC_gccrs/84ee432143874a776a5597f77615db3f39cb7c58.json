{"sha": "84ee432143874a776a5597f77615db3f39cb7c58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRlZTQzMjE0Mzg3NGE3NzZhNTU5N2Y3NzYxNWRiM2YzOWNiN2M1OA==", "commit": {"author": {"name": "Carl Love", "email": "cel@us.ibm.com", "date": "2018-06-22T15:01:34Z"}, "committer": {"name": "Carl Love", "email": "carll@gcc.gnu.org", "date": "2018-06-22T15:01:34Z"}, "message": "altivec-7.c: Add qualifiers for counts on AIX versus Linux.\n\n\ngcc/testsuite/ChangeLog:\n\n2018-06-22  Carl Love  <cel@us.ibm.com>\n\n \t* gcc.target/powerpc/altivec-7.c: Add qualifiers for counts on AIX\n\tversus Linux.  Change checks for xxlnor, xxland and xxlxor to also look\n\tfor the vnor, vand and vxor instructions.\n\t* gcc.target/powerpc/builtins-1.c: Move vec_or tests to a new file.\n\tRemove counts for xxlor. Fix match on bl __divdi3 and bl __udivdi3.\n\t* gcc.target/powerpc/builtins-4.c: Fix matching for vsl instructions.\n\t* gcc.target/powerpc/builtins-5.c: New test file for vec_or test cases.\n \t* gcc.target/powerpc/vsx-vector-6.p7.c: Fix xxlnor BE expected count.\n\tAdd -dp to dg-options, update expected counts.\n\nFrom-SVN: r261904", "tree": {"sha": "e8ff1af4d02cca12bfd66441d4f0902638f319ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8ff1af4d02cca12bfd66441d4f0902638f319ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84ee432143874a776a5597f77615db3f39cb7c58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84ee432143874a776a5597f77615db3f39cb7c58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84ee432143874a776a5597f77615db3f39cb7c58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84ee432143874a776a5597f77615db3f39cb7c58/comments", "author": {"login": "carlelove", "id": 86435705, "node_id": "MDQ6VXNlcjg2NDM1NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlelove", "html_url": "https://github.com/carlelove", "followers_url": "https://api.github.com/users/carlelove/followers", "following_url": "https://api.github.com/users/carlelove/following{/other_user}", "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions", "organizations_url": "https://api.github.com/users/carlelove/orgs", "repos_url": "https://api.github.com/users/carlelove/repos", "events_url": "https://api.github.com/users/carlelove/events{/privacy}", "received_events_url": "https://api.github.com/users/carlelove/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7393e5de78991bbf092379a9f2df1cff10bfb043", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7393e5de78991bbf092379a9f2df1cff10bfb043", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7393e5de78991bbf092379a9f2df1cff10bfb043"}], "stats": {"total": 99, "additions": 70, "deletions": 29}, "files": [{"sha": "5147236766d52ece18f0cf7e1ab95563e45d7b60", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84ee432143874a776a5597f77615db3f39cb7c58/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84ee432143874a776a5597f77615db3f39cb7c58/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=84ee432143874a776a5597f77615db3f39cb7c58", "patch": "@@ -1,3 +1,15 @@\n+2018-06-22  Carl Love  <cel@us.ibm.com>\n+\n+ \t* gcc.target/powerpc/altivec-7.c: Add qualifiers for counts on AIX\n+\tversus Linux.  Change checks for xxlnor, xxland and xxlxor to also look\n+\tfor the vnor, vand and vxor instructions.\n+\t* gcc.target/powerpc/builtins-1.c: Move vec_or tests to a new file.\n+\tRemove counts for xxlor. Fix match on bl __divdi3 and bl __udivdi3.\n+\t* gcc.target/powerpc/builtins-4.c: Fix matching for vsl instructions.\n+\t* gcc.target/powerpc/builtins-5.c: New test file for vec_or test cases.\n+ \t* gcc.target/powerpc/vsx-vector-6.p7.c: Fix xxlnor BE expected count.\n+\tAdd -dp to dg-options, update expected counts.\n+\n 2018-06-22  Paul Koning  <ni1d@arrl.net>\n \n \t* gcc.c-torture/execute/builtins/lib/chk.c: Use smaller alignment"}, {"sha": "ebc4a85ed8bb102536f179d56963453d6a8dd126", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-7.c", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84ee432143874a776a5597f77615db3f39cb7c58/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84ee432143874a776a5597f77615db3f39cb7c58/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-7.c?ref=84ee432143874a776a5597f77615db3f39cb7c58", "patch": "@@ -73,8 +73,8 @@ int main ()\n      vec_unpackl                    vupkhsh\n      vec_unpackl                    vupkhpx\n      vec_unpackl                    vupkhsb\n-     vec_andc                       xxnor\n-                                    xxland\n+     vec_andc                       xxlnor (vnor AIX)\n+                                    xxland (vand AIX)\n      vec_vxor                       xxlxor\n      vec_vmsumubm                   vmsumubm\n      vec_vmulesb                    vmulosb\n@@ -85,17 +85,16 @@ int main ()\n /* { dg-final { scan-assembler-times \"vpkpx\" 2 } } */\n /* { dg-final { scan-assembler-times \"vmulesb\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmulosb\" 1 } } */\n-/* { dg-final { scan-assembler-times {\\mlxvd2x\\M|\\mlxv\\M} 42 { target le } } } */\n-/* { dg-final { scan-assembler-times {\\mlxvd2x\\M|\\mlxv\\M} 4 { target be } } } */\n+/* { dg-final { scan-assembler-times {\\mlvx\\M} 0 { target { powerpc*-*-linux* } } } } */\n+/* { dg-final { scan-assembler-times {\\mlvx\\M} 42 { target { powerpc*-*-aix* } } } } */\n /* { dg-final { scan-assembler-times \"lvewx\" 2 } } */\n /* { dg-final { scan-assembler-times \"lvxl\" 1 } } */\n /* { dg-final { scan-assembler-times \"vupklsh\" 2 } } */\n /* { dg-final { scan-assembler-times \"vupkhsh\" 2 } } */\n-/* { dg-final { scan-assembler-times \"xxlnor\" 4 } } */\n-/* { dg-final { scan-assembler-times \"xxland\" 4 } } */\n-/* { dg-final { scan-assembler-times \"xxlxor\" 5 } } */\n+/* { dg-final { scan-assembler-times {\\mxxlnor\\M|\\mvnor\\M} 4 } } */\n+/* { dg-final { scan-assembler-times {\\mxxland\\M|\\mvand\\M} 4 } } */\n+/* { dg-final { scan-assembler-times {\\mxxlxor\\M|\\mvxor\\M} 5 } } */\n /* { dg-final { scan-assembler-times \"xxlandc\" 0 } } */\n-/* { dg-final { scan-assembler-times \"lvx\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmsumubm\" 1 } } */\n /* { dg-final { scan-assembler-times \"vupklpx\" 1 } } */\n /* { dg-final { scan-assembler-times \"vupklsx\" 0 } } */"}, {"sha": "2b81dac260a3f34fe6bd8719f4dea578ddfd831e", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-1.c", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84ee432143874a776a5597f77615db3f39cb7c58/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84ee432143874a776a5597f77615db3f39cb7c58/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-1.c?ref=84ee432143874a776a5597f77615db3f39cb7c58", "patch": "@@ -81,14 +81,6 @@ int main ()\n   vector unsigned long long uq = vec_nor (ua, ud);\n   vector unsigned long long ur = vec_nor (ud, ua);\n \n-  vector long long ls = vec_or (la, lb);\n-  vector long long lt = vec_or (la, ld);\n-  vector long long lu = vec_or (ld, la);\n-\n-  vector unsigned long long us = vec_or (ua, ub);\n-  vector unsigned long long ut = vec_or (ua, ud);\n-  vector unsigned long long uu = vec_or (ud, ua);\n-\n   vector unsigned char ca = {0,4,8,1,5,9,2,6,10,3,7,11,15,12,14,13};\n   vector unsigned char cbb = {5,4,8,3,1,9,2,6,10,3,7,11,15,12,14,13};\n \n@@ -267,7 +259,6 @@ int main ()\n   vector short signed int z_vss1 = vec_splat (ssa, 2);\n   vector unsigned short int z_vuss1 = vec_splat (usa, 1);\n \n-\n   return 0;\n }\n \n@@ -343,8 +334,8 @@ int main ()\n /* { dg-final { scan-assembler-times \"divd\" 8  { target lp64 } } } */\n /* { dg-final { scan-assembler-times \"divdu\" 2  { target lp64 } } } */\n /* { dg-final { scan-assembler-times \"mulld\" 4  { target lp64 } } } */\n-/* { dg-final { scan-assembler-times \"bl __divdi3\" 3  { target ilp32 } } } */\n-/* { dg-final { scan-assembler-times \"bl __udivdi3\" 3  { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times {\\mbl __divdi3\\M} 2  { target { ilp32 } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl __udivdi3\\M} 2  { target {ilp32 } } } } */\n /* { dg-final { scan-assembler-times \"mullw\" 12  { target ilp32 } } } */\n /* { dg-final { scan-assembler-times \"mulhwu\" 4  { target ilp32 } } } */\n /* { dg-final { scan-assembler-times \"xxmrgld\" 0 } } */"}, {"sha": "66bfaf1210fb5a62441ecaea6c58ec866fb6f912", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-4.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84ee432143874a776a5597f77615db3f39cb7c58/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84ee432143874a776a5597f77615db3f39cb7c58/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-4.c?ref=84ee432143874a776a5597f77615db3f39cb7c58", "patch": "@@ -162,6 +162,5 @@ test_sll_vuill_vuill_vuc (vector unsigned long long int x,\n /* { dg-final { scan-assembler-times \"xvnabsdp\"  1 } } */\n /* { dg-final { scan-assembler-times \"vslo\"      4 } } */\n /* { dg-final { scan-assembler-times \"xxlor\"     30 } } */\n-/* { dg-final { scan-assembler-times \"vsl\"     45 { target le } } } */\n-/* { dg-final { scan-assembler-times \"vsl\"     45 { target { be && ilp32 } } } } */\n-/* { dg-final { scan-assembler-times \"vsl\"     59 { target { be && lp64  } } } } */\n+/* { dg-final { scan-assembler-times {\\mvsl\\M}   5 } } */\n+"}, {"sha": "a4bb8fddb1d44a8e97aa7466610f645665112158", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-5.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84ee432143874a776a5597f77615db3f39cb7c58/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84ee432143874a776a5597f77615db3f39cb7c58/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-5.c?ref=84ee432143874a776a5597f77615db3f39cb7c58", "patch": "@@ -0,0 +1,40 @@\n+/* { dg-do compile { target { powerpc*-*-* } } } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n+/* { dg-options \"-mcpu=power8 -O0 -mno-fold-gimple -dp\" } */\n+/* { dg-prune-output \"gimple folding of rs6000 builtins has been disabled.\" } */\n+\n+#include <altivec.h>\n+\n+\n+int main ()\n+{\n+  vector long long la = {5L, 14L};\n+  vector long long lb = {3L, 86L};\n+  vector bool long long ld = {0, -1};\n+\n+  vector unsigned long long ua = {5L, 14L};\n+  vector unsigned long long ub = {3L, 86L};\n+  vector bool long long ud = {0, -1};\n+\n+  /*  vec_or tests generate an xxlor instruction when compiled with -O0.  The xxlor\n+      instructions get optimized away with higher optimization levels.\n+      When compiling on Linux we see the xxlor instruction used as a move in various\n+      places.  When compiling on AIX, a move instruction is used instead of the xxlor\n+      instruction.  So, these tests have been isolated into a different file to limit\n+      the xxlor instruction use to just the vex_or builtin tests.  */      \n+      \n+  vector long long ls = vec_or (la, lb);\n+  vector long long lt = vec_or (la, ld);\n+  vector long long lu = vec_or (ld, la);\n+\n+  vector unsigned long long us = vec_or (ua, ub);\n+  vector unsigned long long ut = vec_or (ua, ud);\n+  vector unsigned long long uu = vec_or (ud, ua);\n+\n+  return 0;\n+}\n+\n+/* Expected results:\n+   vec_or              xxlor    */\n+\n+/* { dg-final { scan-assembler-times \"xxlor\" 6 } } */"}, {"sha": "ab6e5573aa19b71f181e59bcd85aecaf86babfb3", "filename": "gcc/testsuite/gcc.target/powerpc/vsx-vector-6.p7.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84ee432143874a776a5597f77615db3f39cb7c58/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vector-6.p7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84ee432143874a776a5597f77615db3f39cb7c58/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vector-6.p7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vector-6.p7.c?ref=84ee432143874a776a5597f77615db3f39cb7c58", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target { powerpc*-*-* && lp64 } } } */\n /* { dg-skip-if \"\" { powerpc*-*-darwin* } } */\n /* { dg-require-effective-target powerpc_vsx_ok } */\n-/* { dg-options \"-mvsx -O2 -mcpu=power7\" } */\n+/* { dg-options \"-mvsx -O2 -mcpu=power7 -dp\" } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power7\" } } */\n \n \n@@ -10,7 +10,7 @@\n /* { dg-final { scan-assembler-times \"xvabsdp\" 1 } } */\n /* { dg-final { scan-assembler-times \"xvadddp\" 1 } } */\n /* { dg-final { scan-assembler-times \"xxlnor\" 8 { target le } } } */\n-/* { dg-final { scan-assembler-times \"xxlnor\" 8 { target be } } } */\n+/* { dg-final { scan-assembler-times \"xxlnor\" 7 { target be } } } */\n /* { dg-final { scan-assembler-times \"xvcmpeqdp\" 5 { target le } } } */\n /* { dg-final { scan-assembler-times \"xvcmpeqdp\" 6 { target be }} } */\n /* { dg-final { scan-assembler-times \"xvcmpeqdp.\" 5 { target le } } } */\n@@ -30,21 +30,21 @@\n /* { dg-final { scan-assembler-times \"xvmaxdp\" 1 } } */\n /* { dg-final { scan-assembler-times \"xvmindp\" 1 } } */\n /* { dg-final { scan-assembler-times \"xvmuldp\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vperm\" 1 } } */\n-/* { dg-final { scan-assembler-times \"xvrdpic\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vperm\" 2 } } */\n+/* { dg-final { scan-assembler-times \"xvrdpic\" 2 } } */\n /* { dg-final { scan-assembler-times \"xvsqrtdp\" 1 } } */\n /* { dg-final { scan-assembler-times \"xvrdpiz\" 1 } } */\n /* { dg-final { scan-assembler-times \"xvmsubasp\" 1 } } */\n /* { dg-final { scan-assembler-times \"xvnmaddasp\" 1 } } */\n /* { dg-final { scan-assembler-times \"xvnmaddadp\" 1 } } */\n /* { dg-final { scan-assembler-times \"xvnmsubadp\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vmsumshs\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmsumshs\" 2 } } */\n /* { dg-final { scan-assembler-times \"xxland\" 13 } } */\n /* { dg-final { scan-assembler-times \"xxlxor\" 2 } } */\n-/* { dg-final { scan-assembler-times \"xxsel\" 2 } } */\n+/* { dg-final { scan-assembler-times \"xxsel\" 4 } } */\n /* { dg-final { scan-assembler-times \"xvrdpip\" 1 } } */\n /* { dg-final { scan-assembler-times \"xvdivdp\" 1 } } */\n-/* { dg-final { scan-assembler-times \"xvrdpi\" 5 } } */\n+/* { dg-final { scan-assembler-times \"xvrdpi\" 7 } } */\n \n /* Source code for the test in vsx-vector-6.h */\n #include \"vsx-vector-6.h\""}]}