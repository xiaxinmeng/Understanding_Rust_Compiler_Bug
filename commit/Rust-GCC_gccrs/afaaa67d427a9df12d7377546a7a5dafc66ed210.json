{"sha": "afaaa67d427a9df12d7377546a7a5dafc66ed210", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZhYWE2N2Q0MjdhOWRmMTJkNzM3NzU0NmE3YTVkYWZjNjZlZDIxMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-01-18T23:16:16Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-01-18T23:16:16Z"}, "message": "re PR tree-optimization/47290 (memory exhausted compiling a destructor with an infinite 'for (;;);' loop)\n\n\tPR tree-optimization/47290\n\t* tree-eh.c (infinite_empty_loop_p): New function.\n\t(cleanup_empty_eh): Use it.\n\n\t* g++.dg/torture/pr47290.C: New test.\n\nFrom-SVN: r168974", "tree": {"sha": "7b35321de8d0dd4df0dafa71e743ef081c115373", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b35321de8d0dd4df0dafa71e743ef081c115373"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afaaa67d427a9df12d7377546a7a5dafc66ed210", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afaaa67d427a9df12d7377546a7a5dafc66ed210", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afaaa67d427a9df12d7377546a7a5dafc66ed210", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afaaa67d427a9df12d7377546a7a5dafc66ed210/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2d300fac7d9aaaa9f5cb63a44b3cfc130895324d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d300fac7d9aaaa9f5cb63a44b3cfc130895324d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d300fac7d9aaaa9f5cb63a44b3cfc130895324d"}], "stats": {"total": 70, "additions": 68, "deletions": 2}, "files": [{"sha": "c456fb34f5bd34ef4feaf863d40813243e0db9f1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afaaa67d427a9df12d7377546a7a5dafc66ed210/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afaaa67d427a9df12d7377546a7a5dafc66ed210/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=afaaa67d427a9df12d7377546a7a5dafc66ed210", "patch": "@@ -1,3 +1,9 @@\n+2011-01-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/47290\n+\t* tree-eh.c (infinite_empty_loop_p): New function.\n+\t(cleanup_empty_eh): Use it.\n+\n 2011-01-18  Steve Ellcey  <sje@cup.hp.com>\n \n \tPR target/46997"}, {"sha": "550aee1cef626baf7be726d48e65367aae2bcef6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afaaa67d427a9df12d7377546a7a5dafc66ed210/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afaaa67d427a9df12d7377546a7a5dafc66ed210/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=afaaa67d427a9df12d7377546a7a5dafc66ed210", "patch": "@@ -1,3 +1,8 @@\n+2011-01-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/47290\n+\t* g++.dg/torture/pr47290.C: New test.\n+\n 2011-01-18  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/47240"}, {"sha": "b739de5b749ae6a30802efc6a612aadf64dc2cf1", "filename": "gcc/testsuite/g++.dg/torture/pr47290.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afaaa67d427a9df12d7377546a7a5dafc66ed210/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr47290.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afaaa67d427a9df12d7377546a7a5dafc66ed210/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr47290.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr47290.C?ref=afaaa67d427a9df12d7377546a7a5dafc66ed210", "patch": "@@ -0,0 +1,19 @@\n+// PR tree-optimization/47290\n+// { dg-do compile }\n+\n+struct V\n+{\n+  V (int = 0);\n+  ~V ()\n+  {\n+    for (;;)\n+      ;\n+  }\n+  int size ();\n+};\n+\n+struct S\n+{\n+  V a, b;\n+  S () : b (a.size ()) {}\n+} s;"}, {"sha": "65d0ff2f9fd903f8ea8917fdd15eb228ca0fc81b", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 38, "deletions": 2, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afaaa67d427a9df12d7377546a7a5dafc66ed210/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afaaa67d427a9df12d7377546a7a5dafc66ed210/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=afaaa67d427a9df12d7377546a7a5dafc66ed210", "patch": "@@ -1,5 +1,5 @@\n /* Exception handling semantics and decomposition for trees.\n-   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -3724,6 +3724,42 @@ cleanup_empty_eh_unsplit (basic_block bb, edge e_out, eh_landing_pad lp)\n   return false;\n }\n \n+/* Return true if edge E_FIRST is part of an empty infinite loop\n+   or leads to such a loop through a series of single successor\n+   empty bbs.  */\n+\n+static bool\n+infinite_empty_loop_p (edge e_first)\n+{\n+  bool inf_loop = false;\n+  edge e;\n+\n+  if (e_first->dest == e_first->src)\n+    return true;\n+\n+  e_first->src->aux = (void *) 1;\n+  for (e = e_first; single_succ_p (e->dest); e = single_succ_edge (e->dest))\n+    {\n+      gimple_stmt_iterator gsi;\n+      if (e->dest->aux)\n+\t{\n+\t  inf_loop = true;\n+\t  break;\n+\t}\n+      e->dest->aux = (void *) 1;\n+      gsi = gsi_after_labels (e->dest);\n+      if (!gsi_end_p (gsi) && is_gimple_debug (gsi_stmt (gsi)))\n+\tgsi_next_nondebug (&gsi);\n+      if (!gsi_end_p (gsi))\n+\tbreak;\n+    }\n+  e_first->src->aux = NULL;\n+  for (e = e_first; e->dest->aux; e = single_succ_edge (e->dest))\n+    e->dest->aux = NULL;\n+\n+  return inf_loop;\n+}\n+\n /* Examine the block associated with LP to determine if it's an empty\n    handler for its EH region.  If so, attempt to redirect EH edges to\n    an outer region.  Return true the CFG was updated in any way.  This\n@@ -3763,7 +3799,7 @@ cleanup_empty_eh (eh_landing_pad lp)\n   if (gsi_end_p (gsi))\n     {\n       /* For the degenerate case of an infinite loop bail out.  */\n-      if (e_out->dest == bb)\n+      if (infinite_empty_loop_p (e_out))\n \treturn false;\n \n       return cleanup_empty_eh_unsplit (bb, e_out, lp);"}]}