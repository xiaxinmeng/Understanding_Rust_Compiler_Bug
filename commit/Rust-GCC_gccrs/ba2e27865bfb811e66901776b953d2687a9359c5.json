{"sha": "ba2e27865bfb811e66901776b953d2687a9359c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmEyZTI3ODY1YmZiODExZTY2OTAxNzc2Yjk1M2QyNjg3YTkzNTljNQ==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1993-04-13T01:58:32Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1993-04-13T01:58:32Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r4112", "tree": {"sha": "43f09a7863b887685831575cc1e037e1e1199759", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43f09a7863b887685831575cc1e037e1e1199759"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba2e27865bfb811e66901776b953d2687a9359c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba2e27865bfb811e66901776b953d2687a9359c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba2e27865bfb811e66901776b953d2687a9359c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba2e27865bfb811e66901776b953d2687a9359c5/comments", "author": null, "committer": null, "parents": [{"sha": "f5689463af9b5dcee15e38a9a9efe724cca08c2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5689463af9b5dcee15e38a9a9efe724cca08c2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5689463af9b5dcee15e38a9a9efe724cca08c2d"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "e6767049b3b7e9ae2a5ff5ebc231a1447009eac9", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba2e27865bfb811e66901776b953d2687a9359c5/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba2e27865bfb811e66901776b953d2687a9359c5/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=ba2e27865bfb811e66901776b953d2687a9359c5", "patch": "@@ -371,7 +371,7 @@ static tree UOBJC_SYMBOLS_decl;\n static tree UOBJC_INSTANCE_VARIABLES_decl, UOBJC_CLASS_VARIABLES_decl;\n static tree UOBJC_INSTANCE_METHODS_decl, UOBJC_CLASS_METHODS_decl;\n static tree UOBJC_CLASS_decl, UOBJC_METACLASS_decl;\n-static tree UOBJC_SELECTOR_REFERENCES_decl;\n+static tree UOBJC_SELECTOR_TABLE_decl;\n static tree UOBJC_MODULES_decl;\n static tree UOBJC_STRINGS_decl;\n \n@@ -1054,12 +1054,12 @@ synth_module_prologue ()\n   objc_get_meta_class_decl\n     = builtin_function (TAG_GETMETACLASS, temp_type, NOT_BUILT_IN, 0);\n \n-  /* static SEL _OBJC_SELECTOR_REFERENCES[]; */\n+  /* static SEL _OBJC_SELECTOR_TABLE[]; */\n \n   if (! flag_next_runtime)\n-    UOBJC_SELECTOR_REFERENCES_decl\n+    UOBJC_SELECTOR_TABLE_decl\n       = create_builtin_decl (VAR_DECL, build_array_type (selector_type, NULLT),\n-\t\t\t     \"_OBJC_SELECTOR_REFERENCES\");\n+\t\t\t     \"_OBJC_SELECTOR_TABLE\");\n \n   generate_forward_declaration_to_string_table ();\n \n@@ -1255,12 +1255,12 @@ init_objc_symtab ()\n \n   initlist = build_tree_list (NULLT, build_int_2 (0, 0));\n \n-  /* refs = { ..., _OBJC_SELECTOR_REFERENCES, ... } */\n+  /* refs = { ..., _OBJC_SELECTOR_TABLE, ... } */\n \n   if (flag_next_runtime || ! sel_ref_chain)\n     initlist = tree_cons (NULLT, build_int_2 (0, 0), initlist);\n   else\n-    initlist = tree_cons (NULLT, UOBJC_SELECTOR_REFERENCES_decl, initlist);\n+    initlist = tree_cons (NULLT, UOBJC_SELECTOR_TABLE_decl, initlist);\n \n   /* cls_def_cnt = { ..., 5, ... } */\n \n@@ -1714,13 +1714,13 @@ build_selector_translation_table ()\n   if (! flag_next_runtime)\n     {\n       /* Cause the variable and its initial value to be actually output.  */\n-      DECL_EXTERNAL (UOBJC_SELECTOR_REFERENCES_decl) = 0;\n-      TREE_STATIC (UOBJC_SELECTOR_REFERENCES_decl) = 1;\n+      DECL_EXTERNAL (UOBJC_SELECTOR_TABLE_decl) = 0;\n+      TREE_STATIC (UOBJC_SELECTOR_TABLE_decl) = 1;\n       /* NULL terminate the list and fix the decl for output. */\n       initlist = tree_cons (NULLT, build_int_2 (0, 0), initlist);\n-      DECL_INITIAL (UOBJC_SELECTOR_REFERENCES_decl) = (tree) 1;\n+      DECL_INITIAL (UOBJC_SELECTOR_TABLE_decl) = (tree) 1;\n       initlist = build_nt (CONSTRUCTOR, NULLT, nreverse (initlist));\n-      finish_decl (UOBJC_SELECTOR_REFERENCES_decl, initlist, NULLT);\n+      finish_decl (UOBJC_SELECTOR_TABLE_decl, initlist, NULLT);\n     }\n }\n \n@@ -1740,7 +1740,7 @@ build_selector_reference (ident)\n       if (TREE_VALUE (*chain) == ident)\n \treturn (flag_next_runtime\n \t\t? TREE_PURPOSE (*chain)\n-\t\t: build_array_ref (UOBJC_SELECTOR_REFERENCES_decl,\n+\t\t: build_array_ref (UOBJC_SELECTOR_TABLE_decl,\n \t\t\t\t   build_int_2 (index, 0)));\n \n       index++;\n@@ -1753,7 +1753,7 @@ build_selector_reference (ident)\n \n   return (flag_next_runtime\n \t  ? decl\n-\t  : build_array_ref (UOBJC_SELECTOR_REFERENCES_decl,\n+\t  : build_array_ref (UOBJC_SELECTOR_TABLE_decl,\n \t\t\t     build_int_2 (index, 0)));\n }\n "}]}