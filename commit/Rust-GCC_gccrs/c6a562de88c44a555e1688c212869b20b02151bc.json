{"sha": "c6a562de88c44a555e1688c212869b20b02151bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZhNTYyZGU4OGM0NGE1NTVlMTY4OGMyMTI4NjliMjBiMDIxNTFiYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-28T09:30:31Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-28T09:30:31Z"}, "message": "c: After issuing errors about array size, for error-recovery don't make the array VLA [PR93573]\n\nAfter we report various errors about array size, we set for error-recovery\nthe size to be 1, but because size_int_const is false, it still means we\npretend the array is a VLA, can emit a second diagnostics in that case etc.\nE.g.\n$ ./cc1.unpatched -quiet a.c\na.c:1:5: error: size of array \u2018f\u2019 has non-integer type\n    1 | int f[100.0];\n      |     ^\na.c:1:1: warning: variably modified \u2018f\u2019 at file scope\n    1 | int f[100.0];\n      | ^~~\n$ ./cc1 -quiet a.c\na.c:1:5: error: size of array \u2018f\u2019 has non-integer type\n    1 | int f[100.0];\n      |     ^\n\n2020-03-28  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c/93573\n\t* c-decl.c (grokdeclarator): After issuing errors, set size_int_const\n\tto true after setting size to integer_one_node.\n\n\t* gcc.dg/pr93573-1.c: New test.\n\t* gcc.dg/pr93573-2.c: New test.", "tree": {"sha": "06652afc717200815146316b1636c0c737c37422", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06652afc717200815146316b1636c0c737c37422"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6a562de88c44a555e1688c212869b20b02151bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6a562de88c44a555e1688c212869b20b02151bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6a562de88c44a555e1688c212869b20b02151bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6a562de88c44a555e1688c212869b20b02151bc/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "679becf175c5d7f6b323cd3af0a09c6039b4123d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/679becf175c5d7f6b323cd3af0a09c6039b4123d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/679becf175c5d7f6b323cd3af0a09c6039b4123d"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "86ad683a6cb0abe66438dc23a95138f07a8282af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a562de88c44a555e1688c212869b20b02151bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a562de88c44a555e1688c212869b20b02151bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c6a562de88c44a555e1688c212869b20b02151bc", "patch": "@@ -1,5 +1,9 @@\n 2020-03-28  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c/93573\n+\t* c-decl.c (grokdeclarator): After issuing errors, set size_int_const\n+\tto true after setting size to integer_one_node.\n+\n \tPR tree-optimization/94329\n \t* tree-ssa-reassoc.c (reassociate_bb): When calling reassoc_remove_stmt\n \ton the last stmt in a bb, make sure gsi_prev isn't done immediately"}, {"sha": "b31d99fcfafb0ac79969427241661516c1f41f13", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a562de88c44a555e1688c212869b20b02151bc/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a562de88c44a555e1688c212869b20b02151bc/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=c6a562de88c44a555e1688c212869b20b02151bc", "patch": "@@ -6416,6 +6416,7 @@ grokdeclarator (const struct c_declarator *declarator,\n \t\t      error_at (loc,\n \t\t\t\t\"size of unnamed array has non-integer type\");\n \t\t    size = integer_one_node;\n+\t\t    size_int_const = true;\n \t\t  }\n \t\t/* This can happen with enum forward declaration.  */\n \t\telse if (!COMPLETE_TYPE_P (TREE_TYPE (size)))\n@@ -6427,6 +6428,7 @@ grokdeclarator (const struct c_declarator *declarator,\n \t\t      error_at (loc, \"size of unnamed array has incomplete \"\n \t\t\t\t\"type\");\n \t\t    size = integer_one_node;\n+\t\t    size_int_const = true;\n \t\t  }\n \n \t\tsize = c_fully_fold (size, false, &size_maybe_const);\n@@ -6451,6 +6453,7 @@ grokdeclarator (const struct c_declarator *declarator,\n \t\t\telse\n \t\t\t  error_at (loc, \"size of unnamed array is negative\");\n \t\t\tsize = integer_one_node;\n+\t\t\tsize_int_const = true;\n \t\t      }\n \t\t    /* Handle a size folded to an integer constant but\n \t\t       not an integer constant expression.  */"}, {"sha": "6c3cb7016265f9e841c7a022cda60bef49db77c9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a562de88c44a555e1688c212869b20b02151bc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a562de88c44a555e1688c212869b20b02151bc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c6a562de88c44a555e1688c212869b20b02151bc", "patch": "@@ -1,5 +1,9 @@\n 2020-03-28  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c/93573\n+\t* gcc.dg/pr93573-1.c: New test.\n+\t* gcc.dg/pr93573-2.c: New test.\n+\n \tPR tree-optimization/94329\n \t* gfortran.dg/pr94329.f90: New test.\n "}, {"sha": "26ec9b77d6f273fa1a3302ea5c96ea3eb08958f1", "filename": "gcc/testsuite/gcc.dg/pr93573-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a562de88c44a555e1688c212869b20b02151bc/gcc%2Ftestsuite%2Fgcc.dg%2Fpr93573-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a562de88c44a555e1688c212869b20b02151bc/gcc%2Ftestsuite%2Fgcc.dg%2Fpr93573-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr93573-1.c?ref=c6a562de88c44a555e1688c212869b20b02151bc", "patch": "@@ -0,0 +1,12 @@\n+/* PR c/93573 */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+void bar ();\n+\n+void\n+foo (char a)\n+{\n+  union C { int d[100.0]; char *e; };\t/* { dg-error \"has non-integer type\" } */\n+  bar ((union C) &a);\n+}"}, {"sha": "f8809453b4c2b0e7dad8eac9dfa46970f5f7d913", "filename": "gcc/testsuite/gcc.dg/pr93573-2.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a562de88c44a555e1688c212869b20b02151bc/gcc%2Ftestsuite%2Fgcc.dg%2Fpr93573-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a562de88c44a555e1688c212869b20b02151bc/gcc%2Ftestsuite%2Fgcc.dg%2Fpr93573-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr93573-2.c?ref=c6a562de88c44a555e1688c212869b20b02151bc", "patch": "@@ -0,0 +1,6 @@\n+/* PR c/93573 */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+int f[100.0];\t/* { dg-error \"has non-integer type\" } */\n+                /* { dg-bogus \"variably modified .f. at file scope\" \"\" { target *-*-* } .-1 } */"}]}