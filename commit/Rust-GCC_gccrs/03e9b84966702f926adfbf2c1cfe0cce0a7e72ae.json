{"sha": "03e9b84966702f926adfbf2c1cfe0cce0a7e72ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNlOWI4NDk2NjcwMmY5MjZhZGZiZjJjMWNmZTBjY2UwYTdlNzJhZQ==", "commit": {"author": {"name": "Mattias Rehnberg", "email": "Mattias.Rehnberg@home.se", "date": "2004-11-06T15:52:00Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2004-11-06T15:52:00Z"}, "message": "2004-11-06  Mattias Rehnberg  <Mattias.Rehnberg@home.se>\n\n        * java/io/Vector.java\n        (writeObject): New function to serialized output thread safe.\n\n        * java/io/ObjectOutputStream.java\n        (writeObject): Move the assignment of the class handle to after\n        the assignment of class descriptor handle.\n\nFrom-SVN: r90175", "tree": {"sha": "3428d2857f98daedbe65eb503939fd740fdec28a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3428d2857f98daedbe65eb503939fd740fdec28a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03e9b84966702f926adfbf2c1cfe0cce0a7e72ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03e9b84966702f926adfbf2c1cfe0cce0a7e72ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03e9b84966702f926adfbf2c1cfe0cce0a7e72ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03e9b84966702f926adfbf2c1cfe0cce0a7e72ae/comments", "author": null, "committer": null, "parents": [{"sha": "a036c6f739855646b7caaeae7b5f6b425bcaf59b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a036c6f739855646b7caaeae7b5f6b425bcaf59b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a036c6f739855646b7caaeae7b5f6b425bcaf59b"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "06fb5bd1df5805fc28e3bad401384b6a66afbba4", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03e9b84966702f926adfbf2c1cfe0cce0a7e72ae/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03e9b84966702f926adfbf2c1cfe0cce0a7e72ae/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=03e9b84966702f926adfbf2c1cfe0cce0a7e72ae", "patch": "@@ -1,3 +1,12 @@\n+2004-11-06  Mattias Rehnberg  <Mattias.Rehnberg@home.se>\n+\n+\t* java/io/Vector.java\n+\t(writeObject): New function to serialized output thread safe.\n+\n+\t* java/io/ObjectOutputStream.java\n+\t(writeObject): Move the assignment of the class handle to after\n+\tthe assignment of class descriptor handle.\n+\n 2004-11-06  Robert Schuster <thebohemian@gmx.net>\n \n \tFixes documentation and indentation"}, {"sha": "cef8a274266fd469098b3d8a790582c50e143cd2", "filename": "libjava/java/io/ObjectOutputStream.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03e9b84966702f926adfbf2c1cfe0cce0a7e72ae/libjava%2Fjava%2Fio%2FObjectOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03e9b84966702f926adfbf2c1cfe0cce0a7e72ae/libjava%2Fjava%2Fio%2FObjectOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FObjectOutputStream.java?ref=03e9b84966702f926adfbf2c1cfe0cce0a7e72ae", "patch": "@@ -220,7 +220,6 @@ public final void writeObject(Object obj) throws IOException\n \t      {\n \t\tClass cl = (Class)obj;\n \t\tObjectStreamClass osc = ObjectStreamClass.lookupForClassObject(cl);\n-\t\tassignNewHandle(obj);\n \t\trealOutput.writeByte(TC_CLASS);\n \t\tif (!osc.isProxyClass)\n \t\t  {\n@@ -241,6 +240,7 @@ public final void writeObject(Object obj) throws IOException\n \t\t    \n \t\t    writeObject(osc.getSuper());\n \t\t  }\n+\t\tassignNewHandle(obj);\n \t\tbreak;\n \t      }\n "}, {"sha": "edc14a4e99a5ee906bbc730d83e01c1c2785b210", "filename": "libjava/java/util/Vector.java", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03e9b84966702f926adfbf2c1cfe0cce0a7e72ae/libjava%2Fjava%2Futil%2FVector.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03e9b84966702f926adfbf2c1cfe0cce0a7e72ae/libjava%2Fjava%2Futil%2FVector.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FVector.java?ref=03e9b84966702f926adfbf2c1cfe0cce0a7e72ae", "patch": "@@ -37,6 +37,9 @@\n \n \n package java.util;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n import java.io.Serializable;\n import java.lang.reflect.Array;\n \n@@ -912,4 +915,18 @@ private void checkBoundExclusive(int index)\n     if (index >= elementCount)\n       throw new ArrayIndexOutOfBoundsException(index + \" >= \" + elementCount);\n   }\n+\n+  /**\n+   * Serializes this object to the given stream.\n+   *\n+   * @param s the stream to write to\n+   * @throws IOException if the underlying stream fails\n+   * @serialData just calls default write function\n+   */\n+  private synchronized void writeObject(ObjectOutputStream s)\n+    throws IOException\n+  {\n+    s.defaultWriteObject();\n+  }\n+\n }"}]}