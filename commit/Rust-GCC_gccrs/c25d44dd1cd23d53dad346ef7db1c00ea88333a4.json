{"sha": "c25d44dd1cd23d53dad346ef7db1c00ea88333a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI1ZDQ0ZGQxY2QyM2Q1M2RhZDM0NmVmN2RiMWMwMGVhODgzMzNhNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2003-10-21T22:14:53Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-10-21T22:14:53Z"}, "message": "tree.h (IS_EXPR_CODE_CLASS): Use strchr.\n\n        * tree.h (IS_EXPR_CODE_CLASS): Use strchr.\n        (EXPR_P): New macro.\n\nFrom-SVN: r72773", "tree": {"sha": "6425a9ebec7cd1cff4778676561f083dd38dff14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6425a9ebec7cd1cff4778676561f083dd38dff14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c25d44dd1cd23d53dad346ef7db1c00ea88333a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c25d44dd1cd23d53dad346ef7db1c00ea88333a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c25d44dd1cd23d53dad346ef7db1c00ea88333a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c25d44dd1cd23d53dad346ef7db1c00ea88333a4/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5634cf724232242d5e9e79abc1c4f0ef8a9b7bb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5634cf724232242d5e9e79abc1c4f0ef8a9b7bb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5634cf724232242d5e9e79abc1c4f0ef8a9b7bb8"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "4683e596012e853a82ff52e9caee4e49eae6e76a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c25d44dd1cd23d53dad346ef7db1c00ea88333a4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c25d44dd1cd23d53dad346ef7db1c00ea88333a4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c25d44dd1cd23d53dad346ef7db1c00ea88333a4", "patch": "@@ -1,3 +1,8 @@\n+2003-10-21  Jason Merrill  <jason@redhat.com>\n+\n+\t* tree.h (IS_EXPR_CODE_CLASS): Use strchr.\n+\t(EXPR_P): New macro.\n+\n 2003-10-21  Zack Weinberg  <zack@codesourcery.com>\n \n \t* config/ia64/ia64.md (cmpxchg_acq_si): Mark operand 3 as DImode."}, {"sha": "c240e92e24c5beb2917172e02b327d8ff923fc58", "filename": "gcc/tree.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c25d44dd1cd23d53dad346ef7db1c00ea88333a4/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c25d44dd1cd23d53dad346ef7db1c00ea88333a4/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=c25d44dd1cd23d53dad346ef7db1c00ea88333a4", "patch": "@@ -56,9 +56,11 @@ extern const char tree_code_type[];\n /* Returns nonzero iff CLASS is the tree-code class of an\n    expression.  */\n \n-#define IS_EXPR_CODE_CLASS(CLASS) \\\n-  ((CLASS) == '<' || (CLASS) == '1' || (CLASS) == '2' || (CLASS) == 'e' \\\n-   || (CLASS) == 'r' || (CLASS) == 's')\n+#define IS_EXPR_CODE_CLASS(CLASS) (strchr (\"<12ers\", (CLASS)) != 0)\n+\n+/* Returns nonzero iff NODE is an expression of some kind.  */\n+\n+#define EXPR_P(NODE) IS_EXPR_CODE_CLASS (TREE_CODE_CLASS (TREE_CODE (NODE)))\n \n /* Number of argument-words in each kind of tree-node.  */\n "}]}