{"sha": "476dec785da43401e5a34d80d2ed5ec61d3a9dd6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc2ZGVjNzg1ZGE0MzQwMWU1YTM0ZDgwZDJlZDVlYzYxZDNhOWRkNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-10-02T15:48:55Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-10-02T15:48:55Z"}, "message": "tree-dfa.c (get_ref_base_and_extent): Set *pmax_size to -1 if *poffset + *pmax_size overflows in HOST_WIDE_INT.\n\n\t* tree-dfa.c (get_ref_base_and_extent): Set *pmax_size to -1\n\tif *poffset + *pmax_size overflows in HOST_WIDE_INT.\n\tSet *poffset to 0 and *psize and *pmax_size to -1 if\n\t*poffset + *psize overflows in HOST_WIDE_INT.\n\n\t* gcc.dg/pr82389.c: New test.\n\nFrom-SVN: r253357", "tree": {"sha": "995b3cb6383cb8b0d1a150842b336341e23b11bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/995b3cb6383cb8b0d1a150842b336341e23b11bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/476dec785da43401e5a34d80d2ed5ec61d3a9dd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/476dec785da43401e5a34d80d2ed5ec61d3a9dd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/476dec785da43401e5a34d80d2ed5ec61d3a9dd6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/476dec785da43401e5a34d80d2ed5ec61d3a9dd6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f240a230758a89d52799dc52606ec58963e248f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f240a230758a89d52799dc52606ec58963e248f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f240a230758a89d52799dc52606ec58963e248f2"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "bcd9ddd51ec522e9165216974e38d76a85024369", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/476dec785da43401e5a34d80d2ed5ec61d3a9dd6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/476dec785da43401e5a34d80d2ed5ec61d3a9dd6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=476dec785da43401e5a34d80d2ed5ec61d3a9dd6", "patch": "@@ -1,5 +1,10 @@\n 2017-10-02  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* tree-dfa.c (get_ref_base_and_extent): Set *pmax_size to -1\n+\tif *poffset + *pmax_size overflows in HOST_WIDE_INT.\n+\tSet *poffset to 0 and *psize and *pmax_size to -1 if\n+\t*poffset + *psize overflows in HOST_WIDE_INT.\n+\n \tPR tree-optimization/82387\n \tPR tree-optimization/82388\n \tPR tree-optimization/82389"}, {"sha": "0d92d3314784213fbe74a2a7b020fed40817b62d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/476dec785da43401e5a34d80d2ed5ec61d3a9dd6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/476dec785da43401e5a34d80d2ed5ec61d3a9dd6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=476dec785da43401e5a34d80d2ed5ec61d3a9dd6", "patch": "@@ -1,5 +1,7 @@\n 2017-10-02  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* gcc.dg/pr82389.c: New test.\n+\n \tPR tree-optimization/82387\n \tPR tree-optimization/82388\n \tPR tree-optimization/82389"}, {"sha": "eae5957cd0cbf849862db7cde964261b20c1b74e", "filename": "gcc/testsuite/gcc.dg/pr82389.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/476dec785da43401e5a34d80d2ed5ec61d3a9dd6/gcc%2Ftestsuite%2Fgcc.dg%2Fpr82389.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/476dec785da43401e5a34d80d2ed5ec61d3a9dd6/gcc%2Ftestsuite%2Fgcc.dg%2Fpr82389.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr82389.c?ref=476dec785da43401e5a34d80d2ed5ec61d3a9dd6", "patch": "@@ -0,0 +1,13 @@\n+/* PR tree-optimization/82389 */\n+/* { dg-do compile { target lp64 } } */\n+/* { dg-options \"-w -O3\" } */\n+\n+struct S { char s[0x40000000]; } s;\n+\n+void\n+foo (struct S *p)\n+{\n+  char b[0x0ffffffff0000000L];\n+  *(struct S *)&b[0x0fffffffef000000L] = s;\n+  *p = *(struct S *)&b[0x0fffffffefffffffL];\n+}"}, {"sha": "db69bda32f69bcd853438f523b457b3127bc1ad9", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/476dec785da43401e5a34d80d2ed5ec61d3a9dd6/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/476dec785da43401e5a34d80d2ed5ec61d3a9dd6/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=476dec785da43401e5a34d80d2ed5ec61d3a9dd6", "patch": "@@ -654,7 +654,22 @@ get_ref_base_and_extent (tree exp, HOST_WIDE_INT *poffset,\n   if (!wi::fits_shwi_p (maxsize) || wi::neg_p (maxsize))\n     *pmax_size = -1;\n   else\n-    *pmax_size = maxsize.to_shwi ();\n+    {\n+      *pmax_size = maxsize.to_shwi ();\n+      if (*poffset > HOST_WIDE_INT_MAX - *pmax_size)\n+\t*pmax_size = -1;\n+    }\n+\n+  /* Punt if *POFFSET + *PSIZE overflows in HOST_WIDE_INT, the callers don't\n+     check for such overflows individually and assume it works.  */\n+  if (*psize != -1 && *poffset > HOST_WIDE_INT_MAX - *psize)\n+    {\n+      *poffset = 0;\n+      *psize = -1;\n+      *pmax_size = -1;\n+\n+      return exp;\n+    }\n \n   return exp;\n }"}]}