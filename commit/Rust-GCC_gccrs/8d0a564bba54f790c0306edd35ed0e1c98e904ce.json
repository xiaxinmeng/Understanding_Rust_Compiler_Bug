{"sha": "8d0a564bba54f790c0306edd35ed0e1c98e904ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQwYTU2NGJiYTU0Zjc5MGMwMzA2ZWRkMzVlZDBlMWM5OGU5MDRjZQ==", "commit": {"author": {"name": "Jerry Quinn", "email": "jlquinn@optonline.net", "date": "2003-02-04T20:56:50Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-02-04T20:56:50Z"}, "message": "std_ostream.h (ostream::_M_write): Declare.\n\n\n2003-02-04  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* include/std/std_ostream.h (ostream::_M_write): Declare.\n        * ostream.tcc (ostream::_M_write): Define.\n\t(basic_ostream::write): Use it.\n\t(operator<<(basic_ostream, _CharT)): Ditto.\n\t(operator<<(basic_ostream, char)): Ditto.\n\t(operator<<(basic_ostream, _CharT*)): Ditto.\n\t(operator<<(basic_ostream, char*)): Ditto.\n\t(operator<<(basic_ostream, basic_string)): Ditto.\n\nFrom-SVN: r62399", "tree": {"sha": "7df95c89b5e76f3f44b773f4016f1594b4b00a35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7df95c89b5e76f3f44b773f4016f1594b4b00a35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d0a564bba54f790c0306edd35ed0e1c98e904ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d0a564bba54f790c0306edd35ed0e1c98e904ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d0a564bba54f790c0306edd35ed0e1c98e904ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d0a564bba54f790c0306edd35ed0e1c98e904ce/comments", "author": {"login": "jlquinn", "id": 826841, "node_id": "MDQ6VXNlcjgyNjg0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/826841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlquinn", "html_url": "https://github.com/jlquinn", "followers_url": "https://api.github.com/users/jlquinn/followers", "following_url": "https://api.github.com/users/jlquinn/following{/other_user}", "gists_url": "https://api.github.com/users/jlquinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlquinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlquinn/subscriptions", "organizations_url": "https://api.github.com/users/jlquinn/orgs", "repos_url": "https://api.github.com/users/jlquinn/repos", "events_url": "https://api.github.com/users/jlquinn/events{/privacy}", "received_events_url": "https://api.github.com/users/jlquinn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "431a7363889f000d1b24ddded75eb73bd2d9a6b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/431a7363889f000d1b24ddded75eb73bd2d9a6b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/431a7363889f000d1b24ddded75eb73bd2d9a6b1"}], "stats": {"total": 49, "additions": 32, "deletions": 17}, "files": [{"sha": "de954ffbc1974278a5bc4b2da4516dc9e4e82794", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d0a564bba54f790c0306edd35ed0e1c98e904ce/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d0a564bba54f790c0306edd35ed0e1c98e904ce/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8d0a564bba54f790c0306edd35ed0e1c98e904ce", "patch": "@@ -1,3 +1,14 @@\n+2003-02-04  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* include/std/std_ostream.h (ostream::_M_write): Declare.\t\n+        * ostream.tcc (ostream::_M_write): Define.\n+\t(basic_ostream::write): Use it.\n+\t(operator<<(basic_ostream, _CharT)): Ditto.\n+\t(operator<<(basic_ostream, char)): Ditto.\n+\t(operator<<(basic_ostream, _CharT*)): Ditto.\n+\t(operator<<(basic_ostream, char*)): Ditto.\n+\t(operator<<(basic_ostream, basic_string)): Ditto.\n+\n 2003-02-04  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/26_numerics/valarray_name_lookup.cc: Fix.\n@@ -67,7 +78,8 @@\n \t* include/bits/valarray_before.h (_UnBase::operator[]): Apply unary\n \toperator.\n \n-\t* include/bits/valarray_before.h (__not_equal_to): Use != instead of ==.\n+\t* include/bits/valarray_before.h (__not_equal_to): Use != instead\n+\tof ==.\n \n \t* testsuite/26_numerics/valarray_operators.cc: New test.\n "}, {"sha": "b5b8762e5bfe323e20315a5c957729c7e7ee9a11", "filename": "libstdc++-v3/include/bits/ostream.tcc", "status": "modified", "additions": 9, "deletions": 15, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d0a564bba54f790c0306edd35ed0e1c98e904ce/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d0a564bba54f790c0306edd35ed0e1c98e904ce/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc?ref=8d0a564bba54f790c0306edd35ed0e1c98e904ce", "patch": "@@ -1,6 +1,6 @@\n // ostream classes -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -388,7 +388,7 @@ namespace std\n \t  if (traits_type::eq_int_type(__put, traits_type::eof()))\n \t    this->setstate(ios_base::badbit);\n \t}\n-      return *this;\n+      return *this;  \n     }\n \n   template<typename _CharT, typename _Traits>\n@@ -397,11 +397,7 @@ namespace std\n     {\n       sentry __cerb(*this);\n       if (__cerb)\n-\t{\n-\t  streamsize __put = this->rdbuf()->sputn(__s, __n);\n-\t  if ( __put != __n)\n-\t    this->setstate(ios_base::badbit);\n-\t}\n+\t_M_write(__s, __n);\n       return *this;\n     }\n \n@@ -488,7 +484,7 @@ namespace std\n \t\t\t\t\t\t &__c, __w, __len, false);\n \t\t  __len = __w;\n \t\t}\n-\t      __out.write(__pads, __len);\n+\t      __out._M_write(__pads, __len);\n \t      __out.width(0);\n \t    }\n \t  catch(exception& __fail)\n@@ -524,7 +520,7 @@ namespace std\n \t\t\t\t\t       &__c, __w, __len, false);\n \t\t  __len = __w;\n \t\t}\n-\t      __out.write(__pads, __len);\n+\t      __out._M_write(__pads, __len);\n \t      __out.width(0);\n \t    }\n \t  catch(exception& __fail)\n@@ -559,7 +555,7 @@ namespace std\n \t\t  __s = __pads;\n \t\t  __len = __w;\n \t\t}\n-\t      __out.write(__s, __len);\n+\t      __out._M_write(__s, __len);\n \t      __out.width(0);\n \t    }\n \t  catch(exception& __fail)\n@@ -608,7 +604,7 @@ namespace std\n \t\t  __str = __pads;\n \t\t  __len = __w;\n \t\t}\n-\t      __out.write(__str, __len);\n+\t      __out._M_write(__str, __len);\n \t      __out.width(0);\n \t    }\n \t  catch(exception& __fail)\n@@ -647,7 +643,7 @@ namespace std\n \t\t  __s = __pads;\n \t\t  __len = __w;\n \t\t}\n-\t      __out.write(__s, __len);\n+\t      __out._M_write(__s, __len);\n \t      __out.width(0);\n \t    }\n \t  catch(exception& __fail)\n@@ -688,10 +684,8 @@ namespace std\n \t      __s = __pads;\n \t      __len = __w;\n \t    }\n-\t  streamsize __res = __out.rdbuf()->sputn(__s, __len);\n+\t  __out._M_write(__s, __len);\n \t  __out.width(0);\n-\t  if (__res != __len)\n-\t    __out.setstate(ios_base::failbit);\n \t}\n       return __out;\n     }"}, {"sha": "9d1c1f62c5a6680b86f9ff7a16cbf637e28a38d9", "filename": "libstdc++-v3/include/std/std_ostream.h", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d0a564bba54f790c0306edd35ed0e1c98e904ce/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_ostream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d0a564bba54f790c0306edd35ed0e1c98e904ce/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_ostream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_ostream.h?ref=8d0a564bba54f790c0306edd35ed0e1c98e904ce", "patch": "@@ -1,6 +1,6 @@\n // Output streams -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -261,6 +261,15 @@ namespace std\n       __ostream_type& \n       put(char_type __c);\n \n+      // Core write functionality, without sentry.\n+      void\n+      _M_write(const char_type* __s, streamsize __n)\n+      {\n+\tstreamsize __put = this->rdbuf()->sputn(__s, __n);\n+\tif (__put != __n)\n+\t  this->setstate(ios_base::badbit);\n+      }\n+\n       /**\n        *  @brief  Character string insertion.\n        *  @param  s  The array to insert."}]}