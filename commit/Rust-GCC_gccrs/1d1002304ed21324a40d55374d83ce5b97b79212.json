{"sha": "1d1002304ed21324a40d55374d83ce5b97b79212", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQxMDAyMzA0ZWQyMTMyNGE0MGQ1NTM3NGQ4M2NlNWI5N2I3OTIxMg==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2010-08-02T22:04:36Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2010-08-02T22:04:36Z"}, "message": "re PR fortran/45159 (Unnecessary temporaries)\n\n\n2010-08-02  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/45159\n\t* depencency.c (gfc_dep_resolver):  Fix logic for when a loop\n\tcan be reversed.\n\n2010-08-02  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/45159\n\n\t* gfortran.dg/dependency_29.f90:  New test.\n\nFrom-SVN: r162829", "tree": {"sha": "f3b3bcc6b23e99dfab67f045cd41aacc8706f297", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3b3bcc6b23e99dfab67f045cd41aacc8706f297"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d1002304ed21324a40d55374d83ce5b97b79212", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d1002304ed21324a40d55374d83ce5b97b79212", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d1002304ed21324a40d55374d83ce5b97b79212", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d1002304ed21324a40d55374d83ce5b97b79212/comments", "author": null, "committer": null, "parents": [{"sha": "14292418cbbeec96857d8920e66e43038f0f3194", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14292418cbbeec96857d8920e66e43038f0f3194", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14292418cbbeec96857d8920e66e43038f0f3194"}], "stats": {"total": 40, "additions": 28, "deletions": 12}, "files": [{"sha": "3b5a435e0f0d1de720292ca9c0d99e2a349a5695", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d1002304ed21324a40d55374d83ce5b97b79212/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d1002304ed21324a40d55374d83ce5b97b79212/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1d1002304ed21324a40d55374d83ce5b97b79212", "patch": "@@ -1,3 +1,9 @@\n+2010-08-02  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/45159\n+\t* depencency.c (gfc_dep_resolver):  Fix logic for when a loop\n+\tcan be reversed.\n+\n 2010-08-02  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/36854"}, {"sha": "1eae1ebaa810a8558f0164f06c3b0f1a9b71976a", "filename": "gcc/fortran/dependency.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d1002304ed21324a40d55374d83ce5b97b79212/gcc%2Ffortran%2Fdependency.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d1002304ed21324a40d55374d83ce5b97b79212/gcc%2Ffortran%2Fdependency.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdependency.c?ref=1d1002304ed21324a40d55374d83ce5b97b79212", "patch": "@@ -1716,8 +1716,8 @@ gfc_dep_resolver (gfc_ref *lref, gfc_ref *rref, gfc_reverse *reverse)\n \n \t\t  /* If no intention of reversing or reversing is explicitly\n \t\t     inhibited, convert backward dependence to overlap.  */\n-\t\t  if ((reverse == NULL && this_dep == GFC_DEP_BACKWARD)\n-\t\t\t|| (reverse && reverse[n] == GFC_CANNOT_REVERSE))\n+\t\t  if (this_dep == GFC_DEP_BACKWARD\n+\t\t      && (reverse == NULL || reverse[n] == GFC_CANNOT_REVERSE))\n \t\t    this_dep = GFC_DEP_OVERLAP;\n \t\t}\n "}, {"sha": "a869861b4307f587f4e40909948109b5e99108a2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d1002304ed21324a40d55374d83ce5b97b79212/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d1002304ed21324a40d55374d83ce5b97b79212/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1d1002304ed21324a40d55374d83ce5b97b79212", "patch": "@@ -1,16 +1,15 @@\n+2010-08-02  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/45159\n+\n+\t* gfortran.dg/dependency_29.f90:  New test.\n+\n 2010-08-02  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/36854\n-\t* dependency.h:  Add prototype for gfc_are_identical_variables.\n-\t* frontend-passes.c:  Include depencency.h.\n-\t(optimimize_equality):  Use gfc_are_identical_variables.\n-\t* dependency.c (identical_array_ref): New function.\n-\t(gfc_are_identical_variables):  New function.\n-\t(gfc_deb_compare_expr):  Use gfc_are_identical_variables.\n-\t* dependency.c (gfc_check_section_vs_section).  Rename gfc_\n-\tprefix from statc function.\n-\t(check_section_vs_section): Change arguments to gfc_array_ref,\n-\tadjust function body accordingly.\n+\t* gfortran.dg/character_comparison_2.f90:  New test.\n+\t* gfortran.dg/character_comparison_3.f90:  New test.\n+\t* gfortran.dg/dependency_28.f90:  New test.\n \n 2010-08-02  Bernd Schmidt  <bernds@codesourcery.com>\n "}, {"sha": "398bf2c7b2547ee2e899638842ce4f2f115831b8", "filename": "gcc/testsuite/gfortran.dg/dependency_29.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d1002304ed21324a40d55374d83ce5b97b79212/gcc%2Ftestsuite%2Fgfortran.dg%2Fdependency_29.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d1002304ed21324a40d55374d83ce5b97b79212/gcc%2Ftestsuite%2Fgfortran.dg%2Fdependency_29.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdependency_29.f90?ref=1d1002304ed21324a40d55374d83ce5b97b79212", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do compile }\n+! { dg-options \"-Warray-temporaries\" }\n+\n+subroutine t1(n1,n2, gfft, ufft)\n+  implicit none\n+  integer :: n1, n2, i\n+  real :: gfft(n1,n2), ufft(n2)\n+  DO i=1, n1\n+     gfft(i,:)=gfft(i,:)*ufft(i)\n+  END DO\n+end subroutine t1"}]}