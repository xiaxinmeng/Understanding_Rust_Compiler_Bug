{"sha": "103c4f759ab75305a7cb7927af6b35b1f5da5f06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAzYzRmNzU5YWI3NTMwNWE3Y2I3OTI3YWY2YjM1YjFmNWRhNWYwNg==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2016-11-08T22:07:21Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2016-11-08T22:07:21Z"}, "message": "re PR fortran/68440 ([OOP] ICE on declaring class variable with wrong attribute)\n\n2016-11-08  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/68440\n\t* expr.c (check_alloc_comp_init): Loosen an assert.\n\t* resolve.c (resolve_fl_parameter): Reject class parameters.\n\n2016-11-08  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/68440\n\t* gfortran.dg/class_58.f90: New test.\n\nFrom-SVN: r241979", "tree": {"sha": "bca188b5b0956cce33dabe41bbc1bc121c18c073", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bca188b5b0956cce33dabe41bbc1bc121c18c073"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/103c4f759ab75305a7cb7927af6b35b1f5da5f06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/103c4f759ab75305a7cb7927af6b35b1f5da5f06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/103c4f759ab75305a7cb7927af6b35b1f5da5f06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/103c4f759ab75305a7cb7927af6b35b1f5da5f06/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe7913f6887eaa6f5cdb150bd5315f8464d06beb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe7913f6887eaa6f5cdb150bd5315f8464d06beb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe7913f6887eaa6f5cdb150bd5315f8464d06beb"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "499c3d4c4e340d09ee3457bb1ad4769c46421354", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/103c4f759ab75305a7cb7927af6b35b1f5da5f06/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/103c4f759ab75305a7cb7927af6b35b1f5da5f06/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=103c4f759ab75305a7cb7927af6b35b1f5da5f06", "patch": "@@ -1,3 +1,9 @@\n+2016-11-08  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/68440\n+\t* expr.c (check_alloc_comp_init): Loosen an assert.\n+\t* resolve.c (resolve_fl_parameter): Reject class parameters.\n+\n 2016-11-08  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/77596"}, {"sha": "b2ffaae246a69bf39d93c6cd5a8116a205d1d8d8", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/103c4f759ab75305a7cb7927af6b35b1f5da5f06/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/103c4f759ab75305a7cb7927af6b35b1f5da5f06/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=103c4f759ab75305a7cb7927af6b35b1f5da5f06", "patch": "@@ -2206,7 +2206,7 @@ check_alloc_comp_init (gfc_expr *e)\n   gfc_constructor *ctor;\n \n   gcc_assert (e->expr_type == EXPR_STRUCTURE);\n-  gcc_assert (e->ts.type == BT_DERIVED);\n+  gcc_assert (e->ts.type == BT_DERIVED || e->ts.type == BT_CLASS);\n \n   for (comp = e->ts.u.derived->components,\n        ctor = gfc_constructor_first (e->value.constructor);"}, {"sha": "f4d346ed0f312e576ae2d76f52db961d2e87ebe8", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/103c4f759ab75305a7cb7927af6b35b1f5da5f06/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/103c4f759ab75305a7cb7927af6b35b1f5da5f06/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=103c4f759ab75305a7cb7927af6b35b1f5da5f06", "patch": "@@ -14001,6 +14001,15 @@ resolve_fl_parameter (gfc_symbol *sym)\n \t\t &sym->value->where);\n       return false;\n     }\n+\n+  /* F03:C509,C514.  */\n+  if (sym->ts.type == BT_CLASS)\n+    {\n+      gfc_error (\"CLASS variable %qs at %L cannot have the PARAMETER attribute\",\n+\t\t sym->name, &sym->declared_at);\n+      return false;\n+    }\n+\n   return true;\n }\n "}, {"sha": "2b561e817b02d01d68ec02478bc18377ac5fd9bf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/103c4f759ab75305a7cb7927af6b35b1f5da5f06/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/103c4f759ab75305a7cb7927af6b35b1f5da5f06/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=103c4f759ab75305a7cb7927af6b35b1f5da5f06", "patch": "@@ -1,3 +1,8 @@\n+2016-11-08  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/68440\n+\t* gfortran.dg/class_58.f90: New test.\n+\n 2016-11-08  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/70799"}, {"sha": "20b601a2f51caa8670ac18225b1e99cd24fe1f41", "filename": "gcc/testsuite/gfortran.dg/class_58.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/103c4f759ab75305a7cb7927af6b35b1f5da5f06/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_58.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/103c4f759ab75305a7cb7927af6b35b1f5da5f06/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_58.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_58.f90?ref=103c4f759ab75305a7cb7927af6b35b1f5da5f06", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do compile }\n+!\n+! PR 68440: [OOP] ICE on declaring class variable with wrong attribute\n+!\n+! Contributed by Gerhard Steinmetz <gerhard.steinmetz.fortran@t-online.de>\n+\n+subroutine s\n+  type t\n+  end type\n+  class(t), parameter :: x = t()  ! { dg-error \"cannot have the PARAMETER attribute\" }\n+  class(t), parameter :: y = x    ! { dg-error \"cannot have the PARAMETER attribute\" }\n+  class(t) :: z = x               ! { dg-error \"must be dummy, allocatable or pointer\" }\n+end"}]}