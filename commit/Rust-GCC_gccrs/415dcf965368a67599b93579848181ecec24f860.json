{"sha": "415dcf965368a67599b93579848181ecec24f860", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE1ZGNmOTY1MzY4YTY3NTk5YjkzNTc5ODQ4MTgxZWNlYzI0Zjg2MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-05-10T16:32:13Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-05-10T16:32:13Z"}, "message": "pt.c (dependent_type_p): Make sure we aren't called with global_type_node.\n\n\t* pt.c (dependent_type_p): Make sure we aren't called with\n\tglobal_type_node.\n\nFrom-SVN: r247843", "tree": {"sha": "c50e58a67d0579f2af75b1c464d47303fee8fa4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c50e58a67d0579f2af75b1c464d47303fee8fa4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/415dcf965368a67599b93579848181ecec24f860", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/415dcf965368a67599b93579848181ecec24f860", "html_url": "https://github.com/Rust-GCC/gccrs/commit/415dcf965368a67599b93579848181ecec24f860", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/415dcf965368a67599b93579848181ecec24f860/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0ea37ae178ba156ec9f88134acc4bb13665c56ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ea37ae178ba156ec9f88134acc4bb13665c56ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ea37ae178ba156ec9f88134acc4bb13665c56ef"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "09caa02ba70b19cdbd9dc091889975019c8c2281", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/415dcf965368a67599b93579848181ecec24f860/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/415dcf965368a67599b93579848181ecec24f860/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=415dcf965368a67599b93579848181ecec24f860", "patch": "@@ -1,5 +1,8 @@\n 2017-05-10  Jason Merrill  <jason@redhat.com>\n \n+\t* pt.c (dependent_type_p): Make sure we aren't called with\n+\tglobal_type_node.\n+\n \tPR c++/79549 - C++17 ICE with non-type auto template parameter pack\n \t* pt.c (convert_template_argument): Just return an argument pack.\n \t(coerce_template_parameter_pack, template_parm_to_arg)"}, {"sha": "b9e7af7066b40c0ff29c2401d8b355481c6c6a3f", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/415dcf965368a67599b93579848181ecec24f860/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/415dcf965368a67599b93579848181ecec24f860/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=415dcf965368a67599b93579848181ecec24f860", "patch": "@@ -23436,6 +23436,10 @@ dependent_type_p (tree type)\n   if (type == error_mark_node)\n     return false;\n \n+  /* Getting here with global_type_node means we improperly called this\n+     function on the TREE_TYPE of an IDENTIFIER_NODE.  */\n+  gcc_checking_assert (type != global_type_node);\n+\n   /* If we have not already computed the appropriate value for TYPE,\n      do so now.  */\n   if (!TYPE_DEPENDENT_P_VALID (type))"}]}