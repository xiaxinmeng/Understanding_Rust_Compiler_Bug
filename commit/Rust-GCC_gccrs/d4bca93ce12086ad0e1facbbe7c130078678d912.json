{"sha": "d4bca93ce12086ad0e1facbbe7c130078678d912", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRiY2E5M2NlMTIwODZhZDBlMWZhY2JiZTdjMTMwMDc4Njc4ZDkxMg==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2013-05-09T20:11:12Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2013-05-09T20:11:12Z"}, "message": "epiphany.c (epiphany_expand_prologue): When using gen_stack_adjust_str with a register offset...\n\n        * config/epiphany/epiphany.c (epiphany_expand_prologue):\n        When using gen_stack_adjust_str with a register offset, add a\n        REG_FRAME_RELATED_EXPR note.\n\nFrom-SVN: r198753", "tree": {"sha": "40d4afaa4b15486285b85d286302d9c4d4f9322c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40d4afaa4b15486285b85d286302d9c4d4f9322c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4bca93ce12086ad0e1facbbe7c130078678d912", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4bca93ce12086ad0e1facbbe7c130078678d912", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4bca93ce12086ad0e1facbbe7c130078678d912", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4bca93ce12086ad0e1facbbe7c130078678d912/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "60ca9a652fcbed84a8a8f492850b7ea18b05c009", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60ca9a652fcbed84a8a8f492850b7ea18b05c009", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60ca9a652fcbed84a8a8f492850b7ea18b05c009"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "fe4c00af7e14b363428fee1b9c663a41c4afcf67", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4bca93ce12086ad0e1facbbe7c130078678d912/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4bca93ce12086ad0e1facbbe7c130078678d912/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d4bca93ce12086ad0e1facbbe7c130078678d912", "patch": "@@ -1,3 +1,9 @@\n+2013-05-09  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\t* config/epiphany/epiphany.c (epiphany_expand_prologue):\n+\tWhen using gen_stack_adjust_str with a register offset, add a\n+\tREG_FRAME_RELATED_EXPR note.\n+\n 2013-05-09  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/sse.md (*vec_extractv4si_0_zext): New pattern."}, {"sha": "2807b3a462bf0aa1901ecc3c01cb70517705d26b", "filename": "gcc/config/epiphany/epiphany.c", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4bca93ce12086ad0e1facbbe7c130078678d912/gcc%2Fconfig%2Fepiphany%2Fepiphany.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4bca93ce12086ad0e1facbbe7c130078678d912/gcc%2Fconfig%2Fepiphany%2Fepiphany.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fepiphany%2Fepiphany.c?ref=d4bca93ce12086ad0e1facbbe7c130078678d912", "patch": "@@ -1734,18 +1734,28 @@ epiphany_expand_prologue (void)\n      register save.  */\n   if (current_frame_info.last_slot >= 0)\n     {\n+      rtx ip, mem2, insn, note;\n+\n       gcc_assert (current_frame_info.last_slot != GPR_FP\n \t\t  || (!current_frame_info.need_fp\n \t\t      && current_frame_info.first_slot < 0));\n       off = GEN_INT (-current_frame_info.last_slot_offset);\n       mem = gen_frame_mem (BLKmode,\n \t\t\t   gen_rtx_PLUS (Pmode, stack_pointer_rtx, off));\n-      reg = gen_rtx_REG (Pmode, GPR_IP);\n-      frame_move_insn (reg, off);\n-      frame_insn (gen_stack_adjust_str\n-\t\t   (gen_frame_mem (word_mode, stack_pointer_rtx),\n-\t\t    gen_rtx_REG (word_mode, current_frame_info.last_slot),\n-\t\t    reg, mem));\n+      ip = gen_rtx_REG (Pmode, GPR_IP);\n+      frame_move_insn (ip, off);\n+      reg = gen_rtx_REG (word_mode, current_frame_info.last_slot),\n+      mem2 = gen_frame_mem (word_mode, stack_pointer_rtx),\n+      insn = frame_insn (gen_stack_adjust_str (mem2, reg, ip, mem));\n+      /* Instruction scheduling can separate the instruction setting IP from\n+\t INSN so that dwarf2out_frame_debug_expr becomes confused what the\n+\t temporary register is.  Example: _gcov.o  */\n+      note = gen_rtx_SET (VOIDmode, stack_pointer_rtx,\n+\t\t\t  gen_rtx_PLUS (Pmode, stack_pointer_rtx, off));\n+      note = gen_rtx_PARALLEL (VOIDmode,\n+\t\t\t       gen_rtvec (2, gen_rtx_SET (VOIDmode, mem2, reg),\n+\t\t\t\t\t  note));\n+      add_reg_note (insn, REG_FRAME_RELATED_EXPR, note);\n     }\n   /* If there is only one or no register to save, yet we have a large frame,\n      use an add.  */"}]}