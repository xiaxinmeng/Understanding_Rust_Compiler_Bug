{"sha": "b222e725f53231a0bd9799ca93892a79d592a5f3", "node_id": "C_kwDOANBUbNoAKGIyMjJlNzI1ZjUzMjMxYTBiZDk3OTljYTkzODkyYTc5ZDU5MmE1ZjM", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-03-01T09:22:59Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-03-01T09:25:38Z"}, "message": "c++: Don't recurse on DECL_INITIAL for DECL_EXPR on non-VAR_DECLs [PR108606]\n\nThe r13-2965-g73d9b0e5947e16 change changed the line touched in this patch\nfrom\n      return RECUR (tmp, want_rval);\nto\n      return RECUR (DECL_INITIAL (tmp), want_rval);\nThis is on DECL_EXPR handling code, where tmp can be lots of different\ntrees and DECL_INITIAL unfortunately also means different things on\ndifferent trees.\nIt is the initializer on VAR_DECL, DECL_ARG_TYPE on PARM_DECLs (though\nthose are unlikely to have DECL_EXPRs), for FUNCTION_DECLs the body,\n..., USING_DECL_DECLS on USING_DECLs and DECL_FRIENDLIST on TYPE_DECLs.\n\nThe testcase below ICEs because we have a DECL_EXPR for TYPE_DECL\nwhich has non-NULL DECL_FRIENDLIST and we certainly can't recurse on\nthe friend list.\n\nThe following patch will RECUR on DECL_INITIAL only for VAR_DECLs and\nfor anything else just return true.\n\n2023-03-01  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/108606\n\t* constexpr.cc (potential_constant_expression_1) <case DECL_EXPR>:\n\tOnly recurse on DECL_INITIAL (tmp) if tmp is a VAR_DECL, otherwise\n\tjust return true.\n\n\t* g++.dg/cpp1y/pr108606.C: New test.", "tree": {"sha": "31e440cf0b9e5786df843a407e135b77f7140110", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31e440cf0b9e5786df843a407e135b77f7140110"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b222e725f53231a0bd9799ca93892a79d592a5f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b222e725f53231a0bd9799ca93892a79d592a5f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b222e725f53231a0bd9799ca93892a79d592a5f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b222e725f53231a0bd9799ca93892a79d592a5f3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85203d52bfa4a84da5f50e0a242891308ffa8d83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85203d52bfa4a84da5f50e0a242891308ffa8d83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85203d52bfa4a84da5f50e0a242891308ffa8d83"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "89df7d7600c732f52fc718330e8b70f20603d17a", "filename": "gcc/cp/constexpr.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b222e725f53231a0bd9799ca93892a79d592a5f3/gcc%2Fcp%2Fconstexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b222e725f53231a0bd9799ca93892a79d592a5f3/gcc%2Fcp%2Fconstexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.cc?ref=b222e725f53231a0bd9799ca93892a79d592a5f3", "patch": "@@ -9699,7 +9699,9 @@ potential_constant_expression_1 (tree t, bool want_rval, bool strict, bool now,\n \t\t   (tmp, /*constexpr_context_p=*/true, flags))\n \t    return false;\n \t}\n-      return RECUR (DECL_INITIAL (tmp), want_rval);\n+      if (VAR_P (tmp))\n+\treturn RECUR (DECL_INITIAL (tmp), want_rval);\n+      return true;\n \n     case TRY_FINALLY_EXPR:\n       return (RECUR (TREE_OPERAND (t, 0), want_rval)"}, {"sha": "71cfc679317ac23e8de0b927e2841b09236e12da", "filename": "gcc/testsuite/g++.dg/cpp1y/pr108606.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b222e725f53231a0bd9799ca93892a79d592a5f3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr108606.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b222e725f53231a0bd9799ca93892a79d592a5f3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr108606.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr108606.C?ref=b222e725f53231a0bd9799ca93892a79d592a5f3", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/108606\n+// { dg-do compile { target c++14 } }\n+\n+template <typename T>\n+void bar (T) {}\n+\n+void\n+foo ()\n+{\n+  bar ([&] (auto x) { class C { friend void baz (); }; });\n+}"}]}