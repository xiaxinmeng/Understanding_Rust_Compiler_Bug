{"sha": "582329cb7600bb4f409e59c62f2ad248d89d93c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTgyMzI5Y2I3NjAwYmI0ZjQwOWU1OWM2MmYyYWQyNDhkODlkOTNjNA==", "commit": {"author": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1992-08-31T07:03:32Z"}, "committer": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1992-08-31T07:03:32Z"}, "message": "(TARGET_DEFAULT,VALUE_REGNO,FUNCTION_VALUE_REGNO): Move to unx386.h.\n\nFrom-SVN: r1999", "tree": {"sha": "da10b0579be5bc637c608b0ec7efc7283acad7f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da10b0579be5bc637c608b0ec7efc7283acad7f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/582329cb7600bb4f409e59c62f2ad248d89d93c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/582329cb7600bb4f409e59c62f2ad248d89d93c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/582329cb7600bb4f409e59c62f2ad248d89d93c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/582329cb7600bb4f409e59c62f2ad248d89d93c4/comments", "author": null, "committer": null, "parents": [{"sha": "a91ae5fb5806fc7c2a3434823484adb4dccdae3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a91ae5fb5806fc7c2a3434823484adb4dccdae3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a91ae5fb5806fc7c2a3434823484adb4dccdae3d"}], "stats": {"total": 109, "additions": 0, "deletions": 109}, "files": [{"sha": "133df6f167638f1bdfe87a063120bffd942ff426", "filename": "gcc/config/i386/aix386.h", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582329cb7600bb4f409e59c62f2ad248d89d93c4/gcc%2Fconfig%2Fi386%2Faix386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582329cb7600bb4f409e59c62f2ad248d89d93c4/gcc%2Fconfig%2Fi386%2Faix386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Faix386.h?ref=582329cb7600bb4f409e59c62f2ad248d89d93c4", "patch": "@@ -30,10 +30,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #include \"att386.h\"\n \n-/* By default, target has a 80387.  */\n-\n-#define TARGET_DEFAULT 1\n-\n /* Use crt1.o as a startup file and crtn.o as a closing file.  */\n \n #define STARTFILE_SPEC  \\\n@@ -79,20 +75,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #define ASM_FILE_START_1(FILE) fprintf (FILE, \"\\t.noopt\\n\");\n #endif\n \f\n-/* Machines that use the AT&T assembler syntax\n-   also return floating point values in an FP register.  */\n-/* Define how to find the value returned by a function.\n-   VALTYPE is the data type of the value (as a tree).\n-   If the precise function being called is known, FUNC is its FUNCTION_DECL;\n-   otherwise, FUNC is 0.  */\n-\n-#define VALUE_REGNO(MODE) \\\n-  (((MODE)==SFmode || (MODE)==DFmode) ? FIRST_FLOAT_REG : 0)\n-\n-/* 1 if N is a possible register number for a function value. */\n-\n-#define FUNCTION_VALUE_REGNO_P(N) ((N) == 0 || (N)== FIRST_FLOAT_REG)\n-\n /* Output assembler code to FILE to increment profiler label # LABELNO\n    for profiling a function entry.  */\n "}, {"sha": "4617e10f668913d276e2cf6f04496ee56356afb7", "filename": "gcc/config/i386/gas.h", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582329cb7600bb4f409e59c62f2ad248d89d93c4/gcc%2Fconfig%2Fi386%2Fgas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582329cb7600bb4f409e59c62f2ad248d89d93c4/gcc%2Fconfig%2Fi386%2Fgas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgas.h?ref=582329cb7600bb4f409e59c62f2ad248d89d93c4", "patch": "@@ -43,10 +43,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #undef DBX_NO_XREFS\n #undef DBX_CONTIN_LENGTH\n \n-/* By default, target has a 80387.  */\n-\n-#define TARGET_DEFAULT 1\n-\n /* Specify predefined symbols in preprocessor.  */\n \n #define CPP_PREDEFINES \"-Dunix -Di386\"\n@@ -94,20 +90,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #define ASM_OUTPUT_LOOP_ALIGN(FILE) \\\n      fprintf ((FILE), \"\\t.align 2,0x90\\n\");  /* Use log of 4 as arg.  */\n \f\n-/* Machines that use the AT&T assembler syntax\n-   also return floating point values in an FP register.  */\n-/* Define how to find the value returned by a function.\n-   VALTYPE is the data type of the value (as a tree).\n-   If the precise function being called is known, FUNC is its FUNCTION_DECL;\n-   otherwise, FUNC is 0.  */\n-\n-#define VALUE_REGNO(MODE) \\\n-  (((MODE)==SFmode || (MODE)==DFmode) ? FIRST_FLOAT_REG : 0)\n-\n-/* 1 if N is a possible register number for a function value. */\n-\n-#define FUNCTION_VALUE_REGNO_P(N) ((N) == 0 || (N)== FIRST_FLOAT_REG)\n-\n #undef ASM_FILE_START\n #define ASM_FILE_START(FILE) \\\n   fprintf (FILE, \"\\t.file\\t\\\"%s\\\"\\n\", dump_base_name);"}, {"sha": "a8720280000e906e019df578660e517beb19d919", "filename": "gcc/config/i386/sequent.h", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582329cb7600bb4f409e59c62f2ad248d89d93c4/gcc%2Fconfig%2Fi386%2Fsequent.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582329cb7600bb4f409e59c62f2ad248d89d93c4/gcc%2Fconfig%2Fi386%2Fsequent.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsequent.h?ref=582329cb7600bb4f409e59c62f2ad248d89d93c4", "patch": "@@ -23,10 +23,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #include \"bsd386.h\"\n \n-/* By default, target has a 80387.  */\n-\n-#define TARGET_DEFAULT 1\n-\n /* Specify predefined symbols in preprocessor.  */\n \n #define CPP_PREDEFINES \"-Dunix -Di386 -Dsequent\"\n@@ -75,15 +71,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n     : (MODE) != QImode)\t\t\t\t\t\t\t\\\n    && ! (REGNO == 2 && GET_MODE_UNIT_SIZE (MODE) > 4))\n \n-/* Floating-point return values come in the FP register.  */\n-\n-#define VALUE_REGNO(MODE) \\\n-  (((MODE)==SFmode || (MODE)==DFmode) ? FIRST_FLOAT_REG : 0)\n-\n-/* 1 if N is a possible register number for a function value. */\n-\n-#define FUNCTION_VALUE_REGNO_P(N) ((N) == 0 || (N)== FIRST_FLOAT_REG)\n-\n /* Output assembler code to FILE to increment profiler label # LABELNO\n    for profiling a function entry. */\n "}, {"sha": "5bc96f9716343b780efb5c4c00aa652cd399181d", "filename": "gcc/config/i386/sun.h", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582329cb7600bb4f409e59c62f2ad248d89d93c4/gcc%2Fconfig%2Fi386%2Fsun.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582329cb7600bb4f409e59c62f2ad248d89d93c4/gcc%2Fconfig%2Fi386%2Fsun.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsun.h?ref=582329cb7600bb4f409e59c62f2ad248d89d93c4", "patch": "@@ -24,10 +24,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #include \"sun386.h\"\n \n-/* By default, target has a 80387.  */\n-\n-#define TARGET_DEFAULT 1\n-\n /* Use crt0.o as a startup file.  */\n \n #define STARTFILE_SPEC  \\\n@@ -77,18 +73,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #define PCC_BITFIELD_TYPE_MATTERS 1\n \n-/* Define how to find the value returned by a function.\n-   VALTYPE is the data type of the value (as a tree).\n-   If the precise function being called is known, FUNC is its FUNCTION_DECL;\n-   otherwise, FUNC is 0.  */\n-\n-#define VALUE_REGNO(MODE) \\\n-  (((MODE)==SFmode || (MODE)==DFmode) ? FIRST_FLOAT_REG : 0)\n-\n-/* 1 if N is a possible register number for a function value. */\n-\n-#define FUNCTION_VALUE_REGNO_P(N) ((N) == 0 || (N)== FIRST_FLOAT_REG)\n-\n /* This is partly guess.  */\n \n #undef DBX_REGISTER_NUMBER"}, {"sha": "41b40151a8095f8b476c2bfb3d2b48b6a4e3a249", "filename": "gcc/config/i386/sysv3.h", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582329cb7600bb4f409e59c62f2ad248d89d93c4/gcc%2Fconfig%2Fi386%2Fsysv3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582329cb7600bb4f409e59c62f2ad248d89d93c4/gcc%2Fconfig%2Fi386%2Fsysv3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsysv3.h?ref=582329cb7600bb4f409e59c62f2ad248d89d93c4", "patch": "@@ -29,10 +29,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #include \"att386.h\"\n \n-/* By default, target has a 80387.  */\n-\n-#define TARGET_DEFAULT 1\n-\n /* Use crt1.o as a startup file and crtn.o as a closing file.  */\n \n #define STARTFILE_SPEC  \\\n@@ -58,28 +54,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #undef ASM_FILE_START_1\n #define ASM_FILE_START_1(FILE)\n \f\n-/* Machines that use the AT&T assembler syntax\n-   also return floating point values in an FP register.  */\n-/* Define how to find the value returned by a function.\n-   VALTYPE is the data type of the value (as a tree).\n-   If the precise function being called is known, FUNC is its FUNCTION_DECL;\n-   otherwise, FUNC is 0.  */\n-\n-#define VALUE_REGNO(MODE) \\\n-  (((MODE) == SFmode || (MODE) == DFmode) ? FIRST_FLOAT_REG : 0)\n-\n-/* 1 if N is a possible register number for a function value. */\n-\n-#define FUNCTION_VALUE_REGNO_P(N) ((N) == 0 || (N)== FIRST_FLOAT_REG)\n-\n-#if 0 /* This symbol is expected to exist only on BSD,\n-\t and besides, it describes the host rather than the target.\n-\t It certainly does not belong here.  */\n-#ifndef MAXPATHLEN\n-#define MAXPATHLEN 1024\n-#endif\n-#endif\n-\n /* longjmp may fail to restore the registers if called from the same\n    function that called setjmp.  To compensate, the compiler avoids\n    putting variables in registers in functions that use both setjmp"}, {"sha": "c3caacb78431380b2d0514328c2a731a31ab252e", "filename": "gcc/config/i386/sysv4.h", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582329cb7600bb4f409e59c62f2ad248d89d93c4/gcc%2Fconfig%2Fi386%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582329cb7600bb4f409e59c62f2ad248d89d93c4/gcc%2Fconfig%2Fi386%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsysv4.h?ref=582329cb7600bb4f409e59c62f2ad248d89d93c4", "patch": "@@ -26,24 +26,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #undef TARGET_VERSION\n #define TARGET_VERSION fprintf (stderr, \" (i386 System V Release 4)\");\n \n-/* By default, target has a 80387.  */\n-\n-#define TARGET_DEFAULT 1\n-\n-/* Machines that use the AT&T assembler syntax\n-   also return floating point values in an FP register.  */\n-/* Define how to find the value returned by a function.\n-   VALTYPE is the data type of the value (as a tree).\n-   If the precise function being called is known, FUNC is its FUNCTION_DECL;\n-   otherwise, FUNC is 0.  */\n-\n-#define VALUE_REGNO(MODE) \\\n-  (((MODE) == SFmode || (MODE) == DFmode) ? FIRST_FLOAT_REG : 0)\n-\n-/* 1 if N is a possible register number for a function value. */\n-\n-#define FUNCTION_VALUE_REGNO_P(N) ((N) == 0 || (N)== FIRST_FLOAT_REG)\n-\n /* The svr4 ABI for the i386 says that records and unions are returned\n    in memory.  */\n "}]}