{"sha": "359b867255469491a68466f8d4258aa63ef2ff5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU5Yjg2NzI1NTQ2OTQ5MWE2ODQ2NmY4ZDQyNThhYTYzZWYyZmY1Yw==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2009-03-26T15:17:26Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2009-03-26T15:17:26Z"}, "message": "re PR c++/39380 (All programs that link Java and C++ libraries fail when  optimized)\n\n2009-03-26  Andrew Haley  <aph@redhat.com>\n\n        PR C++/39380\n        * decl2.c (possibly_inlined_p): If java exceptions are in use\n        don't inline a decl unless it is explicitly marked inline.\n        * lex.c: (pragma_java_exceptions): New variable.\n        (handle_pragma_java_exceptions): Set pragma_java_exceptions.\n        * cp-tree.h (pragma_java_exceptions): Declare new variable.\n\nFrom-SVN: r145091", "tree": {"sha": "392b46675f0b09d93fe3d049ece00523cb4af3c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/392b46675f0b09d93fe3d049ece00523cb4af3c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/359b867255469491a68466f8d4258aa63ef2ff5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/359b867255469491a68466f8d4258aa63ef2ff5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/359b867255469491a68466f8d4258aa63ef2ff5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/359b867255469491a68466f8d4258aa63ef2ff5c/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "61238a798636700375ab418bca76689c36cf434d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61238a798636700375ab418bca76689c36cf434d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61238a798636700375ab418bca76689c36cf434d"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "bac3d7a7a8dc015c7a4117a4192991b353c6f225", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/359b867255469491a68466f8d4258aa63ef2ff5c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/359b867255469491a68466f8d4258aa63ef2ff5c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=359b867255469491a68466f8d4258aa63ef2ff5c", "patch": "@@ -1,3 +1,12 @@\n+2009-03-26  Andrew Haley  <aph@redhat.com>\n+\n+\tPR C++/39380\n+\t* decl2.c (possibly_inlined_p): If java exceptions are in use\n+\tdon't inline a decl unless it is explicitly marked inline.\n+\t* lex.c: (pragma_java_exceptions): New variable.\n+\t(handle_pragma_java_exceptions): Set pragma_java_exceptions.\n+\t* cp-tree.h (pragma_java_exceptions): Declare new variable.\n+\n 2009-03-24  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/28274"}, {"sha": "6b67d2dd62c86059771990cdad9528e984fda156", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/359b867255469491a68466f8d4258aa63ef2ff5c/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/359b867255469491a68466f8d4258aa63ef2ff5c/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=359b867255469491a68466f8d4258aa63ef2ff5c", "patch": "@@ -4171,6 +4171,9 @@ struct tinst_level GTY(())\n    e.g  \"int f(void)\".  */\n extern cp_parameter_declarator *no_parameters;\n \n+/* True if we saw \"#pragma GCC java_exceptions\".  */\n+extern bool pragma_java_exceptions;\n+\n /* in call.c */\n extern bool check_dtor_name\t\t\t(tree, tree);\n "}, {"sha": "2be621da7c5c112313ac8d44622d6585270d11fb", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/359b867255469491a68466f8d4258aa63ef2ff5c/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/359b867255469491a68466f8d4258aa63ef2ff5c/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=359b867255469491a68466f8d4258aa63ef2ff5c", "patch": "@@ -3772,7 +3772,7 @@ possibly_inlined_p (tree decl)\n   gcc_assert (TREE_CODE (decl) == FUNCTION_DECL);\n   if (DECL_UNINLINABLE (decl))\n     return false;\n-  if (!optimize)\n+  if (!optimize || pragma_java_exceptions)\n     return DECL_DECLARED_INLINE_P (decl);\n   /* When optimizing, we might inline everything when flatten\n      attribute or heuristics inlining for size or autoinlining"}, {"sha": "66377ff1564864f69d85fd411e00f29b83670744", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/359b867255469491a68466f8d4258aa63ef2ff5c/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/359b867255469491a68466f8d4258aa63ef2ff5c/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=359b867255469491a68466f8d4258aa63ef2ff5c", "patch": "@@ -81,6 +81,8 @@ struct impl_files\n \n static struct impl_files *impl_file_chain;\n \n+/* True if we saw \"#pragma GCC java_exceptions\".  */\n+bool pragma_java_exceptions;\n \f\n void\n cxx_finish (void)\n@@ -430,6 +432,7 @@ handle_pragma_java_exceptions (cpp_reader* dfile ATTRIBUTE_UNUSED)\n     warning (0, \"junk at end of #pragma GCC java_exceptions\");\n \n   choose_personality_routine (lang_java);\n+  pragma_java_exceptions = true;\n }\n \n /* Issue an error message indicating that the lookup of NAME (an"}]}