{"sha": "73d1c65029e56f95bfb3d83e2bb9a403f3f69de4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNkMWM2NTAyOWU1NmY5NWJmYjNkODNlMmJiOWE0MDNmM2Y2OWRlNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-09-21T12:02:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-09-21T12:02:58Z"}, "message": "graphite-isl-ast-to-gimple.c (graphite_regenerate_ast_isl): Restore valid IL after code generation errors.\n\n2017-09-21  Richard Biener  <rguenther@suse.de>\n\n\t* graphite-isl-ast-to-gimple.c (graphite_regenerate_ast_isl):\n\tRestore valid IL after code generation errors.\n\t* graphite.c (graphite_transform_loops): Diagnose code\n\tgeneration issues as MSG_MISSED_OPTIMIZATION and continue\n\twith processing SCOPs.\n\nFrom-SVN: r253060", "tree": {"sha": "950b14ee9c3396c1eee5799efd04a0c6584059fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/950b14ee9c3396c1eee5799efd04a0c6584059fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73d1c65029e56f95bfb3d83e2bb9a403f3f69de4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73d1c65029e56f95bfb3d83e2bb9a403f3f69de4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73d1c65029e56f95bfb3d83e2bb9a403f3f69de4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73d1c65029e56f95bfb3d83e2bb9a403f3f69de4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a708f4b67038ff12800a3874722374a66624e2a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a708f4b67038ff12800a3874722374a66624e2a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a708f4b67038ff12800a3874722374a66624e2a0"}], "stats": {"total": 45, "additions": 36, "deletions": 9}, "files": [{"sha": "08d5620879544c378ffa79a3d182a776d566d46f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73d1c65029e56f95bfb3d83e2bb9a403f3f69de4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73d1c65029e56f95bfb3d83e2bb9a403f3f69de4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=73d1c65029e56f95bfb3d83e2bb9a403f3f69de4", "patch": "@@ -1,3 +1,11 @@\n+2017-09-21  Richard Biener  <rguenther@suse.de>\n+\n+\t* graphite-isl-ast-to-gimple.c (graphite_regenerate_ast_isl):\n+\tRestore valid IL after code generation errors.\n+\t* graphite.c (graphite_transform_loops): Diagnose code\n+\tgeneration issues as MSG_MISSED_OPTIMIZATION and continue\n+\twith processing SCOPs.\n+\n 2017-09-21  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "87a1b066b31092b840107e72047f4cf01712c3eb", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73d1c65029e56f95bfb3d83e2bb9a403f3f69de4/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73d1c65029e56f95bfb3d83e2bb9a403f3f69de4/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=73d1c65029e56f95bfb3d83e2bb9a403f3f69de4", "patch": "@@ -2997,6 +2997,26 @@ graphite_regenerate_ast_isl (scop_p scop)\n \t}\n     }\n \n+  if (t.codegen_error_p ())\n+    {\n+      /* We registered new names, scrap that.  */\n+      if (need_ssa_update_p (cfun))\n+\tdelete_update_ssa ();\n+      /* Remove the unreachable region.  */\n+      remove_edge_and_dominated_blocks (if_region->true_region->region.entry);\n+      basic_block ifb = if_region->false_region->region.entry->src;\n+      gimple_stmt_iterator gsi = gsi_last_bb (ifb);\n+      gsi_remove (&gsi, true);\n+      if_region->false_region->region.entry->flags &= ~EDGE_FALSE_VALUE;\n+      if_region->false_region->region.entry->flags |= EDGE_FALLTHRU;\n+      /* remove_edge_and_dominated_blocks marks loops for removal but\n+\t doesn't actually remove them (fix that...).  */\n+      loop_p loop;\n+      FOR_EACH_LOOP (loop, LI_FROM_INNERMOST)\n+\tif (! loop->header)\n+\t  delete_loop (loop);\n+    }\n+\n   free (if_region->true_region);\n   free (if_region->region);\n   free (if_region);"}, {"sha": "d8777f0cabc83ca85d3d750119e793d7643a1a26", "filename": "gcc/graphite.c", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73d1c65029e56f95bfb3d83e2bb9a403f3f69de4/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73d1c65029e56f95bfb3d83e2bb9a403f3f69de4/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=73d1c65029e56f95bfb3d83e2bb9a403f3f69de4", "patch": "@@ -337,17 +337,16 @@ graphite_transform_loops (void)\n \tif (!apply_poly_transforms (scop))\n \t  continue;\n \n+\tlocation_t loc = find_loop_location\n+\t  (scops[i]->scop_info->region.entry->dest->loop_father);\n+\n \tneed_cfg_cleanup_p = true;\n-\t/* When code generation is not successful, do not continue\n-\t   generating code for the next scops: the IR has to be cleaned up\n-\t   and could be in an inconsistent state.  */\n \tif (!graphite_regenerate_ast_isl (scop))\n-\t  break;\n-\n-\tlocation_t loc = find_loop_location\n-\t\t\t   (scop->scop_info->region.entry->dest->loop_father);\n-\tdump_printf_loc (MSG_OPTIMIZED_LOCATIONS, loc,\n-\t\t\t \"loop nest optimized\\n\");\n+\t  dump_printf_loc (MSG_MISSED_OPTIMIZATION, loc,\n+\t\t\t   \"loop nest not optimized, code generation error\\n\");\n+\telse\n+\t  dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, loc,\n+\t\t\t   \"loop nest optimized\\n\");\n       }\n \n   free_scops (scops);"}]}