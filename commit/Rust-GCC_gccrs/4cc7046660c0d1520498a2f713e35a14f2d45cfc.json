{"sha": "4cc7046660c0d1520498a2f713e35a14f2d45cfc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNjNzA0NjY2MGMwZDE1MjA0OThhMmY3MTNlMzVhMTRmMmQ0NWNmYw==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2012-12-21T14:29:34Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2012-12-21T14:29:34Z"}, "message": "re PR fortran/55763 (Issues with some simpler CLASS(*) programs)\n\n2012-12-21  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/55763\n\t* match.c (select_type_set_tmp): Return is a derived type or\n\tclass typespec has no derived type.\n\t* resolve.c (resolve_fl_var_and_proc): Exclude select type\n\ttemporaries from 'pointer'.\n\t(resolve_symbol): Exclude select type temporaries from tests\n\tfor assumed size and assumed rank.\n\n2012-12-21  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/55763\n\t* gfortran.dg/unlimited_polymorphic_4.f03: New test.\n\nFrom-SVN: r194663", "tree": {"sha": "81825db95fdb9ee25bcdac01f6a0316a053d704a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81825db95fdb9ee25bcdac01f6a0316a053d704a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cc7046660c0d1520498a2f713e35a14f2d45cfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cc7046660c0d1520498a2f713e35a14f2d45cfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cc7046660c0d1520498a2f713e35a14f2d45cfc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cc7046660c0d1520498a2f713e35a14f2d45cfc/comments", "author": null, "committer": null, "parents": [{"sha": "8afd02aa6b640b7098bf40bbda3e72a14d3f07b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3"}], "stats": {"total": 66, "additions": 63, "deletions": 3}, "files": [{"sha": "7924fe77055c029a40ba7cf2211cb22f25275530", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cc7046660c0d1520498a2f713e35a14f2d45cfc/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cc7046660c0d1520498a2f713e35a14f2d45cfc/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4cc7046660c0d1520498a2f713e35a14f2d45cfc", "patch": "@@ -1,3 +1,13 @@\n+2012-12-21  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/55763\n+\t* match.c (select_type_set_tmp): Return is a derived type or\n+\tclass typespec has no derived type.\n+\t* resolve.c (resolve_fl_var_and_proc): Exclude select type\n+\ttemporaries from 'pointer'.\n+\t(resolve_symbol): Exclude select type temporaries from tests\n+\tfor assumed size and assumed rank.\n+\n 2012-12-20  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/36044"}, {"sha": "ca8f08c6822646d4b83741bd37915f7404a0f2d2", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cc7046660c0d1520498a2f713e35a14f2d45cfc/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cc7046660c0d1520498a2f713e35a14f2d45cfc/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=4cc7046660c0d1520498a2f713e35a14f2d45cfc", "patch": "@@ -5293,6 +5293,9 @@ select_type_set_tmp (gfc_typespec *ts)\n \n   if (tmp == NULL)\n     {\n+      if (!ts->u.derived)\n+\treturn;\n+\n       if (ts->type == BT_CLASS)\n \tsprintf (name, \"__tmp_class_%s\", ts->u.derived->name);\n       else"}, {"sha": "fce6f732e59a250d7c87ca098c947fec35430b60", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cc7046660c0d1520498a2f713e35a14f2d45cfc/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cc7046660c0d1520498a2f713e35a14f2d45cfc/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=4cc7046660c0d1520498a2f713e35a14f2d45cfc", "patch": "@@ -11056,7 +11056,7 @@ resolve_fl_var_and_proc (gfc_symbol *sym, int mp_flag)\n \t}\n       else\n \t{\n-\t  pointer = sym->attr.pointer;\n+\t  pointer = sym->attr.pointer && !sym->attr.select_type_temporary;\n \t  allocatable = sym->attr.allocatable;\n \t  dimension = sym->attr.dimension;\n \t}\n@@ -13315,7 +13315,7 @@ resolve_symbol (gfc_symbol *sym)\n       gcc_assert (as->type != AS_IMPLIED_SHAPE);\n       if (((as->type == AS_ASSUMED_SIZE && !as->cp_was_assumed)\n \t   || as->type == AS_ASSUMED_SHAPE)\n-\t  && sym->attr.dummy == 0)\n+\t  && !sym->attr.dummy && !sym->attr.select_type_temporary)\n \t{\n \t  if (as->type == AS_ASSUMED_SIZE)\n \t    gfc_error (\"Assumed size array at %L must be a dummy argument\",\n@@ -13326,7 +13326,8 @@ resolve_symbol (gfc_symbol *sym)\n \t  return;\n \t}\n       /* TS 29113, C535a.  */\n-      if (as->type == AS_ASSUMED_RANK && !sym->attr.dummy)\n+      if (as->type == AS_ASSUMED_RANK && !sym->attr.dummy\n+\t  && !sym->attr.select_type_temporary)\n \t{\n \t  gfc_error (\"Assumed-rank array at %L must be a dummy argument\",\n \t\t     &sym->declared_at);"}, {"sha": "f720276921bb5524bfc875a5f890364d58d7c573", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cc7046660c0d1520498a2f713e35a14f2d45cfc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cc7046660c0d1520498a2f713e35a14f2d45cfc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4cc7046660c0d1520498a2f713e35a14f2d45cfc", "patch": "@@ -1,3 +1,8 @@\n+2012-12-21  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/55763\n+\t* gfortran.dg/unlimited_polymorphic_4.f03: New test.\n+\n 2012-12-21  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/52996"}, {"sha": "d289b69199f2bde3950343d1c3cb233d9c423b33", "filename": "gcc/testsuite/gfortran.dg/unlimited_polymorphic_4.f03", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cc7046660c0d1520498a2f713e35a14f2d45cfc/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_4.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cc7046660c0d1520498a2f713e35a14f2d45cfc/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_4.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_4.f03?ref=4cc7046660c0d1520498a2f713e35a14f2d45cfc", "patch": "@@ -0,0 +1,41 @@\n+! { dg-do compile }\r\n+!\r\n+! Fix PR55763\r\n+! Contributed by Tobias Burnus  <burnus@gcc.gnu.org>\r\n+!\r\n+module mpi_f08_f\r\n+  implicit none\r\n+  abstract interface\r\n+    subroutine user_function( inoutvec )\r\n+      class(*), dimension(:), intent(inout) :: inoutvec\r\n+    end subroutine user_function\r\n+  end interface\r\n+end module\r\n+\r\n+module mod_test1\r\n+  use mpi_f08_f\r\n+  implicit none\r\n+contains\r\n+  subroutine my_function( invec )   ! { dg-error \"no IMPLICIT type\" }\r\n+    class(*), dimension(:), intent(inout) :: inoutvec    ! { dg-error \"not a DUMMY\" }\r\n+\r\n+    select type (inoutvec)\r\n+    type is (integer)\r\n+         inoutvec = 2*inoutvec\r\n+    end select\r\n+  end subroutine my_function\r\n+end module\r\n+\r\n+module mod_test2\r\n+  use mpi_f08_f\r\n+  implicit none\r\n+contains\r\n+  subroutine my_function( inoutvec )  ! Used to produce a BOGUS ERROR\r\n+    class(*), dimension(:), intent(inout) :: inoutvec\r\n+\r\n+    select type (inoutvec)\r\n+    type is (integer)\r\n+         inoutvec = 2*inoutvec\r\n+    end select\r\n+  end subroutine my_function\r\n+end module\r"}]}