{"sha": "ccb1b17ba8e94c59bbf14f8ed24d9e39377b7efb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NiMWIxN2JhOGU5NGM1OWJiZjE0ZjhlZDI0ZDllMzkzNzdiN2VmYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-05-22T19:00:00Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-05-22T19:00:00Z"}, "message": "re PR middle-end/49029 (ICE in simplify_subreg, at simplify-rtx.c:5266)\n\n\tPR middle-end/49029\n\t* expmed.c (extract_fixed_bit_field): Test whether target can be used\n\tonly after deciding which mode to use.\n\n\t* gcc.c-torture/compile/pr49029.c: New test.\n\nFrom-SVN: r174034", "tree": {"sha": "f264700c2c973d12b362c40b9b641a0c3b6fe026", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f264700c2c973d12b362c40b9b641a0c3b6fe026"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccb1b17ba8e94c59bbf14f8ed24d9e39377b7efb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccb1b17ba8e94c59bbf14f8ed24d9e39377b7efb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccb1b17ba8e94c59bbf14f8ed24d9e39377b7efb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccb1b17ba8e94c59bbf14f8ed24d9e39377b7efb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "50ad7db2a849954f37b412fbb466fcda2a655a38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50ad7db2a849954f37b412fbb466fcda2a655a38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50ad7db2a849954f37b412fbb466fcda2a655a38"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "122e4dff57e045011b99942111faba384a64e043", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccb1b17ba8e94c59bbf14f8ed24d9e39377b7efb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccb1b17ba8e94c59bbf14f8ed24d9e39377b7efb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ccb1b17ba8e94c59bbf14f8ed24d9e39377b7efb", "patch": "@@ -1,3 +1,9 @@\n+2011-05-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/49029\n+\t* expmed.c (extract_fixed_bit_field): Test whether target can be used\n+\tonly after deciding which mode to use.\n+\n 2011-05-22  Tom de Vries  <tom@codesourcery.com>\n \n \tPR target/45098"}, {"sha": "5527c1e711282fb0aef5c92e8bc8d63311eeae40", "filename": "gcc/expmed.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccb1b17ba8e94c59bbf14f8ed24d9e39377b7efb/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccb1b17ba8e94c59bbf14f8ed24d9e39377b7efb/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=ccb1b17ba8e94c59bbf14f8ed24d9e39377b7efb", "patch": "@@ -1769,8 +1769,6 @@ extract_fixed_bit_field (enum machine_mode tmode, rtx op0,\n   /* To extract a signed bit-field, first shift its msb to the msb of the word,\n      then arithmetic-shift its lsb to the lsb of the word.  */\n   op0 = force_reg (mode, op0);\n-  if (mode != tmode)\n-    target = 0;\n \n   /* Find the narrowest integer mode that contains the field.  */\n \n@@ -1782,6 +1780,9 @@ extract_fixed_bit_field (enum machine_mode tmode, rtx op0,\n \tbreak;\n       }\n \n+  if (mode != tmode)\n+    target = 0;\n+\n   if (GET_MODE_BITSIZE (mode) != (bitsize + bitpos))\n     {\n       int amount = GET_MODE_BITSIZE (mode) - (bitsize + bitpos);"}, {"sha": "015b4fae01eff50276384e4469c0721e179e1421", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccb1b17ba8e94c59bbf14f8ed24d9e39377b7efb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccb1b17ba8e94c59bbf14f8ed24d9e39377b7efb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ccb1b17ba8e94c59bbf14f8ed24d9e39377b7efb", "patch": "@@ -1,3 +1,8 @@\n+2011-05-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/49029\n+\t* gcc.c-torture/compile/pr49029.c: New test.\n+\n 2011-05-22  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp0x/sfinae23.C: New."}, {"sha": "ebe81b31b2864ea4c6e5e1bb1465f940ff079370", "filename": "gcc/testsuite/gcc.c-torture/compile/pr49029.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccb1b17ba8e94c59bbf14f8ed24d9e39377b7efb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr49029.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccb1b17ba8e94c59bbf14f8ed24d9e39377b7efb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr49029.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr49029.c?ref=ccb1b17ba8e94c59bbf14f8ed24d9e39377b7efb", "patch": "@@ -0,0 +1,10 @@\n+/* PR middle-end/49029 */\n+struct S { volatile unsigned f : 11; signed g : 30; } __attribute__((packed));\n+struct T { volatile struct S h; } __attribute__((packed)) a;\n+void foo (int);\n+\n+void\n+bar ()\n+{\n+  foo (a.h.g);\n+}"}]}