{"sha": "e63eb26d22dbbbbb67f7f240ea5a7234cd2498cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTYzZWIyNmQyMmRiYmJiYjY3ZjdmMjQwZWE1YTcyMzRjZDI0OThjYg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2020-09-10T15:59:11Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2020-09-10T16:00:57Z"}, "message": "Fix bogus error on Value_Size clause for variant record type\n\nThis is a regression present on the mainline and 10 branch: the compiler\nrejects a Value_Size clause on a discriminated record type with variant.\n\ngcc/ada/ChangeLog:\n\t* gcc-interface/decl.c (set_rm_size): Do not take into account the\n\tValue_Size clause if it is not for the entity itself.\n\ngcc/testsuite/ChangeLog:\n\t* gnat.dg/specs/size_clause5.ads: New test.", "tree": {"sha": "cc0a7633f6e4adc2d8ed81b0af58568d584a2ce6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc0a7633f6e4adc2d8ed81b0af58568d584a2ce6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e63eb26d22dbbbbb67f7f240ea5a7234cd2498cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e63eb26d22dbbbbb67f7f240ea5a7234cd2498cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e63eb26d22dbbbbb67f7f240ea5a7234cd2498cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e63eb26d22dbbbbb67f7f240ea5a7234cd2498cb/comments", "author": null, "committer": null, "parents": [{"sha": "71465223b95af43951c423ad77391e706f02901d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71465223b95af43951c423ad77391e706f02901d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71465223b95af43951c423ad77391e706f02901d"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "8045fa5ff97242ff8c8a81a4ac0d4170f1c8721c", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e63eb26d22dbbbbb67f7f240ea5a7234cd2498cb/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e63eb26d22dbbbbb67f7f240ea5a7234cd2498cb/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=e63eb26d22dbbbbb67f7f240ea5a7234cd2498cb", "patch": "@@ -9083,10 +9083,12 @@ set_rm_size (Uint uint_size, tree gnu_type, Entity_Id gnat_entity)\n   if (uint_size == No_Uint)\n     return;\n \n-  /* Only issue an error if a Value_Size clause was explicitly given.\n-     Otherwise, we'd be duplicating an error on the Size clause.  */\n+  /* Only issue an error if a Value_Size clause was explicitly given for the\n+     entity; otherwise, we'd be duplicating an error on the Size clause.  */\n   gnat_attr_node\n     = Get_Attribute_Definition_Clause (gnat_entity, Attr_Value_Size);\n+  if (Present (gnat_attr_node) && Entity (gnat_attr_node) != gnat_entity)\n+    gnat_attr_node = Empty;\n \n   /* Get the size as an INTEGER_CST.  Issue an error if a size was specified\n      but cannot be represented in bitsizetype.  */"}, {"sha": "ba45bbfa09dbc45ecf6b029e189329101c0a2099", "filename": "gcc/testsuite/gnat.dg/specs/size_clause5.ads", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e63eb26d22dbbbbb67f7f240ea5a7234cd2498cb/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fsize_clause5.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e63eb26d22dbbbbb67f7f240ea5a7234cd2498cb/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fsize_clause5.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fsize_clause5.ads?ref=e63eb26d22dbbbbb67f7f240ea5a7234cd2498cb", "patch": "@@ -0,0 +1,16 @@\n+-- { dg-do compile }\n+\n+package Size_Clause5 is\n+\n+  type Arr is array (1 .. 16) of Boolean;\n+\n+  type RRec (D : Boolean) is record\n+    case D is\n+      when True =>  I : Integer;\n+      when False => A : Arr;\n+    end case;\n+  end record;\n+  for RRec'Object_Size use 160;\n+  for RRec'Value_Size use 160;\n+\n+end Size_Clause5;"}]}