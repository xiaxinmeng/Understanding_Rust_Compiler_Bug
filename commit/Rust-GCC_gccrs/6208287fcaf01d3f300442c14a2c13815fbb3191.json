{"sha": "6208287fcaf01d3f300442c14a2c13815fbb3191", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIwODI4N2ZjYWYwMWQzZjMwMDQ0MmMxNGEyYzEzODE1ZmJiMzE5MQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-06T10:07:12Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-06T10:09:05Z"}, "message": "Revert \"Use const for template argument.\"\n\nThis reverts commit 03f9754665b889e0988d0392db1eb35e91b97693.", "tree": {"sha": "049a628a63e9b221856725fac765b0f082e25c61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/049a628a63e9b221856725fac765b0f082e25c61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6208287fcaf01d3f300442c14a2c13815fbb3191", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl6yjMIACgkQTcGC3A+n\nN4UUygf/QMNph2RZdkk9mI3BlxmbtNiY8g32rJA55vP7QXLR2gzXAFGLoSZ1mGLx\n6Zo1srEvyivqq5fRuN/t8Ihb7TL6PdCMy+Dh3O4iPy012q7iXMTVsUBZ6houmdsI\naj8hWxlAr0tMjAIz9UZ0XpWuETj/KjBIioWjDAOmTa7KgA5jtxIsLG411Ww8gjjo\nsGnqKByd/rI5CA+yuXFoLLk1wDCJ6F3azm6xTAp9tJXXseGqyqvwrBdQnHon55cc\nvfU/3wd6o3LJBdX7dT/DUcposwo76hlgK1LZlFoNxPWDM3N2etxKDVWs8arKWQMr\nYIIc6yb+PXPzUSLn6nQ108ks/a3DIQ==\n=xAYP\n-----END PGP SIGNATURE-----", "payload": "tree 049a628a63e9b221856725fac765b0f082e25c61\nparent 308e2c1ccae3c60ac61ce0150bfd1889cbf24196\nauthor Martin Liska <mliska@suse.cz> 1588759632 +0200\ncommitter Martin Liska <mliska@suse.cz> 1588759745 +0200\n\nRevert \"Use const for template argument.\"\n\nThis reverts commit 03f9754665b889e0988d0392db1eb35e91b97693.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6208287fcaf01d3f300442c14a2c13815fbb3191", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6208287fcaf01d3f300442c14a2c13815fbb3191", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6208287fcaf01d3f300442c14a2c13815fbb3191/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "308e2c1ccae3c60ac61ce0150bfd1889cbf24196", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/308e2c1ccae3c60ac61ce0150bfd1889cbf24196", "html_url": "https://github.com/Rust-GCC/gccrs/commit/308e2c1ccae3c60ac61ce0150bfd1889cbf24196"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "25a8f08e0899f24b0915fa6dfe3fb33a16aeb78d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6208287fcaf01d3f300442c14a2c13815fbb3191/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6208287fcaf01d3f300442c14a2c13815fbb3191/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6208287fcaf01d3f300442c14a2c13815fbb3191", "patch": "@@ -1,3 +1,11 @@\n+2020-05-06  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2020-05-05  Martin Liska  <mliska@suse.cz>\n+\tPR c/92472\n+\t* include/parallel/multiway_merge.h:\n+\tUse const for _Compare template argument.\n+\n 2020-05-06  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* doc/xml/manual/abi.xml (abi.versioning.history): Document library"}, {"sha": "983c7b2bd9a6d12c06abba9921a1087221cc9e34", "filename": "libstdc++-v3/include/parallel/multiway_merge.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6208287fcaf01d3f300442c14a2c13815fbb3191/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_merge.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6208287fcaf01d3f300442c14a2c13815fbb3191/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_merge.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_merge.h?ref=6208287fcaf01d3f300442c14a2c13815fbb3191", "patch": "@@ -118,7 +118,7 @@ namespace __gnu_parallel\n        *  @return @c true if less. */\n       friend bool\n       operator<(_GuardedIterator<_RAIter, _Compare>& __bi1,\n-\t\t_GuardedIterator<_RAIter, const _Compare>& __bi2)\n+\t\t_GuardedIterator<_RAIter, _Compare>& __bi2)\n       {\n \tif (__bi1._M_current == __bi1._M_end)       // __bi1 is sup\n \t  return __bi2._M_current == __bi2._M_end;  // __bi2 is not sup\n@@ -188,7 +188,7 @@ namespace __gnu_parallel\n        *  @return @c true if less. */\n       friend bool\n       operator<(_UnguardedIterator<_RAIter, _Compare>& __bi1,\n-\t\t_UnguardedIterator<_RAIter, const _Compare>& __bi2)\n+\t\t_UnguardedIterator<_RAIter, _Compare>& __bi2)\n       {\n \t// Normal compare.\n \treturn (__bi1.__comp)(*__bi1, *__bi2);"}]}