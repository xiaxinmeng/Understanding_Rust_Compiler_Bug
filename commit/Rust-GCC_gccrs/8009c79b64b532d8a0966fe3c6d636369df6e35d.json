{"sha": "8009c79b64b532d8a0966fe3c6d636369df6e35d", "node_id": "C_kwDOANBUbNoAKDgwMDljNzliNjRiNTMyZDhhMDk2NmZlM2M2ZDYzNjM2OWRmNmUzNWQ", "commit": {"author": {"name": "John Eivind Helset", "email": "jehelset@gmail.com", "date": "2021-05-21T23:53:22Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-10-03T19:50:23Z"}, "message": "coroutines: Fix ICE with an invalid await_suspend type [PR100673].\n\nThe reported ICE occurs when an invalid (non-template) type is found\nas the return for an await_suspend.\n\nFixed by amending build_co_await to ensure that await_suspend return-\ntype is a template-instantiation before checking to see if it is a\nvalid coroutine handle type.\n\nSigned-off-by: John Eivind Helset <jehelset@gmail.com>\nSigned-off-by: Iain Sandoe <iain@sandoe.co.uk>\n\n\tPR c++/100673\n\ngcc/cp/ChangeLog:\n\n\t* coroutines.cc (build_co_await): Guard against NULL\n\tawait_suspend types.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/coroutines/pr100673.C: New test.", "tree": {"sha": "6167462ba683ccf452a93a9033b797a6d3822c90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6167462ba683ccf452a93a9033b797a6d3822c90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8009c79b64b532d8a0966fe3c6d636369df6e35d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8009c79b64b532d8a0966fe3c6d636369df6e35d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8009c79b64b532d8a0966fe3c6d636369df6e35d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8009c79b64b532d8a0966fe3c6d636369df6e35d/comments", "author": {"login": "jehelset", "id": 47066444, "node_id": "MDQ6VXNlcjQ3MDY2NDQ0", "avatar_url": "https://avatars.githubusercontent.com/u/47066444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jehelset", "html_url": "https://github.com/jehelset", "followers_url": "https://api.github.com/users/jehelset/followers", "following_url": "https://api.github.com/users/jehelset/following{/other_user}", "gists_url": "https://api.github.com/users/jehelset/gists{/gist_id}", "starred_url": "https://api.github.com/users/jehelset/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jehelset/subscriptions", "organizations_url": "https://api.github.com/users/jehelset/orgs", "repos_url": "https://api.github.com/users/jehelset/repos", "events_url": "https://api.github.com/users/jehelset/events{/privacy}", "received_events_url": "https://api.github.com/users/jehelset/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b54a7226368bf86361e5c9d8ae523193037a0ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b54a7226368bf86361e5c9d8ae523193037a0ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b54a7226368bf86361e5c9d8ae523193037a0ac"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "1dd9abd1e1f3d57572c565b8800ffaf3449ac325", "filename": "gcc/cp/coroutines.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8009c79b64b532d8a0966fe3c6d636369df6e35d/gcc%2Fcp%2Fcoroutines.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8009c79b64b532d8a0966fe3c6d636369df6e35d/gcc%2Fcp%2Fcoroutines.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcoroutines.cc?ref=8009c79b64b532d8a0966fe3c6d636369df6e35d", "patch": "@@ -1053,7 +1053,8 @@ build_co_await (location_t loc, tree a, suspend_point_kind suspend_kind)\n   else if (same_type_p (susp_return_type, boolean_type_node))\n     ok = true;\n   else if (TREE_CODE (susp_return_type) == RECORD_TYPE\n-\t   && CLASS_TYPE_P (susp_return_type))\n+\t   && CLASS_TYPE_P (susp_return_type)\n+\t   && CLASSTYPE_TEMPLATE_INFO (susp_return_type))\n     {\n       tree tt = CLASSTYPE_TI_TEMPLATE (susp_return_type);\n       if (tt == coro_handle_templ)"}, {"sha": "750ce66ae150635e61aa01eef6d00b98003ef45f", "filename": "gcc/testsuite/g++.dg/coroutines/pr100673.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8009c79b64b532d8a0966fe3c6d636369df6e35d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr100673.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8009c79b64b532d8a0966fe3c6d636369df6e35d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr100673.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr100673.C?ref=8009c79b64b532d8a0966fe3c6d636369df6e35d", "patch": "@@ -0,0 +1,18 @@\n+//  { dg-additional-options \"-fsyntax-only -w\" }\n+\n+// Diagnose bad coroutine awatiable type.\n+\n+#include<coroutine>\n+\n+struct coro{\n+  struct not_a_template{};\n+  using promise_type = coro;\n+  static constexpr std::suspend_always initial_suspend()noexcept{ return {}; }\n+  constexpr bool await_ready()noexcept{ return false; }\n+  constexpr not_a_template await_suspend(std::coroutine_handle<>)noexcept{ return{}; }\n+  constexpr void await_resume()noexcept{}\n+  static coro body()\n+  {\n+    co_await coro{}; // { dg-error {'await_suspend' must return 'void', 'bool' or a coroutine handle} }\n+  }\n+};"}]}