{"sha": "eba92c951ed6038829c2500928c19ac4949f5d92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJhOTJjOTUxZWQ2MDM4ODI5YzI1MDA5MjhjMTlhYzQ5NDlmNWQ5Mg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-23T19:33:55Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-23T19:33:55Z"}, "message": "(__objc_init_protocols): Call recursively on super protocols.\n\n(__objc_init_protocols): Call recursively\non super protocols.  Make local var `proto_class' static.\n\nFrom-SVN: r4544", "tree": {"sha": "838c7b9ae41bff37e1892ea43cc62be09b418cb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/838c7b9ae41bff37e1892ea43cc62be09b418cb4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eba92c951ed6038829c2500928c19ac4949f5d92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eba92c951ed6038829c2500928c19ac4949f5d92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eba92c951ed6038829c2500928c19ac4949f5d92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eba92c951ed6038829c2500928c19ac4949f5d92/comments", "author": null, "committer": null, "parents": [{"sha": "ecd023b66232bb57c7b65b8022f8b5a5992d7de0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecd023b66232bb57c7b65b8022f8b5a5992d7de0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecd023b66232bb57c7b65b8022f8b5a5992d7de0"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "220d7d23e648502bbb4d743e5821007c831eb926", "filename": "gcc/objc/init.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eba92c951ed6038829c2500928c19ac4949f5d92/gcc%2Fobjc%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eba92c951ed6038829c2500928c19ac4949f5d92/gcc%2Fobjc%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Finit.c?ref=eba92c951ed6038829c2500928c19ac4949f5d92", "patch": "@@ -224,14 +224,15 @@ static void\n __objc_init_protocols (struct objc_protocol_list* protos)\n {\n   int i;\n-  Class* proto_class;\n+  static Class* proto_class = 0;\n \n   if (! protos)\n     return;\n \n-  proto_class = objc_lookup_class(\"Protocol\");\n+  if (!proto_class)\n+    proto_class = objc_lookup_class(\"Protocol\");\n \n-  if (proto_class == 0 && ! list_find (&unclaimed_proto_list, protos))\n+  if (!proto_class)\n     {\n       unclaimed_proto_list = list_cons (protos, unclaimed_proto_list);\n       return;\n@@ -241,13 +242,20 @@ __objc_init_protocols (struct objc_protocol_list* protos)\n \n   for(i = 0; i < protos->count; i++)\n     {\n-      if (((size_t)((id)protos->list[i])->class_pointer) == PROTOCOL_VERSION)\n-\t((id)protos->list[i])->class_pointer = proto_class;\n-      else if (((id)protos->list[i])->class_pointer != proto_class)\n+      struct objc_protocol* aProto = protos->list[i];\n+      if (((size_t)aProto->class_pointer) == PROTOCOL_VERSION)\n+\t{\n+\t  /* assign class pointer */\n+\t  aProto->class_pointer = proto_class;\n+\n+\t  /* init super protocols */\n+\t  __objc_init_protocols (aProto->protocol_list);\n+\t}\n+      else if (protos->list[i]->class_pointer != proto_class)\n \t{\n \t  fprintf (stderr,\n \t\t   \"Version %d doesn't match runtime protocol version %d\\n\",\n-\t\t   ((size_t)((id)protos->list[i])->class_pointer),\n+\t\t   ((size_t)protos->list[i]->class_pointer),\n \t\t   PROTOCOL_VERSION);\n \t  abort ();\n \t}"}]}