{"sha": "84f52ebdf1ec00e55337e5e6de1ae72b7bbace8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRmNTJlYmRmMWVjMDBlNTUzMzdlNWU2ZGUxYWU3MmI3YmJhY2U4Yg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-05-07T16:46:08Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-05-07T16:46:08Z"}, "message": "re PR target/21412 (ICE loading TLS address)\n\n        PR target/21412\n        * config/rs6000/rs6000.c (rs6000_emit_move): Look for tls addresses\n        with constant offsets.\n\nFrom-SVN: r99352", "tree": {"sha": "a13164878b7b9ea9eb296d63f68e8fb6a4fa4e9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a13164878b7b9ea9eb296d63f68e8fb6a4fa4e9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84f52ebdf1ec00e55337e5e6de1ae72b7bbace8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84f52ebdf1ec00e55337e5e6de1ae72b7bbace8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84f52ebdf1ec00e55337e5e6de1ae72b7bbace8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84f52ebdf1ec00e55337e5e6de1ae72b7bbace8b/comments", "author": null, "committer": null, "parents": [{"sha": "f2f84cbaeb8e41ca297bd0087affc3f2f6befc7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2f84cbaeb8e41ca297bd0087affc3f2f6befc7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2f84cbaeb8e41ca297bd0087affc3f2f6befc7d"}], "stats": {"total": 39, "additions": 35, "deletions": 4}, "files": [{"sha": "2062ee4aca4f427ff148802f50db042127264c38", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84f52ebdf1ec00e55337e5e6de1ae72b7bbace8b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84f52ebdf1ec00e55337e5e6de1ae72b7bbace8b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=84f52ebdf1ec00e55337e5e6de1ae72b7bbace8b", "patch": "@@ -1,3 +1,9 @@\n+2005-05-07  Richard Henderson  <rth@redhat.com>\n+\n+\tPR target/21412\n+\t* config/rs6000/rs6000.c (rs6000_emit_move): Look for tls addresses\n+\twith constant offsets.\n+\n 2005-05-07  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* config/v850/v850.c (print_operand): Use gcc_assert and"}, {"sha": "7223ffa217352e496d100e1c72f3768dbd175e91", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84f52ebdf1ec00e55337e5e6de1ae72b7bbace8b/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84f52ebdf1ec00e55337e5e6de1ae72b7bbace8b/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=84f52ebdf1ec00e55337e5e6de1ae72b7bbace8b", "patch": "@@ -3575,11 +3575,29 @@ rs6000_emit_move (rtx dest, rtx source, enum machine_mode mode)\n \n   /* Recognize the case where operand[1] is a reference to thread-local\n      data and load its address to a register.  */\n-  if (GET_CODE (operands[1]) == SYMBOL_REF)\n+  if (rs6000_tls_referenced_p (operands[1]))\n     {\n-      enum tls_model model = SYMBOL_REF_TLS_MODEL (operands[1]);\n-      if (model != 0)\n-\toperands[1] = rs6000_legitimize_tls_address (operands[1], model);\n+      enum tls_model model;\n+      rtx tmp = operands[1];\n+      rtx addend = NULL;\n+\n+      if (GET_CODE (tmp) == CONST && GET_CODE (XEXP (tmp, 0)) == PLUS)\n+\t{\n+          addend = XEXP (XEXP (tmp, 0), 1);\n+\t  tmp = XEXP (XEXP (tmp, 0), 0);\n+\t}\n+\n+      gcc_assert (GET_CODE (tmp) == SYMBOL_REF);\n+      model = SYMBOL_REF_TLS_MODEL (tmp);\n+      gcc_assert (model != 0);\n+\n+      tmp = rs6000_legitimize_tls_address (tmp, model);\n+      if (addend)\n+\t{\n+\t  tmp = gen_rtx_PLUS (mode, tmp, addend);\n+\t  tmp = force_operand (tmp, operands[0]);\n+\t}\n+      operands[1] = tmp;\n     }\n \n   /* Handle the case where reload calls us with an invalid address.  */"}, {"sha": "3829c66fc559e93c9b874427d55fedfff8fde0d2", "filename": "gcc/testsuite/gcc.dg/tls/opt-9.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84f52ebdf1ec00e55337e5e6de1ae72b7bbace8b/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84f52ebdf1ec00e55337e5e6de1ae72b7bbace8b/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-9.c?ref=84f52ebdf1ec00e55337e5e6de1ae72b7bbace8b", "patch": "@@ -0,0 +1,7 @@\n+/* PR 21412 */\n+/* { dg-do compile */\n+/* { dg-options \"-O2 -fPIC\" } */\n+\n+struct S { int x[10]; };\n+extern __thread struct S s;\n+int *foo() { return &s.x[2]; }"}]}