{"sha": "9d40923511b5f6a8d33b20cae6d9a6fe3e11f16b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ0MDkyMzUxMWI1ZjZhOGQzM2IyMGNhZTZkOWE2ZmUzZTExZjE2Yg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-04-10T07:28:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-04-10T07:28:05Z"}, "message": "re PR middle-end/90025 (botan2 miscompilation on s390x-linux since r268957)\n\n\tPR middle-end/90025\n\t* expr.c (store_expr): Set properly size on the MEM passed to\n\tclear_storage.\n\n\t* gcc.c-torture/execute/pr90025.c: New test.\n\nFrom-SVN: r270247", "tree": {"sha": "6798b12a27a155124bd911473cdfa248973e9162", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6798b12a27a155124bd911473cdfa248973e9162"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d40923511b5f6a8d33b20cae6d9a6fe3e11f16b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d40923511b5f6a8d33b20cae6d9a6fe3e11f16b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d40923511b5f6a8d33b20cae6d9a6fe3e11f16b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d40923511b5f6a8d33b20cae6d9a6fe3e11f16b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c9c5e18883125c90b3cbdb61b651719253a0ff90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9c5e18883125c90b3cbdb61b651719253a0ff90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9c5e18883125c90b3cbdb61b651719253a0ff90"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "3f75399e387862f261f853dce6c398ec49ab2dd0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d40923511b5f6a8d33b20cae6d9a6fe3e11f16b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d40923511b5f6a8d33b20cae6d9a6fe3e11f16b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9d40923511b5f6a8d33b20cae6d9a6fe3e11f16b", "patch": "@@ -1,5 +1,9 @@\n 2019-04-10  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/90025\n+\t* expr.c (store_expr): Set properly size on the MEM passed to\n+\tclear_storage.\n+\n \tPR c++/90010\n \t* gimple-ssa-sprintf.c (target_to_host): Fix handling of targstr\n \twith strlen in between hostsz-3 and hostsz-1 inclusive when no"}, {"sha": "fa15b7eceae9c49132fc7a46c0bd071bfd4107da", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d40923511b5f6a8d33b20cae6d9a6fe3e11f16b/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d40923511b5f6a8d33b20cae6d9a6fe3e11f16b/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=9d40923511b5f6a8d33b20cae6d9a6fe3e11f16b", "patch": "@@ -5658,7 +5658,8 @@ store_expr (tree exp, rtx target, int call_param_p,\n       dest_mem = store_by_pieces (target, str_copy_len, string_cst_read_str,\n \t\t\t\t  (void *) str, MEM_ALIGN (target), false,\n \t\t\t\t  RETURN_END);\n-      clear_storage (adjust_address (dest_mem, BLKmode, 0),\n+      clear_storage (adjust_address_1 (dest_mem, BLKmode, 0, 1, 1, 0,\n+\t\t\t\t       exp_len - str_copy_len),\n \t\t     GEN_INT (exp_len - str_copy_len), BLOCK_OP_NORMAL);\n       return NULL_RTX;\n     }"}, {"sha": "4f69d6f2f82d3fac7c0f34e12c011ec9a4597405", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d40923511b5f6a8d33b20cae6d9a6fe3e11f16b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d40923511b5f6a8d33b20cae6d9a6fe3e11f16b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9d40923511b5f6a8d33b20cae6d9a6fe3e11f16b", "patch": "@@ -1,5 +1,8 @@\n 2019-04-10  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/90025\n+\t* gcc.c-torture/execute/pr90025.c: New test.\n+\n \tPR c++/90010\n \t* gcc.dg/pr90010.c: New test.\n "}, {"sha": "a1ddd0027d66bd0eb84f890e8777aa14482b50de", "filename": "gcc/testsuite/gcc.c-torture/execute/pr90025.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d40923511b5f6a8d33b20cae6d9a6fe3e11f16b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr90025.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d40923511b5f6a8d33b20cae6d9a6fe3e11f16b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr90025.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr90025.c?ref=9d40923511b5f6a8d33b20cae6d9a6fe3e11f16b", "patch": "@@ -0,0 +1,28 @@\n+/* PR middle-end/90025 */\n+\n+__attribute__((noipa)) void\n+bar (char *p)\n+{\n+  int i;\n+  for (i = 0; i < 6; i++)\n+    if (p[i] != \"foobar\"[i])\n+      __builtin_abort ();\n+  for (; i < 32; i++)\n+    if (p[i] != '\\0')\n+      __builtin_abort ();\n+}\n+\n+__attribute__((noipa)) void\n+foo (unsigned int x)\n+{\n+  char s[32] = { 'f', 'o', 'o', 'b', 'a', 'r', 0 };\n+  ((unsigned int *) s)[2] = __builtin_bswap32 (x);\n+  bar (s);\n+}\n+\n+int\n+main ()\n+{\n+  foo (0);\n+  return 0;\n+}"}]}