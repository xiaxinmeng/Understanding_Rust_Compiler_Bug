{"sha": "55796e90211a41667518e334812ee31001a35f54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU3OTZlOTAyMTFhNDE2Njc1MThlMzM0ODEyZWUzMTAwMWEzNWY1NA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2012-05-07T16:31:44Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2012-05-07T16:31:44Z"}, "message": "avr.c (avr_prologue_setup_frame): Fix mode passed down to plus_constant.\n\n\t* config/avr/avr.c (avr_prologue_setup_frame): Fix mode passed\n\tdown to plus_constant.\n\t(expand_epilogue): Ditto.\n\nFrom-SVN: r187259", "tree": {"sha": "b472c3ee9726c12d8b0d049fa207b93f16a8d15b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b472c3ee9726c12d8b0d049fa207b93f16a8d15b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55796e90211a41667518e334812ee31001a35f54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55796e90211a41667518e334812ee31001a35f54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55796e90211a41667518e334812ee31001a35f54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55796e90211a41667518e334812ee31001a35f54/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bb91f498bb79f9da9af75cf2dbc2d2ea8102946", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bb91f498bb79f9da9af75cf2dbc2d2ea8102946", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bb91f498bb79f9da9af75cf2dbc2d2ea8102946"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "251edc671a95b47e925977130836d51f7940d350", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55796e90211a41667518e334812ee31001a35f54/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55796e90211a41667518e334812ee31001a35f54/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=55796e90211a41667518e334812ee31001a35f54", "patch": "@@ -1,3 +1,9 @@\n+2012-05-07    Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* config/avr/avr.c (avr_prologue_setup_frame): Fix mode passed\n+\tdown to plus_constant.\n+\t(expand_epilogue): Ditto.\n+\n 2012-05-07  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* postreload.c (reload_cse_regs): Make static."}, {"sha": "bf00d88a07b441092a699c6fb5318d4ca577a7e1", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55796e90211a41667518e334812ee31001a35f54/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55796e90211a41667518e334812ee31001a35f54/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=55796e90211a41667518e334812ee31001a35f54", "patch": "@@ -996,7 +996,8 @@ avr_prologue_setup_frame (HOST_WIDE_INT size, HARD_REG_SET set)\n                             gen_rtx_SET (VOIDmode, fp, stack_pointer_rtx));\n             }\n \n-          insn = emit_move_insn (my_fp, plus_constant (Pmode, my_fp, -size));\n+          insn = emit_move_insn (my_fp, plus_constant (GET_MODE (my_fp),\n+                                                       my_fp, -size));\n           if (frame_pointer_needed)\n             {\n               RTX_FRAME_RELATED_P (insn) = 1;\n@@ -1324,7 +1325,7 @@ expand_epilogue (bool sibcall_p)\n       if (!frame_pointer_needed)\n         emit_move_insn (fp, stack_pointer_rtx);\n \n-      emit_move_insn (my_fp, plus_constant (Pmode, my_fp, size));\n+      emit_move_insn (my_fp, plus_constant (GET_MODE (my_fp), my_fp, size));\n \n       /* Copy to stack pointer.  */\n "}]}