{"sha": "270fc2ae009f7188730f63b555a2b0f9fc339bf1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjcwZmMyYWUwMDlmNzE4ODczMGY2M2I1NTVhMmIwZjlmYzMzOWJmMQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-01-01T10:53:08Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-01-01T10:53:08Z"}, "message": "i386.md (doubleword shifts): Fix dumb mistakes in previous change.\n\n \n        * i386.md (doubleword shifts): Fix dumb mistakes in previous change.\n\nFrom-SVN: r24457", "tree": {"sha": "fd0c5b801161e0cf8282c2af8fa96538f69d46fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd0c5b801161e0cf8282c2af8fa96538f69d46fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/270fc2ae009f7188730f63b555a2b0f9fc339bf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/270fc2ae009f7188730f63b555a2b0f9fc339bf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/270fc2ae009f7188730f63b555a2b0f9fc339bf1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/270fc2ae009f7188730f63b555a2b0f9fc339bf1/comments", "author": null, "committer": null, "parents": [{"sha": "a94b6ed9887f1eeaca954d80d7461e7f05aec4ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a94b6ed9887f1eeaca954d80d7461e7f05aec4ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a94b6ed9887f1eeaca954d80d7461e7f05aec4ae"}], "stats": {"total": 38, "additions": 16, "deletions": 22}, "files": [{"sha": "e8adf947f1f9b996431bac5dece0c0a737438640", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 16, "deletions": 22, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/270fc2ae009f7188730f63b555a2b0f9fc339bf1/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/270fc2ae009f7188730f63b555a2b0f9fc339bf1/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=270fc2ae009f7188730f63b555a2b0f9fc339bf1", "patch": "@@ -1,5 +1,5 @@\n ; GCC machine description for Intel X86.\n-;; Copyright (C) 1988, 94, 95, 96, 97, 1998 Free Software Foundation, Inc.\n+;; Copyright (C) 1988, 94, 95, 96, 97, 98, 1999 Free Software Foundation, Inc.\n ;; Mostly by William Schelter.\n \n ;; This file is part of GNU CC.\n@@ -4687,8 +4687,7 @@ byte_xor_operation:\n   \"\"\n   \"*\n {\n-  rtx xops[4], low[1], high[1];\n-  static int ashldi_label_number;\n+  rtx xops[5], low[1], high[1];\n \n   CC_STATUS_INIT;\n \n@@ -4697,17 +4696,16 @@ byte_xor_operation:\n   xops[1] = GEN_INT (32);\n   xops[2] = low[0];\n   xops[3] = high[0];\n+  xops[4] = gen_label_rtx ();\n \n   output_asm_insn (AS3_SHIFT_DOUBLE (shld%L3,%0,%2,%3), xops);\n   output_asm_insn (AS2 (sal%L2,%0,%2), xops);\n   output_asm_insn (AS2 (test%B0,%1,%b0), xops);\n-  fputs (\\\"\\\\tje \\\", asm_out_file);\n-  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"LASHLDI\\\", ashldi_label_number);\n-  fputs (\\\"\\\\n\\\", asm_out_file);\n+  output_asm_insn (AS1 (je,%X4), xops);\n   output_asm_insn (AS2 (mov%L3,%2,%3), xops);\t/* Fast shift by 32 */\n   output_asm_insn (AS2 (xor%L2,%2,%2), xops);\n-  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"LASHLDI\\\", ashldi_label_number);\n-  ashldi_label_number++;\n+  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n+                             CODE_LABEL_NUMBER (xops[4]));\n   RET;\n }\")\n \n@@ -4877,8 +4875,7 @@ byte_xor_operation:\n   \"\"\n   \"*\n {\n-  rtx xops[4], low[1], high[1];\n-  static int ashrdi_label_number;\n+  rtx xops[5], low[1], high[1];\n \n   CC_STATUS_INIT;\n \n@@ -4887,18 +4884,17 @@ byte_xor_operation:\n   xops[1] = GEN_INT (32);\n   xops[2] = low[0];\n   xops[3] = high[0];\n+  xops[4] = gen_label_rtx ();\n \n   output_asm_insn (AS3_SHIFT_DOUBLE (shrd%L2,%0,%3,%2), xops);\n   output_asm_insn (AS2 (sar%L3,%0,%3), xops);\n   output_asm_insn (AS2 (test%B0,%1,%b0), xops);\n-  fputs (\\\"\\\\tje \\\", asm_out_file);\n-  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"LASHRDI\\\", ashrdi_label_number);\n-  fputs (\\\"\\\\n\\\", asm_out_file);\n+  output_asm_insn (AS1 (je,%X4), xops);\n   xops[1] = GEN_INT (31);\n   output_asm_insn (AS2 (mov%L2,%3,%2), xops);\n   output_asm_insn (AS2 (sar%L3,%1,%3), xops);\t/* shift by 32 */\n-  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"LASHRDI\\\", ashrdi_label_number);\n-  ashrdi_label_number++;\n+  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n+                             CODE_LABEL_NUMBER (xops[4]));\n   RET;\n }\")\n \n@@ -5043,8 +5039,7 @@ byte_xor_operation:\n   \"\"\n   \"*\n {\n-  rtx xops[4], low[1], high[1];\n-  static int lshrdi_label_number;\n+  rtx xops[5], low[1], high[1];\n \n   CC_STATUS_INIT;\n \n@@ -5053,17 +5048,16 @@ byte_xor_operation:\n   xops[1] = GEN_INT (32);\n   xops[2] = low[0];\n   xops[3] = high[0];\n+  xops[4] = gen_label_rtx ();\n \n   output_asm_insn (AS3_SHIFT_DOUBLE (shrd%L2,%0,%3,%2), xops);\n   output_asm_insn (AS2 (shr%L3,%0,%3), xops);\n   output_asm_insn (AS2 (test%B0,%1,%b0), xops);\n-  fputs (\\\"\\\\tje \\\", asm_out_file);\n-  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"LLSHRDI\\\", lshrdi_label_number);\n-  fputs (\\\"\\\\n\\\", asm_out_file);\n+  output_asm_insn (AS1 (je,%X4), xops);\n   output_asm_insn (AS2 (mov%L2,%3,%2), xops);\t/* Fast shift by 32 */\n   output_asm_insn (AS2 (xor%L3,%3,%3), xops);\n-  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"LLSHRDI\\\", lshrdi_label_number);\n-  lshrdi_label_number++;\n+  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n+                             CODE_LABEL_NUMBER (xops[4]));\n   RET;\n }\")\n "}]}