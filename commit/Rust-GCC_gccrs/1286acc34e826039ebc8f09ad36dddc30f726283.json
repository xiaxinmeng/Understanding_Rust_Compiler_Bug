{"sha": "1286acc34e826039ebc8f09ad36dddc30f726283", "node_id": "C_kwDOANBUbNoAKDEyODZhY2MzNGU4MjYwMzllYmM4ZjA5YWQzNmRkZGMzMGY3MjYyODM", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-04-22T14:00:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-22T14:00:50Z"}, "message": "Merge #1157\n\n1157: Resolve remaining simple visibilites r=CohenArthur a=CohenArthur\n\nBased on #1155, so you can review just the last commit.\r\n\r\nThis adds the remaining simple visitors for visibility resolving, as well as a helper method for doing so.\n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>", "tree": {"sha": "bb247c6b7511d39367eedcf31b9d9dad72ae23ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb247c6b7511d39367eedcf31b9d9dad72ae23ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1286acc34e826039ebc8f09ad36dddc30f726283", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiYrUSCRBK7hj4Ov3rIwAAcasIAKVO3/7VSzrRk3seA3oG+2XH\ncAds6198/WU+hRFVQZmxguUiYAvfqqvhyyRYfW//KEDeizSqWz6stlpAXhEmYIhP\ncbheucdIEQgoCM4gulOW6kWOqP7plIphbm9LjtWXTrJpXPLDeMRHdo5W0XntMgTG\n6ORLf9IPaO2oCQA2gl4acCDnaG5m4/ghQUmGywS5jL6O83k4H+92fZG+xsqbClX/\n05hXeWNJJmZFnpWDyNLAN4kAFSzblLH03ek10P7sqP/HnfPQJIo8JQOX8EFQrUhf\nvMgjPZFp+VxoQq0KvH3FchclLgcy3ObfC3f/3ihtqRhkOx1VTxmHKp46pNWq3Js=\n=u9yM\n-----END PGP SIGNATURE-----\n", "payload": "tree bb247c6b7511d39367eedcf31b9d9dad72ae23ca\nparent a936265bb0e6e042733c501db942615f2a64f705\nparent 159ffebb20c4da2ec07506d57d0243c4e5e7b43f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1650636050 +0000\ncommitter GitHub <noreply@github.com> 1650636050 +0000\n\nMerge #1157\n\n1157: Resolve remaining simple visibilites r=CohenArthur a=CohenArthur\n\nBased on #1155, so you can review just the last commit.\r\n\r\nThis adds the remaining simple visitors for visibility resolving, as well as a helper method for doing so.\n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1286acc34e826039ebc8f09ad36dddc30f726283", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1286acc34e826039ebc8f09ad36dddc30f726283", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1286acc34e826039ebc8f09ad36dddc30f726283/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a936265bb0e6e042733c501db942615f2a64f705", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a936265bb0e6e042733c501db942615f2a64f705", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a936265bb0e6e042733c501db942615f2a64f705"}, {"sha": "159ffebb20c4da2ec07506d57d0243c4e5e7b43f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/159ffebb20c4da2ec07506d57d0243c4e5e7b43f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/159ffebb20c4da2ec07506d57d0243c4e5e7b43f"}], "stats": {"total": 66, "additions": 59, "deletions": 7}, "files": [{"sha": "b3dc025319fcb02b3d95890bc3203cc24c1ca0c4", "filename": "gcc/rust/hir/tree/rust-hir-item.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1286acc34e826039ebc8f09ad36dddc30f726283/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1286acc34e826039ebc8f09ad36dddc30f726283/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h?ref=1286acc34e826039ebc8f09ad36dddc30f726283", "patch": "@@ -633,6 +633,7 @@ class VisItem : public Item\n   virtual void accept_vis (HIRVisItemVisitor &vis) = 0;\n \n   Visibility &get_visibility () { return visibility; }\n+  const Visibility &get_visibility () const { return visibility; }\n \n   std::string as_string () const override;\n };"}, {"sha": "8f5aebadf44a483a296acd84aaa7329a8cae9ac0", "filename": "gcc/rust/privacy/rust-visibility-resolver.cc", "status": "modified", "additions": 50, "deletions": 7, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1286acc34e826039ebc8f09ad36dddc30f726283/gcc%2Frust%2Fprivacy%2Frust-visibility-resolver.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1286acc34e826039ebc8f09ad36dddc30f726283/gcc%2Frust%2Fprivacy%2Frust-visibility-resolver.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fprivacy%2Frust-visibility-resolver.cc?ref=1286acc34e826039ebc8f09ad36dddc30f726283", "patch": "@@ -64,6 +64,16 @@ VisibilityResolver::resolve_visibility (const HIR::Visibility &visibility,\n     }\n }\n \n+void\n+VisibilityResolver::resolve_and_update (const HIR::VisItem *item)\n+{\n+  ModuleVisibility module_vis;\n+  if (!resolve_visibility (item->get_visibility (), module_vis))\n+    return; // we will already have emitted errors\n+\n+  mappings.insert_visibility (item->get_mappings ().get_defid (), module_vis);\n+}\n+\n DefId\n VisibilityResolver::peek_module ()\n {\n@@ -101,19 +111,27 @@ VisibilityResolver::visit (HIR::UseDeclaration &use_decl)\n \n void\n VisibilityResolver::visit (HIR::Function &func)\n-{}\n+{\n+  resolve_and_update (&func);\n+}\n \n void\n VisibilityResolver::visit (HIR::TypeAlias &type_alias)\n-{}\n+{\n+  resolve_and_update (&type_alias);\n+}\n \n void\n VisibilityResolver::visit (HIR::StructStruct &struct_item)\n-{}\n+{\n+  resolve_and_update (&struct_item);\n+}\n \n void\n VisibilityResolver::visit (HIR::TupleStruct &tuple_struct)\n-{}\n+{\n+  resolve_and_update (&tuple_struct);\n+}\n \n void\n VisibilityResolver::visit (HIR::Enum &enum_item)\n@@ -133,11 +151,15 @@ VisibilityResolver::visit (HIR::Union &union_item)\n \n void\n VisibilityResolver::visit (HIR::ConstantItem &const_item)\n-{}\n+{\n+  resolve_and_update (&const_item);\n+}\n \n void\n VisibilityResolver::visit (HIR::StaticItem &static_item)\n-{}\n+{\n+  resolve_and_update (&static_item);\n+}\n \n void\n VisibilityResolver::visit (HIR::Trait &trait)\n@@ -153,7 +175,28 @@ VisibilityResolver::visit (HIR::Trait &trait)\n \n void\n VisibilityResolver::visit (HIR::ImplBlock &impl)\n-{}\n+{\n+  for (auto &item : impl.get_impl_items ())\n+    {\n+      HIR::VisItem *vis_item;\n+      switch (item->get_impl_item_type ())\n+\t{\n+\tcase HIR::ImplItem::FUNCTION:\n+\t  vis_item = static_cast<HIR::Function *> (item.get ());\n+\t  break;\n+\tcase HIR::ImplItem::TYPE_ALIAS:\n+\t  vis_item = static_cast<HIR::TypeAlias *> (item.get ());\n+\t  break;\n+\tcase HIR::ImplItem::CONSTANT:\n+\t  vis_item = static_cast<HIR::ConstantItem *> (item.get ());\n+\t  break;\n+\tdefault:\n+\t  gcc_unreachable ();\n+\t  return;\n+\t}\n+      vis_item->accept_vis (*this);\n+    }\n+}\n \n void\n VisibilityResolver::visit (HIR::ExternBlock &block)"}, {"sha": "16fb42fa0b429a6f17c6abf5d881ec8c0f5dd83c", "filename": "gcc/rust/privacy/rust-visibility-resolver.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1286acc34e826039ebc8f09ad36dddc30f726283/gcc%2Frust%2Fprivacy%2Frust-visibility-resolver.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1286acc34e826039ebc8f09ad36dddc30f726283/gcc%2Frust%2Fprivacy%2Frust-visibility-resolver.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fprivacy%2Frust-visibility-resolver.h?ref=1286acc34e826039ebc8f09ad36dddc30f726283", "patch": "@@ -52,6 +52,14 @@ class VisibilityResolver : public HIR::HIRVisItemVisitor\n   bool resolve_visibility (const HIR::Visibility &visibility,\n \t\t\t   ModuleVisibility &to_resolve);\n \n+  /**\n+   * Resolve the visibility of an item and updates it. This is useful for\n+   * vis-items who need to be resolved but do not care about their module\n+   * visibility - const items, static items, etc. For items with an impact on\n+   * their children (enums, traits), this cannot be used\n+   */\n+  void resolve_and_update (const HIR::VisItem *item);\n+\n   /**\n    * Get the DefId of the parent module we are currently visiting.\n    *"}]}