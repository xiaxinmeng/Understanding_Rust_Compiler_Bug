{"sha": "a6ac87c14f2896fab97868ebcca6b60e2b0c7e9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZhYzg3YzE0ZjI4OTZmYWI5Nzg2OGViY2NhNmI2MGUyYjBjN2U5YQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-11-14T23:38:04Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-11-14T23:38:04Z"}, "message": "* doc/rtl.texi (SUBREG): Adjust BYTENUM value in example.\n\nFrom-SVN: r90639", "tree": {"sha": "f4d584da2a3acf01c58749da778f9145c75f2871", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4d584da2a3acf01c58749da778f9145c75f2871"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6ac87c14f2896fab97868ebcca6b60e2b0c7e9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6ac87c14f2896fab97868ebcca6b60e2b0c7e9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6ac87c14f2896fab97868ebcca6b60e2b0c7e9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6ac87c14f2896fab97868ebcca6b60e2b0c7e9a/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a7c155d2e36bda69cb68c2f6f5105e256878506", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a7c155d2e36bda69cb68c2f6f5105e256878506", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a7c155d2e36bda69cb68c2f6f5105e256878506"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "84cd2b0d38df51775fba3b25d5d3d9eb09dcdb77", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ac87c14f2896fab97868ebcca6b60e2b0c7e9a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ac87c14f2896fab97868ebcca6b60e2b0c7e9a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a6ac87c14f2896fab97868ebcca6b60e2b0c7e9a", "patch": "@@ -1,3 +1,7 @@\n+2004-11-14  Eric Botcazou <ebotcazou@libertysurf.fr>\n+\n+\t* doc/rtl.texi (SUBREG): Adjust BYTENUM value.\n+\n 2004-11-14  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* cfgrtl.c, global.c, tree-ssa-copy.c, tree-ssa-loop-ivopts.c,"}, {"sha": "0672d03a6c43af76c8c0b484755ad3625407f515", "filename": "gcc/doc/rtl.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ac87c14f2896fab97868ebcca6b60e2b0c7e9a/gcc%2Fdoc%2Frtl.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ac87c14f2896fab97868ebcca6b60e2b0c7e9a/gcc%2Fdoc%2Frtl.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Frtl.texi?ref=a6ac87c14f2896fab97868ebcca6b60e2b0c7e9a", "patch": "@@ -1602,7 +1602,7 @@ It is also not valid to access a single word of a multi-word value in a\n hard register when less registers can hold the value than would be\n expected from its size.  For example, some 32-bit machines have\n floating-point registers that can hold an entire @code{DFmode} value.\n-If register 10 were such a register @code{(subreg:SI (reg:DF 10) 1)}\n+If register 10 were such a register @code{(subreg:SI (reg:DF 10) 4)}\n would be invalid because there is no way to convert that reference to\n a single machine register.  The reload pass prevents @code{subreg}\n expressions such as these from being formed."}]}