{"sha": "823b5d6bbc2a7495618f3e42a223be6500d27ca4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIzYjVkNmJiYzJhNzQ5NTYxOGYzZTQyYTIyM2JlNjUwMGQyN2NhNA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2013-09-13T06:04:32Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2013-09-13T06:04:32Z"}, "message": "Revert \"        * tree-ssa-dom.c (cprop_into_successor_phis): Also propagate\"\n\nThis reverts commit 592dc887e7bd7b2637b9277c3bd28f41a9487b17.\n\nConflicts:\n\tgcc/ChangeLog\n\nFrom-SVN: r202553", "tree": {"sha": "7cd96ad807d56e10ec2f3265033bba2183a86afd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7cd96ad807d56e10ec2f3265033bba2183a86afd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/823b5d6bbc2a7495618f3e42a223be6500d27ca4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/823b5d6bbc2a7495618f3e42a223be6500d27ca4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/823b5d6bbc2a7495618f3e42a223be6500d27ca4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/823b5d6bbc2a7495618f3e42a223be6500d27ca4/comments", "author": null, "committer": null, "parents": [{"sha": "cece83413933cd7e95e399f434ec16df99722f1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cece83413933cd7e95e399f434ec16df99722f1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cece83413933cd7e95e399f434ec16df99722f1d"}], "stats": {"total": 33, "additions": 9, "deletions": 24}, "files": [{"sha": "f47901521355cc85fb2a3ec983683133b490e661", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/823b5d6bbc2a7495618f3e42a223be6500d27ca4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/823b5d6bbc2a7495618f3e42a223be6500d27ca4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=823b5d6bbc2a7495618f3e42a223be6500d27ca4", "patch": "@@ -1,3 +1,12 @@\n+2013-09-10  Jeff Law  <law@redhat.com>\n+\n+\tPR middle-end/58387\n+\tRevert:\n+\t2013-09-06  Jeff Law  <law@redhat.com>\n+\n+\t* tree-ssa-dom.c (cprop_into_successor_phis): Also propagate\n+\tedge implied equivalences into successor phis.\n+\n 2013-09-12  DJ Delorie  <dj@redhat.com>\n \n \t* config/rl78/rl78-virt.md: Change from | to \\; for asm line"}, {"sha": "e02a56662b95713e9b55723110d28eb7265f5d5b", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/823b5d6bbc2a7495618f3e42a223be6500d27ca4/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/823b5d6bbc2a7495618f3e42a223be6500d27ca4/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=823b5d6bbc2a7495618f3e42a223be6500d27ca4", "patch": "@@ -1642,28 +1642,6 @@ cprop_into_successor_phis (basic_block bb)\n       if (gsi_end_p (gsi))\n \tcontinue;\n \n-      /* We may have an equivalence associated with this edge.  While\n-\t we can not propagate it into non-dominated blocks, we can\n-\t propagate them into PHIs in non-dominated blocks.  */\n-\n-      /* Push the unwind marker so we can reset the const and copies\n-\t table back to its original state after processing this edge.  */\n-      const_and_copies_stack.safe_push (NULL_TREE);\n-\n-      /* Extract and record any simple NAME = VALUE equivalences. \n-\n-\t Don't bother with [01] = COND equivalences, they're not useful\n-\t here.  */\n-      struct edge_info *edge_info = (struct edge_info *) e->aux;\n-      if (edge_info)\n-\t{\n-\t  tree lhs = edge_info->lhs;\n-\t  tree rhs = edge_info->rhs;\n-\n-\t  if (lhs && TREE_CODE (lhs) == SSA_NAME)\n-\t    record_const_or_copy (lhs, rhs);\n-\t}\n-\n       indx = e->dest_idx;\n       for ( ; !gsi_end_p (gsi); gsi_next (&gsi))\n \t{\n@@ -1689,8 +1667,6 @@ cprop_into_successor_phis (basic_block bb)\n \t      && may_propagate_copy (orig_val, new_val))\n \t    propagate_value (orig_p, new_val);\n \t}\n-\n-      restore_vars_to_original_value ();\n     }\n }\n "}]}