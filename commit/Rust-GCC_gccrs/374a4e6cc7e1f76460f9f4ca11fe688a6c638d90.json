{"sha": "374a4e6cc7e1f76460f9f4ca11fe688a6c638d90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc0YTRlNmNjN2UxZjc2NDYwZjlmNGNhMTFmZTY4OGE2YzYzOGQ5MA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2003-06-28T12:30:05Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-06-28T12:30:05Z"}, "message": "c-parse.in (%union): Replace filename & lineno with location.\n\n\t* c-parse.in (%union): Replace filename & lineno with location.\n\t(save_filename, save_lineno): Remove.\n\t(save_location): New.\n\t(fndef, old_style_parm_decls_1, lineno_datadecl, lineno_decl,\n\tnested_function, notype_nested_function, if_prefix, lineno_stmt,\n\tlineno_label, label): Adjust.\n\nFrom-SVN: r68636", "tree": {"sha": "c2318c2c646bccabb7b829342db207d56d0228a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2318c2c646bccabb7b829342db207d56d0228a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/374a4e6cc7e1f76460f9f4ca11fe688a6c638d90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/374a4e6cc7e1f76460f9f4ca11fe688a6c638d90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/374a4e6cc7e1f76460f9f4ca11fe688a6c638d90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/374a4e6cc7e1f76460f9f4ca11fe688a6c638d90/comments", "author": null, "committer": null, "parents": [{"sha": "88373ed0fbc182cc1b04bf5cdafd9b1da885b8bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88373ed0fbc182cc1b04bf5cdafd9b1da885b8bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88373ed0fbc182cc1b04bf5cdafd9b1da885b8bd"}], "stats": {"total": 75, "additions": 36, "deletions": 39}, "files": [{"sha": "2e03b37dabc636a28931103653ebc37bcb0383f1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/374a4e6cc7e1f76460f9f4ca11fe688a6c638d90/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/374a4e6cc7e1f76460f9f4ca11fe688a6c638d90/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=374a4e6cc7e1f76460f9f4ca11fe688a6c638d90", "patch": "@@ -1,3 +1,12 @@\n+2003-06-28  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* c-parse.in (%union): Replace filename & lineno with location.\n+\t(save_filename, save_lineno): Remove.\n+\t(save_location): New.\n+\t(fndef, old_style_parm_decls_1, lineno_datadecl, lineno_decl,\n+\tnested_function, notype_nested_function, if_prefix, lineno_stmt,\n+\tlineno_label, label): Adjust.\n+\n 2003-06-28  Jakub Jelinek  <jakub@redhat.com>\n \n \t* builtins.c (c_strlen): Add only_value argument."}, {"sha": "8ae1e14274ff656c05c0ab22506aa0d407df1a1c", "filename": "gcc/c-parse.in", "status": "modified", "additions": 27, "deletions": 39, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/374a4e6cc7e1f76460f9f4ca11fe688a6c638d90/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/374a4e6cc7e1f76460f9f4ca11fe688a6c638d90/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=374a4e6cc7e1f76460f9f4ca11fe688a6c638d90", "patch": "@@ -108,7 +108,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n %start program\n \n %union {long itype; tree ttype; enum tree_code code;\n-\tconst char *filename; int lineno; }\n+\tlocation_t location; }\n \n /* All identifiers that are not reserved words\n    and are not declared typedefs in the current block */\n@@ -238,8 +238,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n %type <itype> setspecs setspecs_fp\n \n-%type <filename> save_filename\n-%type <lineno> save_lineno\n+%type <location> save_location\n \f\n ifobjc\n /* the Objective-C nonterminals */\n@@ -434,11 +433,10 @@ fndef:\n \t\t\t\t\tall_prefix_attributes))\n \t\t    YYERROR1;\n \t\t}\n-\t  old_style_parm_decls  save_filename save_lineno\n-\t\t{ DECL_SOURCE_FILE (current_function_decl) = $6;\n-\t\t  DECL_SOURCE_LINE (current_function_decl) = $7;\n+\t  old_style_parm_decls save_location\n+\t\t{ DECL_SOURCE_LOCATION (current_function_decl) = $6;\n \t\t  store_parm_decls (); }\n-\t compstmt_or_error\n+\t  compstmt_or_error\n \t\t{ finish_function (0, 1);\n \t\t  POP_DECLSPEC_STACK; }\n \t| declspecs_ts setspecs declarator error\n@@ -448,9 +446,8 @@ fndef:\n \t\t\t\t\tall_prefix_attributes))\n \t\t    YYERROR1;\n \t\t}\n-\t  old_style_parm_decls save_filename save_lineno\n-\t\t{ DECL_SOURCE_FILE (current_function_decl) = $6;\n-\t\t  DECL_SOURCE_LINE (current_function_decl) = $7;\n+\t  old_style_parm_decls save_location\n+\t\t{ DECL_SOURCE_LOCATION (current_function_decl) = $6;\n \t\t  store_parm_decls (); }\n \t  compstmt_or_error\n \t\t{ finish_function (0, 1);\n@@ -462,9 +459,8 @@ fndef:\n \t\t\t\t\tall_prefix_attributes))\n \t\t    YYERROR1;\n \t\t}\n-\t  old_style_parm_decls save_filename save_lineno\n-\t\t{ DECL_SOURCE_FILE (current_function_decl) = $5;\n-\t\t  DECL_SOURCE_LINE (current_function_decl) = $6;\n+\t  old_style_parm_decls save_location\n+\t\t{ DECL_SOURCE_LOCATION (current_function_decl) = $5;\n \t\t  store_parm_decls (); }\n \t  compstmt_or_error\n \t\t{ finish_function (0, 1);\n@@ -805,7 +801,7 @@ old_style_parm_decls_1:\n    except that they do not allow nested functions.\n    They are used for old-style parm decls.  */\n lineno_datadecl:\n-\t  save_filename save_lineno datadecl\n+\t  save_location datadecl\n \t\t{ }\n \t;\n \n@@ -837,7 +833,7 @@ datadecl:\n    This is to avoid shift/reduce conflicts in contexts\n    where statement labels are allowed.  */\n lineno_decl:\n-\t  save_filename save_lineno decl\n+\t  save_location decl\n \t\t{ }\n \t;\n \n@@ -1593,10 +1589,9 @@ nested_function:\n \t\t    }\n \t\t  parsing_iso_function_signature = false; /* Don't warn about nested functions.  */\n \t\t}\n-\t   old_style_parm_decls save_filename save_lineno\n+\t   old_style_parm_decls save_location\n \t\t{ tree decl = current_function_decl;\n-\t\t  DECL_SOURCE_FILE (decl) = $4;\n-\t\t  DECL_SOURCE_LINE (decl) = $5;\n+\t\t  DECL_SOURCE_LOCATION (decl) = $4;\n \t\t  store_parm_decls (); }\n /* This used to use compstmt_or_error.\n    That caused a bug with input `f(g) int g {}',\n@@ -1625,10 +1620,9 @@ notype_nested_function:\n \t\t    }\n \t\t  parsing_iso_function_signature = false; /* Don't warn about nested functions.  */\n \t\t}\n-\t  old_style_parm_decls save_filename save_lineno\n+\t  old_style_parm_decls save_location\n \t\t{ tree decl = current_function_decl;\n-\t\t  DECL_SOURCE_FILE (decl) = $4;\n-\t\t  DECL_SOURCE_LINE (decl) = $5;\n+\t\t  DECL_SOURCE_LOCATION (decl) = $4;\n \t\t  store_parm_decls (); }\n /* This used to use compstmt_or_error.\n    That caused a bug with input `f(g) int g {}',\n@@ -2233,8 +2227,7 @@ if_prefix:\n \t\t{ c_expand_start_cond (c_common_truthvalue_conversion ($4),\n \t\t\t\t       compstmt_count,$<ttype>2);\n \t\t  $<itype>$ = stmt_count;\n-\t\t  if_stmt_locus.file = $<filename>-2;\n-\t\t  if_stmt_locus.line = $<lineno>-1; }\n+\t\t  if_stmt_locus = $<location>-1; }\n         ;\n \n /* This is a subroutine of stmt.\n@@ -2260,16 +2253,11 @@ do_stmt_start:\n /* The forced readahead in here is because we might be at the end of a\n    line, and the line and file won't be bumped until yylex absorbs the\n    first token on the next line.  */\n-save_filename:\n-\t\t{ if (yychar == YYEMPTY)\n-\t\t    yychar = YYLEX;\n-\t\t  $$ = input_filename; }\n-\t;\n \n-save_lineno:\n+save_location:\n \t\t{ if (yychar == YYEMPTY)\n \t\t    yychar = YYLEX;\n-\t\t  $$ = input_line; }\n+\t\t  $$ = input_location; }\n \t;\n \n lineno_labeled_stmt:\n@@ -2285,10 +2273,10 @@ c99_block_lineno_labeled_stmt:\n \t;\n \n lineno_stmt:\n-\t  save_filename save_lineno stmt\n-\t\t{ if ($3)\n+\t  save_location stmt\n+\t\t{ if ($2)\n \t\t    {\n-\t\t      STMT_LINENO ($3) = $2;\n+\t\t      STMT_LINENO ($2) = $1.line;\n \t\t      /* ??? We currently have no way of recording\n \t\t\t the filename for a statement.  This probably\n \t\t\t matters little in practice at the moment,\n@@ -2299,10 +2287,10 @@ lineno_stmt:\n \t;\n \n lineno_label:\n-\t  save_filename save_lineno label\n-\t\t{ if ($3)\n+\t  save_location label\n+\t\t{ if ($2)\n \t\t    {\n-\t\t      STMT_LINENO ($3) = $2;\n+\t\t      STMT_LINENO ($2) = $1.line;\n \t\t    }\n \t\t}\n \t;\n@@ -2457,12 +2445,12 @@ label:\t  CASE expr_no_commas ':'\n \t| DEFAULT ':'\n                 { stmt_count++;\n \t\t  $$ = do_case (NULL_TREE, NULL_TREE); }\n-\t| identifier save_filename save_lineno ':' maybe_attribute\n-\t\t{ tree label = define_label ($2, $3, $1);\n+\t| identifier save_location ':' maybe_attribute\n+\t\t{ tree label = define_label ($2.file, $2.line, $1);\n \t\t  stmt_count++;\n \t\t  if (label)\n \t\t    {\n-\t\t      decl_attributes (&label, $5, 0);\n+\t\t      decl_attributes (&label, $4, 0);\n \t\t      $$ = add_stmt (build_stmt (LABEL_STMT, label));\n \t\t    }\n \t\t  else"}]}