{"sha": "bbda30a4aae700f963fd164edbeac4f4688bf2a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJkYTMwYTRhYWU3MDBmOTYzZmQxNjRlZGJlYWM0ZjQ2ODhiZjJhMA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2003-07-21T16:52:38Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-07-21T16:52:38Z"}, "message": "re PR rtl-optimization/11536 ([strength-reduce] -O2 optimalization produces wrong code)\n\n        PR optimization/11536\n\t* unroll.c (loop_iterations): Do not replace a register holding\n\tthe final value by its equivalent before the loop if it is not\n\tinvariant.\n\n        PR optimization/11536\n\t* gcc.dg/20030721-1.c: New test.\n\nFrom-SVN: r69635", "tree": {"sha": "012a183ac137fb8f46d0f240aabffa82cb691b8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/012a183ac137fb8f46d0f240aabffa82cb691b8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbda30a4aae700f963fd164edbeac4f4688bf2a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbda30a4aae700f963fd164edbeac4f4688bf2a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbda30a4aae700f963fd164edbeac4f4688bf2a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbda30a4aae700f963fd164edbeac4f4688bf2a0/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9ef2dd1fad3a6e04366c236a29d4377812e4bccd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef2dd1fad3a6e04366c236a29d4377812e4bccd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ef2dd1fad3a6e04366c236a29d4377812e4bccd"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "180fc69f843064a84cc0613fb72b9a1aa68a99ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbda30a4aae700f963fd164edbeac4f4688bf2a0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbda30a4aae700f963fd164edbeac4f4688bf2a0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bbda30a4aae700f963fd164edbeac4f4688bf2a0", "patch": "@@ -1,3 +1,10 @@\n+2003-07-17  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+        PR optimization/11536\n+\t* unroll.c (loop_iterations): Do not replace a register holding\n+\tthe final value by its equivalent before the loop if it is not\n+\tinvariant.\n+\n 2003-07-21  Dave Fluri  <dave.fluri@onlink.net>\n \n \t* doc/extend.texi: Fixes to spelling, grammar, and diction."}, {"sha": "1cfa936119506f17560f95b9fff9f00d9602a6de", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbda30a4aae700f963fd164edbeac4f4688bf2a0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbda30a4aae700f963fd164edbeac4f4688bf2a0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bbda30a4aae700f963fd164edbeac4f4688bf2a0", "patch": "@@ -1,3 +1,8 @@\n+2003-07-21  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+        PR optimization/11536\n+\t* gcc.dg/20030721-1.c: New test.\n+\n 2003-07-19  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/11546"}, {"sha": "5e8ed0b434adb202d9c179c20888a9a90430b66b", "filename": "gcc/testsuite/gcc.dg/20030721-1.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbda30a4aae700f963fd164edbeac4f4688bf2a0/gcc%2Ftestsuite%2Fgcc.dg%2F20030721-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbda30a4aae700f963fd164edbeac4f4688bf2a0/gcc%2Ftestsuite%2Fgcc.dg%2F20030721-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20030721-1.c?ref=bbda30a4aae700f963fd164edbeac4f4688bf2a0", "patch": "@@ -0,0 +1,41 @@\n+/* { dg-options \"-O2\" } */\n+/* PR optimization/11536 */\n+/* Origin: samal@kam.mff.cuni.cz <samal@kam.mff.cuni.cz> */\n+/* Testcase by Andrew Pinski <pinskia@physics.uc.edu> */\n+\n+/* Verify that the loop optimizer doesn't use moving targets\n+   to calculate the number of iterations of a loop.  */\n+\n+extern void abort(void);\n+\n+void foo(int) __attribute__((__noinline__));\n+\n+void foo(int i)\n+{\n+  abort();\n+}\n+\n+int main()\n+{\n+  int i;\n+  int first= 0;\n+  int last= 0;\n+\n+  while (last<3) {\n+    last = first;\n+\n+    while (first<=last) {\n+      first++;\n+\n+      for (i=0;i<3;i++)\n+        last++;\n+\n+      if (last>10)\n+        return 0;\n+    }\n+    \n+    foo(first);\n+  }\n+\n+  return 0;\n+}"}, {"sha": "1c66b13fe780945a9f4a3d44c183c03faaf9cd47", "filename": "gcc/unroll.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbda30a4aae700f963fd164edbeac4f4688bf2a0/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbda30a4aae700f963fd164edbeac4f4688bf2a0/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=bbda30a4aae700f963fd164edbeac4f4688bf2a0", "patch": "@@ -3618,7 +3618,7 @@ loop_iterations (struct loop *loop)\n \n \t  if (find_common_reg_term (temp, reg2))\n \t    initial_value = temp;\n-\t  else\n+\t  else if (loop_invariant_p (loop, reg2))\n \t    {\n \t      /* Find what reg2 is equivalent to.  Hopefully it will\n \t\t either be reg1 or reg1 plus a constant.  Let's ignore"}]}