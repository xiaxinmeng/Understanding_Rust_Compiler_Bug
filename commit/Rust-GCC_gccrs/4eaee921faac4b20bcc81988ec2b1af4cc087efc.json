{"sha": "4eaee921faac4b20bcc81988ec2b1af4cc087efc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVhZWU5MjFmYWFjNGIyMGJjYzgxOTg4ZWMyYjFhZjRjYzA4N2VmYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-12-08T03:31:25Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-12-08T03:31:25Z"}, "message": "re PR c++/55419 (ICE in gimplify_init_ctor_preeval, at gimplify.c:3587)\n\n\tPR c++/55419\n\t* tree.c (build_target_expr): Don't set TREE_CONSTANT.\n\nFrom-SVN: r194317", "tree": {"sha": "266f07a610c2b0f8c5124330bbd1f057eb07f0ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/266f07a610c2b0f8c5124330bbd1f057eb07f0ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4eaee921faac4b20bcc81988ec2b1af4cc087efc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eaee921faac4b20bcc81988ec2b1af4cc087efc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4eaee921faac4b20bcc81988ec2b1af4cc087efc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eaee921faac4b20bcc81988ec2b1af4cc087efc/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3da2b176b387f367a02f5299607204ee6b27e359", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3da2b176b387f367a02f5299607204ee6b27e359", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3da2b176b387f367a02f5299607204ee6b27e359"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "78e7d40d4a50729d998a8c9aeb83046cad6df21e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaee921faac4b20bcc81988ec2b1af4cc087efc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaee921faac4b20bcc81988ec2b1af4cc087efc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4eaee921faac4b20bcc81988ec2b1af4cc087efc", "patch": "@@ -1,3 +1,8 @@\n+2012-12-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/55419\n+\t* tree.c (build_target_expr): Don't set TREE_CONSTANT.\n+\n 2012-12-07  Aldy Hernandez  <aldyh@redhat.com>\n \n \tPR c++/55513"}, {"sha": "00fe53f521477d55374eaac89037b88d6989b62f", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaee921faac4b20bcc81988ec2b1af4cc087efc/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaee921faac4b20bcc81988ec2b1af4cc087efc/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=4eaee921faac4b20bcc81988ec2b1af4cc087efc", "patch": "@@ -329,8 +329,6 @@ build_target_expr (tree decl, tree value, tsubst_flags_t complain)\n      side-effects, then the optimizer should be able to get rid of\n      whatever code is generated anyhow.  */\n   TREE_SIDE_EFFECTS (t) = 1;\n-  if (literal_type_p (type))\n-    TREE_CONSTANT (t) = TREE_CONSTANT (value);\n \n   return t;\n }"}, {"sha": "6b822a1f7778fd781113d2dffe51b573714ad907", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-initlist6.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eaee921faac4b20bcc81988ec2b1af4cc087efc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-initlist6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eaee921faac4b20bcc81988ec2b1af4cc087efc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-initlist6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-initlist6.C?ref=4eaee921faac4b20bcc81988ec2b1af4cc087efc", "patch": "@@ -0,0 +1,27 @@\n+// PR c++/55419\n+// { dg-options -std=c++11 }\n+\n+struct P\n+{\n+  P () = default;\n+  explicit constexpr P (int x) : p (x) {}\n+  int p;\n+};\n+\n+struct Q\n+{\n+  constexpr Q () : q (0x7f) {}\n+  int q;\n+};\n+\n+struct R\n+{\n+  Q q;\n+  P p;\n+};\n+\n+void\n+foo (R *x)\n+{\n+  *x = {};\n+}"}]}