{"sha": "333a9f0aafc0d0e426d948e545daae6f6d277f19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzMzYTlmMGFhZmMwZDBlNDI2ZDk0OGU1NDVkYWFlNmY2ZDI3N2YxOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-11-24T17:56:27Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-11-24T17:56:27Z"}, "message": "typeck.c (build_component_ref): Remove unused statement.\n\n\t* typeck.c (build_component_ref): Remove unused statement.\n\t* class.c (add_method): Catch invalid overloads.\nFixes Sec13/1/E13097.C.\n\nFrom-SVN: r23833", "tree": {"sha": "591228b90f61a6dc82273adf8622872b83422762", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/591228b90f61a6dc82273adf8622872b83422762"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/333a9f0aafc0d0e426d948e545daae6f6d277f19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/333a9f0aafc0d0e426d948e545daae6f6d277f19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/333a9f0aafc0d0e426d948e545daae6f6d277f19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/333a9f0aafc0d0e426d948e545daae6f6d277f19/comments", "author": null, "committer": null, "parents": [{"sha": "818347b4d66fa9f9af05751b5880f54830cc4c2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/818347b4d66fa9f9af05751b5880f54830cc4c2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/818347b4d66fa9f9af05751b5880f54830cc4c2e"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "07ebc11833cb1d3eaaddbd4e77279d9f9beda3eb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333a9f0aafc0d0e426d948e545daae6f6d277f19/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333a9f0aafc0d0e426d948e545daae6f6d277f19/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=333a9f0aafc0d0e426d948e545daae6f6d277f19", "patch": "@@ -1,5 +1,11 @@\n+1998-11-24  Graham <grahams@rcp.co.uk>\n+\n+\t* typeck.c (build_component_ref): Remove unused statement.\n+\n 1998-11-24  Jason Merrill  <jason@yorick.cygnus.com>\n \n+\t* class.c (add_method): Catch invalid overloads.\n+\n \t* class.c (add_method): Build up OVERLOADs properly for conversion ops.\n \t* search.c (lookup_conversions): Handle getting real OVERLOADs.\n \t(add_conversions): Likewise.  Revert last change."}, {"sha": "8c098f03d2feaade1c36682cefb928249fe570e7", "filename": "gcc/cp/class.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333a9f0aafc0d0e426d948e545daae6f6d277f19/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333a9f0aafc0d0e426d948e545daae6f6d277f19/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=333a9f0aafc0d0e426d948e545daae6f6d277f19", "patch": "@@ -1208,6 +1208,26 @@ add_method (type, fields, method)\n \n \t\t  if (TREE_CODE (method) != TEMPLATE_DECL)\n \t\t    {\n+\t\t      /* [over.load] Member function declarations with the\n+\t\t\t same name and the same parameter types cannot be\n+\t\t\t overloaded if any of them is a static member\n+\t\t\t function declaration.  */\n+\t\t      if (DECL_STATIC_FUNCTION_P (fn)\n+\t\t\t  != DECL_STATIC_FUNCTION_P (method))\n+\t\t\t{\n+\t\t\t  tree parms1 = TYPE_ARG_TYPES (TREE_TYPE (fn));\n+\t\t\t  tree parms2 = TYPE_ARG_TYPES (TREE_TYPE (method));\n+\n+\t\t\t  if (! DECL_STATIC_FUNCTION_P (fn))\n+\t\t\t    parms1 = TREE_CHAIN (parms1);\n+\t\t\t  else\n+\t\t\t    parms2 = TREE_CHAIN (parms2);\n+\n+\t\t\t  if (compparms (parms1, parms2))\n+\t\t\t    cp_error (\"`%#D' and `%#D' cannot be overloaded\",\n+\t\t\t\t      fn, method);\n+\t\t\t}\n+\n \t\t      /* Since this is an ordinary function in a\n \t\t\t non-template class, it's mangled name can be\n \t\t\t used as a unique identifier.  This technique"}, {"sha": "18160be66373503c675156556297390d0e4e42d3", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/333a9f0aafc0d0e426d948e545daae6f6d277f19/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/333a9f0aafc0d0e426d948e545daae6f6d277f19/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=333a9f0aafc0d0e426d948e545daae6f6d277f19", "patch": "@@ -2059,10 +2059,7 @@ build_component_ref (datum, component, basetype_path, protect)\n \t\t  && TREE_CODE (TREE_VALUE (fndecls)) == FUNCTION_DECL\n \t\t  && DECL_STATIC_FUNCTION_P (TREE_VALUE (fndecls)))\n \t\t{\n-\t\t  tree fndecl;\n-\n-\t\t  basetype = TYPE_MAIN_VARIANT (TREE_PURPOSE (fndecls));\n-\t\t  fndecl = TREE_VALUE (fndecls);\n+\t\t  tree fndecl = TREE_VALUE (fndecls);\n \t\t  enforce_access (TREE_PURPOSE (fndecls), fndecl);\n \t\t  mark_used (fndecl);\n \t\t  return fndecl;"}]}