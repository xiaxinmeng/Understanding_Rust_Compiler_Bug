{"sha": "029851fe7092e0d5bd757f51cca4ce6467795f5c", "node_id": "C_kwDOANBUbNoAKDAyOTg1MWZlNzA5MmUwZDViZDc1N2Y1MWNjYTRjZTY0Njc3OTVmNWM", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-02-21T16:07:17Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-02-24T15:59:01Z"}, "message": "Fix clang warning in pt.cc\n\nFixes:\n\ngcc/cp/pt.cc:13755:23: warning: suggest braces around initialization of subobject [-Wmissing-braces]\n  tree_vec_map in = { fn, nullptr };\n\ngcc/cp/ChangeLog:\n\n\t* pt.cc (defarg_insts_for): Use braces for subobject.", "tree": {"sha": "264d0df9de0e7ceaf06eba6fab2bb60ddbfc5847", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/264d0df9de0e7ceaf06eba6fab2bb60ddbfc5847"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/029851fe7092e0d5bd757f51cca4ce6467795f5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/029851fe7092e0d5bd757f51cca4ce6467795f5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/029851fe7092e0d5bd757f51cca4ce6467795f5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/029851fe7092e0d5bd757f51cca4ce6467795f5c/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39be73d07bb667fd5d313a3398f5399e091f2c0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39be73d07bb667fd5d313a3398f5399e091f2c0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39be73d07bb667fd5d313a3398f5399e091f2c0c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "70f02db8757a069c2cd4af062464d1c52f0ae03a", "filename": "gcc/cp/pt.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/029851fe7092e0d5bd757f51cca4ce6467795f5c/gcc%2Fcp%2Fpt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/029851fe7092e0d5bd757f51cca4ce6467795f5c/gcc%2Fcp%2Fpt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.cc?ref=029851fe7092e0d5bd757f51cca4ce6467795f5c", "patch": "@@ -13752,7 +13752,7 @@ defarg_insts_for (tree fn)\n {\n   if (!defarg_inst)\n     defarg_inst = hash_table<tree_vec_map_cache_hasher>::create_ggc (13);\n-  tree_vec_map in = { fn, nullptr };\n+  tree_vec_map in = { { fn }, nullptr };\n   tree_vec_map **slot\n     = defarg_inst->find_slot_with_hash (&in, DECL_UID (fn), INSERT);\n   if (!*slot)"}]}