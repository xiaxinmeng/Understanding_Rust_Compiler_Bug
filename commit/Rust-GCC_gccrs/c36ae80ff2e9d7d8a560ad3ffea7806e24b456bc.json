{"sha": "c36ae80ff2e9d7d8a560ad3ffea7806e24b456bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM2YWU4MGZmMmU5ZDdkOGE1NjBhZDNmZmVhNzgwNmUyNGI0NTZiYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-11-08T01:54:28Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-11-08T01:54:28Z"}, "message": "pt.c (tsubst_decl): Don't mess with the global value of an un-mangled DECL_ASSEMBLER_NAME.\n\n\t* pt.c (tsubst_decl): Don't mess with the global value of an\n\tun-mangled DECL_ASSEMBLER_NAME.\n\t* decl.c (init_decl_processing): Remove CYGWIN conditional\n\tsince CYGWIN is now able to deal with trapping signals.\n\nFrom-SVN: r23565", "tree": {"sha": "48c6369a28384d14743146a93ce3893c3f5b14cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48c6369a28384d14743146a93ce3893c3f5b14cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c36ae80ff2e9d7d8a560ad3ffea7806e24b456bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c36ae80ff2e9d7d8a560ad3ffea7806e24b456bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c36ae80ff2e9d7d8a560ad3ffea7806e24b456bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c36ae80ff2e9d7d8a560ad3ffea7806e24b456bc/comments", "author": null, "committer": null, "parents": [{"sha": "70c130e718cc472e4affb85e70f06d80055d8fd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70c130e718cc472e4affb85e70f06d80055d8fd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70c130e718cc472e4affb85e70f06d80055d8fd9"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "2f677172cb38a260ab636f39fdee2cb4fd9c3b9a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c36ae80ff2e9d7d8a560ad3ffea7806e24b456bc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c36ae80ff2e9d7d8a560ad3ffea7806e24b456bc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c36ae80ff2e9d7d8a560ad3ffea7806e24b456bc", "patch": "@@ -1,3 +1,13 @@\n+1998-11-08  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* pt.c (tsubst_decl): Don't mess with the global value of an \n+\tun-mangled DECL_ASSEMBLER_NAME.\n+\n+1998-11-03  Christopher Faylor <cgf@cygnus.com>\n+\n+\t* decl.c (init_decl_processing): Remove CYGWIN conditional\n+\tsince CYGWIN is now able to deal with trapping signals.\n+\n Sat Nov  7 15:48:02 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* cp-tree.h: Don't include gansidecl.h.\n@@ -159,7 +169,7 @@ Sat Nov  7 15:48:02 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n 1998-10-28  Zack Weinberg  <zack@rabi.phys.columbia.edu>\n \t\n-\t* cp/lex.c: Call check_newline from lang_init always.\tAfter\n+\t* lex.c: Call check_newline from lang_init always.  After\n \tcalling cpp_start_read, set yy_cur and yy_lim to read from the\n \tcpplib token buffer.\n \n@@ -522,9 +532,9 @@ Sat Oct 17 23:27:20 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n 1998-10-16  Mark Mitchell  <mark@markmitchell.com>\n \n \t* decl.c (lookup_name_real): Handle template parameters for member\n-\ttemlates where said parameters have the same name as the\n+\ttemplates where said parameters have the same name as the\n \tsurrounding class.\n-\t\n+\n \t* decl.c (expand_static_init): Build cleanups before entering the\n \tanonymous function used to do them to avoid access-checking\n \tconfusion."}, {"sha": "a54724205c0d607188d1fc80bfd8458d6eafcd6d", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c36ae80ff2e9d7d8a560ad3ffea7806e24b456bc/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c36ae80ff2e9d7d8a560ad3ffea7806e24b456bc/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=c36ae80ff2e9d7d8a560ad3ffea7806e24b456bc", "patch": "@@ -5600,7 +5600,6 @@ init_decl_processing ()\n   current_binding_level = NULL_BINDING_LEVEL;\n   free_binding_level = NULL_BINDING_LEVEL;\n \n-#ifndef __CYGWIN32__\n   /* Because most segmentation signals can be traced back into user\n      code, catch them and at least give the user a chance of working\n      around compiler bugs.  */\n@@ -5622,13 +5621,6 @@ init_decl_processing ()\n #ifdef SIGBUS\n   signal (SIGBUS, signal_catch);\n #endif\n-#else /* ndef __CYGWIN32__ */\n-  /* Cygwin32 cannot handle catching signals other than\n-     SIGABRT yet.  We hope this will cease to be the case soon. */\n-#ifdef SIGABRT\n-  signal (SIGABRT, signal_catch);\n-#endif\n-#endif /* ndef __CYGWIN32__ */\n \n   gcc_obstack_init (&decl_obstack);\n "}, {"sha": "c1a8331e5e448489d3b31e1546668700ecbf8767", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c36ae80ff2e9d7d8a560ad3ffea7806e24b456bc/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c36ae80ff2e9d7d8a560ad3ffea7806e24b456bc/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=c36ae80ff2e9d7d8a560ad3ffea7806e24b456bc", "patch": "@@ -5367,6 +5367,7 @@ tsubst_decl (t, args, type, in_decl)\n \t       mess up our TREE_CHAIN because it doesn't find a\n \t       previous decl.  Sigh.  */\n \t    if (member\n+\t\t&& ! uses_template_parms (r)\n \t\t&& (IDENTIFIER_GLOBAL_VALUE (DECL_ASSEMBLER_NAME (r)) \n \t\t    == NULL_TREE))\n \t      SET_IDENTIFIER_GLOBAL_VALUE (DECL_ASSEMBLER_NAME (r), r);"}]}