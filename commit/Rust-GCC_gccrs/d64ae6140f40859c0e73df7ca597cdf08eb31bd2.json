{"sha": "d64ae6140f40859c0e73df7ca597cdf08eb31bd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY0YWU2MTQwZjQwODU5YzBlNzNkZjdjYTU5N2NkZjA4ZWIzMWJkMg==", "commit": {"author": {"name": "Andrey Turetskiy", "email": "andrey.turetskiy@intel.com", "date": "2014-11-13T14:07:09Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-11-13T14:07:09Z"}, "message": "[PATCH 4/4] OpenMP 4.0 offloading to Intel MIC: non-fallback testing.\n\nlibgomp/\n\t* Makefile.in: Regenerate.\n\t* configure: Regenerate.\n\t* configure.ac: Set up offload_additional_options,\n\toffload_additional_lib_paths and offload_targets.\n\t* testsuite/Makefile.am: Export environment variables: OFFLOAD_TARGETS,\n\tOFFLOAD_ADDITIONAL_OPTIONS, OFFLOAD_ADDITIONAL_LIB_PATHS.\n\t* testsuite/Makefile.in: Regenerate.\n\t* testsuite/lib/libgomp.exp (libgomp_init): Append\n\toffload_additional_lib_paths to LD_LIBRARY_PATH.  Append\n\toffload_additional_options to ALWAYS_CFLAGS.  Append liboffloadmic\n\tbuild directory to LD_LIBRARY_PATH for intelmic offload targets.\n\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\n\nFrom-SVN: r217500", "tree": {"sha": "47a768055357926ac5a92504cba83e7411c863fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47a768055357926ac5a92504cba83e7411c863fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d64ae6140f40859c0e73df7ca597cdf08eb31bd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d64ae6140f40859c0e73df7ca597cdf08eb31bd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d64ae6140f40859c0e73df7ca597cdf08eb31bd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d64ae6140f40859c0e73df7ca597cdf08eb31bd2/comments", "author": null, "committer": null, "parents": [{"sha": "9d73ec14be1b2537394f3b137ee4da016e031dac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d73ec14be1b2537394f3b137ee4da016e031dac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d73ec14be1b2537394f3b137ee4da016e031dac"}], "stats": {"total": 91, "additions": 89, "deletions": 2}, "files": [{"sha": "0662415f255dea1ca7bfa6f23bee01e47b342ff6", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d64ae6140f40859c0e73df7ca597cdf08eb31bd2/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d64ae6140f40859c0e73df7ca597cdf08eb31bd2/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=d64ae6140f40859c0e73df7ca597cdf08eb31bd2", "patch": "@@ -1,3 +1,18 @@\n+2014-11-13  Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* configure.ac: Set up offload_additional_options,\n+\toffload_additional_lib_paths and offload_targets.\n+\t* testsuite/Makefile.am: Export environment variables: OFFLOAD_TARGETS,\n+\tOFFLOAD_ADDITIONAL_OPTIONS, OFFLOAD_ADDITIONAL_LIB_PATHS.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t* testsuite/lib/libgomp.exp (libgomp_init): Append\n+\toffload_additional_lib_paths to LD_LIBRARY_PATH.  Append\n+\toffload_additional_options to ALWAYS_CFLAGS.  Append liboffloadmic\n+\tbuild directory to LD_LIBRARY_PATH for intelmic offload targets.\n+\n 2014-11-13  Andrey Turetskiy  <andrey.turetskiy@intel.com>\n \t    Ilya Verbin  <ilya.verbin@intel.com>\n \t    Kirill Yukhin  <kirill.yukhin@intel.com>"}, {"sha": "8e4774f6c0efe1dc2ffcdd11fa83e73804a7ed9f", "filename": "libgomp/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d64ae6140f40859c0e73df7ca597cdf08eb31bd2/libgomp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d64ae6140f40859c0e73df7ca597cdf08eb31bd2/libgomp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FMakefile.in?ref=d64ae6140f40859c0e73df7ca597cdf08eb31bd2", "patch": "@@ -268,6 +268,9 @@ lt_host_flags = @lt_host_flags@\n mandir = @mandir@\n mkdir_p = @mkdir_p@\n multi_basedir = @multi_basedir@\n+offload_additional_lib_paths = @offload_additional_lib_paths@\n+offload_additional_options = @offload_additional_options@\n+offload_targets = @offload_targets@\n oldincludedir = @oldincludedir@\n pdfdir = @pdfdir@\n prefix = @prefix@"}, {"sha": "19f36c6db0c8ffcd53107a41b6233bc8dbde2d6d", "filename": "libgomp/configure", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d64ae6140f40859c0e73df7ca597cdf08eb31bd2/libgomp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d64ae6140f40859c0e73df7ca597cdf08eb31bd2/libgomp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure?ref=d64ae6140f40859c0e73df7ca597cdf08eb31bd2", "patch": "@@ -616,6 +616,9 @@ OMP_LOCK_SIZE\n USE_FORTRAN_FALSE\n USE_FORTRAN_TRUE\n link_gomp\n+offload_additional_lib_paths\n+offload_additional_options\n+offload_targets\n XLDFLAGS\n XCFLAGS\n config_path\n@@ -11094,7 +11097,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11097 \"configure\"\n+#line 11100 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11200,7 +11203,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11203 \"configure\"\n+#line 11206 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -16207,9 +16210,13 @@ else\n   multilib_arg=\n fi\n \n+# Get accel target and path to install tree of accel compiler\n+offload_additional_options=\n+offload_additional_lib_paths=\n offload_targets=\n if test x\"$enable_offload_targets\" != x; then\n   for tgt in `echo $enable_offload_targets | sed -e 's#,# #g'`; do\n+    tgt_dir=`echo $tgt | grep '=' | sed 's/.*=//'`\n     tgt=`echo $tgt | sed 's/=.*//'`\n     case $tgt in\n       *-intelmic-* | *-intelmicemul-*)\n@@ -16222,6 +16229,13 @@ if test x\"$enable_offload_targets\" != x; then\n     else\n       offload_targets=$offload_targets,$tgt_name\n     fi\n+    if test x\"$tgt_dir\" != x; then\n+      offload_additional_options=\"$offload_additional_options -B$tgt_dir/libexec/gcc/\\$(target_alias)/\\$(gcc_version) -B$tgt_dir/bin\"\n+      offload_additional_lib_paths=\"$offload_additional_lib_paths:$tgt_dir/lib64:$tgt_dir/lib\"\n+    else\n+      offload_additional_options=\"$offload_additional_options -B\\$(libexecdir)/gcc/\\$(target_alias)/\\$(gcc_version) -B\\$(bindir)\"\n+      offload_additional_lib_paths=\"$offload_additional_lib_paths:$toolexeclibdir\"\n+    fi\n   done\n fi\n \n@@ -16230,6 +16244,9 @@ cat >>confdefs.h <<_ACEOF\n _ACEOF\n \n \n+\n+\n+\n # Set up the set of libraries that we need to link against for libgomp.\n # Note that the GOMP_SELF_SPEC in gcc.c may force -pthread,\n # which will force linkage against -lpthread (or equivalent for the system)."}, {"sha": "cea63660c5a599a0a2dea48a7351b12b1242ff1d", "filename": "libgomp/configure.ac", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d64ae6140f40859c0e73df7ca597cdf08eb31bd2/libgomp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d64ae6140f40859c0e73df7ca597cdf08eb31bd2/libgomp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure.ac?ref=d64ae6140f40859c0e73df7ca597cdf08eb31bd2", "patch": "@@ -280,9 +280,13 @@ else\n   multilib_arg=\n fi\n \n+# Get accel target and path to install tree of accel compiler\n+offload_additional_options=\n+offload_additional_lib_paths=\n offload_targets=\n if test x\"$enable_offload_targets\" != x; then\n   for tgt in `echo $enable_offload_targets | sed -e 's#,# #g'`; do\n+    tgt_dir=`echo $tgt | grep '=' | sed 's/.*=//'`\n     tgt=`echo $tgt | sed 's/=.*//'`\n     case $tgt in\n       *-intelmic-* | *-intelmicemul-*)\n@@ -295,10 +299,20 @@ if test x\"$enable_offload_targets\" != x; then\n     else\n       offload_targets=$offload_targets,$tgt_name\n     fi\n+    if test x\"$tgt_dir\" != x; then\n+      offload_additional_options=\"$offload_additional_options -B$tgt_dir/libexec/gcc/\\$(target_alias)/\\$(gcc_version) -B$tgt_dir/bin\"\n+      offload_additional_lib_paths=\"$offload_additional_lib_paths:$tgt_dir/lib64:$tgt_dir/lib\"\n+    else\n+      offload_additional_options=\"$offload_additional_options -B\\$(libexecdir)/gcc/\\$(target_alias)/\\$(gcc_version) -B\\$(bindir)\"\n+      offload_additional_lib_paths=\"$offload_additional_lib_paths:$toolexeclibdir\"\n+    fi\n   done\n fi\n AC_DEFINE_UNQUOTED(OFFLOAD_TARGETS, \"$offload_targets\",\n   [Define to hold the list of target names suitable for offloading.])\n+AC_SUBST(offload_targets)\n+AC_SUBST(offload_additional_options)\n+AC_SUBST(offload_additional_lib_paths)\n \n # Set up the set of libraries that we need to link against for libgomp.\n # Note that the GOMP_SELF_SPEC in gcc.c may force -pthread,"}, {"sha": "9cc103a1c4d43b72d1194ec0c1745b5321c84042", "filename": "libgomp/testsuite/Makefile.am", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d64ae6140f40859c0e73df7ca597cdf08eb31bd2/libgomp%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d64ae6140f40859c0e73df7ca597cdf08eb31bd2/libgomp%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2FMakefile.am?ref=d64ae6140f40859c0e73df7ca597cdf08eb31bd2", "patch": "@@ -11,3 +11,8 @@ EXPECT = $(shell if test -f $(top_builddir)/../expect/expect; then \\\n _RUNTEST = $(shell if test -f $(top_srcdir)/../dejagnu/runtest; then \\\n \t     echo $(top_srcdir)/../dejagnu/runtest; else echo runtest; fi)\n RUNTEST = \"$(_RUNTEST) $(AM_RUNTESTFLAGS)\"\n+\n+# Used for support non-fallback offloading.\n+export OFFLOAD_TARGETS = $(offload_targets)\n+export OFFLOAD_ADDITIONAL_OPTIONS = $(offload_additional_options)\n+export OFFLOAD_ADDITIONAL_LIB_PATHS = $(offload_additional_lib_paths)"}, {"sha": "2f845f0c7cbddfeb5c980b0749f434dc44ff0ecf", "filename": "libgomp/testsuite/Makefile.in", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d64ae6140f40859c0e73df7ca597cdf08eb31bd2/libgomp%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d64ae6140f40859c0e73df7ca597cdf08eb31bd2/libgomp%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2FMakefile.in?ref=d64ae6140f40859c0e73df7ca597cdf08eb31bd2", "patch": "@@ -184,6 +184,9 @@ lt_host_flags = @lt_host_flags@\n mandir = @mandir@\n mkdir_p = @mkdir_p@\n multi_basedir = @multi_basedir@\n+offload_additional_lib_paths = @offload_additional_lib_paths@\n+offload_additional_options = @offload_additional_options@\n+offload_targets = @offload_targets@\n oldincludedir = @oldincludedir@\n pdfdir = @pdfdir@\n prefix = @prefix@\n@@ -408,6 +411,11 @@ uninstall-am:\n \tuninstall uninstall-am\n \n \n+# Used for support non-fallback offloading.\n+export OFFLOAD_TARGETS = $(offload_targets)\n+export OFFLOAD_ADDITIONAL_OPTIONS = $(offload_additional_options)\n+export OFFLOAD_ADDITIONAL_LIB_PATHS = $(offload_additional_lib_paths)\n+\n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded.\n .NOEXPORT:"}, {"sha": "a1546847323db6650593a6b6034619ef58d21644", "filename": "libgomp/testsuite/lib/libgomp.exp", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d64ae6140f40859c0e73df7ca597cdf08eb31bd2/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d64ae6140f40859c0e73df7ca597cdf08eb31bd2/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp?ref=d64ae6140f40859c0e73df7ca597cdf08eb31bd2", "patch": "@@ -107,6 +107,25 @@ proc libgomp_init { args } {\n     # Compute what needs to be put into LD_LIBRARY_PATH\n     set always_ld_library_path \".:${blddir}/.libs\"\n \n+    # Get offload-related variables from environment (exported by Makefile)\n+    set offload_targets [getenv OFFLOAD_TARGETS]\n+    set offload_additional_options [getenv OFFLOAD_ADDITIONAL_OPTIONS]\n+    set offload_additional_lib_paths [getenv OFFLOAD_ADDITIONAL_LIB_PATHS]\n+\n+    # Add liboffloadmic build directory in LD_LIBRARY_PATH to support\n+    # non-fallback testing for Intel MIC targets\n+    if { [string match \"*-intelmic-*\" $offload_targets]\n+\t|| [string match \"*-intelmicemul-*\" $offload_targets] } {\n+\tappend always_ld_library_path \":${blddir}/../liboffloadmic/.libs\"\n+\tappend always_ld_library_path \":${blddir}/../liboffloadmic/plugin/.libs\"\n+\t# libstdc++ is required by liboffloadmic\n+\tappend always_ld_library_path \":${blddir}/../libstdc++-v3/src/.libs\"\n+    }\n+\n+    if { $offload_additional_lib_paths != \"\" } {\n+\tappend always_ld_library_path \"${offload_additional_lib_paths}\"\n+    }\n+\n     # Compute what needs to be added to the existing LD_LIBRARY_PATH.\n     if {$gccdir != \"\"} {\n \t# Add AIX pthread directory first.\n@@ -169,6 +188,12 @@ proc libgomp_init { args } {\n \n     # Disable color diagnostics\n     lappend ALWAYS_CFLAGS \"additional_flags=-fdiagnostics-color=never\"\n+\n+    # Used for support non-fallback offloading.\n+    # Help GCC to find target mkoffload.\n+    if { $offload_additional_options != \"\" } {\n+\tlappend ALWAYS_CFLAGS \"additional_flags=${offload_additional_options}\"\n+    }\n }\n \n #"}]}