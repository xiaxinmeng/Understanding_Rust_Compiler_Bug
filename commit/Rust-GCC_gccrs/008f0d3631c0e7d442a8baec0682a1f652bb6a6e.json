{"sha": "008f0d3631c0e7d442a8baec0682a1f652bb6a6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA4ZjBkMzYzMWMwZTdkNDQyYThiYWVjMDY4MmExZjY1MmJiNmE2ZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-24T15:27:52Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-24T15:27:52Z"}, "message": "(etoe53, etoe24): Make all occurrences static.\n\nFrom-SVN: r7144", "tree": {"sha": "f23a44d6705d8183194e52d9e7aafd4bcf9bcc8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f23a44d6705d8183194e52d9e7aafd4bcf9bcc8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/008f0d3631c0e7d442a8baec0682a1f652bb6a6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/008f0d3631c0e7d442a8baec0682a1f652bb6a6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/008f0d3631c0e7d442a8baec0682a1f652bb6a6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/008f0d3631c0e7d442a8baec0682a1f652bb6a6e/comments", "author": null, "committer": null, "parents": [{"sha": "f4a3cd05d0baada37c17e49fdcf21ac313e5a387", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4a3cd05d0baada37c17e49fdcf21ac313e5a387", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4a3cd05d0baada37c17e49fdcf21ac313e5a387"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "fb06d181b00a925b70cb0bd409104a15a972eb8d", "filename": "gcc/real.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/008f0d3631c0e7d442a8baec0682a1f652bb6a6e/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/008f0d3631c0e7d442a8baec0682a1f652bb6a6e/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=008f0d3631c0e7d442a8baec0682a1f652bb6a6e", "patch": "@@ -3338,7 +3338,7 @@ toe53 (x, y)\n #else\n #ifdef IBM\n \n-void \n+static void \n etoe53 (x, e)\n      unsigned EMUSHORT *x, *e;\n {\n@@ -3354,7 +3354,7 @@ toe53 (x, y)\n \n #else  /* it's neither DEC nor IBM */\n \n-void \n+static void \n etoe53 (x, e)\n      unsigned EMUSHORT *x, *e;\n {\n@@ -3473,7 +3473,7 @@ toe53 (x, y)\n \n #ifdef IBM\n \n-void \n+static void \n etoe24 (x, e)\n      unsigned EMUSHORT *x, *e;\n {\n@@ -3489,7 +3489,7 @@ toe24 (x, y)\n \n #else\n \n-void \n+static void \n etoe24 (x, e)\n      unsigned EMUSHORT *x, *e;\n {\n@@ -5626,8 +5626,8 @@ ditoe (di, e)\n \n /* Convert e-type to unsigned 64-bit int. */\n \n-void \n-static etoudi (x, i)\n+static void \n+etoudi (x, i)\n      unsigned EMUSHORT *x;\n      unsigned EMUSHORT *i;\n {"}]}