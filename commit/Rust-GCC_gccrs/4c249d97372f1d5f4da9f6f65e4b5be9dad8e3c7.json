{"sha": "4c249d97372f1d5f4da9f6f65e4b5be9dad8e3c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGMyNDlkOTczNzJmMWQ1ZjRkYTlmNmY2NWU0YjViZTlkYWQ4ZTNjNw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2017-10-27T14:30:00Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-10-27T14:30:00Z"}, "message": "x86-tune.def (X86_TUNE_PARTIAL_REG_DEPENDENCY, [...]): Disable for Haswell and newer CPUs.\n\n\n\t* config/i386/x86-tune.def (X86_TUNE_PARTIAL_REG_DEPENDENCY,\n\tX86_TUNE_MOVX): Disable for Haswell and newer CPUs.\n\nFrom-SVN: r254152", "tree": {"sha": "54434d4e78b787931ddcaeb7ed53c15c8623cb63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54434d4e78b787931ddcaeb7ed53c15c8623cb63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c249d97372f1d5f4da9f6f65e4b5be9dad8e3c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c249d97372f1d5f4da9f6f65e4b5be9dad8e3c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c249d97372f1d5f4da9f6f65e4b5be9dad8e3c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c249d97372f1d5f4da9f6f65e4b5be9dad8e3c7/comments", "author": null, "committer": null, "parents": [{"sha": "7181cca3d01eee81d445f17716e43309fe301c5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7181cca3d01eee81d445f17716e43309fe301c5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7181cca3d01eee81d445f17716e43309fe301c5a"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "bf87fafca14fe6a6c099a2d816dea1036416c19a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c249d97372f1d5f4da9f6f65e4b5be9dad8e3c7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c249d97372f1d5f4da9f6f65e4b5be9dad8e3c7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c249d97372f1d5f4da9f6f65e4b5be9dad8e3c7", "patch": "@@ -1,3 +1,8 @@\n+2017-10-27  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* config/i386/x86-tune.def (X86_TUNE_PARTIAL_REG_DEPENDENCY,\n+\tX86_TUNE_MOVX): Disable for Haswell and newer CPUs.\n+\n 2017-10-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/82703"}, {"sha": "208d3c58ef4f19574c55c6793e2aa133d6d5cd45", "filename": "gcc/config/i386/x86-tune.def", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c249d97372f1d5f4da9f6f65e4b5be9dad8e3c7/gcc%2Fconfig%2Fi386%2Fx86-tune.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c249d97372f1d5f4da9f6f65e4b5be9dad8e3c7/gcc%2Fconfig%2Fi386%2Fx86-tune.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86-tune.def?ref=4c249d97372f1d5f4da9f6f65e4b5be9dad8e3c7", "patch": "@@ -48,7 +48,8 @@ DEF_TUNE (X86_TUNE_SCHEDULE, \"schedule\",\n    over partial stores.  For example preffer MOVZBL or MOVQ to load 8bit\n    value over movb.  */\n DEF_TUNE (X86_TUNE_PARTIAL_REG_DEPENDENCY, \"partial_reg_dependency\",\n-          m_P4_NOCONA | m_CORE_ALL | m_BONNELL | m_SILVERMONT | m_INTEL\n+          m_P4_NOCONA | m_CORE2 | m_NEHALEM  | m_SANDYBRIDGE\n+\t  | m_BONNELL | m_SILVERMONT | m_INTEL\n \t  | m_KNL | m_KNM | m_AMD_MULTIPLE | m_GENERIC)\n \n /* X86_TUNE_SSE_PARTIAL_REG_DEPENDENCY: This knob promotes all store\n@@ -84,8 +85,9 @@ DEF_TUNE (X86_TUNE_PARTIAL_FLAG_REG_STALL, \"partial_flag_reg_stall\",\n /* X86_TUNE_MOVX: Enable to zero extend integer registers to avoid\n    partial dependencies.  */\n DEF_TUNE (X86_TUNE_MOVX, \"movx\",\n-          m_PPRO | m_P4_NOCONA | m_CORE_ALL | m_BONNELL | m_SILVERMONT\n-\t  | m_KNL | m_KNM | m_INTEL | m_GEODE | m_AMD_MULTIPLE  | m_GENERIC)\n+          m_PPRO | m_P4_NOCONA | m_CORE2 | m_NEHALEM  | m_SANDYBRIDGE\n+\t  | m_BONNELL | m_SILVERMONT | m_KNL | m_KNM | m_INTEL\n+\t  | m_GEODE | m_AMD_MULTIPLE  | m_GENERIC)\n \n /* X86_TUNE_MEMORY_MISMATCH_STALL: Avoid partial stores that are followed by\n    full sized loads.  */"}]}