{"sha": "ccc191454304cc64798585fc0c903f54f355d50b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NjMTkxNDU0MzA0Y2M2NDc5ODU4NWZjMGM5MDNmNTRmMzU1ZDUwYg==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-08-27T00:16:22Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-08-27T00:16:22Z"}, "message": "Daily bump.", "tree": {"sha": "797f6a9f7ee8c6f7c4d3fe91f7984341e240cfa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/797f6a9f7ee8c6f7c4d3fe91f7984341e240cfa3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccc191454304cc64798585fc0c903f54f355d50b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccc191454304cc64798585fc0c903f54f355d50b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccc191454304cc64798585fc0c903f54f355d50b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccc191454304cc64798585fc0c903f54f355d50b/comments", "author": null, "committer": null, "parents": [{"sha": "3a32a8ad7c7dba090cdde6d707fdfc4f4ba520d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a32a8ad7c7dba090cdde6d707fdfc4f4ba520d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a32a8ad7c7dba090cdde6d707fdfc4f4ba520d2"}], "stats": {"total": 170, "additions": 169, "deletions": 1}, "files": [{"sha": "eeedef321a421b4beb03edd8a6f0d67db7b3a539", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc191454304cc64798585fc0c903f54f355d50b/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc191454304cc64798585fc0c903f54f355d50b/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=ccc191454304cc64798585fc0c903f54f355d50b", "patch": "@@ -1,3 +1,8 @@\n+2021-08-26  Martin Liska  <mliska@suse.cz>\n+\n+\t* mklog.py: Use file.{source,target}_file for proper rename\n+\thandling.\n+\n 2021-08-24  Andrew Pinski  <apinski@marvell.com>\n \n \tPR other/82704"}, {"sha": "4e7991e29f8d53edcdd52f3e62ca7f6d177c3072", "filename": "gcc/ChangeLog", "status": "modified", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc191454304cc64798585fc0c903f54f355d50b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc191454304cc64798585fc0c903f54f355d50b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ccc191454304cc64798585fc0c903f54f355d50b", "patch": "@@ -1,3 +1,99 @@\n+2021-08-26  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*btr<mode>_1): Call force_reg unconditionally.\n+\t(conditional moves with memory inputs splitters): Ditto.\n+\t* config/i386/sse.md (one_cmpl<mode>2): Simplify.\n+\n+2021-08-26  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-modref-tree.h (modref_access_node::try_merge_with): Restart\n+\tsearch after merging.\n+\n+2021-08-26  Bill Schmidt  <wschmidt@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000-overload.def: Add remaining overloads.\n+\n+2021-08-26  Bill Schmidt  <wschmidt@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000-builtin-new.def: Add cell stanza.\n+\n+2021-08-26  Bill Schmidt  <wschmidt@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000-builtin-new.def: Add ieee128-hw, dfp,\n+\tcrypto, and htm stanzas.\n+\n+2021-08-26  Bill Schmidt  <wschmidt@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000-builtin-new.def: Add mma stanza.\n+\n+2021-08-26  Martin Sebor  <msebor@redhat.com>\n+\n+\t* tree-ssa-uninit.c (warn_uninit): Refactor and simplify.\n+\t(warn_uninit_phi_uses): Remove argument from calls to warn_uninit.\n+\t(warn_uninitialized_vars): Same.  Reduce visibility of locals.\n+\t(warn_uninitialized_phi): Same.\n+\n+2021-08-26  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* tree-ssa-ccp.c (get_individual_bits): Helper function to\n+\textract the individual bits from a widest_int constant (mask).\n+\t(gray_code_bit_flips): New read-only table for effiently\n+\tenumerating permutations/combinations of bits.\n+\t(bit_value_binop) [LROTATE_EXPR, RROTATE_EXPR]: Handle rotates\n+\tby unknown counts that are guaranteed less than the target\n+\tprecision and four or fewer unknown bits by enumeration.\n+\t[LSHIFT_EXPR, RSHIFT_EXPR]: Likewise, also handle shifts by\n+\tenumeration under the same conditions.  Handle remaining\n+\tshifts as a mask based upon the minimum possible shift value.\n+\n+2021-08-26  Roger Sayle  <roger@nextmovesoftware.com>\n+\t    Richard Biener  <rguenther@suse.de>\n+\n+\t* match.pd (shift transformations): Remove a redundant\n+\t!POINTER_TYPE_P check.\n+\n+2021-08-26  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/102057\n+\t* config/i386/i386.md (cmove reg-reg move elimination peephole2s):\n+\tSet all_regs to true in the call to replace_rtx.\n+\n+2021-08-26  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-modref-tree.c (test_insert_search_collapse): Update test.\n+\t* ipa-modref-tree.h (modref_base_node::insert): Be smarter when\n+\thiting --param modref-max-refs limit.\n+\t(modref_tree:insert_base): Be smarter when hitting\n+\t--param modref-max-bases limit. Add new parameter REF.\n+\t(modref_tree:insert): Update.\n+\t(modref_tree:merge): Update.\n+\t* ipa-modref.c (read_modref_records): Update.\n+\n+2021-08-26  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* params.opt: (modref-max-adjustments): Add full stop.\n+\n+2021-08-26  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-modref-tree.h (modref_ref_node::verify): New member\n+\tfunctoin.\n+\t(modref_ref_node::insert): Use it.\n+\t(modref_ref_node::try_mere_with): Fix off by one error.\n+\n+2021-08-26  Martin Liska  <mliska@suse.cz>\n+\t    Stefan Kneifel  <stefan.kneifel@bluewin.ch>\n+\n+\t* cgraph.h (create_version_clone_with_body): Add new parameter.\n+\t* cgraphclones.c: Likewise.\n+\t* multiple_target.c (create_dispatcher_calls): Do not use\n+\tnumbered suffixes.\n+\t(create_target_clone): Likewise here.\n+\n+2021-08-26  Jonathan Yong  <10walls@gmail.com>\n+\n+\t* doc/extend.texi: Add note about reserved priorities\n+\tto the constructor attribute.\n+\n 2021-08-25  Martin Sebor  <msebor@redhat.com>\n \n \t* gimple-range-cache.cc (ssa_global_cache::dump): Avoid printing"}, {"sha": "ac2bf5d4107616d7e632109c32f65b24ab5c66f8", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc191454304cc64798585fc0c903f54f355d50b/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc191454304cc64798585fc0c903f54f355d50b/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=ccc191454304cc64798585fc0c903f54f355d50b", "patch": "@@ -1 +1 @@\n-20210826\n+20210827"}, {"sha": "9d28b02e85adab9751eee0e2e24ea1f9d2ef1986", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc191454304cc64798585fc0c903f54f355d50b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc191454304cc64798585fc0c903f54f355d50b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ccc191454304cc64798585fc0c903f54f355d50b", "patch": "@@ -1,3 +1,15 @@\n+2021-08-26  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* gcc.dg/tree-ssa/ssa-ccp-41.c: New test case.\n+\n+2021-08-26  Martin Liska  <mliska@suse.cz>\n+\t    Stefan Kneifel  <stefan.kneifel@bluewin.ch>\n+\n+\t* gcc.target/i386/mvc5.c: Scan assembly names.\n+\t* gcc.target/i386/mvc7.c: Likewise.\n+\t* gcc.target/i386/pr95778-1.c: Update scanned patterns.\n+\t* gcc.target/i386/pr95778-2.c: Likewise.\n+\n 2021-08-25  Martin Sebor  <msebor@redhat.com>\n \n \t* gcc.dg/tree-ssa/evrp1.c: Add -details to dump option."}, {"sha": "e47baded809871cb65664d06048f6b08d16e0eb5", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc191454304cc64798585fc0c903f54f355d50b/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc191454304cc64798585fc0c903f54f355d50b/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=ccc191454304cc64798585fc0c903f54f355d50b", "patch": "@@ -1,3 +1,16 @@\n+2021-08-26  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* config/rs6000/ibm-ldouble.c (ldouble_qadd_internal): Rename from\n+\t__gcc_qadd.\n+\t(__gcc_qadd): Call ldouble_qadd_internal.\n+\t(__gcc_qsub): Call ldouble_qadd_internal with second long double\n+\targument negated.\n+\n+2021-08-26  Jonathan Yong  <10walls@gmail.com>\n+\n+\t* config/i386/cygming-crtend.c: Fix register_frame_ctor\n+\tand register_frame_dtor warnings.\n+\n 2021-08-24  Richard Earnshaw  <rearnsha@arm.com>\n \n \tPR target/102035"}, {"sha": "754348062632e444eb8e512ff6a648293b4e7800", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc191454304cc64798585fc0c903f54f355d50b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc191454304cc64798585fc0c903f54f355d50b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ccc191454304cc64798585fc0c903f54f355d50b", "patch": "@@ -1,3 +1,45 @@\n+2021-08-26  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/std_function.h (function): Adjust doxygen\n+\tcomments.\n+\t* include/bits/unique_ptr.h (make_unique_for_overwrite):\n+\tChange parameter name to match doxygen comment.\n+\n+2021-08-26  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/std_function.h (_function_base::_Base_manager):\n+\tReplace _M_init_functor with a function template using a\n+\tforwarding reference, and a pair of _M_create function\n+\ttemplates. Reuse _M_create for the clone operation.\n+\t(function::_Decay_t): New alias template.\n+\t(function::_Callable): Simplify by using _Decay.\n+\t(function::function(F)): Change parameter to forwarding\n+\treference, as per LWG 2447. Add noexcept-specifier. Simplify\n+\tconstraints.\n+\t(function::operator=(F&&)): Add noexcept-specifier.\n+\t* testsuite/20_util/function/cons/lwg2774.cc: New test.\n+\t* testsuite/20_util/function/cons/noexcept.cc: New test.\n+\n+2021-08-26  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/std_function.h (function::function(F)): Add\n+\tstatic assertions to check constructibility requirements.\n+\n+2021-08-26  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/100285\n+\t* configure.ac: Check for O_NONBLOCK.\n+\t* configure: Regenerate.\n+\t* include/experimental/internet: Include <ws2tcpip.h> for\n+\tWindows.  Use preprocessor conditions around more constants.\n+\t* include/experimental/socket: Use preprocessor conditions\n+\taround more constants.\n+\t* testsuite/experimental/net/internet/resolver/base.cc: Only use\n+\tconstants when the corresponding C macro is defined.\n+\t* testsuite/experimental/net/socket/basic_socket.cc: Likewise.\n+\t* testsuite/experimental/net/socket/socket_base.cc: Likewise.\n+\tMake preprocessor checks more fine-grained.\n+\n 2021-08-25  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* testsuite/17_intro/names.cc: Check 'sz'."}]}