{"sha": "5d3b46d6cf5f15933a59f9f5fc623d7605ba0122", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQzYjQ2ZDZjZjVmMTU5MzNhNTlmOWY1ZmM2MjNkNzYwNWJhMDEyMg==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-06-19T13:58:02Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-06-19T13:58:02Z"}, "message": "vshl_n.c: New file.\n\n2015-06-19  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vshl_n.c: New file.\n\nFrom-SVN: r224663", "tree": {"sha": "71b9719873a771f853f1a87ab60e55f3966ba492", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71b9719873a771f853f1a87ab60e55f3966ba492"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d3b46d6cf5f15933a59f9f5fc623d7605ba0122", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d3b46d6cf5f15933a59f9f5fc623d7605ba0122", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d3b46d6cf5f15933a59f9f5fc623d7605ba0122", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d3b46d6cf5f15933a59f9f5fc623d7605ba0122/comments", "author": null, "committer": null, "parents": [{"sha": "edd3deac48d739604326f787a2cf6560cbd6f4ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edd3deac48d739604326f787a2cf6560cbd6f4ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edd3deac48d739604326f787a2cf6560cbd6f4ff"}], "stats": {"total": 100, "additions": 100, "deletions": 0}, "files": [{"sha": "2309d68789b028e7f978dd468e9208c718c95945", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d3b46d6cf5f15933a59f9f5fc623d7605ba0122/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d3b46d6cf5f15933a59f9f5fc623d7605ba0122/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5d3b46d6cf5f15933a59f9f5fc623d7605ba0122", "patch": "@@ -1,3 +1,7 @@\n+2015-06-19  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vshl_n.c: New file.\n+\n 2015-06-19  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vshll_n.c: New file."}, {"sha": "d807ebbfdbceca64abc7257ec3941d1f2d637250", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vshl_n.c", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d3b46d6cf5f15933a59f9f5fc623d7605ba0122/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvshl_n.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d3b46d6cf5f15933a59f9f5fc623d7605ba0122/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvshl_n.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvshl_n.c?ref=5d3b46d6cf5f15933a59f9f5fc623d7605ba0122", "patch": "@@ -0,0 +1,96 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,8,8) [] = { 0xe0, 0xe2, 0xe4, 0xe6,\n+\t\t\t\t       0xe8, 0xea, 0xec, 0xee };\n+VECT_VAR_DECL(expected,int,16,4) [] = { 0xffe0, 0xffe2, 0xffe4, 0xffe6 };\n+VECT_VAR_DECL(expected,int,32,2) [] = { 0xffffff80, 0xffffff88 };\n+VECT_VAR_DECL(expected,int,64,1) [] = { 0xffffffffffffffc0 };\n+VECT_VAR_DECL(expected,uint,8,8) [] = { 0xc0, 0xc4, 0xc8, 0xcc,\n+\t\t\t\t\t0xd0, 0xd4, 0xd8, 0xdc };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0xff00, 0xff10, 0xff20, 0xff30 };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0xffffff80, 0xffffff88 };\n+VECT_VAR_DECL(expected,uint,64,1) [] = { 0xffffffffffffffe0 };\n+VECT_VAR_DECL(expected,int,8,16) [] = { 0x0, 0x20, 0x40, 0x60,\n+\t\t\t\t\t0x80, 0xa0, 0xc0, 0xe0,\n+\t\t\t\t\t0x0, 0x20, 0x40, 0x60,\n+\t\t\t\t\t0x80, 0xa0, 0xc0, 0xe0 };\n+VECT_VAR_DECL(expected,int,16,8) [] = { 0xffe0, 0xffe2, 0xffe4, 0xffe6,\n+\t\t\t\t\t0xffe8, 0xffea, 0xffec, 0xffee };\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0xffffffc0, 0xffffffc4,\n+\t\t\t\t\t0xffffffc8, 0xffffffcc };\n+VECT_VAR_DECL(expected,int,64,2) [] = { 0xffffffffffffffc0, 0xffffffffffffffc4 };\n+VECT_VAR_DECL(expected,uint,8,16) [] = { 0xc0, 0xc4, 0xc8, 0xcc,\n+\t\t\t\t\t 0xd0, 0xd4, 0xd8, 0xdc,\n+\t\t\t\t\t 0xe0, 0xe4, 0xe8, 0xec,\n+\t\t\t\t\t 0xf0, 0xf4, 0xf8, 0xfc };\n+VECT_VAR_DECL(expected,uint,16,8) [] = { 0xff80, 0xff88, 0xff90, 0xff98,\n+\t\t\t\t\t 0xffa0, 0xffa8, 0xffb0, 0xffb8 };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0xffffffc0, 0xffffffc4,\n+\t\t\t\t\t 0xffffffc8, 0xffffffcc };\n+VECT_VAR_DECL(expected,uint,64,2) [] = { 0xffffffffffffffe0,\n+\t\t\t\t\t 0xffffffffffffffe2 };\n+\n+#define TEST_MSG \"VSHL_N\"\n+void exec_vshl_n (void)\n+{\n+  /* Basic test: v2=vshl_n(v1,v), then store the result.  */\n+#define TEST_VSHL_N(Q, T1, T2, W, N, V)\t\t\t\t\t\\\n+  VECT_VAR(vector_res, T1, W, N) =\t\t\t\t\t\\\n+    vshl##Q##_n_##T2##W(VECT_VAR(vector, T1, W, N),\t\t\t\\\n+\t\t\tV);\t\t\t\t\t\t\\\n+  vst1##Q##_##T2##W(VECT_VAR(result, T1, W, N), VECT_VAR(vector_res, T1, W, N))\n+\n+  DECL_VARIABLE_ALL_VARIANTS(vector);\n+  DECL_VARIABLE_ALL_VARIANTS(vector_res);\n+\n+  clean_results ();\n+\n+  /* Initialize input \"vector\" from \"buffer\".  */\n+  TEST_MACRO_ALL_VARIANTS_2_5(VLOAD, vector, buffer);\n+\n+  /* Choose shift amount arbitrarily.  */\n+  TEST_VSHL_N(, int, s, 8, 8, 1);\n+  TEST_VSHL_N(, int, s, 16, 4, 1);\n+  TEST_VSHL_N(, int, s, 32, 2, 3);\n+  TEST_VSHL_N(, int, s, 64, 1, 2);\n+  TEST_VSHL_N(, uint, u, 8, 8, 2);\n+  TEST_VSHL_N(, uint, u, 16, 4, 4);\n+  TEST_VSHL_N(, uint, u, 32, 2, 3);\n+  TEST_VSHL_N(, uint, u, 64, 1, 1);\n+\n+  TEST_VSHL_N(q, int, s, 8, 16, 5);\n+  TEST_VSHL_N(q, int, s, 16, 8, 1);\n+  TEST_VSHL_N(q, int, s, 32, 4, 2);\n+  TEST_VSHL_N(q, int, s, 64, 2, 2);\n+  TEST_VSHL_N(q, uint, u, 8, 16, 2);\n+  TEST_VSHL_N(q, uint, u, 16, 8, 3);\n+  TEST_VSHL_N(q, uint, u, 32, 4, 2);\n+  TEST_VSHL_N(q, uint, u, 64, 2, 1);\n+\n+#define CMT \"\"\n+  CHECK(TEST_MSG, int, 8, 8, PRIx8, expected, CMT);\n+  CHECK(TEST_MSG, int, 16, 4, PRIx16, expected, CMT);\n+  CHECK(TEST_MSG, int, 32, 2, PRIx32, expected, CMT);\n+  CHECK(TEST_MSG, int, 64, 1, PRIx64, expected, CMT);\n+  CHECK(TEST_MSG, uint, 8, 8, PRIx8, expected, CMT);\n+  CHECK(TEST_MSG, uint, 16, 4, PRIx16, expected, CMT);\n+  CHECK(TEST_MSG, uint, 32, 2, PRIx32, expected, CMT);\n+  CHECK(TEST_MSG, uint, 64, 1, PRIx64, expected, CMT);\n+  CHECK(TEST_MSG, int, 8, 16, PRIx8, expected, CMT);\n+  CHECK(TEST_MSG, int, 16, 8, PRIx16, expected, CMT);\n+  CHECK(TEST_MSG, int, 32, 4, PRIx32, expected, CMT);\n+  CHECK(TEST_MSG, int, 64, 2, PRIx64, expected, CMT);\n+  CHECK(TEST_MSG, uint, 8, 16, PRIx8, expected, CMT);\n+  CHECK(TEST_MSG, uint, 16, 8, PRIx16, expected, CMT);\n+  CHECK(TEST_MSG, uint, 32, 4, PRIx32, expected, CMT);\n+  CHECK(TEST_MSG, uint, 64, 2, PRIx64, expected, CMT);\n+}\n+\n+int main (void)\n+{\n+  exec_vshl_n ();\n+  return 0;\n+}"}]}