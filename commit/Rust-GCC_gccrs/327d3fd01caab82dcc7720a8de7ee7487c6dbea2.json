{"sha": "327d3fd01caab82dcc7720a8de7ee7487c6dbea2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI3ZDNmZDAxY2FhYjgyZGNjNzcyMGE4ZGU3ZWU3NDg3YzZkYmVhMg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2019-08-08T22:15:40Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2019-08-08T22:15:40Z"}, "message": "decl.c (grokdeclarator): Use id_loc and EXPR_LOCATION in a few error messages.\n\n/cp\n2019-08-08  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* decl.c (grokdeclarator): Use id_loc and EXPR_LOCATION in\n\ta few error messages.\n\n/testsuite\n2019-08-08  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* g++.dg/cpp0x/enum20.C: Test location(s) too.\n\t* g++.dg/other/friend3.C: Likewise.\n\t* g++.dg/parse/dtor5.C: Likewise.\n\t* g++.dg/parse/friend7.C: Likewise.\n\t* g++.dg/template/error22.C: Likewise.\n\t* g++.old-deja/g++.brendan/err-msg5.C: Likewise.\n\nFrom-SVN: r274220", "tree": {"sha": "563edd9955686b1c80806df365ab9bd10c462096", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/563edd9955686b1c80806df365ab9bd10c462096"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/327d3fd01caab82dcc7720a8de7ee7487c6dbea2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/327d3fd01caab82dcc7720a8de7ee7487c6dbea2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/327d3fd01caab82dcc7720a8de7ee7487c6dbea2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/327d3fd01caab82dcc7720a8de7ee7487c6dbea2/comments", "author": null, "committer": null, "parents": [{"sha": "be15aa901d7d259f2eda238157c55c733af583e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be15aa901d7d259f2eda238157c55c733af583e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be15aa901d7d259f2eda238157c55c733af583e5"}], "stats": {"total": 59, "additions": 39, "deletions": 20}, "files": [{"sha": "5b0bf2b62b8cd8c13f56b99e2a8bc793bc17c318", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/327d3fd01caab82dcc7720a8de7ee7487c6dbea2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/327d3fd01caab82dcc7720a8de7ee7487c6dbea2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=327d3fd01caab82dcc7720a8de7ee7487c6dbea2", "patch": "@@ -1,3 +1,8 @@\n+2019-08-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* decl.c (grokdeclarator): Use id_loc and EXPR_LOCATION in\n+\ta few error messages.\n+\n 2019-08-08  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/87519 - bogus warning with -Wsign-conversion."}, {"sha": "b8806e4628d92e1b0b458699497b63c153a32b29", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/327d3fd01caab82dcc7720a8de7ee7487c6dbea2/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/327d3fd01caab82dcc7720a8de7ee7487c6dbea2/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=327d3fd01caab82dcc7720a8de7ee7487c6dbea2", "patch": "@@ -10579,7 +10579,8 @@ grokdeclarator (const cp_declarator *declarator,\n \t\t    ctype = qualifying_scope;\n \t\t    if (!MAYBE_CLASS_TYPE_P (ctype))\n \t\t      {\n-\t\t\terror (\"%q#T is not a class or a namespace\", ctype);\n+\t\t\terror_at (id_declarator->id_loc,\n+\t\t\t\t  \"%q#T is not a class or namespace\", ctype);\n \t\t\tctype = NULL_TREE;\n \t\t      }\n \t\t    else if (innermost_code != cdk_function\n@@ -10601,13 +10602,15 @@ grokdeclarator (const cp_declarator *declarator,\n \t\t{\n \t\t  if (innermost_code != cdk_function)\n \t\t    {\n-\t\t      error (\"declaration of %qD as non-function\", decl);\n+\t\t      error_at (EXPR_LOCATION (decl),\n+\t\t\t\t\"declaration of %qE as non-function\", decl);\n \t\t      return error_mark_node;\n \t\t    }\n \t\t  else if (!qualifying_scope\n \t\t\t   && !(current_class_type && at_class_scope_p ()))\n \t\t    {\n-\t\t      error (\"declaration of %qD as non-member\", decl);\n+\t\t      error_at (EXPR_LOCATION (decl),\n+\t\t\t\t\"declaration of %qE as non-member\", decl);\n \t\t      return error_mark_node;\n \t\t    }\n \n@@ -12510,7 +12513,7 @@ grokdeclarator (const cp_declarator *declarator,\n \telse if (in_namespace && !friendp)\n \t  {\n \t    /* Something like struct S { int N::j; };  */\n-\t    error (\"invalid use of %<::%>\");\n+\t    error_at (id_loc, \"invalid use of %<::%>\");\n \t    return error_mark_node;\n \t  }\n \telse if (FUNC_OR_METHOD_TYPE_P (type) && unqualified_id)\n@@ -12565,15 +12568,15 @@ grokdeclarator (const cp_declarator *declarator,\n \t\tif (!ctype)\n \t\t  {\n \t\t    gcc_assert (friendp);\n-\t\t    error (\"expected qualified name in friend declaration \"\n-\t\t\t   \"for destructor %qD\", uqname);\n+\t\t    error_at (id_loc, \"expected qualified name in friend \"\n+\t\t\t      \"declaration for destructor %qD\", uqname);\n \t\t    return error_mark_node;\n \t\t  }\n \n \t\tif (!check_dtor_name (ctype, TREE_OPERAND (uqname, 0)))\n \t\t  {\n-\t\t    error (\"declaration of %qD as member of %qT\",\n-\t\t\t   uqname, ctype);\n+\t\t    error_at (id_loc, \"declaration of %qD as member of %qT\",\n+\t\t\t      uqname, ctype);\n \t\t    return error_mark_node;\n \t\t  }\n                 if (concept_p)"}, {"sha": "6d49b6d61cb1295ca6d2919b553b8a24d772d04c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/327d3fd01caab82dcc7720a8de7ee7487c6dbea2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/327d3fd01caab82dcc7720a8de7ee7487c6dbea2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=327d3fd01caab82dcc7720a8de7ee7487c6dbea2", "patch": "@@ -1,3 +1,12 @@\n+2019-08-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* g++.dg/cpp0x/enum20.C: Test location(s) too.\n+\t* g++.dg/other/friend3.C: Likewise.\n+\t* g++.dg/parse/dtor5.C: Likewise.\n+\t* g++.dg/parse/friend7.C: Likewise.\n+\t* g++.dg/template/error22.C: Likewise.\n+\t* g++.old-deja/g++.brendan/err-msg5.C: Likewise.\n+\n 2019-08-08  Jim Wilson  <jimw@sifive.com>\n \n \tPR target/91229"}, {"sha": "f39933ac4eadc00c184d88d80ac1b33b771bed10", "filename": "gcc/testsuite/g++.dg/cpp0x/enum20.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/327d3fd01caab82dcc7720a8de7ee7487c6dbea2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/327d3fd01caab82dcc7720a8de7ee7487c6dbea2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum20.C?ref=327d3fd01caab82dcc7720a8de7ee7487c6dbea2", "patch": "@@ -2,4 +2,4 @@\n // { dg-do compile { target c++11 } }\n \n enum A { };\n-void A::f() { }\t\t\t// { dg-error \"not a class\" }\n+void A::f() { }\t\t\t// { dg-error \"6:.enum A. is not a class\" }"}, {"sha": "cf746062a6b3be31f0d03205a2c0b4d0392081cc", "filename": "gcc/testsuite/g++.dg/other/friend3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/327d3fd01caab82dcc7720a8de7ee7487c6dbea2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffriend3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/327d3fd01caab82dcc7720a8de7ee7487c6dbea2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffriend3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffriend3.C?ref=327d3fd01caab82dcc7720a8de7ee7487c6dbea2", "patch": "@@ -4,10 +4,10 @@\n \n struct A\n {\n-  friend ~A();  // { dg-error \"qualified name\" }\n+  friend ~A();  // { dg-error \"10:expected qualified name\" }\n };\n \n struct B\n {\n-  friend ~A();  // { dg-error \"qualified name\" }\n+  friend ~A();  // { dg-error \"10:expected qualified name\" }\n };"}, {"sha": "3cb569accf4d1fd49ae3d985e28b463667ccaa67", "filename": "gcc/testsuite/g++.dg/parse/dtor5.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/327d3fd01caab82dcc7720a8de7ee7487c6dbea2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdtor5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/327d3fd01caab82dcc7720a8de7ee7487c6dbea2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdtor5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdtor5.C?ref=327d3fd01caab82dcc7720a8de7ee7487c6dbea2", "patch": "@@ -1,12 +1,12 @@\n // PR c++/19732\n \n struct A;\n-typedef int ~A; // { dg-error \"non-function\" }\n+typedef int ~A; // { dg-error \"13:declaration of .~ A. as non-function\" }\n struct B { \n-  ~A(); // { dg-error \"\" }\n-  typedef int ~A; // { dg-error \"non-function\" }\n+  ~A(); // { dg-error \"3:declaration of .~A. as member of .B.\" }\n+  typedef int ~A; // { dg-error \"15:declaration of .~ A. as non-function\" }\n   void f() {\n-    extern ~B(); // { dg-error \"non-member\" }\n+    extern ~B(); // { dg-error \"12:declaration of .~ B. as non-member\" }\n   }\n };\n-void ~A(); // { dg-error \"non-member\" }\n+void ~A(); // { dg-error \"6:declaration of .~ A. as non-member\" }"}, {"sha": "19e31795c247d9d74a4326556a4163689503fb22", "filename": "gcc/testsuite/g++.dg/parse/friend7.C", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/327d3fd01caab82dcc7720a8de7ee7487c6dbea2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffriend7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/327d3fd01caab82dcc7720a8de7ee7487c6dbea2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffriend7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffriend7.C?ref=327d3fd01caab82dcc7720a8de7ee7487c6dbea2", "patch": "@@ -19,14 +19,16 @@ struct B\n struct C\n {\n   friend int C ();\n-  friend int ~C ();\t\t// { dg-error \"return type|in friend decl\" }\n+  friend int ~C ();\t\t// { dg-error \"10:return type\" }\n+  // { dg-error \"14:expected qualified name in friend decl\" \"\" { target *-*-* } .-1 }\n   friend int C (const C &);\n };\n \n struct D\n {\n   friend int D () {}\n-  friend int ~D () {}\t\t// { dg-error \"return type|in friend decl\" }\n+  friend int ~D () {}\t\t// { dg-error \"10:return type\" }\n+  // { dg-error \"14:expected qualified name in friend decl\" \"\" { target *-*-* } .-1 }\n   friend int D (const D &) {}\n };\n "}, {"sha": "a7e6172111351381c79b9838830db052f8e088e3", "filename": "gcc/testsuite/g++.dg/template/error22.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/327d3fd01caab82dcc7720a8de7ee7487c6dbea2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/327d3fd01caab82dcc7720a8de7ee7487c6dbea2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror22.C?ref=327d3fd01caab82dcc7720a8de7ee7487c6dbea2", "patch": "@@ -3,7 +3,7 @@\n struct A\n {\n     template<void (A::*)()> struct B {};\n-    void ::foo(); // { dg-error \"invalid use\" }\n+    void ::foo(); // { dg-error \"10:invalid use\" }\n     B<&A::foo> b; // { dg-error \"incomplete type|template argument\" }\n };\n  "}, {"sha": "460d65c0e21fea04e0c6e17a139e00e544341683", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/err-msg5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/327d3fd01caab82dcc7720a8de7ee7487c6dbea2/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ferr-msg5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/327d3fd01caab82dcc7720a8de7ee7487c6dbea2/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ferr-msg5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ferr-msg5.C?ref=327d3fd01caab82dcc7720a8de7ee7487c6dbea2", "patch": "@@ -1,4 +1,4 @@\n // { dg-do assemble  }\n // GROUPS passed error-messages\n class foo {};\n-~foo () {}// { dg-error \"\" }  destructors must be member functions.*\n+~foo () {}// { dg-error \"1:declaration of .~ foo. as non-member\" }  destructors must be member functions.*"}]}