{"sha": "1ea0e674b0a0ec75772a74783ad0d21454cd5d86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVhMGU2NzRiMGEwZWM3NTc3MmE3NDc4M2FkMGQyMTQ1NGNkNWQ4Ng==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2015-06-22T13:54:58Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-06-22T13:54:58Z"}, "message": "re PR target/65871 (bzhi builtin/intrinsic wrongly assumes bzhi instruction doesn't set the ZF flag)\n\n\tPR target/65871\n\t* config/i386/i386.c (ix86_rtx_costs) <case COMPARE>: Ignore the\n\tcost of embedded comparison.\n\nFrom-SVN: r224729", "tree": {"sha": "0294df52dbc5b8fa09835d831ac7134df532946e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0294df52dbc5b8fa09835d831ac7134df532946e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ea0e674b0a0ec75772a74783ad0d21454cd5d86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ea0e674b0a0ec75772a74783ad0d21454cd5d86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ea0e674b0a0ec75772a74783ad0d21454cd5d86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ea0e674b0a0ec75772a74783ad0d21454cd5d86/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8f77aa9086f8172d87abf955a95bfbfb87440a26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f77aa9086f8172d87abf955a95bfbfb87440a26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f77aa9086f8172d87abf955a95bfbfb87440a26"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "6ca98cf10f710a72532b301403d8708a853a0865", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea0e674b0a0ec75772a74783ad0d21454cd5d86/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea0e674b0a0ec75772a74783ad0d21454cd5d86/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1ea0e674b0a0ec75772a74783ad0d21454cd5d86", "patch": "@@ -1,3 +1,9 @@\n+2015-06-22  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/65871\n+\t* config/i386/i386.c (ix86_rtx_costs) <case COMPARE>: Ignore the\n+\tcost of embedded comparison.\n+\n 2015-06-22  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR target/65914"}, {"sha": "2df91c48d4ddb34795501bc46d3cd5dbf6791a37", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea0e674b0a0ec75772a74783ad0d21454cd5d86/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea0e674b0a0ec75772a74783ad0d21454cd5d86/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=1ea0e674b0a0ec75772a74783ad0d21454cd5d86", "patch": "@@ -42531,6 +42531,12 @@ ix86_rtx_costs (rtx x, int code_i, int outer_code_i, int opno, int *total,\n \t\t    + rtx_cost (const1_rtx, outer_code, opno, speed));\n \t  return true;\n \t}\n+\n+      /* The embedded comparison operand is completely free.  */\n+      if (!general_operand (XEXP (x, 0), GET_MODE (XEXP (x, 0)))\n+\t  && XEXP (x, 1) == const0_rtx)\n+\t*total = 0;\n+\n       return false;\n \n     case FLOAT_EXTEND:"}]}