{"sha": "71860b0f615a6edf7fc9f327699d17f7d27d6665", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE4NjBiMGY2MTVhNmVkZjdmYzlmMzI3Njk5ZDE3ZjdkMjdkNjY2NQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2006-05-30T23:50:03Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2006-05-30T23:50:03Z"}, "message": "stacktrace.cc (_Jv_StackTrace::UpdateNCodeMap): Don't add interpreted classes.\n\n\t* stacktrace.cc (_Jv_StackTrace::UpdateNCodeMap): Don't add\n\tinterpreted classes.\n\nFrom-SVN: r114253", "tree": {"sha": "c2080ba5a5023c011534f4bcbf42ebbe01e7c381", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2080ba5a5023c011534f4bcbf42ebbe01e7c381"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71860b0f615a6edf7fc9f327699d17f7d27d6665", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71860b0f615a6edf7fc9f327699d17f7d27d6665", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71860b0f615a6edf7fc9f327699d17f7d27d6665", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71860b0f615a6edf7fc9f327699d17f7d27d6665/comments", "author": null, "committer": null, "parents": [{"sha": "7074ea72d10e861505f70e2e12060c3909474bf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7074ea72d10e861505f70e2e12060c3909474bf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7074ea72d10e861505f70e2e12060c3909474bf7"}], "stats": {"total": 37, "additions": 20, "deletions": 17}, "files": [{"sha": "f47401c9018fd037471864290588a55bab9874cb", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71860b0f615a6edf7fc9f327699d17f7d27d6665/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71860b0f615a6edf7fc9f327699d17f7d27d6665/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=71860b0f615a6edf7fc9f327699d17f7d27d6665", "patch": "@@ -1,3 +1,8 @@\n+2006-05-31  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* stacktrace.cc (_Jv_StackTrace::UpdateNCodeMap): Don't add\n+\tinterpreted classes.\n+\n 2006-05-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n \n \t* scripts/makemake.tcl (emit_bc_rule): Do not skip"}, {"sha": "6423bbd87022d3b1018593727e2b1e6e22548732", "filename": "libjava/stacktrace.cc", "status": "modified", "additions": 15, "deletions": 17, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71860b0f615a6edf7fc9f327699d17f7d27d6665/libjava%2Fstacktrace.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71860b0f615a6edf7fc9f327699d17f7d27d6665/libjava%2Fstacktrace.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fstacktrace.cc?ref=71860b0f615a6edf7fc9f327699d17f7d27d6665", "patch": "@@ -55,23 +55,21 @@ _Jv_StackTrace::UpdateNCodeMap ()\n   \n   jclass klass;\n   while ((klass = _Jv_PopClass ()))\n-    {\n-      //printf (\"got %s\\n\", klass->name->data);\n-#ifdef INTERPRETER\n-      JvAssert (! _Jv_IsInterpretedClass (klass));\n-#endif\n-      for (int i=0; i < klass->method_count; i++)\n-        {\n-\t  _Jv_Method *method = &klass->methods[i];\n-\t  void *ncode = method->ncode;\n-\t  // Add non-abstract methods to ncodeMap.\n-\t  if (ncode)\n-\t    {\n-\t      ncode = UNWRAP_FUNCTION_DESCRIPTOR (ncode);\n-\t      ncodeMap->put ((java::lang::Object *)ncode, klass);\n-\t    }\n-\t}\n-    }\n+    if (!_Jv_IsInterpretedClass (klass))\n+      {\n+\t//printf (\"got %s\\n\", klass->name->data);\n+\tfor (int i = 0; i < klass->method_count; i++)\n+\t  {\n+\t    _Jv_Method *method = &klass->methods[i];\n+\t    void *ncode = method->ncode;\n+\t    // Add non-abstract methods to ncodeMap.\n+\t    if (ncode)\n+\t      {\n+\t\tncode = UNWRAP_FUNCTION_DESCRIPTOR (ncode);\n+\t\tncodeMap->put ((java::lang::Object *) ncode, klass);\n+\t      }\n+\t  }\n+      }\n }\n \n // Given a native frame, return the class which this code belongs "}]}