{"sha": "8a03f86937467dcfe401b4f369307faf2593e97a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGEwM2Y4NjkzNzQ2N2RjZmU0MDFiNGYzNjkzMDdmYWYyNTkzZTk3YQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2015-05-20T01:17:45Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2015-05-20T01:17:45Z"}, "message": "rs6000.c (struct rs6000_stack): Correct comments.\n\n\t* config/rs6000/rs6000.c (struct rs6000_stack): Correct comments.\n\t(rs6000_stack_info): Don't zero offsets when not saving registers.\n\t(debug_stack_info): Adjust to omit printing unused offsets,\n\tas before.\n\t(direct_return): Test vrsave_size rather than vrsave_mask.\n\t(rs6000_emit_prologue): Likewise.  Remove redundant altivec tests.\n\t(rs6000_emit_epilogue): Likewise.\n\nFrom-SVN: r223425", "tree": {"sha": "7475cbb0dd8851469f930e1509738716fd568cea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7475cbb0dd8851469f930e1509738716fd568cea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a03f86937467dcfe401b4f369307faf2593e97a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a03f86937467dcfe401b4f369307faf2593e97a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a03f86937467dcfe401b4f369307faf2593e97a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a03f86937467dcfe401b4f369307faf2593e97a/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8b07bbe71b2d28300773acb75bafd45a1ee6233f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b07bbe71b2d28300773acb75bafd45a1ee6233f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b07bbe71b2d28300773acb75bafd45a1ee6233f"}], "stats": {"total": 41, "additions": 21, "deletions": 20}, "files": [{"sha": "56b028d7c5334a4375b9d9b24bf09873f4541b5c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a03f86937467dcfe401b4f369307faf2593e97a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a03f86937467dcfe401b4f369307faf2593e97a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8a03f86937467dcfe401b4f369307faf2593e97a", "patch": "@@ -1,3 +1,13 @@\n+2015-05-20  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/rs6000/rs6000.c (struct rs6000_stack): Correct comments.\n+\t(rs6000_stack_info): Don't zero offsets when not saving registers.\n+\t(debug_stack_info): Adjust to omit printing unused offsets,\n+\tas before.\n+\t(direct_return): Test vrsave_size rather than vrsave_mask.\n+\t(rs6000_emit_prologue): Likewise.  Remove redundant altivec tests.\n+\t(rs6000_emit_epilogue): Likewise.\n+\n 2015-05-20  Alan Modra  <amodra@gmail.com>\n \n \t* config/rs6000/rs6000.c (rs6000_stack_info): Don't zero offsets"}, {"sha": "92ebd82fadc0d9d2f9ae2569c33b0367d01335f1", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 11, "deletions": 20, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a03f86937467dcfe401b4f369307faf2593e97a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a03f86937467dcfe401b4f369307faf2593e97a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=8a03f86937467dcfe401b4f369307faf2593e97a", "patch": "@@ -155,10 +155,9 @@ typedef struct rs6000_stack {\n   int gp_size;\t\t\t/* size of saved GP registers */\n   int fp_size;\t\t\t/* size of saved FP registers */\n   int altivec_size;\t\t/* size of saved AltiVec registers */\n-  int cr_size;\t\t\t/* size to hold CR if not in save_size */\n-  int vrsave_size;\t\t/* size to hold VRSAVE if not in save_size */\n-  int altivec_padding_size;\t/* size of altivec alignment padding if\n-\t\t\t\t   not in save_size */\n+  int cr_size;\t\t\t/* size to hold CR if not in fixed area */\n+  int vrsave_size;\t\t/* size to hold VRSAVE */\n+  int altivec_padding_size;\t/* size of altivec alignment padding */\n   int spe_gp_size;\t\t/* size of 64-bit GPR save size for SPE */\n   int spe_padding_size;\n   HOST_WIDE_INT total_size;\t/* total bytes allocated for stack */\n@@ -5206,7 +5205,7 @@ direct_return (void)\n \t  && info->first_altivec_reg_save == LAST_ALTIVEC_REGNO + 1\n \t  && ! info->lr_save_p\n \t  && ! info->cr_save_p\n-\t  && info->vrsave_mask == 0\n+\t  && info->vrsave_size == 0\n \t  && ! info->push_p)\n \treturn 1;\n     }\n@@ -23636,7 +23635,7 @@ rs6000_emit_prologue (void)\n \t       || info->first_fp_reg_save < 64\n \t       || info->first_gp_reg_save < 32\n \t       || info->altivec_size != 0\n-\t       || info->vrsave_mask != 0\n+\t       || info->vrsave_size != 0\n \t       || crtl->calls_eh_return)\n \tptr_regno = 12;\n       else\n@@ -24184,7 +24183,7 @@ rs6000_emit_prologue (void)\n \n   /* Save AltiVec registers if needed.  Save here because the red zone does\n      not always include AltiVec registers.  */\n-  if (!WORLD_SAVE_P (info) && TARGET_ALTIVEC_ABI\n+  if (!WORLD_SAVE_P (info)\n       && info->altivec_size != 0 && (strategy & SAVE_INLINE_VRS) == 0)\n     {\n       int end_save = info->altivec_save_offset + info->altivec_size;\n@@ -24220,7 +24219,7 @@ rs6000_emit_prologue (void)\n \t  frame_off = ptr_off;\n \t}\n     }\n-  else if (!WORLD_SAVE_P (info) && TARGET_ALTIVEC_ABI\n+  else if (!WORLD_SAVE_P (info)\n \t   && info->altivec_size != 0)\n     {\n       int i;\n@@ -24262,9 +24261,7 @@ rs6000_emit_prologue (void)\n      epilogue.  */\n \n   if (!WORLD_SAVE_P (info)\n-      && TARGET_ALTIVEC\n-      && TARGET_ALTIVEC_VRSAVE\n-      && info->vrsave_mask != 0)\n+      && info->vrsave_size != 0)\n     {\n       rtx reg, vrsave;\n       int offset;\n@@ -24826,8 +24823,7 @@ rs6000_emit_epilogue (int sibcall)\n \n   /* Restore AltiVec registers if we must do so before adjusting the\n      stack.  */\n-  if (TARGET_ALTIVEC_ABI\n-      && info->altivec_size != 0\n+  if (info->altivec_size != 0\n       && (ALWAYS_RESTORE_ALTIVEC_BEFORE_POP\n \t  || (DEFAULT_ABI != ABI_V4\n \t      && offset_below_red_zone_p (info->altivec_save_offset))))\n@@ -24914,9 +24910,7 @@ rs6000_emit_epilogue (int sibcall)\n     }\n \n   /* Restore VRSAVE if we must do so before adjusting the stack.  */\n-  if (TARGET_ALTIVEC\n-      && TARGET_ALTIVEC_VRSAVE\n-      && info->vrsave_mask != 0\n+  if (info->vrsave_size != 0\n       && (ALWAYS_RESTORE_ALTIVEC_BEFORE_POP\n \t  || (DEFAULT_ABI != ABI_V4\n \t      && offset_below_red_zone_p (info->vrsave_save_offset))))\n@@ -25010,7 +25004,6 @@ rs6000_emit_epilogue (int sibcall)\n \n   /* Restore AltiVec registers if we have not done so already.  */\n   if (!ALWAYS_RESTORE_ALTIVEC_BEFORE_POP\n-      && TARGET_ALTIVEC_ABI\n       && info->altivec_size != 0\n       && (DEFAULT_ABI == ABI_V4\n \t  || !offset_below_red_zone_p (info->altivec_save_offset)))\n@@ -25118,9 +25111,7 @@ rs6000_emit_epilogue (int sibcall)\n \n   /* Restore VRSAVE if we have not done so already.  */\n   if (!ALWAYS_RESTORE_ALTIVEC_BEFORE_POP\n-      && TARGET_ALTIVEC\n-      && TARGET_ALTIVEC_VRSAVE\n-      && info->vrsave_mask != 0\n+      && info->vrsave_size != 0\n       && (DEFAULT_ABI == ABI_V4\n \t  || !offset_below_red_zone_p (info->vrsave_save_offset)))\n     {"}]}