{"sha": "f88203b0110a3f85a5bf4c908dabe7f698653b67", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg4MjAzYjAxMTBhM2Y4NWE1YmY0YzkwOGRhYmU3ZjY5ODY1M2I2Nw==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-05-12T15:29:51Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-05-12T15:29:51Z"}, "message": "tree.c (build_constructor): Compute TREE_CONSTANT for the resultant constructor.\n\n\t* tree.c (build_constructor): Compute TREE_CONSTANT for the\n\tresultant constructor.\n\t(build_constructor_single): Don't set TREE_CONSTANT.\n\t(build_constructor_from_list): Don't compute TREE_CONSTANT.\n\nFrom-SVN: r159325", "tree": {"sha": "674958f9fa698bfd9971b8e167ef2c2deddadc4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/674958f9fa698bfd9971b8e167ef2c2deddadc4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f88203b0110a3f85a5bf4c908dabe7f698653b67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f88203b0110a3f85a5bf4c908dabe7f698653b67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f88203b0110a3f85a5bf4c908dabe7f698653b67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f88203b0110a3f85a5bf4c908dabe7f698653b67/comments", "author": null, "committer": null, "parents": [{"sha": "b34fd25c83e4a098405b5d520a260fb3ac32b14e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b34fd25c83e4a098405b5d520a260fb3ac32b14e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b34fd25c83e4a098405b5d520a260fb3ac32b14e"}], "stats": {"total": 42, "additions": 25, "deletions": 17}, "files": [{"sha": "8276650f2def241727dd372a3adbdb15faaed8e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f88203b0110a3f85a5bf4c908dabe7f698653b67/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f88203b0110a3f85a5bf4c908dabe7f698653b67/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f88203b0110a3f85a5bf4c908dabe7f698653b67", "patch": "@@ -1,3 +1,10 @@\n+2010-05-12  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* tree.c (build_constructor): Compute TREE_CONSTANT for the\n+\tresultant constructor.\n+\t(build_constructor_single): Don't set TREE_CONSTANT.\n+\t(build_constructor_from_list): Don't compute TREE_CONSTANT.\n+\n 2010-05-12  Jan Hubicka  <jh@suse.cz>\n \n \t* cgraph.h (struct varpool_node): Add aux."}, {"sha": "934536f24793129d08213fb27c11bad6182e0621", "filename": "gcc/tree.c", "status": "modified", "additions": 18, "deletions": 17, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f88203b0110a3f85a5bf4c908dabe7f698653b67/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f88203b0110a3f85a5bf4c908dabe7f698653b67/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=f88203b0110a3f85a5bf4c908dabe7f698653b67", "patch": "@@ -1332,8 +1332,22 @@ tree\n build_constructor (tree type, VEC(constructor_elt,gc) *vals)\n {\n   tree c = make_node (CONSTRUCTOR);\n+  unsigned int i;\n+  constructor_elt *elt;\n+  bool constant_p = true;\n+\n   TREE_TYPE (c) = type;\n   CONSTRUCTOR_ELTS (c) = vals;\n+\n+  for (i = 0; VEC_iterate (constructor_elt, vals, i, elt); i++)\n+    if (!TREE_CONSTANT (elt->value))\n+      {\n+\tconstant_p = false;\n+\tbreak;\n+      }\n+\n+  TREE_CONSTANT (c) = constant_p;\n+\n   return c;\n }\n \n@@ -1344,16 +1358,13 @@ build_constructor_single (tree type, tree index, tree value)\n {\n   VEC(constructor_elt,gc) *v;\n   constructor_elt *elt;\n-  tree t;\n \n   v = VEC_alloc (constructor_elt, gc, 1);\n   elt = VEC_quick_push (constructor_elt, v, NULL);\n   elt->index = index;\n   elt->value = value;\n \n-  t = build_constructor (type, v);\n-  TREE_CONSTANT (t) = TREE_CONSTANT (value);\n-  return t;\n+  return build_constructor (type, v);\n }\n \n \n@@ -1362,27 +1373,17 @@ build_constructor_single (tree type, tree index, tree value)\n tree\n build_constructor_from_list (tree type, tree vals)\n {\n-  tree t, val;\n+  tree t;\n   VEC(constructor_elt,gc) *v = NULL;\n-  bool constant_p = true;\n \n   if (vals)\n     {\n       v = VEC_alloc (constructor_elt, gc, list_length (vals));\n       for (t = vals; t; t = TREE_CHAIN (t))\n-\t{\n-\t  constructor_elt *elt = VEC_quick_push (constructor_elt, v, NULL);\n-\t  val = TREE_VALUE (t);\n-\t  elt->index = TREE_PURPOSE (t);\n-\t  elt->value = val;\n-\t  if (!TREE_CONSTANT (val))\n-\t    constant_p = false;\n-\t}\n+\tCONSTRUCTOR_APPEND_ELT (v, TREE_PURPOSE (t), TREE_VALUE (t));\n     }\n \n-  t = build_constructor (type, v);\n-  TREE_CONSTANT (t) = constant_p;\n-  return t;\n+  return build_constructor (type, v);\n }\n \n /* Return a new FIXED_CST node whose type is TYPE and value is F.  */"}]}