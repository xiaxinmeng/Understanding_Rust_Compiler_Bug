{"sha": "4ce351defb1341067c91b0a3f1c204e791fba71d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNlMzUxZGVmYjEzNDEwNjdjOTFiMGEzZjFjMjA0ZTc5MWZiYTcxZA==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2014-09-19T08:19:04Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2014-09-19T08:19:04Z"}, "message": "vxworksae.h: Remove obsolete definitions.\n\n2014-09-19  Olivier Hainque  <hainque@adacore.com>\n\n        * config/i386/vxworksae.h: Remove obsolete definitions.\n        (STACK_CHECK_PROTECT): Define.\n        * config/i386/vx-common.h: Remove.  Merge contents within\n        config/i386/vxworks.h.\n        * config.gcc (i?86-vxworks*): Use i386/vxworks.h instead of\n        i386/vx-common.h.\n\nFrom-SVN: r215378", "tree": {"sha": "f253a9c916975c06d0de4b9d41d77efb026f1d2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f253a9c916975c06d0de4b9d41d77efb026f1d2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ce351defb1341067c91b0a3f1c204e791fba71d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ce351defb1341067c91b0a3f1c204e791fba71d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ce351defb1341067c91b0a3f1c204e791fba71d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ce351defb1341067c91b0a3f1c204e791fba71d/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a8fe7c66071360f038334bca1bf9fd06d93ea03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a8fe7c66071360f038334bca1bf9fd06d93ea03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a8fe7c66071360f038334bca1bf9fd06d93ea03"}], "stats": {"total": 84, "additions": 32, "deletions": 52}, "files": [{"sha": "827e5d2f79306e56a68710425fa714223b34563e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ce351defb1341067c91b0a3f1c204e791fba71d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ce351defb1341067c91b0a3f1c204e791fba71d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4ce351defb1341067c91b0a3f1c204e791fba71d", "patch": "@@ -1,3 +1,12 @@\n+2014-09-19  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* config/i386/vxworksae.h: Remove obsolete definitions.\n+\t(STACK_CHECK_PROTECT): Define.\n+\t* config/i386/vx-common.h: Remove.  Merge contents within\n+\tconfig/i386/vxworks.h.\n+\t* config.gcc (i?86-vxworks*): Use i386/vxworks.h instead of\n+\ti386/vx-common.h.\n+\n 2014-09-19  Olivier Hainque  <hainque@adacore.com>\n \n \t* config.gcc (powerpc-wrs-vxworksmils): New configuration."}, {"sha": "0e50e9aa3f68cd85460b79bc4e35fc705fd09af8", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ce351defb1341067c91b0a3f1c204e791fba71d/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ce351defb1341067c91b0a3f1c204e791fba71d/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=4ce351defb1341067c91b0a3f1c204e791fba71d", "patch": "@@ -1556,11 +1556,11 @@ i[4567]86-wrs-vxworks|i[4567]86-wrs-vxworksae)\n \ttm_file=\"${tm_file} i386/unix.h i386/att.h elfos.h vx-common.h\"\n \tcase ${target} in\n \t  *-vxworksae*)\n-\t    tm_file=\"${tm_file} vxworksae.h i386/vx-common.h i386/vxworksae.h\"\n+\t    tm_file=\"${tm_file} vxworksae.h i386/vxworks.h i386/vxworksae.h\"\n \t    tmake_file=\"${tmake_file} i386/t-vxworks i386/t-vxworksae\"\n \t    ;;\n \t  *)\n-\t    tm_file=\"${tm_file} vxworks.h i386/vx-common.h i386/vxworks.h\"\n+\t    tm_file=\"${tm_file} vxworks.h i386/vxworks.h\"\n \t    tmake_file=\"${tmake_file} i386/t-vxworks\"\n \t    ;;\n \tesac"}, {"sha": "dd096f10fe09ac454dc04abc2a9c60b4c86574c8", "filename": "gcc/config/i386/vx-common.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a8fe7c66071360f038334bca1bf9fd06d93ea03/gcc%2Fconfig%2Fi386%2Fvx-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a8fe7c66071360f038334bca1bf9fd06d93ea03/gcc%2Fconfig%2Fi386%2Fvx-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fvx-common.h?ref=3a8fe7c66071360f038334bca1bf9fd06d93ea03", "patch": "@@ -1,35 +0,0 @@\n-/* IA32 VxWorks and VxWorks AE target definitions.\n-   Copyright (C) 2007-2014 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 3, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING3.  If not see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN) \\\n-  asm_output_aligned_bss (FILE, DECL, NAME, SIZE, ALIGN)\n-\n-/* VxWorks uses the same ABI as Solaris 2, so use i386/sol2.h version.  */\n-\n-#undef TARGET_SUBTARGET_DEFAULT\n-#define TARGET_SUBTARGET_DEFAULT \\\n-\t(MASK_80387 | MASK_IEEE_FP | MASK_FLOAT_RETURNS | MASK_VECT8_RETURNS)\n-\n-/* Provide our target specific DBX_REGISTER_NUMBER.  VxWorks relies on\n-   the SVR4 numbering.  */\n-\n-#undef DBX_REGISTER_NUMBER\n-#define DBX_REGISTER_NUMBER(n)  svr4_dbx_register_map[n]\n-\n-#define IX86_MAYBE_NO_LIBGCC_TFMODE"}, {"sha": "9b293061b0f579b24022b429d793c00b4c7bc560", "filename": "gcc/config/i386/vxworks.h", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ce351defb1341067c91b0a3f1c204e791fba71d/gcc%2Fconfig%2Fi386%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ce351defb1341067c91b0a3f1c204e791fba71d/gcc%2Fconfig%2Fi386%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fvxworks.h?ref=4ce351defb1341067c91b0a3f1c204e791fba71d", "patch": "@@ -21,6 +21,21 @@ along with GCC; see the file COPYING3.  If not see\n #undef  ASM_SPEC\n #define ASM_SPEC \"\"\n \n+#define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN) \\\n+  asm_output_aligned_bss (FILE, DECL, NAME, SIZE, ALIGN)\n+\n+/* VxWorks uses the same ABI as Solaris 2, so use i386/sol2.h version.  */\n+\n+#undef TARGET_SUBTARGET_DEFAULT\n+#define TARGET_SUBTARGET_DEFAULT \\\n+\t(MASK_80387 | MASK_IEEE_FP | MASK_FLOAT_RETURNS | MASK_VECT8_RETURNS)\n+\n+/* Provide our target specific DBX_REGISTER_NUMBER.  VxWorks relies on\n+   the SVR4 numbering.  */\n+\n+#undef DBX_REGISTER_NUMBER\n+#define DBX_REGISTER_NUMBER(n)  svr4_dbx_register_map[n]\n+\n #define TARGET_OS_CPP_BUILTINS()\t\t\t\\\n   do\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\\\n@@ -71,3 +86,5 @@ along with GCC; see the file COPYING3.  If not see\n /* We cannot use PC-relative accesses for VxWorks PIC because there is no\n    fixed gap between segments.  */\n #undef ASM_PREFERRED_EH_DATA_FORMAT\n+\n+#define IX86_MAYBE_NO_LIBGCC_TFMODE"}, {"sha": "7b0e42e283ddfdc484df16ced0ab6692170f75a3", "filename": "gcc/config/i386/vxworksae.h", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ce351defb1341067c91b0a3f1c204e791fba71d/gcc%2Fconfig%2Fi386%2Fvxworksae.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ce351defb1341067c91b0a3f1c204e791fba71d/gcc%2Fconfig%2Fi386%2Fvxworksae.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fvxworksae.h?ref=4ce351defb1341067c91b0a3f1c204e791fba71d", "patch": "@@ -18,18 +18,7 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-/* On VxWorks AE, we only want SIMNT.  */\n-#undef VXWORKS_CPU_DEFINE\n-#define VXWORKS_CPU_DEFINE()\t\t\t\\\n-  do\t\t\t\t\t\t\\\n-    builtin_define (\"CPU=SIMNT\");\t\t\\\n-  while (0)\n-\n-#undef  ASM_SPEC\n-#define ASM_SPEC \"\"\n-\n-#undef  SIZE_TYPE\n-#define SIZE_TYPE \"unsigned int\"\n-\n-#undef  PTRDIFF_TYPE\n-#define PTRDIFF_TYPE \"int\"\n+/* This platform supports the probing method of stack checking and\n+   requires 4K of space for executing a possible last chance handler.  */\n+#undef STACK_CHECK_PROTECT\n+#define STACK_CHECK_PROTECT 4096"}]}