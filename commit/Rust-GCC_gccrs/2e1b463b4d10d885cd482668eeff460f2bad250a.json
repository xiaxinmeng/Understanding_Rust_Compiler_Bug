{"sha": "2e1b463b4d10d885cd482668eeff460f2bad250a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUxYjQ2M2I0ZDEwZDg4NWNkNDgyNjY4ZWVmZjQ2MGYyYmFkMjUwYQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-12-02T00:10:14Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-12-02T00:10:14Z"}, "message": "* objc-act.c: Partially reverse mistaken commit.\n\nFrom-SVN: r47519", "tree": {"sha": "39a6b70b2d7d922a20f099d51d14da0a4069727b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39a6b70b2d7d922a20f099d51d14da0a4069727b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e1b463b4d10d885cd482668eeff460f2bad250a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e1b463b4d10d885cd482668eeff460f2bad250a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e1b463b4d10d885cd482668eeff460f2bad250a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e1b463b4d10d885cd482668eeff460f2bad250a/comments", "author": null, "committer": null, "parents": [{"sha": "1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f978f5f7eba451706f9d6a7b54ac8226ef591fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f978f5f7eba451706f9d6a7b54ac8226ef591fb"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "c001a5d94a044c48c9cd9ead11495ecc232e0182", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e1b463b4d10d885cd482668eeff460f2bad250a/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e1b463b4d10d885cd482668eeff460f2bad250a/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=2e1b463b4d10d885cd482668eeff460f2bad250a", "patch": "@@ -58,6 +58,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"cpplib.h\"\n #include \"debug.h\"\n #include \"target.h\"\n+#include \"varray.h\"\n #include \"langhooks.h\"\n #include \"langhooks-def.h\"\n \n@@ -481,6 +482,8 @@ static int print_struct_values = 0;\n /* Each front end provides its own.  */\n const struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;\n \n+static varray_type deferred_fns;\n+\n /* Post-switch processing.  */\n static void\n objc_post_options ()\n@@ -607,13 +610,36 @@ objc_init (filename)\n \n   objc_act_parse_init ();\n \n+  VARRAY_TREE_INIT (deferred_fns, 32, \"deferred_fns\");\n+  ggc_add_tree_varray_root (&deferred_fns, 1);\n+\n   return filename;\n }\n \n+/* Register a function tree, so that its optimization and conversion\n+   to RTL is only done at the end of the compilation.  */\n+\n+int\n+defer_fn (fn)\n+     tree fn;\n+{\n+  VARRAY_PUSH_TREE (deferred_fns, fn);\n+\n+  return 1;\n+}\n+\n void\n finish_file ()\n {\n-  c_objc_common_finish_file ();\n+  int i;\n+\n+  for (i = 0; i < VARRAY_ACTIVE_SIZE (deferred_fns); i++)\n+    /* Don't output the same function twice.  We may run into such\n+       situations when an extern inline function is later given a\n+       non-extern-inline definition.  */\n+    if (! TREE_ASM_WRITTEN (VARRAY_TREE (deferred_fns, i)))\n+      c_expand_deferred_function (VARRAY_TREE (deferred_fns, i));\n+  VARRAY_FREE (deferred_fns);\n \n   finish_objc ();\t\t/* Objective-C finalization */\n "}]}