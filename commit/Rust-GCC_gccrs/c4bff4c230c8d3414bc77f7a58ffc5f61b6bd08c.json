{"sha": "c4bff4c230c8d3414bc77f7a58ffc5f61b6bd08c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRiZmY0YzIzMGM4ZDM0MTRiYzc3ZjdhNThmZmM1ZjYxYjZiZDA4Yw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-05-14T13:39:29Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-05-14T13:39:29Z"}, "message": "c++: Improve build_template_decl\n\nI discovered all the users of build_template_decl were explicitly\nsetting the RESULT and TYPE fields of the built decl.  Let's just have\nbuild_template_decl do that in the first place.\n\n\t* pt.c (build_template_decl): Init DECL_TEMPLATE_RESULT &\n\tTREE_TYPE here ...\n\t(process_partial_specialization): ... not here ...\n\t(push_template_decl_real, add_inherited_template_parms)\n\t(build_deduction_guide): ... or here.", "tree": {"sha": "4020d2ec18a19c8c1e247b8f1f43fe6031de115b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4020d2ec18a19c8c1e247b8f1f43fe6031de115b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4bff4c230c8d3414bc77f7a58ffc5f61b6bd08c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4bff4c230c8d3414bc77f7a58ffc5f61b6bd08c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4bff4c230c8d3414bc77f7a58ffc5f61b6bd08c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4bff4c230c8d3414bc77f7a58ffc5f61b6bd08c/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "941c94747007e50ccaae6e94cf0402ff5bb63d43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/941c94747007e50ccaae6e94cf0402ff5bb63d43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/941c94747007e50ccaae6e94cf0402ff5bb63d43"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "45b60de120b194f13b244858326603728c64a84d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4bff4c230c8d3414bc77f7a58ffc5f61b6bd08c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4bff4c230c8d3414bc77f7a58ffc5f61b6bd08c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c4bff4c230c8d3414bc77f7a58ffc5f61b6bd08c", "patch": "@@ -1,3 +1,11 @@\n+2020-05-14  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* pt.c (build_template_decl): Init DECL_TEMPLATE_RESULT &\n+\tTREE_TYPE here ...\n+\t(process_partial_specialization): ... not here ...\n+\t(push_template_decl_real, add_inherited_template_parms)\n+\t(build_deduction_guide): ... or here.\n+\n 2020-05-14  Jakub Jelinek  <jakub@redhat.com>\n \n \t* cp-gimplify.c (cp_genericize_r): Set cfun->has_omp_target."}, {"sha": "837644f8e6cb3bd37596a9a6f1cea09513f9ab75", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4bff4c230c8d3414bc77f7a58ffc5f61b6bd08c/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4bff4c230c8d3414bc77f7a58ffc5f61b6bd08c/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=c4bff4c230c8d3414bc77f7a58ffc5f61b6bd08c", "patch": "@@ -4883,7 +4883,9 @@ build_template_decl (tree decl, tree parms, bool member_template_p)\n   tree tmpl = build_lang_decl (TEMPLATE_DECL, DECL_NAME (decl), NULL_TREE);\n   SET_DECL_LANGUAGE (tmpl, DECL_LANGUAGE (decl));\n   DECL_TEMPLATE_PARMS (tmpl) = parms;\n+  DECL_TEMPLATE_RESULT (tmpl) = decl;\n   DECL_CONTEXT (tmpl) = DECL_CONTEXT (decl);\n+  TREE_TYPE (tmpl) = TREE_TYPE (decl);\n   DECL_SOURCE_LOCATION (tmpl) = DECL_SOURCE_LOCATION (decl);\n   DECL_MEMBER_TEMPLATE_P (tmpl) = member_template_p;\n \n@@ -5233,8 +5235,6 @@ process_partial_specialization (tree decl)\n   // Build the template decl.\n   tree tmpl = build_template_decl (decl, current_template_parms,\n \t\t\t\t   DECL_MEMBER_TEMPLATE_P (maintmpl));\n-  TREE_TYPE (tmpl) = type;\n-  DECL_TEMPLATE_RESULT (tmpl) = decl;\n   SET_DECL_TEMPLATE_SPECIALIZATION (tmpl);\n   DECL_TEMPLATE_INFO (tmpl) = build_template_info (maintmpl, specargs);\n   DECL_PRIMARY_TEMPLATE (tmpl) = maintmpl;\n@@ -5908,8 +5908,6 @@ push_template_decl_real (tree decl, bool is_friend)\n \t  new_tmpl\n \t    = build_template_decl (decl, current_template_parms,\n \t\t\t\t   member_template_p);\n-\t  DECL_TEMPLATE_RESULT (new_tmpl) = decl;\n-\t  TREE_TYPE (new_tmpl) = TREE_TYPE (decl);\n \t  DECL_TI_TEMPLATE (decl) = new_tmpl;\n \t  SET_DECL_TEMPLATE_SPECIALIZATION (new_tmpl);\n \t  DECL_TEMPLATE_INFO (new_tmpl)\n@@ -5979,8 +5977,7 @@ push_template_decl_real (tree decl, bool is_friend)\n \t}\n     }\n \n-  DECL_TEMPLATE_RESULT (tmpl) = decl;\n-  TREE_TYPE (tmpl) = TREE_TYPE (decl);\n+  gcc_checking_assert (DECL_TEMPLATE_RESULT (tmpl) == decl);\n \n   /* Push template declarations for global functions and types.  Note\n      that we do not try to push a global template friend declared in a\n@@ -6085,8 +6082,6 @@ add_inherited_template_parms (tree fn, tree inherited)\n   tree tmpl = build_template_decl (fn, parms, /*member*/true);\n   tree args = template_parms_to_args (parms);\n   DECL_TEMPLATE_INFO (fn) = build_template_info (tmpl, args);\n-  TREE_TYPE (tmpl) = TREE_TYPE (fn);\n-  DECL_TEMPLATE_RESULT (tmpl) = fn;\n   DECL_ARTIFICIAL (tmpl) = true;\n   DECL_PRIMARY_TEMPLATE (tmpl) = tmpl;\n   return tmpl;\n@@ -28314,8 +28309,6 @@ build_deduction_guide (tree type, tree ctor, tree outer_args, tsubst_flags_t com\n   DECL_NONCONVERTING_P (ded_fn) = explicit_p;\n   tree ded_tmpl = build_template_decl (ded_fn, tparms, /*member*/false);\n   DECL_ARTIFICIAL (ded_tmpl) = true;\n-  DECL_TEMPLATE_RESULT (ded_tmpl) = ded_fn;\n-  TREE_TYPE (ded_tmpl) = TREE_TYPE (ded_fn);\n   DECL_TEMPLATE_INFO (ded_fn) = build_template_info (ded_tmpl, targs);\n   DECL_PRIMARY_TEMPLATE (ded_tmpl) = ded_tmpl;\n   if (DECL_P (ctor))"}]}