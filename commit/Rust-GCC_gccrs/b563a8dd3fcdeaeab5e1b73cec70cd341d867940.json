{"sha": "b563a8dd3fcdeaeab5e1b73cec70cd341d867940", "node_id": "C_kwDOANBUbNoAKGI1NjNhOGRkM2ZjZGVhZWFiNWUxYjczY2VjNzBjZDM0MWQ4Njc5NDA", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-07-23T00:16:27Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-07-23T00:16:27Z"}, "message": "Daily bump.", "tree": {"sha": "77dccbe1a8764a06ea24e81d9e02c4f95cc2c0a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77dccbe1a8764a06ea24e81d9e02c4f95cc2c0a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b563a8dd3fcdeaeab5e1b73cec70cd341d867940", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b563a8dd3fcdeaeab5e1b73cec70cd341d867940", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b563a8dd3fcdeaeab5e1b73cec70cd341d867940", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b563a8dd3fcdeaeab5e1b73cec70cd341d867940/comments", "author": null, "committer": null, "parents": [{"sha": "6d5194a10dc103031b9c8a03091ca70f6db33c8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d5194a10dc103031b9c8a03091ca70f6db33c8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d5194a10dc103031b9c8a03091ca70f6db33c8b"}], "stats": {"total": 179, "additions": 178, "deletions": 1}, "files": [{"sha": "7df00c7822dcd56b8ac74179b54dd3e46a113e57", "filename": "contrib/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b563a8dd3fcdeaeab5e1b73cec70cd341d867940/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b563a8dd3fcdeaeab5e1b73cec70cd341d867940/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=b563a8dd3fcdeaeab5e1b73cec70cd341d867940", "patch": "@@ -1,3 +1,14 @@\n+2022-07-22  Martin Liska  <mliska@suse.cz>\n+\n+\t* git-commit-mklog.py: Do not parse -b argument.\n+\tPass mklog_args as json environment variable.\n+\t* mklog.py: Parse GCC_MKLOG_ARGS and append it to sys.argv.\n+\t* prepare-commit-msg: Do not append GCC_MKLOG_ARGS to args.\n+\n+2022-07-22  Martin Liska  <mliska@suse.cz>\n+\n+\t* mklog.py: Use component: [PR xyz] only when one PR is used.\n+\n 2022-07-04  Martin Liska  <mliska@suse.cz>\n \n \t* git-descr.sh: By default print revision for HEAD."}, {"sha": "7c62d546ddf8c0cb3e5bf3c8540f271cab1d91a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b563a8dd3fcdeaeab5e1b73cec70cd341d867940/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b563a8dd3fcdeaeab5e1b73cec70cd341d867940/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b563a8dd3fcdeaeab5e1b73cec70cd341d867940", "patch": "@@ -1,3 +1,86 @@\n+2022-07-22  Takayuki 'January June' Suwa  <jjsuwa_sys3175@yahoo.co.jp>\n+\n+\t* config/xtensa/xtensa.md (*masktrue_const_bitcmpl):\n+\tAdd a new insn_and_split pattern, and a few split patterns for\n+\tspacial cases.\n+\n+2022-07-22  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* graphds.cc (graphds_scc): Fix algorithm attribution.\n+\n+2022-07-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/106403\n+\t* tree-ssa-sccvn.cc (vn_reference_lookup_3): Move stored\n+\tvalue valueization after check for IFN_MASKED_STORE or\n+\tIFN_LEN_STORE.\n+\n+2022-07-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/106397\n+\t* tree-ssa-loop-prefetch.cc (emit_mfence_after_loop): Do\n+\tnot update SSA form here.\n+\t(mark_nontemporal_stores): Return whether we marked any\n+\tnon-temporal stores and inserted mfence.\n+\t(loop_prefetch_arrays): Note when we need to update SSA.\n+\t(tree_ssa_prefetch_arrays): Perform required (LC) SSA update\n+\tat the end of the pass.\n+\n+2022-07-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/106387\n+\t* tree-vect-stmts.cc (vectorizable_load): Use make_ssa_name\n+\tif ptr is not an SSA name.\n+\n+2022-07-22  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/106038\n+\t* config/i386/mmx.md (<code><mode>3): New define_expand, it's\n+\toriginal \"<code><mode>3\".\n+\t(*<code><mode>3): New define_insn, it's original\n+\t\"<code><mode>3\" be extended to handle memory and immediate\n+\toperand with ix86_binary_operator_ok. Also adjust define_split\n+\tafter it.\n+\t(mmxinsnmode): New mode attribute.\n+\t(*mov<mode>_imm): Refactor with mmxinsnmode.\n+\t* config/i386/predicates.md\n+\t(register_or_x86_64_const_vector_operand): New predicate.\n+\n+2022-07-22  Will Schmidt  <will_schmidt@vnet.ibm.com>\n+\n+\t* config/rs6000/altivec.md:\n+\t(vstrir_code_<mode>): Rename to...\n+\t(vstrir_direct_<mode>): ... this.\n+\t(vstrir_p_code_<mode>): Rename to...\n+\t(vstrir_p_direct_<mode>): ... this.\n+\t(vstril_code_<mode>): Rename to...\n+\t(vstril_direct_<mode>): ... this.\n+\t(vstril_p_code_<mode>): Rename to...\n+\t(vstril_p_direct_<mode>): ... this.\n+\n+2022-07-22  Will Schmidt  <will_schmidt@vnet.ibm.com>\n+\n+\t* config/rs6000/rs6000-c.cc: Update comments.\n+\t(rs6000_target_modify_macros): Remove bu_mask references.\n+\t(rs6000_define_or_undefine_macro): Replace bu_mask reference\n+\twith a rs6000_cpu value check.\n+\t(rs6000_cpu_cpp_builtins): Remove rs6000_builtin_mask_calculate()\n+\tparameter from call to rs6000_target_modify_macros.\n+\t* config/rs6000/rs6000-protos.h (rs6000_target_modify_macros,\n+\trs6000_target_modify_macros_ptr): Remove parameter from extern\n+\tfor the prototype.\n+\t* config/rs6000/rs6000.cc (rs6000_target_modify_macros_ptr): Remove\n+\tparameter from prototype, update calls to this function.\n+\t(rs6000_print_builtin_options): Remove prototype, call and function.\n+\t(rs6000_builtin_mask_calculate): Remove function.\n+\t(rs6000_debug_reg_global): Remove call to rs6000_print_builtin_options.\n+\t(rs6000_option_override_internal): Remove rs6000_builtin_mask var\n+\tand builtin_mask debug output.\n+\t(rs6000_builtin_mask_names): Remove.\n+\t(rs6000_pragma_target_parse): Remove prev_bumask, cur_bumask,\n+\tdiff_bumask references; Update calls to rs6000_target_modify_ptr.\n+\t* config/rs6000/rs6000.opt (rs6000_builtin_mask): Remove.\n+\n 2022-07-21  Sam Feifer  <sfeifer@redhat.com>\n \n \tPR tree-optimization/94920"}, {"sha": "ef960813d5eb1140d900e0665b5efae12e36b1e8", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b563a8dd3fcdeaeab5e1b73cec70cd341d867940/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b563a8dd3fcdeaeab5e1b73cec70cd341d867940/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=b563a8dd3fcdeaeab5e1b73cec70cd341d867940", "patch": "@@ -1 +1 @@\n-20220722\n+20220723"}, {"sha": "6f5132cc1104ca63ff57e9ce593b94dec6107606", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b563a8dd3fcdeaeab5e1b73cec70cd341d867940/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b563a8dd3fcdeaeab5e1b73cec70cd341d867940/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=b563a8dd3fcdeaeab5e1b73cec70cd341d867940", "patch": "@@ -1,3 +1,24 @@\n+2022-07-22  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/106413\n+\t* varargs.cc (region_model::impl_call_va_start): Avoid iterating\n+\tthrough non-existant variadic arguments by initializing the\n+\timpl_region to \"UNKNOWN\" if the va_start occurs in the top-level\n+\tfunction to the analysis.\n+\n+2022-07-22  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/106401\n+\t* store.cc (binding_cluster::binding_cluster): Remove overzealous\n+\tassertion; we're checking for tracked_p in\n+\tstore::get_or_create_cluster.\n+\n+2022-07-22  Tim Lange  <mail@tim-lange.me>\n+\n+\tPR analyzer/106394\n+\t* region-model.cc (capacity_compatible_with_type): Always return true\n+\tif alloc_size is zero.\n+\n 2022-07-21  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/106383"}, {"sha": "f5ff8ded156ae5928d8b1194e65bc5312f4ee5de", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b563a8dd3fcdeaeab5e1b73cec70cd341d867940/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b563a8dd3fcdeaeab5e1b73cec70cd341d867940/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b563a8dd3fcdeaeab5e1b73cec70cd341d867940", "patch": "@@ -1,3 +1,17 @@\n+2022-07-22  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/106366\n+\t* pt.cc (do_class_deduction): Don't consider TYPE_HAS_LIST_CTOR\n+\twhen setting try_list_ctor.  Reset args even when try_list_ctor\n+\tis true and there are no list candidates.  Call resolve_args on\n+\tthe reset args.  Rename try_list_ctor to try_list_cand.\n+\n+2022-07-22  Martin Liska  <mliska@suse.cz>\n+\n+\tPR other/106370\n+\t* init.cc (sort_mem_initializers): Remove continue as last stmt\n+\tin a loop.\n+\n 2022-07-21  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/106361"}, {"sha": "0a2c3bd04187bcc8c71dc7029b1f283f0684c34f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b563a8dd3fcdeaeab5e1b73cec70cd341d867940/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b563a8dd3fcdeaeab5e1b73cec70cd341d867940/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b563a8dd3fcdeaeab5e1b73cec70cd341d867940", "patch": "@@ -1,3 +1,38 @@\n+2022-07-22  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/106413\n+\t* gcc.dg/analyzer/torture/stdarg-4.c: New test.\n+\n+2022-07-22  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/106401\n+\t* gcc.dg/analyzer/memcpy-2.c: New test.\n+\n+2022-07-22  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/106366\n+\t* g++.dg/cpp1z/class-deduction112.C: New test.\n+\n+2022-07-22  Tim Lange  <mail@tim-lange.me>\n+\n+\tPR analyzer/106394\n+\t* gcc.dg/analyzer/pr106394.c: New test.\n+\n+2022-07-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/106397\n+\t* gcc.dg/pr106397.c: New testcase.\n+\n+2022-07-22  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR tree-optimization/106010\n+\t* gcc.dg/pr23911.c: Scan IMAGPART/REALPART_EXPR = ** instead\n+\tof __complex__ since COMPLEX_CST is lower to scalars.\n+\n+2022-07-22  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* gcc.target/i386/pr106038-1.c: New test.\n+\n 2022-07-21  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/106383"}, {"sha": "242625b3aa9b7ab14624c53869c25795561b4a47", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b563a8dd3fcdeaeab5e1b73cec70cd341d867940/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b563a8dd3fcdeaeab5e1b73cec70cd341d867940/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=b563a8dd3fcdeaeab5e1b73cec70cd341d867940", "patch": "@@ -1,3 +1,9 @@\n+2022-07-22  Martin Liska  <mliska@suse.cz>\n+\n+\tPR other/106370\n+\t* _doprnt.c: Remove continue as last stmt\n+\tin a loop.\n+\n 2022-07-14  Martin Liska  <mliska@suse.cz>\n \n \t* functions.texi: Replace strtoul with strtoull."}, {"sha": "fa39965d56c44d94e3a2a671622b6d23a8e19932", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b563a8dd3fcdeaeab5e1b73cec70cd341d867940/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b563a8dd3fcdeaeab5e1b73cec70cd341d867940/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=b563a8dd3fcdeaeab5e1b73cec70cd341d867940", "patch": "@@ -1,3 +1,10 @@\n+2022-07-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR sanitizer/105531\n+\t* sanitizer_common/sanitizer_linux_libcdep.cpp,\n+\tsanitizer_common/sanitizer_solaris.h:: Cherry-pick\n+\tllvm-project revision 3776db9a4fd2080d23d6a5f52e405eea44558761.\n+\n 2022-05-05  Martin Liska  <mliska@suse.cz>\n \n \t* LOCAL_PATCHES: Update."}]}