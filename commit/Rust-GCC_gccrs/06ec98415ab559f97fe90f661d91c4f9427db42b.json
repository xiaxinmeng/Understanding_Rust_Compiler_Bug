{"sha": "06ec98415ab559f97fe90f661d91c4f9427db42b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZlYzk4NDE1YWI1NTlmOTdmZTkwZjY2MWQ5MWM0Zjk0MjdkYjQyYg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-04-04T23:43:59Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-04-04T23:43:59Z"}, "message": "libgo: Always initialize semaphores.\n\n\t2011-04-03  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\tPR go/48222\n\t* runtime/malloc.goc (runtime_mallocinit): Call\n\truntime_Mprof_Init, runtime_initfintab.\n\t* runtime/cpuprof.c (runtime_cpuprofinit): New function.\n\t* runtime/runtime.h (runtime_cpuprofinit): Declare it.\n\t* runtime/go-main.c (main): Use it.\n\nFrom-SVN: r171960", "tree": {"sha": "f21f4ad61a3f22ffc7d3ad730456f5392faa6d8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f21f4ad61a3f22ffc7d3ad730456f5392faa6d8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06ec98415ab559f97fe90f661d91c4f9427db42b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06ec98415ab559f97fe90f661d91c4f9427db42b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06ec98415ab559f97fe90f661d91c4f9427db42b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06ec98415ab559f97fe90f661d91c4f9427db42b/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9403944776d0a804dbb1253430633d04aef74c51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9403944776d0a804dbb1253430633d04aef74c51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9403944776d0a804dbb1253430633d04aef74c51"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "3797e1ce1e08afed58896b47c6132a919e4c0ae5", "filename": "libgo/runtime/cpuprof.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06ec98415ab559f97fe90f661d91c4f9427db42b/libgo%2Fruntime%2Fcpuprof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06ec98415ab559f97fe90f661d91c4f9427db42b/libgo%2Fruntime%2Fcpuprof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fcpuprof.c?ref=06ec98415ab559f97fe90f661d91c4f9427db42b", "patch": "@@ -114,6 +114,12 @@ static void add(Profile*, uintptr*, int32);\n static bool evict(Profile*, Entry*);\n static bool flushlog(Profile*);\n \n+void\n+runtime_cpuprofinit(void)\n+{\n+\truntime_initlock(&lk);\n+}\n+\n // LostProfileData is a no-op function used in profiles\n // to mark the number of profiling stack traces that were\n // discarded due to slow data writers."}, {"sha": "37956d5de7d633dd13c915ab04bceb6aead4fc91", "filename": "libgo/runtime/go-main.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06ec98415ab559f97fe90f661d91c4f9427db42b/libgo%2Fruntime%2Fgo-main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06ec98415ab559f97fe90f661d91c4f9427db42b/libgo%2Fruntime%2Fgo-main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-main.c?ref=06ec98415ab559f97fe90f661d91c4f9427db42b", "patch": "@@ -48,6 +48,7 @@ main (int argc, char **argv)\n   struct __go_string *values;\n \n   runtime_mallocinit ();\n+  runtime_cpuprofinit ();\n   __go_gc_goroutine_init (&argc);\n \n   Args.__count = argc;"}, {"sha": "196271abd04dd62ece4d9c60d31ed0bdce63c908", "filename": "libgo/runtime/malloc.goc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06ec98415ab559f97fe90f661d91c4f9427db42b/libgo%2Fruntime%2Fmalloc.goc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06ec98415ab559f97fe90f661d91c4f9427db42b/libgo%2Fruntime%2Fmalloc.goc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fmalloc.goc?ref=06ec98415ab559f97fe90f661d91c4f9427db42b", "patch": "@@ -350,6 +350,12 @@ runtime_mallocinit(void)\n \truntime_MHeap_Init(&runtime_mheap, runtime_SysAlloc);\n \tm->mcache = runtime_allocmcache();\n \n+\t// Initialize malloc profiling.\n+\truntime_Mprof_Init();\n+\n+\t// Initialize finalizer.\n+\truntime_initfintab();\n+\n \t// See if it works.\n \truntime_free(runtime_malloc(1));\n }"}, {"sha": "00ba40f6f286c02af84c6544af6aa99c5393031c", "filename": "libgo/runtime/runtime.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06ec98415ab559f97fe90f661d91c4f9427db42b/libgo%2Fruntime%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06ec98415ab559f97fe90f661d91c4f9427db42b/libgo%2Fruntime%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fruntime.h?ref=06ec98415ab559f97fe90f661d91c4f9427db42b", "patch": "@@ -189,6 +189,7 @@ void\truntime_walkfintab(void (*fn)(void*), void (*scan)(byte *, int64));\n #define runtime_casp(pval, old, new) __sync_bool_compare_and_swap (pval, old, new)\n \n void\truntime_sigprof(uint8 *pc, uint8 *sp, uint8 *lr);\n+void\truntime_cpuprofinit(void);\n void\truntime_resetcpuprofiler(int32);\n void\truntime_setcpuprofilerate(void(*)(uintptr*, int32), int32);\n "}]}