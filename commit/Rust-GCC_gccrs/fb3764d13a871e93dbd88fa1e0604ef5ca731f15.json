{"sha": "fb3764d13a871e93dbd88fa1e0604ef5ca731f15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIzNzY0ZDEzYTg3MWU5M2RiZDg4ZmExZTA2MDRlZjVjYTczMWYxNQ==", "commit": {"author": {"name": "Roman Gareev", "email": "gareevroman@gmail.com", "date": "2014-07-23T06:52:14Z"}, "committer": {"name": "Roman Gareev", "email": "romangareev@gcc.gnu.org", "date": "2014-07-23T06:52:14Z"}, "message": "gcc/\n\t* graphite-isl-ast-to-gimple.c:\n\t(get_max_schedule_dimensions): New function.\n\t(extend_schedule): Likewise.\n\t(generate_isl_schedule): Add calling of extend_schedule and\n\tget_max_schedule_dimensions.\n\nFrom-SVN: r212921", "tree": {"sha": "ae24c4ee3568a1ad4d27af51cb3852b9c9dba15a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae24c4ee3568a1ad4d27af51cb3852b9c9dba15a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb3764d13a871e93dbd88fa1e0604ef5ca731f15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb3764d13a871e93dbd88fa1e0604ef5ca731f15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb3764d13a871e93dbd88fa1e0604ef5ca731f15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb3764d13a871e93dbd88fa1e0604ef5ca731f15/comments", "author": {"login": "gareevroman", "id": 6114710, "node_id": "MDQ6VXNlcjYxMTQ3MTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6114710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gareevroman", "html_url": "https://github.com/gareevroman", "followers_url": "https://api.github.com/users/gareevroman/followers", "following_url": "https://api.github.com/users/gareevroman/following{/other_user}", "gists_url": "https://api.github.com/users/gareevroman/gists{/gist_id}", "starred_url": "https://api.github.com/users/gareevroman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gareevroman/subscriptions", "organizations_url": "https://api.github.com/users/gareevroman/orgs", "repos_url": "https://api.github.com/users/gareevroman/repos", "events_url": "https://api.github.com/users/gareevroman/events{/privacy}", "received_events_url": "https://api.github.com/users/gareevroman/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8d720481c8168a3282e3d87a8d25a15fbb66fe54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d720481c8168a3282e3d87a8d25a15fbb66fe54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d720481c8168a3282e3d87a8d25a15fbb66fe54"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "4318cf85b545f733a706ffe4ad0123940f6e2d27", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb3764d13a871e93dbd88fa1e0604ef5ca731f15/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb3764d13a871e93dbd88fa1e0604ef5ca731f15/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb3764d13a871e93dbd88fa1e0604ef5ca731f15", "patch": "@@ -1,3 +1,11 @@\n+2014-07-23  Roman Gareev  <gareevroman@gmail.com>\n+\n+\t* graphite-isl-ast-to-gimple.c:\n+\t(get_max_schedule_dimensions): New function.\n+\t(extend_schedule): Likewise.\n+\t(generate_isl_schedule): Add calling of extend_schedule and\n+\tget_max_schedule_dimensions.\n+\n 2014-07-22  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_rtx_costs): Handle CLRSB, CLZ."}, {"sha": "75cbfb575d4c06d4f0759b84aa2210383125668e", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb3764d13a871e93dbd88fa1e0604ef5ca731f15/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb3764d13a871e93dbd88fa1e0604ef5ca731f15/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=fb3764d13a871e93dbd88fa1e0604ef5ca731f15", "patch": "@@ -685,12 +685,57 @@ generate_isl_context (scop_p scop)\n   return isl_ast_build_from_context (context_isl);\n }\n \n+/* Get the maximal number of schedule dimensions in the scop SCOP.  */\n+\n+static\n+int get_max_schedule_dimensions (scop_p scop)\n+{\n+  int i;\n+  poly_bb_p pbb;\n+  int schedule_dims = 0;\n+\n+  FOR_EACH_VEC_ELT (SCOP_BBS (scop), i, pbb)\n+    {\n+      int pbb_schedule_dims = isl_map_dim (pbb->transformed, isl_dim_out);\n+      if (pbb_schedule_dims > schedule_dims)\n+\tschedule_dims = pbb_schedule_dims;\n+    }\n+\n+  return schedule_dims;\n+}\n+\n+/* Extend the schedule to NB_SCHEDULE_DIMS schedule dimensions.\n+\n+   For schedules with different dimensionality, the isl AST generator can not\n+   define an order and will just randomly choose an order. The solution to this\n+   problem is to extend all schedules to the maximal number of schedule\n+   dimensions (using '0's for the remaining values).  */\n+\n+static __isl_give isl_map *\n+extend_schedule (__isl_take isl_map *schedule, int nb_schedule_dims)\n+{\n+  int tmp_dims = isl_map_dim (schedule, isl_dim_out);\n+  schedule =\n+    isl_map_add_dims (schedule, isl_dim_out, nb_schedule_dims - tmp_dims);\n+  isl_val *zero =\n+    isl_val_int_from_si (isl_map_get_ctx (schedule), 0);\n+  int i;\n+  for (i = tmp_dims; i < nb_schedule_dims; i++)\n+    {\n+      schedule =\n+        isl_map_fix_val (schedule, isl_dim_out, i, isl_val_copy (zero));\n+    }\n+  isl_val_free (zero);\n+  return schedule;\n+}\n+\n /* Generates a schedule, which specifies an order used to\n    visit elements in a domain.  */\n \n static __isl_give isl_union_map *\n generate_isl_schedule (scop_p scop)\n {\n+  int nb_schedule_dims = get_max_schedule_dimensions (scop);\n   int i;\n   poly_bb_p pbb;\n   isl_union_map *schedule_isl =\n@@ -706,6 +751,7 @@ generate_isl_schedule (scop_p scop)\n       isl_map *bb_schedule = isl_map_copy (pbb->transformed);\n       bb_schedule = isl_map_intersect_domain (bb_schedule,\n \t\t\t\t\t      isl_set_copy (pbb->domain));\n+      bb_schedule = extend_schedule (bb_schedule, nb_schedule_dims);\n       schedule_isl =\n         isl_union_map_union (schedule_isl,\n \t\t\t     isl_union_map_from_map (bb_schedule));"}]}