{"sha": "fa4262a47aa70a6f1baa2dd35d1cdb929c250da6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE0MjYyYTQ3YWE3MGE2ZjFiYWEyZGQzNWQxY2RiOTI5YzI1MGRhNg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-11-01T16:17:42Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-11-01T16:17:42Z"}, "message": "PR libstdc++/37958 (cont)\n\n2008-11-01  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/37958 (cont)\n\t* include/bits/locale_facets.tcc (num_get<>::do_get(iter_type,\n\titer_type, ios_base&, ios_base::iostate&, bool&): Fix again.\n\nFrom-SVN: r141517", "tree": {"sha": "2f248d0d97d4ae46d4395ad5effd535d33f120c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f248d0d97d4ae46d4395ad5effd535d33f120c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa4262a47aa70a6f1baa2dd35d1cdb929c250da6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa4262a47aa70a6f1baa2dd35d1cdb929c250da6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa4262a47aa70a6f1baa2dd35d1cdb929c250da6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa4262a47aa70a6f1baa2dd35d1cdb929c250da6/comments", "author": null, "committer": null, "parents": [{"sha": "12f681a099e339747f99d5275611ee373096a7a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12f681a099e339747f99d5275611ee373096a7a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12f681a099e339747f99d5275611ee373096a7a6"}], "stats": {"total": 75, "additions": 35, "deletions": 40}, "files": [{"sha": "cf6d99dbabb5db75259beec1a38d44e9df80031f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa4262a47aa70a6f1baa2dd35d1cdb929c250da6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa4262a47aa70a6f1baa2dd35d1cdb929c250da6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=fa4262a47aa70a6f1baa2dd35d1cdb929c250da6", "patch": "@@ -1,3 +1,9 @@\n+2008-11-01  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/37958 (cont)\n+\t* include/bits/locale_facets.tcc (num_get<>::do_get(iter_type,\n+\titer_type, ios_base&, ios_base::iostate&, bool&): Fix again.\n+\n 2008-11-01  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n         * include/bits/shared_ptr.h: Update comparisons to match WP."}, {"sha": "7dacbe5bc92897811ecdde3171a48b3fa4c25a2c", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 29, "deletions": 40, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa4262a47aa70a6f1baa2dd35d1cdb929c250da6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa4262a47aa70a6f1baa2dd35d1cdb929c250da6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=fa4262a47aa70a6f1baa2dd35d1cdb929c250da6", "patch": "@@ -604,69 +604,58 @@ _GLIBCXX_BEGIN_LDBL_NAMESPACE\n \t  const locale& __loc = __io._M_getloc();\n \t  const __cache_type* __lc = __uc(__loc);\n \n-\t  bool __testf = false;\n-\t  bool __donef = false;\n-\t  bool __testt = false;\n-\t  bool __donet = false;\n+\t  bool __testf = true;\n+\t  bool __testt = true;\n+\t  bool __testeof = false;\n \t  size_t __n;\n-\t  bool __testeof = __beg == __end;\n-          for (__n = 0; !__testeof; ++__n)\n-            {\n-\t      const char_type __c = *__beg;\n-\n-\t      if (!__donef)\n+\t  const size_t __lim = std::max(__lc->_M_falsename_size,\n+\t\t\t\t\t__lc->_M_truename_size);\n+\t  for (__n = 0; __n < __lim; ++__n, ++__beg)\n+\t    {\n+\t      if (__beg == __end)\n \t\t{\n-\t\t  if (__n < __lc->_M_falsename_size)\n-\t\t    {\n-\t\t      __testf = __c == __lc->_M_falsename[__n];\n-\t\t      if (!__testf)\n-\t\t\t__donef = true;\n-\t\t    }\n-\t\t  else\n-\t\t    __donef = true;\n+\t\t  __testeof = true;\n+\t\t  break;\n \t\t}\n \n-\t      if (!__donet)\n-\t\t{\n-\t\t  if (__n < __lc->_M_truename_size)\n-\t\t    {\n-\t\t      __testt = __c == __lc->_M_truename[__n];\n-\t\t      if (!__testt)\n-\t\t\t__donet = true;\n-\t\t    }\n-\t\t  else\n-\t\t    __donet = true;\n-\t\t}\n+\t      const char_type __c = *__beg;\n \n-\t      if (__donef && __donet)\n+\t      if (__testf && __n < __lc->_M_falsename_size)\n+\t\t__testf = __c == __lc->_M_falsename[__n];\n+\n+\t      if (__testt && __n < __lc->_M_truename_size)\n+\t\t__testt = __c == __lc->_M_truename[__n];\n+\n+\t      if (!__testt && !__testf)\n \t\tbreak;\n-\t      \n-\t      if (++__beg == __end)\n-\t\t__testeof = true;\n-            }\n-\t  if (__testf && __n == __lc->_M_falsename_size)\n+\n+\t      if ((!__testt && __n >= __lc->_M_falsename_size)\n+\t\t  || (!__testf && __n >= __lc->_M_truename_size))\n+\t\tbreak;\n+\t    }\n+\t  if (__testf && __n == __lc->_M_falsename_size && __n)\n \t    {\n \t      __v = false;\n \t      if (__testt && __n == __lc->_M_truename_size)\n \t\t__err = ios_base::failbit;\n \t      else\n-\t\t__err = __donet ? ios_base::goodbit : ios_base::eofbit;\n+\t\t__err = __testeof ? ios_base::eofbit : ios_base::goodbit;\n \t    }\n-\t  else if (__testt && __n == __lc->_M_truename_size)\n+\t  else if (__testt && __n == __lc->_M_truename_size && __n)\n \t    {\n \t      __v = true;\n-\t      __err = __donef ? ios_base::goodbit : ios_base::eofbit;\n+\t      __err = __testeof ? ios_base::eofbit : ios_base::goodbit;\n \t    }\n \t  else\n \t    {\n \t      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n \t      // 23. Num_get overflow result.\n \t      __v = false;\n \t      __err = ios_base::failbit;\n-\t      if (__testeof && __n)\n+\t      if (__testeof)\n \t\t__err |= ios_base::eofbit;\n \t    }\n-        }\n+\t}\n       return __beg;\n     }\n "}]}