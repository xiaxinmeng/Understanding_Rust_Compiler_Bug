{"sha": "5f53c2438d7ab612645c5355a344e7fbf483bdf3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY1M2MyNDM4ZDdhYjYxMjY0NWM1MzU1YTM0NGU3ZmJmNDgzYmRmMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-10-23T20:59:43Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-10-23T20:59:43Z"}, "message": "re PR c++/50841 (bootstrap failure: narrowing conversion of '-0x00000000000000001' from 'int' in tree-object-size.c)\n\n/c-family\n2011-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/50841\n\tRevert:\n\t2011-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/50810\n\t* c-opts.c (c_common_handle_option): Enable -Wnarrowing as part\n\tof -Wall; include -Wnarrowing in -Wc++0x-compat; adjust default\n\tWnarrowing for C++0x and C++98.\n\t* c.opt ([Wnarrowing]): Update.\n\n/cp\n2011-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/50841\n\tRevert:\n\t2011-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/50810\n\t* typeck2.c (check_narrowing): Adjust OPT_Wnarrowing diagnostics.\n\t(digest_init_r): Call check_narrowing irrespective of the C++ dialect.\n\t* decl.c (check_initializer): Likewise.\n\t* semantics.c (finish_compound_literal): Likewise.\n\n/testsuite\n2011-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/50841\n\tRevert:\n\t2011-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/50810\n\t* g++.dg/cpp0x/warn_cxx0x2.C: New.\n\t* g++.dg/cpp0x/warn_cxx0x3.C: Likewise.\n\n2011-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/50841\n\tRevert:\n\t2011-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/50810\n\t* doc/invoke.texi ([-Wnarrowing], [-Wc++0x-compat]): Update.\n\nFrom-SVN: r180348", "tree": {"sha": "6419cf048cf3419e6cced14babbb3920789c4edf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6419cf048cf3419e6cced14babbb3920789c4edf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f53c2438d7ab612645c5355a344e7fbf483bdf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f53c2438d7ab612645c5355a344e7fbf483bdf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f53c2438d7ab612645c5355a344e7fbf483bdf3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f53c2438d7ab612645c5355a344e7fbf483bdf3/comments", "author": null, "committer": null, "parents": [{"sha": "be98aaf0bccea7960914007a08ca822713f5c60d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be98aaf0bccea7960914007a08ca822713f5c60d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be98aaf0bccea7960914007a08ca822713f5c60d"}], "stats": {"total": 88, "additions": 49, "deletions": 39}, "files": [{"sha": "d1c2c49ac85cab68585170f8a7e02eec510933c8", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f53c2438d7ab612645c5355a344e7fbf483bdf3/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f53c2438d7ab612645c5355a344e7fbf483bdf3/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=5f53c2438d7ab612645c5355a344e7fbf483bdf3", "patch": "@@ -1,3 +1,15 @@\n+2011-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/50841\n+\tRevert:\n+\t2011-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/50810\n+\t* c-opts.c (c_common_handle_option): Enable -Wnarrowing as part\n+\tof -Wall; include -Wnarrowing in -Wc++0x-compat; adjust default\n+\tWnarrowing for C++0x and C++98.\n+\t* c.opt ([Wnarrowing]): Update.\n+\n 2011-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/50810"}, {"sha": "6869d5c35ef005f03c7660222ac88740e02695c5", "filename": "gcc/c-family/c-opts.c", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f53c2438d7ab612645c5355a344e7fbf483bdf3/gcc%2Fc-family%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f53c2438d7ab612645c5355a344e7fbf483bdf3/gcc%2Fc-family%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-opts.c?ref=5f53c2438d7ab612645c5355a344e7fbf483bdf3", "patch": "@@ -406,7 +406,6 @@ c_common_handle_option (size_t scode, const char *arg, int value,\n \t  warn_reorder = value;\n           warn_cxx0x_compat = value;\n           warn_delnonvdtor = value;\n-\t  warn_narrowing = value;\n \t}\n \n       cpp_opts->warn_trigraphs = value;\n@@ -437,10 +436,6 @@ c_common_handle_option (size_t scode, const char *arg, int value,\n       cpp_opts->warn_cxx_operator_names = value;\n       break;\n \n-    case OPT_Wc__0x_compat:\n-      warn_narrowing = value;\n-      break;\n-\n     case OPT_Wdeprecated:\n       cpp_opts->cpp_warn_deprecated = value;\n       break;\n@@ -1002,17 +997,10 @@ c_common_post_options (const char **pfilename)\n   if (warn_implicit_function_declaration == -1)\n     warn_implicit_function_declaration = flag_isoc99;\n \n+  /* If we're allowing C++0x constructs, don't warn about C++0x\n+     compatibility problems.  */\n   if (cxx_dialect == cxx0x)\n-    {\n-      /* If we're allowing C++0x constructs, don't warn about C++98\n-\t identifiers which are keywords in C++0x.  */\n-      warn_cxx0x_compat = 0;\n-\n-      if (warn_narrowing == -1)\n-\twarn_narrowing = 1;\n-    }\n-  else if (warn_narrowing == -1)\n-    warn_narrowing = 0;\n+    warn_cxx0x_compat = 0;\n \n   if (flag_preprocess_only)\n     {"}, {"sha": "bfc1a7c922ce30d86e26b6779cfb42ba2996f120", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f53c2438d7ab612645c5355a344e7fbf483bdf3/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f53c2438d7ab612645c5355a344e7fbf483bdf3/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=5f53c2438d7ab612645c5355a344e7fbf483bdf3", "patch": "@@ -490,8 +490,8 @@ C ObjC C++ ObjC++ Warning\n Warn about use of multi-character character constants\n \n Wnarrowing\n-C ObjC C++ ObjC++ Warning Var(warn_narrowing) Init(-1) Warning\n-Warn about ill-formed narrowing conversions within { }\n+C ObjC C++ ObjC++ Warning Var(warn_narrowing) Init(1)\n+-Wno-narrowing\t  In C++0x mode, ignore ill-formed narrowing conversions within { }\n \n Wnested-externs\n C ObjC Var(warn_nested_externs) Warning"}, {"sha": "e48091f31174a9fedf3f2a88d36433a8377f69b4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f53c2438d7ab612645c5355a344e7fbf483bdf3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f53c2438d7ab612645c5355a344e7fbf483bdf3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5f53c2438d7ab612645c5355a344e7fbf483bdf3", "patch": "@@ -1,3 +1,15 @@\n+2011-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/50841\n+\tRevert:\n+\t2011-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/50810\n+\t* typeck2.c (check_narrowing): Adjust OPT_Wnarrowing diagnostics.\n+\t(digest_init_r): Call check_narrowing irrespective of the C++ dialect.\n+\t* decl.c (check_initializer): Likewise.\n+\t* semantics.c (finish_compound_literal): Likewise.\n+\n 2011-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/50810"}, {"sha": "a21cf461aabe9cc55ee60a84801ff7394d5d7418", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f53c2438d7ab612645c5355a344e7fbf483bdf3/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f53c2438d7ab612645c5355a344e7fbf483bdf3/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=5f53c2438d7ab612645c5355a344e7fbf483bdf3", "patch": "@@ -5523,7 +5523,7 @@ check_initializer (tree decl, tree init, int flags, tree *cleanup)\n \t  else\n \t    {\n \t      init = reshape_init (type, init, tf_warning_or_error);\n-\t      if (SCALAR_TYPE_P (type))\n+\t      if (cxx_dialect >= cxx0x && SCALAR_TYPE_P (type))\n \t\tcheck_narrowing (type, init);\n \t    }\n \t}"}, {"sha": "42195be4a81713340ca53d23bf4d358952bd21ee", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f53c2438d7ab612645c5355a344e7fbf483bdf3/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f53c2438d7ab612645c5355a344e7fbf483bdf3/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=5f53c2438d7ab612645c5355a344e7fbf483bdf3", "patch": "@@ -2369,7 +2369,7 @@ finish_compound_literal (tree type, tree compound_literal,\n       && check_array_initializer (NULL_TREE, type, compound_literal))\n     return error_mark_node;\n   compound_literal = reshape_init (type, compound_literal, complain);\n-  if (SCALAR_TYPE_P (type)\n+  if (cxx_dialect >= cxx0x && SCALAR_TYPE_P (type)\n       && !BRACE_ENCLOSED_INITIALIZER_P (compound_literal))\n     check_narrowing (type, compound_literal);\n   if (TREE_CODE (type) == ARRAY_TYPE"}, {"sha": "0cb1104dc384336b8486b58c65b851d2e8f9473a", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f53c2438d7ab612645c5355a344e7fbf483bdf3/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f53c2438d7ab612645c5355a344e7fbf483bdf3/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=5f53c2438d7ab612645c5355a344e7fbf483bdf3", "patch": "@@ -803,10 +803,8 @@ check_narrowing (tree type, tree init)\n     }\n \n   if (!ok)\n-    emit_diagnostic ((cxx_dialect != cxx98) ? DK_PEDWARN : DK_WARNING,\n-\t\t     input_location, OPT_Wnarrowing,\n-\t\t     \"narrowing conversion of %qE from %qT to %qT inside { }\",\n-\t\t     init, ftype, type);\n+    pedwarn (input_location, OPT_Wnarrowing, \"narrowing conversion of %qE \"\n+\t     \"from %qT to %qT inside { }\", init, ftype, type);\n }\n \n /* Process the initializer INIT for a variable of type TYPE, emitting\n@@ -903,7 +901,7 @@ digest_init_r (tree type, tree init, bool nested, int flags,\n     {\n       tree *exp;\n \n-      if (nested)\n+      if (cxx_dialect != cxx98 && nested)\n \tcheck_narrowing (type, init);\n       init = convert_for_initialization (0, type, init, flags,\n \t\t\t\t\t ICR_INIT, NULL_TREE, 0,"}, {"sha": "9791a8f476a410cdb615b80b1c06e9d28dc51dfc", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f53c2438d7ab612645c5355a344e7fbf483bdf3/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f53c2438d7ab612645c5355a344e7fbf483bdf3/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=5f53c2438d7ab612645c5355a344e7fbf483bdf3", "patch": "@@ -2365,18 +2365,17 @@ an instance of a derived class through a pointer to a base class if the\n base class does not have a virtual destructor.  This warning is enabled\n by @option{-Wall}.\n \n-@item -Wnarrowing @r{(C++ and Objective-C++ only)}\n+@item -Wno-narrowing @r{(C++ and Objective-C++ only)}\n @opindex Wnarrowing\n @opindex Wno-narrowing\n-Warn when a narrowing conversion occurs within @samp{@{ @}}, e.g.\n+With -std=c++0x, suppress the diagnostic required by the standard for\n+narrowing conversions within @samp{@{ @}}, e.g.\n \n @smallexample\n int i = @{ 2.2 @}; // error: narrowing from double to int\n @end smallexample\n \n-This flag is included in @option{-Wall} and @option{-Wc++0x-compat}.\n-With -std=c++0x, @option{-Wno-narrowing} suppresses the diagnostic\n-required by the standard.\n+This flag can be useful for compiling valid C++98 code in C++0x mode\n \n @item -Wnoexcept @r{(C++ and Objective-C++ only)}\n @opindex Wnoexcept\n@@ -4067,8 +4066,7 @@ ISO C and ISO C++, e.g.@: request for implicit conversion from\n @item -Wc++0x-compat @r{(C++ and Objective-C++ only)}\n Warn about C++ constructs whose meaning differs between ISO C++ 1998 and\n ISO C++ 200x, e.g., identifiers in ISO C++ 1998 that will become keywords\n-in ISO C++ 200x.  This warning turns on @option{-Wnarrowing} and is\n-enabled by @option{-Wall}.\n+in ISO C++ 200x.  This warning is enabled by @option{-Wall}.\n \n @item -Wcast-qual\n @opindex Wcast-qual"}, {"sha": "5e5ef94389008127b6b13f546273c9b500ffd34f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f53c2438d7ab612645c5355a344e7fbf483bdf3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f53c2438d7ab612645c5355a344e7fbf483bdf3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5f53c2438d7ab612645c5355a344e7fbf483bdf3", "patch": "@@ -1,3 +1,13 @@\n+2011-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/50841\n+\tRevert:\n+\t2011-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/50810\n+\t* g++.dg/cpp0x/warn_cxx0x2.C: New.\n+\t* g++.dg/cpp0x/warn_cxx0x3.C: Likewise.\n+\n 2011-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/50810"}, {"sha": "1fc9c6bb51a6e6e18a50a7175991e9f9335d43d3", "filename": "gcc/testsuite/g++.dg/cpp0x/warn_cxx0x2.C", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be98aaf0bccea7960914007a08ca822713f5c60d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fwarn_cxx0x2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be98aaf0bccea7960914007a08ca822713f5c60d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fwarn_cxx0x2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fwarn_cxx0x2.C?ref=be98aaf0bccea7960914007a08ca822713f5c60d", "patch": "@@ -1,4 +0,0 @@\n-// PR c++/50810\n-// { dg-options \"-std=gnu++98 -Wc++0x-compat\" }\n-\n-signed char data[] = { 0xff }; // { dg-warning \"narrowing\" }"}, {"sha": "91faf120b85030b7f5d4c6bf55c6ea994af36305", "filename": "gcc/testsuite/g++.dg/cpp0x/warn_cxx0x3.C", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be98aaf0bccea7960914007a08ca822713f5c60d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fwarn_cxx0x3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be98aaf0bccea7960914007a08ca822713f5c60d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fwarn_cxx0x3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fwarn_cxx0x3.C?ref=be98aaf0bccea7960914007a08ca822713f5c60d", "patch": "@@ -1,4 +0,0 @@\n-// PR c++/50810\n-// { dg-options \"-std=gnu++98 -Wc++0x-compat -Wno-narrowing\" }\n-\n-signed char data[] = { 0xff };"}]}