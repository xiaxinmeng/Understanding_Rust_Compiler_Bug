{"sha": "86dc0a1a1f6df906d1885de17d634aaa2ac08f08", "node_id": "C_kwDOANBUbNoAKDg2ZGMwYTFhMWY2ZGY5MDZkMTg4NWRlMTdkNjM0YWFhMmFjMDhmMDg", "commit": {"author": {"name": "Owen Avery", "email": "powerboat9.gamer@gmail.com", "date": "2023-05-12T07:05:03Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2023-05-17T16:07:51Z"}, "message": "Improve Optional<T&> implementation\n\ngcc/rust/ChangeLog:\n\n\t* util/rust-optional.h\n\t(class Optional<T&>): Use pointers internally.\n\nSigned-off-by: Owen Avery <powerboat9.gamer@gmail.com>", "tree": {"sha": "ad139202db2cbbfc43bdbf6084cb9746c827d766", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad139202db2cbbfc43bdbf6084cb9746c827d766"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86dc0a1a1f6df906d1885de17d634aaa2ac08f08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86dc0a1a1f6df906d1885de17d634aaa2ac08f08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86dc0a1a1f6df906d1885de17d634aaa2ac08f08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86dc0a1a1f6df906d1885de17d634aaa2ac08f08/comments", "author": {"login": "powerboat9", "id": 7397652, "node_id": "MDQ6VXNlcjczOTc2NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/7397652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/powerboat9", "html_url": "https://github.com/powerboat9", "followers_url": "https://api.github.com/users/powerboat9/followers", "following_url": "https://api.github.com/users/powerboat9/following{/other_user}", "gists_url": "https://api.github.com/users/powerboat9/gists{/gist_id}", "starred_url": "https://api.github.com/users/powerboat9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/powerboat9/subscriptions", "organizations_url": "https://api.github.com/users/powerboat9/orgs", "repos_url": "https://api.github.com/users/powerboat9/repos", "events_url": "https://api.github.com/users/powerboat9/events{/privacy}", "received_events_url": "https://api.github.com/users/powerboat9/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c03c7d73ccba10b33e63452bea148febdc22c1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c03c7d73ccba10b33e63452bea148febdc22c1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c03c7d73ccba10b33e63452bea148febdc22c1a"}], "stats": {"total": 59, "additions": 9, "deletions": 50}, "files": [{"sha": "01a5ff05e906db1113a21a5cef32f1cea67f4d84", "filename": "gcc/rust/util/rust-optional.h", "status": "modified", "additions": 9, "deletions": 50, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86dc0a1a1f6df906d1885de17d634aaa2ac08f08/gcc%2Frust%2Futil%2Frust-optional.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86dc0a1a1f6df906d1885de17d634aaa2ac08f08/gcc%2Frust%2Futil%2Frust-optional.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-optional.h?ref=86dc0a1a1f6df906d1885de17d634aaa2ac08f08", "patch": "@@ -171,48 +171,16 @@ template <typename T> class Optional\n template <typename T> class Optional<T &>\n {\n private:\n-  struct Empty\n-  {\n-  };\n+  T *inner;\n \n-  enum Kind\n-  {\n-    Some,\n-    None\n-  } kind;\n-\n-  union Content\n-  {\n-    Empty empty;\n-    T *value;\n-\n-    Content () = default;\n-  } content;\n-\n-  Optional<T &> (Kind kind, Content content) : kind (kind), content (content) {}\n+  Optional (T *inner) : inner (inner) {}\n \n public:\n-  Optional (const Optional &other) = default;\n-  Optional (Optional &&other) = default;\n-  Optional &operator= (Optional &&other) = default;\n-\n-  static Optional<T &> some (T &value)\n-  {\n-    Content content;\n-    content.value = &value;\n+  static Optional<T &> some (T &value) { return Optional (&value); }\n \n-    return Optional (Kind::Some, content);\n-  }\n-\n-  static Optional<T &> none ()\n-  {\n-    Content content;\n-    content.empty = Empty ();\n+  static Optional<T &> none () { return Optional (nullptr); }\n \n-    return Optional (Kind::None, content);\n-  }\n-\n-  bool is_some () const { return kind == Kind::Some; }\n+  bool is_some () const { return inner; }\n   bool is_none () const { return !is_some (); }\n \n   // FIXME: Can we factor this in a single class?\n@@ -230,28 +198,19 @@ template <typename T> class Optional<T &>\n   T *operator-> () { return &get (); }\n   const T *operator-> () const { return &get (); }\n \n-  const T &get () const\n+  T &get () const\n   {\n     rust_assert (is_some ());\n \n-    return *content.value;\n-  }\n-\n-  T &get ()\n-  {\n-    rust_assert (is_some ());\n-\n-    return *content.value;\n+    return *inner;\n   }\n \n   T &take ()\n   {\n     rust_assert (is_some ());\n \n-    auto to_return = std::move (content.value);\n-\n-    content.empty = Empty ();\n-    kind = Kind::None;\n+    T *to_return = inner;\n+    inner = nullptr;\n \n     return *to_return;\n   }"}]}