{"sha": "bfd3806a65b703ca794632bb560391700c6316ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZkMzgwNmE2NWI3MDNjYTc5NDYzMmJiNTYwMzkxNzAwYzYzMTZlZg==", "commit": {"author": {"name": "Balaji V. Iyer", "email": "balaji.v.iyer@intel.com", "date": "2014-01-09T15:41:20Z"}, "committer": {"name": "Balaji V. Iyer", "email": "bviyer@gcc.gnu.org", "date": "2014-01-09T15:41:20Z"}, "message": "Fix for PR testsuite/59524 2014-01-09 Balaji V.\n\nFix for PR testsuite/59524\n2014-01-09  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n\n+       PR testsuite/59524\n+       * gcc.dg/cilk-plus/cilk-plus.exp: Make sure the cilk keywords tests\n+       are run only if the Cilk library is available/enabled.\n+       * g++.dg/cilk-plus/cilk-plus.exp: Likewise.\n+       * lib/target-supports.exp (check_libcilkrts_available): New \nfunction.\n+\n\nFrom-SVN: r206468", "tree": {"sha": "f768da65578de1b02343415fe77af0ea933ada33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f768da65578de1b02343415fe77af0ea933ada33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfd3806a65b703ca794632bb560391700c6316ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfd3806a65b703ca794632bb560391700c6316ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfd3806a65b703ca794632bb560391700c6316ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfd3806a65b703ca794632bb560391700c6316ef/comments", "author": null, "committer": null, "parents": [{"sha": "9a74f20cd7ebc15e926de399d133103466e68c78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a74f20cd7ebc15e926de399d133103466e68c78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a74f20cd7ebc15e926de399d133103466e68c78"}], "stats": {"total": 62, "additions": 36, "deletions": 26}, "files": [{"sha": "30e02eda67b7501532cab79ce4e980e908513f0a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd3806a65b703ca794632bb560391700c6316ef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd3806a65b703ca794632bb560391700c6316ef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bfd3806a65b703ca794632bb560391700c6316ef", "patch": "@@ -1,3 +1,11 @@\n+2014-01-09  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n+\n+\tPR testsuite/59524\n+\t* gcc.dg/cilk-plus/cilk-plus.exp: Make sure the cilk keywords tests\n+\tare run only if the Cilk library is available/enabled.\n+\t* g++.dg/cilk-plus/cilk-plus.exp: Likewise.\n+\t* lib/target-supports.exp (check_libcilkrts_available): New function.\n+\n 2014-01-09  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n \n \tPR c++/59631"}, {"sha": "37b8ccbe70ae32b4dde6c8d8405f9c9b14506e97", "filename": "gcc/testsuite/g++.dg/cilk-plus/cilk-plus.exp", "status": "modified", "additions": 10, "deletions": 20, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd3806a65b703ca794632bb560391700c6316ef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2Fcilk-plus.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd3806a65b703ca794632bb560391700c6316ef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2Fcilk-plus.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2Fcilk-plus.exp?ref=bfd3806a65b703ca794632bb560391700c6316ef", "patch": "@@ -47,9 +47,7 @@ dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -g\n dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -g -O2 -ftree-vectorize -fcilkplus\" \" \"\n dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -g -O3 -fcilkplus\" \" \"\n dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -O3 -ftree-vectorize -fcilkplus -g\" \" \"\n-dg-finish\n \n-dg-init\n dg-runtest [lsort [glob -nocomplain $srcdir/g++.dg/cilk-plus/AN/*.cc]] \" -fcilkplus\" \" \"\n dg-runtest [lsort [glob -nocomplain $srcdir/g++.dg/cilk-plus/AN/*.cc]] \" -O0 -fcilkplus\" \" \"\n dg-runtest [lsort [glob -nocomplain $srcdir/g++.dg/cilk-plus/AN/*.cc]] \" -O1 -fcilkplus\" \" \"\n@@ -61,25 +59,17 @@ dg-runtest [lsort [glob -nocomplain $srcdir/g++.dg/cilk-plus/AN/*.cc]] \" -g -O1\n dg-runtest [lsort [glob -nocomplain $srcdir/g++.dg/cilk-plus/AN/*.cc]] \" -g -O2 -ftree-vectorize -fcilkplus\" \" \"\n dg-runtest [lsort [glob -nocomplain $srcdir/g++.dg/cilk-plus/AN/*.cc]] \" -g -O3 -fcilkplus\" \" \"\n dg-runtest [lsort [glob -nocomplain $srcdir/g++.dg/cilk-plus/AN/*.cc]] \" -O3 -ftree-vectorize -fcilkplus -g\" \" \"\n-dg-finish\n \n-dg-init\n-dg-runtest [lsort [glob -nocomplain $srcdir/g++.dg/cilk-plus/CK/*.cc]] \" -fcilkplus\" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/g++.dg/cilk-plus/CK/*.cc]] \" -O1 -fcilkplus\" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/g++.dg/cilk-plus/CK/*.cc]] \" -O2 -fcilkplus\" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/g++.dg/cilk-plus/CK/*.cc]] \" -O3 -fcilkplus\" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/g++.dg/cilk-plus/CK/*.cc]] \" -g -fcilkplus\" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/g++.dg/cilk-plus/CK/*.cc]] \" -g -O2 -fcilkplus\" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/g++.dg/cilk-plus/CK/*.cc]] \" -g -O3 -fcilkplus\" \" \"\n-dg-finish\n+if { [check_libcilkrts_available] } {\n+    dg-runtest [lsort [glob -nocomplain $srcdir/g++.dg/cilk-plus/CK/*.cc]] \" -O1 -fcilkplus\" \" \"\n+    dg-runtest [lsort [glob -nocomplain $srcdir/g++.dg/cilk-plus/CK/*.cc]] \" -O3 -fcilkplus\" \" \"\n+    dg-runtest [lsort [glob -nocomplain $srcdir/g++.dg/cilk-plus/CK/*.cc]] \" -g -fcilkplus\" \" \"\n+    dg-runtest [lsort [glob -nocomplain $srcdir/g++.dg/cilk-plus/CK/*.cc]] \" -g -O2 -fcilkplus\" \" \"\n \n-dg-init\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" \" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O1 \" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O2 \" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O3 \" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -g \" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -g -O2 \" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -g -O3 \" \" \"\n+    dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O1\" \" \"\n+    dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O3\" \" \"\n+    dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -g\" \" \"\n+    dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -g -O2\" \" \"\n+  }\n dg-finish\n unset TEST_EXTRA_LIBS"}, {"sha": "61085fd8f1f1bb42fa42f1fdfe8c0d1e98e38302", "filename": "gcc/testsuite/gcc.dg/cilk-plus/cilk-plus.exp", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd3806a65b703ca794632bb560391700c6316ef/gcc%2Ftestsuite%2Fgcc.dg%2Fcilk-plus%2Fcilk-plus.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd3806a65b703ca794632bb560391700c6316ef/gcc%2Ftestsuite%2Fgcc.dg%2Fcilk-plus%2Fcilk-plus.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcilk-plus%2Fcilk-plus.exp?ref=bfd3806a65b703ca794632bb560391700c6316ef", "patch": "@@ -51,13 +51,15 @@ dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -f\n dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -fcilkplus -O3 -std=c99\" \" \"\n dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -fcilkplus -g -O0 -std=c99\" \" \"\n \n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -g \" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O1 \" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O2 -std=c99 \" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O2 -ftree-vectorize \" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O3 -g \" \" \"\n-if { [check_effective_target_lto] } {\n+if { [check_libcilkrts_available] } {\n+  dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -g \" \" \"\n+  dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O1 \" \" \"\n+  dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O2 -std=c99 \" \" \"\n+  dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O2 -ftree-vectorize \" \" \"\n+  dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O3 -g \" \" \"\n+  if { [check_effective_target_lto] } {\n     dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O3 -flto -g \" \" \"\n+  }\n }\n \n dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/SE/*.c]] \" -g\" \" \""}, {"sha": "95360089b89d5fef2997dc6dbe7f47a6864143ea", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd3806a65b703ca794632bb560391700c6316ef/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd3806a65b703ca794632bb560391700c6316ef/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=bfd3806a65b703ca794632bb560391700c6316ef", "patch": "@@ -1035,6 +1035,16 @@ proc check_iconv_available { test_what } {\n     }] $libiconv]\n }\n \n+# Return true if Cilk Library is supported on the target.\n+proc check_libcilkrts_available { } {\n+  return [ check_no_compiler_messages_nocache libcilkrts_available executable {\n+\t    int main (void) { \n+\t\t__cilkrts_set_param (\"nworkers\", \"0\");  \n+\t\treturn 0; \n+\t    }\n+\t} \"-fcilkplus -lcilkrts\" ]\n+}\n+\n # Return 1 if an ASCII locale is supported on this host, 0 otherwise.\n \n proc check_ascii_locale_available { } {"}]}