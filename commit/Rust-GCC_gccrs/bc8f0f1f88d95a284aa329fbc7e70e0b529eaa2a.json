{"sha": "bc8f0f1f88d95a284aa329fbc7e70e0b529eaa2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM4ZjBmMWY4OGQ5NWEyODRhYTMyOWZiYzdlNzBlMGI1MjllYWEyYQ==", "commit": {"author": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2020-11-24T16:25:16Z"}, "committer": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2020-11-24T16:36:23Z"}, "message": "[PR97933] LRA: find correctly last empty dest block.\n\ngcc/\n\n2020-11-24  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR bootstrap/97933\n\t* lra.c (lra_process_new_insns): Stop on the first real insn after\n\thead of e->dest.", "tree": {"sha": "364a9c8e920332f58db46b58e2fb98ee41f3c247", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/364a9c8e920332f58db46b58e2fb98ee41f3c247"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc8f0f1f88d95a284aa329fbc7e70e0b529eaa2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc8f0f1f88d95a284aa329fbc7e70e0b529eaa2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc8f0f1f88d95a284aa329fbc7e70e0b529eaa2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc8f0f1f88d95a284aa329fbc7e70e0b529eaa2a/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f30a9a8d9e06ae2bf38e0d25e3ca6095212c78e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f30a9a8d9e06ae2bf38e0d25e3ca6095212c78e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f30a9a8d9e06ae2bf38e0d25e3ca6095212c78e9"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "4ec0f46637699b5f880a89ae2250d8957a7f9476", "filename": "gcc/lra.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc8f0f1f88d95a284aa329fbc7e70e0b529eaa2a/gcc%2Flra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc8f0f1f88d95a284aa329fbc7e70e0b529eaa2a/gcc%2Flra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra.c?ref=bc8f0f1f88d95a284aa329fbc7e70e0b529eaa2a", "patch": "@@ -1908,11 +1908,9 @@ lra_process_new_insns (rtx_insn *insn, rtx_insn *before, rtx_insn *after,\n \t\t  tmp = NEXT_INSN (tmp);\n \t\tif (NOTE_INSN_BASIC_BLOCK_P (tmp))\n \t\t  tmp = NEXT_INSN (tmp);\n-\t\tfor (curr = tmp;\n-\t\t     curr != NULL\n-\t\t       && (!INSN_P (curr) || BLOCK_FOR_INSN (curr) == e->dest);\n-\t\t     curr = NEXT_INSN (curr))\n-\t\t  ;\n+\t\tfor (curr = tmp; curr != NULL; curr = NEXT_INSN (curr))\n+\t\t  if (INSN_P (curr))\n+\t\t    break;\n \t\t/* Do not put reload insns if it is the last BB\n \t\t   without actual insns.  In this case the reload insns\n \t\t   can get null BB after emitting.  */"}]}