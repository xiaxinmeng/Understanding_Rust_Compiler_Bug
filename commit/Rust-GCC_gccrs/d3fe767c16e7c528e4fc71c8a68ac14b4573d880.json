{"sha": "d3fe767c16e7c528e4fc71c8a68ac14b4573d880", "node_id": "C_kwDOANBUbNoAKGQzZmU3NjdjMTZlN2M1MjhlNGZjNzFjOGE2OGFjMTRiNDU3M2Q4ODA", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-09T21:49:52Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-11T04:00:58Z"}, "message": "c-family: Support #pragma region/endregion [PR85487]\n\nThese pragmas are used by some editors to mark regions of code for\ngrouping and folding. GCC should silently ignore them, rather than\ngiving -Wunknown-pragmas warnings.\n\n\tPR c/85487\n\ngcc/ChangeLog:\n\n\t* doc/cpp/pragmas.rst (Pragmas): Document region pragmas.\n\ngcc/c-family/ChangeLog:\n\n\t* c-pragma.cc (handle_pragma_ignore): New function.\n\t(init_pragma): Register region and endregion pragmas.\n\ngcc/testsuite/ChangeLog:\n\n\t* c-c++-common/pragma-region.c: New test.", "tree": {"sha": "6e2c1d83054da0462c94e21ff347c3ebf813003b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e2c1d83054da0462c94e21ff347c3ebf813003b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3fe767c16e7c528e4fc71c8a68ac14b4573d880", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3fe767c16e7c528e4fc71c8a68ac14b4573d880", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3fe767c16e7c528e4fc71c8a68ac14b4573d880", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3fe767c16e7c528e4fc71c8a68ac14b4573d880/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21de01f5554fa037f59b27525d2eb7342f5649c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21de01f5554fa037f59b27525d2eb7342f5649c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21de01f5554fa037f59b27525d2eb7342f5649c7"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "142a46441ac2d65fd95aa05a89b8f8c3be0eba4b", "filename": "gcc/c-family/c-pragma.cc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3fe767c16e7c528e4fc71c8a68ac14b4573d880/gcc%2Fc-family%2Fc-pragma.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3fe767c16e7c528e4fc71c8a68ac14b4573d880/gcc%2Fc-family%2Fc-pragma.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pragma.cc?ref=d3fe767c16e7c528e4fc71c8a68ac14b4573d880", "patch": "@@ -1403,6 +1403,12 @@ handle_pragma_message (cpp_reader *)\n \t    TREE_STRING_POINTER (message));\n }\n \n+/* Ignore a no-op pragma that GCC recognizes, but which has no effect.  */\n+static void\n+handle_pragma_ignore (cpp_reader *)\n+{\n+}\n+\n /* Mark whether the current location is valid for a STDC pragma.  */\n \n static bool valid_location_for_stdc_pragma;\n@@ -1870,6 +1876,9 @@ init_pragma (void)\n   c_register_pragma (\"GCC\", \"pop_options\", handle_pragma_pop_options);\n   c_register_pragma (\"GCC\", \"reset_options\", handle_pragma_reset_options);\n \n+  c_register_pragma (0, \"region\", handle_pragma_ignore);\n+  c_register_pragma (0, \"endregion\", handle_pragma_ignore);\n+\n   c_register_pragma (\"STDC\", \"FLOAT_CONST_DECIMAL64\",\n \t\t     handle_pragma_float_const_decimal64);\n "}, {"sha": "78277d7b62328f751f19ff93659e9c05878718b9", "filename": "gcc/doc/cpp/pragmas.rst", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3fe767c16e7c528e4fc71c8a68ac14b4573d880/gcc%2Fdoc%2Fcpp%2Fpragmas.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3fe767c16e7c528e4fc71c8a68ac14b4573d880/gcc%2Fdoc%2Fcpp%2Fpragmas.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp%2Fpragmas.rst?ref=d3fe767c16e7c528e4fc71c8a68ac14b4573d880", "patch": "@@ -119,3 +119,6 @@ GCC plugins may provide their own pragmas.\n   file will never be read again, no matter what.  It is a less-portable\n   alternative to using :samp:`#ifndef` to guard the contents of header files\n   against multiple inclusions.\n+\n+``#pragma region {tokens}...``, ``#pragma endregion {tokens}...``\n+  These pragmas are accepted, but have no effect."}, {"sha": "8e0cbe1f16fee03b7933e66f44622f6ff4829834", "filename": "gcc/testsuite/c-c++-common/pragma-region.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3fe767c16e7c528e4fc71c8a68ac14b4573d880/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpragma-region.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3fe767c16e7c528e4fc71c8a68ac14b4573d880/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpragma-region.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpragma-region.c?ref=d3fe767c16e7c528e4fc71c8a68ac14b4573d880", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-options \"-Wunknown-pragmas\" } */\n+/* { dg-final { scan-assembler \"code_within_region\" } } */\n+/* { dg-final { scan-assembler \"code_within_named_region\" } } */\n+\n+#pragma region\n+void code_within_region() { }\n+#pragma endregion\n+\n+#pragma region ignored name\n+void code_within_named_region() { }\n+#pragma endregion // ignored comment"}]}