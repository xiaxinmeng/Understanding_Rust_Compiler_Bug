{"sha": "0b8fa12015f717ac7e4fe2ffbad96a0cb0df2584", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI4ZmExMjAxNWY3MTdhYzdlNGZlMmZmYmFkOTZhMGNiMGRmMjU4NA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-03-03T15:12:23Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-03-03T15:12:23Z"}, "message": "c++: Fix -fstrong-eval-order for operator &&, || and , [PR82959]\n\nP0145R3 added\n\"However, the operands are sequenced in the order prescribed for the built-in\noperator\" rule for overloaded operator calls when using the operator syntax.\nop_is_ordered follows that, but added just the overloaded operators\nadded in that paper.  &&, || and comma operators had rules that\nlhs is sequenced before rhs already in C++98.\nThe following patch adds those cases to op_is_ordered.\n\n2021-03-03  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/82959\n\t* call.c (op_is_ordered): Handle TRUTH_ANDIF_EXPR, TRUTH_ORIF_EXPR\n\tand COMPOUND_EXPR.\n\n\t* g++.dg/cpp1z/eval-order10.C: New test.", "tree": {"sha": "c9d4a4b312bb5497372bf0d486327886359765ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9d4a4b312bb5497372bf0d486327886359765ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b8fa12015f717ac7e4fe2ffbad96a0cb0df2584", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b8fa12015f717ac7e4fe2ffbad96a0cb0df2584", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b8fa12015f717ac7e4fe2ffbad96a0cb0df2584", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b8fa12015f717ac7e4fe2ffbad96a0cb0df2584/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa6092d2cdc654d4b2e018929c0dbe13fbd4ea69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa6092d2cdc654d4b2e018929c0dbe13fbd4ea69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa6092d2cdc654d4b2e018929c0dbe13fbd4ea69"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "123f06b1f2ba82a3df77df1731d7802105519214", "filename": "gcc/cp/call.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b8fa12015f717ac7e4fe2ffbad96a0cb0df2584/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b8fa12015f717ac7e4fe2ffbad96a0cb0df2584/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=0b8fa12015f717ac7e4fe2ffbad96a0cb0df2584", "patch": "@@ -6083,6 +6083,15 @@ op_is_ordered (tree_code code)\n     case LSHIFT_EXPR:\n       // 8. a >> b\n     case RSHIFT_EXPR:\n+      // a && b\n+      // Predates P0145R3.\n+    case TRUTH_ANDIF_EXPR:\n+      // a || b\n+      // Predates P0145R3.\n+    case TRUTH_ORIF_EXPR:\n+      // a , b\n+      // Predates P0145R3.\n+    case COMPOUND_EXPR:\n       return (flag_strong_eval_order ? 1 : 0);\n \n     default:"}, {"sha": "02719b7e81010b465f3e9f89fa9cf9f2cb3cd510", "filename": "gcc/testsuite/g++.dg/cpp1z/eval-order10.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b8fa12015f717ac7e4fe2ffbad96a0cb0df2584/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Feval-order10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b8fa12015f717ac7e4fe2ffbad96a0cb0df2584/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Feval-order10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Feval-order10.C?ref=0b8fa12015f717ac7e4fe2ffbad96a0cb0df2584", "patch": "@@ -0,0 +1,27 @@\n+// PR c++/82959\n+// { dg-do run }\n+// { dg-additional-options -fstrong-eval-order }\n+\n+struct A {};\n+\n+void operator && (const A x, const A) {}\n+void operator || (const A x, const A) {}\n+void operator , (const A x, const A) {}\n+\n+int i;\n+\n+A f () { if (i != 0) __builtin_abort (); i = 1; return A (); }\n+A g () { if (i != 1) __builtin_abort (); i = 2; return A (); }\n+\n+int\n+main ()\n+{\n+  f () && g ();\n+  if (i != 2) __builtin_abort ();\n+  i = 0;\n+  f () || g ();\n+  if (i != 2) __builtin_abort ();\n+  i = 0;\n+  f (), g ();\n+  if (i != 2) __builtin_abort ();\n+}"}]}