{"sha": "2062f77b8b897691f102434aeec3253ad2ea28a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA2MmY3N2I4Yjg5NzY5MWYxMDI0MzRhZWVjMzI1M2FkMmVhMjhhNQ==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2011-10-31T14:26:38Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2011-10-31T14:26:38Z"}, "message": "cgraphunit.c: Don't mark clones as static constructors.\n\n2011-10-31  Paul Brook  <paul@codesourcery.com>\n\n\tgcc/\n\t* cgraphunit.c: Don't mark clones as static constructors.\n\n\tgcc/testsuite/\n\t* gcc.dg/constructor-1.c: New test.\n\nFrom-SVN: r180700", "tree": {"sha": "42ff300848a41e6cdbc324d1a275461b455846f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42ff300848a41e6cdbc324d1a275461b455846f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2062f77b8b897691f102434aeec3253ad2ea28a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2062f77b8b897691f102434aeec3253ad2ea28a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2062f77b8b897691f102434aeec3253ad2ea28a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2062f77b8b897691f102434aeec3253ad2ea28a5/comments", "author": null, "committer": null, "parents": [{"sha": "41bd49ea5fb7c089aa2def40e07c548af8a745e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41bd49ea5fb7c089aa2def40e07c548af8a745e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41bd49ea5fb7c089aa2def40e07c548af8a745e2"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "53f8878288d5d09ef2589f590484bfeccfef1580", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2062f77b8b897691f102434aeec3253ad2ea28a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2062f77b8b897691f102434aeec3253ad2ea28a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2062f77b8b897691f102434aeec3253ad2ea28a5", "patch": "@@ -1,3 +1,7 @@\n+2011-10-31  Paul Brook  <paul@codesourcery.com>\n+\n+\t* cgraphunit.c: Don't mark clones as static constructors.\n+\n 2011-10-31  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* gcc-ar: Do not include stdio.h."}, {"sha": "83c47ab66fdfb5e8df35a4029573f2b266408e5c", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2062f77b8b897691f102434aeec3253ad2ea28a5/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2062f77b8b897691f102434aeec3253ad2ea28a5/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=2062f77b8b897691f102434aeec3253ad2ea28a5", "patch": "@@ -2366,6 +2366,10 @@ cgraph_function_versioning (struct cgraph_node *old_version_node,\n   SET_DECL_ASSEMBLER_NAME (new_decl, DECL_NAME (new_decl));\n   SET_DECL_RTL (new_decl, NULL);\n \n+  /* When the old decl was a con-/destructor make sure the clone isn't.  */\n+  DECL_STATIC_CONSTRUCTOR(new_decl) = 0;\n+  DECL_STATIC_DESTRUCTOR(new_decl) = 0;\n+\n   /* Create the new version's call-graph node.\n      and update the edges of the new node. */\n   new_version_node ="}, {"sha": "a432ab8516487a046067e6293f7bc17366696727", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2062f77b8b897691f102434aeec3253ad2ea28a5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2062f77b8b897691f102434aeec3253ad2ea28a5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2062f77b8b897691f102434aeec3253ad2ea28a5", "patch": "@@ -1,3 +1,7 @@\n+2011-10-31  Paul Brook  <paul@codesourcery.com>\n+\n+\t* gcc.dg/constructor-1.c: New test.\n+\n 2011-10-30  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/50753"}, {"sha": "1095a455cfa66786ae307382aea72605adf022c2", "filename": "gcc/testsuite/gcc.dg/constructor-1.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2062f77b8b897691f102434aeec3253ad2ea28a5/gcc%2Ftestsuite%2Fgcc.dg%2Fconstructor-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2062f77b8b897691f102434aeec3253ad2ea28a5/gcc%2Ftestsuite%2Fgcc.dg%2Fconstructor-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fconstructor-1.c?ref=2062f77b8b897691f102434aeec3253ad2ea28a5", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+/* The ipa-split pass pulls the body of the if(!x) block\n+   into a separate function to make foo a better inlining\n+   candidate.  Make sure this new function isn't also run\n+   as a static constructor.  */\n+\n+#include <stdlib.h>\n+\n+int x, y;\n+\n+void __attribute__((noinline))\n+bar(void)\n+{\n+  y++;\n+}\n+\n+void __attribute__((constructor))\n+foo(void)\n+{\n+  if (!x)\n+    {\n+      bar();\n+      y++;\n+    }   \n+} \n+\n+int main()\n+{\n+  x = 1;\n+  foo();\n+  foo();\n+  if (y != 2)\n+    abort();\n+  exit(0);\n+}"}]}