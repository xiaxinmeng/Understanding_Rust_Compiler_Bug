{"sha": "4b195d270ca3fb13ffa0881cf0b4e92b25f7a560", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIxOTVkMjcwY2EzZmIxM2ZmYTA4ODFjZjBiNGU5MmIyNWY3YTU2MA==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2018-12-09T12:47:58Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2018-12-09T12:47:58Z"}, "message": "Use existing middle end checking for Fortran OpenACC loop clauses\n\nDon't duplicate in the Fortran front end what's generically being checked in\nthe middle end.\n\n\tgcc/fortran/\n\t* openmp.c (resolve_oacc_loop_blocks): Remove checking of OpenACC\n\tloop clauses.\n\tgcc/testsuite/\n\t* gfortran.dg/goacc/loop-2-kernels.f95: Update.\n\t* gfortran.dg/goacc/loop-2-parallel.f95: Likewise.\n\t* gfortran.dg/goacc/nested-parallelism.f90: Likewise.\n\nFrom-SVN: r266922", "tree": {"sha": "0c21cdb822e340a71667bbdae9f6effc634cb31f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c21cdb822e340a71667bbdae9f6effc634cb31f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b195d270ca3fb13ffa0881cf0b4e92b25f7a560", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b195d270ca3fb13ffa0881cf0b4e92b25f7a560", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b195d270ca3fb13ffa0881cf0b4e92b25f7a560", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b195d270ca3fb13ffa0881cf0b4e92b25f7a560/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "877009a5d9813da7aaf20ef3eb002d84644364dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/877009a5d9813da7aaf20ef3eb002d84644364dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/877009a5d9813da7aaf20ef3eb002d84644364dc"}], "stats": {"total": 169, "additions": 53, "deletions": 116}, "files": [{"sha": "c6eb05174f69bc2e46a1bf39c703d4cabceb68ea", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b195d270ca3fb13ffa0881cf0b4e92b25f7a560/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b195d270ca3fb13ffa0881cf0b4e92b25f7a560/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4b195d270ca3fb13ffa0881cf0b4e92b25f7a560", "patch": "@@ -1,5 +1,8 @@\n 2018-12-09  Thomas Schwinge  <thomas@codesourcery.com>\n \n+\t* openmp.c (resolve_oacc_loop_blocks): Remove checking of OpenACC\n+\tloop clauses.\n+\n \tPR fortran/88420\n \t* openmp.c (resolve_oacc_loop_blocks): Remove \"Clause SEQ\n \tconflicts with INDEPENDENT\" diagnostic."}, {"sha": "261a54a6015e8ff07c5633c0b733072a8227d01e", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 0, "deletions": 70, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b195d270ca3fb13ffa0881cf0b4e92b25f7a560/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b195d270ca3fb13ffa0881cf0b4e92b25f7a560/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=4b195d270ca3fb13ffa0881cf0b4e92b25f7a560", "patch": "@@ -5659,12 +5659,6 @@ oacc_is_parallel (gfc_code *code)\n   return code->op == EXEC_OACC_PARALLEL || code->op == EXEC_OACC_PARALLEL_LOOP;\n }\n \n-static bool\n-oacc_is_kernels (gfc_code *code)\n-{\n-  return code->op == EXEC_OACC_KERNELS || code->op == EXEC_OACC_KERNELS_LOOP;\n-}\n-\n static gfc_statement\n omp_code_to_statement (gfc_code *code)\n {\n@@ -5846,73 +5840,9 @@ resolve_oacc_params_in_parallel (gfc_code *code, const char *clause,\n static void\n resolve_oacc_loop_blocks (gfc_code *code)\n {\n-  fortran_omp_context *c;\n-\n   if (!oacc_is_loop (code))\n     return;\n \n-  if (code->op == EXEC_OACC_LOOP)\n-    for (c = omp_current_ctx; c; c = c->previous)\n-      {\n-\tif (oacc_is_loop (c->code))\n-\t  {\n-\t    if (code->ext.omp_clauses->gang)\n-\t      {\n-\t\tif (c->code->ext.omp_clauses->gang)\n-\t\t  gfc_error (\"Loop parallelized across gangs is not allowed \"\n-\t\t\t     \"inside another loop parallelized across gangs at %L\",\n-\t\t\t     &code->loc);\n-\t\tif (c->code->ext.omp_clauses->worker)\n-\t\t  gfc_error (\"Loop parallelized across gangs is not allowed \"\n-\t\t\t     \"inside loop parallelized across workers at %L\",\n-\t\t\t     &code->loc);\n-\t\tif (c->code->ext.omp_clauses->vector)\n-\t\t  gfc_error (\"Loop parallelized across gangs is not allowed \"\n-\t\t\t     \"inside loop parallelized across vectors at %L\",\n-\t\t\t     &code->loc);\n-\t      }\n-\t    if (code->ext.omp_clauses->worker)\n-\t      {\n-\t\tif (c->code->ext.omp_clauses->worker)\n-\t\t  gfc_error (\"Loop parallelized across workers is not allowed \"\n-\t\t\t     \"inside another loop parallelized across workers at %L\",\n-\t\t\t     &code->loc);\n-\t\tif (c->code->ext.omp_clauses->vector)\n-\t\t  gfc_error (\"Loop parallelized across workers is not allowed \"\n-\t\t\t     \"inside another loop parallelized across vectors at %L\",\n-\t\t\t     &code->loc);\n-\t      }\n-\t    if (code->ext.omp_clauses->vector)\n-\t      if (c->code->ext.omp_clauses->vector)\n-\t\tgfc_error (\"Loop parallelized across vectors is not allowed \"\n-\t\t\t   \"inside another loop parallelized across vectors at %L\",\n-\t\t\t   &code->loc);\n-\t  }\n-\n-\tif (oacc_is_parallel (c->code) || oacc_is_kernels (c->code))\n-\t  break;\n-      }\n-\n-  if (code->ext.omp_clauses->seq)\n-    {\n-      if (code->ext.omp_clauses->gang)\n-\tgfc_error (\"Clause SEQ conflicts with GANG at %L\", &code->loc);\n-      if (code->ext.omp_clauses->worker)\n-\tgfc_error (\"Clause SEQ conflicts with WORKER at %L\", &code->loc);\n-      if (code->ext.omp_clauses->vector)\n-\tgfc_error (\"Clause SEQ conflicts with VECTOR at %L\", &code->loc);\n-      if (code->ext.omp_clauses->par_auto)\n-\tgfc_error (\"Clause SEQ conflicts with AUTO at %L\", &code->loc);\n-    }\n-  if (code->ext.omp_clauses->par_auto)\n-    {\n-      if (code->ext.omp_clauses->gang)\n-\tgfc_error (\"Clause AUTO conflicts with GANG at %L\", &code->loc);\n-      if (code->ext.omp_clauses->worker)\n-\tgfc_error (\"Clause AUTO conflicts with WORKER at %L\", &code->loc);\n-      if (code->ext.omp_clauses->vector)\n-\tgfc_error (\"Clause AUTO conflicts with VECTOR at %L\", &code->loc);\n-    }\n   if (code->ext.omp_clauses->tile_list && code->ext.omp_clauses->gang\n       && code->ext.omp_clauses->worker && code->ext.omp_clauses->vector)\n     gfc_error (\"Tiled loop cannot be parallelized across gangs, workers and \""}, {"sha": "192a29ee971cdff0276db2ea3d962989fb6f53ce", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b195d270ca3fb13ffa0881cf0b4e92b25f7a560/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b195d270ca3fb13ffa0881cf0b4e92b25f7a560/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4b195d270ca3fb13ffa0881cf0b4e92b25f7a560", "patch": "@@ -1,5 +1,9 @@\n 2018-12-09  Thomas Schwinge  <thomas@codesourcery.com>\n \n+\t* gfortran.dg/goacc/loop-2-kernels.f95: Update.\n+\t* gfortran.dg/goacc/loop-2-parallel.f95: Likewise.\n+\t* gfortran.dg/goacc/nested-parallelism.f90: Likewise.\n+\n \t* gfortran.dg/goacc/loop-2.f95: Split into...\n \t* gfortran.dg/goacc/loop-2-kernels-nested.f95: ... this new\n \tfile..."}, {"sha": "874c62d42786e00ef53d26e66a9096a6649a3732", "filename": "gcc/testsuite/gfortran.dg/goacc/loop-2-kernels.f95", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b195d270ca3fb13ffa0881cf0b4e92b25f7a560/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-kernels.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b195d270ca3fb13ffa0881cf0b4e92b25f7a560/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-kernels.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-kernels.f95?ref=4b195d270ca3fb13ffa0881cf0b4e92b25f7a560", "patch": "@@ -31,11 +31,11 @@ program test\n       !$acc loop worker \n       DO j = 1,10\n       ENDDO\n-      !$acc loop gang ! { dg-error \"not allowed\" }\n+      !$acc loop gang ! { dg-error \"inner loop uses same OpenACC parallelism as containing loop\" }\n       DO j = 1,10\n       ENDDO\n     ENDDO\n-    !$acc loop seq gang ! { dg-error \"conflicts with\" }\n+    !$acc loop seq gang ! { dg-error \"'seq' overrides other OpenACC loop specifiers\" }\n     DO i = 1,10\n     ENDDO\n \n@@ -53,14 +53,14 @@ program test\n       !$acc loop vector \n       DO j = 1,10\n       ENDDO\n-      !$acc loop worker ! { dg-error \"not allowed\" }\n+      !$acc loop worker ! { dg-error \"inner loop uses same OpenACC parallelism as containing loop\" }\n       DO j = 1,10\n       ENDDO\n-      !$acc loop gang ! { dg-error \"not allowed\" }\n+      !$acc loop gang ! { dg-error \"\" \"TODO\" { xfail *-*-* } }\n       DO j = 1,10\n       ENDDO\n     ENDDO\n-    !$acc loop seq worker ! { dg-error \"conflicts with\" }\n+    !$acc loop seq worker ! { dg-error \"'seq' overrides other OpenACC loop specifiers\" }\n     DO i = 1,10\n     ENDDO\n     !$acc loop gang worker\n@@ -78,17 +78,17 @@ program test\n     ENDDO\n     !$acc loop vector\n     DO i = 1,10\n-      !$acc loop vector ! { dg-error \"not allowed\" }\n+      !$acc loop vector ! { dg-error \"inner loop uses same OpenACC parallelism as containing loop\" }\n       DO j = 1,10\n       ENDDO\n-      !$acc loop worker ! { dg-error \"not allowed\" }\n+      !$acc loop worker ! { dg-error \"\" \"TODO\" { xfail *-*-* } }\n       DO j = 1,10\n       ENDDO\n-      !$acc loop gang ! { dg-error \"not allowed\" }\n+      !$acc loop gang ! { dg-error \"\" \"TODO\" { xfail *-*-* } }\n       DO j = 1,10\n       ENDDO\n     ENDDO\n-    !$acc loop seq vector ! { dg-error \"conflicts with\" }\n+    !$acc loop seq vector ! { dg-error \"'seq' overrides other OpenACC loop specifiers\" }\n     DO i = 1,10\n     ENDDO\n     !$acc loop gang vector\n@@ -101,16 +101,16 @@ program test\n     !$acc loop auto\n     DO i = 1,10\n     ENDDO\n-    !$acc loop seq auto ! { dg-error \"conflicts with\" }\n+    !$acc loop seq auto ! { dg-error \"'seq' overrides other OpenACC loop specifiers\" }\n     DO i = 1,10\n     ENDDO\n-    !$acc loop gang auto ! { dg-error \"conflicts with\" }\n+    !$acc loop gang auto ! { dg-error \"'auto' conflicts with other OpenACC loop specifiers\" }\n     DO i = 1,10\n     ENDDO\n-    !$acc loop worker auto ! { dg-error \"conflicts with\" }\n+    !$acc loop worker auto ! { dg-error \"'auto' conflicts with other OpenACC loop specifiers\" }\n     DO i = 1,10\n     ENDDO\n-    !$acc loop vector auto ! { dg-error \"conflicts with\" }\n+    !$acc loop vector auto ! { dg-error \"'auto' conflicts with other OpenACC loop specifiers\" }\n     DO i = 1,10\n     ENDDO\n   !$acc end kernels\n@@ -133,7 +133,7 @@ program test\n   !$acc kernels loop gang(static:*)\n   DO i = 1,10\n   ENDDO\n-  !$acc kernels loop seq gang ! { dg-error \"conflicts with\" }\n+  !$acc kernels loop seq gang ! { dg-error \"'seq' overrides other OpenACC loop specifiers\" }\n   DO i = 1,10\n   ENDDO\n \n@@ -146,7 +146,7 @@ program test\n   !$acc kernels loop worker(num:5)\n   DO i = 1,10\n   ENDDO\n-  !$acc kernels loop seq worker ! { dg-error \"conflicts with\" }\n+  !$acc kernels loop seq worker ! { dg-error \"'seq' overrides other OpenACC loop specifiers\" }\n   DO i = 1,10\n   ENDDO\n   !$acc kernels loop gang worker\n@@ -162,7 +162,7 @@ program test\n   !$acc kernels loop vector(length:5)\n   DO i = 1,10\n   ENDDO\n-  !$acc kernels loop seq vector ! { dg-error \"conflicts with\" }\n+  !$acc kernels loop seq vector ! { dg-error \"'seq' overrides other OpenACC loop specifiers\" }\n   DO i = 1,10\n   ENDDO\n   !$acc kernels loop gang vector\n@@ -175,16 +175,16 @@ program test\n   !$acc kernels loop auto\n   DO i = 1,10\n   ENDDO\n-  !$acc kernels loop seq auto ! { dg-error \"conflicts with\" }\n+  !$acc kernels loop seq auto ! { dg-error \"'seq' overrides other OpenACC loop specifiers\" }\n   DO i = 1,10\n   ENDDO\n-  !$acc kernels loop gang auto ! { dg-error \"conflicts with\" }\n+  !$acc kernels loop gang auto ! { dg-error \"'auto' conflicts with other OpenACC loop specifiers\" }\n   DO i = 1,10\n   ENDDO\n-  !$acc kernels loop worker auto ! { dg-error \"conflicts with\" }\n+  !$acc kernels loop worker auto ! { dg-error \"'auto' conflicts with other OpenACC loop specifiers\" }\n   DO i = 1,10\n   ENDDO\n-  !$acc kernels loop vector auto ! { dg-error \"conflicts with\" }\n+  !$acc kernels loop vector auto ! { dg-error \"'auto' conflicts with other OpenACC loop specifiers\" }\n   DO i = 1,10\n   ENDDO\n end"}, {"sha": "db8187e5903c7fba900ee6623ea6065d74307f7c", "filename": "gcc/testsuite/gfortran.dg/goacc/loop-2-parallel.f95", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b195d270ca3fb13ffa0881cf0b4e92b25f7a560/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-parallel.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b195d270ca3fb13ffa0881cf0b4e92b25f7a560/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-parallel.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-parallel.f95?ref=4b195d270ca3fb13ffa0881cf0b4e92b25f7a560", "patch": "@@ -25,11 +25,11 @@ program test\n       !$acc loop worker \n       DO j = 1,10\n       ENDDO\n-      !$acc loop gang ! { dg-error \"not allowed\" }\n+      !$acc loop gang ! { dg-error \"inner loop uses same OpenACC parallelism as containing loop\" }\n       DO j = 1,10\n       ENDDO\n     ENDDO\n-    !$acc loop seq gang ! { dg-error \"conflicts with\" }\n+    !$acc loop seq gang ! { dg-error \"'seq' overrides other OpenACC loop specifiers\" }\n     DO i = 1,10\n     ENDDO\n \n@@ -41,14 +41,14 @@ program test\n       !$acc loop vector \n       DO j = 1,10\n       ENDDO\n-      !$acc loop worker ! { dg-error \"not allowed\" }\n+      !$acc loop worker ! { dg-error \"inner loop uses same OpenACC parallelism as containing loop\" }\n       DO j = 1,10\n       ENDDO\n-      !$acc loop gang ! { dg-error \"not allowed\" }\n+      !$acc loop gang ! { dg-error \"incorrectly nested OpenACC loop parallelism\" }\n       DO j = 1,10\n       ENDDO\n     ENDDO\n-    !$acc loop seq worker ! { dg-error \"conflicts with\" }\n+    !$acc loop seq worker ! { dg-error \"'seq' overrides other OpenACC loop specifiers\" }\n     DO i = 1,10\n     ENDDO\n     !$acc loop gang worker\n@@ -60,17 +60,17 @@ program test\n     ENDDO\n     !$acc loop vector\n     DO i = 1,10\n-      !$acc loop vector ! { dg-error \"not allowed\" }\n+      !$acc loop vector ! { dg-error \"inner loop uses same OpenACC parallelism as containing loop\" }\n       DO j = 1,10\n       ENDDO\n-      !$acc loop worker ! { dg-error \"not allowed\" }\n+      !$acc loop worker ! { dg-error \"incorrectly nested OpenACC loop parallelism\" }\n       DO j = 1,10\n       ENDDO\n-      !$acc loop gang ! { dg-error \"not allowed\" }\n+      !$acc loop gang ! { dg-error \"incorrectly nested OpenACC loop parallelism\" }\n       DO j = 1,10\n       ENDDO\n     ENDDO\n-    !$acc loop seq vector ! { dg-error \"conflicts with\" }\n+    !$acc loop seq vector ! { dg-error \"'seq' overrides other OpenACC loop specifiers\" }\n     DO i = 1,10\n     ENDDO\n     !$acc loop gang vector\n@@ -83,16 +83,16 @@ program test\n     !$acc loop auto\n     DO i = 1,10\n     ENDDO\n-    !$acc loop seq auto ! { dg-error \"conflicts with\" }\n+    !$acc loop seq auto ! { dg-error \"'seq' overrides other OpenACC loop specifiers\" }\n     DO i = 1,10\n     ENDDO\n-    !$acc loop gang auto ! { dg-error \"conflicts with\" }\n+    !$acc loop gang auto ! { dg-error \"'auto' conflicts with other OpenACC loop specifiers\" }\n     DO i = 1,10\n     ENDDO\n-    !$acc loop worker auto ! { dg-error \"conflicts with\" }\n+    !$acc loop worker auto ! { dg-error \"'auto' conflicts with other OpenACC loop specifiers\" }\n     DO i = 1,10\n     ENDDO\n-    !$acc loop vector auto ! { dg-error \"conflicts with\" }\n+    !$acc loop vector auto ! { dg-error \"'auto' conflicts with other OpenACC loop specifiers\" }\n     DO i = 1,10\n     ENDDO\n   !$acc end parallel\n@@ -109,14 +109,14 @@ program test\n   !$acc parallel loop gang(static:*)\n   DO i = 1,10\n   ENDDO\n-  !$acc parallel loop seq gang ! { dg-error \"conflicts with\" }\n+  !$acc parallel loop seq gang ! { dg-error \"'seq' overrides other OpenACC loop specifiers\" }\n   DO i = 1,10\n   ENDDO\n \n   !$acc parallel loop worker\n   DO i = 1,10\n   ENDDO\n-  !$acc parallel loop seq worker ! { dg-error \"conflicts with\" }\n+  !$acc parallel loop seq worker ! { dg-error \"'seq' overrides other OpenACC loop specifiers\" }\n   DO i = 1,10\n   ENDDO\n   !$acc parallel loop gang worker\n@@ -126,7 +126,7 @@ program test\n   !$acc parallel loop vector\n   DO i = 1,10\n   ENDDO\n-  !$acc parallel loop seq vector ! { dg-error \"conflicts with\" }\n+  !$acc parallel loop seq vector ! { dg-error \"'seq' overrides other OpenACC loop specifiers\" }\n   DO i = 1,10\n   ENDDO\n   !$acc parallel loop gang vector\n@@ -139,16 +139,16 @@ program test\n   !$acc parallel loop auto\n   DO i = 1,10\n   ENDDO\n-  !$acc parallel loop seq auto ! { dg-error \"conflicts with\" }\n+  !$acc parallel loop seq auto ! { dg-error \"'seq' overrides other OpenACC loop specifiers\" }\n   DO i = 1,10\n   ENDDO\n-  !$acc parallel loop gang auto ! { dg-error \"conflicts with\" }\n+  !$acc parallel loop gang auto ! { dg-error \"'auto' conflicts with other OpenACC loop specifiers\" }\n   DO i = 1,10\n   ENDDO\n-  !$acc parallel loop worker auto ! { dg-error \"conflicts with\" }\n+  !$acc parallel loop worker auto ! { dg-error \"'auto' conflicts with other OpenACC loop specifiers\" }\n   DO i = 1,10\n   ENDDO\n-  !$acc parallel loop vector auto ! { dg-error \"conflicts with\" }\n+  !$acc parallel loop vector auto ! { dg-error \"'auto' conflicts with other OpenACC loop specifiers\" }\n   DO i = 1,10\n   ENDDO\n end"}, {"sha": "1c192892c160f983c4eca3aea238c11d4cf9cabc", "filename": "gcc/testsuite/gfortran.dg/goacc/nested-parallelism.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b195d270ca3fb13ffa0881cf0b4e92b25f7a560/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fnested-parallelism.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b195d270ca3fb13ffa0881cf0b4e92b25f7a560/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fnested-parallelism.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fnested-parallelism.f90?ref=4b195d270ca3fb13ffa0881cf0b4e92b25f7a560", "patch": "@@ -6,7 +6,7 @@ program np\n \n   !$acc parallel loop gang\n   do i = 1, n\n-     !$acc loop gang ! { dg-error \"gangs is not allowed inside another loop parallelized across gangs\" }\n+     !$acc loop gang ! { dg-error \"inner loop uses same OpenACC parallelism as containing loop\" }\n      do j = 1, n\n      end do\n \n@@ -21,11 +21,11 @@ program np\n   \n   !$acc parallel loop worker\n   do i = 1, n\n-     !$acc loop gang ! { dg-error \"gangs is not allowed inside loop parallelized across workers\" }\n+     !$acc loop gang ! { dg-error \"incorrectly nested OpenACC loop parallelism\" }\n      do j = 1, n\n      end do\n \n-     !$acc loop worker ! { dg-error \"workers is not allowed inside another loop parallelized across workers\" }\n+     !$acc loop worker ! { dg-error \"inner loop uses same OpenACC parallelism as containing loop\" }\n      do j = 1, n\n      end do\n \n@@ -36,15 +36,15 @@ program np\n \n   !$acc parallel loop vector\n   do i = 1, n\n-     !$acc loop gang ! { dg-error \"gangs is not allowed inside loop parallelized across vectors\" }\n+     !$acc loop gang ! { dg-error \"incorrectly nested OpenACC loop parallelism\" }\n      do j = 1, n\n      end do\n \n-     !$acc loop worker ! { dg-error \"workers is not allowed inside another loop parallelized across vectors\" }\n+     !$acc loop worker ! { dg-error \"incorrectly nested OpenACC loop parallelism\" }\n      do j = 1, n\n      end do\n \n-     !$acc loop vector ! { dg-error \"vectors is not allowed inside another loop parallelized across vectors\" }\n+     !$acc loop vector ! { dg-error \"inner loop uses same OpenACC parallelism as containing loop\" }\n      do j = 1, n\n      end do     \n   end do"}]}