{"sha": "50583d42838b99cf89d2ac9b7ec5733cef41dcd1", "node_id": "C_kwDOANBUbNoAKDUwNTgzZDQyODM4Yjk5Y2Y4OWQyYWM5YjdlYzU3MzNjZWY0MWRjZDE", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-04-06T10:13:13Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@embecosm.com", "date": "2023-04-19T08:48:33Z"}, "message": "libproc_macro: Add Literal type\n\nAdd the Literal type matching rust ffi definitions.\n\nChangeLog:\n\n\t* libgrust/libproc_macro/proc_macro.h (PROC_MACRO_H): Add\n\tliteral header include directive.\n\t* libgrust/libproc_macro/literal.h: New file.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "c3bd81cd67ce0c128e9f55ea276855dc18626801", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3bd81cd67ce0c128e9f55ea276855dc18626801"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50583d42838b99cf89d2ac9b7ec5733cef41dcd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50583d42838b99cf89d2ac9b7ec5733cef41dcd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50583d42838b99cf89d2ac9b7ec5733cef41dcd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50583d42838b99cf89d2ac9b7ec5733cef41dcd1/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fc72ffbbae7b7867e6d1849b56a05af034ac80a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fc72ffbbae7b7867e6d1849b56a05af034ac80a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fc72ffbbae7b7867e6d1849b56a05af034ac80a"}], "stats": {"total": 163, "additions": 163, "deletions": 0}, "files": [{"sha": "7b3e3c5965ad06b66796f49e8985597ffe737ebb", "filename": "libgrust/libproc_macro/literal.h", "status": "added", "additions": 161, "deletions": 0, "changes": 161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50583d42838b99cf89d2ac9b7ec5733cef41dcd1/libgrust%2Flibproc_macro%2Fliteral.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50583d42838b99cf89d2ac9b7ec5733cef41dcd1/libgrust%2Flibproc_macro%2Fliteral.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Fliteral.h?ref=50583d42838b99cf89d2ac9b7ec5733cef41dcd1", "patch": "@@ -0,0 +1,161 @@\n+// Copyright (C) 2023 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU Proc Macro Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+#ifndef LITERAL_H\n+#define LITERAL_H\n+\n+#include <cstdint>\n+\n+enum UnsignedTag\n+{\n+  UNSIGNED_8,\n+  UNSIGNED_16,\n+  UNSIGNED_32,\n+  UNSIGNED_64,\n+  UNSIGNED_128\n+};\n+\n+struct Payload128\n+{\n+  std::uint64_t low;\n+  std::uint64_t high;\n+};\n+\n+union UnsignedPayload\n+{\n+  std::uint8_t unsigned8;\n+  std::uint16_t unsigned16;\n+  std::uint32_t unsigned32;\n+  std::uint64_t unsigned64;\n+  Payload128 unsigned128;\n+};\n+\n+struct Unsigned\n+{\n+  UnsignedTag tag;\n+  UnsignedPayload payload;\n+};\n+\n+enum SignedTag\n+{\n+  SIGNED_8,\n+  SIGNED_16,\n+  SIGNED_32,\n+  SIGNED_64,\n+  SIGNED_128\n+};\n+\n+union SignedPayload\n+{\n+  std::int8_t signed8;\n+  std::int16_t signed16;\n+  std::int32_t signed32;\n+  std::int64_t signed64;\n+};\n+\n+struct Signed\n+{\n+  SignedTag tag;\n+  SignedPayload payload;\n+};\n+\n+enum LiteralTag\n+{\n+  STRING,\n+  BYTE_STRING,\n+  CHAR,\n+  UNSIGNED,\n+  SIGNED,\n+  USIZE,\n+  ISIZE,\n+  FLOAT32,\n+  FLOAT64\n+};\n+\n+struct StringPayload\n+{\n+  unsigned char *data;\n+  std::uint64_t len;\n+};\n+\n+struct ByteStringPayload\n+{\n+  std::uint8_t *data;\n+  std::uint64_t size;\n+};\n+\n+struct UnsignedSuffixPayload\n+{\n+  Unsigned value;\n+  bool suffix;\n+};\n+\n+struct SignedSuffixPayload\n+{\n+  Signed value;\n+  bool suffix;\n+};\n+\n+struct UsizePayload\n+{\n+  std::uint64_t value;\n+  bool suffix;\n+};\n+\n+struct IsizePayload\n+{\n+  std::int64_t value;\n+  bool suffix;\n+};\n+\n+struct Float32Payload\n+{\n+  float value;\n+  bool suffix;\n+};\n+\n+struct Float64Payload\n+{\n+  double value;\n+  bool suffix;\n+};\n+\n+union LiteralPayload\n+{\n+  StringPayload string_payload;\n+  ByteStringPayload byte_string_payload;\n+  std::uint32_t char_payload;\n+  UnsignedSuffixPayload unsigned_payload;\n+  SignedSuffixPayload signed_payload;\n+  UsizePayload usize_payload;\n+  IsizePayload isize_payload;\n+  Float32Payload float32_payload;\n+  Float64Payload float64_payload;\n+};\n+\n+struct Literal\n+{\n+  LiteralTag tag;\n+  LiteralPayload payload;\n+};\n+\n+#endif /* ! LITERAL_H */"}, {"sha": "cf96bb63cb2608a538dcfeb4dd7f9987514cc689", "filename": "libgrust/libproc_macro/proc_macro.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50583d42838b99cf89d2ac9b7ec5733cef41dcd1/libgrust%2Flibproc_macro%2Fproc_macro.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50583d42838b99cf89d2ac9b7ec5733cef41dcd1/libgrust%2Flibproc_macro%2Fproc_macro.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Fproc_macro.h?ref=50583d42838b99cf89d2ac9b7ec5733cef41dcd1", "patch": "@@ -23,4 +23,6 @@\n #ifndef PROC_MACRO_H\n #define PROC_MACRO_H\n \n+#include \"literal.h\"\n+\n #endif /* ! PROC_MACRO_H */"}]}