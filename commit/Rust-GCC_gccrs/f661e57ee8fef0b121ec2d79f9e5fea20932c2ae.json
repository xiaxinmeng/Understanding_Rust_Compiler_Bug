{"sha": "f661e57ee8fef0b121ec2d79f9e5fea20932c2ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY2MWU1N2VlOGZlZjBiMTIxZWMyZDc5ZjllNWZlYTIwOTMyYzJhZQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2017-08-18T18:12:47Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2017-08-18T18:12:47Z"}, "message": "C++: fix ordering of missing std #include suggestion (PR c++/81514)\n\ngcc/cp/ChangeLog:\n\tPR c++/81514\n\t* name-lookup.c (maybe_suggest_missing_header): Convert return\n\ttype from void to bool; return true iff a suggestion was offered.\n\t(suggest_alternative_in_explicit_scope): Move call to\n\tmaybe_suggest_missing_header to before use of best_match, and\n\treturn true if the former offers a suggestion.\n\ngcc/testsuite/ChangeLog:\n\tPR c++/81514\n\t* g++.dg/lookup/empty.h: New file.\n\t* g++.dg/lookup/missing-std-include-2.C: Replace include of\n\tstdio.h with empty.h and a declaration of a \"std::sprintf\" not based\n\ton a built-in.\n\nFrom-SVN: r251186", "tree": {"sha": "ecb7f9ac9fda8d6d73edb72948e0924569ec7397", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecb7f9ac9fda8d6d73edb72948e0924569ec7397"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f661e57ee8fef0b121ec2d79f9e5fea20932c2ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f661e57ee8fef0b121ec2d79f9e5fea20932c2ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f661e57ee8fef0b121ec2d79f9e5fea20932c2ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f661e57ee8fef0b121ec2d79f9e5fea20932c2ae/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "676c4146f504d5252df1a3fb39bb5c4099bc0791", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/676c4146f504d5252df1a3fb39bb5c4099bc0791", "html_url": "https://github.com/Rust-GCC/gccrs/commit/676c4146f504d5252df1a3fb39bb5c4099bc0791"}], "stats": {"total": 68, "additions": 46, "deletions": 22}, "files": [{"sha": "72a05547ed2db5df3097ecb4f312b8cc378b2231", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f661e57ee8fef0b121ec2d79f9e5fea20932c2ae/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f661e57ee8fef0b121ec2d79f9e5fea20932c2ae/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f661e57ee8fef0b121ec2d79f9e5fea20932c2ae", "patch": "@@ -1,3 +1,12 @@\n+2017-08-18  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c++/81514\n+\t* name-lookup.c (maybe_suggest_missing_header): Convert return\n+\ttype from void to bool; return true iff a suggestion was offered.\n+\t(suggest_alternative_in_explicit_scope): Move call to\n+\tmaybe_suggest_missing_header to before use of best_match, and\n+\treturn true if the former offers a suggestion.\n+\n 2017-08-18  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR c/53037"}, {"sha": "0aad17885c78b0c087744d551b41f2d642ab1763", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 20, "deletions": 19, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f661e57ee8fef0b121ec2d79f9e5fea20932c2ae/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f661e57ee8fef0b121ec2d79f9e5fea20932c2ae/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=f661e57ee8fef0b121ec2d79f9e5fea20932c2ae", "patch": "@@ -4838,34 +4838,34 @@ get_std_name_hint (const char *name)\n   return NULL;\n }\n \n-/* Subroutine of suggest_alternative_in_explicit_scope, for use when we have no\n-   suggestions to offer.\n-   If SCOPE is the \"std\" namespace, then suggest pertinent header\n-   files for NAME.  */\n+/* If SCOPE is the \"std\" namespace, then suggest pertinent header\n+   files for NAME at LOCATION.\n+   Return true iff a suggestion was offered.  */\n \n-static void\n+static bool\n maybe_suggest_missing_header (location_t location, tree name, tree scope)\n {\n   if (scope == NULL_TREE)\n-    return;\n+    return false;\n   if (TREE_CODE (scope) != NAMESPACE_DECL)\n-    return;\n+    return false;\n   /* We only offer suggestions for the \"std\" namespace.  */\n   if (scope != std_node)\n-    return;\n+    return false;\n   gcc_assert (TREE_CODE (name) == IDENTIFIER_NODE);\n \n   const char *name_str = IDENTIFIER_POINTER (name);\n   const char *header_hint = get_std_name_hint (name_str);\n-  if (header_hint)\n-    {\n-      gcc_rich_location richloc (location);\n-      maybe_add_include_fixit (&richloc, header_hint);\n-      inform_at_rich_loc (&richloc,\n-\t\t\t  \"%<std::%s%> is defined in header %qs;\"\n-\t\t\t  \" did you forget to %<#include %s%>?\",\n-\t\t\t  name_str, header_hint, header_hint);\n-    }\n+  if (!header_hint)\n+    return false;\n+\n+  gcc_rich_location richloc (location);\n+  maybe_add_include_fixit (&richloc, header_hint);\n+  inform_at_rich_loc (&richloc,\n+\t\t      \"%<std::%s%> is defined in header %qs;\"\n+\t\t      \" did you forget to %<#include %s%>?\",\n+\t\t      name_str, header_hint, header_hint);\n+  return true;\n }\n \n /* Look for alternatives for NAME, an IDENTIFIER_NODE for which name\n@@ -4880,6 +4880,9 @@ suggest_alternative_in_explicit_scope (location_t location, tree name,\n   /* Resolve any namespace aliases.  */\n   scope = ORIGINAL_NAMESPACE (scope);\n \n+  if (maybe_suggest_missing_header (location, name, scope))\n+    return true;\n+\n   cp_binding_level *level = NAMESPACE_LEVEL (scope);\n \n   best_match <tree, const char *> bm (name);\n@@ -4895,8 +4898,6 @@ suggest_alternative_in_explicit_scope (location_t location, tree name,\n \t\t\t  fuzzy_name);\n       return true;\n     }\n-  else\n-    maybe_suggest_missing_header (location, name, scope);\n \n   return false;\n }"}, {"sha": "d21f64fcc0f61cd122ce6bbea84eadbd04675792", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f661e57ee8fef0b121ec2d79f9e5fea20932c2ae/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f661e57ee8fef0b121ec2d79f9e5fea20932c2ae/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f661e57ee8fef0b121ec2d79f9e5fea20932c2ae", "patch": "@@ -1,3 +1,11 @@\n+2017-08-18  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c++/81514\n+\t* g++.dg/lookup/empty.h: New file.\n+\t* g++.dg/lookup/missing-std-include-2.C: Replace include of\n+\tstdio.h with empty.h and a declaration of a \"std::sprintf\" not based\n+\ton a built-in.\n+\n 2017-08-18  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR c/53037"}, {"sha": "a057418050e92d9b178b28d0b479c827f2b6edd5", "filename": "gcc/testsuite/g++.dg/lookup/empty.h", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f661e57ee8fef0b121ec2d79f9e5fea20932c2ae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fempty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f661e57ee8fef0b121ec2d79f9e5fea20932c2ae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fempty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fempty.h?ref=f661e57ee8fef0b121ec2d79f9e5fea20932c2ae", "patch": "@@ -0,0 +1 @@\n+/* empty file for use by missing-std-include-2.C.  */"}, {"sha": "51c604a9f1e2afc667a244e566d41cd34f5c78f1", "filename": "gcc/testsuite/g++.dg/lookup/missing-std-include-2.C", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f661e57ee8fef0b121ec2d79f9e5fea20932c2ae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fmissing-std-include-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f661e57ee8fef0b121ec2d79f9e5fea20932c2ae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fmissing-std-include-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fmissing-std-include-2.C?ref=f661e57ee8fef0b121ec2d79f9e5fea20932c2ae", "patch": "@@ -6,7 +6,12 @@\n /* This is padding (to avoid the generated patch containing DejaGnu\n    directives).  */\n \n-#include <stdio.h>\n+#include \"empty.h\"\n+\n+namespace std\n+{\n+  extern int sprintf (char *dst, const char *format, ...);\n+};\n \n void test (void)\n {\n@@ -45,11 +50,11 @@ void test_2 (void)\n @@ -7,6 +7,8 @@\n     directives).  */\n  \n- #include <stdio.h>\n+ #include \"empty.h\"\n +#include <string>\n +#include <iostream>\n  \n- void test (void)\n+ namespace std\n  {\n { dg-end-multiline-output \"\" }\n #endif"}]}