{"sha": "d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBmOGQxNTdmZTY4ZDViMjI0YmE1MmU4ODkxZTE3YzFlYjM4ZDRkZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-20T09:14:04Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-20T09:14:04Z"}, "message": "[multiple changes]\n\n2009-04-20  Robert Dewar  <dewar@adacore.com>\n\n\t* s-conca5.adb, s-conca5.ads, s-conca7.adb, s-conca7.ads, s-conca9.adb,\n\ts-conca9.ads, rtsfind.ads, s-conca2.adb, s-conca2.ads, s-conca4.adb,\n\ts-conca4.ads, s-conca6.adb, s-conca6.ads, s-conca8.adb, s-conca8.ads,\n\ts-conca3.adb, s-conca3.ads (Str_Concat_Bounds_x): New functions.\n\n\t* exp_ch4.adb (Expand_Concatenate): Minor code reorganization\n\n2009-04-20  Pascal Obry  <obry@adacore.com>\n\n\t* initialize.c (__gnat_initialize): Add braces to kill warning.\n\n\t* adaint.c: Minor reformatting, untabify, remove trailing spaces.\n\nFrom-SVN: r146379", "tree": {"sha": "74c14ff78cae4b78f867d2b3c54dd6dade631222", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74c14ff78cae4b78f867d2b3c54dd6dade631222"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/comments", "author": null, "committer": null, "parents": [{"sha": "34c25b321fd7f1ac6c86300c2dba377c723b6524", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34c25b321fd7f1ac6c86300c2dba377c723b6524", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34c25b321fd7f1ac6c86300c2dba377c723b6524"}], "stats": {"total": 471, "additions": 362, "deletions": 109}, "files": [{"sha": "c2967e0c3985ac52d151e081ff0069e7ba26fe6b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "patch": "@@ -1,3 +1,19 @@\n+2009-04-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-conca5.adb, s-conca5.ads, s-conca7.adb, s-conca7.ads, s-conca9.adb,\n+\ts-conca9.ads, rtsfind.ads, s-conca2.adb, s-conca2.ads, s-conca4.adb,\n+\ts-conca4.ads, s-conca6.adb, s-conca6.ads, s-conca8.adb, s-conca8.ads,\n+\ts-conca3.adb, s-conca3.ads (Str_Concat_Bounds_x): New functions.\n+\n+\t* exp_ch4.adb (Expand_Concatenate): Minor code reorganization\n+\n+2009-04-20  Pascal Obry  <obry@adacore.com>\n+\n+\t* initialize.c (__gnat_initialize): Add braces to kill warning.\n+\n+\t* adaint.c: Minor reformatting, untabify, remove trailing spaces.\n+\n+\n 2009-04-17  Arnaud Charlet  <charlet@adacore.com>\n \n \t* gcc-interface/Make-lang.in: Update dependencies."}, {"sha": "3ef9744571aa858bb7b47d9865538abd4efdffdf", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 66, "deletions": 65, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "patch": "@@ -1611,6 +1611,7 @@ __gnat_get_libraries_from_registry (void)\n \n   /* If the key exists, read out all the values in it and concatenate them\n      into a path.  */\n+\n   for (index = 0; res == ERROR_SUCCESS; index++)\n     {\n       value_size = name_size = 256;\n@@ -1631,8 +1632,8 @@ __gnat_get_libraries_from_registry (void)\n   /* Remove the trailing \";\".  */\n   if (result[0] != 0)\n     result[strlen (result) - 1] = 0;\n-\n #endif\n+\n   return result;\n }\n \n@@ -1722,7 +1723,7 @@ __gnat_is_absolute_path (char *name, int length)\n #if defined (__EMX__) || defined (MSDOS) || defined (WINNT)\n       || (length > 1 && ISALPHA (name[0]) && name[1] == ':')\n #endif\n-\t  );\n+          );\n #endif\n }\n \n@@ -1773,34 +1774,34 @@ GetDriveTypeFromPath (TCHAR *wfullpath)\n \n       /* Is this a relative path, if so get current drive type. */\n       if (wpath[0] != _T('\\\\') ||\n-\t  (_tcslen (wpath) > 2 && wpath[0] == _T('\\\\') && wpath[1] != _T('\\\\')))\n-\treturn GetDriveType (NULL);\n+          (_tcslen (wpath) > 2 && wpath[0] == _T('\\\\') && wpath[1] != _T('\\\\')))\n+        return GetDriveType (NULL);\n \n       UINT result = GetDriveType (wpath);\n \n       /* Cannot guess the drive type, is this \\\\.\\ ? */\n \n       if (result == DRIVE_NO_ROOT_DIR &&\n-\t _tcslen (wpath) >= 4 && wpath[0] == _T('\\\\') && wpath[1] == _T('\\\\')\n-\t  && wpath[2] == _T('.') && wpath[3] == _T('\\\\'))\n-\t{\n-\t  if (_tcslen (wpath) == 4)\n-\t    _tcscat (wpath, wfilename);\n-\n-\t  LPTSTR p = &wpath[4];\n-\t  LPTSTR b = _tcschr (p, _T('\\\\'));\n-\n-\t  if (b != NULL)\n-\t    { /* logical drive \\\\.\\c\\dir\\file */\n-\t      *b++ = _T(':');\n-\t      *b++ = _T('\\\\');\n-\t      *b = _T('\\0');\n-\t    }\n-\t  else\n-\t    _tcscat (p, _T(\":\\\\\"));\n-\n-\t  return GetDriveType (p);\n-\t}\n+         _tcslen (wpath) >= 4 && wpath[0] == _T('\\\\') && wpath[1] == _T('\\\\')\n+          && wpath[2] == _T('.') && wpath[3] == _T('\\\\'))\n+        {\n+          if (_tcslen (wpath) == 4)\n+            _tcscat (wpath, wfilename);\n+\n+          LPTSTR p = &wpath[4];\n+          LPTSTR b = _tcschr (p, _T('\\\\'));\n+\n+          if (b != NULL)\n+            { /* logical drive \\\\.\\c\\dir\\file */\n+              *b++ = _T(':');\n+              *b++ = _T('\\\\');\n+              *b = _T('\\0');\n+            }\n+          else\n+            _tcscat (p, _T(\":\\\\\"));\n+\n+          return GetDriveType (p);\n+        }\n \n       return result;\n     }\n@@ -1900,9 +1901,9 @@ __gnat_set_OWNER_ACL\n   if (AccessMode == SET_ACCESS)\n     {\n       /*  SET_ACCESS, we want to set an explicte set of permissions, do not\n-\t  merge with current DACL.  */\n+          merge with current DACL.  */\n       if (SetEntriesInAcl (1, &ea, NULL, &pNewDACL) != ERROR_SUCCESS)\n-\treturn;\n+        return;\n     }\n   else\n     if (SetEntriesInAcl (1, &ea, pOldDACL, &pNewDACL) != ERROR_SUCCESS)\n@@ -1973,8 +1974,8 @@ __gnat_is_writable_file (char *name)\n       GenericMapping.GenericWrite = GENERIC_WRITE;\n \n       return __gnat_check_OWNER_ACL\n-\t(wname, FILE_WRITE_DATA | FILE_APPEND_DATA, GenericMapping)\n-\t&& !(GetFileAttributes (wname) & FILE_ATTRIBUTE_READONLY);\n+        (wname, FILE_WRITE_DATA | FILE_APPEND_DATA, GenericMapping)\n+        && !(GetFileAttributes (wname) & FILE_ATTRIBUTE_READONLY);\n     }\n   else\n     return !(GetFileAttributes (wname) & FILE_ATTRIBUTE_READONLY);\n@@ -2008,7 +2009,7 @@ __gnat_is_executable_file (char *name)\n     }\n   else\n     return GetFileAttributes (wname) != INVALID_FILE_ATTRIBUTES\n-      && _tcsstr (wname, _T(\".exe\")) - wname == (_tcslen (wname) - 4);\n+      && _tcsstr (wname, _T(\".exe\")) - wname == (int) (_tcslen (wname) - 4);\n \n #else\n   int ret;\n@@ -2207,9 +2208,9 @@ __gnat_portable_spawn (char *args[])\n       /* The child. */\n       if (execv (args[0], MAYBE_TO_PTR32 (args)) != 0)\n #if defined (VMS)\n-\treturn -1; /* execv is in parent context on VMS.  */\n+        return -1; /* execv is in parent context on VMS.  */\n #else\n-\t_exit (1);\n+        _exit (1);\n #endif\n     }\n #endif\n@@ -2327,9 +2328,9 @@ remove_handle (HANDLE h)\n       if (pl->h == h)\n         {\n           if (pl == PLIST)\n-\t    PLIST = pl->next;\n+            PLIST = pl->next;\n           else\n-\t    prev->next = pl->next;\n+            prev->next = pl->next;\n           free (pl);\n           break;\n         }\n@@ -2504,9 +2505,9 @@ __gnat_portable_no_block_spawn (char *args[])\n       /* The child.  */\n       if (execv (args[0], MAYBE_TO_PTR32 (args)) != 0)\n #if defined (VMS)\n-\treturn -1; /* execv is in parent context on VMS. */\n+        return -1; /* execv is in parent context on VMS. */\n #else\n-\t_exit (1);\n+        _exit (1);\n #endif\n     }\n \n@@ -2616,17 +2617,17 @@ __gnat_locate_regular_file (char *file_name, char *path_val)\n       /* Skip the starting quote */\n \n       if (*path_val == '\"')\n-\tpath_val++;\n+        path_val++;\n \n       for (ptr = file_path; *path_val && *path_val != PATH_SEPARATOR; )\n-\t*ptr++ = *path_val++;\n+        *ptr++ = *path_val++;\n \n       ptr--;\n \n       /* Skip the ending quote */\n \n       if (*ptr == '\"')\n-\tptr--;\n+        ptr--;\n \n       if (*ptr != '/' && *ptr != DIR_SEPARATOR)\n         *++ptr = DIR_SEPARATOR;\n@@ -2754,8 +2755,8 @@ wildcard_translate_unix (char *name)\n     {\n       new_canonical_filelist_allocated += NEW_CANONICAL_FILELIST_INCREMENT;\n       new_canonical_filelist = (char **) xrealloc\n-\t(new_canonical_filelist,\n-\t new_canonical_filelist_allocated * sizeof (char *));\n+        (new_canonical_filelist,\n+         new_canonical_filelist_allocated * sizeof (char *));\n     }\n \n   new_canonical_filelist[new_canonical_filelist_in_use++] = xstrdup (buff);\n@@ -2791,11 +2792,11 @@ __gnat_to_canonical_file_list_init (char *filespec, int onlydirs)\n       char *ext;\n \n       for (i = 0; i < new_canonical_filelist_in_use; i++)\n-\t{\n-\t  ext = strstr (new_canonical_filelist[i], \".dir\");\n-\t  if (ext)\n-\t    *ext = 0;\n-\t}\n+        {\n+          ext = strstr (new_canonical_filelist[i], \".dir\");\n+          if (ext)\n+            *ext = 0;\n+        }\n     }\n \n   return new_canonical_filelist_in_use;\n@@ -2974,21 +2975,21 @@ __gnat_to_canonical_dir_spec (char *dirspec, int prefixflag)\n       char *dirspec1;\n \n       if (strchr (dirspec, ']') || strchr (dirspec, ':'))\n-\t{\n-\t  strncpy (new_canonical_dirspec,\n-\t\t   __gnat_translate_vms (dirspec),\n-\t\t   MAXPATH);\n-\t}\n+        {\n+          strncpy (new_canonical_dirspec,\n+                   __gnat_translate_vms (dirspec),\n+                   MAXPATH);\n+        }\n       else if (!strchr (dirspec, '/') && (dirspec1 = getenv (dirspec)) != 0)\n-\t{\n-\t  strncpy (new_canonical_dirspec,\n-\t\t  __gnat_translate_vms (dirspec1),\n-\t\t  MAXPATH);\n-\t}\n+        {\n+          strncpy (new_canonical_dirspec,\n+                  __gnat_translate_vms (dirspec1),\n+                  MAXPATH);\n+        }\n       else\n-\t{\n-\t  strncpy (new_canonical_dirspec, dirspec, MAXPATH);\n-\t}\n+        {\n+          strncpy (new_canonical_dirspec, dirspec, MAXPATH);\n+        }\n     }\n \n   len = strlen (new_canonical_dirspec);\n@@ -3019,16 +3020,16 @@ __gnat_to_canonical_file_spec (char *filespec)\n       char *tspec = (char *) __gnat_translate_vms (filespec);\n \n       if (tspec != (char *) -1)\n-\tstrncpy (new_canonical_filespec, tspec, MAXPATH);\n+        strncpy (new_canonical_filespec, tspec, MAXPATH);\n     }\n   else if ((strlen (filespec) == strspn (filespec,\n-\t    \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_\"))\n-\t&& (filespec1 = getenv (filespec)))\n+            \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_\"))\n+        && (filespec1 = getenv (filespec)))\n     {\n       char *tspec = (char *) __gnat_translate_vms (filespec1);\n \n       if (tspec != (char *) -1)\n-\tstrncpy (new_canonical_filespec, tspec, MAXPATH);\n+        strncpy (new_canonical_filespec, tspec, MAXPATH);\n     }\n   else\n     {\n@@ -3085,11 +3086,11 @@ __gnat_to_canonical_path_spec (char *pathspec)\n                 strncat (new_canonical_pathspec, \":\", MAXPATH);\n             }\n \n-\t  __gnat_to_canonical_file_list_free ();\n+          __gnat_to_canonical_file_list_free ();\n         }\n       else\n-\tstrncat (new_canonical_pathspec,\n-\t\t__gnat_to_canonical_dir_spec (buff, 0), MAXPATH);\n+        strncat (new_canonical_pathspec,\n+                __gnat_to_canonical_dir_spec (buff, 0), MAXPATH);\n \n       if (*next == 0)\n         break;"}, {"sha": "19dbf7aa77f5915d9858a16cdaa53ef0b530135f", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 20, "deletions": 13, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "patch": "@@ -2239,6 +2239,14 @@ package body Exp_Ch4 is\n       Result : Node_Id;\n       --  Result of the concatenation (of type Ityp)\n \n+      Actions : constant List_Id := New_List;\n+      --  Collect actions to be inserted if Save_Space is False\n+\n+      Save_Space : Boolean;\n+      pragma Warnings (Off, Save_Space);\n+      --  Set to True if we are saving generated code space by calling routines\n+      --  in packages System.Concat_n.\n+\n       Known_Non_Null_Operand_Seen : Boolean;\n       --  Set True during generation of the assignements of operands into\n       --  result once an operand known to be non-null has been seen.\n@@ -2552,7 +2560,7 @@ package body Exp_Ch4 is\n                  Make_Defining_Identifier (Loc,\n                    Chars => New_Internal_Name ('L'));\n \n-               Insert_Action (Cnode,\n+               Append_To (Actions,\n                  Make_Object_Declaration (Loc,\n                    Defining_Identifier => Var_Length (NN),\n                    Constant_Present    => True,\n@@ -2564,9 +2572,7 @@ package body Exp_Ch4 is\n                      Make_Attribute_Reference (Loc,\n                        Prefix         =>\n                          Duplicate_Subexpr (Opnd, Name_Req => True),\n-                       Attribute_Name => Name_Length)),\n-\n-                 Suppress => All_Checks);\n+                       Attribute_Name => Name_Length)));\n             end if;\n          end if;\n \n@@ -2595,8 +2601,8 @@ package body Exp_Ch4 is\n               Make_Integer_Literal (Loc,\n                 Intval => Fixed_Length (NN) + Intval (Aggr_Length (NN - 1)));\n \n-            --  All other cases, construct an addition node for the length and\n-            --  create an entity initialized to this length.\n+         --  All other cases, construct an addition node for the length and\n+         --  create an entity initialized to this length.\n \n          else\n             Ent :=\n@@ -2609,7 +2615,7 @@ package body Exp_Ch4 is\n                Clen := New_Reference_To (Var_Length (NN), Loc);\n             end if;\n \n-            Insert_Action (Cnode,\n+            Append_To (Actions,\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier => Ent,\n                 Constant_Present    => True,\n@@ -2620,9 +2626,7 @@ package body Exp_Ch4 is\n                 Expression          =>\n                   Make_Op_Add (Loc,\n                     Left_Opnd  => New_Copy (Aggr_Length (NN - 1)),\n-                    Right_Opnd => Clen)),\n-\n-              Suppress => All_Checks);\n+                    Right_Opnd => Clen)));\n \n             Aggr_Length (NN) := Make_Identifier (Loc, Chars => Chars (Ent));\n          end if;\n@@ -2724,13 +2728,12 @@ package body Exp_Ch4 is\n             Ent :=\n               Make_Defining_Identifier (Loc, Chars => New_Internal_Name ('L'));\n \n-            Insert_Action (Cnode,\n+            Append_To (Actions,\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier => Ent,\n                 Constant_Present    => True,\n                 Object_Definition   => New_Occurrence_Of (Ityp, Loc),\n-                Expression          => Get_Known_Bound (1)),\n-              Suppress => All_Checks);\n+                Expression          => Get_Known_Bound (1)));\n \n             Low_Bound := New_Reference_To (Ent, Loc);\n          end;\n@@ -2773,6 +2776,10 @@ package body Exp_Ch4 is\n                High_Bound));\n       end if;\n \n+      --  Here is where we insert the saved up actions\n+\n+      Insert_Actions (Cnode, Actions, Suppress => All_Checks);\n+\n       --  Now we construct an array object with appropriate bounds\n \n       Ent :="}, {"sha": "8ad15bd8e91c5b3b299b8301faf990775c96c4c1", "filename": "gcc/ada/initialize.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Finitialize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Finitialize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finitialize.c?ref=d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "patch": "@@ -97,7 +97,7 @@ append_arg (int *index, LPWSTR value, char ***argv, int *last)\n #endif\n \n void\n-__gnat_initialize (void *eh)\n+__gnat_initialize (void *eh ATTRIBUTE_UNUSED)\n {\n    /* Initialize floating-point coprocessor. This call is needed because\n       the MS libraries default to 64-bit precision instead of 80-bit\n@@ -114,10 +114,12 @@ __gnat_initialize (void *eh)\n      CurrentCodePage = CP_UTF8;\n \n      if (codepage != NULL)\n-       if (strcmp (codepage, \"CP_ACP\") == 0)\n-         CurrentCodePage = CP_ACP;\n-       else if (strcmp (codepage, \"CP_UTF8\") == 0)\n-         CurrentCodePage = CP_UTF8;\n+       {\n+\t if (strcmp (codepage, \"CP_ACP\") == 0)\n+\t   CurrentCodePage = CP_ACP;\n+\t else if (strcmp (codepage, \"CP_UTF8\") == 0)\n+\t   CurrentCodePage = CP_UTF8;\n+       }\n    }\n \n    /* Adjust gnat_argv to support Unicode characters. */"}, {"sha": "dd655ac3d8d95dd38311a514ea879ec30aec8d2b", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "patch": "@@ -705,6 +705,15 @@ package Rtsfind is\n      RE_Str_Concat_8,                    -- System.Concat_8\n      RE_Str_Concat_9,                    -- System.Concat_9\n \n+     RE_Str_Concat_Bounds_2,             -- System.Concat_2\n+     RE_Str_Concat_Bounds_3,             -- System.Concat_3\n+     RE_Str_Concat_Bounds_4,             -- System.Concat_4\n+     RE_Str_Concat_Bounds_5,             -- System.Concat_5\n+     RE_Str_Concat_Bounds_6,             -- System.Concat_6\n+     RE_Str_Concat_Bounds_7,             -- System.Concat_7\n+     RE_Str_Concat_Bounds_8,             -- System.Concat_8\n+     RE_Str_Concat_Bounds_9,             -- System.Concat_9\n+\n      RE_Get_Active_Partition_Id,         -- System.DSA_Services\n      RE_Get_Local_Partition_Id,          -- System.DSA_Services\n      RE_Get_Passive_Partition_Id,        -- System.DSA_Services\n@@ -1858,6 +1867,15 @@ package Rtsfind is\n      RE_Str_Concat_8                     => System_Concat_8,\n      RE_Str_Concat_9                     => System_Concat_9,\n \n+     RE_Str_Concat_Bounds_2              => System_Concat_2,\n+     RE_Str_Concat_Bounds_3              => System_Concat_3,\n+     RE_Str_Concat_Bounds_4              => System_Concat_4,\n+     RE_Str_Concat_Bounds_5              => System_Concat_5,\n+     RE_Str_Concat_Bounds_6              => System_Concat_6,\n+     RE_Str_Concat_Bounds_7              => System_Concat_7,\n+     RE_Str_Concat_Bounds_8              => System_Concat_8,\n+     RE_Str_Concat_Bounds_9              => System_Concat_9,\n+\n      RE_Get_Active_Partition_Id          => System_DSA_Services,\n      RE_Get_Local_Partition_Id           => System_DSA_Services,\n      RE_Get_Passive_Partition_Id         => System_DSA_Services,"}, {"sha": "a1d424b854764c2751041346414ba612133fe7e5", "filename": "gcc/ada/s-conca2.adb", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-conca2.adb?ref=d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "patch": "@@ -52,4 +52,22 @@ package body System.Concat_2 is\n       R (F .. L) := S2;\n    end Str_Concat_2;\n \n+   -------------------------\n+   -- Str_Concat_Bounds_2 --\n+   -------------------------\n+\n+   procedure Str_Concat_Bounds_2\n+     (Lo, Hi : out Natural;\n+      S1, S2 : String)\n+   is\n+   begin\n+      if S1 = \"\" then\n+         Lo := S2'First;\n+         Hi := S2'Last;\n+      else\n+         Lo := S1'First;\n+         Hi := S1'Last + S2'Length;\n+      end if;\n+   end Str_Concat_Bounds_2;\n+\n end System.Concat_2;"}, {"sha": "c5c7a2808becef89345dd7ccfb94f7082665c5df", "filename": "gcc/ada/s-conca2.ads", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-conca2.ads?ref=d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "patch": "@@ -38,8 +38,15 @@ package System.Concat_2 is\n \n    procedure Str_Concat_2 (R : out String; S1, S2 : String);\n    --  Performs the operation R := S1 & S2. The bounds of R are known to be\n-   --  correct, so no bounds checks are required, and it is known that none\n-   --  of the input operands overlaps R. No assumptions can be made about\n-   --  the lower bounds of any of the operands.\n+   --  correct (usually set by a call to the Str_Concat_Bounds_2 procedure\n+   --  below), so no bounds checks are required, and it is known that none of\n+   --  the input operands overlaps R. No assumptions can be made about the\n+   --  lower bounds of any of the operands.\n+\n+   procedure Str_Concat_Bounds_2\n+     (Lo, Hi : out Natural;\n+      S1, S2 : String);\n+   --  Assigns to Lo..Hi the bounds of the result of concatenating the two\n+   --  given strings, following the rules in the RM regarding null operands.\n \n end System.Concat_2;"}, {"sha": "48e4d86512b4c3ad721ccaeac2e2d3195bfb6bf4", "filename": "gcc/ada/s-conca3.adb", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-conca3.adb?ref=d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "patch": "@@ -31,6 +31,8 @@\n \n pragma Compiler_Unit;\n \n+with System.Concat_2;\n+\n package body System.Concat_3 is\n \n    pragma Suppress (All_Checks);\n@@ -56,4 +58,21 @@ package body System.Concat_3 is\n       R (F .. L) := S3;\n    end Str_Concat_3;\n \n+   -------------------------\n+   -- Str_Concat_Bounds_3 --\n+   -------------------------\n+\n+   procedure Str_Concat_Bounds_3\n+     (Lo, Hi     : out Natural;\n+      S1, S2, S3 : String)\n+   is\n+   begin\n+      System.Concat_2.Str_Concat_Bounds_2 (Lo, Hi, S2, S3);\n+\n+      if S1 /= \"\" then\n+         Hi := S1'Last + Hi - Lo + 1;\n+         Lo := S1'First;\n+      end if;\n+   end Str_Concat_Bounds_3;\n+\n end System.Concat_3;"}, {"sha": "c79e24a39c35c59b82dfad6f25c3f19d8a5e0fec", "filename": "gcc/ada/s-conca3.ads", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-conca3.ads?ref=d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "patch": "@@ -38,8 +38,15 @@ package System.Concat_3 is\n \n    procedure Str_Concat_3 (R : out String; S1, S2, S3 : String);\n    --  Performs the operation R := S1 & S2 & S3. The bounds of R are known to\n-   --  be correct, so no bounds checks are required, and it is known that none\n-   --  of the input operands overlaps R. No assumptions can be made about\n-   --  the lower bounds of any of the operands.\n+   --  be correct (usually set by a call to the Str_Concat_Bounds_3 procedure\n+   --  below), so no bounds checks are required, and it is known that none of\n+   --  the input operands overlaps R. No assumptions can be made about the\n+   --  lower bounds of any of the operands.\n+\n+   procedure Str_Concat_Bounds_3\n+     (Lo, Hi     : out Natural;\n+      S1, S2, S3 : String);\n+   --  Assigns to Lo..Hi the bounds of the result of concatenating the three\n+   --  given strings, following the rules in the RM regarding null operands.\n \n end System.Concat_3;"}, {"sha": "19fa324834b426ab82853d49c87624d12bf6ee86", "filename": "gcc/ada/s-conca4.adb", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-conca4.adb?ref=d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "patch": "@@ -31,6 +31,8 @@\n \n pragma Compiler_Unit;\n \n+with System.Concat_3;\n+\n package body System.Concat_4 is\n \n    pragma Suppress (All_Checks);\n@@ -60,4 +62,21 @@ package body System.Concat_4 is\n       R (F .. L) := S4;\n    end Str_Concat_4;\n \n+   -------------------------\n+   -- Str_Concat_Bounds_4 --\n+   -------------------------\n+\n+   procedure Str_Concat_Bounds_4\n+     (Lo, Hi         : out Natural;\n+      S1, S2, S3, S4 : String)\n+   is\n+   begin\n+      System.Concat_3.Str_Concat_Bounds_3 (Lo, Hi, S2, S3, S4);\n+\n+      if S1 /= \"\" then\n+         Hi := S1'Last + Hi - Lo + 1;\n+         Lo := S1'First;\n+      end if;\n+   end Str_Concat_Bounds_4;\n+\n end System.Concat_4;"}, {"sha": "43ce1bc3b2ed43b5473ed6ada9f1184441d80dab", "filename": "gcc/ada/s-conca4.ads", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca4.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca4.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-conca4.ads?ref=d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "patch": "@@ -37,9 +37,16 @@ pragma Compiler_Unit;\n package System.Concat_4 is\n \n    procedure Str_Concat_4 (R : out String; S1, S2, S3, S4 : String);\n-   --  Performs the operation R := S1 & S2 & S3 & S4. The bounds of R are known\n-   --  to be correct, so no bounds checks are required, and it is known that\n-   --  none of the input operands overlaps R. No assumptions can be made about\n-   --  the lower bounds of any of the operands.\n+   --  Performs the operation R := S1 & S2 & S3 & S4. The bounds\n+   --  of R are known to be correct (usually set by a call to the\n+   --  Str_Concat_Bounds_5 procedure below), so no bounds checks are required,\n+   --  and it is known that none of the input operands overlaps R. No\n+   --  assumptions can be made about the lower bounds of any of the operands.\n+\n+   procedure Str_Concat_Bounds_4\n+     (Lo, Hi         : out Natural;\n+      S1, S2, S3, S4 : String);\n+   --  Assigns to Lo..Hi the bounds of the result of concatenating the four\n+   --  given strings, following the rules in the RM regarding null operands.\n \n end System.Concat_4;"}, {"sha": "f0019961a99a3c1463b521898657fc52ced42337", "filename": "gcc/ada/s-conca5.adb", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-conca5.adb?ref=d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "patch": "@@ -31,6 +31,8 @@\n \n pragma Compiler_Unit;\n \n+with System.Concat_4;\n+\n package body System.Concat_5 is\n \n    pragma Suppress (All_Checks);\n@@ -64,4 +66,21 @@ package body System.Concat_5 is\n       R (F .. L) := S5;\n    end Str_Concat_5;\n \n+   -------------------------\n+   -- Str_Concat_Bounds_5 --\n+   -------------------------\n+\n+   procedure Str_Concat_Bounds_5\n+     (Lo, Hi             : out Natural;\n+      S1, S2, S3, S4, S5 : String)\n+   is\n+   begin\n+      System.Concat_4.Str_Concat_Bounds_4 (Lo, Hi, S2, S3, S4, S5);\n+\n+      if S1 /= \"\" then\n+         Hi := S1'Last + Hi - Lo + 1;\n+         Lo := S1'First;\n+      end if;\n+   end Str_Concat_Bounds_5;\n+\n end System.Concat_5;"}, {"sha": "996dbf936781209b6e3ea5f46d0dfbc4319c8c6e", "filename": "gcc/ada/s-conca5.ads", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca5.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca5.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-conca5.ads?ref=d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "patch": "@@ -37,9 +37,16 @@ pragma Compiler_Unit;\n package System.Concat_5 is\n \n    procedure Str_Concat_5 (R : out String; S1, S2, S3, S4, S5 : String);\n-   --  Performs the operation R := S1 & S2 & S3 & S4 & S5. The bounds of R are\n-   --  known to be correct, so no bounds checks are required, and it is known\n-   --  that none of the input operands overlaps R. No assumptions can be made\n-   --  about the lower bounds of any of the operands.\n+   --  Performs the operation R := S1 & S2 & S3 & S4 & S5. The bounds\n+   --  of R are known to be correct (usually set by a call to the\n+   --  Str_Concat_Bounds_5 procedure below), so no bounds checks are required,\n+   --  and it is known that none of the input operands overlaps R. No\n+   --  assumptions can be made about the lower bounds of any of the operands.\n+\n+   procedure Str_Concat_Bounds_5\n+     (Lo, Hi             : out Natural;\n+      S1, S2, S3, S4, S5 : String);\n+   --  Assigns to Lo..Hi the bounds of the result of concatenating the five\n+   --  given strings, following the rules in the RM regarding null operands.\n \n end System.Concat_5;"}, {"sha": "115b36ec0e4a1b45d67c22f02acb980e099fb3c1", "filename": "gcc/ada/s-conca6.adb", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-conca6.adb?ref=d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "patch": "@@ -31,6 +31,8 @@\n \n pragma Compiler_Unit;\n \n+with System.Concat_5;\n+\n package body System.Concat_6 is\n \n    pragma Suppress (All_Checks);\n@@ -68,4 +70,21 @@ package body System.Concat_6 is\n       R (F .. L) := S6;\n    end Str_Concat_6;\n \n+   -------------------------\n+   -- Str_Concat_Bounds_6 --\n+   -------------------------\n+\n+   procedure Str_Concat_Bounds_6\n+     (Lo, Hi                 : out Natural;\n+      S1, S2, S3, S4, S5, S6 : String)\n+   is\n+   begin\n+      System.Concat_5.Str_Concat_Bounds_5 (Lo, Hi, S2, S3, S4, S5, S6);\n+\n+      if S1 /= \"\" then\n+         Hi := S1'Last + Hi - Lo + 1;\n+         Lo := S1'First;\n+      end if;\n+   end Str_Concat_Bounds_6;\n+\n end System.Concat_6;"}, {"sha": "91cc10e68d526c179b1d1f507951873e8579919b", "filename": "gcc/ada/s-conca6.ads", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca6.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca6.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-conca6.ads?ref=d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "patch": "@@ -37,9 +37,16 @@ pragma Compiler_Unit;\n package System.Concat_6 is\n \n    procedure Str_Concat_6 (R : out String; S1, S2, S3, S4, S5, S6 : String);\n-   --  Performs the operation R := S1 & S2 & S3 & S4 & S5 & S6. The bounds of\n-   --  R are known to be correct, so no bounds checks are required, and it is\n-   --  known that none of the input operands overlaps R. No assumptions can be\n-   --  made about the lower bounds of any of the operands.\n+   --  Performs the operation R := S1 & S2 & S3 & S4 & S5 & S6. The\n+   --  bounds of R are known to be correct (usually set by a call to the\n+   --  Str_Concat_Bounds_6 procedure below), so no bounds checks are required,\n+   --  and it is known that none of the input operands overlaps R. No\n+   --  assumptions can be made about the lower bounds of any of the operands.\n+\n+   procedure Str_Concat_Bounds_6\n+     (Lo, Hi                 : out Natural;\n+      S1, S2, S3, S4, S5, S6 : String);\n+   --  Assigns to Lo..Hi the bounds of the result of concatenating the six\n+   --  given strings, following the rules in the RM regarding null operands.\n \n end System.Concat_6;"}, {"sha": "5436fbd8c5eae64a6d562a03a0aaaf55788829c8", "filename": "gcc/ada/s-conca7.adb", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-conca7.adb?ref=d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "patch": "@@ -31,6 +31,8 @@\n \n pragma Compiler_Unit;\n \n+with System.Concat_6;\n+\n package body System.Concat_7 is\n \n    pragma Suppress (All_Checks);\n@@ -75,4 +77,21 @@ package body System.Concat_7 is\n       R (F .. L) := S7;\n    end Str_Concat_7;\n \n+   -------------------------\n+   -- Str_Concat_Bounds_7 --\n+   -------------------------\n+\n+   procedure Str_Concat_Bounds_7\n+     (Lo, Hi                     : out Natural;\n+      S1, S2, S3, S4, S5, S6, S7 : String)\n+   is\n+   begin\n+      System.Concat_6.Str_Concat_Bounds_6 (Lo, Hi, S2, S3, S4, S5, S6, S7);\n+\n+      if S1 /= \"\" then\n+         Hi := S1'Last + Hi - Lo + 1;\n+         Lo := S1'First;\n+      end if;\n+   end Str_Concat_Bounds_7;\n+\n end System.Concat_7;"}, {"sha": "139a816d23c9f81538d7c95134b83144d57d8fff", "filename": "gcc/ada/s-conca7.ads", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca7.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca7.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-conca7.ads?ref=d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "patch": "@@ -39,9 +39,16 @@ package System.Concat_7 is\n    procedure Str_Concat_7\n      (R                          : out String;\n       S1, S2, S3, S4, S5, S6, S7 : String);\n-   --  Performs the operation R := S1 & S2 & S3 & S4 & S5 & S6 & S7. The bounds\n-   --  of R are known to be correct, so no bounds checks are required, and it\n-   --  is known that none of the input operands overlaps R. No assumptions can\n-   --  be made about the lower bounds of any of the operands.\n+   --  Performs the operation R := S1 & S2 & S3 & S4 & S5 & S6 & S7. The\n+   --  bounds of R are known to be correct (usually set by a call to the\n+   --  Str_Concat_Bounds_8 procedure below), so no bounds checks are required,\n+   --  and it is known that none of the input operands overlaps R. No\n+   --  assumptions can be made about the lower bounds of any of the operands.\n+\n+   procedure Str_Concat_Bounds_7\n+     (Lo, Hi                     : out Natural;\n+      S1, S2, S3, S4, S5, S6, S7 : String);\n+   --  Assigns to Lo..Hi the bounds of the result of concatenating the seven\n+   --  given strings, following the rules in the RM regarding null operands.\n \n end System.Concat_7;"}, {"sha": "dfc5bf7dfdebd543d62eaf69c37325ffb9079325", "filename": "gcc/ada/s-conca8.adb", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-conca8.adb?ref=d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "patch": "@@ -31,6 +31,8 @@\n \n pragma Compiler_Unit;\n \n+with System.Concat_7;\n+\n package body System.Concat_8 is\n \n    pragma Suppress (All_Checks);\n@@ -79,4 +81,22 @@ package body System.Concat_8 is\n       R (F .. L) := S8;\n    end Str_Concat_8;\n \n+   -------------------------\n+   -- Str_Concat_Bounds_8 --\n+   -------------------------\n+\n+   procedure Str_Concat_Bounds_8\n+     (Lo, Hi                         : out Natural;\n+      S1, S2, S3, S4, S5, S6, S7, S8 : String)\n+   is\n+   begin\n+      System.Concat_7.Str_Concat_Bounds_7\n+        (Lo, Hi, S2, S3, S4, S5, S6, S7, S8);\n+\n+      if S1 /= \"\" then\n+         Hi := S1'Last + Hi - Lo + 1;\n+         Lo := S1'First;\n+      end if;\n+   end Str_Concat_Bounds_8;\n+\n end System.Concat_8;"}, {"sha": "5978a39dca3b76bab7f2a17484842930884a016c", "filename": "gcc/ada/s-conca8.ads", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca8.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca8.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-conca8.ads?ref=d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "patch": "@@ -39,9 +39,16 @@ package System.Concat_8 is\n    procedure Str_Concat_8\n      (R                              : out String;\n       S1, S2, S3, S4, S5, S6, S7, S8 : String);\n-   --  Performs the operation R := S1 & S2 & S3 & S4 & S5 & S6 & S7 & S8. The\n-   --  bounds of R are known to be correct, so no bounds checks are required,\n+   --  Performs the operation R := S1 & S2 & S3 & S4 & S5 & S6 & S7 & S8.\n+   --  The bounds of R are known to be correct (usually set by a call to the\n+   --  Str_Concat_Bounds_8 procedure below), so no bounds checks are required,\n    --  and it is known that none of the input operands overlaps R. No\n    --  assumptions can be made about the lower bounds of any of the operands.\n \n+   procedure Str_Concat_Bounds_8\n+     (Lo, Hi                         : out Natural;\n+      S1, S2, S3, S4, S5, S6, S7, S8 : String);\n+   --  Assigns to Lo..Hi the bounds of the result of concatenating the eight\n+   --  given strings, following the rules in the RM regarding null operands.\n+\n end System.Concat_8;"}, {"sha": "530eee19349c774246181a61e7bf6e31536f2987", "filename": "gcc/ada/s-conca9.adb", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-conca9.adb?ref=d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "patch": "@@ -31,6 +31,8 @@\n \n pragma Compiler_Unit;\n \n+with System.Concat_8;\n+\n package body System.Concat_9 is\n \n    pragma Suppress (All_Checks);\n@@ -83,4 +85,22 @@ package body System.Concat_9 is\n       R (F .. L) := S9;\n    end Str_Concat_9;\n \n+   -------------------------\n+   -- Str_Concat_Bounds_9 --\n+   -------------------------\n+\n+   procedure Str_Concat_Bounds_9\n+     (Lo, Hi                             : out Natural;\n+      S1, S2, S3, S4, S5, S6, S7, S8, S9 : String)\n+   is\n+   begin\n+      System.Concat_8.Str_Concat_Bounds_8\n+        (Lo, Hi, S2, S3, S4, S5, S6, S7, S8, S9);\n+\n+      if S1 /= \"\" then\n+         Hi := S1'Last + Hi - Lo + 1;\n+         Lo := S1'First;\n+      end if;\n+   end Str_Concat_Bounds_9;\n+\n end System.Concat_9;"}, {"sha": "1890c90e15563c7fde25b6f73ec887056830cff1", "filename": "gcc/ada/s-conca9.ads", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de/gcc%2Fada%2Fs-conca9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-conca9.ads?ref=d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "patch": "@@ -40,8 +40,15 @@ package System.Concat_9 is\n      (R                                  : out String;\n       S1, S2, S3, S4, S5, S6, S7, S8, S9 : String);\n    --  Performs the operation R := S1 & S2 & S3 & S4 & S5 & S6 & S7 & S8 & S9.\n-   --  The bounds of R are known to be correct, so no bounds checks are\n-   --  required, and it is known that none of the input operands overlaps R. No\n+   --  The bounds of R are known to be correct (usually set by a call to the\n+   --  Str_Concat_Bounds_9 procedure below), so no bounds checks are required,\n+   --  and it is known that none of the input operands overlaps R. No\n    --  assumptions can be made about the lower bounds of any of the operands.\n \n+   procedure Str_Concat_Bounds_9\n+     (Lo, Hi                             : out Natural;\n+      S1, S2, S3, S4, S5, S6, S7, S8, S9 : String);\n+   --  Assigns to Lo..Hi the bounds of the result of concatenating the nine\n+   --  given strings, following the rules in the RM regarding null operands.\n+\n end System.Concat_9;"}]}