{"sha": "2a00acf0302a5eeb785109e92e69518822d95ae4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmEwMGFjZjAzMDJhNWVlYjc4NTEwOWU5MmU2OTUxODgyMmQ5NWFlNA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-01-05T04:46:25Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-01-05T04:46:25Z"}, "message": "(ASM_GENERATE_INTERNAL_LABEL, ASM_OUTPUT_INTERNAL_LABEL):\n\nAlternate definitions if NO_UNDERSCORES.\n\nFrom-SVN: r3092", "tree": {"sha": "f02c7d1bedb1804c4a3e1f51d06ede1f09fd3738", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f02c7d1bedb1804c4a3e1f51d06ede1f09fd3738"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a00acf0302a5eeb785109e92e69518822d95ae4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a00acf0302a5eeb785109e92e69518822d95ae4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a00acf0302a5eeb785109e92e69518822d95ae4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a00acf0302a5eeb785109e92e69518822d95ae4/comments", "author": null, "committer": null, "parents": [{"sha": "f744b2cecabb75a587af4254f1e213545b507347", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f744b2cecabb75a587af4254f1e213545b507347", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f744b2cecabb75a587af4254f1e213545b507347"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "164290c5a5bbd16d4050e653cffc7cbca790e694", "filename": "gcc/config/i386/bsd.h", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a00acf0302a5eeb785109e92e69518822d95ae4/gcc%2Fconfig%2Fi386%2Fbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a00acf0302a5eeb785109e92e69518822d95ae4/gcc%2Fconfig%2Fi386%2Fbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fbsd.h?ref=2a00acf0302a5eeb785109e92e69518822d95ae4", "patch": "@@ -85,21 +85,31 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    to a multiple of 2**LOG bytes.  */\n \n #define ASM_OUTPUT_ALIGN(FILE,LOG)\t\\\n-     if ((LOG)!=0) fprintf ((FILE), \"\\t.align %d\\n\", (LOG))\n+  if ((LOG)!=0) fprintf ((FILE), \"\\t.align %d\\n\", (LOG))\n \n /* This is how to store into the string BUF\n    the symbol_ref name of an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.\n    This is suitable for output with `assemble_name'.  */\n \n+#ifdef NO_UNDERSCORES\n+#define ASM_GENERATE_INTERNAL_LABEL(BUF,PREFIX,NUMBER)\t\\\n+    sprintf ((BUF), \"*.%s%d\", (PREFIX), (NUMBER))\n+#else\n #define ASM_GENERATE_INTERNAL_LABEL(BUF,PREFIX,NUMBER)\t\\\n     sprintf ((BUF), \"*%s%d\", (PREFIX), (NUMBER))\n+#endif\n \n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */\n \n+#ifdef NO_UNDERSCORES\n+#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n+  fprintf (FILE, \".%s%d:\\n\", PREFIX, NUM)\n+#else\n #define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\\n   fprintf (FILE, \"%s%d:\\n\", PREFIX, NUM)\n+#endif\n \n /* This is how to output a reference to a user-level label named NAME.  */\n "}]}