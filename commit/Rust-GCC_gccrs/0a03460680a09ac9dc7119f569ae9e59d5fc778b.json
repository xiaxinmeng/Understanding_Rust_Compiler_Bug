{"sha": "0a03460680a09ac9dc7119f569ae9e59d5fc778b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGEwMzQ2MDY4MGEwOWFjOWRjNzExOWY1NjlhZTllNTlkNWZjNzc4Yg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2011-09-06T13:09:41Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-06T13:09:41Z"}, "message": "impunit.ads, [...] (Is_RM_Defined_Unit): New function.\n\n2011-09-06  Robert Dewar  <dewar@adacore.com>\n\n\t* impunit.ads, impunit.adb (Is_RM_Defined_Unit): New function.\n\t* s-rident.ads: New restriction No_Implementation_Units\n\t(this restriction is also part of the profile\n\tNo_Implementation_Extensions)\n\t* sem_ch10.adb (Analyze_With_Clause): Add check for\n\tNo_Implementation_Units restriction.\n\nFrom-SVN: r178594", "tree": {"sha": "e1de89f0e081fe758e792d871c404851cfb363a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1de89f0e081fe758e792d871c404851cfb363a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a03460680a09ac9dc7119f569ae9e59d5fc778b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a03460680a09ac9dc7119f569ae9e59d5fc778b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a03460680a09ac9dc7119f569ae9e59d5fc778b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a03460680a09ac9dc7119f569ae9e59d5fc778b/comments", "author": null, "committer": null, "parents": [{"sha": "ebb6faaafae68ade1685169e3f23a6870ed63102", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebb6faaafae68ade1685169e3f23a6870ed63102", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebb6faaafae68ade1685169e3f23a6870ed63102"}], "stats": {"total": 945, "additions": 557, "deletions": 388}, "files": [{"sha": "bbd64ff827cc9ca79ca2091b034cc4199838c596", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a03460680a09ac9dc7119f569ae9e59d5fc778b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a03460680a09ac9dc7119f569ae9e59d5fc778b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0a03460680a09ac9dc7119f569ae9e59d5fc778b", "patch": "@@ -1,3 +1,12 @@\n+2011-09-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* impunit.ads, impunit.adb (Is_RM_Defined_Unit): New function.\n+\t* s-rident.ads: New restriction No_Implementation_Units\n+\t(this restriction is also part of the profile\n+\tNo_Implementation_Extensions)\n+\t* sem_ch10.adb (Analyze_With_Clause): Add check for\n+\tNo_Implementation_Units restriction.\n+\n 2011-09-06  Jerome Guitton  <guitton@adacore.com>\n \n \t* sysdep.c (__gnat_get_task_options): Disable VX_SPE_TASK"}, {"sha": "efcca65fef0fd3f761fd47eacd94712ea240b316", "filename": "gcc/ada/impunit.adb", "status": "modified", "additions": 521, "deletions": 384, "changes": 905, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a03460680a09ac9dc7119f569ae9e59d5fc778b/gcc%2Fada%2Fimpunit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a03460680a09ac9dc7119f569ae9e59d5fc778b/gcc%2Fada%2Fimpunit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.adb?ref=0a03460680a09ac9dc7119f569ae9e59d5fc778b", "patch": "@@ -29,6 +29,7 @@ with Sinfo;    use Sinfo;\n with Fname.UF; use Fname.UF;\n with Lib;      use Lib;\n with Namet;    use Namet;\n+with Opt;      use Opt;\n with Uname;    use Uname;\n \n --  Note: this package body is used by GPS and GNATBench to supply a list of\n@@ -37,7 +38,21 @@ with Uname;    use Uname;\n package body Impunit is\n \n    subtype File_Name_8 is String (1 .. 8);\n-   type File_List is array (Nat range <>) of File_Name_8;\n+\n+   type File_Name_Record is record\n+      Fname : File_Name_8;\n+      --  8 character name of unit\n+\n+      RMdef : Boolean;\n+      --  True if unit is RM defined. False for any unit that is implementation\n+      --  defined (and thus not with'able in No_Implementation_Units mode).\n+   end record;\n+\n+   type File_List is array (Nat range <>) of File_Name_Record;\n+\n+   T : constant Boolean := True;\n+   F : constant Boolean := False;\n+   --  Short hand for RM_Defined values in lists below\n \n    ------------------\n    -- Ada 95 Units --\n@@ -58,130 +73,133 @@ package body Impunit is\n    -- Ada Hierarchy Units from Ada-95 Reference Manual --\n    ------------------------------------------------------\n \n-     \"a-astaco\",    -- Ada.Asynchronous_Task_Control\n-     \"a-calend\",    -- Ada.Calendar\n-     \"a-chahan\",    -- Ada.Characters.Handling\n-     \"a-charac\",    -- Ada.Characters\n-     \"a-chlat1\",    -- Ada.Characters.Latin_1\n-     \"a-comlin\",    -- Ada.Command_Line\n-     \"a-decima\",    -- Ada.Decimal\n-     \"a-direio\",    -- Ada.Direct_IO\n-     \"a-dynpri\",    -- Ada.Dynamic_Priorities\n-     \"a-except\",    -- Ada.Exceptions\n-     \"a-finali\",    -- Ada.Finalization\n-     \"a-flteio\",    -- Ada.Float_Text_IO\n-     \"a-fwteio\",    -- Ada.Float_Wide_Text_IO\n-     \"a-inteio\",    -- Ada.Integer_Text_IO\n-     \"a-interr\",    -- Ada.Interrupts\n-     \"a-intnam\",    -- Ada.Interrupts.Names\n-     \"a-ioexce\",    -- Ada.IO_Exceptions\n-     \"a-iwteio\",    -- Ada.Integer_Wide_Text_IO\n-     \"a-ncelfu\",    -- Ada.Numerics.Complex_Elementary_Functions\n-     \"a-ngcefu\",    -- Ada.Numerics.Generic_Complex_Elementary_Functions\n-     \"a-ngcoty\",    -- Ada.Numerics.Generic_Complex_Types\n-     \"a-ngelfu\",    -- Ada.Numerics.Generic_Elementary_Functions\n-     \"a-nucoty\",    -- Ada.Numerics.Complex_Types\n-     \"a-nudira\",    -- Ada.Numerics.Discrete_Random\n-     \"a-nuelfu\",    -- Ada.Numerics.Elementary_Functions\n-     \"a-nuflra\",    -- Ada.Numerics.Float_Random\n-     \"a-numeri\",    -- Ada.Numerics\n-     \"a-reatim\",    -- Ada.Real_Time\n-     \"a-sequio\",    -- Ada.Sequential_IO\n-     \"a-stmaco\",    -- Ada.Strings.Maps.Constants\n-     \"a-storio\",    -- Ada.Storage_IO\n-     \"a-strbou\",    -- Ada.Strings.Bounded\n-     \"a-stream\",    -- Ada.Streams\n-     \"a-strfix\",    -- Ada.Strings.Fixed\n-     \"a-string\",    -- Ada.Strings\n-     \"a-strmap\",    -- Ada.Strings.Maps\n-     \"a-strunb\",    -- Ada.Strings.Unbounded\n-     \"a-ststio\",    -- Ada.Streams.Stream_IO\n-     \"a-stwibo\",    -- Ada.Strings.Wide_Bounded\n-     \"a-stwifi\",    -- Ada.Strings.Wide_Fixed\n-     \"a-stwima\",    -- Ada.Strings.Wide_Maps\n-     \"a-stwiun\",    -- Ada.Strings.Wide_Unbounded\n-     \"a-swmwco\",    -- Ada.Strings.Wide_Maps.Wide_Constants\n-     \"a-sytaco\",    -- Ada.Synchronous_Task_Control\n-     \"a-tags  \",    -- Ada.Tags\n-     \"a-tasatt\",    -- Ada.Task_Attributes\n-     \"a-taside\",    -- Ada.Task_Identification\n-     \"a-teioed\",    -- Ada.Text_IO.Editing\n-     \"a-textio\",    -- Ada.Text_IO\n-     \"a-ticoio\",    -- Ada.Text_IO.Complex_IO\n-     \"a-titest\",    -- Ada.Text_IO.Text_Streams\n-     \"a-unccon\",    -- Ada.Unchecked_Conversion\n-     \"a-uncdea\",    -- Ada.Unchecked_Deallocation\n-     \"a-witeio\",    -- Ada.Wide_Text_IO\n-     \"a-wtcoio\",    -- Ada.Wide_Text_IO.Complex_IO\n-     \"a-wtedit\",    -- Ada.Wide_Text_IO.Editing\n-     \"a-wttest\",    -- Ada.Wide_Text_IO.Text_Streams\n+    (\"a-astaco\", T),  -- Ada.Asynchronous_Task_Control\n+    (\"a-calend\", T),  -- Ada.Calendar\n+    (\"a-chahan\", T),  -- Ada.Characters.Handling\n+    (\"a-charac\", T),  -- Ada.Characters\n+    (\"a-chlat1\", T),  -- Ada.Characters.Latin_1\n+    (\"a-comlin\", T),  -- Ada.Command_Line\n+    (\"a-decima\", T),  -- Ada.Decimal\n+    (\"a-direio\", T),  -- Ada.Direct_IO\n+    (\"a-dynpri\", T),  -- Ada.Dynamic_Priorities\n+    (\"a-except\", T),  -- Ada.Exceptions\n+    (\"a-finali\", T),  -- Ada.Finalization\n+    (\"a-flteio\", T),  -- Ada.Float_Text_IO\n+    (\"a-fwteio\", T),  -- Ada.Float_Wide_Text_IO\n+    (\"a-inteio\", T),  -- Ada.Integer_Text_IO\n+    (\"a-interr\", T),  -- Ada.Interrupts\n+    (\"a-intnam\", T),  -- Ada.Interrupts.Names\n+    (\"a-ioexce\", T),  -- Ada.IO_Exceptions\n+    (\"a-iwteio\", T),  -- Ada.Integer_Wide_Text_IO\n+    (\"a-ncelfu\", T),  -- Ada.Numerics.Complex_Elementary_Functions\n+    (\"a-ngcefu\", T),  -- Ada.Numerics.Generic_Complex_Elementary_Functions\n+    (\"a-ngcoty\", T),  -- Ada.Numerics.Generic_Complex_Types\n+    (\"a-ngelfu\", T),  -- Ada.Numerics.Generic_Elementary_Functions\n+    (\"a-nucoty\", T),  -- Ada.Numerics.Complex_Types\n+    (\"a-nudira\", T),  -- Ada.Numerics.Discrete_Random\n+    (\"a-nuelfu\", T),  -- Ada.Numerics.Elementary_Functions\n+    (\"a-nuflra\", T),  -- Ada.Numerics.Float_Random\n+    (\"a-numeri\", T),  -- Ada.Numerics\n+    (\"a-reatim\", T),  -- Ada.Real_Time\n+    (\"a-sequio\", T),  -- Ada.Sequential_IO\n+    (\"a-stmaco\", T),  -- Ada.Strings.Maps.Constants\n+    (\"a-storio\", T),  -- Ada.Storage_IO\n+    (\"a-strbou\", T),  -- Ada.Strings.Bounded\n+    (\"a-stream\", T),  -- Ada.Streams\n+    (\"a-strfix\", T),  -- Ada.Strings.Fixed\n+    (\"a-string\", T),  -- Ada.Strings\n+    (\"a-strmap\", T),  -- Ada.Strings.Maps\n+    (\"a-strunb\", T),  -- Ada.Strings.Unbounded\n+    (\"a-ststio\", T),  -- Ada.Streams.Stream_IO\n+    (\"a-stwibo\", T),  -- Ada.Strings.Wide_Bounded\n+    (\"a-stwifi\", T),  -- Ada.Strings.Wide_Fixed\n+    (\"a-stwima\", T),  -- Ada.Strings.Wide_Maps\n+    (\"a-stwiun\", T),  -- Ada.Strings.Wide_Unbounded\n+    (\"a-swmwco\", T),  -- Ada.Strings.Wide_Maps.Wide_Constants\n+    (\"a-sytaco\", T),  -- Ada.Synchronous_Task_Control\n+    (\"a-tags  \", T),  -- Ada.Tags\n+    (\"a-tasatt\", T),  -- Ada.Task_Attributes\n+    (\"a-taside\", T),  -- Ada.Task_Identification\n+    (\"a-teioed\", T),  -- Ada.Text_IO.Editing\n+    (\"a-textio\", T),  -- Ada.Text_IO\n+    (\"a-ticoio\", T),  -- Ada.Text_IO.Complex_IO\n+    (\"a-titest\", T),  -- Ada.Text_IO.Text_Streams\n+    (\"a-unccon\", T),  -- Ada.Unchecked_Conversion\n+    (\"a-uncdea\", T),  -- Ada.Unchecked_Deallocation\n+    (\"a-witeio\", T),  -- Ada.Wide_Text_IO\n+    (\"a-wtcoio\", T),  -- Ada.Wide_Text_IO.Complex_IO\n+    (\"a-wtedit\", T),  -- Ada.Wide_Text_IO.Editing\n+    (\"a-wttest\", T),  -- Ada.Wide_Text_IO.Text_Streams\n \n    -------------------------------------------------\n    -- RM Required Additions to Ada for GNAT Types --\n    -------------------------------------------------\n \n-     \"a-lfteio\",    -- Ada.Long_Float_Text_IO\n-     \"a-lfwtio\",    -- Ada.Long_Float_Wide_Text_IO\n-     \"a-liteio\",    -- Ada.Long_Integer_Text_IO\n-     \"a-liwtio\",    -- Ada.Long_Integer_Wide_Text_IO\n-     \"a-llftio\",    -- Ada.Long_Long_Float_Text_IO\n-     \"a-llfwti\",    -- Ada.Long_Long_Float_Wide_Text_IO\n-     \"a-llitio\",    -- Ada.Long_Long_Integer_Text_IO\n-     \"a-lliwti\",    -- Ada.Long_Long_Integer_Wide_Text_IO\n-     \"a-nlcefu\",    -- Ada.Long_Complex_Elementary_Functions\n-     \"a-nlcoty\",    -- Ada.Numerics.Long_Complex_Types\n-     \"a-nlelfu\",    -- Ada.Numerics.Long_Elementary_Functions\n-     \"a-nllcef\",    -- Ada.Long_Long_Complex_Elementary_Functions\n-     \"a-nllefu\",    -- Ada.Numerics.Long_Long_Elementary_Functions\n-     \"a-nllcty\",    -- Ada.Numerics.Long_Long_Complex_Types\n-     \"a-nscefu\",    -- Ada.Short_Complex_Elementary_Functions\n-     \"a-nscoty\",    -- Ada.Numerics.Short_Complex_Types\n-     \"a-nselfu\",    -- Ada.Numerics.Short_Elementary_Functions\n-     \"a-sfteio\",    -- Ada.Short_Float_Text_IO\n-     \"a-sfwtio\",    -- Ada.Short_Float_Wide_Text_IO\n-     \"a-siteio\",    -- Ada.Short_Integer_Text_IO\n-     \"a-siwtio\",    -- Ada.Short_Integer_Wide_Text_IO\n-     \"a-ssitio\",    -- Ada.Short_Short_Integer_Text_IO\n-     \"a-ssiwti\",    -- Ada.Short_Short_Integer_Wide_Text_IO\n+   --  Note: Long versions are considered RM defined, but not the Long Long,\n+   --  Short, or Short_Short versions.\n+\n+    (\"a-lfteio\", T),  -- Ada.Long_Float_Text_IO\n+    (\"a-lfwtio\", T),  -- Ada.Long_Float_Wide_Text_IO\n+    (\"a-liteio\", T),  -- Ada.Long_Integer_Text_IO\n+    (\"a-liwtio\", T),  -- Ada.Long_Integer_Wide_Text_IO\n+    (\"a-llftio\", T),  -- Ada.Long_Long_Float_Text_IO\n+    (\"a-llfwti\", T),  -- Ada.Long_Long_Float_Wide_Text_IO\n+    (\"a-llitio\", T),  -- Ada.Long_Long_Integer_Text_IO\n+    (\"a-lliwti\", F),  -- Ada.Long_Long_Integer_Wide_Text_IO\n+    (\"a-nlcefu\", F),  -- Ada.Long_Complex_Elementary_Functions\n+    (\"a-nlcoty\", T),  -- Ada.Numerics.Long_Complex_Types\n+    (\"a-nlelfu\", T),  -- Ada.Numerics.Long_Elementary_Functions\n+    (\"a-nllcef\", F),  -- Ada.Long_Long_Complex_Elementary_Functions\n+    (\"a-nllefu\", F),  -- Ada.Numerics.Long_Long_Elementary_Functions\n+    (\"a-nllcty\", F),  -- Ada.Numerics.Long_Long_Complex_Types\n+    (\"a-nscefu\", F),  -- Ada.Short_Complex_Elementary_Functions\n+    (\"a-nscoty\", F),  -- Ada.Numerics.Short_Complex_Types\n+    (\"a-nselfu\", F),  -- Ada.Numerics.Short_Elementary_Functions\n+    (\"a-sfteio\", F),  -- Ada.Short_Float_Text_IO\n+    (\"a-sfwtio\", F),  -- Ada.Short_Float_Wide_Text_IO\n+    (\"a-siteio\", F),  -- Ada.Short_Integer_Text_IO\n+    (\"a-siwtio\", F),  -- Ada.Short_Integer_Wide_Text_IO\n+    (\"a-ssitio\", F),  -- Ada.Short_Short_Integer_Text_IO\n+    (\"a-ssiwti\", F),  -- Ada.Short_Short_Integer_Wide_Text_IO\n \n    -----------------------------------\n    -- GNAT Defined Additions to Ada --\n    -----------------------------------\n \n-     \"a-calcon\",    -- Ada.Calendar.Conversions\n-     \"a-chlat9\",    -- Ada.Characters.Latin_9\n-     \"a-clrefi\",    -- Ada.Command_Line.Response_File\n-     \"a-colien\",    -- Ada.Command_Line.Environment\n-     \"a-colire\",    -- Ada.Command_Line.Remove\n-     \"a-cwila1\",    -- Ada.Characters.Wide_Latin_1\n-     \"a-cwila9\",    -- Ada.Characters.Wide_Latin_9\n-     \"a-diocst\",    -- Ada.Direct_IO.C_Streams\n-     \"a-einuoc\",    -- Ada.Exceptions.Is_Null_Occurrence\n-     \"a-elchha\",    -- Ada.Exceptions.Last_Chance_Handler\n-     \"a-exctra\",    -- Ada.Exceptions.Traceback\n-     \"a-siocst\",    -- Ada.Sequential_IO.C_Streams\n-     \"a-ssicst\",    -- Ada.Streams.Stream_IO.C_Streams\n-     \"a-suteio\",    -- Ada.Strings.Unbounded.Text_IO\n-     \"a-swuwti\",    -- Ada.Strings.Wide_Unbounded.Wide_Text_IO\n-     \"a-tiocst\",    -- Ada.Text_IO.C_Streams\n-     \"a-wtcstr\",    -- Ada.Wide_Text_IO.C_Streams\n+    (\"a-calcon\", F),  -- Ada.Calendar.Conversions\n+    (\"a-chlat9\", F),  -- Ada.Characters.Latin_9\n+    (\"a-clrefi\", F),  -- Ada.Command_Line.Response_File\n+    (\"a-colien\", F),  -- Ada.Command_Line.Environment\n+    (\"a-colire\", F),  -- Ada.Command_Line.Remove\n+    (\"a-cwila1\", F),  -- Ada.Characters.Wide_Latin_1\n+    (\"a-cwila9\", F),  -- Ada.Characters.Wide_Latin_9\n+    (\"a-diocst\", F),  -- Ada.Direct_IO.C_Streams\n+    (\"a-einuoc\", F),  -- Ada.Exceptions.Is_Null_Occurrence\n+    (\"a-elchha\", F),  -- Ada.Exceptions.Last_Chance_Handler\n+    (\"a-exctra\", F),  -- Ada.Exceptions.Traceback\n+    (\"a-siocst\", F),  -- Ada.Sequential_IO.C_Streams\n+    (\"a-ssicst\", F),  -- Ada.Streams.Stream_IO.C_Streams\n+    (\"a-suteio\", F),  -- Ada.Strings.Unbounded.Text_IO\n+    (\"a-swuwti\", F),  -- Ada.Strings.Wide_Unbounded.Wide_Text_IO\n+    (\"a-tiocst\", F),  -- Ada.Text_IO.C_Streams\n+    (\"a-wtcstr\", F),  -- Ada.Wide_Text_IO.C_Streams\n \n       --  Note: strictly the next two should be Ada 2005 units, but it seems\n       --  harmless (and useful) to make then available in Ada 95 mode, since\n       --  they only deal with Wide_Character, not Wide_Wide_Character.\n \n-     \"a-wichun\",    -- Ada.Wide_Characters.Unicode\n-     \"a-widcha\",    -- Ada.Wide_Characters\n+    (\"a-wichun\", F),  -- Ada.Wide_Characters.Unicode\n+    (\"a-widcha\", F),  -- Ada.Wide_Characters\n \n       --  Note: strictly the following should be Ada 2012 units, but it seems\n       --  harmless (and useful) to make then available in Ada 95 mode, since\n       --  they do not deal with Wide_Wide_Character.\n \n-     \"a-wichha\",    -- Ada.Wide_Characters.Handling\n-     \"a-stuten\",    -- Ada.Strings.UTF_Encoding\n-     \"a-suenco\",    -- Ada.Strings.UTF_Encoding.Conversions\n-     \"a-suenst\",    -- Ada.Strings.UTF_Encoding.Strings\n-     \"a-suewst\",    -- Ada.Strings.UTF_Encoding.Wide_Strings\n+    (\"a-wichha\", F),  -- Ada.Wide_Characters.Handling\n+    (\"a-stuten\", F),  -- Ada.Strings.UTF_Encoding\n+    (\"a-suenco\", F),  -- Ada.Strings.UTF_Encoding.Conversions\n+    (\"a-suenst\", F),  -- Ada.Strings.UTF_Encoding.Strings\n+    (\"a-suewst\", F),  -- Ada.Strings.UTF_Encoding.Wide_Strings\n \n    ---------------------------\n    -- GNAT Special IO Units --\n@@ -195,167 +213,167 @@ package body Impunit is\n    --  (if we did, then we would get a junk warning which would be confusing\n    --  and unnecessary, given that we generate a clear error message).\n \n-     \"a-tideio\",    -- Ada.Text_IO.Decimal_IO\n-     \"a-tienio\",    -- Ada.Text_IO.Enumeration_IO\n-     \"a-tifiio\",    -- Ada.Text_IO.Fixed_IO\n-     \"a-tiflio\",    -- Ada.Text_IO.Float_IO\n-     \"a-tiinio\",    -- Ada.Text_IO.Integer_IO\n-     \"a-tiinio\",    -- Ada.Text_IO.Integer_IO\n-     \"a-timoio\",    -- Ada.Text_IO.Modular_IO\n-     \"a-wtdeio\",    -- Ada.Wide_Text_IO.Decimal_IO\n-     \"a-wtenio\",    -- Ada.Wide_Text_IO.Enumeration_IO\n-     \"a-wtfiio\",    -- Ada.Wide_Text_IO.Fixed_IO\n-     \"a-wtflio\",    -- Ada.Wide_Text_IO.Float_IO\n-     \"a-wtinio\",    -- Ada.Wide_Text_IO.Integer_IO\n-     \"a-wtmoio\",    -- Ada.Wide_Text_IO.Modular_IO\n+    (\"a-tideio\", F),  -- Ada.Text_IO.Decimal_IO\n+    (\"a-tienio\", F),  -- Ada.Text_IO.Enumeration_IO\n+    (\"a-tifiio\", F),  -- Ada.Text_IO.Fixed_IO\n+    (\"a-tiflio\", F),  -- Ada.Text_IO.Float_IO\n+    (\"a-tiinio\", F),  -- Ada.Text_IO.Integer_IO\n+    (\"a-tiinio\", F),  -- Ada.Text_IO.Integer_IO\n+    (\"a-timoio\", F),  -- Ada.Text_IO.Modular_IO\n+    (\"a-wtdeio\", F),  -- Ada.Wide_Text_IO.Decimal_IO\n+    (\"a-wtenio\", F),  -- Ada.Wide_Text_IO.Enumeration_IO\n+    (\"a-wtfiio\", F),  -- Ada.Wide_Text_IO.Fixed_IO\n+    (\"a-wtflio\", F),  -- Ada.Wide_Text_IO.Float_IO\n+    (\"a-wtinio\", F),  -- Ada.Wide_Text_IO.Integer_IO\n+    (\"a-wtmoio\", F),  -- Ada.Wide_Text_IO.Modular_IO\n \n    ------------------------\n    -- GNAT Library Units --\n    ------------------------\n \n-     \"g-altive\",    -- GNAT.Altivec\n-     \"g-altcon\",    -- GNAT.Altivec.Conversions\n-     \"g-alveop\",    -- GNAT.Altivec.Vector_Operations\n-     \"g-alvety\",    -- GNAT.Altivec.Vector_Types\n-     \"g-alvevi\",    -- GNAT.Altivec.Vector_Views\n-     \"g-arrspl\",    -- GNAT.Array_Split\n-     \"g-awk   \",    -- GNAT.AWK\n-     \"g-boubuf\",    -- GNAT.Bounded_Buffers\n-     \"g-boumai\",    -- GNAT.Bounded_Mailboxes\n-     \"g-bubsor\",    -- GNAT.Bubble_Sort\n-     \"g-busora\",    -- GNAT.Bubble_Sort_A\n-     \"g-busorg\",    -- GNAT.Bubble_Sort_G\n-     \"g-byorma\",    -- GNAT.Byte_Order_Mark\n-     \"g-bytswa\",    -- GNAT.Byte_Swapping\n-     \"g-calend\",    -- GNAT.Calendar\n-     \"g-catiio\",    -- GNAT.Calendar.Time_IO\n-     \"g-casuti\",    -- GNAT.Case_Util\n-     \"g-cgi   \",    -- GNAT.CGI\n-     \"g-cgicoo\",    -- GNAT.CGI.Cookie\n-     \"g-cgideb\",    -- GNAT.CGI.Debug\n-     \"g-comlin\",    -- GNAT.Command_Line\n-     \"g-comver\",    -- GNAT.Compiler_Version\n-     \"g-crc32 \",    -- GNAT.CRC32\n-     \"g-ctrl_c\",    -- GNAT.Ctrl_C\n-     \"g-curexc\",    -- GNAT.Current_Exception\n-     \"g-debpoo\",    -- GNAT.Debug_Pools\n-     \"g-debuti\",    -- GNAT.Debug_Utilities\n-     \"g-decstr\",    -- GNAT.Decode_String\n-     \"g-deutst\",    -- GNAT.Decode_UTF8_String\n-     \"g-dirope\",    -- GNAT.Directory_Operations\n-     \"g-diopit\",    -- GNAT.Directory_Operations.Iteration\n-     \"g-dynhta\",    -- GNAT.Dynamic_HTables\n-     \"g-dyntab\",    -- GNAT.Dynamic_Tables\n-     \"g-encstr\",    -- GNAT.Encode_String\n-     \"g-enutst\",    -- GNAT.Encode_UTF8_String\n-     \"g-excact\",    -- GNAT.Exception_Actions\n-     \"g-except\",    -- GNAT.Exceptions\n-     \"g-exctra\",    -- GNAT.Exception_Traces\n-     \"g-expect\",    -- GNAT.Expect\n-     \"g-flocon\",    -- GNAT.Float_Control\n-     \"g-heasor\",    -- GNAT.Heap_Sort\n-     \"g-hesora\",    -- GNAT.Heap_Sort_A\n-     \"g-hesorg\",    -- GNAT.Heap_Sort_G\n-     \"g-htable\",    -- GNAT.Htable\n-     \"g-io    \",    -- GNAT.IO\n-     \"g-io_aux\",    -- GNAT.IO_Aux\n-     \"g-locfil\",    -- GNAT.Lock_Files\n-     \"g-mbdira\",    -- GNAT.MBBS_Discrete_Random\n-     \"g-mbflra\",    -- GNAT.MBBS_Float_Random\n-     \"g-md5   \",    -- GNAT.MD5\n-     \"g-memdum\",    -- GNAT.Memory_Dump\n-     \"g-moreex\",    -- GNAT.Most_Recent_Exception\n-     \"g-os_lib\",    -- GNAT.Os_Lib\n-     \"g-pehage\",    -- GNAT.Perfect_Hash_Generators\n-     \"g-rannum\",    -- GNAT.Random_Numbers\n-     \"g-regexp\",    -- GNAT.Regexp\n-     \"g-regist\",    -- GNAT.Registry\n-     \"g-regpat\",    -- GNAT.Regpat\n-     \"g-semaph\",    -- GNAT.Semaphores\n-     \"g-sercom\",    -- GNAT.Serial_Communications\n-     \"g-sestin\",    -- GNAT.Secondary_Stack_Info\n-     \"g-sha1  \",    -- GNAT.SHA1\n-     \"g-sha224\",    -- GNAT.SHA224\n-     \"g-sha256\",    -- GNAT.SHA256\n-     \"g-sha384\",    -- GNAT.SHA384\n-     \"g-sha512\",    -- GNAT.SHA512\n-     \"g-signal\",    -- GNAT.Signals\n-     \"g-socket\",    -- GNAT.Sockets\n-     \"g-souinf\",    -- GNAT.Source_Info\n-     \"g-speche\",    -- GNAT.Spell_Checker\n-     \"g-spchge\",    -- GNAT.Spell_Checker_Generic\n-     \"g-spitbo\",    -- GNAT.Spitbol\n-     \"g-spipat\",    -- GNAT.Spitbol.Patterns\n-     \"g-sptabo\",    -- GNAT.Spitbol.Table_Boolean\n-     \"g-sptain\",    -- GNAT.Spitbol.Table_Integer\n-     \"g-sptavs\",    -- GNAT.Spitbol.Table_Vstring\n-     \"g-string\",    -- GNAT.Strings\n-     \"g-strspl\",    -- GNAT.String_Split\n-     \"g-sse   \",    -- GNAT.SSE\n-     \"g-ssvety\",    -- GNAT.SSE.Vector_Types\n-     \"g-table \",    -- GNAT.Table\n-     \"g-tasloc\",    -- GNAT.Task_Lock\n-     \"g-tastus\",    -- GNAT.Task_Stack_Usage\n-     \"g-thread\",    -- GNAT.Threads\n-     \"g-timsta\",    -- GNAT.Time_Stamp\n-     \"g-traceb\",    -- GNAT.Traceback\n-     \"g-trasym\",    -- GNAT.Traceback.Symbolic\n-     \"g-utf_32\",    -- GNAT.UTF_32\n-     \"g-u3spch\",    -- GNAT.UTF_32_Spelling_Checker\n-     \"g-wispch\",    -- GNAT.Wide_Spelling_Checker\n-     \"g-wistsp\",    -- GNAT.Wide_String_Split\n+    (\"g-altive\", F),  -- GNAT.Altivec\n+    (\"g-altcon\", F),  -- GNAT.Altivec.Conversions\n+    (\"g-alveop\", F),  -- GNAT.Altivec.Vector_Operations\n+    (\"g-alvety\", F),  -- GNAT.Altivec.Vector_Types\n+    (\"g-alvevi\", F),  -- GNAT.Altivec.Vector_Views\n+    (\"g-arrspl\", F),  -- GNAT.Array_Split\n+    (\"g-awk   \", F),  -- GNAT.AWK\n+    (\"g-boubuf\", F),  -- GNAT.Bounded_Buffers\n+    (\"g-boumai\", F),  -- GNAT.Bounded_Mailboxes\n+    (\"g-bubsor\", F),  -- GNAT.Bubble_Sort\n+    (\"g-busora\", F),  -- GNAT.Bubble_Sort_A\n+    (\"g-busorg\", F),  -- GNAT.Bubble_Sort_G\n+    (\"g-byorma\", F),  -- GNAT.Byte_Order_Mark\n+    (\"g-bytswa\", F),  -- GNAT.Byte_Swapping\n+    (\"g-calend\", F),  -- GNAT.Calendar\n+    (\"g-catiio\", F),  -- GNAT.Calendar.Time_IO\n+    (\"g-casuti\", F),  -- GNAT.Case_Util\n+    (\"g-cgi   \", F),  -- GNAT.CGI\n+    (\"g-cgicoo\", F),  -- GNAT.CGI.Cookie\n+    (\"g-cgideb\", F),  -- GNAT.CGI.Debug\n+    (\"g-comlin\", F),  -- GNAT.Command_Line\n+    (\"g-comver\", F),  -- GNAT.Compiler_Version\n+    (\"g-crc32 \", F),  -- GNAT.CRC32\n+    (\"g-ctrl_c\", F),  -- GNAT.Ctrl_C\n+    (\"g-curexc\", F),  -- GNAT.Current_Exception\n+    (\"g-debpoo\", F),  -- GNAT.Debug_Pools\n+    (\"g-debuti\", F),  -- GNAT.Debug_Utilities\n+    (\"g-decstr\", F),  -- GNAT.Decode_String\n+    (\"g-deutst\", F),  -- GNAT.Decode_UTF8_String\n+    (\"g-dirope\", F),  -- GNAT.Directory_Operations\n+    (\"g-diopit\", F),  -- GNAT.Directory_Operations.Iteration\n+    (\"g-dynhta\", F),  -- GNAT.Dynamic_HTables\n+    (\"g-dyntab\", F),  -- GNAT.Dynamic_Tables\n+    (\"g-encstr\", F),  -- GNAT.Encode_String\n+    (\"g-enutst\", F),  -- GNAT.Encode_UTF8_String\n+    (\"g-excact\", F),  -- GNAT.Exception_Actions\n+    (\"g-except\", F),  -- GNAT.Exceptions\n+    (\"g-exctra\", F),  -- GNAT.Exception_Traces\n+    (\"g-expect\", F),  -- GNAT.Expect\n+    (\"g-flocon\", F),  -- GNAT.Float_Control\n+    (\"g-heasor\", F),  -- GNAT.Heap_Sort\n+    (\"g-hesora\", F),  -- GNAT.Heap_Sort_A\n+    (\"g-hesorg\", F),  -- GNAT.Heap_Sort_G\n+    (\"g-htable\", F),  -- GNAT.Htable\n+    (\"g-io    \", F),  -- GNAT.IO\n+    (\"g-io_aux\", F),  -- GNAT.IO_Aux\n+    (\"g-locfil\", F),  -- GNAT.Lock_Files\n+    (\"g-mbdira\", F),  -- GNAT.MBBS_Discrete_Random\n+    (\"g-mbflra\", F),  -- GNAT.MBBS_Float_Random\n+    (\"g-md5   \", F),  -- GNAT.MD5\n+    (\"g-memdum\", F),  -- GNAT.Memory_Dump\n+    (\"g-moreex\", F),  -- GNAT.Most_Recent_Exception\n+    (\"g-os_lib\", F),  -- GNAT.Os_Lib\n+    (\"g-pehage\", F),  -- GNAT.Perfect_Hash_Generators\n+    (\"g-rannum\", F),  -- GNAT.Random_Numbers\n+    (\"g-regexp\", F),  -- GNAT.Regexp\n+    (\"g-regist\", F),  -- GNAT.Registry\n+    (\"g-regpat\", F),  -- GNAT.Regpat\n+    (\"g-semaph\", F),  -- GNAT.Semaphores\n+    (\"g-sercom\", F),  -- GNAT.Serial_Communications\n+    (\"g-sestin\", F),  -- GNAT.Secondary_Stack_Info\n+    (\"g-sha1  \", F),  -- GNAT.SHA1\n+    (\"g-sha224\", F),  -- GNAT.SHA224\n+    (\"g-sha256\", F),  -- GNAT.SHA256\n+    (\"g-sha384\", F),  -- GNAT.SHA384\n+    (\"g-sha512\", F),  -- GNAT.SHA512\n+    (\"g-signal\", F),  -- GNAT.Signals\n+    (\"g-socket\", F),  -- GNAT.Sockets\n+    (\"g-souinf\", F),  -- GNAT.Source_Info\n+    (\"g-speche\", F),  -- GNAT.Spell_Checker\n+    (\"g-spchge\", F),  -- GNAT.Spell_Checker_Generic\n+    (\"g-spitbo\", F),  -- GNAT.Spitbol\n+    (\"g-spipat\", F),  -- GNAT.Spitbol.Patterns\n+    (\"g-sptabo\", F),  -- GNAT.Spitbol.Table_Boolean\n+    (\"g-sptain\", F),  -- GNAT.Spitbol.Table_Integer\n+    (\"g-sptavs\", F),  -- GNAT.Spitbol.Table_Vstring\n+    (\"g-string\", F),  -- GNAT.Strings\n+    (\"g-strspl\", F),  -- GNAT.String_Split\n+    (\"g-sse   \", F),  -- GNAT.SSE\n+    (\"g-ssvety\", F),  -- GNAT.SSE.Vector_Types\n+    (\"g-table \", F),  -- GNAT.Table\n+    (\"g-tasloc\", F),  -- GNAT.Task_Lock\n+    (\"g-tastus\", F),  -- GNAT.Task_Stack_Usage\n+    (\"g-thread\", F),  -- GNAT.Threads\n+    (\"g-timsta\", F),  -- GNAT.Time_Stamp\n+    (\"g-traceb\", F),  -- GNAT.Traceback\n+    (\"g-trasym\", F),  -- GNAT.Traceback.Symbolic\n+    (\"g-utf_32\", F),  -- GNAT.UTF_32\n+    (\"g-u3spch\", F),  -- GNAT.UTF_32_Spelling_Checker\n+    (\"g-wispch\", F),  -- GNAT.Wide_Spelling_Checker\n+    (\"g-wistsp\", F),  -- GNAT.Wide_String_Split\n \n    -----------------------------------------------------\n    -- Interface Hierarchy Units from Reference Manual --\n    -----------------------------------------------------\n \n-     \"i-c     \",    -- Interfaces.C\n-     \"i-cobol \",    -- Interfaces.Cobol\n-     \"i-cpoint\",    -- Interfaces.C.Pointers\n-     \"i-cstrin\",    -- Interfaces.C.Strings\n-     \"i-fortra\",    -- Interfaces.Fortran\n+    (\"i-c     \", T),  -- Interfaces.C\n+    (\"i-cobol \", T),  -- Interfaces.Cobol\n+    (\"i-cpoint\", T),  -- Interfaces.C.Pointers\n+    (\"i-cstrin\", T),  -- Interfaces.C.Strings\n+    (\"i-fortra\", T),  -- Interfaces.Fortran\n \n    ------------------------------------------\n    -- GNAT Defined Additions to Interfaces --\n    ------------------------------------------\n \n-     \"i-cexten\",    -- Interfaces.C.Extensions\n-     \"i-cil   \",    -- Interfaces.CIL\n-     \"i-cilobj\",    -- Interfaces.CIL.Object\n-     \"i-cpp   \",    -- Interfaces.CPP\n-     \"i-cstrea\",    -- Interfaces.C.Streams\n-     \"i-java  \",    -- Interfaces.Java\n-     \"i-javjni\",    -- Interfaces.Java.JNI\n-     \"i-pacdec\",    -- Interfaces.Packed_Decimal\n-     \"i-vxwoio\",    -- Interfaces.VxWorks.IO\n-     \"i-vxwork\",    -- Interfaces.VxWorks\n+    (\"i-cexten\", F),  -- Interfaces.C.Extensions\n+    (\"i-cil   \", F),  -- Interfaces.CIL\n+    (\"i-cilobj\", F),  -- Interfaces.CIL.Object\n+    (\"i-cpp   \", F),  -- Interfaces.CPP\n+    (\"i-cstrea\", F),  -- Interfaces.C.Streams\n+    (\"i-java  \", F),  -- Interfaces.Java\n+    (\"i-javjni\", F),  -- Interfaces.Java.JNI\n+    (\"i-pacdec\", F),  -- Interfaces.Packed_Decimal\n+    (\"i-vxwoio\", F),  -- Interfaces.VxWorks.IO\n+    (\"i-vxwork\", F),  -- Interfaces.VxWorks\n \n    --------------------------------------------------\n    -- System Hierarchy Units from Reference Manual --\n    --------------------------------------------------\n \n-     \"s-atacco\",    -- System.Address_To_Access_Conversions\n-     \"s-maccod\",    -- System.Machine_Code\n-     \"s-rpc   \",    -- System.Rpc\n-     \"s-stoele\",    -- System.Storage_Elements\n-     \"s-stopoo\",    -- System.Storage_Pools\n+    (\"s-atacco\", T),  -- System.Address_To_Access_Conversions\n+    (\"s-maccod\", T),  -- System.Machine_Code\n+    (\"s-rpc   \", T),  -- System.Rpc\n+    (\"s-stoele\", T),  -- System.Storage_Elements\n+    (\"s-stopoo\", T),  -- System.Storage_Pools\n \n    --------------------------------------\n    -- GNAT Defined Additions to System --\n    --------------------------------------\n \n-     \"s-addima\",    -- System.Address_Image\n-     \"s-assert\",    -- System.Assertions\n-     \"s-memory\",    -- System.Memory\n-     \"s-parint\",    -- System.Partition_Interface\n-     \"s-pooglo\",    -- System.Pool_Global\n-     \"s-pooloc\",    -- System.Pool_Local\n-     \"s-restri\",    -- System.Restrictions\n-     \"s-rident\",    -- System.Rident\n-     \"s-ststop\",    -- System.Strings.Stream_Ops\n-     \"s-tasinf\",    -- System.Task_Info\n-     \"s-wchcnv\",    -- System.Wch_Cnv\n-     \"s-wchcon\");   -- System.Wch_Con\n+    (\"s-addima\", F),  -- System.Address_Image\n+    (\"s-assert\", F),  -- System.Assertions\n+    (\"s-memory\", F),  -- System.Memory\n+    (\"s-parint\", F),  -- System.Partition_Interface\n+    (\"s-pooglo\", F),  -- System.Pool_Global\n+    (\"s-pooloc\", F),  -- System.Pool_Local\n+    (\"s-restri\", F),  -- System.Restrictions\n+    (\"s-rident\", F),  -- System.Rident\n+    (\"s-ststop\", F),  -- System.Strings.Stream_Ops\n+    (\"s-tasinf\", F),  -- System.Task_Info\n+    (\"s-wchcnv\", F),  -- System.Wch_Cnv\n+    (\"s-wchcon\", F)); -- System.Wch_Con\n \n    --------------------\n    -- Ada 2005 Units --\n@@ -369,114 +387,117 @@ package body Impunit is\n    -- Ada Hierarchy Units from Ada 2005 Reference Manual --\n    --------------------------------------------------------\n \n-     \"a-assert\",    -- Ada.Assertions\n-     \"a-calari\",    -- Ada.Calendar.Arithmetic\n-     \"a-calfor\",    -- Ada.Calendar.Formatting\n-     \"a-catizo\",    -- Ada.Calendar.Time_Zones\n-     \"a-cdlili\",    -- Ada.Containers.Doubly_Linked_Lists\n-     \"a-cgarso\",    -- Ada.Containers.Generic_Array_Sort\n-     \"a-cgcaso\",    -- Ada.Containers.Generic_Constrained_Array_Sort\n-     \"a-chacon\",    -- Ada.Characters.Conversions\n-     \"a-cidlli\",    -- Ada.Containers.Indefinite_Doubly_Linked_Lists\n-     \"a-cihama\",    -- Ada.Containers.Indefinite_Hashed_Maps\n-     \"a-cihase\",    -- Ada.Containers.Indefinite_Hashed_Sets\n-     \"a-ciorma\",    -- Ada.Containers.Indefinite_Ordered_Maps\n-     \"a-ciorse\",    -- Ada.Containers.Indefinite_Ordered_Sets\n-     \"a-cohama\",    -- Ada.Containers.Hashed_Maps\n-     \"a-cohase\",    -- Ada.Containers.Hashed_Sets\n-     \"a-coinve\",    -- Ada.Containers.Indefinite_Vectors\n-     \"a-contai\",    -- Ada.Containers\n-     \"a-convec\",    -- Ada.Containers.Vectors\n-     \"a-coorma\",    -- Ada.Containers.Ordered_Maps\n-     \"a-coorse\",    -- Ada.Containers.Ordered_Sets\n-     \"a-coteio\",    -- Ada.Complex_Text_IO\n-     \"a-direct\",    -- Ada.Directories\n-     \"a-diroro\",    -- Ada.Dispatching.Round_Robin\n-     \"a-disedf\",    -- Ada.Dispatching.EDF\n-     \"a-dispat\",    -- Ada.Dispatching\n-     \"a-envvar\",    -- Ada.Environment_Variables\n-     \"a-etgrbu\",    -- Ada.Execution_Time.Group_Budgets\n-     \"a-exetim\",    -- Ada.Execution_Time\n-     \"a-extiti\",    -- Ada.Execution_Time.Timers\n-     \"a-izteio\",    -- Ada.Integer_Wide_Wide_Text_IO\n-     \"a-rttiev\",    -- Ada.Real_Time.Timing_Events\n-     \"a-ngcoar\",    -- Ada.Numerics.Generic_Complex_Arrays\n-     \"a-ngrear\",    -- Ada.Numerics.Generic_Real_Arrays\n-     \"a-nucoar\",    -- Ada.Numerics.Complex_Arrays\n-     \"a-nurear\",    -- Ada.Numerics.Real_Arrays\n-     \"a-stboha\",    -- Ada.Strings.Bounded.Hash\n-     \"a-stfiha\",    -- Ada.Strings.Fixed.Hash\n-     \"a-strhas\",    -- Ada.Strings.Hash\n-     \"a-stunha\",    -- Ada.Strings.Unbounded.Hash\n-     \"a-stwiha\",    -- Ada.Strings.Wide_Hash\n-     \"a-stzbou\",    -- Ada.Strings.Wide_Wide_Bounded\n-     \"a-stzfix\",    -- Ada.Strings.Wide_Wide_Fixed\n-     \"a-stzhas\",    -- Ada.Strings.Wide_Wide_Hash\n-     \"a-stzmap\",    -- Ada.Strings.Wide_Wide_Maps\n-     \"a-stzunb\",    -- Ada.Strings.Wide_Wide_Unbounded\n-     \"a-swbwha\",    -- Ada.Strings.Wide_Bounded.Wide_Hash\n-     \"a-swfwha\",    -- Ada.Strings.Wide_Fixed.Wide_Hash\n-     \"a-swuwha\",    -- Ada.Strings.Wide_Unbounded.Wide_Hash\n-     \"a-szbzha\",    -- Ada.Strings.Wide_Wide_Bounded.Wide_Wide_Hash\n-     \"a-szfzha\",    -- Ada.Strings.Wide_Wide_Fixed.Wide_Wide_Hash\n-     \"a-szmzco\",    -- Ada.Strings.Wide_Wide_Maps.Wide_Wide_Constants\n-     \"a-szuzha\",    -- Ada.Strings.Wide_Wide_Unbounded.Wide_Wide_Hash\n-     \"a-taster\",    -- Ada.Task_Termination\n-     \"a-tgdico\",    -- Ada.Tags.Generic_Dispatching_Constructor\n-     \"a-tiboio\",    -- Ada.Text_IO.Bounded_IO\n-     \"a-tiunio\",    -- Ada.Text_IO.Unbounded_IO\n-     \"a-wichun\",    -- Ada.Wide_Characters.Unicode\n-     \"a-wwboio\",    -- Ada.Wide_Text_IO.Wide_Bounded_IO\n-     \"a-wwunio\",    -- Ada.Wide_Text_IO.Wide_Unbounded_IO\n-     \"a-zchara\",    -- Ada.Wide_Wide_Characters\n-     \"a-zchhan\",    -- Ada.Wide_Wide_Characters.Handling\n-     \"a-ztcoio\",    -- Ada.Wide_Wide_Text_IO.Complex_IO\n-     \"a-ztedit\",    -- Ada.Wide_Wide_Text_IO.Editing\n-     \"a-zttest\",    -- Ada.Wide_Wide_Text_IO.Text_Streams\n-     \"a-ztexio\",    -- Ada.Wide_Wide_Text_IO\n-     \"a-zzboio\",    -- Ada.Wide_Wide_Text_IO.Wide_Wide_Bounded_IO\n-     \"a-zzunio\",    -- Ada.Wide_Wide_Text_IO.Wide_Wide_Unbounded_IO\n+    (\"a-assert\", T),  -- Ada.Assertions\n+    (\"a-calari\", T),  -- Ada.Calendar.Arithmetic\n+    (\"a-calfor\", T),  -- Ada.Calendar.Formatting\n+    (\"a-catizo\", T),  -- Ada.Calendar.Time_Zones\n+    (\"a-cdlili\", T),  -- Ada.Containers.Doubly_Linked_Lists\n+    (\"a-cgarso\", T),  -- Ada.Containers.Generic_Array_Sort\n+    (\"a-cgcaso\", T),  -- Ada.Containers.Generic_Constrained_Array_Sort\n+    (\"a-chacon\", T),  -- Ada.Characters.Conversions\n+    (\"a-cidlli\", T),  -- Ada.Containers.Indefinite_Doubly_Linked_Lists\n+    (\"a-cihama\", T),  -- Ada.Containers.Indefinite_Hashed_Maps\n+    (\"a-cihase\", T),  -- Ada.Containers.Indefinite_Hashed_Sets\n+    (\"a-ciorma\", T),  -- Ada.Containers.Indefinite_Ordered_Maps\n+    (\"a-ciorse\", T),  -- Ada.Containers.Indefinite_Ordered_Sets\n+    (\"a-cohama\", T),  -- Ada.Containers.Hashed_Maps\n+    (\"a-cohase\", T),  -- Ada.Containers.Hashed_Sets\n+    (\"a-coinve\", T),  -- Ada.Containers.Indefinite_Vectors\n+    (\"a-contai\", T),  -- Ada.Containers\n+    (\"a-convec\", T),  -- Ada.Containers.Vectors\n+    (\"a-coorma\", T),  -- Ada.Containers.Ordered_Maps\n+    (\"a-coorse\", T),  -- Ada.Containers.Ordered_Sets\n+    (\"a-coteio\", T),  -- Ada.Complex_Text_IO\n+    (\"a-direct\", T),  -- Ada.Directories\n+    (\"a-diroro\", T),  -- Ada.Dispatching.Round_Robin\n+    (\"a-disedf\", T),  -- Ada.Dispatching.EDF\n+    (\"a-dispat\", T),  -- Ada.Dispatching\n+    (\"a-envvar\", T),  -- Ada.Environment_Variables\n+    (\"a-etgrbu\", T),  -- Ada.Execution_Time.Group_Budgets\n+    (\"a-exetim\", T),  -- Ada.Execution_Time\n+    (\"a-extiti\", T),  -- Ada.Execution_Time.Timers\n+    (\"a-izteio\", T),  -- Ada.Integer_Wide_Wide_Text_IO\n+    (\"a-rttiev\", T),  -- Ada.Real_Time.Timing_Events\n+    (\"a-ngcoar\", T),  -- Ada.Numerics.Generic_Complex_Arrays\n+    (\"a-ngrear\", T),  -- Ada.Numerics.Generic_Real_Arrays\n+    (\"a-nucoar\", T),  -- Ada.Numerics.Complex_Arrays\n+    (\"a-nurear\", T),  -- Ada.Numerics.Real_Arrays\n+    (\"a-stboha\", T),  -- Ada.Strings.Bounded.Hash\n+    (\"a-stfiha\", T),  -- Ada.Strings.Fixed.Hash\n+    (\"a-strhas\", T),  -- Ada.Strings.Hash\n+    (\"a-stunha\", T),  -- Ada.Strings.Unbounded.Hash\n+    (\"a-stwiha\", T),  -- Ada.Strings.Wide_Hash\n+    (\"a-stzbou\", T),  -- Ada.Strings.Wide_Wide_Bounded\n+    (\"a-stzfix\", T),  -- Ada.Strings.Wide_Wide_Fixed\n+    (\"a-stzhas\", T),  -- Ada.Strings.Wide_Wide_Hash\n+    (\"a-stzmap\", T),  -- Ada.Strings.Wide_Wide_Maps\n+    (\"a-stzunb\", T),  -- Ada.Strings.Wide_Wide_Unbounded\n+    (\"a-swbwha\", T),  -- Ada.Strings.Wide_Bounded.Wide_Hash\n+    (\"a-swfwha\", T),  -- Ada.Strings.Wide_Fixed.Wide_Hash\n+    (\"a-swuwha\", T),  -- Ada.Strings.Wide_Unbounded.Wide_Hash\n+    (\"a-szbzha\", T),  -- Ada.Strings.Wide_Wide_Bounded.Wide_Wide_Hash\n+    (\"a-szfzha\", T),  -- Ada.Strings.Wide_Wide_Fixed.Wide_Wide_Hash\n+    (\"a-szmzco\", T),  -- Ada.Strings.Wide_Wide_Maps.Wide_Wide_Constants\n+    (\"a-szuzha\", T),  -- Ada.Strings.Wide_Wide_Unbounded.Wide_Wide_Hash\n+    (\"a-taster\", T),  -- Ada.Task_Termination\n+    (\"a-tgdico\", T),  -- Ada.Tags.Generic_Dispatching_Constructor\n+    (\"a-tiboio\", T),  -- Ada.Text_IO.Bounded_IO\n+    (\"a-tiunio\", T),  -- Ada.Text_IO.Unbounded_IO\n+    (\"a-wichun\", T),  -- Ada.Wide_Characters.Unicode\n+    (\"a-wwboio\", T),  -- Ada.Wide_Text_IO.Wide_Bounded_IO\n+    (\"a-wwunio\", T),  -- Ada.Wide_Text_IO.Wide_Unbounded_IO\n+    (\"a-zchara\", T),  -- Ada.Wide_Wide_Characters\n+    (\"a-zchhan\", T),  -- Ada.Wide_Wide_Characters.Handling\n+    (\"a-ztcoio\", T),  -- Ada.Wide_Wide_Text_IO.Complex_IO\n+    (\"a-ztedit\", T),  -- Ada.Wide_Wide_Text_IO.Editing\n+    (\"a-zttest\", T),  -- Ada.Wide_Wide_Text_IO.Text_Streams\n+    (\"a-ztexio\", T),  -- Ada.Wide_Wide_Text_IO\n+    (\"a-zzboio\", T),  -- Ada.Wide_Wide_Text_IO.Wide_Wide_Bounded_IO\n+    (\"a-zzunio\", T),  -- Ada.Wide_Wide_Text_IO.Wide_Wide_Unbounded_IO\n \n    ------------------------------------------------------\n    -- RM Required Additions to Ada 2005 for GNAT Types --\n    ------------------------------------------------------\n \n-     \"a-lcteio\",    -- Ada.Long_Complex_Text_IO\n-     \"a-lfztio\",    -- Ada.Long_Float_Wide_Wide_Text_IO\n-     \"a-liztio\",    -- Ada.Long_Integer_Wide_Wide_Text_IO\n-     \"a-llctio\",    -- Ada.Long_Long_Complex_Text_IO\n-     \"a-llfzti\",    -- Ada.Long_Long_Float_Wide_Wide_Text_IO\n-     \"a-llizti\",    -- Ada.Long_Long_Integer_Wide_Wide_Text_IO\n-     \"a-nlcoar\",    -- Ada.Numerics.Long_Complex_Arrays\n-     \"a-nllcar\",    -- Ada.Numerics.Long_Long_Complex_Arrays\n-     \"a-nllrar\",    -- Ada.Numerics.Long_Long_Real_Arrays\n-     \"a-nlrear\",    -- Ada.Numerics.Long_Real_Arrays\n-     \"a-scteio\",    -- Ada.Short_Complex_Text_IO\n-     \"a-sfztio\",    -- Ada.Short_Float_Wide_Wide_Text_IO\n-     \"a-siztio\",    -- Ada.Short_Integer_Wide_Wide_Text_IO\n-     \"a-ssizti\",    -- Ada.Short_Short_Integer_Wide_Wide_Text_IO\n-     \"a-ztcstr\",    -- Ada.Wide_Wide_Text_IO.C_Streams\n+   --  Note: Long versions are considered RM defined, but not the Long Long,\n+   --  Short, or Short_Short versions.\n+\n+    (\"a-lcteio\", T),  -- Ada.Long_Complex_Text_IO\n+    (\"a-lfztio\", T),  -- Ada.Long_Float_Wide_Wide_Text_IO\n+    (\"a-liztio\", T),  -- Ada.Long_Integer_Wide_Wide_Text_IO\n+    (\"a-llctio\", T),  -- Ada.Long_Long_Complex_Text_IO\n+    (\"a-llfzti\", T),  -- Ada.Long_Long_Float_Wide_Wide_Text_IO\n+    (\"a-llizti\", T),  -- Ada.Long_Long_Integer_Wide_Wide_Text_IO\n+    (\"a-nlcoar\", T),  -- Ada.Numerics.Long_Complex_Arrays\n+    (\"a-nllcar\", T),  -- Ada.Numerics.Long_Long_Complex_Arrays\n+    (\"a-nllrar\", T),  -- Ada.Numerics.Long_Long_Real_Arrays\n+    (\"a-nlrear\", T),  -- Ada.Numerics.Long_Real_Arrays\n+    (\"a-scteio\", F),  -- Ada.Short_Complex_Text_IO\n+    (\"a-sfztio\", F),  -- Ada.Short_Float_Wide_Wide_Text_IO\n+    (\"a-siztio\", F),  -- Ada.Short_Integer_Wide_Wide_Text_IO\n+    (\"a-ssizti\", F),  -- Ada.Short_Short_Integer_Wide_Wide_Text_IO\n \n    ----------------------------------------\n    -- GNAT Defined Additions to Ada 2005 --\n    ----------------------------------------\n \n-     \"a-cgaaso\",    -- Ada.Containers.Generic_Anonymous_Array_Sort\n-     \"a-chzla1\",    -- Ada.Characters.Wide_Wide_Latin_1\n-     \"a-chzla9\",    -- Ada.Characters.Wide_Wide_Latin_9\n-     \"a-ciormu\",    -- Ada.Containers.Indefinite_Ordered_Multisets\n-     \"a-coormu\",    -- Ada.Containers.Ordered_Multisets\n-     \"a-crdlli\",    -- Ada.Containers.Restricted_Doubly_Linked_Lists\n-     \"a-secain\",    -- Ada.Strings.Equal_Case_Insensitive\n-     \"a-shcain\",    -- Ada.Strings.Hash_Case_Insensitive\n-     \"a-slcain\",    -- Ada.Strings.Less_Case_Insensitive\n-     \"a-szuzti\",    -- Ada.Strings.Wide_Wide_Unbounded.Wide_Wide_Text_IO\n-     \"a-zchuni\",    -- Ada.Wide_Wide_Characters.Unicode\n+    (\"a-cgaaso\", F),  -- Ada.Containers.Generic_Anonymous_Array_Sort\n+    (\"a-chzla1\", F),  -- Ada.Characters.Wide_Wide_Latin_1\n+    (\"a-chzla9\", F),  -- Ada.Characters.Wide_Wide_Latin_9\n+    (\"a-ciormu\", F),  -- Ada.Containers.Indefinite_Ordered_Multisets\n+    (\"a-coormu\", F),  -- Ada.Containers.Ordered_Multisets\n+    (\"a-crdlli\", F),  -- Ada.Containers.Restricted_Doubly_Linked_Lists\n+    (\"a-secain\", F),  -- Ada.Strings.Equal_Case_Insensitive\n+    (\"a-shcain\", F),  -- Ada.Strings.Hash_Case_Insensitive\n+    (\"a-slcain\", F),  -- Ada.Strings.Less_Case_Insensitive\n+    (\"a-szuzti\", F),  -- Ada.Strings.Wide_Wide_Unbounded.Wide_Wide_Text_IO\n+    (\"a-zchuni\", F),  -- Ada.Wide_Wide_Characters.Unicode\n+    (\"a-ztcstr\", F),  -- Ada.Wide_Wide_Text_IO.C_Streams\n \n       --  Note: strictly the following should be Ada 2012 units, but it seems\n       --  harmless (and useful) to make then available in Ada 2005 mode.\n \n-     \"a-suezst\",    -- Ada.Strings.UTF_Encoding.Wide_Wide_Strings\n+    (\"a-suezst\", T),  -- Ada.Strings.UTF_Encoding.Wide_Wide_Strings\n \n    ---------------------------\n    -- GNAT Special IO Units --\n@@ -485,19 +506,19 @@ package body Impunit is\n    --  See Ada 95 section for further information. These packages are for the\n    --  implementation of the Wide_Wide_Text_IO generic packages.\n \n-     \"a-ztdeio\",    -- Ada.Wide_Wide_Text_IO.Decimal_IO\n-     \"a-ztenio\",    -- Ada.Wide_Wide_Text_IO.Enumeration_IO\n-     \"a-ztfiio\",    -- Ada.Wide_Wide_Text_IO.Fixed_IO\n-     \"a-ztflio\",    -- Ada.Wide_Wide_Text_IO.Float_IO\n-     \"a-ztinio\",    -- Ada.Wide_Wide_Text_IO.Integer_IO\n-     \"a-ztmoio\",    -- Ada.Wide_Wide_Text_IO.Modular_IO\n+    (\"a-ztdeio\", F),  -- Ada.Wide_Wide_Text_IO.Decimal_IO\n+    (\"a-ztenio\", F),  -- Ada.Wide_Wide_Text_IO.Enumeration_IO\n+    (\"a-ztfiio\", F),  -- Ada.Wide_Wide_Text_IO.Fixed_IO\n+    (\"a-ztflio\", F),  -- Ada.Wide_Wide_Text_IO.Float_IO\n+    (\"a-ztinio\", F),  -- Ada.Wide_Wide_Text_IO.Integer_IO\n+    (\"a-ztmoio\", F),  -- Ada.Wide_Wide_Text_IO.Modular_IO\n \n    ------------------------\n    -- GNAT Library Units --\n    ------------------------\n \n-     \"g-zspche\",    -- GNAT.Wide_Wide_Spelling_Checker\n-     \"g-zstspl\");   -- GNAT.Wide_Wide_String_Split\n+    (\"g-zspche\", F),  -- GNAT.Wide_Wide_Spelling_Checker\n+    (\"g-zstspl\", F)); -- GNAT.Wide_Wide_String_Split\n \n    --------------------\n    -- Ada 2012 Units --\n@@ -506,39 +527,39 @@ package body Impunit is\n    --  The following units should be used only in Ada 2012 mode\n \n    Non_Imp_File_Names_12 : constant File_List := (\n-     \"s-multip\",    -- System.Multiprocessors\n-     \"s-mudido\",    -- System.Multiprocessors.Dispatching_Domains\n-     \"s-stposu\",    -- System.Storage_Pools.Subpools\n-     \"a-cobove\",    -- Ada.Containers.Bounded_Vectors\n-     \"a-cbdlli\",    -- Ada.Containers.Bounded_Doubly_Linked_Lists\n-     \"a-cborse\",    -- Ada.Containers.Bounded_Ordered_Sets\n-     \"a-cborma\",    -- Ada.Containers.Bounded_Ordered_Maps\n-     \"a-cbhase\",    -- Ada.Containers.Bounded_Hashed_Sets\n-     \"a-cbhama\",    -- Ada.Containers.Bounded_Hashed_Maps\n-     \"a-coinho\",    -- Ada.Containers.Indefinite_Holders\n-     \"a-comutr\",    -- Ada.Containers.Multiway_Trees\n-     \"a-cimutr\",    -- Ada.Containers.Indefinite_Multiway_Trees\n-     \"a-cbmutr\",    -- Ada.Containers.Bounded_Multiway_Trees\n-     \"a-csquin\",    -- Ada.Containers.Synchronized_Queue_Interfaces\n-     \"a-cusyqu\",    -- Ada.Containers.Unbounded_Synchronized_Queues\n-     \"a-cuprqu\",    -- Ada.Containers.Unbounded_Priority_Queues\n-     \"a-cbsyqu\",    -- Ada.Containers.Bounded_Synchronized_Queues\n-     \"a-cbprqu\",    -- Ada.Containers.Bounded_Priority_Queues\n-     \"a-extiin\",    -- Ada.Execution_Time.Interrupts\n-     \"a-iteint\",    -- Ada.Iterator_Interfaces\n-     \"a-synbar\",    -- Ada.Synchronous_Barriers\n-     \"a-undesu\",    -- Ada.Unchecked_Deallocate_Subpool\n+    (\"s-multip\", T),  -- System.Multiprocessors\n+    (\"s-mudido\", T),  -- System.Multiprocessors.Dispatching_Domains\n+    (\"s-stposu\", T),  -- System.Storage_Pools.Subpools\n+    (\"a-cobove\", T),  -- Ada.Containers.Bounded_Vectors\n+    (\"a-cbdlli\", T),  -- Ada.Containers.Bounded_Doubly_Linked_Lists\n+    (\"a-cborse\", T),  -- Ada.Containers.Bounded_Ordered_Sets\n+    (\"a-cborma\", T),  -- Ada.Containers.Bounded_Ordered_Maps\n+    (\"a-cbhase\", T),  -- Ada.Containers.Bounded_Hashed_Sets\n+    (\"a-cbhama\", T),  -- Ada.Containers.Bounded_Hashed_Maps\n+    (\"a-coinho\", T),  -- Ada.Containers.Indefinite_Holders\n+    (\"a-comutr\", T),  -- Ada.Containers.Multiway_Trees\n+    (\"a-cimutr\", T),  -- Ada.Containers.Indefinite_Multiway_Trees\n+    (\"a-cbmutr\", T),  -- Ada.Containers.Bounded_Multiway_Trees\n+    (\"a-csquin\", T),  -- Ada.Containers.Synchronized_Queue_Interfaces\n+    (\"a-cusyqu\", T),  -- Ada.Containers.Unbounded_Synchronized_Queues\n+    (\"a-cuprqu\", T),  -- Ada.Containers.Unbounded_Priority_Queues\n+    (\"a-cbsyqu\", T),  -- Ada.Containers.Bounded_Synchronized_Queues\n+    (\"a-cbprqu\", T),  -- Ada.Containers.Bounded_Priority_Queues\n+    (\"a-extiin\", T),  -- Ada.Execution_Time.Interrupts\n+    (\"a-iteint\", T),  -- Ada.Iterator_Interfaces\n+    (\"a-synbar\", T),  -- Ada.Synchronous_Barriers\n+    (\"a-undesu\", T),  -- Ada.Unchecked_Deallocate_Subpool\n \n    ----------------------------------------\n    -- GNAT Defined Additions to Ada 2012 --\n    ----------------------------------------\n \n-     \"a-cofove\",    -- Ada.Containers.Formal_Vectors\n-     \"a-cfdlli\",    -- Ada.Containers.Formal_Doubly_Linked_Lists\n-     \"a-cforse\",    -- Ada.Containers.Formal_Ordered_Sets\n-     \"a-cforma\",    -- Ada.Containers.Formal_Ordered_Maps\n-     \"a-cfhase\",    -- Ada.Containers.Formal_Hashed_Sets\n-     \"a-cfhama\");   -- Ada.Containers.Formal_Hashed_Maps\n+    (\"a-cofove\", F),  -- Ada.Containers.Formal_Vectors\n+    (\"a-cfdlli\", F),  -- Ada.Containers.Formal_Doubly_Linked_Lists\n+    (\"a-cforse\", F),  -- Ada.Containers.Formal_Ordered_Sets\n+    (\"a-cforma\", F),  -- Ada.Containers.Formal_Ordered_Maps\n+    (\"a-cfhase\", F),  -- Ada.Containers.Formal_Hashed_Sets\n+    (\"a-cfhama\", F)); -- Ada.Containers.Formal_Hashed_Maps\n \n    -----------------------\n    -- Alternative Units --\n@@ -589,17 +610,25 @@ package body Impunit is\n \n    begin\n       Error_Msg_Strlen := 0;\n+      Get_Name_String (Fname);\n \n-      --  If length of file name is greater than 12, not predefined.\n-      --  The value 12 here is an 8 char name with extension .ads.\n+      --  Ada/System/Interfaces are all Ada 95 units\n \n-      if Length_Of_Name (Fname) > 12 then\n-         return Not_Predefined_Unit;\n+      if (Name_Len =  7 and then Name_Buffer (1 ..  7) = \"ada.ads\")\n+           or else\n+         (Name_Len = 10 and then Name_Buffer (1 .. 10) = \"system.ads\")\n+           or else\n+         (Name_Len = 12 and then Name_Buffer (1 .. 12) = \"interfac.ads\")\n+      then\n+         return Ada_95_Unit;\n       end if;\n \n-      --  Otherwise test file name\n+      --  If length of file name is greater than 12, not predefined. The value\n+      --  12 here is an 8 char name with extension .ads.\n \n-      Get_Name_String (Fname);\n+      if Name_Len > 12 then\n+         return Not_Predefined_Unit;\n+      end if;\n \n       --  Not predefined if file name does not start with a- g- s- i-\n \n@@ -634,23 +663,23 @@ package body Impunit is\n       --  See if name is in 95 list\n \n       for J in Non_Imp_File_Names_95'Range loop\n-         if Name_Buffer (1 .. 8) = Non_Imp_File_Names_95 (J) then\n+         if Name_Buffer (1 .. 8) = Non_Imp_File_Names_95 (J).Fname then\n             return Ada_95_Unit;\n          end if;\n       end loop;\n \n       --  See if name is in 2005 list\n \n       for J in Non_Imp_File_Names_05'Range loop\n-         if Name_Buffer (1 .. 8) = Non_Imp_File_Names_05 (J) then\n+         if Name_Buffer (1 .. 8) = Non_Imp_File_Names_05 (J).Fname then\n             return Ada_2005_Unit;\n          end if;\n       end loop;\n \n       --  See if name is in 2012 list\n \n       for J in Non_Imp_File_Names_12'Range loop\n-         if Name_Buffer (1 .. 8) = Non_Imp_File_Names_12 (J) then\n+         if Name_Buffer (1 .. 8) = Non_Imp_File_Names_12 (J).Fname then\n             return Ada_2012_Unit;\n          end if;\n       end loop;\n@@ -726,9 +755,25 @@ package body Impunit is\n       Fnam := Get_File_Name (Unam, Subunit => False);\n       Get_Name_String (Fnam);\n \n+      Error_Msg_Strlen := 0;\n+\n+      --  Ada/System/Interfaces are all Ada 95 units\n+\n+      if (Name_Len =  7 and then Name_Buffer (1 ..  7) = \"ada.ads\")\n+           or else\n+         (Name_Len = 10 and then Name_Buffer (1 .. 10) = \"system.ads\")\n+           or else\n+         (Name_Len = 12 and then Name_Buffer (1 .. 12) = \"interfac.ads\")\n+      then\n+         return True;\n+      end if;\n+\n       --  Remove extension from file name\n \n-      if Name_Buffer (Name_Len - 3 .. Name_Len) = \".adb\" then\n+      if Name_Buffer (Name_Len - 3 .. Name_Len) = \".adb\"\n+           or else\n+         Name_Buffer (Name_Len - 3 .. Name_Len) = \".ads\"\n+      then\n          Name_Len := Name_Len - 4;\n       else\n          return False;\n@@ -750,19 +795,19 @@ package body Impunit is\n       --  If length is 8, search our tables\n \n       for J in Non_Imp_File_Names_95'Range loop\n-         if Name_Buffer (1 .. 8) = Non_Imp_File_Names_95 (J) then\n+         if Name_Buffer (1 .. 8) = Non_Imp_File_Names_95 (J).Fname then\n             return True;\n          end if;\n       end loop;\n \n       for J in Non_Imp_File_Names_05'Range loop\n-         if Name_Buffer (1 .. 8) = Non_Imp_File_Names_05 (J) then\n+         if Name_Buffer (1 .. 8) = Non_Imp_File_Names_05 (J).Fname then\n             return True;\n          end if;\n       end loop;\n \n       for J in Non_Imp_File_Names_12'Range loop\n-         if Name_Buffer (1 .. 8) = Non_Imp_File_Names_12 (J) then\n+         if Name_Buffer (1 .. 8) = Non_Imp_File_Names_12 (J).Fname then\n             return True;\n          end if;\n       end loop;\n@@ -781,4 +826,96 @@ package body Impunit is\n          return False;\n    end Is_Known_Unit;\n \n+   ------------------------\n+   -- Is_RM_Defined_Unit --\n+   ------------------------\n+\n+   function Is_RM_Defined_Unit (U : Unit_Number_Type) return Boolean is\n+      Fname : constant File_Name_Type := Unit_File_Name (U);\n+\n+   begin\n+      Error_Msg_Strlen := 0;\n+      Get_Name_String (Fname);\n+\n+      --  Ada/System/Interfaces are all RM-defined Ada 95 units\n+\n+      if (Name_Len =  7 and then Name_Buffer (1 ..  7) = \"ada.ads\")\n+           or else\n+         (Name_Len = 10 and then Name_Buffer (1 .. 10) = \"system.ads\")\n+           or else\n+         (Name_Len = 12 and then Name_Buffer (1 .. 12) = \"interfac.ads\")\n+      then\n+         return True;\n+      end if;\n+\n+      --  If length of file name is greater than 12, not RM-defined. The value\n+      --  12 here is an 8 char name with extension .ads.\n+\n+      if Name_Len > 12 then\n+         return False;\n+      end if;\n+\n+      --  Not RM-defined if length of name greater than 12 (12 is 8 characters\n+      --  plus 4 for \".ads\" appended at the end).\n+\n+      if Length_Of_Name (Fname) > 12 then\n+         return False;\n+      end if;\n+\n+      --  Not RM defined if file name does not start with a- s- i-\n+\n+      if Name_Len < 3\n+        or else Name_Buffer (2) /= '-'\n+        or else (Name_Buffer (1) /= 'a'\n+                   and then\n+                 Name_Buffer (1) /= 'i'\n+                   and then\n+                 Name_Buffer (1) /= 's')\n+      then\n+         return False;\n+      end if;\n+\n+      --  Not RM defined if file name does not end in .ads. This can happen\n+      --  when non-standard file names are being used.\n+\n+      if Name_Buffer (Name_Len - 3 .. Name_Len) /= \".ads\" then\n+         return False;\n+      end if;\n+\n+      --  Otherwise normalize file name to 8 characters\n+\n+      Name_Len := Name_Len - 4;\n+      while Name_Len < 8 loop\n+         Name_Len := Name_Len + 1;\n+         Name_Buffer (Name_Len) := ' ';\n+      end loop;\n+\n+      --  Check our lists of names, if we find a match, return corresponding\n+      --  indication of whether the file is RM defined.\n+\n+      for J in Non_Imp_File_Names_95'Range loop\n+         if Name_Buffer (1 .. 8) = Non_Imp_File_Names_95 (J).Fname then\n+            return Non_Imp_File_Names_95 (J).RMdef;\n+         end if;\n+      end loop;\n+\n+      for J in Non_Imp_File_Names_05'Range loop\n+         if Name_Buffer (1 .. 8) = Non_Imp_File_Names_05 (J).Fname then\n+            return Non_Imp_File_Names_05 (J).RMdef\n+              and then Ada_Version >= Ada_2005;\n+         end if;\n+      end loop;\n+\n+      for J in Non_Imp_File_Names_12'Range loop\n+         if Name_Buffer (1 .. 8) = Non_Imp_File_Names_12 (J).Fname then\n+            return Non_Imp_File_Names_95 (J).RMdef\n+              and then Ada_Version >= Ada_2012;\n+         end if;\n+      end loop;\n+\n+      --  If no match in any of the lists, not RM defined\n+\n+      return False;\n+   end Is_RM_Defined_Unit;\n+\n end Impunit;"}, {"sha": "31d34a9fe5173b83795541747a882c470c0360d6", "filename": "gcc/ada/impunit.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a03460680a09ac9dc7119f569ae9e59d5fc778b/gcc%2Fada%2Fimpunit.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a03460680a09ac9dc7119f569ae9e59d5fc778b/gcc%2Fada%2Fimpunit.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.ads?ref=0a03460680a09ac9dc7119f569ae9e59d5fc778b", "patch": "@@ -72,4 +72,10 @@ package Impunit is\n    --  the known library units, and if so, returns True. If the name does not\n    --  match any known library unit, False is returned.\n \n+   function Is_RM_Defined_Unit (U : Unit_Number_Type) return Boolean;\n+   --  This function returns True if U represents a unit that is defined in\n+   --  the RM, as defined by the No_Implementation_Units restriction rules.\n+   --  It is used to implement this restriction, so if False is returned, it\n+   --  means that with'ing the unit violates the restriction.\n+\n end Impunit;"}, {"sha": "dca27fe9c61aef338990c284b5c4a2c1b8def8f8", "filename": "gcc/ada/s-rident.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a03460680a09ac9dc7119f569ae9e59d5fc778b/gcc%2Fada%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a03460680a09ac9dc7119f569ae9e59d5fc778b/gcc%2Fada%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rident.ads?ref=0a03460680a09ac9dc7119f569ae9e59d5fc778b", "patch": "@@ -129,6 +129,7 @@ package System.Rident is\n       No_Implementation_Identifiers,           -- Ada 2012 AI-246\n       No_Implementation_Pragmas,               -- Ada 2005 AI-257\n       No_Implementation_Restrictions,          -- GNAT\n+      No_Implementation_Units,                 -- Ada 2012 AI-242\n       No_Implicit_Aliasing,                    -- GNAT\n       No_Elaboration_Code,                     -- GNAT\n       No_Obsolescent_Features,                 -- Ada 2005 AI-368\n@@ -351,7 +352,7 @@ package System.Rident is\n                           (No_Implementation_Attributes    => True,\n                            No_Implementation_Identifiers   => True,\n                            No_Implementation_Pragmas       => True,\n-                           No_Implementation_Restrictions  => True,\n+                           No_Implementation_Units         => True,\n                            others                          => False),\n \n                         --  Value settings for Restricted profile (none"}, {"sha": "38885ee0a50e52ebfc066243bf65d320e1e10001", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a03460680a09ac9dc7119f569ae9e59d5fc778b/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a03460680a09ac9dc7119f569ae9e59d5fc778b/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=0a03460680a09ac9dc7119f569ae9e59d5fc778b", "patch": "@@ -2346,6 +2346,10 @@ package body Sem_Ch10 is\n       Intunit : Boolean;\n       --  Set True if the unit currently being compiled is an internal unit\n \n+      Restriction_Violation : Boolean := False;\n+      --  Set True if a with violates a restriction, no point in giving any\n+      --  warnings if we have this definite error.\n+\n       Save_Style_Check : constant Boolean := Opt.Style_Check;\n       Save_C_Restrict  : Save_Cunit_Boolean_Restrictions;\n \n@@ -2368,13 +2372,23 @@ package body Sem_Ch10 is\n                Is_Predefined_File_Name (F, Renamings_Included => False)\n             then\n                Check_Restriction (No_Obsolescent_Features, N);\n+               Restriction_Violation := True;\n             end if;\n          end;\n       end if;\n \n+      --  Check No_Implementation_Units violation\n+\n+      if Restriction_Check_Required (No_Implementation_Units) then\n+         if not Is_RM_Defined_Unit (Get_Source_Unit (U)) then\n+            Check_Restriction (No_Implementation_Units, Nam);\n+            Restriction_Violation := True;\n+         end if;\n+      end if;\n+\n       --  Save current restriction set, does not apply to with'ed unit\n \n-      Save_C_Restrict  := Cunit_Boolean_Restrictions_Save;\n+      Save_C_Restrict := Cunit_Boolean_Restrictions_Save;\n \n       --  Several actions are skipped for dummy packages (those supplied for\n       --  with's where no matching file could be found). Such packages are\n@@ -2445,12 +2459,14 @@ package body Sem_Ch10 is\n          end if;\n \n          --  Check for inappropriate with of internal implementation unit if we\n-         --  are not compiling an internal unit. We do not issue this message\n-         --  for implicit with's generated by the compiler itself.\n+         --  are not compiling an internal unit and also check for withing unit\n+         --  in wrong version of Ada. Do not issue these messages for implicit\n+         --  with's generated by the compiler itself.\n \n          if Implementation_Unit_Warnings\n            and then not Intunit\n            and then not Implicit_With (N)\n+           and then not Restriction_Violation\n          then\n             declare\n                U_Kind : constant Kind_Of_Unit :="}]}