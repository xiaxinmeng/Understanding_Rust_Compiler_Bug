{"sha": "bf948210a7cc658d936ecc4e9e9a5c206336217c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY5NDgyMTBhN2NjNjU4ZDkzNmVjYzRlOWU5YTVjMjA2MzM2MjE3Yw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-02-24T11:14:17Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-02-24T11:14:17Z"}, "message": "re PR middle-end/52355 (address difference between array elements is not considered to be a compile time constant anymore)\n\n2012-02-24  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/52355\n\t* fold-const.c (fold_addr_of_array_ref_difference): New function.\n\t(fold_binary_loc): Use it to extend the existing &a[i] - &a[j]\n\tfolding.\n\n\t* gcc.dg/pr52355.c: New testcase.\n\nFrom-SVN: r184548", "tree": {"sha": "634770809467c4c208098c20ed3d91b8f8ba01c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/634770809467c4c208098c20ed3d91b8f8ba01c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf948210a7cc658d936ecc4e9e9a5c206336217c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf948210a7cc658d936ecc4e9e9a5c206336217c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf948210a7cc658d936ecc4e9e9a5c206336217c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf948210a7cc658d936ecc4e9e9a5c206336217c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bc8da6ba25c77f0dc7da0fd37b10119a42a0d532", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc8da6ba25c77f0dc7da0fd37b10119a42a0d532", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc8da6ba25c77f0dc7da0fd37b10119a42a0d532"}], "stats": {"total": 81, "additions": 68, "deletions": 13}, "files": [{"sha": "06139aea18bd0fbe70e94b942820c863f6334393", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf948210a7cc658d936ecc4e9e9a5c206336217c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf948210a7cc658d936ecc4e9e9a5c206336217c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf948210a7cc658d936ecc4e9e9a5c206336217c", "patch": "@@ -1,3 +1,10 @@\n+2012-02-24  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/52355\n+\t* fold-const.c (fold_addr_of_array_ref_difference): New function.\n+\t(fold_binary_loc): Use it to extend the existing &a[i] - &a[j]\n+\tfolding.\n+\n 2012-02-13  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n \n \t* tree-if-conv (predicate_scalar_phi): Commentary typo fix."}, {"sha": "6492f1167861cf00cfd3e964b50468583c9c76cb", "filename": "gcc/fold-const.c", "status": "modified", "additions": 43, "deletions": 13, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf948210a7cc658d936ecc4e9e9a5c206336217c/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf948210a7cc658d936ecc4e9e9a5c206336217c/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=bf948210a7cc658d936ecc4e9e9a5c206336217c", "patch": "@@ -9671,6 +9671,44 @@ fold_vec_perm (tree type, tree arg0, tree arg1, const unsigned char *sel)\n     }\n }\n \n+/* Try to fold a pointer difference of type TYPE two address expressions of\n+   array references AREF0 and AREF1 using location LOC.  Return a\n+   simplified expression for the difference or NULL_TREE.  */\n+\n+static tree\n+fold_addr_of_array_ref_difference (location_t loc, tree type,\n+\t\t\t\t   tree aref0, tree aref1)\n+{\n+  tree base0 = TREE_OPERAND (aref0, 0);\n+  tree base1 = TREE_OPERAND (aref1, 0);\n+  tree base_offset = build_int_cst (type, 0);\n+\n+  /* If the bases are array references as well, recurse.  If the bases\n+     are pointer indirections compute the difference of the pointers.\n+     If the bases are equal, we are set.  */\n+  if ((TREE_CODE (base0) == ARRAY_REF\n+       && TREE_CODE (base1) == ARRAY_REF\n+       && (base_offset\n+\t   = fold_addr_of_array_ref_difference (loc, type, base0, base1)))\n+      || (INDIRECT_REF_P (base0)\n+\t  && INDIRECT_REF_P (base1)\n+\t  && (base_offset = fold_binary_loc (loc, MINUS_EXPR, type,\n+\t\t\t\t\t     TREE_OPERAND (base0, 0),\n+\t\t\t\t\t     TREE_OPERAND (base1, 0))))\n+      || operand_equal_p (base0, base1, 0))\n+    {\n+      tree op0 = fold_convert_loc (loc, type, TREE_OPERAND (aref0, 1));\n+      tree op1 = fold_convert_loc (loc, type, TREE_OPERAND (aref1, 1));\n+      tree esz = fold_convert_loc (loc, type, array_ref_element_size (aref0));\n+      tree diff = build2 (MINUS_EXPR, type, op0, op1);\n+      return fold_build2_loc (loc, PLUS_EXPR, type,\n+\t\t\t      base_offset,\n+\t\t\t      fold_build2_loc (loc, MULT_EXPR, type,\n+\t\t\t\t\t       diff, esz));\n+    }\n+  return NULL_TREE;\n+}\n+\n /* Fold a binary expression of code CODE and type TYPE with operands\n    OP0 and OP1.  LOC is the location of the resulting expression.\n    Return the folded expression if folding is successful.  Otherwise,\n@@ -10582,19 +10620,11 @@ fold_binary_loc (location_t loc,\n \t  && TREE_CODE (arg1) == ADDR_EXPR\n \t  && TREE_CODE (TREE_OPERAND (arg1, 0)) == ARRAY_REF)\n         {\n-\t  tree aref0 = TREE_OPERAND (arg0, 0);\n-\t  tree aref1 = TREE_OPERAND (arg1, 0);\n-\t  if (operand_equal_p (TREE_OPERAND (aref0, 0),\n-\t\t\t       TREE_OPERAND (aref1, 0), 0))\n-\t    {\n-\t      tree op0 = fold_convert_loc (loc, type, TREE_OPERAND (aref0, 1));\n-\t      tree op1 = fold_convert_loc (loc, type, TREE_OPERAND (aref1, 1));\n-\t      tree esz = array_ref_element_size (aref0);\n-\t      tree diff = build2 (MINUS_EXPR, type, op0, op1);\n-\t      return fold_build2_loc (loc, MULT_EXPR, type, diff,\n-\t\t\t          fold_convert_loc (loc, type, esz));\n-\n-\t    }\n+\t  tree tem = fold_addr_of_array_ref_difference (loc, type,\n+\t\t\t\t\t\t\tTREE_OPERAND (arg0, 0),\n+\t\t\t\t\t\t\tTREE_OPERAND (arg1, 0));\n+\t  if (tem)\n+\t    return tem;\n \t}\n \n       if (FLOAT_TYPE_P (type)"}, {"sha": "7b6cd216f6adb7b349712ab590bfa71dea21d822", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf948210a7cc658d936ecc4e9e9a5c206336217c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf948210a7cc658d936ecc4e9e9a5c206336217c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bf948210a7cc658d936ecc4e9e9a5c206336217c", "patch": "@@ -1,3 +1,8 @@\n+2012-02-24  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/52355\n+\t* gcc.dg/pr52355.c: New testcase.\n+\n 2012-02-23  Kai Tietz  <ktietz@redhat.com>\n \n \t* gcc.dg/pack-test-5.c: Add -mno-ms-bitfields option"}, {"sha": "0a0271f5dffa2a311fd630d47a52e9182eb5a6e1", "filename": "gcc/testsuite/gcc.dg/pr52355.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf948210a7cc658d936ecc4e9e9a5c206336217c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr52355.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf948210a7cc658d936ecc4e9e9a5c206336217c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr52355.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr52355.c?ref=bf948210a7cc658d936ecc4e9e9a5c206336217c", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+\n+void f(char a[16][16][16])\n+{\n+  __asm volatile (\"\" : : \"i\" (&a[1][0][0] - &a[0][0][0]));\n+}\n+\n+int main(void)\n+{\n+  char a[16][16][16];\n+  f(a);\n+  return 0;\n+}"}]}