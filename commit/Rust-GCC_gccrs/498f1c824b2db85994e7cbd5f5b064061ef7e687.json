{"sha": "498f1c824b2db85994e7cbd5f5b064061ef7e687", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk4ZjFjODI0YjJkYjg1OTk0ZTdjYmQ1ZjViMDY0MDYxZWY3ZTY4Nw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2008-05-20T15:22:31Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2008-05-20T15:22:31Z"}, "message": "c-incpath.c (INO_T_EQ): Do not define on non-inode systems.\n\n\t* c-incpath.c (INO_T_EQ): Do not define on non-inode systems.\n\t(DIRS_EQ): New.\n\t(remove_duplicates): Do not set inode on non-inode systems.  Use\n\tDIRS_EQ.\n\nFrom-SVN: r135661", "tree": {"sha": "c1e6303f7d728470acc13d47ad5d88636c7a9d2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1e6303f7d728470acc13d47ad5d88636c7a9d2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/498f1c824b2db85994e7cbd5f5b064061ef7e687", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/498f1c824b2db85994e7cbd5f5b064061ef7e687", "html_url": "https://github.com/Rust-GCC/gccrs/commit/498f1c824b2db85994e7cbd5f5b064061ef7e687", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/498f1c824b2db85994e7cbd5f5b064061ef7e687/comments", "author": null, "committer": null, "parents": [{"sha": "95b42490a89f98ef0b41b9445f71fcefab4ed4a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95b42490a89f98ef0b41b9445f71fcefab4ed4a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95b42490a89f98ef0b41b9445f71fcefab4ed4a7"}], "stats": {"total": 39, "additions": 24, "deletions": 15}, "files": [{"sha": "94677e69b4a85c7ef7aaca4501bd6defb6e6de94", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/498f1c824b2db85994e7cbd5f5b064061ef7e687/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/498f1c824b2db85994e7cbd5f5b064061ef7e687/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=498f1c824b2db85994e7cbd5f5b064061ef7e687", "patch": "@@ -1,3 +1,10 @@\n+2008-05-20  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* c-incpath.c (INO_T_EQ): Do not define on non-inode systems.\n+\t(DIRS_EQ): New.\n+\t(remove_duplicates): Do not set inode on non-inode systems.  Use\n+\tDIRS_EQ.\n+\n 2008-05-20  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* config.gcc (tm_file): Update comments about relative pathnames."}, {"sha": "4d05554282026a778a5da538537df39eca079d10", "filename": "gcc/c-incpath.c", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/498f1c824b2db85994e7cbd5f5b064061ef7e687/gcc%2Fc-incpath.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/498f1c824b2db85994e7cbd5f5b064061ef7e687/gcc%2Fc-incpath.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-incpath.c?ref=498f1c824b2db85994e7cbd5f5b064061ef7e687", "patch": "@@ -37,15 +37,18 @@\n #ifdef VMS\n # define INO_T_EQ(A, B) (!memcmp (&(A), &(B), sizeof (A)))\n # define INO_T_COPY(DEST, SRC) memcpy(&(DEST), &(SRC), sizeof (SRC))\n-#else\n-# if (defined _WIN32 && !defined (_UWIN)) || defined __MSDOS__\n-#  define INO_T_EQ(A, B) 0\n-# else\n-#  define INO_T_EQ(A, B) ((A) == (B))\n-# endif\n+#elif !((defined _WIN32 && !defined (_UWIN)) || defined __MSDOS__)\n+# define INO_T_EQ(A, B) ((A) == (B))\n # define INO_T_COPY(DEST, SRC) (DEST) = (SRC)\n #endif\n \n+#if defined INO_T_EQ\n+#define DIRS_EQ(A, B) ((A)->dev == (B)->dev \\\n+\t&& INO_T_EQ((A)->ino, (B)->ino))\n+#else\n+#define DIRS_EQ(A, B) (!strcasecmp ((A)->name, (B)->name))\n+#endif\n+\n static const char dir_separator_str[] = { DIR_SEPARATOR, 0 };\n \n static void add_env_var_paths (const char *, int);\n@@ -241,31 +244,30 @@ remove_duplicates (cpp_reader *pfile, struct cpp_dir *head,\n \t\t\t     \"%s: not a directory\", cur->name);\n       else\n \t{\n+#if defined (INO_T_COPY)\n \t  INO_T_COPY (cur->ino, st.st_ino);\n \t  cur->dev  = st.st_dev;\n+#endif\n \n \t  /* Remove this one if it is in the system chain.  */\n \t  reason = REASON_DUP_SYS;\n \t  for (tmp = system; tmp; tmp = tmp->next)\n-\t   if (INO_T_EQ (tmp->ino, cur->ino) && tmp->dev == cur->dev\n-\t       && cur->construct == tmp->construct)\n+\t   if (DIRS_EQ (tmp, cur) && cur->construct == tmp->construct)\n \t      break;\n \n \t  if (!tmp)\n \t    {\n \t      /* Duplicate of something earlier in the same chain?  */\n \t      reason = REASON_DUP;\n \t      for (tmp = head; tmp != cur; tmp = tmp->next)\n-\t       if (INO_T_EQ (cur->ino, tmp->ino) && cur->dev == tmp->dev\n-\t\t   && cur->construct == tmp->construct)\n+\t       if (DIRS_EQ (cur, tmp) && cur->construct == tmp->construct)\n \t\t  break;\n \n \t      if (tmp == cur\n \t\t  /* Last in the chain and duplicate of JOIN?  */\n \t\t  && !(cur->next == NULL && join\n-\t\t       && INO_T_EQ (cur->ino, join->ino)\n-\t\t      && cur->dev == join->dev\n-\t\t      && cur->construct == join->construct))\n+\t\t       && DIRS_EQ (cur, join)\n+\t\t       && cur->construct == join->construct))\n \t\t{\n \t\t  /* Unique, so keep this directory.  */\n \t\t  pcur = &cur->next;\n@@ -297,8 +299,8 @@ add_sysroot_to_chain (const char *sysroot, int chain)\n }\n \n /* Merge the four include chains together in the order quote, bracket,\n-   system, after.  Remove duplicate dirs (as determined by\n-   INO_T_EQ()).\n+   system, after.  Remove duplicate dirs (determined in\n+   system-specific manner).\n \n    We can't just merge the lists and then uniquify them because then\n    we may lose directories from the <> search path that should be"}]}