{"sha": "677ead3b349972bfa18fc87878dda4d3e87f6ddf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc3ZWFkM2IzNDk5NzJiZmExOGZjODc4NzhkZGE0ZDNlODdmNmRkZg==", "commit": {"author": {"name": "eric fang", "email": "eric.fang@arm.com", "date": "2020-02-20T06:57:11Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-04-15T21:24:33Z"}, "message": "runtime: use 64 bits of hash seed on arm64\n\nThis is the same issue as #33960, but on gofrontend.\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/220297", "tree": {"sha": "8de57c252a5df0c290ae04fb7345dc06a5c92a7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8de57c252a5df0c290ae04fb7345dc06a5c92a7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/677ead3b349972bfa18fc87878dda4d3e87f6ddf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/677ead3b349972bfa18fc87878dda4d3e87f6ddf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/677ead3b349972bfa18fc87878dda4d3e87f6ddf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/677ead3b349972bfa18fc87878dda4d3e87f6ddf/comments", "author": {"login": "erifan", "id": 31343225, "node_id": "MDQ6VXNlcjMxMzQzMjI1", "avatar_url": "https://avatars.githubusercontent.com/u/31343225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erifan", "html_url": "https://github.com/erifan", "followers_url": "https://api.github.com/users/erifan/followers", "following_url": "https://api.github.com/users/erifan/following{/other_user}", "gists_url": "https://api.github.com/users/erifan/gists{/gist_id}", "starred_url": "https://api.github.com/users/erifan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erifan/subscriptions", "organizations_url": "https://api.github.com/users/erifan/orgs", "repos_url": "https://api.github.com/users/erifan/repos", "events_url": "https://api.github.com/users/erifan/events{/privacy}", "received_events_url": "https://api.github.com/users/erifan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d43919bf887530dfcbf85a76d60f1a698641731d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d43919bf887530dfcbf85a76d60f1a698641731d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d43919bf887530dfcbf85a76d60f1a698641731d"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "7b382cf47b84cbef10f494a1cb2a0fa3adf4204b", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/677ead3b349972bfa18fc87878dda4d3e87f6ddf/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/677ead3b349972bfa18fc87878dda4d3e87f6ddf/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=677ead3b349972bfa18fc87878dda4d3e87f6ddf", "patch": "@@ -1,4 +1,4 @@\n-89fbf55a409d37ae898e5c4ea4250035f86bed1b\n+0fe7a277c5d22265a73a4d216bd5d81799634453\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "93f28fd6125ccd34d72023f6dd4b70066d5c1778", "filename": "libgo/runtime/aeshash.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/677ead3b349972bfa18fc87878dda4d3e87f6ddf/libgo%2Fruntime%2Faeshash.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/677ead3b349972bfa18fc87878dda4d3e87f6ddf/libgo%2Fruntime%2Faeshash.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Faeshash.c?ref=677ead3b349972bfa18fc87878dda4d3e87f6ddf", "patch": "@@ -596,7 +596,7 @@ uintptr aeshashbody(void* p, uintptr seed, uintptr size, Slice aeskeysched) {\n \n uintptr aeshashbody(void* p, uintptr seed, uintptr size, Slice aeskeysched) {\n \tuint8x16_t *pseed;\n-\tuint32x4_t vinit32;\n+\tuint64x2_t vinit64;\n \tuint8x16_t vinit;\n \tuint8x16_t vseed, vseed2, vseed3, vseed4;\n \tuint8x16_t vseed5, vseed6, vseed7, vseed8;\n@@ -610,10 +610,10 @@ uintptr aeshashbody(void* p, uintptr seed, uintptr size, Slice aeskeysched) {\n \tpseed = (uint8x16_t*)(aeskeysched.__values);\n \n \t// Combined hash seed and length.\n-\tvinit32 = vdupq_n_u32(0);\n-\tvinit32[0] = (uint32)seed;\n-\tvinit32[1] = (uint32)size;\n-\tvinit = vreinterpretq_u8_u32(vinit32);\n+\tvinit64 = vdupq_n_u64(0);\n+\tvinit64[0] = (uint64)seed;\n+\tvinit64[1] = (uint64)size;\n+\tvinit = vreinterpretq_u8_u64(vinit64);\n \n \t// Mix in per-process seed.\n \tvseed = vaeseq_u8(*pseed, vinit);\n@@ -626,7 +626,7 @@ uintptr aeshashbody(void* p, uintptr seed, uintptr size, Slice aeskeysched) {\n \t\t\t// Return 64 bits of scrambled input seed.\n \t\t\treturn vreinterpretq_u64_u8(vseed)[0];\n \t\t} else if (size < 16) {\n-\t\t\tvval = vreinterpretq_u8_u32(vdupq_n_u32(0));\n+\t\t\tvval = vreinterpretq_u8_u64(vdupq_n_u64(0));\n \t\t\tif ((size & 8) != 0) {\n \t\t\t\tvval = vreinterpretq_u8_u64(vld1q_lane_u64((uint64_t*)(p), vreinterpretq_u64_u8(vval), 0));\n \t\t\t\tp = (void*)((uint64_t*)(p) + 1);"}]}