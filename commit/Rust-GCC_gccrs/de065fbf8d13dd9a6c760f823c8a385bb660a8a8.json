{"sha": "de065fbf8d13dd9a6c760f823c8a385bb660a8a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUwNjVmYmY4ZDEzZGQ5YTZjNzYwZjgyM2M4YTM4NWJiNjYwYThhOA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2015-05-12T13:55:46Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2015-05-12T13:55:46Z"}, "message": "rs6000.md (*rotlsi3_internal4, [...]): Delete, revamp, transmogrify into ...\n\n\t* config/rs6000/rs6000.md (*rotlsi3_internal4, *rotlsi3_internal5,\n\t*rotlsi3_internal6, rlwinm, 5 unnamed define_insns, and 6\n\tdefine_splits): Delete, revamp, transmogrify into ...\n\t(*rotlsi3_mask, *rotlsi3_mask_dot, *rotlsi3_mask_dot2,\n\t*ashlsi3_imm_mask, *ashlsi3_imm_mask_dot, *ashlsi3_imm_mask_dot2,\n\t*lshrsi3_imm_mask, *lshrsi3_imm_mask_dot, *lshrsi3_imm_mask_dot2):\n\tNew.\n\nFrom-SVN: r223072", "tree": {"sha": "812740b2cd95ba6fa5f511f50a8939c0a6299857", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/812740b2cd95ba6fa5f511f50a8939c0a6299857"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de065fbf8d13dd9a6c760f823c8a385bb660a8a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de065fbf8d13dd9a6c760f823c8a385bb660a8a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de065fbf8d13dd9a6c760f823c8a385bb660a8a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de065fbf8d13dd9a6c760f823c8a385bb660a8a8/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1a93ca861c1a08072d089f62ce979bd80da574b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a93ca861c1a08072d089f62ce979bd80da574b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a93ca861c1a08072d089f62ce979bd80da574b0"}], "stats": {"total": 253, "additions": 115, "deletions": 138}, "files": [{"sha": "816f3ab2760e85a3cf2a6f8bb4bcd286d6fa489c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de065fbf8d13dd9a6c760f823c8a385bb660a8a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de065fbf8d13dd9a6c760f823c8a385bb660a8a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de065fbf8d13dd9a6c760f823c8a385bb660a8a8", "patch": "@@ -1,3 +1,13 @@\n+2015-05-12  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (*rotlsi3_internal4, *rotlsi3_internal5,\n+\t*rotlsi3_internal6, rlwinm, 5 unnamed define_insns, and 6\n+\tdefine_splits): Delete, revamp, transmogrify into ...\n+\t(*rotlsi3_mask, *rotlsi3_mask_dot, *rotlsi3_mask_dot2,\n+\t*ashlsi3_imm_mask, *ashlsi3_imm_mask_dot, *ashlsi3_imm_mask_dot2,\n+\t*lshrsi3_imm_mask, *lshrsi3_imm_mask_dot, *lshrsi3_imm_mask_dot2):\n+\tNew.\n+\n 2015-05-12  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md (rs6000_adjust_atomic_subword): Use"}, {"sha": "1fcd69e3d9cbfa3a02775fc06560f71d0ac0cc41", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 105, "deletions": 138, "changes": 243, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de065fbf8d13dd9a6c760f823c8a385bb660a8a8/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de065fbf8d13dd9a6c760f823c8a385bb660a8a8/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=de065fbf8d13dd9a6c760f823c8a385bb660a8a8", "patch": "@@ -3745,7 +3745,7 @@\n    (set_attr \"length\" \"4,8\")])\n \n \n-(define_insn \"*rotlsi3_internal4\"\n+(define_insn \"*rotlsi3_mask\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(and:SI (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t\t   (match_operand:SI 2 \"reg_or_cint_operand\" \"rn\"))\n@@ -3755,75 +3755,62 @@\n   [(set_attr \"type\" \"shift\")\n    (set_attr \"maybe_var_shift\" \"yes\")])\n \n-(define_insn \"*rotlsi3_internal5\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC (and:SI\n-\t\t     (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n-\t\t\t\t(match_operand:SI 2 \"reg_or_cint_operand\" \"rn,rn\"))\n-\t\t     (match_operand:SI 3 \"mask_operand\" \"n,n\"))\n-\t\t    (const_int 0)))\n-   (clobber (match_scratch:SI 4 \"=r,r\"))]\n-  \"\"\n+(define_insn_and_split \"*rotlsi3_mask_dot\"\n+  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC\n+\t (and:SI (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t    (match_operand:SI 2 \"reg_or_cint_operand\" \"rn,rn\"))\n+\t\t (match_operand:SI 3 \"mask_operand\" \"n,n\"))\n+\t (const_int 0)))\n+   (clobber (match_scratch:SI 0 \"=r,r\"))]\n+  \"rs6000_gen_cell_microcode\n+   && (TARGET_32BIT || UINTVAL (operands[3]) <= 0x7fffffff)\"\n   \"@\n-   rlw%I2nm. %4,%1,%h2,%m3,%M3\n+   rlw%I2nm. %0,%1,%h2,%m3,%M3\n    #\"\n+  \"&& reload_completed && cc_reg_not_cr0_operand (operands[4], CCmode)\"\n+  [(set (match_dup 0)\n+\t(and:SI (rotate:SI (match_dup 1)\n+\t\t\t   (match_dup 2))\n+\t\t(match_dup 3)))\n+   (set (match_dup 4)\n+\t(compare:CC (match_dup 0)\n+\t\t    (const_int 0)))]\n+  \"\"\n   [(set_attr \"type\" \"shift\")\n    (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,8\")])\n \n-(define_split\n-  [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC (and:SI\n-\t\t     (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n-\t\t\t\t(match_operand:SI 2 \"reg_or_cint_operand\" \"\"))\n-\t\t     (match_operand:SI 3 \"mask_operand\" \"\"))\n-\t\t    (const_int 0)))\n-   (clobber (match_scratch:SI 4 \"\"))]\n-  \"reload_completed\"\n-  [(set (match_dup 4)\n-\t(and:SI (rotate:SI (match_dup 1)\n-\t\t\t\t(match_dup 2))\n-\t\t     (match_dup 3)))\n-   (set (match_dup 0)\n-\t(compare:CC (match_dup 4)\n-\t\t    (const_int 0)))]\n-  \"\")\n-\n-(define_insn \"*rotlsi3_internal6\"\n+(define_insn_and_split \"*rotlsi3_mask_dot2\"\n   [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC (and:SI\n-\t\t     (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n-\t\t\t\t(match_operand:SI 2 \"reg_or_cint_operand\" \"rn,rn\"))\n-\t\t     (match_operand:SI 3 \"mask_operand\" \"n,n\"))\n-\t\t    (const_int 0)))\n+\t(compare:CC\n+\t (and:SI (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t    (match_operand:SI 2 \"reg_or_cint_operand\" \"rn,rn\"))\n+\t\t (match_operand:SI 3 \"mask_operand\" \"n,n\"))\n+\t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(and:SI (rotate:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n-  \"\"\n+\t(and:SI (rotate:SI (match_dup 1)\n+\t\t\t   (match_dup 2))\n+\t\t(match_dup 3)))]\n+  \"rs6000_gen_cell_microcode\n+   && (TARGET_32BIT || UINTVAL (operands[3]) <= 0x7fffffff)\"\n   \"@\n    rlw%I2nm. %0,%1,%h2,%m3,%M3\n    #\"\n-  [(set_attr \"type\" \"shift\")\n-   (set_attr \"maybe_var_shift\" \"yes\")\n-   (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,8\")])\n-\n-(define_split\n-  [(set (match_operand:CC 4 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC (and:SI\n-\t\t     (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n-\t\t\t\t(match_operand:SI 2 \"reg_or_cint_operand\" \"\"))\n-\t\t     (match_operand:SI 3 \"mask_operand\" \"\"))\n-\t\t    (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(and:SI (rotate:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n-  \"reload_completed\"\n+  \"&& reload_completed && cc_reg_not_cr0_operand (operands[4], CCmode)\"\n   [(set (match_dup 0)\n-\t(and:SI (rotate:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n+\t(and:SI (rotate:SI (match_dup 1)\n+\t\t\t   (match_dup 2))\n+\t\t(match_dup 3)))\n    (set (match_dup 4)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n-  \"\")\n+  \"\"\n+  [(set_attr \"type\" \"shift\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n+   (set_attr \"dot\" \"yes\")\n+   (set_attr \"length\" \"4,8\")])\n \n \n (define_insn \"ashl<mode>3\"\n@@ -3894,7 +3881,7 @@\n    (set_attr \"length\" \"4,8\")])\n \n \n-(define_insn \"rlwinm\"\n+(define_insn \"*ashlsi3_imm_mask\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(and:SI (ashift:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t\t   (match_operand:SI 2 \"const_int_operand\" \"i\"))\n@@ -3903,72 +3890,62 @@\n   \"rlwinm %0,%1,%h2,%m3,%M3\"\n   [(set_attr \"type\" \"shift\")])\n \n-(define_insn \"\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n+(define_insn_and_split \"*ashlsi3_imm_mask_dot\"\n+  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC\n \t (and:SI (ashift:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t\t    (match_operand:SI 2 \"const_int_operand\" \"i,i\"))\n \t\t (match_operand:SI 3 \"mask_operand\" \"n,n\"))\n \t (const_int 0)))\n-   (clobber (match_scratch:SI 4 \"=r,r\"))]\n-  \"includes_lshift_p (operands[2], operands[3])\"\n+   (clobber (match_scratch:SI 0 \"=r,r\"))]\n+  \"rs6000_gen_cell_microcode\n+   && (TARGET_32BIT || UINTVAL (operands[3]) <= 0x7fffffff)\n+   && includes_lshift_p (operands[2], operands[3])\"\n   \"@\n-   rlwinm. %4,%1,%h2,%m3,%M3\n+   rlwinm. %0,%1,%h2,%m3,%M3\n    #\"\n+  \"&& reload_completed && cc_reg_not_cr0_operand (operands[4], CCmode)\"\n+  [(set (match_dup 0)\n+\t(and:SI (ashift:SI (match_dup 1)\n+\t\t\t   (match_dup 2))\n+\t\t(match_dup 3)))\n+   (set (match_dup 4)\n+\t(compare:CC (match_dup 0)\n+\t\t    (const_int 0)))]\n+  \"\"\n   [(set_attr \"type\" \"shift\")\n    (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,8\")])\n \n-(define_split\n-  [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC\n-\t (and:SI (ashift:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n-\t\t\t    (match_operand:SI 2 \"const_int_operand\" \"\"))\n-\t\t (match_operand:SI 3 \"mask_operand\" \"\"))\n-\t (const_int 0)))\n-   (clobber (match_scratch:SI 4 \"\"))]\n-  \"includes_lshift_p (operands[2], operands[3]) && reload_completed\"\n-  [(set (match_dup 4)\n-\t(and:SI (ashift:SI (match_dup 1) (match_dup 2))\n-\t\t (match_dup 3)))\n-   (set (match_dup 0)\n-\t(compare:CC (match_dup 4)\n-\t\t    (const_int 0)))]\n-  \"\")\n-\n-(define_insn \"\"\n+(define_insn_and_split \"*ashlsi3_imm_mask_dot2\"\n   [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC\n \t (and:SI (ashift:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t\t    (match_operand:SI 2 \"const_int_operand\" \"i,i\"))\n \t\t (match_operand:SI 3 \"mask_operand\" \"n,n\"))\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(and:SI (ashift:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n-  \"includes_lshift_p (operands[2], operands[3])\"\n+\t(and:SI (ashift:SI (match_dup 1)\n+\t\t\t   (match_dup 2))\n+\t\t(match_dup 3)))]\n+  \"rs6000_gen_cell_microcode\n+   && (TARGET_32BIT || UINTVAL (operands[3]) <= 0x7fffffff)\n+   && includes_lshift_p (operands[2], operands[3])\"\n   \"@\n    rlwinm. %0,%1,%h2,%m3,%M3\n    #\"\n-  [(set_attr \"type\" \"shift\")\n-   (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,8\")])\n-\n-(define_split\n-  [(set (match_operand:CC 4 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC\n-\t (and:SI (ashift:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n-\t\t\t    (match_operand:SI 2 \"const_int_operand\" \"\"))\n-\t\t (match_operand:SI 3 \"mask_operand\" \"\"))\n-\t (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(and:SI (ashift:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n-  \"includes_lshift_p (operands[2], operands[3]) && reload_completed\"\n+  \"&& reload_completed && cc_reg_not_cr0_operand (operands[4], CCmode)\"\n   [(set (match_dup 0)\n-\t(and:SI (ashift:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n+\t(and:SI (ashift:SI (match_dup 1)\n+\t\t\t   (match_dup 2))\n+\t\t(match_dup 3)))\n    (set (match_dup 4)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n-  \"\")\n+  \"\"\n+  [(set_attr \"type\" \"shift\")\n+   (set_attr \"dot\" \"yes\")\n+   (set_attr \"length\" \"4,8\")])\n \n \n (define_insn \"lshr<mode>3\"\n@@ -4039,7 +4016,7 @@\n    (set_attr \"length\" \"4,8\")])\n \n \n-(define_insn \"\"\n+(define_insn \"*lshrsi3_imm_mask\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(and:SI (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t\t     (match_operand:SI 2 \"const_int_operand\" \"i\"))\n@@ -4048,72 +4025,62 @@\n   \"rlwinm %0,%1,%s2,%m3,%M3\"\n   [(set_attr \"type\" \"shift\")])\n \n-(define_insn \"\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n+(define_insn_and_split \"*lshrsi3_imm_mask_dot\"\n+  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC\n \t (and:SI (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t\t      (match_operand:SI 2 \"const_int_operand\" \"i,i\"))\n \t\t (match_operand:SI 3 \"mask_operand\" \"n,n\"))\n \t (const_int 0)))\n-   (clobber (match_scratch:SI 4 \"=r,r\"))]\n-  \"includes_rshift_p (operands[2], operands[3])\"\n+   (clobber (match_scratch:SI 0 \"=r,r\"))]\n+  \"rs6000_gen_cell_microcode\n+   && (TARGET_32BIT || UINTVAL (operands[3]) <= 0x7fffffff)\n+   && includes_rshift_p (operands[2], operands[3])\"\n   \"@\n-   rlwinm. %4,%1,%s2,%m3,%M3\n+   rlwinm. %0,%1,%s2,%m3,%M3\n    #\"\n+  \"&& reload_completed && cc_reg_not_cr0_operand (operands[4], CCmode)\"\n+  [(set (match_dup 0)\n+\t(and:SI (lshiftrt:SI (match_dup 1)\n+\t\t\t     (match_dup 2))\n+\t\t(match_dup 3)))\n+   (set (match_dup 4)\n+\t(compare:CC (match_dup 0)\n+\t\t    (const_int 0)))]\n+  \"\"\n   [(set_attr \"type\" \"shift\")\n    (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,8\")])\n \n-(define_split\n-  [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC\n-\t (and:SI (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n-\t\t\t      (match_operand:SI 2 \"const_int_operand\" \"\"))\n-\t\t (match_operand:SI 3 \"mask_operand\" \"\"))\n-\t (const_int 0)))\n-   (clobber (match_scratch:SI 4 \"\"))]\n-  \"includes_rshift_p (operands[2], operands[3]) && reload_completed\"\n-  [(set (match_dup 4)\n-\t(and:SI (lshiftrt:SI (match_dup 1) (match_dup 2))\n-\t\t (match_dup 3)))\n-   (set (match_dup 0)\n-\t(compare:CC (match_dup 4)\n-\t\t    (const_int 0)))]\n-  \"\")\n-\n-(define_insn \"\"\n+(define_insn_and_split \"*lshrsi3_imm_mask_dot2\"\n   [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC\n \t (and:SI (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t\t      (match_operand:SI 2 \"const_int_operand\" \"i,i\"))\n \t\t (match_operand:SI 3 \"mask_operand\" \"n,n\"))\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(and:SI (lshiftrt:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n-  \"includes_rshift_p (operands[2], operands[3])\"\n+\t(and:SI (lshiftrt:SI (match_dup 1)\n+\t\t\t     (match_dup 2))\n+\t\t(match_dup 3)))]\n+  \"rs6000_gen_cell_microcode\n+   && (TARGET_32BIT || UINTVAL (operands[3]) <= 0x7fffffff)\n+   && includes_rshift_p (operands[2], operands[3])\"\n   \"@\n    rlwinm. %0,%1,%s2,%m3,%M3\n    #\"\n-  [(set_attr \"type\" \"shift\")\n-   (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,8\")])\n-\n-(define_split\n-  [(set (match_operand:CC 4 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC\n-\t (and:SI (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n-\t\t\t      (match_operand:SI 2 \"const_int_operand\" \"\"))\n-\t\t (match_operand:SI 3 \"mask_operand\" \"\"))\n-\t (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(and:SI (lshiftrt:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n-  \"includes_rshift_p (operands[2], operands[3]) && reload_completed\"\n+  \"&& reload_completed && cc_reg_not_cr0_operand (operands[4], CCmode)\"\n   [(set (match_dup 0)\n-\t(and:SI (lshiftrt:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n+\t(and:SI (lshiftrt:SI (match_dup 1)\n+\t\t\t     (match_dup 2))\n+\t\t(match_dup 3)))\n    (set (match_dup 4)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n-  \"\")\n+  \"\"\n+  [(set_attr \"type\" \"shift\")\n+   (set_attr \"dot\" \"yes\")\n+   (set_attr \"length\" \"4,8\")])\n \n \n (define_expand \"ashr<mode>3\""}]}