{"sha": "25f303e9a27a0d799f9979446d9f11ed62b8d648", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjVmMzAzZTlhMjdhMGQ3OTlmOTk3OTQ0NmQ5ZjExZWQ2MmI4ZDY0OA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-30T09:52:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-30T09:52:57Z"}, "message": "testsuite: Fix up gomp/simd-{2,3}.c tests [PR98243]\n\nThe test (intentionally) is not gcc.dg/vect/, as it needs -fopenmp and uses\nOpenMP directives other than simd and therefore can't rely on default\nVECTFLAGS and so I think can't safely use vect_int effective target\neither.  So, I'm just making sure it is vectorized on x86 and on aarch64 (the\nlatter as an example of a target that doesn't need any extra options to get\nthe vectorization).\n\n2021-01-30  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR testsuite/98243\n\t* gcc.dg/gomp/simd-2.c: Add -msse2 on x86.  Restrict\n\tscan-tree-dump-times to x86 and aarch64 targets.\n\t* gcc.dg/gomp/simd-3.c: Likewise.", "tree": {"sha": "642452a94ce90dbf36f986dfaed02bed39e99890", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/642452a94ce90dbf36f986dfaed02bed39e99890"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25f303e9a27a0d799f9979446d9f11ed62b8d648", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25f303e9a27a0d799f9979446d9f11ed62b8d648", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25f303e9a27a0d799f9979446d9f11ed62b8d648", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25f303e9a27a0d799f9979446d9f11ed62b8d648/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2900f2f2c5fb234678eb8b76564e5994ec5970b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2900f2f2c5fb234678eb8b76564e5994ec5970b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2900f2f2c5fb234678eb8b76564e5994ec5970b9"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "85acb980f101b88edeecd25b94bf5063f2c5a35e", "filename": "gcc/testsuite/gcc.dg/gomp/simd-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25f303e9a27a0d799f9979446d9f11ed62b8d648/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fsimd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25f303e9a27a0d799f9979446d9f11ed62b8d648/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fsimd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fsimd-2.c?ref=25f303e9a27a0d799f9979446d9f11ed62b8d648", "patch": "@@ -1,7 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fopenmp -fdump-tree-vect-details\" } */\n+/* { dg-additional-options \"-msse2\" { target { i?86-*-* x86_64-*-* } } } */\n /* { dg-additional-options \"-mavx\" { target avx } } */\n-/* { dg-final { scan-tree-dump-times \"vectorized \\[1-9]\\[0-9]* loops in function\" 5 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized \\[1-9]\\[0-9]* loops in function\" 5 \"vect\" { target i?86-*-* x86_64-*-* aarch64-*-* } } } */\n \n int a[10000][128];\n "}, {"sha": "86fee8586739abd7d681cffe7859da3e6d77634c", "filename": "gcc/testsuite/gcc.dg/gomp/simd-3.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25f303e9a27a0d799f9979446d9f11ed62b8d648/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fsimd-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25f303e9a27a0d799f9979446d9f11ed62b8d648/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fsimd-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fsimd-3.c?ref=25f303e9a27a0d799f9979446d9f11ed62b8d648", "patch": "@@ -1,7 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fopenmp -fdump-tree-vect-details\" } */\n+/* { dg-additional-options \"-msse2\" { target { i?86-*-* x86_64-*-* } } } */\n /* { dg-additional-options \"-mavx\" { target avx } } */\n-/* { dg-final { scan-tree-dump-times \"vectorized \\[1-9]\\[0-9]* loops in function\" 5 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized \\[1-9]\\[0-9]* loops in function\" 5 \"vect\" { target i?86-*-* x86_64-*-* aarch64-*-* } } } */\n \n int a[1024][1024];\n "}]}