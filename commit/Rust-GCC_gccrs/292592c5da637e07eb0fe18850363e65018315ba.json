{"sha": "292592c5da637e07eb0fe18850363e65018315ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjkyNTkyYzVkYTYzN2UwN2ViMGZlMTg4NTAzNjNlNjUwMTgzMTViYQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2018-11-22T00:06:27Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-11-22T00:06:27Z"}, "message": "[libbacktrace] Factor out read_initial_length\n\nFactor out new function read_initial_length in dwarf.c.\n\nBootstrapped and reg-tested on x86_64.\n\n2018-11-22  Tom de Vries  <tdevries@suse.de>\n\n\t* dwarf.c (read_initial_length): Factor out of ...\n\t(build_address_map, read_line_info): ... here.\n\nFrom-SVN: r266361", "tree": {"sha": "46acc06968a10835162ced045cfada51746440df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46acc06968a10835162ced045cfada51746440df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/292592c5da637e07eb0fe18850363e65018315ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/292592c5da637e07eb0fe18850363e65018315ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/292592c5da637e07eb0fe18850363e65018315ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/292592c5da637e07eb0fe18850363e65018315ba/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "208a53290430fc17e801c7cc8f0f0289184a2d86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/208a53290430fc17e801c7cc8f0f0289184a2d86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/208a53290430fc17e801c7cc8f0f0289184a2d86"}], "stats": {"total": 41, "additions": 26, "deletions": 15}, "files": [{"sha": "cbd80a356b8762f98553d09f4bd2dc9d5e0bda75", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/292592c5da637e07eb0fe18850363e65018315ba/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/292592c5da637e07eb0fe18850363e65018315ba/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=292592c5da637e07eb0fe18850363e65018315ba", "patch": "@@ -1,3 +1,8 @@\n+2018-11-22  Tom de Vries  <tdevries@suse.de>\n+\n+\t* dwarf.c (read_initial_length): Factor out of ...\n+\t(build_address_map, read_line_info): ... here.\n+\n 2018-11-21  Tom de Vries  <tdevries@suse.de>\n \n \t* dwarf.c (read_string): Factor out of ..."}, {"sha": "4e93f120820448314b585493119ec9d1015c5885", "filename": "libbacktrace/dwarf.c", "status": "modified", "additions": 21, "deletions": 15, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/292592c5da637e07eb0fe18850363e65018315ba/libbacktrace%2Fdwarf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/292592c5da637e07eb0fe18850363e65018315ba/libbacktrace%2Fdwarf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fdwarf.c?ref=292592c5da637e07eb0fe18850363e65018315ba", "patch": "@@ -651,6 +651,25 @@ leb128_len (const unsigned char *p)\n   return ret;\n }\n \n+/* Read initial_length from BUF and advance the appropriate number of bytes.  */\n+\n+static uint64_t\n+read_initial_length (struct dwarf_buf *buf, int *is_dwarf64)\n+{\n+  uint64_t len;\n+\n+  len = read_uint32 (buf);\n+  if (len == 0xffffffff)\n+    {\n+      len = read_uint64 (buf);\n+      *is_dwarf64 = 1;\n+    }\n+  else\n+    *is_dwarf64 = 0;\n+\n+  return len;\n+}\n+\n /* Free an abbreviations structure.  */\n \n static void\n@@ -1463,14 +1482,7 @@ build_address_map (struct backtrace_state *state, uintptr_t base_address,\n \n       unit_data_start = info.buf;\n \n-      is_dwarf64 = 0;\n-      len = read_uint32 (&info);\n-      if (len == 0xffffffff)\n-\t{\n-\t  len = read_uint64 (&info);\n-\t  is_dwarf64 = 1;\n-\t}\n-\n+      len = read_initial_length (&info, &is_dwarf64);\n       unit_buf = info;\n       unit_buf.left = len;\n \n@@ -2002,13 +2014,7 @@ read_line_info (struct backtrace_state *state, struct dwarf_data *ddata,\n   line_buf.data = data;\n   line_buf.reported_underflow = 0;\n \n-  is_dwarf64 = 0;\n-  len = read_uint32 (&line_buf);\n-  if (len == 0xffffffff)\n-    {\n-      len = read_uint64 (&line_buf);\n-      is_dwarf64 = 1;\n-    }\n+  len = read_initial_length (&line_buf, &is_dwarf64);\n   line_buf.left = len;\n \n   if (!read_line_header (state, u, is_dwarf64, &line_buf, hdr))"}]}