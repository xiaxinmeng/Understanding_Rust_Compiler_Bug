{"sha": "3beb864c19b34fc0e4dcfdc12e65f4b4a3eeddce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JlYjg2NGMxOWIzNGZjMGU0ZGNmZGMxMmU2NWY0YjRhM2VlZGRjZQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2009-09-07T14:48:02Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2009-09-07T14:48:02Z"}, "message": "gcc.c (this_is_linker_script): New variable.\n\n        * gcc.c (this_is_linker_script): New variable.  Like\n        this_is_library_file but for the %T constructor.\n        (end_going_arg): If this_is_linker_script is set then locate the\n        script and insert a --script switch before it\n        (do_spec_2): Initialise this_is_linker_script.\n        (do_spec_1): Likewise.  Handle %T construct.\n        (eval_spec_function): Preserve this_is_linker_script.\n        * doc/invoke.texi: Document %T construct in spec files.\n        * config/m32c/m32c.h (LIB_SPEC): Use it.\n\nFrom-SVN: r151477", "tree": {"sha": "3854715e81aa3264e87605ef7883f359d39d6ea7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3854715e81aa3264e87605ef7883f359d39d6ea7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3beb864c19b34fc0e4dcfdc12e65f4b4a3eeddce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3beb864c19b34fc0e4dcfdc12e65f4b4a3eeddce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3beb864c19b34fc0e4dcfdc12e65f4b4a3eeddce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3beb864c19b34fc0e4dcfdc12e65f4b4a3eeddce/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d4e0a1c0569db470be17fa8c81fbc8b9106581a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4e0a1c0569db470be17fa8c81fbc8b9106581a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4e0a1c0569db470be17fa8c81fbc8b9106581a9"}], "stats": {"total": 75, "additions": 63, "deletions": 12}, "files": [{"sha": "686e6657b8799998d3e79a378fb0fadc14c653e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3beb864c19b34fc0e4dcfdc12e65f4b4a3eeddce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3beb864c19b34fc0e4dcfdc12e65f4b4a3eeddce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3beb864c19b34fc0e4dcfdc12e65f4b4a3eeddce", "patch": "@@ -1,3 +1,15 @@\n+2009-09-07  Nick Clifton  <nickc@redhat.com>\n+\n+\t* gcc.c (this_is_linker_script): New variable.  Like\n+\tthis_is_library_file but for the %T constructor.\n+\t(end_going_arg): If this_is_linker_script is set then locate the\n+\tscript and insert a --script switch before it\n+        (do_spec_2): Initialise this_is_linker_script.\n+        (do_spec_1): Likewise.  Handle %T construct.\n+        (eval_spec_function): Preserve this_is_linker_script.\n+\t* doc/invoke.texi: Document %T construct in spec files.\n+\t* config/m32c/m32c.h (LIB_SPEC): Use it.\n+\n 2009-09-07  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* rtl.h (PREFETCH_SCHEDULE_BARRIER_P): New macro.\t"}, {"sha": "ee092a565254fc085fb577017dd68a24a77ec202", "filename": "gcc/config/m32c/m32c.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3beb864c19b34fc0e4dcfdc12e65f4b4a3eeddce/gcc%2Fconfig%2Fm32c%2Fm32c.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3beb864c19b34fc0e4dcfdc12e65f4b4a3eeddce/gcc%2Fconfig%2Fm32c%2Fm32c.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c.h?ref=3beb864c19b34fc0e4dcfdc12e65f4b4a3eeddce", "patch": "@@ -48,12 +48,12 @@\n    thing when no CPU is specified, which defaults to R8C.  */\n #undef  LIB_SPEC\n #define LIB_SPEC \"-( -lc %{msim*:-lsim}%{!msim*:-lnosys} -) \\\n-%{msim*:%{!T*: %{mcpu=m32cm:-Tsim24.ld}%{mcpu=m32c:-Tsim24.ld} \\\n-\t%{!mcpu=m32cm:%{!mcpu=m32c:-Tsim16.ld}}}} \\\n-%{!T*:%{!msim*: %{mcpu=m16c:-Tm16c.ld} \\\n-\t\t%{mcpu=m32cm:-Tm32cm.ld} \\\n-\t\t%{mcpu=m32c:-Tm32c.ld} \\\n-\t\t%{!mcpu=m16c:%{!mcpu=m32cm:%{!mcpu=m32c:-Tr8c.ld}}}}} \\\n+%{msim*:%{!T*: %{mcpu=m32cm:%Tsim24.ld}%{mcpu=m32c:%Tsim24.ld} \\\n+\t%{!mcpu=m32cm:%{!mcpu=m32c:%Tsim16.ld}}}} \\\n+%{!T*:%{!msim*: %{mcpu=m16c:%Tm16c.ld} \\\n+\t\t%{mcpu=m32cm:%Tm32cm.ld} \\\n+\t\t%{mcpu=m32c:%Tm32c.ld} \\\n+\t\t%{!mcpu=m16c:%{!mcpu=m32cm:%{!mcpu=m32c:%Tr8c.ld}}}}} \\\n \"\n \n /* Run-time Target Specification */"}, {"sha": "b630ce3e7e7cceeea207be04a3775cdf3ef76aba", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3beb864c19b34fc0e4dcfdc12e65f4b4a3eeddce/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3beb864c19b34fc0e4dcfdc12e65f4b4a3eeddce/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=3beb864c19b34fc0e4dcfdc12e65f4b4a3eeddce", "patch": "@@ -8840,7 +8840,16 @@ and @option{-imultilib} as necessary.\n @item %s\n Current argument is the name of a library or startup file of some sort.\n Search for that file in a standard list of directories and substitute\n-the full name found.\n+the full name found.  The current working directory is included in the\n+list of directories scanned.\n+\n+@item %T\n+Current argument is the name of a linker script.  Search for that file\n+in the current list of directories to scan for libraries. If the file\n+is located insert a @option{--script} option into the command line\n+followed by the full path name found.  If the file is not found then\n+generate an error message.  Note: the current working directory is not\n+searched.\n \n @item %e@var{str}\n Print @var{str} as an error message.  @var{str} is terminated by a newline."}, {"sha": "a9ed7e2169666709c79866100d30e5a686d5d0f0", "filename": "gcc/gcc.c", "status": "modified", "additions": 35, "deletions": 5, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3beb864c19b34fc0e4dcfdc12e65f4b4a3eeddce/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3beb864c19b34fc0e4dcfdc12e65f4b4a3eeddce/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=3beb864c19b34fc0e4dcfdc12e65f4b4a3eeddce", "patch": "@@ -427,7 +427,7 @@ or with constant text in a single argument.\n  %b     substitute the basename of the input file being processed.\n \tThis is the substring up to (and not including) the last period\n \tand not including the directory unless -save-temps was specified\n-\tto put temporaries in a different location.\t\n+\tto put temporaries in a different location.\n  %B\tsame as %b, but include the file suffix (text after the last period).\n  %gSUFFIX\n \tsubstitute a file name that has suffix SUFFIX and is chosen\n@@ -564,7 +564,7 @@ or with constant text in a single argument.\n  %{!.S:X} substitutes X, if NOT processing a file with suffix S.\n  %{,S:X}  substitutes X, if processing a file which will use spec S.\n  %{!,S:X} substitutes X, if NOT processing a file which will use spec S.\n-\t  \n+\n  %{S|T:X} substitutes X if either -S or -T was given to GCC.  This may be\n \t  combined with '!', '.', ',', and '*' as above binding stronger\n \t  than the OR.\n@@ -3443,7 +3443,7 @@ add_linker_option (const char *option, int len)\n   if (! linker_options)\n     linker_options = XNEWVEC (char *, n_linker_options);\n   else\n-    linker_options = XRESIZEVEC (char *, linker_options, n_linker_options);  \n+    linker_options = XRESIZEVEC (char *, linker_options, n_linker_options);\n \n   linker_options [n_linker_options - 1] = save_string (option, len);\n }\n@@ -4685,6 +4685,13 @@ static int this_is_output_file;\n    search dirs for it.  */\n static int this_is_library_file;\n \n+/* Nonzero means %T has been seen; the next arg to be terminated\n+   is the name of a linker script and we should try all of the\n+   standard search dirs for it.  If it is found insert a --script\n+   command line switch and then substitute the full path in place,\n+   otherwise generate an error message.  */\n+static int this_is_linker_script;\n+\n /* Nonzero means that the input of this command is coming from a pipe.  */\n static int input_from_pipe;\n \n@@ -4705,6 +4712,19 @@ end_going_arg (void)\n       string = XOBFINISH (&obstack, const char *);\n       if (this_is_library_file)\n \tstring = find_file (string);\n+      if (this_is_linker_script)\n+\t{\n+\t  char * full_script_path = find_a_file (&startfile_prefixes, string, R_OK, true);\n+\n+\t  if (full_script_path == NULL)\n+\t    {\n+\t      error (_(\"unable to locate default linker script '%s' in the library search paths\"), string);\n+\t      /* Script was not found on search path.  */\n+\t      return;\n+\t    }\n+\t  store_arg (\"--script\", false, false);\n+\t  string = full_script_path;\n+\t}\n       store_arg (string, delete_this_arg, this_is_output_file);\n       if (this_is_output_file)\n \toutfiles[input_file_number] = string;\n@@ -4794,6 +4814,7 @@ do_spec_2 (const char *spec)\n   delete_this_arg = 0;\n   this_is_output_file = 0;\n   this_is_library_file = 0;\n+  this_is_linker_script = 0;\n   input_from_pipe = 0;\n   suffix_subst = NULL;\n \n@@ -5081,6 +5102,7 @@ do_spec_1 (const char *spec, int inswitch, const char *soft_matched_part)\n \tdelete_this_arg = 0;\n \tthis_is_output_file = 0;\n \tthis_is_library_file = 0;\n+\tthis_is_linker_script = 0;\n \tinput_from_pipe = 0;\n \tbreak;\n \n@@ -5100,6 +5122,7 @@ do_spec_1 (const char *spec, int inswitch, const char *soft_matched_part)\n \tdelete_this_arg = 0;\n \tthis_is_output_file = 0;\n \tthis_is_library_file = 0;\n+\tthis_is_linker_script = 0;\n \tbreak;\n \n       case '%':\n@@ -5547,6 +5570,10 @@ do_spec_1 (const char *spec, int inswitch, const char *soft_matched_part)\n \t    this_is_library_file = 1;\n \t    break;\n \n+\t  case 'T':\n+\t    this_is_linker_script = 1;\n+\t    break;\n+\n \t  case 'V':\n \t    outfiles[input_file_number] = NULL;\n \t    break;\n@@ -5921,6 +5948,7 @@ eval_spec_function (const char *func, const char *args)\n   int save_this_is_output_file;\n   int save_this_is_library_file;\n   int save_input_from_pipe;\n+  int save_this_is_linker_script;\n   const char *save_suffix_subst;\n \n \n@@ -5937,6 +5965,7 @@ eval_spec_function (const char *func, const char *args)\n   save_delete_this_arg = delete_this_arg;\n   save_this_is_output_file = this_is_output_file;\n   save_this_is_library_file = this_is_library_file;\n+  save_this_is_linker_script = this_is_linker_script;\n   save_input_from_pipe = input_from_pipe;\n   save_suffix_subst = suffix_subst;\n \n@@ -5962,6 +5991,7 @@ eval_spec_function (const char *func, const char *args)\n   delete_this_arg = save_delete_this_arg;\n   this_is_output_file = save_this_is_output_file;\n   this_is_library_file = save_this_is_library_file;\n+  this_is_linker_script = save_this_is_linker_script;\n   input_from_pipe = save_input_from_pipe;\n   suffix_subst = save_suffix_subst;\n \n@@ -6206,7 +6236,7 @@ handle_braces (const char *p)\n \t    {\n \t      if ((a_is_suffix || a_is_spectype) && a_is_starred)\n \t\tgoto invalid;\n-\t      \n+\n \t      if (!a_is_starred)\n \t\tdisj_starred = false;\n \n@@ -6220,7 +6250,7 @@ handle_braces (const char *p)\n \t\t    a_matched = input_spec_matches (atom, end_atom);\n \t\t  else\n \t\t    a_matched = switch_matches (atom, end_atom, a_is_starred);\n-\t\t  \n+\n \t\t  if (a_matched != a_is_negated)\n \t\t    {\n \t\t      disj_matched = true;"}]}