{"sha": "e78167f298583c1770b2889cc49a2b31dd42c137", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc4MTY3ZjI5ODU4M2MxNzcwYjI4ODljYzQ5YTJiMzFkZDQyYzEzNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-01-02T19:03:04Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-01-02T19:03:04Z"}, "message": "re PR c++/55804 (GCC omits required call to constructor)\n\n\tPR c++/55804\n\tPR c++/55032\n\tPR c++/55245\n\t* tree.c (build_array_type_1): Revert earlier change.\n\t* cp/tree.c (build_cplus_array_type): Copy layout information\n\tto main variant if necessary.\n\nFrom-SVN: r194811", "tree": {"sha": "9a488488943c24223d38fd70d5904cca475fa417", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a488488943c24223d38fd70d5904cca475fa417"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e78167f298583c1770b2889cc49a2b31dd42c137", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e78167f298583c1770b2889cc49a2b31dd42c137", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e78167f298583c1770b2889cc49a2b31dd42c137", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e78167f298583c1770b2889cc49a2b31dd42c137/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cc1863452c2ebf3696ac7247aa9e4ae9db633c49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc1863452c2ebf3696ac7247aa9e4ae9db633c49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc1863452c2ebf3696ac7247aa9e4ae9db633c49"}], "stats": {"total": 75, "additions": 64, "deletions": 11}, "files": [{"sha": "4b3834b29237ccef6a9897dac99c6e3ce04c6271", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e78167f298583c1770b2889cc49a2b31dd42c137/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e78167f298583c1770b2889cc49a2b31dd42c137/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e78167f298583c1770b2889cc49a2b31dd42c137", "patch": "@@ -1,3 +1,8 @@\n+2013-01-02  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/55804\n+\t* tree.c (build_array_type_1): Revert earlier change.\n+\n 2013-01-02  Yufeng Zhang  <yufeng.zhang@arm.com>\n \n \t* config/aarch64/aarch64-cores.def: Add entries for \"cortex-a53\" and"}, {"sha": "626455696ce17d2e2ff35deac87e1aae51c4d5d6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e78167f298583c1770b2889cc49a2b31dd42c137/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e78167f298583c1770b2889cc49a2b31dd42c137/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e78167f298583c1770b2889cc49a2b31dd42c137", "patch": "@@ -1,3 +1,10 @@\n+2013-01-02  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/55032\n+\tPR c++/55245\n+\t* tree.c (build_cplus_array_type): Copy layout information\n+\tto main variant if necessary.\n+\n 2012-12-28  Kai Tietz  <ktietz@redhat.com>\n \n \t* rtti.c (LONGPTR_T): New helper-macro."}, {"sha": "c658582052b7b418140a4535bc69693ab46eddc0", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 30, "deletions": 6, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e78167f298583c1770b2889cc49a2b31dd42c137/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e78167f298583c1770b2889cc49a2b31dd42c137/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=e78167f298583c1770b2889cc49a2b31dd42c137", "patch": "@@ -809,6 +809,15 @@ build_cplus_array_type (tree elt_type, tree index_type)\n       t = build_array_type (elt_type, index_type);\n     }\n \n+  /* Push these needs up so that initialization takes place\n+     more easily.  */\n+  bool needs_ctor\n+    = TYPE_NEEDS_CONSTRUCTING (TYPE_MAIN_VARIANT (elt_type));\n+  TYPE_NEEDS_CONSTRUCTING (t) = needs_ctor;\n+  bool needs_dtor\n+    = TYPE_HAS_NONTRIVIAL_DESTRUCTOR (TYPE_MAIN_VARIANT (elt_type));\n+  TYPE_HAS_NONTRIVIAL_DESTRUCTOR (t) = needs_dtor;\n+\n   /* We want TYPE_MAIN_VARIANT of an array to strip cv-quals from the\n      element type as well, so fix it up if needed.  */\n   if (elt_type != TYPE_MAIN_VARIANT (elt_type))\n@@ -818,6 +827,27 @@ build_cplus_array_type (tree elt_type, tree index_type)\n \n       if (TYPE_MAIN_VARIANT (t) != m)\n \t{\n+\t  if (COMPLETE_TYPE_P (t) && !COMPLETE_TYPE_P (m))\n+\t    {\n+\t      /* m was built before the element type was complete, so we\n+\t\t also need to copy the layout info from t.  */\n+\t      tree size = TYPE_SIZE (t);\n+\t      tree size_unit = TYPE_SIZE_UNIT (t);\n+\t      unsigned int align = TYPE_ALIGN (t);\n+\t      unsigned int user_align = TYPE_USER_ALIGN (t);\n+\t      enum machine_mode mode = TYPE_MODE (t);\n+\t      for (tree var = m; var; var = TYPE_NEXT_VARIANT (var))\n+\t\t{\n+\t\t  TYPE_SIZE (var) = size;\n+\t\t  TYPE_SIZE_UNIT (var) = size_unit;\n+\t\t  TYPE_ALIGN (var) = align;\n+\t\t  TYPE_USER_ALIGN (var) = user_align;\n+\t\t  SET_TYPE_MODE (var, mode);\n+\t\t  TYPE_NEEDS_CONSTRUCTING (var) = needs_ctor;\n+\t\t  TYPE_HAS_NONTRIVIAL_DESTRUCTOR (var) = needs_dtor;\n+\t\t}\n+\t    }\n+\n \t  TYPE_MAIN_VARIANT (t) = m;\n \t  TYPE_NEXT_VARIANT (t) = TYPE_NEXT_VARIANT (m);\n \t  TYPE_NEXT_VARIANT (m) = t;\n@@ -828,12 +858,6 @@ build_cplus_array_type (tree elt_type, tree index_type)\n   if (TYPE_SIZE (t) && EXPR_P (TYPE_SIZE (t)))\n     TREE_NO_WARNING (TYPE_SIZE (t)) = 1;\n \n-  /* Push these needs up so that initialization takes place\n-     more easily.  */\n-  TYPE_NEEDS_CONSTRUCTING (t)\n-    = TYPE_NEEDS_CONSTRUCTING (TYPE_MAIN_VARIANT (elt_type));\n-  TYPE_HAS_NONTRIVIAL_DESTRUCTOR (t)\n-    = TYPE_HAS_NONTRIVIAL_DESTRUCTOR (TYPE_MAIN_VARIANT (elt_type));\n   return t;\n }\n "}, {"sha": "4440d3d5432dddb0fd5de018e5de089f18a8fc93", "filename": "gcc/testsuite/g++.dg/init/array33.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e78167f298583c1770b2889cc49a2b31dd42c137/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray33.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e78167f298583c1770b2889cc49a2b31dd42c137/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray33.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray33.C?ref=e78167f298583c1770b2889cc49a2b31dd42c137", "patch": "@@ -0,0 +1,22 @@\n+// PR c++/55804\n+// { dg-do run }\n+\n+int t = 0;\n+template <typename> struct vector {\n+  vector() { t++; }\n+};\n+\n+typedef vector<int> Arrays[1];\n+class C\n+{\n+    vector<int> v_;\n+    void Foo(const Arrays &);\n+};\n+Arrays a;\n+\n+int main(void)\n+{\n+  if (t!=1)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "7cacb2a0d64c072457694eb19abd080c9a4ebe09", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e78167f298583c1770b2889cc49a2b31dd42c137/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e78167f298583c1770b2889cc49a2b31dd42c137/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=e78167f298583c1770b2889cc49a2b31dd42c137", "patch": "@@ -7505,12 +7505,7 @@ build_array_type_1 (tree elt_type, tree index_type, bool shared)\n       hashval_t hashcode = iterative_hash_object (TYPE_HASH (elt_type), 0);\n       if (index_type)\n \thashcode = iterative_hash_object (TYPE_HASH (index_type), hashcode);\n-      tree old_t = t;\n       t = type_hash_canon (hashcode, t);\n-      if (t != old_t)\n-\t/* Lay it out again in case the element type has been completed since\n-\t   the array was added to the hash table.  */\n-\tlayout_type (t);\n     }\n \n   if (TYPE_CANONICAL (t) == t)"}]}