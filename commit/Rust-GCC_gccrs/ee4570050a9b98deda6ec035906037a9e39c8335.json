{"sha": "ee4570050a9b98deda6ec035906037a9e39c8335", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU0NTcwMDUwYTliOThkZWRhNmVjMDM1OTA2MDM3YTllMzljODMzNQ==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2000-12-06T18:50:49Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2000-12-06T18:50:49Z"}, "message": "invoke.texi: Use @table @samp instead of @itemize @minus for table of language standards.\n\n\t* invoke.texi: Use @table @samp instead of @itemize @minus for\n\ttable of language standards.  Fix use of @pxref.  From Zack\n\tWeinberg.  Also exclude specs documentation from generated\n\tmanpage, and create separate ENVIRONMENT section.\n\nFrom-SVN: r38069", "tree": {"sha": "625c1d23f53661e244481837b2922e887b6464ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/625c1d23f53661e244481837b2922e887b6464ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee4570050a9b98deda6ec035906037a9e39c8335", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee4570050a9b98deda6ec035906037a9e39c8335", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee4570050a9b98deda6ec035906037a9e39c8335", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee4570050a9b98deda6ec035906037a9e39c8335/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b614171efe3bc88f74a91f3903d97d977b5c3c5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b614171efe3bc88f74a91f3903d97d977b5c3c5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b614171efe3bc88f74a91f3903d97d977b5c3c5c"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "ae3456796f657fd9ce3bde55f44457187f2b013b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4570050a9b98deda6ec035906037a9e39c8335/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4570050a9b98deda6ec035906037a9e39c8335/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ee4570050a9b98deda6ec035906037a9e39c8335", "patch": "@@ -1,3 +1,10 @@\n+2000-12-06  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* invoke.texi: Use @table @samp instead of @itemize @minus for\n+\ttable of language standards.  Fix use of @pxref.  From Zack\n+\tWeinberg.  Also exclude specs documentation from generated\n+\tmanpage, and create separate ENVIRONMENT section.\n+\n 2000-12-06  Michael Matz  <matzmich@cs.tu-berlin.de>\n \n \t* gcse.c (compute_pre_data): Kill trapping expressions in"}, {"sha": "5d66854b999f5833d98f46dc076e74ce8d0705a1", "filename": "gcc/invoke.texi", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4570050a9b98deda6ec035906037a9e39c8335/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4570050a9b98deda6ec035906037a9e39c8335/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=ee4570050a9b98deda6ec035906037a9e39c8335", "patch": "@@ -858,7 +858,7 @@ affected.\n Determine the language standard.  A value for this option must be provided;\n possible values are \n \n-@itemize @minus\n+@table @samp\n @item iso9899:1990\n Same as -ansi\n \n@@ -890,7 +890,7 @@ same as -std=iso9899:1999, deprecated\n @item gnu9x\n same as -std=gnu99, deprecated\n \n-@end itemize\n+@end table\n \n Even when this option is not specified, you can still use some of the\n features of newer standards in so far as they do not conflict with\n@@ -3592,6 +3592,8 @@ program uses when determining what switches to pass to @file{cc1},\n are processed in order, from left to right.\n @end table\n \n+@c man end\n+\n @node Spec Files\n @section Specifying subprocesses and the switches to pass to them\n @cindex Spec Files\n@@ -4019,6 +4021,8 @@ GCC also knows implicitly that arguments starting in @samp{-l} are to be\n treated as compiler output files, and passed to the linker in their\n proper position among the other output files.\n \n+@c man begin OPTIONS\n+\n @node Target Options\n @section Specifying Target Machine and Compiler Version\n @cindex target options\n@@ -7742,8 +7746,8 @@ If you specify this option, you can not use the @code{asm} or\n @code{__asm__} keywords in functions with memory checking enabled.  GNU\n CC cannot understand what the @code{asm} statement may do, and therefore\n cannot generate the appropriate code, so it will reject it.  However, if\n-you specify the function attribute @code{no_check_memory_usage} (see\n-@pxref{Function Attributes}, GNU CC will disable memory checking within a\n+you specify the function attribute @code{no_check_memory_usage}\n+(@pxref{Function Attributes}), GNU CC will disable memory checking within a\n function; you may use @code{asm} statements inside such functions.  You\n may have an inline expansion of a non-checked function within a checked\n function; in that case GNU CC will not generate checks for the inlined\n@@ -7870,10 +7874,14 @@ Be warned that you should know what you are doing when invoking this\n option, and that not all targets provide complete support for it.\n @end table\n \n+@c man end\n+\n @node Environment Variables\n @section Environment Variables Affecting GCC\n @cindex environment variables\n \n+@c man begin ENVIRONMENT\n+\n This section describes several environment variables that affect how GCC\n operates.  Some of them work by specifying directories or prefixes to use\n when searching for various kinds of files. Some are used to specify other"}]}