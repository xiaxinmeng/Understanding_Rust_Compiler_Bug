{"sha": "95aac11b84177539a883f263c599ea2e033b1c3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTVhYWMxMWI4NDE3NzUzOWE4ODNmMjYzYzU5OWVhMmUwMzNiMWMzZg==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@au.ibm.com", "date": "2009-04-07T01:29:54Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2009-04-07T01:29:54Z"}, "message": "dfp.c: Replace type punning assignments with memcpy throughout.\n\n\t* dfp.c: Replace type punning assignments with memcpy throughout.\n\t* Makefile.in (dfp.o-warn): Remove.\n\nFrom-SVN: r145644", "tree": {"sha": "631dcaeae2fcdba1ca4a8be81fd0551c052c484b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/631dcaeae2fcdba1ca4a8be81fd0551c052c484b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95aac11b84177539a883f263c599ea2e033b1c3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95aac11b84177539a883f263c599ea2e033b1c3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95aac11b84177539a883f263c599ea2e033b1c3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95aac11b84177539a883f263c599ea2e033b1c3f/comments", "author": null, "committer": null, "parents": [{"sha": "633dd06142627746f63384bea70fa63ec90bbf7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/633dd06142627746f63384bea70fa63ec90bbf7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/633dd06142627746f63384bea70fa63ec90bbf7a"}], "stats": {"total": 62, "additions": 33, "deletions": 29}, "files": [{"sha": "5e8549dbd0d19c7ce3f1869dd53c065929acc0ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95aac11b84177539a883f263c599ea2e033b1c3f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95aac11b84177539a883f263c599ea2e033b1c3f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=95aac11b84177539a883f263c599ea2e033b1c3f", "patch": "@@ -1,3 +1,8 @@\n+2009-04-07  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* dfp.c: Replace type punning assignments with memcpy throughout.\n+\t* Makefile.in (dfp.o-warn): Remove.\n+\t\n 2009-04-07  Alan Modra  <amodra@bigpond.net.au>\n \n \tPR target/39634"}, {"sha": "63dddc06dfec5e3364d77d5c6059bbb9db1a4043", "filename": "gcc/Makefile.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95aac11b84177539a883f263c599ea2e033b1c3f/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95aac11b84177539a883f263c599ea2e033b1c3f/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=95aac11b84177539a883f263c599ea2e033b1c3f", "patch": "@@ -175,8 +175,6 @@ GCC_WARN_CFLAGS = $(LOOSE_WARN) $($(@D)-warn) $(NOCOMMON_FLAG) $($@-warn)\n # be subject to -Werror:\n # flex output may yield harmless \"no previous prototype\" warnings\n build/gengtype-lex.o-warn = -Wno-error\n-# dfp.c contains many alias violations\n-dfp.o-warn = -fno-strict-aliasing\n # mips-tfile.c contains -Wcast-qual warnings.\n mips-tfile.o-warn = -Wno-error\n "}, {"sha": "875e8c409a0547b38087e837e019cc5404afbd91", "filename": "gcc/dfp.c", "status": "modified", "additions": 28, "deletions": 27, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95aac11b84177539a883f263c599ea2e033b1c3f/gcc%2Fdfp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95aac11b84177539a883f263c599ea2e033b1c3f/gcc%2Fdfp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdfp.c?ref=95aac11b84177539a883f263c599ea2e033b1c3f", "patch": "@@ -1,5 +1,6 @@\n /* Decimal floating point support.\n-   Copyright (C) 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2006, 2007, 2008, 2009 Free Software\n+   Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -139,7 +140,7 @@ encode_decimal32 (const struct real_format *fmt ATTRIBUTE_UNUSED,\n   decimal_to_decnumber (r, &dn); \n   decimal32FromNumber (&d32, &dn, &set);\n \n-  buf[0] = *(uint32_t *) d32.bytes;\n+  memcpy (&buf[0], d32.bytes, sizeof (uint32_t));\n }\n \n /* Decode an IEEE 754 decimal32 type into a real.  */\n@@ -155,7 +156,7 @@ decode_decimal32 (const struct real_format *fmt ATTRIBUTE_UNUSED,\n   decContextDefault (&set, DEC_INIT_DECIMAL128);\n   set.traps = 0;\n \n-  *((uint32_t *) d32.bytes) = (uint32_t) buf[0];\n+  memcpy (&d32.bytes, &buf[0], sizeof (uint32_t));\n \n   decimal32ToNumber (&d32, &dn);\n   decimal_from_decnumber (r, &dn, &set); \n@@ -179,13 +180,13 @@ encode_decimal64 (const struct real_format *fmt ATTRIBUTE_UNUSED,\n \n   if (WORDS_BIGENDIAN == FLOAT_WORDS_BIG_ENDIAN)\n     {\n-      buf[0] = *(uint32_t *) &d64.bytes[0];\n-      buf[1] = *(uint32_t *) &d64.bytes[4];\n+      memcpy (&buf[0], &d64.bytes[0], sizeof (uint32_t));\n+      memcpy (&buf[1], &d64.bytes[4], sizeof (uint32_t));\n     }\n   else\n     {\n-      buf[0] = *(uint32_t *) &d64.bytes[4];\n-      buf[1] = *(uint32_t *) &d64.bytes[0];\n+      memcpy (&buf[0], &d64.bytes[4], sizeof (uint32_t));\n+      memcpy (&buf[1], &d64.bytes[0], sizeof (uint32_t));\n     }\n }\n \n@@ -204,13 +205,13 @@ decode_decimal64 (const struct real_format *fmt ATTRIBUTE_UNUSED,\n \n   if (WORDS_BIGENDIAN == FLOAT_WORDS_BIG_ENDIAN)\n     {\n-      *((uint32_t *) &d64.bytes[0]) = (uint32_t) buf[0];\n-      *((uint32_t *) &d64.bytes[4]) = (uint32_t) buf[1];\n+      memcpy (&d64.bytes[0], &buf[0], sizeof (uint32_t));\n+      memcpy (&d64.bytes[4], &buf[1], sizeof (uint32_t));\n     }\n   else\n     {\n-      *((uint32_t *) &d64.bytes[0]) = (uint32_t) buf[1];\n-      *((uint32_t *) &d64.bytes[4]) = (uint32_t) buf[0];\n+      memcpy (&d64.bytes[0], &buf[1], sizeof (uint32_t));\n+      memcpy (&d64.bytes[4], &buf[0], sizeof (uint32_t));\n     }\n \n   decimal64ToNumber (&d64, &dn);\n@@ -235,17 +236,17 @@ encode_decimal128 (const struct real_format *fmt ATTRIBUTE_UNUSED,\n \n   if (WORDS_BIGENDIAN == FLOAT_WORDS_BIG_ENDIAN)\n     {\n-      buf[0] = *(uint32_t *) &d128.bytes[0];\n-      buf[1] = *(uint32_t *) &d128.bytes[4];\n-      buf[2] = *(uint32_t *) &d128.bytes[8];\n-      buf[3] = *(uint32_t *) &d128.bytes[12];\n+      memcpy (&buf[0], &d128.bytes[0], sizeof (uint32_t));\n+      memcpy (&buf[1], &d128.bytes[4], sizeof (uint32_t));\n+      memcpy (&buf[2], &d128.bytes[8], sizeof (uint32_t));\n+      memcpy (&buf[3], &d128.bytes[12], sizeof (uint32_t));\n     }\n   else\n     {\n-      buf[0] = *(uint32_t *) &d128.bytes[12];\n-      buf[1] = *(uint32_t *) &d128.bytes[8];\n-      buf[2] = *(uint32_t *) &d128.bytes[4];\n-      buf[3] = *(uint32_t *) &d128.bytes[0];\n+      memcpy (&buf[0], &d128.bytes[12], sizeof (uint32_t));\n+      memcpy (&buf[1], &d128.bytes[8], sizeof (uint32_t));\n+      memcpy (&buf[2], &d128.bytes[4], sizeof (uint32_t));\n+      memcpy (&buf[3], &d128.bytes[0], sizeof (uint32_t));\n     }\n }\n \n@@ -264,17 +265,17 @@ decode_decimal128 (const struct real_format *fmt ATTRIBUTE_UNUSED,\n \n   if (WORDS_BIGENDIAN == FLOAT_WORDS_BIG_ENDIAN)\n     {\n-      *((uint32_t *) &d128.bytes[0])  = (uint32_t) buf[0];\n-      *((uint32_t *) &d128.bytes[4])  = (uint32_t) buf[1];\n-      *((uint32_t *) &d128.bytes[8])  = (uint32_t) buf[2];\n-      *((uint32_t *) &d128.bytes[12]) = (uint32_t) buf[3];\n+      memcpy (&d128.bytes[0],  &buf[0], sizeof (uint32_t));\n+      memcpy (&d128.bytes[4],  &buf[1], sizeof (uint32_t));\n+      memcpy (&d128.bytes[8],  &buf[2], sizeof (uint32_t));\n+      memcpy (&d128.bytes[12], &buf[3], sizeof (uint32_t));\n     }\n   else\n     {\n-      *((uint32_t *) &d128.bytes[0])  = (uint32_t) buf[3];\n-      *((uint32_t *) &d128.bytes[4])  = (uint32_t) buf[2];\n-      *((uint32_t *) &d128.bytes[8])  = (uint32_t) buf[1];\n-      *((uint32_t *) &d128.bytes[12]) = (uint32_t) buf[0];\n+      memcpy (&d128.bytes[0],  &buf[3], sizeof (uint32_t));\n+      memcpy (&d128.bytes[4],  &buf[2], sizeof (uint32_t));\n+      memcpy (&d128.bytes[8],  &buf[1], sizeof (uint32_t));\n+      memcpy (&d128.bytes[12], &buf[0], sizeof (uint32_t));\n     }\n \n   decimal128ToNumber (&d128, &dn);"}]}