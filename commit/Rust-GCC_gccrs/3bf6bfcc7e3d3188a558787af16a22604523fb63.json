{"sha": "3bf6bfcc7e3d3188a558787af16a22604523fb63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JmNmJmY2M3ZTNkMzE4OGE1NTg3ODdhZjE2YTIyNjA0NTIzZmI2Mw==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2007-05-14T23:49:36Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2007-05-14T23:49:36Z"}, "message": "c-typeck.c (build_binary_op): Return early for error.\n\ngcc/\n\t* c-typeck.c (build_binary_op): Return early for error.\ngcc/testsuite/\n\t* gcc.dg/dfp/usual-arith-conv-bad.c: New test.\n\nFrom-SVN: r124732", "tree": {"sha": "7401eeca9b8d1b1be3e10740ef7f7ac2d11a25c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7401eeca9b8d1b1be3e10740ef7f7ac2d11a25c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bf6bfcc7e3d3188a558787af16a22604523fb63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bf6bfcc7e3d3188a558787af16a22604523fb63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bf6bfcc7e3d3188a558787af16a22604523fb63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bf6bfcc7e3d3188a558787af16a22604523fb63/comments", "author": null, "committer": null, "parents": [{"sha": "5a6bb57eb9ad3397408aedca5c362ef36340a907", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a6bb57eb9ad3397408aedca5c362ef36340a907", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a6bb57eb9ad3397408aedca5c362ef36340a907"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "0abf554d3b1c04d01334082b8750c67976214e0b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bf6bfcc7e3d3188a558787af16a22604523fb63/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bf6bfcc7e3d3188a558787af16a22604523fb63/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3bf6bfcc7e3d3188a558787af16a22604523fb63", "patch": "@@ -1,3 +1,7 @@\n+2007-05-14  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* c-typeck.c (build_binary_op): Return early for error.\n+\n 2007-05-15  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \t* tree-ssa-loop-niter.c (record_estimate): Use GGC_NEW to allocate"}, {"sha": "2bf767776ba9dede73f2c61cd3d22062797f58f5", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bf6bfcc7e3d3188a558787af16a22604523fb63/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bf6bfcc7e3d3188a558787af16a22604523fb63/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=3bf6bfcc7e3d3188a558787af16a22604523fb63", "patch": "@@ -8148,7 +8148,11 @@ build_binary_op (enum tree_code code, tree orig_op0, tree orig_op1,\n       int none_complex = (code0 != COMPLEX_TYPE && code1 != COMPLEX_TYPE);\n \n       if (shorten || common || short_compare)\n-\tresult_type = c_common_type (type0, type1);\n+\t{\n+\t  result_type = c_common_type (type0, type1);\n+\t  if (result_type == error_mark_node)\n+\t    return error_mark_node;\n+\t}\n \n       /* For certain operations (which identify themselves by shorten != 0)\n \t if both args were extended from the same smaller type,"}, {"sha": "fd3c801a12fc4b565305e6ebcf7fdd8502602a5e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bf6bfcc7e3d3188a558787af16a22604523fb63/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bf6bfcc7e3d3188a558787af16a22604523fb63/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3bf6bfcc7e3d3188a558787af16a22604523fb63", "patch": "@@ -1,6 +1,8 @@\n 2007-05-14  Janis Johnson  <janis187@us.ibm.com>\n \n-        * expr.c (cpp_classify_number): Warn about dfp constant for -pedantic.\n+\t* gcc.dg/dfp/usual-arith-conv-bad.c: New test.\n+\n+\t* gcc.dg/fltconst-pedantic-dfp.c: New test.\n \n \tPR c/31924\n \t* gcc.dg/fltconst-1.c: New test."}, {"sha": "4693abc90d928723a14a990cb7170409c03b50f7", "filename": "gcc/testsuite/gcc.dg/dfp/usual-arith-conv-bad-2.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bf6bfcc7e3d3188a558787af16a22604523fb63/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fusual-arith-conv-bad-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bf6bfcc7e3d3188a558787af16a22604523fb63/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fusual-arith-conv-bad-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fusual-arith-conv-bad-2.c?ref=3bf6bfcc7e3d3188a558787af16a22604523fb63", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99\" } */\n+\n+/* This used to result in an ICE.  */\n+\n+extern _Decimal64 x;\n+extern int i;\n+\n+void\n+foo (void)\n+{\n+  if (x <= 2.0)\t\t/* { dg-error \"mix operands\" } */\n+    i++;\n+}"}]}