{"sha": "b5d6a2ff232a9a8086eddef40b2f8b19828b9f88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjVkNmEyZmYyMzJhOWE4MDg2ZWRkZWY0MGIyZjhiMTk4MjhiOWY4OA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2001-02-06T13:04:43Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-02-06T13:04:43Z"}, "message": "stor-layout.c (reference_types_internal): New variable.\n\n\t* stor-layout.c (reference_types_internal): New variable.\n\t(internal_reference_types): New function.\n\t(layout_type, case REFERENCE_TYPE): Make Pmode if internal.\n\t* tree.h (internal_reference_types): New declaration.\n\nFrom-SVN: r39491", "tree": {"sha": "d22dbc3d309e7347d0d13e819614684b6f5096bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d22dbc3d309e7347d0d13e819614684b6f5096bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5d6a2ff232a9a8086eddef40b2f8b19828b9f88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5d6a2ff232a9a8086eddef40b2f8b19828b9f88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5d6a2ff232a9a8086eddef40b2f8b19828b9f88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5d6a2ff232a9a8086eddef40b2f8b19828b9f88/comments", "author": null, "committer": null, "parents": [{"sha": "05bd3d4156671cc44d299e8945112586d769f2c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05bd3d4156671cc44d299e8945112586d769f2c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05bd3d4156671cc44d299e8945112586d769f2c6"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "e0a23adc1ddf52290c57fb10905a7aebc4fe736c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5d6a2ff232a9a8086eddef40b2f8b19828b9f88/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5d6a2ff232a9a8086eddef40b2f8b19828b9f88/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b5d6a2ff232a9a8086eddef40b2f8b19828b9f88", "patch": "@@ -1,5 +1,10 @@\n Tue Feb  6 07:54:51 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n+\t* stor-layout.c (reference_types_internal): New variable.\n+\t(internal_reference_types): New function.\n+\t(layout_type, case REFERENCE_TYPE): Make Pmode if internal.\n+\t* tree.h (internal_reference_types): New declaration.\n+\n \t* cse.c (find_best_addr): Fix typo in computing cost.\n \n Mon Feb  5 21:56:16 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>"}, {"sha": "7bb5b4a2636a6923e99e57f27b0ad7814970111c", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 26, "deletions": 6, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5d6a2ff232a9a8086eddef40b2f8b19828b9f88/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5d6a2ff232a9a8086eddef40b2f8b19828b9f88/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=b5d6a2ff232a9a8086eddef40b2f8b19828b9f88", "patch": "@@ -1,6 +1,6 @@\n /* C-compiler utilities for types and variables storage layout\n    Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1996, 1996, 1998,\n-   1999, 2000 Free Software Foundation, Inc.\n+   1999, 2000, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -50,6 +50,11 @@ unsigned int maximum_field_alignment;\n    May be overridden by front-ends.  */\n unsigned int set_alignment = 0;\n \n+/* Nonzero if all REFERENCE_TYPEs are internal and hence should be\n+   allocated in Pmode, not ptr_mode.   Set only by internal_reference_types\n+   called only by a front end.  */\n+static int reference_types_internal = 0;\n+\n static void finalize_record_size\tPARAMS ((record_layout_info));\n static void finalize_type_size\t\tPARAMS ((tree));\n static void place_union_field\t\tPARAMS ((record_layout_info, tree));\n@@ -64,6 +69,15 @@ static tree pending_sizes;\n \n int immediate_size_expand;\n \n+/* Show that REFERENCE_TYPES are internal and should be Pmode.  Called only\n+   by front end.  */\n+\n+void\n+internal_reference_types ()\n+{\n+  reference_types_internal = 1;\n+}\n+\n /* Get a list of all the objects put on the pending sizes list.  */\n \n tree\n@@ -1315,11 +1329,17 @@ layout_type (type)\n \n     case POINTER_TYPE:\n     case REFERENCE_TYPE:\n-      TYPE_MODE (type) = ptr_mode;\n-      TYPE_SIZE (type) = bitsize_int (POINTER_SIZE);\n-      TYPE_SIZE_UNIT (type) = size_int (POINTER_SIZE / BITS_PER_UNIT);\n-      TREE_UNSIGNED (type) = 1;\n-      TYPE_PRECISION (type) = POINTER_SIZE;\n+      {\n+\tint nbits = ((TREE_CODE (type) == REFERENCE_TYPE\n+\t\t      && reference_types_internal)\n+\t\t     ? GET_MODE_BITSIZE (Pmode) : POINTER_SIZE);\n+\n+\tTYPE_MODE (type) = nbits == POINTER_SIZE ? ptr_mode : Pmode;\n+\tTYPE_SIZE (type) = bitsize_int (nbits);\n+\tTYPE_SIZE_UNIT (type) = size_int (nbits / BITS_PER_UNIT);\n+\tTREE_UNSIGNED (type) = 1;\n+\tTYPE_PRECISION (type) = nbits;\n+      }\n       break;\n \n     case ARRAY_TYPE:"}, {"sha": "33597d6f556922fb1390e7efd0c8cbf93a97b09a", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5d6a2ff232a9a8086eddef40b2f8b19828b9f88/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5d6a2ff232a9a8086eddef40b2f8b19828b9f88/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=b5d6a2ff232a9a8086eddef40b2f8b19828b9f88", "patch": "@@ -2773,6 +2773,7 @@ extern void set_yydebug\t\t\tPARAMS ((int));\n \n /* In stor-layout.c */\n extern void fixup_signed_type\t\tPARAMS ((tree));\n+extern void internal_reference_types \tPARAMS ((void));\n \n /* varasm.c */\n extern void make_decl_rtl\t\tPARAMS ((tree, const char *));"}]}