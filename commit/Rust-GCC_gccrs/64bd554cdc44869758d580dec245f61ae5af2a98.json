{"sha": "64bd554cdc44869758d580dec245f61ae5af2a98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRiZDU1NGNkYzQ0ODY5NzU4ZDU4MGRlYzI0NWY2MWFlNWFmMmE5OA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-06-11T22:56:51Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-06-11T22:56:51Z"}, "message": "hashtable (_Hashtable<>::cbegin(size_type), [...]): Add per DR 691.\n\n2008-06-11  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/tr1_impl/hashtable (_Hashtable<>::cbegin(size_type),\n\tcend(size_type)): Add per DR 691. \n\t* testsuite/23_containers/unordered_map/requirements/cliterators.cc:\n\tNew.\n\t* testsuite/23_containers/unordered_multimap/requirements/\n\tcliterators.cc: Likewise.\n\t* testsuite/23_containers/unordered_set/requirements/cliterators.cc:\n\tLikewise.\n\t* testsuite/23_containers/unordered_multiset/requirements/\n\tcliterators.cc: Likewise.\n\t* doc/xml/manual/intro.xml: Add an entry for DR 691.\n\nFrom-SVN: r136685", "tree": {"sha": "97b4078e94f24646dfb7549230aacaec34d63e69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97b4078e94f24646dfb7549230aacaec34d63e69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64bd554cdc44869758d580dec245f61ae5af2a98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64bd554cdc44869758d580dec245f61ae5af2a98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64bd554cdc44869758d580dec245f61ae5af2a98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64bd554cdc44869758d580dec245f61ae5af2a98/comments", "author": null, "committer": null, "parents": [{"sha": "5f836cbbc1e3c163f205377dee0aef65aad4c61d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f836cbbc1e3c163f205377dee0aef65aad4c61d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f836cbbc1e3c163f205377dee0aef65aad4c61d"}], "stats": {"total": 252, "additions": 248, "deletions": 4}, "files": [{"sha": "94cbefa52ffa41e6ab586ad349da1018c7e83948", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64bd554cdc44869758d580dec245f61ae5af2a98/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64bd554cdc44869758d580dec245f61ae5af2a98/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=64bd554cdc44869758d580dec245f61ae5af2a98", "patch": "@@ -1,3 +1,17 @@\n+2008-06-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/tr1_impl/hashtable (_Hashtable<>::cbegin(size_type),\n+\tcend(size_type)): Add per DR 691. \n+\t* testsuite/23_containers/unordered_map/requirements/cliterators.cc:\n+\tNew.\n+\t* testsuite/23_containers/unordered_multimap/requirements/\n+\tcliterators.cc: Likewise.\n+\t* testsuite/23_containers/unordered_set/requirements/cliterators.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multiset/requirements/\n+\tcliterators.cc: Likewise.\n+\t* doc/xml/manual/intro.xml: Add an entry for DR 691.\n+\n 2008-06-11  Matthias Klose  <doko@ubuntu.com>\n \n \t* testsuite/30_threads/lock_error, testsuite/30_threads/once_flag:"}, {"sha": "309871b5c32561b5b02ce7aa4f3343d3cb5773a2", "filename": "libstdc++-v3/doc/xml/manual/intro.xml", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64bd554cdc44869758d580dec245f61ae5af2a98/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64bd554cdc44869758d580dec245f61ae5af2a98/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml?ref=64bd554cdc44869758d580dec245f61ae5af2a98", "patch": "@@ -635,6 +635,13 @@\n     <listitem><para>Add the missing operations.\n     </para></listitem></varlistentry>\n \n+    <varlistentry><term><ulink url=\"../ext/lwg-active.html#691\">691</ulink>:\n+        <emphasis>const_local_iterator cbegin, cend missing from TR1</emphasis>\n+    </term>\n+    <listitem><para>In C++0x mode add cbegin(size_type) and cend(size_type)\n+\t            to the unordered containers.\n+    </para></listitem></varlistentry>\n+\n     <varlistentry><term><ulink url=\"../ext/lwg-defects.html#693\">693</ulink>:\n         <emphasis>std::bitset::all() missing</emphasis>\n     </term>"}, {"sha": "55056ef3da82afc5d1ef789efb5f591670e67a42", "filename": "libstdc++-v3/include/tr1_impl/hashtable", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64bd554cdc44869758d580dec245f61ae5af2a98/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fhashtable", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64bd554cdc44869758d580dec245f61ae5af2a98/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fhashtable", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fhashtable?ref=64bd554cdc44869758d580dec245f61ae5af2a98", "patch": "@@ -1,6 +1,6 @@\n // Internal header for TR1 unordered_set and unordered_map -*- C++ -*-\n \n-// Copyright (C) 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -326,19 +326,30 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       local_iterator\n       begin(size_type __n)\n       { return local_iterator(_M_buckets[__n]); }\n-  \n+\n       local_iterator\n       end(size_type)\n       { return local_iterator(0); }\n-  \n+\n       const_local_iterator\n       begin(size_type __n) const\n       { return const_local_iterator(_M_buckets[__n]); }\n-  \n+\n       const_local_iterator\n       end(size_type) const\n       { return const_local_iterator(0); }\n \n+#ifdef _GLIBCXX_INCLUDE_AS_CXX0X\n+      // DR 691.\n+      const_local_iterator\n+      cbegin(size_type __n) const\n+      { return const_local_iterator(_M_buckets[__n]); }\n+\n+      const_local_iterator\n+      cend(size_type) const\n+      { return const_local_iterator(0); }\n+#endif\n+\n       float\n       load_factor() const\n       { "}, {"sha": "1699a2b40b0da60a616b17cb1523c3da54f0d6b0", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/requirements/cliterators.cc", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64bd554cdc44869758d580dec245f61ae5af2a98/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Frequirements%2Fcliterators.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64bd554cdc44869758d580dec245f61ae5af2a98/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Frequirements%2Fcliterators.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Frequirements%2Fcliterators.cc?ref=64bd554cdc44869758d580dec245f61ae5af2a98", "patch": "@@ -0,0 +1,53 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2008-06-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <unordered_map>\n+#include <testsuite_hooks.h>\n+\n+// DR 691.\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef std::unordered_map<int, int> um_type;\n+  um_type um;\n+  um[1] = 1;\n+  VERIFY( um.cbegin(0) == um.begin(0) );\n+  VERIFY( um.cend(0) == um.end(0) );\n+  const um_type::size_type bn = um.bucket(1);\n+  VERIFY( um.cbegin(bn) != um.cend(bn) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "947e2a7807aa0214f9097ae7e2214dfaf2e68fde", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/requirements/cliterators.cc", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64bd554cdc44869758d580dec245f61ae5af2a98/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Frequirements%2Fcliterators.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64bd554cdc44869758d580dec245f61ae5af2a98/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Frequirements%2Fcliterators.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Frequirements%2Fcliterators.cc?ref=64bd554cdc44869758d580dec245f61ae5af2a98", "patch": "@@ -0,0 +1,53 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2008-06-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <unordered_map>\n+#include <testsuite_hooks.h>\n+\n+// DR 691.\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef std::unordered_multimap<int, int> umm_type;\n+  umm_type umm;\n+  umm.insert(umm_type::value_type(1, 1));\n+  VERIFY( umm.cbegin(0) == umm.begin(0) );\n+  VERIFY( umm.cend(0) == umm.end(0) );\n+  const umm_type::size_type bn = umm.bucket(1);\n+  VERIFY( umm.cbegin(bn) != umm.cend(bn) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "51b32564444ade200641565732361370e6a07aee", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/requirements/cliterators.cc", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64bd554cdc44869758d580dec245f61ae5af2a98/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Frequirements%2Fcliterators.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64bd554cdc44869758d580dec245f61ae5af2a98/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Frequirements%2Fcliterators.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Frequirements%2Fcliterators.cc?ref=64bd554cdc44869758d580dec245f61ae5af2a98", "patch": "@@ -0,0 +1,53 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2008-06-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <unordered_set>\n+#include <testsuite_hooks.h>\n+\n+// DR 691.\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef std::unordered_multiset<int> ums_type;\n+  ums_type ums;\n+  ums.insert(1);\n+  VERIFY( ums.cbegin(0) == ums.begin(0) );\n+  VERIFY( ums.cend(0) == ums.end(0) );\n+  const ums_type::size_type bn = ums.bucket(1);\n+  VERIFY( ums.cbegin(bn) != ums.cend(bn) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "944514a653fb6bd28ff45ea3ed2e30b300de1cad", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/requirements/cliterators.cc", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64bd554cdc44869758d580dec245f61ae5af2a98/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Frequirements%2Fcliterators.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64bd554cdc44869758d580dec245f61ae5af2a98/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Frequirements%2Fcliterators.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Frequirements%2Fcliterators.cc?ref=64bd554cdc44869758d580dec245f61ae5af2a98", "patch": "@@ -0,0 +1,53 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2007-06-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <unordered_set>\n+#include <testsuite_hooks.h>\n+\n+// DR 691.\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef std::unordered_set<int> us_type;\n+  us_type us;\n+  us.insert(1);\n+  VERIFY( us.cbegin(0) == us.begin(0) );\n+  VERIFY( us.cend(0) == us.end(0) );\n+  const us_type::size_type bn = us.bucket(1);\n+  VERIFY( us.cbegin(bn) != us.cend(bn) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}