{"sha": "4d6bf96b583d77336cf6ca643d92d068a88414fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ2YmY5NmI1ODNkNzczMzZjZjZjYTY0M2Q5MmQwNjhhODg0MTRmYQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2020-02-21T12:38:22Z"}, "committer": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2020-02-21T12:40:50Z"}, "message": "sra: Only verify sizes of scalar accesses (PR 93845)\n\nthe testcase is another example - in addition to recent PR 93516 - where\nthe SRA access verifier is confused by the fact that get_ref_base_extent\ncan return different sizes for the same type, depending whether they are\nCOMPONENT_REF or not.  In the previous bug I decided to keep the\nverifier check for aggregate type even though it is not really important\nand instead avoid easily detectable type-within-the-same-type situation.\nThis testcase is however a result of a fairly random looking type cast\nand so cannot be handled in the same way.\n\nBecause the check is not really important for aggregates, this patch\nsimply disables it for non-register types.\n\n2020-02-21  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/93845\n\t* tree-sra.c (verify_sra_access_forest): Only test access size of\n\tscalar types.\n\n\ttestsuite/\n\t* g++.dg/tree-ssa/pr93845.C: New test.", "tree": {"sha": "c8bf9c21ac1ed551e1f2e528899028a17f673130", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8bf9c21ac1ed551e1f2e528899028a17f673130"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d6bf96b583d77336cf6ca643d92d068a88414fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d6bf96b583d77336cf6ca643d92d068a88414fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d6bf96b583d77336cf6ca643d92d068a88414fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d6bf96b583d77336cf6ca643d92d068a88414fa/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3abfd4f3410af27060a11b8adaa9836d5a77eae1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3abfd4f3410af27060a11b8adaa9836d5a77eae1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3abfd4f3410af27060a11b8adaa9836d5a77eae1"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "d0c9f2970e29027d1af4be6837651c89f6f9aaca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d6bf96b583d77336cf6ca643d92d068a88414fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d6bf96b583d77336cf6ca643d92d068a88414fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4d6bf96b583d77336cf6ca643d92d068a88414fa", "patch": "@@ -1,3 +1,9 @@\n+2020-02-21  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/93845\n+\t* tree-sra.c (verify_sra_access_forest): Only test access size of\n+\tscalar types.\n+\n 2020-02-21  Andrew Stubbs  <ams@codesourcery.com>\n \n \t* config/gcn/gcn.c (gcn_hard_regno_mode_ok): Align VGPR pairs."}, {"sha": "ad4f43529daacbc898d1667794ccaf5e6e6d7874", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d6bf96b583d77336cf6ca643d92d068a88414fa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d6bf96b583d77336cf6ca643d92d068a88414fa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4d6bf96b583d77336cf6ca643d92d068a88414fa", "patch": "@@ -1,3 +1,8 @@\n+2020-02-21  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/93845\n+\t* g++.dg/tree-ssa/pr93845.C: New test.\n+\n 2020-02-21  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gcc.target/aarch64/sve/rsqrt_1.c: New test."}, {"sha": "72e473fffcde332d45a2ece35adc085ee619539c", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr93845.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d6bf96b583d77336cf6ca643d92d068a88414fa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr93845.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d6bf96b583d77336cf6ca643d92d068a88414fa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr93845.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr93845.C?ref=4d6bf96b583d77336cf6ca643d92d068a88414fa", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1\" } */\n+\n+struct g;\n+struct h {\n+  g *operator->();\n+};\n+class i {\n+  void *a;\n+  int b;\n+\n+public:\n+  template <typename f> f j() { return *static_cast<f *>(this); }\n+};\n+struct k : i {};\n+struct l : k {};\n+struct m {\n+  i n();\n+  i o(l, l, int);\n+};\n+struct g {\n+  void m_fn4(k);\n+};\n+h a;\n+i b;\n+i m::n() {\n+  l c, d, e = o(d, c, 0).j<l>();\n+  a->m_fn4(e);\n+  return b;\n+}"}, {"sha": "5561ea6f65580f3c917f091449c50bed443afebe", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d6bf96b583d77336cf6ca643d92d068a88414fa/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d6bf96b583d77336cf6ca643d92d068a88414fa/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=4d6bf96b583d77336cf6ca643d92d068a88414fa", "patch": "@@ -2355,7 +2355,8 @@ verify_sra_access_forest (struct access *root)\n       gcc_assert (offset == access->offset);\n       gcc_assert (access->grp_unscalarizable_region\n \t\t  || size == max_size);\n-      gcc_assert (max_size == access->size);\n+      gcc_assert (!is_gimple_reg_type (access->type)\n+\t\t  || max_size == access->size);\n       gcc_assert (reverse == access->reverse);\n \n       if (access->first_child)"}]}