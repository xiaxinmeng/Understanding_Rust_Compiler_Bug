{"sha": "0f3f94375a989a45df3c315789f0fc62bbf39989", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGYzZjk0Mzc1YTk4OWE0NWRmM2MzMTU3ODlmMGZjNjJiYmYzOTk4OQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-06-07T07:30:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-06-07T07:30:47Z"}, "message": "re PR tree-optimization/71423 (wrong code at -Os and above on x86_64-linux-gnu)\n\n2016-06-07  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/71423\n\t* match.pd ((X | ~Y) -> Y <= X): Properly invert the comparison\n\tfor signed ops.\n\n\t* gcc.dg/torture/pr71423.c: New testcase.\n\nFrom-SVN: r237166", "tree": {"sha": "4acd58ee5cf0f663525e480405a65346172abaf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4acd58ee5cf0f663525e480405a65346172abaf2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f3f94375a989a45df3c315789f0fc62bbf39989", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f3f94375a989a45df3c315789f0fc62bbf39989", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f3f94375a989a45df3c315789f0fc62bbf39989", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f3f94375a989a45df3c315789f0fc62bbf39989/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "df32c0b335a41c8ca522433d6df04c647cc6d495", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df32c0b335a41c8ca522433d6df04c647cc6d495", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df32c0b335a41c8ca522433d6df04c647cc6d495"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "878ee3a5f2ecbed5165295fa6547a9b071d1e245", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f3f94375a989a45df3c315789f0fc62bbf39989/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f3f94375a989a45df3c315789f0fc62bbf39989/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f3f94375a989a45df3c315789f0fc62bbf39989", "patch": "@@ -1,3 +1,9 @@\n+2016-06-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/71423\n+\t* match.pd ((X | ~Y) -> Y <= X): Properly invert the comparison\n+\tfor signed ops.\n+\n 2016-06-06  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* config/pa/pa.md (call): Generate indirect long calls to non-local"}, {"sha": "fe711159df9dd6456c61da67599345cb664c5ed6", "filename": "gcc/match.pd", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f3f94375a989a45df3c315789f0fc62bbf39989/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f3f94375a989a45df3c315789f0fc62bbf39989/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=0f3f94375a989a45df3c315789f0fc62bbf39989", "patch": "@@ -900,12 +900,16 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n   (ne (bit_and:c (bit_not @0) @1) integer_zerop)\n   (if (INTEGRAL_TYPE_P (TREE_TYPE (@1))\n        && TYPE_PRECISION (TREE_TYPE (@1)) == 1)\n-   (lt @0 @1)))\n+   (if (TYPE_UNSIGNED (TREE_TYPE (@1)))\n+    (lt @0 @1)\n+    (gt @0 @1))))\n (simplify\n   (ne (bit_ior:c (bit_not @0) @1) integer_zerop)\n   (if (INTEGRAL_TYPE_P (TREE_TYPE (@1))\n        && TYPE_PRECISION (TREE_TYPE (@1)) == 1)\n-   (le @0 @1)))\n+   (if (TYPE_UNSIGNED (TREE_TYPE (@1)))\n+    (le @0 @1)\n+    (ge @0 @1))))\n \n /* ~~x -> x */\n (simplify"}, {"sha": "52bb629e4e7787bd0774c40bcbab6a7c0c5ca54b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f3f94375a989a45df3c315789f0fc62bbf39989/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f3f94375a989a45df3c315789f0fc62bbf39989/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0f3f94375a989a45df3c315789f0fc62bbf39989", "patch": "@@ -1,3 +1,8 @@\n+2016-06-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/71423\n+\t* gcc.dg/torture/pr71423.c: New testcase.\n+\n 2016-06-07  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \tPR middle-end/71408"}, {"sha": "06a613f11fefee3788a08ff8f45ae159719a5afd", "filename": "gcc/testsuite/gcc.dg/torture/pr71423.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f3f94375a989a45df3c315789f0fc62bbf39989/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71423.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f3f94375a989a45df3c315789f0fc62bbf39989/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71423.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71423.c?ref=0f3f94375a989a45df3c315789f0fc62bbf39989", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do run } */\n+\n+struct S1\n+{\n+  int f1:1;\n+};\n+\n+volatile struct S1 b = { 0 };\n+\n+int\n+main ()\n+{\n+  char c = b.f1;\n+  b.f1 = 1; \n+\n+  if (b.f1 > -1 || c)\n+    __builtin_abort (); \n+\n+  return 0; \n+}"}]}