{"sha": "f4fce1837cb18401b714379b7b18ede89b9d4fe5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRmY2UxODM3Y2IxODQwMWI3MTQzNzliN2IxOGVkZTg5YjlkNGZlNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-08-09T14:37:12Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-08-09T14:37:12Z"}, "message": "PR c++/72849 - ICE with incomplete class.\n\n\t* constexpr.c (cxx_eval_constant_expression): Check\n\tCOMPLETE_TYPE_P before calling is_really_empty_class.\n\t* class.c (is_really_empty_class): Don't call complete_type.\n\nFrom-SVN: r239289", "tree": {"sha": "d4fe460d03cc97a614f2d409ef0bc31a0ae16c96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4fe460d03cc97a614f2d409ef0bc31a0ae16c96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4fce1837cb18401b714379b7b18ede89b9d4fe5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4fce1837cb18401b714379b7b18ede89b9d4fe5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4fce1837cb18401b714379b7b18ede89b9d4fe5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4fce1837cb18401b714379b7b18ede89b9d4fe5/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "810a3aa6bbdc5d2fd058f60683ea5c22c427eddd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/810a3aa6bbdc5d2fd058f60683ea5c22c427eddd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/810a3aa6bbdc5d2fd058f60683ea5c22c427eddd"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "ffb0b85e0038a987c068e4a513f8c25dc3077669", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4fce1837cb18401b714379b7b18ede89b9d4fe5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4fce1837cb18401b714379b7b18ede89b9d4fe5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f4fce1837cb18401b714379b7b18ede89b9d4fe5", "patch": "@@ -1,5 +1,10 @@\n 2016-08-09  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/72849\n+\t* constexpr.c (cxx_eval_constant_expression): Check\n+\tCOMPLETE_TYPE_P before calling is_really_empty_class.\n+\t* class.c (is_really_empty_class): Don't call complete_type.\n+\n \tPR c++/56701\n \t* typeck.c (cp_build_addr_expr_1): Remove special *this handling.\n "}, {"sha": "8249d9342299a2eb8fcb602924b130325b49073b", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4fce1837cb18401b714379b7b18ede89b9d4fe5/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4fce1837cb18401b714379b7b18ede89b9d4fe5/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=f4fce1837cb18401b714379b7b18ede89b9d4fe5", "patch": "@@ -8419,7 +8419,7 @@ is_really_empty_class (tree type)\n \n       /* CLASSTYPE_EMPTY_P isn't set properly until the class is actually laid\n \t out, but we'd like to be able to check this before then.  */\n-      if (COMPLETE_TYPE_P (complete_type (type)) && is_empty_class (type))\n+      if (COMPLETE_TYPE_P (type) && is_empty_class (type))\n \treturn true;\n \n       for (binfo = TYPE_BINFO (type), i = 0;"}, {"sha": "20c870eafbd2caa5130b022dbc2bdec23ed3462d", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4fce1837cb18401b714379b7b18ede89b9d4fe5/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4fce1837cb18401b714379b7b18ede89b9d4fe5/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=f4fce1837cb18401b714379b7b18ede89b9d4fe5", "patch": "@@ -3699,7 +3699,8 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n \t CONST_DECL for aggregate constants.  */\n       if (lval)\n \treturn t;\n-      if (is_really_empty_class (TREE_TYPE (t)))\n+      if (COMPLETE_TYPE_P (TREE_TYPE (t))\n+\t  && is_really_empty_class (TREE_TYPE (t)))\n \t{\n \t  /* If the class is empty, we aren't actually loading anything.  */\n \t  r = build_constructor (TREE_TYPE (t), NULL);"}, {"sha": "80b3e7bf8bf0f606c9fa091c6238b2e483fce2a9", "filename": "gcc/testsuite/g++.dg/template/incomplete7.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4fce1837cb18401b714379b7b18ede89b9d4fe5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4fce1837cb18401b714379b7b18ede89b9d4fe5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete7.C?ref=f4fce1837cb18401b714379b7b18ede89b9d4fe5", "patch": "@@ -0,0 +1,4 @@\n+// PR c++/72849\n+\n+extern struct Foo a;\n+template <typename> void fn1() { a; }"}]}