{"sha": "f6a874ac425769d67bd9a0a0cf66719d7ae1bef7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZhODc0YWM0MjU3NjlkNjdiZDlhMGEwY2Y2NjcxOWQ3YWUxYmVmNw==", "commit": {"author": {"name": "James E Wilson", "email": "wilson@specifixinc.com", "date": "2004-07-13T02:21:30Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2004-07-13T02:21:30Z"}, "message": "Fix NM/AR propagation from toplevel for recursive makes.\n\n* Makefile.in (AR): Use @AR@ not ar.\n(NM): New.\n(AR_FOR_TARGET): Use $(AR) not ar for native.\n(NM_FOR_TARGET): Use $(NM) not nm for native.\n* configure.ac: Add AC_CHECK_PROG calls for NM and AR.\n* configure: Regenerate.\n\nFrom-SVN: r84600", "tree": {"sha": "12fc7238632addf198d0d2797762a9de93153f28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12fc7238632addf198d0d2797762a9de93153f28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6a874ac425769d67bd9a0a0cf66719d7ae1bef7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6a874ac425769d67bd9a0a0cf66719d7ae1bef7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6a874ac425769d67bd9a0a0cf66719d7ae1bef7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6a874ac425769d67bd9a0a0cf66719d7ae1bef7/comments", "author": null, "committer": null, "parents": [{"sha": "d7ae4c28e00b8aeab7f0e67a96ec7ac342fbb9b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7ae4c28e00b8aeab7f0e67a96ec7ac342fbb9b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7ae4c28e00b8aeab7f0e67a96ec7ac342fbb9b2"}], "stats": {"total": 120, "additions": 116, "deletions": 4}, "files": [{"sha": "f512126a2db8ae622aa6ef0e598b119fec851eef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6a874ac425769d67bd9a0a0cf66719d7ae1bef7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6a874ac425769d67bd9a0a0cf66719d7ae1bef7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6a874ac425769d67bd9a0a0cf66719d7ae1bef7", "patch": "@@ -1,3 +1,12 @@\n+2004-07-12  James E Wilson  <wilson@specifixinc.com>\n+\n+\t* Makefile.in (AR): Use @AR@ not ar.\n+\t(NM): New.\n+\t(AR_FOR_TARGET): Use $(AR) not ar for native.\n+\t(NM_FOR_TARGET): Use $(NM) not nm for native.\n+\t* configure.ac: Add AC_CHECK_PROG calls for NM and AR.\n+\t* configure: Regenerate.\n+\t\n 2004-07-12  David S. Miller  <davem@nuts.davemloft.net>\n \n \t* config/sparc/sparc.md (ashlsi3): Eliminate const 1"}, {"sha": "b9c0619ada538ca9b517f6565c340352c2b91f36", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6a874ac425769d67bd9a0a0cf66719d7ae1bef7/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6a874ac425769d67bd9a0a0cf66719d7ae1bef7/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=f6a874ac425769d67bd9a0a0cf66719d7ae1bef7", "patch": "@@ -221,8 +221,9 @@ BISON = @BISON@\n BISONFLAGS =\n FLEX = @FLEX@\n FLEXFLAGS =\n-AR = ar\n+AR = @AR@\n AR_FLAGS = rc\n+NM = @NM@\n RANLIB = @RANLIB@\n RANLIB_FLAGS = @ranlib_flags@\n \n@@ -326,7 +327,7 @@ AR_FOR_TARGET := $(shell \\\n     echo $(objdir)/../binutils/ar ; \\\n   else \\\n     if [ \"$(host)\" = \"$(target)\" ] ; then \\\n-      echo ar; \\\n+      echo $(AR); \\\n     else \\\n        t='$(program_transform_name)'; echo ar | sed -e $$t ; \\\n     fi; \\\n@@ -351,7 +352,7 @@ NM_FOR_TARGET := $(shell \\\n     echo $(objdir)/../binutils/nm-new ; \\\n   else \\\n     if [ \"$(host)\" = \"$(target)\" ] ; then \\\n-      echo nm; \\\n+      echo $(NM); \\\n     else \\\n        t='$(program_transform_name)'; echo nm | sed -e $$t ; \\\n     fi; \\"}, {"sha": "5bcc13a9d859dbed82abc14a448c9abc0dc58596", "filename": "gcc/configure", "status": "modified", "additions": 88, "deletions": 1, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6a874ac425769d67bd9a0a0cf66719d7ae1bef7/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6a874ac425769d67bd9a0a0cf66719d7ae1bef7/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=f6a874ac425769d67bd9a0a0cf66719d7ae1bef7", "patch": "@@ -309,7 +309,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os build_subdir host_subdir target_subdir GENINSRC CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT NO_MINUS_C_MINUS_O OUTPUT_OPTION CPP strict1_warn warn_cflags WERROR nocommon_flag TREEBROWSER EGREP valgrind_path valgrind_path_defines valgrind_command coverage_flags enable_multilib enable_shared TARGET_SYSTEM_ROOT TARGET_SYSTEM_ROOT_DEFINE CROSS_SYSTEM_HEADER_DIR onestep SET_MAKE AWK LN_S LN RANLIB ac_ct_RANLIB ranlib_flags INSTALL INSTALL_PROGRAM INSTALL_DATA make_compare_target have_mktemp_command MAKEINFO BUILD_INFO GENERATED_MANPAGES FLEX BISON stage1_cflags COLLECT2_LIBS GNAT_LIBEXC LDEXP_LIB TARGET_GETGROUPS_T LIBICONV LIBICONV_DEP manext objext gthread_flags extra_modes_file FORBUILD PACKAGE VERSION USE_NLS LIBINTL LIBINTL_DEP INCINTL XGETTEXT GMSGFMT POSUB CATALOGS CROSS ALL SYSTEM_HEADER_DIR inhibit_libc BUILD_PREFIX BUILD_PREFIX_1 CC_FOR_BUILD BUILD_CFLAGS STMP_FIXINC STMP_FIXPROTO collect2 libgcc_visibility GGC zlibdir zlibinc MAINT ANDER BANSHEEINC BANSHEELIB gcc_tooldir dollar slibdir objdir subdirs srcdir all_boot_languages all_compilers all_gtfiles all_gtfiles_files_langs all_gtfiles_files_files all_lang_makefrags all_lang_makefiles all_languages all_stagestuff build_exeext build_install_headers_dir build_xm_file_list build_xm_include_list build_xm_defines check_languages cc_set_by_configure quoted_cc_set_by_configure cpp_install_dir xmake_file tmake_file extra_gcc_objs extra_headers_list extra_objs extra_parts extra_passes extra_programs float_h_file gcc_config_arguments gcc_gxx_include_dir libstdcxx_incdir gcc_version gcc_version_full gcc_version_trigger host_exeext host_xm_file_list host_xm_include_list host_xm_defines out_host_hook_obj install lang_opt_files lang_specs_files lang_tree_files local_prefix md_file objc_boehm_gc out_file out_object_file stage_prefix_set_by_configure quoted_stage_prefix_set_by_configure symbolic_link thread_file tm_file_list tm_include_list tm_defines tm_p_file_list tm_p_include_list xm_file_list xm_include_list xm_defines target_noncanonical c_target_objs cxx_target_objs target_cpu_default GMPLIBS GMPINC LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os build_subdir host_subdir target_subdir GENINSRC CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT NO_MINUS_C_MINUS_O OUTPUT_OPTION CPP strict1_warn warn_cflags WERROR nocommon_flag TREEBROWSER EGREP valgrind_path valgrind_path_defines valgrind_command coverage_flags enable_multilib enable_shared TARGET_SYSTEM_ROOT TARGET_SYSTEM_ROOT_DEFINE CROSS_SYSTEM_HEADER_DIR onestep SET_MAKE AWK LN_S LN RANLIB ac_ct_RANLIB ranlib_flags INSTALL INSTALL_PROGRAM INSTALL_DATA make_compare_target have_mktemp_command MAKEINFO BUILD_INFO GENERATED_MANPAGES FLEX BISON NM AR stage1_cflags COLLECT2_LIBS GNAT_LIBEXC LDEXP_LIB TARGET_GETGROUPS_T LIBICONV LIBICONV_DEP manext objext gthread_flags extra_modes_file FORBUILD PACKAGE VERSION USE_NLS LIBINTL LIBINTL_DEP INCINTL XGETTEXT GMSGFMT POSUB CATALOGS CROSS ALL SYSTEM_HEADER_DIR inhibit_libc BUILD_PREFIX BUILD_PREFIX_1 CC_FOR_BUILD BUILD_CFLAGS STMP_FIXINC STMP_FIXPROTO collect2 libgcc_visibility GGC zlibdir zlibinc MAINT ANDER BANSHEEINC BANSHEELIB gcc_tooldir dollar slibdir objdir subdirs srcdir all_boot_languages all_compilers all_gtfiles all_gtfiles_files_langs all_gtfiles_files_files all_lang_makefrags all_lang_makefiles all_languages all_stagestuff build_exeext build_install_headers_dir build_xm_file_list build_xm_include_list build_xm_defines check_languages cc_set_by_configure quoted_cc_set_by_configure cpp_install_dir xmake_file tmake_file extra_gcc_objs extra_headers_list extra_objs extra_parts extra_passes extra_programs float_h_file gcc_config_arguments gcc_gxx_include_dir libstdcxx_incdir gcc_version gcc_version_full gcc_version_trigger host_exeext host_xm_file_list host_xm_include_list host_xm_defines out_host_hook_obj install lang_opt_files lang_specs_files lang_tree_files local_prefix md_file objc_boehm_gc out_file out_object_file stage_prefix_set_by_configure quoted_stage_prefix_set_by_configure symbolic_link thread_file tm_file_list tm_include_list tm_defines tm_p_file_list tm_p_include_list xm_file_list xm_include_list xm_defines target_noncanonical c_target_objs cxx_target_objs target_cpu_default GMPLIBS GMPINC LIBOBJS LTLIBOBJS'\n ac_subst_files='language_hooks'\n \n # Initialize some variables set by options.\n@@ -5372,6 +5372,91 @@ fi\n \n fi\n \n+# NM\n+if test x${build} = x${host} && test -f $srcdir/../binutils/nm.c; then\n+  NM='$(objdir)/../binutils/nm-new'\n+else\n+  # Extract the first word of \"nm\", so it can be a program name with args.\n+set dummy nm; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_NM+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  if test -n \"$NM\"; then\n+  ac_cv_prog_NM=\"$NM\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_NM=\"nm\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n+  test -z \"$ac_cv_prog_NM\" && ac_cv_prog_NM=\"${CONFIG_SHELL-/bin/sh} ${srcdir}/../missing nm\"\n+fi\n+fi\n+NM=$ac_cv_prog_NM\n+if test -n \"$NM\"; then\n+  echo \"$as_me:$LINENO: result: $NM\" >&5\n+echo \"${ECHO_T}$NM\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+fi\n+\n+# AR\n+if test x${build} = x${host} && test -f $srcdir/../binutils/ar.c; then\n+  AR='$(objdir)/../binutils/ar'\n+else\n+  # Extract the first word of \"ar\", so it can be a program name with args.\n+set dummy ar; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_AR+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  if test -n \"$AR\"; then\n+  ac_cv_prog_AR=\"$AR\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_AR=\"ar\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n+  test -z \"$ac_cv_prog_AR\" && ac_cv_prog_AR=\"${CONFIG_SHELL-/bin/sh} ${srcdir}/../missing ar\"\n+fi\n+fi\n+AR=$ac_cv_prog_AR\n+if test -n \"$AR\"; then\n+  echo \"$as_me:$LINENO: result: $AR\" >&5\n+echo \"${ECHO_T}$AR\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+fi\n+\n+\n # --------------------\n # Checks for C headers\n # --------------------\n@@ -12898,6 +12983,8 @@ s,@BUILD_INFO@,$BUILD_INFO,;t t\n s,@GENERATED_MANPAGES@,$GENERATED_MANPAGES,;t t\n s,@FLEX@,$FLEX,;t t\n s,@BISON@,$BISON,;t t\n+s,@NM@,$NM,;t t\n+s,@AR@,$AR,;t t\n s,@stage1_cflags@,$stage1_cflags,;t t\n s,@COLLECT2_LIBS@,$COLLECT2_LIBS,;t t\n s,@GNAT_LIBEXC@,$GNAT_LIBEXC,;t t"}, {"sha": "7a2fbb7b05558ad62f14b1f7bedc1d3132766aa7", "filename": "gcc/configure.ac", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6a874ac425769d67bd9a0a0cf66719d7ae1bef7/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6a874ac425769d67bd9a0a0cf66719d7ae1bef7/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=f6a874ac425769d67bd9a0a0cf66719d7ae1bef7", "patch": "@@ -805,6 +805,21 @@ else\n   AC_CHECK_PROG(BISON, bison, bison, ${CONFIG_SHELL-/bin/sh} ${srcdir}/../missing bison)\n fi\n \n+# NM\n+if test x${build} = x${host} && test -f $srcdir/../binutils/nm.c; then\n+  NM='$(objdir)/../binutils/nm-new'\n+else\n+  AC_CHECK_PROG(NM, nm, nm, ${CONFIG_SHELL-/bin/sh} ${srcdir}/../missing nm)\n+fi\n+\n+# AR\n+if test x${build} = x${host} && test -f $srcdir/../binutils/ar.c; then\n+  AR='$(objdir)/../binutils/ar'\n+else\n+  AC_CHECK_PROG(AR, ar, ar, ${CONFIG_SHELL-/bin/sh} ${srcdir}/../missing ar)\n+fi\n+\n+\n # --------------------\n # Checks for C headers\n # --------------------"}]}