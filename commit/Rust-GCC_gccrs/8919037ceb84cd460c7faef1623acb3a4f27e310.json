{"sha": "8919037ceb84cd460c7faef1623acb3a4f27e310", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODkxOTAzN2NlYjg0Y2Q0NjBjN2ZhZWYxNjIzYWNiM2E0ZjI3ZTMxMA==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1995-02-06T02:55:49Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1995-02-06T02:55:49Z"}, "message": "(globally): Use GEN_INT.\n\n(emit_move_sequence): Use expand_inc instead of plus_constant\n(generates less rtl).\n\nFrom-SVN: r8872", "tree": {"sha": "ff417c00b39c2ff930e872b7ef299bed01a67e67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff417c00b39c2ff930e872b7ef299bed01a67e67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8919037ceb84cd460c7faef1623acb3a4f27e310", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8919037ceb84cd460c7faef1623acb3a4f27e310", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8919037ceb84cd460c7faef1623acb3a4f27e310", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8919037ceb84cd460c7faef1623acb3a4f27e310/comments", "author": null, "committer": null, "parents": [{"sha": "5dee33ac59489c42cd6998f6ef842f9de2e99b64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dee33ac59489c42cd6998f6ef842f9de2e99b64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dee33ac59489c42cd6998f6ef842f9de2e99b64"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "1b07661287c2ea25cbdbd645160eb8215771bb9e", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8919037ceb84cd460c7faef1623acb3a4f27e310/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8919037ceb84cd460c7faef1623acb3a4f27e310/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=8919037ceb84cd460c7faef1623acb3a4f27e310", "patch": "@@ -984,9 +984,7 @@ emit_move_sequence (operands, mode, scratch_reg)\n \n \t      /* Add back in the constant part if needed.  */\n \t      if (const_part != NULL)\n-\t\temit_insn (gen_rtx (SET, mode, operand0,\n-\t\t\t\t    plus_constant (operand0,\n-\t\t\t\t\t\t   XEXP (const_part, 0))));\n+\t\texpand_inc (operand0, const_part);\n \t      return 1;\n \t    }\n \t  return 1;\n@@ -1059,7 +1057,7 @@ singlemove_string (operands)\n       v.f = REAL_VALUE_TRUNCATE (SFmode, u.d);\n       i = v.i;\n \n-      operands[1] = gen_rtx (CONST_INT, VOIDmode, i);\n+      operands[1] = GEN_INT (i);\n \n       /* See if we can handle this constant in a single instruction.  */\n       if (cint_ok_for_move (INTVAL (operands[1])))\n@@ -1511,7 +1509,7 @@ output_block_move (operands, size_is_constant)\n \t  else\n \t    {\n \t      /* Store the last, partial word.  */\n-\t      operands[4] = gen_rtx (CONST_INT, VOIDmode, n_bytes % 4);\n+\t      operands[4] = GEN_INT (n_bytes % 4);\n \t      output_asm_insn (\"stbys,e %2,%4(0,%0)\", operands);\n \t    }\n \t  return \"\";\n@@ -1566,7 +1564,7 @@ output_block_move (operands, size_is_constant)\n     {\n       /* Size is compile-time determined, and also not\n \t very small (such small cases are handled above).  */\n-      operands[4] = gen_rtx (CONST_INT, VOIDmode, n_bytes - 4);\n+      operands[4] = GEN_INT (n_bytes - 4);\n       output_asm_insn (\"ldo %4(0),%2\", operands);\n     }\n   else\n@@ -1592,7 +1590,7 @@ output_block_move (operands, size_is_constant)\n \t{\n \t  /* Read the entire word of the source block tail.  */\n \t  output_asm_insn (\"ldw 0(0,%1),%3\", operands);\n-\t  operands[4] = gen_rtx (CONST_INT, VOIDmode, n_bytes % 4);\n+\t  operands[4] = GEN_INT (n_bytes % 4);\n \t  output_asm_insn (\"stbys,e %3,%4(0,%0)\", operands);\n \t}\n     }\n@@ -1758,7 +1756,7 @@ output_and (operands)\n \t  if (len == 0)\n \t    abort ();\n \n-\t  operands[2] = gen_rtx (CONST_INT, VOIDmode, len);\n+\t  operands[2] = GEN_INT (len);\n \t  return \"extru %1,31,%2,%0\";\n \t}\n       else\n@@ -1769,8 +1767,8 @@ output_and (operands)\n \t  p = 31 - ls0;\n \t  len = ls1 - ls0;\n \n-\t  operands[2] = gen_rtx (CONST_INT, VOIDmode, p);\n-\t  operands[3] = gen_rtx (CONST_INT, VOIDmode, len);\n+\t  operands[2] = GEN_INT (p);\n+\t  operands[3] = GEN_INT (len);\n \t  return \"depi 0,%2,%3,%0\";\n \t}\n     }\n@@ -1802,8 +1800,8 @@ output_ior (operands)\n   p = 31 - bs0;\n   len = bs1 - bs0;\n \n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, p);\n-  operands[3] = gen_rtx (CONST_INT, VOIDmode, len);\n+  operands[2] = GEN_INT (p);\n+  operands[3] = GEN_INT (len);\n   return \"depi -1,%2,%3,%0\";\n }\n \f"}]}