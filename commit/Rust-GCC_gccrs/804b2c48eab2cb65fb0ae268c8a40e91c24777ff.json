{"sha": "804b2c48eab2cb65fb0ae268c8a40e91c24777ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA0YjJjNDhlYWIyY2I2NWZiMGFlMjY4YzhhNDBlOTFjMjQ3NzdmZg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2003-02-24T00:53:21Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-02-24T00:53:21Z"}, "message": "natRuntime.cc (libraries_size, [...]): Removed.\n\n\t* java/lang/natRuntime.cc (libraries_size, libraries_count,\n\tlibraries): Removed.\n\t(add_library): Removed.\n\t(_load): Don't call add_library.\n\t(loadLibraryInternal): Likewise.\n\t(init): Likewise.\n\t(lookup_data): New struct.\n\t(find_symbol): New function.\n\t(_Jv_FindSymbolInExecutable): Use it.\n\nFrom-SVN: r63348", "tree": {"sha": "5ff41a5e7e8d4dc63e4c27b4f3c34ec1a78f122f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ff41a5e7e8d4dc63e4c27b4f3c34ec1a78f122f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/804b2c48eab2cb65fb0ae268c8a40e91c24777ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/804b2c48eab2cb65fb0ae268c8a40e91c24777ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/804b2c48eab2cb65fb0ae268c8a40e91c24777ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/804b2c48eab2cb65fb0ae268c8a40e91c24777ff/comments", "author": null, "committer": null, "parents": [{"sha": "6ecc7b8ffdbcc107a93eec87bd6c4c4fd48945a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ecc7b8ffdbcc107a93eec87bd6c4c4fd48945a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ecc7b8ffdbcc107a93eec87bd6c4c4fd48945a9"}], "stats": {"total": 71, "additions": 29, "deletions": 42}, "files": [{"sha": "ffd0c6e96b66dd9bd95ad5d194d6cd16a17b9323", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804b2c48eab2cb65fb0ae268c8a40e91c24777ff/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804b2c48eab2cb65fb0ae268c8a40e91c24777ff/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=804b2c48eab2cb65fb0ae268c8a40e91c24777ff", "patch": "@@ -1,3 +1,15 @@\n+2003-02-23  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/natRuntime.cc (libraries_size, libraries_count,\n+\tlibraries): Removed.\n+\t(add_library): Removed.\n+\t(_load): Don't call add_library.\n+\t(loadLibraryInternal): Likewise.\n+\t(init): Likewise.\n+\t(lookup_data): New struct.\n+\t(find_symbol): New function.\n+\t(_Jv_FindSymbolInExecutable): Use it.\n+\n 2002-02-21  Anthony Green  <green@redhat.com>\n \n \t* java/lang/Thread.java (Thread): New constructor taking stack"}, {"sha": "dee95114538b556f21d8a70acd0c54005f78b6d2", "filename": "libjava/java/lang/natRuntime.cc", "status": "modified", "additions": 17, "deletions": 42, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804b2c48eab2cb65fb0ae268c8a40e91c24777ff/libjava%2Fjava%2Flang%2FnatRuntime.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804b2c48eab2cb65fb0ae268c8a40e91c24777ff/libjava%2Fjava%2Flang%2FnatRuntime.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatRuntime.cc?ref=804b2c48eab2cb65fb0ae268c8a40e91c24777ff", "patch": "@@ -60,48 +60,28 @@ details.  */\n    AC_LTDL_PREOPEN to see if we do.  */\n extern const lt_dlsymlist lt_preloaded_symbols[1] = { { 0, 0 } };\n \n-// We keep track of all the libraries loaded by this application.  For\n-// now we use them to look up symbols for JNI.  `libraries_size' holds\n-// the total size of the buffer.  `libraries_count' is the number of\n-// items which are in use.\n-static int libraries_size;\n-static int libraries_count;\n-static lt_dlhandle *libraries;\n-\n-static void\n-add_library (lt_dlhandle lib)\n+struct lookup_data\n {\n-  if (libraries_count == libraries_size)\n-    {\n-      int ns = libraries_size * 2;\n-      if (ns == 0)\n-\tns = 10;\n-      lt_dlhandle *n = (lt_dlhandle *) _Jv_Malloc (ns * sizeof (lt_dlhandle));\n-      if (libraries)\n-\t{\n-\t  memcpy (n, libraries, libraries_size * sizeof (lt_dlhandle));\n-\t  _Jv_Free (libraries);\n-\t}\n-      libraries = n;\n-      libraries_size = ns;\n-      for (int i = libraries_count; i < libraries_size; ++i)\n-\tlibraries[i] = NULL;\n-    }\n+  const char *symname;\n+  void *result;\n+};\n \n-  libraries[libraries_count++] = lib;\n+static int\n+find_symbol (lt_dlhandle handle, lt_ptr_t data)\n+{\n+  lookup_data *ld = (lookup_data *) data;\n+  ld->result = lt_dlsym (handle, ld->symname);\n+  return ld->result != NULL;\n }\n \n void *\n _Jv_FindSymbolInExecutable (const char *symname)\n {\n-  for (int i = 0; i < libraries_count; ++i)\n-    {\n-      void *r = lt_dlsym (libraries[i], symname);\n-      if (r)\n-\treturn r;\n-    }\n-\n-  return NULL;\n+  lookup_data data;\n+  data.symname = symname;\n+  data.result = NULL;\n+  lt_dlforeach (find_symbol, (lt_ptr_t) &data);\n+  return data.result;\n }\n \n void\n@@ -237,8 +217,6 @@ java::lang::Runtime::_load (jstring path, jboolean do_search)\n       throw new UnsatisfiedLinkError (str);\n     }\n \n-  add_library (h);\n-\n   void *onload = lt_dlsym (h, \"JNI_OnLoad\");\n \n #ifdef WIN32\n@@ -289,8 +267,6 @@ java::lang::Runtime::loadLibraryInternal (jstring lib)\n   buf[total] = '\\0';\n   // FIXME: make sure path is absolute.\n   lt_dlhandle h = lt_dlopenext (buf);\n-  if (h != NULL)\n-    add_library (h);\n   return h != NULL;\n #else\n   return false;\n@@ -302,9 +278,8 @@ java::lang::Runtime::init (void)\n {\n #ifdef USE_LTDL\n   lt_dlinit ();\n-  lt_dlhandle self = lt_dlopen (NULL);\n-  if (self != NULL)\n-    add_library (self);\n+  // Make sure self is opened.\n+  lt_dlopen (NULL);\n #endif\n }\n "}]}