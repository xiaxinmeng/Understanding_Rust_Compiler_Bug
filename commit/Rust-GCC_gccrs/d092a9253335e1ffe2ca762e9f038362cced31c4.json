{"sha": "d092a9253335e1ffe2ca762e9f038362cced31c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA5MmE5MjUzMzM1ZTFmZmUyY2E3NjJlOWYwMzgzNjJjY2VkMzFjNA==", "commit": {"author": {"name": "Herman A.J. ten Brugge", "email": "Haj.Ten.Brugge@net.HCC.nl", "date": "2000-12-16T19:12:06Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-12-16T19:12:06Z"}, "message": "safe-ctype.h: Make code work on all targets and not just on targets where a char is 8 bits.\n\n        * safe-ctype.h: Make code work on all targets and not just on\n        targets where a char is 8 bits.\n\nFrom-SVN: r38312", "tree": {"sha": "e9da1c46e1b49a7f759c3b08d34889b5cebc65e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9da1c46e1b49a7f759c3b08d34889b5cebc65e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d092a9253335e1ffe2ca762e9f038362cced31c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d092a9253335e1ffe2ca762e9f038362cced31c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d092a9253335e1ffe2ca762e9f038362cced31c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d092a9253335e1ffe2ca762e9f038362cced31c4/comments", "author": null, "committer": null, "parents": [{"sha": "68c7dea8eda115ed3056df1f127e0fcd7f43a443", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68c7dea8eda115ed3056df1f127e0fcd7f43a443", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68c7dea8eda115ed3056df1f127e0fcd7f43a443"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "5ce8f1e187daa33f7df843e480afafcf261df5ea", "filename": "include/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d092a9253335e1ffe2ca762e9f038362cced31c4/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d092a9253335e1ffe2ca762e9f038362cced31c4/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=d092a9253335e1ffe2ca762e9f038362cced31c4", "patch": "@@ -1,3 +1,8 @@\n+2000-12-16  Herman A.J. ten Brugge  <Haj.Ten.Brugge@net.HCC.nl>\n+\n+\t* safe-ctype.h: Make code work on all targets and not just on\n+\ttargets where a char is 8 bits.\n+\n 2000-12-07  Zack Weinberg  <zack@wolery.stanford.edu>\n \n \t* safe-ctype.h: New file."}, {"sha": "d5fc649051a3c10ed62acfe0de16f4dc3be3d968", "filename": "include/safe-ctype.h", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d092a9253335e1ffe2ca762e9f038362cced31c4/include%2Fsafe-ctype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d092a9253335e1ffe2ca762e9f038362cced31c4/include%2Fsafe-ctype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fsafe-ctype.h?ref=d092a9253335e1ffe2ca762e9f038362cced31c4", "patch": "@@ -66,15 +66,10 @@ enum {\n   _sch_iscppsp  = _sch_isvsp|_sch_isnvsp\t/* isspace + \\0 */\n };\n \n-/* This code fundamentally assumes that a byte is 8 bits.  Test this\n-   at compile time.  */\n-\n-extern int a_byte_isnt_eight_bits[(unsigned char)256 == 0 ? 1 : -1];\n-\n /* Character classification.  */\n extern const unsigned short _sch_istable[256];\n \n-#define _sch_test(c, bit) (_sch_istable[(int)(unsigned char)(c)] & (bit))\n+#define _sch_test(c, bit) (_sch_istable[(c) & 0xff] & (bit))\n \n #define ISALPHA(c)  _sch_test(c, _sch_isalpha)\n #define ISALNUM(c)  _sch_test(c, _sch_isalnum)\n@@ -98,8 +93,8 @@ extern const unsigned short _sch_istable[256];\n /* Character transformation.  */\n extern const unsigned char  _sch_toupper[256];\n extern const unsigned char  _sch_tolower[256];\n-#define TOUPPER(c) _sch_toupper[(int)(unsigned char)(c)]\n-#define TOLOWER(c) _sch_tolower[(int)(unsigned char)(c)]\n+#define TOUPPER(c) _sch_toupper[(c) & 0xff]\n+#define TOLOWER(c) _sch_tolower[(c) & 0xff]\n \n #endif /* no ctype.h */\n #endif /* SAFE_CTYPE_H */"}]}