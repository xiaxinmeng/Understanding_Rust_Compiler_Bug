{"sha": "5d972e66ba61be501c98be1c6aa565d42c1737e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ5NzJlNjZiYTYxYmU1MDFjOThiZTFjNmFhNTY1ZDQyYzE3MzdlNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-02-23T12:38:39Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-02-23T12:38:39Z"}, "message": "re PR c/79684 (Conditional jump or move depends on uninitialised value in GIMPLE FE)\n\n2017-02-23  Richard Biener  <rguenther@suse.de>\n\n\tPR c/79684\n\t* gimple-parser.c (c_parser_gimple_statement): Use set_error\n\tto initialize c_exprs to return.\n\t(c_parser_gimple_binary_expression): Likewise.\n\t(c_parser_gimple_unary_expression): Likewise.\n\t(c_parser_gimple_postfix_expression): Likewise.\n\nFrom-SVN: r245681", "tree": {"sha": "eb4ff64f1a5bc2b51736f879d007e709b701437d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb4ff64f1a5bc2b51736f879d007e709b701437d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d972e66ba61be501c98be1c6aa565d42c1737e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d972e66ba61be501c98be1c6aa565d42c1737e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d972e66ba61be501c98be1c6aa565d42c1737e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d972e66ba61be501c98be1c6aa565d42c1737e5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f3ffa342ea53803bf276207aab5b0b6b1c420b45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3ffa342ea53803bf276207aab5b0b6b1c420b45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3ffa342ea53803bf276207aab5b0b6b1c420b45"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "70cfdc2098051c94bf5ac057189f37e24498d1ad", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d972e66ba61be501c98be1c6aa565d42c1737e5/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d972e66ba61be501c98be1c6aa565d42c1737e5/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=5d972e66ba61be501c98be1c6aa565d42c1737e5", "patch": "@@ -1,3 +1,12 @@\n+2017-02-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR c/79684\n+\t* gimple-parser.c (c_parser_gimple_statement): Use set_error\n+\tto initialize c_exprs to return.\n+\t(c_parser_gimple_binary_expression): Likewise.\n+\t(c_parser_gimple_unary_expression): Likewise.\n+\t(c_parser_gimple_postfix_expression): Likewise.\n+\n 2017-02-22  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/79662"}, {"sha": "0d6384b55c23edf7b987e55521ef1d61963e6589", "filename": "gcc/c/gimple-parser.c", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d972e66ba61be501c98be1c6aa565d42c1737e5/gcc%2Fc%2Fgimple-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d972e66ba61be501c98be1c6aa565d42c1737e5/gcc%2Fc%2Fgimple-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fgimple-parser.c?ref=5d972e66ba61be501c98be1c6aa565d42c1737e5", "patch": "@@ -270,7 +270,7 @@ c_parser_gimple_statement (c_parser *parser, gimple_seq *seq)\n \n   lhs = c_parser_gimple_unary_expression (parser);\n   loc = EXPR_LOCATION (lhs.value);\n-  rhs.value = error_mark_node;\n+  rhs.set_error ();\n \n   /* GIMPLE call statement without LHS.  */\n   if (c_parser_next_token_is (parser, CPP_SEMICOLON)\n@@ -455,7 +455,7 @@ c_parser_gimple_binary_expression (c_parser *parser)\n   /* Location of the binary operator.  */\n   struct c_expr ret, lhs, rhs;\n   enum tree_code code = ERROR_MARK;\n-  ret.value = error_mark_node;\n+  ret.set_error ();\n   lhs = c_parser_gimple_postfix_expression (parser);\n   if (c_parser_error (parser))\n     return ret;\n@@ -553,9 +553,7 @@ c_parser_gimple_unary_expression (c_parser *parser)\n   struct c_expr ret, op;\n   location_t op_loc = c_parser_peek_token (parser)->location;\n   location_t finish;\n-  ret.original_code = ERROR_MARK;\n-  ret.original_type = NULL;\n-  ret.value = error_mark_node;\n+  ret.set_error ();\n   switch (c_parser_peek_token (parser)->type)\n     {\n     case CPP_AND:\n@@ -723,11 +721,10 @@ c_parser_parse_ssa_name (c_parser *parser,\n static struct c_expr\n c_parser_gimple_postfix_expression (c_parser *parser)\n {\n-  struct c_expr expr;\n   location_t loc = c_parser_peek_token (parser)->location;\n   source_range tok_range = c_parser_peek_token (parser)->get_range ();\n-  expr.original_code = ERROR_MARK;\n-  expr.original_type = NULL;\n+  struct c_expr expr;\n+  expr.set_error ();\n   switch (c_parser_peek_token (parser)->type)\n     {\n     case CPP_NUMBER:"}]}