{"sha": "71e24b060145e2eed070a52bdd0a13e37f60db77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFlMjRiMDYwMTQ1ZTJlZWQwNzBhNTJiZGQwYTEzZTM3ZjYwZGI3Nw==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-02-24T00:16:26Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-02-24T00:16:26Z"}, "message": "Daily bump.", "tree": {"sha": "ca585ed3f1a886abf306470737947f583a674a87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca585ed3f1a886abf306470737947f583a674a87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71e24b060145e2eed070a52bdd0a13e37f60db77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71e24b060145e2eed070a52bdd0a13e37f60db77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71e24b060145e2eed070a52bdd0a13e37f60db77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71e24b060145e2eed070a52bdd0a13e37f60db77/comments", "author": null, "committer": null, "parents": [{"sha": "77ef995c1fbcab76a2a69b9f4700bcfd005d8e62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77ef995c1fbcab76a2a69b9f4700bcfd005d8e62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77ef995c1fbcab76a2a69b9f4700bcfd005d8e62"}], "stats": {"total": 190, "additions": 189, "deletions": 1}, "files": [{"sha": "b649f9b28f157c361badbd6002317db6de3c26f9", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71e24b060145e2eed070a52bdd0a13e37f60db77/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71e24b060145e2eed070a52bdd0a13e37f60db77/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=71e24b060145e2eed070a52bdd0a13e37f60db77", "patch": "@@ -1,3 +1,8 @@\n+2021-02-23  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* config.guess: Import latest upstream.\n+\t* config.sub: Import latest upstream.\n+\n 2021-01-25  Martin Liska  <mliska@suse.cz>\n \n \tPR gcov-profile/98739"}, {"sha": "1262fa5c864aca7eef73eeea6dfac847d5159a05", "filename": "gcc/ChangeLog", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71e24b060145e2eed070a52bdd0a13e37f60db77/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71e24b060145e2eed070a52bdd0a13e37f60db77/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=71e24b060145e2eed070a52bdd0a13e37f60db77", "patch": "@@ -1,3 +1,59 @@\n+2021-02-23  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\t* config/rs6000/mma.md (mma_assemble_pair): Rename from this...\n+\t(vsx_assemble_pair): ...to this.\n+\t(*mma_assemble_pair): Rename from this...\n+\t(*vsx_assemble_pair): ...to this.\n+\t(mma_disassemble_pair): Rename from this...\n+\t(vsx_disassemble_pair): ...to this.\n+\t(*mma_disassemble_pair): Rename from this...\n+\t(*vsx_disassemble_pair): ...to this.\n+\t* config/rs6000/rs6000-builtin.def (BU_MMA_V2, BU_MMA_V3,\n+\tBU_COMPAT): New macros.\n+\t(mma_assemble_pair): Rename from this...\n+\t(vsx_assemble_pair): ...to this.\n+\t(mma_disassemble_pair): Rename from this...\n+\t(vsx_disassemble_pair): ...to this.\n+\t(mma_assemble_pair): New compatibility built-in.\n+\t(mma_disassemble_pair): Likewise.\n+\t* config/rs6000/rs6000-call.c (struct builtin_compatibility): New.\n+\t(RS6000_BUILTIN_COMPAT): Define.\n+\t(bdesc_compat): New.\n+\t(mma_expand_builtin): Use VSX_BUILTIN_DISASSEMBLE_PAIR_INTERNAL.\n+\t(rs6000_gimple_fold_mma_builtin): Use MMA_BUILTIN_DISASSEMBLE_PAIR\n+\tand VSX_BUILTIN_ASSEMBLE_PAIR.\n+\t(rs6000_init_builtins): Register compatibility built-ins.\n+\t(mma_init_builtins): Use VSX_BUILTIN_ASSEMBLE_PAIR,\n+\tVSX_BUILTIN_ASSEMBLE_PAIR_INTERNAL, VSX_BUILTIN_DISASSEMBLE_PAIR and\n+\tVSX_BUILTIN_DISASSEMBLE_PAIR_INTERNAL.\n+\t* doc/extend.texi (__builtin_mma_assemble_pair): Rename from this...\n+\t(__builtin_vsx_assemble_pair): ...to this.\n+\t(__builtin_mma_disassemble_pair): Rename from this...\n+\t(__builtin_vsx_disassemble_pair): ...to this.\n+\n+2021-02-23  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/99168\n+\t* ipa-icf.c (sem_variable::merge): Do not merge 2 variables\n+\twith different alignment. That leads to an invalid red zone\n+\tsize allocated in runtime.\n+\n+2021-02-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/99204\n+\t* fold-const.c (fold_read_from_constant_string): Check that\n+\ttree_fits_uhwi_p (index) rather than just that index is INTEGER_CST.\n+\n+2021-02-23  Segher Boessenkool  <segher@kernel.crashing.org>\n+\t    Kewen Lin  <linkw@gcc.gnu.org>\n+\n+\t* config/rs6000/rs6000.md (*rotl<mode>3_insert_3): Renamed to...\n+\t(rotl<mode>3_insert_3): ...this.\n+\t(plus_ior_xor): New code_iterator.\n+\t(define_split for GPR rl*imi): New splitter.\n+\t* config/rs6000/vsx.md (vsx_init_v4si): Use gen_rotldi3_insert_3\n+\tfor integer merging.\n+\n 2021-02-22  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64-tuning-flags.def (cse_sve_vl_constants):"}, {"sha": "bfa0d089ea982ff7d3ae5bba73b5478c33aca56e", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71e24b060145e2eed070a52bdd0a13e37f60db77/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71e24b060145e2eed070a52bdd0a13e37f60db77/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=71e24b060145e2eed070a52bdd0a13e37f60db77", "patch": "@@ -1 +1 @@\n-20210223\n+20210224"}, {"sha": "ec49455777b75ea064f65912229e110a17fd755b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71e24b060145e2eed070a52bdd0a13e37f60db77/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71e24b060145e2eed070a52bdd0a13e37f60db77/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=71e24b060145e2eed070a52bdd0a13e37f60db77", "patch": "@@ -1,3 +1,21 @@\n+2021-02-23  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/99208\n+\t* decl.c (name_unnamed_type): Check DECL identity, not IDENTIFIER\n+\tidentity.\n+\n+2021-02-23  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/95468\n+\t* pt.c (tsubst_copy_and_build) <case BASELINK>: New case, copied\n+\tover from tsubst_copy.\n+\n+2021-02-23  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* pt.c (instantiation_dependent_expression_p): Check\n+\tprocessing_template_decl before calling\n+\tpotential_constant_expression.\n+\n 2021-02-22  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/99174"}, {"sha": "e280e1e6c625260775ab3ebe1d8df7bed224254e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71e24b060145e2eed070a52bdd0a13e37f60db77/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71e24b060145e2eed070a52bdd0a13e37f60db77/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=71e24b060145e2eed070a52bdd0a13e37f60db77", "patch": "@@ -1,3 +1,18 @@\n+2021-02-23  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/99124\n+\t* resolve.c (resolve_fl_procedure): Include class results in\n+\tthe test for F2018, C15100.\n+\t* trans-array.c (get_class_info_from_ss): Do not use the saved\n+\tdescriptor to obtain the class expression for variables. Use\n+\tgfc_get_class_from_expr instead.\n+\n+2021-02-23  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/99206\n+\t* simplify.c (gfc_simplify_reshape): Set string length for\n+\tcharacter arguments.\n+\n 2021-02-22  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/99171"}, {"sha": "be1d18673c4bf014447a69f53465dc5401a50c0d", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71e24b060145e2eed070a52bdd0a13e37f60db77/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71e24b060145e2eed070a52bdd0a13e37f60db77/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=71e24b060145e2eed070a52bdd0a13e37f60db77", "patch": "@@ -1,3 +1,7 @@\n+2021-02-23  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* sv.po: Update.\n+\n 2021-02-19  Joseph Myers  <joseph@codesourcery.com>\n \n \t* fr.po: Update."}, {"sha": "0c4b8245fa8286000c217664b27e329a29384345", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71e24b060145e2eed070a52bdd0a13e37f60db77/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71e24b060145e2eed070a52bdd0a13e37f60db77/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=71e24b060145e2eed070a52bdd0a13e37f60db77", "patch": "@@ -1,3 +1,61 @@\n+2021-02-23  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\t* gcc.target/powerpc/mma-builtin-4.c: Add tests for\n+\t__builtin_vsx_assemble_pair and __builtin_vsx_disassemble_pair.\n+\tAdd __has_builtin tests for built-ins.\n+\tUpdate expected instruction counts.\n+\n+2021-02-23  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/99074\n+\t* g++.dg/warn/Wnonnull11.C: New test.\n+\n+2021-02-23  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/99124\n+\t* gfortran.dg/class_defined_operator_2.f03 : New test.\n+\t* gfortran.dg/elemental_result_2.f90 : New test.\n+\t* gfortran.dg/class_assign_4.f90: Correct the non-conforming\n+\telemental function with an allocatable result with an operator\n+\tinterface with array dummies and result.\n+\n+2021-02-23  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/99206\n+\t* gfortran.dg/reshape_zerosize_4.f90: New test.\n+\n+2021-02-23  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/99208\n+\t* g++.dg/modules/pr99208_a.C: New.\n+\t* g++.dg/modules/pr99208_b.C: New.\n+\n+2021-02-23  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/99168\n+\t* c-c++-common/asan/pr99168.c: New test.\n+\n+2021-02-23  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/95468\n+\t* g++.dg/template/non-dependent15.C: New test.\n+\n+2021-02-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/99204\n+\t* gfortran.dg/pr99204.f90: New test.\n+\n+2021-02-23  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\t* gcc.target/powerpc/vec-init-10.c: New test.\n+\n+2021-02-23  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* g++.dg/warn/Wplacement-new-size-1.C,\n+\tg++.dg/warn/Wplacement-new-size-2.C,\n+\tg++.dg/warn/Wplacement-new-size-6.C: Adjust for\n+\tdefault_packed targets.\n+\n 2021-02-22  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/99196"}, {"sha": "7608861cffa669fa8eefd292fee17dcbf763593a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71e24b060145e2eed070a52bdd0a13e37f60db77/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71e24b060145e2eed070a52bdd0a13e37f60db77/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=71e24b060145e2eed070a52bdd0a13e37f60db77", "patch": "@@ -1,3 +1,35 @@\n+2021-02-23  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/99074\n+\t* libsupc++/dyncast.cc (__dynamic_cast): Return null when\n+\tfirst argument is null.\n+\n+2021-02-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libstdc++/99181\n+\t* testsuite/21_strings/char_traits/requirements/char/99181.cc: New\n+\ttest.\n+\n+2021-02-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libstdc++/99181\n+\t* include/bits/char_traits.h (char_traits<char>::compare): For\n+\tconstexpr evaluation don't call\n+\t__gnu_cxx::char_traits<char_type>::compare but do the comparison loop\n+\tdirectly.\n+\n+2021-02-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libstdc++/97549\n+\t* include/pstl/parallel_backend_serial.h: Remove __pstl::__par_backend.\n+\n+2021-02-23  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR libstdc++/98384\n+\t* src/c++17/floating_to_chars.cc (get_ieee_repr): Extract\n+\tthe high- and low-order parts from an IBM long double value\n+\tin an endian-agnostic way.\n+\n 2021-02-19  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/atomic_wait.h (__thread_relax()): Call"}]}