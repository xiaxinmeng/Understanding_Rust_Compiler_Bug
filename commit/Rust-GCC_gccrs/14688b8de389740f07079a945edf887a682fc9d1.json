{"sha": "14688b8de389740f07079a945edf887a682fc9d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ2ODhiOGRlMzg5NzQwZjA3MDc5YTk0NWVkZjg4N2E2ODJmYzlkMQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-05-19T08:22:41Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-05-19T08:22:41Z"}, "message": "re PR fortran/90329 (Incompatibility between gfortran and C lapack calls)\n\n2019-05-19  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/90329\n\t* invoke.texi: Document -fbroken-callers.\n\t* lang.opt: Add -fbroken-callers.\n\t* trans-decl.c (create_function_arglist): Only set\n\tDECL_HIDDEN_STRING_LENGTH if flag_broken_callers is set.\n\nFrom-SVN: r271376", "tree": {"sha": "82fc78b1edd586b165fb22d31a16cbda45a475ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82fc78b1edd586b165fb22d31a16cbda45a475ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14688b8de389740f07079a945edf887a682fc9d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14688b8de389740f07079a945edf887a682fc9d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14688b8de389740f07079a945edf887a682fc9d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14688b8de389740f07079a945edf887a682fc9d1/comments", "author": null, "committer": null, "parents": [{"sha": "f12b0a62268cc6a1ef613e09c2b93109ac191f0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f12b0a62268cc6a1ef613e09c2b93109ac191f0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f12b0a62268cc6a1ef613e09c2b93109ac191f0e"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "a8e188c66247d35b9560962764f4e9efbd4d9270", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14688b8de389740f07079a945edf887a682fc9d1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14688b8de389740f07079a945edf887a682fc9d1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=14688b8de389740f07079a945edf887a682fc9d1", "patch": "@@ -1,3 +1,11 @@\n+2019-05-19  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/90329\n+\t* invoke.texi: Document -fbroken-callers.\n+\t* lang.opt: Add -fbroken-callers.\n+\t* trans-decl.c (create_function_arglist): Only set\n+\tDECL_HIDDEN_STRING_LENGTH if flag_broken_callers is set.\n+\n 2019-05-17  Thomas Schwinge  <thomas@codesourcery.com>\n \n \tPR fortran/89433"}, {"sha": "ec3b0405a078333a37b806efa581e134ccf9e63c", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14688b8de389740f07079a945edf887a682fc9d1/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14688b8de389740f07079a945edf887a682fc9d1/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=14688b8de389740f07079a945edf887a682fc9d1", "patch": "@@ -181,7 +181,7 @@ and warnings}.\n @item Code Generation Options\n @xref{Code Gen Options,,Options for code generation conventions}.\n @gccoptlist{-faggressive-function-elimination -fblas-matmul-limit=@var{n} @gol\n--fbounds-check -fcheck-array-temporaries @gol\n+-fbounds-check -fbroken-callers -fcheck-array-temporaries @gol\n -fcheck=@var{<all|array-temps|bounds|do|mem|pointer|recursion>} @gol\n -fcoarray=@var{<none|single|lib>} -fexternal-blas -ff2c\n -ffrontend-loop-interchange @gol\n@@ -1617,6 +1617,34 @@ warnings for generated array temporaries.\n @c Note: This option is also referred in gcc's manpage\n Deprecated alias for @option{-fcheck=bounds}.\n \n+@item -fbroken-callers\n+@opindex @code{broken-callers}\n+Some C interfaces to Fortran codes violate the gfortran ABI by\n+omitting the hidden character length arguments as described in\n+@xref{Argument passing conventions}.  This can lead to crashes\n+because pushing arguments for tail calls can overflow the stack.\n+\n+To provide a workaround for existing binary packages, this option\n+disables tail call optimization for gfortran procedures with character\n+arguments.\n+\n+Using this option can lead to problems including crashes due to\n+insufficient stack space.\n+\n+It is @emph{very strongly} recommended to fix the code in question.\n+The @option{-fc-prototypes-external} option can be used to generate\n+prototypes which conform to gfortran's ABI, for inclusion in the\n+source code.\n+\n+Support for this option will likely be withdrawn in a future release\n+of gfortran.\n+\n+The negative form, @option{-fno-broken-callers}, can be used to\n+disable this option.\n+\n+Default is currently @option{-fbroken-callers}, this will change\n+in future releases.\n+\n @item -fcheck-array-temporaries\n @opindex @code{fcheck-array-temporaries}\n Deprecated alias for @option{-fcheck=array-temps}."}, {"sha": "80edc1171d712d618efd05059e7a194660430c74", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14688b8de389740f07079a945edf887a682fc9d1/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14688b8de389740f07079a945edf887a682fc9d1/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=14688b8de389740f07079a945edf887a682fc9d1", "patch": "@@ -397,6 +397,10 @@ fblas-matmul-limit=\n Fortran RejectNegative Joined UInteger Var(flag_blas_matmul_limit) Init(30)\n -fblas-matmul-limit=<n>\tSize of the smallest matrix for which matmul will use BLAS.\n \n+fbroken-callers\n+Fortran Var(flag_broken_callers) Init(1)\n+Disallow tail call optimization when a calling routine may have omitted character lenghts.\n+\n fcheck-array-temporaries\n Fortran\n Produce a warning at runtime if a array temporary has been created for a procedure argument."}, {"sha": "7cf1ec5428910425808d63c502ccac060600e9f0", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14688b8de389740f07079a945edf887a682fc9d1/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14688b8de389740f07079a945edf887a682fc9d1/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=14688b8de389740f07079a945edf887a682fc9d1", "patch": "@@ -2516,7 +2516,11 @@ create_function_arglist (gfc_symbol * sym)\n \t  DECL_ARG_TYPE (length) = len_type;\n \t  TREE_READONLY (length) = 1;\n \t  gfc_finish_decl (length);\n-\t  if (f->sym->ts.u.cl\n+\n+\t  /* Marking the length DECL_HIDDEN_STRING_LENGTH will lead\n+\t     to tail calls being disabled.  Only do that if we\n+\t     potentially have broken callers.  */\n+\t  if (flag_broken_callers && f->sym->ts.u.cl\n \t      && f->sym->ts.u.cl->length\n \t      && f->sym->ts.u.cl->length->expr_type == EXPR_CONSTANT)\n \t    DECL_HIDDEN_STRING_LENGTH (length) = 1;"}]}