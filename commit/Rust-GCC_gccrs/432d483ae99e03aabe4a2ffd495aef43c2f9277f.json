{"sha": "432d483ae99e03aabe4a2ffd495aef43c2f9277f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDMyZDQ4M2FlOTllMDNhYWJlNGEyZmZkNDk1YWVmNDNjMmY5Mjc3Zg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-25T18:35:56Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-25T18:35:56Z"}, "message": "config/pa: Use rtx_insn\n\ngcc/\n\t* config/pa/pa-protos.h (pa_output_call): Strengthen first param\n\tfrom rtx to rtx_insn *.\n\t(pa_output_indirect_call): Likewise.\n\t(pa_adjust_insn_length): Likewise.\n\t(pa_attr_length_millicode_call): Likewise.\n\t(pa_attr_length_call): Likewise.\n\t(pa_attr_length_indirect_call): Likewise.\n\n\t* config/pa/pa.c (pa_adjust_insn_length): Likewise for param\n\t\"insn\".\n\t(pa_attr_length_millicode_call): Likewise.\n\t(pa_attr_length_call): Likewise.\n\t(pa_output_call): Likewise.\n\t(pa_attr_length_indirect_call): Likewise.\n\t(pa_output_indirect_call): Likewise.\n\nFrom-SVN: r214452", "tree": {"sha": "58066a8621041e8bc70f293247ea1ec3ca4b8cee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58066a8621041e8bc70f293247ea1ec3ca4b8cee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/432d483ae99e03aabe4a2ffd495aef43c2f9277f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/432d483ae99e03aabe4a2ffd495aef43c2f9277f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/432d483ae99e03aabe4a2ffd495aef43c2f9277f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/432d483ae99e03aabe4a2ffd495aef43c2f9277f/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca009aee77619f9bb2798db1f732d5d18e5d9284", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca009aee77619f9bb2798db1f732d5d18e5d9284", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca009aee77619f9bb2798db1f732d5d18e5d9284"}], "stats": {"total": 44, "additions": 31, "deletions": 13}, "files": [{"sha": "e6cef7f6f12c296836f0bfc0f569ddf35845cdbc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432d483ae99e03aabe4a2ffd495aef43c2f9277f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432d483ae99e03aabe4a2ffd495aef43c2f9277f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=432d483ae99e03aabe4a2ffd495aef43c2f9277f", "patch": "@@ -1,3 +1,21 @@\n+2014-08-25  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* config/pa/pa-protos.h (pa_output_call): Strengthen first param\n+\tfrom rtx to rtx_insn *.\n+\t(pa_output_indirect_call): Likewise.\n+\t(pa_adjust_insn_length): Likewise.\n+\t(pa_attr_length_millicode_call): Likewise.\n+\t(pa_attr_length_call): Likewise.\n+\t(pa_attr_length_indirect_call): Likewise.\n+\n+\t* config/pa/pa.c (pa_adjust_insn_length): Likewise for param\n+\t\"insn\".\n+\t(pa_attr_length_millicode_call): Likewise.\n+\t(pa_attr_length_call): Likewise.\n+\t(pa_output_call): Likewise.\n+\t(pa_attr_length_indirect_call): Likewise.\n+\t(pa_output_indirect_call): Likewise.\n+\n 2014-08-25  David Malcolm  <dmalcolm@redhat.com>\n \n \t* config/nds32/nds32-protos.h (nds32_adjust_insn_length):"}, {"sha": "60617240a3e0d294424d74cf989d0253e7980d8a", "filename": "gcc/config/pa/pa-protos.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432d483ae99e03aabe4a2ffd495aef43c2f9277f/gcc%2Fconfig%2Fpa%2Fpa-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432d483ae99e03aabe4a2ffd495aef43c2f9277f/gcc%2Fconfig%2Fpa%2Fpa-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-protos.h?ref=432d483ae99e03aabe4a2ffd495aef43c2f9277f", "patch": "@@ -42,8 +42,8 @@ extern const char *pa_output_dbra (rtx *, rtx, int);\n extern const char *pa_output_movb (rtx *, rtx, int, int);\n extern const char *pa_output_parallel_movb (rtx *, rtx);\n extern const char *pa_output_parallel_addb (rtx *, rtx);\n-extern const char *pa_output_call (rtx, rtx, int);\n-extern const char *pa_output_indirect_call (rtx, rtx);\n+extern const char *pa_output_call (rtx_insn *, rtx, int);\n+extern const char *pa_output_indirect_call (rtx_insn *, rtx);\n extern const char *pa_output_millicode_call (rtx, rtx);\n extern const char *pa_output_mul_insn (int, rtx);\n extern const char *pa_output_div_insn (rtx *, int, rtx);\n@@ -56,7 +56,7 @@ extern void pa_output_global_address (FILE *, rtx, int);\n extern void pa_print_operand (FILE *, rtx, int);\n extern void pa_encode_label (rtx);\n extern int pa_symbolic_expression_p (rtx);\n-extern int pa_adjust_insn_length (rtx, int);\n+extern int pa_adjust_insn_length (rtx_insn *, int);\n extern int pa_fmpyaddoperands (rtx *);\n extern int pa_fmpysuboperands (rtx *);\n extern void pa_emit_bcond_fp (rtx[]);\n@@ -65,9 +65,9 @@ extern int pa_emit_hpdiv_const (rtx *, int);\n extern int pa_is_function_label_plus_const (rtx);\n extern int pa_jump_in_call_delay (rtx);\n extern int pa_fpstore_bypass_p (rtx, rtx);\n-extern int pa_attr_length_millicode_call (rtx);\n-extern int pa_attr_length_call (rtx, int);\n-extern int pa_attr_length_indirect_call (rtx);\n+extern int pa_attr_length_millicode_call (rtx_insn *);\n+extern int pa_attr_length_call (rtx_insn *, int);\n+extern int pa_attr_length_indirect_call (rtx_insn *);\n extern rtx pa_legitimize_reload_address (rtx, enum machine_mode,\n \t\t\t\t\t int, int, int);\n "}, {"sha": "81494414af3ff32045d444c501a045725ae0de20", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432d483ae99e03aabe4a2ffd495aef43c2f9277f/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432d483ae99e03aabe4a2ffd495aef43c2f9277f/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=432d483ae99e03aabe4a2ffd495aef43c2f9277f", "patch": "@@ -4893,15 +4893,15 @@ pa_issue_rate (void)\n    Also compute the length of an inline block move here as it is too\n    complicated to express as a length attribute in pa.md.  */\n int\n-pa_adjust_insn_length (rtx insn, int length)\n+pa_adjust_insn_length (rtx_insn *insn, int length)\n {\n   rtx pat = PATTERN (insn);\n \n   /* If length is negative or undefined, provide initial length.  */\n   if ((unsigned int) length >= INT_MAX)\n     {\n       if (GET_CODE (pat) == SEQUENCE)\n-\tinsn = XVECEXP (pat, 0, 0);\n+\tinsn = as_a <rtx_insn *> (XVECEXP (pat, 0, 0));\n \n       switch (get_attr_type (insn))\n \t{\n@@ -7494,7 +7494,7 @@ length_fp_args (rtx insn)\n    over estimate the length than to under estimate it.  */\n \n int\n-pa_attr_length_millicode_call (rtx insn)\n+pa_attr_length_millicode_call (rtx_insn *insn)\n {\n   unsigned long distance = -1;\n   unsigned long total = IN_NAMED_SECTION_P (cfun->decl) ? 0 : total_code_bytes;\n@@ -7690,7 +7690,7 @@ pa_output_millicode_call (rtx insn, rtx call_dest)\n    these sequences.  */\n \n int\n-pa_attr_length_call (rtx insn, int sibcall)\n+pa_attr_length_call (rtx_insn *insn, int sibcall)\n {\n   int local_call;\n   rtx call, call_dest;\n@@ -7780,7 +7780,7 @@ pa_attr_length_call (rtx insn, int sibcall)\n    CALL_DEST is the routine we are calling.  */\n \n const char *\n-pa_output_call (rtx insn, rtx call_dest, int sibcall)\n+pa_output_call (rtx_insn *insn, rtx call_dest, int sibcall)\n {\n   int delay_insn_deleted = 0;\n   int delay_slot_filled = 0;\n@@ -8069,7 +8069,7 @@ pa_output_call (rtx insn, rtx call_dest, int sibcall)\n    the sequence itself.  */\n \n int\n-pa_attr_length_indirect_call (rtx insn)\n+pa_attr_length_indirect_call (rtx_insn *insn)\n {\n   unsigned long distance = -1;\n   unsigned long total = IN_NAMED_SECTION_P (cfun->decl) ? 0 : total_code_bytes;\n@@ -8102,7 +8102,7 @@ pa_attr_length_indirect_call (rtx insn)\n }\n \n const char *\n-pa_output_indirect_call (rtx insn, rtx call_dest)\n+pa_output_indirect_call (rtx_insn *insn, rtx call_dest)\n {\n   rtx xoperands[1];\n "}]}