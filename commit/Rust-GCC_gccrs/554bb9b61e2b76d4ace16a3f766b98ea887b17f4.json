{"sha": "554bb9b61e2b76d4ace16a3f766b98ea887b17f4", "node_id": "C_kwDOANBUbNoAKDU1NGJiOWI2MWUyYjc2ZDRhY2UxNmEzZjc2NmI5OGVhODg3YjE3ZjQ", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2023-01-10T09:42:21Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2023-01-10T12:08:35Z"}, "message": "tree-optimization/108314 - avoid BIT_NOT optimization for extract-last\n\nThe extract-last reduction internal function expects the then and\nelse clause as vector and scalar and thus we cannot perform optimization\nof the inversion of the condition by swapping the then/else clauses.\n\n\tPR tree-optimization/108314\n\t* tree-vect-stmts.cc (vectorizable_condition): Do not\n\tperform BIT_NOT_EXPR optimization for EXTRACT_LAST_REDUCTION.\n\n\t* gcc.dg/vect/pr108314.c: New testcase.", "tree": {"sha": "bef52bc1e035382cb133865161c9cd5bbd705bfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bef52bc1e035382cb133865161c9cd5bbd705bfc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/554bb9b61e2b76d4ace16a3f766b98ea887b17f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/554bb9b61e2b76d4ace16a3f766b98ea887b17f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/554bb9b61e2b76d4ace16a3f766b98ea887b17f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/554bb9b61e2b76d4ace16a3f766b98ea887b17f4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3328df5f5c9908c633fdcf1e3866a0a2a55c582", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3328df5f5c9908c633fdcf1e3866a0a2a55c582", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3328df5f5c9908c633fdcf1e3866a0a2a55c582"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "07260e069151718c49bf29cedb8ca8b79e5c99c4", "filename": "gcc/testsuite/gcc.dg/vect/pr108314.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/554bb9b61e2b76d4ace16a3f766b98ea887b17f4/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr108314.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/554bb9b61e2b76d4ace16a3f766b98ea887b17f4/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr108314.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr108314.c?ref=554bb9b61e2b76d4ace16a3f766b98ea887b17f4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-march=armv9-a\" { target aarch64-*-* } } */\n+\n+int x, y, z;\n+\n+void f(void)\n+{\n+  int t = 4;\n+  for (; x; x++)\n+    {\n+      if (y)\n+\tcontinue;\n+      t = 0;\n+    }\n+  z = t;\n+}"}, {"sha": "eb4ca1f184e374d177eb43d5eb93acf6e6a8fde9", "filename": "gcc/tree-vect-stmts.cc", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/554bb9b61e2b76d4ace16a3f766b98ea887b17f4/gcc%2Ftree-vect-stmts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/554bb9b61e2b76d4ace16a3f766b98ea887b17f4/gcc%2Ftree-vect-stmts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.cc?ref=554bb9b61e2b76d4ace16a3f766b98ea887b17f4", "patch": "@@ -10677,7 +10677,8 @@ vectorizable_condition (vec_info *vinfo,\n \t      vect_finish_stmt_generation (vinfo, stmt_info, new_stmt, gsi);\n \t      if (bitop2 == NOP_EXPR)\n \t\tvec_compare = new_temp;\n-\t      else if (bitop2 == BIT_NOT_EXPR)\n+\t      else if (bitop2 == BIT_NOT_EXPR\n+\t\t       && reduction_type != EXTRACT_LAST_REDUCTION)\n \t\t{\n \t\t  /* Instead of doing ~x ? y : z do x ? z : y.  */\n \t\t  vec_compare = new_temp;\n@@ -10686,9 +10687,13 @@ vectorizable_condition (vec_info *vinfo,\n \t      else\n \t\t{\n \t\t  vec_compare = make_ssa_name (vec_cmp_type);\n-\t\t  new_stmt\n-\t\t    = gimple_build_assign (vec_compare, bitop2,\n-\t\t\t\t\t   vec_cond_lhs, new_temp);\n+\t\t  if (bitop2 == BIT_NOT_EXPR)\n+\t\t    new_stmt\n+\t\t      = gimple_build_assign (vec_compare, bitop2, new_temp);\n+\t\t  else\n+\t\t    new_stmt\n+\t\t      = gimple_build_assign (vec_compare, bitop2,\n+\t\t\t\t\t     vec_cond_lhs, new_temp);\n \t\t  vect_finish_stmt_generation (vinfo, stmt_info,\n \t\t\t\t\t       new_stmt, gsi);\n \t\t}"}]}