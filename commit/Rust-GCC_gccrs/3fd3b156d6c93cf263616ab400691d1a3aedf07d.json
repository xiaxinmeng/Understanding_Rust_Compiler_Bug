{"sha": "3fd3b156d6c93cf263616ab400691d1a3aedf07d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZkM2IxNTZkNmM5M2NmMjYzNjE2YWI0MDA2OTFkMWEzYWVkZjA3ZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-02-01T09:47:21Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-02-01T09:47:21Z"}, "message": "re PR tree-optimization/47541 (For integer pointers, the value of ++*p  is not written back to memory)\n\n2011-02-01  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/47541\n\t* tree-ssa-structalias.c (push_fields_onto_fieldstack): Make\n\tsure to have a field at offset zero.\n\n\t* g++.dg/torture/pr47541.C: New testcase.\n\nFrom-SVN: r169468", "tree": {"sha": "7d8501382557fc2411e882ec6b7f73fbd06eabac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d8501382557fc2411e882ec6b7f73fbd06eabac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fd3b156d6c93cf263616ab400691d1a3aedf07d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fd3b156d6c93cf263616ab400691d1a3aedf07d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fd3b156d6c93cf263616ab400691d1a3aedf07d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fd3b156d6c93cf263616ab400691d1a3aedf07d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3eaa6afc66b55971d1e5ee4ccfbf4062f7ce44c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eaa6afc66b55971d1e5ee4ccfbf4062f7ce44c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3eaa6afc66b55971d1e5ee4ccfbf4062f7ce44c5"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "e5ed1d8ecf2d0d30c1be9f046e6f603a8d44feb9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd3b156d6c93cf263616ab400691d1a3aedf07d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd3b156d6c93cf263616ab400691d1a3aedf07d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3fd3b156d6c93cf263616ab400691d1a3aedf07d", "patch": "@@ -1,3 +1,9 @@\n+2011-02-01  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/47541\n+\t* tree-ssa-structalias.c (push_fields_onto_fieldstack): Make\n+\tsure to have a field at offset zero.\n+\n 2011-01-31  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/arc/arc.opt (EB, EL): New Driver options."}, {"sha": "8164cf4c1982c87846bb6ddd1a63611ee00abc83", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd3b156d6c93cf263616ab400691d1a3aedf07d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd3b156d6c93cf263616ab400691d1a3aedf07d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3fd3b156d6c93cf263616ab400691d1a3aedf07d", "patch": "@@ -1,3 +1,8 @@\n+2011-02-01  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/47541\n+\t* g++.dg/torture/pr47541.C: New testcase.\n+\n 2011-01-31  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/47455"}, {"sha": "350a05192979b53933d77ed4a7d569c8763740e8", "filename": "gcc/testsuite/g++.dg/torture/pr47541.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd3b156d6c93cf263616ab400691d1a3aedf07d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr47541.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd3b156d6c93cf263616ab400691d1a3aedf07d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr47541.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr47541.C?ref=3fd3b156d6c93cf263616ab400691d1a3aedf07d", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do run } */\n+\n+struct Dummy {};\n+struct RefCount : public Dummy {\n+    ~RefCount(); /* Has to be non-pod.  */\n+    int *a;\n+    int *b;\n+};\n+RefCount::~RefCount(){}\n+struct Wrapper : public Dummy { RefCount ref; };\n+void __attribute__((noinline,noclone))\n+Push(Wrapper ptr)\n+{\n+  *ptr.ref.b = 0;\n+}\n+extern \"C\" void abort (void);\n+int main()\n+{\n+  int a = 1, b = 1;\n+  Wrapper x;\n+  x.ref.a = &a;\n+  x.ref.b = &b;\n+  Push(x);\n+  if (b != 0)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "97719ff8473805f36b994d9a029902a6377e3984", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd3b156d6c93cf263616ab400691d1a3aedf07d/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd3b156d6c93cf263616ab400691d1a3aedf07d/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=3fd3b156d6c93cf263616ab400691d1a3aedf07d", "patch": "@@ -5083,6 +5083,19 @@ push_fields_onto_fieldstack (tree type, VEC(fieldoff_s,heap) **fieldstack,\n \t    if (!VEC_empty (fieldoff_s, *fieldstack))\n \t      pair = VEC_last (fieldoff_s, *fieldstack);\n \n+\t    /* If there isn't anything at offset zero, create sth.  */\n+\t    if (!pair\n+\t\t&& offset + foff != 0)\n+\t      {\n+\t\tpair = VEC_safe_push (fieldoff_s, heap, *fieldstack, NULL);\n+\t\tpair->offset = 0;\n+\t\tpair->size = offset + foff;\n+\t\tpair->has_unknown_size = false;\n+\t\tpair->must_have_pointers = false;\n+\t\tpair->may_have_pointers = false;\n+\t\tpair->only_restrict_pointers = false;\n+\t      }\n+\n \t    if (!DECL_SIZE (field)\n \t\t|| !host_integerp (DECL_SIZE (field), 1))\n \t      has_unknown_size = true;"}]}