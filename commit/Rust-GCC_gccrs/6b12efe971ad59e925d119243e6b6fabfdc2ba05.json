{"sha": "6b12efe971ad59e925d119243e6b6fabfdc2ba05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmIxMmVmZTk3MWFkNTllOTI1ZDExOTI0M2U2YjZmYWJmZGMyYmEwNQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-03-31T14:28:16Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-03-31T14:28:16Z"}, "message": "re PR middle-end/31029 (Fold does not fold C - a == a)\n\n2009-03-31  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/31029\n\t* fold-const.c (fold_binary): Fold X +- Y CMP X to Y CMP 0 for\n\tequality comparisons.  Fold C - X CMP X if C % 2 == 1.\n\n\t* gcc.dg/fold-compare-4.c: New testcase.\n\t* gcc.dg/fold-compare-5.c: Likewise.\n\nFrom-SVN: r145345", "tree": {"sha": "3375dd6b6a930ea767bbaf4394885cf7b47d7023", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3375dd6b6a930ea767bbaf4394885cf7b47d7023"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b12efe971ad59e925d119243e6b6fabfdc2ba05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b12efe971ad59e925d119243e6b6fabfdc2ba05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b12efe971ad59e925d119243e6b6fabfdc2ba05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b12efe971ad59e925d119243e6b6fabfdc2ba05/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "108f6c2f4efe0141c859eeb52fae610b8806ffc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/108f6c2f4efe0141c859eeb52fae610b8806ffc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/108f6c2f4efe0141c859eeb52fae610b8806ffc8"}], "stats": {"total": 88, "additions": 77, "deletions": 11}, "files": [{"sha": "e38995188c1bb7d74dec17b1c95d218aeacf8e6d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b12efe971ad59e925d119243e6b6fabfdc2ba05/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b12efe971ad59e925d119243e6b6fabfdc2ba05/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b12efe971ad59e925d119243e6b6fabfdc2ba05", "patch": "@@ -1,3 +1,9 @@\n+2009-03-31  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/31029\n+\t* fold-const.c (fold_binary): Fold X +- Y CMP X to Y CMP 0 for\n+\tequality comparisons.  Fold C - X CMP X if C % 2 == 1.\n+\n 2009-03-31  Richard Guenther  <rguenther@suse.de>\n \n \t* tree.h (div_if_zero_remainder): Declare."}, {"sha": "ec0695414124b9569930c5d4088a7ffdcde39401", "filename": "gcc/fold-const.c", "status": "modified", "additions": 22, "deletions": 11, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b12efe971ad59e925d119243e6b6fabfdc2ba05/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b12efe971ad59e925d119243e6b6fabfdc2ba05/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=6b12efe971ad59e925d119243e6b6fabfdc2ba05", "patch": "@@ -12191,22 +12191,33 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n \t\t\t\t\t fold_convert (TREE_TYPE (arg0), arg1),\n \t\t\t\t\t TREE_OPERAND (arg0, 1)));\n \n-      /* Transform comparisons of the form X +- C CMP X.  */\n-      if ((TREE_CODE (arg0) == PLUS_EXPR || TREE_CODE (arg0) == MINUS_EXPR)\n+      /* Transform comparisons of the form X +- Y CMP X to Y CMP 0.  */\n+      if ((TREE_CODE (arg0) == PLUS_EXPR\n+\t   || TREE_CODE (arg0) == POINTER_PLUS_EXPR\n+\t   || TREE_CODE (arg0) == MINUS_EXPR)\n \t  && operand_equal_p (TREE_OPERAND (arg0, 0), arg1, 0)\n-\t  && TREE_CODE (TREE_OPERAND (arg0, 1)) == INTEGER_CST\n \t  && (INTEGRAL_TYPE_P (TREE_TYPE (arg0))\n \t      || POINTER_TYPE_P (TREE_TYPE (arg0))))\n \t{\n-\t  tree cst = TREE_OPERAND (arg0, 1);\n+\t  tree val = TREE_OPERAND (arg0, 1);\n+\t  return omit_two_operands (type,\n+\t\t\t\t    fold_build2 (code, type,\n+\t\t\t\t\t\t val,\n+\t\t\t\t\t\t build_int_cst (TREE_TYPE (val),\n+\t\t\t\t\t\t\t\t0)),\n+\t\t\t\t    TREE_OPERAND (arg0, 0), arg1);\n+\t}\n \n-\t  if (code == EQ_EXPR\n-\t      && !integer_zerop (cst))\n-\t    return omit_two_operands (type, boolean_false_node,\n-\t\t\t\t      TREE_OPERAND (arg0, 0), arg1);\n-\t  else\n-\t    return omit_two_operands (type, boolean_true_node,\n-\t\t\t\t      TREE_OPERAND (arg0, 0), arg1);\n+      /* Transform comparisons of the form C - X CMP X if C % 2 == 1.  */\n+      if (TREE_CODE (arg0) == MINUS_EXPR\n+\t  && TREE_CODE (TREE_OPERAND (arg0, 0)) == INTEGER_CST\n+\t  && operand_equal_p (TREE_OPERAND (arg0, 1), arg1, 0)\n+\t  && (TREE_INT_CST_LOW (TREE_OPERAND (arg0, 0)) & 1) == 1)\n+\t{\n+\t  return omit_two_operands (type,\n+\t\t\t\t    code == NE_EXPR\n+\t\t\t\t    ? boolean_true_node : boolean_false_node,\n+\t\t\t\t    TREE_OPERAND (arg0, 1), arg1);\n \t}\n \n       /* If we have X - Y == 0, we can convert that to X == Y and similarly"}, {"sha": "19cf3d6691d1003fae5a8f857642574eaa11e168", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b12efe971ad59e925d119243e6b6fabfdc2ba05/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b12efe971ad59e925d119243e6b6fabfdc2ba05/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6b12efe971ad59e925d119243e6b6fabfdc2ba05", "patch": "@@ -1,3 +1,9 @@\n+2009-03-31  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/31029\n+\t* gcc.dg/fold-compare-4.c: New testcase.\n+\t* gcc.dg/fold-compare-5.c: Likewise.\n+\n 2009-03-31  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/tree-ssa/forwprop-12.c: New testcase."}, {"sha": "d4bb64ad2bdfb5a3dad0ceb7b001790299c6fabf", "filename": "gcc/testsuite/gcc.dg/fold-compare-4.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b12efe971ad59e925d119243e6b6fabfdc2ba05/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-compare-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b12efe971ad59e925d119243e6b6fabfdc2ba05/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-compare-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-compare-4.c?ref=6b12efe971ad59e925d119243e6b6fabfdc2ba05", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fdump-tree-original\" } */\n+\n+int test1 (int a, int b)\n+{\n+  return a - b == a;\n+}\n+int test2 (int a, int b)\n+{\n+  return a + b == a;\n+}\n+int test3 (int a)\n+{\n+  return a + 5 == a;\n+}\n+int test4 (int a)\n+{\n+  return a - 5 == a;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"b == 0\" 2 \"original\" } } */\n+/* { dg-final { scan-tree-dump-times \"return 0\" 2 \"original\" } } */\n+/* { dg-final { cleanup-tree-dump \"original\" } } */"}, {"sha": "9ec8c33f63ebd06d0dc0fd1846c4b5319eacf1cc", "filename": "gcc/testsuite/gcc.dg/fold-compare-5.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b12efe971ad59e925d119243e6b6fabfdc2ba05/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-compare-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b12efe971ad59e925d119243e6b6fabfdc2ba05/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-compare-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-compare-5.c?ref=6b12efe971ad59e925d119243e6b6fabfdc2ba05", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fdump-tree-original\" } */\n+\n+int test1 (int a)\n+{\n+  return 2 - a == a;\n+}\n+int test2 (int a)\n+{\n+  return 1 - a == a;\n+}\n+int test3 (int a)\n+{\n+  return 1 - a != a;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"return 2 - a == a\" 1 \"original\" } } */\n+/* { dg-final { scan-tree-dump-times \"return 0\" 1 \"original\" } } */\n+/* { dg-final { scan-tree-dump-times \"return 1\" 1 \"original\" } } */\n+/* { dg-final { cleanup-tree-dump \"original\" } } */"}]}