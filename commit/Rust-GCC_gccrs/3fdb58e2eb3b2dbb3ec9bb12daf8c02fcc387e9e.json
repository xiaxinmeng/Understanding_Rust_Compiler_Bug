{"sha": "3fdb58e2eb3b2dbb3ec9bb12daf8c02fcc387e9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZkYjU4ZTJlYjNiMmRiYjNlYzliYjEyZGFmOGMwMmZjYzM4N2U5ZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-23T10:09:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-23T10:09:31Z"}, "message": "[multiple changes]\n\n2014-10-23  Thomas Quinot  <quinot@adacore.com>\n\n\t* bcheck.adb (Check_Consistent_SSO_Default): Exclude internal\n\tunits from consistency check.\n\t* gnat_rm.texi (Default_Scalar_Storage_Order): Document that\n\tconsistency check excludes run-time units.\n\n2014-10-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* a-strsea.adb (Find_Token): Enable constraint checking in this\n\tprocedure, so that even when compiling with checks suppressed, as is\n\tthe case for the run-time, an exception is raised in this routine when\n\tthe input meets the conditions described in RM 2005 A.4.3 (68/1).\n\nFrom-SVN: r216580", "tree": {"sha": "5bea1e2894e05cee8de3881b4ded6cb9585f310e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bea1e2894e05cee8de3881b4ded6cb9585f310e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fdb58e2eb3b2dbb3ec9bb12daf8c02fcc387e9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fdb58e2eb3b2dbb3ec9bb12daf8c02fcc387e9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fdb58e2eb3b2dbb3ec9bb12daf8c02fcc387e9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fdb58e2eb3b2dbb3ec9bb12daf8c02fcc387e9e/comments", "author": null, "committer": null, "parents": [{"sha": "929315a9177368d6b8807299bc7da3ac5e1dca21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/929315a9177368d6b8807299bc7da3ac5e1dca21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/929315a9177368d6b8807299bc7da3ac5e1dca21"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "c07d3eef96deb311a5e7309aa0851794a2441370", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fdb58e2eb3b2dbb3ec9bb12daf8c02fcc387e9e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fdb58e2eb3b2dbb3ec9bb12daf8c02fcc387e9e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3fdb58e2eb3b2dbb3ec9bb12daf8c02fcc387e9e", "patch": "@@ -1,3 +1,17 @@\n+2014-10-23  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* bcheck.adb (Check_Consistent_SSO_Default): Exclude internal\n+\tunits from consistency check.\n+\t* gnat_rm.texi (Default_Scalar_Storage_Order): Document that\n+\tconsistency check excludes run-time units.\n+\n+2014-10-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* a-strsea.adb (Find_Token): Enable constraint checking in this\n+\tprocedure, so that even when compiling with checks suppressed, as is\n+\tthe case for the run-time, an exception is raised in this routine when\n+\tthe input meets the conditions described in RM 2005 A.4.3 (68/1).\n+\n 2014-10-20  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* sem_ch3.adb (Build_Derived_Private_Type): When the parent"}, {"sha": "2651dc8d989da116ee95e5bbccbc0cd2f1a26875", "filename": "gcc/ada/a-strsea.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fdb58e2eb3b2dbb3ec9bb12daf8c02fcc387e9e/gcc%2Fada%2Fa-strsea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fdb58e2eb3b2dbb3ec9bb12daf8c02fcc387e9e/gcc%2Fada%2Fa-strsea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strsea.adb?ref=3fdb58e2eb3b2dbb3ec9bb12daf8c02fcc387e9e", "patch": "@@ -241,6 +241,14 @@ package body Ada.Strings.Search is\n       First  : out Positive;\n       Last   : out Natural)\n    is\n+\n+      --  RM 2005 A.4.3 (68/1)) specifies that an exception must be raised if\n+      --  Source'First is not positive and is assigned to First. Formulation\n+      --  is slightly different in RM 2012, but the intent seems similar, so\n+      --  we enable range checks for this routine.\n+\n+      pragma Unsuppress (Range_Check);\n+\n    begin\n       for J in Source'Range loop\n          if Belongs (Source (J), Set, Test) then"}, {"sha": "dd723b369104e5a2a917c72e41054ac7a04a0dad", "filename": "gcc/ada/bcheck.adb", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fdb58e2eb3b2dbb3ec9bb12daf8c02fcc387e9e/gcc%2Fada%2Fbcheck.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fdb58e2eb3b2dbb3ec9bb12daf8c02fcc387e9e/gcc%2Fada%2Fbcheck.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbcheck.adb?ref=3fdb58e2eb3b2dbb3ec9bb12daf8c02fcc387e9e", "patch": "@@ -1077,16 +1077,28 @@ package body Bcheck is\n    -- Check_Consistent_SSO_Default --\n    ----------------------------------\n \n+   --  This routine checks for a consistent SSO default setting. Note that\n+   --  internal units are excluded from this check, since we don't in any\n+   --  case allow the pragma to affect types in internal units, and there\n+   --  is thus no requirement to recompile the run-time with the default set.\n+\n    procedure Check_Consistent_SSO_Default is\n       Default : Character;\n \n    begin\n       Default := ALIs.Table (ALIs.First).SSO_Default;\n \n+      --  The default must be set from a non-internal unit\n+\n+      pragma Assert\n+        (not Is_Internal_File_Name (ALIs.Table (ALIs.First).Sfile));\n+\n       --  Check all entries match the default above from the first entry\n \n       for A1 in ALIs.First + 1 .. ALIs.Last loop\n-         if ALIs.Table (A1).SSO_Default /= Default then\n+         if not Is_Internal_File_Name (ALIs.Table (A1).Sfile)\n+           and then ALIs.Table (A1).SSO_Default /= Default\n+         then\n             Default := '?';\n             exit;\n          end if;\n@@ -1132,7 +1144,9 @@ package body Bcheck is\n       Write_Eol;\n \n       for A1 in ALIs.First .. ALIs.Last loop\n-         if ALIs.Table (A1).SSO_Default = ' ' then\n+         if not Is_Internal_File_Name (ALIs.Table (A1).Sfile)\n+           and then ALIs.Table (A1).SSO_Default = ' '\n+         then\n             Write_Str (\"  \");\n             Write_Name (ALIs.Table (A1).Sfile);\n             Write_Eol;"}, {"sha": "11a8d411104bed579fe74dd43b908b14e3be72e0", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fdb58e2eb3b2dbb3ec9bb12daf8c02fcc387e9e/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fdb58e2eb3b2dbb3ec9bb12daf8c02fcc387e9e/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=3fdb58e2eb3b2dbb3ec9bb12daf8c02fcc387e9e", "patch": "@@ -2559,8 +2559,8 @@ types declared within that package spec or declarative part.\n If this pragma is used as a configuration pragma which appears within a\n configuration pragma file (as opposed to appearing explicitly at the start\n of a single unit), then the binder will require that all units in a partition\n-be compiled in a similar manner, including all units in the run-time that\n-are included in the partition.\n+be compiled in a similar manner, other than run-time units, which are not\n+affected by this pragma.\n \n The following example shows the use of this pragma:\n "}]}