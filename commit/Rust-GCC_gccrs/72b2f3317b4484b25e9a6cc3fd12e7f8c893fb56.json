{"sha": "72b2f3317b4484b25e9a6cc3fd12e7f8c893fb56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJiMmYzMzE3YjQ0ODRiMjVlOWE2Y2MzZmQxMmU3ZjhjODkzZmI1Ng==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2019-12-20T00:15:19Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2020-02-06T18:03:47Z"}, "message": "rs6000: Use rldimi for 64-bit constants with high=low (PR93012)\n\nWe currently use an (up to) five instruction sequence to generate such\nconstants.  After this change we just generate a 32-bit constant and do\na rotate-and-mask-insert instruction, making the sequence only up to\nthree instructions.\n\n\t* config/rs6000/rs6000.c (rs6000_emit_set_long_const): Handle the case\n\twhere the low and the high 32 bits are equal to each other specially,\n\twith an rldimi instruction.\n\ngcc/testsuite/\n\t* gcc.target/powerpc/pr93012.c: New.", "tree": {"sha": "0d9e80e5e9ecc09de1c484921529d5ab2f9916c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d9e80e5e9ecc09de1c484921529d5ab2f9916c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72b2f3317b4484b25e9a6cc3fd12e7f8c893fb56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72b2f3317b4484b25e9a6cc3fd12e7f8c893fb56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72b2f3317b4484b25e9a6cc3fd12e7f8c893fb56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72b2f3317b4484b25e9a6cc3fd12e7f8c893fb56/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "201c2f785f4d4c9ad9a8df859e6d078ed86ecc79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/201c2f785f4d4c9ad9a8df859e6d078ed86ecc79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/201c2f785f4d4c9ad9a8df859e6d078ed86ecc79"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "db03bf18242b6df2cc9d5c6bd4ae0ceb97d3eec9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b2f3317b4484b25e9a6cc3fd12e7f8c893fb56/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b2f3317b4484b25e9a6cc3fd12e7f8c893fb56/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=72b2f3317b4484b25e9a6cc3fd12e7f8c893fb56", "patch": "@@ -1,3 +1,9 @@\n+2020-02-06  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.c (rs6000_emit_set_long_const): Handle the case\n+\twhere the low and the high 32 bits are equal to each other specially,\n+\twith an rldimi instruction.\n+\n 2020-02-06  Mihail Ionescu  <mihail.ionescu@arm.com>\n \n \t* config/arm/arm-cpus.in: Set profile M for armv8.1-m.main."}, {"sha": "f2516a838425c2b7bfb9813d31907c5a10eda4ef", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b2f3317b4484b25e9a6cc3fd12e7f8c893fb56/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b2f3317b4484b25e9a6cc3fd12e7f8c893fb56/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=72b2f3317b4484b25e9a6cc3fd12e7f8c893fb56", "patch": "@@ -9257,6 +9257,15 @@ rs6000_emit_set_long_const (rtx dest, HOST_WIDE_INT c)\n \t\t\t\t\t   gen_lowpart (SImode,\n \t\t\t\t\t\t\tcopy_rtx (temp))));\n     }\n+  else if (ud1 == ud3 && ud2 == ud4)\n+    {\n+      temp = !can_create_pseudo_p () ? dest : gen_reg_rtx (DImode);\n+      HOST_WIDE_INT num = (ud2 << 16) | ud1;\n+      rs6000_emit_set_long_const (temp, (num ^ 0x80000000) - 0x80000000);\n+      rtx one = gen_rtx_AND (DImode, temp, GEN_INT (0xffffffff));\n+      rtx two = gen_rtx_ASHIFT (DImode, temp, GEN_INT (32));\n+      emit_move_insn (dest, gen_rtx_IOR (DImode, one, two));\n+    }\n   else if ((ud4 == 0xffff && (ud3 & 0x8000))\n \t   || (ud4 == 0 && ! (ud3 & 0x8000)))\n     {"}, {"sha": "fd80c8d0f324c2e5634e7c101704c35c7527856b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b2f3317b4484b25e9a6cc3fd12e7f8c893fb56/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b2f3317b4484b25e9a6cc3fd12e7f8c893fb56/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=72b2f3317b4484b25e9a6cc3fd12e7f8c893fb56", "patch": "@@ -1,3 +1,7 @@\n+2020-02-06  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* gcc.target/powerpc/pr93012.c: New.\n+\n 2020-02-06  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR target/87763"}, {"sha": "4f764d0576f28e04cad04564f49a729b48e3d3a5", "filename": "gcc/testsuite/gcc.target/powerpc/pr93012.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b2f3317b4484b25e9a6cc3fd12e7f8c893fb56/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr93012.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b2f3317b4484b25e9a6cc3fd12e7f8c893fb56/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr93012.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr93012.c?ref=72b2f3317b4484b25e9a6cc3fd12e7f8c893fb56", "patch": "@@ -0,0 +1,13 @@\n+/* PR target/93012 */\n+/* { dg-do compile { target lp64 } } */\n+/* { dg-options \"-O2 -std=c99\" } */\n+\n+unsigned long long msk66() { return 0x6666666666666666ULL; }\n+unsigned long long mskih() { return 0xabcd1234abcd1234ULL; }\n+unsigned long long mskh0() { return 0x0000123400001234ULL; }\n+unsigned long long mskl0() { return 0xabcd0000abcd0000ULL; }\n+unsigned long long mskh1() { return 0xffff9234ffff9234ULL; }\n+unsigned long long mskl1() { return 0x2bcdffff2bcdffffULL; }\n+unsigned long long mskse() { return 0xffff1234ffff1234ULL; }\n+\n+/* { dg-final { scan-assembler-times {\\mrldimi\\M} 7 } } */"}]}