{"sha": "d55b55aa1c38c1fc24b0f4cacf2fb2bfa13cc4ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU1YjU1YWExYzM4YzFmYzI0YjBmNGNhY2YyZmIyYmZhMTNjYzRjYQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2004-05-19T10:14:47Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2004-05-19T10:14:47Z"}, "message": "Fix typos (missing closing parentheses)\n\nFrom-SVN: r82021", "tree": {"sha": "1adf07bb12465075a4558c564d2a6270417f0e93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1adf07bb12465075a4558c564d2a6270417f0e93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d55b55aa1c38c1fc24b0f4cacf2fb2bfa13cc4ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d55b55aa1c38c1fc24b0f4cacf2fb2bfa13cc4ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d55b55aa1c38c1fc24b0f4cacf2fb2bfa13cc4ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d55b55aa1c38c1fc24b0f4cacf2fb2bfa13cc4ca/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c6618c0336a1c272391cf097b99e1bca019ed847", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6618c0336a1c272391cf097b99e1bca019ed847", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6618c0336a1c272391cf097b99e1bca019ed847"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "6b1ed645033452055f5d466086a11482ef54333c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d55b55aa1c38c1fc24b0f4cacf2fb2bfa13cc4ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d55b55aa1c38c1fc24b0f4cacf2fb2bfa13cc4ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d55b55aa1c38c1fc24b0f4cacf2fb2bfa13cc4ca", "patch": "@@ -1,3 +1,10 @@\n+2004-05-19  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/ip2k/ip2k.c (ip2k_composite_xexp_not_uses_reg_p): Add\n+\tmissing parenthesis.\n+\t* config/ip2k/ip2k.c (ip2k_unary_operator): Likewise.\n+\t* config/ip2k/ip2k.c (ip2k_binary_operator): Likewise.\n+\n 2004-05-19  Steven Bosscher  <stevenb@suse.de>\n \n \t* expr.c (store_constructor): Build loop start and end by hand"}, {"sha": "7216ff2e335b74ad113e37792789b00b1b399d14", "filename": "gcc/config/ip2k/ip2k.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d55b55aa1c38c1fc24b0f4cacf2fb2bfa13cc4ca/gcc%2Fconfig%2Fip2k%2Fip2k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d55b55aa1c38c1fc24b0f4cacf2fb2bfa13cc4ca/gcc%2Fconfig%2Fip2k%2Fip2k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fip2k%2Fip2k.c?ref=d55b55aa1c38c1fc24b0f4cacf2fb2bfa13cc4ca", "patch": "@@ -5973,7 +5973,7 @@ ip2k_composite_xexp_not_uses_reg_p (rtx x, unsigned int r, int rsz)\n \t    && ip2k_composite_xexp_not_uses_reg_p (XEXP (x, 1), r, rsz)\n \t    && ip2k_composite_xexp_not_uses_reg_p (XEXP (x, 2), r, rsz));\n \n-  if (BINARY_P (x)\n+  if (BINARY_P (x))\n     return (ip2k_composite_xexp_not_uses_reg_p (XEXP (x, 0), r, rsz)\n \t    && ip2k_composite_xexp_not_uses_reg_p (XEXP (x, 1), r, rsz));\n \n@@ -6150,14 +6150,14 @@ int\n ip2k_unary_operator (rtx op, enum machine_mode mode)\n {\n   return ((mode == VOIDmode || GET_MODE (op) == mode)\n-\t  && UNARY_P (op);\n+\t  && UNARY_P (op));\n }\n \n int\n ip2k_binary_operator (rtx op, enum machine_mode mode)\n {\n   return ((mode == VOIDmode || GET_MODE (op) == mode)\n-\t  && ARITHMETIC_P (op);\n+\t  && ARITHMETIC_P (op));\n }\n \n int"}]}