{"sha": "432de08498142d2266c0fb05f2c555a7f1e10ddd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDMyZGUwODQ5ODE0MmQyMjY2YzBmYjA1ZjJjNTU1YTdmMWUxMGRkZA==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-08-12T13:48:28Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-08-12T13:49:49Z"}, "message": "OpenMP 5.1: Add proc-bind 'primary' support\n\nIn OpenMP 5.1 \"master thread\" was changed to \"primary thread\" and\nthe proc_bind clause and the OMP_PROC_BIND environment variable\nnow take 'primary' as argument as alias for 'master', while the\nlatter is deprecated.\nThis commit accepts 'primary' and adds the named constant\nomp_proc_bind_primary and changes 'master thread' in the\ndocumentation; however, given that not even OpenMP 5.0 is\nfully supported, omp_display_env and the dumps currently\nstill output 'master' and there is no deprecation warning\nwhen using the 'master' in the proc_bind clause.\n\ngcc/c/ChangeLog:\n\n\t* c-parser.c (c_parser_omp_clause_proc_bind): Accept\n\t'primary' as alias for 'master'.\n\ngcc/cp/ChangeLog:\n\n\t* parser.c (cp_parser_omp_clause_proc_bind): Accept\n\t'primary' as alias for 'master'.\n\ngcc/fortran/ChangeLog:\n\n\t* gfortran.h (gfc_omp_proc_bind_kind): Add OMP_PROC_BIND_PRIMARY.\n\t* dump-parse-tree.c (show_omp_clauses): Add TODO comment to\n\tchange 'master' to 'primary' in proc_bind for OpenMP 5.1.\n\t* intrinsic.texi (OMP_LIB): Mention OpenMP 5.1; add\n\tomp_proc_bind_primary.\n\t* openmp.c (gfc_match_omp_clauses): Accept\n\t'primary' as alias for 'master'.\n\t* trans-openmp.c (gfc_trans_omp_clauses): Handle\n\tOMP_PROC_BIND_PRIMARY.\n\ngcc/ChangeLog:\n\n\t* tree-core.h (omp_clause_proc_bind_kind): Add\n\tOMP_CLAUSE_PROC_BIND_PRIMARY.\n\t* tree-pretty-print.c (dump_omp_clause): Add TODO comment to\n\tchange 'master' to 'primary' in proc_bind for OpenMP 5.1.\n\nlibgomp/ChangeLog:\n\n\t* env.c (parse_bind_var): Accept 'primary' as alias for\n\t'master'.\n\t(omp_display_env): Add TODO comment to\n\tchange 'master' to 'primary' in proc_bind for OpenMP 5.1.\n\t* libgomp.texi: Change 'master thread' to 'primary thread'\n\tin line with OpenMP 5.1.\n\t(omp_get_proc_bind): Add omp_proc_bind_primary and note that\n\tomp_proc_bind_master is an alias of it.\n\t(OMP_PROC_BIND): Mention 'PRIMARY'.\n\t* omp.h.in (__GOMP_DEPRECATED_5_1): Define.\n\t(omp_proc_bind_primary): Add.\n\t(omp_proc_bind_master): Deprecate for OpenMP 5.1.\n\t* omp_lib.f90.in (omp_proc_bind_primary): Add.\n\t(omp_proc_bind_master): Deprecate for OpenMP 5.1.\n\t* omp_lib.h.in (omp_proc_bind_primary): Add.\n\t* testsuite/libgomp.c/affinity-1.c: Check that\n\t'primary' works and is identical to 'master'.\n\ngcc/testsuite/ChangeLog:\n\n\t* c-c++-common/gomp/pr61486-2.c: Duplicate one proc_bind(master)\n\ttestcase and test proc_bind(primary) instead.\n\t* gfortran.dg/gomp/affinity-1.f90: Likewise.", "tree": {"sha": "eb534cfc1379a9d59255a6c31f38519aaba927b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb534cfc1379a9d59255a6c31f38519aaba927b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/432de08498142d2266c0fb05f2c555a7f1e10ddd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/432de08498142d2266c0fb05f2c555a7f1e10ddd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/432de08498142d2266c0fb05f2c555a7f1e10ddd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/432de08498142d2266c0fb05f2c555a7f1e10ddd/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d7967a10c2f3b4652f77a1a2119ba03b3472266", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d7967a10c2f3b4652f77a1a2119ba03b3472266", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d7967a10c2f3b4652f77a1a2119ba03b3472266"}], "stats": {"total": 132, "additions": 99, "deletions": 33}, "files": [{"sha": "195c137337764d02191799d86eed3d24589d5ef0", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432de08498142d2266c0fb05f2c555a7f1e10ddd/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432de08498142d2266c0fb05f2c555a7f1e10ddd/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=432de08498142d2266c0fb05f2c555a7f1e10ddd", "patch": "@@ -15959,7 +15959,8 @@ c_parser_omp_clause_dist_schedule (c_parser *parser, tree list)\n    proc_bind ( proc-bind-kind )\n \n    proc-bind-kind:\n-     master | close | spread  */\n+     primary | master | close | spread\n+   where OpenMP 5.1 added 'primary' and deprecated the alias 'master'.  */\n \n static tree\n c_parser_omp_clause_proc_bind (c_parser *parser, tree list)\n@@ -15975,7 +15976,9 @@ c_parser_omp_clause_proc_bind (c_parser *parser, tree list)\n   if (c_parser_next_token_is (parser, CPP_NAME))\n     {\n       const char *p = IDENTIFIER_POINTER (c_parser_peek_token (parser)->value);\n-      if (strcmp (\"master\", p) == 0)\n+      if (strcmp (\"primary\", p) == 0)\n+\tkind = OMP_CLAUSE_PROC_BIND_PRIMARY;\n+      else if (strcmp (\"master\", p) == 0)\n \tkind = OMP_CLAUSE_PROC_BIND_MASTER;\n       else if (strcmp (\"close\", p) == 0)\n \tkind = OMP_CLAUSE_PROC_BIND_CLOSE;"}, {"sha": "b7fe4b45f6ac8d19536cd2780744a657120ebf11", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432de08498142d2266c0fb05f2c555a7f1e10ddd/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432de08498142d2266c0fb05f2c555a7f1e10ddd/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=432de08498142d2266c0fb05f2c555a7f1e10ddd", "patch": "@@ -39020,7 +39020,8 @@ cp_parser_omp_clause_dist_schedule (cp_parser *parser, tree list,\n    proc_bind ( proc-bind-kind )\n \n    proc-bind-kind:\n-     master | close | spread  */\n+     primary | master | close | spread\n+   where OpenMP 5.1 added 'primary' and deprecated the alias 'master'.  */\n \n static tree\n cp_parser_omp_clause_proc_bind (cp_parser *parser, tree list,\n@@ -39037,7 +39038,9 @@ cp_parser_omp_clause_proc_bind (cp_parser *parser, tree list,\n       tree id = cp_lexer_peek_token (parser->lexer)->u.value;\n       const char *p = IDENTIFIER_POINTER (id);\n \n-      if (strcmp (\"master\", p) == 0)\n+      if (strcmp (\"primary\", p) == 0)\n+\tkind = OMP_CLAUSE_PROC_BIND_PRIMARY;\n+      else if (strcmp (\"master\", p) == 0)\n \tkind = OMP_CLAUSE_PROC_BIND_MASTER;\n       else if (strcmp (\"close\", p) == 0)\n \tkind = OMP_CLAUSE_PROC_BIND_CLOSE;"}, {"sha": "360abf18a6a72b2155f6a695dc0673a4a8415130", "filename": "gcc/fortran/dump-parse-tree.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432de08498142d2266c0fb05f2c555a7f1e10ddd/gcc%2Ffortran%2Fdump-parse-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432de08498142d2266c0fb05f2c555a7f1e10ddd/gcc%2Ffortran%2Fdump-parse-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdump-parse-tree.c?ref=432de08498142d2266c0fb05f2c555a7f1e10ddd", "patch": "@@ -1712,6 +1712,7 @@ show_omp_clauses (gfc_omp_clauses *omp_clauses)\n       const char *type;\n       switch (omp_clauses->proc_bind)\n \t{\n+\tcase OMP_PROC_BIND_PRIMARY: type = \"PRIMARY\"; break;\n \tcase OMP_PROC_BIND_MASTER: type = \"MASTER\"; break;\n \tcase OMP_PROC_BIND_SPREAD: type = \"SPREAD\"; break;\n \tcase OMP_PROC_BIND_CLOSE: type = \"CLOSE\"; break;"}, {"sha": "8f75dd953945485e4c4b116061291c214621b48f", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432de08498142d2266c0fb05f2c555a7f1e10ddd/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432de08498142d2266c0fb05f2c555a7f1e10ddd/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=432de08498142d2266c0fb05f2c555a7f1e10ddd", "patch": "@@ -1362,6 +1362,7 @@ enum gfc_omp_default_sharing\n enum gfc_omp_proc_bind_kind\n {\n   OMP_PROC_BIND_UNKNOWN,\n+  OMP_PROC_BIND_PRIMARY,\n   OMP_PROC_BIND_MASTER,\n   OMP_PROC_BIND_SPREAD,\n   OMP_PROC_BIND_CLOSE"}, {"sha": "1aacd336bf8b412a051e56f376a5421246a596e6", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432de08498142d2266c0fb05f2c555a7f1e10ddd/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432de08498142d2266c0fb05f2c555a7f1e10ddd/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=432de08498142d2266c0fb05f2c555a7f1e10ddd", "patch": "@@ -15293,8 +15293,9 @@ with the following options: @code{-fno-unsafe-math-optimizations\n @section OpenMP Modules @code{OMP_LIB} and @code{OMP_LIB_KINDS}\n @table @asis\n @item @emph{Standard}:\n-OpenMP Application Program Interface v4.5 and\n-OpenMP Application Program Interface v5.0 (partially supported).\n+OpenMP Application Program Interface v4.5,\n+OpenMP Application Program Interface v5.0 (partially supported) and\n+OpenMP Application Program Interface v5.1 (partially supported).\n @end table\n \n The OpenMP Fortran runtime library routines are provided both in\n@@ -15357,6 +15358,7 @@ kind @code{omp_proc_bind_kind}:\n @table @asis\n @item @code{omp_proc_bind_false}\n @item @code{omp_proc_bind_true}\n+@item @code{omp_proc_bind_primary}\n @item @code{omp_proc_bind_master}\n @item @code{omp_proc_bind_close}\n @item @code{omp_proc_bind_spread}"}, {"sha": "ec558656602fa876247658e64f37dcccfbdce46f", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432de08498142d2266c0fb05f2c555a7f1e10ddd/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432de08498142d2266c0fb05f2c555a7f1e10ddd/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=432de08498142d2266c0fb05f2c555a7f1e10ddd", "patch": "@@ -2231,7 +2231,10 @@ gfc_match_omp_clauses (gfc_omp_clauses **cp, const omp_mask mask,\n \t  if ((mask & OMP_CLAUSE_PROC_BIND)\n \t      && c->proc_bind == OMP_PROC_BIND_UNKNOWN)\n \t    {\n-\t      if (gfc_match (\"proc_bind ( master )\") == MATCH_YES)\n+\t      /* Primary is new and master is deprecated in OpenMP 5.1.  */\n+\t      if (gfc_match (\"proc_bind ( primary )\") == MATCH_YES)\n+\t\tc->proc_bind = OMP_PROC_BIND_MASTER;\n+\t      else if (gfc_match (\"proc_bind ( master )\") == MATCH_YES)\n \t\tc->proc_bind = OMP_PROC_BIND_MASTER;\n \t      else if (gfc_match (\"proc_bind ( spread )\") == MATCH_YES)\n \t\tc->proc_bind = OMP_PROC_BIND_SPREAD;"}, {"sha": "3d3b35e95090e6b94b1c957c6dfb5896bf96e5a2", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432de08498142d2266c0fb05f2c555a7f1e10ddd/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432de08498142d2266c0fb05f2c555a7f1e10ddd/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=432de08498142d2266c0fb05f2c555a7f1e10ddd", "patch": "@@ -3865,6 +3865,9 @@ gfc_trans_omp_clauses (stmtblock_t *block, gfc_omp_clauses *clauses,\n       c = build_omp_clause (gfc_get_location (&where), OMP_CLAUSE_PROC_BIND);\n       switch (clauses->proc_bind)\n \t{\n+\tcase OMP_PROC_BIND_PRIMARY:\n+\t  OMP_CLAUSE_PROC_BIND_KIND (c) = OMP_CLAUSE_PROC_BIND_PRIMARY;\n+\t  break;\n \tcase OMP_PROC_BIND_MASTER:\n \t  OMP_CLAUSE_PROC_BIND_KIND (c) = OMP_CLAUSE_PROC_BIND_MASTER;\n \t  break;"}, {"sha": "c86fd9184942c4b0bf85f227b0b2b7ed7bee6525", "filename": "gcc/testsuite/c-c++-common/gomp/pr61486-2.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432de08498142d2266c0fb05f2c555a7f1e10ddd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr61486-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432de08498142d2266c0fb05f2c555a7f1e10ddd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr61486-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr61486-2.c?ref=432de08498142d2266c0fb05f2c555a7f1e10ddd", "patch": "@@ -216,6 +216,19 @@ test (int n, int o, int p, int q, int r, int s, int *pp)\n \t  s = i * 10;\n \t}\n     #pragma omp target device (n + 1) if (n != 6)map(from:n) map(alloc:a[2:o-2])\n+    #pragma omp teams distribute parallel for simd if (n != 6)default(shared) \\\n+    \tprivate (p) firstprivate (q) shared (n) reduction (+: r) \\\n+    \tthread_limit (n * 2) dist_schedule (static, 4) num_threads (n + 4) \\\n+    \tproc_bind (primary) lastprivate (s) schedule (static, 8) \\\n+    \tnum_teams (n + 4) safelen(16) linear(i:1) aligned (pp:4)\n+      for (i = 0; i < 10; i++)\n+\t{\n+\t  r = r + 1;\n+\t  p = q;\n+\t  a[2+i] = p + q;\n+\t  s = i * 10;\n+\t}\n+    #pragma omp target device (n + 1) if (n != 6)map(from:n) map(alloc:a[2:o-2])\n     #pragma omp teams distribute simd default(shared) \\\n     \tprivate (p) firstprivate (q) shared (n) reduction (+: r) \\\n     \tthread_limit (n * 2) dist_schedule (static, 4) collapse (2) \\"}, {"sha": "cb1543b6b189e8d5252007630dc362791bed1ce5", "filename": "gcc/testsuite/gfortran.dg/gomp/affinity-1.f90", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432de08498142d2266c0fb05f2c555a7f1e10ddd/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Faffinity-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432de08498142d2266c0fb05f2c555a7f1e10ddd/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Faffinity-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Faffinity-1.f90?ref=432de08498142d2266c0fb05f2c555a7f1e10ddd", "patch": "@@ -9,6 +9,15 @@\n     j = 8\n   end do\n !$omp end parallel do\n+!$omp parallel do default(none)proc_bind(primary)shared(a)\n+  do i = 1, 10\n+    j = 4\n+    do j = 1, 10\n+      a(i, j) = i + j\n+    end do\n+    j = 8\n+  end do\n+!$omp end parallel do\n !$omp parallel proc_bind (close)\n !$omp parallel default(none) proc_bind (spread) firstprivate(a) private (i)\n   do i = 1, 10"}, {"sha": "9a1aa9ac610a10e0bf3314eef4e06fb8f2ed2f60", "filename": "gcc/tree-core.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432de08498142d2266c0fb05f2c555a7f1e10ddd/gcc%2Ftree-core.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432de08498142d2266c0fb05f2c555a7f1e10ddd/gcc%2Ftree-core.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-core.h?ref=432de08498142d2266c0fb05f2c555a7f1e10ddd", "patch": "@@ -1498,6 +1498,7 @@ enum omp_clause_proc_bind_kind\n   /* Numbers should match omp_proc_bind_t enum in omp.h.  */\n   OMP_CLAUSE_PROC_BIND_FALSE = 0,\n   OMP_CLAUSE_PROC_BIND_TRUE = 1,\n+  OMP_CLAUSE_PROC_BIND_PRIMARY = 2,\n   OMP_CLAUSE_PROC_BIND_MASTER = 2,\n   OMP_CLAUSE_PROC_BIND_CLOSE = 3,\n   OMP_CLAUSE_PROC_BIND_SPREAD = 4,"}, {"sha": "31f886f6b2a516e288609456620da98da3794506", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432de08498142d2266c0fb05f2c555a7f1e10ddd/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432de08498142d2266c0fb05f2c555a7f1e10ddd/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=432de08498142d2266c0fb05f2c555a7f1e10ddd", "patch": "@@ -1008,6 +1008,8 @@ dump_omp_clause (pretty_printer *pp, tree clause, int spc, dump_flags_t flags)\n       switch (OMP_CLAUSE_PROC_BIND_KIND (clause))\n \t{\n \tcase OMP_CLAUSE_PROC_BIND_MASTER:\n+\t  /* Same enum value: case OMP_CLAUSE_PROC_BIND_PRIMARY: */\n+\t  /* TODO: Change to 'primary' for OpenMP 5.1.  */\n \t  pp_string (pp, \"master\");\n \t  break;\n \tcase OMP_CLAUSE_PROC_BIND_CLOSE:"}, {"sha": "9216998f6f7bbfbe2bc86700826e718a2425753a", "filename": "libgomp/env.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432de08498142d2266c0fb05f2c555a7f1e10ddd/libgomp%2Fenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432de08498142d2266c0fb05f2c555a7f1e10ddd/libgomp%2Fenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fenv.c?ref=432de08498142d2266c0fb05f2c555a7f1e10ddd", "patch": "@@ -437,6 +437,7 @@ parse_bind_var (const char *name, char *p1stvalue,\n     { \"false\", 5, omp_proc_bind_false },\n     { \"true\", 4, omp_proc_bind_true },\n     { \"master\", 6, omp_proc_bind_master },\n+    { \"primary\", 7, omp_proc_bind_primary },\n     { \"close\", 5, omp_proc_bind_close },\n     { \"spread\", 6, omp_proc_bind_spread }\n   };\n@@ -450,14 +451,14 @@ parse_bind_var (const char *name, char *p1stvalue,\n   if (*env == '\\0')\n     goto invalid;\n \n-  for (i = 0; i < 5; i++)\n+  for (i = 0; i < 6; i++)\n     if (strncasecmp (env, kinds[i].name, kinds[i].len) == 0)\n       {\n \tvalue = kinds[i].kind;\n \tenv += kinds[i].len;\n \tbreak;\n       }\n-  if (i == 5)\n+  if (i == 6)\n     goto invalid;\n \n   while (isspace ((unsigned char) *env))\n@@ -497,14 +498,14 @@ parse_bind_var (const char *name, char *p1stvalue,\n \t      if (*env == '\\0')\n \t\tgoto invalid;\n \n-\t      for (i = 2; i < 5; i++)\n+\t      for (i = 2; i < 6; i++)\n \t\tif (strncasecmp (env, kinds[i].name, kinds[i].len) == 0)\n \t\t  {\n \t\t    value = kinds[i].kind;\n \t\t    env += kinds[i].len;\n \t\t    break;\n \t\t  }\n-\t      if (i == 5)\n+\t      if (i == 6)\n \t\tgoto invalid;\n \n \t      values[nvalues++] = value;\n@@ -1277,7 +1278,7 @@ omp_display_env (int verbose)\n       fputs (\"TRUE\", stderr);\n       break;\n     case omp_proc_bind_master:\n-      fputs (\"MASTER\", stderr);\n+      fputs (\"MASTER\", stderr); /* TODO: Change to PRIMARY for OpenMP 5.1.  */\n       break;\n     case omp_proc_bind_close:\n       fputs (\"CLOSE\", stderr);\n@@ -1290,7 +1291,7 @@ omp_display_env (int verbose)\n     switch (gomp_bind_var_list[i])\n       {\n       case omp_proc_bind_master:\n-\tfputs (\",MASTER\", stderr);\n+\tfputs (\",MASTER\", stderr); /* TODO: Change to PRIMARY for OpenMP 5.1. */\n \tbreak;\n       case omp_proc_bind_close:\n \tfputs (\",CLOSE\", stderr);"}, {"sha": "1bfa26ea4973ba6d447c1b7b9ebb628d10631806", "filename": "libgomp/libgomp.texi", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432de08498142d2266c0fb05f2c555a7f1e10ddd/libgomp%2Flibgomp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432de08498142d2266c0fb05f2c555a7f1e10ddd/libgomp%2Flibgomp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.texi?ref=432de08498142d2266c0fb05f2c555a7f1e10ddd", "patch": "@@ -660,8 +660,9 @@ one thread per CPU online is used.\n @item @emph{Description}:\n This functions returns the currently active thread affinity policy, which is\n set via @env{OMP_PROC_BIND}.  Possible values are @code{omp_proc_bind_false},\n-@code{omp_proc_bind_true}, @code{omp_proc_bind_master},\n-@code{omp_proc_bind_close} and @code{omp_proc_bind_spread}.\n+@code{omp_proc_bind_true}, @code{omp_proc_bind_primary},\n+@code{omp_proc_bind_master}, @code{omp_proc_bind_close} and @code{omp_proc_bind_spread},\n+where @code{omp_proc_bind_master} is an alias for @code{omp_proc_bind_primary}.\n \n @item @emph{C/C++}:\n @multitable @columnfractions .20 .80\n@@ -822,7 +823,7 @@ Returns a unique thread identification number within the current team.\n In a sequential parts of the program, @code{omp_get_thread_num}\n always returns 0.  In parallel regions the return value varies\n from 0 to @code{omp_get_num_threads}-1 inclusive.  The return\n-value of the master thread of a team is always 0.\n+value of the primary thread of a team is always 0.\n \n @item @emph{C/C++}:\n @multitable @columnfractions .20 .80\n@@ -1670,11 +1671,12 @@ nesting by default.  If undefined one thread per CPU is used.\n Specifies whether threads may be moved between processors.  If set to\n @code{TRUE}, OpenMP theads should not be moved; if set to @code{FALSE}\n they may be moved.  Alternatively, a comma separated list with the\n-values @code{MASTER}, @code{CLOSE} and @code{SPREAD} can be used to specify\n-the thread affinity policy for the corresponding nesting level.  With\n-@code{MASTER} the worker threads are in the same place partition as the\n-master thread.  With @code{CLOSE} those are kept close to the master thread\n-in contiguous place partitions.  And with @code{SPREAD} a sparse distribution\n+values @code{PRIMARY}, @code{MASTER}, @code{CLOSE} and @code{SPREAD} can\n+be used to specify the thread affinity policy for the corresponding nesting\n+level.  With @code{PRIMARY} and @code{MASTER} the worker threads are in the\n+same place partition as the primary thread.  With @code{CLOSE} those are\n+kept close to the primary thread in contiguous place partitions.  And\n+with @code{SPREAD} a sparse distribution\n across the place partitions is used.  Specifying more than one item in the\n list will automatically enable nesting by default.\n \n@@ -1951,23 +1953,23 @@ instance.\n @item @code{$<priority>} is an optional priority for the worker threads of a\n thread pool according to @code{pthread_setschedparam}.  In case a priority\n value is omitted, then a worker thread will inherit the priority of the OpenMP\n-master thread that created it.  The priority of the worker thread is not\n-changed after creation, even if a new OpenMP master thread using the worker has\n+primary thread that created it.  The priority of the worker thread is not\n+changed after creation, even if a new OpenMP primary thread using the worker has\n a different priority.\n @item @code{@@<scheduler-name>} is the scheduler instance name according to the\n RTEMS application configuration.\n @end itemize\n In case no thread pool configuration is specified for a scheduler instance,\n-then each OpenMP master thread of this scheduler instance will use its own\n+then each OpenMP primary thread of this scheduler instance will use its own\n dynamically allocated thread pool.  To limit the worker thread count of the\n-thread pools, each OpenMP master thread must call @code{omp_set_num_threads}.\n+thread pools, each OpenMP primary thread must call @code{omp_set_num_threads}.\n @item @emph{Example}:\n Lets suppose we have three scheduler instances @code{IO}, @code{WRK0}, and\n @code{WRK1} with @env{GOMP_RTEMS_THREAD_POOLS} set to\n @code{\"1@@WRK0:3$4@@WRK1\"}.  Then there are no thread pool restrictions for\n scheduler instance @code{IO}.  In the scheduler instance @code{WRK0} there is\n one thread pool available.  Since no priority is specified for this scheduler\n-instance, the worker thread inherits the priority of the OpenMP master thread\n+instance, the worker thread inherits the priority of the OpenMP primary thread\n that created it.  In the scheduler instance @code{WRK1} there are three thread\n pools available and their worker threads run at priority four.\n @end table\n@@ -3881,7 +3883,7 @@ if (omp_get_thread_num () == 0)\n @end smallexample\n \n Alternately, we generate two copies of the parallel subfunction\n-and only include this in the version run by the master thread.\n+and only include this in the version run by the primary thread.\n Surely this is not worthwhile though...\n \n \n@@ -4018,7 +4020,7 @@ broadcast would have to happen via SINGLE machinery instead.\n The private struct mentioned in the previous section should have \n a pointer to an array of the type of the variable, indexed by the \n thread's @var{team_id}.  The thread stores its final value into the \n-array, and after the barrier, the master thread iterates over the\n+array, and after the barrier, the primary thread iterates over the\n array to collect the values.\n \n "}, {"sha": "314f964f8413d381c87953d4af54d552254d4468", "filename": "libgomp/omp.h.in", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432de08498142d2266c0fb05f2c555a7f1e10ddd/libgomp%2Fomp.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432de08498142d2266c0fb05f2c555a7f1e10ddd/libgomp%2Fomp.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fomp.h.in?ref=432de08498142d2266c0fb05f2c555a7f1e10ddd", "patch": "@@ -32,6 +32,12 @@\n # define __GOMP_DEPRECATED_5_0\n #endif\n \n+#if defined(__GNUC__) && _OPENMP >= 202011\n+# define __GOMP_DEPRECATED_5_1 __attribute__((__deprecated__))\n+#else\n+# define __GOMP_DEPRECATED_5_1\n+#endif\n+\n #ifndef _LIBGOMP_OMP_LOCK_DEFINED\n #define _LIBGOMP_OMP_LOCK_DEFINED 1\n /* These two structures get edited by the libgomp build process to \n@@ -64,7 +70,9 @@ typedef enum omp_proc_bind_t\n {\n   omp_proc_bind_false = 0,\n   omp_proc_bind_true = 1,\n-  omp_proc_bind_master = 2,\n+  omp_proc_bind_primary = 2,\n+  omp_proc_bind_master __GOMP_DEPRECATED_5_1\n+    = omp_proc_bind_primary,\n   omp_proc_bind_close = 3,\n   omp_proc_bind_spread = 4\n } omp_proc_bind_t;"}, {"sha": "6394e65bbf7b66b214401c2d8569e6c763459e4b", "filename": "libgomp/omp_lib.f90.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432de08498142d2266c0fb05f2c555a7f1e10ddd/libgomp%2Fomp_lib.f90.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432de08498142d2266c0fb05f2c555a7f1e10ddd/libgomp%2Fomp_lib.f90.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fomp_lib.f90.in?ref=432de08498142d2266c0fb05f2c555a7f1e10ddd", "patch": "@@ -48,6 +48,8 @@\n                  parameter :: omp_proc_bind_false = 0\n         integer (omp_proc_bind_kind), &\n                  parameter :: omp_proc_bind_true = 1\n+        integer (omp_proc_bind_kind), &\n+                 parameter :: omp_proc_bind_primary = 2\n         integer (omp_proc_bind_kind), &\n                  parameter :: omp_proc_bind_master = 2\n         integer (omp_proc_bind_kind), &\n@@ -670,6 +672,10 @@\n \n #if _OPENMP >= 201811\n !GCC$ ATTRIBUTES DEPRECATED :: omp_get_nested, omp_set_nested\n+#endif\n+\n+#if _OPENMP >= 202011\n+!GCC$ ATTRIBUTES DEPRECATED :: omp_proc_bind_master\n #endif\n \n       end module omp_lib"}, {"sha": "f2ad445f9241db482b89ccb8b350e86610e6b9e2", "filename": "libgomp/omp_lib.h.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432de08498142d2266c0fb05f2c555a7f1e10ddd/libgomp%2Fomp_lib.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432de08498142d2266c0fb05f2c555a7f1e10ddd/libgomp%2Fomp_lib.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fomp_lib.h.in?ref=432de08498142d2266c0fb05f2c555a7f1e10ddd", "patch": "@@ -40,11 +40,13 @@\n       parameter (omp_proc_bind_kind = 4)\n       integer (omp_proc_bind_kind) omp_proc_bind_false\n       integer (omp_proc_bind_kind) omp_proc_bind_true\n+      integer (omp_proc_bind_kind) omp_proc_bind_primary\n       integer (omp_proc_bind_kind) omp_proc_bind_master\n       integer (omp_proc_bind_kind) omp_proc_bind_close\n       integer (omp_proc_bind_kind) omp_proc_bind_spread\n       parameter (omp_proc_bind_false = 0)\n       parameter (omp_proc_bind_true = 1)\n+      parameter (omp_proc_bind_primary = 2)\n       parameter (omp_proc_bind_master = 2)\n       parameter (omp_proc_bind_close = 3)\n       parameter (omp_proc_bind_spread = 4)"}, {"sha": "574a9f7b69ad81e2f24fa5060027caad99710f65", "filename": "libgomp/testsuite/libgomp.c/affinity-1.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432de08498142d2266c0fb05f2c555a7f1e10ddd/libgomp%2Ftestsuite%2Flibgomp.c%2Faffinity-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432de08498142d2266c0fb05f2c555a7f1e10ddd/libgomp%2Ftestsuite%2Flibgomp.c%2Faffinity-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Faffinity-1.c?ref=432de08498142d2266c0fb05f2c555a7f1e10ddd", "patch": "@@ -183,20 +183,26 @@ main ()\n   int test_false = env_proc_bind && strcmp (env_proc_bind, \"false\") == 0;\n   int test_true = env_proc_bind && strcmp (env_proc_bind, \"true\") == 0;\n   int test_spread_master_close\n-    = env_proc_bind && strcmp (env_proc_bind, \"spread,master,close\") == 0;\n+    = (env_proc_bind\n+       && (strcmp (env_proc_bind, \"spread,master,close\") == 0\n+\t   || strcmp (env_proc_bind, \"spread,primary,close\") == 0));\n   char *env_places = getenv (\"OMP_PLACES\");\n   int test_places = 0;\n \n+  if (omp_proc_bind_master != omp_proc_bind_primary)\n+    abort ();\n+\n #ifdef DO_FORK\n   if (env_places == NULL && contig_cpucount >= 8 && test_false\n       && getenv (\"GOMP_AFFINITY\") == NULL)\n     {\n       int i, j, status;\n       pid_t pid;\n-      for (j = 0; j < 2; j++)\n+      for (j = 0; j < 3; j++)\n \t{\n-\t  if (setenv (\"OMP_PROC_BIND\", j ? \"spread,master,close\" : \"true\", 1)\n-\t      < 0)\n+\t  if (setenv (\"OMP_PROC_BIND\",\n+\t\t      j > 1 ? \"spread,primary,close\"\n+\t\t\t    : (j ? \"spread,master,close\" : \"true\"), 1) < 0)\n \t    break;\n \t  for (i = sizeof (places_array) / sizeof (places_array[0]) - 1;\n \t       i; --i)"}]}