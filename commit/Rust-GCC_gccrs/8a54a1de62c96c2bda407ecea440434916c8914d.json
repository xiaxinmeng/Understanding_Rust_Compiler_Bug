{"sha": "8a54a1de62c96c2bda407ecea440434916c8914d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE1NGExZGU2MmM5NmMyYmRhNDA3ZWNlYTQ0MDQzNDkxNmM4OTE0ZA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-04-13T06:30:04Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-04-13T06:30:04Z"}, "message": "re PR fortran/26766 ([F2003] Recursive I/O still (again) broken)\n\n2006-04-12  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/26766\n\t* gfortran.dg/write_recursive.f90: New test.\n\nFrom-SVN: r112915", "tree": {"sha": "10384a6ae6fe313b49cff11175cf5c405ad030b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10384a6ae6fe313b49cff11175cf5c405ad030b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a54a1de62c96c2bda407ecea440434916c8914d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a54a1de62c96c2bda407ecea440434916c8914d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a54a1de62c96c2bda407ecea440434916c8914d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a54a1de62c96c2bda407ecea440434916c8914d/comments", "author": null, "committer": null, "parents": [{"sha": "6f34d6e078fafa8cdc99a2c3b98d5d8882c62303", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f34d6e078fafa8cdc99a2c3b98d5d8882c62303", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f34d6e078fafa8cdc99a2c3b98d5d8882c62303"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "758f363265e661b07582d564f77d99703f54c7ab", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a54a1de62c96c2bda407ecea440434916c8914d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a54a1de62c96c2bda407ecea440434916c8914d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8a54a1de62c96c2bda407ecea440434916c8914d", "patch": "@@ -1,3 +1,8 @@\n+2006-04-12  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/26766\n+\t* gfortran.dg/write_recursive.f90: New test.\n+\n 2006-04-11  Mark Mitchell  <mark@codesourcery.com>\n \n \t* g++.dg/parse/dtor7.C: New test."}, {"sha": "20014abd228cd1b8e02af009644001dba1fb1b46", "filename": "gcc/testsuite/gfortran.dg/write_recursive.f90", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a54a1de62c96c2bda407ecea440434916c8914d/gcc%2Ftestsuite%2Fgfortran.dg%2Fwrite_recursive.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a54a1de62c96c2bda407ecea440434916c8914d/gcc%2Ftestsuite%2Fgfortran.dg%2Fwrite_recursive.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fwrite_recursive.f90?ref=8a54a1de62c96c2bda407ecea440434916c8914d", "patch": "@@ -0,0 +1,39 @@\n+! { dg-do run }\n+! PR26766 Recursive I/O with internal units\n+! Test case derived from example in PR\n+! Submitted by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+program pr26766\n+  implicit none\n+  character (len=8) :: str, tmp\n+  write (str, '(a)')  bar (1234)\n+  if (str.ne.\"abcd\") call abort()\n+  str = \"wxyz\"\n+  write (str, '(2a4)') foo (1), bar (1)\n+  if (str.ne.\"abcdabcd\") call abort()\n+\n+contains\n+\n+  function foo (i) result (s)\n+    integer, intent(in) :: i\n+    character (len=4)   :: s, t\n+    if (i < 0) then\n+       s = \"1234\"\n+    else\n+       ! Internal I/O, allowed recursive in f2003, see section 9.11\n+       write (s, '(a)') \"abcd\"\n+    end if\n+  end function foo\n+  \n+  function bar (i) result (s)\n+    integer, intent(in) :: i\n+    character (len=4)   :: s, t\n+    if (i < 0) then\n+      s = \"4567\"\n+    else\n+      write (s, '(a)') foo(i)\n+    end if\n+  end function bar\n+\n+end program pr26766\n+\n+"}]}