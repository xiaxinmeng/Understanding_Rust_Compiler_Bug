{"sha": "91442c2081b37f63adb5d0c3f626949abcce406a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE0NDJjMjA4MWIzN2Y2M2FkYjVkMGMzZjYyNjk0OWFiY2NlNDA2YQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2005-02-01T17:37:25Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2005-02-01T17:37:25Z"}, "message": "README: Describe tests in source directory.\n\n\t* gcc.test-framework/README: Describe tests in source directory.\n\t* gcc.test-framework/test-framework.awk: Handle dg- tests.\n\t* gcc.test-framework/test-framework.exp: Handle dg- tests.\n\t* gcc.test-framework/dg-bogus-exp-P.c: New test.\n\t* gcc.test-framework/dg-bogus-exp-XF.c: New test.\n\t* gcc.test-framework/dg-do-assemble-exp-P.c: New test.\n\t* gcc.test-framework/dg-do-compile-exp-P.c: New test.\n\t* gcc.test-framework/dg-do-link-exp-P.c: New test.\n\t* gcc.test-framework/dg-do-run-exp-P.c: New test.\n\t* gcc.test-framework/dg-dot-run-exp-P.c: New test.\n\t* gcc.test-framework/dg-dot-run-exp-U.c: New test.\n\t* gcc.test-framework/dg-dox-run-exp-XF.c: New test.\n\t* gcc.test-framework/dg-error-exp-P.c: New test.\n\t* gcc.test-framework/dg-error-exp-XP.c: New test.\n\t* gcc.test-framework/dg-excess-errors-exp-XF.c: New test.\n\t* gcc.test-framework/dg-excess-errors-exp-XP.c: New test.\n\t* gcc.test-framework/dg-output-exp-P.c: New test.\n\t* gcc.test-framework/dg-output-exp-XF.c: New test.\n\t* gcc.test-framework/dg-warning-exp-P.c: New test.\n\t* gcc.misc-tests/dg-1.c: Remove.\n\t* gcc.misc-tests/dg-2.c: Remove.\n\t* gcc.misc-tests/dg-3.c: Remove.\n\t* gcc.misc-tests/dg-4.c: Remove.\n\t* gcc.misc-tests/dg-5.c: Remove.\n\t* gcc.misc-tests/dg-6.c: Remove.\n\t* gcc.misc-tests/dg-7.c: Remove.\n\t* gcc.misc-tests/dg-8.c: Remove.\n\t* gcc.misc-tests/dg-9.c: Remove.\n\t* gcc.misc-tests/dg-10.c: Remove.\n\t* gcc.misc-tests/dg-11.c: Remove.\n\t* gcc.misc-tests/dg-12.c: Remove.\n\t* gcc.misc-tests/dg-test.exp: Remove.\n\nFrom-SVN: r94550", "tree": {"sha": "9082927fe5de46b203efe64a06be20e624e63746", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9082927fe5de46b203efe64a06be20e624e63746"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91442c2081b37f63adb5d0c3f626949abcce406a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91442c2081b37f63adb5d0c3f626949abcce406a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91442c2081b37f63adb5d0c3f626949abcce406a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91442c2081b37f63adb5d0c3f626949abcce406a/comments", "author": null, "committer": null, "parents": [{"sha": "0e7eed46026720d0a1a0696128499293913566bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e7eed46026720d0a1a0696128499293913566bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e7eed46026720d0a1a0696128499293913566bf"}], "stats": {"total": 251, "additions": 142, "deletions": 109}, "files": [{"sha": "1a394f2fef167fde338af6bbaa90bc8b0311063b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=91442c2081b37f63adb5d0c3f626949abcce406a", "patch": "@@ -1,5 +1,38 @@\n 2005-02-01  Janis Johnson  <janis187@us.ibm.com>\n \n+\t* gcc.test-framework/README: Describe tests in source directory.\n+\t* gcc.test-framework/test-framework.awk: Handle dg- tests.\n+\t* gcc.test-framework/test-framework.exp: Handle dg- tests.\n+\t* gcc.test-framework/dg-bogus-exp-P.c: New test.\n+\t* gcc.test-framework/dg-bogus-exp-XF.c: New test.\n+\t* gcc.test-framework/dg-do-assemble-exp-P.c: New test.\n+\t* gcc.test-framework/dg-do-compile-exp-P.c: New test.\n+\t* gcc.test-framework/dg-do-link-exp-P.c: New test.\n+\t* gcc.test-framework/dg-do-run-exp-P.c: New test.\n+\t* gcc.test-framework/dg-dot-run-exp-P.c: New test.\n+\t* gcc.test-framework/dg-dot-run-exp-U.c: New test.\n+\t* gcc.test-framework/dg-dox-run-exp-XF.c: New test.\n+\t* gcc.test-framework/dg-error-exp-P.c: New test.\n+\t* gcc.test-framework/dg-error-exp-XP.c: New test.\n+\t* gcc.test-framework/dg-excess-errors-exp-XF.c: New test.\n+\t* gcc.test-framework/dg-excess-errors-exp-XP.c: New test.\n+\t* gcc.test-framework/dg-output-exp-P.c: New test.\n+\t* gcc.test-framework/dg-output-exp-XF.c: New test.\n+\t* gcc.test-framework/dg-warning-exp-P.c: New test.\n+\t* gcc.misc-tests/dg-1.c: Remove.\n+\t* gcc.misc-tests/dg-2.c: Remove.\n+\t* gcc.misc-tests/dg-3.c: Remove.\n+\t* gcc.misc-tests/dg-4.c: Remove.\n+\t* gcc.misc-tests/dg-5.c: Remove.\n+\t* gcc.misc-tests/dg-6.c: Remove.\n+\t* gcc.misc-tests/dg-7.c: Remove.\n+\t* gcc.misc-tests/dg-8.c: Remove.\n+\t* gcc.misc-tests/dg-9.c: Remove.\n+\t* gcc.misc-tests/dg-10.c: Remove.\n+\t* gcc.misc-tests/dg-11.c: Remove.\n+\t* gcc.misc-tests/dg-12.c: Remove.\n+\t* gcc.misc-tests/dg-test.exp: Remove.\n+\n \t* gcc.test-framework/test-framework.awk: Change recording and\n \tprinting of passes and failures.\n "}, {"sha": "319f8a20a7b895cd6cf70a8ca2e5d384d2f2d994", "filename": "gcc/testsuite/gcc.misc-tests/dg-1.c", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e7eed46026720d0a1a0696128499293913566bf/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fdg-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e7eed46026720d0a1a0696128499293913566bf/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fdg-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fdg-1.c?ref=0e7eed46026720d0a1a0696128499293913566bf", "patch": "@@ -1,14 +0,0 @@\n-/* Test the tester.  */\n-/* { dg-prms-id 42 } */\n-/* { dg-do compile } */\n-\n-main () { return 0; }\n-\n-/* { dg-final { if ![file exists dg-1.s] { fail \"dg-1.c (compile)\"; return; } } } */\n-\n-/* { dg-final { set tmp [grep dg-1.s main line]\t\t\t} } */\n-/* { dg-final { if ![string match \"\" $tmp] \\{\t\t\t} } */\n-/* { dg-final {     pass \"dg-1.c (main function present)\"\t} } */\n-/* { dg-final { \\} else \\{\t\t\t\t\t} } */\n-/* { dg-final {     fail \"dg-1.c (main function not present)\"\t} } */\n-/* { dg-final { \\}\t\t\t\t\t\t} } */"}, {"sha": "6d7b3441623b5d92f1322ce56f115b3c9b6f954d", "filename": "gcc/testsuite/gcc.misc-tests/dg-10.c", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e7eed46026720d0a1a0696128499293913566bf/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fdg-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e7eed46026720d0a1a0696128499293913566bf/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fdg-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fdg-10.c?ref=0e7eed46026720d0a1a0696128499293913566bf", "patch": "@@ -1,12 +0,0 @@\n-/* Test the tester.  */\n-/* { dg-prms-id 42 } */\n-/* { dg-options \"-Wall\" } */\n-\n-/* FIXME: we want to test dg-lose here.  Anyone know of a good way to\n-   crash the compiler?  */\n-\n-int\n-main (int argc, char *argv[])\n-{\n-  return 0;\n-}"}, {"sha": "bb40387e632cb8dc8a33b9a1d87c0569004ff796", "filename": "gcc/testsuite/gcc.misc-tests/dg-2.c", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e7eed46026720d0a1a0696128499293913566bf/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fdg-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e7eed46026720d0a1a0696128499293913566bf/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fdg-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fdg-2.c?ref=0e7eed46026720d0a1a0696128499293913566bf", "patch": "@@ -1,11 +0,0 @@\n-/* Test the tester.  */\n-/* { dg-prms-id 42 } */\n-/* { dg-do assemble } */\n-\n-main () { return 0; }\n-\n-/* { dg-final { if [file exists dg-2.o] \\{\t\t\t} } */\n-/* { dg-final {     pass \"dg-2.c (assemble: produce .o test)\"\t} } */\n-/* { dg-final { \\} else \\{\t\t\t\t\t} } */\n-/* { dg-final {     fail \"dg-2.c (assemble: produce .o test)\"\t} } */\n-/* { dg-final { \\}\t\t\t\t\t\t} } */"}, {"sha": "017ab279f8ea09b9249984f7f35dc0ba0d3ef4d6", "filename": "gcc/testsuite/gcc.misc-tests/dg-3.c", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e7eed46026720d0a1a0696128499293913566bf/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fdg-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e7eed46026720d0a1a0696128499293913566bf/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fdg-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fdg-3.c?ref=0e7eed46026720d0a1a0696128499293913566bf", "patch": "@@ -1,11 +0,0 @@\n-/* Test the tester.  */\n-/* { dg-prms-id 42 } */\n-/* { dg-do link } */\n-\n-main () { return 0; }\n-\n-/* { dg-final { if [file exists a.out] \\{\t\t\t} } */\n-/* { dg-final {     pass \"dg-2.c (link: produce a.out test)\"\t} } */\n-/* { dg-final { \\} else \\{\t\t\t\t\t} } */\n-/* { dg-final {     fail \"dg-2.c (link: produce a.out test)\"\t} } */\n-/* { dg-final { \\}\t\t\t\t\t\t} } */"}, {"sha": "820e28de4716d7472a5711775457ef1bd9a01480", "filename": "gcc/testsuite/gcc.misc-tests/dg-test.exp", "status": "removed", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e7eed46026720d0a1a0696128499293913566bf/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fdg-test.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e7eed46026720d0a1a0696128499293913566bf/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fdg-test.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fdg-test.exp?ref=0e7eed46026720d0a1a0696128499293913566bf", "patch": "@@ -1,38 +0,0 @@\n-#   Copyright (C) 1997 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2 of the License, or\n-# (at your option) any later version.\n-# \n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-# \n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  \n-\n-# Test the dg.exp driver.\n-# This is a testsuite tester tester.  As such we *want* to test things like\n-# expected failure handling.  But expected failures must continually be\n-# monitored and so in the normal case we create unnecessary work.  So only\n-# run these tests if DG_TEST is defined to \"yes\".\n-\n-global DG_TEST\n-if { ![info exists DG_TEST] || \"$DG_TEST\" != \"yes\" } {\n-    return\n-}\n-\n-# Load support procs.\n-load_lib gcc-dg.exp\n-\n-# Initialize harness.\n-dg-init\n-\n-# Main loop.\n-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/dg-*.c]] \"\" \"\"\n-\n-# All done.\n-dg-finish"}, {"sha": "3a9d4f086afd5db695228dce4a14adf923184144", "filename": "gcc/testsuite/gcc.test-framework/README", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2FREADME?ref=91442c2081b37f63adb5d0c3f626949abcce406a", "patch": "@@ -1,10 +1,11 @@\n Check the test directives used in GCC's testsuite by generating and\n running tests that use combinations of those commands or that stress\n-the selector expressions that can be used in those directives.\n+the selector expressions that can be used in those directives.  Also\n+run a few tests of specific functionality from the source directory.\n                                                                                 \n-Each test has two parts: a file ending in \"-1.c\" whose expected result\n-is encoded in the filename after \"-exp-\", and a file ending in \"-2.c\"\n-which is always expected to pass.\n+Each generated test has two parts: a file ending in \"-1.c\" whose\n+expected result is encoded in the filename after \"-exp-\", and a file\n+ending in \"-2.c\" which is always expected to pass.\n                                                                                 \n This test directory is normally skipped and is not meant to be run at\n the same time as other parts of the testsuite; it's only of interest to\n@@ -21,4 +22,4 @@ To check the results:\n     awk -f ${TF}/test-framework.awk gcc/testsuite/gcc.sum\n                                                                                 \n The awk script prints unexpected results followed by the number of tests\n-that passed.\n+that passed and failed."}, {"sha": "003264a72df4a0b1668dae00430c0b16d1dd8061", "filename": "gcc/testsuite/gcc.test-framework/dg-bogus-exp-P.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-bogus-exp-P.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-bogus-exp-P.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-bogus-exp-P.c?ref=91442c2081b37f63adb5d0c3f626949abcce406a", "patch": "@@ -0,0 +1,8 @@\n+/* Test the tester; previously part of gcc.misc-tests/dg-9.c.  */\n+/* { dg-prms-id 42 } */\n+/* { dg-options \"-Wall\" } */\n+\n+int main (int argc, char *argv[])\n+{\n+  return 0; /* { dg-bogus \"foobar\" \"bogus fail test\" } */\n+}"}, {"sha": "60c9147af6eec5dccac798acf5b47c1ca7fb2172", "filename": "gcc/testsuite/gcc.test-framework/dg-bogus-exp-XF.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-bogus-exp-XF.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-bogus-exp-XF.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-bogus-exp-XF.c?ref=91442c2081b37f63adb5d0c3f626949abcce406a", "patch": "@@ -0,0 +1,9 @@\n+/* Test the tester; previously part of gcc.misc-tests/dg-9.c.  */\n+/* { dg-prms-id 42 } */\n+/* { dg-options \"-Wall\" } */\n+\n+main (int argc, char *argv[])\n+{\t/* { dg-bogus \"return type\" \"bogus pass test\" { xfail *-*-* } } */\n+}\n+\n+/* { dg-excess-errors \"bogus pass test\" { xfail *-*-* } } */"}, {"sha": "316572092a653330f36339ea012877a686cc65f2", "filename": "gcc/testsuite/gcc.test-framework/dg-do-assemble-exp-P.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-do-assemble-exp-P.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-do-assemble-exp-P.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-do-assemble-exp-P.c?ref=91442c2081b37f63adb5d0c3f626949abcce406a", "patch": "@@ -0,0 +1,11 @@\n+/* Test the tester; previously gcc.misc-tests/dg-2.c.  */\n+/* { dg-prms-id 42 } */\n+/* { dg-do assemble } */\n+\n+main () { return 0; }\n+\n+/* { dg-final { if [file exists dg-do-assemble-exp-P.o] \\{\t} } */\n+/* { dg-final {     pass \"dg-do-assemble-exp-P.c (assemble: produce .o test)\"\t} } */\n+/* { dg-final { \\} else \\{\t\t\t\t\t} } */\n+/* { dg-final {     fail \"dg-do-assemble-exp-P.c (assemble: produce .o test)\"\t} } */\n+/* { dg-final { \\}\t\t\t\t\t\t} } */"}, {"sha": "93857465a1625c0375465fb4a6593bc2c79436c6", "filename": "gcc/testsuite/gcc.test-framework/dg-do-compile-exp-P.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-do-compile-exp-P.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-do-compile-exp-P.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-do-compile-exp-P.c?ref=91442c2081b37f63adb5d0c3f626949abcce406a", "patch": "@@ -0,0 +1,14 @@\n+/* Test the tester; previously gcc.misc-tests/dg-1.c.  */\n+/* { dg-prms-id 42 } */\n+/* { dg-do compile } */\n+\n+main () { return 0; }\n+\n+/* { dg-final { if ![file exists dg-do-compile-exp-P.s] { fail \"dg-do-compile-exp-P.c (compile)\"; return; } } } */\n+\n+/* { dg-final { set tmp [grep dg-do-compile-exp-P.s main line]\t\t\t} } */\n+/* { dg-final { if ![string match \"\" $tmp] \\{\t\t\t} } */\n+/* { dg-final {     pass \"dg-do-compile-exp-P.c (main function present)\"\t} } */\n+/* { dg-final { \\} else \\{\t\t\t\t\t} } */\n+/* { dg-final {     fail \"dg-do-compile-exp-P.c (main function not present)\"\t} } */\n+/* { dg-final { \\}\t\t\t\t\t\t} } */"}, {"sha": "254109e65264275ce2b217fb71cfb006219da69c", "filename": "gcc/testsuite/gcc.test-framework/dg-do-link-exp-P.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-do-link-exp-P.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-do-link-exp-P.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-do-link-exp-P.c?ref=91442c2081b37f63adb5d0c3f626949abcce406a", "patch": "@@ -0,0 +1,11 @@\n+/* Test the tester; previously gcc.misc-tests/dg-3.c.  */\n+/* { dg-prms-id 42 } */\n+/* { dg-do link } */\n+\n+main () { return 0; }\n+\n+/* { dg-final { if [file exists dg-do-link-exp-P.exe] \\{\t\t\t} } */\n+/* { dg-final {     pass \"dg-do-link-exp-P.c (link: produce a.out test)\"\t} } */\n+/* { dg-final { \\} else \\{\t\t\t\t\t} } */\n+/* { dg-final {     fail \"dg-do-link-exp-P.c (link: produce a.out test)\"\t} } */\n+/* { dg-final { \\}\t\t\t\t\t\t} } */"}, {"sha": "a7f3ffa680ab5e5d317b5907e1667d475b29154b", "filename": "gcc/testsuite/gcc.test-framework/dg-do-run-exp-P.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-do-run-exp-P.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-do-run-exp-P.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-do-run-exp-P.c?ref=91442c2081b37f63adb5d0c3f626949abcce406a", "patch": "@@ -1,4 +1,4 @@\n-/* Test the tester.  */\n+/* Test the tester; previously gcc.misc-tests/dg-4.c.  */\n /* { dg-prms-id 42 } */\n /* { dg-do run } */\n ", "previous_filename": "gcc/testsuite/gcc.misc-tests/dg-4.c"}, {"sha": "3bbc4e1bd405fabb8e506a11276e4a03fb156075", "filename": "gcc/testsuite/gcc.test-framework/dg-dot-run-exp-P.c", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-dot-run-exp-P.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-dot-run-exp-P.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-dot-run-exp-P.c?ref=91442c2081b37f63adb5d0c3f626949abcce406a", "patch": "@@ -1,6 +1,6 @@\n-/* Test the tester.  */\n+/* Test the tester; previously gcc.misc-tests/dg-11.c.  */\n /* { dg-prms-id 42 } */\n-/* { dg-do run { target sparc-sun-solaris2* } } */\n+/* { dg-do run { target *-*-* } } */\n /* The \\n is left out of the pattern because tcl's exec will remove it.  */\n /* { dg-output {Hello world[.]} } */\n ", "previous_filename": "gcc/testsuite/gcc.misc-tests/dg-11.c"}, {"sha": "9d79604b2268d30b053fc3d77a1b3dff075f82b6", "filename": "gcc/testsuite/gcc.test-framework/dg-dot-run-exp-U.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-dot-run-exp-U.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-dot-run-exp-U.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-dot-run-exp-U.c?ref=91442c2081b37f63adb5d0c3f626949abcce406a", "patch": "@@ -1,4 +1,4 @@\n-/* Test the tester.  */\n+/* Test the tester; previously gcc.misc-tests/dg-12.c.  */\n /* { dg-prms-id 42 } */\n /* { dg-do run { target foo-bar-eh } } */\n /* The \\n is left out of the pattern because tcl's exec will remove it.  */", "previous_filename": "gcc/testsuite/gcc.misc-tests/dg-12.c"}, {"sha": "69cff8bb8e3146cec0113062d775516e26d51302", "filename": "gcc/testsuite/gcc.test-framework/dg-dox-run-exp-XF.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-dox-run-exp-XF.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-dox-run-exp-XF.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-dox-run-exp-XF.c?ref=91442c2081b37f63adb5d0c3f626949abcce406a", "patch": "@@ -1,4 +1,4 @@\n-/* Test the tester.  */\n+/* Test the tester; previously gcc.misc-tests/dg-7.c.  */\n /* { dg-prms-id 42 } */\n /* { dg-do run { xfail *-*-* } } */\n extern void abort (void);", "previous_filename": "gcc/testsuite/gcc.misc-tests/dg-7.c"}, {"sha": "cb28e34ce9541227859bc6ab756e06a77234671d", "filename": "gcc/testsuite/gcc.test-framework/dg-error-exp-P.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-error-exp-P.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-error-exp-P.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-error-exp-P.c?ref=91442c2081b37f63adb5d0c3f626949abcce406a", "patch": "@@ -0,0 +1,9 @@\n+/* Test the tester; previously part of gcc.misc-tests/dg-9.c.  */\n+/* { dg-prms-id 42 } */\n+/* { dg-options \"-Wall\" } */\n+\n+int main (int argc, char *argv[])\n+{\n+  +;\t\t/* { dg-error \"syntax error\" \"error test\" } */\n+  return 0;\n+}"}, {"sha": "856b7270b25577dc335fee89d08dd4393c6d3c4e", "filename": "gcc/testsuite/gcc.test-framework/dg-error-exp-XP.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-error-exp-XP.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-error-exp-XP.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-error-exp-XP.c?ref=91442c2081b37f63adb5d0c3f626949abcce406a", "patch": "@@ -0,0 +1,11 @@\n+/* Test the tester; previously part of gcc.misc-tests/dg-9.c.  */\n+/* { dg-prms-id 42 } */\n+/* { dg-options \"-Wall\" } */\n+\n+int main (int argc, char *argv[])\n+{\n+  +;\n+              /* { dg-error \"syntax error\" \"error test\" { xfail *-*-* } 7 } */\n+  return 0;\n+}\n+/* { dg-excess-errors \"expect failure\" { xfail *-*-* } } */"}, {"sha": "496c6a60d50d9fb13e42430d8b25b93ecd03dc2e", "filename": "gcc/testsuite/gcc.test-framework/dg-excess-errors-exp-XF.c", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-excess-errors-exp-XF.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-excess-errors-exp-XF.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-excess-errors-exp-XF.c?ref=91442c2081b37f63adb5d0c3f626949abcce406a", "patch": "@@ -1,7 +1,7 @@\n-/* Test the tester.  */\n+/* Test the tester; previously gcc.misc-tests/dg-8.c.  */\n /* { dg-prms-id 42 } */\n /* { dg-options \"-Wall\" } */\n-/* { dg-do run } */\n+/* { dg-do compile } */\n /* { dg-excess-errors \"excess errors\" } */\n \n /* should get warning about defaulting return type - excess error */", "previous_filename": "gcc/testsuite/gcc.misc-tests/dg-8.c"}, {"sha": "4aecca3ba340a1df2115d74df7bb1660ef850f7c", "filename": "gcc/testsuite/gcc.test-framework/dg-excess-errors-exp-XP.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-excess-errors-exp-XP.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-excess-errors-exp-XP.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-excess-errors-exp-XP.c?ref=91442c2081b37f63adb5d0c3f626949abcce406a", "patch": "@@ -0,0 +1,9 @@\n+/* Test the tester.  */\n+/* { dg-prms-id 42 } */\n+/* { dg-options \"-Wall\" } */\n+/* { dg-do compile } */\n+/* { dg-excess-errors \"excess errors\" } */\n+\n+/* No messages, so unexpected pass.  */\n+\n+int main () { return 0; }"}, {"sha": "4cec76f982c5457ec05615ef0cc1705cd5ea00a1", "filename": "gcc/testsuite/gcc.test-framework/dg-output-exp-P.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-output-exp-P.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-output-exp-P.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-output-exp-P.c?ref=91442c2081b37f63adb5d0c3f626949abcce406a", "patch": "@@ -1,4 +1,4 @@\n-/* Test the tester.  */\n+/* Test the tester; previously gcc.misc-tests/dg-5.c.  */\n /* { dg-prms-id 42 } */\n /* { dg-do run } */\n /* The \\n is left out of the pattern because tcl's exec will remove it.  */", "previous_filename": "gcc/testsuite/gcc.misc-tests/dg-5.c"}, {"sha": "6606e5c932aa1796f5a24b23950585660762a68e", "filename": "gcc/testsuite/gcc.test-framework/dg-output-exp-XF.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-output-exp-XF.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-output-exp-XF.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-output-exp-XF.c?ref=91442c2081b37f63adb5d0c3f626949abcce406a", "patch": "@@ -1,4 +1,4 @@\n-/* Test the tester.  */\n+/* Test the tester; previously gcc.misc-tests/dg-6.c.  */\n /* { dg-prms-id 42 } */\n /* { dg-do run { target *-*-* } } */\n /* The \\n is left out of the pattern because tcl's exec will remove it.  */", "previous_filename": "gcc/testsuite/gcc.misc-tests/dg-6.c"}, {"sha": "293e1194df4920dc5749a39c2df5537c9e39ee9f", "filename": "gcc/testsuite/gcc.test-framework/dg-warning-exp-P.c", "status": "renamed", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-warning-exp-P.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-warning-exp-P.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Fdg-warning-exp-P.c?ref=91442c2081b37f63adb5d0c3f626949abcce406a", "patch": "@@ -1,4 +1,4 @@\n-/* Test the tester.  */\n+/* Test the tester; previously part of gcc.misc-tests/dg-9.c.  */\n /* { dg-prms-id 42 } */\n /* { dg-options \"-Wall\" } */\n \n@@ -8,8 +8,4 @@ f ()\n \n main (int argc, char *argv[])\n {\t\t/* { dg-warning \"return type\" \"warning test\" } */\n-  +;\t\t/* { dg-error \"parse\" \"error test\" } */\n-\t\t/* { dg-bogus \"foobar\" \"bogus fail test\" } */\n-\n-  return a;\t/* { dg-bogus \"undeclared|identifier|appears\" \"bogus pass test\" { xfail *-*-* } } */\n }\t\t/* { dg-warning \"control reaches end\" \"warning test\" } */", "previous_filename": "gcc/testsuite/gcc.misc-tests/dg-9.c"}, {"sha": "3c7eedb954a96215e322c0e2ceb1daca8124e0b8", "filename": "gcc/testsuite/gcc.test-framework/test-framework.awk", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Ftest-framework.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Ftest-framework.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Ftest-framework.awk?ref=91442c2081b37f63adb5d0c3f626949abcce406a", "patch": "@@ -47,6 +47,10 @@ BEGIN\t\t\t{ skip = 1; passes = 0; fails = 0; }\n /^PASS.*dox.*(test for excess errors)/ { ignore(); next }\n # Ignore lines that begin with comma.\n /^,/\t\t\t{ ignore(); next }\n+# For tests of dg-output, ignore successful compilation.\n+/^PASS.*dg-output.*(test for excess error)/\t{ ignore(); next }\n+# For tests of dg-output, ignore successful execution.\n+/^PASS.*dg-output.*execution test/\t{ ignore(); next }\n /^PASS/\t\t\t{ if (match ($0, \"exp-P\")) { pass(); next } }\n /^FAIL/\t\t\t{ if (match ($0, \"exp-F\")) { pass(); next } }\n /^XPASS/\t\t{ if (match ($0, \"exp-XP\")) { pass(); next } }"}, {"sha": "8bc4ae7850278de2a422b8c272e3c982679af1ba", "filename": "gcc/testsuite/gcc.test-framework/test-framework.exp", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Ftest-framework.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91442c2081b37f63adb5d0c3f626949abcce406a/gcc%2Ftestsuite%2Fgcc.test-framework%2Ftest-framework.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.test-framework%2Ftest-framework.exp?ref=91442c2081b37f63adb5d0c3f626949abcce406a", "patch": "@@ -46,21 +46,24 @@ global dg-do-what-default\n set save-dg-do-what-default ${dg-do-what-default}\n set dg-do-what-default compile\n \n-# Generate the tests.\n+dg-init\n \n+# Run tests from the source directory.\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/dg-*.c]] \"\" \"\"\n+\n+# Generate additional tests.\n set tstobjdir \"$tmpdir/gcc.test-framework\"\n set generator \"$srcdir/$subdir/gen_directive_tests\"\n file delete -force $tstobjdir\n file mkdir $tstobjdir\n set status [remote_exec host \"$generator $tstobjdir\"]\n set status [lindex $status 0]\n if { $status == 0 } {\n-    # Run the tests.\n-    dg-init\n+    # Run the generated tests.\n     dg-runtest [lsort [find $tstobjdir *.c]] \"\" \"-DY1 -DY2\"\n-    dg-finish\n } else {\n     warning \"Could not generate test framework tests\"\n }\n \n+dg-finish\n set dg-do-what-default ${save-dg-do-what-default}"}]}