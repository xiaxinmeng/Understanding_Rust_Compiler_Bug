{"sha": "fff9ecff94a0142ddb4b888d4a85d757c0c2eab4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZmOWVjZmY5NGEwMTQyZGRiNGI4ODhkNGE4NWQ3NTdjMGMyZWFiNA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-04T15:44:08Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-04T15:44:08Z"}, "message": "(output_prolog): Need LDGP even for static procedure.\n\nFrom-SVN: r4004", "tree": {"sha": "3b1572249197282459b7f8aab8a2958d48dbd215", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b1572249197282459b7f8aab8a2958d48dbd215"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fff9ecff94a0142ddb4b888d4a85d757c0c2eab4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fff9ecff94a0142ddb4b888d4a85d757c0c2eab4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fff9ecff94a0142ddb4b888d4a85d757c0c2eab4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fff9ecff94a0142ddb4b888d4a85d757c0c2eab4/comments", "author": null, "committer": null, "parents": [{"sha": "c694003e290b4d48fefc26bb3f9412f7010a5262", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c694003e290b4d48fefc26bb3f9412f7010a5262", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c694003e290b4d48fefc26bb3f9412f7010a5262"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "f36a60406e6e932476232c9f0d036b46ecc238e3", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fff9ecff94a0142ddb4b888d4a85d757c0c2eab4/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fff9ecff94a0142ddb4b888d4a85d757c0c2eab4/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=fff9ecff94a0142ddb4b888d4a85d757c0c2eab4", "patch": "@@ -1124,21 +1124,21 @@ output_prolog (file, size)\n   unsigned reg_mask = 0;\n   int i;\n \n-  /* If we need a GP (we have a LDSYM insn or a CALL_INSN) and we are not\n-     a static function), load it first.  */\n+  /* If we need a GP (we have a LDSYM insn or a CALL_INSN), load it first. \n+     Even if we are a static function, we still need to do this in case\n+     our address is taken and passed to something like qsort.  */\n \n   alpha_function_needs_gp = 0;\n-  if (TREE_PUBLIC (current_function_decl))\n-    for (insn = get_insns (); insn; insn = NEXT_INSN (insn))\n-      if ((GET_CODE (insn) == CALL_INSN)\n-\t  || (GET_RTX_CLASS (GET_CODE (insn)) == 'i'\n-\t      && GET_CODE (PATTERN (insn)) != USE\n-\t      && GET_CODE (PATTERN (insn)) != CLOBBER\n-\t      && get_attr_type (insn) == TYPE_LDSYM))\n-\t{\n-\t  alpha_function_needs_gp = 1;\n-\t  break;\n-\t}\n+  for (insn = get_insns (); insn; insn = NEXT_INSN (insn))\n+    if ((GET_CODE (insn) == CALL_INSN)\n+\t|| (GET_RTX_CLASS (GET_CODE (insn)) == 'i'\n+\t    && GET_CODE (PATTERN (insn)) != USE\n+\t    && GET_CODE (PATTERN (insn)) != CLOBBER\n+\t    && get_attr_type (insn) == TYPE_LDSYM))\n+      {\n+\talpha_function_needs_gp = 1;\n+\tbreak;\n+      }\n \n   if (alpha_function_needs_gp)\n     fprintf (file, \"\\tldgp $29,0($27)\\n\");"}]}