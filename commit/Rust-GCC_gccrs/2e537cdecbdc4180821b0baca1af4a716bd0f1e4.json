{"sha": "2e537cdecbdc4180821b0baca1af4a716bd0f1e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU1MzdjZGVjYmRjNDE4MDgyMWIwYmFjYTFhZjRhNzE2YmQwZjFlNA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-12-15T09:44:11Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-12-15T09:44:11Z"}, "message": "revert: re PR lto/48437 (LTO crashes with block-local function declarations)\n\n2012-12-15  Richard Guenther  <rguenther@suse.de>\n\n\tRevert\n\tPR lto/48437\n\t* lto-streamer-out.c (tree_is_indexable): Exclude block-local\n\textern declarations.\n\n\tPR lto/48508\n\tPR lto/48437\n\t* tree-streamer-out.c (streamer_write_chain): Stream DECL_EXTERNAL\n\tVAR_DECLs and FUNCTION_DECLs locally.\n\n\t* g++.dg/lto/pr48508-1_0.C: New testcase.\n\t* g++.dg/lto/pr48508-1_1.C: Likewise.\n\nFrom-SVN: r182358", "tree": {"sha": "42ee680c41066552ec1065a5355d39eb26b5f7e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42ee680c41066552ec1065a5355d39eb26b5f7e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e537cdecbdc4180821b0baca1af4a716bd0f1e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e537cdecbdc4180821b0baca1af4a716bd0f1e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e537cdecbdc4180821b0baca1af4a716bd0f1e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e537cdecbdc4180821b0baca1af4a716bd0f1e4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4fde01bb0b2b1fbedb40ed3d2cccfdba422b64c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fde01bb0b2b1fbedb40ed3d2cccfdba422b64c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fde01bb0b2b1fbedb40ed3d2cccfdba422b64c6"}], "stats": {"total": 53, "additions": 42, "deletions": 11}, "files": [{"sha": "5dfad7bdb3f72f1aa85449c779df6d4ab364c0f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e537cdecbdc4180821b0baca1af4a716bd0f1e4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e537cdecbdc4180821b0baca1af4a716bd0f1e4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e537cdecbdc4180821b0baca1af4a716bd0f1e4", "patch": "@@ -1,3 +1,15 @@\n+2012-12-15  Richard Guenther  <rguenther@suse.de>\n+\n+\tRevert\n+\tPR lto/48437\n+\t* lto-streamer-out.c (tree_is_indexable): Exclude block-local\n+\textern declarations.\n+\n+\tPR lto/48508\n+\tPR lto/48437\n+\t* tree-streamer-out.c (streamer_write_chain): Stream DECL_EXTERNAL\n+\tVAR_DECLs and FUNCTION_DECLs locally.\n+\n 2011-12-14  Richard Henderson  <rth@redhat.com>\n \n \t* config/arm/arm.md (*addsi3_compare0_scratch): Set predicable."}, {"sha": "6c1169a3ec684bb8ca254dd20d8e21334bdd5638", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e537cdecbdc4180821b0baca1af4a716bd0f1e4/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e537cdecbdc4180821b0baca1af4a716bd0f1e4/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=2e537cdecbdc4180821b0baca1af4a716bd0f1e4", "patch": "@@ -129,16 +129,6 @@ tree_is_indexable (tree t)\n   else if (TREE_CODE (t) == VAR_DECL && decl_function_context (t)\n \t   && !TREE_STATIC (t))\n     return false;\n-  /* If this is a decl generated for block local externs for\n-     debug info generation, stream it unshared alongside BLOCK_VARS.  */\n-  else if (VAR_OR_FUNCTION_DECL_P (t)\n-\t   /* ???  The following tests are a literal match on what\n-\t      c-decl.c:pop_scope does.  */\n-\t   && TREE_PUBLIC (t)\n-\t   && DECL_EXTERNAL (t)\n-\t   && DECL_CONTEXT (t)\n-\t   && TREE_CODE (DECL_CONTEXT (t)) == FUNCTION_DECL)\n-    return false;\n   /* Variably modified types need to be streamed alongside function\n      bodies because they can refer to local entities.  Together with\n      them we have to localize their members as well."}, {"sha": "66880f0e0a764093836c61ce63b0680a0fd3f43b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e537cdecbdc4180821b0baca1af4a716bd0f1e4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e537cdecbdc4180821b0baca1af4a716bd0f1e4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2e537cdecbdc4180821b0baca1af4a716bd0f1e4", "patch": "@@ -1,3 +1,9 @@\n+2012-12-15  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/48508\n+\t* g++.dg/lto/pr48508-1_0.C: New testcase.\n+\t* g++.dg/lto/pr48508-1_1.C: Likewise.\n+\n 2011-12-14  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/51554"}, {"sha": "6faee75b1555749fe181626a9b7d8154dc0b4bbc", "filename": "gcc/testsuite/g++.dg/lto/pr48508-1_0.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e537cdecbdc4180821b0baca1af4a716bd0f1e4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr48508-1_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e537cdecbdc4180821b0baca1af4a716bd0f1e4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr48508-1_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr48508-1_0.C?ref=2e537cdecbdc4180821b0baca1af4a716bd0f1e4", "patch": "@@ -0,0 +1,7 @@\n+// { dg-lto-do link }\n+// { dg-lto-options { { -g -O2 -flto -flto-partition=none } } }\n+\n+void __attribute__((externally_visible))\n+foo (int i)\n+{\n+}"}, {"sha": "5cda1925bf566ed30b2b74c20fdf4230fd92a3a5", "filename": "gcc/testsuite/g++.dg/lto/pr48508-1_1.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e537cdecbdc4180821b0baca1af4a716bd0f1e4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr48508-1_1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e537cdecbdc4180821b0baca1af4a716bd0f1e4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr48508-1_1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr48508-1_1.C?ref=2e537cdecbdc4180821b0baca1af4a716bd0f1e4", "patch": "@@ -0,0 +1,10 @@\n+static void\n+bar (void)\n+{\n+  extern void foo (int);\n+  foo (0);\n+}\n+int main()\n+{\n+  bar ();\n+}"}, {"sha": "d90ee803a1389269f9c0d37793b655e69cffe146", "filename": "gcc/tree-streamer-out.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e537cdecbdc4180821b0baca1af4a716bd0f1e4/gcc%2Ftree-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e537cdecbdc4180821b0baca1af4a716bd0f1e4/gcc%2Ftree-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-out.c?ref=2e537cdecbdc4180821b0baca1af4a716bd0f1e4", "patch": "@@ -405,7 +405,13 @@ streamer_write_chain (struct output_block *ob, tree t, bool ref_p)\n       saved_chain = TREE_CHAIN (t);\n       TREE_CHAIN (t) = NULL_TREE;\n \n-      stream_write_tree (ob, t, ref_p);\n+      /* We avoid outputting external vars or functions by reference\n+\t to the global decls section as we do not want to have them\n+\t enter decl merging.  This is, of course, only for the call\n+\t for streaming BLOCK_VARS, but other callers are safe.  */\n+      stream_write_tree (ob, t,\n+\t\t\t ref_p && !(VAR_OR_FUNCTION_DECL_P (t)\n+\t\t\t\t    && DECL_EXTERNAL (t)));\n \n       TREE_CHAIN (t) = saved_chain;\n       t = TREE_CHAIN (t);"}]}