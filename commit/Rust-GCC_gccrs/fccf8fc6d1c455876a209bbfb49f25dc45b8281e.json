{"sha": "fccf8fc6d1c455876a209bbfb49f25dc45b8281e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNjZjhmYzZkMWM0NTU4NzZhMjA5YmJmYjQ5ZjI1ZGM0NWI4MjgxZQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2004-11-06T20:01:42Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-11-06T20:01:42Z"}, "message": "anon-struct-6.c, [...]: New tests.\n\n\t* gcc.dg/anon-struct-6.c, gcc.dg/anon-struct-7.c,\n\tgcc.dg/anon-struct-8.c, gcc.dg/bitfld-10.c, gcc.dg/bitfld-11.c,\n\tgcc.dg/bitfld-12.c, gcc.dg/func-outside-1.c,\n\tgcc.dg/func-outside-2.c, gcc.dg/label-decl-1.c,\n\tgcc.dg/label-decl-2.c, gcc.dg/label-decl-3.c,\n\tgcc.dg/label-decl-4.c, gcc.dg/struct-empty-1.c,\n\tgcc.dg/struct-empty-2.c, gcc.dg/struct-empty-3.c,\n\tgcc.dg/struct-semi-1.c, gcc.dg/struct-semi-2.c,\n\tgcc.dg/struct-semi-3.c: New tests.\n\nFrom-SVN: r90193", "tree": {"sha": "40638c5100c3123ac12f7abb6ca26a129f09a2ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40638c5100c3123ac12f7abb6ca26a129f09a2ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fccf8fc6d1c455876a209bbfb49f25dc45b8281e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fccf8fc6d1c455876a209bbfb49f25dc45b8281e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fccf8fc6d1c455876a209bbfb49f25dc45b8281e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d43844e2d6be3c7729a61926acd7cd544ed858bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d43844e2d6be3c7729a61926acd7cd544ed858bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d43844e2d6be3c7729a61926acd7cd544ed858bc"}], "stats": {"total": 245, "additions": 245, "deletions": 0}, "files": [{"sha": "ceef2fcfc7f3a75b672640710f6af43ebe778e41", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fccf8fc6d1c455876a209bbfb49f25dc45b8281e", "patch": "@@ -1,3 +1,15 @@\n+2004-11-06  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/anon-struct-6.c, gcc.dg/anon-struct-7.c,\n+\tgcc.dg/anon-struct-8.c, gcc.dg/bitfld-10.c, gcc.dg/bitfld-11.c,\n+\tgcc.dg/bitfld-12.c, gcc.dg/func-outside-1.c,\n+\tgcc.dg/func-outside-2.c, gcc.dg/label-decl-1.c,\n+\tgcc.dg/label-decl-2.c, gcc.dg/label-decl-3.c,\n+\tgcc.dg/label-decl-4.c, gcc.dg/struct-empty-1.c,\n+\tgcc.dg/struct-empty-2.c, gcc.dg/struct-empty-3.c,\n+\tgcc.dg/struct-semi-1.c, gcc.dg/struct-semi-2.c,\n+\tgcc.dg/struct-semi-3.c: New tests.\n+\n 2004-11-06  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* g++.dg/opt/nothrow1.C: Use -42 instead of 42."}, {"sha": "a2042176c037797f8059ef5b0a3c63a2f61434f5", "filename": "gcc/testsuite/gcc.dg/anon-struct-6.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Fanon-struct-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Fanon-struct-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanon-struct-6.c?ref=fccf8fc6d1c455876a209bbfb49f25dc45b8281e", "patch": "@@ -0,0 +1,12 @@\n+/* Test diagnostics for structure member with no type specifier or\n+   declarator.  Test with no special options.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+struct s {\n+  int a;\n+  const;\n+};\n+/* { dg-warning \"warning: useless type qualifier in empty declaration\" \"empty\" { target *-*-* } 9 } */\n+/* { dg-warning \"warning: empty declaration\" \"empty\" { target *-*-* } 9 } */"}, {"sha": "18790790f314114b1fa683ecddf63fd0f1f147df", "filename": "gcc/testsuite/gcc.dg/anon-struct-7.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Fanon-struct-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Fanon-struct-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanon-struct-7.c?ref=fccf8fc6d1c455876a209bbfb49f25dc45b8281e", "patch": "@@ -0,0 +1,10 @@\n+/* Test diagnostics for structure member with no type specifier or\n+   declarator.  Test with -pedantic.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic\" } */\n+\n+struct s {\n+  int a;\n+  const; /* { dg-warning \"warning: ISO C forbids member declarations with no members\" } */\n+};"}, {"sha": "c4beb80c7ccbbc802e508d59717c6543aaa99ba4", "filename": "gcc/testsuite/gcc.dg/anon-struct-8.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Fanon-struct-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Fanon-struct-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanon-struct-8.c?ref=fccf8fc6d1c455876a209bbfb49f25dc45b8281e", "patch": "@@ -0,0 +1,10 @@\n+/* Test diagnostics for structure member with no type specifier or\n+   declarator.  Test with -pedantic-errors.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic-errors\" } */\n+\n+struct s {\n+  int a;\n+  const; /* { dg-error \"error: ISO C forbids member declarations with no members\" } */\n+};"}, {"sha": "156929f49fd7a132d2d06839f8a8e8ce10f0bdc6", "filename": "gcc/testsuite/gcc.dg/bitfld-10.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-10.c?ref=fccf8fc6d1c455876a209bbfb49f25dc45b8281e", "patch": "@@ -0,0 +1,8 @@\n+/* Test for rejection of sizeof on bit-fields.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+struct { int a : 1; } x;\n+\n+int r = sizeof (x.a); /* { dg-error \"error: 'sizeof' applied to a bit-field\" } */"}, {"sha": "e6bff6c74367631f4d77dcf2fe8b5c411288fb22", "filename": "gcc/testsuite/gcc.dg/bitfld-11.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-11.c?ref=fccf8fc6d1c455876a209bbfb49f25dc45b8281e", "patch": "@@ -0,0 +1,8 @@\n+/* Test for rejection of __alignof on bit-fields.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+struct { int a : 1; } x;\n+\n+int r = __alignof (x.a); /* { dg-error \"error: '__alignof' applied to a bit-field\" } */"}, {"sha": "8b2b659997efacca6c16e7b9e7413ae4571ba42e", "filename": "gcc/testsuite/gcc.dg/bitfld-12.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-12.c?ref=fccf8fc6d1c455876a209bbfb49f25dc45b8281e", "patch": "@@ -0,0 +1,12 @@\n+/* Test for rejection of taking address of bit-fields.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+#include <stddef.h>\n+\n+struct s { int a : 1; } x, *y;\n+\n+int a = offsetof (struct s, a); /* { dg-error \"error: attempt to take address of bit-field structure member 'a'\" } */\n+void *b = &x.a; /* { dg-error \"error: cannot take address of bit-field 'a'\" } */\n+void *c = &y->a; /* { dg-error \"error: cannot take address of bit-field 'a'\" } */"}, {"sha": "fcf233f8a6b3b400a9347e7d61a530f3cfc7bf5b", "filename": "gcc/testsuite/gcc.dg/func-outside-1.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Ffunc-outside-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Ffunc-outside-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffunc-outside-1.c?ref=fccf8fc6d1c455876a209bbfb49f25dc45b8281e", "patch": "@@ -0,0 +1,9 @@\n+/* Test for rejection of __func__ outside a function (GNU extensions\n+   are OK there).  Test with no special options.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+const char *a = __func__; /* { dg-warning \"warning: '__func__' is not defined outside of function scope\" \"undef\" { target *-*-* } 0 } */\n+const char *b = __FUNCTION__;\n+const char *c = __PRETTY_FUNCTION__;"}, {"sha": "4e0ff19e7c44617950f6fef48b734d822c5057d9", "filename": "gcc/testsuite/gcc.dg/func-outside-2.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Ffunc-outside-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Ffunc-outside-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffunc-outside-2.c?ref=fccf8fc6d1c455876a209bbfb49f25dc45b8281e", "patch": "@@ -0,0 +1,9 @@\n+/* Test for rejection of __func__ outside a function (GNU extensions\n+   are OK there).  Test with -pedantic-errors.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic-errors\" } */\n+\n+const char *a = __func__; /* { dg-error \"error: '__func__' is not defined outside of function scope\" \"undef\" { target *-*-* } 0 } */\n+const char *b = __FUNCTION__;\n+const char *c = __PRETTY_FUNCTION__;"}, {"sha": "531f81e4177760ab0fd74c1f0aa2d56989f19473", "filename": "gcc/testsuite/gcc.dg/label-decl-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Flabel-decl-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Flabel-decl-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flabel-decl-1.c?ref=fccf8fc6d1c455876a209bbfb49f25dc45b8281e", "patch": "@@ -0,0 +1,17 @@\n+/* Test diagnostics for label declarations.  Test with no special\n+   options.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+typedef int b;\n+\n+void\n+f (void)\n+{\n+  __label__ a, b, c, d;\n+  __extension__ (void)&&d; /* { dg-error \"error: label 'd' used but not defined\" } */\n+  goto c; /* { dg-error \"error: label 'c' used but not defined\" } */\n+ a: (void)0;\n+ b: (void)0;\n+}"}, {"sha": "5ec124b52bb8e479e354e4ee8439d6833e8af8d2", "filename": "gcc/testsuite/gcc.dg/label-decl-2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Flabel-decl-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Flabel-decl-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flabel-decl-2.c?ref=fccf8fc6d1c455876a209bbfb49f25dc45b8281e", "patch": "@@ -0,0 +1,17 @@\n+/* Test diagnostics for label declarations.  Test with -pedantic.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic\" } */\n+\n+typedef int b;\n+\n+void\n+f (void)\n+{\n+  __label__ a, b, c, d;\n+  __extension__ (void)&&d; /* { dg-error \"error: label 'd' used but not defined\" } */\n+  /* { dg-warning \"warning: ISO C forbids label declarations\" \"label decls\" { target *-*-* } 12 } */\n+  goto c; /* { dg-error \"error: label 'c' used but not defined\" } */\n+ a: (void)0;\n+ b: (void)0;\n+}"}, {"sha": "d49531c5dc8426866ece60adc444b95aae59725c", "filename": "gcc/testsuite/gcc.dg/label-decl-3.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Flabel-decl-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Flabel-decl-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flabel-decl-3.c?ref=fccf8fc6d1c455876a209bbfb49f25dc45b8281e", "patch": "@@ -0,0 +1,18 @@\n+/* Test diagnostics for label declarations.  Test with\n+   -pedantic-errors.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic-errors\" } */\n+\n+typedef int b;\n+\n+void\n+f (void)\n+{\n+  __label__ a, b, c, d;\n+  __extension__ (void)&&d; /* { dg-error \"error: label 'd' used but not defined\" } */\n+  /* { dg-error \"error: ISO C forbids label declarations\" \"label decls\" { target *-*-* } 13 } */\n+  goto c; /* { dg-error \"error: label 'c' used but not defined\" } */\n+ a: (void)0;\n+ b: (void)0;\n+}"}, {"sha": "d804f8f0fdc66dccb76a7d2bcd359f3354756be8", "filename": "gcc/testsuite/gcc.dg/label-decl-4.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Flabel-decl-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Flabel-decl-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flabel-decl-4.c?ref=fccf8fc6d1c455876a209bbfb49f25dc45b8281e", "patch": "@@ -0,0 +1,14 @@\n+/* Test diagnostics for duplicate label declarations.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+void\n+f (void)\n+{\n+  __label__ a, b, a; /* { dg-error \"error: duplicate label declaration 'a'\" } */\n+  /* { dg-error \"error: previous declaration of 'a' was here\" \"previous\" { target *-*-* } 9 } */\n+  __label__ c; /* { dg-error \"error: previous declaration of 'c' was here\" } */\n+  __label__ c; /* { dg-error \"error: duplicate label declaration 'c'\" } */\n+  return;\n+}"}, {"sha": "779746567340d2cd7e12a8e89b78d451aece074f", "filename": "gcc/testsuite/gcc.dg/struct-empty-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-empty-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-empty-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-empty-1.c?ref=fccf8fc6d1c455876a209bbfb49f25dc45b8281e", "patch": "@@ -0,0 +1,10 @@\n+/* Test diagnostics for empty structures and unions.  Test with no\n+   special options.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+struct s0 {};\n+union u0 {};\n+struct s1 { int : 1; };\n+union u1 { int : 1; };"}, {"sha": "132ef45705c91ea848cc19b7bf0b01d37bfb29ef", "filename": "gcc/testsuite/gcc.dg/struct-empty-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-empty-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-empty-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-empty-2.c?ref=fccf8fc6d1c455876a209bbfb49f25dc45b8281e", "patch": "@@ -0,0 +1,10 @@\n+/* Test diagnostics for empty structures and unions.  Test with\n+   -pedantic.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic\" } */\n+\n+struct s0 {}; /* { dg-warning \"warning: struct has no members\" } */\n+union u0 {}; /* { dg-warning \"warning: union has no members\" } */\n+struct s1 { int : 1; }; /* { dg-warning \"warning: struct has no named members\" } */\n+union u1 { int : 1; }; /* { dg-warning \"warning: union has no named members\" } */"}, {"sha": "b9285c0a262a0705817aa562894442d05092a2c6", "filename": "gcc/testsuite/gcc.dg/struct-empty-3.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-empty-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-empty-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-empty-3.c?ref=fccf8fc6d1c455876a209bbfb49f25dc45b8281e", "patch": "@@ -0,0 +1,10 @@\n+/* Test diagnostics for empty structures and unions.  Test with\n+   -pedantic-errors.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic-errors\" } */\n+\n+struct s0 {}; /* { dg-error \"error: struct has no members\" } */\n+union u0 {}; /* { dg-error \"error: union has no members\" } */\n+struct s1 { int : 1; }; /* { dg-error \"error: struct has no named members\" } */\n+union u1 { int : 1; }; /* { dg-error \"error: union has no named members\" } */"}, {"sha": "091956b4c5fe2f1ec040565e2f93bd94a0415231", "filename": "gcc/testsuite/gcc.dg/struct-semi-1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-semi-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-semi-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-semi-1.c?ref=fccf8fc6d1c455876a209bbfb49f25dc45b8281e", "patch": "@@ -0,0 +1,19 @@\n+/* Test diagnostics for missing and extra semicolons in structures.\n+   Test with no special options.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+struct s0 { ; };\n+struct s1 {\n+  int a;\n+  ;\n+  int b;\n+};\n+struct s2 {\n+  ;\n+  int c\n+}; /* { dg-warning \"warning: no semicolon at end of struct or union\" } */\n+struct s3 {\n+  int d\n+}; /* { dg-warning \"warning: no semicolon at end of struct or union\" } */"}, {"sha": "e609fd25aa6ea34f0afb35d1b34b4427d1837640", "filename": "gcc/testsuite/gcc.dg/struct-semi-2.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-semi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-semi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-semi-2.c?ref=fccf8fc6d1c455876a209bbfb49f25dc45b8281e", "patch": "@@ -0,0 +1,20 @@\n+/* Test diagnostics for missing and extra semicolons in structures.\n+   Test with -pedantic.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic\" } */\n+\n+struct s0 { ; }; /* { dg-warning \"warning: extra semicolon in struct or union specified\" } */\n+/* { dg-warning \"warning: struct has no members\" \"empty\" { target *-*-* } 7 } */\n+struct s1 {\n+  int a;\n+  ; /* { dg-warning \"warning: extra semicolon in struct or union specified\" } */\n+  int b;\n+};\n+struct s2 {\n+  ; /* { dg-warning \"warning: extra semicolon in struct or union specified\" } */\n+  int c\n+}; /* { dg-warning \"warning: no semicolon at end of struct or union\" } */\n+struct s3 {\n+  int d\n+}; /* { dg-warning \"warning: no semicolon at end of struct or union\" } */"}, {"sha": "25a33c78a8d60c71db35f32aa1259fbc4d7d6d57", "filename": "gcc/testsuite/gcc.dg/struct-semi-3.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-semi-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccf8fc6d1c455876a209bbfb49f25dc45b8281e/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-semi-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-semi-3.c?ref=fccf8fc6d1c455876a209bbfb49f25dc45b8281e", "patch": "@@ -0,0 +1,20 @@\n+/* Test diagnostics for missing and extra semicolons in structures.\n+   Test with -pedantic-errors.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic-errors\" } */\n+\n+struct s0 { ; }; /* { dg-error \"error: extra semicolon in struct or union specified\" } */\n+/* { dg-error \"error: struct has no members\" \"empty\" { target *-*-* } 7 } */\n+struct s1 {\n+  int a;\n+  ; /* { dg-error \"error: extra semicolon in struct or union specified\" } */\n+  int b;\n+};\n+struct s2 {\n+  ; /* { dg-error \"error: extra semicolon in struct or union specified\" } */\n+  int c\n+}; /* { dg-error \"error: no semicolon at end of struct or union\" } */\n+struct s3 {\n+  int d\n+}; /* { dg-error \"error: no semicolon at end of struct or union\" } */"}]}