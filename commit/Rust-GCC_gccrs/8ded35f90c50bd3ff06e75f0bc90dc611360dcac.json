{"sha": "8ded35f90c50bd3ff06e75f0bc90dc611360dcac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRlZDM1ZjkwYzUwYmQzZmYwNmU3NWYwYmM5MGRjNjExMzYwZGNhYw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-05-15T08:37:22Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-05-15T08:37:22Z"}, "message": "re PR tree-optimization/36009 (PRE causes missed loop store motion, store sinking doesn't work)\n\n2008-05-15  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/36009\n\tPR tree-optimization/36204\n\t* tree-ssa-loop-im.c (tree-ssa-propagate.h): Include.\n\t(determine_invariantness_stmt): Record the loop a store is\n\talways executed in.\n\t* Makefile.in (tree-ssa-loop-im.o): Add tree-ssa-propagate.h\n\tdependency.\n\n\t* gcc.dg/tree-ssa/ssa-lim-5.c: New testcase.\n\t* gcc.dg/tree-ssa/ssa-lim-6.c: Likewise..\n\nFrom-SVN: r135330", "tree": {"sha": "99049872595c742fb546abf5ae46e4c0ed30cf52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99049872595c742fb546abf5ae46e4c0ed30cf52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ded35f90c50bd3ff06e75f0bc90dc611360dcac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ded35f90c50bd3ff06e75f0bc90dc611360dcac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ded35f90c50bd3ff06e75f0bc90dc611360dcac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ded35f90c50bd3ff06e75f0bc90dc611360dcac/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "45ff5edaea467950434730376d3abd8e6cebe196", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45ff5edaea467950434730376d3abd8e6cebe196", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45ff5edaea467950434730376d3abd8e6cebe196"}], "stats": {"total": 67, "additions": 66, "deletions": 1}, "files": [{"sha": "74c5765d26638a02487beb66cb77d1212ecef238", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ded35f90c50bd3ff06e75f0bc90dc611360dcac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ded35f90c50bd3ff06e75f0bc90dc611360dcac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ded35f90c50bd3ff06e75f0bc90dc611360dcac", "patch": "@@ -1,3 +1,13 @@\n+2008-05-15  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/36009\n+\tPR tree-optimization/36204\n+\t* tree-ssa-loop-im.c (tree-ssa-propagate.h): Include.\n+\t(determine_invariantness_stmt): Record the loop a store is\n+\talways executed in.\n+\t* Makefile.in (tree-ssa-loop-im.o): Add tree-ssa-propagate.h\n+\tdependency.\n+\n 2008-05-15  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/34330"}, {"sha": "f981b1eef5e2ff0ddb1504d092fde1123c1d9e00", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ded35f90c50bd3ff06e75f0bc90dc611360dcac/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ded35f90c50bd3ff06e75f0bc90dc611360dcac/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=8ded35f90c50bd3ff06e75f0bc90dc611360dcac", "patch": "@@ -2206,7 +2206,7 @@ tree-ssa-loop-im.o : tree-ssa-loop-im.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) domwalk.h \\\n    $(PARAMS_H) output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) tree-pass.h $(FLAGS_H) $(REAL_H) $(BASIC_BLOCK_H) \\\n-   hard-reg-set.h\n+   hard-reg-set.h tree-ssa-propagate.h\n tree-ssa-math-opts.o : tree-ssa-math-opts.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TIMEVAR_H) tree-pass.h $(TM_H) $(FLAGS_H) \\\n    alloc-pool.h $(BASIC_BLOCK_H) $(TARGET_H)"}, {"sha": "d8c7caedc5e8bad2ec3199a2871ecbff7f9013e4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ded35f90c50bd3ff06e75f0bc90dc611360dcac/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ded35f90c50bd3ff06e75f0bc90dc611360dcac/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8ded35f90c50bd3ff06e75f0bc90dc611360dcac", "patch": "@@ -1,3 +1,10 @@\n+2008-05-15  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/36009\n+\tPR tree-optimization/36204\n+\t* gcc.dg/tree-ssa/ssa-lim-5.c: New testcase.\n+\t* gcc.dg/tree-ssa/ssa-lim-6.c: Likewise..\n+\n 2008-05-15  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/34330"}, {"sha": "18ca905bf8e69cbd450a6d395f45fa966755b1db", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-lim-5.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ded35f90c50bd3ff06e75f0bc90dc611360dcac/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ded35f90c50bd3ff06e75f0bc90dc611360dcac/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-5.c?ref=8ded35f90c50bd3ff06e75f0bc90dc611360dcac", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do link } */\n+/* { dg-options \"-O\" } */\n+\n+/* We should apply store motion here.  */\n+\n+struct BUF1\n+{\n+  int b1;\n+  int b12;\n+};\n+\n+void link_error();\n+\n+int foo(struct BUF1 * p)\n+{\n+\n+    int i = 0;\n+    for (i = 0; i < 1024*1024; i++)\n+      p->b1 = 1;\n+    if (p->b1 != 1)\n+      link_error ();\n+    return 0;\n+}\n+\n+int main() { return 0; }"}, {"sha": "0da57aa087dde2d8d7e9ee20b32d534ec552ea0b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-lim-6.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ded35f90c50bd3ff06e75f0bc90dc611360dcac/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ded35f90c50bd3ff06e75f0bc90dc611360dcac/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-6.c?ref=8ded35f90c50bd3ff06e75f0bc90dc611360dcac", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-lim-details\" } */\n+\n+double a[16][64], y[64], x[16];\n+void foo(void)\n+{\n+  int i, j;\n+  for (j = 0; j < 64; ++j)\n+    for (i = 0; i < 16; ++i)\n+      y[j] = y[j] + a[i][j] * x[i];\n+}\n+\n+/* { dg-final { scan-tree-dump \"Executing store motion of y\" \"lim\" } } */\n+/* { dg-final { cleanup-tree-dump \"lim\" } } */"}, {"sha": "8740030397f48bcbb7f01a74c39394827b72439e", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ded35f90c50bd3ff06e75f0bc90dc611360dcac/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ded35f90c50bd3ff06e75f0bc90dc611360dcac/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=8ded35f90c50bd3ff06e75f0bc90dc611360dcac", "patch": "@@ -40,6 +40,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hashtab.h\"\n #include \"tree-affine.h\"\n #include \"pointer-set.h\"\n+#include \"tree-ssa-propagate.h\"\n \n /* TODO:  Support for predicated code motion.  I.e.\n \n@@ -900,6 +901,14 @@ determine_invariantness_stmt (struct dom_walk_data *dw_data ATTRIBUTE_UNUSED,\n \t      maybe_never = true;\n \t      outermost = NULL;\n \t    }\n+\t  /* Make sure to note always_executed_in for stores to make\n+\t     store-motion work.  */\n+\t  else if (stmt_makes_single_store (stmt))\n+\t    {\n+\t      stmt_ann (stmt)->common.aux\n+\t\t= xcalloc (1, sizeof (struct lim_aux_data));\n+\t      LIM_DATA (stmt)->always_executed_in = outermost;\n+\t    }\n \t  continue;\n \t}\n "}]}