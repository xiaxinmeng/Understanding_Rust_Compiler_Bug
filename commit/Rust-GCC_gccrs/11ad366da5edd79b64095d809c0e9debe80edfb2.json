{"sha": "11ad366da5edd79b64095d809c0e9debe80edfb2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFhZDM2NmRhNWVkZDc5YjY0MDk1ZDgwOWMwZTlkZWJlODBlZGZiMg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2020-12-02T21:04:48Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-12-17T10:49:20Z"}, "message": "[Ada] Spurious discriminant check on bounded synchronized queue\n\ngcc/ada/\n\n\t* libgnat/a-cbsyqu.ads (Implementation): Provide a box\n\tinitialization for the element array used internally to\n\trepresent the queue, so that its components are properly\n\tinitialized if the given element type has default\n\tinitialization. Suppress warnings on the rest of the package in\n\tcase the element type has no default or discriminant, because it\n\tis bound to be confusing to the user.", "tree": {"sha": "1d063573699984c20e8af1b8fb36772a9bdf4286", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d063573699984c20e8af1b8fb36772a9bdf4286"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11ad366da5edd79b64095d809c0e9debe80edfb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11ad366da5edd79b64095d809c0e9debe80edfb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11ad366da5edd79b64095d809c0e9debe80edfb2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11ad366da5edd79b64095d809c0e9debe80edfb2/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7fbcb0c72e48e0009cfbda5391d6e3387cf3afff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fbcb0c72e48e0009cfbda5391d6e3387cf3afff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fbcb0c72e48e0009cfbda5391d6e3387cf3afff"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "4037d84cb03479383ea64354e5068c0e94f8dc5d", "filename": "gcc/ada/libgnat/a-cbsyqu.ads", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11ad366da5edd79b64095d809c0e9debe80edfb2/gcc%2Fada%2Flibgnat%2Fa-cbsyqu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11ad366da5edd79b64095d809c0e9debe80edfb2/gcc%2Fada%2Flibgnat%2Fa-cbsyqu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbsyqu.ads?ref=11ad366da5edd79b64095d809c0e9debe80edfb2", "patch": "@@ -71,14 +71,22 @@ is\n \n       --  Need proper heap data structure here ???\n \n+      --  We suppress warnings here, which might otherwise be triggered\n+      --  by the box initialization of the Elements array below. This\n+      --  initialization is needed to preserve constraints, such as\n+      --  discriminant values, that the actual for Element_Type might\n+      --  carry.\n+\n+      pragma Warnings (Off);\n+\n       type Element_Array is\n         array (Count_Type range <>) of Queue_Interfaces.Element_Type;\n \n       type List_Type (Capacity : Count_Type) is tagged limited record\n          First, Last : Count_Type := 0;\n          Length      : Count_Type := 0;\n          Max_Length  : Count_Type := 0;\n-         Elements    : Element_Array (1 .. Capacity);\n+         Elements    : Element_Array (1 .. Capacity) := (others => <>);\n       end record;\n \n    end Implementation;"}]}