{"sha": "bdf0018519c39931fdcc7aeffe9e87ba756894d7", "node_id": "C_kwDOANBUbNoAKGJkZjAwMTg1MTljMzk5MzFmZGNjN2FlZmZlOWU4N2JhNzU2ODk0ZDc", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-11-01T16:27:39Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-11-01T18:24:21Z"}, "message": "[PR tree-optimization/107490] Handle NANs in op[12]_range.\n\nNone of the build_<OP> functions in range-op handle NANs.  This is by\ndesign in order to force us to handle NANs specially, because\n\"x relop NAN\" makes no sense.  This patch fixes a handful of\nop[12]_range entries that weren't handling NANs.\n\n\tPR tree-optimization/107490\n\ngcc/ChangeLog:\n\n\t* range-op-float.cc (foperator_unordered_lt::op1_range): Handle\n\tNANs.\n\t(foperator_unordered_lt::op2_range): Same.\n\t(foperator_unordered_le::op1_range): Same.\n\t(foperator_unordered_le::op2_range): Same.\n\t(foperator_unordered_gt::op1_range): Same.\n\t(foperator_unordered_gt::op2_range): Same.\n\t(foperator_unordered_ge::op1_range): Same.\n\t(foperator_unordered_ge::op2_range): Same.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/tree-ssa/pr107490.c: New test.", "tree": {"sha": "e716a460db463b80c064ecce751f4fa8087e22ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e716a460db463b80c064ecce751f4fa8087e22ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bdf0018519c39931fdcc7aeffe9e87ba756894d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdf0018519c39931fdcc7aeffe9e87ba756894d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdf0018519c39931fdcc7aeffe9e87ba756894d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdf0018519c39931fdcc7aeffe9e87ba756894d7/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82b0345f6137b112728590d7c010dcd2cef08514", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82b0345f6137b112728590d7c010dcd2cef08514", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82b0345f6137b112728590d7c010dcd2cef08514"}], "stats": {"total": 68, "additions": 60, "deletions": 8}, "files": [{"sha": "a1f372997bf1e41b6be675e58de01151af4ecd22", "filename": "gcc/range-op-float.cc", "status": "modified", "additions": 32, "deletions": 8, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdf0018519c39931fdcc7aeffe9e87ba756894d7/gcc%2Frange-op-float.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdf0018519c39931fdcc7aeffe9e87ba756894d7/gcc%2Frange-op-float.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op-float.cc?ref=bdf0018519c39931fdcc7aeffe9e87ba756894d7", "patch": "@@ -1332,7 +1332,10 @@ foperator_unordered_lt::op1_range (frange &r, tree type,\n   switch (get_bool_state (r, lhs, type))\n     {\n     case BRS_TRUE:\n-      build_lt (r, type, op2);\n+      if (op2.known_isnan ())\n+\tr.set_varying (type);\n+      else\n+\tbuild_lt (r, type, op2);\n       break;\n \n     case BRS_FALSE:\n@@ -1359,7 +1362,10 @@ foperator_unordered_lt::op2_range (frange &r, tree type,\n   switch (get_bool_state (r, lhs, type))\n     {\n     case BRS_TRUE:\n-      build_gt (r, type, op1);\n+      if (op1.known_isnan ())\n+\tr.set_varying (type);\n+      else\n+\tbuild_gt (r, type, op1);\n       break;\n \n     case BRS_FALSE:\n@@ -1420,7 +1426,10 @@ foperator_unordered_le::op1_range (frange &r, tree type,\n   switch (get_bool_state (r, lhs, type))\n     {\n     case BRS_TRUE:\n-      build_le (r, type, op2);\n+      if (op2.known_isnan ())\n+\tr.set_varying (type);\n+      else\n+\tbuild_le (r, type, op2);\n       break;\n \n     case BRS_FALSE:\n@@ -1448,7 +1457,10 @@ foperator_unordered_le::op2_range (frange &r,\n   switch (get_bool_state (r, lhs, type))\n     {\n     case BRS_TRUE:\n-      build_ge (r, type, op1);\n+      if (op1.known_isnan ())\n+\tr.set_varying (type);\n+      else\n+\tbuild_ge (r, type, op1);\n       break;\n \n     case BRS_FALSE:\n@@ -1511,7 +1523,10 @@ foperator_unordered_gt::op1_range (frange &r,\n   switch (get_bool_state (r, lhs, type))\n     {\n     case BRS_TRUE:\n-      build_gt (r, type, op2);\n+      if (op2.known_isnan ())\n+\tr.set_varying (type);\n+      else\n+\tbuild_gt (r, type, op2);\n       break;\n \n     case BRS_FALSE:\n@@ -1539,7 +1554,10 @@ foperator_unordered_gt::op2_range (frange &r,\n   switch (get_bool_state (r, lhs, type))\n     {\n     case BRS_TRUE:\n-      build_lt (r, type, op1);\n+      if (op1.known_isnan ())\n+\tr.set_varying (type);\n+      else\n+\tbuild_lt (r, type, op1);\n       break;\n \n     case BRS_FALSE:\n@@ -1602,7 +1620,10 @@ foperator_unordered_ge::op1_range (frange &r,\n   switch (get_bool_state (r, lhs, type))\n     {\n     case BRS_TRUE:\n-      build_ge (r, type, op2);\n+      if (op2.known_isnan ())\n+\tr.set_varying (type);\n+      else\n+\tbuild_ge (r, type, op2);\n       break;\n \n     case BRS_FALSE:\n@@ -1629,7 +1650,10 @@ foperator_unordered_ge::op2_range (frange &r, tree type,\n   switch (get_bool_state (r, lhs, type))\n     {\n     case BRS_TRUE:\n-      build_le (r, type, op1);\n+      if (op1.known_isnan ())\n+\tr.set_varying (type);\n+      else\n+\tbuild_le (r, type, op1);\n       break;\n \n     case BRS_FALSE:"}, {"sha": "87c7f0aacdd3a8c483221d28f06481f2dc5613c9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr107490.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdf0018519c39931fdcc7aeffe9e87ba756894d7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr107490.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdf0018519c39931fdcc7aeffe9e87ba756894d7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr107490.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr107490.c?ref=bdf0018519c39931fdcc7aeffe9e87ba756894d7", "patch": "@@ -0,0 +1,28 @@\n+// { dg-do compile }\n+// { dg-options \"-Os -fno-trapping-math -w\" }\n+\n+extern void abort (void);\n+\n+#define MIN2(a,b) (((a)<(b)) ? (a) : (b))\n+#define MAX2(a,b) (((a)>(b)) ? (a) : (b))\n+\n+double p[2] = { 4.f, 5.f };\n+\n+int main()\n+{\n+  long j;\n+  double R, n, x;\n+  n = 1.e300f;\n+  x = -1.e300f;\n+  for( j=0; j < 2; j++ )\n+    {\n+      x = MAX2(x,p[j]);\n+      n = MIN2(n,p[j]);\n+    }\n+  R = x-n;\n+\n+  if( R < 0.1 )\n+      abort ();\n+\n+  return 0;\n+}"}]}