{"sha": "1e89ab6ce59bb59a4053291df339dfe80a8bd589", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU4OWFiNmNlNTliYjU5YTQwNTMyOTFkZjMzOWRmZTgwYThiZDU4OQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-11-26T12:03:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-11-26T12:03:58Z"}, "message": "re PR target/92669 (ICE in pre_and_rev_post_order_compute_fn at gcc/cfganal.c:1034 since r278666)\n\n2019-11-26  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/92669\n\t* cfganal.c (pre_and_rev_post_order_compute_fn): Deal with\n\tNULL pre_order.\n\nFrom-SVN: r278723", "tree": {"sha": "62e3c7238381c8696145158e40c4a3b0ca973b7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62e3c7238381c8696145158e40c4a3b0ca973b7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e89ab6ce59bb59a4053291df339dfe80a8bd589", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e89ab6ce59bb59a4053291df339dfe80a8bd589", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e89ab6ce59bb59a4053291df339dfe80a8bd589", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e89ab6ce59bb59a4053291df339dfe80a8bd589/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4abc46b51af5751d657764d0c44b8a4aeed06302", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4abc46b51af5751d657764d0c44b8a4aeed06302", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4abc46b51af5751d657764d0c44b8a4aeed06302"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "0bfe9f2bc96a3a1e31f03401dc302b7eeee00c62", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e89ab6ce59bb59a4053291df339dfe80a8bd589/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e89ab6ce59bb59a4053291df339dfe80a8bd589/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e89ab6ce59bb59a4053291df339dfe80a8bd589", "patch": "@@ -1,3 +1,9 @@\n+2019-11-26  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/92669\n+\t* cfganal.c (pre_and_rev_post_order_compute_fn): Deal with\n+\tNULL pre_order.\n+\n 2019-11-26  Robin Dapp  <rdapp@linux.ibm.com>\n \n \t* config/s390/linux.h: Add undef for MUSL_DYNAMIC_LINKERxx."}, {"sha": "1d8393d4fd99f5882ada20d51dfa8effb3659f73", "filename": "gcc/cfganal.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e89ab6ce59bb59a4053291df339dfe80a8bd589/gcc%2Fcfganal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e89ab6ce59bb59a4053291df339dfe80a8bd589/gcc%2Fcfganal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfganal.c?ref=1e89ab6ce59bb59a4053291df339dfe80a8bd589", "patch": "@@ -1030,6 +1030,8 @@ pre_and_rev_post_order_compute_fn (struct function *fn,\n     }\n \n   /* Clear the temporarily allocated flag.  */\n+  if (!rev_post_order)\n+    rev_post_order = pre_order;\n   for (int i = 0; i < pre_order_num; ++i)\n     BASIC_BLOCK_FOR_FN (fn, rev_post_order[i])->flags &= ~visited;\n "}]}