{"sha": "0be37202964cb589ce07001406a9dca99ec21b0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJlMzcyMDI5NjRjYjU4OWNlMDcwMDE0MDZhOWRjYTk5ZWMyMWIwZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-12-02T23:14:05Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-12-02T23:14:05Z"}, "message": "(xcoff_output_standard_types): Add TARGET_64BIT dependencies.\n\n(xcoff_output_standard_types): Add TARGET_64BIT dependencies.  Add\n\"wchar\", \"long long int\", and \"long long unsigned int\" built-in C\ntypes.\n\nFrom-SVN: r8603", "tree": {"sha": "0057cfabe4177d28feef9dfa4635cb8149842613", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0057cfabe4177d28feef9dfa4635cb8149842613"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0be37202964cb589ce07001406a9dca99ec21b0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0be37202964cb589ce07001406a9dca99ec21b0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0be37202964cb589ce07001406a9dca99ec21b0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0be37202964cb589ce07001406a9dca99ec21b0d/comments", "author": null, "committer": null, "parents": [{"sha": "9e654916b911c5d99d570682d32d164dc3a8a090", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e654916b911c5d99d570682d32d164dc3a8a090", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e654916b911c5d99d570682d32d164dc3a8a090"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "a5dc58b663b1ddb9e6a34814ce134744861eaa37", "filename": "gcc/xcoffout.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0be37202964cb589ce07001406a9dca99ec21b0d/gcc%2Fxcoffout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0be37202964cb589ce07001406a9dca99ec21b0d/gcc%2Fxcoffout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fxcoffout.c?ref=0be37202964cb589ce07001406a9dca99ec21b0d", "patch": "@@ -1,5 +1,5 @@\n /* Output xcoff-format symbol table information from GNU compiler.\n-   Copyright (C) 1992 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1994 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -143,25 +143,25 @@ xcoff_output_standard_types (syms)\n {\n   /* Handle built-in C types here.  */\n \n-  assign_type_number (syms, \"int\", -1);\n+  assign_type_number (syms, \"int\", (TARGET_64BIT ? -31 : -1));\n   assign_type_number (syms, \"char\", -2);\n   assign_type_number (syms, \"short int\", -3);\n-  assign_type_number (syms, \"long int\", -4);\n+  assign_type_number (syms, \"long int\", (TARGET_64BIT ? -31 : -4));\n   assign_type_number (syms, \"unsigned char\", -5);\n   assign_type_number (syms, \"signed char\", -6);\n   assign_type_number (syms, \"short unsigned int\", -7);\n-  assign_type_number (syms, \"unsigned int\", -8);\n+  assign_type_number (syms, \"unsigned int\", (TARGET_64BIT ? -32 : -8));\n   /* No such type \"unsigned\".  */\n-  assign_type_number (syms, \"long unsigned int\", -10);\n+  assign_type_number (syms, \"long unsigned int\", (TARGET_64BIT ? -32 : -10));\n   assign_type_number (syms, \"void\", -11);\n   assign_type_number (syms, \"float\", -12);\n   assign_type_number (syms, \"double\", -13);\n   assign_type_number (syms, \"long double\", -14);\n   /* Pascal and Fortran types run from -15 to -29.  */\n-  /* No such type \"wchar\".  */\n-\n-  /* \"long long int\", and \"long long unsigned int\", are not handled here,\n-     because there are no predefined types that match them.  */\n+  assign_type_number (syms, \"wchar\", -30);\n+  assign_type_number (syms, \"long long int\", -31);\n+  assign_type_number (syms, \"long long unsigned int\", -32);\n+  /* Additional Fortran types run from -33 to -37.  */\n \n   /* ??? Should also handle built-in C++ and Obj-C types.  There perhaps\n      aren't any that C doesn't already have.  */"}]}