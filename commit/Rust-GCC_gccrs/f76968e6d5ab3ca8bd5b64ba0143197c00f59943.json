{"sha": "f76968e6d5ab3ca8bd5b64ba0143197c00f59943", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc2OTY4ZTZkNWFiM2NhOGJkNWI2NGJhMDE0MzE5N2MwMGY1OTk0Mw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-04-09T08:05:43Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-04-09T08:05:43Z"}, "message": "tree-ssa-ccp.c (maybe_fold_stmt_addition): Move non-constant indices into an array reference if possible.\n\n2009-04-09  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-ccp.c (maybe_fold_stmt_addition): Move non-constant\n\tindices into an array reference if possible.\n\t* tree-ssa-forwprop.c (tree_ssa_forward_propagate_single_use_vars):\n\tFold POINTER_PLUS_EXPR statements with invariant address.\n\n\t* gcc.dg/tree-ssa/ssa-ccp-25.c: New testcase.\n\t* gcc.dg/tree-ssa/ssa-ccp-26.c: Likewise.\n\nFrom-SVN: r145799", "tree": {"sha": "a08a54da6efd905c9042e644d8017899d9d9c0f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a08a54da6efd905c9042e644d8017899d9d9c0f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f76968e6d5ab3ca8bd5b64ba0143197c00f59943", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f76968e6d5ab3ca8bd5b64ba0143197c00f59943", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f76968e6d5ab3ca8bd5b64ba0143197c00f59943", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f76968e6d5ab3ca8bd5b64ba0143197c00f59943/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c90c5fb5a5e09a6405c7dbfa145bf3a9baf70fad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c90c5fb5a5e09a6405c7dbfa145bf3a9baf70fad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c90c5fb5a5e09a6405c7dbfa145bf3a9baf70fad"}], "stats": {"total": 85, "additions": 82, "deletions": 3}, "files": [{"sha": "f9ffe707a9b3fed564fe7e4831cc1d16d6640eff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f76968e6d5ab3ca8bd5b64ba0143197c00f59943/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f76968e6d5ab3ca8bd5b64ba0143197c00f59943/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f76968e6d5ab3ca8bd5b64ba0143197c00f59943", "patch": "@@ -1,3 +1,10 @@\n+2009-04-09  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-ccp.c (maybe_fold_stmt_addition): Move non-constant\n+\tindices into an array reference if possible.\n+\t* tree-ssa-forwprop.c (tree_ssa_forward_propagate_single_use_vars):\n+\tFold POINTER_PLUS_EXPR statements with invariant address.\n+\n 2009-04-09  Alan Modra  <amodra@bigpond.net.au>\n \n \tPR target/39634"}, {"sha": "e56170e1cd0cedf7a32cf37c228a7bfe0091a2ec", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f76968e6d5ab3ca8bd5b64ba0143197c00f59943/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f76968e6d5ab3ca8bd5b64ba0143197c00f59943/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f76968e6d5ab3ca8bd5b64ba0143197c00f59943", "patch": "@@ -1,3 +1,8 @@\n+2009-04-09  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/ssa-ccp-25.c: New testcase.\n+\t* gcc.dg/tree-ssa/ssa-ccp-26.c: Likewise.\n+\n 2009-04-09  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR c/39613"}, {"sha": "c6e76a2a3fd84a2435d9dd6a6d40f6b821222c74", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ccp-25.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f76968e6d5ab3ca8bd5b64ba0143197c00f59943/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f76968e6d5ab3ca8bd5b64ba0143197c00f59943/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-25.c?ref=f76968e6d5ab3ca8bd5b64ba0143197c00f59943", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-ccp1 -fdump-tree-forwprop1\" } */\n+\n+int a[256];\n+int foo(int i)\n+{\n+  int *p = &a[0];\n+  return *(p + i);\n+}\n+\n+/* { dg-final { scan-tree-dump \"&a\\\\\\[D\\\\\\.\" \"ccp1\" } } */\n+/* { dg-final { scan-tree-dump \"= a\\\\\\[D\\\\\\.\" \"forwprop1\" } } */\n+/* { dg-final { cleanup-tree-dump \"ccp1\" } } */\n+/* { dg-final { cleanup-tree-dump \"forwprop1\" } } */"}, {"sha": "542c42939607b8434838a1a5130b1eb8061994a9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ccp-26.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f76968e6d5ab3ca8bd5b64ba0143197c00f59943/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-26.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f76968e6d5ab3ca8bd5b64ba0143197c00f59943/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-26.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-26.c?ref=f76968e6d5ab3ca8bd5b64ba0143197c00f59943", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-forwprop1\" } */\n+\n+int a[256];\n+int foo(int i)\n+{\n+  return (a + 1)[i];\n+}\n+\n+/* { dg-final { scan-tree-dump \"= a\\\\\\[D\\\\\\.\" \"forwprop1\" } } */\n+/* { dg-final { cleanup-tree-dump \"forwprop1\" } } */"}, {"sha": "226fd3dbb27c6c29db1ab03dce506610233f8bed", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 36, "deletions": 3, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f76968e6d5ab3ca8bd5b64ba0143197c00f59943/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f76968e6d5ab3ca8bd5b64ba0143197c00f59943/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=f76968e6d5ab3ca8bd5b64ba0143197c00f59943", "patch": "@@ -2114,14 +2114,47 @@ maybe_fold_stmt_addition (tree res_type, tree op0, tree op1)\n   tree ptd_type;\n   tree t;\n \n-  /* It had better be a constant.  */\n-  if (TREE_CODE (op1) != INTEGER_CST)\n-    return NULL_TREE;\n   /* The first operand should be an ADDR_EXPR.  */\n   if (TREE_CODE (op0) != ADDR_EXPR)\n     return NULL_TREE;\n   op0 = TREE_OPERAND (op0, 0);\n \n+  /* It had better be a constant.  */\n+  if (TREE_CODE (op1) != INTEGER_CST)\n+    {\n+      /* Or op0 should now be A[0] and the non-constant offset defined\n+\t via a multiplication by the array element size.  */\n+      if (TREE_CODE (op0) == ARRAY_REF\n+\t  && integer_zerop (TREE_OPERAND (op0, 1))\n+\t  && TREE_CODE (op1) == SSA_NAME\n+\t  && host_integerp (TYPE_SIZE_UNIT (TREE_TYPE (op0)), 1))\n+\t{\n+\t  gimple offset_def = SSA_NAME_DEF_STMT (op1);\n+\t  if (!is_gimple_assign (offset_def))\n+\t    return NULL_TREE;\n+\n+\t  if (gimple_assign_rhs_code (offset_def) == MULT_EXPR\n+\t      && TREE_CODE (gimple_assign_rhs2 (offset_def)) == INTEGER_CST\n+\t      && tree_int_cst_equal (gimple_assign_rhs2 (offset_def),\n+\t\t\t\t     TYPE_SIZE_UNIT (TREE_TYPE (op0))))\n+\t    return build1 (ADDR_EXPR, res_type,\n+\t\t\t   build4 (ARRAY_REF, TREE_TYPE (op0),\n+\t\t\t\t   TREE_OPERAND (op0, 0),\n+\t\t\t\t   gimple_assign_rhs1 (offset_def),\n+\t\t\t\t   TREE_OPERAND (op0, 2),\n+\t\t\t\t   TREE_OPERAND (op0, 3)));\n+\t  else if (integer_onep (TYPE_SIZE_UNIT (TREE_TYPE (op0)))\n+\t\t   && gimple_assign_rhs_code (offset_def) != MULT_EXPR)\n+\t    return build1 (ADDR_EXPR, res_type,\n+\t\t\t   build4 (ARRAY_REF, TREE_TYPE (op0),\n+\t\t\t\t   TREE_OPERAND (op0, 0),\n+\t\t\t\t   op1,\n+\t\t\t\t   TREE_OPERAND (op0, 2),\n+\t\t\t\t   TREE_OPERAND (op0, 3)));\n+\t}\n+      return NULL_TREE;\n+    }\n+\n   /* If the first operand is an ARRAY_REF, expand it so that we can fold\n      the offset into it.  */\n   while (TREE_CODE (op0) == ARRAY_REF)"}, {"sha": "f75e0afa73ffec1048e5dd3f625bbdeb855ed46e", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f76968e6d5ab3ca8bd5b64ba0143197c00f59943/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f76968e6d5ab3ca8bd5b64ba0143197c00f59943/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=f76968e6d5ab3ca8bd5b64ba0143197c00f59943", "patch": "@@ -1256,6 +1256,15 @@ tree_ssa_forward_propagate_single_use_vars (void)\n \t\t  else\n \t\t    gsi_next (&gsi);\n \t\t}\n+\t      else if (gimple_assign_rhs_code (stmt) == POINTER_PLUS_EXPR\n+\t\t       && is_gimple_min_invariant (rhs))\n+\t\t{\n+\t\t  /* Make sure to fold &a[0] + off_1 here.  */\n+\t\t  fold_stmt_inplace (stmt);\n+\t\t  update_stmt (stmt);\n+\t\t  if (gimple_assign_rhs_code (stmt) == POINTER_PLUS_EXPR)\n+\t\t    gsi_next (&gsi);\n+\t\t}\n \t      else if ((gimple_assign_rhs_code (stmt) == BIT_NOT_EXPR\n \t\t        || gimple_assign_rhs_code (stmt) == NEGATE_EXPR)\n \t\t       && TREE_CODE (rhs) == SSA_NAME)"}]}