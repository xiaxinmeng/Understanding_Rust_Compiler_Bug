{"sha": "cbf6bcbe723e596f5e90ba5443049d8d1d3634ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JmNmJjYmU3MjNlNTk2ZjVlOTBiYTU0NDMwNDlkOGQxZDM2MzRjYQ==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2014-09-16T23:39:28Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2014-09-16T23:39:28Z"}, "message": "re PR target/61853 (ICE: SIGSEGV in store_field)\n\n\tPR target/61853\n\t* config/pa/pa.c (pa_function_value): Directly handle aggregates\n\tthat fit exactly in a word or double word.\n\nFrom-SVN: r215309", "tree": {"sha": "f7f108c61640d904f779f8e80199e48fe5f0675b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7f108c61640d904f779f8e80199e48fe5f0675b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbf6bcbe723e596f5e90ba5443049d8d1d3634ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbf6bcbe723e596f5e90ba5443049d8d1d3634ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbf6bcbe723e596f5e90ba5443049d8d1d3634ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbf6bcbe723e596f5e90ba5443049d8d1d3634ca/comments", "author": null, "committer": null, "parents": [{"sha": "0e05c303e5c3c7882d5e36a4d5b66f0563ae6478", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e05c303e5c3c7882d5e36a4d5b66f0563ae6478", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e05c303e5c3c7882d5e36a4d5b66f0563ae6478"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "da2bcee6e642eac58dee851563cebea8fdc02668", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbf6bcbe723e596f5e90ba5443049d8d1d3634ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbf6bcbe723e596f5e90ba5443049d8d1d3634ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cbf6bcbe723e596f5e90ba5443049d8d1d3634ca", "patch": "@@ -1,3 +1,9 @@\n+2014-09-16  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\tPR target/61853\n+\t* config/pa/pa.c (pa_function_value): Directly handle aggregates\n+\tthat fit exactly in a word or double word.\n+\n 2014-09-16  Ilya Tocar  <ilya.tocar@intel.com>\n \n \t* config/i386/driver-i386.c (host_detect_local_cpu): Detect lack of"}, {"sha": "20f2ef662d380c0d7bebf043545c8b36dcb2805e", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbf6bcbe723e596f5e90ba5443049d8d1d3634ca/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbf6bcbe723e596f5e90ba5443049d8d1d3634ca/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=cbf6bcbe723e596f5e90ba5443049d8d1d3634ca", "patch": "@@ -9298,6 +9298,12 @@ pa_function_value (const_tree valtype,\n       || TREE_CODE (valtype) == COMPLEX_TYPE\n       || TREE_CODE (valtype) == VECTOR_TYPE)\n     {\n+      HOST_WIDE_INT valsize = int_size_in_bytes (valtype);\n+\n+      /* Handle aggregates that fit exactly in a word or double word.  */\n+      if ((valsize & (UNITS_PER_WORD - 1)) == 0)\n+\treturn gen_rtx_REG (TYPE_MODE (valtype), 28);\n+\n       if (TARGET_64BIT)\n \t{\n           /* Aggregates with a size less than or equal to 128 bits are\n@@ -9306,7 +9312,7 @@ pa_function_value (const_tree valtype,\n \t     memory.  */\n \t  rtx loc[2];\n \t  int i, offset = 0;\n-\t  int ub = int_size_in_bytes (valtype) <= UNITS_PER_WORD ? 1 : 2;\n+\t  int ub = valsize <= UNITS_PER_WORD ? 1 : 2;\n \n \t  for (i = 0; i < ub; i++)\n \t    {\n@@ -9318,7 +9324,7 @@ pa_function_value (const_tree valtype,\n \n \t  return gen_rtx_PARALLEL (BLKmode, gen_rtvec_v (ub, loc));\n \t}\n-      else if (int_size_in_bytes (valtype) > UNITS_PER_WORD)\n+      else if (valsize > UNITS_PER_WORD)\n \t{\n \t  /* Aggregates 5 to 8 bytes in size are returned in general\n \t     registers r28-r29 in the same manner as other non"}]}