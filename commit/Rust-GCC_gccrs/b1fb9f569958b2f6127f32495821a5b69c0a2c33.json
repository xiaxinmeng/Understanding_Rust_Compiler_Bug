{"sha": "b1fb9f569958b2f6127f32495821a5b69c0a2c33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFmYjlmNTY5OTU4YjJmNjEyN2YzMjQ5NTgyMWE1YjY5YzBhMmMzMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-02-20T12:56:01Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-02-20T12:56:01Z"}, "message": "re PR middle-end/39157 (Code that compiles fine in 1GB of memory with 4.1.2 requires > 20GB in 4.2.* and higher)\n\n\tPR middle-end/39157\n\t* Makefile.in (loop-invariant.o): Depend on $(PARAMS_H).\n\t* params.h (LOOP_INVARIANT_MAX_BBS_IN_LOOP): Define.\n\t* params.def (loop-invariant-max-bbs-in-loop): New parameter.\n\t* opts.c (decode_options): Set loop-invariant-max-bbs-in-loop\n\tparameter to 1000 for -O1 by default.\n\t* doc/invoke.texi (loop-invariant-max-bbs-in-loop): Document new\n\tparameter.\n\t* loop-invariant.c: Include params.h.\n\t(move_loop_invariants): Don't call move_single_loop_invariants on\n\tvery large loops.\n\nFrom-SVN: r144320", "tree": {"sha": "c37b4e8fdb620aa7e10238c591d1e5c0c5753af2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c37b4e8fdb620aa7e10238c591d1e5c0c5753af2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1fb9f569958b2f6127f32495821a5b69c0a2c33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1fb9f569958b2f6127f32495821a5b69c0a2c33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1fb9f569958b2f6127f32495821a5b69c0a2c33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1fb9f569958b2f6127f32495821a5b69c0a2c33/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da9c199f2cbefd192f9ec89579c7a627fa113bfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da9c199f2cbefd192f9ec89579c7a627fa113bfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da9c199f2cbefd192f9ec89579c7a627fa113bfc"}], "stats": {"total": 55, "additions": 49, "deletions": 6}, "files": [{"sha": "bb0ad681a4a5a31a721eaee097ea27208ce813c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1fb9f569958b2f6127f32495821a5b69c0a2c33/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1fb9f569958b2f6127f32495821a5b69c0a2c33/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1fb9f569958b2f6127f32495821a5b69c0a2c33", "patch": "@@ -1,3 +1,17 @@\n+2009-02-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/39157\n+\t* Makefile.in (loop-invariant.o): Depend on $(PARAMS_H).\n+\t* params.h (LOOP_INVARIANT_MAX_BBS_IN_LOOP): Define.\n+\t* params.def (loop-invariant-max-bbs-in-loop): New parameter.\n+\t* opts.c (decode_options): Set loop-invariant-max-bbs-in-loop\n+\tparameter to 1000 for -O1 by default.\n+\t* doc/invoke.texi (loop-invariant-max-bbs-in-loop): Document new\n+\tparameter.\n+\t* loop-invariant.c: Include params.h.\n+\t(move_loop_invariants): Don't call move_single_loop_invariants on\n+\tvery large loops.\n+\n 2009-02-20  Jaka Mocnik  <jaka@xlab.si>\n \n \t* calls.c (emit_library_call_value_1): Use slot_offset instead of"}, {"sha": "5e3fc9d5a562b613a9d325806d9f0a5286939bde", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1fb9f569958b2f6127f32495821a5b69c0a2c33/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1fb9f569958b2f6127f32495821a5b69c0a2c33/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=b1fb9f569958b2f6127f32495821a5b69c0a2c33", "patch": "@@ -2814,7 +2814,7 @@ loop-iv.o : loop-iv.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n loop-invariant.o : loop-invariant.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(EXPR_H) $(RECOG_H) coretypes.h \\\n    $(TM_H) $(TM_P_H) $(FUNCTION_H) $(FLAGS_H) $(DF_H) $(OBSTACK_H) output.h \\\n-   $(HASHTAB_H) except.h\n+   $(HASHTAB_H) except.h $(PARAMS_H)\n cfgloopmanip.o : cfgloopmanip.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(CFGLAYOUT_H) output.h \\\n    coretypes.h $(TM_H) cfghooks.h $(OBSTACK_H) $(TREE_FLOW_H)"}, {"sha": "f12124ccdc1e50862561d2956d87b831fa73e09e", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1fb9f569958b2f6127f32495821a5b69c0a2c33/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1fb9f569958b2f6127f32495821a5b69c0a2c33/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=b1fb9f569958b2f6127f32495821a5b69c0a2c33", "patch": "@@ -7766,6 +7766,13 @@ lower quality register allocation algorithm will be used.  The\n algorithm do not use pseudo-register conflicts.  The default value of\n the parameter is 2000.\n \n+@item loop-invariant-max-bbs-in-loop\n+Loop invariant motion can be very expensive, both in compile time and\n+in amount of needed compile time memory, with very large loops.  Loops\n+with more basic blocks than this parameter won't have loop invariant\n+motion optimization performed on them.  The default value of the\n+parameter is 1000 for -O1 and 10000 for -O2 and above.\n+\n @end table\n @end table\n "}, {"sha": "82e18297e2070bcf430f4a45dac54c257dc49457", "filename": "gcc/loop-invariant.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1fb9f569958b2f6127f32495821a5b69c0a2c33/gcc%2Floop-invariant.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1fb9f569958b2f6127f32495821a5b69c0a2c33/gcc%2Floop-invariant.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-invariant.c?ref=b1fb9f569958b2f6127f32495821a5b69c0a2c33", "patch": "@@ -1,5 +1,6 @@\n /* RTL-level loop invariant motion.\n-   Copyright (C) 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -52,6 +53,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"df.h\"\n #include \"hashtab.h\"\n #include \"except.h\"\n+#include \"params.h\"\n \n /* The data stored for the loop.  */\n \n@@ -1345,7 +1347,10 @@ move_loop_invariants (void)\n   /* Process the loops, innermost first.  */\n   FOR_EACH_LOOP (li, loop, LI_FROM_INNERMOST)\n     {\n-      move_single_loop_invariants (loop);\n+      /* move_single_loop_invariants for very large loops\n+\t is time consuming and might need a lot of memory.  */\n+      if (loop->num_nodes <= (unsigned) LOOP_INVARIANT_MAX_BBS_IN_LOOP)\n+\tmove_single_loop_invariants (loop);\n     }\n \n   FOR_EACH_LOOP (li, loop, 0)"}, {"sha": "8ae79ae08899146c69b5ebeed23a52161edd3611", "filename": "gcc/opts.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1fb9f569958b2f6127f32495821a5b69c0a2c33/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1fb9f569958b2f6127f32495821a5b69c0a2c33/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=b1fb9f569958b2f6127f32495821a5b69c0a2c33", "patch": "@@ -1,5 +1,5 @@\n /* Command line option handling.\n-   Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008\n+   Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n    Free Software Foundation, Inc.\n    Contributed by Neil Booth.\n \n@@ -811,6 +811,7 @@ decode_options (unsigned int argc, const char **argv)\n   static int initial_avg_aliased_vops;\n   static int initial_min_crossjump_insns;\n   static int initial_max_fields_for_field_sensitive;\n+  static int initial_loop_invariant_max_bbs_in_loop;\n   static unsigned int initial_lang_mask;\n \n   unsigned int i, lang_mask;\n@@ -833,6 +834,8 @@ decode_options (unsigned int argc, const char **argv)\n \t= compiler_params[PARAM_MIN_CROSSJUMP_INSNS].value;\n       initial_max_fields_for_field_sensitive\n \t= compiler_params[PARAM_MAX_FIELDS_FOR_FIELD_SENSITIVE].value;\n+      initial_loop_invariant_max_bbs_in_loop\n+\t= compiler_params[PARAM_LOOP_INVARIANT_MAX_BBS_IN_LOOP].value;\n     }\n   else\n     lang_mask = initial_lang_mask;\n@@ -943,6 +946,10 @@ decode_options (unsigned int argc, const char **argv)\n   set_param_value (\"max-fields-for-field-sensitive\",\n \t\t   (opt2) ? 100 : initial_max_fields_for_field_sensitive);\n \n+  /* For -O1 only do loop invariant motion for very small loops.  */\n+  set_param_value (\"loop-invariant-max-bbs-in-loop\",\n+\t\t   (opt2) ? initial_loop_invariant_max_bbs_in_loop : 1000);\n+\n   /* -O3 optimizations.  */\n   opt3 = (optimize >= 3);\n   flag_predictive_commoning = opt3;"}, {"sha": "3f7b2e77ed65cc7e9aea45fbaf6042aa353591c0", "filename": "gcc/params.def", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1fb9f569958b2f6127f32495821a5b69c0a2c33/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1fb9f569958b2f6127f32495821a5b69c0a2c33/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=b1fb9f569958b2f6127f32495821a5b69c0a2c33", "patch": "@@ -1,5 +1,5 @@\n /* params.def - Run-time parameters.\n-   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007 \n+   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n    Free Software Foundation, Inc.\n    Written by Mark Mitchell <mark@codesourcery.com>.\n \n@@ -764,6 +764,13 @@ DEFPARAM (PARAM_SWITCH_CONVERSION_BRANCH_RATIO,\n \t  \"a switch conversion to take place\",\n \t  8, 1, 0)\n \n+/* Avoid doing loop invariant motion on very large loops.  */\n+\n+DEFPARAM (PARAM_LOOP_INVARIANT_MAX_BBS_IN_LOOP,\n+\t  \"loop-invariant-max-bbs-in-loop\",\n+\t  \"max basic blocks number in loop for loop invariant motion\",\n+\t  10000, 0, 0)\n+\n /*\n Local variables:\n mode:c"}, {"sha": "fb2dad5706f2ad01369e8a7ba25fd51eb2ffc270", "filename": "gcc/params.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1fb9f569958b2f6127f32495821a5b69c0a2c33/gcc%2Fparams.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1fb9f569958b2f6127f32495821a5b69c0a2c33/gcc%2Fparams.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.h?ref=b1fb9f569958b2f6127f32495821a5b69c0a2c33", "patch": "@@ -1,5 +1,6 @@\n /* params.h - Run-time parameters.\n-   Copyright (C) 2001, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2003, 2004, 2005, 2007, 2008, 2009\n+   Free Software Foundation, Inc.\n    Written by Mark Mitchell <mark@codesourcery.com>.\n \n This file is part of GCC.\n@@ -173,4 +174,6 @@ typedef enum compiler_param\n   PARAM_VALUE (PARAM_IRA_MAX_CONFLICT_TABLE_SIZE)\n #define SWITCH_CONVERSION_BRANCH_RATIO \\\n   PARAM_VALUE (PARAM_SWITCH_CONVERSION_BRANCH_RATIO)\n+#define LOOP_INVARIANT_MAX_BBS_IN_LOOP \\\n+  PARAM_VALUE (PARAM_LOOP_INVARIANT_MAX_BBS_IN_LOOP)\n #endif /* ! GCC_PARAMS_H */"}]}