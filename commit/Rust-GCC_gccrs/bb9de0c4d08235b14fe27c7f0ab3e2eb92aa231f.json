{"sha": "bb9de0c4d08235b14fe27c7f0ab3e2eb92aa231f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI5ZGUwYzRkMDgyMzViMTRmZTI3YzdmMGFiM2UyZWI5MmFhMjMxZg==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-08-14T09:37:25Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-08-14T09:37:25Z"}, "message": "re PR fortran/50073 (gfortran must not accept function name when result name is present)\n\n2011-08-14  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/50073\n\t* decl.c (check_function_name): New function, separated off from\n\t'variable_decl' and slightly extended.\n\t(variable_decl,attr_decl1): Call it.\n\n\n2011-08-14  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/50073\n\t* gfortran.dg/func_result_7.f90: New.\n\nFrom-SVN: r177745", "tree": {"sha": "1e9dc32daee9818eb7ad634080d221d442ceaf43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e9dc32daee9818eb7ad634080d221d442ceaf43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb9de0c4d08235b14fe27c7f0ab3e2eb92aa231f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb9de0c4d08235b14fe27c7f0ab3e2eb92aa231f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb9de0c4d08235b14fe27c7f0ab3e2eb92aa231f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb9de0c4d08235b14fe27c7f0ab3e2eb92aa231f/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3713778332ef6b2d10c3981ebcc6ab8540b3f85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3713778332ef6b2d10c3981ebcc6ab8540b3f85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3713778332ef6b2d10c3981ebcc6ab8540b3f85"}], "stats": {"total": 65, "additions": 55, "deletions": 10}, "files": [{"sha": "780eee57689a0f9ccb3cec6e056a2d4be2ec705b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb9de0c4d08235b14fe27c7f0ab3e2eb92aa231f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb9de0c4d08235b14fe27c7f0ab3e2eb92aa231f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=bb9de0c4d08235b14fe27c7f0ab3e2eb92aa231f", "patch": "@@ -1,3 +1,10 @@\n+2011-08-14  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/50073\n+\t* decl.c (check_function_name): New function, separated off from\n+\t'variable_decl' and slightly extended.\n+\t(variable_decl,attr_decl1): Call it.\n+\n 2011-08-08  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* Make-lang.in (gfortran$(exeext)): Add $(EXTRA_GCC_LIBS)."}, {"sha": "18e2651c81d6d7d0d786fb79231da59baae6dd02", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 32, "deletions": 10, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb9de0c4d08235b14fe27c7f0ab3e2eb92aa231f/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb9de0c4d08235b14fe27c7f0ab3e2eb92aa231f/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=bb9de0c4d08235b14fe27c7f0ab3e2eb92aa231f", "patch": "@@ -1729,6 +1729,30 @@ match_pointer_init (gfc_expr **init, int procptr)\n }\n \n \n+static gfc_try\n+check_function_name (char *name)\n+{\n+  /* In functions that have a RESULT variable defined, the function name always\n+     refers to function calls.  Therefore, the name is not allowed to appear in\n+     specification statements. When checking this, be careful about\n+     'hidden' procedure pointer results ('ppr@').  */\n+\n+  if (gfc_current_state () == COMP_FUNCTION)\n+    {\n+      gfc_symbol *block = gfc_current_block ();\n+      if (block && block->result && block->result != block\n+\t  && strcmp (block->result->name, \"ppr@\") != 0\n+\t  && strcmp (block->name, name) == 0)\n+\t{\n+\t  gfc_error (\"Function name '%s' not allowed at %C\", name);\n+\t  return FAILURE;\n+\t}\n+    }\n+\n+  return SUCCESS;\n+}\n+\n+\n /* Match a variable name with an optional initializer.  When this\n    subroutine is called, a variable is expected to be parsed next.\n    Depending on what is happening at the moment, updates either the\n@@ -1935,17 +1959,9 @@ variable_decl (int elem)\n \t    goto cleanup;\n \t}\n     }\n-\n-  /* In functions that have a RESULT variable defined, the function\n-     name always refers to function calls.  Therefore, the name is\n-     not allowed to appear in specification statements.  */\n-  if (gfc_current_state () == COMP_FUNCTION\n-      && gfc_current_block () != NULL\n-      && gfc_current_block ()->result != NULL\n-      && gfc_current_block ()->result != gfc_current_block ()\n-      && strcmp (gfc_current_block ()->name, name) == 0)\n+    \n+  if (check_function_name (name) == FAILURE)\n     {\n-      gfc_error (\"Function name '%s' not allowed at %C\", name);\n       m = MATCH_ERROR;\n       goto cleanup;\n     }\n@@ -5995,6 +6011,12 @@ attr_decl1 (void)\n   if (find_special (name, &sym, false))\n     return MATCH_ERROR;\n \n+  if (check_function_name (name) == FAILURE)\n+    {\n+      m = MATCH_ERROR;\n+      goto cleanup;\n+    }\n+  \n   var_locus = gfc_current_locus;\n \n   /* Deal with possible array specification for certain attributes.  */"}, {"sha": "c85c4baa8228b0106e8f7b2e72394ace90426f54", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb9de0c4d08235b14fe27c7f0ab3e2eb92aa231f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb9de0c4d08235b14fe27c7f0ab3e2eb92aa231f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bb9de0c4d08235b14fe27c7f0ab3e2eb92aa231f", "patch": "@@ -1,3 +1,8 @@\n+2011-08-14  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/50073\n+\t* gfortran.dg/func_result_7.f90: New.\n+\n 2011-08-13  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/50075"}, {"sha": "9a982f1e6fda3071d394b6c61257f8909fcd9fe2", "filename": "gcc/testsuite/gfortran.dg/func_result_7.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb9de0c4d08235b14fe27c7f0ab3e2eb92aa231f/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunc_result_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb9de0c4d08235b14fe27c7f0ab3e2eb92aa231f/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunc_result_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunc_result_7.f90?ref=bb9de0c4d08235b14fe27c7f0ab3e2eb92aa231f", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do compile }\n+!\n+! PR 50073: gfortran must not accept function name when result name is present\n+!\n+! Contributed by Vittorio Zecca <zeccav@gmail.com>\n+\n+function fun() result(f)\n+  pointer fun       ! { dg-error \"not allowed\" }\n+  dimension fun(1)  ! { dg-error \"not allowed\" }\n+  f=0\n+end"}]}