{"sha": "df3a80d97fe58eafcd880448b3768ca302c743f6", "node_id": "C_kwDOANBUbNoAKGRmM2E4MGQ5N2ZlNThlYWZjZDg4MDQ0OGIzNzY4Y2EzMDJjNzQzZjY", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2023-04-10T09:06:35Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2023-04-10T09:09:15Z"}, "message": "Merge upstream (dummy), \"Rust front-end update 2023-04-05\"\n\nIn #2112 'Merge upstream, last commit before \"Rust front-end update 2023-04-05\"'\nwe merged commit 939fb3fffebf7be2638ddef25dbe1c15f2aaa9d6 from upstream GCC\nmaster branch.\n\nThis one now merges the \"Rust front-end update 2023-04-05\", commits\n939fb3fffebf7be2638ddef25dbe1c15f2aaa9d6..d2a499a9881c7c079d2a722b57c7fcf022a864dd:\n\n      - f66b135d0b5 gccrs: fatal_error_flag: Fix typo in error message\n      - 776ff053800 gccrs: unsafe: check use of `target_feature` attribute\n      - d9e05700ac3 gccrs: Check for mutable references in const functions\n      - ef792b9658d gccrs: rust: add bound parsing in parse_generic_arg.\n      - e1394230b3f gccrs: Implement declarative macro 2.0 parser\n      - 3f1dbb2cf8f gccrs: Add name resolution to generic argument associated item bindings\n      - 7eab9d18d97 gccrs: Support associated type bound arguments\n      - 364f4cd3072 gccrs: Reuse TypeCheckPattern on LetStmt's\n      - 8e2abbef4cc gccrs: Add get_locus function for abstract class MetaItemInner.\n      - 86f8e47f9df gccrs: diagnostics: Add underline for tokens in diagnostics.\n      - 881ed7fb273 gccrs: Change how CompileVarDecl outputs Bvariable's\n      - 60affc3a1c5 gccrs: testsuite: Handle Windows carriage returns properly\n      - 910e7e0a958 gccrs: Support GroupedPattern during name resolution\n      - cb42610bfba gccrs: Do not crash on empty macros expand. Fixes #1712\n      - 93fcadd208a gccrs: Add HIR lowering for GroupedPattern\n      - d5a303cc664 gccrs: Add get_item method for HIR::GroupedPattern\n      - 83e5f634d74 gccrs: Add type resolution for grouped patterns\n      - 221650c280c gccrs: Added missing GroupedPattern visitors for code generation\n      - 9b19e93873c gccrs: Rename file rust-ast-full-test.cc to rust-ast.cc\n      - d6cb04bf5c0 gccrs: moved operator.h to util/rust-operators.h\n      - 760f529d813 gccrs: fixed compiler error message on wildcard pattern within expression\n      - 8e7e682a9f8 gccrs: fixed indentations in AST pretty expanded dump of trait\n      - 51b607c2227 gccrs: macro: Allow builtin `MacroInvocation`s within the AST\n      - ad9d75f5080 gccrs: Create and use CompilePatternLet visitor for compiling let statments\n      - 9cbd270632b gccrs: parser: Allow parsing multiple reference types\n      - 2dab57c3f2f gccrs: Move rust-buffered-queue.h to util folder #1766\n      - fd7358af3cf gccrs: Improve GroupedPattern lowering\n      - 95efd84db13 gccrs: Remove HIR::GroupedPattern\n      - 0e4bf6e7fc4 gccrs: Optimize HIR::ReferencePattern\n      - 86f53e5853d gccrs: Implement lowering ReferencePattern from AST to HIR\n      - 2af66ebd1d8 gccrs: parser: Improve parsing of complex generic arguments\n      - 7f5144d1c96 gccrs: parser: Fix parsing of closure param list\n      - 476faea3563 gccrs: Add  support for feature check.\n      - 4141941ae7b gccrs: Removed comment copy-pasted from gcc/tree.def\n      - 8d1d08cdbcf gccrs: Add another test case for passing associated type-bounds\n      - c1b1bbbc645 gccrs: Move TypePredicateItem impl out of the header\n      - 688fccb5227 gccrs: Refactor TyVar and TypeBoundPredicates\n      - e42118c327f gccrs: Refactor SubstitutionRef base class into its own CC file\n      - 6abbfb5280f gccrs: Refactor all substitution mapper code implementation into its own CC file\n      - d73082efece gccrs: Refactor BaseType, InferType and ErrorType impl into cc file\n      - 26af4b0604d gccrs: Refactor PathProbe into cc file\n      - 547e511fbdd gccrs: Refactor PathProbeType code into CC file\n      - 615ee14c08e gccrs: Refactor all code out of the rust-tyty.h header\n      - 6c4fa22d384 gccrs: Rename rust-tyctx.cc to rust-typecheck-context.cc\n      - 1019fd6337b gccrs: Rename header rust-hir-trait-ref.h to rust-hir-trait-reference.h\n      - dcb2e571ac6 gccrs: Refactor handle_substitutions to take a reference\n      - 2f228578d56 gccrs: Clear the substitution callbacks when copying ArgumentMappings\n      - 31f1e59962b gccrs: Add missing param subst callback\n      - e42c28bcfdd gccrs: Remove monomorphization hack to setup possible associated types\n      - 68d671ac725 gccrs: Refactor the type unification code\n      - 2a2e6712ba0 gccrs: Fix nullptr dereference\n      - f62dcf2c65a gccrs: Add missing Sized, Copy and Clone lang item mappings\n      - 9754a60623c gccrs: Fix higher ranked trait bounds computation of self\n      - 11150b7c05c gccrs: Remove bad error message on checking function arguments\n      - eb4a61ac1ba gccrs: Add general TypeBounds checks\n      - fa7b3a2f07f gccrs: Add support for TuplePattern in let statements\n      - 1c57244dbc0 gccrs: rust-item: include rust-expr.h\n      - f548ddee96a gccrs: parser: Expose parse_macro_invocation as public API\n      - 2d30e0b882f gccrs: expansion: Add `get_token_slice` to `MacroInvocLexer` class\n      - 3821669164d gccrs: macros: Perform macro expansion in a fixed-point fashion.\n      - fbd5244df6b gccrs: expander: Add documentation for `expand_eager_invocations`\n      - 5fd04425c09 gccrs: typecheck: Refactor rust-hir-trait-reference.h\n      - f64799a567e gccrs: cli: Update safety warning message\n      - b4229fb086b gccrs: Update copyright years.\n      - fd5eb9f2b01 gccrs: Add feature gate for \"rust-intrinsic\".\n      - a9d72ef2d03 gccrs: Add variadic argument type checking\n      - 8a9886a85ea gccrs: Add test\n      - e81f5be60d1 gccrs: Simplify WildcardPattern let statement handling\n      - b56d093e952 gccrs: lex: Prevent directories in RAIIFile\n      - 7b00a80c9df gccrs: testsuite: Add empty string macro test\n      - 20529dff93f gccrs: Add support for parsing empty tuple patterns.\n      - fd406fc7046 gccrs: Implemented UTF-8 checking for include_str!()\n      - c627781b8f6 gccrs: Extract query_type from TypeCheckBase to be a simple extern\n      - e90d06c5447 gccrs: Add new virtual function HIR::ImplItem::get_impl_item_name\n      - 4b25fc15b92 gccrs: Support for Sized builtin marker trait\n      - a11b44b6a57 gccrs: Fix regression in testcase\n      - ecdce2bf17a gccrs: Add trailing newline\n      - 8b0ed2387a5 gccrs: builtins: Return empty list of tokens instead of nullptr\n      - 6774d569c61 gccrs: Fix formatting\n      - 8628486f487 gccrs: Add AST::AltPattern class\n      - 0ec543c7c61 gccrs: Fix up DejaGnu directives in 'rust/compile/issue-1830_{bytes,str}.rs' test cases [#1838]\n      - 1a58da7c2d8 gccrs: rename rust-hir-full-tests.cc\n      - 3b342e11627 gccrs: add test case to show our query-type system is working\n      - fa7675df86a gccrs: ast: Refactor TraitItem to keep Location info\n      - 2785d591116 gccrs: diagnostic: Refactor Error class\n      - f2d6ab839ce gccrs: Added AST Node AST::InlineAsm\n      - 990ae497b86 gccrs: Address unsafe with/without block handling ambiguity\n      - d2a499a9881 gccrs: Fix issue with parsing unsafe block expression statements\n\nThis merge is done with 'git merge --strategy=ours', so effectively doesn't\nmerge any changes.  Rationale: those commits are taken from GCC/Rust master\nbranch, and any remaining changes we'd either like to persist, or assess\nindividually, later.", "tree": {"sha": "778c6eb8324fa714713ce30a0897e44cf276508b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/778c6eb8324fa714713ce30a0897e44cf276508b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df3a80d97fe58eafcd880448b3768ca302c743f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df3a80d97fe58eafcd880448b3768ca302c743f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df3a80d97fe58eafcd880448b3768ca302c743f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df3a80d97fe58eafcd880448b3768ca302c743f6/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3757e8d71794cece4a5c9d08245b7ad111044853", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3757e8d71794cece4a5c9d08245b7ad111044853", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3757e8d71794cece4a5c9d08245b7ad111044853"}, {"sha": "d2a499a9881c7c079d2a722b57c7fcf022a864dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2a499a9881c7c079d2a722b57c7fcf022a864dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2a499a9881c7c079d2a722b57c7fcf022a864dd"}], "stats": {"total": 0, "additions": 0, "deletions": 0}, "files": []}