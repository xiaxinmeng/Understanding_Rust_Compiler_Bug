{"sha": "cc011e7f12afb47a0487e9645bc125681b8b136f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2MwMTFlN2YxMmFmYjQ3YTA0ODdlOTY0NWJjMTI1NjgxYjhiMTM2Zg==", "commit": {"author": {"name": "Lee Millward", "email": "lee.millward@codesourcery.com", "date": "2006-08-04T18:08:14Z"}, "committer": {"name": "Lee Millward", "email": "lmillward@gcc.gnu.org", "date": "2006-08-04T18:08:14Z"}, "message": "re PR c++/28347 (ICE on typedef with initialization)\n\n        PR c++/28347\n        * decl.c (start_decl): Return error_mark_node if a \n        diagnostic was issed for an invalid typedef initialization.\n\n        * g++.dg/ext/typedef-init.C: Add new test for \n        typedef initialization inside templates. Adjust\n        existing error markers\n\nFrom-SVN: r115931", "tree": {"sha": "51f9d2b4792206f7607a2ca78c7e19e23588e329", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51f9d2b4792206f7607a2ca78c7e19e23588e329"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc011e7f12afb47a0487e9645bc125681b8b136f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc011e7f12afb47a0487e9645bc125681b8b136f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc011e7f12afb47a0487e9645bc125681b8b136f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc011e7f12afb47a0487e9645bc125681b8b136f/comments", "author": null, "committer": null, "parents": [{"sha": "71156bccaa2aadde4cc420bb719626c59380561b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71156bccaa2aadde4cc420bb719626c59380561b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71156bccaa2aadde4cc420bb719626c59380561b"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "1f05b730aa82e549f3d1145d0c2b1aa1ce899791", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc011e7f12afb47a0487e9645bc125681b8b136f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc011e7f12afb47a0487e9645bc125681b8b136f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cc011e7f12afb47a0487e9645bc125681b8b136f", "patch": "@@ -1,3 +1,9 @@\n+2006-08-03  Lee Millward  <lee.millward@codesourcery.com>\n+\n+       PR c++/28347\n+       * decl.c (start_decl): Return error_mark_node if a\n+       diagnostic was issed for an invalid typedef initialization.\n+\t\n 2006-08-03  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \tPR c++/27508"}, {"sha": "b03ea62a2ede5b02d59dcc7efe8a3e1d45bce55e", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc011e7f12afb47a0487e9645bc125681b8b136f/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc011e7f12afb47a0487e9645bc125681b8b136f/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=cc011e7f12afb47a0487e9645bc125681b8b136f", "patch": "@@ -3860,8 +3860,7 @@ start_decl (const cp_declarator *declarator,\n       {\n       case TYPE_DECL:\n \terror (\"typedef %qD is initialized (use __typeof__ instead)\", decl);\n-\tinitialized = 0;\n-\tbreak;\n+\treturn error_mark_node;\n \n       case FUNCTION_DECL:\n \terror (\"function %q#D is initialized like a variable\", decl);"}, {"sha": "9f0818209b0bec0f7d35af9cacd02a38a13f5396", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc011e7f12afb47a0487e9645bc125681b8b136f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc011e7f12afb47a0487e9645bc125681b8b136f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cc011e7f12afb47a0487e9645bc125681b8b136f", "patch": "@@ -1,3 +1,10 @@\n+2006-08-03  Lee Millward  <lee.millward@codesourcery.com>\n+\n+       PR c++/28347\n+       * g++.dg/ext/typedef-init.C: Add new test for typedef \n+       initialization inside templates. Adjust existing\n+       error markers.\n+\t\n 2006-08-03  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/28148"}, {"sha": "95a96d551621200d6d50f9cc6b92aed7432a35db", "filename": "gcc/testsuite/g++.dg/ext/typedef-init.C", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc011e7f12afb47a0487e9645bc125681b8b136f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ftypedef-init.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc011e7f12afb47a0487e9645bc125681b8b136f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ftypedef-init.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ftypedef-init.C?ref=cc011e7f12afb47a0487e9645bc125681b8b136f", "patch": "@@ -13,12 +13,12 @@\n \n typedef A = 0;  /* { dg-error \"initialized\" \"A\" } */\n                 /* { dg-warning \"no type\" \"A warns\" { target *-*-* } 14 } */\n-A a;            /* { dg-bogus \"\" \"A error cascade\" } */\n+A a;            /* { dg-error \"does not name a type\" \"A error cascade\" } */\n \n /* Case B: with a type also.  */\n \n typedef int B = 0;  /* { dg-error \"initialized\" \"B\" } */\n-B b;\t\t    /* { dg-bogus \"\" \"B error cascade\" } */\n+B b;\t\t    /* { dg-error \"does not name a type\" \"B error cascade\" } */\n \n /* C and D are the same as A and B, but wrapped in a structure;\n    field declarations go by a different code path in C++ (ick).  */\n@@ -31,3 +31,8 @@ struct S {\n   typedef int D = 0; /* { dg-error \"initialized\" \"D\" } */\n   D d;\t\t     /* { dg-bogus \"\" \"D error cascade\" } */\n };\n+\n+template<int> void foo()\n+{\n+    typedef int i = 0; /* { dg-error \"is initialized\" } */\n+}"}]}