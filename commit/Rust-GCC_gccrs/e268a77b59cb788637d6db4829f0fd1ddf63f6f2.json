{"sha": "e268a77b59cb788637d6db4829f0fd1ddf63f6f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI2OGE3N2I1OWNiNzg4NjM3ZDZkYjQ4MjlmMGZkMWRkZjYzZjZmMg==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2017-11-07T11:08:06Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2017-11-07T11:08:06Z"}, "message": "More bitop simplifications in match.pd\n\n2017-11-07  Marc Glisse  <marc.glisse@inria.fr>\n\ngcc/\n\t* match.pd ((a&~b)|(a^b),(a&~b)^~a,(a|b)&~(a^b),a|~(a^b),\n\t(a|b)|(a&^b),(a&b)|~(a^b),~(~a&b),~X^Y): New transformations.\n\ngcc/testsuite/\n\t* gcc.dg/tree-ssa/bitops-1.c: New file.\n\nFrom-SVN: r254495", "tree": {"sha": "7508fffb8d66d0db4cd97e22534f47fcaab536af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7508fffb8d66d0db4cd97e22534f47fcaab536af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e268a77b59cb788637d6db4829f0fd1ddf63f6f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e268a77b59cb788637d6db4829f0fd1ddf63f6f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e268a77b59cb788637d6db4829f0fd1ddf63f6f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e268a77b59cb788637d6db4829f0fd1ddf63f6f2/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "81bd903a6aa90326fb2a3cb451f86423f069793b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81bd903a6aa90326fb2a3cb451f86423f069793b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81bd903a6aa90326fb2a3cb451f86423f069793b"}], "stats": {"total": 123, "additions": 123, "deletions": 0}, "files": [{"sha": "bbb51e3fc00c705a34e421c086bda49f7bffa910", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e268a77b59cb788637d6db4829f0fd1ddf63f6f2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e268a77b59cb788637d6db4829f0fd1ddf63f6f2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e268a77b59cb788637d6db4829f0fd1ddf63f6f2", "patch": "@@ -1,3 +1,8 @@\n+2017-11-07  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\t* match.pd ((a&~b)|(a^b),(a&~b)^~a,(a|b)&~(a^b),a|~(a^b),\n+\t(a|b)|(a&^b),(a&b)|~(a^b),~(~a&b),~X^Y): New transformations.\n+\n 2017-11-07  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* fold-const.c (negate_expr_p) [PLUS_EXPR, MINUS_EXPR]: Handle"}, {"sha": "40ac5dae8c031d6d833a536e77a49118a78dbbf8", "filename": "gcc/match.pd", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e268a77b59cb788637d6db4829f0fd1ddf63f6f2/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e268a77b59cb788637d6db4829f0fd1ddf63f6f2/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=e268a77b59cb788637d6db4829f0fd1ddf63f6f2", "patch": "@@ -685,6 +685,42 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n   (bit_ior:c (bit_xor:c @0 @1) @0)\n   (bit_ior @0 @1))\n \n+/* (a & ~b) | (a ^ b)  -->  a ^ b  */\n+(simplify\n+ (bit_ior:c (bit_and:c @0 (bit_not @1)) (bit_xor:c@2 @0 @1))\n+ @2)\n+\n+/* (a & ~b) ^ ~a  -->  ~(a & b)  */\n+(simplify\n+ (bit_xor:c (bit_and:cs @0 (bit_not @1)) (bit_not @0))\n+ (bit_not (bit_and @0 @1)))\n+\n+/* (a | b) & ~(a ^ b)  -->  a & b  */\n+(simplify\n+ (bit_and:c (bit_ior @0 @1) (bit_not (bit_xor:c @0 @1)))\n+ (bit_and @0 @1))\n+\n+/* a | ~(a ^ b)  -->  a | ~b  */\n+(simplify\n+ (bit_ior:c @0 (bit_not:s (bit_xor:c @0 @1)))\n+ (bit_ior @0 (bit_not @1)))\n+\n+/* (a | b) | (a &^ b)  -->  a | b  */\n+(for op (bit_and bit_xor)\n+ (simplify\n+  (bit_ior:c (bit_ior@2 @0 @1) (op:c @0 @1))\n+  @2))\n+\n+/* (a & b) | ~(a ^ b)  -->  ~(a ^ b)  */\n+(simplify\n+ (bit_ior:c (bit_and:c @0 @1) (bit_not@2 (bit_xor @0 @1)))\n+ @2)\n+\n+/* ~(~a & b)  -->  a | ~b  */\n+(simplify\n+ (bit_not (bit_and:cs (bit_not @0) @1))\n+ (bit_ior @0 (bit_not @1)))\n+\n /* Simplify (~X & Y) to X ^ Y if we know that (X & ~Y) is 0.  */\n #if GIMPLE\n (simplify\n@@ -1124,6 +1160,12 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n  (if (tree_nop_conversion_p (type, TREE_TYPE (@0)))\n   (convert (bit_xor @0 @1))))\n \n+/* Otherwise prefer ~(X ^ Y) to ~X ^ Y as more canonical.  */\n+(simplify\n+ (bit_xor:c (nop_convert:s (bit_not:s @0)) @1)\n+ (if (tree_nop_conversion_p (type, TREE_TYPE (@0)))\n+  (bit_not (bit_xor (view_convert @0) @1))))\n+\n /* (x & ~m) | (y & m) -> ((x ^ y) & m) ^ x */\n (simplify\n  (bit_ior:c (bit_and:cs @0 (bit_not @2)) (bit_and:cs @1 @2))"}, {"sha": "bb0eb9bfa6427e3c5eee59b0eee757806c7ed284", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e268a77b59cb788637d6db4829f0fd1ddf63f6f2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e268a77b59cb788637d6db4829f0fd1ddf63f6f2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e268a77b59cb788637d6db4829f0fd1ddf63f6f2", "patch": "@@ -1,3 +1,7 @@\n+2017-11-07  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\t* gcc.dg/tree-ssa/bitops-1.c: New file.\n+\n 2017-11-07  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* gcc.dg/tree-ssa/negminus.c: New test."}, {"sha": "cf2823deb62e5b296a67bbc4a9d11744ed8851ed", "filename": "gcc/testsuite/gcc.dg/tree-ssa/bitops-1.c", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e268a77b59cb788637d6db4829f0fd1ddf63f6f2/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbitops-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e268a77b59cb788637d6db4829f0fd1ddf63f6f2/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbitops-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbitops-1.c?ref=e268a77b59cb788637d6db4829f0fd1ddf63f6f2", "patch": "@@ -0,0 +1,72 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O -fdump-tree-optimized-raw\" } */\n+\n+#define DECLS(n,VOL)\t\t\t\\\n+__attribute__((noinline,noclone))\t\\\n+int f##n(int A,int B){\t\t\t\\\n+    VOL int C = A & ~B;\t\t\t\\\n+    VOL int D = A ^ B;\t\t\t\\\n+    return C | D;\t\t\t\\\n+}\t\t\t\t\t\\\n+__attribute__((noinline,noclone))\t\\\n+int g##n(int A,int B){\t\t\t\\\n+    VOL int C = A & ~B;\t\t\t\\\n+    return C ^ ~A;\t\t\t\\\n+}\t\t\t\t\t\\\n+__attribute__((noinline,noclone))\t\\\n+int h##n(int A,int B){\t\t\t\\\n+    VOL int C = A | B;\t\t\t\\\n+    VOL int D = A ^ B;\t\t\t\\\n+    return C & ~D;\t\t\t\\\n+}\t\t\t\t\t\\\n+__attribute__((noinline,noclone))\t\\\n+int i##n(int A,int B){\t\t\t\\\n+    VOL int C = A ^ B;\t\t\t\\\n+    return A | ~C;\t\t\t\\\n+}\t\t\t\t\t\\\n+__attribute__((noinline,noclone))\t\\\n+int J##n(int A,int B){\t\t\t\\\n+    VOL int C = A | B;\t\t\t\\\n+    VOL int D = A & B;\t\t\t\\\n+    return C | D;\t\t\t\\\n+}\t\t\t\t\t\\\n+__attribute__((noinline,noclone))\t\\\n+int k##n(int A,int B){\t\t\t\\\n+    VOL int C = A & B;\t\t\t\\\n+    VOL int D = A ^ B;\t\t\t\\\n+    return C | ~D;\t\t\t\\\n+}\t\t\t\t\t\\\n+__attribute__((noinline,noclone))\t\\\n+int l##n(int A,int B){\t\t\t\\\n+    VOL int C = A & ~B;\t\t\t\\\n+    return ~C;\t\t\t\t\\\n+}\t\t\t\t\t\\\n+__attribute__((noinline,noclone))\t\\\n+int m##n(int A,int B){\t\t\t\\\n+    VOL int C = A & B;\t\t\t\\\n+    VOL int D = A ^ B;\t\t\t\\\n+    return C ^ D;\t\t\t\\\n+}\n+\n+DECLS(0,)\n+DECLS(1,volatile)\n+\n+int main(){\n+    for(int A = 0; A <= 1; ++A)\n+      for(int B = 0; B <= 1; ++B)\n+\t{\n+\t  if (f0 (A, B) != f1 (A, B)) __builtin_abort();\n+\t  if (g0 (A, B) != g1 (A, B)) __builtin_abort();\n+\t  if (h0 (A, B) != h1 (A, B)) __builtin_abort();\n+\t  if (i0 (A, B) != i1 (A, B)) __builtin_abort();\n+\t  if (J0 (A, B) != J1 (A, B)) __builtin_abort();\n+\t  if (k0 (A, B) != k1 (A, B)) __builtin_abort();\n+\t  if (l0 (A, B) != l1 (A, B)) __builtin_abort();\n+\t  if (m0 (A, B) != m1 (A, B)) __builtin_abort();\n+\t}\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"bit_not_expr\" 12 \"optimized\"} } */\n+/* { dg-final { scan-tree-dump-times \"bit_and_expr\"  9 \"optimized\"} } */\n+/* { dg-final { scan-tree-dump-times \"bit_ior_expr\" 10 \"optimized\"} } */\n+/* { dg-final { scan-tree-dump-times \"bit_xor_expr\"  9 \"optimized\"} } */"}]}