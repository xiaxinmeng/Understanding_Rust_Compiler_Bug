{"sha": "598e10cf415f0a53eab2b1e63980531c60d673b7", "node_id": "C_kwDOANBUbNoAKDU5OGUxMGNmNDE1ZjBhNTNlYWIyYjFlNjM5ODA1MzFjNjBkNjczYjc", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2023-02-02T14:11:31Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2023-02-02T14:11:31Z"}, "message": "analyzer: add deref-before-check-qemu-qtest_rsp_args.c test case\n\ngcc/testsuite/ChangeLog:\n\t* gcc.dg/analyzer/deref-before-check-qemu-qtest_rsp_args.c: New test.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "7c15aa2e0ed58d4c2f521ef2994514bc82ba7abe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c15aa2e0ed58d4c2f521ef2994514bc82ba7abe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/598e10cf415f0a53eab2b1e63980531c60d673b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/598e10cf415f0a53eab2b1e63980531c60d673b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/598e10cf415f0a53eab2b1e63980531c60d673b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/598e10cf415f0a53eab2b1e63980531c60d673b7/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a02aacf55a35876ddc1e534778dc37fae29054f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a02aacf55a35876ddc1e534778dc37fae29054f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a02aacf55a35876ddc1e534778dc37fae29054f6"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "2b3ad8c5fb3e4003e3202483098f7199e6043c31", "filename": "gcc/testsuite/gcc.dg/analyzer/deref-before-check-qemu-qtest_rsp_args.c", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/598e10cf415f0a53eab2b1e63980531c60d673b7/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fderef-before-check-qemu-qtest_rsp_args.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/598e10cf415f0a53eab2b1e63980531c60d673b7/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fderef-before-check-qemu-qtest_rsp_args.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fderef-before-check-qemu-qtest_rsp_args.c?ref=598e10cf415f0a53eab2b1e63980531c60d673b7", "patch": "@@ -0,0 +1,73 @@\n+/* Reduced from qemu-7.2.0's tests/qtest/libqtest.c.  */\n+\n+#define TRUE 1\n+#define NULL ((void *)0)\n+\n+#define g_assert(expr) \\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    if (expr) ; else /* { dg-warning \"check of '\\\\*words' for NULL after already dereferencing it\" } */ \\\n+      g_assertion_message_expr (#expr);\t\t\t\\\n+} while (0)\n+\n+void    g_assertion_message_expr        (const char     *expr) __attribute__((noreturn));\n+\n+extern int strcmp (const char *__s1, const char *__s2)\n+  __attribute__ ((__nothrow__ , __leaf__, __pure__, __nonnull__ (1, 2)));\n+typedef char gchar;\n+typedef int gint;\n+typedef gint gboolean;\n+typedef struct _GString GString;\n+\n+struct _GString\n+{\n+  gchar *str;\n+  /* [...snip...] */\n+};\n+\n+extern\n+gchar* g_string_free (GString *string,\n+\t\t      gboolean free_segment);\n+extern\n+gchar** g_strsplit (const gchar *string,\n+\t\t    const gchar *delimiter,\n+\t\t    gint max_tokens);\n+extern\n+void g_strfreev (gchar **str_array);\n+\n+typedef struct QTestState QTestState;\n+typedef GString* (*QTestRecvFn)(QTestState *);\n+\n+typedef struct QTestClientTransportOps {\n+    /* [...snip...] */\n+    QTestRecvFn recv_line;\n+} QTestTransportOps;\n+\n+struct QTestState\n+{\n+    /* [...snip...] */\n+    QTestTransportOps ops;\n+    /* [...snip...] */\n+};\n+\n+gchar **qtest_rsp_args(QTestState *s, int expected_args)\n+{\n+    GString *line;\n+    gchar **words;\n+    /* [...snip...] */\n+\n+redo:\n+    line = s->ops.recv_line(s);\n+    words = g_strsplit(line->str, \" \", 0);\n+    g_string_free(line, TRUE);\n+\n+    if (strcmp(words[0], \"IRQ\") == 0) { /* { dg-message \"pointer '\\\\*words' is dereferenced here\" } */\n+        /* [...snip...] */\n+        g_strfreev(words);\n+        goto redo;\n+    }\n+\n+    g_assert(words[0] != NULL); /* { dg-message \"in expansion of macro 'g_assert'\" } */\n+    /* [...snip...] */\n+\n+    return words;\n+}"}]}