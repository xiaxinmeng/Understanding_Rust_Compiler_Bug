{"sha": "9972d439b8dd8d37284fc1bcd41f32ec43c1e2c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk3MmQ0MzliOGRkOGQzNzI4NGZjMWJjZDQxZjMyZWM0M2MxZTJjNA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-02-25T15:27:16Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-25T15:27:16Z"}, "message": "gnat_rm.texi: First set of documentation additions for predefined RM units.\n\n2014-02-25  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: First set of documentation additions for\n\tpredefined RM units.\n\t* checks.adb: Minor reformatting.\n\t* sem_elab.adb (Check_Task_Activation): Minor fix to error\n\tmessage.\n\t* sem_util.adb: Minor reformatting.\n\nFrom-SVN: r208141", "tree": {"sha": "b7e242895d20f0950d19b4900e5bbd6f250919f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7e242895d20f0950d19b4900e5bbd6f250919f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9972d439b8dd8d37284fc1bcd41f32ec43c1e2c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9972d439b8dd8d37284fc1bcd41f32ec43c1e2c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9972d439b8dd8d37284fc1bcd41f32ec43c1e2c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9972d439b8dd8d37284fc1bcd41f32ec43c1e2c4/comments", "author": null, "committer": null, "parents": [{"sha": "592574f5b3a16a309e14ab8b75468a290df3b23a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/592574f5b3a16a309e14ab8b75468a290df3b23a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/592574f5b3a16a309e14ab8b75468a290df3b23a"}], "stats": {"total": 255, "additions": 247, "deletions": 8}, "files": [{"sha": "a7d5dd335c018acfe16430bb506eddb3e2330ad1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9972d439b8dd8d37284fc1bcd41f32ec43c1e2c4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9972d439b8dd8d37284fc1bcd41f32ec43c1e2c4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9972d439b8dd8d37284fc1bcd41f32ec43c1e2c4", "patch": "@@ -1,3 +1,12 @@\n+2014-02-25  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi: First set of documentation additions for\n+\tpredefined RM units.\n+\t* checks.adb: Minor reformatting.\n+\t* sem_elab.adb (Check_Task_Activation): Minor fix to error\n+\tmessage.\n+\t* sem_util.adb: Minor reformatting.\n+\n 2014-02-25  Arnaud Charlet  <charlet@adacore.com>\n \n \t* usage.adb (Usage): Add help on -gnateC."}, {"sha": "7d3979dcbb20b1238e234e53f756c5c10f36e9ef", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9972d439b8dd8d37284fc1bcd41f32ec43c1e2c4/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9972d439b8dd8d37284fc1bcd41f32ec43c1e2c4/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=9972d439b8dd8d37284fc1bcd41f32ec43c1e2c4", "patch": "@@ -1516,8 +1516,8 @@ package body Checks is\n \n       if Nkind (Original_Node (N)) /= N_Allocator\n         and then (No (Lhs)\n-          or else not Is_Entity_Name (Lhs)\n-          or else No (Param_Entity (Lhs)))\n+                   or else not Is_Entity_Name (Lhs)\n+                   or else No (Param_Entity (Lhs)))\n       then\n          if (Etype (N) = Typ\n               or else (Do_Access and then Designated_Type (Typ) = S_Typ))\n@@ -1767,7 +1767,6 @@ package body Checks is\n          if Do_Overflow_Check (N)\n            and then not Overflow_Checks_Suppressed (Etype (N))\n          then\n-\n             --  Test for extremely annoying case of xxx'First divided by -1\n             --  for division of signed integer types (only overflow case).\n "}, {"sha": "f88cacfadf164d1a0be180c342c5a147a1791106", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 235, "deletions": 2, "changes": 237, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9972d439b8dd8d37284fc1bcd41f32ec43c1e2c4/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9972d439b8dd8d37284fc1bcd41f32ec43c1e2c4/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=9972d439b8dd8d37284fc1bcd41f32ec43c1e2c4", "patch": "@@ -13751,6 +13751,7 @@ source file location.\n * Pragma Pack for Arrays::\n * Pragma Pack for Records::\n * Record Representation Clauses::\n+* Handling of Records with Holes::\n * Enumeration Clauses::\n * Address Clauses::\n * Effect of Convention on Representation::\n@@ -15092,6 +15093,83 @@ For non-primitive types, including packed arrays with a size greater than\n type, in particular, always starting on a byte boundary, and the length\n must be a multiple of the storage unit.\n \n+@node Handling of Records with Holes\n+@section Handling of Records with Holes\n+@cindex Handling of Records with Holes\n+\n+As a result of alignment considerations, records may contain \"holes\"\n+or gaps\n+which do not correspond to the data bits of any of the components.\n+Record representation clauses can also result in holes in records.\n+\n+GNAT does not attempt to clear these holes, so in record objects,\n+they should be considered to hold undefined rubbish. The generated\n+equality routine just tests components so does not access these\n+undefined bits, and assignment and copy operations may or may not\n+preserve the contents of these holes (for assignments, the holes\n+in the target will in practice contain either the bits that are\n+present in the holes in the source, or the bits that were present\n+in the target before the assignment).\n+\n+If it is necessary to ensure that holes in records have all zero\n+bits, then record objects for which this initialization is desired\n+should be explicitly set to all zero values using Unchecked_Conversion\n+or address overlays. For example\n+\n+@smallexample @c ada\n+type HRec is record\n+   C : Character;\n+   I : Integer;\n+end record;\n+@end smallexample\n+\n+@noindent\n+On typical machines, integers need to be aligned on a four-byte\n+boundary, resulting in three bytes of undefined rubbish following\n+the 8-bit field for C. To ensure that the hole in a variable of\n+type HRec is set to all zero bits,\n+you could for example do:\n+\n+@smallexample @c ada\n+type Base is record\n+   Dummy1, Dummy2 : Integer := 0;\n+end record;\n+\n+BaseVar : Base;\n+RealVar : Hrec;\n+for RealVar'Address use BaseVar'Address;\n+@end smallexample\n+\n+@noindent\n+Now the 8-bytes of the value of RealVar start out containing all zero\n+bits. A safer approach is to just define dummy fields, avoiding the\n+holes, as in:\n+\n+@smallexample @c ada\n+type HRec is record\n+   C      : Character;\n+   Dummy1 : Short_Short_Integer := 0;\n+   Dummy2 : Short_Short_Integer := 0;\n+   Dummy3 : Short_Short_Integer := 0;\n+   I      : Integer;\n+end record;\n+@end smallexample\n+\n+@noindent\n+And to make absolutely sure that the intent of this is followed, you\n+can use representation clauses:\n+\n+@smallexample @c ada\n+for Hrec use record\n+   C      at 0 range 0 .. 7;\n+   Dummy1 at 1 range 0 .. 7;\n+   Dummy2 at 2 range 0 .. 7;\n+   Dummy3 at 3 range 0 .. 7;\n+   I      at 4 range 0 .. 31;\n+end record;\n+for Hrec'Size use 64;\n+@end smallexample\n+\n @node Enumeration Clauses\n @section Enumeration Clauses\n \n@@ -15619,21 +15697,47 @@ together with a brief description of the functionality that is provided.\n \n For completeness, references are included to other predefined library\n routines defined in other sections of the Ada Reference Manual (these are\n-cross-indexed from Annex A).\n+cross-indexed from Annex A). For further details see the relevant\n+package declarations in the run-time library. In particular, a few units\n+are not implemented, as marked by the presence of pragma Unimplemented_Unit,\n+and in this case the package declaration contains comments explaining why\n+the unit is not implemented.\n \n @table @code\n @item Ada (A.2)\n This is a parent package for all the standard library packages.  It is\n usually included implicitly in your program, and itself contains no\n useful data or routines.\n \n+@item Ada.Assertions (11.4.2)\n+@code{Assertions} provides the @code{Assert} subprograms, and also\n+the declaration of the @code{Assertion_Error} exception.\n+\n+@item Ada.Asynchronous_Task_Control (D.11)\n+@code{Asynchronous_Task_Control} provides low level facilities for task\n+synchronization. It is typically not implemented. See package spec for details.\n+\n @item Ada.Calendar (9.6)\n @code{Calendar} provides time of day access, and routines for\n manipulating times and durations.\n \n+@item Ada.Calendar.Arithmetic (9.6.1)\n+This package provides additional arithmetic\n+operations for @code{Calendar}.\n+\n+@item Ada.Calendar.Formatting (9.6.1)\n+This package provides formatting operations for @code{Calendar}.\n+\n+@item Ada.Calendar.Time_Zones (9.6.1)\n+This package provides additional @code{Calendar} facilities\n+for handling time zones.\n+\n @item Ada.Characters (A.3.1)\n This is a dummy parent package that contains no useful entities\n \n+@item Ada.Characters.Conversions (A.3.2)\n+This package provides character conversion functions.\n+\n @item Ada.Characters.Handling (A.3.2)\n This package provides some basic character handling capabilities,\n including classification functions for classes of characters (e.g.@: test\n@@ -15654,6 +15758,71 @@ of the current program (analogous to the use of @code{argc} and @code{argv}\n in C), and also allows the exit status for the program to be set in a\n system-independent manner.\n \n+@item Ada.Complex_Text_IO (G.1.3)\n+This package provides text input and output of complex numbers.\n+\n+@item Ada.Containers (A.18.1)\n+A top level package providing a few basic definitions used by all the\n+following specific child packages that provide specific kinds of\n+containers.\n+\n+@item Ada.Containers.Bounded_Priority_Queues (A.18.31)\n+\n+@item Ada.Containers.Bounded_Synchronized_Queues (A.18.29)\n+\n+@item Ada.Containers.Doubly_Linked_Lists (A.18.3)\n+\n+@item Ada.Containers.Generic_Array_Sort (A.18.26)\n+\n+@item Ada.Containers.Generic_Constrained_Array_Sort (A.18.26)\n+\n+@item Ada.Containers.Generic_Sort (A.18.26)\n+\n+@item Ada.Containers.Hashed_Maps (A.18.5)\n+\n+@item Ada.Containers.Hashed_Sets (A.18.8)\n+\n+@item Ada.Containers.Indefinite_Doubly_Linked_Lists (A.18.12)\n+\n+@item Ada.Containers.Indefinite_Hashed_Maps (A.18.13)\n+\n+@item Ada.Containers.Indefinite_Hashed_Sets (A.18.15)\n+\n+@item Ada.Containers.Indefinite_Holders (A.18.18)\n+\n+@item Ada.Containers.Indefinite_Multiway_Trees (A.18.17)\n+\n+@item Ada.Containers.Indefinite_Ordered_Maps (A.18.14)\n+\n+@item Ada.Containers.Indefinite_Ordered_Sets (A.18.16)\n+\n+@item Ada.Containers.Indefinite_Vectors (A.18.11)\n+\n+@item Ada.Containers.Multiway_Trees (A.18.10)\n+\n+@item Ada.Containers.Ordered_Maps (A.18.6)\n+\n+@item Ada.Containers.Ordered_Sets (A.18.9)\n+\n+@item Ada.Containers.Synchronized_Queue_Interfaces (A.18.27)\n+\n+@item Ada.Containers.Unbounded_Priority_Queues (A.18.30)\n+\n+@item Ada.Containers.Unbounded_Synchronized_Queues (A.18.28)\n+\n+@item Ada.Containers.Vectors (A.18.2)\n+\n+@item Ada.Directories (A.16)\n+This package provides operations on directories.\n+\n+@item Ada.Directories.Hierarchical_File_Names (A.16.1)\n+This package provides additional directory operations handling\n+hiearchical file names.\n+\n+@item Ada.Directories.Information (A.16)\n+This is an implementation defined package for additional directory\n+operations, which is not implemented in GNAT.\n+\n @item Ada.Decimal (F.2)\n This package provides constants describing the range of decimal numbers\n implemented, and also a decimal divide routine (analogous to the COBOL\n@@ -15664,19 +15833,61 @@ This package provides input-output using a model of a set of records of\n fixed-length, containing an arbitrary definite Ada type, indexed by an\n integer record number.\n \n+@item Ada.Dispatching (D.2.1)\n+A parent package containing definitions for task dispatching operations.\n+\n+@item Ada.Dispatching.EDF (D.2.6)\n+Not implemented in GNAT.\n+\n+@item Ada.Dispatching.Non_Preemptive (D.2.4)\n+Not implemented in GNAT.\n+\n+@item Ada.Dispatching.Round_Robin (D.2.5)\n+Not implemented in GNAT.\n+\n @item Ada.Dynamic_Priorities (D.5)\n This package allows the priorities of a task to be adjusted dynamically\n as the task is running.\n \n+@item Ada.Environment_Variables (A.17)\n+This package provides facilities for accessing environment variables.\n+\n @item Ada.Exceptions (11.4.1)\n This package provides additional information on exceptions, and also\n contains facilities for treating exceptions as data objects, and raising\n exceptions with associated messages.\n \n+@item Ada.Execution_Time (D.14)\n+Not implemented in GNAT.\n+\n+@item Ada.Execution_Time.Group_Budgets (D.14.2)\n+Not implemented in GNAT.\n+\n+@item Ada.Execution_Time.Timers (D.14.1)'\n+Not implemented in GNAT.\n+\n @item Ada.Finalization (7.6)\n This package contains the declarations and subprograms to support the\n use of controlled types, providing for automatic initialization and\n-finalization (analogous to the constructors and destructors of C++)\n+finalization (analogous to the constructors and destructors of C++).\n+\n+@item Ada.Float_Text_IO (A.10.9)\n+A library level instantiation of Text_IO.Float_IO for type Float.\n+\n+@item Ada.Float_Wide_Text_IO (A.10.9)\n+A library level instantiation of Wide_Text_IO.Float_IO for type Float.\n+\n+@item Ada.Float_Wide_Wide_Text_IO (A.10.9)\n+A library level instantiation of Wide_Wide_Text_IO.Float_IO for type Float.\n+\n+@item Ada.Integer_Text_IO (A.10.9)\n+A library level instantiation of Text_IO.Integer_IO for type Integer.\n+\n+@item Ada.Integer_Wide_Text_IO (A.10.9)\n+A library level instantiation of Wide_Text_IO.Integer_IO for type Integer.\n+\n+@item Ada.Integer_Wide_Wide_Text_IO (A.10.9)\n+A library level instantiation of Wide_Wide_Text_IO.Integer_IO for type Integer.\n \n @item Ada.Interrupts (C.3.2)\n This package provides facilities for interfacing to interrupts, which\n@@ -15691,12 +15902,22 @@ or condition names) that can be handled by GNAT@.\n This package defines the set of exceptions that can be raised by use of\n the standard IO packages.\n \n+@item Ada.Iterator_Interfaces (5.5.1)\n+This package provides a generic interface to generalized iterators.\n+\n+@item Ada.Locales (A.19)\n+This package provides declarations providing information (Language\n+and Country) about the current locale.\n+\n @item Ada.Numerics\n This package contains some standard constants and exceptions used\n throughout the numerics packages.  Note that the constants pi and e are\n defined here, and it is better to use these definitions than rolling\n your own.\n \n+@item Ada.Numerics.Complex_Arrays (G.3.2)\n+Provides operations on arrays of complex numbers.\n+\n @item Ada.Numerics.Complex_Elementary_Functions\n Provides the implementation of standard elementary functions (such as\n log and trigonometric functions) operating on complex numbers using the\n@@ -15762,6 +15983,12 @@ The following predefined instantiations of this package exist\n @code{Ada.Numerics.Long_Elementary_Functions}\n @end table\n \n+@item Ada.Numerics.Generic_Real_Arrays (G.3.1)\n+Generic operations on arrays of reals\n+\n+@item Ada.Numerics.Real_Arrays (G.3.1)\n+Preinstantiation of Ada.Numerics.Generic_Real_Arrays (Float).\n+\n @item Ada.Real_Time (D.8)\n This package provides facilities similar to those of @code{Calendar}, but\n operating with a finer clock suitable for real time control. Note that\n@@ -15770,6 +15997,9 @@ guarantees this behavior, but of course if the external clock on which\n the GNAT runtime depends is deliberately reset by some external event,\n then such a backward jump may occur.\n \n+@item Ada.Real_Time.Timing_Events (D.15)\n+Not implemented in GNAT.\n+\n @item Ada.Sequential_IO (A.8.1)\n This package provides input-output facilities for sequential files,\n which can contain a sequence of values of a single type, which can be\n@@ -15802,6 +16032,9 @@ strings.  The bounded model requires a maximum length.  It is thus\n somewhat more limited than the unbounded model, but avoids the use of\n dynamic allocation or finalization.\n \n+@item Ada.Strings.Bounded.Equal_Case_Insensitive (A.4.10)\n+Provides case-insensitive comparisons of bounded strings\n+\n @item Ada.Strings.Fixed (A.4.3)\n This package provides facilities for handling fixed length strings.\n "}, {"sha": "8b8c58a66cd5bf95b914f6f840ef376f31245a51", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9972d439b8dd8d37284fc1bcd41f32ec43c1e2c4/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9972d439b8dd8d37284fc1bcd41f32ec43c1e2c4/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=9972d439b8dd8d37284fc1bcd41f32ec43c1e2c4", "patch": "@@ -2557,7 +2557,7 @@ package body Sem_Elab is\n                Error_Msg_Node_2 := Task_Scope;\n                Error_Msg_NE\n                  (\"info: activation of an instance of task type&\" &\n-                  \" requires pragma Elaborate_All on &?l?\", N, Ent);\n+                  \" requires pragma Elaborate_All on &?\", N, Ent);\n             end if;\n \n             Activate_Elaborate_All_Desirable (N, Task_Scope);"}, {"sha": "ad42534217a52467b6af7857310550a2e10546bc", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9972d439b8dd8d37284fc1bcd41f32ec43c1e2c4/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9972d439b8dd8d37284fc1bcd41f32ec43c1e2c4/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=9972d439b8dd8d37284fc1bcd41f32ec43c1e2c4", "patch": "@@ -11989,8 +11989,6 @@ package body Sem_Util is\n       Last_Assignment_Only : Boolean := False)\n    is\n    begin\n-      --  ??? do we have to worry about clearing cached checks?\n-\n       if Is_Assignable (Ent) then\n          Set_Last_Assignment (Ent, Empty);\n       end if;"}]}