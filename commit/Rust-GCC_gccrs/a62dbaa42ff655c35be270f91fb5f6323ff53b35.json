{"sha": "a62dbaa42ff655c35be270f91fb5f6323ff53b35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTYyZGJhYTQyZmY2NTVjMzViZTI3MGY5MWZiNWY2MzIzZmY1M2IzNQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-08-14T17:00:45Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-08-14T17:00:45Z"}, "message": "re PR c++/54377 (Consider default arguments in \"wrong number of template arguments\" diagnostic)\n\n/cp\n2014-08-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/54377\n\t* pt.c (coerce_template_parms): Improve error message vs default\n\targuments.\n\n/testsuite\n2014-08-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/54377\n\t* g++.dg/template/pr54377.C: New.\n\t* g++.dg/cpp0x/pr54377.C: Likewise.\n\t* g++.dg/cpp0x/alias-decl-2.C: Adjust.\n\t* g++.dg/cpp0x/pr51226.C: Likewise.\n\t* g++.dg/cpp0x/variadic2.C: Likewise.\n\t* g++.dg/parse/too-many-tmpl-args1.C: Likewise.\n\t* g++.dg/template/dtor3.C: Likewise.\n\t* g++.dg/template/qualttp4.C: Likewise.\n\t* g++.dg/template/spec28.C: Likewise.\n\t* g++.old-deja/g++.brendan/crash8.C: Likewise.\n\t* g++.old-deja/g++.pt/ttp7.C: Likewise.\n\nFrom-SVN: r213973", "tree": {"sha": "b38005767061ab9c8f7e9396cc851672bf018a4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b38005767061ab9c8f7e9396cc851672bf018a4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a62dbaa42ff655c35be270f91fb5f6323ff53b35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a62dbaa42ff655c35be270f91fb5f6323ff53b35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a62dbaa42ff655c35be270f91fb5f6323ff53b35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a62dbaa42ff655c35be270f91fb5f6323ff53b35/comments", "author": null, "committer": null, "parents": [{"sha": "4875c29c86812d73c88b9bb16d5c2d5bc7259d4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4875c29c86812d73c88b9bb16d5c2d5bc7259d4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4875c29c86812d73c88b9bb16d5c2d5bc7259d4d"}], "stats": {"total": 73, "additions": 56, "deletions": 17}, "files": [{"sha": "06b004bae35d3e74fb46b652599c28505fb4b540", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a62dbaa42ff655c35be270f91fb5f6323ff53b35", "patch": "@@ -1,3 +1,9 @@\n+2014-08-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/54377\n+\t* pt.c (coerce_template_parms): Improve error message vs default\n+\targuments.\n+\n 2014-08-14  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* parser.c (cp_parser_init_declarator): Remove redundant check of"}, {"sha": "0f391c251f1ee95f9c71f351e5211eaaf51ada68", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=a62dbaa42ff655c35be270f91fb5f6323ff53b35", "patch": "@@ -6861,19 +6861,24 @@ coerce_template_parms (tree parms,\n   int variadic_args_p = 0;\n   int post_variadic_parms = 0;\n \n+  /* Likewise for parameters with default arguments.  */\n+  int default_p = 0;\n+\n   if (args == error_mark_node)\n     return error_mark_node;\n \n   nparms = TREE_VEC_LENGTH (parms);\n \n-  /* Determine if there are any parameter packs.  */\n+  /* Determine if there are any parameter packs or default arguments.  */\n   for (parm_idx = 0; parm_idx < nparms; ++parm_idx)\n     {\n-      tree tparm = TREE_VALUE (TREE_VEC_ELT (parms, parm_idx));\n+      tree parm = TREE_VEC_ELT (parms, parm_idx);\n       if (variadic_p)\n \t++post_variadic_parms;\n-      if (template_parameter_pack_p (tparm))\n+      if (template_parameter_pack_p (TREE_VALUE (parm)))\n \t++variadic_p;\n+      if (TREE_PURPOSE (parm))\n+\t++default_p;\n     }\n \n   inner_args = orig_inner_args = INNERMOST_TEMPLATE_ARGS (args);\n@@ -6902,18 +6907,18 @@ coerce_template_parms (tree parms,\n     {\n       if (complain & tf_error)\n \t{\n-          if (variadic_p)\n+          if (variadic_p || default_p)\n             {\n-              nparms -= variadic_p;\n+              nparms -= variadic_p + default_p;\n \t      error (\"wrong number of template arguments \"\n-\t\t     \"(%d, should be %d or more)\", nargs, nparms);\n+\t\t     \"(%d, should be at least %d)\", nargs, nparms);\n             }\n \t  else\n \t     error (\"wrong number of template arguments \"\n \t\t    \"(%d, should be %d)\", nargs, nparms);\n \n \t  if (in_decl)\n-\t    error (\"provided for %q+D\", in_decl);\n+\t    inform (input_location, \"provided for %q+D\", in_decl);\n \t}\n \n       return error_mark_node;"}, {"sha": "d56f36a869418ffcc7bf35bef89014bf14c8a466", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a62dbaa42ff655c35be270f91fb5f6323ff53b35", "patch": "@@ -1,3 +1,18 @@\n+2014-08-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/54377\n+\t* g++.dg/template/pr54377.C: New.\n+\t* g++.dg/cpp0x/pr54377.C: Likewise.\n+\t* g++.dg/cpp0x/alias-decl-2.C: Adjust.\n+\t* g++.dg/cpp0x/pr51226.C: Likewise.\n+\t* g++.dg/cpp0x/variadic2.C: Likewise.\n+\t* g++.dg/parse/too-many-tmpl-args1.C: Likewise.\n+\t* g++.dg/template/dtor3.C: Likewise.\n+\t* g++.dg/template/qualttp4.C: Likewise.\n+\t* g++.dg/template/spec28.C: Likewise.\n+\t* g++.old-deja/g++.brendan/crash8.C: Likewise.\n+\t* g++.old-deja/g++.pt/ttp7.C: Likewise.\n+\n 2014-08-14  Tom de Vries  <tom@codesourcery.com>\n \n \tPR rtl-optimization/62004"}, {"sha": "cf59a55eea160ca05fd3111fa7389a1af45535d0", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-2.C?ref=a62dbaa42ff655c35be270f91fb5f6323ff53b35", "patch": "@@ -22,7 +22,7 @@ template<class T> using Vec = Vector<T, Alloc<T> >;\n \n template<class T> void g(Vector<T, Alloc<T> >);\n \n-template<template<class T> class TT> void h(TT<int>); // { dg-error \"provided for\" }\n+template<template<class T> class TT> void h(TT<int>); // { dg-message \"provided for\" }\n \n void\n bar()"}, {"sha": "7e52e93e219a799da4d192826e9ae63a61a60bdf", "filename": "gcc/testsuite/g++.dg/cpp0x/pr51226.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr51226.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr51226.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr51226.C?ref=a62dbaa42ff655c35be270f91fb5f6323ff53b35", "patch": "@@ -1,7 +1,7 @@\n // PR c++/51226\n // { dg-do compile { target c++11 } }\n \n-template<int> struct A           // { dg-error \"provided\" }\n+template<int> struct A           // { dg-message \"provided\" }\n {\n   enum E : int;\n };"}, {"sha": "07ebd092a084eff42405c4320845319a032f38b7", "filename": "gcc/testsuite/g++.dg/cpp0x/pr54377.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr54377.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr54377.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr54377.C?ref=a62dbaa42ff655c35be270f91fb5f6323ff53b35", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/54377\n+// { dg-do compile { target c++11 } }\n+\n+template <typename, typename, typename = void, typename...>\n+struct foo {};  // { dg-message \"provided for\" }\n+\n+foo<int> f;     // { dg-error \"at least 2\" }"}, {"sha": "65c79bda78d23e55810b7e2d93eecae2ceaaede4", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic2.C?ref=a62dbaa42ff655c35be270f91fb5f6323ff53b35", "patch": "@@ -6,9 +6,9 @@ template<typename... = int> // { dg-error \"default argument\" }\n class tuple3;\n \n template<typename T1, typename T2, typename... Rest>\n-struct two_or_more {}; // { dg-error \"provided for\" }\n+struct two_or_more {}; // { dg-message \"provided for\" }\n \n-typedef two_or_more<int> bad; // { dg-error \"2 or more\" \"2 or more\" }\n+typedef two_or_more<int> bad; // { dg-error \"at least 2\" \"at least 2\" }\n \n void f()\n {"}, {"sha": "121bea234683d7bb2756f86ce6ddadb0de07222c", "filename": "gcc/testsuite/g++.dg/parse/too-many-tmpl-args1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftoo-many-tmpl-args1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftoo-many-tmpl-args1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftoo-many-tmpl-args1.C?ref=a62dbaa42ff655c35be270f91fb5f6323ff53b35", "patch": "@@ -2,7 +2,7 @@\n // Origin: Wolfgang Bangerth <bangerth@ticam.utexas.edu>\n // { dg-do compile }\n \n-template <typename T> class A                                 // { dg-error \"\" }\n+template <typename T> class A                               // { dg-message \"\" }\n {\n     struct B;\n     template <typename U> friend typename A<U,void>::B foo(); // { dg-error \"\" }"}, {"sha": "38ddaf6d4ee3ea9c97c51647cd46c95c973806b5", "filename": "gcc/testsuite/g++.dg/template/dtor3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdtor3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdtor3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdtor3.C?ref=a62dbaa42ff655c35be270f91fb5f6323ff53b35", "patch": "@@ -1,4 +1,4 @@\n // PR c++/19762\n \n-template<int> struct A { ~A(){} }; // { dg-error \"\" }\n+template<int> struct A { ~A(){} }; // { dg-message \"provided for\" }\n template A<>::~A(); // { dg-error \"template|declaration\" }"}, {"sha": "b85181749c1255982399ced2a317351ab8fd2419", "filename": "gcc/testsuite/g++.dg/template/pr54377.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr54377.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr54377.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr54377.C?ref=a62dbaa42ff655c35be270f91fb5f6323ff53b35", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/54377\n+\n+template <typename, typename, typename = void, typename = void>\n+struct foo {};  // { dg-message \"provided for\" }\n+\n+foo<int> f;     // { dg-error \"at least 2\" }"}, {"sha": "102fc357549de07a4b282819afe37f6d27e14ad8", "filename": "gcc/testsuite/g++.dg/template/qualttp4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp4.C?ref=a62dbaa42ff655c35be270f91fb5f6323ff53b35", "patch": "@@ -7,7 +7,7 @@ struct A\n \ttemplate <class T> struct B {};\n };\n \n-template <template <class, class> class TT> // { dg-error \"provided\" }\n+template <template <class, class> class TT> // { dg-message \"provided for\" }\n struct X\n {\n \tTT<int> y; // { dg-error \"number\" }"}, {"sha": "ef4b883bcbfeda1aa5e65a488a08c337fdfc3669", "filename": "gcc/testsuite/g++.dg/template/spec28.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec28.C?ref=a62dbaa42ff655c35be270f91fb5f6323ff53b35", "patch": "@@ -2,5 +2,5 @@\n // Bad diagnostic\n // { dg-do compile }\n \n-template<typename> struct A {};  // { dg-error \"provided\" }\n+template<typename> struct A {};  // { dg-message \"provided for\" }\n template<> struct A<> {};        // { dg-error \"wrong number\" }"}, {"sha": "14f11f6cd74e09a99cc5ec732125a7a7abf125fb", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash8.C?ref=a62dbaa42ff655c35be270f91fb5f6323ff53b35", "patch": "@@ -1,7 +1,7 @@\n // { dg-do compile }\n // GROUPS passed old-abort\n template<int a, int b>\n-class Elvis // { dg-error \"class Elvis\" }\n+class Elvis // { dg-message \"class Elvis\" }\n {\n } ;\n "}, {"sha": "0a115c2f26c51c9364df65330614262bac3e00a9", "filename": "gcc/testsuite/g++.old-deja/g++.pt/ttp7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fttp7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a62dbaa42ff655c35be270f91fb5f6323ff53b35/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fttp7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fttp7.C?ref=a62dbaa42ff655c35be270f91fb5f6323ff53b35", "patch": "@@ -4,7 +4,7 @@ template<class E> class D\n {\n };\n \n-template<template<class> class D,class E> class C\t// { dg-error \"\" } ref below\n+template<template<class> class D,class E> class C\t// { dg-message \"\" } ref below\n {\n \tD<int,int> d;\t\t\t\t// { dg-error \"\" } arg not match\n };"}]}