{"sha": "20496fa2c8810a2da8d3667e35616999ab6fd8d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA0OTZmYTJjODgxMGEyZGE4ZDM2NjdlMzU2MTY5OTlhYjZmZDhkOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1999-02-15T23:45:02Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-02-15T23:45:02Z"}, "message": "decl.c (grokfndecl): Return NULL_TREE instead of error_mark_node.\n\n\t* decl.c (grokfndecl): Return NULL_TREE instead of error_mark_node.\n\t(grokdeclarator): Don't expect error_mark_node from grokfndecl.\n\t* pt.c (maybe_process_partial_specialization): Complain about\n\t'template <>' on non-specialization.\n\nFrom-SVN: r25225", "tree": {"sha": "23ec512cf391be32febb9e770eaf9081e12d8415", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23ec512cf391be32febb9e770eaf9081e12d8415"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20496fa2c8810a2da8d3667e35616999ab6fd8d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20496fa2c8810a2da8d3667e35616999ab6fd8d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20496fa2c8810a2da8d3667e35616999ab6fd8d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20496fa2c8810a2da8d3667e35616999ab6fd8d9/comments", "author": null, "committer": null, "parents": [{"sha": "0c63f729edf63919459d05a4bdf65b6b30cf0b0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c63f729edf63919459d05a4bdf65b6b30cf0b0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c63f729edf63919459d05a4bdf65b6b30cf0b0f"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "8fb2e889d0eef41d11c21e5f42afa9acd8d3f559", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20496fa2c8810a2da8d3667e35616999ab6fd8d9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20496fa2c8810a2da8d3667e35616999ab6fd8d9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=20496fa2c8810a2da8d3667e35616999ab6fd8d9", "patch": "@@ -1,3 +1,11 @@\n+1999-02-13  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* decl.c (grokfndecl): Return NULL_TREE instead of error_mark_node.\n+\t(grokdeclarator): Don't expect error_mark_node from grokfndecl.\n+\n+\t* pt.c (maybe_process_partial_specialization): Complain about\n+\t'template <>' on non-specialization.\n+\n 1999-02-10  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* decl.c (grokdeclarator): Catch wierd declarators."}, {"sha": "24dbfd108ebdb4dcc327aacec7baefcd4c91e449", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20496fa2c8810a2da8d3667e35616999ab6fd8d9/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20496fa2c8810a2da8d3667e35616999ab6fd8d9/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=20496fa2c8810a2da8d3667e35616999ab6fd8d9", "patch": "@@ -8344,7 +8344,7 @@ bad_specifiers (object, type, virtualp, quals, inlinep, friendp, raises)\n    CHECK is 1 if we must find this method in CTYPE, 0 if we should\n    not look, and -1 if we should not call `grokclassfn' at all.  \n \n-   Returns `error_mark_node' if something goes wrong, after issuing\n+   Returns `NULL_TREE' if something goes wrong, after issuing\n    applicable error messages.  */\n \n static tree\n@@ -8496,7 +8496,7 @@ grokfndecl (ctype, type, declarator, orig_declarator, virtualp, flags, quals,\n \t      /* Something like `template <class T> friend void f<T>()'.  */\n \t      cp_error (\"template-id `%D' in declaration of primary template\", \n \t\t\torig_declarator);\n-\t      return error_mark_node;\n+\t      return NULL_TREE;\n \t    }\n \n \t  /* A friend declaration of the form friend void f<>().  Record\n@@ -8544,7 +8544,7 @@ grokfndecl (ctype, type, declarator, orig_declarator, virtualp, flags, quals,\n \t\t\t\t\t    2 * (funcdef_flag != 0) + \n \t\t\t\t\t    4 * (friendp != 0));\n       if (decl == error_mark_node)\n-\treturn error_mark_node;\n+\treturn NULL_TREE;\n \n       if ((! TYPE_FOR_JAVA (ctype) || check_java_method (decl))\n \t  && check)\n@@ -8560,7 +8560,7 @@ grokfndecl (ctype, type, declarator, orig_declarator, virtualp, flags, quals,\n \t    return tmp;\n \t}\n       if (! grok_ctor_properties (ctype, decl))\n-\treturn error_mark_node;\n+\treturn NULL_TREE;\n     }\n   else\n     {\n@@ -8577,7 +8577,7 @@ grokfndecl (ctype, type, declarator, orig_declarator, virtualp, flags, quals,\n \t\t\t\t\t    2 * (funcdef_flag != 0) + \n \t\t\t\t\t    4 * (friendp != 0));\n       if (decl == error_mark_node)\n-\treturn error_mark_node;\n+\treturn NULL_TREE;\n \n       if (ctype != NULL_TREE\n \t  && (! TYPE_FOR_JAVA (ctype) || check_java_method (decl))\n@@ -10931,7 +10931,7 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n \t\t\t       virtualp, flags, quals, raises, attrlist,\n \t\t\t       friendp ? -1 : 0, friendp, publicp, inlinep,\n \t\t\t       funcdef_flag, template_count, in_namespace);\n-\t    if (decl == NULL_TREE || decl == error_mark_node)\n+\t    if (decl == NULL_TREE)\n \t      return decl;\n #if 0\n \t    /* This clobbers the attrs stored in `decl' from `attrlist'.  */\n@@ -11178,11 +11178,6 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n \tif (decl == NULL_TREE)\n \t  return NULL_TREE;\n \n-\t/* Among other times, could occur from check_explicit_specialization\n-\t   returning an error_mark_node.  */\n-\tif (decl == error_mark_node)\n-\t  return error_mark_node;\n-\n \tif (staticp == 1)\n \t  {\n \t    int illegal_static = 0;"}, {"sha": "184832ccbca66a01883c8bd04f295a3f0c1a815e", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20496fa2c8810a2da8d3667e35616999ab6fd8d9/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20496fa2c8810a2da8d3667e35616999ab6fd8d9/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=20496fa2c8810a2da8d3667e35616999ab6fd8d9", "patch": "@@ -688,6 +688,8 @@ maybe_process_partial_specialization (type)\n       else if (CLASSTYPE_TEMPLATE_INSTANTIATION (type))\n \tcp_error (\"specialization of `%T' after instantiation\", type);\n     }\n+  else if (processing_specialization)\n+    cp_error (\"explicit specialization of non-template `%T'\", type);\n }\n \n /* Retrieve the specialization (in the sense of [temp.spec] - a"}]}