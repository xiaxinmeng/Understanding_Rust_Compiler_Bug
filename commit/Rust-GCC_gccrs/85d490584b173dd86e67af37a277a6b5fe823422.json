{"sha": "85d490584b173dd86e67af37a277a6b5fe823422", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVkNDkwNTg0YjE3M2RkODZlNjdhZjM3YTI3N2E2YjVmZTgyMzQyMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-06-10T21:52:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-06-10T21:52:43Z"}, "message": "re PR c/6660 (Typedeffed unnamed structs/unions do not compile with gcc-3.1)\n\n\tPR c/6660\n\t* c-decl.c (grokfield): Allow user defined types if they declare\n\tstructs or unions for unnamed fields.\n\n\t* gcc.dg/20020527-1.c: New test.\n\nFrom-SVN: r54466", "tree": {"sha": "e96c6ba2da0a81abca5e5d61581b7a0628b3c73a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e96c6ba2da0a81abca5e5d61581b7a0628b3c73a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85d490584b173dd86e67af37a277a6b5fe823422", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85d490584b173dd86e67af37a277a6b5fe823422", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85d490584b173dd86e67af37a277a6b5fe823422", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85d490584b173dd86e67af37a277a6b5fe823422/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "50f30e6b07fbc68fefb6ecf1e585f8087c21715d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50f30e6b07fbc68fefb6ecf1e585f8087c21715d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50f30e6b07fbc68fefb6ecf1e585f8087c21715d"}], "stats": {"total": 69, "additions": 67, "deletions": 2}, "files": [{"sha": "f92ef9b762c598c328c22475fcc2d344671b1479", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d490584b173dd86e67af37a277a6b5fe823422/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d490584b173dd86e67af37a277a6b5fe823422/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=85d490584b173dd86e67af37a277a6b5fe823422", "patch": "@@ -1,3 +1,9 @@\n+2002-06-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/6660\n+\t* c-decl.c (grokfield): Allow user defined types if they declare\n+\tstructs or unions for unnamed fields.\n+\n 2002-06-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/6809"}, {"sha": "075ac6d0bb0a33042e3f487d0c0f53a6d49fc734", "filename": "gcc/c-decl.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d490584b173dd86e67af37a277a6b5fe823422/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d490584b173dd86e67af37a277a6b5fe823422/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=85d490584b173dd86e67af37a277a6b5fe823422", "patch": "@@ -5361,8 +5361,11 @@ grokfield (filename, line, declarator, declspecs, width)\n     {\n       /* This is an unnamed decl.  We only support unnamed\n \t structs/unions, so check for other things and refuse them.  */\n-      if (TREE_CODE (TREE_VALUE (declspecs)) != RECORD_TYPE\n-\t  && TREE_CODE (TREE_VALUE (declspecs)) != UNION_TYPE)\n+      tree type = TREE_VALUE (declspecs);\n+\n+      if (TREE_CODE (type) == TYPE_DECL)\n+\ttype = TREE_TYPE (type);\n+      if (TREE_CODE (type) != RECORD_TYPE && TREE_CODE (type) != UNION_TYPE)\n \t{\n \t  error (\"unnamed fields of type other than struct or union are not allowed\");\n \t  return NULL_TREE;"}, {"sha": "1d8229c615e178e5a9a31913c09b405f3e7a8ec1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d490584b173dd86e67af37a277a6b5fe823422/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d490584b173dd86e67af37a277a6b5fe823422/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=85d490584b173dd86e67af37a277a6b5fe823422", "patch": "@@ -8,6 +8,8 @@\n \n \t* gcc.dg/20020530-1.c: New test.\n \n+\t* gcc.dg/20020527-1.c: New test.\n+\n 2002-06-07  Roger Sayle  <roger@eyesopen.com>\n \n \t* gcc.dg/20020607-2.c: New test case."}, {"sha": "f480d7b7bb8bf9c5a4ac5c9e4a315b6a50aa49e4", "filename": "gcc/testsuite/gcc.dg/20020527-1.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d490584b173dd86e67af37a277a6b5fe823422/gcc%2Ftestsuite%2Fgcc.dg%2F20020527-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d490584b173dd86e67af37a277a6b5fe823422/gcc%2Ftestsuite%2Fgcc.dg%2F20020527-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020527-1.c?ref=85d490584b173dd86e67af37a277a6b5fe823422", "patch": "@@ -0,0 +1,54 @@\n+/* PR c/6660\n+   Test whether an unnamed field with user defined type - struct or union is\n+   accepted.  */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+typedef struct {\n+  unsigned short a;\n+  unsigned short b;\n+} __attribute__ ((__packed__)) A;\n+\n+typedef struct B_ {\n+  unsigned int c;\n+  unsigned int d;\n+} B;\n+\n+typedef struct C_ {\n+  B;\n+  unsigned int e;\n+  unsigned int f;\n+} C;\n+\n+typedef C D;\n+\n+typedef struct {\n+  A;\n+  D;\n+  struct {\n+    unsigned short g;\n+    unsigned short h;\n+  } __attribute__ ((__packed__));\n+  union {\n+    int i;\n+    long j;\n+  };\n+  int k;\n+} __attribute__ ((__packed__)) E;\n+\n+E x;\n+\n+void foo (void)\n+{\n+  x.a = 1;\n+  x.b = 2;\n+  x.c = 3;\n+  x.d = 4;\n+  x.e = 5;\n+  x.f = 6;\n+  x.g = 7;\n+  x.h = 8;\n+  x.i = 9;\n+  x.j = 10;\n+  x.k = 11;\n+}"}]}