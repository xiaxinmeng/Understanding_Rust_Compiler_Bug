{"sha": "265149a6ae5ca6548da1a6b0c9cc90a2174d36f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY1MTQ5YTZhZTVjYTY1NDhkYTFhNmIwYzljYzkwYTIxNzRkMzZmMw==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2016-05-30T22:56:43Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2016-05-30T22:56:43Z"}, "message": "PR c++/71306 - bogus -Wplacement-new with an array element\n\ngcc/cp/ChangeLog:\n2016-05-27  Martin Sebor  <msebor@redhat.com>\n\n\tPR c++/71306\n\t* init.c (warn_placement_new_too_small): Handle placement new arguments\n\tthat are elements of arrays more carefully.  Remove a pointless loop.\n\ngcc/testsuite/ChangeLog:\n2016-05-27  Martin Sebor  <msebor@redhat.com>\n\n\tPR c++/71306\n\t* g++.dg/warn/Wplacement-new-size-3.C: New test.\n\nFrom-SVN: r236902", "tree": {"sha": "11899376f198d04d5907a2b09279954417a5e1f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11899376f198d04d5907a2b09279954417a5e1f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/265149a6ae5ca6548da1a6b0c9cc90a2174d36f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/265149a6ae5ca6548da1a6b0c9cc90a2174d36f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/265149a6ae5ca6548da1a6b0c9cc90a2174d36f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/265149a6ae5ca6548da1a6b0c9cc90a2174d36f3/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "00631022d83c44777b37f168831eb64142737cbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00631022d83c44777b37f168831eb64142737cbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00631022d83c44777b37f168831eb64142737cbe"}], "stats": {"total": 58, "additions": 55, "deletions": 3}, "files": [{"sha": "266ca0adcbe6097577f434d5a08d3c98045a2b92", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265149a6ae5ca6548da1a6b0c9cc90a2174d36f3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265149a6ae5ca6548da1a6b0c9cc90a2174d36f3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=265149a6ae5ca6548da1a6b0c9cc90a2174d36f3", "patch": "@@ -1,3 +1,9 @@\n+2016-05-27  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/71306\n+\t* init.c (warn_placement_new_too_small): Handle placement new arguments\n+\tthat are elements of arrays more carefully.  Remove a pointless loop.\n+\n 2016-05-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/71349"}, {"sha": "a71c21aed908bb6f936f6fff3d0ea801aa40ce6c", "filename": "gcc/cp/init.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265149a6ae5ca6548da1a6b0c9cc90a2174d36f3/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265149a6ae5ca6548da1a6b0c9cc90a2174d36f3/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=265149a6ae5ca6548da1a6b0c9cc90a2174d36f3", "patch": "@@ -2376,7 +2376,8 @@ warn_placement_new_too_small (tree type, tree nelts, tree size, tree oper)\n \n   STRIP_NOPS (oper);\n \n-  if (TREE_CODE (oper) == ARRAY_REF)\n+  if (TREE_CODE (oper) == ARRAY_REF\n+      && (addr_expr || TREE_CODE (TREE_TYPE (oper)) == ARRAY_TYPE))\n     {\n       /* Similar to the offset computed above, see if the array index\n \t is a compile-time constant.  If so, and unless the offset was\n@@ -2405,8 +2406,8 @@ warn_placement_new_too_small (tree type, tree nelts, tree size, tree oper)\n   bool compref = TREE_CODE (oper) == COMPONENT_REF;\n \n   /* Descend into a struct or union to find the member whose address\n-     is being used as the agument.  */\n-  while (TREE_CODE (oper) == COMPONENT_REF)\n+     is being used as the argument.  */\n+  if (TREE_CODE (oper) == COMPONENT_REF)\n     {\n       tree op0 = oper;\n       while (TREE_CODE (op0 = TREE_OPERAND (op0, 0)) == COMPONENT_REF);"}, {"sha": "dfcd4464b9a5e3539dae225c36046dc7f75aa8f0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265149a6ae5ca6548da1a6b0c9cc90a2174d36f3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265149a6ae5ca6548da1a6b0c9cc90a2174d36f3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=265149a6ae5ca6548da1a6b0c9cc90a2174d36f3", "patch": "@@ -1,3 +1,8 @@\n+2016-05-27  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/71306\n+\t* g++.dg/warn/Wplacement-new-size-3.C: New test.\n+\n 2016-05-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/71349"}, {"sha": "c93e4e698a77e7ffcffdaf26f1e4c8c60229e9a9", "filename": "gcc/testsuite/g++.dg/warn/Wplacement-new-size-3.C", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265149a6ae5ca6548da1a6b0c9cc90a2174d36f3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWplacement-new-size-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265149a6ae5ca6548da1a6b0c9cc90a2174d36f3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWplacement-new-size-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWplacement-new-size-3.C?ref=265149a6ae5ca6548da1a6b0c9cc90a2174d36f3", "patch": "@@ -0,0 +1,40 @@\n+// PR c++/71306 - bogus -Wplacement-new with an array element\n+// { dg-do compile }\n+// { dg-options \"-Wplacement-new\" }\n+\n+void* operator new (__SIZE_TYPE__, void *p) { return p; }\n+\n+struct S64 { char c [64]; };\n+\n+S64 s2 [2];\n+S64* ps2 [2];\n+S64* ps2_2 [2][2];\n+\n+void* pv2 [2];\n+\n+void f ()\n+{\n+  char a [2][sizeof (S64)];\n+\n+  new (a) S64;\n+  new (a [0]) S64;\n+  new (a [1]) S64;\n+\n+  // Verify there is no warning with buffers of sufficient size.\n+  new (&s2 [0]) S64;\n+  new (&s2 [1]) S64;\n+\n+  // ..and no warning with pointers to buffers of unknown size.\n+  new (ps2 [0]) S64;\n+  new (ps2 [1]) S64;\n+\n+  // But a warning when using the ps2_2 array itself as opposed\n+  // to the pointers it's elements might point to.\n+  new (ps2_2 [0]) S64;\t// { dg-warning \"placement new\" }\n+  new (ps2_2 [1]) S64;\t// { dg-warning \"placement new\" }\n+\n+  // ..and no warning again with pointers to buffers of unknown\n+  // size.\n+  new (pv2 [0]) S64;\n+  new (pv2 [1]) S64;\n+}"}]}