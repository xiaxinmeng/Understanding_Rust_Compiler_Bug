{"sha": "4f237f2ef0ef221a902b73a336b45154a5d8bc2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGYyMzdmMmVmMGVmMjIxYTkwMmI3M2EzMzZiNDUxNTRhNWQ4YmMyZg==", "commit": {"author": {"name": "David Wohlferd", "email": "dw@LimeGreenSocks.com", "date": "2015-11-16T21:57:12Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-11-16T21:57:12Z"}, "message": "inline asm and multi-alternative constraints\n\n\t* doc/md.texi ('#' and '*' constraint modifiers): Do not include these\n\tin the user documentation.\n\t(define_peephole2, define_split): Similarly.\n\nFrom-SVN: r230439", "tree": {"sha": "8779caa2eb26b786c8d42c9c63bb139dfc5a8c2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8779caa2eb26b786c8d42c9c63bb139dfc5a8c2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f237f2ef0ef221a902b73a336b45154a5d8bc2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f237f2ef0ef221a902b73a336b45154a5d8bc2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f237f2ef0ef221a902b73a336b45154a5d8bc2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f237f2ef0ef221a902b73a336b45154a5d8bc2f/comments", "author": null, "committer": null, "parents": [{"sha": "46d825c59cd6d5df4784b99dc0fcb878c2b7c24f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46d825c59cd6d5df4784b99dc0fcb878c2b7c24f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46d825c59cd6d5df4784b99dc0fcb878c2b7c24f"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "b403718c8330ed65a003e3870039b6eeebc0a8a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f237f2ef0ef221a902b73a336b45154a5d8bc2f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f237f2ef0ef221a902b73a336b45154a5d8bc2f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f237f2ef0ef221a902b73a336b45154a5d8bc2f", "patch": "@@ -1,3 +1,9 @@\n+2015-11-16  David Wohlferd  <dw@LimeGreenSocks.com>\n+\n+\t* doc/md.texi ('#' and '*' constraint modifiers): Do not include these\n+\tin the user documentation. \n+\t(define_peephole2, define_split): Similarly.\n+\n 2015-11-16 Andris Pavenis <andris.pavenis@iki.fi>\n \n \t* lto-streamer-out.c (write_global_references): Adjust integer type."}, {"sha": "8b2deaa470ee2c10eeaf3ec7d1951542c17d4af1", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f237f2ef0ef221a902b73a336b45154a5d8bc2f/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f237f2ef0ef221a902b73a336b45154a5d8bc2f/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=4f237f2ef0ef221a902b73a336b45154a5d8bc2f", "patch": "@@ -1646,7 +1646,9 @@ instruction is defined:\n GCC can only handle one commutative pair in an asm; if you use more,\n the compiler may fail.  Note that you need not use the modifier if\n the two alternatives are strictly identical; this would only waste\n-time in the reload pass.  The modifier is not operational after\n+time in the reload pass.\n+@ifset INTERNALS\n+The modifier is not operational after\n register allocation, so the result of @code{define_peephole2}\n and @code{define_split}s performed after reload cannot rely on\n @samp{%} to make the intended insn match.\n@@ -1665,7 +1667,6 @@ constraint as a constraint, and no effect on reloading.  For LRA\n @samp{*} additionally disparages slightly the alternative if the\n following character matches the operand.\n \n-@ifset INTERNALS\n Here is an example: the 68000 has an instruction to sign-extend a\n halfword in a data register, and can also sign-extend a value by\n copying it into an address register.  While either kind of register is"}]}