{"sha": "8e6ecdc0ad4533626d35206318b254b76748e370", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU2ZWNkYzBhZDQ1MzM2MjZkMzUyMDYzMThiMjU0Yjc2NzQ4ZTM3MA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2012-08-02T20:40:10Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2012-08-02T20:40:10Z"}, "message": "reorg.c (dbr_schedule): Delete REG_BR_PRED loop.\n\ngcc/\n\t* reorg.c (dbr_schedule): Delete REG_BR_PRED loop.\n\nFrom-SVN: r190101", "tree": {"sha": "26ce6be95c6aa534a40bca0c36af79350a8e824b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26ce6be95c6aa534a40bca0c36af79350a8e824b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e6ecdc0ad4533626d35206318b254b76748e370", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e6ecdc0ad4533626d35206318b254b76748e370", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e6ecdc0ad4533626d35206318b254b76748e370", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e6ecdc0ad4533626d35206318b254b76748e370/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "77b5132f66c51aa41245f9b9f110141bd1629df5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77b5132f66c51aa41245f9b9f110141bd1629df5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77b5132f66c51aa41245f9b9f110141bd1629df5"}], "stats": {"total": 26, "additions": 4, "deletions": 22}, "files": [{"sha": "edecc9728f521fdd5853465a3791b3e2e8b7326a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e6ecdc0ad4533626d35206318b254b76748e370/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e6ecdc0ad4533626d35206318b254b76748e370/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e6ecdc0ad4533626d35206318b254b76748e370", "patch": "@@ -1,3 +1,7 @@\n+2012-08-02  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* reorg.c (dbr_schedule): Delete REG_BR_PRED loop.\n+\n 2012-08-02  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR tree-optimization/53805"}, {"sha": "d71802676637904b019910933e74304dcde976d2", "filename": "gcc/reorg.c", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e6ecdc0ad4533626d35206318b254b76748e370/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e6ecdc0ad4533626d35206318b254b76748e370/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=8e6ecdc0ad4533626d35206318b254b76748e370", "patch": "@@ -4054,28 +4054,6 @@ dbr_schedule (rtx first)\n       fprintf (dump_file, \"\\n\");\n     }\n \n-  /* For all JUMP insns, fill in branch prediction notes, so that during\n-     assembler output a target can set branch prediction bits in the code.\n-     We have to do this now, as up until this point the destinations of\n-     JUMPS can be moved around and changed, but past right here that cannot\n-     happen.  */\n-  for (insn = first; insn; insn = NEXT_INSN (insn))\n-    {\n-      int pred_flags;\n-\n-      if (NONJUMP_INSN_P (insn))\n-\t{\n-\t  rtx pat = PATTERN (insn);\n-\n-\t  if (GET_CODE (pat) == SEQUENCE)\n-\t    insn = XVECEXP (pat, 0, 0);\n-\t}\n-      if (!JUMP_P (insn))\n-\tcontinue;\n-\n-      pred_flags = get_jump_flags (insn, JUMP_LABEL (insn));\n-      add_reg_note (insn, REG_BR_PRED, GEN_INT (pred_flags));\n-    }\n   free_resource_info ();\n   free (uid_to_ruid);\n #ifdef DELAY_SLOTS_FOR_EPILOGUE"}]}