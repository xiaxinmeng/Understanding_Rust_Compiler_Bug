{"sha": "e81b330a2d0278a03132221ae1d90f7ccd2bb758", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTgxYjMzMGEyZDAyNzhhMDMxMzIyMjFhZTFkOTBmN2NjZDJiYjc1OA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2000-08-03T19:19:33Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2000-08-03T19:19:33Z"}, "message": "config-ml.in: Adjust multilib search paths to the appropriate multilib tree.\n\n* config-ml.in: Adjust multilib search paths to the\nappropriate multilib tree.\n\nFrom-SVN: r35459", "tree": {"sha": "d2680cea399af81bbcce7a2cda27bfa15afbe468", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2680cea399af81bbcce7a2cda27bfa15afbe468"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e81b330a2d0278a03132221ae1d90f7ccd2bb758", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e81b330a2d0278a03132221ae1d90f7ccd2bb758", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e81b330a2d0278a03132221ae1d90f7ccd2bb758", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e81b330a2d0278a03132221ae1d90f7ccd2bb758/comments", "author": null, "committer": null, "parents": [{"sha": "0b9aaeee6ffc45a00c689837f8828e0a72a06f1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b9aaeee6ffc45a00c689837f8828e0a72a06f1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b9aaeee6ffc45a00c689837f8828e0a72a06f1c"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "3e2de5550e82448f1c8510fa3e00b94ac4d7513d", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e81b330a2d0278a03132221ae1d90f7ccd2bb758/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e81b330a2d0278a03132221ae1d90f7ccd2bb758/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=e81b330a2d0278a03132221ae1d90f7ccd2bb758", "patch": "@@ -1,3 +1,8 @@\n+2000-08-03  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* config-ml.in: Adjust multilib search paths to the\n+\tappropriate multilib tree.\n+\n 2000-08-02  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* configure.in (CHILL_FOR_TARGET, CXX_FOR_TARGET): Convert blanks to"}, {"sha": "090cc2bb48223e5cc3ebbf45cc6df2864d3d1484", "filename": "config-ml.in", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e81b330a2d0278a03132221ae1d90f7ccd2bb758/config-ml.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e81b330a2d0278a03132221ae1d90f7ccd2bb758/config-ml.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config-ml.in?ref=e81b330a2d0278a03132221ae1d90f7ccd2bb758", "patch": "@@ -753,7 +753,40 @@ if [ -n \"${multidirs}\" ] && [ -z \"${ml_norecursion}\" ]; then\n         break\n       fi\n     done\n-    ml_config_env='CC=\"${CC} $flags\"'\n+    ml_config_env='CC=\"${CC_} $flags\" CXX=\"${CXX_} $flags\"'\n+\n+    if [ \"${with_target_subdir}\" = \".\" ]; then\n+\tCC_=$CC\n+\tCXX_=$CXX\n+    else\n+\t# Create a regular expression that matches any string as long\n+\t# as ML_POPDIR.\n+\tpopdir_rx=`echo ${ML_POPDIR} | sed 's,.,.,g'`\n+\tCC_=\n+\tfor arg in ${CC}; do\n+\t  case $arg in\n+\t  -[BIL]\"${ML_POPDIR}\"/*)\n+\t    CC_=\"${CC_} \"`echo \"X${arg}\" | sed -n \"s/X\\\\(-[BIL]${popdir_rx}\\\\).*/\\\\1/p\"`/${ml_dir}`echo \"X${arg}\" | sed -n \"s/X-[BIL]${popdir_rx}\\\\(.*\\\\)/\\1/p\"` ;;\n+\t  \"${ML_POPDIR}\"/*)\n+\t    CC_=\"${CC_} \"`echo \"X${arg}\" | sed -n \"s/X\\\\(${popdir_rx}\\\\).*/\\\\1/p\"\"`/${ml_dir}`echo \"X${arg}\" | sed -n \"s/X${popdir_rx}\\\\(.*\\\\)/\\\\1/p\"` ;;\n+\t  *)\n+\t    CC_=\"${CC_} ${arg}\" ;;\n+\t  esac\n+\tdone\n+\n+\tCXX_=\n+\tfor arg in ${CXX}; do\n+\t  case $arg in\n+\t  -[BIL]\"${ML_POPDIR}\"/*)\n+\t    CXX_=\"${CXX_} \"`echo \"X${arg}\" | sed -n \"s/X\\\\(-[BIL]${popdir_rx}\\\\).*/\\\\1/p\"`/${ml_dir}`echo \"X${arg}\" | sed -n \"s/X-[BIL]${popdir_rx}\\\\(.*\\\\)/\\\\1/p\"` ;;\n+\t  \"${ML_POPDIR}\"/*)\n+\t    CXX_=\"${CXX_} \"`echo \"X${arg}\" | sed -n \"s/X\\\\(${popdir_rx}\\\\).*/\\\\1/p\"`/${ml_dir}`echo \"X${arg}\" | sed -n \"s/X${popdir_rx}\\\\(.*\\\\)/\\\\1/p\"` ;;\n+\t  *)\n+\t    CXX_=\"${CXX_} ${arg}\" ;;\n+\t  esac\n+\tdone\n+\n+    fi\n \n     if eval ${ml_config_env} ${ml_config_shell} ${ml_recprog} \\\n \t--with-multisubdir=${ml_dir} --with-multisrctop=${multisrctop} \\"}]}