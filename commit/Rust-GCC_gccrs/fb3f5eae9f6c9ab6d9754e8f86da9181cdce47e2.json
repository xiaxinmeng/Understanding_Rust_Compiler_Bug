{"sha": "fb3f5eae9f6c9ab6d9754e8f86da9181cdce47e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIzZjVlYWU5ZjZjOWFiNmQ5NzU0ZThmODZkYTkxODFjZGNlNDdlMg==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-08-13T15:08:10Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-08-13T15:08:10Z"}, "message": "re PR fortran/90561 (ICE in gimplify_var_or_parm_decl, at gimplify.c:2747)\n\n2019-08-13  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/90561\n\t* trans.h (gfc_evaluate_now_function_scope): New function.\n\t* trans.c (gfc_evaluate_now_function_scope): New function.\n\t* trans-expr.c (gfc_trans_assignment): Use it.\n\n2019-08-13  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/90561\n\t* gfortran.dg/deferred_character_34.f90: New test.\n\nFrom-SVN: r274383", "tree": {"sha": "ff4f7246043db7208ff16c538b53adc1123f3ef2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff4f7246043db7208ff16c538b53adc1123f3ef2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb3f5eae9f6c9ab6d9754e8f86da9181cdce47e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb3f5eae9f6c9ab6d9754e8f86da9181cdce47e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb3f5eae9f6c9ab6d9754e8f86da9181cdce47e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb3f5eae9f6c9ab6d9754e8f86da9181cdce47e2/comments", "author": null, "committer": null, "parents": [{"sha": "cb0a83f3437be73075fba17db68abbf240d17a36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb0a83f3437be73075fba17db68abbf240d17a36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb0a83f3437be73075fba17db68abbf240d17a36"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "2adc112bcecda6f46079c0912f11264216c3f415", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb3f5eae9f6c9ab6d9754e8f86da9181cdce47e2/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb3f5eae9f6c9ab6d9754e8f86da9181cdce47e2/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=fb3f5eae9f6c9ab6d9754e8f86da9181cdce47e2", "patch": "@@ -10796,7 +10796,8 @@ gfc_trans_assignment_1 (gfc_expr * expr1, gfc_expr * expr2, bool init_flag,\n       if (expr1->ts.deferred\n \t  && gfc_expr_attr (expr1).allocatable\n \t  && gfc_check_dependency (expr1, expr2, true))\n-\trse.string_length = gfc_evaluate_now (rse.string_length, &rse.pre);\n+\trse.string_length =\n+\t  gfc_evaluate_now_function_scope (rse.string_length, &rse.pre);\n       string_length = rse.string_length;\n     }\n   else"}, {"sha": "84511477b393f52309d9a3c78f31a8b7c891b5be", "filename": "gcc/fortran/trans.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb3f5eae9f6c9ab6d9754e8f86da9181cdce47e2/gcc%2Ffortran%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb3f5eae9f6c9ab6d9754e8f86da9181cdce47e2/gcc%2Ffortran%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.c?ref=fb3f5eae9f6c9ab6d9754e8f86da9181cdce47e2", "patch": "@@ -118,6 +118,19 @@ gfc_evaluate_now (tree expr, stmtblock_t * pblock)\n   return gfc_evaluate_now_loc (input_location, expr, pblock);\n }\n \n+/* Like gfc_evaluate_now, but add the created variable to the\n+   function scope.  */\n+\n+tree\n+gfc_evaluate_now_function_scope (tree expr, stmtblock_t * pblock)\n+{\n+  tree var;\n+  var = gfc_create_var_np (TREE_TYPE (expr), NULL);\n+  gfc_add_decl_to_function (var);\n+  gfc_add_modify (pblock, var, expr);\n+\n+  return var;\n+}\n \n /* Build a MODIFY_EXPR node and add it to a given statement block PBLOCK.\n    A MODIFY_EXPR is an assignment:"}, {"sha": "a3726e8414036babf6729a956537922bf8d9266c", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb3f5eae9f6c9ab6d9754e8f86da9181cdce47e2/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb3f5eae9f6c9ab6d9754e8f86da9181cdce47e2/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=fb3f5eae9f6c9ab6d9754e8f86da9181cdce47e2", "patch": "@@ -507,6 +507,7 @@ void gfc_conv_label_variable (gfc_se * se, gfc_expr * expr);\n /* If the value is not constant, Create a temporary and copy the value.  */\n tree gfc_evaluate_now_loc (location_t, tree, stmtblock_t *);\n tree gfc_evaluate_now (tree, stmtblock_t *);\n+tree gfc_evaluate_now_function_scope (tree, stmtblock_t *);\n \n /* Find the appropriate variant of a math intrinsic.  */\n tree gfc_builtin_decl_for_float_kind (enum built_in_function, int);"}, {"sha": "204084128790b0be184ef668036e1fdfff8cf9ea", "filename": "gcc/testsuite/gfortran.dg/deferred_character_34.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb3f5eae9f6c9ab6d9754e8f86da9181cdce47e2/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeferred_character_34.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb3f5eae9f6c9ab6d9754e8f86da9181cdce47e2/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeferred_character_34.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeferred_character_34.f90?ref=fb3f5eae9f6c9ab6d9754e8f86da9181cdce47e2", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do run }\n+! PR fortran/90561\n+! This used to ICE.\n+! Original test case by Gerhard Steinmetz.\n+program p\n+   character(:), allocatable :: z(:)\n+   z = [character(2):: 'ab', 'xy']\n+   z = z(2)\n+   if (any(z /= 'xy')) stop 1\n+end"}]}