{"sha": "d78a1c01dbb859cb406ffdea3bc2ced2963cae9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc4YTFjMDFkYmI4NTljYjQwNmZmZGVhM2JjMmNlZDI5NjNjYWU5YQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-03-03T11:53:56Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-03-03T11:53:56Z"}, "message": "Add -Wdisabled-optimization to loop prefetching pass (PR tree-optimization/79803).\n\n2017-03-03  Martin Liska  <mliska@suse.cz>\n\n\tPR tree-optimization/79803\n\t* tree-ssa-loop-prefetch.c (tree_ssa_prefetch_arrays): Remove\n\tassert.\n\t(pass_loop_prefetch::execute): Disabled optimization if an\n\tassumption about L1 cache size is not met.\n2017-03-03  Martin Liska  <mliska@suse.cz>\n\n\tPR tree-optimization/79803\n\t* gcc.dg/tree-ssa/pr79803.c: New test.\n\nFrom-SVN: r245869", "tree": {"sha": "819e4d40f5b3dd8e071eb7d0b6bab9fc6953394a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/819e4d40f5b3dd8e071eb7d0b6bab9fc6953394a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d78a1c01dbb859cb406ffdea3bc2ced2963cae9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d78a1c01dbb859cb406ffdea3bc2ced2963cae9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d78a1c01dbb859cb406ffdea3bc2ced2963cae9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d78a1c01dbb859cb406ffdea3bc2ced2963cae9a/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ec7f796e87db1b01ce4fbaabc6f0d73000ad4001", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec7f796e87db1b01ce4fbaabc6f0d73000ad4001", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec7f796e87db1b01ce4fbaabc6f0d73000ad4001"}], "stats": {"total": 93, "additions": 89, "deletions": 4}, "files": [{"sha": "68a03df81c9d8be3482cdb9262f7e506af172e11", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78a1c01dbb859cb406ffdea3bc2ced2963cae9a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78a1c01dbb859cb406ffdea3bc2ced2963cae9a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d78a1c01dbb859cb406ffdea3bc2ced2963cae9a", "patch": "@@ -1,3 +1,11 @@\n+2017-03-03  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/79803\n+\t* tree-ssa-loop-prefetch.c (tree_ssa_prefetch_arrays): Remove\n+\tassert.\n+\t(pass_loop_prefetch::execute): Disabled optimization if an\n+\tassumption about L1 cache size is not met.\n+\n 2017-03-03  Martin Liska  <mliska@suse.cz>\n \n \tPR rtl-optimization/79574"}, {"sha": "a1586282379f2db8aa3a41871c022a7b59ce0272", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78a1c01dbb859cb406ffdea3bc2ced2963cae9a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78a1c01dbb859cb406ffdea3bc2ced2963cae9a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d78a1c01dbb859cb406ffdea3bc2ced2963cae9a", "patch": "@@ -1,3 +1,8 @@\n+2017-03-03  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/79803\n+\t* gcc.dg/tree-ssa/pr79803.c: New test.\n+\n 2017-03-03  Martin Liska  <mliska@suse.cz>\n \n \tPR rtl-optimization/79574"}, {"sha": "51b245d4d5b0aeafb2308aa3b2f732d1a0c793ff", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr79803.c", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78a1c01dbb859cb406ffdea3bc2ced2963cae9a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79803.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78a1c01dbb859cb406ffdea3bc2ced2963cae9a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79803.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79803.c?ref=d78a1c01dbb859cb406ffdea3bc2ced2963cae9a", "patch": "@@ -0,0 +1,60 @@\n+/* { dg-do compile { target { x86_64-*-* } } } */\n+/* { dg-options \"-march=opteron-sse3 -Ofast --param l1-cache-line-size=3 -Wdisabled-optimization\" } */\n+/* { dg-require-effective-target indirect_jumps } */\n+\n+#include <setjmp.h>\n+\n+extern void abort (void);\n+\n+jmp_buf buf;\n+\n+void raise0(void)\n+{\n+  __builtin_longjmp (buf, 1);\n+}\n+\n+int execute(int cmd) /* { dg-warning \"'l1-cache-size' parameter is not a power of two 3\" } */\n+{\n+  int last = 0;\n+\n+  if (__builtin_setjmp (buf) == 0)\n+    while (1)\n+      {\n+\tlast = 1;\n+\traise0 ();\n+      }\n+\n+  if (last == 0)\n+    return 0;\n+  else\n+    return cmd;\n+}\n+\n+int execute2(int cmd, int cmd2)\n+{\n+  int last = 0;\n+\n+  if (__builtin_setjmp (buf) == 0)\n+    while (1)\n+      {\n+\tlast = 1;\n+\traise0 ();\n+      }\n+\n+  if (last == 0)\n+    return 0;\n+  else\n+    return cmd;\n+}\n+\n+\n+int main(void)\n+{\n+  if (execute (1) == 0)\n+    abort ();\n+\n+  if (execute2 (1, 2) == 0)\n+    abort ();\n+\n+  return 0;\n+}"}, {"sha": "a1372074e9f3562270fe260463b30545604e4f8d", "filename": "gcc/tree-ssa-loop-prefetch.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78a1c01dbb859cb406ffdea3bc2ced2963cae9a/gcc%2Ftree-ssa-loop-prefetch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78a1c01dbb859cb406ffdea3bc2ced2963cae9a/gcc%2Ftree-ssa-loop-prefetch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-prefetch.c?ref=d78a1c01dbb859cb406ffdea3bc2ced2963cae9a", "patch": "@@ -47,6 +47,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"tree-inline.h\"\n #include \"tree-data-ref.h\"\n+#include \"diagnostic-core.h\"\n \n /* This pass inserts prefetch instructions to optimize cache usage during\n    accesses to arrays in loops.  It processes loops sequentially and:\n@@ -1977,10 +1978,6 @@ tree_ssa_prefetch_arrays (void)\n       set_builtin_decl (BUILT_IN_PREFETCH, decl, false);\n     }\n \n-  /* We assume that size of cache line is a power of two, so verify this\n-     here.  */\n-  gcc_assert ((PREFETCH_BLOCK & (PREFETCH_BLOCK - 1)) == 0);\n-\n   FOR_EACH_LOOP (loop, LI_FROM_INNERMOST)\n     {\n       if (dump_file && (dump_flags & TDF_DETAILS))\n@@ -2038,6 +2035,21 @@ pass_loop_prefetch::execute (function *fun)\n   if (number_of_loops (fun) <= 1)\n     return 0;\n \n+  bool warned_p = false;\n+  if ((PREFETCH_BLOCK & (PREFETCH_BLOCK - 1)) != 0)\n+    {\n+      static bool warned = false;\n+\n+      if (!warned)\n+\t{\n+\t  warning (OPT_Wdisabled_optimization,\n+\t\t   \"%<l1-cache-size%> parameter is not a power of two %d\",\n+\t\t   PREFETCH_BLOCK);\n+\t  warned = true;\n+\t}\n+      return 0;\n+    }\n+\n   return tree_ssa_prefetch_arrays ();\n }\n "}]}