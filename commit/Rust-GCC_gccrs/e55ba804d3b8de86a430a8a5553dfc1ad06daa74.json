{"sha": "e55ba804d3b8de86a430a8a5553dfc1ad06daa74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU1YmE4MDRkM2I4ZGU4NmE0MzBhOGE1NTUzZGZjMWFkMDZkYWE3NA==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-07-22T19:02:01Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-07-22T19:02:01Z"}, "message": "OpenMP: Support 'if (simd:/cancel:' in Fortran\n\ngcc/fortran/ChangeLog:\n\n\t* gfortran.h (enum gfc_omp_if_kind): Add OMP_IF_CANCEL and OMP_IF_SIMD.\n\t* openmp.c (OMP_SIMD_CLAUSES): Add OMP_CLAUSE_IF.\n\t(gfc_match_omp_clauses, resolve_omp_clauses): Handle 'if (simd/cancel:'.\n\t* dump-parse-tree.c (show_omp_clauses): Likewise.\n\t* trans-openmp.c (gfc_trans_omp_clauses, gfc_trans_omp_cancel,\n\t(gfc_split_omp_clauses): Likewise.\n\ngcc/testsuite/ChangeLog:\n\n\t* gfortran.dg/gomp/cancel-2.f90: New test.\n\t* gfortran.dg/gomp/cancel-3.f90: New test.\n\t* gfortran.dg/gomp/if-1.f90: New test.", "tree": {"sha": "02a4ad3afecb84dcddc114e1f2c91f8e03879d29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02a4ad3afecb84dcddc114e1f2c91f8e03879d29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e55ba804d3b8de86a430a8a5553dfc1ad06daa74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e55ba804d3b8de86a430a8a5553dfc1ad06daa74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e55ba804d3b8de86a430a8a5553dfc1ad06daa74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e55ba804d3b8de86a430a8a5553dfc1ad06daa74/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae575662833d70cb7d74b9538096c7becc79af14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae575662833d70cb7d74b9538096c7becc79af14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae575662833d70cb7d74b9538096c7becc79af14"}], "stats": {"total": 239, "additions": 229, "deletions": 10}, "files": [{"sha": "2a02bc871bc82af169448020f831ea84d05bffc6", "filename": "gcc/fortran/dump-parse-tree.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e55ba804d3b8de86a430a8a5553dfc1ad06daa74/gcc%2Ffortran%2Fdump-parse-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e55ba804d3b8de86a430a8a5553dfc1ad06daa74/gcc%2Ffortran%2Fdump-parse-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdump-parse-tree.c?ref=e55ba804d3b8de86a430a8a5553dfc1ad06daa74", "patch": "@@ -1693,7 +1693,9 @@ show_omp_clauses (gfc_omp_clauses *omp_clauses)\n     if (omp_clauses->if_exprs[i])\n       {\n \tstatic const char *ifs[] = {\n+\t  \"CANCEL\",\n \t  \"PARALLEL\",\n+\t  \"SIMD\",\n \t  \"TASK\",\n \t  \"TASKLOOP\",\n \t  \"TARGET\","}, {"sha": "1648831736c1e44a60db1369b8e479e2cdfb942a", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e55ba804d3b8de86a430a8a5553dfc1ad06daa74/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e55ba804d3b8de86a430a8a5553dfc1ad06daa74/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=e55ba804d3b8de86a430a8a5553dfc1ad06daa74", "patch": "@@ -1320,7 +1320,9 @@ enum gfc_omp_cancel_kind\n \n enum gfc_omp_if_kind\n {\n+  OMP_IF_CANCEL,\n   OMP_IF_PARALLEL,\n+  OMP_IF_SIMD,\n   OMP_IF_TASK,\n   OMP_IF_TASKLOOP,\n   OMP_IF_TARGET,"}, {"sha": "e89ae295a318db97f773cf638c1a0b6e570d6554", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 38, "deletions": 8, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e55ba804d3b8de86a430a8a5553dfc1ad06daa74/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e55ba804d3b8de86a430a8a5553dfc1ad06daa74/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=e55ba804d3b8de86a430a8a5553dfc1ad06daa74", "patch": "@@ -1303,7 +1303,9 @@ gfc_match_omp_clauses (gfc_omp_clauses **cp, const omp_mask mask,\n \t\t{\n \t\t  /* This should match the enum gfc_omp_if_kind order.  */\n \t\t  static const char *ifs[OMP_IF_LAST] = {\n+\t\t    \" cancel : %e )\",\n \t\t    \" parallel : %e )\",\n+\t\t    \" simd : %e )\",\n \t\t    \" task : %e )\",\n \t\t    \" taskloop : %e )\",\n \t\t    \" target : %e )\",\n@@ -2568,7 +2570,8 @@ gfc_match_oacc_routine (void)\n #define OMP_SIMD_CLAUSES \\\n   (omp_mask (OMP_CLAUSE_PRIVATE) | OMP_CLAUSE_LASTPRIVATE\t\t\\\n    | OMP_CLAUSE_REDUCTION | OMP_CLAUSE_COLLAPSE | OMP_CLAUSE_SAFELEN\t\\\n-   | OMP_CLAUSE_LINEAR | OMP_CLAUSE_ALIGNED | OMP_CLAUSE_SIMDLEN)\n+   | OMP_CLAUSE_LINEAR | OMP_CLAUSE_ALIGNED | OMP_CLAUSE_SIMDLEN\t\\\n+   | OMP_CLAUSE_IF)\n #define OMP_TASK_CLAUSES \\\n   (omp_mask (OMP_CLAUSE_PRIVATE) | OMP_CLAUSE_FIRSTPRIVATE\t\t\\\n    | OMP_CLAUSE_SHARED | OMP_CLAUSE_IF | OMP_CLAUSE_DEFAULT\t\t\\\n@@ -4133,33 +4136,53 @@ resolve_omp_clauses (gfc_code *code, gfc_omp_clauses *omp_clauses,\n \telse\n \t  switch (code->op)\n \t    {\n+\t    case EXEC_OMP_CANCEL:\n+\t      ok = ifc == OMP_IF_CANCEL;\n+\t      break;\n+\n \t    case EXEC_OMP_PARALLEL:\n \t    case EXEC_OMP_PARALLEL_DO:\n \t    case EXEC_OMP_PARALLEL_SECTIONS:\n \t    case EXEC_OMP_PARALLEL_WORKSHARE:\n-\t    case EXEC_OMP_PARALLEL_DO_SIMD:\n \t    case EXEC_OMP_DISTRIBUTE_PARALLEL_DO:\n-\t    case EXEC_OMP_DISTRIBUTE_PARALLEL_DO_SIMD:\n \t    case EXEC_OMP_TEAMS_DISTRIBUTE_PARALLEL_DO:\n-\t    case EXEC_OMP_TEAMS_DISTRIBUTE_PARALLEL_DO_SIMD:\n \t      ok = ifc == OMP_IF_PARALLEL;\n \t      break;\n \n+\t    case EXEC_OMP_PARALLEL_DO_SIMD:\n+\t    case EXEC_OMP_DISTRIBUTE_PARALLEL_DO_SIMD:\n+\t    case EXEC_OMP_TEAMS_DISTRIBUTE_PARALLEL_DO_SIMD:\n+\t      ok = ifc == OMP_IF_PARALLEL || ifc == OMP_IF_SIMD;\n+\t      break;\n+\n+\t    case EXEC_OMP_SIMD:\n+\t    case EXEC_OMP_DO_SIMD:\n+\t    case EXEC_OMP_DISTRIBUTE_SIMD:\n+\t    case EXEC_OMP_TEAMS_DISTRIBUTE_SIMD:\n+\t      ok = ifc == OMP_IF_SIMD;\n+\t      break;\n+\n \t    case EXEC_OMP_TASK:\n \t      ok = ifc == OMP_IF_TASK;\n \t      break;\n \n \t    case EXEC_OMP_TASKLOOP:\n-\t    case EXEC_OMP_TASKLOOP_SIMD:\n \t      ok = ifc == OMP_IF_TASKLOOP;\n \t      break;\n \n+\t    case EXEC_OMP_TASKLOOP_SIMD:\n+\t      ok = ifc == OMP_IF_TASKLOOP || ifc == OMP_IF_SIMD;\n+\t      break;\n+\n \t    case EXEC_OMP_TARGET:\n \t    case EXEC_OMP_TARGET_TEAMS:\n \t    case EXEC_OMP_TARGET_TEAMS_DISTRIBUTE:\n+\t      ok = ifc == OMP_IF_TARGET;\n+\t      break;\n+\n \t    case EXEC_OMP_TARGET_TEAMS_DISTRIBUTE_SIMD:\n \t    case EXEC_OMP_TARGET_SIMD:\n-\t      ok = ifc == OMP_IF_TARGET;\n+\t      ok = ifc == OMP_IF_TARGET || ifc == OMP_IF_SIMD;\n \t      break;\n \n \t    case EXEC_OMP_TARGET_DATA:\n@@ -4179,21 +4202,28 @@ resolve_omp_clauses (gfc_code *code, gfc_omp_clauses *omp_clauses,\n \t      break;\n \n \t    case EXEC_OMP_TARGET_TEAMS_DISTRIBUTE_PARALLEL_DO:\n-\t    case EXEC_OMP_TARGET_TEAMS_DISTRIBUTE_PARALLEL_DO_SIMD:\n \t    case EXEC_OMP_TARGET_PARALLEL:\n \t    case EXEC_OMP_TARGET_PARALLEL_DO:\n-\t    case EXEC_OMP_TARGET_PARALLEL_DO_SIMD:\n \t      ok = ifc == OMP_IF_TARGET || ifc == OMP_IF_PARALLEL;\n \t      break;\n \n+\t    case EXEC_OMP_TARGET_PARALLEL_DO_SIMD:\n+\t    case EXEC_OMP_TARGET_TEAMS_DISTRIBUTE_PARALLEL_DO_SIMD:\n+\t      ok = (ifc == OMP_IF_TARGET\n+\t\t    || ifc == OMP_IF_PARALLEL\n+\t\t    || ifc == OMP_IF_SIMD);\n+\t      break;\n+\n \t    default:\n \t      ok = false;\n \t      break;\n \t  }\n \tif (!ok)\n \t  {\n \t    static const char *ifs[] = {\n+\t      \"CANCEL\",\n \t      \"PARALLEL\",\n+\t      \"SIMD\",\n \t      \"TASK\",\n \t      \"TASKLOOP\",\n \t      \"TARGET\","}, {"sha": "56bc7cd10cc49b76f467ea2e782a8d38fa024744", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e55ba804d3b8de86a430a8a5553dfc1ad06daa74/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e55ba804d3b8de86a430a8a5553dfc1ad06daa74/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=e55ba804d3b8de86a430a8a5553dfc1ad06daa74", "patch": "@@ -3201,9 +3201,15 @@ gfc_trans_omp_clauses (stmtblock_t *block, gfc_omp_clauses *clauses,\n \tc = build_omp_clause (gfc_get_location (&where), OMP_CLAUSE_IF);\n \tswitch (ifc)\n \t  {\n+\t  case OMP_IF_CANCEL:\n+\t    OMP_CLAUSE_IF_MODIFIER (c) = VOID_CST;\n+\t    break;\n \t  case OMP_IF_PARALLEL:\n \t    OMP_CLAUSE_IF_MODIFIER (c) = OMP_PARALLEL;\n \t    break;\n+\t  case OMP_IF_SIMD:\n+\t    OMP_CLAUSE_IF_MODIFIER (c) = OMP_SIMD;\n+\t    break;\n \t  case OMP_IF_TASK:\n \t    OMP_CLAUSE_IF_MODIFIER (c) = OMP_TASK;\n \t    break;\n@@ -4197,13 +4203,18 @@ gfc_trans_omp_cancel (gfc_code *code)\n     default: gcc_unreachable ();\n     }\n   gfc_start_block (&block);\n-  if (code->ext.omp_clauses->if_expr)\n+  if (code->ext.omp_clauses->if_expr\n+      || code->ext.omp_clauses->if_exprs[OMP_IF_CANCEL])\n     {\n       gfc_se se;\n       tree if_var;\n \n+      gcc_assert ((code->ext.omp_clauses->if_expr == NULL)\n+\t\t  ^ (code->ext.omp_clauses->if_exprs[OMP_IF_CANCEL] == NULL));\n       gfc_init_se (&se, NULL);\n-      gfc_conv_expr (&se, code->ext.omp_clauses->if_expr);\n+      gfc_conv_expr (&se, code->ext.omp_clauses->if_expr != NULL\n+\t\t\t  ? code->ext.omp_clauses->if_expr\n+\t\t\t  : code->ext.omp_clauses->if_exprs[OMP_IF_CANCEL]);\n       gfc_add_block_to_block (&block, &se.pre);\n       if_var = gfc_evaluate_now (se.expr, &block);\n       gfc_add_block_to_block (&block, &se.post);\n@@ -4997,6 +5008,8 @@ gfc_split_omp_clauses (gfc_code *code,\n \t  /* Duplicate collapse.  */\n \t  clausesa[GFC_OMP_SPLIT_SIMD].collapse\n \t    = code->ext.omp_clauses->collapse;\n+\t  clausesa[GFC_OMP_SPLIT_SIMD].if_exprs[OMP_IF_SIMD]\n+\t    = code->ext.omp_clauses->if_exprs[OMP_IF_SIMD];\n \t  /* And this is copied to all.  */\n \t  clausesa[GFC_OMP_SPLIT_SIMD].if_expr\n \t    = code->ext.omp_clauses->if_expr;"}, {"sha": "481b1aa5d2f576aa0a89e32136cdb22037e899e4", "filename": "gcc/testsuite/gfortran.dg/gomp/cancel-2.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e55ba804d3b8de86a430a8a5553dfc1ad06daa74/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcancel-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e55ba804d3b8de86a430a8a5553dfc1ad06daa74/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcancel-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcancel-2.f90?ref=e55ba804d3b8de86a430a8a5553dfc1ad06daa74", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do compile }\n+\n+subroutine foo ()\n+  !$omp parallel\n+    !$omp cancel parallel if (.true.)\n+    !$omp cancel parallel if (cancel: .true.)\n+\n+    !$omp cancel parallel if (.true.) if (.true.)                   ! { dg-error \"Failed to match clause\" }\n+    !$omp cancel parallel if (cancel: .true.) if (cancel: .true.)   ! { dg-error \"Failed to match clause\" }\n+    !$omp cancel parallel if (cancel: .true.) if (.true.)           ! { dg-error \"IF clause without modifier at .1. used together with IF clauses with modifiers\" }\n+    !$omp cancel parallel if (cancel: .true.) if (parallel: .true.) ! { dg-error \"IF clause modifier PARALLEL at .1. not appropriate for the current OpenMP construct\" }\n+    !$omp cancel parallel if (.true.) if (cancel: .true.)           ! { dg-error \"Failed to match clause at\" }\n+    !$omp cancel parallel if (parallel: .true.) if (cancel: .true.) ! { dg-error \"IF clause modifier PARALLEL at .1. not appropriate for the current OpenMP construct\" }\n+  !$omp end parallel\n+end subroutine"}, {"sha": "78b54d88b1204445f6c5c48f6d3cddf3c1111144", "filename": "gcc/testsuite/gfortran.dg/gomp/cancel-3.f90", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e55ba804d3b8de86a430a8a5553dfc1ad06daa74/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcancel-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e55ba804d3b8de86a430a8a5553dfc1ad06daa74/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcancel-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcancel-3.f90?ref=e55ba804d3b8de86a430a8a5553dfc1ad06daa74", "patch": "@@ -0,0 +1,35 @@\n+! { dg-do compile }\n+! { dg-additional-options \"-fdump-tree-original\" }\n+\n+subroutine foo ()\n+  !$omp parallel\n+    !$omp cancel parallel if (.true.)\n+    !$omp cancel parallel if (cancel: .true.)\n+    !$omp cancel parallel if (.false.)\n+    !$omp cancel parallel if (cancel: .false.)\n+  !$omp end parallel\n+\n+  !$omp sections\n+    !$omp cancel sections if (cancel: .true.)\n+    stop\n+  !$omp end sections\n+\n+  !$omp do\n+  do i = 1, 10\n+    !$omp cancel do if (.false.)\n+  end do\n+\n+  !$omp task\n+    !$omp cancel taskgroup if (cancel: .false.)\n+  !$omp end task\n+  !$omp task\n+    !$omp cancel taskgroup\n+  !$omp end task\n+end subroutine\n+\n+! { dg-final { scan-tree-dump-times \"__builtin_GOMP_cancel \\\\(1, 1\\\\);\" 2 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"__builtin_GOMP_cancel \\\\(1, 0\\\\);\" 2 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"__builtin_GOMP_cancel \\\\(4, 1\\\\);\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"__builtin_GOMP_cancel \\\\(2, 0\\\\);\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"__builtin_GOMP_cancel \\\\(8, 0\\\\);\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"__builtin_GOMP_cancel \\\\(8, 1\\\\);\" 1 \"original\" } }"}, {"sha": "ddf903f616e47391fa684b178839a5c12bd1f950", "filename": "gcc/testsuite/gfortran.dg/gomp/if-1.f90", "status": "added", "additions": 122, "deletions": 0, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e55ba804d3b8de86a430a8a5553dfc1ad06daa74/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fif-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e55ba804d3b8de86a430a8a5553dfc1ad06daa74/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fif-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fif-1.f90?ref=e55ba804d3b8de86a430a8a5553dfc1ad06daa74", "patch": "@@ -0,0 +1,122 @@\n+! { dg-do compile }\n+\n+subroutine foo (a, b, p, q)\n+  logical, value :: a\n+  logical :: b\n+  integer :: p(:)\n+  integer, pointer :: q(:)\n+  integer :: i\n+  !$omp parallel if (a)\n+  !$omp end parallel\n+  !$omp parallel if (parallel:a)\n+  !$omp end parallel\n+  !$omp parallel do simd if (a)\n+  do i = 1, 16\n+  end do\n+  !$omp end parallel do simd\n+  !$omp parallel do simd if (parallel : a)\n+  do i = 1, 16\n+  end do\n+  !$omp end parallel do simd\n+  !$omp parallel do simd if (simd : a)\n+  do i = 1, 16\n+  end do\n+  !$omp end parallel do simd\n+  !$omp parallel do simd if (simd : a) if (parallel:b)\n+  do i = 1, 16\n+  end do\n+  !$omp end parallel do simd\n+  !$omp task if (a)\n+  !$omp end task\n+  !$omp task if (task: a)\n+  !$omp end task\n+  !$omp taskloop if (a)\n+  do i = 1, 16\n+  end do\n+  !$omp end taskloop\n+  !$omp taskloop if (taskloop : a)\n+  do i = 1, 16\n+  end do\n+  !$omp end taskloop\n+  !$omp taskloop simd if (a)\n+  do i = 1, 16\n+  end do\n+  !$omp end taskloop simd\n+  !$omp taskloop simd if (taskloop : a)\n+  do i = 1, 16\n+  end do\n+  !$omp end taskloop simd\n+  !$omp taskloop simd if (simd : a)\n+  do i = 1, 16\n+  end do\n+  !$omp end taskloop simd\n+  !$omp taskloop simd if (taskloop:b) if (simd : a)\n+  do i = 1, 16\n+  end do\n+  !$omp end taskloop simd\n+  !$omp target if (a)\n+  !$omp end target\n+  !$omp target if (target: a)\n+  !$omp end target\n+  !$omp target simd if (a)\n+  do i = 1, 16\n+  end do\n+  !$omp end target simd\n+  !$omp target simd if (simd : a) if (target: b)\n+  do i = 1, 16\n+  end do\n+  !$omp end target simd\n+  !$omp target teams distribute parallel do simd if (a)\n+  do i = 1, 16\n+  end do\n+  !$omp end target teams distribute parallel do simd\n+  !$omp target teams distribute parallel do simd if (parallel : a) if (target: b)\n+  do i = 1, 16\n+  end do\n+  !$omp end target teams distribute parallel do simd\n+  !$omp target teams distribute parallel do simd if (simd : a) if (target: b)\n+  do i = 1, 16\n+  end do\n+  !$omp end target teams distribute parallel do simd\n+\n+  !$omp target data if (a) map (p(1:2))\n+  !$omp end target data\n+  !$omp target data if (target data: a) map (p(1:2))\n+  !$omp end target data\n+  !$omp target enter data if (a) map (to: p(1:2))\n+  !$omp target enter data if (target enter data: a) map (to: p(1:2))\n+  !$omp target exit data if (a) map (from: p(1:2))\n+  !$omp target exit data if (target exit data: a) map (from: p(1:2))\n+  !$omp target update if (a) to (q(1:3))\n+  !$omp target update if (target update:a) to (q(1:3))\n+  !$omp parallel\n+    !$omp cancel parallel if (a)\n+  !$omp end parallel\n+  !$omp parallel\n+    !$omp cancel parallel if (cancel:a)\n+  !$omp end parallel\n+  !$omp do\n+  do i = 1, 16\n+      !$omp cancel do if (a)\n+  end do\n+  !$omp do\n+  do i = 1, 16\n+      !$omp cancel do if (cancel: a)\n+  end do\n+  !$omp sections\n+    !$omp section\n+\t!$omp cancel sections if (a)\n+  !$omp end sections\n+  !$omp sections\n+    !$omp section\n+\t!$omp cancel sections if (cancel: a)\n+  !$omp end sections\n+  !$omp taskgroup\n+    !$omp task\n+      !$omp cancel taskgroup if (a)\n+    !$omp end task\n+    !$omp task\n+      !$omp cancel taskgroup if (cancel: a)\n+    !$omp end task\n+  !$omp end taskgroup\n+end"}]}