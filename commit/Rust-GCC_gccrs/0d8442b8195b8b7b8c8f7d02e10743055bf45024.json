{"sha": "0d8442b8195b8b7b8c8f7d02e10743055bf45024", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ4NDQyYjgxOTViOGI3YjhjOGY3ZDAyZTEwNzQzMDU1YmY0NTAyNA==", "commit": {"author": {"name": "Bob Wilson", "email": "bob.wilson@acm.org", "date": "2007-09-12T16:57:25Z"}, "committer": {"name": "Bob Wilson", "email": "bwilson@gcc.gnu.org", "date": "2007-09-12T16:57:25Z"}, "message": "xtensa.c (machine_function): Add vararg_a7_copy.\n\n\t* config/xtensa/xtensa.c (machine_function): Add vararg_a7_copy.\n\t(xtensa_copy_incoming_a7): Use start_sequence instead of\n\tpush_to_sequence.  Stash insns in vararg_a7_copy for builtin_saveregs.\n\t(xtensa_builtin_saveregs): Place code from vararg_a7_copy at the start\n\tof the saveregs sequence.\n\nFrom-SVN: r128443", "tree": {"sha": "84631dcd5fa6bb8d02363dd9f3ca67e907f44834", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84631dcd5fa6bb8d02363dd9f3ca67e907f44834"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d8442b8195b8b7b8c8f7d02e10743055bf45024", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d8442b8195b8b7b8c8f7d02e10743055bf45024", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d8442b8195b8b7b8c8f7d02e10743055bf45024", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d8442b8195b8b7b8c8f7d02e10743055bf45024/comments", "author": null, "committer": null, "parents": [{"sha": "a01246247eebd298896fa7634bb91276827aa743", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a01246247eebd298896fa7634bb91276827aa743", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a01246247eebd298896fa7634bb91276827aa743"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "af05fca5d5ed41d5e609c08ab9c8ef5294a3b945", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d8442b8195b8b7b8c8f7d02e10743055bf45024/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d8442b8195b8b7b8c8f7d02e10743055bf45024/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d8442b8195b8b7b8c8f7d02e10743055bf45024", "patch": "@@ -1,3 +1,11 @@\n+2007-09-12  Bob Wilson  <bob.wilson@acm.org>\n+\n+\t* config/xtensa/xtensa.c (machine_function): Add vararg_a7_copy.\n+\t(xtensa_copy_incoming_a7): Use start_sequence instead of\n+\tpush_to_sequence.  Stash insns in vararg_a7_copy for builtin_saveregs.\n+\t(xtensa_builtin_saveregs): Place code from vararg_a7_copy at the start\n+\tof the saveregs sequence.\n+\n 2007-09-12  Richard Sandiford  <richard@codesourcery.com>\n \n \t* c-tree.h (grokfield): Add a \"tree *\" argument."}, {"sha": "79c4d895505392de1bf7145d0733ac72a7f2916f", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d8442b8195b8b7b8c8f7d02e10743055bf45024/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d8442b8195b8b7b8c8f7d02e10743055bf45024/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=0d8442b8195b8b7b8c8f7d02e10743055bf45024", "patch": "@@ -94,6 +94,7 @@ struct machine_function GTY(())\n   int accesses_prev_frame;\n   bool need_a7_copy;\n   bool vararg_a7;\n+  rtx vararg_a7_copy;\n   rtx set_frame_ptr_insn;\n };\n \n@@ -1004,7 +1005,7 @@ xtensa_copy_incoming_a7 (rtx opnd)\n   /* Copy a7 to a new pseudo at the function entry.  Use gen_raw_REG to\n      create the REG for a7 so that hard_frame_pointer_rtx is not used.  */\n \n-  push_to_sequence (entry_insns);\n+  start_sequence ();\n   tmp = gen_reg_rtx (mode);\n \n   switch (mode)\n@@ -1038,10 +1039,11 @@ xtensa_copy_incoming_a7 (rtx opnd)\n \n   if (cfun->machine->vararg_a7)\n     {\n-      /* This is called from within builtin_savereg, so we're already\n-\t inside a start_sequence that will be placed at the start of\n-\t the function.  */\n-      emit_insn (entry_insns);\n+      /* This is called from within builtin_saveregs, which will insert the\n+\t saveregs code at the function entry, ahead of anything placed at\n+\t the function entry now.  Instead, save the sequence to be inserted\n+\t at the beginning of the saveregs code.  */\n+      cfun->machine->vararg_a7_copy = entry_insns;\n     }\n   else\n     {\n@@ -1050,6 +1052,8 @@ xtensa_copy_incoming_a7 (rtx opnd)\n \t chain current, so the code is placed at the start of the\n \t function.  */\n       push_topmost_sequence ();\n+      /* Do not use entry_of_function() here.  This is called from within\n+\t expand_function_start, when the CFG still holds GIMPLE.  */\n       emit_insn_after (entry_insns, get_insns ());\n       pop_topmost_sequence ();\n     }\n@@ -2454,6 +2458,8 @@ xtensa_builtin_saveregs (void)\n \t\t       adjust_address (gp_regs, BLKmode,\n \t\t\t\t       arg_words * UNITS_PER_WORD),\n \t\t       gp_left);\n+  gcc_assert (cfun->machine->vararg_a7_copy != 0);\n+  emit_insn_before (cfun->machine->vararg_a7_copy, get_insns ());\n \n   return XEXP (gp_regs, 0);\n }"}]}