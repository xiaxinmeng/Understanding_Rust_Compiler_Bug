{"sha": "3af556f74d0d938e1ad240fe44bedf47e97ce4f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FmNTU2Zjc0ZDBkOTM4ZTFhZDI0MGZlNDRiZWRmNDdlOTdjZTRmNQ==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2000-09-12T14:28:55Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2000-09-12T14:28:55Z"}, "message": "code cleanups\n\nFrom-SVN: r36359", "tree": {"sha": "f13d965e3c5b9e45cd60009af6a3d7dd4b8c368f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f13d965e3c5b9e45cd60009af6a3d7dd4b8c368f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3af556f74d0d938e1ad240fe44bedf47e97ce4f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3af556f74d0d938e1ad240fe44bedf47e97ce4f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3af556f74d0d938e1ad240fe44bedf47e97ce4f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3af556f74d0d938e1ad240fe44bedf47e97ce4f5/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "32892c52e4674485c40311bd82d64f5adb025905", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32892c52e4674485c40311bd82d64f5adb025905", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32892c52e4674485c40311bd82d64f5adb025905"}], "stats": {"total": 601, "additions": 307, "deletions": 294}, "files": [{"sha": "bec3059efcd4de65e57d1bb07f33c9c68e922248", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3af556f74d0d938e1ad240fe44bedf47e97ce4f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3af556f74d0d938e1ad240fe44bedf47e97ce4f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3af556f74d0d938e1ad240fe44bedf47e97ce4f5", "patch": "@@ -1,3 +1,14 @@\n+2000-09-12  Bruce Korb  <bkorb@gnu.org>\n+\n+\t* fixinc/fixfixes.c: make a type for the fix procedure & use it,\n+\tremove obsolete code\n+\t* fixinc/fixincl.c: Use PARAMS, not _P_.  Add no-op default to switch.\n+\t* fixinc/fixincl.tpl: make non-exported arrays static scope\n+\t* fixinc/fixincl.x: regenerate\n+\t* fixinc/fixlib.h: Use PARAMS, not _P_\n+\t* fixinc/fixtests.c: make a type for the test proc & use it\n+\t* fixinc/server.h: Use PARAMS, not _P_\n+\n 2000-09-12  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* c-typeck.c (process_init_element): Avoid union init warnings on"}, {"sha": "e1fd36b78739010f1134f0c8d61ac91b5de527e8", "filename": "gcc/fixinc/fixfixes.c", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3af556f74d0d938e1ad240fe44bedf47e97ce4f5/gcc%2Ffixinc%2Ffixfixes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3af556f74d0d938e1ad240fe44bedf47e97ce4f5/gcc%2Ffixinc%2Ffixfixes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixfixes.c?ref=3af556f74d0d938e1ad240fe44bedf47e97ce4f5", "patch": "@@ -66,9 +66,10 @@ Boston, MA 02111-1307, USA.  */\n \n tSCC zNeedsArg[] = \"fixincl error:  `%s' needs %s argument (c_fix_arg[%d])\\n\";\n \n+typedef void t_fix_proc PARAMS ((const char *, const char *, tFixDesc *));\n typedef struct {\n     const char*  fix_name;\n-    void (*fix_proc)();\n+    t_fix_proc*  fix_proc;\n } fix_entry_t;\n \n #define FIXUP_TABLE \\\n@@ -80,13 +81,14 @@ typedef struct {\n   _FT_( \"gnu_type\",         gnu_type_fix )\n \n \n-#define FIX_PROC_HEAD( fix ) \\\n-static void fix ( filname, text, p_fixd ) \\\n-    const char* filname; \\\n-    const char* text; \\\n+#define FIX_PROC_HEAD( fix )                    \\\n+static t_fix_proc fix; /* avoid warning */      \\\n+static void fix ( filname, text, p_fixd )       \\\n+    const char* filname;                        \\\n+    const char* text;                           \\\n     tFixDesc* p_fixd;\n \n-\n+#ifdef NEED_PRINT_QUOTE\n /*\n  *  Skip over a quoted string.  Single quote strings may\n  *  contain multiple characters if the first character is\n@@ -128,6 +130,7 @@ print_quote( q, text )\n \n   return text;\n }\n+#endif /* NEED_PRINT_QUOTE */\n \n \n /*\n@@ -250,7 +253,6 @@ FIX_PROC_HEAD( format_fix )\n {\n   tCC*  pz_pat = p_fixd->patch_args[2];\n   tCC*  pz_fmt = p_fixd->patch_args[1];\n-  const char *p;\n   regex_t re;\n   regmatch_t rm[10];\n \n@@ -295,9 +297,6 @@ FIX_PROC_HEAD( format_fix )\n   compile_re (pz_pat, &re, 1, \"format search-text\", \"format_fix\" );\n   while (regexec (&re, text, 10, rm, 0) == 0)\n     {\n-      char* apz[10];\n-      int   i;\n-\n       fwrite( text, rm[0].rm_so, 1, stdout );\n       format_write( pz_fmt, text, rm );\n       text += rm[0].rm_eo;"}, {"sha": "e0513e5bc69cc3f9738f827ca0ba5e80356d3cda", "filename": "gcc/fixinc/fixincl.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3af556f74d0d938e1ad240fe44bedf47e97ce4f5/gcc%2Ffixinc%2Ffixincl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3af556f74d0d938e1ad240fe44bedf47e97ce4f5/gcc%2Ffixinc%2Ffixincl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.c?ref=3af556f74d0d938e1ad240fe44bedf47e97ce4f5", "patch": "@@ -93,12 +93,11 @@ const char incl_quote_pat[] = \"^[ \\t]*#[ \\t]*include[ \\t]*\\\"[^/]\";\n tSCC z_fork_err[] = \"Error %d (%s) starting filter process for %s\\n\";\n regex_t incl_quote_re;\n \n-void do_version ();\n-char *load_file  _P_((const char *));\n-void process  _P_((char *, const char *));\n-void run_compiles ();\n-void initialize _P_((int argc,char** argv));\n-void process ();\n+void do_version   PARAMS((void));\n+char *load_file   PARAMS((const char *));\n+void run_compiles PARAMS((void));\n+void initialize   PARAMS((int argc,char** argv));\n+void process      PARAMS((void));\n \n /*  External Source Code */\n \n@@ -523,6 +522,7 @@ run_compiles ()\n               p_test->p_test_regex = p_re++;\n               compile_re (p_test->pz_test_text, p_test->p_test_regex, 0,\n                           \"select test\", p_fixd->fix_name);\n+            default: break;\n             }\n           p_test++;\n         }"}, {"sha": "7d5a6ea55368597a54fc90d2358c4a0ae71153c9", "filename": "gcc/fixinc/fixincl.tpl", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3af556f74d0d938e1ad240fe44bedf47e97ce4f5/gcc%2Ffixinc%2Ffixincl.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3af556f74d0d938e1ad240fe44bedf47e97ce4f5/gcc%2Ffixinc%2Ffixincl.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.tpl?ref=3af556f74d0d938e1ad240fe44bedf47e97ce4f5", "patch": "@@ -124,7 +124,7 @@ _SETENV re_ct\n \tre_ct _env _val\n \tselect _count +\n \tbypass _count + =]\n-tTestDesc a[=hackname _cap=]Tests[] = {[=\n+static tTestDesc a[=hackname _cap=]Tests[] = {[=\n \n     _FOR test =]\n   { TT_TEST,     z[=hackname _cap=]Test[=_eval _index=],   0 /* unused */ },[=\n@@ -149,7 +149,7 @@ tTestDesc a[=hackname _cap=]Tests[] = {[=\n /*\n  *  Fix Command Arguments for [=hackname _cap=]\n  */\n-const char* apz[=hackname _cap=]Patch[] = {[=\n+static const char* apz[=hackname _cap=]Patch[] = {[=\n     _IF   sed         _exist =] \"sed\"[=\n       _FOR sed=],\n     \"-e\", [=sed _krstr=][="}, {"sha": "4fe9d9ddf76797d391ae56e4445f49b9127ede34", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 247, "deletions": 247, "changes": 494, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3af556f74d0d938e1ad240fe44bedf47e97ce4f5/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3af556f74d0d938e1ad240fe44bedf47e97ce4f5/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=3af556f74d0d938e1ad240fe44bedf47e97ce4f5", "patch": "@@ -55,13 +55,13 @@ tSCC zAaa_Ki_IfaceSelect0[] =\n        \"These definitions are for HP Internal developers\";\n \n #define    AAA_KI_IFACE_TEST_CT  1\n-tTestDesc aAaa_Ki_IfaceTests[] = {\n+static tTestDesc aAaa_Ki_IfaceTests[] = {\n   { TT_EGREP,    zAaa_Ki_IfaceSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Aaa_Ki_Iface\n  */\n-const char* apzAaa_Ki_IfacePatch[] = {\n+static const char* apzAaa_Ki_IfacePatch[] = {\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -89,13 +89,13 @@ tSCC zAaa_KiSelect0[] =\n        \"11.00 HP-UX LP64\";\n \n #define    AAA_KI_TEST_CT  1\n-tTestDesc aAaa_KiTests[] = {\n+static tTestDesc aAaa_KiTests[] = {\n   { TT_EGREP,    zAaa_KiSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Aaa_Ki\n  */\n-const char* apzAaa_KiPatch[] = {\n+static const char* apzAaa_KiPatch[] = {\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -123,13 +123,13 @@ tSCC zAaa_Ki_CallsSelect0[] =\n        \"kthread_create_caller_t\";\n \n #define    AAA_KI_CALLS_TEST_CT  1\n-tTestDesc aAaa_Ki_CallsTests[] = {\n+static tTestDesc aAaa_Ki_CallsTests[] = {\n   { TT_EGREP,    zAaa_Ki_CallsSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Aaa_Ki_Calls\n  */\n-const char* apzAaa_Ki_CallsPatch[] = {\n+static const char* apzAaa_Ki_CallsPatch[] = {\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -157,13 +157,13 @@ tSCC zAaa_Ki_DefsSelect0[] =\n        \"Kernel Instrumentation Definitions\";\n \n #define    AAA_KI_DEFS_TEST_CT  1\n-tTestDesc aAaa_Ki_DefsTests[] = {\n+static tTestDesc aAaa_Ki_DefsTests[] = {\n   { TT_EGREP,    zAaa_Ki_DefsSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Aaa_Ki_Defs\n  */\n-const char* apzAaa_Ki_DefsPatch[] = {\n+static const char* apzAaa_Ki_DefsPatch[] = {\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -189,7 +189,7 @@ tSCC zAaa_Bad_FixesList[] =\n /*\n  *  Fix Command Arguments for Aaa_Bad_Fixes\n  */\n-const char* apzAaa_Bad_FixesPatch[] = {\n+static const char* apzAaa_Bad_FixesPatch[] = {\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -217,13 +217,13 @@ tSCC zAaa_TimeSelect0[] =\n        \"11.0 and later representation of ki time\";\n \n #define    AAA_TIME_TEST_CT  1\n-tTestDesc aAaa_TimeTests[] = {\n+static tTestDesc aAaa_TimeTests[] = {\n   { TT_EGREP,    zAaa_TimeSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Aaa_Time\n  */\n-const char* apzAaa_TimePatch[] = {\n+static const char* apzAaa_TimePatch[] = {\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -249,7 +249,7 @@ tSCC zAab_Dgux_Int_VarargsList[] =\n /*\n  *  Fix Command Arguments for Aab_Dgux_Int_Varargs\n  */\n-const char* apzAab_Dgux_Int_VarargsPatch[] = {\n+static const char* apzAab_Dgux_Int_VarargsPatch[] = {\n \"#ifndef __INT_VARARGS_H\\n\\\n #define __INT_VARARGS_H\\n\\\n \\n\\\n@@ -341,13 +341,13 @@ tSCC zAab_Fd_Zero_Asm_Posix_Types_HBypass0[] =\n        \"} while\";\n \n #define    AAB_FD_ZERO_ASM_POSIX_TYPES_H_TEST_CT  1\n-tTestDesc aAab_Fd_Zero_Asm_Posix_Types_HTests[] = {\n+static tTestDesc aAab_Fd_Zero_Asm_Posix_Types_HTests[] = {\n   { TT_NEGREP,   zAab_Fd_Zero_Asm_Posix_Types_HBypass0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Aab_Fd_Zero_Asm_Posix_Types_H\n  */\n-const char* apzAab_Fd_Zero_Asm_Posix_Types_HPatch[] = {\n+static const char* apzAab_Fd_Zero_Asm_Posix_Types_HPatch[] = {\n \"/* This file fixes a bug in the __FD_ZERO macro\\n\\\n    for older versions of the Linux kernel. */\\n\\\n #ifndef _POSIX_TYPES_H_WRAPPER\\n\\\n@@ -395,7 +395,7 @@ tSCC* apzAab_Fd_Zero_Gnu_Types_HMachs[] = {\n /*\n  *  Fix Command Arguments for Aab_Fd_Zero_Gnu_Types_H\n  */\n-const char* apzAab_Fd_Zero_Gnu_Types_HPatch[] = {\n+static const char* apzAab_Fd_Zero_Gnu_Types_HPatch[] = {\n \"/* This file fixes a bug in the __FD_ZERO macro present in glibc 1.x. */\\n\\\n #ifndef _TYPES_H_WRAPPER\\n\\\n #include <features.h>\\n\\\n@@ -442,7 +442,7 @@ tSCC* apzAab_Fd_Zero_Selectbits_HMachs[] = {\n /*\n  *  Fix Command Arguments for Aab_Fd_Zero_Selectbits_H\n  */\n-const char* apzAab_Fd_Zero_Selectbits_HPatch[] = {\n+static const char* apzAab_Fd_Zero_Selectbits_HPatch[] = {\n \"/* This file fixes a bug in the __FD_ZERO macro present in glibc 2.0.x. */\\n\\\n #ifndef _SELECTBITS_H_WRAPPER\\n\\\n #include <features.h>\\n\\\n@@ -493,13 +493,13 @@ tSCC zAab_Sun_MemcpySelect0[] =\n        \"/\\\\*\\t@\\\\(#\\\\)(head/memory.h\\t50.1\\t |memory\\\\.h 1\\\\.[2-4] 8./../.. SMI; from S5R2 1\\\\.2\\t)\\\\*/\";\n \n #define    AAB_SUN_MEMCPY_TEST_CT  1\n-tTestDesc aAab_Sun_MemcpyTests[] = {\n+static tTestDesc aAab_Sun_MemcpyTests[] = {\n   { TT_EGREP,    zAab_Sun_MemcpySelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Aab_Sun_Memcpy\n  */\n-const char* apzAab_Sun_MemcpyPatch[] = {\n+static const char* apzAab_Sun_MemcpyPatch[] = {\n \"/* This file was generated by fixincludes */\\n\\\n #ifndef __memory_h__\\n\\\n #define __memory_h__\\n\\\n@@ -551,7 +551,7 @@ tSCC* apzAab_Svr4_Replace_ByteorderMachs[] = {\n /*\n  *  Fix Command Arguments for Aab_Svr4_Replace_Byteorder\n  */\n-const char* apzAab_Svr4_Replace_ByteorderPatch[] = {\n+static const char* apzAab_Svr4_Replace_ByteorderPatch[] = {\n \"#ifndef _SYS_BYTEORDER_H\\n\\\n #define _SYS_BYTEORDER_H\\n\\\n \\n\\\n@@ -722,13 +722,13 @@ tSCC zAab_Ultrix_Ansi_CompatSelect0[] =\n        \"ULTRIX\";\n \n #define    AAB_ULTRIX_ANSI_COMPAT_TEST_CT  1\n-tTestDesc aAab_Ultrix_Ansi_CompatTests[] = {\n+static tTestDesc aAab_Ultrix_Ansi_CompatTests[] = {\n   { TT_EGREP,    zAab_Ultrix_Ansi_CompatSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Aab_Ultrix_Ansi_Compat\n  */\n-const char* apzAab_Ultrix_Ansi_CompatPatch[] = {\n+static const char* apzAab_Ultrix_Ansi_CompatPatch[] = {\n \"/* This file intentionally left blank.  */\\n\",\n     (char*)NULL };\n \n@@ -757,7 +757,7 @@ tSCC* apzAab_Ultrix_LimitsMachs[] = {\n /*\n  *  Fix Command Arguments for Aab_Ultrix_Limits\n  */\n-const char* apzAab_Ultrix_LimitsPatch[] = {\n+static const char* apzAab_Ultrix_LimitsPatch[] = {\n \"/*\\t@(#)limits.h\\t\\t\\t\\t*/\\n\\\n /* This file was generated by fixincludes\\t*/\\n\\\n #ifndef _LIMITS_INCLUDED\\n\\\n@@ -791,7 +791,7 @@ tSCC* apzAab_Ultrix_MemoryMachs[] = {\n /*\n  *  Fix Command Arguments for Aab_Ultrix_Memory\n  */\n-const char* apzAab_Ultrix_MemoryPatch[] = {\n+static const char* apzAab_Ultrix_MemoryPatch[] = {\n \"/*\\t@(#)memory.h\\t\\t\\t\\t*/\\n\\\n /* This file was generated by fixincludes\\t*/\\n\\\n #ifndef _MEMORY_INCLUDED\\n\\\n@@ -825,7 +825,7 @@ tSCC* apzAab_Ultrix_StringMachs[] = {\n /*\n  *  Fix Command Arguments for Aab_Ultrix_String\n  */\n-const char* apzAab_Ultrix_StringPatch[] = {\n+static const char* apzAab_Ultrix_StringPatch[] = {\n \"/*\\t@(#)string.h\\t\\t\\t\\t*/\\n\\\n /* This file was generated by fixincludes\\t*/\\n\\\n #ifndef _STRING_INCLUDED\\n\\\n@@ -861,13 +861,13 @@ tSCC zAix_PthreadSelect0[] =\n (])\";\n \n #define    AIX_PTHREAD_TEST_CT  1\n-tTestDesc aAix_PthreadTests[] = {\n+static tTestDesc aAix_PthreadTests[] = {\n   { TT_EGREP,    zAix_PthreadSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Aix_Pthread\n  */\n-const char* apzAix_PthreadPatch[] = {\n+static const char* apzAix_PthreadPatch[] = {\n     \"format\",\n     \"%1 %2\",\n     (char*)NULL };\n@@ -897,13 +897,13 @@ tSCC zAix_SysmachineSelect0[] =\n        \"\\\\\\\\ +\\n\";\n \n #define    AIX_SYSMACHINE_TEST_CT  1\n-tTestDesc aAix_SysmachineTests[] = {\n+static tTestDesc aAix_SysmachineTests[] = {\n   { TT_EGREP,    zAix_SysmachineSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Aix_Sysmachine\n  */\n-const char* apzAix_SysmachinePatch[] = {\n+static const char* apzAix_SysmachinePatch[] = {\n     \"format\",\n     \"\\\\\\n\",\n     (char*)NULL };\n@@ -935,14 +935,14 @@ tSCC zAix_SyswaitSelect1[] =\n        \"bos325,\";\n \n #define    AIX_SYSWAIT_TEST_CT  2\n-tTestDesc aAix_SyswaitTests[] = {\n+static tTestDesc aAix_SyswaitTests[] = {\n   { TT_EGREP,    zAix_SyswaitSelect0, (regex_t*)NULL },\n   { TT_EGREP,    zAix_SyswaitSelect1, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Aix_Syswait\n  */\n-const char* apzAix_SyswaitPatch[] = {\n+static const char* apzAix_SyswaitPatch[] = {\n     \"format\",\n     \"struct rusage;\\n\\\n %0\",\n@@ -973,13 +973,13 @@ tSCC zAix_VolatileSelect0[] =\n        \"typedef volatile int sig_atomic_t\";\n \n #define    AIX_VOLATILE_TEST_CT  1\n-tTestDesc aAix_VolatileTests[] = {\n+static tTestDesc aAix_VolatileTests[] = {\n   { TT_EGREP,    zAix_VolatileSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Aix_Volatile\n  */\n-const char* apzAix_VolatilePatch[] = {\n+static const char* apzAix_VolatilePatch[] = {\n     \"format\",\n     \"typedef int sig_atomic_t\",\n     (char*)NULL };\n@@ -1009,13 +1009,13 @@ tSCC zAlpha_GetoptSelect0[] =\n        \"getopt\\\\(int, char \\\\*\\\\[\\\\], *char \\\\*\\\\)\";\n \n #define    ALPHA_GETOPT_TEST_CT  1\n-tTestDesc aAlpha_GetoptTests[] = {\n+static tTestDesc aAlpha_GetoptTests[] = {\n   { TT_EGREP,    zAlpha_GetoptSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Alpha_Getopt\n  */\n-const char* apzAlpha_GetoptPatch[] = {\n+static const char* apzAlpha_GetoptPatch[] = {\n     \"format\",\n     \"getopt(int, char *const[], const char *)\",\n     (char*)NULL };\n@@ -1045,13 +1045,13 @@ tSCC zAlpha_ParensSelect0[] =\n        \"#ifndef\\\\(__mips64\\\\)\";\n \n #define    ALPHA_PARENS_TEST_CT  1\n-tTestDesc aAlpha_ParensTests[] = {\n+static tTestDesc aAlpha_ParensTests[] = {\n   { TT_EGREP,    zAlpha_ParensSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Alpha_Parens\n  */\n-const char* apzAlpha_ParensPatch[] = {\n+static const char* apzAlpha_ParensPatch[] = {\n     \"format\",\n     \"#ifndef __mips64\",\n     (char*)NULL };\n@@ -1081,13 +1081,13 @@ tSCC zAlpha_SbrkSelect0[] =\n        \"char[ \\t]*\\\\*[\\t ]*sbrk[ \\t]*\\\\(\";\n \n #define    ALPHA_SBRK_TEST_CT  1\n-tTestDesc aAlpha_SbrkTests[] = {\n+static tTestDesc aAlpha_SbrkTests[] = {\n   { TT_EGREP,    zAlpha_SbrkSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Alpha_Sbrk\n  */\n-const char* apzAlpha_SbrkPatch[] = {\n+static const char* apzAlpha_SbrkPatch[] = {\n     \"format\",\n     \"void *sbrk(\",\n     (char*)NULL };\n@@ -1117,13 +1117,13 @@ tSCC zArm_Norcroft_HintSelect0[] =\n        \"___type p_type\";\n \n #define    ARM_NORCROFT_HINT_TEST_CT  1\n-tTestDesc aArm_Norcroft_HintTests[] = {\n+static tTestDesc aArm_Norcroft_HintTests[] = {\n   { TT_EGREP,    zArm_Norcroft_HintSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Arm_Norcroft_Hint\n  */\n-const char* apzArm_Norcroft_HintPatch[] = {\n+static const char* apzArm_Norcroft_HintPatch[] = {\n     \"format\",\n     \"p_type\",\n     (char*)NULL };\n@@ -1153,13 +1153,13 @@ tSCC zArm_WcharSelect0[] =\n        \"#[ \\t]*define[ \\t]*__wchar_t\";\n \n #define    ARM_WCHAR_TEST_CT  1\n-tTestDesc aArm_WcharTests[] = {\n+static tTestDesc aArm_WcharTests[] = {\n   { TT_EGREP,    zArm_WcharSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Arm_Wchar\n  */\n-const char* apzArm_WcharPatch[] = {\n+static const char* apzArm_WcharPatch[] = {\n     \"format\",\n     \"%1_GCC_WCHAR_T\",\n     \"(#[ \\t]*(ifndef|define)[ \\t]+)__wchar_t\",\n@@ -1190,13 +1190,13 @@ tSCC zAux_AsmSelect0[] =\n        \"#ifndef NOINLINE\";\n \n #define    AUX_ASM_TEST_CT  1\n-tTestDesc aAux_AsmTests[] = {\n+static tTestDesc aAux_AsmTests[] = {\n   { TT_EGREP,    zAux_AsmSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Aux_Asm\n  */\n-const char* apzAux_AsmPatch[] = {\n+static const char* apzAux_AsmPatch[] = {\n     \"format\",\n     \"#if !defined(NOINLINE) && !defined(__GNUC__)\",\n     (char*)NULL };\n@@ -1232,14 +1232,14 @@ tSCC zAvoid_Bool_DefineBypass0[] =\n        \"we must use the C\\\\+\\\\+ compiler's type\";\n \n #define    AVOID_BOOL_DEFINE_TEST_CT  2\n-tTestDesc aAvoid_Bool_DefineTests[] = {\n+static tTestDesc aAvoid_Bool_DefineTests[] = {\n   { TT_NEGREP,   zAvoid_Bool_DefineBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zAvoid_Bool_DefineSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Avoid_Bool_Define\n  */\n-const char* apzAvoid_Bool_DefinePatch[] = {\n+static const char* apzAvoid_Bool_DefinePatch[] = {\n     \"format\",\n     \"#ifndef __cplusplus\\n\\\n %0\\n\\\n@@ -1278,14 +1278,14 @@ tSCC zAvoid_Bool_TypeBypass0[] =\n        \"we must use the C\\\\+\\\\+ compiler's type\";\n \n #define    AVOID_BOOL_TYPE_TEST_CT  2\n-tTestDesc aAvoid_Bool_TypeTests[] = {\n+static tTestDesc aAvoid_Bool_TypeTests[] = {\n   { TT_NEGREP,   zAvoid_Bool_TypeBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zAvoid_Bool_TypeSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Avoid_Bool_Type\n  */\n-const char* apzAvoid_Bool_TypePatch[] = {\n+static const char* apzAvoid_Bool_TypePatch[] = {\n     \"format\",\n     \"#ifndef __cplusplus\\n\\\n %0\\n\\\n@@ -1318,13 +1318,13 @@ tSCC zBad_LvalSelect0[] =\n        \"^[ \\t]*#[ \\t]*pragma[ \\t]+extern_prefix\";\n \n #define    BAD_LVAL_TEST_CT  1\n-tTestDesc aBad_LvalTests[] = {\n+static tTestDesc aBad_LvalTests[] = {\n   { TT_EGREP,    zBad_LvalSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Bad_Lval\n  */\n-const char* apzBad_LvalPatch[] = { \"sed\",\n+static const char* apzBad_LvalPatch[] = { \"sed\",\n     \"-e\", \"s/^[ \\t]*#[ \\t]*define[ \\t][ \\t]*\\\\([^(]*\\\\)\\\\(([^)]*)\\\\)[ \\t]*\\\\(_.*\\\\)\\\\1\\\\2[ \\t]*$/#define \\\\1 \\\\3\\\\1/\",\n     (char*)NULL };\n \n@@ -1353,13 +1353,13 @@ tSCC zBad_Struct_TermSelect0[] =\n        \"^[ \\t]*typedef[ \\t]+struct[ \\t]+term[ \\t]*;\";\n \n #define    BAD_STRUCT_TERM_TEST_CT  1\n-tTestDesc aBad_Struct_TermTests[] = {\n+static tTestDesc aBad_Struct_TermTests[] = {\n   { TT_EGREP,    zBad_Struct_TermSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Bad_Struct_Term\n  */\n-const char* apzBad_Struct_TermPatch[] = {\n+static const char* apzBad_Struct_TermPatch[] = {\n     \"format\",\n     \"struct term;\",\n     (char*)NULL };\n@@ -1389,13 +1389,13 @@ tSCC zBadquoteSelect0[] =\n        \"doesn't\";\n \n #define    BADQUOTE_TEST_CT  1\n-tTestDesc aBadquoteTests[] = {\n+static tTestDesc aBadquoteTests[] = {\n   { TT_EGREP,    zBadquoteSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Badquote\n  */\n-const char* apzBadquotePatch[] = {\n+static const char* apzBadquotePatch[] = {\n     \"format\",\n     \"does not\",\n     (char*)NULL };\n@@ -1431,14 +1431,14 @@ tSCC zBroken_Assert_StdioBypass0[] =\n        \"include.*stdio\\\\.h\";\n \n #define    BROKEN_ASSERT_STDIO_TEST_CT  2\n-tTestDesc aBroken_Assert_StdioTests[] = {\n+static tTestDesc aBroken_Assert_StdioTests[] = {\n   { TT_NEGREP,   zBroken_Assert_StdioBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zBroken_Assert_StdioSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Broken_Assert_Stdio\n  */\n-const char* apzBroken_Assert_StdioPatch[] = {\n+static const char* apzBroken_Assert_StdioPatch[] = {\n     \"wrap\",\n     \"#include <stdio.h>\\n\",\n     (char*)NULL };\n@@ -1474,14 +1474,14 @@ tSCC zBroken_Assert_StdlibBypass0[] =\n        \"include.*stdlib\\\\.h\";\n \n #define    BROKEN_ASSERT_STDLIB_TEST_CT  2\n-tTestDesc aBroken_Assert_StdlibTests[] = {\n+static tTestDesc aBroken_Assert_StdlibTests[] = {\n   { TT_NEGREP,   zBroken_Assert_StdlibBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zBroken_Assert_StdlibSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Broken_Assert_Stdlib\n  */\n-const char* apzBroken_Assert_StdlibPatch[] = {\n+static const char* apzBroken_Assert_StdlibPatch[] = {\n     \"wrap\",\n     \"#ifdef __cplusplus\\n\\\n #include <stdlib.h>\\n\\\n@@ -1513,13 +1513,13 @@ tSCC zBroken_CabsSelect0[] =\n        \"^extern double cabs\";\n \n #define    BROKEN_CABS_TEST_CT  1\n-tTestDesc aBroken_CabsTests[] = {\n+static tTestDesc aBroken_CabsTests[] = {\n   { TT_EGREP,    zBroken_CabsSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Broken_Cabs\n  */\n-const char* apzBroken_CabsPatch[] = {\n+static const char* apzBroken_CabsPatch[] = {\n     \"format\",\n     \"\",\n     \"^extern double cabs\\\\((struct dbl_hypot|)\\\\);\",\n@@ -1549,13 +1549,13 @@ tSCC zCtrl_Quotes_DefSelect0[] =\n        \"define[ \\t]+[A-Z0-9_]+CTRL\\\\([a-zA-Z][,)]\";\n \n #define    CTRL_QUOTES_DEF_TEST_CT  1\n-tTestDesc aCtrl_Quotes_DefTests[] = {\n+static tTestDesc aCtrl_Quotes_DefTests[] = {\n   { TT_EGREP,    zCtrl_Quotes_DefSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Ctrl_Quotes_Def\n  */\n-const char* apzCtrl_Quotes_DefPatch[] = {\n+static const char* apzCtrl_Quotes_DefPatch[] = {\n     \"char_macro_def\",\n     \"CTRL\",\n     (char*)NULL };\n@@ -1584,13 +1584,13 @@ tSCC zCtrl_Quotes_UseSelect0[] =\n        \"define[ \\t]+[A-Z0-9_]+[ \\t]+[A-Z0-9_]+CTRL[ \\t]*\\\\( *[^,']\";\n \n #define    CTRL_QUOTES_USE_TEST_CT  1\n-tTestDesc aCtrl_Quotes_UseTests[] = {\n+static tTestDesc aCtrl_Quotes_UseTests[] = {\n   { TT_EGREP,    zCtrl_Quotes_UseSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Ctrl_Quotes_Use\n  */\n-const char* apzCtrl_Quotes_UsePatch[] = {\n+static const char* apzCtrl_Quotes_UsePatch[] = {\n     \"char_macro_use\",\n     \"CTRL\",\n     (char*)NULL };\n@@ -1626,14 +1626,14 @@ tSCC zCxx_UnreadyBypass0[] =\n        \"\\\"C\\\"|__BEGIN_DECLS\";\n \n #define    CXX_UNREADY_TEST_CT  2\n-tTestDesc aCxx_UnreadyTests[] = {\n+static tTestDesc aCxx_UnreadyTests[] = {\n   { TT_NEGREP,   zCxx_UnreadyBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zCxx_UnreadySelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Cxx_Unready\n  */\n-const char* apzCxx_UnreadyPatch[] = {\n+static const char* apzCxx_UnreadyPatch[] = {\n     \"wrap\",\n     \"#ifdef __cplusplus\\n\\\n extern \\\"C\\\" {\\n\\\n@@ -1666,7 +1666,7 @@ tSCC zDec_Intern_AsmList[] =\n /*\n  *  Fix Command Arguments for Dec_Intern_Asm\n  */\n-const char* apzDec_Intern_AsmPatch[] = { \"sed\",\n+static const char* apzDec_Intern_AsmPatch[] = { \"sed\",\n     \"-e\", \"/^[ \\t]*float[ \\t]*fasm/i\\\\\\n\\\n #ifdef __DECC\\n\",\n     \"-e\", \"/^[ \\t]*#[ \\t]*pragma[ \\t]*intrinsic([ \\t]*dasm/a\\\\\\n\\\n@@ -1698,13 +1698,13 @@ tSCC zEcd_CursorSelect0[] =\n        \"ecd\\\\.cursor\";\n \n #define    ECD_CURSOR_TEST_CT  1\n-tTestDesc aEcd_CursorTests[] = {\n+static tTestDesc aEcd_CursorTests[] = {\n   { TT_EGREP,    zEcd_CursorSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Ecd_Cursor\n  */\n-const char* apzEcd_CursorPatch[] = {\n+static const char* apzEcd_CursorPatch[] = {\n     \"format\",\n     \"ecd_cursor\",\n     (char*)NULL };\n@@ -1736,13 +1736,13 @@ tSCC zFix_Header_BreakageSelect0[] =\n        \"extern double floor\\\\(\\\\), ceil\\\\(\\\\), fmod\\\\(\\\\), fabs\\\\(\\\\);\";\n \n #define    FIX_HEADER_BREAKAGE_TEST_CT  1\n-tTestDesc aFix_Header_BreakageTests[] = {\n+static tTestDesc aFix_Header_BreakageTests[] = {\n   { TT_EGREP,    zFix_Header_BreakageSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Fix_Header_Breakage\n  */\n-const char* apzFix_Header_BreakagePatch[] = {\n+static const char* apzFix_Header_BreakagePatch[] = {\n     \"format\",\n     \"extern double floor(), ceil(), fmod(), fabs _PARAMS((double));\",\n     (char*)NULL };\n@@ -1772,13 +1772,13 @@ tSCC zHp_InlineSelect0[] =\n        \"[ \\t]*#[ \\t]*include[ \\t]+\\\"\\\\.\\\\./machine/\";\n \n #define    HP_INLINE_TEST_CT  1\n-tTestDesc aHp_InlineTests[] = {\n+static tTestDesc aHp_InlineTests[] = {\n   { TT_EGREP,    zHp_InlineSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Hp_Inline\n  */\n-const char* apzHp_InlinePatch[] = {\n+static const char* apzHp_InlinePatch[] = {\n     \"format\",\n     \"%1<machine/%2.h>\",\n     \"([ \\t]*#[ \\t]*include[ \\t]+)\\\"\\\\.\\\\./machine/([a-z]+)\\\\.h\\\"\",\n@@ -1809,13 +1809,13 @@ tSCC zHp_SysfileSelect0[] =\n        \"HPUX_SOURCE\";\n \n #define    HP_SYSFILE_TEST_CT  1\n-tTestDesc aHp_SysfileTests[] = {\n+static tTestDesc aHp_SysfileTests[] = {\n   { TT_EGREP,    zHp_SysfileSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Hp_Sysfile\n  */\n-const char* apzHp_SysfilePatch[] = {\n+static const char* apzHp_SysfilePatch[] = {\n     \"format\",\n     \"(struct file *, ...)\",\n     \"\\\\(\\\\.\\\\.\\\\.\\\\)\",\n@@ -1852,14 +1852,14 @@ tSCC zHpux11_FabsfBypass0[] =\n        \"__cplusplus\";\n \n #define    HPUX11_FABSF_TEST_CT  2\n-tTestDesc aHpux11_FabsfTests[] = {\n+static tTestDesc aHpux11_FabsfTests[] = {\n   { TT_NEGREP,   zHpux11_FabsfBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zHpux11_FabsfSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Hpux11_Fabsf\n  */\n-const char* apzHpux11_FabsfPatch[] = {\n+static const char* apzHpux11_FabsfPatch[] = {\n     \"format\",\n     \"#ifndef __cplusplus\\n\\\n %0\\n\\\n@@ -1891,13 +1891,13 @@ tSCC zHpux11_Uint32_CSelect0[] =\n        \"^#define UINT32_C\\\\(__c\\\\)[ \\t]*__CONCAT__\\\\(__CONCAT_U__\\\\(__c\\\\),l\\\\)\";\n \n #define    HPUX11_UINT32_C_TEST_CT  1\n-tTestDesc aHpux11_Uint32_CTests[] = {\n+static tTestDesc aHpux11_Uint32_CTests[] = {\n   { TT_EGREP,    zHpux11_Uint32_CSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Hpux11_Uint32_C\n  */\n-const char* apzHpux11_Uint32_CPatch[] = {\n+static const char* apzHpux11_Uint32_CPatch[] = {\n     \"format\",\n     \"#define UINT32_C(__c) __CONCAT__(__c,ul)\",\n     (char*)NULL };\n@@ -1927,13 +1927,13 @@ tSCC zHpux8_Bogus_InlinesSelect0[] =\n        \"inline\";\n \n #define    HPUX8_BOGUS_INLINES_TEST_CT  1\n-tTestDesc aHpux8_Bogus_InlinesTests[] = {\n+static tTestDesc aHpux8_Bogus_InlinesTests[] = {\n   { TT_EGREP,    zHpux8_Bogus_InlinesSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Hpux8_Bogus_Inlines\n  */\n-const char* apzHpux8_Bogus_InlinesPatch[] = { \"sed\",\n+static const char* apzHpux8_Bogus_InlinesPatch[] = { \"sed\",\n     \"-e\", \"s@inline int abs(int [a-z][a-z]*) {.*}@extern \\\"C\\\" int abs(int);@\",\n     \"-e\", \"s@inline double abs(double [a-z][a-z]*) {.*}@@\",\n     \"-e\", \"s@inline int sqr(int [a-z][a-z]*) {.*}@@\",\n@@ -1965,13 +1965,13 @@ tSCC zInt_Abort_Free_And_ExitSelect0[] =\n        \"int[ \\t]+(abort|free|exit)[ \\t]*\\\\(\";\n \n #define    INT_ABORT_FREE_AND_EXIT_TEST_CT  1\n-tTestDesc aInt_Abort_Free_And_ExitTests[] = {\n+static tTestDesc aInt_Abort_Free_And_ExitTests[] = {\n   { TT_EGREP,    zInt_Abort_Free_And_ExitSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Int_Abort_Free_And_Exit\n  */\n-const char* apzInt_Abort_Free_And_ExitPatch[] = {\n+static const char* apzInt_Abort_Free_And_ExitPatch[] = {\n     \"format\",\n     \"void\\t%1(\",\n     (char*)NULL };\n@@ -2001,13 +2001,13 @@ tSCC zIsc_Omits_With_StdcSelect0[] =\n        \"!defined\\\\(__STDC__\\\\) && !defined\\\\(_POSIX_SOURCE\\\\)\";\n \n #define    ISC_OMITS_WITH_STDC_TEST_CT  1\n-tTestDesc aIsc_Omits_With_StdcTests[] = {\n+static tTestDesc aIsc_Omits_With_StdcTests[] = {\n   { TT_EGREP,    zIsc_Omits_With_StdcSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Isc_Omits_With_Stdc\n  */\n-const char* apzIsc_Omits_With_StdcPatch[] = {\n+static const char* apzIsc_Omits_With_StdcPatch[] = {\n     \"format\",\n     \"!defined(_POSIX_SOURCE)\",\n     (char*)NULL };\n@@ -2036,13 +2036,13 @@ tSCC zIo_Quotes_DefSelect0[] =\n        \"define[ \\t]+[A-Z0-9_]+IO[A-Z]*\\\\([a-zA-Z][,)]\";\n \n #define    IO_QUOTES_DEF_TEST_CT  1\n-tTestDesc aIo_Quotes_DefTests[] = {\n+static tTestDesc aIo_Quotes_DefTests[] = {\n   { TT_EGREP,    zIo_Quotes_DefSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Io_Quotes_Def\n  */\n-const char* apzIo_Quotes_DefPatch[] = {\n+static const char* apzIo_Quotes_DefPatch[] = {\n     \"char_macro_def\",\n     \"IO\",\n     (char*)NULL };\n@@ -2071,13 +2071,13 @@ tSCC zIo_Quotes_UseSelect0[] =\n        \"define[ \\t]+[A-Z0-9_]+[ \\t]+[A-Z0-9_]+IO[A-Z]*[ \\t]*\\\\( *[^,']\";\n \n #define    IO_QUOTES_USE_TEST_CT  1\n-tTestDesc aIo_Quotes_UseTests[] = {\n+static tTestDesc aIo_Quotes_UseTests[] = {\n   { TT_EGREP,    zIo_Quotes_UseSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Io_Quotes_Use\n  */\n-const char* apzIo_Quotes_UsePatch[] = {\n+static const char* apzIo_Quotes_UsePatch[] = {\n     \"char_macro_use\",\n     \"IO\",\n     (char*)NULL };\n@@ -2107,13 +2107,13 @@ tSCC zHpux_MaxintSelect0[] =\n        \"^#[ \\t]*define[ \\t]*MAXINT[ \\t]\";\n \n #define    HPUX_MAXINT_TEST_CT  1\n-tTestDesc aHpux_MaxintTests[] = {\n+static tTestDesc aHpux_MaxintTests[] = {\n   { TT_EGREP,    zHpux_MaxintSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Hpux_Maxint\n  */\n-const char* apzHpux_MaxintPatch[] = {\n+static const char* apzHpux_MaxintPatch[] = {\n     \"format\",\n     \"#ifndef MAXINT\\n\\\n %0\\n\\\n@@ -2146,13 +2146,13 @@ tSCC zHpux_SystimeSelect0[] =\n        \"^extern struct sigevent;\";\n \n #define    HPUX_SYSTIME_TEST_CT  1\n-tTestDesc aHpux_SystimeTests[] = {\n+static tTestDesc aHpux_SystimeTests[] = {\n   { TT_EGREP,    zHpux_SystimeSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Hpux_Systime\n  */\n-const char* apzHpux_SystimePatch[] = {\n+static const char* apzHpux_SystimePatch[] = {\n     \"format\",\n     \"struct sigevent;\",\n     (char*)NULL };\n@@ -2182,13 +2182,13 @@ tSCC zIp_Missing_SemiSelect0[] =\n        \"}$\";\n \n #define    IP_MISSING_SEMI_TEST_CT  1\n-tTestDesc aIp_Missing_SemiTests[] = {\n+static tTestDesc aIp_Missing_SemiTests[] = {\n   { TT_EGREP,    zIp_Missing_SemiSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Ip_Missing_Semi\n  */\n-const char* apzIp_Missing_SemiPatch[] = { \"sed\",\n+static const char* apzIp_Missing_SemiPatch[] = { \"sed\",\n     \"-e\", \"/^struct/,/^};/s/}$/};/\",\n     (char*)NULL };\n \n@@ -2217,13 +2217,13 @@ tSCC zIrix_Asm_ApostropheSelect0[] =\n        \"^[ \\t]*#.*[Ww]e're\";\n \n #define    IRIX_ASM_APOSTROPHE_TEST_CT  1\n-tTestDesc aIrix_Asm_ApostropheTests[] = {\n+static tTestDesc aIrix_Asm_ApostropheTests[] = {\n   { TT_EGREP,    zIrix_Asm_ApostropheSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Irix_Asm_Apostrophe\n  */\n-const char* apzIrix_Asm_ApostrophePatch[] = {\n+static const char* apzIrix_Asm_ApostrophePatch[] = {\n     \"format\",\n     \"%1 are\",\n     \"^([ \\t]*#.*[Ww]e)'re\",\n@@ -2254,13 +2254,13 @@ tSCC zIsc_FmodSelect0[] =\n        \"fmod\\\\(double\\\\)\";\n \n #define    ISC_FMOD_TEST_CT  1\n-tTestDesc aIsc_FmodTests[] = {\n+static tTestDesc aIsc_FmodTests[] = {\n   { TT_EGREP,    zIsc_FmodSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Isc_Fmod\n  */\n-const char* apzIsc_FmodPatch[] = {\n+static const char* apzIsc_FmodPatch[] = {\n     \"format\",\n     \"fmod(double, double)\",\n     (char*)NULL };\n@@ -2290,13 +2290,13 @@ tSCC zKandr_ConcatSelect0[] =\n        \"/\\\\*\\\\*/\";\n \n #define    KANDR_CONCAT_TEST_CT  1\n-tTestDesc aKandr_ConcatTests[] = {\n+static tTestDesc aKandr_ConcatTests[] = {\n   { TT_EGREP,    zKandr_ConcatSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Kandr_Concat\n  */\n-const char* apzKandr_ConcatPatch[] = {\n+static const char* apzKandr_ConcatPatch[] = {\n     \"format\",\n     \"##\",\n     (char*)NULL };\n@@ -2332,14 +2332,14 @@ tSCC zLibc1_Ifdefd_MemxBypass0[] =\n        \"__cplusplus\";\n \n #define    LIBC1_IFDEFD_MEMX_TEST_CT  2\n-tTestDesc aLibc1_Ifdefd_MemxTests[] = {\n+static tTestDesc aLibc1_Ifdefd_MemxTests[] = {\n   { TT_NEGREP,   zLibc1_Ifdefd_MemxBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zLibc1_Ifdefd_MemxSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Libc1_Ifdefd_Memx\n  */\n-const char* apzLibc1_Ifdefd_MemxPatch[] = {\n+static const char* apzLibc1_Ifdefd_MemxPatch[] = {\n     \"format\",\n     \"%1\",\n     \"/\\\\* `mem...' is a built-in function for gcc 2\\\\.x\\\\. \\\\*/\\n\\\n@@ -2375,13 +2375,13 @@ tSCC zLimits_IfndefsBypass0[] =\n        \"ifndef[ \\t]+FLT_MIN\";\n \n #define    LIMITS_IFNDEFS_TEST_CT  1\n-tTestDesc aLimits_IfndefsTests[] = {\n+static tTestDesc aLimits_IfndefsTests[] = {\n   { TT_NEGREP,   zLimits_IfndefsBypass0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Limits_Ifndefs\n  */\n-const char* apzLimits_IfndefsPatch[] = {\n+static const char* apzLimits_IfndefsPatch[] = {\n     \"format\",\n     \"#ifndef %1\\n\\\n %0\\n\\\n@@ -2414,13 +2414,13 @@ tSCC zLynx_Void_IntSelect0[] =\n        \"#[ \\t]*define[ \\t]+void[ \\t]+int[ \\t]*\";\n \n #define    LYNX_VOID_INT_TEST_CT  1\n-tTestDesc aLynx_Void_IntTests[] = {\n+static tTestDesc aLynx_Void_IntTests[] = {\n   { TT_EGREP,    zLynx_Void_IntSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Lynx_Void_Int\n  */\n-const char* apzLynx_Void_IntPatch[] = {\n+static const char* apzLynx_Void_IntPatch[] = {\n     \"format\",\n     \"\",\n     (char*)NULL };\n@@ -2450,13 +2450,13 @@ tSCC zLynxos_Fcntl_ProtoSelect0[] =\n        \"fcntl[ \\t]*\\\\(int, int, int\\\\)\";\n \n #define    LYNXOS_FCNTL_PROTO_TEST_CT  1\n-tTestDesc aLynxos_Fcntl_ProtoTests[] = {\n+static tTestDesc aLynxos_Fcntl_ProtoTests[] = {\n   { TT_EGREP,    zLynxos_Fcntl_ProtoSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Lynxos_Fcntl_Proto\n  */\n-const char* apzLynxos_Fcntl_ProtoPatch[] = {\n+static const char* apzLynxos_Fcntl_ProtoPatch[] = {\n     \"format\",\n     \"%1...)\",\n     \"(fcntl[ \\t]*\\\\(int, int, )int\\\\)\",\n@@ -2489,13 +2489,13 @@ tSCC zM88k_Bad_Hypot_OptSelect0[] =\n        \"^extern double hypot\\\\(\\\\);\\n\";\n \n #define    M88K_BAD_HYPOT_OPT_TEST_CT  1\n-tTestDesc aM88k_Bad_Hypot_OptTests[] = {\n+static tTestDesc aM88k_Bad_Hypot_OptTests[] = {\n   { TT_EGREP,    zM88k_Bad_Hypot_OptSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for M88k_Bad_Hypot_Opt\n  */\n-const char* apzM88k_Bad_Hypot_OptPatch[] = {\n+static const char* apzM88k_Bad_Hypot_OptPatch[] = {\n     \"format\",\n     \"%0/* Workaround a stupid Motorola optimization if one\\n\\\n    of x or y is 0.0 and the other is negative!  */\\n\\\n@@ -2538,13 +2538,13 @@ tSCC zM88k_Bad_S_IfSelect0[] =\n        \"#define[ \\t]+S_IS[A-Z]+\\\\(m\\\\)[ \\t]+\\\\(m[ \\t]*&\";\n \n #define    M88K_BAD_S_IF_TEST_CT  1\n-tTestDesc aM88k_Bad_S_IfTests[] = {\n+static tTestDesc aM88k_Bad_S_IfTests[] = {\n   { TT_EGREP,    zM88k_Bad_S_IfSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for M88k_Bad_S_If\n  */\n-const char* apzM88k_Bad_S_IfPatch[] = {\n+static const char* apzM88k_Bad_S_IfPatch[] = {\n     \"format\",\n     \"#define %1(m) (((m) & S_IFMT) == %2)\",\n     \"#define[ \\t]+(S_IS[A-Z]+)\\\\(m\\\\)[ \\t]+\\\\(m[ \\t]*&[ \\t]*(S_IF[A-Z][A-Z][A-Z]+|0[0-9]+)[ \\t]*\\\\)\",\n@@ -2577,13 +2577,13 @@ tSCC zM88k_Multi_InclBypass0[] =\n        \"#ifndef\";\n \n #define    M88K_MULTI_INCL_TEST_CT  1\n-tTestDesc aM88k_Multi_InclTests[] = {\n+static tTestDesc aM88k_Multi_InclTests[] = {\n   { TT_NEGREP,   zM88k_Multi_InclBypass0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for M88k_Multi_Incl\n  */\n-const char* apzM88k_Multi_InclPatch[] = {\n+static const char* apzM88k_Multi_InclPatch[] = {\n     \"wrap\",\n     (char*)NULL };\n \n@@ -2618,14 +2618,14 @@ tSCC zMachine_Ansi_H_Va_ListBypass0[] =\n        \"__builtin_va_list\";\n \n #define    MACHINE_ANSI_H_VA_LIST_TEST_CT  2\n-tTestDesc aMachine_Ansi_H_Va_ListTests[] = {\n+static tTestDesc aMachine_Ansi_H_Va_ListTests[] = {\n   { TT_NEGREP,   zMachine_Ansi_H_Va_ListBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zMachine_Ansi_H_Va_ListSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Machine_Ansi_H_Va_List\n  */\n-const char* apzMachine_Ansi_H_Va_ListPatch[] = {\n+static const char* apzMachine_Ansi_H_Va_ListPatch[] = {\n     \"format\",\n     \"%1__builtin_va_list\",\n     \"(define[ \\t]+_BSD_VA_LIST_[ \\t]+).*\",\n@@ -2654,13 +2654,13 @@ tSCC zMachine_NameName[] =\n tSCC zMachine_NameFTst0[] = \"machine_name\";\n \n #define    MACHINE_NAME_TEST_CT  1\n-tTestDesc aMachine_NameTests[] = {\n+static tTestDesc aMachine_NameTests[] = {\n   { TT_FUNCTION, zMachine_NameFTst0,   0 /* unused */ }, };\n \n /*\n  *  Fix Command Arguments for Machine_Name\n  */\n-const char* apzMachine_NamePatch[] = {\n+static const char* apzMachine_NamePatch[] = {\n     \"machine_name\",\n     (char*)NULL };\n \n@@ -2695,14 +2695,14 @@ tSCC zMath_ExceptionBypass0[] =\n        \"We have a problem when using C\\\\+\\\\+\";\n \n #define    MATH_EXCEPTION_TEST_CT  2\n-tTestDesc aMath_ExceptionTests[] = {\n+static tTestDesc aMath_ExceptionTests[] = {\n   { TT_NEGREP,   zMath_ExceptionBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zMath_ExceptionSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Math_Exception\n  */\n-const char* apzMath_ExceptionPatch[] = {\n+static const char* apzMath_ExceptionPatch[] = {\n     \"wrap\",\n     \"#ifdef __cplusplus\\n\\\n #define exception __math_exception\\n\\\n@@ -2743,14 +2743,14 @@ tSCC zMath_Huge_Val_From_Dbl_MaxBypass0[] =\n        \"define[ \\t]+DBL_MAX\";\n \n #define    MATH_HUGE_VAL_FROM_DBL_MAX_TEST_CT  2\n-tTestDesc aMath_Huge_Val_From_Dbl_MaxTests[] = {\n+static tTestDesc aMath_Huge_Val_From_Dbl_MaxTests[] = {\n   { TT_NEGREP,   zMath_Huge_Val_From_Dbl_MaxBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zMath_Huge_Val_From_Dbl_MaxSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Math_Huge_Val_From_Dbl_Max\n  */\n-const char* apzMath_Huge_Val_From_Dbl_MaxPatch[] = { \"sh\", \"-c\",\n+static const char* apzMath_Huge_Val_From_Dbl_MaxPatch[] = { \"sh\", \"-c\",\n     \"\\tdbl_max_def=`egrep 'define[ \\t]+DBL_MAX[ \\t]+.*' float.h | sed 's/.*DBL_MAX[ \\t]*//' 2>/dev/null`\\n\\\n \\n\\\n \\tif ( test -n \\\"${dbl_max_def}\\\" ) > /dev/null 2>&1\\n\\\n@@ -2784,13 +2784,13 @@ tSCC zMath_Huge_Val_IfndefSelect0[] =\n        \"define[ \\t]+HUGE_VAL\";\n \n #define    MATH_HUGE_VAL_IFNDEF_TEST_CT  1\n-tTestDesc aMath_Huge_Val_IfndefTests[] = {\n+static tTestDesc aMath_Huge_Val_IfndefTests[] = {\n   { TT_EGREP,    zMath_Huge_Val_IfndefSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Math_Huge_Val_Ifndef\n  */\n-const char* apzMath_Huge_Val_IfndefPatch[] = {\n+static const char* apzMath_Huge_Val_IfndefPatch[] = {\n     \"format\",\n     \"#ifndef HUGE_VAL\\n\\\n %0\\n\\\n@@ -2825,13 +2825,13 @@ tSCC zNested_MotorolaSelect0[] =\n        \"max # bytes atomic in write|error value returned by Math lib\";\n \n #define    NESTED_MOTOROLA_TEST_CT  1\n-tTestDesc aNested_MotorolaTests[] = {\n+static tTestDesc aNested_MotorolaTests[] = {\n   { TT_EGREP,    zNested_MotorolaSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Nested_Motorola\n  */\n-const char* apzNested_MotorolaPatch[] = { \"sed\",\n+static const char* apzNested_MotorolaPatch[] = { \"sed\",\n     \"-e\", \"s@^\\\\(#undef[ \\t][ \\t]*PIPE_BUF[ \\t]*/\\\\* max # bytes atomic in write to a\\\\)$@\\\\1 */@\",\n     \"-e\", \"s@\\\\(/\\\\*#define\\tHUGE_VAL\\t3.[0-9e+]* \\\\)\\\\(/\\\\*error value returned by Math lib\\\\*/\\\\)$@\\\\1*/ \\\\2@\",\n     (char*)NULL };\n@@ -2861,13 +2861,13 @@ tSCC zNested_Sys_LimitsSelect0[] =\n        \"CHILD_MAX\";\n \n #define    NESTED_SYS_LIMITS_TEST_CT  1\n-tTestDesc aNested_Sys_LimitsTests[] = {\n+static tTestDesc aNested_Sys_LimitsTests[] = {\n   { TT_EGREP,    zNested_Sys_LimitsSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Nested_Sys_Limits\n  */\n-const char* apzNested_Sys_LimitsPatch[] = { \"sed\",\n+static const char* apzNested_Sys_LimitsPatch[] = { \"sed\",\n     \"-e\", \"/CHILD_MAX/s,/\\\\* Max, Max,\",\n     \"-e\", \"/OPEN_MAX/s,/\\\\* Max, Max,\",\n     (char*)NULL };\n@@ -2897,13 +2897,13 @@ tSCC zNested_Auth_DesSelect0[] =\n        \"(/\\\\*.*rpc/auth_des\\\\.h>.*)/\\\\*\";\n \n #define    NESTED_AUTH_DES_TEST_CT  1\n-tTestDesc aNested_Auth_DesTests[] = {\n+static tTestDesc aNested_Auth_DesTests[] = {\n   { TT_EGREP,    zNested_Auth_DesSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Nested_Auth_Des\n  */\n-const char* apzNested_Auth_DesPatch[] = {\n+static const char* apzNested_Auth_DesPatch[] = {\n     \"format\",\n     \"%1*/ /*\",\n     (char*)NULL };\n@@ -2933,13 +2933,13 @@ tSCC zNews_Os_RecursionSelect0[] =\n        \"[ \\t]*#include <stdlib\\\\.h>.*\";\n \n #define    NEWS_OS_RECURSION_TEST_CT  1\n-tTestDesc aNews_Os_RecursionTests[] = {\n+static tTestDesc aNews_Os_RecursionTests[] = {\n   { TT_EGREP,    zNews_Os_RecursionSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for News_Os_Recursion\n  */\n-const char* apzNews_Os_RecursionPatch[] = {\n+static const char* apzNews_Os_RecursionPatch[] = {\n     \"format\",\n     \"#ifdef BOGUS_RECURSION\\n\\\n %0\\n\\\n@@ -2971,13 +2971,13 @@ tSCC zNext_Math_PrefixSelect0[] =\n        \"^extern[ \\t]+double[ \\t]+__const__[ \\t]\";\n \n #define    NEXT_MATH_PREFIX_TEST_CT  1\n-tTestDesc aNext_Math_PrefixTests[] = {\n+static tTestDesc aNext_Math_PrefixTests[] = {\n   { TT_EGREP,    zNext_Math_PrefixSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Next_Math_Prefix\n  */\n-const char* apzNext_Math_PrefixPatch[] = {\n+static const char* apzNext_Math_PrefixPatch[] = {\n     \"format\",\n     \"extern double %1(\",\n     \"^extern[ \\t]+double[ \\t]+__const__[ \\t]+([a-z]+)\\\\(\",\n@@ -3008,13 +3008,13 @@ tSCC zNext_TemplateSelect0[] =\n        \"[ \\t]template\\\\)\";\n \n #define    NEXT_TEMPLATE_TEST_CT  1\n-tTestDesc aNext_TemplateTests[] = {\n+static tTestDesc aNext_TemplateTests[] = {\n   { TT_EGREP,    zNext_TemplateSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Next_Template\n  */\n-const char* apzNext_TemplatePatch[] = {\n+static const char* apzNext_TemplatePatch[] = {\n     \"format\",\n     \"(%1)\",\n     \"\\\\(([^)]*)[ \\t]template\\\\)\",\n@@ -3045,13 +3045,13 @@ tSCC zNext_VolitileSelect0[] =\n        \"^extern[ \\t]+volatile[ \\t]+void[ \\t]\";\n \n #define    NEXT_VOLITILE_TEST_CT  1\n-tTestDesc aNext_VolitileTests[] = {\n+static tTestDesc aNext_VolitileTests[] = {\n   { TT_EGREP,    zNext_VolitileSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Next_Volitile\n  */\n-const char* apzNext_VolitilePatch[] = {\n+static const char* apzNext_VolitilePatch[] = {\n     \"format\",\n     \"extern void %1(\",\n     \"^extern[ \\t]+volatile[ \\t]+void[ \\t]+(exit|abort)\\\\(\",\n@@ -3082,13 +3082,13 @@ tSCC zNext_Wait_UnionSelect0[] =\n        \"wait\\\\(union wait\";\n \n #define    NEXT_WAIT_UNION_TEST_CT  1\n-tTestDesc aNext_Wait_UnionTests[] = {\n+static tTestDesc aNext_Wait_UnionTests[] = {\n   { TT_EGREP,    zNext_Wait_UnionSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Next_Wait_Union\n  */\n-const char* apzNext_Wait_UnionPatch[] = {\n+static const char* apzNext_Wait_UnionPatch[] = {\n     \"format\",\n     \"wait(void\",\n     (char*)NULL };\n@@ -3118,13 +3118,13 @@ tSCC zNodeent_SyntaxSelect0[] =\n        \"char[ \\t]*\\\\*na_addr[ \\t]*$\";\n \n #define    NODEENT_SYNTAX_TEST_CT  1\n-tTestDesc aNodeent_SyntaxTests[] = {\n+static tTestDesc aNodeent_SyntaxTests[] = {\n   { TT_EGREP,    zNodeent_SyntaxSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Nodeent_Syntax\n  */\n-const char* apzNodeent_SyntaxPatch[] = {\n+static const char* apzNodeent_SyntaxPatch[] = {\n     \"format\",\n     \"%0;\",\n     (char*)NULL };\n@@ -3160,7 +3160,7 @@ tSCC zOsf_Namespace_ATest3[] =\n        \" -z \\\"`grep __regex_t regex.h`\\\"\";\n \n #define    OSF_NAMESPACE_A_TEST_CT  4\n-tTestDesc aOsf_Namespace_ATests[] = {\n+static tTestDesc aOsf_Namespace_ATests[] = {\n   { TT_TEST,     zOsf_Namespace_ATest0,   0 /* unused */ },\n   { TT_TEST,     zOsf_Namespace_ATest1,   0 /* unused */ },\n   { TT_TEST,     zOsf_Namespace_ATest2,   0 /* unused */ },\n@@ -3169,7 +3169,7 @@ tTestDesc aOsf_Namespace_ATests[] = {\n /*\n  *  Fix Command Arguments for Osf_Namespace_A\n  */\n-const char* apzOsf_Namespace_APatch[] = {\n+static const char* apzOsf_Namespace_APatch[] = {\n     \"format\",\n     \"__%0\",\n     \"reg(ex|off|match)_t\",\n@@ -3212,7 +3212,7 @@ tSCC zOsf_Namespace_CTest3[] =\n        \" -z \\\"`grep __regex_t regex.h`\\\"\";\n \n #define    OSF_NAMESPACE_C_TEST_CT  5\n-tTestDesc aOsf_Namespace_CTests[] = {\n+static tTestDesc aOsf_Namespace_CTests[] = {\n   { TT_TEST,     zOsf_Namespace_CTest0,   0 /* unused */ },\n   { TT_TEST,     zOsf_Namespace_CTest1,   0 /* unused */ },\n   { TT_TEST,     zOsf_Namespace_CTest2,   0 /* unused */ },\n@@ -3222,7 +3222,7 @@ tTestDesc aOsf_Namespace_CTests[] = {\n /*\n  *  Fix Command Arguments for Osf_Namespace_C\n  */\n-const char* apzOsf_Namespace_CPatch[] = {\n+static const char* apzOsf_Namespace_CPatch[] = {\n     \"format\",\n     \"%0\\n\\\n typedef __regex_t\\tregex_t;\\n\\\n@@ -3255,13 +3255,13 @@ tSCC zPthread_Page_SizeSelect0[] =\n        \"^int __page_size\";\n \n #define    PTHREAD_PAGE_SIZE_TEST_CT  1\n-tTestDesc aPthread_Page_SizeTests[] = {\n+static tTestDesc aPthread_Page_SizeTests[] = {\n   { TT_EGREP,    zPthread_Page_SizeSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Pthread_Page_Size\n  */\n-const char* apzPthread_Page_SizePatch[] = {\n+static const char* apzPthread_Page_SizePatch[] = {\n     \"format\",\n     \"extern %0\",\n     (char*)NULL };\n@@ -3291,13 +3291,13 @@ tSCC zRead_Ret_TypeSelect0[] =\n        \"extern int\\t.*, fread\\\\(\\\\), fwrite\\\\(\\\\)\";\n \n #define    READ_RET_TYPE_TEST_CT  1\n-tTestDesc aRead_Ret_TypeTests[] = {\n+static tTestDesc aRead_Ret_TypeTests[] = {\n   { TT_EGREP,    zRead_Ret_TypeSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Read_Ret_Type\n  */\n-const char* apzRead_Ret_TypePatch[] = {\n+static const char* apzRead_Ret_TypePatch[] = {\n     \"format\",\n     \"extern unsigned int fread(), fwrite();\\n\\\n %1%2\",\n@@ -3329,13 +3329,13 @@ tSCC zRs6000_DoubleSelect0[] =\n        \"[^a-zA-Z_]class\\\\(\";\n \n #define    RS6000_DOUBLE_TEST_CT  1\n-tTestDesc aRs6000_DoubleTests[] = {\n+static tTestDesc aRs6000_DoubleTests[] = {\n   { TT_EGREP,    zRs6000_DoubleSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Rs6000_Double\n  */\n-const char* apzRs6000_DoublePatch[] = {\n+static const char* apzRs6000_DoublePatch[] = {\n     \"format\",\n     \"#ifndef __cplusplus\\n\\\n %0\\n\\\n@@ -3368,13 +3368,13 @@ tSCC zRs6000_FchmodSelect0[] =\n        \"fchmod\\\\(char \\\\*\";\n \n #define    RS6000_FCHMOD_TEST_CT  1\n-tTestDesc aRs6000_FchmodTests[] = {\n+static tTestDesc aRs6000_FchmodTests[] = {\n   { TT_EGREP,    zRs6000_FchmodSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Rs6000_Fchmod\n  */\n-const char* apzRs6000_FchmodPatch[] = {\n+static const char* apzRs6000_FchmodPatch[] = {\n     \"format\",\n     \"fchmod(int\",\n     (char*)NULL };\n@@ -3404,13 +3404,13 @@ tSCC zRs6000_ParamSelect0[] =\n        \"rename\\\\(const char \\\\*old, const char \\\\*new\\\\)\";\n \n #define    RS6000_PARAM_TEST_CT  1\n-tTestDesc aRs6000_ParamTests[] = {\n+static tTestDesc aRs6000_ParamTests[] = {\n   { TT_EGREP,    zRs6000_ParamSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Rs6000_Param\n  */\n-const char* apzRs6000_ParamPatch[] = {\n+static const char* apzRs6000_ParamPatch[] = {\n     \"format\",\n     \"rename(const char *_old, const char *_new)\",\n     (char*)NULL };\n@@ -3442,13 +3442,13 @@ tSCC zSco_Static_FuncSelect0[] =\n        \"^static int\";\n \n #define    SCO_STATIC_FUNC_TEST_CT  1\n-tTestDesc aSco_Static_FuncTests[] = {\n+static tTestDesc aSco_Static_FuncTests[] = {\n   { TT_EGREP,    zSco_Static_FuncSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Sco_Static_Func\n  */\n-const char* apzSco_Static_FuncPatch[] = { \"sed\",\n+static const char* apzSco_Static_FuncPatch[] = { \"sed\",\n     \"-e\", \"/^static int/i\\\\\\n\\\n #if __cplusplus\\\\\\n\\\n extern \\\"C\\\" {\\\\\\n\\\n@@ -3485,13 +3485,13 @@ tSCC zSco_Strict_AnsiSelect0[] =\n        \"^[ \\t]*#[ \\t]*if.*!__STDC__\";\n \n #define    SCO_STRICT_ANSI_TEST_CT  1\n-tTestDesc aSco_Strict_AnsiTests[] = {\n+static tTestDesc aSco_Strict_AnsiTests[] = {\n   { TT_EGREP,    zSco_Strict_AnsiSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Sco_Strict_Ansi\n  */\n-const char* apzSco_Strict_AnsiPatch[] = {\n+static const char* apzSco_Strict_AnsiPatch[] = {\n     \"format\",\n     \"%1defined(__STRICT_ANSI__)%2\",\n     \"^([ \\t]*#[ \\t]*if[ \\t].*!)__STDC__(.*)\",\n@@ -3524,13 +3524,13 @@ tSCC zSco_UtimeSelect0[] =\n        \"\\\\(const char \\\\*, struct utimbuf \\\\*\\\\);\";\n \n #define    SCO_UTIME_TEST_CT  1\n-tTestDesc aSco_UtimeTests[] = {\n+static tTestDesc aSco_UtimeTests[] = {\n   { TT_EGREP,    zSco_UtimeSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Sco_Utime\n  */\n-const char* apzSco_UtimePatch[] = {\n+static const char* apzSco_UtimePatch[] = {\n     \"format\",\n     \"(const char *, const struct utimbuf *);\",\n     (char*)NULL };\n@@ -3560,13 +3560,13 @@ tSCC zStatsswtchSelect0[] =\n        \"boottime$\";\n \n #define    STATSSWTCH_TEST_CT  1\n-tTestDesc aStatsswtchTests[] = {\n+static tTestDesc aStatsswtchTests[] = {\n   { TT_EGREP,    zStatsswtchSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Statsswtch\n  */\n-const char* apzStatsswtchPatch[] = {\n+static const char* apzStatsswtchPatch[] = {\n     \"format\",\n     \"boottime;\",\n     (char*)NULL };\n@@ -3596,13 +3596,13 @@ tSCC zStdio_Stdarg_HBypass0[] =\n        \"include.*(stdarg.h|machine/ansi.h)\";\n \n #define    STDIO_STDARG_H_TEST_CT  1\n-tTestDesc aStdio_Stdarg_HTests[] = {\n+static tTestDesc aStdio_Stdarg_HTests[] = {\n   { TT_NEGREP,   zStdio_Stdarg_HBypass0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Stdio_Stdarg_H\n  */\n-const char* apzStdio_Stdarg_HPatch[] = {\n+static const char* apzStdio_Stdarg_HPatch[] = {\n     \"wrap\",\n     \"#define __need___va_list\\n\\\n #include <stdarg.h>\\n\",\n@@ -3633,13 +3633,13 @@ tSCC zStdio_Va_ListBypass0[] =\n        \"__gnuc_va_list|_BSD_VA_LIST_\";\n \n #define    STDIO_VA_LIST_TEST_CT  1\n-tTestDesc aStdio_Va_ListTests[] = {\n+static tTestDesc aStdio_Va_ListTests[] = {\n   { TT_NEGREP,   zStdio_Va_ListBypass0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Stdio_Va_List\n  */\n-const char* apzStdio_Va_ListPatch[] = { \"sed\",\n+static const char* apzStdio_Va_ListPatch[] = { \"sed\",\n     \"-e\", \"s@ va_list @ __gnuc_va_list @\\n\\\n s@ va_list)@ __gnuc_va_list)@\\n\\\n s@ _VA_LIST_));@ __gnuc_va_list));@\\n\\\n@@ -3678,13 +3678,13 @@ tSCC zStruct_FileSelect0[] =\n        \"^.*xdrstdio_create.*struct __file_s\";\n \n #define    STRUCT_FILE_TEST_CT  1\n-tTestDesc aStruct_FileTests[] = {\n+static tTestDesc aStruct_FileTests[] = {\n   { TT_EGREP,    zStruct_FileSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Struct_File\n  */\n-const char* apzStruct_FilePatch[] = {\n+static const char* apzStruct_FilePatch[] = {\n     \"format\",\n     \"struct __file_s;\\n\\\n %0\",\n@@ -3721,14 +3721,14 @@ tSCC zStruct_SockaddrBypass0[] =\n        \"<sys/socket.h>\";\n \n #define    STRUCT_SOCKADDR_TEST_CT  2\n-tTestDesc aStruct_SockaddrTests[] = {\n+static tTestDesc aStruct_SockaddrTests[] = {\n   { TT_NEGREP,   zStruct_SockaddrBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zStruct_SockaddrSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Struct_Sockaddr\n  */\n-const char* apzStruct_SockaddrPatch[] = {\n+static const char* apzStruct_SockaddrPatch[] = {\n     \"format\",\n     \"struct sockaddr;\\n\\\n %0\",\n@@ -3759,13 +3759,13 @@ tSCC zSun_Auth_ProtoSelect0[] =\n        \"\\\\(\\\\*[a-z][a-z_]*\\\\)\\\\(\\\\)\";\n \n #define    SUN_AUTH_PROTO_TEST_CT  1\n-tTestDesc aSun_Auth_ProtoTests[] = {\n+static tTestDesc aSun_Auth_ProtoTests[] = {\n   { TT_EGREP,    zSun_Auth_ProtoSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Sun_Auth_Proto\n  */\n-const char* apzSun_Auth_ProtoPatch[] = {\n+static const char* apzSun_Auth_ProtoPatch[] = {\n     \"format\",\n     \"#ifdef __cplusplus\\n\\\n %1(...);%2\\n\\\n@@ -3800,13 +3800,13 @@ tSCC zSun_Bogus_IfdefSelect0[] =\n        \"#ifdef(.*\\\\|\\\\|.*)\";\n \n #define    SUN_BOGUS_IFDEF_TEST_CT  1\n-tTestDesc aSun_Bogus_IfdefTests[] = {\n+static tTestDesc aSun_Bogus_IfdefTests[] = {\n   { TT_EGREP,    zSun_Bogus_IfdefSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Sun_Bogus_Ifdef\n  */\n-const char* apzSun_Bogus_IfdefPatch[] = {\n+static const char* apzSun_Bogus_IfdefPatch[] = {\n     \"format\",\n     \"#if%1\",\n     (char*)NULL };\n@@ -3836,13 +3836,13 @@ tSCC zSun_CatmacroSelect0[] =\n        \"^#define[ \\t]+CAT\\\\(a,b\\\\).*\";\n \n #define    SUN_CATMACRO_TEST_CT  1\n-tTestDesc aSun_CatmacroTests[] = {\n+static tTestDesc aSun_CatmacroTests[] = {\n   { TT_EGREP,    zSun_CatmacroSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Sun_Catmacro\n  */\n-const char* apzSun_CatmacroPatch[] = {\n+static const char* apzSun_CatmacroPatch[] = {\n     \"format\",\n     \"#ifdef __STDC__\\n\\\n #  define CAT(a,b) a##b\\n\\\n@@ -3874,7 +3874,7 @@ tSCC zSun_MallocList[] =\n /*\n  *  Fix Command Arguments for Sun_Malloc\n  */\n-const char* apzSun_MallocPatch[] = { \"sed\",\n+static const char* apzSun_MallocPatch[] = { \"sed\",\n     \"-e\", \"s/typedef[ \\t]char \\\\*\\tmalloc_t/typedef void \\\\*\\tmalloc_t/g\",\n     \"-e\", \"s/int[ \\t][ \\t]*free/void\\tfree/g\",\n     \"-e\", \"s/char\\\\([ \\t]*\\\\*[ \\t]*malloc\\\\)/void\\\\1/g\",\n@@ -3907,13 +3907,13 @@ tSCC zSun_Rusers_SemiSelect0[] =\n        \"_cnt$\";\n \n #define    SUN_RUSERS_SEMI_TEST_CT  1\n-tTestDesc aSun_Rusers_SemiTests[] = {\n+static tTestDesc aSun_Rusers_SemiTests[] = {\n   { TT_EGREP,    zSun_Rusers_SemiSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Sun_Rusers_Semi\n  */\n-const char* apzSun_Rusers_SemiPatch[] = { \"sed\",\n+static const char* apzSun_Rusers_SemiPatch[] = { \"sed\",\n     \"-e\", \"/^struct/,/^};/s/_cnt$/_cnt;/\",\n     (char*)NULL };\n \n@@ -3942,13 +3942,13 @@ tSCC zSun_SignalSelect0[] =\n        \"^void\\t\\\\(\\\\*signal\\\\(\\\\)\\\\)\\\\(\\\\);.*\";\n \n #define    SUN_SIGNAL_TEST_CT  1\n-tTestDesc aSun_SignalTests[] = {\n+static tTestDesc aSun_SignalTests[] = {\n   { TT_EGREP,    zSun_SignalSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Sun_Signal\n  */\n-const char* apzSun_SignalPatch[] = {\n+static const char* apzSun_SignalPatch[] = {\n     \"format\",\n     \"#ifdef __cplusplus\\n\\\n void\\t(*signal(...))(...);\\n\\\n@@ -3988,14 +3988,14 @@ tSCC zSunos_Matherr_DeclBypass0[] =\n        \"matherr.*struct exception\";\n \n #define    SUNOS_MATHERR_DECL_TEST_CT  2\n-tTestDesc aSunos_Matherr_DeclTests[] = {\n+static tTestDesc aSunos_Matherr_DeclTests[] = {\n   { TT_NEGREP,   zSunos_Matherr_DeclBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zSunos_Matherr_DeclSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Sunos_Matherr_Decl\n  */\n-const char* apzSunos_Matherr_DeclPatch[] = {\n+static const char* apzSunos_Matherr_DeclPatch[] = {\n     \"wrap\",\n     \"struct exception;\\n\",\n     (char*)NULL };\n@@ -4025,13 +4025,13 @@ tSCC zSunos_StrlenSelect0[] =\n        \"int[ \\t]*strlen\\\\(\\\\);(.*)\";\n \n #define    SUNOS_STRLEN_TEST_CT  1\n-tTestDesc aSunos_StrlenTests[] = {\n+static tTestDesc aSunos_StrlenTests[] = {\n   { TT_EGREP,    zSunos_StrlenSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Sunos_Strlen\n  */\n-const char* apzSunos_StrlenPatch[] = {\n+static const char* apzSunos_StrlenPatch[] = {\n     \"format\",\n     \"__SIZE_TYPE__ strlen();%1\",\n     (char*)NULL };\n@@ -4061,13 +4061,13 @@ tSCC zSvr4__PSelect0[] =\n        \"^#define[ \\t]+__P.*\";\n \n #define    SVR4__P_TEST_CT  1\n-tTestDesc aSvr4__PTests[] = {\n+static tTestDesc aSvr4__PTests[] = {\n   { TT_EGREP,    zSvr4__PSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Svr4__P\n  */\n-const char* apzSvr4__PPatch[] = {\n+static const char* apzSvr4__PPatch[] = {\n     \"format\",\n     \"#ifndef __P\\n\\\n %0\\n\\\n@@ -4099,13 +4099,13 @@ tSCC zSvr4_GetcwdSelect0[] =\n        \"getcwd\\\\(char \\\\*, int\\\\)\";\n \n #define    SVR4_GETCWD_TEST_CT  1\n-tTestDesc aSvr4_GetcwdTests[] = {\n+static tTestDesc aSvr4_GetcwdTests[] = {\n   { TT_EGREP,    zSvr4_GetcwdSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Svr4_Getcwd\n  */\n-const char* apzSvr4_GetcwdPatch[] = {\n+static const char* apzSvr4_GetcwdPatch[] = {\n     \"format\",\n     \"getcwd(char *, size_t)\",\n     (char*)NULL };\n@@ -4135,13 +4135,13 @@ tSCC zSvr4_ProfilSelect0[] =\n        \"profil\\\\(unsigned short \\\\*, unsigned int, unsigned int, unsigned int\\\\)\";\n \n #define    SVR4_PROFIL_TEST_CT  1\n-tTestDesc aSvr4_ProfilTests[] = {\n+static tTestDesc aSvr4_ProfilTests[] = {\n   { TT_EGREP,    zSvr4_ProfilSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Svr4_Profil\n  */\n-const char* apzSvr4_ProfilPatch[] = {\n+static const char* apzSvr4_ProfilPatch[] = {\n     \"format\",\n     \"profil(unsigned short *, size_t, int, unsigned int)\",\n     (char*)NULL };\n@@ -4177,14 +4177,14 @@ tSCC zGnu_TypesBypass0[] =\n        \"_GCC_(PTRDIFF|SIZE|WCHAR)_T\";\n \n #define    GNU_TYPES_TEST_CT  2\n-tTestDesc aGnu_TypesTests[] = {\n+static tTestDesc aGnu_TypesTests[] = {\n   { TT_NEGREP,   zGnu_TypesBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zGnu_TypesSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Gnu_Types\n  */\n-const char* apzGnu_TypesPatch[] = {\n+static const char* apzGnu_TypesPatch[] = {\n     \"gnu_type\",\n     (char*)NULL };\n \n@@ -4211,7 +4211,7 @@ tSCC zSysv68_StringList[] =\n /*\n  *  Fix Command Arguments for Sysv68_String\n  */\n-const char* apzSysv68_StringPatch[] = { \"sed\",\n+static const char* apzSysv68_StringPatch[] = { \"sed\",\n     \"-e\", \"s/extern[ \\t]*int[ \\t]*strlen();/extern unsigned int strlen();/\",\n     \"-e\", \"s/extern[ \\t]*int[ \\t]*ffs[ \\t]*(long);/extern int ffs(int);/\",\n     \"-e\", \"s/strdup(char \\\\*s1);/strdup(const char *s1);/\",\n@@ -4250,13 +4250,13 @@ tSCC zSysz_Stdlib_For_SunSelect0[] =\n        \"char[ \\t]*\\\\*[ \\t]*(calloc|malloc|realloc|bsearch)[ \\t]*\\\\(\";\n \n #define    SYSZ_STDLIB_FOR_SUN_TEST_CT  1\n-tTestDesc aSysz_Stdlib_For_SunTests[] = {\n+static tTestDesc aSysz_Stdlib_For_SunTests[] = {\n   { TT_EGREP,    zSysz_Stdlib_For_SunSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Sysz_Stdlib_For_Sun\n  */\n-const char* apzSysz_Stdlib_For_SunPatch[] = {\n+static const char* apzSysz_Stdlib_For_SunPatch[] = {\n     \"format\",\n     \"void *\\t%1(\",\n     (char*)NULL };\n@@ -4286,13 +4286,13 @@ tSCC zTinfo_CplusplusSelect0[] =\n        \"[ \\t]_cplusplus\";\n \n #define    TINFO_CPLUSPLUS_TEST_CT  1\n-tTestDesc aTinfo_CplusplusTests[] = {\n+static tTestDesc aTinfo_CplusplusTests[] = {\n   { TT_EGREP,    zTinfo_CplusplusSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Tinfo_Cplusplus\n  */\n-const char* apzTinfo_CplusplusPatch[] = {\n+static const char* apzTinfo_CplusplusPatch[] = {\n     \"format\",\n     \" __cplusplus\",\n     (char*)NULL };\n@@ -4322,13 +4322,13 @@ tSCC zUltrix_Atof_ParamSelect0[] =\n        \"atof\\\\([ \\t]*char\";\n \n #define    ULTRIX_ATOF_PARAM_TEST_CT  1\n-tTestDesc aUltrix_Atof_ParamTests[] = {\n+static tTestDesc aUltrix_Atof_ParamTests[] = {\n   { TT_EGREP,    zUltrix_Atof_ParamSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Ultrix_Atof_Param\n  */\n-const char* apzUltrix_Atof_ParamPatch[] = {\n+static const char* apzUltrix_Atof_ParamPatch[] = {\n     \"format\",\n     \"atof(const char\",\n     (char*)NULL };\n@@ -4358,13 +4358,13 @@ tSCC zUltrix_ConstSelect0[] =\n        \"perror\\\\( char \\\\*\";\n \n #define    ULTRIX_CONST_TEST_CT  1\n-tTestDesc aUltrix_ConstTests[] = {\n+static tTestDesc aUltrix_ConstTests[] = {\n   { TT_EGREP,    zUltrix_ConstSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Ultrix_Const\n  */\n-const char* apzUltrix_ConstPatch[] = {\n+static const char* apzUltrix_ConstPatch[] = {\n     \"format\",\n     \"%1 const %3 *__\",\n     \"([ \\t*](perror|fputs|fwrite|scanf|fscanf)\\\\(.*)[ \\t]+(char|void) \\\\*__\",\n@@ -4395,13 +4395,13 @@ tSCC zUltrix_Const2Select0[] =\n        \"\\\\*fopen\\\\( char \\\\*\";\n \n #define    ULTRIX_CONST2_TEST_CT  1\n-tTestDesc aUltrix_Const2Tests[] = {\n+static tTestDesc aUltrix_Const2Tests[] = {\n   { TT_EGREP,    zUltrix_Const2Select0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Ultrix_Const2\n  */\n-const char* apzUltrix_Const2Patch[] = {\n+static const char* apzUltrix_Const2Patch[] = {\n     \"format\",\n     \"%1( const char *%3, const char *\",\n     \"([ \\t*](fopen|sscanf|popen|tempnam))\\\\([ \\t]*char[ \\t]*\\\\*([^,]*),[ \\t]*char[ \\t]*\\\\*[ \\t]*\",\n@@ -4432,13 +4432,13 @@ tSCC zUltrix_Fix_FixprotoSelect0[] =\n        \"ULTRIX\";\n \n #define    ULTRIX_FIX_FIXPROTO_TEST_CT  1\n-tTestDesc aUltrix_Fix_FixprotoTests[] = {\n+static tTestDesc aUltrix_Fix_FixprotoTests[] = {\n   { TT_EGREP,    zUltrix_Fix_FixprotoSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Ultrix_Fix_Fixproto\n  */\n-const char* apzUltrix_Fix_FixprotoPatch[] = {\n+static const char* apzUltrix_Fix_FixprotoPatch[] = {\n     \"format\",\n     \"struct utsname;\\n\\\n %0\",\n@@ -4470,13 +4470,13 @@ tSCC zUltrix_IfdefSelect0[] =\n        \"^#ifdef KERNEL[ \\t]+&&\";\n \n #define    ULTRIX_IFDEF_TEST_CT  1\n-tTestDesc aUltrix_IfdefTests[] = {\n+static tTestDesc aUltrix_IfdefTests[] = {\n   { TT_EGREP,    zUltrix_IfdefSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Ultrix_Ifdef\n  */\n-const char* apzUltrix_IfdefPatch[] = {\n+static const char* apzUltrix_IfdefPatch[] = {\n     \"format\",\n     \"#if defined(KERNEL) &&\",\n     (char*)NULL };\n@@ -4506,13 +4506,13 @@ tSCC zUltrix_Math_IfdefSelect0[] =\n        \"^(#if.*)\\\\|\\\\|[ \\t]+CC\\\\$[a-z]+\";\n \n #define    ULTRIX_MATH_IFDEF_TEST_CT  1\n-tTestDesc aUltrix_Math_IfdefTests[] = {\n+static tTestDesc aUltrix_Math_IfdefTests[] = {\n   { TT_EGREP,    zUltrix_Math_IfdefSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Ultrix_Math_Ifdef\n  */\n-const char* apzUltrix_Math_IfdefPatch[] = {\n+static const char* apzUltrix_Math_IfdefPatch[] = {\n     \"format\",\n     \"%1\",\n     (char*)NULL };\n@@ -4542,13 +4542,13 @@ tSCC zUltrix_Nested_IoctlSelect0[] =\n        \"^/\\\\* #define SIOCSCREEN\";\n \n #define    ULTRIX_NESTED_IOCTL_TEST_CT  1\n-tTestDesc aUltrix_Nested_IoctlTests[] = {\n+static tTestDesc aUltrix_Nested_IoctlTests[] = {\n   { TT_EGREP,    zUltrix_Nested_IoctlSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Ultrix_Nested_Ioctl\n  */\n-const char* apzUltrix_Nested_IoctlPatch[] = { \"sed\",\n+static const char* apzUltrix_Nested_IoctlPatch[] = { \"sed\",\n     \"-e\", \"/^\\\\/\\\\* #define SIOCSCREEN/s@/\\\\* screend@*//* screend@\",\n     (char*)NULL };\n \n@@ -4577,13 +4577,13 @@ tSCC zUltrix_Nested_SvcSelect0[] =\n        \"^ \\\\*[ \\t]*int protocol;  */\\\\*\";\n \n #define    ULTRIX_NESTED_SVC_TEST_CT  1\n-tTestDesc aUltrix_Nested_SvcTests[] = {\n+static tTestDesc aUltrix_Nested_SvcTests[] = {\n   { TT_EGREP,    zUltrix_Nested_SvcSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Ultrix_Nested_Svc\n  */\n-const char* apzUltrix_Nested_SvcPatch[] = { \"sed\",\n+static const char* apzUltrix_Nested_SvcPatch[] = { \"sed\",\n     \"-e\", \"s@^\\\\( \\\\*\\tint protocol;  \\\\)/\\\\*@\\\\1*/ /*@\",\n     (char*)NULL };\n \n@@ -4612,13 +4612,13 @@ tSCC zUltrix_StatSelect0[] =\n        \"@\\\\(#\\\\)stat\\\\.h.*6\\\\.1.*\\\\(ULTRIX\\\\)\";\n \n #define    ULTRIX_STAT_TEST_CT  1\n-tTestDesc aUltrix_StatTests[] = {\n+static tTestDesc aUltrix_StatTests[] = {\n   { TT_EGREP,    zUltrix_StatSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Ultrix_Stat\n  */\n-const char* apzUltrix_StatPatch[] = { \"sed\",\n+static const char* apzUltrix_StatPatch[] = { \"sed\",\n     \"-e\", \"/^#define[ \\t]S_IFPORT[ \\t]*S_IFIFO$/a\\\\\\n\\\n \\\\\\n\\\n /* macro to test for symbolic link */\\\\\\n\\\n@@ -4653,13 +4653,13 @@ tSCC zUltrix_StaticSelect0[] =\n        \"#include \\\"r[34]_cpu\";\n \n #define    ULTRIX_STATIC_TEST_CT  1\n-tTestDesc aUltrix_StaticTests[] = {\n+static tTestDesc aUltrix_StaticTests[] = {\n   { TT_EGREP,    zUltrix_StaticSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Ultrix_Static\n  */\n-const char* apzUltrix_StaticPatch[] = { \"sed\",\n+static const char* apzUltrix_StaticPatch[] = { \"sed\",\n     \"-e\", \"s/^static struct tlb_pid_state/struct tlb_pid_state/\",\n     \"-e\", \"s/^#include \\\"r3_cpu\\\\.h\\\"$/#include <machine\\\\/r3_cpu\\\\.h>/\",\n     \"-e\", \"s/^#include \\\"r4_cpu\\\\.h\\\"$/#include <machine\\\\/r4_cpu\\\\.h>/\",\n@@ -4690,13 +4690,13 @@ tSCC zUltrix_StringsSelect0[] =\n        \"@\\\\(#\\\\)strings\\\\.h.*6\\\\.1.*\\\\(ULTRIX\\\\)\";\n \n #define    ULTRIX_STRINGS_TEST_CT  1\n-tTestDesc aUltrix_StringsTests[] = {\n+static tTestDesc aUltrix_StringsTests[] = {\n   { TT_EGREP,    zUltrix_StringsSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Ultrix_Strings\n  */\n-const char* apzUltrix_StringsPatch[] = {\n+static const char* apzUltrix_StringsPatch[] = {\n     \"wrap\",\n     (char*)NULL };\n \n@@ -4730,14 +4730,14 @@ tSCC zUndefine_NullBypass0[] =\n        \"#[ \\t]*(ifn|un)def[ \\t]+NULL($|[ \\t\\r])\";\n \n #define    UNDEFINE_NULL_TEST_CT  2\n-tTestDesc aUndefine_NullTests[] = {\n+static tTestDesc aUndefine_NullTests[] = {\n   { TT_NEGREP,   zUndefine_NullBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zUndefine_NullSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Undefine_Null\n  */\n-const char* apzUndefine_NullPatch[] = {\n+static const char* apzUndefine_NullPatch[] = {\n     \"format\",\n     \"#ifndef NULL%2\\n\\\n #define NULL%1%2\\n\\\n@@ -4784,14 +4784,14 @@ tSCC zUw7_Byteorder_FixTest0[] =\n        \"-f $DESTDIR/sys/byteorder.h\";\n \n #define    UW7_BYTEORDER_FIX_TEST_CT  2\n-tTestDesc aUw7_Byteorder_FixTests[] = {\n+static tTestDesc aUw7_Byteorder_FixTests[] = {\n   { TT_TEST,     zUw7_Byteorder_FixTest0,   0 /* unused */ },\n   { TT_EGREP,    zUw7_Byteorder_FixSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Uw7_Byteorder_Fix\n  */\n-const char* apzUw7_Byteorder_FixPatch[] = {\n+static const char* apzUw7_Byteorder_FixPatch[] = {\n     \"format\",\n     \"\",\n     \"^extern.*(htons|ntohs).*\\\\(in_port_t\\\\).*\\n\",\n@@ -4822,13 +4822,13 @@ tSCC zVa_I960_MacroSelect0[] =\n        \"__(vsiz|vali|vpad|alignof__)\";\n \n #define    VA_I960_MACRO_TEST_CT  1\n-tTestDesc aVa_I960_MacroTests[] = {\n+static tTestDesc aVa_I960_MacroTests[] = {\n   { TT_EGREP,    zVa_I960_MacroSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Va_I960_Macro\n  */\n-const char* apzVa_I960_MacroPatch[] = {\n+static const char* apzVa_I960_MacroPatch[] = {\n     \"format\",\n     \"__vx%1\",\n     (char*)NULL };\n@@ -4858,13 +4858,13 @@ tSCC zVoid_NullSelect0[] =\n        \"^#[ \\t]*define[ \\t]+NULL[ \\t]+\\\\(\\\\(void[ \\t]*\\\\*\\\\)0\\\\)\";\n \n #define    VOID_NULL_TEST_CT  1\n-tTestDesc aVoid_NullTests[] = {\n+static tTestDesc aVoid_NullTests[] = {\n   { TT_EGREP,    zVoid_NullSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Void_Null\n  */\n-const char* apzVoid_NullPatch[] = {\n+static const char* apzVoid_NullPatch[] = {\n     \"format\",\n     \"#define NULL 0\",\n     (char*)NULL };\n@@ -4894,13 +4894,13 @@ tSCC zVxworks_Gcc_ProblemSelect0[] =\n        \"__GNUC_TYPEOF_FEATURE_BROKEN_USE_DEFAULT_UNTIL_FIXED__\";\n \n #define    VXWORKS_GCC_PROBLEM_TEST_CT  1\n-tTestDesc aVxworks_Gcc_ProblemTests[] = {\n+static tTestDesc aVxworks_Gcc_ProblemTests[] = {\n   { TT_EGREP,    zVxworks_Gcc_ProblemSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Vxworks_Gcc_Problem\n  */\n-const char* apzVxworks_Gcc_ProblemPatch[] = { \"sed\",\n+static const char* apzVxworks_Gcc_ProblemPatch[] = { \"sed\",\n     \"-e\", \"s/#ifdef __GNUC_TYPEOF_FEATURE_BROKEN_USE_DEFAULT_UNTIL_FIXED__/#if 1/\",\n     \"-e\", \"/[ \\t]size_t/i\\\\\\n\\\n #ifndef _GCC_SIZE_T\\\\\\n\\\n@@ -4944,13 +4944,13 @@ tSCC zVxworks_Needs_VxtypesSelect0[] =\n        \"uint_t([ \\t]+_clocks_per_sec)\";\n \n #define    VXWORKS_NEEDS_VXTYPES_TEST_CT  1\n-tTestDesc aVxworks_Needs_VxtypesTests[] = {\n+static tTestDesc aVxworks_Needs_VxtypesTests[] = {\n   { TT_EGREP,    zVxworks_Needs_VxtypesSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Vxworks_Needs_Vxtypes\n  */\n-const char* apzVxworks_Needs_VxtypesPatch[] = {\n+static const char* apzVxworks_Needs_VxtypesPatch[] = {\n     \"format\",\n     \"unsigned int%1\",\n     (char*)NULL };\n@@ -4990,7 +4990,7 @@ tSCC zVxworks_Needs_VxworksTest2[] =\n        \" -n \\\"`egrep ULONG $file`\\\"\";\n \n #define    VXWORKS_NEEDS_VXWORKS_TEST_CT  4\n-tTestDesc aVxworks_Needs_VxworksTests[] = {\n+static tTestDesc aVxworks_Needs_VxworksTests[] = {\n   { TT_TEST,     zVxworks_Needs_VxworksTest0,   0 /* unused */ },\n   { TT_TEST,     zVxworks_Needs_VxworksTest1,   0 /* unused */ },\n   { TT_TEST,     zVxworks_Needs_VxworksTest2,   0 /* unused */ },\n@@ -4999,7 +4999,7 @@ tTestDesc aVxworks_Needs_VxworksTests[] = {\n /*\n  *  Fix Command Arguments for Vxworks_Needs_Vxworks\n  */\n-const char* apzVxworks_Needs_VxworksPatch[] = { \"sed\",\n+static const char* apzVxworks_Needs_VxworksPatch[] = { \"sed\",\n     \"-e\", \"/#[ \\t]define[ \\t][ \\t]*__INCstath/a\\\\\\n\\\n #include <types/vxTypesOld.h>\\n\",\n     (char*)NULL };\n@@ -5035,14 +5035,14 @@ tSCC zVxworks_TimeTest0[] =\n        \" -r vxWorks.h\";\n \n #define    VXWORKS_TIME_TEST_CT  2\n-tTestDesc aVxworks_TimeTests[] = {\n+static tTestDesc aVxworks_TimeTests[] = {\n   { TT_TEST,     zVxworks_TimeTest0,   0 /* unused */ },\n   { TT_EGREP,    zVxworks_TimeSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Vxworks_Time\n  */\n-const char* apzVxworks_TimePatch[] = {\n+static const char* apzVxworks_TimePatch[] = {\n     \"format\",\n     \"#ifndef __gcc_VOIDFUNCPTR_defined\\n\\\n #ifdef __cplusplus\\n\\\n@@ -5086,14 +5086,14 @@ tSCC zX11_ClassBypass0[] =\n        \"__cplusplus\";\n \n #define    X11_CLASS_TEST_CT  2\n-tTestDesc aX11_ClassTests[] = {\n+static tTestDesc aX11_ClassTests[] = {\n   { TT_NEGREP,   zX11_ClassBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zX11_ClassSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for X11_Class\n  */\n-const char* apzX11_ClassPatch[] = {\n+static const char* apzX11_ClassPatch[] = {\n     \"format\",\n     \"#ifdef __cplusplus\\n\\\n %1c_class;%2\\n\\\n@@ -5133,14 +5133,14 @@ tSCC zX11_Class_UsageBypass0[] =\n        \"__cplusplus\";\n \n #define    X11_CLASS_USAGE_TEST_CT  2\n-tTestDesc aX11_Class_UsageTests[] = {\n+static tTestDesc aX11_Class_UsageTests[] = {\n   { TT_NEGREP,   zX11_Class_UsageBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zX11_Class_UsageSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for X11_Class_Usage\n  */\n-const char* apzX11_Class_UsagePatch[] = {\n+static const char* apzX11_Class_UsagePatch[] = {\n     \"format\",\n     \" c_class)\",\n     (char*)NULL };\n@@ -5170,13 +5170,13 @@ tSCC zX11_NewBypass0[] =\n        \"__cplusplus\";\n \n #define    X11_NEW_TEST_CT  1\n-tTestDesc aX11_NewTests[] = {\n+static tTestDesc aX11_NewTests[] = {\n   { TT_NEGREP,   zX11_NewBypass0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for X11_New\n  */\n-const char* apzX11_NewPatch[] = { \"sed\",\n+static const char* apzX11_NewPatch[] = { \"sed\",\n     \"-e\", \"/Widget\\told, new;/i\\\\\\n\\\n #ifdef __cplusplus\\\\\\n\\\n \\tWidget\\told, c_new;\\\\\\n\\\n@@ -5211,13 +5211,13 @@ tSCC zX11_SprintfSelect0[] =\n        \"^extern char \\\\*\\tsprintf\\\\(\\\\);$\";\n \n #define    X11_SPRINTF_TEST_CT  1\n-tTestDesc aX11_SprintfTests[] = {\n+static tTestDesc aX11_SprintfTests[] = {\n   { TT_EGREP,    zX11_SprintfSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for X11_Sprintf\n  */\n-const char* apzX11_SprintfPatch[] = {\n+static const char* apzX11_SprintfPatch[] = {\n     \"format\",\n     \"#ifndef __STDC__\\n\\\n %0\\n\\"}, {"sha": "11d8fb5c705c9e2a3bf67af14c154d1080e5b4e8", "filename": "gcc/fixinc/fixlib.h", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3af556f74d0d938e1ad240fe44bedf47e97ce4f5/gcc%2Ffixinc%2Ffixlib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3af556f74d0d938e1ad240fe44bedf47e97ce4f5/gcc%2Ffixinc%2Ffixlib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixlib.h?ref=3af556f74d0d938e1ad240fe44bedf47e97ce4f5", "patch": "@@ -79,6 +79,7 @@ typedef int t_success;\n #define NULLPROCESS\t((pid_t)0)\n \n #define EXIT_PANIC\t99\n+#endif /* NOPROCESS */\n \n #ifndef HAVE_T_BOOL_ENUM\n #define HAVE_T_BOOL_ENUM\n@@ -93,9 +94,6 @@ typedef int apply_fix_p_t;  /* Apply Fix Predicate Type */\n #define APPLY_FIX 0\n #define SKIP_FIX  1\n \n-#define _P_(p)\t()\n-#endif\n-\n #define ENV_TABLE                                    \\\n   _ENV_( pz_machine,   BOOL_TRUE, \"TARGET_MACHINE\",  \\\n          \"output from config.guess\" )                \\\n@@ -194,25 +192,31 @@ extern int gnu_type_map_ct;\n /*\n  *  Exported procedures\n  */\n-char * load_file_data _P_(( FILE* fp ));\n+char * load_file_data PARAMS(( FILE* fp ));\n+\n #ifdef IS_CXX_HEADER_NEEDED\n-t_bool is_cxx_header  _P_(( tCC* filename, tCC* filetext ));\n+t_bool is_cxx_header  PARAMS(( tCC* filename, tCC* filetext ));\n #endif /* IS_CXX_HEADER_NEEDED */\n+\n #ifdef SKIP_QUOTE_NEEDED\n-tCC*   skip_quote  _P_(( char  q, char* text ));\n+tCC*   skip_quote  PARAMS(( char  q, char* text ));\n #endif\n-void   compile_re     _P_(( tCC* pat, regex_t* re, int match,\n-\t\t\t    tCC *e1, tCC *e2 ));\n \n-void apply_fix _P_(( tFixDesc* p_fixd, tCC* filname ));\n-apply_fix_p_t run_test _P_((tCC* t_name, tCC* f_name, tCC* text ));\n+void   compile_re  PARAMS(( tCC* pat, regex_t* re, int match,\n+                            tCC *e1, tCC *e2 ));\n+\n+void   apply_fix   PARAMS(( tFixDesc* p_fixd, tCC* filname ));\n+apply_fix_p_t\n+       run_test    PARAMS(( tCC* t_name, tCC* f_name, tCC* text ));\n \n #ifdef __MSDOS__\n-char* make_raw_shell_str _P_(( char* pz_d, tCC* pz_s, size_t smax ));\n+char*  make_raw_shell_str\n+                   PARAMS(( char* pz_d, tCC* pz_s, size_t smax ));\n #endif\n \n #ifdef MN_NAME_PAT\n-void   mn_get_regexps _P_(( regex_t** label_re, regex_t** name_re,\n-\t\t\t    tCC *who ));\n+void   mn_get_regexps\n+                   PARAMS(( regex_t** label_re, regex_t** name_re,\n+                            tCC *who ));\n #endif\n #endif /* FIXINCLUDES_FIXLIB_H */"}, {"sha": "7a057f65ee67ddce3a78b5c18e3afb1e6255e1d5", "filename": "gcc/fixinc/fixtests.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3af556f74d0d938e1ad240fe44bedf47e97ce4f5/gcc%2Ffixinc%2Ffixtests.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3af556f74d0d938e1ad240fe44bedf47e97ce4f5/gcc%2Ffixinc%2Ffixtests.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixtests.c?ref=3af556f74d0d938e1ad240fe44bedf47e97ce4f5", "patch": "@@ -47,18 +47,20 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"fixlib.h\"\n \n+typedef apply_fix_p_t t_test_proc PARAMS(( tCC* file, tCC* text ));\n+\n typedef struct {\n-    tCC*  test_name;\n-    apply_fix_p_t (*test_proc)();\n+    tCC*         test_name;\n+    t_test_proc* test_proc;\n } test_entry_t;\n \n #define FIX_TEST_TABLE \\\n   _FT_( \"machine_name\",     machine_name_test )\n \n-\n-#define TEST_FOR_FIX_PROC_HEAD( test ) \\\n-static apply_fix_p_t test ( fname, text ) \\\n-    tCC* fname; \\\n+#define TEST_FOR_FIX_PROC_HEAD( test )          \\\n+t_test_proc test;  /* avoid warning */          \\\n+static apply_fix_p_t test ( fname, text )       \\\n+    tCC* fname;                                 \\\n     tCC* text;\n \n "}, {"sha": "2f016f45e9cf0edbad1fe461b1d9bc13ade9aaef", "filename": "gcc/fixinc/server.h", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3af556f74d0d938e1ad240fe44bedf47e97ce4f5/gcc%2Ffixinc%2Fserver.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3af556f74d0d938e1ad240fe44bedf47e97ce4f5/gcc%2Ffixinc%2Fserver.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Fserver.h?ref=3af556f74d0d938e1ad240fe44bedf47e97ce4f5", "patch": "@@ -77,6 +77,7 @@ typedef char *t_pchar;\n #define NULLPROCESS\t((pid_t)0)\n \n #define EXIT_PANIC\t99\n+#endif /* NOPROCESS */\n \n #ifndef HAVE_T_BOOL_ENUM\n #define HAVE_T_BOOL_ENUM\n@@ -86,14 +87,10 @@ typedef enum\n } t_bool;\n #endif\n \n-#define _P_(p)\t()\n-#endif\n-\n-char *run_shell   _P_ (( const char *pzCmd));\n-pid_t proc2_fopen _P_ (( t_pf_pair * p_pair, t_pchar * pp_args));\n-pid_t proc2_open  _P_ (( t_fd_pair * p_pair, t_pchar * pp_args));\n-int chain_open    _P_ (( int in_fd,\n-                         t_pchar * pp_args,\n-                         pid_t * p_child));\n-void close_server _P_ (( void ));\n+char *run_shell   PARAMS (( const char *pzCmd));\n+pid_t proc2_fopen PARAMS (( t_pf_pair * p_pair, t_pchar * pp_args));\n+pid_t proc2_open  PARAMS (( t_fd_pair * p_pair, t_pchar * pp_args));\n+int   chain_open  PARAMS (( int in_fd, t_pchar * pp_args,\n+                            pid_t * p_child));\n+void close_server PARAMS (( void ));\n #endif /* FIXINC_SERVER_H */"}]}