{"sha": "0f15260aeac66189c812a3185f35015808da571d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGYxNTI2MGFlYWM2NjE4OWM4MTJhMzE4NWYzNTAxNTgwOGRhNTcxZA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-08T21:31:07Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-08T21:31:07Z"}, "message": "(make_decl_rtl): Handle flag_volatile_global.\n\nFrom-SVN: r3679", "tree": {"sha": "84f4e1f3dc99348f6c172997c09c19b9ce9f8787", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84f4e1f3dc99348f6c172997c09c19b9ce9f8787"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f15260aeac66189c812a3185f35015808da571d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f15260aeac66189c812a3185f35015808da571d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f15260aeac66189c812a3185f35015808da571d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f15260aeac66189c812a3185f35015808da571d/comments", "author": null, "committer": null, "parents": [{"sha": "38d4d0c2eaa7804fab9fcaee654c011f97bef437", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38d4d0c2eaa7804fab9fcaee654c011f97bef437", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38d4d0c2eaa7804fab9fcaee654c011f97bef437"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "c6d7576c605e4c489190232e5329f297d8af5600", "filename": "gcc/varasm.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f15260aeac66189c812a3185f35015808da571d/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f15260aeac66189c812a3185f35015808da571d/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=0f15260aeac66189c812a3185f35015808da571d", "patch": "@@ -385,7 +385,9 @@ make_decl_rtl (decl, asmspec, top_level)\n \n \t  DECL_RTL (decl) = gen_rtx (MEM, DECL_MODE (decl),\n \t\t\t\t     gen_rtx (SYMBOL_REF, Pmode, name));\n-\t  if (TREE_THIS_VOLATILE (decl))\n+\t  if (TREE_THIS_VOLATILE (decl)\n+\t    || (flag_volatile_global && TREE_CODE (decl) == VAR_DECL\n+\t\t&& TREE_PUBLIC (decl)))\n \t    MEM_VOLATILE_P (DECL_RTL (decl)) = 1;\n \t  if (TREE_READONLY (decl))\n \t    RTX_UNCHANGING_P (DECL_RTL (decl)) = 1;"}]}