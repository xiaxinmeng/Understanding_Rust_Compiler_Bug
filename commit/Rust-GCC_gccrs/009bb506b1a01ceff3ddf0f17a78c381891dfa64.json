{"sha": "009bb506b1a01ceff3ddf0f17a78c381891dfa64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA5YmI1MDZiMWEwMWNlZmYzZGRmMGYxN2E3OGMzODE4OTFkZmE2NA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2018-05-29T17:44:07Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-05-29T17:44:07Z"}, "message": "re PR c++/85883 (class template argument deduction fails in new-expression)\n\n\tPR c++/85883\n\t* init.c (build_new): Handle deducing a class with new\n\twith more than one argument.\n\n\t* g++.dg/cpp1z/class-deduction55.C: New test.\n\t* g++.dg/cpp1z/class-deduction56.C: New test.\n\t* g++.dg/cpp1z/class-deduction57.C: New test.\n\nFrom-SVN: r260901", "tree": {"sha": "f75ef7c06046f84642502dfd0ca4b3d3ba1ceb0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f75ef7c06046f84642502dfd0ca4b3d3ba1ceb0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/009bb506b1a01ceff3ddf0f17a78c381891dfa64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/009bb506b1a01ceff3ddf0f17a78c381891dfa64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/009bb506b1a01ceff3ddf0f17a78c381891dfa64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/009bb506b1a01ceff3ddf0f17a78c381891dfa64/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5baa6f8ebde0cc93ffe0921f572431edf3f85796", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5baa6f8ebde0cc93ffe0921f572431edf3f85796", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5baa6f8ebde0cc93ffe0921f572431edf3f85796"}], "stats": {"total": 76, "additions": 75, "deletions": 1}, "files": [{"sha": "9ccdfbe594f76a3177b0467c8ccdb0dc2d94314e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009bb506b1a01ceff3ddf0f17a78c381891dfa64/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009bb506b1a01ceff3ddf0f17a78c381891dfa64/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=009bb506b1a01ceff3ddf0f17a78c381891dfa64", "patch": "@@ -1,3 +1,9 @@\n+2018-05-29  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/85883\n+\t* init.c (build_new): Handle deducing a class with new\n+\twith more than one argument.\n+\n 2018-05-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/85952"}, {"sha": "b925e843432e783fd3efcbbc9a42f7440d8aabd7", "filename": "gcc/cp/init.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009bb506b1a01ceff3ddf0f17a78c381891dfa64/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009bb506b1a01ceff3ddf0f17a78c381891dfa64/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=009bb506b1a01ceff3ddf0f17a78c381891dfa64", "patch": "@@ -3586,11 +3586,27 @@ build_new (vec<tree, va_gc> **placement, tree type, tree nelts,\n       if (auto_node)\n \t{\n \t  tree d_init = NULL_TREE;\n-\t  if (vec_safe_length (*init) == 1)\n+\t  const size_t len = vec_safe_length (*init);\n+\t  /* E.g. new auto(x) must have exactly one element, or\n+\t     a {} initializer will have one element.  */\n+\t  if (len == 1)\n \t    {\n \t      d_init = (**init)[0];\n \t      d_init = resolve_nondeduced_context (d_init, complain);\n \t    }\n+\t  /* For the rest, e.g. new A(1, 2, 3), create a list.  */\n+\t  else if (len > 1)\n+\t    {\n+\t      unsigned int n;\n+\t      tree t;\n+\t      tree *pp = &d_init;\n+\t      FOR_EACH_VEC_ELT (**init, n, t)\n+\t\t{\n+\t\t  t = resolve_nondeduced_context (t, complain);\n+\t\t  *pp = build_tree_list (NULL_TREE, t);\n+\t\t  pp = &TREE_CHAIN (*pp);\n+\t\t}\n+\t    }\n \t  type = do_auto_deduction (type, d_init, auto_node, complain);\n \t}\n     }"}, {"sha": "83f16eec480c3635f34723e0c8d297b037902439", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009bb506b1a01ceff3ddf0f17a78c381891dfa64/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009bb506b1a01ceff3ddf0f17a78c381891dfa64/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=009bb506b1a01ceff3ddf0f17a78c381891dfa64", "patch": "@@ -1,3 +1,10 @@\n+2018-05-29  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/85883\n+\t* g++.dg/cpp1z/class-deduction55.C: New test.\n+\t* g++.dg/cpp1z/class-deduction56.C: New test.\n+\t* g++.dg/cpp1z/class-deduction57.C: New test.\n+\n 2018-05-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/85952"}, {"sha": "a93d720368129560176cbef72c4394d19e4d33ba", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction55.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009bb506b1a01ceff3ddf0f17a78c381891dfa64/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction55.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009bb506b1a01ceff3ddf0f17a78c381891dfa64/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction55.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction55.C?ref=009bb506b1a01ceff3ddf0f17a78c381891dfa64", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/85883\n+// { dg-options -std=c++17 }\n+\n+template <typename T>\n+struct Bar\n+{\n+  Bar(T) { }\n+};\n+\n+int\n+main ()\n+{\n+  auto x = Bar(1);\n+  auto y = new Bar(3);\n+}"}, {"sha": "71dbfa1904df05ef0f7c55ffb1cd89c3d4ff1b12", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction56.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009bb506b1a01ceff3ddf0f17a78c381891dfa64/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction56.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009bb506b1a01ceff3ddf0f17a78c381891dfa64/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction56.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction56.C?ref=009bb506b1a01ceff3ddf0f17a78c381891dfa64", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/85883\n+// { dg-options -std=c++17 }\n+\n+template <typename T1, typename T2>\n+struct Bar\n+{\n+  Bar(T1, T2) { }\n+};\n+\n+int\n+main ()\n+{\n+  auto x = Bar(1, 2);\n+  auto y = new Bar(3, 4);\n+}"}, {"sha": "200ba6c35366b7e8ee08d8045f29ce13e74f2dd5", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction57.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009bb506b1a01ceff3ddf0f17a78c381891dfa64/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction57.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009bb506b1a01ceff3ddf0f17a78c381891dfa64/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction57.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction57.C?ref=009bb506b1a01ceff3ddf0f17a78c381891dfa64", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/85883\n+// { dg-options -std=c++17 }\n+\n+template <typename T1, typename T2, typename T3>\n+struct Bar\n+{\n+  Bar(T1, T2, T3) { }\n+};\n+\n+int\n+main ()\n+{\n+  auto x = Bar(1, 2, 3);\n+  auto y = new Bar(3, 4, 5);\n+}"}]}