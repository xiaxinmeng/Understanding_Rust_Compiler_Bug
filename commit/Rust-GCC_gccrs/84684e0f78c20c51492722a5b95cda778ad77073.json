{"sha": "84684e0f78c20c51492722a5b95cda778ad77073", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ2ODRlMGY3OGMyMGM1MTQ5MjcyMmE1Yjk1Y2RhNzc4YWQ3NzA3Mw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-01-11T11:04:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-01-11T12:38:18Z"}, "message": "tree-optimization/91403 - avoid excessive code-generation\n\nThe vectorizer, for large permuted grouped loads, generates\ninefficient intermediate code (cleaned up only later) that runs\ninto complexity issues in SCEV analysis and elsewhere.  For the\nnon-single-element interleaving case we already put a hard limit\nin place, this applies the same limit to the missing case.\n\n2021-01-11  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/91403\n\t* tree-vect-data-refs.c (vect_analyze_group_access_1): Cap\n\tsingle-element interleaving group size at 4096 elements.\n\n\t* gcc.dg/vect/pr91403.c: New testcase.", "tree": {"sha": "34dd14796ef4d822348833a2b360f2f42c19f54d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34dd14796ef4d822348833a2b360f2f42c19f54d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84684e0f78c20c51492722a5b95cda778ad77073", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84684e0f78c20c51492722a5b95cda778ad77073", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84684e0f78c20c51492722a5b95cda778ad77073", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84684e0f78c20c51492722a5b95cda778ad77073/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ebf79fcd4cfb43353e6a000f700b07295e78026", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ebf79fcd4cfb43353e6a000f700b07295e78026", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ebf79fcd4cfb43353e6a000f700b07295e78026"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "5b9b76060abf8227f43871069a6852976712b912", "filename": "gcc/testsuite/gcc.dg/vect/pr91403.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84684e0f78c20c51492722a5b95cda778ad77073/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr91403.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84684e0f78c20c51492722a5b95cda778ad77073/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr91403.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr91403.c?ref=84684e0f78c20c51492722a5b95cda778ad77073", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-O3\" } */\n+\n+extern int a[][1000000];\n+int b;\n+void c()\n+{\n+  for (int d = 2; d <= 9; d++)\n+    for (int e = 32; e <= 41; e++)\n+      b += a[d][5];\n+}"}, {"sha": "97c8577ebe720cf857d811c70eccf60c7655509c", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84684e0f78c20c51492722a5b95cda778ad77073/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84684e0f78c20c51492722a5b95cda778ad77073/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=84684e0f78c20c51492722a5b95cda778ad77073", "patch": "@@ -2538,7 +2538,11 @@ vect_analyze_group_access_1 (vec_info *vinfo, dr_vec_info *dr_info)\n \t size.  */\n       if (DR_IS_READ (dr)\n \t  && (dr_step % type_size) == 0\n-\t  && groupsize > 0)\n+\t  && groupsize > 0\n+\t  /* This could be UINT_MAX but as we are generating code in a very\n+\t     inefficient way we have to cap earlier.\n+\t     See PR91403 for example.  */\n+\t  && groupsize <= 4096)\n \t{\n \t  DR_GROUP_FIRST_ELEMENT (stmt_info) = stmt_info;\n \t  DR_GROUP_SIZE (stmt_info) = groupsize;"}]}