{"sha": "e5a8980bb96ce4809da58d3ced2bd4725305368a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVhODk4MGJiOTZjZTQ4MDlkYTU4ZDNjZWQyYmQ0NzI1MzA1MzY4YQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2005-03-21T14:50:14Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2005-03-21T14:50:14Z"}, "message": "natVMSecurityManager.cc (getClassContext): Add new arg: klass.\n\n2005-03-17  Andrew Haley  <aph@redhat.com>\n\n\t* java/lang/natVMSecurityManager.cc (getClassContext): Add new\n\targ: klass.\n\tPass klass to _Jv_StackTrace::GetClassContext().\n\t* java/lang/ClassLoader.java (getParent): Pass class to\n\tVMSecurityManager.getClassContext()\n\t(getSystemClassLoader): Likewise.\n\t* java/lang/Package.java (getPackage): Likewise.\n\t(getPackages): Likewise.\n\t* java/lang/SecurityManager.java (getClassContext): Likewise.\n\t(currentClassLoader): Likewise.\n\t* java/lang/VMSecurityManager.java: (getClassContext): Likewise.\n\t(currentClassLoader) Add new arg: caller.\n\tPass caller to VMSecurityManager.getClassContext.\n\n\t* stacktrace.cc (GetClassContext): Correct calculation of\n\tjframe_count.\n\n\t* boehm.cc (_Jv_MarkObj): (_Jv_MarkObj): Mark\n\tim->source_file_name.\n\nFrom-SVN: r96803", "tree": {"sha": "21f6764f4fa3c779cf473479dd04137d8458622c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21f6764f4fa3c779cf473479dd04137d8458622c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5a8980bb96ce4809da58d3ced2bd4725305368a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5a8980bb96ce4809da58d3ced2bd4725305368a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5a8980bb96ce4809da58d3ced2bd4725305368a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5a8980bb96ce4809da58d3ced2bd4725305368a/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "21e01bf10d229bdd98b45464021c10fb510e7348", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21e01bf10d229bdd98b45464021c10fb510e7348", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21e01bf10d229bdd98b45464021c10fb510e7348"}], "stats": {"total": 67, "additions": 45, "deletions": 22}, "files": [{"sha": "44447d43c684d098b61654f40d1204d8ee46f2b6", "filename": "libjava/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a8980bb96ce4809da58d3ced2bd4725305368a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a8980bb96ce4809da58d3ced2bd4725305368a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=e5a8980bb96ce4809da58d3ced2bd4725305368a", "patch": "@@ -1,3 +1,25 @@\n+2005-03-17  Andrew Haley  <aph@redhat.com>\n+\n+\t* java/lang/natVMSecurityManager.cc (getClassContext): Add new\n+\targ: klass.\n+\tPass klass to _Jv_StackTrace::GetClassContext().\n+\t* java/lang/ClassLoader.java (getParent): Pass class to\n+\tVMSecurityManager.getClassContext()\n+\t(getSystemClassLoader): Likewise.\n+\t* java/lang/Package.java (getPackage): Likewise.\n+\t(getPackages): Likewise.\n+\t* java/lang/SecurityManager.java (getClassContext): Likewise.\n+\t(currentClassLoader): Likewise.\n+\t* java/lang/VMSecurityManager.java: (getClassContext): Likewise.\n+\t(currentClassLoader) Add new arg: caller.\n+\tPass caller to VMSecurityManager.getClassContext.\n+\n+\t* stacktrace.cc (GetClassContext): Correct calculation of\n+\tjframe_count.\n+\n+\t* boehm.cc (_Jv_MarkObj): (_Jv_MarkObj): Mark\n+\tim->source_file_name.\n+\n 2005-03-16  Andrew Haley  <aph@redhat.com>\n \n \t* boehm.cc (_Jv_MarkObj): Mark the interpreted method line_table."}, {"sha": "2e64b1ca6cce5806f11c215f9a2de25be9bef49d", "filename": "libjava/boehm.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a8980bb96ce4809da58d3ced2bd4725305368a/libjava%2Fboehm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a8980bb96ce4809da58d3ced2bd4725305368a/libjava%2Fboehm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fboehm.cc?ref=e5a8980bb96ce4809da58d3ced2bd4725305368a", "patch": "@@ -248,6 +248,9 @@ _Jv_MarkObj (void *addr, void *msp, void *msl, void *env)\n \t  p = (GC_PTR) ic->interpreted_methods;\n \t  MAYBE_MARK (p, mark_stack_ptr, mark_stack_limit, ic);\n \n+\t  p = (GC_PTR) ic->source_file_name;\n+\t  MAYBE_MARK (p, mark_stack_ptr, mark_stack_limit, ic);\n+\n \t  for (int i = 0; i < c->method_count; i++)\n \t    {\n \t      // The interpreter installs a heap-allocated trampoline"}, {"sha": "f2beaac97f672dc6e26595a7ff9186f92c074338", "filename": "libjava/java/lang/ClassLoader.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a8980bb96ce4809da58d3ced2bd4725305368a/libjava%2Fjava%2Flang%2FClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a8980bb96ce4809da58d3ced2bd4725305368a/libjava%2Fjava%2Flang%2FClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClassLoader.java?ref=e5a8980bb96ce4809da58d3ced2bd4725305368a", "patch": "@@ -486,7 +486,7 @@ public final ClassLoader getParent()\n     SecurityManager sm = System.getSecurityManager();\n     if (sm != null)\n       {\n-        Class c = VMSecurityManager.getClassContext()[1];\n+        Class c = VMSecurityManager.getClassContext(ClassLoader.class)[1];\n         ClassLoader cl = c.getClassLoader();\n \tif (cl != null && ! cl.isAncestorOf(this))\n           sm.checkPermission(new RuntimePermission(\"getClassLoader\"));\n@@ -729,7 +729,7 @@ public static ClassLoader getSystemClassLoader()\n     SecurityManager sm = System.getSecurityManager();\n     if (sm != null)\n       {\n-\tClass c = VMSecurityManager.getClassContext()[1];\n+\tClass c = VMSecurityManager.getClassContext(ClassLoader.class)[1];\n \tClassLoader cl = c.getClassLoader();\n \tif (cl != null && cl != systemClassLoader)\n \t  sm.checkPermission(new RuntimePermission(\"getClassLoader\"));"}, {"sha": "bddb370f1e7d5aee0c7d373d6eb60b78ef1c4a52", "filename": "libjava/java/lang/Package.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a8980bb96ce4809da58d3ced2bd4725305368a/libjava%2Fjava%2Flang%2FPackage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a8980bb96ce4809da58d3ced2bd4725305368a/libjava%2Fjava%2Flang%2FPackage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FPackage.java?ref=e5a8980bb96ce4809da58d3ced2bd4725305368a", "patch": "@@ -273,7 +273,7 @@ else if (spec > vers)\n   public static Package getPackage(String name)\n   {\n     // Get the caller's classloader\n-    ClassLoader cl = VMSecurityManager.currentClassLoader();\n+    ClassLoader cl = VMSecurityManager.currentClassLoader(Package.class);\n     return cl != null ? cl.getPackage(name) : VMClassLoader.getPackage(name);\n   }\n \n@@ -286,7 +286,7 @@ public static Package getPackage(String name)\n   public static Package[] getPackages()\n   {\n     // Get the caller's classloader\n-    Class c = VMSecurityManager.getClassContext()[1];\n+    Class c = VMSecurityManager.getClassContext(Package.class)[1];\n     ClassLoader cl = c.getClassLoader();\n     return cl != null ? cl.getPackages() : VMClassLoader.getPackages();\n   }"}, {"sha": "350439e0c3dd957fc46ec559a8bdd36eac2d549f", "filename": "libjava/java/lang/SecurityManager.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a8980bb96ce4809da58d3ced2bd4725305368a/libjava%2Fjava%2Flang%2FSecurityManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a8980bb96ce4809da58d3ced2bd4725305368a/libjava%2Fjava%2Flang%2FSecurityManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FSecurityManager.java?ref=e5a8980bb96ce4809da58d3ced2bd4725305368a", "patch": "@@ -167,7 +167,7 @@ public boolean getInCheck()\n    */\n   protected Class[] getClassContext()\n   {\n-    return VMSecurityManager.getClassContext();\n+    return VMSecurityManager.getClassContext(SecurityManager.class);\n   }\n \n   /**\n@@ -189,7 +189,7 @@ protected Class[] getClassContext()\n    */\n   protected ClassLoader currentClassLoader()\n   {\n-    return VMSecurityManager.currentClassLoader();\n+    return VMSecurityManager.currentClassLoader(SecurityManager.class);\n   }\n \n   /**"}, {"sha": "f995ec89cf47cecf48bac3e2b9a42cb547e448cd", "filename": "libjava/java/lang/VMSecurityManager.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a8980bb96ce4809da58d3ced2bd4725305368a/libjava%2Fjava%2Flang%2FVMSecurityManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a8980bb96ce4809da58d3ced2bd4725305368a/libjava%2Fjava%2Flang%2FVMSecurityManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FVMSecurityManager.java?ref=e5a8980bb96ce4809da58d3ced2bd4725305368a", "patch": "@@ -43,19 +43,19 @@\n    ** @return an array containing all the methods on classes\n    **         on the Java execution stack.\n    **/\n-  static native Class[] getClassContext();\n+  static native Class[] getClassContext(Class caller);\n \n   /** Get the current ClassLoader--the one nearest to the\n    ** top of the stack.\n    ** @return the current ClassLoader.\n    **/\n-  static ClassLoader currentClassLoader()\n+  static ClassLoader currentClassLoader(Class caller)\n   {\n     // The docs above are wrong.  See the online docs.\n     // FIXME this implementation is a bit wrong too -- the docs say we\n     // must also consider ancestors of the system class loader.\n     ClassLoader systemClassLoader = VMClassLoader.getSystemClassLoader();\n-    Class[] classStack = getClassContext ();\n+    Class[] classStack = getClassContext (caller);\n     for (int i = 0; i < classStack.length; i++)\n       {\n \tClassLoader loader = classStack[i].getClassLoader();"}, {"sha": "9d52c92c7c58d8fb0631edd085a6c58a26cb31a3", "filename": "libjava/java/lang/natVMSecurityManager.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a8980bb96ce4809da58d3ced2bd4725305368a/libjava%2Fjava%2Flang%2FnatVMSecurityManager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a8980bb96ce4809da58d3ced2bd4725305368a/libjava%2Fjava%2Flang%2FnatVMSecurityManager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatVMSecurityManager.cc?ref=e5a8980bb96ce4809da58d3ced2bd4725305368a", "patch": "@@ -20,10 +20,10 @@ details.  */\n #include <java/lang/Class.h>\n \n JArray<jclass> *\n-java::lang::VMSecurityManager::getClassContext ()\n+java::lang::VMSecurityManager::getClassContext (jclass klass)\n {\n   JArray<jclass> *result = \n-    _Jv_StackTrace::GetClassContext (&SecurityManager::class$);\n+    _Jv_StackTrace::GetClassContext (klass);\n \n   return result;\n }"}, {"sha": "583b11a796c3075cc29f661e6db5d17e7d5c789e", "filename": "libjava/stacktrace.cc", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a8980bb96ce4809da58d3ced2bd4725305368a/libjava%2Fstacktrace.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a8980bb96ce4809da58d3ced2bd4725305368a/libjava%2Fstacktrace.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fstacktrace.cc?ref=e5a8980bb96ce4809da58d3ced2bd4725305368a", "patch": "@@ -464,19 +464,17 @@ _Jv_StackTrace::GetClassContext (jclass checkClass)\n       _Jv_StackFrame *frame = &state.frames[i];\n       FillInFrameInfo (frame);\n       \n-      if (seen_checkClass\n-          && frame->klass\n-\t  && frame->klass != checkClass)\n+      if (seen_checkClass)\n \t{\n-          jframe_count++;\n-\t  if (start_pos == -1)\n-\t    start_pos = i;\n+\t  if (frame->klass)\n+\t    {\n+\t      jframe_count++;\n+\t      if (start_pos == -1)\n+\t\tstart_pos = i;\n+\t    }\n \t}\n-\n-      if (!seen_checkClass\n-          && frame->klass\n-          && frame->klass == checkClass)\n-        seen_checkClass = true;\n+      else\n+\tseen_checkClass = frame->klass == checkClass;\n     }\n   result = (JArray<jclass> *) _Jv_NewObjectArray (jframe_count, &Class::class$, NULL);\n   int pos = 0;"}]}