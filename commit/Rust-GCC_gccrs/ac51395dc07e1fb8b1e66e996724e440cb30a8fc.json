{"sha": "ac51395dc07e1fb8b1e66e996724e440cb30a8fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM1MTM5NWRjMDdlMWZiOGIxZTY2ZTk5NjcyNGU0NDBjYjMwYThmYw==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2000-11-11T20:19:42Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2000-11-11T20:19:42Z"}, "message": "jcf-parse.c (process_zip_dir): Add finput parameter.\n\n2000-11-11  Anthony Green  <green@redhat.com>\n\n\t* jcf-parse.c (process_zip_dir): Add finput parameter.\n\t(jcf_figure_file_type): Call process_zip_dir with appropriate\n\targument.\n\nFrom-SVN: r37390", "tree": {"sha": "ffc15d57441d6203cd2b675420e8fdc103bb9169", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffc15d57441d6203cd2b675420e8fdc103bb9169"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac51395dc07e1fb8b1e66e996724e440cb30a8fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac51395dc07e1fb8b1e66e996724e440cb30a8fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac51395dc07e1fb8b1e66e996724e440cb30a8fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac51395dc07e1fb8b1e66e996724e440cb30a8fc/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da909756e6d7b1758756c02c35875d3cd68427bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da909756e6d7b1758756c02c35875d3cd68427bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da909756e6d7b1758756c02c35875d3cd68427bb"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "195794483bb49fef7be3cc60893c8c53dc71c374", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac51395dc07e1fb8b1e66e996724e440cb30a8fc/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac51395dc07e1fb8b1e66e996724e440cb30a8fc/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=ac51395dc07e1fb8b1e66e996724e440cb30a8fc", "patch": "@@ -1,3 +1,9 @@\n+2000-11-11  Anthony Green  <green@redhat.com>\n+\n+\t* jcf-parse.c (process_zip_dir): Add finput parameter.\n+\t(jcf_figure_file_type): Call process_zip_dir with appropriate\n+\targument.\n+\n 2000-11-10  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* decl.c (copy_lang_decl): Use memcpy, not bcopy."}, {"sha": "82c92ee19462a9f619458e76832ade4f2b07ee50", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac51395dc07e1fb8b1e66e996724e440cb30a8fc/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac51395dc07e1fb8b1e66e996724e440cb30a8fc/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=ac51395dc07e1fb8b1e66e996724e440cb30a8fc", "patch": "@@ -82,7 +82,7 @@ static struct JCF main_jcf[1];\n /* Declarations of some functions used here.  */\n static tree give_name_to_class PARAMS ((JCF *jcf, int index));\n static void parse_zip_file_entries PARAMS ((void));\n-static void process_zip_dir PARAMS ((void));\n+static void process_zip_dir PARAMS ((FILE *));\n static void parse_source_file PARAMS ((tree, FILE *));\n static void jcf_parse_source PARAMS ((void));\n static int jcf_figure_file_type PARAMS ((JCF *));\n@@ -965,7 +965,8 @@ parse_zip_file_entries (void)\n /* Read all the entries of the zip file, creates a class and a JCF. Sets the\n    jcf up for further processing and link it to the created class.  */\n \n-static void process_zip_dir()\n+static void\n+process_zip_dir (FILE *finput)\n {\n   int i;\n   ZipDirectory *zdir;\n@@ -1070,7 +1071,8 @@ DEFUN(jcf_figure_file_type, (jcf),\n     {\n       localToFile = ALLOC (sizeof (struct ZipFileCache));\n       memcpy (localToFile, SeenZipFiles, sizeof (struct ZipFileCache));\n-      process_zip_dir ();\t/* Register all the class defined there */\n+      /* Register all the class defined there.  */\n+      process_zip_dir (jcf->read_state);\n       return JCF_ZIP;\n     }\n "}]}