{"sha": "03e46144faa1444571fcd6192691cb3675be1f6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNlNDYxNDRmYWExNDQ0NTcxZmNkNjE5MjY5MWNiMzY3NWJlMWY2ZQ==", "commit": {"author": {"name": "Fritz Reese", "email": "Reese-Fritz@zai.com", "date": "2014-08-31T22:28:30Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2014-08-31T22:28:30Z"}, "message": "re PR fortran/62309 (-fno-automatic with -finit-local prevents initialization of automatics in recursive functions)\n\n2014-08-31  Fritz Reese  <Reese-Fritz@zai.com>\n\n        PR fortran/62309\n        * resolve.c (apply_default_init_local): Don't treat variables\n        in RECURSIVE procedures as saved.\n\n2014-08-31  Fritz Reese  <Reese-Fritz@zai.com>\n            Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/62309\n        * gcc/testsuite/gfortran.dg/auto_save_2.f90: New.\n\n\nCo-Authored-By: Tobias Burnus <burnus@net-b.de>\n\nFrom-SVN: r214771", "tree": {"sha": "e2f3e3385b83e291ae5c3939713fe5ddda1c3979", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2f3e3385b83e291ae5c3939713fe5ddda1c3979"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03e46144faa1444571fcd6192691cb3675be1f6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03e46144faa1444571fcd6192691cb3675be1f6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03e46144faa1444571fcd6192691cb3675be1f6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03e46144faa1444571fcd6192691cb3675be1f6e/comments", "author": null, "committer": null, "parents": [{"sha": "cbb4d6a4b99445fe2f29f17c9a83602d3b9f1606", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbb4d6a4b99445fe2f29f17c9a83602d3b9f1606", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbb4d6a4b99445fe2f29f17c9a83602d3b9f1606"}], "stats": {"total": 97, "additions": 97, "deletions": 0}, "files": [{"sha": "eab86ed371b05aa90718d85c43b8314a3483c24c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03e46144faa1444571fcd6192691cb3675be1f6e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03e46144faa1444571fcd6192691cb3675be1f6e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=03e46144faa1444571fcd6192691cb3675be1f6e", "patch": "@@ -1,3 +1,9 @@\n+2014-08-31  Fritz Reese  <Reese-Fritz@zai.com>\n+\n+\tPR fortran/62309\n+\t* resolve.c (apply_default_init_local): Don't treat variables\n+\tin RECURSIVE procedures as saved.\n+\n 2014-08-31  Tobias Burnus  <burnus@net-b.de>\n \n \t* trans-decl.c (gfc_build_builtin_function_decls): Add"}, {"sha": "da732db26ab9525028f35afe57137294acdbab70", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03e46144faa1444571fcd6192691cb3675be1f6e/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03e46144faa1444571fcd6192691cb3675be1f6e/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=03e46144faa1444571fcd6192691cb3675be1f6e", "patch": "@@ -10780,6 +10780,7 @@ apply_default_init_local (gfc_symbol *sym)\n      result variable, which are also nonstatic.  */\n   if (sym->attr.save || sym->ns->save_all\n       || (gfc_option.flag_max_stack_var_size == 0 && !sym->attr.result\n+\t  && !sym->ns->proc_name->attr.recursive\n \t  && (!sym->attr.dimension || !is_non_constant_shape_array (sym))))\n     {\n       /* Don't clobber an existing initializer!  */"}, {"sha": "953eafd11f53ca69f943b122e27df778bf181d23", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03e46144faa1444571fcd6192691cb3675be1f6e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03e46144faa1444571fcd6192691cb3675be1f6e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=03e46144faa1444571fcd6192691cb3675be1f6e", "patch": "@@ -1,3 +1,9 @@\n+2014-08-31  Fritz Reese  <Reese-Fritz@zai.com>\n+\t    Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/62309\n+\t* gcc/testsuite/gfortran.dg/auto_save_2.f90: New.\n+\n 2014-08-31  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.dg/coarray_lib_comm_1.f90: New."}, {"sha": "07d5d0c96d904801db47a12e7f7c42264e74b5a5", "filename": "gcc/testsuite/gfortran.dg/auto_save_2.f90", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03e46144faa1444571fcd6192691cb3675be1f6e/gcc%2Ftestsuite%2Fgfortran.dg%2Fauto_save_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03e46144faa1444571fcd6192691cb3675be1f6e/gcc%2Ftestsuite%2Fgfortran.dg%2Fauto_save_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fauto_save_2.f90?ref=03e46144faa1444571fcd6192691cb3675be1f6e", "patch": "@@ -0,0 +1,84 @@\n+! { dg-do run }\n+! { dg-options \"-fno-automatic -finit-local-zero -fdump-tree-original\" }\n+!\n+! PR fortran/62309\n+!\n+! Make sure variables are saved with -fno-automatic except in\n+! functions marked RECURSIVE, and that they are still initialized with\n+! -finit-local-zero.\n+!\n+\n+function f (x)\n+implicit none\n+  integer f, x\n+  integer a ! should be SAVEd\n+  a = a + x ! should increment by y every time\n+  f = a\n+  return\n+endfunction\n+\n+function f2 (x)\n+implicit none\n+  integer f2, x\n+  block\n+   named: block\n+    block\n+    integer a ! should be SAVEd\n+    a = a + x ! should increment by y every time\n+    f2 = a\n+    end block\n+   end block named\n+  end block\n+  return\n+endfunction\n+\n+recursive function g (x)\n+implicit none\n+  integer g, x\n+  integer b ! should be automatic\n+  b = b + x ! should be set to y every time\n+  g = b\n+  return\n+endfunction\n+\n+recursive function g2 (x)\n+implicit none\n+  integer g2, x\n+  block\n+   named: block\n+    block\n+    integer b ! should be automatic\n+    b = b + x ! should be set to y every time\n+    g2 = b\n+    end block\n+   end block named\n+  end block\n+  return\n+endfunction\n+\n+implicit none\n+integer f, f2, g, g2\n+\n+! Should return static value of a; accumulates y\n+if ( f(3) .ne. 3 ) call abort ()\n+if ( f(4) .ne. 7 ) call abort ()\n+if ( f(2) .ne. 9 ) call abort ()\n+\n+if ( f2(3) .ne. 3 ) call abort ()\n+if ( f2(4) .ne. 7 ) call abort ()\n+if ( f2(2) .ne. 9 ) call abort ()\n+\n+! Should return automatic value of a; equal to y each time\n+if ( g(3) .ne. 3 ) call abort ()\n+if ( g(4) .ne. 4 ) call abort ()\n+if ( g(2) .ne. 2 ) call abort ()\n+\n+if ( g2(3) .ne. 3 ) call abort ()\n+if ( g2(4) .ne. 4 ) call abort ()\n+if ( g2(2) .ne. 2 ) call abort ()\n+\n+end\n+\n+! { dg-final { scan-tree-dump-times \"  static integer\\\\\\(kind=4\\\\\\) a = 0;\" 2 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"  b = 0;\" 2 \"original\" } }\n+! { dg-final { cleanup-tree-dump \"original\" } }"}]}