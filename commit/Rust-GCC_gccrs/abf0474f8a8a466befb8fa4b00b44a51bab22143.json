{"sha": "abf0474f8a8a466befb8fa4b00b44a51bab22143", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWJmMDQ3NGY4YThhNDY2YmVmYjhmYTRiMDBiNDRhNTFiYWIyMjE0Mw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-10-17T06:16:50Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-10-17T06:16:50Z"}, "message": "re PR debug/91887 (-fdebug-types-section ICE building chromium)\n\n2019-10-17  Richard Biener  <rguenther@suse.de>\n\n\tPR debug/91887\n\t* dwarf2out.c (gen_formal_parameter_die): Also try to match\n\tcontext_die against a DW_TAG_GNU_formal_parameter_pack parent.\n\n\t* g++.dg/debug/dwarf2/pr91887.C: New testcase.\n\nFrom-SVN: r277090", "tree": {"sha": "e4229f6e15f9799001d7e1a7a82b989b38fda19f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4229f6e15f9799001d7e1a7a82b989b38fda19f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/abf0474f8a8a466befb8fa4b00b44a51bab22143", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abf0474f8a8a466befb8fa4b00b44a51bab22143", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abf0474f8a8a466befb8fa4b00b44a51bab22143", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abf0474f8a8a466befb8fa4b00b44a51bab22143/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "24baab8af424826d87c992592944ddef7bfa2e93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24baab8af424826d87c992592944ddef7bfa2e93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24baab8af424826d87c992592944ddef7bfa2e93"}], "stats": {"total": 46, "additions": 34, "deletions": 12}, "files": [{"sha": "afe0d29f6e16b77e802e528c5d78de4ce79d0af2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abf0474f8a8a466befb8fa4b00b44a51bab22143/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abf0474f8a8a466befb8fa4b00b44a51bab22143/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=abf0474f8a8a466befb8fa4b00b44a51bab22143", "patch": "@@ -1,3 +1,9 @@\n+2019-10-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR debug/91887\n+\t* dwarf2out.c (gen_formal_parameter_die): Also try to match\n+\tcontext_die against a DW_TAG_GNU_formal_parameter_pack parent.\n+\n 2019-10-16  Jakub Jelinek  <jakub@redhat.com>\n \n \t* tree-ssa-strlen.c (maybe_invalidate): Use"}, {"sha": "9f1d921ddadfae2d6670d8978a02d05f1b9b72a7", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abf0474f8a8a466befb8fa4b00b44a51bab22143/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abf0474f8a8a466befb8fa4b00b44a51bab22143/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=abf0474f8a8a466befb8fa4b00b44a51bab22143", "patch": "@@ -22304,19 +22304,18 @@ gen_formal_parameter_die (tree node, tree origin, bool emit_name_p,\n       /* If the contexts differ, we may not be talking about the same\n \t thing.\n \t ???  When in LTO the DIE parent is the \"abstract\" copy and the\n-\t context_die is the specification \"copy\".  But this whole block\n-\t should eventually be no longer needed.  */\n-      if (parm_die && parm_die->die_parent != context_die && !in_lto_p)\n+\t context_die is the specification \"copy\".  */\n+      if (parm_die\n+\t  && parm_die->die_parent != context_die\n+\t  && (parm_die->die_parent->die_tag != DW_TAG_GNU_formal_parameter_pack\n+\t      || parm_die->die_parent->die_parent != context_die)\n+\t  && !in_lto_p)\n \t{\n-\t  if (!DECL_ABSTRACT_P (node))\n-\t    {\n-\t      /* This can happen when creating an inlined instance, in\n-\t\t which case we need to create a new DIE that will get\n-\t\t annotated with DW_AT_abstract_origin.  */\n-\t      parm_die = NULL;\n-\t    }\n-\t  else\n-\t    gcc_unreachable ();\n+\t  gcc_assert (!DECL_ABSTRACT_P (node));\n+\t  /* This can happen when creating a concrete instance, in\n+\t     which case we need to create a new DIE that will get\n+\t     annotated with DW_AT_abstract_origin.  */\n+\t  parm_die = NULL;\n \t}\n \n       if (parm_die && parm_die->die_parent == NULL)"}, {"sha": "b574d995ebdc6141a7f86d374ae36fa46be21ad2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abf0474f8a8a466befb8fa4b00b44a51bab22143/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abf0474f8a8a466befb8fa4b00b44a51bab22143/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=abf0474f8a8a466befb8fa4b00b44a51bab22143", "patch": "@@ -1,3 +1,8 @@\n+2019-10-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR debug/91887\n+\t* g++.dg/debug/dwarf2/pr91887.C: New testcase.\n+\n 2019-10-16  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/83821"}, {"sha": "6cd99cc9bb86b3dabb675f65e0c1d841bd17df04", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/pr91887.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abf0474f8a8a466befb8fa4b00b44a51bab22143/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr91887.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abf0474f8a8a466befb8fa4b00b44a51bab22143/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr91887.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr91887.C?ref=abf0474f8a8a466befb8fa4b00b44a51bab22143", "patch": "@@ -0,0 +1,12 @@\n+// { dg-do compile }\n+// { dg-require-effective-target c++11 }\n+// { dg-options \"-g -fdebug-types-section\" }\n+class A {\n+public:\n+  A();\n+  template <typename U> A(U);\n+};\n+template <class> struct B { typedef A type; };\n+template <class R, typename... Args>\n+int Bind(R(Args...), typename B<Args>::type...) { return 0; }\n+void KeepBufferRefs(A, A) { A a, b(Bind(KeepBufferRefs, a, b)); }"}]}