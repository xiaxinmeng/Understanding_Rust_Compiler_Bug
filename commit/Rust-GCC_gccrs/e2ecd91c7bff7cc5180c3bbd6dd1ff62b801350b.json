{"sha": "e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJlY2Q5MWM3YmZmN2NjNTE4MGMzYmJkNmRkMWZmNjJiODAxMzUwYg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@cygnus.co.uk", "date": "1999-09-05T01:06:48Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-09-05T01:06:48Z"}, "message": "c-decl.c (struct language_function): Renamed from struct c_function.\n\n\t* c-decl.c (struct language_function): Renamed from struct c_function.\n\tDelete elt NEXT.\n\t(c_function_chain): Delete.\n\t(push_c_function_context): New arg F.  Don't warn about nested\n\tfunctions here.  Fill LANGUAGE elt of F.  Delete code to update\n\tc_function_chain.  Don't call push_function_context.\n\t(pop_c_function_context): New arg F.  Restore from there instead of\n\tfrom c_function_chain.  Don't call pop_function_context.  Clear out\n\tLANGUAGE field of F when done.\n\t* c-lang.c: Include \"function.h\"\n\t(lang_init): Initialize save_lang_status and restore_lang_status.\n\t* c-parse.in (nested_function, nested_function_notype): Warn about\n\tnested functions.  Call push_function_context/pop_function_context\n\tinstead of the _c_ variants.\n\t* c-tree.h (push_c_function_context, pop_c_function_context): Update\n\tprototype.\n\t* Makefile.in (c-lang.o): Update dependencies.\n\n\t* emit-rtl.c (init_emit): Use xmalloc to allocate regno_reg_rtx,\n\tregno_pointer_flag, regno_pointer_align.\n\t(gen_reg_rtx): Use xrealloc to enlarge them.\n\t(free_emit_status): New function.\n\t* function.c (mark_machine_status, mark_lang_status): New variables.\n\t(assign_stack_local_1): Renamed from assign_outer_stack_local.  Merge\n\tin some bits from assign_stack_local.  All callers changed to use new\n\tname.\n\t(assign_stack_local): Just call assign_stack_local_1.\n\t(free_after_compilation): New function.\n\t(put_reg_into_stack): Simplify to always call assign_stack_local_1.\n\t(trampoline_address): Likewise.\n\t(assign_parms): Use xcalloc/xrealloc to allocate parm_reg_stack_loc.\n\t(prepare_function_start): Explicitly clear some more variables.\n\t* function.h (struct function): New elt can_garbage_collect.\n\t(mark_machine_status, mark_lang_status): Declare variables.\n\t(free_after_compilation, free_emit_status, free_varasm_status,\n\tinit_varasm_status): Declare functions.\n\t* toplev.c (rest_of_compilation): Call free_after_compilation when\n\tdone with the current function.\n\t* varasm.c (free_varasm_status): New function.\n\nFrom-SVN: r29117", "tree": {"sha": "18e6552fb690c4b3e5efbd8f45b8ffa8e5ea1546", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18e6552fb690c4b3e5efbd8f45b8ffa8e5ea1546"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/comments", "author": null, "committer": null, "parents": [{"sha": "6308c57495b0a537146807560d60b8618e45e038", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6308c57495b0a537146807560d60b8618e45e038", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6308c57495b0a537146807560d60b8618e45e038"}], "stats": {"total": 1409, "additions": 735, "deletions": 674}, "files": [{"sha": "2eaa68fe4a8a5b21e0a46c0338f826423c657118", "filename": "gcc/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b", "patch": "@@ -1,3 +1,45 @@\n+Sat Sep  4 18:01:45 1999  Bernd Schmidt <bernds@cygnus.co.uk>\n+\n+\t* c-decl.c (struct language_function): Renamed from struct c_function.\n+\tDelete elt NEXT.\n+\t(c_function_chain): Delete.\n+\t(push_c_function_context): New arg F.  Don't warn about nested\n+\tfunctions here.  Fill LANGUAGE elt of F.  Delete code to update\n+\tc_function_chain.  Don't call push_function_context.\n+\t(pop_c_function_context): New arg F.  Restore from there instead of\n+\tfrom c_function_chain.  Don't call pop_function_context.  Clear out\n+\tLANGUAGE field of F when done.\n+\t* c-lang.c: Include \"function.h\"\n+\t(lang_init): Initialize save_lang_status and restore_lang_status.\n+\t* c-parse.in (nested_function, nested_function_notype): Warn about\n+\tnested functions.  Call push_function_context/pop_function_context\n+\tinstead of the _c_ variants.\n+\t* c-tree.h (push_c_function_context, pop_c_function_context): Update\n+\tprototype.\n+\t* Makefile.in (c-lang.o): Update dependencies.\n+\n+\t* emit-rtl.c (init_emit): Use xmalloc to allocate regno_reg_rtx,\n+\tregno_pointer_flag, regno_pointer_align.\n+\t(gen_reg_rtx): Use xrealloc to enlarge them.\n+\t(free_emit_status): New function.\n+\t* function.c (mark_machine_status, mark_lang_status): New variables.\n+\t(assign_stack_local_1): Renamed from assign_outer_stack_local.  Merge\n+\tin some bits from assign_stack_local.  All callers changed to use new\n+\tname.\n+\t(assign_stack_local): Just call assign_stack_local_1.\n+\t(free_after_compilation): New function.\n+\t(put_reg_into_stack): Simplify to always call assign_stack_local_1.\n+\t(trampoline_address): Likewise.\n+\t(assign_parms): Use xcalloc/xrealloc to allocate parm_reg_stack_loc.\n+\t(prepare_function_start): Explicitly clear some more variables.\n+\t* function.h (struct function): New elt can_garbage_collect.\n+\t(mark_machine_status, mark_lang_status): Declare variables.\n+\t(free_after_compilation, free_emit_status, free_varasm_status,\n+\tinit_varasm_status): Declare functions.\n+\t* toplev.c (rest_of_compilation): Call free_after_compilation when\n+\tdone with the current function.\n+\t* varasm.c (free_varasm_status): New function.\n+\n Sat Sep  4 17:15:13 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* sparc.h (EXPAND_BUILTIN_VA_START): Define."}, {"sha": "a358df2cd4adfabb238cb19efaa25dd2ac419fa8", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b", "patch": "@@ -1335,7 +1335,7 @@ c-decl.o : c-decl.c $(CONFIG_H) system.h $(TREE_H) c-tree.h c-common.h \\\n c-typeck.o : c-typeck.c $(CONFIG_H) system.h $(TREE_H) c-tree.h c-common.h \\\n     flags.h intl.h output.h $(EXPR_H) $(RTL_H) toplev.h\n c-lang.o : c-lang.c $(CONFIG_H) system.h $(TREE_H) c-tree.h c-common.h \\\n-    c-lex.h toplev.h output.h\n+    c-lex.h toplev.h output.h function.h\n c-lex.o : c-lex.c $(CONFIG_H) system.h $(TREE_H) $(RTL_H) c-lex.h c-tree.h \\\n     c-common.h $(srcdir)/c-parse.h $(srcdir)/c-gperf.h c-pragma.h input.h \\\n     intl.h flags.h toplev.h output.h mbchar.h"}, {"sha": "68720ec821d6218a1588829cead2c124d04e1ed1", "filename": "gcc/c-decl.c", "status": "modified", "additions": 10, "deletions": 21, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b", "patch": "@@ -6981,9 +6981,8 @@ finish_function (nested)\n    that keep track of the progress of compilation of the current function.\n    Used for nested functions.  */\n \n-struct c_function\n+struct language_function\n {\n-  struct c_function *next;\n   tree named_labels;\n   tree shadowed_labels;\n   int returns_value;\n@@ -6993,24 +6992,16 @@ struct c_function\n   struct binding_level *binding_level;\n };\n \n-struct c_function *c_function_chain;\n-\n /* Save and reinitialize the variables\n    used during compilation of a C function.  */\n \n void\n-push_c_function_context ()\n+push_c_function_context (f)\n+     struct function *f;\n {\n-  struct c_function *p\n-    = (struct c_function *) xmalloc (sizeof (struct c_function));\n-\n-  if (pedantic)\n-    pedwarn (\"ANSI C forbids nested functions\");\n-\n-  push_function_context ();\n-\n-  p->next = c_function_chain;\n-  c_function_chain = p;\n+  struct language_function *p;\n+  p = (struct language_function *) xmalloc (sizeof (struct language_function));\n+  f->language = p;\n \n   p->named_labels = named_labels;\n   p->shadowed_labels = shadowed_labels;\n@@ -7024,9 +7015,10 @@ push_c_function_context ()\n /* Restore the variables used during compilation of a C function.  */\n \n void\n-pop_c_function_context ()\n+pop_c_function_context (f)\n+     struct function *f;\n {\n-  struct c_function *p = c_function_chain;\n+  struct language_function *p = f->language;\n   tree link;\n \n   /* Bring back all the labels that were shadowed.  */\n@@ -7044,10 +7036,6 @@ pop_c_function_context ()\n       DECL_ARGUMENTS (current_function_decl) = 0;\n     }\n \n-  pop_function_context ();\n-\n-  c_function_chain = p->next;\n-\n   named_labels = p->named_labels;\n   shadowed_labels = p->shadowed_labels;\n   current_function_returns_value = p->returns_value;\n@@ -7057,6 +7045,7 @@ pop_c_function_context ()\n   current_binding_level = p->binding_level;\n \n   free (p);\n+  f->language = 0;\n }\n \n /* integrate_decl_tree calls this function, but since we don't use the"}, {"sha": "dbf46c4f3b8b22a8988b59ee9af178abeac84a27", "filename": "gcc/c-lang.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.c?ref=e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b", "patch": "@@ -22,6 +22,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"config.h\"\n #include \"system.h\"\n #include \"tree.h\"\n+#include \"function.h\"\n #include \"input.h\"\n #include \"c-tree.h\"\n #include \"c-lex.h\"\n@@ -68,6 +69,9 @@ lang_init ()\n   check_newline ();\n   yy_cur--;\n #endif \n+\n+  save_lang_status = &push_c_function_context;\n+  restore_lang_status = &pop_c_function_context;\n }\n \n void"}, {"sha": "17a6b75b20ac8b4de62322f4c715b88c81b83f63", "filename": "gcc/c-parse.c", "status": "modified", "additions": 203, "deletions": 197, "changes": 400, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Fc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Fc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.c?ref=e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b", "patch": "@@ -380,27 +380,27 @@ static const short yyrline[] = { 0,\n   1013,  1016,  1020,  1023,  1027,  1032,  1035,  1039,  1042,  1044,\n   1046,  1048,  1055,  1057,  1058,  1059,  1064,  1066,  1071,  1079,\n   1084,  1088,  1091,  1093,  1098,  1100,  1101,  1104,  1104,  1107,\n-  1110,  1112,  1114,  1117,  1119,  1122,  1128,  1130,  1134,  1145,\n-  1153,  1157,  1168,  1176,  1183,  1185,  1190,  1193,  1198,  1200,\n-  1202,  1209,  1211,  1219,  1225,  1230,  1232,  1234,  1241,  1243,\n-  1249,  1255,  1257,  1259,  1264,  1266,  1273,  1275,  1278,  1281,\n-  1285,  1288,  1292,  1295,  1299,  1304,  1306,  1310,  1312,  1314,\n-  1316,  1320,  1322,  1325,  1328,  1331,  1334,  1338,  1340,  1343,\n-  1345,  1350,  1353,  1358,  1360,  1362,  1376,  1383,  1388,  1394,\n-  1399,  1401,  1406,  1408,  1412,  1416,  1420,  1430,  1432,  1437,\n-  1442,  1445,  1449,  1452,  1456,  1459,  1462,  1465,  1469,  1472,\n-  1476,  1480,  1482,  1484,  1486,  1488,  1490,  1492,  1494,  1498,\n-  1506,  1514,  1516,  1518,  1522,  1524,  1527,  1530,  1541,  1543,\n-  1548,  1550,  1553,  1567,  1570,  1573,  1575,  1577,  1585,  1593,\n-  1603,  1621,  1626,  1631,  1634,  1648,  1657,  1661,  1665,  1669,\n-  1675,  1679,  1684,  1687,  1692,  1695,  1696,  1713,  1718,  1721,\n-  1733,  1735,  1745,  1755,  1756,  1764,  1767,  1779,  1783,  1800,\n-  1810,  1819,  1824,  1829,  1834,  1838,  1842,  1853,  1860,  1867,\n-  1874,  1885,  1891,  1894,  1899,  1922,  1956,  1987,  2018,  2033,\n-  2047,  2051,  2055,  2058,  2063,  2065,  2068,  2070,  2074,  2079,\n-  2082,  2088,  2093,  2098,  2100,  2109,  2110,  2116,  2118,  2128,\n-  2130,  2134,  2137,  2143,  2153,  2162,  2171,  2181,  2195,  2200,\n-  2205,  2207,  2216,  2219,  2224,  2227,  2231\n+  1110,  1112,  1114,  1117,  1119,  1122,  1128,  1130,  1134,  1148,\n+  1156,  1160,  1174,  1182,  1189,  1191,  1196,  1199,  1204,  1206,\n+  1208,  1215,  1217,  1225,  1231,  1236,  1238,  1240,  1247,  1249,\n+  1255,  1261,  1263,  1265,  1270,  1272,  1279,  1281,  1284,  1287,\n+  1291,  1294,  1298,  1301,  1305,  1310,  1312,  1316,  1318,  1320,\n+  1322,  1326,  1328,  1331,  1334,  1337,  1340,  1344,  1346,  1349,\n+  1351,  1356,  1359,  1364,  1366,  1368,  1382,  1389,  1394,  1400,\n+  1405,  1407,  1412,  1414,  1418,  1422,  1426,  1436,  1438,  1443,\n+  1448,  1451,  1455,  1458,  1462,  1465,  1468,  1471,  1475,  1478,\n+  1482,  1486,  1488,  1490,  1492,  1494,  1496,  1498,  1500,  1504,\n+  1512,  1520,  1522,  1524,  1528,  1530,  1533,  1536,  1547,  1549,\n+  1554,  1556,  1559,  1573,  1576,  1579,  1581,  1583,  1591,  1599,\n+  1609,  1627,  1632,  1637,  1640,  1654,  1663,  1667,  1671,  1675,\n+  1681,  1685,  1690,  1693,  1698,  1701,  1702,  1719,  1724,  1727,\n+  1739,  1741,  1751,  1761,  1762,  1770,  1773,  1785,  1789,  1806,\n+  1816,  1825,  1830,  1835,  1840,  1844,  1848,  1859,  1866,  1873,\n+  1880,  1891,  1897,  1900,  1905,  1928,  1962,  1993,  2024,  2039,\n+  2053,  2057,  2061,  2064,  2069,  2071,  2074,  2076,  2080,  2085,\n+  2088,  2094,  2099,  2104,  2106,  2115,  2116,  2122,  2124,  2134,\n+  2136,  2140,  2143,  2149,  2159,  2168,  2177,  2187,  2201,  2206,\n+  2211,  2213,  2222,  2225,  2230,  2233,  2237\n };\n #endif\n \n@@ -2759,401 +2759,407 @@ case 208:\n     break;}\n case 209:\n #line 1136 \"c-parse.y\"\n-{ push_c_function_context ();\n+{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids nested functions\");\n+\n+\t\t  push_function_context ();\n \t\t  if (! start_function (current_declspecs, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 1))\n \t\t    {\n-\t\t      pop_c_function_context ();\n+\t\t      pop_function_context ();\n \t\t      YYERROR1;\n \t\t    }\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 210:\n-#line 1145 \"c-parse.y\"\n+#line 1148 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 211:\n-#line 1153 \"c-parse.y\"\n+#line 1156 \"c-parse.y\"\n { finish_function (1);\n-\t\t  pop_c_function_context (); ;\n+\t\t  pop_function_context (); ;\n     break;}\n case 212:\n-#line 1159 \"c-parse.y\"\n-{ push_c_function_context ();\n+#line 1162 \"c-parse.y\"\n+{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids nested functions\");\n+\n+\t\t  push_function_context ();\n \t\t  if (! start_function (current_declspecs, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 1))\n \t\t    {\n-\t\t      pop_c_function_context ();\n+\t\t      pop_function_context ();\n \t\t      YYERROR1;\n \t\t    }\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 213:\n-#line 1168 \"c-parse.y\"\n+#line 1174 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 214:\n-#line 1176 \"c-parse.y\"\n+#line 1182 \"c-parse.y\"\n { finish_function (1);\n-\t\t  pop_c_function_context (); ;\n+\t\t  pop_function_context (); ;\n     break;}\n case 217:\n-#line 1192 \"c-parse.y\"\n+#line 1198 \"c-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 218:\n-#line 1194 \"c-parse.y\"\n+#line 1200 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 219:\n-#line 1199 \"c-parse.y\"\n+#line 1205 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 220:\n-#line 1201 \"c-parse.y\"\n+#line 1207 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 221:\n-#line 1203 \"c-parse.y\"\n+#line 1209 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 222:\n-#line 1210 \"c-parse.y\"\n+#line 1216 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 224:\n-#line 1221 \"c-parse.y\"\n+#line 1227 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 225:\n-#line 1226 \"c-parse.y\"\n+#line 1232 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, NULL_TREE);\n \t\t  if (! flag_isoc9x)\n \t\t    error (\"`[*]' in parameter declaration only allowed in ISO C 9x\");\n \t\t;\n     break;}\n case 226:\n-#line 1231 \"c-parse.y\"\n+#line 1237 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 227:\n-#line 1233 \"c-parse.y\"\n+#line 1239 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 228:\n-#line 1235 \"c-parse.y\"\n+#line 1241 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 229:\n-#line 1242 \"c-parse.y\"\n+#line 1248 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 231:\n-#line 1251 \"c-parse.y\"\n+#line 1257 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 232:\n-#line 1256 \"c-parse.y\"\n+#line 1262 \"c-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 233:\n-#line 1258 \"c-parse.y\"\n+#line 1264 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 234:\n-#line 1260 \"c-parse.y\"\n+#line 1266 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, NULL_TREE);\n \t\t  if (! flag_isoc9x)\n \t\t    error (\"`[*]' in parameter declaration only allowed in ISO C 9x\");\n \t\t;\n     break;}\n case 235:\n-#line 1265 \"c-parse.y\"\n+#line 1271 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 236:\n-#line 1267 \"c-parse.y\"\n+#line 1273 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 237:\n-#line 1274 \"c-parse.y\"\n+#line 1280 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 239:\n-#line 1280 \"c-parse.y\"\n+#line 1286 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 240:\n-#line 1282 \"c-parse.y\"\n+#line 1288 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 241:\n-#line 1287 \"c-parse.y\"\n+#line 1293 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 242:\n-#line 1289 \"c-parse.y\"\n+#line 1295 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 243:\n-#line 1294 \"c-parse.y\"\n+#line 1300 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 244:\n-#line 1296 \"c-parse.y\"\n+#line 1302 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 245:\n-#line 1301 \"c-parse.y\"\n+#line 1307 \"c-parse.y\"\n { yyval.ttype = start_struct (RECORD_TYPE, yyvsp[-1].ttype);\n \t\t  /* Start scope of tag before parsing components.  */\n \t\t;\n     break;}\n case 246:\n-#line 1305 \"c-parse.y\"\n+#line 1311 \"c-parse.y\"\n { yyval.ttype = finish_struct (yyvsp[-3].ttype, yyvsp[-2].ttype, chainon (yyvsp[-6].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 247:\n-#line 1307 \"c-parse.y\"\n+#line 1313 \"c-parse.y\"\n { yyval.ttype = finish_struct (start_struct (RECORD_TYPE, NULL_TREE),\n \t\t\t\t      yyvsp[-2].ttype, chainon (yyvsp[-4].ttype, yyvsp[0].ttype));\n \t\t;\n     break;}\n case 248:\n-#line 1311 \"c-parse.y\"\n+#line 1317 \"c-parse.y\"\n { yyval.ttype = xref_tag (RECORD_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 249:\n-#line 1313 \"c-parse.y\"\n+#line 1319 \"c-parse.y\"\n { yyval.ttype = start_struct (UNION_TYPE, yyvsp[-1].ttype); ;\n     break;}\n case 250:\n-#line 1315 \"c-parse.y\"\n+#line 1321 \"c-parse.y\"\n { yyval.ttype = finish_struct (yyvsp[-3].ttype, yyvsp[-2].ttype, chainon (yyvsp[-6].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 251:\n-#line 1317 \"c-parse.y\"\n+#line 1323 \"c-parse.y\"\n { yyval.ttype = finish_struct (start_struct (UNION_TYPE, NULL_TREE),\n \t\t\t\t      yyvsp[-2].ttype, chainon (yyvsp[-4].ttype, yyvsp[0].ttype));\n \t\t;\n     break;}\n case 252:\n-#line 1321 \"c-parse.y\"\n+#line 1327 \"c-parse.y\"\n { yyval.ttype = xref_tag (UNION_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 253:\n-#line 1323 \"c-parse.y\"\n+#line 1329 \"c-parse.y\"\n { yyvsp[0].itype = suspend_momentary ();\n \t\t  yyval.ttype = start_enum (yyvsp[-1].ttype); ;\n     break;}\n case 254:\n-#line 1326 \"c-parse.y\"\n+#line 1332 \"c-parse.y\"\n { yyval.ttype= finish_enum (yyvsp[-4].ttype, nreverse (yyvsp[-3].ttype), chainon (yyvsp[-7].ttype, yyvsp[0].ttype));\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 255:\n-#line 1329 \"c-parse.y\"\n+#line 1335 \"c-parse.y\"\n { yyvsp[0].itype = suspend_momentary ();\n \t\t  yyval.ttype = start_enum (NULL_TREE); ;\n     break;}\n case 256:\n-#line 1332 \"c-parse.y\"\n+#line 1338 \"c-parse.y\"\n { yyval.ttype= finish_enum (yyvsp[-4].ttype, nreverse (yyvsp[-3].ttype), chainon (yyvsp[-6].ttype, yyvsp[0].ttype));\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 257:\n-#line 1335 \"c-parse.y\"\n+#line 1341 \"c-parse.y\"\n { yyval.ttype = xref_tag (ENUMERAL_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 261:\n-#line 1346 \"c-parse.y\"\n+#line 1352 \"c-parse.y\"\n { if (pedantic && ! flag_isoc9x)\n \t\t    pedwarn (\"comma at end of enumerator list\"); ;\n     break;}\n case 262:\n-#line 1352 \"c-parse.y\"\n+#line 1358 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 263:\n-#line 1354 \"c-parse.y\"\n+#line 1360 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  pedwarn (\"no semicolon at end of struct or union\"); ;\n     break;}\n case 264:\n-#line 1359 \"c-parse.y\"\n+#line 1365 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 265:\n-#line 1361 \"c-parse.y\"\n+#line 1367 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 266:\n-#line 1363 \"c-parse.y\"\n+#line 1369 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"extra semicolon in struct or union specified\"); ;\n     break;}\n case 267:\n-#line 1378 \"c-parse.y\"\n+#line 1384 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 268:\n-#line 1384 \"c-parse.y\"\n+#line 1390 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids member declarations with no members\");\n \t\t  shadow_tag(yyvsp[0].ttype);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 269:\n-#line 1389 \"c-parse.y\"\n+#line 1395 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 270:\n-#line 1395 \"c-parse.y\"\n+#line 1401 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids member declarations with no members\");\n \t\t  shadow_tag(yyvsp[0].ttype);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 271:\n-#line 1400 \"c-parse.y\"\n+#line 1406 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 272:\n-#line 1402 \"c-parse.y\"\n+#line 1408 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  pedantic = yyvsp[-1].itype; ;\n     break;}\n case 274:\n-#line 1409 \"c-parse.y\"\n+#line 1415 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 275:\n-#line 1414 \"c-parse.y\"\n+#line 1420 \"c-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-3].filename, yyvsp[-2].lineno, yyvsp[-1].ttype, current_declspecs, NULL_TREE);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 276:\n-#line 1418 \"c-parse.y\"\n+#line 1424 \"c-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-5].filename, yyvsp[-4].lineno, yyvsp[-3].ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 277:\n-#line 1421 \"c-parse.y\"\n+#line 1427 \"c-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-4].filename, yyvsp[-3].lineno, NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 279:\n-#line 1433 \"c-parse.y\"\n+#line 1439 \"c-parse.y\"\n { if (yyvsp[-2].ttype == error_mark_node)\n \t\t    yyval.ttype = yyvsp[-2].ttype;\n \t\t  else\n \t\t    yyval.ttype = chainon (yyvsp[0].ttype, yyvsp[-2].ttype); ;\n     break;}\n case 280:\n-#line 1438 \"c-parse.y\"\n+#line 1444 \"c-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 281:\n-#line 1444 \"c-parse.y\"\n+#line 1450 \"c-parse.y\"\n { yyval.ttype = build_enumerator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 282:\n-#line 1446 \"c-parse.y\"\n+#line 1452 \"c-parse.y\"\n { yyval.ttype = build_enumerator (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 283:\n-#line 1451 \"c-parse.y\"\n+#line 1457 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 284:\n-#line 1453 \"c-parse.y\"\n+#line 1459 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 285:\n-#line 1458 \"c-parse.y\"\n+#line 1464 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 287:\n-#line 1464 \"c-parse.y\"\n+#line 1470 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 288:\n-#line 1466 \"c-parse.y\"\n+#line 1472 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 289:\n-#line 1471 \"c-parse.y\"\n+#line 1477 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 290:\n-#line 1473 \"c-parse.y\"\n+#line 1479 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 291:\n-#line 1478 \"c-parse.y\"\n+#line 1484 \"c-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 292:\n-#line 1481 \"c-parse.y\"\n+#line 1487 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 293:\n-#line 1483 \"c-parse.y\"\n+#line 1489 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 294:\n-#line 1485 \"c-parse.y\"\n+#line 1491 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 295:\n-#line 1487 \"c-parse.y\"\n+#line 1493 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 296:\n-#line 1489 \"c-parse.y\"\n+#line 1495 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 297:\n-#line 1491 \"c-parse.y\"\n+#line 1497 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 298:\n-#line 1493 \"c-parse.y\"\n+#line 1499 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 299:\n-#line 1495 \"c-parse.y\"\n+#line 1501 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, NULL_TREE, NULL_TREE); ;\n     break;}\n case 300:\n-#line 1499 \"c-parse.y\"\n+#line 1505 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 301:\n-#line 1508 \"c-parse.y\"\n+#line 1514 \"c-parse.y\"\n {\n \t\t  if (pedantic && yyvsp[0].ends_in_label)\n \t\t    pedwarn (\"ANSI C forbids label at end of compound statement\");\n \t\t;\n     break;}\n case 303:\n-#line 1517 \"c-parse.y\"\n+#line 1523 \"c-parse.y\"\n { yyval.ends_in_label = yyvsp[0].ends_in_label; ;\n     break;}\n case 304:\n-#line 1519 \"c-parse.y\"\n+#line 1525 \"c-parse.y\"\n { yyval.ends_in_label = 0; ;\n     break;}\n case 308:\n-#line 1531 \"c-parse.y\"\n+#line 1537 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  pushlevel (0);\n \t\t  clear_last_expr ();\n@@ -3162,12 +3168,12 @@ case 308:\n \t\t;\n     break;}\n case 310:\n-#line 1544 \"c-parse.y\"\n+#line 1550 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids label declarations\"); ;\n     break;}\n case 313:\n-#line 1555 \"c-parse.y\"\n+#line 1561 \"c-parse.y\"\n { tree link;\n \t\t  for (link = yyvsp[-1].ttype; link; link = TREE_CHAIN (link))\n \t\t    {\n@@ -3178,19 +3184,19 @@ case 313:\n \t\t;\n     break;}\n case 314:\n-#line 1569 \"c-parse.y\"\n+#line 1575 \"c-parse.y\"\n {;\n     break;}\n case 316:\n-#line 1573 \"c-parse.y\"\n+#line 1579 \"c-parse.y\"\n { compstmt_count++; ;\n     break;}\n case 317:\n-#line 1576 \"c-parse.y\"\n+#line 1582 \"c-parse.y\"\n { yyval.ttype = convert (void_type_node, integer_zero_node); ;\n     break;}\n case 318:\n-#line 1578 \"c-parse.y\"\n+#line 1584 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), 1, 0);\n \t\t  yyval.ttype = poplevel (1, 1, 0);\n@@ -3200,7 +3206,7 @@ case 318:\n \t\t    pop_momentary (); ;\n     break;}\n case 319:\n-#line 1586 \"c-parse.y\"\n+#line 1592 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  yyval.ttype = poplevel (kept_level_p (), 0, 0);\n@@ -3210,7 +3216,7 @@ case 319:\n \t\t    pop_momentary (); ;\n     break;}\n case 320:\n-#line 1594 \"c-parse.y\"\n+#line 1600 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  yyval.ttype = poplevel (kept_level_p (), 0, 0);\n@@ -3220,7 +3226,7 @@ case 320:\n \t\t    pop_momentary (); ;\n     break;}\n case 321:\n-#line 1605 \"c-parse.y\"\n+#line 1611 \"c-parse.y\"\n { if (current_function_decl == 0)\n \t\t    {\n \t\t      error (\"braced-group within expression allowed only inside a function\");\n@@ -3238,11 +3244,11 @@ case 321:\n \t\t;\n     break;}\n case 322:\n-#line 1622 \"c-parse.y\"\n+#line 1628 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 325:\n-#line 1636 \"c-parse.y\"\n+#line 1642 \"c-parse.y\"\n { emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  c_expand_start_cond (truthvalue_conversion (yyvsp[-1].ttype), 0, \n \t\t\t\t       compstmt_count);\n@@ -3252,7 +3258,7 @@ case 325:\n \t\t  position_after_white_space (); ;\n     break;}\n case 326:\n-#line 1650 \"c-parse.y\"\n+#line 1656 \"c-parse.y\"\n { stmt_count++;\n \t\t  compstmt_count++;\n \t\t  emit_line_note (yyvsp[-2].filename, yyvsp[-1].lineno);\n@@ -3262,43 +3268,43 @@ case 326:\n \t\t  position_after_white_space (); ;\n     break;}\n case 327:\n-#line 1658 \"c-parse.y\"\n+#line 1664 \"c-parse.y\"\n { expand_loop_continue_here (); ;\n     break;}\n case 328:\n-#line 1662 \"c-parse.y\"\n+#line 1668 \"c-parse.y\"\n { yyval.filename = input_filename; ;\n     break;}\n case 329:\n-#line 1666 \"c-parse.y\"\n+#line 1672 \"c-parse.y\"\n { yyval.lineno = lineno; ;\n     break;}\n case 330:\n-#line 1671 \"c-parse.y\"\n+#line 1677 \"c-parse.y\"\n { ;\n     break;}\n case 331:\n-#line 1676 \"c-parse.y\"\n+#line 1682 \"c-parse.y\"\n { ;\n     break;}\n case 332:\n-#line 1681 \"c-parse.y\"\n+#line 1687 \"c-parse.y\"\n { yyval.ends_in_label = yyvsp[0].ends_in_label; ;\n     break;}\n case 333:\n-#line 1686 \"c-parse.y\"\n+#line 1692 \"c-parse.y\"\n { yyval.ends_in_label = 0; ;\n     break;}\n case 334:\n-#line 1688 \"c-parse.y\"\n+#line 1694 \"c-parse.y\"\n { yyval.ends_in_label = 1; ;\n     break;}\n case 335:\n-#line 1694 \"c-parse.y\"\n+#line 1700 \"c-parse.y\"\n { stmt_count++; ;\n     break;}\n case 337:\n-#line 1697 \"c-parse.y\"\n+#line 1703 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n /* It appears that this should not be done--that a non-lvalue array\n@@ -3317,19 +3323,19 @@ case 337:\n \t\t  clear_momentary (); ;\n     break;}\n case 338:\n-#line 1714 \"c-parse.y\"\n+#line 1720 \"c-parse.y\"\n { c_expand_start_else ();\n \t\t  yyvsp[-1].itype = stmt_count;\n \t\t  position_after_white_space (); ;\n     break;}\n case 339:\n-#line 1718 \"c-parse.y\"\n+#line 1724 \"c-parse.y\"\n { c_expand_end_cond ();\n \t\t  if (extra_warnings && stmt_count == yyvsp[-3].itype)\n \t\t    warning (\"empty body in an else-statement\"); ;\n     break;}\n case 340:\n-#line 1722 \"c-parse.y\"\n+#line 1728 \"c-parse.y\"\n { c_expand_end_cond ();\n \t\t  /* This warning is here instead of in simple_if, because we\n \t\t     do not want a warning if an empty if is followed by an\n@@ -3340,11 +3346,11 @@ case 340:\n \t\t\t\t\t\t\"empty body in an if-statement\"); ;\n     break;}\n case 341:\n-#line 1734 \"c-parse.y\"\n+#line 1740 \"c-parse.y\"\n { c_expand_end_cond (); ;\n     break;}\n case 342:\n-#line 1736 \"c-parse.y\"\n+#line 1742 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-2].filename, yyvsp[-1].lineno);\n \t\t  /* The emit_nop used to come before emit_line_note,\n@@ -3356,7 +3362,7 @@ case 342:\n \t\t  emit_nop (); ;\n     break;}\n case 343:\n-#line 1746 \"c-parse.y\"\n+#line 1752 \"c-parse.y\"\n { /* Don't start the loop till we have succeeded\n \t\t     in parsing the end test.  This is to make sure\n \t\t     that we end every loop we start.  */\n@@ -3367,24 +3373,24 @@ case 343:\n \t\t  position_after_white_space (); ;\n     break;}\n case 344:\n-#line 1755 \"c-parse.y\"\n+#line 1761 \"c-parse.y\"\n { expand_end_loop (); ;\n     break;}\n case 345:\n-#line 1758 \"c-parse.y\"\n+#line 1764 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_exit_loop_if_false (NULL_PTR,\n \t\t\t\t\t     truthvalue_conversion (yyvsp[-2].ttype));\n \t\t  expand_end_loop ();\n \t\t  clear_momentary (); ;\n     break;}\n case 346:\n-#line 1765 \"c-parse.y\"\n+#line 1771 \"c-parse.y\"\n { expand_end_loop ();\n \t\t  clear_momentary (); ;\n     break;}\n case 347:\n-#line 1769 \"c-parse.y\"\n+#line 1775 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  /* See comment in `while' alternative, above.  */\n@@ -3397,12 +3403,12 @@ case 347:\n \t\t;\n     break;}\n case 348:\n-#line 1781 \"c-parse.y\"\n+#line 1787 \"c-parse.y\"\n { yyvsp[0].lineno = lineno;\n \t\t  yyval.filename = input_filename; ;\n     break;}\n case 349:\n-#line 1784 \"c-parse.y\"\n+#line 1790 \"c-parse.y\"\n { \n \t\t  /* Start the loop.  Doing this after parsing\n \t\t     all the expressions ensures we will end the loop.  */\n@@ -3420,7 +3426,7 @@ case 349:\n \t\t  position_after_white_space (); ;\n     break;}\n case 350:\n-#line 1800 \"c-parse.y\"\n+#line 1806 \"c-parse.y\"\n { /* Emit the increment expression, with a line number.  */\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-5].lineno);\n \t\t  expand_loop_continue_here ();\n@@ -3433,7 +3439,7 @@ case 350:\n \t\t  expand_end_loop (); ;\n     break;}\n case 351:\n-#line 1811 \"c-parse.y\"\n+#line 1817 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  c_expand_start_case (yyvsp[-1].ttype);\n@@ -3443,41 +3449,41 @@ case 351:\n \t\t  position_after_white_space (); ;\n     break;}\n case 352:\n-#line 1819 \"c-parse.y\"\n+#line 1825 \"c-parse.y\"\n { expand_end_case (yyvsp[-3].ttype);\n \t\t  if (yychar == CONSTANT || yychar == STRING)\n \t\t    pop_momentary_nofree ();\n \t\t  else\n \t\t    pop_momentary (); ;\n     break;}\n case 353:\n-#line 1825 \"c-parse.y\"\n+#line 1831 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  if ( ! expand_exit_something ())\n \t\t    error (\"break statement not within loop or switch\"); ;\n     break;}\n case 354:\n-#line 1830 \"c-parse.y\"\n+#line 1836 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  if (! expand_continue_loop (NULL_PTR))\n \t\t    error (\"continue statement not within a loop\"); ;\n     break;}\n case 355:\n-#line 1835 \"c-parse.y\"\n+#line 1841 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  c_expand_return (NULL_TREE); ;\n     break;}\n case 356:\n-#line 1839 \"c-parse.y\"\n+#line 1845 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-3].lineno);\n \t\t  c_expand_return (yyvsp[-1].ttype); ;\n     break;}\n case 357:\n-#line 1843 \"c-parse.y\"\n+#line 1849 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-7].filename, yyvsp[-6].lineno);\n \t\t  STRIP_NOPS (yyvsp[-2].ttype);\n@@ -3489,31 +3495,31 @@ case 357:\n \t\t    error (\"argument of `asm' is not a constant string\"); ;\n     break;}\n case 358:\n-#line 1854 \"c-parse.y\"\n+#line 1860 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-9].filename, yyvsp[-8].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n \t\t\t\t\t yyvsp[-6].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 359:\n-#line 1861 \"c-parse.y\"\n+#line 1867 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-11].filename, yyvsp[-10].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n \t\t\t\t\t yyvsp[-8].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 360:\n-#line 1869 \"c-parse.y\"\n+#line 1875 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-13].filename, yyvsp[-12].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype,\n \t\t\t\t\t yyvsp[-10].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 361:\n-#line 1875 \"c-parse.y\"\n+#line 1881 \"c-parse.y\"\n { tree decl;\n \t\t  stmt_count++;\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-3].lineno);\n@@ -3526,15 +3532,15 @@ case 361:\n \t\t;\n     break;}\n case 362:\n-#line 1886 \"c-parse.y\"\n+#line 1892 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids `goto *expr;'\");\n \t\t  stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  expand_computed_goto (convert (ptr_type_node, yyvsp[-1].ttype)); ;\n     break;}\n case 365:\n-#line 1901 \"c-parse.y\"\n+#line 1907 \"c-parse.y\"\n {\n \t    /* The value returned by this action is  */\n \t    /*      1 if everything is OK */ \n@@ -3557,14 +3563,14 @@ case 365:\n \t  ;\n     break;}\n case 366:\n-#line 1922 \"c-parse.y\"\n+#line 1928 \"c-parse.y\"\n {\n \t    if (yyvsp[-1].itype)\n \t      iterator_for_loop_end (yyvsp[-3].ttype);\n \t  ;\n     break;}\n case 367:\n-#line 1957 \"c-parse.y\"\n+#line 1963 \"c-parse.y\"\n { register tree value = check_case_value (yyvsp[-1].ttype);\n \t\t  register tree label\n \t\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n@@ -3597,7 +3603,7 @@ case 367:\n \t\t  position_after_white_space (); ;\n     break;}\n case 368:\n-#line 1988 \"c-parse.y\"\n+#line 1994 \"c-parse.y\"\n { register tree value1 = check_case_value (yyvsp[-3].ttype);\n \t\t  register tree value2 = check_case_value (yyvsp[-1].ttype);\n \t\t  register tree label\n@@ -3630,7 +3636,7 @@ case 368:\n \t\t  position_after_white_space (); ;\n     break;}\n case 369:\n-#line 2019 \"c-parse.y\"\n+#line 2025 \"c-parse.y\"\n {\n \t\t  tree duplicate;\n \t\t  register tree label\n@@ -3647,7 +3653,7 @@ case 369:\n \t\t  position_after_white_space (); ;\n     break;}\n case 370:\n-#line 2034 \"c-parse.y\"\n+#line 2040 \"c-parse.y\"\n { tree label = define_label (input_filename, lineno, yyvsp[-2].ttype);\n \t\t  stmt_count++;\n \t\t  emit_nop ();\n@@ -3659,52 +3665,52 @@ case 370:\n \t\t  position_after_white_space (); ;\n     break;}\n case 371:\n-#line 2049 \"c-parse.y\"\n+#line 2055 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 372:\n-#line 2052 \"c-parse.y\"\n+#line 2058 \"c-parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 373:\n-#line 2057 \"c-parse.y\"\n+#line 2063 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 375:\n-#line 2064 \"c-parse.y\"\n+#line 2070 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 378:\n-#line 2071 \"c-parse.y\"\n+#line 2077 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 379:\n-#line 2076 \"c-parse.y\"\n+#line 2082 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 380:\n-#line 2081 \"c-parse.y\"\n+#line 2087 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, combine_strings (yyvsp[0].ttype), NULL_TREE); ;\n     break;}\n case 381:\n-#line 2083 \"c-parse.y\"\n+#line 2089 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, combine_strings (yyvsp[0].ttype), yyvsp[-2].ttype); ;\n     break;}\n case 382:\n-#line 2089 \"c-parse.y\"\n+#line 2095 \"c-parse.y\"\n { pushlevel (0);\n \t\t  clear_parm_order ();\n \t\t  declare_parm_level (0); ;\n     break;}\n case 383:\n-#line 2093 \"c-parse.y\"\n+#line 2099 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  parmlist_tags_warning ();\n \t\t  poplevel (0, 0, 0); ;\n     break;}\n case 385:\n-#line 2101 \"c-parse.y\"\n+#line 2107 \"c-parse.y\"\n { tree parm;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids forward parameter declarations\");\n@@ -3714,19 +3720,19 @@ case 385:\n \t\t  clear_parm_order (); ;\n     break;}\n case 386:\n-#line 2109 \"c-parse.y\"\n+#line 2115 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 387:\n-#line 2111 \"c-parse.y\"\n+#line 2117 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, NULL_TREE, NULL_TREE); ;\n     break;}\n case 388:\n-#line 2117 \"c-parse.y\"\n+#line 2123 \"c-parse.y\"\n { yyval.ttype = get_parm_info (0); ;\n     break;}\n case 389:\n-#line 2119 \"c-parse.y\"\n+#line 2125 \"c-parse.y\"\n { yyval.ttype = get_parm_info (0);\n \t\t  /* Gcc used to allow this as an extension.  However, it does\n \t\t     not work for all targets, and thus has been disabled.\n@@ -3738,23 +3744,23 @@ case 389:\n \t\t;\n     break;}\n case 390:\n-#line 2129 \"c-parse.y\"\n+#line 2135 \"c-parse.y\"\n { yyval.ttype = get_parm_info (1); ;\n     break;}\n case 391:\n-#line 2131 \"c-parse.y\"\n+#line 2137 \"c-parse.y\"\n { yyval.ttype = get_parm_info (0); ;\n     break;}\n case 392:\n-#line 2136 \"c-parse.y\"\n+#line 2142 \"c-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 393:\n-#line 2138 \"c-parse.y\"\n+#line 2144 \"c-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 394:\n-#line 2145 \"c-parse.y\"\n+#line 2151 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3765,7 +3771,7 @@ case 394:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 395:\n-#line 2154 \"c-parse.y\"\n+#line 2160 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3776,7 +3782,7 @@ case 395:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 396:\n-#line 2163 \"c-parse.y\"\n+#line 2169 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3787,7 +3793,7 @@ case 396:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 397:\n-#line 2172 \"c-parse.y\"\n+#line 2178 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3798,7 +3804,7 @@ case 397:\n \t\t  resume_momentary (yyvsp[-2].itype);  ;\n     break;}\n case 398:\n-#line 2182 \"c-parse.y\"\n+#line 2188 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3809,43 +3815,43 @@ case 398:\n \t\t  resume_momentary (yyvsp[-2].itype);  ;\n     break;}\n case 399:\n-#line 2196 \"c-parse.y\"\n+#line 2202 \"c-parse.y\"\n { pushlevel (0);\n \t\t  clear_parm_order ();\n \t\t  declare_parm_level (1); ;\n     break;}\n case 400:\n-#line 2200 \"c-parse.y\"\n+#line 2206 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  parmlist_tags_warning ();\n \t\t  poplevel (0, 0, 0); ;\n     break;}\n case 402:\n-#line 2208 \"c-parse.y\"\n+#line 2214 \"c-parse.y\"\n { tree t;\n \t\t  for (t = yyvsp[-1].ttype; t; t = TREE_CHAIN (t))\n \t\t    if (TREE_VALUE (t) == NULL_TREE)\n \t\t      error (\"`...' in old-style identifier list\");\n \t\t  yyval.ttype = tree_cons (NULL_TREE, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 403:\n-#line 2218 \"c-parse.y\"\n+#line 2224 \"c-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 404:\n-#line 2220 \"c-parse.y\"\n+#line 2226 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 405:\n-#line 2226 \"c-parse.y\"\n+#line 2232 \"c-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 406:\n-#line 2228 \"c-parse.y\"\n+#line 2234 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 407:\n-#line 2233 \"c-parse.y\"\n+#line 2239 \"c-parse.y\"\n { yyval.itype = pedantic;\n \t\t  pedantic = 0; ;\n     break;}\n@@ -4071,5 +4077,5 @@ case 407:\n     }\n   return 1;\n }\n-#line 2237 \"c-parse.y\"\n+#line 2243 \"c-parse.y\"\n "}, {"sha": "7dd65203997eb75de8fb68dcde512cbfb825488b", "filename": "gcc/c-parse.in", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b", "patch": "@@ -1301,11 +1301,14 @@ end ifc\n \f\n nested_function:\n \t  declarator\n-\t\t{ push_c_function_context ();\n+\t\t{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids nested functions\");\n+\n+\t\t  push_function_context ();\n \t\t  if (! start_function (current_declspecs, $1,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 1))\n \t\t    {\n-\t\t      pop_c_function_context ();\n+\t\t      pop_function_context ();\n \t\t      YYERROR1;\n \t\t    }\n \t\t  reinit_parse_for_function (); }\n@@ -1319,16 +1322,19 @@ nested_function:\n    which called YYERROR1 again, and so on.  */\n \t  compstmt\n \t\t{ finish_function (1);\n-\t\t  pop_c_function_context (); }\n+\t\t  pop_function_context (); }\n \t;\n \n notype_nested_function:\n \t  notype_declarator\n-\t\t{ push_c_function_context ();\n+\t\t{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids nested functions\");\n+\n+\t\t  push_function_context ();\n \t\t  if (! start_function (current_declspecs, $1,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 1))\n \t\t    {\n-\t\t      pop_c_function_context ();\n+\t\t      pop_function_context ();\n \t\t      YYERROR1;\n \t\t    }\n \t\t  reinit_parse_for_function (); }\n@@ -1342,7 +1348,7 @@ notype_nested_function:\n    which called YYERROR1 again, and so on.  */\n \t  compstmt\n \t\t{ finish_function (1);\n-\t\t  pop_c_function_context (); }\n+\t\t  pop_function_context (); }\n \t;\n \n /* Any kind of declarator (thus, all declarators allowed"}, {"sha": "14b381a5eaed1996fb4b40aae9de66fc9456d35d", "filename": "gcc/c-parse.y", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Fc-parse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Fc-parse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.y?ref=e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b", "patch": "@@ -1133,11 +1133,14 @@ designator:\n \f\n nested_function:\n \t  declarator\n-\t\t{ push_c_function_context ();\n+\t\t{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids nested functions\");\n+\n+\t\t  push_function_context ();\n \t\t  if (! start_function (current_declspecs, $1,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 1))\n \t\t    {\n-\t\t      pop_c_function_context ();\n+\t\t      pop_function_context ();\n \t\t      YYERROR1;\n \t\t    }\n \t\t  reinit_parse_for_function (); }\n@@ -1151,16 +1154,19 @@ nested_function:\n    which called YYERROR1 again, and so on.  */\n \t  compstmt\n \t\t{ finish_function (1);\n-\t\t  pop_c_function_context (); }\n+\t\t  pop_function_context (); }\n \t;\n \n notype_nested_function:\n \t  notype_declarator\n-\t\t{ push_c_function_context ();\n+\t\t{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids nested functions\");\n+\n+\t\t  push_function_context ();\n \t\t  if (! start_function (current_declspecs, $1,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 1))\n \t\t    {\n-\t\t      pop_c_function_context ();\n+\t\t      pop_function_context ();\n \t\t      YYERROR1;\n \t\t    }\n \t\t  reinit_parse_for_function (); }\n@@ -1174,7 +1180,7 @@ notype_nested_function:\n    which called YYERROR1 again, and so on.  */\n \t  compstmt\n \t\t{ finish_function (1);\n-\t\t  pop_c_function_context (); }\n+\t\t  pop_function_context (); }\n \t;\n \n /* Any kind of declarator (thus, all declarators allowed"}, {"sha": "e11ed7bc4fbb8b461ff39f9a1b2f44cb31db09dd", "filename": "gcc/c-tree.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b", "patch": "@@ -222,13 +222,13 @@ extern tree lookup_name_current_level_global\tPROTO((tree));\n extern tree maybe_build_cleanup                 PROTO((tree));\n extern void parmlist_tags_warning               PROTO((void));\n extern void pending_xref_error                  PROTO((void));\n-extern void pop_c_function_context              PROTO((void));\n+extern void push_c_function_context             PROTO((struct function *));\n+extern void pop_c_function_context              PROTO((struct function *));\n extern void pop_label_level                     PROTO((void));\n extern tree poplevel                            PROTO((int, int, int));\n extern void print_lang_decl                     PROTO((FILE *, tree, int));\n extern void print_lang_identifier               PROTO((FILE *, tree, int));\n extern void print_lang_type                     PROTO((FILE *, tree, int));\n-extern void push_c_function_context             PROTO((void));\n extern void push_label_level                    PROTO((void));\n extern void push_parm_decl                      PROTO((tree));\n extern tree pushdecl                            PROTO((tree));"}, {"sha": "fd04427edbb6ec44473f7245705dd55c82325cdf", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 21, "deletions": 9, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b", "patch": "@@ -502,18 +502,17 @@ gen_reg_rtx (mode)\n     {\n       int old_size = f->emit->regno_pointer_flag_length;\n       rtx *new1;\n-      char *new = (char *) savealloc (old_size * 2);\n-      memcpy (new, f->emit->regno_pointer_flag, old_size);\n+      char *new;\n+      new = xrealloc (f->emit->regno_pointer_flag, old_size * 2);\n       memset (new + old_size, 0, old_size);\n       f->emit->regno_pointer_flag = new;\n \n-      new = (char *) savealloc (old_size * 2);\n-      memcpy (new, f->emit->regno_pointer_align, old_size);\n+      new = xrealloc (f->emit->regno_pointer_align, old_size * 2);\n       memset (new + old_size, 0, old_size);\n       f->emit->regno_pointer_align = new;\n \n-      new1 = (rtx *) savealloc (old_size * 2 * sizeof (rtx));\n-      memcpy (new1, regno_reg_rtx, old_size * sizeof (rtx));\n+      new1 = (rtx *) xrealloc (f->emit->x_regno_reg_rtx,\n+\t\t\t       old_size * 2 * sizeof (rtx));\n       memset (new1 + old_size, 0, old_size * sizeof (rtx));\n       regno_reg_rtx = new1;\n \n@@ -1597,6 +1596,19 @@ restore_emit_status (p)\n   last_label_num = 0;\n   clear_emit_caches ();\n }\n+\n+/* Clear out all parts of our state in F that can safely be discarded\n+   after the function has been compiled, to let garbage collection\n+   reclaim the memory.  */\n+void\n+free_emit_status (f)\n+     struct function *f;\n+{\n+  free (f->emit->x_regno_reg_rtx);\n+  free (f->emit->regno_pointer_flag);\n+  free (f->emit->regno_pointer_align);\n+  f->emit->x_regno_reg_rtx = 0;\n+}\n \f\n /* Go through all the RTL insn bodies and copy any invalid shared structure.\n    It does not work to do this twice, because the mark bits set here\n@@ -3404,15 +3416,15 @@ init_emit ()\n   f->emit->regno_pointer_flag_length = LAST_VIRTUAL_REGISTER + 101;\n \n   f->emit->regno_pointer_flag \n-    = (char *) savealloc (f->emit->regno_pointer_flag_length);\n+    = (char *) xmalloc (f->emit->regno_pointer_flag_length);\n   bzero (f->emit->regno_pointer_flag, f->emit->regno_pointer_flag_length);\n \n   f->emit->regno_pointer_align\n-    = (char *) savealloc (f->emit->regno_pointer_flag_length);\n+    = (char *) xmalloc (f->emit->regno_pointer_flag_length);\n   bzero (f->emit->regno_pointer_align, f->emit->regno_pointer_flag_length);\n \n   regno_reg_rtx \n-    = (rtx *) savealloc (f->emit->regno_pointer_flag_length * sizeof (rtx));\n+    = (rtx *) xmalloc (f->emit->regno_pointer_flag_length * sizeof (rtx));\n   bzero ((char *) regno_reg_rtx,\n \t f->emit->regno_pointer_flag_length * sizeof (rtx));\n "}, {"sha": "cb474b2308aa24018262a315102ba52bcb3c068e", "filename": "gcc/function.c", "status": "modified", "additions": 63, "deletions": 108, "changes": 171, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b", "patch": "@@ -120,10 +120,12 @@ static int virtuals_instantiated;\n void (*init_machine_status) PROTO((struct function *));\n void (*save_machine_status) PROTO((struct function *));\n void (*restore_machine_status) PROTO((struct function *));\n+void (*mark_machine_status) PROTO((struct function *));\n \n /* Likewise, but for language-specific data.  */\n void (*save_lang_status) PROTO((struct function *));\n void (*restore_lang_status) PROTO((struct function *));\n+void (*mark_lang_status) PROTO((struct function *));\n \n /* The FUNCTION_DECL for an inline function currently being expanded.  */\n tree inline_function_decl;\n@@ -219,7 +221,7 @@ struct insns_for_mem_entry {\n \n /* Forward declarations.  */\n \n-static rtx assign_outer_stack_local PROTO ((enum machine_mode, HOST_WIDE_INT,\n+static rtx assign_stack_local_1 PROTO ((enum machine_mode, HOST_WIDE_INT,\n \t\t\t\t\t    int, struct function *));\n static rtx assign_stack_temp_for_type PROTO ((enum machine_mode, HOST_WIDE_INT,\n \t\t\t\t\t      int, tree));\n@@ -375,6 +377,21 @@ pop_function_context ()\n {\n   pop_function_context_from (current_function_decl);\n }\n+\n+/* Clear out all parts of the state in F that can safely be discarded\n+   after the function has been compiled, to let garbage collection\n+   reclaim the memory.  */\n+void\n+free_after_compilation (f)\n+     struct function *f;\n+{\n+  free_emit_status (f);\n+  free_varasm_status (f);\n+\n+  free (f->x_parm_reg_stack_loc);\n+\n+  f->can_garbage_collect = 1;\n+}\n \f\n /* Allocate fixed slots in the stack frame of the current function.  */\n \n@@ -411,18 +428,27 @@ get_frame_size ()\n    -1 means use BIGGEST_ALIGNMENT and round size to multiple of that,\n    positive specifies alignment boundary in bits.\n \n-   We do not round to stack_boundary here.  */\n+   We do not round to stack_boundary here.\n \n-rtx\n-assign_stack_local (mode, size, align)\n+   FUNCTION specifies the function to allocate in.  */\n+\n+static rtx\n+assign_stack_local_1 (mode, size, align, function)\n      enum machine_mode mode;\n      HOST_WIDE_INT size;\n      int align;\n+     struct function *function;\n {\n   register rtx x, addr;\n   int bigend_correction = 0;\n   int alignment;\n \n+  /* Allocate in the memory associated with the function in whose frame\n+     we are assigning.  */\n+  if (function != current_function)\n+    push_obstacks (function->function_obstack,\n+\t\t   function->function_maybepermanent_obstack);\n+\n   if (align == 0)\n     {\n       tree type;\n@@ -448,7 +474,7 @@ assign_stack_local (mode, size, align)\n     alignment = align / BITS_PER_UNIT;\n \n #ifdef FRAME_GROWS_DOWNWARD\n-  frame_offset -= size;\n+  function->x_frame_offset -= size;\n #endif\n \n   /* Round frame offset to that alignment.\n@@ -457,9 +483,9 @@ assign_stack_local (mode, size, align)\n      like.  So we instead assume that ALIGNMENT is a power of two and\n      use logical operations which are unambiguous.  */\n #ifdef FRAME_GROWS_DOWNWARD\n-  frame_offset = FLOOR_ROUND (frame_offset, alignment);\n+  function->x_frame_offset = FLOOR_ROUND (function->x_frame_offset, alignment);\n #else\n-  frame_offset = CEIL_ROUND (frame_offset, alignment);\n+  function->x_frame_offset = CEIL_ROUND (function->x_frame_offset, alignment);\n #endif\n \n   /* On a big-endian machine, if we are allocating more space than we will use,\n@@ -469,7 +495,7 @@ assign_stack_local (mode, size, align)\n \n   /* If we have already instantiated virtual registers, return the actual\n      address relative to the frame pointer.  */\n-  if (virtuals_instantiated)\n+  if (function == current_function && virtuals_instantiated)\n     addr = plus_constant (frame_pointer_rtx,\n \t\t\t  (frame_offset + bigend_correction\n \t\t\t   + STARTING_FRAME_OFFSET));\n@@ -478,90 +504,29 @@ assign_stack_local (mode, size, align)\n \t\t\t  frame_offset + bigend_correction);\n \n #ifndef FRAME_GROWS_DOWNWARD\n-  frame_offset += size;\n+  function->x_frame_offset += size;\n #endif\n \n   x = gen_rtx_MEM (mode, addr);\n \n-  stack_slot_list = gen_rtx_EXPR_LIST (VOIDmode, x, stack_slot_list);\n+  function->x_stack_slot_list\n+    = gen_rtx_EXPR_LIST (VOIDmode, x, function->x_stack_slot_list);\n+\n+  if (function != current_function)\n+    pop_obstacks ();\n \n   return x;\n }\n \n-/* Assign a stack slot in a containing function.\n-   First three arguments are same as in preceding function.\n-   The last argument specifies the function to allocate in.  */\n-\n-static rtx\n-assign_outer_stack_local (mode, size, align, function)\n+/* Wrapper around assign_stack_local_1;  assign a local stack slot for the\n+   current function.  */\n+rtx\n+assign_stack_local (mode, size, align)\n      enum machine_mode mode;\n      HOST_WIDE_INT size;\n      int align;\n-     struct function *function;\n {\n-  register rtx x, addr;\n-  int bigend_correction = 0;\n-  int alignment;\n-\n-  /* Allocate in the memory associated with the function in whose frame\n-     we are assigning.  */\n-  push_obstacks (function->function_obstack,\n-\t\t function->function_maybepermanent_obstack);\n-\n-  if (align == 0)\n-    {\n-      tree type;\n-\n-      alignment = GET_MODE_ALIGNMENT (mode);\n-      if (mode == BLKmode)\n-\talignment = BIGGEST_ALIGNMENT;\n-\n-      /* Allow the target to (possibly) increase the alignment of this\n-\t stack slot.  */\n-      type = type_for_mode (mode, 0);\n-      if (type)\n-\talignment = LOCAL_ALIGNMENT (type, alignment);\n-\n-      alignment /= BITS_PER_UNIT;\n-    }\n-  else if (align == -1)\n-    {\n-      alignment = BIGGEST_ALIGNMENT / BITS_PER_UNIT;\n-      size = CEIL_ROUND (size, alignment);\n-    }\n-  else\n-    alignment = align / BITS_PER_UNIT;\n-\n-#ifdef FRAME_GROWS_DOWNWARD\n-  function->x_frame_offset -= size;\n-#endif\n-\n-  /* Round frame offset to that alignment.  */\n-#ifdef FRAME_GROWS_DOWNWARD\n-  function->x_frame_offset = FLOOR_ROUND (function->x_frame_offset, alignment);\n-#else\n-  function->x_frame_offset = CEIL_ROUND (function->x_frame_offset, alignment);\n-#endif\n-\n-  /* On a big-endian machine, if we are allocating more space than we will use,\n-     use the least significant bytes of those that are allocated.  */\n-  if (BYTES_BIG_ENDIAN && mode != BLKmode)\n-    bigend_correction = size - GET_MODE_SIZE (mode);\n-\n-  addr = plus_constant (virtual_stack_vars_rtx,\n-\t\t\tfunction->x_frame_offset + bigend_correction);\n-#ifndef FRAME_GROWS_DOWNWARD\n-  function->x_frame_offset += size;\n-#endif\n-\n-  x = gen_rtx_MEM (mode, addr);\n-\n-  function->x_stack_slot_list\n-    = gen_rtx_EXPR_LIST (VOIDmode, x, function->x_stack_slot_list);\n-\n-  pop_obstacks ();\n-\n-  return x;\n+  return assign_stack_local_1 (mode, size, align, current_function);\n }\n \f\n /* Allocate a temporary stack slot and record it for possible later\n@@ -1334,27 +1299,17 @@ put_reg_into_stack (function, reg, type, promoted_mode, decl_mode, volatile_p,\n      int used_p;\n      struct hash_table *ht;\n {\n+  struct function *func = function ? function : current_function;\n   rtx new = 0;\n   int regno = original_regno;\n \n   if (regno == 0)\n     regno = REGNO (reg);\n \n-  if (function)\n-    {\n-      if (regno < function->x_max_parm_reg)\n-\tnew = function->x_parm_reg_stack_loc[regno];\n-      if (new == 0)\n-\tnew = assign_outer_stack_local (decl_mode, GET_MODE_SIZE (decl_mode),\n-\t\t\t\t\t0, function);\n-    }\n-  else\n-    {\n-      if (regno < max_parm_reg)\n-\tnew = parm_reg_stack_loc[regno];\n-      if (new == 0)\n-\tnew = assign_stack_local (decl_mode, GET_MODE_SIZE (decl_mode), 0);\n-    }\n+  if (regno < func->x_max_parm_reg)\n+    new = func->x_parm_reg_stack_loc[regno];\n+  if (new == 0)\n+    new = assign_stack_local_1 (decl_mode, GET_MODE_SIZE (decl_mode), 0, func);\n \n   PUT_CODE (reg, MEM);\n   PUT_MODE (reg, decl_mode);\n@@ -3993,8 +3948,7 @@ assign_parms (fndecl, second_time)\n     }\n \t\t\t       \n   max_parm_reg = LAST_VIRTUAL_REGISTER + 1;\n-  parm_reg_stack_loc = (rtx *) savealloc (max_parm_reg * sizeof (rtx));\n-  bzero ((char *) parm_reg_stack_loc, max_parm_reg * sizeof (rtx));\n+  parm_reg_stack_loc = (rtx *) xcalloc (max_parm_reg, sizeof (rtx));\n \n #ifdef INIT_CUMULATIVE_INCOMING_ARGS\n   INIT_CUMULATIVE_INCOMING_ARGS (args_so_far, fntype, NULL_RTX);\n@@ -4568,9 +4522,8 @@ assign_parms (fndecl, second_time)\n \t\t but it's also rare and we need max_parm_reg to be\n \t\t precisely correct.  */\n \t      max_parm_reg = regno + 1;\n-\t      new = (rtx *) savealloc (max_parm_reg * sizeof (rtx));\n-\t      bcopy ((char *) parm_reg_stack_loc, (char *) new,\n-\t\t     old_max_parm_reg * sizeof (rtx));\n+\t      new = (rtx *) xrealloc (parm_reg_stack_loc,\n+\t\t\t\t      max_parm_reg * sizeof (rtx));\n \t      bzero ((char *) (new + old_max_parm_reg),\n \t\t     (max_parm_reg - old_max_parm_reg) * sizeof (rtx));\n \t      parm_reg_stack_loc = new;\n@@ -5241,7 +5194,7 @@ fix_lexical_addr (addr, var)\n \n       if (fp->x_arg_pointer_save_area == 0)\n \tfp->x_arg_pointer_save_area\n-\t  = assign_outer_stack_local (Pmode, GET_MODE_SIZE (Pmode), 0, fp);\n+\t  = assign_stack_local_1 (Pmode, GET_MODE_SIZE (Pmode), 0, fp);\n \n       addr = fix_lexical_addr (XEXP (fp->x_arg_pointer_save_area, 0), var);\n       addr = memory_address (Pmode, addr);\n@@ -5328,10 +5281,8 @@ trampoline_address (function)\n #else\n #define TRAMPOLINE_REAL_SIZE (TRAMPOLINE_SIZE)\n #endif\n-  if (fp != 0)\n-    tramp = assign_outer_stack_local (BLKmode, TRAMPOLINE_REAL_SIZE, 0, fp);\n-  else\n-    tramp = assign_stack_local (BLKmode, TRAMPOLINE_REAL_SIZE, 0);\n+  tramp = assign_stack_local_1 (BLKmode, TRAMPOLINE_REAL_SIZE, 0,\n+\t\t\t\tfp ? fp : current_function);\n #endif\n \n   /* Record the trampoline for reuse and note it for later initialization\n@@ -5543,7 +5494,8 @@ static void\n prepare_function_start ()\n {\n   current_function = (struct function *) xcalloc (1, sizeof (struct function));\n-  \n+  current_function->can_garbage_collect = 0;\n+\n   init_stmt_for_function ();\n \n   cse_not_expected = ! optimize;\n@@ -5584,6 +5536,11 @@ prepare_function_start ()\n \n   init_varasm_status (current_function);\n \n+  /* Clear out data used for inlining.  */\n+  current_function->inlinable = 0;\n+  current_function->original_decl_initial = 0;\n+  current_function->original_arg_vector = 0;  \n+\n   /* Set if a call to setjmp is seen.  */\n   current_function_calls_setjmp = 0;\n \n@@ -5605,8 +5562,6 @@ prepare_function_start ()\n   current_function_uses_pic_offset_table = 0;\n   current_function_cannot_inline = 0;\n \n-  current_function->inlinable = 0;\n-\n   /* We have not yet needed to make a label to jump to for tail-recursion.  */\n   tail_recursion_label = 0;\n "}, {"sha": "0b6eb66b68d5325d83f17e4f08efdf3dfa74c873", "filename": "gcc/function.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b", "patch": "@@ -184,6 +184,9 @@ struct function\n   struct emit_status *emit;\n   struct varasm_status *varasm;\n \n+  /* Nonzero if we are done compiling this function.  */\n+  int can_garbage_collect;\n+  \n   /* For function.c.  */\n \n   /* Name of this function.  */\n@@ -533,18 +536,24 @@ extern HOST_WIDE_INT get_func_frame_size\tPROTO((struct function *));\n    save and restore machine-specific data,\n    in push_function_context and pop_function_context.  */\n extern void (*init_machine_status)\tPROTO((struct function *));\n+extern void (*mark_machine_status)\tPROTO((struct function *));\n extern void (*save_machine_status)\tPROTO((struct function *));\n extern void (*restore_machine_status)\tPROTO((struct function *));\n \n /* Likewise, but for language-specific data.  */\n+extern void (*mark_lang_status)\t\tPROTO((struct function *));\n extern void (*save_lang_status)\t\tPROTO((struct function *));\n extern void (*restore_lang_status)\tPROTO((struct function *));\n \n /* Save and restore status information for a nested function.  */\n extern void save_tree_status\t\tPROTO((struct function *));\n extern void restore_tree_status\t\tPROTO((struct function *));\n extern void restore_emit_status\t\tPROTO((struct function *));\n+extern void free_after_compilation\tPROTO((struct function *));\n \n+extern void init_varasm_status\t\tPROTO((struct function *));\n+extern void free_varasm_status\t\tPROTO((struct function *));\n+extern void free_emit_status\t\tPROTO((struct function *));\n extern rtx get_first_block_beg\t\tPROTO((void));\n \n extern void init_virtual_regs\t\tPROTO((struct emit_status *));"}, {"sha": "05463a2a7dd3d084671c49766a311332a4745776", "filename": "gcc/objc/objc-parse.c", "status": "modified", "additions": 324, "deletions": 318, "changes": 642, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Fobjc%2Fobjc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Fobjc%2Fobjc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.c?ref=e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b", "patch": "@@ -456,41 +456,41 @@ static const short yyrline[] = { 0,\n   1168,  1171,  1173,  1175,  1177,  1184,  1186,  1187,  1188,  1193,\n   1195,  1200,  1208,  1213,  1217,  1220,  1222,  1227,  1229,  1230,\n   1233,  1233,  1236,  1239,  1241,  1243,  1246,  1248,  1251,  1259,\n-  1270,  1278,  1282,  1293,  1301,  1308,  1310,  1315,  1318,  1323,\n-  1325,  1327,  1334,  1336,  1337,  1345,  1351,  1353,  1355,  1362,\n-  1364,  1370,  1376,  1378,  1380,  1382,  1389,  1391,  1394,  1397,\n-  1401,  1404,  1408,  1411,  1415,  1420,  1422,  1426,  1428,  1430,\n-  1432,  1436,  1438,  1441,  1444,  1447,  1450,  1454,  1456,  1459,\n-  1461,  1466,  1469,  1474,  1476,  1478,  1482,  1506,  1513,  1518,\n-  1524,  1529,  1531,  1536,  1538,  1542,  1546,  1550,  1560,  1562,\n-  1567,  1572,  1575,  1579,  1582,  1586,  1589,  1592,  1595,  1599,\n-  1602,  1606,  1610,  1612,  1614,  1616,  1618,  1620,  1622,  1624,\n-  1628,  1636,  1644,  1646,  1648,  1652,  1654,  1657,  1660,  1673,\n-  1675,  1680,  1682,  1685,  1699,  1702,  1705,  1707,  1709,  1717,\n-  1725,  1735,  1753,  1758,  1763,  1766,  1780,  1789,  1793,  1797,\n-  1801,  1807,  1811,  1816,  1819,  1824,  1827,  1828,  1845,  1850,\n-  1853,  1865,  1867,  1877,  1887,  1888,  1896,  1899,  1911,  1915,\n-  1932,  1942,  1951,  1956,  1961,  1966,  1970,  1974,  1985,  1992,\n-  1999,  2006,  2017,  2023,  2026,  2031,  2054,  2088,  2119,  2150,\n-  2165,  2179,  2183,  2187,  2190,  2195,  2197,  2200,  2202,  2206,\n-  2211,  2214,  2220,  2225,  2230,  2232,  2241,  2242,  2248,  2250,\n-  2260,  2262,  2266,  2269,  2275,  2285,  2294,  2303,  2313,  2327,\n-  2332,  2337,  2339,  2348,  2351,  2356,  2359,  2363,  2371,  2373,\n-  2374,  2375,  2376,  2377,  2391,  2394,  2398,  2404,  2410,  2417,\n-  2422,  2428,  2435,  2441,  2447,  2452,  2458,  2465,  2471,  2477,\n-  2483,  2491,  2497,  2503,  2511,  2518,  2524,  2533,  2540,  2548,\n-  2553,  2556,  2566,  2568,  2571,  2573,  2574,  2577,  2582,  2583,\n-  2600,  2607,  2613,  2617,  2620,  2621,  2624,  2632,  2638,  2647,\n-  2657,  2664,  2668,  2673,  2682,  2689,  2693,  2703,  2705,  2706,\n-  2708,  2710,  2711,  2712,  2713,  2715,  2717,  2720,  2728,  2735,\n-  2735,  2742,  2748,  2750,  2756,  2761,  2766,  2775,  2777,  2783,\n-  2785,  2788,  2790,  2791,  2792,  2795,  2801,  2803,  2807,  2810,\n-  2817,  2823,  2828,  2835,  2840,  2845,  2850,  2857,  2861,  2864,\n-  2870,  2872,  2873,  2874,  2877,  2879,  2880,  2881,  2882,  2883,\n-  2884,  2885,  2886,  2887,  2888,  2889,  2890,  2891,  2892,  2893,\n-  2894,  2895,  2896,  2897,  2897,  2900,  2906,  2911,  2916,  2922,\n-  2924,  2927,  2929,  2936,  2948,  2953,  2959,  2961,  2967,  2971,\n-  2972,  2978,  2980,  2983,  2985,  2991,  2996,  3002,  3009,  3018\n+  1273,  1281,  1285,  1299,  1307,  1314,  1316,  1321,  1324,  1329,\n+  1331,  1333,  1340,  1342,  1343,  1351,  1357,  1359,  1361,  1368,\n+  1370,  1376,  1382,  1384,  1386,  1388,  1395,  1397,  1400,  1403,\n+  1407,  1410,  1414,  1417,  1421,  1426,  1428,  1432,  1434,  1436,\n+  1438,  1442,  1444,  1447,  1450,  1453,  1456,  1460,  1462,  1465,\n+  1467,  1472,  1475,  1480,  1482,  1484,  1488,  1512,  1519,  1524,\n+  1530,  1535,  1537,  1542,  1544,  1548,  1552,  1556,  1566,  1568,\n+  1573,  1578,  1581,  1585,  1588,  1592,  1595,  1598,  1601,  1605,\n+  1608,  1612,  1616,  1618,  1620,  1622,  1624,  1626,  1628,  1630,\n+  1634,  1642,  1650,  1652,  1654,  1658,  1660,  1663,  1666,  1679,\n+  1681,  1686,  1688,  1691,  1705,  1708,  1711,  1713,  1715,  1723,\n+  1731,  1741,  1759,  1764,  1769,  1772,  1786,  1795,  1799,  1803,\n+  1807,  1813,  1817,  1822,  1825,  1830,  1833,  1834,  1851,  1856,\n+  1859,  1871,  1873,  1883,  1893,  1894,  1902,  1905,  1917,  1921,\n+  1938,  1948,  1957,  1962,  1967,  1972,  1976,  1980,  1991,  1998,\n+  2005,  2012,  2023,  2029,  2032,  2037,  2060,  2094,  2125,  2156,\n+  2171,  2185,  2189,  2193,  2196,  2201,  2203,  2206,  2208,  2212,\n+  2217,  2220,  2226,  2231,  2236,  2238,  2247,  2248,  2254,  2256,\n+  2266,  2268,  2272,  2275,  2281,  2291,  2300,  2309,  2319,  2333,\n+  2338,  2343,  2345,  2354,  2357,  2362,  2365,  2369,  2377,  2379,\n+  2380,  2381,  2382,  2383,  2397,  2400,  2404,  2410,  2416,  2423,\n+  2428,  2434,  2441,  2447,  2453,  2458,  2464,  2471,  2477,  2483,\n+  2489,  2497,  2503,  2509,  2517,  2524,  2530,  2539,  2546,  2554,\n+  2559,  2562,  2572,  2574,  2577,  2579,  2580,  2583,  2588,  2589,\n+  2606,  2613,  2619,  2623,  2626,  2627,  2630,  2638,  2644,  2653,\n+  2663,  2670,  2674,  2679,  2688,  2695,  2699,  2709,  2711,  2712,\n+  2714,  2716,  2717,  2718,  2719,  2721,  2723,  2726,  2734,  2741,\n+  2741,  2748,  2754,  2756,  2762,  2767,  2772,  2781,  2783,  2789,\n+  2791,  2794,  2796,  2797,  2798,  2801,  2807,  2809,  2813,  2816,\n+  2823,  2829,  2834,  2841,  2846,  2851,  2856,  2863,  2867,  2870,\n+  2876,  2878,  2879,  2880,  2883,  2885,  2886,  2887,  2888,  2889,\n+  2890,  2891,  2892,  2893,  2894,  2895,  2896,  2897,  2898,  2899,\n+  2900,  2901,  2902,  2903,  2903,  2906,  2912,  2917,  2922,  2928,\n+  2930,  2933,  2935,  2942,  2954,  2959,  2965,  2967,  2973,  2977,\n+  2978,  2984,  2986,  2989,  2991,  2997,  3002,  3008,  3015,  3024\n };\n #endif\n \n@@ -3343,227 +3343,233 @@ case 219:\n     break;}\n case 220:\n #line 1261 \"objc-parse.y\"\n-{ push_c_function_context ();\n+{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids nested functions\");\n+\n+\t\t  push_function_context ();\n \t\t  if (! start_function (current_declspecs, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 1))\n \t\t    {\n-\t\t      pop_c_function_context ();\n+\t\t      pop_function_context ();\n \t\t      YYERROR1;\n \t\t    }\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 221:\n-#line 1270 \"objc-parse.y\"\n+#line 1273 \"objc-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 222:\n-#line 1278 \"objc-parse.y\"\n+#line 1281 \"objc-parse.y\"\n { finish_function (1);\n-\t\t  pop_c_function_context (); ;\n+\t\t  pop_function_context (); ;\n     break;}\n case 223:\n-#line 1284 \"objc-parse.y\"\n-{ push_c_function_context ();\n+#line 1287 \"objc-parse.y\"\n+{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids nested functions\");\n+\n+\t\t  push_function_context ();\n \t\t  if (! start_function (current_declspecs, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 1))\n \t\t    {\n-\t\t      pop_c_function_context ();\n+\t\t      pop_function_context ();\n \t\t      YYERROR1;\n \t\t    }\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 224:\n-#line 1293 \"objc-parse.y\"\n+#line 1299 \"objc-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 225:\n-#line 1301 \"objc-parse.y\"\n+#line 1307 \"objc-parse.y\"\n { finish_function (1);\n-\t\t  pop_c_function_context (); ;\n+\t\t  pop_function_context (); ;\n     break;}\n case 228:\n-#line 1317 \"objc-parse.y\"\n+#line 1323 \"objc-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 229:\n-#line 1319 \"objc-parse.y\"\n+#line 1325 \"objc-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 230:\n-#line 1324 \"objc-parse.y\"\n+#line 1330 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 231:\n-#line 1326 \"objc-parse.y\"\n+#line 1332 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 232:\n-#line 1328 \"objc-parse.y\"\n+#line 1334 \"objc-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 233:\n-#line 1335 \"objc-parse.y\"\n+#line 1341 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 236:\n-#line 1347 \"objc-parse.y\"\n+#line 1353 \"objc-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 237:\n-#line 1352 \"objc-parse.y\"\n+#line 1358 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 238:\n-#line 1354 \"objc-parse.y\"\n+#line 1360 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 239:\n-#line 1356 \"objc-parse.y\"\n+#line 1362 \"objc-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 240:\n-#line 1363 \"objc-parse.y\"\n+#line 1369 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 242:\n-#line 1372 \"objc-parse.y\"\n+#line 1378 \"objc-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 243:\n-#line 1377 \"objc-parse.y\"\n+#line 1383 \"objc-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 244:\n-#line 1379 \"objc-parse.y\"\n+#line 1385 \"objc-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 245:\n-#line 1381 \"objc-parse.y\"\n+#line 1387 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 246:\n-#line 1383 \"objc-parse.y\"\n+#line 1389 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 247:\n-#line 1390 \"objc-parse.y\"\n+#line 1396 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 249:\n-#line 1396 \"objc-parse.y\"\n+#line 1402 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 250:\n-#line 1398 \"objc-parse.y\"\n+#line 1404 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 251:\n-#line 1403 \"objc-parse.y\"\n+#line 1409 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 252:\n-#line 1405 \"objc-parse.y\"\n+#line 1411 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 253:\n-#line 1410 \"objc-parse.y\"\n+#line 1416 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 254:\n-#line 1412 \"objc-parse.y\"\n+#line 1418 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 255:\n-#line 1417 \"objc-parse.y\"\n+#line 1423 \"objc-parse.y\"\n { yyval.ttype = start_struct (RECORD_TYPE, yyvsp[-1].ttype);\n \t\t  /* Start scope of tag before parsing components.  */\n \t\t;\n     break;}\n case 256:\n-#line 1421 \"objc-parse.y\"\n+#line 1427 \"objc-parse.y\"\n { yyval.ttype = finish_struct (yyvsp[-3].ttype, yyvsp[-2].ttype, chainon (yyvsp[-6].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 257:\n-#line 1423 \"objc-parse.y\"\n+#line 1429 \"objc-parse.y\"\n { yyval.ttype = finish_struct (start_struct (RECORD_TYPE, NULL_TREE),\n \t\t\t\t      yyvsp[-2].ttype, chainon (yyvsp[-4].ttype, yyvsp[0].ttype));\n \t\t;\n     break;}\n case 258:\n-#line 1427 \"objc-parse.y\"\n+#line 1433 \"objc-parse.y\"\n { yyval.ttype = xref_tag (RECORD_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 259:\n-#line 1429 \"objc-parse.y\"\n+#line 1435 \"objc-parse.y\"\n { yyval.ttype = start_struct (UNION_TYPE, yyvsp[-1].ttype); ;\n     break;}\n case 260:\n-#line 1431 \"objc-parse.y\"\n+#line 1437 \"objc-parse.y\"\n { yyval.ttype = finish_struct (yyvsp[-3].ttype, yyvsp[-2].ttype, chainon (yyvsp[-6].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 261:\n-#line 1433 \"objc-parse.y\"\n+#line 1439 \"objc-parse.y\"\n { yyval.ttype = finish_struct (start_struct (UNION_TYPE, NULL_TREE),\n \t\t\t\t      yyvsp[-2].ttype, chainon (yyvsp[-4].ttype, yyvsp[0].ttype));\n \t\t;\n     break;}\n case 262:\n-#line 1437 \"objc-parse.y\"\n+#line 1443 \"objc-parse.y\"\n { yyval.ttype = xref_tag (UNION_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 263:\n-#line 1439 \"objc-parse.y\"\n+#line 1445 \"objc-parse.y\"\n { yyvsp[0].itype = suspend_momentary ();\n \t\t  yyval.ttype = start_enum (yyvsp[-1].ttype); ;\n     break;}\n case 264:\n-#line 1442 \"objc-parse.y\"\n+#line 1448 \"objc-parse.y\"\n { yyval.ttype= finish_enum (yyvsp[-4].ttype, nreverse (yyvsp[-3].ttype), chainon (yyvsp[-7].ttype, yyvsp[0].ttype));\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 265:\n-#line 1445 \"objc-parse.y\"\n+#line 1451 \"objc-parse.y\"\n { yyvsp[0].itype = suspend_momentary ();\n \t\t  yyval.ttype = start_enum (NULL_TREE); ;\n     break;}\n case 266:\n-#line 1448 \"objc-parse.y\"\n+#line 1454 \"objc-parse.y\"\n { yyval.ttype= finish_enum (yyvsp[-4].ttype, nreverse (yyvsp[-3].ttype), chainon (yyvsp[-6].ttype, yyvsp[0].ttype));\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 267:\n-#line 1451 \"objc-parse.y\"\n+#line 1457 \"objc-parse.y\"\n { yyval.ttype = xref_tag (ENUMERAL_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 271:\n-#line 1462 \"objc-parse.y\"\n+#line 1468 \"objc-parse.y\"\n { if (pedantic && ! flag_isoc9x)\n \t\t    pedwarn (\"comma at end of enumerator list\"); ;\n     break;}\n case 272:\n-#line 1468 \"objc-parse.y\"\n+#line 1474 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 273:\n-#line 1470 \"objc-parse.y\"\n+#line 1476 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  pedwarn (\"no semicolon at end of struct or union\"); ;\n     break;}\n case 274:\n-#line 1475 \"objc-parse.y\"\n+#line 1481 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 275:\n-#line 1477 \"objc-parse.y\"\n+#line 1483 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 276:\n-#line 1479 \"objc-parse.y\"\n+#line 1485 \"objc-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"extra semicolon in struct or union specified\"); ;\n     break;}\n case 277:\n-#line 1483 \"objc-parse.y\"\n+#line 1489 \"objc-parse.y\"\n {\n \t\t  tree interface = lookup_interface (yyvsp[-1].ttype);\n \n@@ -3578,167 +3584,167 @@ case 277:\n \t\t;\n     break;}\n case 278:\n-#line 1508 \"objc-parse.y\"\n+#line 1514 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 279:\n-#line 1514 \"objc-parse.y\"\n+#line 1520 \"objc-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids member declarations with no members\");\n \t\t  shadow_tag(yyvsp[0].ttype);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 280:\n-#line 1519 \"objc-parse.y\"\n+#line 1525 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 281:\n-#line 1525 \"objc-parse.y\"\n+#line 1531 \"objc-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids member declarations with no members\");\n \t\t  shadow_tag(yyvsp[0].ttype);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 282:\n-#line 1530 \"objc-parse.y\"\n+#line 1536 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 283:\n-#line 1532 \"objc-parse.y\"\n+#line 1538 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  pedantic = yyvsp[-1].itype; ;\n     break;}\n case 285:\n-#line 1539 \"objc-parse.y\"\n+#line 1545 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 286:\n-#line 1544 \"objc-parse.y\"\n+#line 1550 \"objc-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-3].filename, yyvsp[-2].lineno, yyvsp[-1].ttype, current_declspecs, NULL_TREE);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 287:\n-#line 1548 \"objc-parse.y\"\n+#line 1554 \"objc-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-5].filename, yyvsp[-4].lineno, yyvsp[-3].ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 288:\n-#line 1551 \"objc-parse.y\"\n+#line 1557 \"objc-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-4].filename, yyvsp[-3].lineno, NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 290:\n-#line 1563 \"objc-parse.y\"\n+#line 1569 \"objc-parse.y\"\n { if (yyvsp[-2].ttype == error_mark_node)\n \t\t    yyval.ttype = yyvsp[-2].ttype;\n \t\t  else\n \t\t    yyval.ttype = chainon (yyvsp[0].ttype, yyvsp[-2].ttype); ;\n     break;}\n case 291:\n-#line 1568 \"objc-parse.y\"\n+#line 1574 \"objc-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 292:\n-#line 1574 \"objc-parse.y\"\n+#line 1580 \"objc-parse.y\"\n { yyval.ttype = build_enumerator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 293:\n-#line 1576 \"objc-parse.y\"\n+#line 1582 \"objc-parse.y\"\n { yyval.ttype = build_enumerator (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 294:\n-#line 1581 \"objc-parse.y\"\n+#line 1587 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 295:\n-#line 1583 \"objc-parse.y\"\n+#line 1589 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 296:\n-#line 1588 \"objc-parse.y\"\n+#line 1594 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 298:\n-#line 1594 \"objc-parse.y\"\n+#line 1600 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 299:\n-#line 1596 \"objc-parse.y\"\n+#line 1602 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 300:\n-#line 1601 \"objc-parse.y\"\n+#line 1607 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 301:\n-#line 1603 \"objc-parse.y\"\n+#line 1609 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 302:\n-#line 1608 \"objc-parse.y\"\n+#line 1614 \"objc-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 303:\n-#line 1611 \"objc-parse.y\"\n+#line 1617 \"objc-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 304:\n-#line 1613 \"objc-parse.y\"\n+#line 1619 \"objc-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 305:\n-#line 1615 \"objc-parse.y\"\n+#line 1621 \"objc-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 306:\n-#line 1617 \"objc-parse.y\"\n+#line 1623 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 307:\n-#line 1619 \"objc-parse.y\"\n+#line 1625 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 308:\n-#line 1621 \"objc-parse.y\"\n+#line 1627 \"objc-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 309:\n-#line 1623 \"objc-parse.y\"\n+#line 1629 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 310:\n-#line 1625 \"objc-parse.y\"\n+#line 1631 \"objc-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, NULL_TREE, NULL_TREE); ;\n     break;}\n case 311:\n-#line 1629 \"objc-parse.y\"\n+#line 1635 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 312:\n-#line 1638 \"objc-parse.y\"\n+#line 1644 \"objc-parse.y\"\n {\n \t\t  if (pedantic && yyvsp[0].ends_in_label)\n \t\t    pedwarn (\"ANSI C forbids label at end of compound statement\");\n \t\t;\n     break;}\n case 314:\n-#line 1647 \"objc-parse.y\"\n+#line 1653 \"objc-parse.y\"\n { yyval.ends_in_label = yyvsp[0].ends_in_label; ;\n     break;}\n case 315:\n-#line 1649 \"objc-parse.y\"\n+#line 1655 \"objc-parse.y\"\n { yyval.ends_in_label = 0; ;\n     break;}\n case 319:\n-#line 1661 \"objc-parse.y\"\n+#line 1667 \"objc-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  pushlevel (0);\n \t\t  clear_last_expr ();\n@@ -3749,12 +3755,12 @@ case 319:\n \t\t;\n     break;}\n case 321:\n-#line 1676 \"objc-parse.y\"\n+#line 1682 \"objc-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids label declarations\"); ;\n     break;}\n case 324:\n-#line 1687 \"objc-parse.y\"\n+#line 1693 \"objc-parse.y\"\n { tree link;\n \t\t  for (link = yyvsp[-1].ttype; link; link = TREE_CHAIN (link))\n \t\t    {\n@@ -3765,19 +3771,19 @@ case 324:\n \t\t;\n     break;}\n case 325:\n-#line 1701 \"objc-parse.y\"\n+#line 1707 \"objc-parse.y\"\n {;\n     break;}\n case 327:\n-#line 1705 \"objc-parse.y\"\n+#line 1711 \"objc-parse.y\"\n { compstmt_count++; ;\n     break;}\n case 328:\n-#line 1708 \"objc-parse.y\"\n+#line 1714 \"objc-parse.y\"\n { yyval.ttype = convert (void_type_node, integer_zero_node); ;\n     break;}\n case 329:\n-#line 1710 \"objc-parse.y\"\n+#line 1716 \"objc-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), 1, 0);\n \t\t  yyval.ttype = poplevel (1, 1, 0);\n@@ -3787,7 +3793,7 @@ case 329:\n \t\t    pop_momentary (); ;\n     break;}\n case 330:\n-#line 1718 \"objc-parse.y\"\n+#line 1724 \"objc-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  yyval.ttype = poplevel (kept_level_p (), 0, 0);\n@@ -3797,7 +3803,7 @@ case 330:\n \t\t    pop_momentary (); ;\n     break;}\n case 331:\n-#line 1726 \"objc-parse.y\"\n+#line 1732 \"objc-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  yyval.ttype = poplevel (kept_level_p (), 0, 0);\n@@ -3807,7 +3813,7 @@ case 331:\n \t\t    pop_momentary (); ;\n     break;}\n case 332:\n-#line 1737 \"objc-parse.y\"\n+#line 1743 \"objc-parse.y\"\n { if (current_function_decl == 0)\n \t\t    {\n \t\t      error (\"braced-group within expression allowed only inside a function\");\n@@ -3825,11 +3831,11 @@ case 332:\n \t\t;\n     break;}\n case 333:\n-#line 1754 \"objc-parse.y\"\n+#line 1760 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 336:\n-#line 1768 \"objc-parse.y\"\n+#line 1774 \"objc-parse.y\"\n { emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  c_expand_start_cond (truthvalue_conversion (yyvsp[-1].ttype), 0, \n \t\t\t\t       compstmt_count);\n@@ -3839,7 +3845,7 @@ case 336:\n \t\t  position_after_white_space (); ;\n     break;}\n case 337:\n-#line 1782 \"objc-parse.y\"\n+#line 1788 \"objc-parse.y\"\n { stmt_count++;\n \t\t  compstmt_count++;\n \t\t  emit_line_note (yyvsp[-2].filename, yyvsp[-1].lineno);\n@@ -3849,43 +3855,43 @@ case 337:\n \t\t  position_after_white_space (); ;\n     break;}\n case 338:\n-#line 1790 \"objc-parse.y\"\n+#line 1796 \"objc-parse.y\"\n { expand_loop_continue_here (); ;\n     break;}\n case 339:\n-#line 1794 \"objc-parse.y\"\n+#line 1800 \"objc-parse.y\"\n { yyval.filename = input_filename; ;\n     break;}\n case 340:\n-#line 1798 \"objc-parse.y\"\n+#line 1804 \"objc-parse.y\"\n { yyval.lineno = lineno; ;\n     break;}\n case 341:\n-#line 1803 \"objc-parse.y\"\n+#line 1809 \"objc-parse.y\"\n { ;\n     break;}\n case 342:\n-#line 1808 \"objc-parse.y\"\n+#line 1814 \"objc-parse.y\"\n { ;\n     break;}\n case 343:\n-#line 1813 \"objc-parse.y\"\n+#line 1819 \"objc-parse.y\"\n { yyval.ends_in_label = yyvsp[0].ends_in_label; ;\n     break;}\n case 344:\n-#line 1818 \"objc-parse.y\"\n+#line 1824 \"objc-parse.y\"\n { yyval.ends_in_label = 0; ;\n     break;}\n case 345:\n-#line 1820 \"objc-parse.y\"\n+#line 1826 \"objc-parse.y\"\n { yyval.ends_in_label = 1; ;\n     break;}\n case 346:\n-#line 1826 \"objc-parse.y\"\n+#line 1832 \"objc-parse.y\"\n { stmt_count++; ;\n     break;}\n case 348:\n-#line 1829 \"objc-parse.y\"\n+#line 1835 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n /* It appears that this should not be done--that a non-lvalue array\n@@ -3904,19 +3910,19 @@ case 348:\n \t\t  clear_momentary (); ;\n     break;}\n case 349:\n-#line 1846 \"objc-parse.y\"\n+#line 1852 \"objc-parse.y\"\n { c_expand_start_else ();\n \t\t  yyvsp[-1].itype = stmt_count;\n \t\t  position_after_white_space (); ;\n     break;}\n case 350:\n-#line 1850 \"objc-parse.y\"\n+#line 1856 \"objc-parse.y\"\n { c_expand_end_cond ();\n \t\t  if (extra_warnings && stmt_count == yyvsp[-3].itype)\n \t\t    warning (\"empty body in an else-statement\"); ;\n     break;}\n case 351:\n-#line 1854 \"objc-parse.y\"\n+#line 1860 \"objc-parse.y\"\n { c_expand_end_cond ();\n \t\t  /* This warning is here instead of in simple_if, because we\n \t\t     do not want a warning if an empty if is followed by an\n@@ -3927,11 +3933,11 @@ case 351:\n \t\t\t\t\t\t\"empty body in an if-statement\"); ;\n     break;}\n case 352:\n-#line 1866 \"objc-parse.y\"\n+#line 1872 \"objc-parse.y\"\n { c_expand_end_cond (); ;\n     break;}\n case 353:\n-#line 1868 \"objc-parse.y\"\n+#line 1874 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-2].filename, yyvsp[-1].lineno);\n \t\t  /* The emit_nop used to come before emit_line_note,\n@@ -3943,7 +3949,7 @@ case 353:\n \t\t  emit_nop (); ;\n     break;}\n case 354:\n-#line 1878 \"objc-parse.y\"\n+#line 1884 \"objc-parse.y\"\n { /* Don't start the loop till we have succeeded\n \t\t     in parsing the end test.  This is to make sure\n \t\t     that we end every loop we start.  */\n@@ -3954,24 +3960,24 @@ case 354:\n \t\t  position_after_white_space (); ;\n     break;}\n case 355:\n-#line 1887 \"objc-parse.y\"\n+#line 1893 \"objc-parse.y\"\n { expand_end_loop (); ;\n     break;}\n case 356:\n-#line 1890 \"objc-parse.y\"\n+#line 1896 \"objc-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_exit_loop_if_false (NULL_PTR,\n \t\t\t\t\t     truthvalue_conversion (yyvsp[-2].ttype));\n \t\t  expand_end_loop ();\n \t\t  clear_momentary (); ;\n     break;}\n case 357:\n-#line 1897 \"objc-parse.y\"\n+#line 1903 \"objc-parse.y\"\n { expand_end_loop ();\n \t\t  clear_momentary (); ;\n     break;}\n case 358:\n-#line 1901 \"objc-parse.y\"\n+#line 1907 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  /* See comment in `while' alternative, above.  */\n@@ -3984,12 +3990,12 @@ case 358:\n \t\t;\n     break;}\n case 359:\n-#line 1913 \"objc-parse.y\"\n+#line 1919 \"objc-parse.y\"\n { yyvsp[0].lineno = lineno;\n \t\t  yyval.filename = input_filename; ;\n     break;}\n case 360:\n-#line 1916 \"objc-parse.y\"\n+#line 1922 \"objc-parse.y\"\n { \n \t\t  /* Start the loop.  Doing this after parsing\n \t\t     all the expressions ensures we will end the loop.  */\n@@ -4007,7 +4013,7 @@ case 360:\n \t\t  position_after_white_space (); ;\n     break;}\n case 361:\n-#line 1932 \"objc-parse.y\"\n+#line 1938 \"objc-parse.y\"\n { /* Emit the increment expression, with a line number.  */\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-5].lineno);\n \t\t  expand_loop_continue_here ();\n@@ -4020,7 +4026,7 @@ case 361:\n \t\t  expand_end_loop (); ;\n     break;}\n case 362:\n-#line 1943 \"objc-parse.y\"\n+#line 1949 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  c_expand_start_case (yyvsp[-1].ttype);\n@@ -4030,41 +4036,41 @@ case 362:\n \t\t  position_after_white_space (); ;\n     break;}\n case 363:\n-#line 1951 \"objc-parse.y\"\n+#line 1957 \"objc-parse.y\"\n { expand_end_case (yyvsp[-3].ttype);\n \t\t  if (yychar == CONSTANT || yychar == STRING)\n \t\t    pop_momentary_nofree ();\n \t\t  else\n \t\t    pop_momentary (); ;\n     break;}\n case 364:\n-#line 1957 \"objc-parse.y\"\n+#line 1963 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  if ( ! expand_exit_something ())\n \t\t    error (\"break statement not within loop or switch\"); ;\n     break;}\n case 365:\n-#line 1962 \"objc-parse.y\"\n+#line 1968 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  if (! expand_continue_loop (NULL_PTR))\n \t\t    error (\"continue statement not within a loop\"); ;\n     break;}\n case 366:\n-#line 1967 \"objc-parse.y\"\n+#line 1973 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  c_expand_return (NULL_TREE); ;\n     break;}\n case 367:\n-#line 1971 \"objc-parse.y\"\n+#line 1977 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-3].lineno);\n \t\t  c_expand_return (yyvsp[-1].ttype); ;\n     break;}\n case 368:\n-#line 1975 \"objc-parse.y\"\n+#line 1981 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-7].filename, yyvsp[-6].lineno);\n \t\t  STRIP_NOPS (yyvsp[-2].ttype);\n@@ -4076,31 +4082,31 @@ case 368:\n \t\t    error (\"argument of `asm' is not a constant string\"); ;\n     break;}\n case 369:\n-#line 1986 \"objc-parse.y\"\n+#line 1992 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-9].filename, yyvsp[-8].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n \t\t\t\t\t yyvsp[-6].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 370:\n-#line 1993 \"objc-parse.y\"\n+#line 1999 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-11].filename, yyvsp[-10].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n \t\t\t\t\t yyvsp[-8].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 371:\n-#line 2001 \"objc-parse.y\"\n+#line 2007 \"objc-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-13].filename, yyvsp[-12].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype,\n \t\t\t\t\t yyvsp[-10].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 372:\n-#line 2007 \"objc-parse.y\"\n+#line 2013 \"objc-parse.y\"\n { tree decl;\n \t\t  stmt_count++;\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-3].lineno);\n@@ -4113,15 +4119,15 @@ case 372:\n \t\t;\n     break;}\n case 373:\n-#line 2018 \"objc-parse.y\"\n+#line 2024 \"objc-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids `goto *expr;'\");\n \t\t  stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  expand_computed_goto (convert (ptr_type_node, yyvsp[-1].ttype)); ;\n     break;}\n case 376:\n-#line 2033 \"objc-parse.y\"\n+#line 2039 \"objc-parse.y\"\n {\n \t    /* The value returned by this action is  */\n \t    /*      1 if everything is OK */ \n@@ -4144,14 +4150,14 @@ case 376:\n \t  ;\n     break;}\n case 377:\n-#line 2054 \"objc-parse.y\"\n+#line 2060 \"objc-parse.y\"\n {\n \t    if (yyvsp[-1].itype)\n \t      iterator_for_loop_end (yyvsp[-3].ttype);\n \t  ;\n     break;}\n case 378:\n-#line 2089 \"objc-parse.y\"\n+#line 2095 \"objc-parse.y\"\n { register tree value = check_case_value (yyvsp[-1].ttype);\n \t\t  register tree label\n \t\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n@@ -4184,7 +4190,7 @@ case 378:\n \t\t  position_after_white_space (); ;\n     break;}\n case 379:\n-#line 2120 \"objc-parse.y\"\n+#line 2126 \"objc-parse.y\"\n { register tree value1 = check_case_value (yyvsp[-3].ttype);\n \t\t  register tree value2 = check_case_value (yyvsp[-1].ttype);\n \t\t  register tree label\n@@ -4217,7 +4223,7 @@ case 379:\n \t\t  position_after_white_space (); ;\n     break;}\n case 380:\n-#line 2151 \"objc-parse.y\"\n+#line 2157 \"objc-parse.y\"\n {\n \t\t  tree duplicate;\n \t\t  register tree label\n@@ -4234,7 +4240,7 @@ case 380:\n \t\t  position_after_white_space (); ;\n     break;}\n case 381:\n-#line 2166 \"objc-parse.y\"\n+#line 2172 \"objc-parse.y\"\n { tree label = define_label (input_filename, lineno, yyvsp[-2].ttype);\n \t\t  stmt_count++;\n \t\t  emit_nop ();\n@@ -4246,52 +4252,52 @@ case 381:\n \t\t  position_after_white_space (); ;\n     break;}\n case 382:\n-#line 2181 \"objc-parse.y\"\n+#line 2187 \"objc-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 383:\n-#line 2184 \"objc-parse.y\"\n+#line 2190 \"objc-parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 384:\n-#line 2189 \"objc-parse.y\"\n+#line 2195 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 386:\n-#line 2196 \"objc-parse.y\"\n+#line 2202 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 389:\n-#line 2203 \"objc-parse.y\"\n+#line 2209 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 390:\n-#line 2208 \"objc-parse.y\"\n+#line 2214 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 391:\n-#line 2213 \"objc-parse.y\"\n+#line 2219 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, combine_strings (yyvsp[0].ttype), NULL_TREE); ;\n     break;}\n case 392:\n-#line 2215 \"objc-parse.y\"\n+#line 2221 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, combine_strings (yyvsp[0].ttype), yyvsp[-2].ttype); ;\n     break;}\n case 393:\n-#line 2221 \"objc-parse.y\"\n+#line 2227 \"objc-parse.y\"\n { pushlevel (0);\n \t\t  clear_parm_order ();\n \t\t  declare_parm_level (0); ;\n     break;}\n case 394:\n-#line 2225 \"objc-parse.y\"\n+#line 2231 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  parmlist_tags_warning ();\n \t\t  poplevel (0, 0, 0); ;\n     break;}\n case 396:\n-#line 2233 \"objc-parse.y\"\n+#line 2239 \"objc-parse.y\"\n { tree parm;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids forward parameter declarations\");\n@@ -4301,19 +4307,19 @@ case 396:\n \t\t  clear_parm_order (); ;\n     break;}\n case 397:\n-#line 2241 \"objc-parse.y\"\n+#line 2247 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 398:\n-#line 2243 \"objc-parse.y\"\n+#line 2249 \"objc-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, NULL_TREE, NULL_TREE); ;\n     break;}\n case 399:\n-#line 2249 \"objc-parse.y\"\n+#line 2255 \"objc-parse.y\"\n { yyval.ttype = get_parm_info (0); ;\n     break;}\n case 400:\n-#line 2251 \"objc-parse.y\"\n+#line 2257 \"objc-parse.y\"\n { yyval.ttype = get_parm_info (0);\n \t\t  /* Gcc used to allow this as an extension.  However, it does\n \t\t     not work for all targets, and thus has been disabled.\n@@ -4325,23 +4331,23 @@ case 400:\n \t\t;\n     break;}\n case 401:\n-#line 2261 \"objc-parse.y\"\n+#line 2267 \"objc-parse.y\"\n { yyval.ttype = get_parm_info (1); ;\n     break;}\n case 402:\n-#line 2263 \"objc-parse.y\"\n+#line 2269 \"objc-parse.y\"\n { yyval.ttype = get_parm_info (0); ;\n     break;}\n case 403:\n-#line 2268 \"objc-parse.y\"\n+#line 2274 \"objc-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 404:\n-#line 2270 \"objc-parse.y\"\n+#line 2276 \"objc-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 405:\n-#line 2277 \"objc-parse.y\"\n+#line 2283 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -4352,7 +4358,7 @@ case 405:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 406:\n-#line 2286 \"objc-parse.y\"\n+#line 2292 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -4363,7 +4369,7 @@ case 406:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 407:\n-#line 2295 \"objc-parse.y\"\n+#line 2301 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -4374,7 +4380,7 @@ case 407:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 408:\n-#line 2304 \"objc-parse.y\"\n+#line 2310 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -4385,7 +4391,7 @@ case 408:\n \t\t  resume_momentary (yyvsp[-2].itype);  ;\n     break;}\n case 409:\n-#line 2314 \"objc-parse.y\"\n+#line 2320 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -4396,48 +4402,48 @@ case 409:\n \t\t  resume_momentary (yyvsp[-2].itype);  ;\n     break;}\n case 410:\n-#line 2328 \"objc-parse.y\"\n+#line 2334 \"objc-parse.y\"\n { pushlevel (0);\n \t\t  clear_parm_order ();\n \t\t  declare_parm_level (1); ;\n     break;}\n case 411:\n-#line 2332 \"objc-parse.y\"\n+#line 2338 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  parmlist_tags_warning ();\n \t\t  poplevel (0, 0, 0); ;\n     break;}\n case 413:\n-#line 2340 \"objc-parse.y\"\n+#line 2346 \"objc-parse.y\"\n { tree t;\n \t\t  for (t = yyvsp[-1].ttype; t; t = TREE_CHAIN (t))\n \t\t    if (TREE_VALUE (t) == NULL_TREE)\n \t\t      error (\"`...' in old-style identifier list\");\n \t\t  yyval.ttype = tree_cons (NULL_TREE, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 414:\n-#line 2350 \"objc-parse.y\"\n+#line 2356 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 415:\n-#line 2352 \"objc-parse.y\"\n+#line 2358 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 416:\n-#line 2358 \"objc-parse.y\"\n+#line 2364 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 417:\n-#line 2360 \"objc-parse.y\"\n+#line 2366 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 418:\n-#line 2365 \"objc-parse.y\"\n+#line 2371 \"objc-parse.y\"\n { yyval.itype = pedantic;\n \t\t  pedantic = 0; ;\n     break;}\n case 424:\n-#line 2378 \"objc-parse.y\"\n+#line 2384 \"objc-parse.y\"\n {\n \t\t  if (objc_implementation_context)\n                     {\n@@ -4450,114 +4456,114 @@ case 424:\n \t\t;\n     break;}\n case 425:\n-#line 2393 \"objc-parse.y\"\n+#line 2399 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 426:\n-#line 2395 \"objc-parse.y\"\n+#line 2401 \"objc-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 427:\n-#line 2400 \"objc-parse.y\"\n+#line 2406 \"objc-parse.y\"\n {\n \t\t  objc_declare_class (yyvsp[-1].ttype);\n \t\t;\n     break;}\n case 428:\n-#line 2406 \"objc-parse.y\"\n+#line 2412 \"objc-parse.y\"\n {\n \t\t  objc_declare_alias (yyvsp[-2].ttype, yyvsp[-1].ttype);\n \t\t;\n     break;}\n case 429:\n-#line 2412 \"objc-parse.y\"\n+#line 2418 \"objc-parse.y\"\n {\n \t\t  objc_interface_context = objc_ivar_context\n \t\t    = start_class (CLASS_INTERFACE_TYPE, yyvsp[-2].ttype, NULL_TREE, yyvsp[-1].ttype);\n                   objc_public_flag = 0;\n \t\t;\n     break;}\n case 430:\n-#line 2418 \"objc-parse.y\"\n+#line 2424 \"objc-parse.y\"\n {\n                   continue_class (objc_interface_context);\n \t\t;\n     break;}\n case 431:\n-#line 2423 \"objc-parse.y\"\n+#line 2429 \"objc-parse.y\"\n {\n \t\t  finish_class (objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t;\n     break;}\n case 432:\n-#line 2429 \"objc-parse.y\"\n+#line 2435 \"objc-parse.y\"\n {\n \t\t  objc_interface_context\n \t\t    = start_class (CLASS_INTERFACE_TYPE, yyvsp[-1].ttype, NULL_TREE, yyvsp[0].ttype);\n                   continue_class (objc_interface_context);\n \t\t;\n     break;}\n case 433:\n-#line 2436 \"objc-parse.y\"\n+#line 2442 \"objc-parse.y\"\n {\n \t\t  finish_class (objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t;\n     break;}\n case 434:\n-#line 2442 \"objc-parse.y\"\n+#line 2448 \"objc-parse.y\"\n {\n \t\t  objc_interface_context = objc_ivar_context\n \t\t    = start_class (CLASS_INTERFACE_TYPE, yyvsp[-4].ttype, yyvsp[-2].ttype, yyvsp[-1].ttype);\n                   objc_public_flag = 0;\n \t\t;\n     break;}\n case 435:\n-#line 2448 \"objc-parse.y\"\n+#line 2454 \"objc-parse.y\"\n {\n                   continue_class (objc_interface_context);\n \t\t;\n     break;}\n case 436:\n-#line 2453 \"objc-parse.y\"\n+#line 2459 \"objc-parse.y\"\n {\n \t\t  finish_class (objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t;\n     break;}\n case 437:\n-#line 2459 \"objc-parse.y\"\n+#line 2465 \"objc-parse.y\"\n {\n \t\t  objc_interface_context\n \t\t    = start_class (CLASS_INTERFACE_TYPE, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype);\n                   continue_class (objc_interface_context);\n \t\t;\n     break;}\n case 438:\n-#line 2466 \"objc-parse.y\"\n+#line 2472 \"objc-parse.y\"\n {\n \t\t  finish_class (objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t;\n     break;}\n case 439:\n-#line 2472 \"objc-parse.y\"\n+#line 2478 \"objc-parse.y\"\n {\n \t\t  objc_implementation_context = objc_ivar_context\n \t\t    = start_class (CLASS_IMPLEMENTATION_TYPE, yyvsp[-1].ttype, NULL_TREE, NULL_TREE);\n                   objc_public_flag = 0;\n \t\t;\n     break;}\n case 440:\n-#line 2478 \"objc-parse.y\"\n+#line 2484 \"objc-parse.y\"\n {\n                   objc_ivar_chain\n \t\t    = continue_class (objc_implementation_context);\n \t\t;\n     break;}\n case 441:\n-#line 2484 \"objc-parse.y\"\n+#line 2490 \"objc-parse.y\"\n {\n \t\t  objc_implementation_context\n \t\t    = start_class (CLASS_IMPLEMENTATION_TYPE, yyvsp[0].ttype, NULL_TREE, NULL_TREE);\n@@ -4566,22 +4572,22 @@ case 441:\n \t\t;\n     break;}\n case 442:\n-#line 2492 \"objc-parse.y\"\n+#line 2498 \"objc-parse.y\"\n {\n \t\t  objc_implementation_context = objc_ivar_context\n \t\t    = start_class (CLASS_IMPLEMENTATION_TYPE, yyvsp[-3].ttype, yyvsp[-1].ttype, NULL_TREE);\n                   objc_public_flag = 0;\n \t\t;\n     break;}\n case 443:\n-#line 2498 \"objc-parse.y\"\n+#line 2504 \"objc-parse.y\"\n {\n                   objc_ivar_chain\n \t\t    = continue_class (objc_implementation_context);\n \t\t;\n     break;}\n case 444:\n-#line 2504 \"objc-parse.y\"\n+#line 2510 \"objc-parse.y\"\n {\n \t\t  objc_implementation_context\n \t\t    = start_class (CLASS_IMPLEMENTATION_TYPE, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE);\n@@ -4590,22 +4596,22 @@ case 444:\n \t\t;\n     break;}\n case 445:\n-#line 2512 \"objc-parse.y\"\n+#line 2518 \"objc-parse.y\"\n {\n \t\t  objc_interface_context\n \t\t    = start_class (CATEGORY_INTERFACE_TYPE, yyvsp[-4].ttype, yyvsp[-2].ttype, yyvsp[0].ttype);\n                   continue_class (objc_interface_context);\n \t\t;\n     break;}\n case 446:\n-#line 2519 \"objc-parse.y\"\n+#line 2525 \"objc-parse.y\"\n {\n \t\t  finish_class (objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t;\n     break;}\n case 447:\n-#line 2525 \"objc-parse.y\"\n+#line 2531 \"objc-parse.y\"\n {\n \t\t  objc_implementation_context\n \t\t    = start_class (CATEGORY_IMPLEMENTATION_TYPE, yyvsp[-3].ttype, yyvsp[-1].ttype, NULL_TREE);\n@@ -4614,29 +4620,29 @@ case 447:\n \t\t;\n     break;}\n case 448:\n-#line 2535 \"objc-parse.y\"\n+#line 2541 \"objc-parse.y\"\n {\n \t\t  remember_protocol_qualifiers ();\n \t\t  objc_interface_context\n \t\t    = start_protocol(PROTOCOL_INTERFACE_TYPE, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 449:\n-#line 2541 \"objc-parse.y\"\n+#line 2547 \"objc-parse.y\"\n {\n \t\t  forget_protocol_qualifiers();\n \t\t  finish_protocol(objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t;\n     break;}\n case 450:\n-#line 2550 \"objc-parse.y\"\n+#line 2556 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = NULL_TREE;\n \t\t;\n     break;}\n case 452:\n-#line 2558 \"objc-parse.y\"\n+#line 2564 \"objc-parse.y\"\n {\n \t\t  if (yyvsp[-2].code == LT_EXPR && yyvsp[0].code == GT_EXPR)\n \t\t    yyval.ttype = yyvsp[-1].ttype;\n@@ -4645,56 +4651,56 @@ case 452:\n \t\t;\n     break;}\n case 455:\n-#line 2572 \"objc-parse.y\"\n+#line 2578 \"objc-parse.y\"\n { objc_public_flag = 2; ;\n     break;}\n case 456:\n-#line 2573 \"objc-parse.y\"\n+#line 2579 \"objc-parse.y\"\n { objc_public_flag = 0; ;\n     break;}\n case 457:\n-#line 2574 \"objc-parse.y\"\n+#line 2580 \"objc-parse.y\"\n { objc_public_flag = 1; ;\n     break;}\n case 458:\n-#line 2579 \"objc-parse.y\"\n+#line 2585 \"objc-parse.y\"\n {\n                   yyval.ttype = NULL_TREE;\n                 ;\n     break;}\n case 460:\n-#line 2584 \"objc-parse.y\"\n+#line 2590 \"objc-parse.y\"\n {\n                   if (pedantic)\n \t\t    pedwarn (\"extra semicolon in struct or union specified\");\n                 ;\n     break;}\n case 461:\n-#line 2602 \"objc-parse.y\"\n+#line 2608 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 462:\n-#line 2608 \"objc-parse.y\"\n+#line 2614 \"objc-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 463:\n-#line 2614 \"objc-parse.y\"\n+#line 2620 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 464:\n-#line 2619 \"objc-parse.y\"\n+#line 2625 \"objc-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 467:\n-#line 2626 \"objc-parse.y\"\n+#line 2632 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = add_instance_variable (objc_ivar_context,\n \t\t\t\t\t      objc_public_flag,\n@@ -4703,15 +4709,15 @@ case 467:\n                 ;\n     break;}\n case 468:\n-#line 2633 \"objc-parse.y\"\n+#line 2639 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = add_instance_variable (objc_ivar_context,\n \t\t\t\t\t      objc_public_flag,\n \t\t\t\t\t      yyvsp[-2].ttype, current_declspecs, yyvsp[0].ttype);\n                 ;\n     break;}\n case 469:\n-#line 2639 \"objc-parse.y\"\n+#line 2645 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = add_instance_variable (objc_ivar_context,\n \t\t\t\t\t      objc_public_flag,\n@@ -4720,7 +4726,7 @@ case 469:\n                 ;\n     break;}\n case 470:\n-#line 2649 \"objc-parse.y\"\n+#line 2655 \"objc-parse.y\"\n {\n \t\t  remember_protocol_qualifiers ();\n \t\t  if (objc_implementation_context)\n@@ -4730,7 +4736,7 @@ case 470:\n \t\t;\n     break;}\n case 471:\n-#line 2657 \"objc-parse.y\"\n+#line 2663 \"objc-parse.y\"\n {\n \t\t  forget_protocol_qualifiers ();\n \t\t  add_class_method (objc_implementation_context, yyvsp[0].ttype);\n@@ -4739,20 +4745,20 @@ case 471:\n \t\t;\n     break;}\n case 472:\n-#line 2664 \"objc-parse.y\"\n+#line 2670 \"objc-parse.y\"\n {\n \t\t  continue_method_def ();\n \t\t;\n     break;}\n case 473:\n-#line 2668 \"objc-parse.y\"\n+#line 2674 \"objc-parse.y\"\n {\n \t\t  finish_method_def ();\n \t\t  objc_method_context = NULL_TREE;\n \t\t;\n     break;}\n case 474:\n-#line 2674 \"objc-parse.y\"\n+#line 2680 \"objc-parse.y\"\n {\n \t\t  remember_protocol_qualifiers ();\n \t\t  if (objc_implementation_context)\n@@ -4762,7 +4768,7 @@ case 474:\n \t\t;\n     break;}\n case 475:\n-#line 2682 \"objc-parse.y\"\n+#line 2688 \"objc-parse.y\"\n {\n \t\t  forget_protocol_qualifiers ();\n \t\t  add_instance_method (objc_implementation_context, yyvsp[0].ttype);\n@@ -4771,267 +4777,267 @@ case 475:\n \t\t;\n     break;}\n case 476:\n-#line 2689 \"objc-parse.y\"\n+#line 2695 \"objc-parse.y\"\n {\n \t\t  continue_method_def ();\n \t\t;\n     break;}\n case 477:\n-#line 2693 \"objc-parse.y\"\n+#line 2699 \"objc-parse.y\"\n {\n \t\t  finish_method_def ();\n \t\t  objc_method_context = NULL_TREE;\n \t\t;\n     break;}\n case 479:\n-#line 2705 \"objc-parse.y\"\n+#line 2711 \"objc-parse.y\"\n {yyval.ttype = NULL_TREE; ;\n     break;}\n case 484:\n-#line 2712 \"objc-parse.y\"\n+#line 2718 \"objc-parse.y\"\n {yyval.ttype = NULL_TREE; ;\n     break;}\n case 488:\n-#line 2722 \"objc-parse.y\"\n+#line 2728 \"objc-parse.y\"\n {\n \t\t  /* Remember protocol qualifiers in prototypes.  */\n \t\t  remember_protocol_qualifiers ();\n \t\t  objc_inherit_code = CLASS_METHOD_DECL;\n \t\t;\n     break;}\n case 489:\n-#line 2728 \"objc-parse.y\"\n+#line 2734 \"objc-parse.y\"\n {\n \t\t  /* Forget protocol qualifiers here.  */\n \t\t  forget_protocol_qualifiers ();\n \t\t  add_class_method (objc_interface_context, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 491:\n-#line 2736 \"objc-parse.y\"\n+#line 2742 \"objc-parse.y\"\n {\n \t\t  /* Remember protocol qualifiers in prototypes.  */\n \t\t  remember_protocol_qualifiers ();\n \t\t  objc_inherit_code = INSTANCE_METHOD_DECL;\n \t\t;\n     break;}\n case 492:\n-#line 2742 \"objc-parse.y\"\n+#line 2748 \"objc-parse.y\"\n {\n \t\t  /* Forget protocol qualifiers here.  */\n \t\t  forget_protocol_qualifiers ();\n \t\t  add_instance_method (objc_interface_context, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 494:\n-#line 2752 \"objc-parse.y\"\n+#line 2758 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_method_decl (objc_inherit_code, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE);\n \t\t;\n     break;}\n case 495:\n-#line 2757 \"objc-parse.y\"\n+#line 2763 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_method_decl (objc_inherit_code, NULL_TREE, yyvsp[0].ttype, NULL_TREE);\n \t\t;\n     break;}\n case 496:\n-#line 2762 \"objc-parse.y\"\n+#line 2768 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_method_decl (objc_inherit_code, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 497:\n-#line 2767 \"objc-parse.y\"\n+#line 2773 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_method_decl (objc_inherit_code, NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 506:\n-#line 2797 \"objc-parse.y\"\n+#line 2803 \"objc-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 507:\n-#line 2802 \"objc-parse.y\"\n+#line 2808 \"objc-parse.y\"\n { shadow_tag (yyvsp[-1].ttype); ;\n     break;}\n case 508:\n-#line 2804 \"objc-parse.y\"\n+#line 2810 \"objc-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 509:\n-#line 2809 \"objc-parse.y\"\n+#line 2815 \"objc-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 510:\n-#line 2811 \"objc-parse.y\"\n+#line 2817 \"objc-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 511:\n-#line 2819 \"objc-parse.y\"\n+#line 2825 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n \t\t\t\t\t\t\t yyvsp[0].ttype)); ;\n     break;}\n case 512:\n-#line 2824 \"objc-parse.y\"\n+#line 2830 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n \t\t\t\t\t\t\t yyvsp[0].ttype)); ;\n     break;}\n case 513:\n-#line 2829 \"objc-parse.y\"\n+#line 2835 \"objc-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n \t\t\t\t\t\t\t yyvsp[0].ttype)); ;\n     break;}\n case 514:\n-#line 2837 \"objc-parse.y\"\n+#line 2843 \"objc-parse.y\"\n {\n \t    \t  yyval.ttype = NULL_TREE;\n \t\t;\n     break;}\n case 515:\n-#line 2841 \"objc-parse.y\"\n+#line 2847 \"objc-parse.y\"\n {\n \t\t  /* oh what a kludge! */\n \t\t  yyval.ttype = (tree)1;\n \t\t;\n     break;}\n case 516:\n-#line 2846 \"objc-parse.y\"\n+#line 2852 \"objc-parse.y\"\n {\n \t\t  pushlevel (0);\n \t\t;\n     break;}\n case 517:\n-#line 2850 \"objc-parse.y\"\n+#line 2856 \"objc-parse.y\"\n {\n \t  \t  /* returns a tree list node generated by get_parm_info */\n \t\t  yyval.ttype = yyvsp[0].ttype;\n \t\t  poplevel (0, 0, 0);\n \t\t;\n     break;}\n case 520:\n-#line 2865 \"objc-parse.y\"\n+#line 2871 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 525:\n-#line 2878 \"objc-parse.y\"\n+#line 2884 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 526:\n-#line 2879 \"objc-parse.y\"\n+#line 2885 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 527:\n-#line 2880 \"objc-parse.y\"\n+#line 2886 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 528:\n-#line 2881 \"objc-parse.y\"\n+#line 2887 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 529:\n-#line 2882 \"objc-parse.y\"\n+#line 2888 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 530:\n-#line 2883 \"objc-parse.y\"\n+#line 2889 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 531:\n-#line 2884 \"objc-parse.y\"\n+#line 2890 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 532:\n-#line 2885 \"objc-parse.y\"\n+#line 2891 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 533:\n-#line 2886 \"objc-parse.y\"\n+#line 2892 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 534:\n-#line 2887 \"objc-parse.y\"\n+#line 2893 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 535:\n-#line 2888 \"objc-parse.y\"\n+#line 2894 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 536:\n-#line 2889 \"objc-parse.y\"\n+#line 2895 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 537:\n-#line 2890 \"objc-parse.y\"\n+#line 2896 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 538:\n-#line 2891 \"objc-parse.y\"\n+#line 2897 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 539:\n-#line 2892 \"objc-parse.y\"\n+#line 2898 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 540:\n-#line 2893 \"objc-parse.y\"\n+#line 2899 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 541:\n-#line 2894 \"objc-parse.y\"\n+#line 2900 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 542:\n-#line 2895 \"objc-parse.y\"\n+#line 2901 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 543:\n-#line 2896 \"objc-parse.y\"\n+#line 2902 \"objc-parse.y\"\n { yyval.ttype = get_identifier (token_buffer); ;\n     break;}\n case 546:\n-#line 2902 \"objc-parse.y\"\n+#line 2908 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_keyword_decl (yyvsp[-5].ttype, yyvsp[-2].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 547:\n-#line 2907 \"objc-parse.y\"\n+#line 2913 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_keyword_decl (yyvsp[-2].ttype, NULL_TREE, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 548:\n-#line 2912 \"objc-parse.y\"\n+#line 2918 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_keyword_decl (NULL_TREE, yyvsp[-2].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 549:\n-#line 2917 \"objc-parse.y\"\n+#line 2923 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_keyword_decl (NULL_TREE, NULL_TREE, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 553:\n-#line 2930 \"objc-parse.y\"\n+#line 2936 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 554:\n-#line 2938 \"objc-parse.y\"\n+#line 2944 \"objc-parse.y\"\n {\n \t\t  if (TREE_CHAIN (yyvsp[0].ttype) == NULL_TREE)\n \t\t    /* just return the expr., remove a level of indirection */\n@@ -5042,69 +5048,69 @@ case 554:\n \t\t;\n     break;}\n case 555:\n-#line 2950 \"objc-parse.y\"\n+#line 2956 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (yyvsp[-2].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 556:\n-#line 2954 \"objc-parse.y\"\n+#line 2960 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 558:\n-#line 2962 \"objc-parse.y\"\n+#line 2968 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = get_class_reference (yyvsp[0].ttype);\n \t\t;\n     break;}\n case 559:\n-#line 2969 \"objc-parse.y\"\n+#line 2975 \"objc-parse.y\"\n { objc_receiver_context = 1; ;\n     break;}\n case 560:\n-#line 2971 \"objc-parse.y\"\n+#line 2977 \"objc-parse.y\"\n { objc_receiver_context = 0; ;\n     break;}\n case 561:\n-#line 2973 \"objc-parse.y\"\n+#line 2979 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype);\n \t\t;\n     break;}\n case 565:\n-#line 2986 \"objc-parse.y\"\n+#line 2992 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 566:\n-#line 2993 \"objc-parse.y\"\n+#line 2999 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (yyvsp[-1].ttype, NULL_TREE);\n \t\t;\n     break;}\n case 567:\n-#line 2997 \"objc-parse.y\"\n+#line 3003 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, NULL_TREE);\n \t\t;\n     break;}\n case 568:\n-#line 3004 \"objc-parse.y\"\n+#line 3010 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = yyvsp[-1].ttype;\n \t\t;\n     break;}\n case 569:\n-#line 3011 \"objc-parse.y\"\n+#line 3017 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = yyvsp[-1].ttype;\n \t\t;\n     break;}\n case 570:\n-#line 3020 \"objc-parse.y\"\n+#line 3026 \"objc-parse.y\"\n {\n \t\t  yyval.ttype = groktypename (yyvsp[-1].ttype);\n \t\t;\n@@ -5331,5 +5337,5 @@ case 570:\n     }\n   return 1;\n }\n-#line 3025 \"objc-parse.y\"\n+#line 3031 \"objc-parse.y\"\n "}, {"sha": "10f98a31f30ac069d912e5ee72a74b67a9baa52c", "filename": "gcc/objc/objc-parse.y", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Fobjc%2Fobjc-parse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Fobjc%2Fobjc-parse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.y?ref=e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b", "patch": "@@ -1258,11 +1258,14 @@ designator:\n \f\n nested_function:\n \t  declarator\n-\t\t{ push_c_function_context ();\n+\t\t{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids nested functions\");\n+\n+\t\t  push_function_context ();\n \t\t  if (! start_function (current_declspecs, $1,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 1))\n \t\t    {\n-\t\t      pop_c_function_context ();\n+\t\t      pop_function_context ();\n \t\t      YYERROR1;\n \t\t    }\n \t\t  reinit_parse_for_function (); }\n@@ -1276,16 +1279,19 @@ nested_function:\n    which called YYERROR1 again, and so on.  */\n \t  compstmt\n \t\t{ finish_function (1);\n-\t\t  pop_c_function_context (); }\n+\t\t  pop_function_context (); }\n \t;\n \n notype_nested_function:\n \t  notype_declarator\n-\t\t{ push_c_function_context ();\n+\t\t{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids nested functions\");\n+\n+\t\t  push_function_context ();\n \t\t  if (! start_function (current_declspecs, $1,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 1))\n \t\t    {\n-\t\t      pop_c_function_context ();\n+\t\t      pop_function_context ();\n \t\t      YYERROR1;\n \t\t    }\n \t\t  reinit_parse_for_function (); }\n@@ -1299,7 +1305,7 @@ notype_nested_function:\n    which called YYERROR1 again, and so on.  */\n \t  compstmt\n \t\t{ finish_function (1);\n-\t\t  pop_c_function_context (); }\n+\t\t  pop_function_context (); }\n \t;\n \n /* Any kind of declarator (thus, all declarators allowed"}, {"sha": "e654146e2c4ef48daa848013f34004c7d2b18f3a", "filename": "gcc/toplev.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b", "patch": "@@ -4452,6 +4452,10 @@ rest_of_compilation (decl)\n \n   init_recog_no_volatile ();\n \n+  /* We're done with this function.  */\n+  if (! DECL_DEFER_OUTPUT (decl))\n+    free_after_compilation (current_function);\n+\n   /* The parsing time is all the time spent in yyparse\n      *except* what is spent in this function.  */\n "}, {"sha": "3f25a982929e3b15b8de87277cafddd4bc43da4b", "filename": "gcc/varasm.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=e2ecd91c7bff7cc5180c3bbd6dd1ff62b801350b", "patch": "@@ -3185,6 +3185,22 @@ init_varasm_status (f)\n   p->x_pool_offset = 0;\n   p->x_const_double_chain = 0;\n }\n+\n+/* Clear out all parts of our state in F that can safely be discarded\n+   after the function has been compiled.  */\n+void\n+free_varasm_status (f)\n+     struct function *f;\n+{\n+  struct varasm_status *p = f->varasm;\n+  free (p->x_const_rtx_hash_table);\n+  free (p->x_const_rtx_sym_hash_table);\n+\n+  p->x_first_pool = p->x_last_pool = 0;\n+  p->x_const_rtx_hash_table = 0;\n+  p->x_const_rtx_sym_hash_table = 0;\n+  p->x_const_double_chain = 0;\n+}\n \f\n enum kind { RTX_DOUBLE, RTX_INT };\n "}]}