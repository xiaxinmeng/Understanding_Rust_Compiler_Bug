{"sha": "f382ac6d527478171d880d7c77ecb816fe114661", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM4MmFjNmQ1Mjc0NzgxNzFkODgwZDdjNzdlY2I4MTZmZTExNDY2MQ==", "commit": {"author": {"name": "Stephen Crane", "email": "sjc@immunant.com", "date": "2017-11-10T22:10:05Z"}, "committer": {"name": "Sriraman Tallam", "email": "tmsriram@gcc.gnu.org", "date": "2017-11-10T22:10:05Z"}, "message": "Add plugin API for processing plugin-added input files.\n\nGold plugins may wish to further process an input file added by a plugin. For\nexample, the plugin may need to assign a unique segment for sections in a\nplugin-generated input file. This patch adds a plugin callback that the linker\nwill call when reading symbols from a new input file added after the\nall_symbols_read event (i.e. an input file added by a plugin).\n\n2017-11-10  Stephen Crane <sjc@immunant.com>\n\n\t* plugin-api.h: Add plugin API for processing plugin-added\n\tinput files.\n\nFrom-SVN: r254640", "tree": {"sha": "0f14f7c8fb9beb2854010738766619a8c1acbbbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f14f7c8fb9beb2854010738766619a8c1acbbbc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f382ac6d527478171d880d7c77ecb816fe114661", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f382ac6d527478171d880d7c77ecb816fe114661", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f382ac6d527478171d880d7c77ecb816fe114661", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f382ac6d527478171d880d7c77ecb816fe114661/comments", "author": {"login": "rinon", "id": 970543, "node_id": "MDQ6VXNlcjk3MDU0Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/970543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rinon", "html_url": "https://github.com/rinon", "followers_url": "https://api.github.com/users/rinon/followers", "following_url": "https://api.github.com/users/rinon/following{/other_user}", "gists_url": "https://api.github.com/users/rinon/gists{/gist_id}", "starred_url": "https://api.github.com/users/rinon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rinon/subscriptions", "organizations_url": "https://api.github.com/users/rinon/orgs", "repos_url": "https://api.github.com/users/rinon/repos", "events_url": "https://api.github.com/users/rinon/events{/privacy}", "received_events_url": "https://api.github.com/users/rinon/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "16207ddd2ebdc9379a8ff8b274e4d8bb35d485f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16207ddd2ebdc9379a8ff8b274e4d8bb35d485f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16207ddd2ebdc9379a8ff8b274e4d8bb35d485f5"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "9cae3fb2bd8dd8de3b62d22f88f1556bd29bf14c", "filename": "include/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f382ac6d527478171d880d7c77ecb816fe114661/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f382ac6d527478171d880d7c77ecb816fe114661/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=f382ac6d527478171d880d7c77ecb816fe114661", "patch": "@@ -1,3 +1,8 @@\n+2017-11-10  Stephen Crane <sjc@immunant.com>\n+\n+\t* plugin-api.h: Add plugin API for processing plugin-added\n+\tinput files.\n+\n 2017-10-23  David Malcolm  <dmalcolm@redhat.com>\n \n \t* unique-ptr.h: Make include of <memory> conditional on C++11 or"}, {"sha": "f081f85dfaf9da05bb7db7a648f543dd7761eeec", "filename": "include/plugin-api.h", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f382ac6d527478171d880d7c77ecb816fe114661/include%2Fplugin-api.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f382ac6d527478171d880d7c77ecb816fe114661/include%2Fplugin-api.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fplugin-api.h?ref=f382ac6d527478171d880d7c77ecb816fe114661", "patch": "@@ -365,6 +365,20 @@ enum ld_plugin_status\n (*ld_plugin_get_input_section_size) (const struct ld_plugin_section section,\n                                      uint64_t *secsize);\n \n+typedef\n+enum ld_plugin_status\n+(*ld_plugin_new_input_handler) (const struct ld_plugin_input_file *file);\n+\n+/* The linker's interface for registering the \"new_input\" handler. This handler\n+   will be notified when a new input file has been added after the\n+   all_symbols_read event, allowing the plugin to, for example, set a unique\n+   segment for sections in plugin-generated input files. */\n+\n+typedef\n+enum ld_plugin_status\n+(*ld_plugin_register_new_input) (ld_plugin_new_input_handler handler);\n+\n+\n enum ld_plugin_level\n {\n   LDPL_INFO,\n@@ -407,7 +421,8 @@ enum ld_plugin_tag\n   LDPT_UNIQUE_SEGMENT_FOR_SECTIONS = 27,\n   LDPT_GET_SYMBOLS_V3 = 28,\n   LDPT_GET_INPUT_SECTION_ALIGNMENT = 29,\n-  LDPT_GET_INPUT_SECTION_SIZE = 30\n+  LDPT_GET_INPUT_SECTION_SIZE = 30,\n+  LDPT_REGISTER_NEW_INPUT_HOOK = 31\n };\n \n /* The plugin transfer vector.  */\n@@ -441,6 +456,7 @@ struct ld_plugin_tv\n     ld_plugin_unique_segment_for_sections tv_unique_segment_for_sections;\n     ld_plugin_get_input_section_alignment tv_get_input_section_alignment;\n     ld_plugin_get_input_section_size tv_get_input_section_size;\n+    ld_plugin_register_new_input tv_register_new_input;\n   } tv_u;\n };\n "}]}