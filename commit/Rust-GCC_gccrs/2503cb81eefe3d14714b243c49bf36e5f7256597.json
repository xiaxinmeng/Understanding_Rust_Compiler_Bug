{"sha": "2503cb81eefe3d14714b243c49bf36e5f7256597", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjUwM2NiODFlZWZlM2QxNDcxNGIyNDNjNDliZjM2ZTVmNzI1NjU5Nw==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2010-06-23T08:56:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-23T08:56:20Z"}, "message": "(gnat_to_gnu_param): Use void_ptr GCC type for System.Address argument  \nof GCC builtin imports.\n\nFrom-SVN: r161261", "tree": {"sha": "4603caf89ef68254d8df00e2df6bb2659cdb367e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4603caf89ef68254d8df00e2df6bb2659cdb367e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2503cb81eefe3d14714b243c49bf36e5f7256597", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2503cb81eefe3d14714b243c49bf36e5f7256597", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2503cb81eefe3d14714b243c49bf36e5f7256597", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2503cb81eefe3d14714b243c49bf36e5f7256597/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d92eccc3593dc167d5b5f59f7493d0867dafbd80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d92eccc3593dc167d5b5f59f7493d0867dafbd80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d92eccc3593dc167d5b5f59f7493d0867dafbd80"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "fff58560a0208dd7abb4be0e7b03f66737cc70a2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2503cb81eefe3d14714b243c49bf36e5f7256597/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2503cb81eefe3d14714b243c49bf36e5f7256597/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2503cb81eefe3d14714b243c49bf36e5f7256597", "patch": "@@ -48,6 +48,8 @@\n \t(intrin_return_compatible_p): Never warn on \"function imported as\n \tprocedure\".  Defer the void/void case to the common type compatibility\n \tcheck.\n+\t(gnat_to_gnu_param): Use void_ptr GCC type for System.Address argument\n+\tof GCC builtin imports.\n \n 2010-06-23  Olivier Hainque  <hainque@adacore.com>\n "}, {"sha": "c2f697e94454977a5f79b64a6efd6f2366683f43", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2503cb81eefe3d14714b243c49bf36e5f7256597/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2503cb81eefe3d14714b243c49bf36e5f7256597/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=2503cb81eefe3d14714b243c49bf36e5f7256597", "patch": "@@ -5264,6 +5264,12 @@ gnat_to_gnu_param (Entity_Id gnat_param, Mechanism_Type mech,\n     gnu_param_type\n       = TREE_TYPE (TREE_TYPE (TYPE_FIELDS (TREE_TYPE (gnu_param_type))));\n \n+  /* For GCC builtins, pass Address integer types as (void *)  */\n+  if (Convention (gnat_subprog) == Convention_Intrinsic\n+      && Present (Interface_Name (gnat_subprog))\n+      && Is_Descendent_Of_Address (Etype (gnat_param)))\n+    gnu_param_type = ptr_void_type_node;\n+\n   /* VMS descriptors are themselves passed by reference.  */\n   if (mech == By_Short_Descriptor ||\n       (mech == By_Descriptor && TARGET_ABI_OPEN_VMS && !TARGET_MALLOC64))"}]}