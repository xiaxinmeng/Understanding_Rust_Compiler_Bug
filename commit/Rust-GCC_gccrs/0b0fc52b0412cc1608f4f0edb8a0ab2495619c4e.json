{"sha": "0b0fc52b0412cc1608f4f0edb8a0ab2495619c4e", "node_id": "C_kwDOANBUbNoAKDBiMGZjNTJiMDQxMmNjMTYwOGY0ZjBlZGI4YTBhYjI0OTU2MTljNGU", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-03-25T07:43:45Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-03-25T12:15:37Z"}, "message": "middle-end/105049 - fix uniform_vector_p and vector CTOR gimplification\n\nWe have\n\n  return VIEW_CONVERT_EXPR<U>( VEC_PERM_EXPR < {<<< Unknown tree: compound_literal_expr\n        V D.1984 = { 0 }; >>>, { 0 }} , {<<< Unknown tree: compound_literal_expr\n        V D.1985 = { 0 }; >>>, { 0 }} , { 0, 0 } >  & {(short int) SAVE_EXPR <c>, (short int) SAVE_EXPR <c>});\n\nwhere we gimplify the init CTORs to\n\n  _1 = {{ 0 }, { 0 }};\n  _2 = {{ 0 }, { 0 }};\n\ninstead of to vector constants.  That later runs into a bug in\nuniform_vector_p which doesn't handle CTORs of vector elements\ncorrectly.\n\nThe following adjusts uniform_vector_p to handle CTORs of vector\nelements.\n\n2022-03-25  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/105049\n\t* tree.cc (uniform_vector_p): Recurse for VECTOR_CST or\n\tCONSTRUCTOR first elements.\n\n\t* gcc.dg/pr105049.c: New testcase.", "tree": {"sha": "9fa9785b885eb6e71801b43896f0604e34d8eb91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fa9785b885eb6e71801b43896f0604e34d8eb91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b0fc52b0412cc1608f4f0edb8a0ab2495619c4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b0fc52b0412cc1608f4f0edb8a0ab2495619c4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b0fc52b0412cc1608f4f0edb8a0ab2495619c4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b0fc52b0412cc1608f4f0edb8a0ab2495619c4e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "711c7f079bc0d250e6c5c4450828453c1096542c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/711c7f079bc0d250e6c5c4450828453c1096542c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/711c7f079bc0d250e6c5c4450828453c1096542c"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "b0518c6a181b018a344edd25aff9f67f0eb9f3f6", "filename": "gcc/testsuite/gcc.dg/pr105049.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0fc52b0412cc1608f4f0edb8a0ab2495619c4e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr105049.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0fc52b0412cc1608f4f0edb8a0ab2495619c4e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr105049.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr105049.c?ref=0b0fc52b0412cc1608f4f0edb8a0ab2495619c4e", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fno-tree-forwprop\" } */\n+\n+typedef short __attribute__((__vector_size__ (sizeof(short)))) V;\n+typedef short __attribute__((__vector_size__ (2*sizeof(short)))) U;\n+char c;\n+\n+U\n+foo (void)\n+{\n+  return __builtin_shufflevector ((V){}, (V){}, 0, 0) & c;\n+}"}, {"sha": "ec200e9a7eb43fb033ebc012f17d5ce64405adce", "filename": "gcc/tree.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0fc52b0412cc1608f4f0edb8a0ab2495619c4e/gcc%2Ftree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0fc52b0412cc1608f4f0edb8a0ab2495619c4e/gcc%2Ftree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.cc?ref=0b0fc52b0412cc1608f4f0edb8a0ab2495619c4e", "patch": "@@ -10266,6 +10266,8 @@ uniform_vector_p (const_tree vec)\n       if (i != nelts)\n \treturn NULL_TREE;\n \n+      if (TREE_CODE (first) == CONSTRUCTOR || TREE_CODE (first) == VECTOR_CST)\n+\treturn uniform_vector_p (first);\n       return first;\n     }\n "}]}