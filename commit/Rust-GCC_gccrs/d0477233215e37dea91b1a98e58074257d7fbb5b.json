{"sha": "d0477233215e37dea91b1a98e58074257d7fbb5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA0NzcyMzMyMTVlMzdkZWE5MWIxYTk4ZTU4MDc0MjU3ZDdmYmI1Yg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2018-10-18T19:35:34Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2018-10-18T19:35:34Z"}, "message": "Fix (re)alloc of polymorphic arrays\n\n        PR fortran/87625\n        * trans-array.c (gfc_is_reallocatable_lhs): Detect allocatable\n        polymorphic arrays.\n\n        PR fortran/87625\n        * gfortran.dg/realloc_on_assign_31.f90: New file.\n\nFrom-SVN: r265283", "tree": {"sha": "be3c7d345234f820644bfca1ce75a9c27156a169", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be3c7d345234f820644bfca1ce75a9c27156a169"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0477233215e37dea91b1a98e58074257d7fbb5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0477233215e37dea91b1a98e58074257d7fbb5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0477233215e37dea91b1a98e58074257d7fbb5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0477233215e37dea91b1a98e58074257d7fbb5b/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a9a2fddbf2a93b8427478954d4efe9e02080454f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9a2fddbf2a93b8427478954d4efe9e02080454f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9a2fddbf2a93b8427478954d4efe9e02080454f"}], "stats": {"total": 54, "additions": 51, "deletions": 3}, "files": [{"sha": "9ad52ca3c01e9250af411c4e3443d7b01cbdc073", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0477233215e37dea91b1a98e58074257d7fbb5b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0477233215e37dea91b1a98e58074257d7fbb5b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d0477233215e37dea91b1a98e58074257d7fbb5b", "patch": "@@ -1,3 +1,9 @@\n+2018-10-18  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/87625\n+\t* trans-array.c (gfc_is_reallocatable_lhs): Detect allocatable\n+\tpolymorphic arrays.\n+\n 2018-10-18  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/58618"}, {"sha": "47fec131c781668c9e15b33020cc51c8c3cdf6d2", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0477233215e37dea91b1a98e58074257d7fbb5b/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0477233215e37dea91b1a98e58074257d7fbb5b/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=d0477233215e37dea91b1a98e58074257d7fbb5b", "patch": "@@ -9616,9 +9616,15 @@ gfc_is_reallocatable_lhs (gfc_expr *expr)\n   if (sym->ts.type == BT_CLASS\n       && !sym->attr.associate_var\n       && CLASS_DATA (sym)->attr.allocatable\n-      && expr->ref && expr->ref->type == REF_COMPONENT\n-      && strcmp (expr->ref->u.c.component->name, \"_data\") == 0\n-      && expr->ref->next == NULL)\n+      && expr->ref\n+      && ((expr->ref->type == REF_ARRAY && expr->ref->u.ar.type == AR_FULL\n+\t   && expr->ref->next == NULL)\n+\t  || (expr->ref->type == REF_COMPONENT\n+\t      && strcmp (expr->ref->u.c.component->name, \"_data\") == 0\n+\t      && (expr->ref->next == NULL\n+\t\t  || (expr->ref->next->type == REF_ARRAY\n+\t\t      && expr->ref->next->u.ar.type == AR_FULL\n+\t\t      && expr->ref->next->next == NULL)))))\n     return true;\n \n   /* An allocatable variable.  */"}, {"sha": "c2a3bd1971e14a6251255070ea03b1c3840e4bd1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0477233215e37dea91b1a98e58074257d7fbb5b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0477233215e37dea91b1a98e58074257d7fbb5b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d0477233215e37dea91b1a98e58074257d7fbb5b", "patch": "@@ -1,3 +1,8 @@\n+2018-10-18  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/87625\n+\t* gfortran.dg/realloc_on_assign_31.f90: New file.\n+\n 2018-10-18  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR tree-optimization/87562"}, {"sha": "55096d179ba5da6a57addd639c8f5e15ca99b348", "filename": "gcc/testsuite/gfortran.dg/realloc_on_assign_31.f90", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0477233215e37dea91b1a98e58074257d7fbb5b/gcc%2Ftestsuite%2Fgfortran.dg%2Frealloc_on_assign_31.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0477233215e37dea91b1a98e58074257d7fbb5b/gcc%2Ftestsuite%2Fgfortran.dg%2Frealloc_on_assign_31.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Frealloc_on_assign_31.f90?ref=d0477233215e37dea91b1a98e58074257d7fbb5b", "patch": "@@ -0,0 +1,31 @@\n+! { dg-do run }\n+!\n+! PR fortran/87625\n+!\n+! Ensure that \"var\" gets allocated.\n+!\n+! Contributed by Tobias Burnus\n+!\n+program test\n+   implicit none\n+   type t\n+     integer :: i\n+   end type t\n+   class(t), allocatable :: var(:)\n+   call poly_init()\n+   print *, var(:)%i\n+   if (lbound(var, 1) /= 1 .and. ubound(var, 1) /= 2) call abort()\n+   if (var(1)%i /= 11 .or. var(2)%i /= 12) call abort()\n+   call poly_init2()\n+   !print *, var(:)%i\n+   if (lbound(var, 1) /= 1 .and. ubound(var, 1) /= 3) call abort()\n+   if (var(1)%i /= 11 .or. var(2)%i /= 12 .or. var(3)%i /= 13) call abort()\n+contains\n+   subroutine poly_init()\n+     !allocate(var(2))\n+     var = [t :: t(11), t(12)]\n+   end subroutine poly_init\n+   subroutine poly_init2()\n+     var = [t :: t(11), t(12), t(13)]\n+   end subroutine poly_init2\n+ end program test"}]}