{"sha": "39ce30d841a90473fc5aeefe4dc6081c1966375d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzljZTMwZDg0MWE5MDQ3M2ZjNWFlZWZlNGRjNjA4MWMxOTY2Mzc1ZA==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-06-25T13:09:42Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-06-25T13:09:42Z"}, "message": "v850.c: Remove redundant extern declarations for last_assemble_variable_decl and...\n\n\t* config/v850/v850.c: Remove redundant extern declarations for\n\tlast_assemble_variable_decl and size_directive_output.\n\n\t* doc/tm.texi.in: Document JMP_BUF_SIZE.\n\t* doc/tm.texi: Regenerate.\n\t* config/sparc/sparc.h (JMP_BUF_SIZE): Do not define.\n\t* config/pa/pa.h (JMP_BUF_SIZE): Likewise.\n\t* config/stormy16/stormy16.h: Likewise.\n\n\t* config/picochip/picochip.c: Do not define DONT_USE_BUILTIN_SETJMP.\n\n\t* doc/sourcebuild.texi: Add missing subdirectories.\n\nFrom-SVN: r188933", "tree": {"sha": "ad3d9be34ddb16b21b5cd6ba654e740ab02d232f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad3d9be34ddb16b21b5cd6ba654e740ab02d232f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39ce30d841a90473fc5aeefe4dc6081c1966375d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39ce30d841a90473fc5aeefe4dc6081c1966375d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39ce30d841a90473fc5aeefe4dc6081c1966375d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39ce30d841a90473fc5aeefe4dc6081c1966375d/comments", "author": null, "committer": null, "parents": [{"sha": "4e523f332518b5b2d04ffc9782a443e49944b49c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e523f332518b5b2d04ffc9782a443e49944b49c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e523f332518b5b2d04ffc9782a443e49944b49c"}], "stats": {"total": 55, "additions": 41, "deletions": 14}, "files": [{"sha": "97280220f2e3ded118af7f98e389b17b536ea9f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ce30d841a90473fc5aeefe4dc6081c1966375d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ce30d841a90473fc5aeefe4dc6081c1966375d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=39ce30d841a90473fc5aeefe4dc6081c1966375d", "patch": "@@ -1,3 +1,18 @@\n+2012-06-25  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* config/v850/v850.c: Remove redundant extern declarations for\n+\tlast_assemble_variable_decl and size_directive_output.\n+\n+\t* doc/tm.texi.in: Document JMP_BUF_SIZE.\n+\t* doc/tm.texi: Regenerate.\n+\t* config/sparc/sparc.h (JMP_BUF_SIZE): Do not define.\n+\t* config/pa/pa.h (JMP_BUF_SIZE): Likewise.\n+\t* config/stormy16/stormy16.h: Likewise.\n+\n+\t* config/picochip/picochip.c: Do not define DONT_USE_BUILTIN_SETJMP.\n+\n+\t* doc/sourcebuild.texi: Add missing subdirectories.\n+\n 2012-06-25  Tristan Gingold  <gingold@adacore.com>\n \n \t* config/i386/i386.h: Fix typo."}, {"sha": "6bf126e8c124417e9a2f3136dde3debdcd9ebaa1", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ce30d841a90473fc5aeefe4dc6081c1966375d/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ce30d841a90473fc5aeefe4dc6081c1966375d/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=39ce30d841a90473fc5aeefe4dc6081c1966375d", "patch": "@@ -1508,9 +1508,6 @@ do { \t\t\t\t\t\t\t\t\t\\\n      of the return address.  */\t\t\t\t\t\t\\\n   (GEN_INT (-4))\n \n-/* The number of Pmode words for the setjmp buffer.  */\n-#define JMP_BUF_SIZE 50\n-\n /* We need a libcall to canonicalize function pointers on TARGET_ELF32.  */\n #define CANONICALIZE_FUNCPTR_FOR_COMPARE_LIBCALL \\\n   \"__canonicalize_funcptr_for_compare\""}, {"sha": "9df557902daa0bdcf0b386d1305e45ee387bbfcd", "filename": "gcc/config/picochip/picochip.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ce30d841a90473fc5aeefe4dc6081c1966375d/gcc%2Fconfig%2Fpicochip%2Fpicochip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ce30d841a90473fc5aeefe4dc6081c1966375d/gcc%2Fconfig%2Fpicochip%2Fpicochip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpicochip%2Fpicochip.c?ref=39ce30d841a90473fc5aeefe4dc6081c1966375d", "patch": "@@ -303,8 +303,6 @@ static char picochip_get_vliw_alu_id (void);\n    usually requires a scratch register. */\n #undef TARGET_SECONDARY_RELOAD\n #define TARGET_SECONDARY_RELOAD picochip_secondary_reload\n-#undef DONT_USE_BUILTIN_SETJMP\n-#define DONT_USE_BUILTIN_SETJMP 1\n \n /* How Large Values are Returned  */\n "}, {"sha": "387e50b5009d273dd1b7710519b6f1b54471636e", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ce30d841a90473fc5aeefe4dc6081c1966375d/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ce30d841a90473fc5aeefe4dc6081c1966375d/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=39ce30d841a90473fc5aeefe4dc6081c1966375d", "patch": "@@ -1744,9 +1744,6 @@ extern int sparc_indent_opcode;\n #define AS_NIAGARA3_FLAG \"d\"\n #endif\n \n-/* The number of Pmode words for the setjmp buffer.  */\n-#define JMP_BUF_SIZE 12\n-\n /* We use gcc _mcount for profiling.  */\n #define NO_PROFILE_COUNTERS 0\n "}, {"sha": "88bd4530f0c07d1a71dab911b38367ad507d4c70", "filename": "gcc/config/stormy16/stormy16.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ce30d841a90473fc5aeefe4dc6081c1966375d/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ce30d841a90473fc5aeefe4dc6081c1966375d/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.h?ref=39ce30d841a90473fc5aeefe4dc6081c1966375d", "patch": "@@ -458,9 +458,6 @@ enum reg_class\n #define DWARF2_UNWIND_INFO \t\t0\n #define DWARF_CIE_DATA_ALIGNMENT\t1\n \n-#undef  DONT_USE_BUILTIN_SETJMP\n-#define JMP_BUF_SIZE  8\n-\f\n /* Assembler Commands for Alignment.  */\n \n #define ASM_OUTPUT_ALIGN(STREAM, POWER) \\"}, {"sha": "f74c7ed49f074932f550d2eaee28e3c9340e6e3e", "filename": "gcc/config/v850/v850.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ce30d841a90473fc5aeefe4dc6081c1966375d/gcc%2Fconfig%2Fv850%2Fv850.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ce30d841a90473fc5aeefe4dc6081c1966375d/gcc%2Fconfig%2Fv850%2Fv850.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.c?ref=39ce30d841a90473fc5aeefe4dc6081c1966375d", "patch": "@@ -2430,9 +2430,6 @@ construct_save_jarl (rtx op)\n   return buff;\n }\n \n-extern tree last_assemble_variable_decl;\n-extern int size_directive_output;\n-\n /* A version of asm_output_aligned_bss() that copes with the special\n    data areas of the v850.  */\n void"}, {"sha": "3d834eeb095cfed2a8b3d9d1dff929955fa48836", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ce30d841a90473fc5aeefe4dc6081c1966375d/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ce30d841a90473fc5aeefe4dc6081c1966375d/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=39ce30d841a90473fc5aeefe4dc6081c1966375d", "patch": "@@ -66,6 +66,10 @@ include it in @code{libc}.\n @item libada\n The Ada runtime library.\n \n+@item libatomic\n+The runtime support library for atomic operations (e.g. for @code{__sync}\n+and @code{__atomic}).\n+\n @item libcpp\n The C preprocessor library.\n \n@@ -94,6 +98,9 @@ generally useful data structures and algorithms.  @xref{Top, ,\n Introduction, libiberty, @sc{gnu} libiberty}, for more information\n about this library.\n \n+@item libitm\n+The runtime support library for transactional memory.\n+\n @item libjava\n The Java runtime library.\n \n@@ -104,6 +111,9 @@ dereferencing operations.\n @item libobjc\n The Objective-C and Objective-C++ runtime library.\n \n+@item libquadmath\n+The runtime support library for quad-precision math operations.\n+\n @item libssp\n The Stack protector runtime library.\n "}, {"sha": "5a369b0ff30934f3e9751d383d36a888bea2252c", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ce30d841a90473fc5aeefe4dc6081c1966375d/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ce30d841a90473fc5aeefe4dc6081c1966375d/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=39ce30d841a90473fc5aeefe4dc6081c1966375d", "patch": "@@ -8961,6 +8961,14 @@ should use the @code{setjmp}/@code{longjmp} functions from the C library\n instead of the @code{__builtin_setjmp}/@code{__builtin_longjmp} machinery.\n @end defmac\n \n+@defmac JMP_BUF_SIZE\n+This macro has no effect unless @code{DONT_USE_BUILTIN_SETJMP} is also\n+defined.  Define this macro if the default size of @code{jmp_buf} buffer\n+for the @code{setjmp}/@code{longjmp}-based exception handling mechanism\n+is not large enough, or if it is much too large.\n+The default size is @code{FIRST_PSEUDO_REGISTER * sizeof(void *)}.\n+@end defmac\n+\n @defmac DWARF_CIE_DATA_ALIGNMENT\n This macro need only be defined if the target might save registers in the\n function prologue at an offset to the stack pointer that is not aligned to"}, {"sha": "5d2a0b1742963e511ad9c9e150a375617cc5afb9", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ce30d841a90473fc5aeefe4dc6081c1966375d/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ce30d841a90473fc5aeefe4dc6081c1966375d/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=39ce30d841a90473fc5aeefe4dc6081c1966375d", "patch": "@@ -8856,6 +8856,14 @@ should use the @code{setjmp}/@code{longjmp} functions from the C library\n instead of the @code{__builtin_setjmp}/@code{__builtin_longjmp} machinery.\n @end defmac\n \n+@defmac JMP_BUF_SIZE\n+This macro has no effect unless @code{DONT_USE_BUILTIN_SETJMP} is also\n+defined.  Define this macro if the default size of @code{jmp_buf} buffer\n+for the @code{setjmp}/@code{longjmp}-based exception handling mechanism\n+is not large enough, or if it is much too large.\n+The default size is @code{FIRST_PSEUDO_REGISTER * sizeof(void *)}.\n+@end defmac\n+\n @defmac DWARF_CIE_DATA_ALIGNMENT\n This macro need only be defined if the target might save registers in the\n function prologue at an offset to the stack pointer that is not aligned to"}]}