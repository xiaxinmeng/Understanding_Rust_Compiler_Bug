{"sha": "e2ef0ff683ddbb3dceb0888e2ba294ddda55da53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJlZjBmZjY4M2RkYmIzZGNlYjA4ODhlMmJhMjk0ZGRkYTU1ZGE1Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-06T09:56:29Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-06T09:56:29Z"}, "message": "[multiple changes]\n\n2014-02-06  Arnaud Charlet  <charlet@adacore.com>\n\n\t* sem_prag.adb (Analyze_Pragma): Rewrite as a null statement\n\tin GNATprove_Mode.\n\n2014-02-06  Robert Dewar  <dewar@adacore.com>\n\n\t* einfo.ads, einfo.adb (Is_Discriminant_Check_Function): New flag.\n\t* exp_ch3.adb (Build_Dcheck_Function): Set\n\tIs_Discriminant_Check_Function.\n\n2014-02-06  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch7.adb (Is_Subprogram_Call): Inspect\n\tthe original tree in certain cases where a construct has been\n\tfactored out and replaced by a reference to a temporary.\n\n2014-02-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Process_Full_View): Fix typo in the order of\n\tparameters when propagating predicate function to full view.\n\t(Find_Type_Of_Object): Freeze base type of object type to catch\n\tpremature use of discriminated private type without a full view.\n\nFrom-SVN: r207535", "tree": {"sha": "7505750cfab65d46580b298a580f9514f295d1ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7505750cfab65d46580b298a580f9514f295d1ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2ef0ff683ddbb3dceb0888e2ba294ddda55da53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2ef0ff683ddbb3dceb0888e2ba294ddda55da53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2ef0ff683ddbb3dceb0888e2ba294ddda55da53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2ef0ff683ddbb3dceb0888e2ba294ddda55da53/comments", "author": null, "committer": null, "parents": [{"sha": "97779c340acc02f574fa943d059f68a74d36c4ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97779c340acc02f574fa943d059f68a74d36c4ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97779c340acc02f574fa943d059f68a74d36c4ca"}], "stats": {"total": 140, "additions": 119, "deletions": 21}, "files": [{"sha": "c2d9eaef90ef4cba330dd47c7745f6ba57274199", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ef0ff683ddbb3dceb0888e2ba294ddda55da53/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ef0ff683ddbb3dceb0888e2ba294ddda55da53/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e2ef0ff683ddbb3dceb0888e2ba294ddda55da53", "patch": "@@ -1,3 +1,27 @@\n+2014-02-06  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma): Rewrite as a null statement\n+\tin GNATprove_Mode.\n+\n+2014-02-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* einfo.ads, einfo.adb (Is_Discriminant_Check_Function): New flag.\n+\t* exp_ch3.adb (Build_Dcheck_Function): Set\n+\tIs_Discriminant_Check_Function.\n+\n+2014-02-06  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch7.adb (Is_Subprogram_Call): Inspect\n+\tthe original tree in certain cases where a construct has been\n+\tfactored out and replaced by a reference to a temporary.\n+\n+2014-02-06  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Process_Full_View): Fix typo in the order of\n+\tparameters when propagating predicate function to full view.\n+\t(Find_Type_Of_Object): Freeze base type of object type to catch\n+\tpremature use of discriminated private type without a full view.\n+\n 2014-02-06  Robert Dewar  <dewar@adacore.com>\n \n \t* sprint.adb: Minor reformatting."}, {"sha": "d684663e4a03def7446e6fbfb12a7ca18ca46220", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ef0ff683ddbb3dceb0888e2ba294ddda55da53/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ef0ff683ddbb3dceb0888e2ba294ddda55da53/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=e2ef0ff683ddbb3dceb0888e2ba294ddda55da53", "patch": "@@ -101,6 +101,7 @@ package body Einfo is\n    --    Entry_Component                 Node11\n    --    Enumeration_Pos                 Uint11\n    --    Generic_Homonym                 Node11\n+   --    Last_Aggregate_Assignment       Node11\n    --    Protected_Body_Subprogram       Node11\n    --    Block_Node                      Node11\n \n@@ -552,14 +553,14 @@ package body Einfo is\n    --    Has_Delayed_Rep_Aspects         Flag261\n    --    May_Inherit_Delayed_Rep_Aspects Flag262\n    --    Has_Visible_Refinement          Flag263\n+   --    Is_Discriminant_Check_Function  Flag264\n    --    SPARK_Pragma_Inherited          Flag265\n    --    SPARK_Aux_Pragma_Inherited      Flag266\n \n    --    (unused)                        Flag1\n    --    (unused)                        Flag2\n    --    (unused)                        Flag3\n \n-   --    (unused)                        Flag264\n    --    (unused)                        Flag267\n    --    (unused)                        Flag268\n    --    (unused)                        Flag269\n@@ -1962,6 +1963,11 @@ package body Einfo is\n       return Flag176 (Id);\n    end Is_Discrim_SO_Function;\n \n+   function Is_Discriminant_Check_Function (Id : E) return B is\n+   begin\n+      return Flag264 (Id);\n+   end Is_Discriminant_Check_Function;\n+\n    function Is_Dispatch_Table_Entity (Id : E) return B is\n    begin\n       return Flag234 (Id);\n@@ -2395,6 +2401,12 @@ package body Einfo is\n       return Flag207 (Id);\n    end Known_To_Have_Preelab_Init;\n \n+   function Last_Aggregate_Assignment (Id : E) return N is\n+   begin\n+      pragma Assert (Ekind (Id) = E_Variable);\n+      return Node11 (Id);\n+   end Last_Aggregate_Assignment;\n+\n    function Last_Assignment (Id : E) return N is\n    begin\n       pragma Assert (Is_Assignable (Id));\n@@ -4660,6 +4672,11 @@ package body Einfo is\n       Set_Flag176 (Id, V);\n    end Set_Is_Discrim_SO_Function;\n \n+   procedure Set_Is_Discriminant_Check_Function (Id : E; V : B := True) is\n+   begin\n+      Set_Flag264 (Id, V);\n+   end Set_Is_Discriminant_Check_Function;\n+\n    procedure Set_Is_Dispatch_Table_Entity (Id : E; V : B := True) is\n    begin\n       Set_Flag234 (Id, V);\n@@ -5110,6 +5127,12 @@ package body Einfo is\n       Set_Flag207 (Id, V);\n    end Set_Known_To_Have_Preelab_Init;\n \n+   procedure Set_Last_Aggregate_Assignment (Id : E; V : N) is\n+   begin\n+      pragma Assert (Ekind (Id) = E_Variable);\n+      Set_Node11 (Id, V);\n+   end Set_Last_Aggregate_Assignment;\n+\n    procedure Set_Last_Assignment (Id : E; V : N) is\n    begin\n       pragma Assert (Is_Assignable (Id));\n@@ -8204,6 +8227,7 @@ package body Einfo is\n       W (\"Is_Controlling_Formal\",           Flag97  (Id));\n       W (\"Is_Descendent_Of_Address\",        Flag223 (Id));\n       W (\"Is_Discrim_SO_Function\",          Flag176 (Id));\n+      W (\"Is_Discriminant_Check_Function\",  Flag264 (Id));\n       W (\"Is_Dispatch_Table_Entity\",        Flag234 (Id));\n       W (\"Is_Dispatching_Operation\",        Flag6   (Id));\n       W (\"Is_Eliminated\",                   Flag124 (Id));\n@@ -8621,6 +8645,9 @@ package body Einfo is\n          when E_Generic_Package                            =>\n             Write_Str (\"Generic_Homonym\");\n \n+         when E_Variable                                   =>\n+            Write_Str (\"Last_Aggregate_Assignment\");\n+\n          when E_Function                                   |\n               E_Procedure                                  |\n               E_Entry                                      |"}, {"sha": "a61da033466b156e353da6a142d985f74bf3cf3c", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ef0ff683ddbb3dceb0888e2ba294ddda55da53/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ef0ff683ddbb3dceb0888e2ba294ddda55da53/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=e2ef0ff683ddbb3dceb0888e2ba294ddda55da53", "patch": "@@ -2228,6 +2228,10 @@ package Einfo is\n --       Defined in all entities. Set only in E_Function entities that Layout\n --       creates to compute discriminant-dependent dynamic size/offset values.\n \n+--    Is_Discriminant_Check_Function (Flag264)\n+--       Defined in all entities. Set only in E_Function entities for functions\n+--       created to do discriminant checks.\n+\n --    Is_Discriminal (synthesized)\n --       Applies to all entities, true for renamings of discriminants. Such\n --       entities appear as constants or IN parameters.\n@@ -3018,6 +3022,12 @@ package Einfo is\n --       initialization, it may or may not be set if the type does have\n --       preelaborable initialization.\n \n+--    Last_Aggregate_Assignment (Node11)\n+--       Applies to controlled variables initialized by an aggregate. Points to\n+--       the last statement associated with the expansion of the aggregate. The\n+--       attribute is used by the finalization machinery when marking an object\n+--       as successfully initialized.\n+\n --    Last_Assignment (Node26)\n --       Defined in entities for variables, and OUT or IN OUT formals. Set for\n --       a local variable or formal to point to the left side of an assignment\n@@ -4983,6 +4993,7 @@ package Einfo is\n    --    Is_Completely_Hidden                (Flag103)\n    --    Is_Descendent_Of_Address            (Flag223)\n    --    Is_Discrim_SO_Function              (Flag176)\n+   --    Is_Discriminant_Check_Function      (Flag264)\n    --    Is_Dispatch_Table_Entity            (Flag234)\n    --    Is_Dispatching_Operation            (Flag6)\n    --    Is_Entry_Formal                     (Flag52)\n@@ -5497,6 +5508,7 @@ package Einfo is\n    --    Is_Called                           (Flag102)  (non-generic case only)\n    --    Is_Constructor                      (Flag76)\n    --    Is_Discrim_SO_Function              (Flag176)\n+   --    Is_Discriminant_Check_Function      (Flag264)\n    --    Is_Eliminated                       (Flag124)\n    --    Is_Instantiated                     (Flag126)  (generic case only)\n    --    Is_Intrinsic_Subprogram             (Flag64)\n@@ -5983,6 +5995,7 @@ package Einfo is\n    --    Hiding_Loop_Variable                (Node8)\n    --    Current_Value                       (Node9)\n    --    Encapsulating_State                 (Node10)\n+   --    Last_Aggregate_Assignment           (Node11)\n    --    Esize                               (Uint12)\n    --    Extra_Accessibility                 (Node13)\n    --    Alignment                           (Uint14)\n@@ -6487,6 +6500,7 @@ package Einfo is\n    function Is_Controlling_Formal               (Id : E) return B;\n    function Is_Descendent_Of_Address            (Id : E) return B;\n    function Is_Discrim_SO_Function              (Id : E) return B;\n+   function Is_Discriminant_Check_Function      (Id : E) return B;\n    function Is_Dispatch_Table_Entity            (Id : E) return B;\n    function Is_Dispatching_Operation            (Id : E) return B;\n    function Is_Eliminated                       (Id : E) return B;\n@@ -6563,6 +6577,7 @@ package Einfo is\n    function Kill_Elaboration_Checks             (Id : E) return B;\n    function Kill_Range_Checks                   (Id : E) return B;\n    function Known_To_Have_Preelab_Init          (Id : E) return B;\n+   function Last_Aggregate_Assignment           (Id : E) return N;\n    function Last_Assignment                     (Id : E) return N;\n    function Last_Entity                         (Id : E) return E;\n    function Limited_View                        (Id : E) return E;\n@@ -7107,6 +7122,7 @@ package Einfo is\n    procedure Set_Is_Controlling_Formal           (Id : E; V : B := True);\n    procedure Set_Is_Descendent_Of_Address        (Id : E; V : B := True);\n    procedure Set_Is_Discrim_SO_Function          (Id : E; V : B := True);\n+   procedure Set_Is_Discriminant_Check_Function  (Id : E; V : B := True);\n    procedure Set_Is_Dispatch_Table_Entity        (Id : E; V : B := True);\n    procedure Set_Is_Dispatching_Operation        (Id : E; V : B := True);\n    procedure Set_Is_Eliminated                   (Id : E; V : B := True);\n@@ -7187,6 +7203,7 @@ package Einfo is\n    procedure Set_Kill_Elaboration_Checks         (Id : E; V : B := True);\n    procedure Set_Kill_Range_Checks               (Id : E; V : B := True);\n    procedure Set_Known_To_Have_Preelab_Init      (Id : E; V : B := True);\n+   procedure Set_Last_Aggregate_Assignment       (Id : E; V : N);\n    procedure Set_Last_Assignment                 (Id : E; V : N);\n    procedure Set_Last_Entity                     (Id : E; V : E);\n    procedure Set_Limited_View                    (Id : E; V : E);\n@@ -7853,6 +7870,7 @@ package Einfo is\n    pragma Inline (Is_Discrete_Or_Fixed_Point_Type);\n    pragma Inline (Is_Discrete_Type);\n    pragma Inline (Is_Discrim_SO_Function);\n+   pragma Inline (Is_Discriminant_Check_Function);\n    pragma Inline (Is_Dispatch_Table_Entity);\n    pragma Inline (Is_Dispatching_Operation);\n    pragma Inline (Is_Elementary_Type);\n@@ -7959,6 +7977,7 @@ package Einfo is\n    pragma Inline (Kill_Elaboration_Checks);\n    pragma Inline (Kill_Range_Checks);\n    pragma Inline (Known_To_Have_Preelab_Init);\n+   pragma Inline (Last_Aggregate_Assignment);\n    pragma Inline (Last_Assignment);\n    pragma Inline (Last_Entity);\n    pragma Inline (Limited_View);\n@@ -8306,6 +8325,7 @@ package Einfo is\n    pragma Inline (Set_Is_Controlling_Formal);\n    pragma Inline (Set_Is_Descendent_Of_Address);\n    pragma Inline (Set_Is_Discrim_SO_Function);\n+   pragma Inline (Set_Is_Discriminant_Check_Function);\n    pragma Inline (Set_Is_Dispatch_Table_Entity);\n    pragma Inline (Set_Is_Dispatching_Operation);\n    pragma Inline (Set_Is_Eliminated);\n@@ -8386,6 +8406,7 @@ package Einfo is\n    pragma Inline (Set_Kill_Elaboration_Checks);\n    pragma Inline (Set_Kill_Range_Checks);\n    pragma Inline (Set_Known_To_Have_Preelab_Init);\n+   pragma Inline (Set_Last_Aggregate_Assignment);\n    pragma Inline (Set_Last_Assignment);\n    pragma Inline (Set_Last_Entity);\n    pragma Inline (Set_Limited_View);"}, {"sha": "ec5de9e00d522d8441c1a4bfc05e8d98fe91ebb3", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ef0ff683ddbb3dceb0888e2ba294ddda55da53/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ef0ff683ddbb3dceb0888e2ba294ddda55da53/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=e2ef0ff683ddbb3dceb0888e2ba294ddda55da53", "patch": "@@ -1070,6 +1070,7 @@ package body Exp_Ch3 is\n          Func_Id :=\n            Make_Defining_Identifier (Loc,\n              Chars => New_External_Name (Chars (Rec_Id), 'D', Sequence));\n+         Set_Is_Discriminant_Check_Function (Func_Id);\n \n          Spec_Node := New_Node (N_Function_Specification, Loc);\n          Set_Defining_Unit_Name (Spec_Node, Func_Id);"}, {"sha": "66376c94f76a093d5cfe839237254563b9b87d4a", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ef0ff683ddbb3dceb0888e2ba294ddda55da53/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ef0ff683ddbb3dceb0888e2ba294ddda55da53/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=e2ef0ff683ddbb3dceb0888e2ba294ddda55da53", "patch": "@@ -4439,20 +4439,28 @@ package body Exp_Ch7 is\n \n          function Is_Subprogram_Call (N : Node_Id) return Traverse_Result is\n          begin\n-            --  Aggregates are usually rewritten into component by component\n-            --  assignments and replaced by a reference to a temporary in the\n-            --  original tree. Peek in the aggregate to detect function calls.\n+            --  Complex constructs are factored out by the expander and their\n+            --  occurrences are replaced with references to temporaries. Due to\n+            --  this expansion activity, inspect the original tree to detect\n+            --  subprogram calls.\n \n-            if Nkind (N) = N_Identifier\n-              and then Nkind_In (Original_Node (N), N_Aggregate,\n-                                                    N_Extension_Aggregate)\n-            then\n+            if Nkind (N) = N_Identifier and then Original_Node (N) /= N then\n                Detect_Subprogram_Call (Original_Node (N));\n-               return OK;\n \n-            --  Detect a call to a function that returns on the secondary stack\n+               --  The original construct contains a subprogram call, there is\n+               --  no point in continuing the tree traversal.\n+\n+               if Must_Hook then\n+                  return Abandon;\n+               else\n+                  return OK;\n+               end if;\n+\n+            --  The original construct contains a subprogram call, there is no\n+            --  point in continuing the tree traversal.\n \n             elsif Nkind (N) = N_Object_Declaration\n+              and then Present (Expression (N))\n               and then Nkind (Original_Node (Expression (N))) = N_Function_Call\n             then\n                Must_Hook := True;"}, {"sha": "be9e3e8eb6e38f074c4601241e3ff8ba2a011815", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ef0ff683ddbb3dceb0888e2ba294ddda55da53/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ef0ff683ddbb3dceb0888e2ba294ddda55da53/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=e2ef0ff683ddbb3dceb0888e2ba294ddda55da53", "patch": "@@ -15772,8 +15772,12 @@ package body Sem_Ch3 is\n            and then No (Expression (P))\n          then\n             null;\n+\n+         --  Here we freeze the base type of object type to catch premature use\n+         --  of discriminated private type without a full view.\n+\n          else\n-            Insert_Actions (Obj_Def, Freeze_Entity (T, P));\n+            Insert_Actions (Obj_Def, Freeze_Entity (Base_Type (T), P));\n          end if;\n \n       --  Ada 2005 AI-406: the object definition in an object declaration\n@@ -18675,7 +18679,7 @@ package body Sem_Ch3 is\n          end;\n       end if;\n \n-      --  Ada 2005 AI 161: Check preelaboratable initialization consistency\n+      --  Ada 2005 AI 161: Check preelaborable initialization consistency\n \n       if Known_To_Have_Preelab_Init (Priv_T) then\n \n@@ -18737,10 +18741,16 @@ package body Sem_Ch3 is\n          Set_Has_Inheritable_Invariants (Full_T);\n       end if;\n \n-      --  Propagate predicates to full type\n+      --  Propagate predicates to full type, and predicate function if already\n+      --  defined. It is not clear that this can actually happen? the partial\n+      --  view cannot be frozen yet, and the predicate function has not been\n+      --  built. Still it is a cheap check and seems safer to make it.\n \n       if Has_Predicates (Priv_T) then\n-         Set_Predicate_Function (Priv_T, Predicate_Function (Full_T));\n+         if Present (Predicate_Function (Priv_T)) then\n+            Set_Predicate_Function (Full_T, Predicate_Function (Priv_T));\n+         end if;\n+\n          Set_Has_Predicates (Full_T);\n       end if;\n    end Process_Full_View;"}, {"sha": "c5c749a8a654d4bb05e42c4f9e239c8e21641a8a", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ef0ff683ddbb3dceb0888e2ba294ddda55da53/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ef0ff683ddbb3dceb0888e2ba294ddda55da53/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=e2ef0ff683ddbb3dceb0888e2ba294ddda55da53", "patch": "@@ -12603,13 +12603,20 @@ package body Sem_Prag is\n                Freeze_Before (N, Entity (Name (Call)));\n             end if;\n \n-            Rewrite (N, Make_Implicit_If_Statement (N,\n-              Condition => Cond,\n-                 Then_Statements => New_List (\n-                   Make_Block_Statement (Loc,\n-                     Handled_Statement_Sequence =>\n-                       Make_Handled_Sequence_Of_Statements (Loc,\n-                         Statements => New_List (Relocate_Node (Call)))))));\n+            --  Ignore pragma Debug in GNATprove mode\n+\n+            if GNATprove_Mode then\n+               Rewrite (N, Make_Null_Statement (Loc));\n+            else\n+               Rewrite (N, Make_Implicit_If_Statement (N,\n+                 Condition => Cond,\n+                    Then_Statements => New_List (\n+                      Make_Block_Statement (Loc,\n+                        Handled_Statement_Sequence =>\n+                          Make_Handled_Sequence_Of_Statements (Loc,\n+                            Statements => New_List (Relocate_Node (Call)))))));\n+            end if;\n+\n             Analyze (N);\n          end Debug;\n "}]}