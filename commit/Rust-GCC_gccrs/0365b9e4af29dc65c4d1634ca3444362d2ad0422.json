{"sha": "0365b9e4af29dc65c4d1634ca3444362d2ad0422", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM2NWI5ZTRhZjI5ZGM2NWM0ZDE2MzRjYTM0NDQzNjJkMmFkMDQyMg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-10-27T08:51:56Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-10-27T08:51:56Z"}, "message": "Fix fnspec of math builtins\n\n\t* builtin-attrs.def (STRERRNOC): New macro.\n\t(STRERRNOP): New macro.\n\t(ATTR_ERRNOCONST_NOTHROW_LEAF_LIST): New attr list.\n\t(ATTR_ERRNOPURE_NOTHROW_LEAF_LIST): New attr list.\n\t* builtins.def (ATTR_MATHFN_ERRNO): Use\n\tATTR_ERRNOCONST_NOTHROW_LEAF_LIST.\n\t(ATTR_MATHFN_FPROUNDING_ERRNO): Use ATTR_ERRNOCONST_NOTHROW_LEAF_LIST\n\tor ATTR_ERRNOPURE_NOTHROW_LEAF_LIST.", "tree": {"sha": "7ad21a03f9475aa26f7cf0e9e816a34afcfb887b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ad21a03f9475aa26f7cf0e9e816a34afcfb887b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0365b9e4af29dc65c4d1634ca3444362d2ad0422", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0365b9e4af29dc65c4d1634ca3444362d2ad0422", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0365b9e4af29dc65c4d1634ca3444362d2ad0422", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0365b9e4af29dc65c4d1634ca3444362d2ad0422/comments", "author": null, "committer": null, "parents": [{"sha": "e94de06fd6077438539b2d7c18eb8fcb113bd9b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e94de06fd6077438539b2d7c18eb8fcb113bd9b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e94de06fd6077438539b2d7c18eb8fcb113bd9b6"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "087572412f4df3aba6a6f0b82c825a231576bb86", "filename": "gcc/builtin-attrs.def", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0365b9e4af29dc65c4d1634ca3444362d2ad0422/gcc%2Fbuiltin-attrs.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0365b9e4af29dc65c4d1634ca3444362d2ad0422/gcc%2Fbuiltin-attrs.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltin-attrs.def?ref=0365b9e4af29dc65c4d1634ca3444362d2ad0422", "patch": "@@ -67,6 +67,8 @@ DEF_ATTR_FOR_INT (6)\n   DEF_ATTR_TREE_LIST (ATTR_LIST_##ENUM, ATTR_NULL,\t\\\n \t\t      ATTR_##ENUM, ATTR_NULL)\n DEF_ATTR_FOR_STRING (STR1, \"1 \")\n+DEF_ATTR_FOR_STRING (STRERRNOC, \".C\")\n+DEF_ATTR_FOR_STRING (STRERRNOP, \".P\")\n #undef DEF_ATTR_FOR_STRING\n \n /* Construct a tree for a list of two integers.  */\n@@ -136,6 +138,10 @@ DEF_ATTR_TREE_LIST (ATTR_CONST_NOTHROW_LIST, ATTR_CONST,\t\\\n \t\t\tATTR_NULL, ATTR_NOTHROW_LIST)\n DEF_ATTR_TREE_LIST (ATTR_CONST_NOTHROW_LEAF_LIST, ATTR_CONST,\t\\\n \t\t\tATTR_NULL, ATTR_NOTHROW_LEAF_LIST)\n+DEF_ATTR_TREE_LIST (ATTR_ERRNOCONST_NOTHROW_LEAF_LIST, ATTR_FNSPEC,\\\n+\t\t\tATTR_LIST_STRERRNOC, ATTR_NOTHROW_LEAF_LIST)\n+DEF_ATTR_TREE_LIST (ATTR_ERRNOPURE_NOTHROW_LEAF_LIST, ATTR_FNSPEC,\\\n+\t\t\tATTR_LIST_STRERRNOP, ATTR_NOTHROW_LEAF_LIST)\n DEF_ATTR_TREE_LIST (ATTR_PURE_NOTHROW_LIST, ATTR_PURE,\t\t\\\n \t\t\tATTR_NULL, ATTR_NOTHROW_LIST)\n DEF_ATTR_TREE_LIST (ATTR_PURE_NOTHROW_LEAF_LIST, ATTR_PURE,\t\\"}, {"sha": "68f2da6cda41e6af34325f6ba27e4d50b056280f", "filename": "gcc/builtins.def", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0365b9e4af29dc65c4d1634ca3444362d2ad0422/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0365b9e4af29dc65c4d1634ca3444362d2ad0422/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=0365b9e4af29dc65c4d1634ca3444362d2ad0422", "patch": "@@ -254,7 +254,7 @@ along with GCC; see the file COPYING3.  If not see\n    `errno'.  If !flag_errno_math they are instead \"const\".  */\n #undef ATTR_MATHFN_ERRNO\n #define ATTR_MATHFN_ERRNO (flag_errno_math ? \\\n-\tATTR_NOTHROW_LEAF_LIST : ATTR_CONST_NOTHROW_LEAF_LIST)\n+\tATTR_ERRNOCONST_NOTHROW_LEAF_LIST : ATTR_CONST_NOTHROW_LEAF_LIST)\n \n /* Define an attribute list for math functions that are normally\n    \"const\" but if flag_rounding_math is set they are instead \"pure\".\n@@ -271,7 +271,8 @@ along with GCC; see the file COPYING3.  If not see\n    \"const\" depending on whether we care about FP rounding.  */\n #undef ATTR_MATHFN_FPROUNDING_ERRNO\n #define ATTR_MATHFN_FPROUNDING_ERRNO (flag_errno_math ? \\\n-\tATTR_NOTHROW_LEAF_LIST : ATTR_MATHFN_FPROUNDING)\n+\t(flag_rounding_math ? ATTR_ERRNOPURE_NOTHROW_LEAF_LIST \\\n+\t : ATTR_ERRNOCONST_NOTHROW_LEAF_LIST) : ATTR_MATHFN_FPROUNDING)\n \n /* Define an attribute list for math functions that need to mind FP\n    rounding, but because they store into memory they are never \"const\""}]}