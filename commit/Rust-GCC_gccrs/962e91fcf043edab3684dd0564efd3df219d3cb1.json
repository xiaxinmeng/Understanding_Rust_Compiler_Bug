{"sha": "962e91fcf043edab3684dd0564efd3df219d3cb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTYyZTkxZmNmMDQzZWRhYjM2ODRkZDA1NjRlZmQzZGYyMTlkM2NiMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2018-03-02T09:45:51Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-03-02T09:45:51Z"}, "message": "Use loop->safelen rather than loop->force_vectorize\n\n...since the latter doesn't guarantee independence by itself.\n\n2018-03-02  Richard Sandiford  <richard.sandiford@linaro.org>\n\ngcc/\n\t* tree-vect-data-refs.c (vect_analyze_data_ref_dependence)\n\t(vect_analyze_data_ref_access): Use loop->safe_len rather than\n\tloop->force_vectorize to check whether there is no alias.\n\ngcc/testsuite/\n\t* gcc.dg/vect/vect-alias-check-13.c: New test.\n\nFrom-SVN: r258130", "tree": {"sha": "97607f1a40e2c04231fbc034f22260989fd38c8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97607f1a40e2c04231fbc034f22260989fd38c8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/962e91fcf043edab3684dd0564efd3df219d3cb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/962e91fcf043edab3684dd0564efd3df219d3cb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/962e91fcf043edab3684dd0564efd3df219d3cb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/962e91fcf043edab3684dd0564efd3df219d3cb1/comments", "author": null, "committer": null, "parents": [{"sha": "ec2d71214f90e21675a5abbe5b532273f7b11ded", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec2d71214f90e21675a5abbe5b532273f7b11ded", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec2d71214f90e21675a5abbe5b532273f7b11ded"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "affd19a94bcda1e0b00a1d7319fa1b29c3c8e16b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/962e91fcf043edab3684dd0564efd3df219d3cb1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/962e91fcf043edab3684dd0564efd3df219d3cb1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=962e91fcf043edab3684dd0564efd3df219d3cb1", "patch": "@@ -1,3 +1,9 @@\n+2018-03-02  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\t* tree-vect-data-refs.c (vect_analyze_data_ref_dependence)\n+\t(vect_analyze_data_ref_access): Use loop->safe_len rather than\n+\tloop->force_vectorize to check whether there is no alias.\n+\n 2018-03-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/84614"}, {"sha": "e15927ca90e23cd44d784c9b0bdf9b71f6b695b0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/962e91fcf043edab3684dd0564efd3df219d3cb1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/962e91fcf043edab3684dd0564efd3df219d3cb1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=962e91fcf043edab3684dd0564efd3df219d3cb1", "patch": "@@ -1,3 +1,7 @@\n+2018-03-02  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\t* gcc.dg/vect/vect-alias-check-13.c: New test.\n+\n 2018-03-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/84614"}, {"sha": "60bc473072470acc94580b58ed1ef5db92b1b3aa", "filename": "gcc/testsuite/gcc.dg/vect/vect-alias-check-13.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/962e91fcf043edab3684dd0564efd3df219d3cb1/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-alias-check-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/962e91fcf043edab3684dd0564efd3df219d3cb1/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-alias-check-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-alias-check-13.c?ref=962e91fcf043edab3684dd0564efd3df219d3cb1", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_int } */\n+\n+void\n+f1 (int *x, long step1, int n)\n+{\n+  for (int i = 0; i < n; ++i)\n+    x[i * step1] += 1;\n+}\n+\n+void\n+f2 (int *x, long step2, int n)\n+{\n+#pragma GCC ivdep\n+  for (int i = 0; i < n; ++i)\n+    x[i * step2] += 2;\n+}\n+\n+/* { dg-final { scan-tree-dump {need run-time check that [^\\n]*step1[^\\n]* is nonzero} \"vect\" } } */\n+/* { dg-final { scan-tree-dump-not {need run-time check that [^\\n]*step2[^\\n]* is nonzero} \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times {LOOP VECTORIZED} 2 \"vect\" } } */"}, {"sha": "c0094989c7ba7e53353dc94f6773c4d3d1da38c0", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/962e91fcf043edab3684dd0564efd3df219d3cb1/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/962e91fcf043edab3684dd0564efd3df219d3cb1/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=962e91fcf043edab3684dd0564efd3df219d3cb1", "patch": "@@ -466,7 +466,7 @@ vect_analyze_data_ref_dependence (struct data_dependence_relation *ddr,\n \t      return true;\n \t    }\n \n-\t  if (!loop->force_vectorize)\n+\t  if (loop->safelen < 2)\n \t    {\n \t      tree indicator = dr_zero_step_indicator (dra);\n \t      if (TREE_CODE (indicator) != INTEGER_CST)\n@@ -2720,7 +2720,7 @@ vect_analyze_data_ref_access (struct data_reference *dr)\n       /* Allow references with zero step for outer loops marked\n \t with pragma omp simd only - it guarantees absence of\n \t loop-carried dependencies between inner loop iterations.  */\n-      if (!loop->force_vectorize)\n+      if (loop->safelen < 2)\n \t{\n \t  if (dump_enabled_p ())\n \t    dump_printf_loc (MSG_NOTE, vect_location,"}]}