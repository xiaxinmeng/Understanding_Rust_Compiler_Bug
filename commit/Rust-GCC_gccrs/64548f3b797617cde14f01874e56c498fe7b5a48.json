{"sha": "64548f3b797617cde14f01874e56c498fe7b5a48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ1NDhmM2I3OTc2MTdjZGUxNGYwMTg3NGU1NmM0OThmZTdiNWE0OA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-11-23T00:31:54Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-11-23T00:31:54Z"}, "message": "Makefile.am (AM_CXXFLAGS): Remove -Wno-variadic-macros.\n\n\t* tsan/Makefile.am (AM_CXXFLAGS): Remove -Wno-variadic-macros.\n\t* Makefile.am (SUBDIRS): Guard tsan addition with TSAN_SUPPORTED\n\tautomake conditional instead of !MULTISUBDIR32.\n\t* configure.tgt: Set TSAN_SUPPORTED=yes for x86_64/i686-linux\n\tfor 64-bit multilib.\n\t* configure.ac: Check for void * size, source in configure.tgt,\n\tdefine TSAN_SUPPORTED conditional instead of MULTILIBDIR32.\n\t* configure: Regenerated.\n\t* Makefile.in: Regenerated.\n\t* tsan/Makefile.in: Regenerated.\n\nFrom-SVN: r193741", "tree": {"sha": "339414cc4c7cfeb18efd639d3d7dc3f403afa560", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/339414cc4c7cfeb18efd639d3d7dc3f403afa560"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64548f3b797617cde14f01874e56c498fe7b5a48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64548f3b797617cde14f01874e56c498fe7b5a48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64548f3b797617cde14f01874e56c498fe7b5a48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64548f3b797617cde14f01874e56c498fe7b5a48/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8e5038ffa42bc77bce5fa30eb11e5c94fdb0fc74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e5038ffa42bc77bce5fa30eb11e5c94fdb0fc74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e5038ffa42bc77bce5fa30eb11e5c94fdb0fc74"}], "stats": {"total": 285, "additions": 263, "deletions": 22}, "files": [{"sha": "ce59f906aafef9473136d58796db169949fc6e8f", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64548f3b797617cde14f01874e56c498fe7b5a48/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64548f3b797617cde14f01874e56c498fe7b5a48/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=64548f3b797617cde14f01874e56c498fe7b5a48", "patch": "@@ -1,3 +1,16 @@\n+2012-11-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* tsan/Makefile.am (AM_CXXFLAGS): Remove -Wno-variadic-macros.\n+\t* Makefile.am (SUBDIRS): Guard tsan addition with TSAN_SUPPORTED\n+\tautomake conditional instead of !MULTISUBDIR32.\n+\t* configure.tgt: Set TSAN_SUPPORTED=yes for x86_64/i686-linux\n+\tfor 64-bit multilib.\n+\t* configure.ac: Check for void * size, source in configure.tgt,\n+\tdefine TSAN_SUPPORTED conditional instead of MULTILIBDIR32.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\t* tsan/Makefile.in: Regenerated.\n+\n 2012-11-22  Wei Mi  <wmi@google.com>\n \n \t* tsan: New directory. Import tsan runtime from llvm."}, {"sha": "64d3d2eab9a3bf1ee968f76cae7c5a945d60fb59", "filename": "libsanitizer/Makefile.am", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64548f3b797617cde14f01874e56c498fe7b5a48/libsanitizer%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64548f3b797617cde14f01874e56c498fe7b5a48/libsanitizer%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FMakefile.am?ref=64548f3b797617cde14f01874e56c498fe7b5a48", "patch": "@@ -1,9 +1,9 @@\n ACLOCAL_AMFLAGS = -I .. -I ../config\n \n-if MULTISUBDIR32 \n-SUBDIRS = interception sanitizer_common asan \n-else\n+if TSAN_SUPPORTED\n SUBDIRS = interception sanitizer_common asan tsan \n+else\n+SUBDIRS = interception sanitizer_common asan \n endif\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS"}, {"sha": "21c27113c38d889caed3a5b687df670e03b9a361", "filename": "libsanitizer/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64548f3b797617cde14f01874e56c498fe7b5a48/libsanitizer%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64548f3b797617cde14f01874e56c498fe7b5a48/libsanitizer%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FMakefile.in?ref=64548f3b797617cde14f01874e56c498fe7b5a48", "patch": "@@ -244,8 +244,8 @@ top_build_prefix = @top_build_prefix@\n top_builddir = @top_builddir@\n top_srcdir = @top_srcdir@\n ACLOCAL_AMFLAGS = -I .. -I ../config\n-@MULTISUBDIR32_FALSE@SUBDIRS = interception sanitizer_common asan tsan \n-@MULTISUBDIR32_TRUE@SUBDIRS = interception sanitizer_common asan \n+@TSAN_SUPPORTED_FALSE@SUBDIRS = interception sanitizer_common asan \n+@TSAN_SUPPORTED_TRUE@SUBDIRS = interception sanitizer_common asan tsan \n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and"}, {"sha": "198a94d32724b19148c41fbdae69bc0434adc026", "filename": "libsanitizer/configure", "status": "modified", "additions": 229, "deletions": 12, "changes": 241, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64548f3b797617cde14f01874e56c498fe7b5a48/libsanitizer%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64548f3b797617cde14f01874e56c498fe7b5a48/libsanitizer%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure?ref=64548f3b797617cde14f01874e56c498fe7b5a48", "patch": "@@ -604,8 +604,8 @@ ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n-MULTISUBDIR32_FALSE\n-MULTISUBDIR32_TRUE\n+TSAN_SUPPORTED_FALSE\n+TSAN_SUPPORTED_TRUE\n enable_static\n enable_shared\n CXXCPP\n@@ -1878,6 +1878,184 @@ fi\n   return $ac_retval\n \n } # ac_fn_cxx_try_link\n+\n+# ac_fn_c_compute_int LINENO EXPR VAR INCLUDES\n+# --------------------------------------------\n+# Tries to find the compile-time value of EXPR in a program that includes\n+# INCLUDES, setting VAR accordingly. Returns whether the value could be\n+# computed\n+ac_fn_c_compute_int ()\n+{\n+  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n+  if test \"$cross_compiling\" = yes; then\n+    # Depending upon the size, compute the lo and hi bounds.\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+$4\n+int\n+main ()\n+{\n+static int test_array [1 - 2 * !(($2) >= 0)];\n+test_array [0] = 0\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_lo=0 ac_mid=0\n+  while :; do\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+$4\n+int\n+main ()\n+{\n+static int test_array [1 - 2 * !(($2) <= $ac_mid)];\n+test_array [0] = 0\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_hi=$ac_mid; break\n+else\n+  as_fn_arith $ac_mid + 1 && ac_lo=$as_val\n+\t\t\tif test $ac_lo -le $ac_mid; then\n+\t\t\t  ac_lo= ac_hi=\n+\t\t\t  break\n+\t\t\tfi\n+\t\t\tas_fn_arith 2 '*' $ac_mid + 1 && ac_mid=$as_val\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+  done\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+$4\n+int\n+main ()\n+{\n+static int test_array [1 - 2 * !(($2) < 0)];\n+test_array [0] = 0\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_hi=-1 ac_mid=-1\n+  while :; do\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+$4\n+int\n+main ()\n+{\n+static int test_array [1 - 2 * !(($2) >= $ac_mid)];\n+test_array [0] = 0\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_lo=$ac_mid; break\n+else\n+  as_fn_arith '(' $ac_mid ')' - 1 && ac_hi=$as_val\n+\t\t\tif test $ac_mid -le $ac_hi; then\n+\t\t\t  ac_lo= ac_hi=\n+\t\t\t  break\n+\t\t\tfi\n+\t\t\tas_fn_arith 2 '*' $ac_mid && ac_mid=$as_val\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+  done\n+else\n+  ac_lo= ac_hi=\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+# Binary search between lo and hi bounds.\n+while test \"x$ac_lo\" != \"x$ac_hi\"; do\n+  as_fn_arith '(' $ac_hi - $ac_lo ')' / 2 + $ac_lo && ac_mid=$as_val\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+$4\n+int\n+main ()\n+{\n+static int test_array [1 - 2 * !(($2) <= $ac_mid)];\n+test_array [0] = 0\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_hi=$ac_mid\n+else\n+  as_fn_arith '(' $ac_mid ')' + 1 && ac_lo=$as_val\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+done\n+case $ac_lo in #((\n+?*) eval \"$3=\\$ac_lo\"; ac_retval=0 ;;\n+'') ac_retval=1 ;;\n+esac\n+  else\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+$4\n+static long int longval () { return $2; }\n+static unsigned long int ulongval () { return $2; }\n+#include <stdio.h>\n+#include <stdlib.h>\n+int\n+main ()\n+{\n+\n+  FILE *f = fopen (\"conftest.val\", \"w\");\n+  if (! f)\n+    return 1;\n+  if (($2) < 0)\n+    {\n+      long int i = longval ();\n+      if (i != ($2))\n+\treturn 1;\n+      fprintf (f, \"%ld\", i);\n+    }\n+  else\n+    {\n+      unsigned long int i = ulongval ();\n+      if (i != ($2))\n+\treturn 1;\n+      fprintf (f, \"%lu\", i);\n+    }\n+  /* Do not output a trailing newline, as this causes \\r\\n confusion\n+     on some platforms.  */\n+  return ferror (f) || fclose (f) != 0;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_run \"$LINENO\"; then :\n+  echo >>conftest.val; read $3 <conftest.val; ac_retval=0\n+else\n+  ac_retval=1\n+fi\n+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n+  conftest.$ac_objext conftest.beam conftest.$ac_ext\n+rm -f conftest.val\n+\n+  fi\n+  eval $as_lineno_stack; test \"x$as_lineno_stack\" = x && { as_lineno=; unset as_lineno;}\n+  return $ac_retval\n+\n+} # ac_fn_c_compute_int\n cat >config.log <<_ACEOF\n This file contains any messages produced by compilers while\n running configure, to aid debugging if configure makes a mistake.\n@@ -10900,7 +11078,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10903 \"configure\"\n+#line 11081 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11006,7 +11184,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11009 \"configure\"\n+#line 11187 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14263,17 +14441,56 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n+# The cast to long int works around a bug in the HP C Compiler\n+# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects\n+# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.\n+# This bug is HP SR number 8606223364.\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking size of void *\" >&5\n+$as_echo_n \"checking size of void *... \" >&6; }\n+if test \"${ac_cv_sizeof_void_p+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if ac_fn_c_compute_int \"$LINENO\" \"(long int) (sizeof (void *))\" \"ac_cv_sizeof_void_p\"        \"$ac_includes_default\"; then :\n+\n+else\n+  if test \"$ac_cv_type_void_p\" = yes; then\n+     { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n+$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n+{ as_fn_set_status 77\n+as_fn_error \"cannot compute sizeof (void *)\n+See \\`config.log' for more details.\" \"$LINENO\" 5; }; }\n+   else\n+     ac_cv_sizeof_void_p=0\n+   fi\n+fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_void_p\" >&5\n+$as_echo \"$ac_cv_sizeof_void_p\" >&6; }\n+\n+\n+\n+cat >>confdefs.h <<_ACEOF\n+#define SIZEOF_VOID_P $ac_cv_sizeof_void_p\n+_ACEOF\n+\n+\n+\n if test \"${multilib}\" = \"yes\"; then\n   multilib_arg=\"--enable-multilib\"\n else\n   multilib_arg=\n fi\n- if test \"x$with_multisubdir\" = \"x32\"; then\n-  MULTISUBDIR32_TRUE=\n-  MULTISUBDIR32_FALSE='#'\n+\n+# Get target configury.\n+unset TSAN_SUPPORTED\n+. ${srcdir}/configure.tgt\n+ if test \"x$TSAN_SUPPORTED\" = \"xyes\"; then\n+  TSAN_SUPPORTED_TRUE=\n+  TSAN_SUPPORTED_FALSE='#'\n else\n-  MULTISUBDIR32_TRUE='#'\n-  MULTISUBDIR32_FALSE=\n+  TSAN_SUPPORTED_TRUE='#'\n+  TSAN_SUPPORTED_FALSE=\n fi\n \n \n@@ -14283,7 +14500,7 @@ ac_config_files=\"$ac_config_files Makefile\"\n ac_config_files=\"$ac_config_files interception/Makefile sanitizer_common/Makefile asan/Makefile\"\n \n \n-if test \"x$with_multisubdir\" != \"x32\"; then\n+if test \"x$TSAN_SUPPORTED\" = \"xyes\"; then\n   ac_config_files=\"$ac_config_files tsan/Makefile\"\n \n fi\n@@ -14449,8 +14666,8 @@ if test -z \"${am__fastdepCCAS_TRUE}\" && test -z \"${am__fastdepCCAS_FALSE}\"; then\n   as_fn_error \"conditional \\\"am__fastdepCCAS\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n-if test -z \"${MULTISUBDIR32_TRUE}\" && test -z \"${MULTISUBDIR32_FALSE}\"; then\n-  as_fn_error \"conditional \\\"MULTISUBDIR32\\\" was never defined.\n+if test -z \"${TSAN_SUPPORTED_TRUE}\" && test -z \"${TSAN_SUPPORTED_FALSE}\"; then\n+  as_fn_error \"conditional \\\"TSAN_SUPPORTED\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n "}, {"sha": "45183db609fe64ef7204f513a362f9c7c14d1e3b", "filename": "libsanitizer/configure.ac", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64548f3b797617cde14f01874e56c498fe7b5a48/libsanitizer%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64548f3b797617cde14f01874e56c498fe7b5a48/libsanitizer%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure.ac?ref=64548f3b797617cde14f01874e56c498fe7b5a48", "patch": "@@ -67,12 +67,18 @@ AM_PROG_LIBTOOL\n AC_SUBST(enable_shared)\n AC_SUBST(enable_static)\n \n+AC_CHECK_SIZEOF([void *])\n+\n if test \"${multilib}\" = \"yes\"; then\n   multilib_arg=\"--enable-multilib\"\n else\n   multilib_arg=\n fi\n-AM_CONDITIONAL(MULTISUBDIR32, [test \"x$with_multisubdir\" = \"x32\"])\n+\n+# Get target configury.\n+unset TSAN_SUPPORTED\n+. ${srcdir}/configure.tgt\n+AM_CONDITIONAL(TSAN_SUPPORTED, [test \"x$TSAN_SUPPORTED\" = \"xyes\"])\n \n AC_CONFIG_FILES([Makefile])\n \n@@ -89,7 +95,7 @@ _EOF\n    AS_UNSET([ml_norecursion])\n ])\n \n-if test \"x$with_multisubdir\" != \"x32\"; then\n+if test \"x$TSAN_SUPPORTED\" = \"xyes\"; then\n   AC_CONFIG_FILES(AC_FOREACH([DIR], [tsan], [DIR/Makefile ]), \n     [cat > vpsed$$ << \\_EOF\n s!`test -f '$<' || echo '$(srcdir)/'`!!"}, {"sha": "1506a20dab151e7b2fc5c7d84d66009793c7a5f1", "filename": "libsanitizer/configure.tgt", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64548f3b797617cde14f01874e56c498fe7b5a48/libsanitizer%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64548f3b797617cde14f01874e56c498fe7b5a48/libsanitizer%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure.tgt?ref=64548f3b797617cde14f01874e56c498fe7b5a48", "patch": "@@ -20,7 +20,12 @@\n \n # Filter out unsupported systems.\n case \"${target}\" in\n-  x86_64-*-linux* | i?86-*-linux* | sparc*-*-linux*)\n+  x86_64-*-linux* | i?86-*-linux*)\n+\tif test x$ac_cv_sizeof_void_p = x8; then\n+\t\tTSAN_SUPPORTED=yes\n+\tfi\n+\t;;\n+  sparc*-*-linux*)\n \t;;\n   *)\n \tUNSUPPORTED=1"}, {"sha": "a307502c97ae0f39a4d468b389bb866303ba9f2e", "filename": "libsanitizer/tsan/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64548f3b797617cde14f01874e56c498fe7b5a48/libsanitizer%2Ftsan%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64548f3b797617cde14f01874e56c498fe7b5a48/libsanitizer%2Ftsan%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Ftsan%2FMakefile.am?ref=64548f3b797617cde14f01874e56c498fe7b5a48", "patch": "@@ -1,7 +1,7 @@\n AM_CPPFLAGS = -I $(top_srcdir) -I $(top_srcdir)/include\n \n DEFS = -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS \n-AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic -Wno-long-long  -fPIC -fno-builtin -fno-exceptions -fomit-frame-pointer -funwind-tables -fvisibility=hidden -Wno-variadic-macros -Wno-c99-extensions \n+AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic -Wno-long-long  -fPIC -fno-builtin -fno-exceptions -fomit-frame-pointer -funwind-tables -fvisibility=hidden -Wno-variadic-macros\n ACLOCAL_AMFLAGS = -I m4\n \n toolexeclib_LTLIBRARIES = libtsan.la"}, {"sha": "a893bccd5ef5651aa8ee0b1b2407eb9cc95ba142", "filename": "libsanitizer/tsan/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64548f3b797617cde14f01874e56c498fe7b5a48/libsanitizer%2Ftsan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64548f3b797617cde14f01874e56c498fe7b5a48/libsanitizer%2Ftsan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Ftsan%2FMakefile.in?ref=64548f3b797617cde14f01874e56c498fe7b5a48", "patch": "@@ -238,7 +238,7 @@ top_build_prefix = @top_build_prefix@\n top_builddir = @top_builddir@\n top_srcdir = @top_srcdir@\n AM_CPPFLAGS = -I $(top_srcdir) -I $(top_srcdir)/include\n-AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic -Wno-long-long  -fPIC -fno-builtin -fno-exceptions -fomit-frame-pointer -funwind-tables -fvisibility=hidden -Wno-variadic-macros -Wno-c99-extensions \n+AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic -Wno-long-long  -fPIC -fno-builtin -fno-exceptions -fomit-frame-pointer -funwind-tables -fvisibility=hidden -Wno-variadic-macros\n ACLOCAL_AMFLAGS = -I m4\n toolexeclib_LTLIBRARIES = libtsan.la\n tsan_files = \\"}]}