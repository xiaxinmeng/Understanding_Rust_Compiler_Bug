{"sha": "8ccb81bdb8dabad6dcf8b66d4450af1e47981370", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNjYjgxYmRiOGRhYmFkNmRjZjhiNjZkNDQ1MGFmMWU0Nzk4MTM3MA==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2013-08-20T11:23:30Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2013-08-20T11:23:30Z"}, "message": "error.c (pp_ggc_formatted_text): New.\n\n\t* error.c (pp_ggc_formatted_text): New.\n\t(type_as_string): Use it in lieu of pp_formatted_text.\n\t(type_as_string_translate): Likewise.\n\t(expr_as_string): Likewise.\n\t(decl_as_string): Likewise.\n\t(decl_as_string_translate): Likewise.\n\t(lang_decl_name): Likewise.\n\t(decl_to_string): Likewise.\n\t(expr_to_string): Likewise.\n\t(fndecl_to_string): Likewise.\n\t(parm_to_string): Likewise.\n\t(type_to_string): Likewise.\n\t(args_to_string): Likewise.\n\t(subst_to_string): Likewise.\n\nFrom-SVN: r201873", "tree": {"sha": "9ee645fcb348385f2efcfbfe5c38683a91735464", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ee645fcb348385f2efcfbfe5c38683a91735464"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ccb81bdb8dabad6dcf8b66d4450af1e47981370", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ccb81bdb8dabad6dcf8b66d4450af1e47981370", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ccb81bdb8dabad6dcf8b66d4450af1e47981370", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ccb81bdb8dabad6dcf8b66d4450af1e47981370/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f6f0407c4c52058175ba35f776d7b1aaadd8cb40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6f0407c4c52058175ba35f776d7b1aaadd8cb40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6f0407c4c52058175ba35f776d7b1aaadd8cb40"}], "stats": {"total": 53, "additions": 39, "deletions": 14}, "files": [{"sha": "5f55ca2e3ae40cb6685880395c725ff9875a30fd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ccb81bdb8dabad6dcf8b66d4450af1e47981370/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ccb81bdb8dabad6dcf8b66d4450af1e47981370/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8ccb81bdb8dabad6dcf8b66d4450af1e47981370", "patch": "@@ -1,3 +1,20 @@\n+2013-08-20  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* error.c (pp_ggc_formatted_text): New.\n+\t(type_as_string): Use it in lieu of pp_formatted_text.\n+\t(type_as_string_translate): Likewise.\n+\t(expr_as_string): Likewise.\n+\t(decl_as_string): Likewise.\n+\t(decl_as_string_translate): Likewise.\n+\t(lang_decl_name): Likewise.\n+\t(decl_to_string): Likewise.\n+\t(expr_to_string): Likewise.\n+\t(fndecl_to_string): Likewise.\n+\t(parm_to_string): Likewise.\n+\t(type_to_string): Likewise.\n+\t(args_to_string): Likewise.\n+\t(subst_to_string): Likewise.\n+\n 2013-08-19  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n \n \tPR c/57490"}, {"sha": "1fdc8906153192be5c139ed45b6b8bcd46850747", "filename": "gcc/cp/error.c", "status": "modified", "additions": 22, "deletions": 14, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ccb81bdb8dabad6dcf8b66d4450af1e47981370/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ccb81bdb8dabad6dcf8b66d4450af1e47981370/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=8ccb81bdb8dabad6dcf8b66d4450af1e47981370", "patch": "@@ -2632,6 +2632,14 @@ reinit_cxx_pp (void)\n   cxx_pp->enclosing_scope = current_function_decl;\n }\n \n+/* Same as pp_formatted_text, except the return string is a separate\n+   copy and has a GGC storage duration, e.g. an indefinite lifetime.  */\n+\n+inline const char *\n+pp_ggc_formatted_text (pretty_printer *pp)\n+{\n+  return ggc_strdup (pp_formatted_text (pp));\n+}\n \n /* Exported interface to stringifying types, exprs and decls under TFF_*\n    control.  */\n@@ -2642,15 +2650,15 @@ type_as_string (tree typ, int flags)\n   reinit_cxx_pp ();\n   pp_translate_identifiers (cxx_pp) = false;\n   dump_type (cxx_pp, typ, flags);\n-  return pp_formatted_text (cxx_pp);\n+  return pp_ggc_formatted_text (cxx_pp);\n }\n \n const char *\n type_as_string_translate (tree typ, int flags)\n {\n   reinit_cxx_pp ();\n   dump_type (cxx_pp, typ, flags);\n-  return pp_formatted_text (cxx_pp);\n+  return pp_ggc_formatted_text (cxx_pp);\n }\n \n const char *\n@@ -2659,7 +2667,7 @@ expr_as_string (tree decl, int flags)\n   reinit_cxx_pp ();\n   pp_translate_identifiers (cxx_pp) = false;\n   dump_expr (cxx_pp, decl, flags);\n-  return pp_formatted_text (cxx_pp);\n+  return pp_ggc_formatted_text (cxx_pp);\n }\n \n /* Wrap decl_as_string with options appropriate for dwarf.  */\n@@ -2683,15 +2691,15 @@ decl_as_string (tree decl, int flags)\n   reinit_cxx_pp ();\n   pp_translate_identifiers (cxx_pp) = false;\n   dump_decl (cxx_pp, decl, flags);\n-  return pp_formatted_text (cxx_pp);\n+  return pp_ggc_formatted_text (cxx_pp);\n }\n \n const char *\n decl_as_string_translate (tree decl, int flags)\n {\n   reinit_cxx_pp ();\n   dump_decl (cxx_pp, decl, flags);\n-  return pp_formatted_text (cxx_pp);\n+  return pp_ggc_formatted_text (cxx_pp);\n }\n \n /* Wrap lang_decl_name with options appropriate for dwarf.  */\n@@ -2738,7 +2746,7 @@ lang_decl_name (tree decl, int v, bool translate)\n   else\n     dump_decl (cxx_pp, DECL_NAME (decl), TFF_PLAIN_IDENTIFIER);\n \n-  return pp_formatted_text (cxx_pp);\n+  return pp_ggc_formatted_text (cxx_pp);\n }\n \n /* Return the location of a tree passed to %+ formats.  */\n@@ -2782,15 +2790,15 @@ decl_to_string (tree decl, int verbose)\n \n   reinit_cxx_pp ();\n   dump_decl (cxx_pp, decl, flags);\n-  return pp_formatted_text (cxx_pp);\n+  return pp_ggc_formatted_text (cxx_pp);\n }\n \n static const char *\n expr_to_string (tree decl)\n {\n   reinit_cxx_pp ();\n   dump_expr (cxx_pp, decl, 0);\n-  return pp_formatted_text (cxx_pp);\n+  return pp_ggc_formatted_text (cxx_pp);\n }\n \n static const char *\n@@ -2804,7 +2812,7 @@ fndecl_to_string (tree fndecl, int verbose)\n     flags |= TFF_FUNCTION_DEFAULT_ARGUMENTS;\n   reinit_cxx_pp ();\n   dump_decl (cxx_pp, fndecl, flags);\n-  return pp_formatted_text (cxx_pp);\n+  return pp_ggc_formatted_text (cxx_pp);\n }\n \n \n@@ -2844,7 +2852,7 @@ parm_to_string (int p)\n     pp_string (cxx_pp, \"'this'\");\n   else\n     pp_decimal_int (cxx_pp, p + 1);\n-  return pp_formatted_text (cxx_pp);\n+  return pp_ggc_formatted_text (cxx_pp);\n }\n \n static const char *\n@@ -2887,7 +2895,7 @@ type_to_string (tree typ, int verbose)\n       if (memcmp (p, p+aka_start, len) == 0)\n \tp[len] = '\\0';\n     }\n-  return pp_formatted_text (cxx_pp);\n+  return pp_ggc_formatted_text (cxx_pp);\n }\n \n static const char *\n@@ -2920,7 +2928,7 @@ args_to_string (tree p, int verbose)\n       if (TREE_CHAIN (p))\n \tpp_separate_with_comma (cxx_pp);\n     }\n-  return pp_formatted_text (cxx_pp);\n+  return pp_ggc_formatted_text (cxx_pp);\n }\n \n /* Pretty-print a deduction substitution (from deduction_tsubst_fntype).  P\n@@ -2947,7 +2955,7 @@ subst_to_string (tree p)\n   pp_cxx_whitespace (cxx_pp);\n   dump_template_bindings (cxx_pp, tparms, targs, NULL);\n   pp_cxx_right_bracket (cxx_pp);\n-  return pp_formatted_text (cxx_pp);\n+  return pp_ggc_formatted_text (cxx_pp);\n }\n \n static const char *\n@@ -2956,7 +2964,7 @@ cv_to_string (tree p, int v)\n   reinit_cxx_pp ();\n   cxx_pp->padding = v ? pp_before : pp_none;\n   pp_cxx_cv_qualifier_seq (cxx_pp, p);\n-  return pp_formatted_text (cxx_pp);\n+  return pp_ggc_formatted_text (cxx_pp);\n }\n \n /* Langhook for print_error_function.  */"}]}