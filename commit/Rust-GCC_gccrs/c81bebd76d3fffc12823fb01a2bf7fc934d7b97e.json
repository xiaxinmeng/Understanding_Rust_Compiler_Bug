{"sha": "c81bebd76d3fffc12823fb01a2bf7fc934d7b97e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzgxYmViZDc2ZDNmZmZjMTI4MjNmYjAxYTJiZjdmYzkzNGQ3Yjk3ZQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-04-24T16:54:48Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-04-24T16:54:48Z"}, "message": "Solaris, Linux changes\n\nFrom-SVN: r11874", "tree": {"sha": "7b73c7a7b56ba247b72a79c0826bfb00cbcf07a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b73c7a7b56ba247b72a79c0826bfb00cbcf07a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/comments", "author": null, "committer": null, "parents": [{"sha": "9cf318b53e858a0364fd953b6336065f09ac1ac5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cf318b53e858a0364fd953b6336065f09ac1ac5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cf318b53e858a0364fd953b6336065f09ac1ac5"}], "stats": {"total": 1653, "additions": 1333, "deletions": 320}, "files": [{"sha": "872a9e66565dec27c5756e27f30672b25854f372", "filename": "gcc/config/rs6000/eabi-ci.asm", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Feabi-ci.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Feabi-ci.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi-ci.asm?ref=c81bebd76d3fffc12823fb01a2bf7fc934d7b97e", "patch": "@@ -39,7 +39,9 @@\n \t.file\t\"crti.s\"\n \t.ident\t\"GNU C crti.s\"\n \n-\t.section \".got\",\"w\"\n+#include <ppc-asm.h>\n+\n+\t.section \".got\",\"aw\"\n \t.globl\t__GOT_START__\n \t.type\t__GOT_START__,@object\n \t.weak\t_GLOBAL_OFFSET_TABLE_\n@@ -102,3 +104,19 @@ __SBSS2_START__:\n \t.globl\t__EXCEPT_START__\n \t.type\t__EXCEPT_START__,@object\n __EXCEPT_START__:\n+\n+# Head of __init function used for static constructors in Solaris\n+\t.section \".init\",\"ax\"\n+\t.align 2\n+FUNC_START(__init)\n+\tstwu 1,-8(1)\n+\tmflr 0\n+\tstw 0,12(1)\n+\n+# Head of __fini function used for static destructors in Solaris\n+\t.section \".fini\",\"ax\"\n+\t.align 2\n+FUNC_START(__fini)\n+\tstwu 1,-8(1)\n+\tmflr 0\n+\tstw 0,12(1)"}, {"sha": "06e895638dc744df10c2f072eb8a0b265d7848f1", "filename": "gcc/config/rs6000/eabi-cn.asm", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Feabi-cn.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Feabi-cn.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi-cn.asm?ref=c81bebd76d3fffc12823fb01a2bf7fc934d7b97e", "patch": "@@ -93,3 +93,17 @@ __SBSS2_END__:\n \t.globl\t__EXCEPT_END__\n \t.type\t__EXCEPT_END__,@object\n __EXCEPT_END__:\n+\n+# Tail of __init used for static constructors in Solaris\n+\t.section \".init\",\"ax\"\n+\tlwz 0,12(1)\n+\tmtlr 0\n+\taddi 1,1,8\n+\tblr\n+\n+# Tail of __fini used for static destructors in Solaris\n+\t.section \".fini\",\"ax\"\n+\tlwz 0,12(1)\n+\tmtlr 0\n+\taddi 1,1,8\n+\tblr"}, {"sha": "ebc23ded35cec0a961283d546f952f08baba0a16", "filename": "gcc/config/rs6000/eabi-ctors.c", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Feabi-ctors.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Feabi-ctors.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi-ctors.c?ref=c81bebd76d3fffc12823fb01a2bf7fc934d7b97e", "patch": "@@ -21,6 +21,13 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+/* As a special exception, if you link this library with other files,\n+   some of which are compiled with GCC, to produce an executable,\n+   this library does not by itself cause the resulting executable\n+   to be covered by the GNU General Public License.\n+   This exception does not however invalidate any other reasons why\n+   the executable file might be covered by the GNU General Public License.  */\n+\n \n /*  Declare a pointer to void function type.  */\n \n@@ -37,6 +44,14 @@ extern func_ptr __DTOR_END__ [];\n extern void __do_global_ctors (void);\n extern void __do_global_dtors (void);\n \n+extern void __init (), __fini ();\n+\n+/* The Solaris linker seems to incorrectly relocate PC relative relocations\n+   to a different section (ie, calls to __init, __fini), so avoid it by\n+   using a function pointer.  */\n+static void (*init_ptr) (void) = __init;\n+static void (*fini_ptr) (void) = __fini;\n+\n void (*__atexit)(func_ptr);\n \n /* Call all global constructors */\n@@ -49,19 +64,28 @@ __do_global_ctors (void)\n   if (__atexit)\n     __atexit (__do_global_dtors);\n \n+  /* Call the constructors collected in the .ctors section.  */\n   for ( ; ptr != end; ptr++)\n     if (*ptr)\n       (*ptr)();\n+\n+  /* Call the initialization function in the .init section.  */\n+  (*init_ptr) ();\n }\n \n /* Call all global destructors */\n void\n __do_global_dtors (void)\n {\n-  func_ptr *ptr = &__DTOR_LIST__[0];\n-  func_ptr *end = &__DTOR_END__[0];\n+  func_ptr *ptr   = &__DTOR_END__[0] - 1;\n+  func_ptr *start = &__DTOR_LIST__[0];\n \n-  for ( ; ptr != end; ptr++)\n+  /* Call the termination function in the .fini section.  */\n+  (*fini_ptr) ();\n+\n+  /* Call the  destructors collected in the .dtors section.  Run\n+     the destructors in reverse order.  */\n+  for ( ; ptr >= start; ptr--)\n     if (*ptr)\n       (*ptr)();\n }"}, {"sha": "926e314ca76b8e108f569ba6eeaa9bcaab578b65", "filename": "gcc/config/rs6000/eabi.h", "status": "modified", "additions": 5, "deletions": 55, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Feabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Feabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi.h?ref=c81bebd76d3fffc12823fb01a2bf7fc934d7b97e", "patch": "@@ -22,41 +22,9 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"rs6000/sysv4.h\"\n \n-/* For now, make stabs the default debugging type, not dwarf. */\n-#undef\tPREFERRED_DEBUGGING_TYPE\n-#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n-\n-/* Make int foo : 8 not cause structures to be aligned to an int boundary */\n-\n-#undef\tPCC_BITFIELD_TYPE_MATTERS\n-#define\tPCC_BITFIELD_TYPE_MATTERS (TARGET_BITFIELD_TYPE)\n-\n-/* Define this macro to be the value 1 if instructions will fail to\n-   work if given data not on the nominal alignment.  If instructions\n-   will merely go slower in that case, define this macro as 0.\n-\n-   Note, little endian systems trap on unaligned addresses, so never\n-   turn off strict alignment in that case. */\n-#undef\tSTRICT_ALIGNMENT\n-#define\tSTRICT_ALIGNMENT (TARGET_STRICT_ALIGN || TARGET_LITTLE_ENDIAN)\n-\n-/* Align stack to 8 byte boundaries, rather than 16 bytes Sys V.4 uses */\n-#undef\tSTACK_BOUNDARY\n-#define\tSTACK_BOUNDARY\t64\n-\n-/* No data type wants to be aligned rounder than this.  */\n-#undef\tBIGGEST_ALIGNMENT\n-#define BIGGEST_ALIGNMENT 64\n-\n-/* Put PC relative got entries in .got2 */\n-#undef\tMINIMAL_TOC_SECTION_ASM_OP\n-#define MINIMAL_TOC_SECTION_ASM_OP \\\n-  ((TARGET_RELOCATABLE) ? \"\\t.section\\t\\\".got2\\\",\\\"aw\\\"\" : \"\\t.section\\t\\\".got1\\\",\\\"aw\\\"\")\n-\n-/* Put relocatable data in .data, not .rodata so initialized pointers can be updated */\n-#undef\tCONST_SECTION_ASM_OP\n-#define CONST_SECTION_ASM_OP \\\n-  ((TARGET_RELOCATABLE) ? \"\\t.section\\t\\\".data\\\"\\t# .rodata\" : \"\\t.section\\t\\\".rodata\\\"\")\n+/* Add -meabi to target flags */\n+#undef TARGET_DEFAULT\n+#define TARGET_DEFAULT (MASK_POWERPC | MASK_NEW_MNEMONICS | MASK_EABI)\n \n /* Invoke an initializer function to set up the GOT */\n #define NAME__MAIN \"__eabi\"\n@@ -68,23 +36,5 @@ Boston, MA 02111-1307, USA.  */\n #define CPP_PREDEFINES \\\n   \"-DPPC -D__embedded__ -Asystem(embedded) -Acpu(powerpc) -Amachine(powerpc)\"\n \n-/* Clue the simulator in to use netbsd */\n-#undef LINK_START_SPEC\n-#define LINK_START_SPEC \"%{msim: %{!Ttext*: -Ttext 0x10000074}}\"\n-\n-/* Use the simulator crt0 or mvme and libgloss/newlib libraries if desired */\n-#undef  STARTFILE_SPEC\n-#define\tSTARTFILE_SPEC \"crti.o%s \\\n-%{mmvme: mvme-crt0.o%s} \\\n-%{msim:  sim-crt0.o%s}\"\n-\n-#undef\tLIB_SPEC\n-#define\tLIB_SPEC \"\\\n-%{mmvme: -lmvme -lc -lmvme} \\\n-%{msim: -lsim -lc -lsim}\"\n-\n-#undef\tLIBGCC_SPEC\n-#define\tLIBGCC_SPEC \"libgcc.a%s\"\n-\n-#undef\tENDFILE_SPEC\n-#define\tENDFILE_SPEC \"crtn.o%s\"\n+#undef\tMULTILIB_DEFAULTS\n+#define\tMULTILIB_DEFAULTS { \"mbig\", \"mbig-endian\", \"mcall-sysv-eabi\", \"mno-sdata\" }"}, {"sha": "c38ddb354b4c859487c79b735d399599d54b829f", "filename": "gcc/config/rs6000/eabiaix.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Feabiaix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Feabiaix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabiaix.h?ref=c81bebd76d3fffc12823fb01a2bf7fc934d7b97e", "patch": "@@ -21,8 +21,9 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"rs6000/eabi.h\"\n \n-#undef TARGET_DEFAULT\n-#define TARGET_DEFAULT (MASK_POWERPC | MASK_NEW_MNEMONICS | MASK_AIX_CALLS)\n+/* Default ABI to use */\n+#undef\tRS6000_ABI_NAME\n+#define RS6000_ABI_NAME \"aix\"\n \n #undef\tCPP_SYSV_DEFAULT_SPEC\n #define\tCPP_SYSV_DEFAULT_SPEC \"-D_CALL_AIX\""}, {"sha": "5b8e70dccd951ad5dc17e3b9c2c9d946aa7d6acc", "filename": "gcc/config/rs6000/eabile.h", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Feabile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Feabile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabile.h?ref=c81bebd76d3fffc12823fb01a2bf7fc934d7b97e", "patch": "@@ -23,13 +23,10 @@ Boston, MA 02111-1307, USA.  */\n #include \"rs6000/eabi.h\"\n \n #undef TARGET_DEFAULT\n-#define TARGET_DEFAULT (MASK_POWERPC | MASK_NEW_MNEMONICS | MASK_LITTLE_ENDIAN)\n+#define TARGET_DEFAULT (MASK_POWERPC | MASK_NEW_MNEMONICS | MASK_LITTLE_ENDIAN | MASK_EABI)\n \n-#undef\tCPP_ENDIAN_SPEC\n-#define\tCPP_ENDIAN_SPEC \\\n-\"%{mbig: -D_BIG_ENDIAN -Amachine(bigendian)} \\\n-%{mbig-endian: -D_BIG_ENDIAN -Amachine(bigendian)} \\\n-%{!mbig: %{!mbig-endian: -D_LITTLE_ENDIAN -Amachine(littleendian)}}\"\n+#undef\tCPP_ENDIAN_DEFAULT_SPEC\n+#define\tCPP_ENDIAN_DEFAULT_SPEC \"-D_LITTLE_ENDIAN -Amachine(littleendian)\"\n \n /* Define this macro as a C expression for the initializer of an\n    array of string to tell the driver program which options are\n@@ -41,4 +38,4 @@ Boston, MA 02111-1307, USA.  */\n    `MULTILIB_OPTIONS' are set by default.  *Note Target Fragment::.  */\n \n #undef\tMULTILIB_DEFAULTS\n-#define\tMULTILIB_DEFAULTS { \"mlittle\", \"mlittle-endian\", \"mcall-sysv\", \"mno-sdata\" }\n+#define\tMULTILIB_DEFAULTS { \"mlittle\", \"mlittle-endian\", \"mcall-sysv-eabi\", \"mno-sdata\" }"}, {"sha": "a0ba5c7c8a0e6e2bbda4bfffdc37c9063afa0da1", "filename": "gcc/config/rs6000/eabilesim.h", "status": "modified", "additions": 12, "deletions": 16, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Feabilesim.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Feabilesim.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabilesim.h?ref=c81bebd76d3fffc12823fb01a2bf7fc934d7b97e", "patch": "@@ -29,19 +29,15 @@ Boston, MA 02111-1307, USA.  */\n #define CPP_PREDEFINES \\\n   \"-DPPC -D__embedded__ -D__simulator__ -Asystem(embedded) -Asystem(simulator) -Acpu(powerpc) -Amachine(powerpc)\"\n \n-/* Use the simulator crt0 or mvme and libgloss/newlib libraries if desired */\n-#undef  STARTFILE_SPEC\n-#define\tSTARTFILE_SPEC \"\\\n-%{mmvme: mvme-crt0.o%s} \\\n-%{!mmvme: sim-crt0.o%s}\"\n-\n-#undef\tLIB_SPEC\n-#define\tLIB_SPEC \"\\\n-%{mmvme: -lmvme -lc -lmvme} \\\n-%{!mmvme: -lsim -lc -lsim}\"\n-\n-#undef\tLIBGCC_SPEC\n-#define\tLIBGCC_SPEC \"libgcc.a%s\"\n-\n-#undef\tENDFILE_SPEC\n-#define\tENDFILE_SPEC \"\"\n+/* Make the simulator the default */\n+#undef\tLIB_DEFAULT_SPEC\n+#define LIB_DEFAULT_SPEC LIB_SIM_SPEC\n+\n+#undef\tSTARTFILE_DEFAULT_SPEC\n+#define STARTFILE_DEFAULT_SPEC STARTFILE_SIM_SPEC\n+\n+#undef\tENDFILE_DEFAULT_SPEC\n+#define ENDFILE_DEFAULT_SPEC ENDFILE_SIM_SPEC\n+\n+#undef\tLINK_START_DEFAULT_SPEC\n+#define LINK_START_DEFAULT_SPEC LINK_START_SIM_SPEC"}, {"sha": "96b61c3df14120fb303b728b4eba7ab03a47a586", "filename": "gcc/config/rs6000/eabisim.h", "status": "modified", "additions": 12, "deletions": 20, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Feabisim.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Feabisim.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabisim.h?ref=c81bebd76d3fffc12823fb01a2bf7fc934d7b97e", "patch": "@@ -29,23 +29,15 @@ Boston, MA 02111-1307, USA.  */\n #define CPP_PREDEFINES \\\n   \"-DPPC -D__embedded__ -D__simulator__ -Asystem(embedded) -Asystem(simulator) -Acpu(powerpc) -Amachine(powerpc)\"\n \n-/* Clue the simulator in to use netbsd */\n-#undef LINK_START_SPEC\n-#define LINK_START_SPEC \"%{!mmvme: %{!Ttext*: -Ttext 0x10000074}}\"\n-\n-/* Use the simulator crt0 or mvme and libgloss/newlib libraries if desired */\n-#undef  STARTFILE_SPEC\n-#define\tSTARTFILE_SPEC \"crti.o%s \\\n-%{mmvme: mvme-crt0.o%s} \\\n-%{!mmvme: sim-crt0.o%s}\"\n-\n-#undef\tLIB_SPEC\n-#define\tLIB_SPEC \"\\\n-%{mmvme: -lmvme -lc -lmvme} \\\n-%{!mmvme: -lsim -lc -lsim}\"\n-\n-#undef\tLIBGCC_SPEC\n-#define\tLIBGCC_SPEC \"libgcc.a%s\"\n-\n-#undef\tENDFILE_SPEC\n-#define\tENDFILE_SPEC \"crtn.o%s\"\n+/* Make the simulator the default */\n+#undef\tLIB_DEFAULT_SPEC\n+#define LIB_DEFAULT_SPEC LIB_SIM_SPEC\n+\n+#undef\tSTARTFILE_DEFAULT_SPEC\n+#define STARTFILE_DEFAULT_SPEC STARTFILE_SIM_SPEC\n+\n+#undef\tENDFILE_DEFAULT_SPEC\n+#define ENDFILE_DEFAULT_SPEC ENDFILE_SIM_SPEC\n+\n+#undef\tLINK_START_DEFAULT_SPEC\n+#define LINK_START_DEFAULT_SPEC LINK_START_SIM_SPEC"}, {"sha": "08f71deac83c5e4e26415a29143a4883d00534dd", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 112, "deletions": 42, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=c81bebd76d3fffc12823fb01a2bf7fc934d7b97e", "patch": "@@ -69,16 +69,19 @@ static int trunc_defined;\n \n /* Set to non-zero once AIX common-mode calls have been defined.  */\n static int common_mode_defined;\n+\n /* Save information from a \"cmpxx\" operation until the branch or scc is\n    emitted.  */\n-\n rtx rs6000_compare_op0, rs6000_compare_op1;\n int rs6000_compare_fp_p;\n \n #ifdef USING_SVR4_H\n /* Label number of label created for -mrelocatable, to call to so we can\n    get the address of the GOT section */\n int rs6000_pic_labelno;\n+\n+/* Which abi to adhere to */\n+char *rs6000_abi_name = RS6000_ABI_NAME;\n #endif\n \n /* Whether a System V.4 varargs area was created.  */\n@@ -96,6 +99,39 @@ static rtx stack_temps[NUM_MACHINE_MODES];\n /* Current PIC register used by the V4 code */\n struct rtx_def *rs6000_pic_register = (struct rtx_def *)0;\n \n+\f\n+/* Default register names.  */\n+char rs6000_reg_names[][8] =\n+{\n+   \"0\",  \"1\",  \"2\",  \"3\",  \"4\",  \"5\",  \"6\",  \"7\",\n+   \"8\",  \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\",\n+  \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\",\n+  \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\",\n+   \"0\",  \"1\",  \"2\",  \"3\",  \"4\",  \"5\",  \"6\",  \"7\",\n+   \"8\",  \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\",\n+  \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\",\n+  \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\",\n+  \"mq\", \"lr\", \"ctr\",\"ap\",\n+   \"0\",  \"1\",  \"2\",  \"3\",  \"4\",  \"5\",  \"6\",  \"7\"\n+};\n+\n+#ifdef TARGET_REGNAMES\n+static char alt_reg_names[][8] =\n+{\n+   \"%r0\",  \"%r1\",  \"%r2\",  \"%r3\",  \"%r4\",  \"%r5\",  \"%r6\",  \"%r7\",\n+   \"%r8\",  \"%r9\", \"%r10\", \"%r11\", \"%r12\", \"%r13\", \"%r14\", \"%r15\",\n+  \"%r16\", \"%r17\", \"%r18\", \"%r19\", \"%r20\", \"%r21\", \"%r22\", \"%r23\",\n+  \"%r24\", \"%r25\", \"%r26\", \"%r27\", \"%r28\", \"%r29\", \"%r30\", \"%r31\",\n+   \"%f0\",  \"%f1\",  \"%f2\",  \"%f3\",  \"%f4\",  \"%f5\",  \"%f6\",  \"%f7\",\n+   \"%f8\",  \"%f9\", \"%f10\", \"%f11\", \"%f12\", \"%f13\", \"%f14\", \"%f15\",\n+  \"%f16\", \"%f17\", \"%f18\", \"%f19\", \"%f20\", \"%f21\", \"%f22\", \"%f23\",\n+  \"%f24\", \"%f25\", \"%f26\", \"%f27\", \"%f28\", \"%f29\", \"%f30\", \"%f31\",\n+    \"mq\",   \"lr\",  \"ctr\",   \"ap\",\n+  \"%cr0\", \"%cr1\", \"%cr2\", \"%cr3\", \"%cr4\", \"%cr5\", \"%cr6\", \"%cr7\"\n+};\n+#endif\n+\n+\n \f\n /* Print the options used in the assembly file.  */\n \n@@ -338,6 +374,13 @@ rs6000_override_options (default_cpu)\n \t}\n     }\n \n+#ifdef TARGET_REGNAMES\n+  /* If the user desires alternate register names, copy in the alternate names\n+     now.  */\n+  if (TARGET_REGNAMES)\n+    bcopy ((char *)alt_reg_names, (char *)rs6000_reg_names, sizeof (rs6000_reg_names));\n+#endif\n+\n #ifdef SUBTARGET_OVERRIDE_OPTIONS\n   SUBTARGET_OVERRIDE_OPTIONS;\n #endif\n@@ -956,7 +999,7 @@ input_operand (op, mode)\n \n   /* V.4 allows SYMBOL_REFs and CONSTs that are in the small data region\n      to be valid.  */\n-  if (DEFAULT_ABI == ABI_V4\n+  if ((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n       && (GET_CODE (op) == SYMBOL_REF || GET_CODE (op) == CONST)\n       && small_data_operand (op, Pmode))\n     return 1;\n@@ -978,7 +1021,7 @@ small_data_operand (op, mode)\n     return 0;\n #endif\n \n-  if (DEFAULT_ABI != ABI_V4)\n+  if (DEFAULT_ABI != ABI_V4 /* && DEFAULT_ABI != ABI_SOLARIS */)\n     return 0;\n \n   if (GET_CODE (op) == SYMBOL_REF)\n@@ -1026,7 +1069,7 @@ init_cumulative_args (cum, fntype, libname, incoming)\n   if (incoming)\n     {\n       cum->nargs_prototype = 1000;\t\t/* don't return an EXPR_LIST */\n-      if (abi == ABI_V4)\n+      if (abi == ABI_V4 || abi == ABI_SOLARIS)\n \tcum->varargs_offset = RS6000_VARARGS_OFFSET;\n     }\n \n@@ -1060,7 +1103,7 @@ init_cumulative_args (cum, fntype, libname, incoming)\n \t\t   tree_code_name[ (int)TREE_CODE (ret_type) ]);\n \t}\n \n-      if (abi == ABI_V4 && incoming)\n+      if ((abi == ABI_V4 || abi == ABI_SOLARIS) && incoming)\n \tfprintf (stderr, \" varargs = %d, \", cum->varargs_offset);\n \n       if (cum->call_cookie & CALL_NT_DLLIMPORT)\n@@ -1087,7 +1130,7 @@ function_arg_boundary (mode, type)\n      enum machine_mode mode;\n      tree type;\n {\n-  if (DEFAULT_ABI == ABI_V4 && mode == DImode)\n+  if ((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS) && mode == DImode)\n     return 64;\n \n   if (DEFAULT_ABI != ABI_NT || TARGET_64BIT)\n@@ -1114,7 +1157,7 @@ function_arg_advance (cum, mode, type, named)\n   cum->words += align;\n   cum->nargs_prototype--;\n \n-  if (DEFAULT_ABI == ABI_V4)\n+  if (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n     {\n       /* Long longs must not be split between registers and stack */\n       if ((GET_MODE_CLASS (mode) != MODE_FLOAT || TARGET_SOFT_FLOAT)\n@@ -1198,7 +1241,7 @@ function_arg (cum, mode, type, named)\n     {\n       enum rs6000_abi abi = DEFAULT_ABI;\n \n-      if (abi == ABI_V4\n+      if ((abi == ABI_V4 || abi == ABI_SOLARIS)\n \t  && TARGET_HARD_FLOAT\n \t  && cum->nargs_prototype < 0\n \t  && type && (cum->prototype || TARGET_NO_PROTOTYPE))\n@@ -1214,7 +1257,7 @@ function_arg (cum, mode, type, named)\n \n   if (!named)\n     {\n-      if (DEFAULT_ABI != ABI_V4)\n+      if (DEFAULT_ABI != ABI_V4 && DEFAULT_ABI != ABI_SOLARIS)\n \treturn NULL_RTX;\n     }\n \n@@ -1224,7 +1267,8 @@ function_arg (cum, mode, type, named)\n   if (USE_FP_FOR_ARG_P (*cum, mode, type))\n     {\n       if ((cum->nargs_prototype > 0)\n-\t  || (DEFAULT_ABI == ABI_V4)\t/* V.4 never passes FP values in GP registers */\n+\t  || DEFAULT_ABI == ABI_V4\t/* V.4 never passes FP values in GP registers */\n+\t  || DEFAULT_ABI == ABI_SOLARIS\n \t  || !type)\n \treturn gen_rtx (REG, mode, cum->fregno);\n \n@@ -1236,7 +1280,7 @@ function_arg (cum, mode, type, named)\n     }\n \n   /* Long longs won't be split between register and stack */\n-  else if (DEFAULT_ABI == ABI_V4 &&\n+  else if ((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS) &&\n \t   align_words + RS6000_ARG_SIZE (mode, type, named) > GP_ARG_NUM_REG)\n     {\n       return NULL_RTX;\n@@ -1262,7 +1306,7 @@ function_arg_partial_nregs (cum, mode, type, named)\n   if (! named)\n     return 0;\n \n-  if (DEFAULT_ABI == ABI_V4)\n+  if (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n     return 0;\n \n   if (USE_FP_FOR_ARG_P (*cum, mode, type))\n@@ -1299,7 +1343,8 @@ function_arg_pass_by_reference (cum, mode, type, named)\n      tree type;\n      int named;\n {\n-  if (DEFAULT_ABI == ABI_V4 && type && AGGREGATE_TYPE_P (type))\n+  if ((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n+      && type && AGGREGATE_TYPE_P (type))\n     {\n       if (TARGET_DEBUG_ARG)\n \tfprintf (stderr, \"function_arg_pass_by_reference: aggregate\\n\");\n@@ -1342,7 +1387,7 @@ setup_incoming_varargs (cum, mode, type, pretend_size, no_rtl)\n \t     \"setup_vararg: words = %2d, fregno = %2d, nargs = %4d, proto = %d, mode = %4s, no_rtl= %d\\n\",\n \t     cum->words, cum->fregno, cum->nargs_prototype, cum->prototype, GET_MODE_NAME (mode), no_rtl);\n \n-  if (DEFAULT_ABI == ABI_V4 && !no_rtl)\n+  if ((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS) && !no_rtl)\n     {\n       rs6000_sysv_varargs_p = 1;\n       save_area = plus_constant (frame_pointer_rtx, RS6000_VARARGS_OFFSET);\n@@ -1370,7 +1415,7 @@ setup_incoming_varargs (cum, mode, type, pretend_size, no_rtl)\n     }\n \n   /* Save FP registers if needed.  */\n-  if (DEFAULT_ABI == ABI_V4 && TARGET_HARD_FLOAT && !no_rtl)\n+  if ((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS) && TARGET_HARD_FLOAT && !no_rtl)\n     {\n       int fregno     = cum->fregno;\n       int num_fp_reg = FP_ARG_V4_MAX_REG + 1 - fregno;\n@@ -2065,6 +2110,12 @@ print_operand (file, x, code)\n       fputs (TARGET_MINIMAL_TOC ? reg_names[30] : reg_names[2], file);\n       return;\n \n+    case '$':\n+      /* Write out either a '.' or '$' for the current location, depending\n+\t on whether this is Solaris or not.  */\n+      putc ((DEFAULT_ABI == ABI_SOLARIS) ? '.' : '$', file);\n+      return;\n+\n     case 'A':\n       /* If X is a constant integer whose low-order 5 bits are zero,\n \t write 'l'.  Otherwise, write 'r'.  This is a kludge to fix a bug\n@@ -2225,7 +2276,7 @@ print_operand (file, x, code)\n \t  else\n \t    output_address (plus_constant (XEXP (x, 0), 4));\n \t  if (DEFAULT_ABI == ABI_V4 && small_data_operand (x, GET_MODE (x)))\n-\t    fprintf (file, \"@sda21(%s)\", reg_names[0]);\n+\t    fprintf (file, \"@%s(%s)\", (TARGET_EABI) ? \"sda21\" : \"sdarel\", reg_names[0]);\n \t}\n       return;\n \t\t\t    \n@@ -2437,7 +2488,7 @@ print_operand (file, x, code)\n \t  else\n \t    output_address (plus_constant (XEXP (x, 0), 8));\n \t  if (DEFAULT_ABI == ABI_V4 && small_data_operand (x, GET_MODE (x)))\n-\t    fprintf (file, \"@sda21(%s)\", reg_names[0]);\n+\t    fprintf (file, \"@%s(%s)\", (TARGET_EABI) ? \"sda21\" : \"sdarel\", reg_names[0]);\n \t}\n       return;\n \t\t\t    \n@@ -2463,6 +2514,7 @@ print_operand (file, x, code)\n \n \t    case ABI_V4:\n \t    case ABI_AIX_NODESC:\n+\t    case ABI_SOLARIS:\n \t      break;\n \n \t    case ABI_NT:\n@@ -2485,7 +2537,7 @@ print_operand (file, x, code)\n \t  else\n \t    output_address (plus_constant (XEXP (x, 0), 12));\n \t  if (DEFAULT_ABI == ABI_V4 && small_data_operand (x, GET_MODE (x)))\n-\t    fprintf (file, \"@sda21(%s)\", reg_names[0]);\n+\t    fprintf (file, \"@%s(%s)\", (TARGET_EABI) ? \"sda21\" : \"sdarel\", reg_names[0]);\n \t}\n       return;\n \t\t\t    \n@@ -2527,7 +2579,7 @@ print_operand_address (file, x)\n     {\n       output_addr_const (file, x);\n       if (DEFAULT_ABI == ABI_V4 && small_data_operand (x, GET_MODE (x)))\n-\tfprintf (file, \"@sda21(%s)\", reg_names[0]);\n+\tfprintf (file, \"@%s(%s)\", (TARGET_EABI) ? \"sda21\" : \"sdarel\", reg_names[0]);\n \n #ifdef TARGET_NO_TOC\n       else if (TARGET_NO_TOC)\n@@ -2752,31 +2804,37 @@ rs6000_stack_info ()\n \n   /* If this is main and we need to call a function to set things up,\n      save main's arguments around the call.  */\n-  if (strcmp (IDENTIFIER_POINTER (DECL_NAME (current_function_decl)), \"main\") == 0)\n+#ifdef TARGET_EABI\n+  if (TARGET_EABI)\n+#endif\n     {\n-      info_ptr->main_p = 1;\n-\n-#ifdef NAME__MAIN\n-      info_ptr->calls_p = 1;\n-\n-      if (DECL_ARGUMENTS (current_function_decl))\n+      if (strcmp (IDENTIFIER_POINTER (DECL_NAME (current_function_decl)), \"main\") == 0)\n \t{\n-\t  int i;\n-\t  tree arg;\n+\t  info_ptr->main_p = 1;\n \n-\t  info_ptr->main_save_p = 1;\n-\t  info_ptr->main_size = 0;\n+#ifdef NAME__MAIN\n+\t  info_ptr->calls_p = 1;\n \n-\t  for ((i = 0), (arg = DECL_ARGUMENTS (current_function_decl));\n-\t       arg != NULL_TREE && i < 8;\n-\t       (arg = TREE_CHAIN (arg)), i++)\n+\t  if (DECL_ARGUMENTS (current_function_decl))\n \t    {\n-\t      info_ptr->main_size += reg_size;\n+\t      int i;\n+\t      tree arg;\n+\n+\t      info_ptr->main_save_p = 1;\n+\t      info_ptr->main_size = 0;\n+\n+\t      for ((i = 0), (arg = DECL_ARGUMENTS (current_function_decl));\n+\t\t   arg != NULL_TREE && i < 8;\n+\t\t   (arg = TREE_CHAIN (arg)), i++)\n+\t\t{\n+\t\t  info_ptr->main_size += reg_size;\n+\t\t}\n \t    }\n-\t}\n #endif\n+\t}\n     }\n \n+\n   /* Determine if we need to save the link register */\n   if (regs_ever_live[65] || profile_flag\n #ifdef TARGET_RELOCATABLE\n@@ -2785,6 +2843,7 @@ rs6000_stack_info ()\n       || (info_ptr->first_fp_reg_save != 64\n \t  && !FP_SAVE_INLINE (info_ptr->first_fp_reg_save))\n       || (abi == ABI_V4 && current_function_calls_alloca)\n+      || (abi == ABI_SOLARIS && current_function_calls_alloca)\n       || info_ptr->calls_p)\n     {\n       info_ptr->lr_save_p = 1;\n@@ -2797,7 +2856,7 @@ rs6000_stack_info ()\n   if (regs_ever_live[70] || regs_ever_live[71] || regs_ever_live[72])\n     {\n       info_ptr->cr_save_p = 1;\n-      if (abi == ABI_V4 || abi == ABI_NT)\n+      if (abi == ABI_V4 || abi == ABI_NT || abi == ABI_SOLARIS)\n \tinfo_ptr->cr_size = reg_size;\n     }\n \n@@ -2833,7 +2892,7 @@ rs6000_stack_info ()\n   if (info_ptr->calls_p)\n     info_ptr->push_p = 1;\n \n-  else if (abi == ABI_V4 || abi == ABI_NT)\n+  else if (abi == ABI_V4 || abi == ABI_NT || abi == ABI_SOLARIS)\n     info_ptr->push_p = (total_raw_size > info_ptr->fixed_size\n \t\t\t|| info_ptr->lr_save_p);\n \n@@ -2859,6 +2918,7 @@ rs6000_stack_info ()\n       break;\n \n     case ABI_V4:\n+    case ABI_SOLARIS:\n       info_ptr->fp_save_offset   = - info_ptr->fp_size;\n       info_ptr->gp_save_offset   = info_ptr->fp_save_offset - info_ptr->gp_size;\n       info_ptr->cr_save_offset   = info_ptr->gp_save_offset - reg_size;\n@@ -2923,6 +2983,7 @@ debug_stack_info (info)\n     case ABI_AIX:\t abi_string = \"AIX\";\t\tbreak;\n     case ABI_AIX_NODESC: abi_string = \"AIX\";\t\tbreak;\n     case ABI_V4:\t abi_string = \"V.4\";\t\tbreak;\n+    case ABI_SOLARIS:\t abi_string = \"Solaris\";\tbreak;\n     case ABI_NT:\t abi_string = \"NT\";\t\tbreak;\n     }\n \n@@ -3074,7 +3135,7 @@ output_prolog (file, size)\n     }\n \n   /* For V.4, update stack before we do any saving and set back pointer.  */\n-  if (info->push_p && DEFAULT_ABI == ABI_V4)\n+  if (info->push_p && (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS))\n     {\n       if (info->total_size < 32767)\n \t{\n@@ -3213,7 +3274,7 @@ output_prolog (file, size)\n     }\n \n   /* Update stack and set back pointer and we have already done so for V.4.  */\n-  if (info->push_p && DEFAULT_ABI != ABI_V4)\n+  if (info->push_p && DEFAULT_ABI != ABI_V4 && DEFAULT_ABI != ABI_SOLARIS)\n     {\n       if (info->total_size < 32767)\n \tasm_fprintf (file,\n@@ -3324,6 +3385,7 @@ output_prolog (file, size)\n \tswitch (DEFAULT_ABI)\n \t  {\n \t  case ABI_V4:\n+\t  case ABI_SOLARIS:\n \t  case ABI_AIX_NODESC:\n \t    if (TARGET_32BIT)\n \t      {\n@@ -3398,14 +3460,14 @@ output_epilog (file, size)\n \t{\n \t  /* Under V.4, don't reset the stack pointer until after we're done\n \t     loading the saved registers.  */\n-\t  if (DEFAULT_ABI == ABI_V4)\n+\t  if (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n \t    sp_reg = 11;\n \n \t  asm_fprintf (file, load_reg, reg_names[sp_reg], 0, reg_names[1]);\n \t}\n       else if (info->push_p)\n \t{\n-\t  if (DEFAULT_ABI == ABI_V4)\n+\t  if (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n \t    sp_offset = info->total_size;\n \t  else if (TARGET_NEW_MNEMONICS)\n \t    asm_fprintf (file, \"\\taddi %s,%s,%d\\n\", reg_names[1], reg_names[1], info->total_size);\n@@ -4161,6 +4223,7 @@ rs6000_trampoline_template (file)\n     /* V.4/eabi function pointers are just a single pointer, so we need to\n        do the full gory code to load up the static chain.  */\n     case ABI_V4:\n+    case ABI_SOLARIS:\n     case ABI_AIX_NODESC:\n       if (STATIC_CHAIN_REGNUM == 0 || !TARGET_NEW_MNEMONICS)\n \tabort ();\n@@ -4238,6 +4301,7 @@ rs6000_trampoline_size ()\n       break;\n \n     case ABI_V4:\n+    case ABI_SOLARIS:\n     case ABI_AIX_NODESC:\n       ret = (TARGET_32BIT) ? 40 : 48;\n       break;\n@@ -4289,6 +4353,7 @@ rs6000_initialize_trampoline (addr, fnaddr, cxt)\n     /* Under V.4/eabi, update the two words after the bl to have the real\n        function address and the static chain.  */\n     case ABI_V4:\n+    case ABI_SOLARIS:\n     case ABI_AIX_NODESC:\n       {\n \trtx reg = gen_reg_rtx (pmode);\n@@ -4546,7 +4611,12 @@ rs6000_select_section (decl, reloc)\n       else\n \t{\n \t  if (TARGET_SDATA && (size > 0) && (size <= g_switch_value))\n-\t    sdata2_section ();\n+\t    {\n+\t      if (TARGET_EABI)\n+\t\tsdata2_section ();\n+\t      else\n+\t\tsdata_section ();\t/* System V doesn't have .sdata2/.sbss2 */\n+\t    }\n \t  else\n \t    const_section ();\n \t}"}, {"sha": "18d0e7b497676ab284c3c5a21cd108808175d5bc", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 149, "deletions": 59, "changes": 208, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=c81bebd76d3fffc12823fb01a2bf7fc934d7b97e", "patch": "@@ -93,6 +93,10 @@ Boston, MA 02111-1307, USA.  */\n #define CPP_ENDIAN_SPEC \"\"\n #endif\n \n+#ifndef CPP_ENDIAN_DEFAULT_SPEC\n+#define CPP_ENDIAN_DEFAULT_SPEC \"\"\n+#endif\n+\n #ifndef CPP_SYSV_DEFAULT_SPEC\n #define CPP_SYSV_DEFAULT_SPEC \"\"\n #endif\n@@ -144,25 +148,19 @@ Boston, MA 02111-1307, USA.  */\n #define SUBTARGET_EXTRA_SPECS\n #endif\n \n-#define EXTRA_SPECS\t\t\t\t\t\\\n-  { \"cpp_cpu\",\t\tCPP_CPU_SPEC },\t\t\t\\\n-  { \"cpp_default\",\tCPP_DEFAULT_SPEC },\t\t\\\n-  { \"cpp_sysv\",\t\tCPP_SYSV_SPEC },\t\t\\\n-  { \"cpp_sysv_default\",\tCPP_SYSV_DEFAULT_SPEC },\t\\\n-  { \"cpp_endian\",\tCPP_ENDIAN_SPEC },\t\t\\\n-  { \"asm_cpu\",\t\tASM_CPU_SPEC },\t\t\t\\\n-  { \"asm_default\",\tASM_DEFAULT_SPEC },\t\t\\\n-  { \"link_syscalls\",\tLINK_SYSCALLS_SPEC },\t\t\\\n-  { \"link_libg\",\tLINK_LIBG_SPEC },\t\t\\\n-  { \"link_path\",\tLINK_PATH_SPEC },\t\t\\\n-  { \"link_start\",\tLINK_START_SPEC },\t\t\\\n+#define EXTRA_SPECS\t\t\t\t\t\t\t\\\n+  { \"cpp_cpu\",\t\t\tCPP_CPU_SPEC },\t\t\t\t\\\n+  { \"cpp_default\",\t\tCPP_DEFAULT_SPEC },\t\t\t\\\n+  { \"cpp_sysv\",\t\t\tCPP_SYSV_SPEC },\t\t\t\\\n+  { \"cpp_sysv_default\",\t\tCPP_SYSV_DEFAULT_SPEC },\t\t\\\n+  { \"cpp_endian_default\",\tCPP_ENDIAN_DEFAULT_SPEC },\t\t\\\n+  { \"cpp_endian\",\t\tCPP_ENDIAN_SPEC },\t\t\t\\\n+  { \"asm_cpu\",\t\t\tASM_CPU_SPEC },\t\t\t\t\\\n+  { \"asm_default\",\t\tASM_DEFAULT_SPEC },\t\t\t\\\n+  { \"link_syscalls\",\t\tLINK_SYSCALLS_SPEC },\t\t\t\\\n+  { \"link_libg\",\t\tLINK_LIBG_SPEC },\t\t\t\\\n   SUBTARGET_EXTRA_SPECS\n \n-/* Default paths to give linker under V.4 */\n-#ifndef LINK_PATH_SPEC\n-#define LINK_PATH_SPEC \"\"\n-#endif\n-\n /* Default location of syscalls.exp under AIX */\n #ifndef CROSS_COMPILE\n #define LINK_SYSCALLS_SPEC \"-bI:/lib/syscalls.exp\"\n@@ -177,11 +175,6 @@ Boston, MA 02111-1307, USA.  */\n #define LINK_LIBG_SPEC \"\"\n #endif\n \n-/* Default starting address if specified */\n-#ifndef LINK_START_SPEC\n-#define LINK_START_SPEC \"\"\n-#endif\n-\n /* Define the options for the binder: Start text at 512, align all segments\n    to 512 bytes, and warn if there is text relocation.\n \n@@ -463,7 +456,7 @@ extern struct rs6000_cpu_select rs6000_select[];\n #define REAL_ARITHMETIC\n \n /* Define this macro if it is advisable to hold scalars in registers\n-   in a wider mode than that declared by the program.  In such cases, \n+   in a wider mode than that declared by the program.  In such cases,\n    the value is constrained to be within the bounds of the declared\n    type, but kept valid in the wider mode.  The signedness of the\n    extension may differ from that of the type.  */\n@@ -483,7 +476,7 @@ extern struct rs6000_cpu_select rs6000_select[];\n #define BYTES_BIG_ENDIAN 1\n \n /* Define this if most significant word of a multiword number is lowest\n-   numbered. \n+   numbered.\n \n    For RS/6000 we can decide arbitrarily since there are no machine\n    instructions for them.  Might as well be consistent with bits and bytes. */\n@@ -632,7 +625,7 @@ extern struct rs6000_cpu_select rs6000_select[];\n /* 1 for registers that have pervasive standard uses\n    and are not available for the register allocator.\n \n-   On RS/6000, r1 is used for the stack and r2 is used as the TOC pointer.  \n+   On RS/6000, r1 is used for the stack and r2 is used as the TOC pointer.\n \n    cr5 is not supposed to be used.\n \n@@ -865,7 +858,7 @@ extern struct rs6000_cpu_select rs6000_select[];\n \n    For any two classes, it is very desirable that there be another\n    class that represents their union.  */\n-   \n+\n /* The RS/6000 has three types of registers, fixed-point, floating-point,\n    and condition registers, plus three special registers, MQ, CTR, and the\n    link register.\n@@ -982,7 +975,7 @@ enum reg_class\n    C is the letter, and VALUE is a constant value.\n    Return 1 if VALUE is in the range specified by C.\n \n-   `I' is signed 16-bit constants \n+   `I' is signed 16-bit constants\n    `J' is a constant with only the high-order 16 bits non-zero\n    `K' is a constant with only the low-order 16 bits non-zero\n    `L' is a constant that can be placed into a mask operand\n@@ -1028,13 +1021,14 @@ enum reg_class\n    : (C) == 'R' ? LEGITIMATE_CONSTANT_POOL_ADDRESS_P (OP)\t\t\\\n    : (C) == 'S' ? (TARGET_WINDOWS_NT && DEFAULT_ABI == ABI_NT && GET_CODE (OP) == SYMBOL_REF)\\\n    : (C) == 'T' ? (TARGET_WINDOWS_NT && DEFAULT_ABI == ABI_NT && GET_CODE (OP) == LABEL_REF) \\\n-   : (C) == 'U' ? (DEFAULT_ABI == ABI_V4 && small_data_operand (OP, GET_MODE (OP))) \\\n+   : (C) == 'U' ? ((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS) \\\n+\t\t   && small_data_operand (OP, GET_MODE (OP)))\t\t\\\n    : 0)\n \n /* Given an rtx X being reloaded into a reg required to be\n    in class CLASS, return the class of reg to actually use.\n    In general this is just CLASS; but on some machines\n-   in some cases it is preferable to use a more restrictive class. \n+   in some cases it is preferable to use a more restrictive class.\n \n    On the RS/6000, we have to return NO_REGS when we want to reload a\n    floating-point CONST_DOUBLE to force it to be copied to memory.  */\n@@ -1043,7 +1037,7 @@ enum reg_class\n   ((GET_CODE (X) == CONST_DOUBLE\t\t\t\\\n     && GET_MODE_CLASS (GET_MODE (X)) == MODE_FLOAT)\t\\\n    ? NO_REGS : (CLASS))\n-   \n+\n /* Return the register class of a scratch register needed to copy IN into\n    or out of a register in CLASS in MODE.  If it can be done directly,\n    NO_REGS is returned.  */\n@@ -1080,7 +1074,8 @@ enum rs6000_abi {\n   ABI_AIX,\t\t\t/* IBM's AIX */\n   ABI_AIX_NODESC,\t\t/* AIX calling sequence minus function descriptors */\n   ABI_V4,\t\t\t/* System V.4/eabi */\n-  ABI_NT\t\t\t/* Windows/NT */\n+  ABI_NT,\t\t\t/* Windows/NT */\n+  ABI_SOLARIS\t\t\t/* Solaris */\n };\n \n extern enum rs6000_abi rs6000_current_abi;\t/* available for use by subtarget */\n@@ -1169,7 +1164,7 @@ extern int rs6000_sysv_varargs_p;\n /* Offset within stack frame to start allocating local variables at.\n    If FRAME_GROWS_DOWNWARD, this is the offset to the END of the\n    first local allocated.  Otherwise, it is the offset to the BEGINNING\n-   of the first local allocated. \n+   of the first local allocated.\n \n    On the RS/6000, the frame pointer is the same as the stack pointer,\n    except for dynamic allocations.  So we start after the fixed area and\n@@ -1222,7 +1217,7 @@ extern int rs6000_sysv_varargs_p;\n    If the precise function being called is known, FUNC is its FUNCTION_DECL;\n    otherwise, FUNC is 0.\n \n-   On RS/6000 an integer value is in r3 and a floating-point value is in \n+   On RS/6000 an integer value is in r3 and a floating-point value is in\n    fp1, unless -msoft-float.  */\n \n #define FUNCTION_VALUE(VALTYPE, FUNC)\t\\\n@@ -1238,10 +1233,12 @@ extern int rs6000_sysv_varargs_p;\n /* The definition of this macro implies that there are cases where\n    a scalar value cannot be returned in registers.\n \n-   For the RS/6000, any structure or union type is returned in memory.  */\n+   For the RS/6000, any structure or union type is returned in memory, except for\n+   Solaris, which returns structures <= 8 bytes in registers.  */\n \n-#define RETURN_IN_MEMORY(TYPE) \\\n-  (TYPE_MODE (TYPE) == BLKmode)\n+#define RETURN_IN_MEMORY(TYPE)\t\t\t\t\t\t\\\n+  (TYPE_MODE (TYPE) == BLKmode\t\t\t\t\t\t\\\n+   && (DEFAULT_ABI != ABI_SOLARIS || int_size_in_bytes (TYPE) > 8))\n \n /* Minimum and maximum general purpose registers used to hold arguments.  */\n #define GP_ARG_MIN_REG 3\n@@ -1385,14 +1382,14 @@ typedef struct rs6000_args\n   function_arg_pass_by_reference(&CUM, MODE, TYPE, NAMED)\n \n /* If defined, a C expression that gives the alignment boundary, in bits,\n-   of an argument with the specified mode and type.  If it is not defined, \n+   of an argument with the specified mode and type.  If it is not defined,\n    PARM_BOUNDARY is used for all arguments.  */\n \n #define FUNCTION_ARG_BOUNDARY(MODE, TYPE) \\\n   function_arg_boundary (MODE, TYPE)\n \n /* Perform any needed actions needed for a function that is receiving a\n-   variable number of arguments. \n+   variable number of arguments.\n \n    CUM is as above.\n \n@@ -1522,7 +1519,8 @@ typedef struct rs6000_args\n #define RETURN_ADDRESS_OFFSET\t\t\t\t\t\t\\\n  ((DEFAULT_ABI == ABI_AIX\t\t\t\t\t\t\\\n    || DEFAULT_ABI == ABI_AIX_NODESC)\t? 8 :\t\t\t\t\\\n-  (DEFAULT_ABI == ABI_V4)\t\t? (TARGET_32BIT ? 4 : 8) :\t\\\n+  (DEFAULT_ABI == ABI_V4\t\t\t\t\t\t\\\n+   || DEFAULT_ABI == ABI_SOLARIS)\t? (TARGET_32BIT ? 4 : 8) :\t\\\n   (DEFAULT_ABI == ABI_NT)\t\t? -4 :\t\t\t\t\\\n   (fatal (\"RETURN_ADDRESS_OFFSET not supported\"), 0))\n \n@@ -1704,7 +1702,7 @@ typedef struct rs6000_args\n        && LEGITIMATE_CONSTANT_POOL_BASE_P (XEXP (XEXP (X, 0), 0))))\n \n #define LEGITIMATE_SMALL_DATA_P(MODE, X)\t\t\t\t\\\n-  (DEFAULT_ABI == ABI_V4\t\t\t\t\t\t\\\n+  ((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\t\t\\\n    && (GET_CODE (X) == SYMBOL_REF || GET_CODE (X) == CONST)\t\t\\\n    && small_data_operand (X, MODE))\n \n@@ -1787,7 +1785,7 @@ typedef struct rs6000_args\n    integer that is out of range.  If so, generate code to add the\n    constant with the low-order 16 bits masked to the register and force\n    this result into another register (this can be done with `cau').\n-   Then generate an address of REG+(CONST&0xffff), allowing for the \n+   Then generate an address of REG+(CONST&0xffff), allowing for the\n    possibility of bit 16 being a one.\n \n    Then check for the sum of a register and something not constant, try to\n@@ -1969,7 +1967,7 @@ extern struct rtx_def *rs6000_pic_register;\n \n /* We don't have GAS for the RS/6000 yet, so don't write out special\n    .stabs in cc1plus.  */\n-   \n+\n #define FASCIST_ASSEMBLER\n \n #ifndef ASM_OUTPUT_CONSTRUCTOR\n@@ -2179,7 +2177,7 @@ extern int rs6000_trunc_used;\n    [RW] section emitted.\n \n    We then switch back to text to force the gcc2_compiled. label and the space\n-   allocated after it (when profiling) into the text section.  \n+   allocated after it (when profiling) into the text section.\n \n    Finally, declare mcount when profiling to make the assembler happy.  */\n \n@@ -2324,7 +2322,7 @@ toc_section ()\t\t\t\t\t\t\\\n \n /* This macro produces the initial definition of a function name.\n    On the RS/6000, we need to place an extra '.' in the function name and\n-   output the function descriptor.  \n+   output the function descriptor.\n \n    The csect for the function will have already been created by the\n    `text_section' call previously done.  We do have to go back to that\n@@ -2467,7 +2465,7 @@ toc_section ()\t\t\t\t\t\t\\\n   while (0)\n \n /* Output something to declare an external symbol to the assembler.  Most\n-   assemblers don't need this.  \n+   assemblers don't need this.\n \n    If we haven't already, add \"[RW]\" (or \"[DS]\" for a function) to the\n    name.  Normally we write this out along with the name.  In the few cases\n@@ -2524,17 +2522,108 @@ toc_section ()\t\t\t\t\t\t\\\n /* How to refer to registers in assembler output.\n    This sequence is indexed by compiler's hard-register-number (see above).  */\n \n-#define REGISTER_NAMES \\\n- {\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \t\t\\\n-  \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\",\t\t\\\n-  \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\",\t\\\n-  \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\",\t\\\n-  \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\",\t\t\\\n-  \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\",\t\t\\\n-  \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\",\t\\\n-  \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\",\t\\\n-  \"mq\", \"lr\", \"ctr\", \"ap\",\t\t\t\t\\\n-  \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\" }\n+extern char rs6000_reg_names[][8];\t/* register names (a0 vs. $4). */\n+\n+#define REGISTER_NAMES\t\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  &rs6000_reg_names[ 0][0],\t/* r0   */\t\t\t\t\\\n+  &rs6000_reg_names[ 1][0],\t/* r1\t*/\t\t\t\t\\\n+  &rs6000_reg_names[ 2][0],     /* r2\t*/\t\t\t\t\\\n+  &rs6000_reg_names[ 3][0],\t/* r3\t*/\t\t\t\t\\\n+  &rs6000_reg_names[ 4][0],\t/* r4\t*/\t\t\t\t\\\n+  &rs6000_reg_names[ 5][0],\t/* r5\t*/\t\t\t\t\\\n+  &rs6000_reg_names[ 6][0],\t/* r6\t*/\t\t\t\t\\\n+  &rs6000_reg_names[ 7][0],\t/* r7\t*/\t\t\t\t\\\n+  &rs6000_reg_names[ 8][0],\t/* r8\t*/\t\t\t\t\\\n+  &rs6000_reg_names[ 9][0],\t/* r9\t*/\t\t\t\t\\\n+  &rs6000_reg_names[10][0],\t/* r10  */\t\t\t\t\\\n+  &rs6000_reg_names[11][0],\t/* r11  */\t\t\t\t\\\n+  &rs6000_reg_names[12][0],\t/* r12  */\t\t\t\t\\\n+  &rs6000_reg_names[13][0],\t/* r13  */\t\t\t\t\\\n+  &rs6000_reg_names[14][0],\t/* r14  */\t\t\t\t\\\n+  &rs6000_reg_names[15][0],\t/* r15  */\t\t\t\t\\\n+  &rs6000_reg_names[16][0],\t/* r16  */\t\t\t\t\\\n+  &rs6000_reg_names[17][0],\t/* r17  */\t\t\t\t\\\n+  &rs6000_reg_names[18][0],\t/* r18  */\t\t\t\t\\\n+  &rs6000_reg_names[19][0],\t/* r19  */\t\t\t\t\\\n+  &rs6000_reg_names[20][0],\t/* r20  */\t\t\t\t\\\n+  &rs6000_reg_names[21][0],\t/* r21  */\t\t\t\t\\\n+  &rs6000_reg_names[22][0],\t/* r22  */\t\t\t\t\\\n+  &rs6000_reg_names[23][0],\t/* r23  */\t\t\t\t\\\n+  &rs6000_reg_names[24][0],\t/* r24  */\t\t\t\t\\\n+  &rs6000_reg_names[25][0],\t/* r25  */\t\t\t\t\\\n+  &rs6000_reg_names[26][0],\t/* r26  */\t\t\t\t\\\n+  &rs6000_reg_names[27][0],\t/* r27  */\t\t\t\t\\\n+  &rs6000_reg_names[28][0],\t/* r28  */\t\t\t\t\\\n+  &rs6000_reg_names[29][0],\t/* r29  */\t\t\t\t\\\n+  &rs6000_reg_names[30][0],\t/* r30  */\t\t\t\t\\\n+  &rs6000_reg_names[31][0],\t/* r31  */\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  &rs6000_reg_names[32][0],     /* fr0  */\t\t\t\t\\\n+  &rs6000_reg_names[33][0],\t/* fr1  */\t\t\t\t\\\n+  &rs6000_reg_names[34][0],\t/* fr2  */\t\t\t\t\\\n+  &rs6000_reg_names[35][0],\t/* fr3  */\t\t\t\t\\\n+  &rs6000_reg_names[36][0],\t/* fr4  */\t\t\t\t\\\n+  &rs6000_reg_names[37][0],\t/* fr5  */\t\t\t\t\\\n+  &rs6000_reg_names[38][0],\t/* fr6  */\t\t\t\t\\\n+  &rs6000_reg_names[39][0],\t/* fr7  */\t\t\t\t\\\n+  &rs6000_reg_names[40][0],\t/* fr8  */\t\t\t\t\\\n+  &rs6000_reg_names[41][0],\t/* fr9  */\t\t\t\t\\\n+  &rs6000_reg_names[42][0],\t/* fr10 */\t\t\t\t\\\n+  &rs6000_reg_names[43][0],\t/* fr11 */\t\t\t\t\\\n+  &rs6000_reg_names[44][0],\t/* fr12 */\t\t\t\t\\\n+  &rs6000_reg_names[45][0],\t/* fr13 */\t\t\t\t\\\n+  &rs6000_reg_names[46][0],\t/* fr14 */\t\t\t\t\\\n+  &rs6000_reg_names[47][0],\t/* fr15 */\t\t\t\t\\\n+  &rs6000_reg_names[48][0],\t/* fr16 */\t\t\t\t\\\n+  &rs6000_reg_names[49][0],\t/* fr17 */\t\t\t\t\\\n+  &rs6000_reg_names[50][0],\t/* fr18 */\t\t\t\t\\\n+  &rs6000_reg_names[51][0],\t/* fr19 */\t\t\t\t\\\n+  &rs6000_reg_names[52][0],\t/* fr20 */\t\t\t\t\\\n+  &rs6000_reg_names[53][0],\t/* fr21 */\t\t\t\t\\\n+  &rs6000_reg_names[54][0],\t/* fr22 */\t\t\t\t\\\n+  &rs6000_reg_names[55][0],\t/* fr23 */\t\t\t\t\\\n+  &rs6000_reg_names[56][0],\t/* fr24 */\t\t\t\t\\\n+  &rs6000_reg_names[57][0],\t/* fr25 */\t\t\t\t\\\n+  &rs6000_reg_names[58][0],\t/* fr26 */\t\t\t\t\\\n+  &rs6000_reg_names[59][0],\t/* fr27 */\t\t\t\t\\\n+  &rs6000_reg_names[60][0],\t/* fr28 */\t\t\t\t\\\n+  &rs6000_reg_names[61][0],\t/* fr29 */\t\t\t\t\\\n+  &rs6000_reg_names[62][0],\t/* fr30 */\t\t\t\t\\\n+  &rs6000_reg_names[63][0],\t/* fr31 */\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  &rs6000_reg_names[64][0],     /* mq   */\t\t\t\t\\\n+  &rs6000_reg_names[65][0],\t/* lr   */\t\t\t\t\\\n+  &rs6000_reg_names[66][0],\t/* ctr  */\t\t\t\t\\\n+  &rs6000_reg_names[67][0],\t/* ap   */\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  &rs6000_reg_names[68][0],\t/* cr0  */\t\t\t\t\\\n+  &rs6000_reg_names[69][0],\t/* cr1  */\t\t\t\t\\\n+  &rs6000_reg_names[70][0],\t/* cr2  */\t\t\t\t\\\n+  &rs6000_reg_names[71][0],\t/* cr3  */\t\t\t\t\\\n+  &rs6000_reg_names[72][0],\t/* cr4  */\t\t\t\t\\\n+  &rs6000_reg_names[73][0],\t/* cr5  */\t\t\t\t\\\n+  &rs6000_reg_names[74][0],\t/* cr6  */\t\t\t\t\\\n+  &rs6000_reg_names[75][0],\t/* cr7  */\t\t\t\t\\\n+}\n+\n+/* print-rtl can't handle the above REGISTER_NAMES, so define the\n+   following for it.  Switch to use the alternate names since\n+   they are more mnemonic.  */\n+\n+#define DEBUG_REGISTER_NAMES\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+   \"r0\", \"r1\",   \"r2\",  \"r3\",  \"r4\",  \"r5\",  \"r6\",  \"r7\",\t\t\\\n+   \"r8\", \"r9\",  \"r10\", \"r11\", \"r12\", \"r13\", \"r14\", \"r15\",\t\t\\\n+  \"r16\", \"r17\", \"r18\", \"r19\", \"r20\", \"r21\", \"r22\", \"r23\",\t\t\\\n+  \"r24\", \"r25\", \"r26\", \"r27\", \"r28\", \"r29\", \"r30\", \"r31\",\t\t\\\n+   \"f0\",  \"f1\",  \"f2\",  \"f3\",  \"f4\",  \"f5\",  \"f6\",  \"f7\",\t\t\\\n+   \"f8\",  \"f9\", \"f10\", \"f11\", \"f12\", \"f13\", \"f14\", \"f15\",\t\t\\\n+  \"f16\", \"f17\", \"f18\", \"f19\", \"f20\", \"f21\", \"f22\", \"f23\",\t\t\\\n+  \"f24\", \"f25\", \"f26\", \"f27\", \"f28\", \"f29\", \"f30\", \"f31\",\t\t\\\n+  \"mq\",   \"lr\", \"ctr\",  \"ap\",\t\t\t\t\t\t\\\n+  \"cr0\", \"cr1\", \"cr2\", \"cr3\", \"cr4\", \"cr5\", \"cr6\", \"cr7\"\t\t\\\n+}\n \n /* Table of additional register names to use in user input.  */\n \n@@ -2558,7 +2647,7 @@ toc_section ()\t\t\t\t\t\t\\\n   /* no additional names for: mq, lr, ctr, ap */\t\\\n   \"cr0\",  68, \"cr1\",  69, \"cr2\",  70, \"cr3\",  71,\t\\\n   \"cr4\",  72, \"cr5\",  73, \"cr6\",  74, \"cr7\",  75,\t\\\n-  \"cc\",   68 }\n+  \"cc\",   68, \"sp\",    1, \"toc\",   2 }\n \n /* How to renumber registers for dbx and gdb.  */\n \n@@ -2722,7 +2811,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \t       reg_names[1]);\t\t\t\t\t\t\\\n } while (0)\n \n-/* This is how to output an element of a case-vector that is absolute. \n+/* This is how to output an element of a case-vector that is absolute.\n    (RS/6000 does not use such vectors, but we must define this macro\n    anyway.)   */\n \n@@ -2810,7 +2899,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* Define which CODE values are valid.  */\n \n-#define PRINT_OPERAND_PUNCT_VALID_P(CODE)  ((CODE) == '.' || (CODE) == '*')\n+#define PRINT_OPERAND_PUNCT_VALID_P(CODE)  \\\n+  ((CODE) == '.' || (CODE) == '*' || (CODE) == '$')\n \n /* Print a memory address as an operand to reference that memory location.  */\n "}, {"sha": "2b2d971784f75cd6ca420a00c40d66347ac01b76", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 24, "deletions": 22, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=c81bebd76d3fffc12823fb01a2bf7fc934d7b97e", "patch": "@@ -4821,7 +4821,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(unspec [(match_operand:SI 1 \"got_operand\" \"\")\n \t\t (match_dup 2)] 8))]\n-  \"DEFAULT_ABI == ABI_V4 && flag_pic\"\n+  \"(DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS) && flag_pic\"\n   \"\n {\n   if (!rs6000_pic_register)\n@@ -4842,7 +4842,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(unspec [(match_operand:SI 1 \"got_operand\" \"\")\n \t\t (match_operand:SI 2 \"register_operand\" \"b\")] 8))]\n-  \"DEFAULT_ABI == ABI_V4 && flag_pic == 1\"\n+  \"(DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS) && flag_pic == 1\"\n   \"{l|lwz} %0,%a1@got(%2)\"\n   [(set_attr \"type\" \"load\")])\n \n@@ -4855,7 +4855,7 @@\n    (set (match_operand:SI 0 \"register_operand\" \"\")\n \t(mem:SI (plus:SI (match_dup 3)\n \t\t\t (match_operand:SI 2 \"register_operand\" \"\"))))]\n-  \"DEFAULT_ABI == ABI_V4 && flag_pic > 1\"\n+  \"(DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS) && flag_pic > 1\"\n   \"\n {\n   if (reload_completed || reload_in_progress)\n@@ -4867,14 +4867,14 @@\n (define_insn \"*movsi_got_internal2_high\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=b\")\n \t(unspec [(match_operand:SI 1 \"got_operand\" \"\")] 9))]\n-  \"DEFAULT_ABI == ABI_V4 && flag_pic > 1\"\n+  \"(DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS) && flag_pic > 1\"\n   \"{cau|addis} %0,0,%1@got@ha\")\n \n (define_insn \"*movsi_got_internal2_losum\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(unspec [(match_operand:SI 1 \"got_operand\" \"\")\n \t\t (match_operand:SI 2 \"register_operand\" \"b\")] 10))]\n-  \"DEFAULT_ABI == ABI_V4 && flag_pic > 1\"\n+  \"(DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS) && flag_pic > 1\"\n   \"{cal %0,%a1@got@l(%2)|addi %0,%2,%a1@got@l}\")\n \n ;; For SI, we special-case integers that can't be loaded in one insn.  We\n@@ -4896,15 +4896,16 @@\n \n   /* Use default pattern for address of ELF small data */\n   if (TARGET_ELF\n-      && DEFAULT_ABI == ABI_V4\n+      && (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n       && (GET_CODE (operands[1]) == SYMBOL_REF || GET_CODE (operands[1]) == CONST)\n       && small_data_operand (operands[1], SImode))\n     {\n       emit_insn (gen_rtx (SET, VOIDmode, operands[0], operands[1]));\n       DONE;\n     }\n \n-  if (DEFAULT_ABI == ABI_V4 && flag_pic && got_operand (operands[1], SImode))\n+  if ((DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n+      && flag_pic && got_operand (operands[1], SImode))\n     {\n       emit_insn (gen_movsi_got (operands[0], operands[1]));\n       DONE;\n@@ -6821,7 +6822,7 @@\n \t (match_operand 1 \"const_int_operand\" \"n,n\"))\n    (use (match_operand 2 \"const_int_operand\" \"O,n\"))\n    (clobber (match_scratch:SI 3 \"=l,l\"))]\n-  \"DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_AIX_NODESC\"\n+  \"DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS || DEFAULT_ABI == ABI_AIX_NODESC\"\n   \"*\n {\n   if (INTVAL (operands[2]) & CALL_V4_SET_FP_ARGS)\n@@ -6841,7 +6842,7 @@\n \t      (match_operand 2 \"const_int_operand\" \"n,n\")))\n    (use (match_operand 3 \"const_int_operand\" \"O,n\"))\n    (clobber (match_scratch:SI 4 \"=l,l\"))]\n-  \"DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_AIX_NODESC\"\n+  \"DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS || DEFAULT_ABI == ABI_AIX_NODESC\"\n   \"*\n {\n   if (INTVAL (operands[3]) & CALL_V4_SET_FP_ARGS)\n@@ -6883,7 +6884,7 @@\n       if (INTVAL (operands[2]) & CALL_LONG)\n \toperands[0] = rs6000_longcall_ref (operands[0]);\n \n-      if (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_AIX_NODESC)\n+      if (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_AIX_NODESC || DEFAULT_ABI == ABI_SOLARIS)\n \temit_call_insn (gen_call_indirect_sysv (force_reg (Pmode, operands[0]),\n \t\t\t\t\t\toperands[1], operands[2]));\n       else\n@@ -6942,7 +6943,7 @@\n       if (INTVAL (operands[2]) & CALL_LONG)\n \toperands[1] = rs6000_longcall_ref (operands[1]);\n \n-      if (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_AIX_NODESC)\n+      if (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_AIX_NODESC || DEFAULT_ABI == ABI_SOLARIS)\n \temit_call_insn (gen_call_value_indirect_sysv (operands[0], operands[1],\n \t\t\t\t\t\t      operands[2], operands[3]));\n       else\n@@ -7036,7 +7037,7 @@\n \t (match_operand 1 \"\" \"fg,fg\"))\n    (use (match_operand:SI 2 \"immediate_operand\" \"O,n\"))\n    (clobber (match_scratch:SI 3 \"=l,l\"))]\n-  \"(DEFAULT_ABI == ABI_AIX_NODESC || DEFAULT_ABI == ABI_V4)\n+  \"(DEFAULT_ABI == ABI_AIX_NODESC || DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n    && (INTVAL (operands[2]) & CALL_LONG) == 0\"\n   \"*\n {\n@@ -7106,7 +7107,7 @@\n \t      (match_operand 2 \"\" \"fg,fg\")))\n    (use (match_operand:SI 3 \"immediate_operand\" \"O,n\"))\n    (clobber (match_scratch:SI 4 \"=l,l\"))]\n-  \"(DEFAULT_ABI == ABI_AIX_NODESC || DEFAULT_ABI == ABI_V4)\n+  \"(DEFAULT_ABI == ABI_AIX_NODESC || DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n    && (INTVAL (operands[3]) & CALL_LONG) == 0\"\n   \"*\n {\n@@ -7194,7 +7195,7 @@\n (define_insn \"init_v4_pic\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=l\")\n \t(unspec [(const_int 0)] 7))]\n-  \"DEFAULT_ABI == ABI_V4\"\n+  \"DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS\"\n   \"bl _GLOBAL_OFFSET_TABLE_-4\"\n   [(set_attr \"type\" \"branch\")])\n \n@@ -8795,7 +8796,8 @@\n   if (get_attr_length (insn) == 8)\n     return \\\"%C1bc %t1,%j1,%l0\\\";\n   else\n-    return \\\"%C1bc %T1,%j1,$+8\\;b %l0\\\";\n+    return \\\"%C1bc %T1,%j1,%$+8\\;b %l0\\\";\n+\n }\"\n   [(set_attr \"type\" \"branch\")])\n \n@@ -8826,7 +8828,7 @@\n   if (get_attr_length (insn) == 8)\n     return \\\"%C1bc %T1,%j1,%l0\\\";\n   else\n-    return \\\"%C1bc %t1,%j1,$+8\\;b %l0\\\";\n+    return \\\"%C1bc %t1,%j1,%$+8\\;b %l0\\\";\n }\"\n   [(set_attr \"type\" \"branch\")])\n \n@@ -8980,7 +8982,7 @@\n   else if (get_attr_length (insn) == 8)\n     return \\\"{bdn|bdnz} %l0\\\";\n   else\n-    return \\\"bdz $+8\\;b %l0\\\";\n+    return \\\"bdz %$+8\\;b %l0\\\";\n }\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"*,12,16\")])\n@@ -9004,7 +9006,7 @@\n   else if (get_attr_length (insn) == 8)\n     return \\\"bdz %l0\\\";\n   else\n-    return \\\"{bdn|bdnz} $+8\\;b %l0\\\";\n+    return \\\"{bdn|bdnz} %$+8\\;b %l0\\\";\n }\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"*,12,16\")])\n@@ -9029,7 +9031,7 @@\n   else if (get_attr_length (insn) == 8)\n     return \\\"{bdn|bdnz} %l0\\\";\n   else\n-    return \\\"bdz $+8\\;b %l0\\\";\n+    return \\\"bdz %$+8\\;b %l0\\\";\n }\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"*,12,16\")])\n@@ -9053,7 +9055,7 @@\n   else if (get_attr_length (insn) == 8)\n     return \\\"bdz %l0\\\";\n   else\n-    return \\\"{bdn|bdnz} $+8\\;b %l0\\\";\n+    return \\\"{bdn|bdnz} %$+8\\;b %l0\\\";\n }\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"*,12,16\")])\n@@ -9077,7 +9079,7 @@\n   else if (get_attr_length (insn) == 8)\n     return \\\"bdz %l0\\\";\n   else\n-    return \\\"{bdn|bdnz} $+8\\;b %l0\\\";\n+    return \\\"{bdn|bdnz} %$+8\\;b %l0\\\";\n }\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"*,12,16\")])\n@@ -9101,7 +9103,7 @@\n   else if (get_attr_length (insn) == 8)\n     return \\\"{bdn|bdnz} %l0\\\";\n   else\n-    return \\\"bdz $+8\\;b %l0\\\";\n+    return \\\"bdz %$+8\\;b %l0\\\";\n }\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"length\" \"*,12,16\")])"}, {"sha": "c42498a87960078aa087ca0414bb03381fd12d2f", "filename": "gcc/config/rs6000/sol-c0.c", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Fsol-c0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Fsol-c0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsol-c0.c?ref=c81bebd76d3fffc12823fb01a2bf7fc934d7b97e", "patch": "@@ -0,0 +1,65 @@\n+/* Solaris PowerPC startfile.  */\n+/* Copyright (C) 1996 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* As a special exception, if you link this library with other files,\n+   some of which are compiled with GCC, to produce an executable,\n+   this library does not by itself cause the resulting executable\n+   to be covered by the GNU General Public License.\n+   This exception does not however invalidate any other reasons why\n+   the executable file might be covered by the GNU General Public License.  */\n+\n+extern char **_environ;\n+\n+extern int atexit (void (*__func) (void));\n+extern void __init (void);\n+extern void __fini (void);\n+extern void __do_global_ctors (void);\n+\n+typedef void (*func_ptr) (void);\n+int (*__atexit)(func_ptr) = atexit;\n+\n+/* Start function.  */\n+\n+void\n+_start(int argc, char *argv[], char *envp[], void *auxp, void (*termfunc)())\n+{\n+  int ret;\n+\n+  _environ = envp;\n+\n+  /* Register loader termination function */\n+  if (termfunc)\n+    atexit (termfunc);\n+\n+  /* Call any global constructors and destructors.  */\n+  __do_global_ctors ();\n+\n+  /* Call the main program now */\n+  ret = main (argc, argv, envp, auxp);\n+\n+  /* Return to the os */\n+  exit (ret);\n+}\n+\n+/* Provide a dummy __eabi in case main got compiled without -mcall-solaris.  */\n+void\n+__eabi ()\n+{\n+}"}, {"sha": "71a3315aabd45ec8637dd9e81341f96d9016e7d7", "filename": "gcc/config/rs6000/sol-ci.asm", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Fsol-ci.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Fsol-ci.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsol-ci.asm?ref=c81bebd76d3fffc12823fb01a2bf7fc934d7b97e", "patch": "@@ -0,0 +1,70 @@\n+# crti.s for solaris\n+\n+#   Copyright (C) 1996 Free Software Foundation, Inc.\n+#   Written By Michael Meissner\n+# \n+# This file is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published by the\n+# Free Software Foundation; either version 2, or (at your option) any\n+# later version.\n+# \n+# In addition to the permissions in the GNU General Public License, the\n+# Free Software Foundation gives you unlimited permission to link the\n+# compiled version of this file with other programs, and to distribute\n+# those programs without any restriction coming from the use of this\n+# file.  (The General Public License restrictions do apply in other\n+# respects; for example, they cover modification of the file, and\n+# distribution when not linked into another program.)\n+# \n+# This file is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with this program; see the file COPYING.  If not, write to\n+# the Free Software Foundation, 59 Temple Place - Suite 330,\n+# Boston, MA 02111-1307, USA.\n+# \n+#    As a special exception, if you link this library with files\n+#    compiled with GCC to produce an executable, this does not cause\n+#    the resulting executable to be covered by the GNU General Public License.\n+#    This exception does not however invalidate any other reasons why\n+#    the executable file might be covered by the GNU General Public License.\n+# \n+\n+# This file just supplies labeled starting points for the .got* and other\n+# special sections.  It is linked in first before other modules.\n+ \n+\t.file\t\"scrti.s\"\n+\t.ident\t\"GNU C scrti.s\"\n+\n+# List of C++ constructors\n+\t.section \".ctors\",\"aw\"\n+\t.globl\t__CTOR_LIST__\n+\t.type\t__CTOR_LIST__,@object\n+__CTOR_LIST__:\n+\n+# List of C++ destructors\n+\t.section \".dtors\",\"aw\"\n+\t.globl\t__DTOR_LIST__\n+\t.type\t__DTOR_LIST__,@object\n+__DTOR_LIST__:\n+\n+# Head of __init function used for static constructors in Solaris\n+\t.section \".init\",\"ax\"\n+\t.align 2\n+\t.globl __init\n+\t.type __init,@function\n+__init:\tstwu %r1,-16(%r1)\n+\tmflr %r0\n+\tstw %r0,12(%r1)\n+\n+# Head of __fini function used for static destructors in Solaris\n+\t.section \".fini\",\"ax\"\n+\t.align 2\n+\t.globl __fini\n+\t.type __fini,@function\n+__fini:\tstwu %r1,-16(%r1)\n+\tmflr %r0\n+\tstw %r0,12(%r1)"}, {"sha": "d3a608364663a5cef70b4b8b53480adb509ac497", "filename": "gcc/config/rs6000/sol-cn.asm", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Fsol-cn.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Fsol-cn.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsol-cn.asm?ref=c81bebd76d3fffc12823fb01a2bf7fc934d7b97e", "patch": "@@ -0,0 +1,66 @@\n+# crtn.s for solaris\n+\n+#   Copyright (C) 1996 Free Software Foundation, Inc.\n+#   Written By Michael Meissner\n+# \n+# This file is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published by the\n+# Free Software Foundation; either version 2, or (at your option) any\n+# later version.\n+# \n+# In addition to the permissions in the GNU General Public License, the\n+# Free Software Foundation gives you unlimited permission to link the\n+# compiled version of this file with other programs, and to distribute\n+# those programs without any restriction coming from the use of this\n+# file.  (The General Public License restrictions do apply in other\n+# respects; for example, they cover modification of the file, and\n+# distribution when not linked into another program.)\n+# \n+# This file is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with this program; see the file COPYING.  If not, write to\n+# the Free Software Foundation, 59 Temple Place - Suite 330,\n+# Boston, MA 02111-1307, USA.\n+# \n+#    As a special exception, if you link this library with files\n+#    compiled with GCC to produce an executable, this does not cause\n+#    the resulting executable to be covered by the GNU General Public License.\n+#    This exception does not however invalidate any other reasons why\n+#    the executable file might be covered by the GNU General Public License.\n+# \n+\n+# This file just supplies labeled ending points for the .got* and other\n+# special sections.  It is linked in last after other modules.\n+ \n+\t.file\t\"scrtn.s\"\n+\t.ident\t\"GNU C scrtn.s\"\n+\n+# End list of C++ constructors\n+\t.section \".ctors\",\"aw\"\n+\t.globl\t__CTOR_END__\n+\t.type\t__CTOR_END__,@object\n+__CTOR_END__:\n+\n+# End list of C++ destructors\n+\t.section \".dtors\",\"aw\"\n+\t.globl\t__DTOR_END__\n+\t.type\t__DTOR_END__,@object\n+__DTOR_END__:\n+\n+# Tail of __init used for static constructors in Solaris\n+\t.section \".init\",\"ax\"\n+\tlwz %r0,12(%r1)\n+\tmtlr %r0\n+\taddi %r1,%r1,16\n+\tblr\n+\n+# Tail of __fini used for static destructors in Solaris\n+\t.section \".fini\",\"ax\"\n+\tlwz %r0,12(%r1)\n+\tmtlr %r0\n+\taddi %r1,%r1,16\n+\tblr"}, {"sha": "700640b7ff35942dbefc1e2377338e8393d2f886", "filename": "gcc/config/rs6000/sol2.h", "status": "added", "additions": 175, "deletions": 0, "changes": 175, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsol2.h?ref=c81bebd76d3fffc12823fb01a2bf7fc934d7b97e", "patch": "@@ -0,0 +1,175 @@\n+/* Definitions of target machine for GNU compiler,\n+   for IBM RS/6000 running AIX version 3.1.\n+   Copyright (C) 1993 Free Software Foundation, Inc.\n+   Contributed by Richard Kenner (kenner@nyu.edu)\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#include \"rs6000/sysv4le.h\"\n+\n+#undef CPP_PREDEFINES\n+#define CPP_PREDEFINES \\\n+ \"-Dsun=1 -Dunix -D__svr4__ -DSVR4 -DPPC \\\n+  -D__ppc -Asystem(unix) -Asystem(svr4) -Acpu(powerpc) -Amachine(prep)\"\n+\n+#undef ASM_CPU_SPEC\n+#define ASM_CPU_SPEC \"%{fpic:-K PIC} %{fPIC:-K PIC} -le -s\"\n+\n+/* This should be the same as in svr4.h, except with -R added.  */\n+#undef LINK_SPEC\n+#define LINK_SPEC \\\n+  \"%{h*} %{v:-V} %{G*} \\\n+   %{b} %{Wl,*:%*} \\\n+   %{static:-dn -Bstatic} \\\n+   %{shared:-G -dy -z text %{!h*:%{o*:-h %*}}} \\\n+   %{symbolic:-Bsymbolic -G -dy -z text %{!h*:%{o*:-h %*}}} \\\n+   %{G:-G} \\\n+   %{YP,*} \\\n+   %{R*} %{!static:%{!R*:%{L*:-R %*}}} \\\n+   %{compat-bsd: \\\n+     %{!YP,*:%{p:-Y P,/usr/ucblib:/usr/ccs/lib/libp:/usr/lib/libp:/usr/ccs/lib:/usr/lib} \\\n+       %{!p:-Y P,/usr/ucblib:/usr/ccs/lib:/usr/lib}} \\\n+     -R /usr/ucblib} \\\n+   %{!compat-bsd: \\\n+     %{!YP,*:%{p:-Y P,/usr/ccs/lib/libp:/usr/lib/libp:/usr/ccs/lib:/usr/lib} \\\n+       %{!p:-Y P,/usr/ccs/lib:/usr/lib}}} \\\n+   %{Qy:} %{!Qn:-Qy}\"\n+\n+/* This defines which switch letters take arguments.\n+   It is as in svr4.h but with -R added.  */\n+\n+#undef TARGET_DEFAULT\n+#define TARGET_DEFAULT (MASK_POWERPC | \\\n+\t\t\tMASK_NEW_MNEMONICS | \\\n+\t\t\tMASK_LITTLE_ENDIAN | \\\n+\t\t\tMASK_NO_MAIN_INIT | \\\n+\t\t\tMASK_REGNAMES)\n+\n+#undef\tLIB_DEFAULT_SPEC\n+#define LIB_DEFAULT_SPEC LIB_SOLARIS_SPEC\n+\n+#undef\tSTARTFILE_DEFAULT_SPEC\n+#define STARTFILE_DEFAULT_SPEC STARTFILE_SOLARIS_SPEC\n+\n+#undef\tENDFILE_DEFAULT_SPEC\n+#define ENDFILE_DEFAULT_SPEC ENDFILE_SOLARIS_SPEC\n+\n+#undef\tLINK_START_DEFAULT_SPEC\n+#define LINK_START_DEFAULT_SPEC LINK_START_SOLARIS_SPEC\n+\n+/* Don't turn -B into -L if the argument specifies a relative file name.  */\n+#undef\tRELATIVE_PREFIX_NOT_LINKDIR\n+\n+#define\tDEFAULT_PCC_STRUCT_RETURN 0\n+\n+#undef TARGET_VERSION\n+#define TARGET_VERSION fprintf (stderr, \" (PowerPC Solaris)\");\n+\n+\f\n+/* Macros to check register numbers against specific register classes.  */\n+\n+#undef\tPREFERRED_DEBUGGING_TYPE\n+#define\tPREFERRED_DEBUGGING_TYPE DBX_DEBUG\n+\n+\n+#undef\tASM_OUTPUT_ALIGNED_LOCAL\n+#define ASM_OUTPUT_ALIGNED_LOCAL(FILE, NAME, SIZE, ALIGN)\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  fprintf ((FILE), \"\\t%s\\t\", \".lcomm\");\t\t\t\t\t\\\n+  assemble_name ((FILE), (NAME));\t\t\t\t\t\\\n+  fprintf ((FILE), \",%u,%u\\n\", (SIZE), (ALIGN) / BITS_PER_UNIT);\t\\\n+} while (0)\n+\n+\n+/* Like block addresses, stabs line numbers are relative to the\n+   current function.  */\n+\n+/* use .stabd instead of .stabn */\n+\n+#define\tASM_STABN_OP\t\".stabd\"\n+\n+#undef\tSKIP_ASM_OP\n+#define\tSKIP_ASM_OP\t\".skip\"\n+\n+#undef  ASM_OUTPUT_SOURCE_LINE\n+#define ASM_OUTPUT_SOURCE_LINE(file, line)\t\t\t\t\\\n+do\t\t\t\t\t\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\t\t\\\n+    static int sym_lineno = 1;\t\t\t\t\t\t\\\n+    char *_p;\t\t\t\t\t\t\t\t\\\n+    fprintf (file, \"\\t.stabd 68,0,%d,.LM%d-\",\t\t\t\t\\\n+\t     line, sym_lineno);\t\t\t\t\t\t\\\n+    STRIP_NAME_ENCODING (_p, XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0)); \\\n+    assemble_name (file, _p);\t\t\t\t\t\t\\\n+    fprintf (file, \"\\n.LM%d:\\n\", sym_lineno);\t\t\t\t\\\n+    sym_lineno += 1;\t\t\t\t\t\t\t\\\n+  }\t\t\t\t\t\t\t\t\t\\\n+while (0)\n+\n+/* This is how to output an assembler line defining a `double' constant.  */\n+\n+#undef\tASM_OUTPUT_DOUBLE\n+#define ASM_OUTPUT_DOUBLE(FILE, VALUE)\t\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\t\t\\\n+    if (REAL_VALUE_ISINF (VALUE)\t\t\t\t\t\\\n+        || REAL_VALUE_ISNAN (VALUE)\t\t\t\t\t\\\n+\t|| REAL_VALUE_MINUS_ZERO (VALUE))\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tlong t[2];\t\t\t\t\t\t\t\\\n+\tREAL_VALUE_TO_TARGET_DOUBLE ((VALUE), t);\t\t\t\\\n+\tfprintf (FILE, \"\\t.long 0x%lx\\n\\t.long 0x%lx\\n\",\t\t\\\n+\t\tt[0] & 0xffffffff, t[1] & 0xffffffff);\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+    else\t\t\t\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tchar str[30];\t\t\t\t\t\t\t\\\n+\tREAL_VALUE_TO_DECIMAL (VALUE, \"%.20e\", str);\t\t\t\\\n+\tfprintf (FILE, \"\\t.double %s\\n\", str);\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+  }\n+\n+/* This is how to output an assembler line defining a `float' constant.  */\n+\n+#undef\tASM_OUTPUT_FLOAT\n+#define ASM_OUTPUT_FLOAT(FILE, VALUE)\t\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\t\t\\\n+    if (REAL_VALUE_ISINF (VALUE)\t\t\t\t\t\\\n+        || REAL_VALUE_ISNAN (VALUE)\t\t\t\t\t\\\n+\t|| REAL_VALUE_MINUS_ZERO (VALUE))\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tlong t;\t\t\t\t\t\t\t\t\\\n+\tREAL_VALUE_TO_TARGET_SINGLE ((VALUE), t);\t\t\t\\\n+\tfprintf (FILE, \"\\t.long 0x%lx\\n\", t & 0xffffffff);\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+    else\t\t\t\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tchar str[30];\t\t\t\t\t\t\t\\\n+\tREAL_VALUE_TO_DECIMAL ((VALUE), \"%.20e\", str);\t\t\t\\\n+\tfprintf (FILE, \"\\t.float %s\\n\", str);\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+  }\n+\n+\f\n+/* Sun-ppc assembler does not permit '.' in some symbol names.\n+   Use 'name_.labelno' instead. */\n+#undef ASM_FORMAT_PRIVATE_NAME\n+#define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)\t\\\n+( (OUTPUT) = (char *) alloca (strlen ((NAME)) + 10),\t\\\n+  sprintf ((OUTPUT), \"%s_.%d\", (NAME), (LABELNO))) \n+\n+#define ASM_RELOCATION_EXPRESSIONS 1\n+"}, {"sha": "0b3de6093a6dd2f3e553c13acb0fd929f6b8be7f", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 412, "deletions": 69, "changes": 481, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=c81bebd76d3fffc12823fb01a2bf7fc934d7b97e", "patch": "@@ -27,22 +27,18 @@ Boston, MA 02111-1307, USA.  */\n #define MASK_RELOCATABLE\t0x10000000\t/* GOT pointers are PC relative */\n #define\tMASK_SDATA\t\t0x08000000\t/* use eabi .sdata/.sdata2/.sbss relocations */\n #define MASK_LITTLE_ENDIAN\t0x04000000\t/* target is little endian */\n-#define MASK_CALLS_1\t\t0x02000000\t/* First ABI bit (AIX, AIXDESC) */\n+#define MASK_REGNAMES\t\t0x02000000\t/* use alternate register names.  */\n #define MASK_PROTOTYPE\t\t0x01000000\t/* Only prototyped fcns pass variable args */\n-#define\tMASK_CALLS_2\t\t0x00800000\t/* Second ABI bit (NT) */\n-\n-#define\tMASK_CALLS\t\t(MASK_CALLS_1 | MASK_CALLS_2)\n-#define\tMASK_CALLS_V4\t\t0\n-#define\tMASK_CALLS_AIX\t\tMASK_CALLS_1\n-#define\tMASK_CALLS_NT\t\tMASK_CALLS_2\n-#define\tMASK_CALLS_AIXDESC\tMASK_CALLS\n+#define\tMASK_EABI\t\t0x00800000\t/* Adhere to eabi, not System V spec */\n \n #define\tTARGET_NO_BITFIELD_TYPE\t(target_flags & MASK_NO_BITFIELD_TYPE)\n #define TARGET_STRICT_ALIGN\t(target_flags & MASK_STRICT_ALIGN)\n #define TARGET_RELOCATABLE\t(target_flags & MASK_RELOCATABLE)\n #define TARGET_SDATA\t\t(target_flags & MASK_SDATA)\n #define TARGET_LITTLE_ENDIAN\t(target_flags & MASK_LITTLE_ENDIAN)\n+#define TARGET_REGNAMES\t\t(target_flags & MASK_REGNAMES)\n #define\tTARGET_PROTOTYPE\t(target_flags & MASK_PROTOTYPE)\n+#define TARGET_EABI\t\t(target_flags & MASK_EABI)\n #define\tTARGET_TOC\t\t((target_flags & (MASK_64BIT\t\t\\\n \t\t\t\t\t\t | MASK_RELOCATABLE\t\\\n \t\t\t\t\t\t | MASK_MINIMAL_TOC))\t\\\n@@ -53,11 +49,7 @@ Boston, MA 02111-1307, USA.  */\n #define TARGET_BIG_ENDIAN\t(! TARGET_LITTLE_ENDIAN)\n #define\tTARGET_NO_PROTOTYPE\t(! TARGET_PROTOTYPE)\n #define\tTARGET_NO_TOC\t\t(! TARGET_TOC)\n-\n-#define TARGET_AIX_CALLS\t(target_flags & MASK_CALLS_1)\t/* either -mcall-aix or -mcall-aixdesc */\n-#define TARGET_V4_CALLS\t\t((target_flags & MASK_CALLS) == MASK_CALLS_V4)\n-#define TARGET_NT_CALLS\t\t((target_flags & MASK_CALLS) == MASK_CALLS_NT)\n-#define TARGET_AIXDESC_CALLS\t((target_flags & MASK_CALLS) == MASK_CALLS_AIXDESC)\n+#define TARGET_NO_EABI\t\t(! TARGET_EABI)\n \n /* Pseudo target to indicate whether the object format is ELF\n    (to get around not having conditional compilation in the md file)  */\n@@ -85,19 +77,25 @@ Boston, MA 02111-1307, USA.  */\n   { \"no-toc\",\t\t 0 },\t\t\t\t\t\t\\\n   { \"toc\",\t\t MASK_MINIMAL_TOC },\t\t\t\t\\\n   { \"full-toc\",\t\t MASK_MINIMAL_TOC },\t\t\t\t\\\n-  { \"call-aix\",\t\t MASK_CALLS_AIX },\t\t\t\t\\\n-  { \"call-aix\",\t\t-MASK_CALLS_NT },\t\t\t\t\\\n-  { \"call-aixdesc\",\t MASK_CALLS_AIXDESC },\t\t\t\t\\\n-  { \"call-aixdesc\",\t-MASK_LITTLE_ENDIAN },\t\t\t\t\\\n-  { \"call-sysv\",\t-MASK_CALLS },\t\t\t\t\t\\\n-  { \"call-nt\",\t\t MASK_CALLS_NT | MASK_LITTLE_ENDIAN },\t\t\\\n-  { \"call-nt\",\t\t-MASK_CALLS_AIX },\t\t\t\t\\\n   { \"prototype\",\t MASK_PROTOTYPE },\t\t\t\t\\\n   { \"no-prototype\",\t-MASK_PROTOTYPE },\t\t\t\t\\\n   { \"no-traceback\",\t 0 },\t\t\t\t\t\t\\\n+  { \"eabi\",\t\t MASK_EABI },\t\t\t\t\t\\\n+  { \"no-eabi\",\t\t-MASK_EABI },\t\t\t\t\t\\\n+  { \"regnames\",\t\t  MASK_REGNAMES },\t\t\t\t\\\n+  { \"no-regnames\",\t -MASK_REGNAMES },\t\t\t\t\\\n   { \"sim\",\t\t 0 },\t\t\t\t\t\t\\\n   { \"mvme\",\t\t 0 },\t\t\t\t\t\t\\\n   { \"emb\",\t\t 0 },\t\t\t\t\t\t\\\n+  { \"newlib\",\t\t 0 },\n+\n+/* Which abi to adhere to */\n+extern char *rs6000_abi_name;\n+\n+/* Default ABI to use */\n+#define RS6000_ABI_NAME \"sysv\"\n+\n+#define SUBTARGET_OPTIONS {\"call-\",  &rs6000_abi_name}\n \n /* Max # of bytes for variables to automatically be put into the .sdata\n    or .sdata2 sections.  */\n@@ -122,18 +120,43 @@ do {\t\t\t\t\t\t\t\t\t\\\n   if (!g_switch_set)\t\t\t\t\t\t\t\\\n     g_switch_value = SDATA_DEFAULT_SIZE;\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  rs6000_current_abi = ((TARGET_AIXDESC_CALLS) ? ABI_AIX :\t\t\\\n-\t\t\t(TARGET_NT_CALLS)      ? ABI_NT :\t\t\\\n-\t\t\t(TARGET_AIX_CALLS)     ? ABI_AIX_NODESC :\t\\\n-\t\t\t\t\t\t ABI_V4);\t\t\\\n+  if (!strcmp (rs6000_abi_name, \"sysv\"))\t\t\t\t\\\n+    rs6000_current_abi = ABI_V4;\t\t\t\t\t\\\n+  else if (!strcmp (rs6000_abi_name, \"sysv-noeabi\"))\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      rs6000_current_abi = ABI_V4;\t\t\t\t\t\\\n+      target_flags &= ~ MASK_EABI;\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  else if (!strcmp (rs6000_abi_name, \"sysv-eabi\")\t\t\t\\\n+\t   || !strcmp (rs6000_abi_name, \"eabi\"))\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      rs6000_current_abi = ABI_V4;\t\t\t\t\t\\\n+      target_flags |= MASK_EABI;\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  else if (!strcmp (rs6000_abi_name, \"aix\"))\t\t\t\t\\\n+    rs6000_current_abi = ABI_AIX_NODESC;\t\t\t\t\\\n+  else if (!strcmp (rs6000_abi_name, \"aixdesc\"))\t\t\t\\\n+    rs6000_current_abi = ABI_AIX;\t\t\t\t\t\\\n+  else if (!strcmp (rs6000_abi_name, \"nt\"))\t\t\t\t\\\n+    rs6000_current_abi = ABI_NT;\t\t\t\t\t\\\n+  else if (!strcmp (rs6000_abi_name, \"linux\"))\t\t\t\t\\\n+    rs6000_current_abi = ABI_V4;\t\t\t\t\t\\\n+  else if (!strcmp (rs6000_abi_name, \"solaris\"))\t\t\t\\\n+    rs6000_current_abi = ABI_SOLARIS;\t\t\t\t\t\\\n+  else\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      rs6000_current_abi = ABI_V4;\t\t\t\t\t\\\n+      error (\"Bad value for -mcall-%s\", rs6000_abi_name);\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   if (TARGET_RELOCATABLE && TARGET_SDATA)\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       target_flags &= ~MASK_SDATA;\t\t\t\t\t\\\n       error (\"-mrelocatable and -msdata are incompatible.\");\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_SDATA && DEFAULT_ABI != ABI_V4)\t\t\t\t\\\n+  if (TARGET_SDATA && DEFAULT_ABI != ABI_V4\t\t\t\t\\\n+      && DEFAULT_ABI != ABI_SOLARIS)\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       target_flags &= ~MASK_SDATA;\t\t\t\t\t\\\n       error (\"-msdata and -mcall-aix are incompatible.\");\t\t\\\n@@ -145,25 +168,21 @@ do {\t\t\t\t\t\t\t\t\t\\\n       error (\"-mrelocatable and -mno-minimal-toc are incompatible.\");\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_RELOCATABLE && TARGET_AIXDESC_CALLS)\t\t\t\\\n+  if (TARGET_RELOCATABLE &&\t\t\t\t\t\t\\\n+      (rs6000_current_abi == ABI_AIX || rs6000_current_abi == ABI_NT))\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       target_flags &= ~MASK_RELOCATABLE;\t\t\t\t\\\n-      error (\"-mrelocatable and -mcall-aixdesc are incompatible.\");\t\\\n+      error (\"-mrelocatable and -mcall-%s are incompatible.\",\t\t\\\n+\t     rs6000_abi_name);\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_RELOCATABLE && TARGET_NT_CALLS)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      target_flags &= ~MASK_MINIMAL_TOC;\t\t\t\t\\\n-      error (\"-mrelocatable and -mcall-nt are incompatible.\");\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_AIXDESC_CALLS && TARGET_LITTLE_ENDIAN)\t\t\t\\\n+  if (rs6000_current_abi == ABI_AIX && TARGET_LITTLE_ENDIAN)\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       target_flags &= ~MASK_LITTLE_ENDIAN;\t\t\t\t\\\n       error (\"-mcall-aixdesc must be big endian\");\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_NT_CALLS && TARGET_BIG_ENDIAN)\t\t\t\t\\\n+  if (rs6000_current_abi == ABI_NT && TARGET_BIG_ENDIAN)\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       target_flags |= MASK_LITTLE_ENDIAN;\t\t\t\t\\\n       error (\"-mcall-nt must be little endian\");\t\t\t\\\n@@ -184,7 +203,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* System V.4 passes the first 8 floating arguments in registers,\n    instead of the first 13 like AIX does.  */\n #undef\tFP_ARG_MAX_REG\n-#define\tFP_ARG_MAX_REG ((TARGET_AIX_CALLS) ? FP_ARG_AIX_MAX_REG : FP_ARG_V4_MAX_REG)\n+#define\tFP_ARG_MAX_REG ((DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_AIX_NODESC) \\\n+\t\t\t? FP_ARG_AIX_MAX_REG : FP_ARG_V4_MAX_REG)\n \n /* Size of the V.4 varargs area if needed */\n #undef\tRS6000_VARARGS_AREA\n@@ -206,13 +226,16 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* Size of the outgoing register save area */\n #undef\tRS6000_REG_SAVE\n-#define RS6000_REG_SAVE (TARGET_AIX_CALLS ? (TARGET_64BIT ? 64 : 32) : 0)\n+#define RS6000_REG_SAVE ((DEFAULT_ABI == ABI_AIX\t\t\t\\\n+\t\t\t  || DEFAULT_ABI == ABI_AIX_NODESC)\t\t\\\n+\t\t\t ? (TARGET_64BIT ? 64 : 32)\t\t\t\\\n+\t\t\t : 0)\n \n /* Size of the fixed area on the stack.  For AIX, use the standard 6 word\n    area, otherwise use 2 words to store back chain & LR.  */\n #undef\tRS6000_SAVE_AREA\n #define RS6000_SAVE_AREA \\\n-  ((TARGET_AIX_CALLS ? 24 : 8) << (TARGET_64BIT ? 1 : 0))\n+  (((DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_AIX_NODESC) ? 24 : 8) << (TARGET_64BIT ? 1 : 0))\n \n /* Define cutoff for using external functions to save floating point.\n    Currently on V.4, always use inline stores */\n@@ -270,16 +293,31 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef\tWCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 16\n \n-/* Align stack to 16 byte boundaries */\n+/* Make int foo : 8 not cause structures to be aligned to an int boundary */\n+\n+#undef\tPCC_BITFIELD_TYPE_MATTERS\n+#define\tPCC_BITFIELD_TYPE_MATTERS (TARGET_BITFIELD_TYPE)\n+\n+/* Define this macro to be the value 1 if instructions will fail to\n+   work if given data not on the nominal alignment.  If instructions\n+   will merely go slower in that case, define this macro as 0.\n+\n+   Note, little endian systems trap on unaligned addresses, so never\n+   turn off strict alignment in that case. */\n+#undef\tSTRICT_ALIGNMENT\n+#define\tSTRICT_ALIGNMENT (TARGET_STRICT_ALIGN || TARGET_LITTLE_ENDIAN)\n+\n+/* Align stack to 8 byte boundaries for eabi, 16 byte boundaries for System V.4  */\n #undef\tSTACK_BOUNDARY\n-#define\tSTACK_BOUNDARY\t128\n+#define\tSTACK_BOUNDARY\t((TARGET_EABI) ? 64 : 128)\n \n /* No data type wants to be aligned rounder than this.  */\n #undef\tBIGGEST_ALIGNMENT\n+#define BIGGEST_ALIGNMENT ((TARGET_EABI) ? 64 : 128)\n+\n #undef  BIGGEST_FIELD_ALIGNMENT\n #undef  ADJUST_FIELD_ALIGN\n #undef  ROUND_TYPE_ALIGN\n-#define BIGGEST_ALIGNMENT 128\n \n /* Use ELF style section commands.  */\n \n@@ -292,9 +330,32 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef BSS_SECTION_ASM_OP\n #define BSS_SECTION_ASM_OP\t\"\\t.section \\\".bss\\\"\"\n \n+#undef INIT_SECTION_ASM_OP\n+#define INIT_SECTION_ASM_OP \"\\t.section \\\".init\\\",\\\"ax\\\"\"\n+\n+#undef FINI_SECTION_ASM_OP\n+#define FINI_SECTION_ASM_OP \"\\t.section \\\".fini\\\",\\\"ax\\\"\"\n+\n+#define TOC_SECTION_ASM_OP \"\\t.section \\\".got\\\",\\\"aw\\\"\"\n+\n+/* Put PC relative got entries in .got2 */\n+#define MINIMAL_TOC_SECTION_ASM_OP \\\n+  ((TARGET_RELOCATABLE) ? \"\\t.section\\t\\\".got2\\\",\\\"aw\\\"\" : \"\\t.section\\t\\\".got1\\\",\\\"aw\\\"\")\n+\n+/* Put relocatable data in .data, not .rodata so initialized pointers can be updated */\n+#undef\tCONST_SECTION_ASM_OP\n+#define CONST_SECTION_ASM_OP \\\n+  ((TARGET_RELOCATABLE) ? \"\\t.section\\t\\\".data\\\"\\t# .rodata\" : \"\\t.section\\t\\\".rodata\\\"\")\n+\n+\n+#define SDATA_SECTION_ASM_OP \"\\t.section \\\".sdata\\\",\\\"aw\\\"\"\n+#define SDATA2_SECTION_ASM_OP \"\\t.section \\\".sdata2\\\",\\\"a\\\"\"\n+#define SBSS_SECTION_ASM_OP \"\\t.section \\\".sbss\\\",\\\"aw\\\",@nobits\"\n+\n+\n /* Besides the usual ELF sections, we need a toc section.  */\n #undef EXTRA_SECTIONS\n-#define EXTRA_SECTIONS in_const, in_ctors, in_dtors, in_toc, in_sdata, in_sdata2, in_sbss\n+#define EXTRA_SECTIONS in_const, in_ctors, in_dtors, in_toc, in_sdata, in_sdata2, in_sbss, in_init, in_fini\n \n #undef EXTRA_SECTION_FUNCTIONS\n #define EXTRA_SECTION_FUNCTIONS\t\t\t\t\t\t\\\n@@ -304,7 +365,9 @@ do {\t\t\t\t\t\t\t\t\t\\\n   TOC_SECTION_FUNCTION\t\t\t\t\t\t\t\\\n   SDATA_SECTION_FUNCTION\t\t\t\t\t\t\\\n   SDATA2_SECTION_FUNCTION\t\t\t\t\t\t\\\n-  SBSS_SECTION_FUNCTION\n+  SBSS_SECTION_FUNCTION\t\t\t\t\t\t\t\\\n+  INIT_SECTION_FUNCTION\t\t\t\t\t\t\t\\\n+  FINI_SECTION_FUNCTION\n \n extern void toc_section (), sdata_section (), sdata2_section ();\n extern void sbss_section ();\n@@ -355,13 +418,6 @@ toc_section ()\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n }\n \n-#define TOC_SECTION_ASM_OP \"\\t.section \\\".got\\\",\\\"aw\\\"\"\n-#define MINIMAL_TOC_SECTION_ASM_OP \"\\t.section \\\".got1\\\",\\\"aw\\\"\"\n-\n-#define SDATA_SECTION_ASM_OP \"\\t.section \\\".sdata\\\",\\\"aw\\\"\"\n-#define SDATA2_SECTION_ASM_OP \"\\t.section \\\".sdata2\\\",\\\"a\\\"\"\n-#define SBSS_SECTION_ASM_OP \"\\t.section \\\".sbss\\\",\\\"aw\\\",@nobits\"\n-\n #define SDATA_SECTION_FUNCTION\t\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\t\\\n sdata_section ()\t\t\t\t\t\t\t\\\n@@ -395,6 +451,28 @@ sbss_section ()\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n }\n \n+#define INIT_SECTION_FUNCTION\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\t\\\n+init_section ()\t\t\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (in_section != in_init)\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      in_section = in_init;\t\t\t\t\t\t\\\n+      fprintf (asm_out_file, \"%s\\n\", INIT_SECTION_ASM_OP);\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+}\n+\n+#define FINI_SECTION_FUNCTION\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\t\\\n+fini_section ()\t\t\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (in_section != in_fini)\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      in_section = in_fini;\t\t\t\t\t\t\\\n+      fprintf (asm_out_file, \"%s\\n\", FINI_SECTION_ASM_OP);\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+}\n+\n /* A C statement or statements to switch to the appropriate section\n    for output of RTX in mode MODE.  You can assume that RTX is some\n    kind of constant in RTL.  The argument MODE is redundant except in\n@@ -509,6 +587,13 @@ extern int rs6000_pic_labelno;\n #define ASM_OUTPUT_INTERNAL_LABEL_PREFIX(FILE,PREFIX)\t\\\n   fprintf (FILE, \".%s\", PREFIX)\n \n+/* This is how to allocate empty space in some section.  Use .space\n+   instead of .zero because the Solaris PowerPC assembler doesn't\n+   like it, and gas accepts either syntax.  */\n+\n+#undef\tSKIP_ASM_OP\n+#define SKIP_ASM_OP\t\".space\"\n+\n /* This says how to output assembler code to declare an\n    uninitialized internal linkage data object.  Under SVR4,\n    the linker seems to want the alignment of data objects\n@@ -538,17 +623,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n   ASM_OUTPUT_ALIGNED_LOCAL (FILE, NAME, SIZE, ALIGN);\t\t\t\\\n } while (0)\n \n-/* Pass various options to the assembler */\n-#undef ASM_SPEC\n-#define ASM_SPEC \"-u %(asm_cpu) \\\n-%{v:-V} %{Qy:} %{!Qn:-Qy} %{n} %{T} %{Ym,*} %{Yd,*} %{Wa,*:%*} \\\n-%{mrelocatable} %{mrelocatable-lib} %{memb} %{msdata: -memb} \\\n-%{mlittle} %{mlittle-endian} %{mbig} %{mbig-endian}\"\n-\n-#undef CC1_SPEC\n-/* Pass -G xxx to the compiler */\n-#define CC1_SPEC \"%{G*}\"\n-\n /* Switch  Recognition by gcc.c.  Add -G xx support */\n \n #undef SWITCH_TAKES_ARG\n@@ -624,8 +698,11 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* This is the end of what might become sysv4.h.  */\n \n-/* Allow stabs and dwarf, prefer dwarf.  */\n-#define PREFERRED_DEBUGGING_TYPE DWARF_DEBUG\n+/* Allow stabs and dwarf, for now, make stabs the default debugging type,\n+   not dwarf since G++ doesn't support dwarf. */\n+#undef\tPREFERRED_DEBUGGING_TYPE\n+#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n+\n #define\tDBX_DEBUGGING_INFO\n #define\tDWARF_DEBUGGING_INFO\n \n@@ -656,7 +733,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n \t    XSTR (sym_ref, 0) = str;\t\t\t\t\t\\\n \t  }\t\t\t\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n-    else if (TARGET_SDATA && DEFAULT_ABI == ABI_V4\t\t\t\\\n+    else if (TARGET_SDATA\t\t\t\t\t\t\\\n+\t     && (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\t\\\n \t     && TREE_CODE (DECL) == VAR_DECL)\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n \tint size = int_size_in_bytes (TREE_TYPE (DECL));\t\t\\\n@@ -707,6 +785,31 @@ do {\t\t\t\t\t\t\t\t\t\\\n   fputs (_name, FILE);\t\t\t\t\t\t\t\\\n } while (0)\n \n+#if 0\n+/* The Solaris 2.51 linker has a bug in that it doesn't properly\n+   resolve references from the .init and .fini sections.  So fall\n+   back to the old way of handling constructors and destructors.  */\n+#undef ASM_OUTPUT_CONSTRUCTOR\n+#define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    init_section ();\t\t\t\t\t\t\t\\\n+    fputs (\"\\tbl \", FILE);\t\t\t\t\t\t\\\n+    assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n+    fputs ((flag_pic) ? \"@plt\\n\" : \"\\n\", FILE);\t\t\t\t\\\n+  } while (0)\n+\n+/* A C statement (sans semicolon) to output an element in the table of\n+   global destructors.  */\n+#undef ASM_OUTPUT_DESTRUCTOR\n+#define ASM_OUTPUT_DESTRUCTOR(FILE,NAME)       \t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    fini_section ();\t\t\t\t\t\t\t\\\n+    fputs (\"\\tbl \", FILE);\t\t\t\t\t\t\\\n+    assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n+    fputs ((flag_pic) ? \"@plt\\n\" : \"\\n\", FILE);\t\t\t\t\\\n+  } while (0)\n+#endif\n+\n /* But, to make this work, we have to output the stabs for the function\n    name *first*...  */\n \n@@ -721,6 +824,29 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define CPP_PREDEFINES \\\n   \"-DPPC -Dunix -D__svr4__ -Asystem(unix) -Asystem(svr4) -Acpu(powerpc) -Amachine(powerpc)\"\n \n+/* Pass various options to the assembler */\n+#undef ASM_SPEC\n+#define ASM_SPEC \"-u %(asm_cpu) %{mregnames} \\\n+%{v:-V} %{Qy:} %{!Qn:-Qy} %{n} %{T} %{Ym,*} %{Yd,*} %{Wa,*:%*} \\\n+%{mrelocatable} %{mrelocatable-lib} %{memb} %{msdata: -memb} \\\n+%{mlittle} %{mlittle-endian} %{mbig} %{mbig-endian} \\\n+%{!mlittle: %{!mlittle-endian: %{!mbig: %{!mbig-endian: \\\n+    %{mcall-solaris: -mlittle} %{mcall-linux: -mbig} }}}}\"\n+\n+#undef CC1_SPEC\n+/* Pass -G xxx to the compiler and set correct endian mode */\n+#define CC1_SPEC \"%{G*} \\\n+%{!mlittle: %{!mlittle-endian: %{!mbig: %{!mbig-endian: \\\n+    %{mcall-nt: -mlittle } \\\n+    %{mcall-aixdesc: -mbig } \\\n+    %{mcall-solaris: -mlittle } \\\n+    %{mcall-linux: -mbig} }}}} \\\n+%{mcall-solaris: -mno-main-init -mregnames } \\\n+%{meabi: %{!mcall-*: -mcall-sysv }} \\\n+%{!meabi: %{!mno-eabi: \\\n+    %{mcall-solaris: -mno-eabi } \\\n+    %{mcall-linux: -mno-eabi }}}\"\n+\n /* Don't put -Y P,<path> for cross compilers */\n #undef LINK_PATH_SPEC\n #ifndef CROSS_COMPILE\n@@ -732,6 +858,20 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define LINK_PATH_SPEC \"\"\n #endif\n \n+/* Default starting address if specified */\n+#ifndef LINK_START_SPEC\n+#define LINK_START_SPEC \"\\\n+%{mmvme: %(link_start_mvme) } \\\n+%{msim: %(link_start_sim) } \\\n+%{mcall-linux: %(link_start_linux) } \\\n+%{mcall-solaris: %(link_start_solaris) } \\\n+%{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(link_start_default) }}}}\"\n+#endif\n+\n+#ifndef\tLINK_START_DEFUALT_SPEC\n+#define LINK_START_DEFUALT_SPEC \"\"\n+#endif\n+\n #undef LINK_SPEC\n #define LINK_SPEC \"\\\n %{h*} %{v:-V} %{G*} \\\n@@ -741,10 +881,15 @@ do {\t\t\t\t\t\t\t\t\t\\\n %{symbolic:-Bsymbolic -G -dy -z text %{!h*:%{o*:-h %*}}} \\\n %{G:-G} \\\n %{YP,*} \\\n-%(link_path) %(link_start) \\\n+%(link_path) \\\n+%{!Ttext*: %(link_start) } \\\n %{Qy:} %{!Qn:-Qy} \\\n %{mlittle: -oformat elf32-powerpcle } %{mlittle-endian: -oformat elf32-powerpcle } \\\n-%{mbig: -oformat elf32-powerpc } %{mbig-endian: -oformat elf32-powerpc }\"\n+%{mbig: -oformat elf32-powerpc } %{mbig-endian: -oformat elf32-powerpc } \\\n+%{!mlittle: %{!mlittle-endian: %{!mbig: %{!mbig-endian: \\\n+    %{mcall-solaris: -oformat elf32-powerpcle} \\\n+    %{mcall-linux: -oformat elf32-powerpc} }}}}\"\n+\n \n #undef\tCPP_SYSV_SPEC\n #define CPP_SYSV_SPEC \\\n@@ -757,14 +902,212 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef\tCPP_SYSV_DEFAULT_SPEC\n #define\tCPP_SYSV_DEFAULT_SPEC \"-D_CALL_SYSV\"\n \n+/* For solaris, don't define _LITTLE_ENDIAN, it conflicts with a header file.  */\n #undef\tCPP_ENDIAN_SPEC\n #define\tCPP_ENDIAN_SPEC \\\n \"%{mlittle: -D_LITTLE_ENDIAN -Amachine(littleendian)} \\\n %{mlittle-endian: -D_LITTLE_ENDIAN -Amachine(littleendian)} \\\n-%{!mlittle: %{!mlittle-endian: -D_BIG_ENDIAN -Amachine(bigendian)}}\"\n+%{mbig: -D_BIG_ENDIAN -Amachine(bigendian)} \\\n+%{mbig-endian: -D_BIG_ENDIAN -Amachine(bigendian)} \\\n+%{!mlittle: %{!mlittle-endian: %{!mbig: %{!mbig-endian: \\\n+    %{mcall-solaris: -Amachine(littleendian)} \\\n+    %{mcall-nt: -D_LITTLE_ENDIAN -Amachine(littleendian)} \\\n+    %{mcall-linux: -D_BIG_ENDIAN -Amachine(bigendian)} \\\n+    %{mcall-aixdesc:  -D_BIG_ENDIAN -Amachine(bigendian)} \\\n+    %{!mcall-solaris: %{!mcall-linux: %{!mcall-nt: %{!mcall-aixdesc: %(cpp_endian_default_spec) }}}}}}}}\"\n+\n+#undef\tCPP_ENDIAN_DEFAULT_SPEC\n+#define\tCPP_ENDIAN_DEFAULT_SPEC \"-D_BIG_ENDIAN -Amachine(bigendian)\"\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%{posix: -D_POSIX_SOURCE} %(cpp_sysv) %(cpp_endian) %(cpp_cpu)\"\n+#define CPP_SPEC \"%{posix: -D_POSIX_SOURCE} %(cpp_sysv) %(cpp_endian) %(cpp_cpu) \\\n+%{mmvme: %(cpp_os_mvme) } \\\n+%{msim: %(cpp_os_sim) } \\\n+%{mcall-linux: %(cpp_os_linux) } \\\n+%{mcall-solaris: %(cpp_os_solaris) } \\\n+%{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(cpp_os_default) }}}}\"\n+\n+#ifndef CPP_OS_DEFAULT_SPEC\n+#define CPP_OS_DEFAULT_SPEC \"\"\n+#endif\n+\n+#undef  STARTFILE_SPEC\n+#define\tSTARTFILE_SPEC \"\\\n+%{mmvme: %(startfile_mvme) } \\\n+%{msim: %(startfile_sim) } \\\n+%{mcall-linux: %(startfile_linux) } \\\n+%{mcall-solaris: %(startfile_solaris) } \\\n+%{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(startfile_default) }}}}\"\n+\n+#undef\tSTARTFILE_DEFAULT_SPEC\n+#define\tSTARTFILE_DEFAULT_SPEC \"\"\n+\n+#undef\tLIB_SPEC\n+#define\tLIB_SPEC \"\\\n+%{mmvme: %(lib_mvme) } \\\n+%{msim: %(lib_sim) } \\\n+%{mcall-linux: %(lib_linux) } \\\n+%{mcall-solaris: %(lib_solaris) } \\\n+%{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(lib_default) }}}}\"\n+\n+#undef\tLIBGCC_SPEC\n+#define\tLIBGCC_SPEC \"libgcc.a%s\"\n+\n+#undef\tENDFILE_SPEC\n+#define\tENDFILE_SPEC \"\\\n+%{mmvme: ecrtn.o%s} \\\n+%{msim: ecrtn.o%s} \\\n+%{mcall-linux: } \\\n+%{mcall-solaris: scrtn.o%s} \\\n+%{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(endfile_default) }}}}\"\n+\n+#undef\tENDFILE_DEFAULT_SPEC\n+#define\tENDFILE_DEFAULT_SPEC \"\"\n+\n+/* Motorola MVME support.  */\n+#ifndef\tLIB_MVME_SPEC\n+#define LIB_MVME_SPEC \"-( -lmvme -lc -) }\"\n+#endif\n+\n+#ifndef\tSTARTFILE_MVME_SPEC\n+#define\tSTARTFILE_MVME_SPEC \"ecrti.o%s mvme-crt0.o%s\"\n+#endif\n+\n+#ifndef\tENDFILE_MVME_SPEC\n+#define\tENDFILE_MVME_SPEC \"ecrtn.o%s\"\n+#endif\n+\n+#ifndef LINK_START_MVME_SPEC\n+#define LINK_START_MVME_SPEC \"\"\n+#endif\n+\n+#ifndef CPP_OS_MVME_SPEC\n+#define CPP_OS_MVME_SPEC \"\"\n+#endif\n+\n+/* PowerPC simulator based on netbsd system calls support.  */\n+#ifndef\tLIB_SIM_SPEC\n+#define LIB_SIM_SPEC \"-( -lsim -lc -) }\"\n+#endif\n+\n+#ifndef\tSTARTFILE_SIM_SPEC\n+#define\tSTARTFILE_SIM_SPEC \"ecrti.o%s sim-crt0.o%s\"\n+#endif\n+\n+#ifndef\tENDFILE_SIM_SPEC\n+#define\tENDFILE_SIM_SPEC \"ecrtn.o%s\"\n+#endif\n+\n+#ifndef LINK_START_SIM_SPEC\n+#define LINK_START_SIM_SPEC \"-Ttext 0x10000074\"\n+#endif\n+\n+#ifndef CPP_OS_SIM_SPEC\n+#define CPP_OS_SIM_SPEC \"\"\n+#endif\n+\n+/* Linux support.  */\n+#ifndef\tLIB_LINUX_SPEC\n+#define LIB_LINUX_SPEC \"%{mnewlib: -( -llinux -lc -) } %{!mnewlib: -lc }\"\n+#endif\n+\n+#ifndef\tSTARTFILE_LINUX_SPEC\n+#define\tSTARTFILE_LINUX_SPEC \"crt0.o%s\"\n+#endif\n+\n+#ifndef\tENDFILE_LINUX_SPEC\n+#define\tENDFILE_LINUX_SPEC \"\"\n+#endif\n+\n+#ifndef LINK_START_LINUX_SPEC\n+#define LINK_START_LINUX_SPEC \"-Ttext 0x400074\"\n+#endif\n+\n+#ifndef CPP_OS_LINUX_SPEC\n+#define CPP_OS_LINUX_SPEC \"-D__unix__ -D__linux__ \\\n+%{!ansi: -Dunix -Dlinux } \\\n+-Asystem(unix) -Asystem(linux)\"\n+#endif\n+\n+#ifndef CPP_OS_LINUX_SPEC\n+#define CPP_OS_LINUX_SPEC \"\"\n+#endif\n+\n+/* Solaris support.  */\n+/* For Solaris, Gcc automatically adds in one of the files\n+   /usr/ccs/lib/values-Xc.o, /usr/ccs/lib/values-Xa.o, or\n+   /usr/ccs/lib/values-Xt.o for each final link step (depending upon the other\n+   gcc options selected, such as -traditional and -ansi).  These files each\n+   contain one (initialized) copy of a special variable called `_lib_version'.\n+   Each one of these files has `_lib_version' initialized to a different (enum)\n+   value.  The SVR4 library routines query the value of `_lib_version' at run\n+   to decide how they should behave.  Specifically, they decide (based upon the\n+   value of `_lib_version') if they will act in a strictly ANSI conforming\n+   manner or not.  */\n+\n+#ifndef\tLIB_SOLARIS_SPEC\n+#define LIB_SOLARIS_SPEC \"\\\n+%{mnewlib: -( -lsolaris -lc -) } \\\n+%{!mnewlib: \\\n+    %{ansi:values-Xc.o%s} \\\n+    %{!ansi: \\\n+\t%{traditional:values-Xt.o%s} \\\n+\t%{!traditional:values-Xa.o%s}} \\\n+\t%{compat-bsd:-lucb -lsocket -lnsl -lelf -laio} \\\n+    %{!shared: %{!symbolic: -lc }}}\"\n+#endif\n+\n+#ifndef\tSTARTFILE_SOLARIS_SPEC\n+#define\tSTARTFILE_SOLARIS_SPEC \"scrti.o%s scrt0.o%s\"\n+#endif\n+\n+#ifndef\tENDFILE_SOLARIS_SPEC\n+#define\tENDFILE_SOLARIS_SPEC \"scrtn.o%s\"\n+#endif\n+\n+#ifndef LINK_START_SOLARIS_SPEC\n+#ifdef CROSS_COMPILER\n+#define LINK_START_SOLARIS_SPEC \"-Ttext 0x2000074\"\n+#else\n+#define LINK_START_SOLARIS_SPEC \"\"\n+#endif\n+#endif\n+\n+#ifndef CPP_OS_SOLARIS_SPEC\n+#define CPP_OS_SOLARIS_SPEC \"-D__ppc -D__sun__=1 -D__unix__ -D__svr4__  -D__SVR4__ \\\n+%{!ansi: -Dsun=1 -Dunix -DSVR4 -D__EXTENSIONS__ } \\\n+-Asystem(unix) -Asystem(svr4) -Amachine(prep)\"\n+#endif\n+\n+/* Define any extra SPECS that the compiler needs to generate.  */\n+#undef\tSUBTARGET_EXTRA_SPECS\n+#define SUBTARGET_EXTRA_SPECS\t\t\t\t\t\t\\\n+  { \"lib_mvme\",\t\t\tLIB_MVME_SPEC },\t\t\t\\\n+  { \"lib_sim\",\t\t\tLIB_SIM_SPEC },\t\t\t\t\\\n+  { \"lib_linux\",\t\tLIB_LINUX_SPEC },\t\t\t\\\n+  { \"lib_solaris\",\t\tLIB_SOLARIS_SPEC },\t\t\t\\\n+  { \"lib_default\",\t\tLIB_DEFAULT_SPEC },\t\t\t\\\n+  { \"startfile_mvme\",\t\tSTARTFILE_MVME_SPEC },\t\t\t\\\n+  { \"startfile_sim\",\t\tSTARTFILE_SIM_SPEC },\t\t\t\\\n+  { \"startfile_linux\",\t\tSTARTFILE_LINUX_SPEC },\t\t\t\\\n+  { \"startfile_solaris\",\tSTARTFILE_SOLARIS_SPEC },\t\t\\\n+  { \"startfile_default\",\tSTARTFILE_DEFAULT_SPEC },\t\t\\\n+  { \"endfile_mvme\",\t\tENDFILE_MVME_SPEC },\t\t\t\\\n+  { \"endfile_sim\",\t\tENDFILE_SIM_SPEC },\t\t\t\\\n+  { \"endfile_linux\",\t\tENDFILE_LINUX_SPEC },\t\t\t\\\n+  { \"endfile_solaris\",\t\tENDFILE_SOLARIS_SPEC },\t\t\t\\\n+  { \"endfile_default\",\t\tENDFILE_DEFAULT_SPEC },\t\t\t\\\n+  { \"link_start_mvme\",\t\tLINK_START_MVME_SPEC },\t\t\t\\\n+  { \"link_start_sim\",\t\tLINK_START_SIM_SPEC },\t\t\t\\\n+  { \"link_start_linux\",\t\tLINK_START_LINUX_SPEC },\t\t\\\n+  { \"link_start_solaris\",\tLINK_START_SOLARIS_SPEC },\t\t\\\n+  { \"link_start_default\",\tLINK_START_DEFAULT_SPEC },\t\t\\\n+  { \"cpp_os_mvme\",\t\tCPP_OS_MVME_SPEC },\t\t\t\\\n+  { \"cpp_os_sim\",\t\tCPP_OS_SIM_SPEC },\t\t\t\\\n+  { \"cpp_os_linux\",\t\tCPP_OS_LINUX_SPEC },\t\t\t\\\n+  { \"cpp_os_solaris\",\t\tCPP_OS_SOLARIS_SPEC },\t\t\t\\\n+  { \"cpp_os_default\",\t\tCPP_OS_DEFAULT_SPEC },\t\t\t\\\n+  { \"link_path\",\t\tLINK_PATH_SPEC },\n \n /* Define this macro as a C expression for the initializer of an\n    array of string to tell the driver program which options are\n@@ -776,4 +1119,4 @@ do {\t\t\t\t\t\t\t\t\t\\\n    `MULTILIB_OPTIONS' are set by default.  *Note Target Fragment::.  */\n \n #undef\tMULTILIB_DEFAULTS\n-#define\tMULTILIB_DEFAULTS { \"mbig\", \"mbig-endian\", \"mcall-sysv\", \"mno-sdata\" }\n+#define\tMULTILIB_DEFAULTS { \"mbig\", \"mbig-endian\", \"mcall-sysv-noeabi\", \"mno-sdata\" }"}, {"sha": "941ab7b0d3e08dd9575e13bcf4efe581465ef7d2", "filename": "gcc/config/rs6000/sysv4le.h", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Fsysv4le.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Fsysv4le.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4le.h?ref=c81bebd76d3fffc12823fb01a2bf7fc934d7b97e", "patch": "@@ -25,12 +25,8 @@ Boston, MA 02111-1307, USA.  */\n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT (MASK_POWERPC | MASK_NEW_MNEMONICS | MASK_LITTLE_ENDIAN)\n \n-#undef\tCPP_ENDIAN_SPEC\n-#define\tCPP_ENDIAN_SPEC \\\n-\"%{mbig: -D_BIG_ENDIAN -Amachine(bigendian)} \\\n-%{mbig-endian: -D_BIG_ENDIAN -Amachine(bigendian)} \\\n-%{!mbig: %{!mbig-endian: -D_LITTLE_ENDIAN -Amachine(littleendian)}}\"\n-\n+#undef\tCPP_ENDIAN_DEFAULT_SPEC\n+#define\tCPP_ENDIAN_DEFAULT_SPEC \"-D_LITTLE_ENDIAN -Amachine(littleendian)\"\n \n /* Define this macro as a C expression for the initializer of an\n    array of string to tell the driver program which options are\n@@ -42,4 +38,4 @@ Boston, MA 02111-1307, USA.  */\n    `MULTILIB_OPTIONS' are set by default.  *Note Target Fragment::.  */\n \n #undef\tMULTILIB_DEFAULTS\n-#define\tMULTILIB_DEFAULTS { \"mlittle\", \"mlittle-endian\", \"mcall-sysv\", \"mno-sdata\" }\n+#define\tMULTILIB_DEFAULTS { \"mlittle\", \"mlittle-endian\", \"mcall-sysv-noeabi\", \"mno-sdata\" }"}, {"sha": "bee27ad51150de82652303a53cd49624ed5bf5a9", "filename": "gcc/config/rs6000/t-ppc", "status": "modified", "additions": 80, "deletions": 8, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Ft-ppc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Ft-ppc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-ppc?ref=c81bebd76d3fffc12823fb01a2bf7fc934d7b97e", "patch": "@@ -6,7 +6,7 @@ EXTRA_HEADERS = $(srcdir)/ginclude/ppc-asm.h\n \n # These are really part of libgcc1, but this will cause them to be\n # built correctly, so... [taken from t-sparclite]\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c eabi.S eabi-ctors.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c > dp-bit.c\n@@ -15,15 +15,87 @@ fp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#define FLOAT' > fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n \n+eabi.S: $(srcdir)/config/rs6000/eabi.asm\n+\tcat $(srcdir)/config/rs6000/eabi.asm > eabi.S\n+\n+eabi-ctors.c: $(srcdir)/config/rs6000/eabi-ctors.c\n+\tcat $(srcdir)/config/rs6000/eabi-ctors.c > eabi-ctors.c\n+\n # Build libgcc.a with different options.  If no gas support, don't build\n # explicit little endian or big endian libraries, since it depends on the\n-# -mbig/-mlittle switches passed to gas.\n+# -mbig/-mlittle switches passed to gas.  The -mrelocatable support also needs\n+# -mrelocatable passed to gas, so don't use it either.\n+MULTILIB_OPTIONS\t= msoft-float \\\n+\t\t\t  mcall-sysv-noeabi/mcall-sysv-eabi/mcall-aix\n \n-MULTILIB_OPTIONS\t= msoft-float\n-MULTILIB_DIRNAMES\t= soft-float\n-MULTILIB_MATCHES\t= msoft-float=mcpu?403 \\\n+MULTILIB_DIRNAMES\t= nof \\\n+\t\t\t  le be \\\n+\t\t\t  cs ce ca\n+\n+MULTILIB_MATCHES\t= mlittle=mlittle-endian \\\n+\t\t\t  mbig=mbig-endian \\\n+\t\t\t  mlittle=mcall-solaris \\\n+\t\t\t  mbig=mcall-linux \\\n+\t\t\t  msoft-float=mcpu?403 \\\n \t\t\t  msoft-float=mcpu?821 \\\n-\t\t\t  msoft-float=mcpu?860\n+\t\t\t  msoft-float=mcpu?860 \\\n+\t\t\t  mcall-sysv-noeabi=mcall-solaris \\\n+\t\t\t  mcall-sysv-noeabi=mcall-linux \\\n+\t\t\t  mcall-sysv-eabi=meabi \\\n+\t\t\t  mcall-sysv-noeabi=mno-eabi\n+\n+MULTILIB_EXCEPTIONS\t=\n+\n+LIBGCC = stmp-multilib stmp-crt\n+INSTALL_LIBGCC = install-multilib install-crt\n+\n+# For eabi we build crti.o and crtn.o which serve to add begin and\n+# end labels to all of the special sections used when we link using gcc.\n+\n+# Assemble startup files.\n+ecrti.S: $(srcdir)/config/rs6000/eabi-ci.asm\n+\tcat $(srcdir)/config/rs6000/eabi-ci.asm >ecrti.S\n+\n+ecrtn.S: $(srcdir)/config/rs6000/eabi-cn.asm\n+\tcat $(srcdir)/config/rs6000/eabi-cn.asm >ecrtn.S\n+\n+scrti.S: $(srcdir)/config/rs6000/sol-ci.asm\n+\tcat $(srcdir)/config/rs6000/sol-ci.asm >scrti.S\n+\n+scrtn.S: $(srcdir)/config/rs6000/sol-cn.asm\n+\tcat $(srcdir)/config/rs6000/sol-cn.asm >scrtn.S\n+\n+scrt0.c: $(srcdir)/config/rs6000/sol-c0.c\n+\tcat $(srcdir)/config/rs6000/sol-c0.c >scrt0.c\n+\n+# Build multiple copies of crt{i,n}.o, one for each target switch.\n+stmp-crt: ecrti.S ecrtn.S scrti.S scrtn.S scrt0.c $(GCC_PASSES) $(EXTRA_HEADERS) stmp-multilib config.status\n+\tfor i in `$(GCC_FOR_TARGET) --print-multi-lib`; do \\\n+\t  dir=`echo $$i | sed -e 's/;.*$$//'`; \\\n+\t  flags=`echo $$i | sed -e 's/^[^;]*;//' -e 's/@/ -/g'`; \\\n+\t  $(MAKE) GCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n+\t    LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS) $${flags}\" \\\n+\t    dir=\"$${dir}\" stmp-crt-sub; \\\n+\t  if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n+\tdone\n+\ttouch stmp-crt\n+\n+# Subroutine of stmp-crt so make -n works.\n+stmp-crt-sub:\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/ecrti.o ecrti.S\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/ecrtn.o ecrtn.S\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/scrti.o scrti.S\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/scrtn.o scrtn.S\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/scrt0.o scrt0.c\n \n-LIBGCC = stmp-multilib\n-INSTALL_LIBGCC = install-multilib\n+# Install multiple versions of crt[in].o\n+install-crt: stmp-crt install-dir install-multilib\n+\tfor i in `$(GCC_FOR_TARGET) --print-multi-lib`; do \\\n+\t  dir=`echo $$i | sed -e 's/;.*$$//'`; \\\n+\t  rm -f $(libsubdir)/$${dir}/[es]crt[in0].o; \\\n+\t  $(INSTALL_DATA) $${dir}/ecrti.o $(libsubdir)/$${dir}/ecrti.o; \\\n+\t  $(INSTALL_DATA) $${dir}/ecrtn.o $(libsubdir)/$${dir}/ecrtn.o; \\\n+\t  $(INSTALL_DATA) $${dir}/scrti.o $(libsubdir)/$${dir}/scrti.o; \\\n+\t  $(INSTALL_DATA) $${dir}/scrtn.o $(libsubdir)/$${dir}/scrtn.o; \\\n+\t  $(INSTALL_DATA) $${dir}/scrt0.o $(libsubdir)/$${dir}/scrt0.o; \\\n+\tdone"}, {"sha": "9984d89e6cb9fdbe56983da3f917310c6e2383d3", "filename": "gcc/config/rs6000/t-ppcgas", "status": "modified", "additions": 74, "deletions": 9, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Ft-ppcgas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Ft-ppcgas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-ppcgas?ref=c81bebd76d3fffc12823fb01a2bf7fc934d7b97e", "patch": "@@ -6,7 +6,7 @@ EXTRA_HEADERS = $(srcdir)/ginclude/ppc-asm.h\n \n # These are really part of libgcc1, but this will cause them to be\n # built correctly, so... [taken from t-sparclite]\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c eabi.S eabi-ctors.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c > dp-bit.c\n@@ -15,23 +15,88 @@ fp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#define FLOAT' > fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n \n+eabi.S: $(srcdir)/config/rs6000/eabi.asm\n+\tcat $(srcdir)/config/rs6000/eabi.asm > eabi.S\n+\n+eabi-ctors.c: $(srcdir)/config/rs6000/eabi-ctors.c\n+\tcat $(srcdir)/config/rs6000/eabi-ctors.c > eabi-ctors.c\n+\n # Build libgcc.a with different options.\n \n MULTILIB_OPTIONS\t= msoft-float \\\n+\t\t\t  mrelocatable \\\n \t\t\t  mlittle/mbig \\\n-\t\t\t  mcall-sysv/mcall-aix\t# /mcall-aixdesc\n+\t\t\t  mcall-sysv-noeabi/mcall-sysv-eabi/mcall-aix\n \n-MULTILIB_DIRNAMES\t= soft-float \\\n-\t\t\t  little big \\\n-\t\t\t  sysv aix # aixdesc\n+MULTILIB_DIRNAMES\t= nof \\\n+\t\t\t  rel \\\n+\t\t\t  le be \\\n+\t\t\t  cs ce ca\n \n MULTILIB_MATCHES\t= mlittle=mlittle-endian \\\n \t\t\t  mbig=mbig-endian \\\n+\t\t\t  mlittle=mcall-solaris \\\n+\t\t\t  mbig=mcall-linux \\\n \t\t\t  msoft-float=mcpu?403 \\\n \t\t\t  msoft-float=mcpu?821 \\\n-\t\t\t  msoft-float=mcpu?860\n+\t\t\t  msoft-float=mcpu?860 \\\n+\t\t\t  mcall-sysv-noeabi=mcall-solaris \\\n+\t\t\t  mcall-sysv-noeabi=mcall-linux \\\n+\t\t\t  mcall-sysv-eabi=meabi \\\n+\t\t\t  mcall-sysv-noeabi=mno-eabi\n+\n+MULTILIB_EXCEPTIONS\t=\n+\n+LIBGCC = stmp-multilib stmp-crt\n+INSTALL_LIBGCC = install-multilib install-crt\n+\n+# For eabigas we build {e,s}crti.o and {e,s}crtn.o which serve to add begin and\n+# end labels to all of the special sections used when we link using gcc.\n+\n+# Assemble startup files.\n+ecrti.S: $(srcdir)/config/rs6000/eabi-ci.asm\n+\tcat $(srcdir)/config/rs6000/eabi-ci.asm >ecrti.S\n+\n+ecrtn.S: $(srcdir)/config/rs6000/eabi-cn.asm\n+\tcat $(srcdir)/config/rs6000/eabi-cn.asm >ecrtn.S\n+\n+scrti.S: $(srcdir)/config/rs6000/sol-ci.asm\n+\tcat $(srcdir)/config/rs6000/sol-ci.asm >scrti.S\n+\n+scrtn.S: $(srcdir)/config/rs6000/sol-cn.asm\n+\tcat $(srcdir)/config/rs6000/sol-cn.asm >scrtn.S\n+\n+scrt0.c: $(srcdir)/config/rs6000/sol-c0.c\n+\tcat $(srcdir)/config/rs6000/sol-c0.c >scrt0.c\n+\n+# Build multiple copies of crt{i,n}.o, one for each target switch.\n+stmp-crt: ecrti.S ecrtn.S scrti.S scrtn.S scrt0.c $(GCC_PASSES) $(EXTRA_HEADERS) stmp-multilib config.status\n+\tfor i in `$(GCC_FOR_TARGET) --print-multi-lib`; do \\\n+\t  dir=`echo $$i | sed -e 's/;.*$$//'`; \\\n+\t  flags=`echo $$i | sed -e 's/^[^;]*;//' -e 's/@/ -/g'`; \\\n+\t  $(MAKE) GCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n+\t    LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS) $${flags}\" \\\n+\t    dir=\"$${dir}\" stmp-crt-sub; \\\n+\t  if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n+\tdone\n+\ttouch stmp-crt\n \n-#MULTILIB_EXCEPTIONS\t= *mlittle/*mcall-aixdesc*\n+# Subroutine of stmp-crt so make -n works.\n+stmp-crt-sub:\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/ecrti.o ecrti.S\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/ecrtn.o ecrtn.S\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/scrti.o scrti.S\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/scrtn.o scrtn.S\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -c -o $(dir)/scrt0.o scrt0.c\n \n-LIBGCC = stmp-multilib\n-INSTALL_LIBGCC = install-multilib\n+# Install multiple versions of crt[in].o\n+install-crt: stmp-crt install-dir install-multilib\n+\tfor i in `$(GCC_FOR_TARGET) --print-multi-lib`; do \\\n+\t  dir=`echo $$i | sed -e 's/;.*$$//'`; \\\n+\t  rm -f $(libsubdir)/$${dir}/[es]crt[in0].o; \\\n+\t  $(INSTALL_DATA) $${dir}/ecrti.o $(libsubdir)/$${dir}/ecrti.o; \\\n+\t  $(INSTALL_DATA) $${dir}/ecrtn.o $(libsubdir)/$${dir}/ecrtn.o; \\\n+\t  $(INSTALL_DATA) $${dir}/scrti.o $(libsubdir)/$${dir}/scrti.o; \\\n+\t  $(INSTALL_DATA) $${dir}/scrtn.o $(libsubdir)/$${dir}/scrtn.o; \\\n+\t  $(INSTALL_DATA) $${dir}/scrt0.o $(libsubdir)/$${dir}/scrt0.o; \\\n+\tdone"}, {"sha": "5d654f4a156b280dd970d835ac2296ed43952ee4", "filename": "gcc/config/rs6000/xm-sysv4.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Fxm-sysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81bebd76d3fffc12823fb01a2bf7fc934d7b97e/gcc%2Fconfig%2Frs6000%2Fxm-sysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fxm-sysv4.h?ref=c81bebd76d3fffc12823fb01a2bf7fc934d7b97e", "patch": "@@ -48,6 +48,13 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"xm-svr4.h\"\n \n+/* if not compiled with GNU C, use the C alloca and use only int bitfields. */\n #ifndef __GNUC__\n+#define\tUSE_C_ALLOCA\n+extern char *alloca ();\n+#undef ONLY_INT_FIELDS\n #define ONLY_INT_FIELDS\n #endif\n+\n+/* Solaris has a different declaration of sys_siglist than collect uses.  */\n+#define DONT_DECLARE_SYS_SIGLIST"}]}