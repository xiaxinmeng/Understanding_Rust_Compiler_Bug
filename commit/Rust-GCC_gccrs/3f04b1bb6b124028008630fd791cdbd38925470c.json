{"sha": "3f04b1bb6b124028008630fd791cdbd38925470c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YwNGIxYmI2YjEyNDAyODAwODYzMGZkNzkxY2RiZDM4OTI1NDcwYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-10-23T19:16:15Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-10-23T19:16:15Z"}, "message": "c-format.c (gcc_cxxdiag_char_table): Add %X.\n\nc-family/\n\t* c-format.c (gcc_cxxdiag_char_table): Add %X.\ncp/\n\t* error.c (eh_spec_to_string): New.\n\t(cp_printer): Use it for %X.\n\nFrom-SVN: r203988", "tree": {"sha": "2ecef8040634f68f3553aa4a7a369ebf89ad18b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ecef8040634f68f3553aa4a7a369ebf89ad18b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f04b1bb6b124028008630fd791cdbd38925470c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f04b1bb6b124028008630fd791cdbd38925470c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f04b1bb6b124028008630fd791cdbd38925470c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f04b1bb6b124028008630fd791cdbd38925470c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e28030cf01b290cd2cde25d7a68669e7ef5b7a43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e28030cf01b290cd2cde25d7a68669e7ef5b7a43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e28030cf01b290cd2cde25d7a68669e7ef5b7a43"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "c7534b3326148bd6a415a891ea3fabb35cdc77cb", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f04b1bb6b124028008630fd791cdbd38925470c/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f04b1bb6b124028008630fd791cdbd38925470c/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=3f04b1bb6b124028008630fd791cdbd38925470c", "patch": "@@ -1,3 +1,7 @@\n+2013-10-23  Jason Merrill  <jason@redhat.com>\n+\n+\t* c-format.c (gcc_cxxdiag_char_table): Add %X.\n+\n 2013-10-11  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-common.h (omp_clause_mask::operator !=): New method."}, {"sha": "f0371d3cb6ec200d139c498eb155cf8718bcbf55", "filename": "gcc/c-family/c-format.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f04b1bb6b124028008630fd791cdbd38925470c/gcc%2Fc-family%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f04b1bb6b124028008630fd791cdbd38925470c/gcc%2Fc-family%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-format.c?ref=3f04b1bb6b124028008630fd791cdbd38925470c", "patch": "@@ -721,7 +721,7 @@ static const format_char_info gcc_cxxdiag_char_table[] =\n   /* Custom conversion specifiers.  */\n \n   /* These will require a \"tree\" at runtime.  */\n-  { \"ADEFKSTV\",0,STD_C89,{ T89_V,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"q+#\",   \"\",   NULL },\n+  { \"ADEFKSTVX\",0,STD_C89,{ T89_V,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"q+#\",   \"\",   NULL },\n \n   { \"v\", 0,STD_C89, { T89_I,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"q#\",  \"\",   NULL },\n "}, {"sha": "78721a3ba356116058c30e837c3c1a347b095375", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f04b1bb6b124028008630fd791cdbd38925470c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f04b1bb6b124028008630fd791cdbd38925470c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3f04b1bb6b124028008630fd791cdbd38925470c", "patch": "@@ -1,5 +1,8 @@\n 2013-10-23  Jason Merrill  <jason@redhat.com>\n \n+\t* error.c (eh_spec_to_string): New.\n+\t(cp_printer): Use it for %X.\n+\n \tIn C++11 a trivial [cd]tor might not be callable.\n \t* class.c (user_provided_p): A function deleted on its declation\n \tin the class is not user-provided."}, {"sha": "5f997c3ed2924a04617a01af167ba068c4b226de", "filename": "gcc/cp/error.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f04b1bb6b124028008630fd791cdbd38925470c/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f04b1bb6b124028008630fd791cdbd38925470c/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=3f04b1bb6b124028008630fd791cdbd38925470c", "patch": "@@ -2998,6 +2998,15 @@ cv_to_string (tree p, int v)\n   return pp_ggc_formatted_text (cxx_pp);\n }\n \n+static const char *\n+eh_spec_to_string (tree p, int /*v*/)\n+{\n+  int flags = 0;\n+  reinit_cxx_pp ();\n+  dump_exception_spec (cxx_pp, p, flags);\n+  return pp_ggc_formatted_text (cxx_pp);\n+}\n+\n /* Langhook for print_error_function.  */\n void\n cxx_print_error_function (diagnostic_context *context, const char *file,\n@@ -3379,8 +3388,10 @@ maybe_print_constexpr_context (diagnostic_context *context)\n    %O\tbinary operator.\n    %P   function parameter whose position is indicated by an integer.\n    %Q\tassignment operator.\n+   %S   substitution (template + args)\n    %T   type.\n-   %V   cv-qualifier.  */\n+   %V   cv-qualifier.\n+   %X   exception-specification.  */\n static bool\n cp_printer (pretty_printer *pp, text_info *text, const char *spec,\n \t    int precision, bool wide, bool set_locus, bool verbose)\n@@ -3427,6 +3438,7 @@ cp_printer (pretty_printer *pp, text_info *text, const char *spec,\n     case 'S': result = subst_to_string (next_tree);\t\tbreak;\n     case 'T': result = type_to_string (next_tree, verbose);\tbreak;\n     case 'V': result = cv_to_string (next_tree, verbose);\tbreak;\n+    case 'X': result = eh_spec_to_string (next_tree, verbose);  break;\n \n     case 'K':\n       percent_K_format (text);"}]}