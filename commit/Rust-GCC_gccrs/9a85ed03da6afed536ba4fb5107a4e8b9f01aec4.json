{"sha": "9a85ed03da6afed536ba4fb5107a4e8b9f01aec4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE4NWVkMDNkYTZhZmVkNTM2YmE0ZmI1MTA3YTRlOGI5ZjAxYWVjNA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-05-29T20:22:27Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-05-29T20:22:27Z"}, "message": "runtime: add the --without-libatomic configure option\n\nThis adds the --without-libatomic configure option, which is useful for building libgo\nwith a non-gcc compiler.\n\nIt disables libgo's dependency on libatomic. This\nis useful for platforms where it is known that the libatomic runtime\nfunctions are not required, or where the compiler automatically\nprovides an implementation of them.\n\nFrom-SVN: r211065", "tree": {"sha": "ffb905fbae8b421551bac556d96607de00cb5918", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffb905fbae8b421551bac556d96607de00cb5918"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a85ed03da6afed536ba4fb5107a4e8b9f01aec4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a85ed03da6afed536ba4fb5107a4e8b9f01aec4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a85ed03da6afed536ba4fb5107a4e8b9f01aec4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a85ed03da6afed536ba4fb5107a4e8b9f01aec4/comments", "author": null, "committer": null, "parents": [{"sha": "cc8849a1597bb12c16a990bfed6a3b685952d493", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc8849a1597bb12c16a990bfed6a3b685952d493", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc8849a1597bb12c16a990bfed6a3b685952d493"}], "stats": {"total": 55, "additions": 46, "deletions": 9}, "files": [{"sha": "91c5d1c6a8710144153a20678b5f93f121869b1e", "filename": "libgo/Makefile.am", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a85ed03da6afed536ba4fb5107a4e8b9f01aec4/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a85ed03da6afed536ba4fb5107a4e8b9f01aec4/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=9a85ed03da6afed536ba4fb5107a4e8b9f01aec4", "patch": "@@ -30,6 +30,8 @@ toolexeclibgodir = $(nover_glibgo_toolexeclibdir)/go/$(gcc_version)/$(target_ali\n LIBFFI = @LIBFFI@\n LIBFFIINCS = @LIBFFIINCS@\n \n+LIBATOMIC = @LIBATOMIC@\n+\n WARN_CFLAGS = $(WARN_FLAGS) $(WERROR)\n \n # -I/-D flags to pass when compiling.\n@@ -1949,8 +1951,7 @@ libgo_la_LDFLAGS = \\\n \n libgo_la_LIBADD = \\\n \t$(libgo_go_objs) ../libbacktrace/libbacktrace.la \\\n-\t../libatomic/libatomic_convenience.la \\\n-\t$(LIBFFI) $(PTHREAD_LIBS) $(MATH_LIBS) $(NET_LIBS)\n+\t$(LIBATOMIC) $(LIBFFI) $(PTHREAD_LIBS) $(MATH_LIBS) $(NET_LIBS)\n \n libgobegin_a_SOURCES = \\\n \truntime/go-main.c"}, {"sha": "53299835eab1a388512b79deea7a2ddf1853b55a", "filename": "libgo/Makefile.in", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a85ed03da6afed536ba4fb5107a4e8b9f01aec4/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a85ed03da6afed536ba4fb5107a4e8b9f01aec4/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=9a85ed03da6afed536ba4fb5107a4e8b9f01aec4", "patch": "@@ -171,10 +171,9 @@ am__DEPENDENCIES_2 = bufio.lo bytes.lo bytes/index.lo crypto.lo \\\n \ttesting/iotest.lo testing/quick.lo unicode/utf16.lo \\\n \tunicode/utf8.lo\n libgo_la_DEPENDENCIES = $(am__DEPENDENCIES_2) \\\n-\t../libbacktrace/libbacktrace.la \\\n-\t../libatomic/libatomic_convenience.la $(am__DEPENDENCIES_1) \\\n+\t../libbacktrace/libbacktrace.la $(am__DEPENDENCIES_1) \\\n \t$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \\\n-\t$(am__DEPENDENCIES_1)\n+\t$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)\n @LIBGO_IS_LINUX_FALSE@am__objects_1 = lock_sema.lo thread-sema.lo\n @LIBGO_IS_LINUX_TRUE@am__objects_1 = lock_futex.lo thread-linux.lo\n @HAVE_SYS_MMAN_H_FALSE@am__objects_2 = mem_posix_memalign.lo\n@@ -316,6 +315,7 @@ INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n LD = @LD@\n LDFLAGS = @LDFLAGS@\n+LIBATOMIC = @LIBATOMIC@\n LIBFFI = @LIBFFI@\n LIBFFIINCS = @LIBFFIINCS@\n LIBOBJS = @LIBOBJS@\n@@ -2020,8 +2020,7 @@ libgo_la_LDFLAGS = \\\n \n libgo_la_LIBADD = \\\n \t$(libgo_go_objs) ../libbacktrace/libbacktrace.la \\\n-\t../libatomic/libatomic_convenience.la \\\n-\t$(LIBFFI) $(PTHREAD_LIBS) $(MATH_LIBS) $(NET_LIBS)\n+\t$(LIBATOMIC) $(LIBFFI) $(PTHREAD_LIBS) $(MATH_LIBS) $(NET_LIBS)\n \n libgobegin_a_SOURCES = \\\n \truntime/go-main.c"}, {"sha": "22f935200cc08e9ec80173d06f9d48a5ca9d4e29", "filename": "libgo/configure", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a85ed03da6afed536ba4fb5107a4e8b9f01aec4/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a85ed03da6afed536ba4fb5107a4e8b9f01aec4/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=9a85ed03da6afed536ba4fb5107a4e8b9f01aec4", "patch": "@@ -676,6 +676,7 @@ LIBGO_IS_FREEBSD_TRUE\n LIBGO_IS_DARWIN_FALSE\n LIBGO_IS_DARWIN_TRUE\n go_include\n+LIBATOMIC\n LIBFFIINCS\n LIBFFI\n nover_glibgo_toolexeclibdir\n@@ -817,6 +818,7 @@ enable_libtool_lock\n enable_werror\n enable_version_specific_runtime_libs\n with_libffi\n+with_libatomic\n with_system_libunwind\n enable_sjlj_exceptions\n '\n@@ -1469,6 +1471,7 @@ Optional Packages:\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --without-libffi        don't use libffi\n+  --without-libatomic     don't use libatomic\n   --with-system-libunwind use installed libunwind\n \n Some influential environment variables:\n@@ -11115,7 +11118,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11118 \"configure\"\n+#line 11121 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11221,7 +11224,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11224 \"configure\"\n+#line 11227 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13483,6 +13486,24 @@ fi\n \n \n \n+# See if the user wants to configure without libatomic. This is useful if we are\n+# on an architecture for which libgo does not need an atomic support library and\n+# libatomic does not support our C compiler.\n+\n+# Check whether --with-libatomic was given.\n+if test \"${with_libatomic+set}\" = set; then :\n+  withval=$with_libatomic; :\n+else\n+  with_libatomic=${with_libatomic_default-yes}\n+fi\n+\n+\n+LIBATOMIC=\n+if test \"$with_libatomic\" != no; then\n+   LIBATOMIC=../libatomic/libatomic_convenience.la\n+fi\n+\n+\n # Used to tell GNU make to include a file without telling automake to\n # include it.\n go_include=\"-include\""}, {"sha": "1f5aea8c6763c883fe36d66ba09e1233873572f9", "filename": "libgo/configure.ac", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a85ed03da6afed536ba4fb5107a4e8b9f01aec4/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a85ed03da6afed536ba4fb5107a4e8b9f01aec4/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=9a85ed03da6afed536ba4fb5107a4e8b9f01aec4", "patch": "@@ -122,6 +122,21 @@ fi\n AC_SUBST(LIBFFI)\n AC_SUBST(LIBFFIINCS)\n \n+# See if the user wants to configure without libatomic. This is useful if we are\n+# on an architecture for which libgo does not need an atomic support library and\n+# libatomic does not support our C compiler.\n+AC_ARG_WITH(libatomic,\n+  AS_HELP_STRING([--without-libatomic],\n+                 [don't use libatomic]),\n+  [:],\n+  [with_libatomic=${with_libatomic_default-yes}])\n+\n+LIBATOMIC=\n+if test \"$with_libatomic\" != no; then\n+   LIBATOMIC=../libatomic/libatomic_convenience.la\n+fi\n+AC_SUBST(LIBATOMIC)\n+\n # Used to tell GNU make to include a file without telling automake to\n # include it.\n go_include=\"-include\""}, {"sha": "7f7fb74c5896cb7528cf2c4f92e4e839d594d09f", "filename": "libgo/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a85ed03da6afed536ba4fb5107a4e8b9f01aec4/libgo%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a85ed03da6afed536ba4fb5107a4e8b9f01aec4/libgo%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Ftestsuite%2FMakefile.in?ref=9a85ed03da6afed536ba4fb5107a4e8b9f01aec4", "patch": "@@ -96,6 +96,7 @@ INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n LD = @LD@\n LDFLAGS = @LDFLAGS@\n+LIBATOMIC = @LIBATOMIC@\n LIBFFI = @LIBFFI@\n LIBFFIINCS = @LIBFFIINCS@\n LIBOBJS = @LIBOBJS@"}]}