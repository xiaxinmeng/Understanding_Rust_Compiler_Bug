{"sha": "e292d60603794a494b130475e247123018e3b104", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI5MmQ2MDYwMzc5NGE0OTRiMTMwNDc1ZTI0NzEyMzAxOGUzYjEwNA==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2017-05-11T09:55:56Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2017-05-11T09:55:56Z"}, "message": "tree-ssa-loop-ivopts.c (compare_cost_pair): New.\n\n\t* tree-ssa-loop-ivopts.c (compare_cost_pair): New.\n\t(iv_ca_more_deps): Renamed to ...\n\t(iv_ca_compare_deps): ... this.\n\t(iv_ca_extend): Extend iv_ca if NEW_CP is cheaper than OLD_CP.\n\nFrom-SVN: r247897", "tree": {"sha": "249ae422c5f4dd0ad71638c77764c3f4dd372cc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/249ae422c5f4dd0ad71638c77764c3f4dd372cc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e292d60603794a494b130475e247123018e3b104", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e292d60603794a494b130475e247123018e3b104", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e292d60603794a494b130475e247123018e3b104", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e292d60603794a494b130475e247123018e3b104/comments", "author": null, "committer": null, "parents": [{"sha": "e97cac0271d7322d643fed8c6bf6ba8ec3aad451", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e97cac0271d7322d643fed8c6bf6ba8ec3aad451", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e97cac0271d7322d643fed8c6bf6ba8ec3aad451"}], "stats": {"total": 50, "additions": 39, "deletions": 11}, "files": [{"sha": "9064bed16bcb0dfeab4edb09fd3002ebfea3116e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e292d60603794a494b130475e247123018e3b104/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e292d60603794a494b130475e247123018e3b104/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e292d60603794a494b130475e247123018e3b104", "patch": "@@ -1,3 +1,10 @@\n+2017-05-11  Bin Cheng  <bin.cheng@arm.com>\n+\n+\t* tree-ssa-loop-ivopts.c (compare_cost_pair): New.\n+\t(iv_ca_more_deps): Renamed to ...\n+\t(iv_ca_compare_deps): ... this.\n+\t(iv_ca_extend): Extend iv_ca if NEW_CP is cheaper than OLD_CP.\n+\n 2017-05-11  Bin Cheng  <bin.cheng@arm.com>\n \n \t* tree-ssa-loop-ivopts.c (find_interesting_uses): Move inv vars dump"}, {"sha": "553310be40c9b0a0d6c21b0d04f3fc2006e78866", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 32, "deletions": 11, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e292d60603794a494b130475e247123018e3b104/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e292d60603794a494b130475e247123018e3b104/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=e292d60603794a494b130475e247123018e3b104", "patch": "@@ -5627,6 +5627,19 @@ cheaper_cost_pair (struct cost_pair *a, struct cost_pair *b)\n   return false;\n }\n \n+/* Compare if A is a more expensive cost pair than B.  Return 1, 0 and -1\n+   for more expensive, equal and cheaper respectively.  */\n+\n+static int\n+compare_cost_pair (struct cost_pair *a, struct cost_pair *b)\n+{\n+  if (cheaper_cost_pair (a, b))\n+    return -1;\n+  if (cheaper_cost_pair (b, a))\n+    return 1;\n+\n+  return 0;\n+}\n \n /* Returns candidate by that USE is expressed in IVS.  */\n \n@@ -5812,21 +5825,22 @@ iv_ca_cost (struct iv_ca *ivs)\n     return ivs->cost;\n }\n \n-/* Returns true if applying NEW_CP to GROUP for IVS introduces more\n-   invariants than OLD_CP.  */\n+/* Compare if applying NEW_CP to GROUP for IVS introduces more invariants\n+   than OLD_CP.  Return 1, 0 and -1 for more, equal and fewer invariants\n+   respectively.  */\n \n-static bool\n-iv_ca_more_deps (struct ivopts_data *data, struct iv_ca *ivs,\n-\t\t struct iv_group *group, struct cost_pair *old_cp,\n-\t\t struct cost_pair *new_cp)\n+static int\n+iv_ca_compare_deps (struct ivopts_data *data, struct iv_ca *ivs,\n+\t\t    struct iv_group *group, struct cost_pair *old_cp,\n+\t\t    struct cost_pair *new_cp)\n {\n   gcc_assert (old_cp && new_cp && old_cp != new_cp);\n   unsigned old_n_invs = ivs->n_invs;\n   iv_ca_set_cp (data, ivs, group, new_cp);\n   unsigned new_n_invs = ivs->n_invs;\n   iv_ca_set_cp (data, ivs, group, old_cp);\n \n-  return (new_n_invs > old_n_invs);\n+  return new_n_invs > old_n_invs ? 1 : (new_n_invs < old_n_invs ? -1 : 0);\n }\n \n /* Creates change of expressing GROUP by NEW_CP instead of OLD_CP and chains\n@@ -6058,11 +6072,18 @@ iv_ca_extend (struct ivopts_data *data, struct iv_ca *ivs,\n       if (!new_cp)\n \tcontinue;\n \n-      if (!min_ncand && iv_ca_more_deps (data, ivs, group, old_cp, new_cp))\n-\tcontinue;\n+      if (!min_ncand)\n+\t{\n+\t  int cmp_invs = iv_ca_compare_deps (data, ivs, group, old_cp, new_cp);\n+\t  /* Skip if new_cp depends on more invariants.  */\n+\t  if (cmp_invs > 0)\n+\t    continue;\n \n-      if (!min_ncand && !cheaper_cost_pair (new_cp, old_cp))\n-\tcontinue;\n+\t  int cmp_cost = compare_cost_pair (new_cp, old_cp);\n+\t  /* Skip if new_cp is not cheaper.  */\n+\t  if (cmp_cost > 0 || (cmp_cost == 0 && cmp_invs == 0))\n+\t    continue;\n+\t}\n \n       *delta = iv_ca_delta_add (group, old_cp, new_cp, *delta);\n     }"}]}