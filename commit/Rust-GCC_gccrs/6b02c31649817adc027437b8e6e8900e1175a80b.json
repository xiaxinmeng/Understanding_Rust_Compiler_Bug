{"sha": "6b02c31649817adc027437b8e6e8900e1175a80b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmIwMmMzMTY0OTgxN2FkYzAyNzQzN2I4ZTZlODkwMGUxMTc1YTgwYg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-01-23T23:03:57Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-01-23T23:03:57Z"}, "message": "Comment fix.\n\nFrom-SVN: r3311", "tree": {"sha": "d6f598d7b564e4abd317d1a040df6ecb967b344d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6f598d7b564e4abd317d1a040df6ecb967b344d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b02c31649817adc027437b8e6e8900e1175a80b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b02c31649817adc027437b8e6e8900e1175a80b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b02c31649817adc027437b8e6e8900e1175a80b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b02c31649817adc027437b8e6e8900e1175a80b/comments", "author": null, "committer": null, "parents": [{"sha": "27212ac6c1c9f029725b1decc75e0443bddf018e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27212ac6c1c9f029725b1decc75e0443bddf018e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27212ac6c1c9f029725b1decc75e0443bddf018e"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "658f57f680338c1300664853bb47af090fa644c3", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b02c31649817adc027437b8e6e8900e1175a80b/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b02c31649817adc027437b8e6e8900e1175a80b/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=6b02c31649817adc027437b8e6e8900e1175a80b", "patch": "@@ -805,6 +805,8 @@ reg_set_last (x, insn)\n \n      If we find a set of X, ensure that its SET_SRC remains unchanged.  */\n \n+  /* We compare with <= here, because reg_set_last_last_regno\n+     is actually the number of the first reg *not* in X.  */\n   for (;\n        insn && GET_CODE (insn) != CODE_LABEL\n        && ! (GET_CODE (insn) == CALL_INSN"}]}