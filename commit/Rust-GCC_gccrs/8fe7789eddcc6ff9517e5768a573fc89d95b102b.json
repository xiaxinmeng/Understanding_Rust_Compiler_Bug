{"sha": "8fe7789eddcc6ff9517e5768a573fc89d95b102b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZlNzc4OWVkZGNjNmZmOTUxN2U1NzY4YTU3M2ZjODlkOTViMTAyYg==", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@gcc.gnu.org", "date": "2003-12-31T08:58:31Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@gcc.gnu.org", "date": "2003-12-31T08:58:31Z"}, "message": "configure.in: Add --enable-gtk-cairo check.\n\n2003-12-16  Graydon Hoare  <graydon@redhat.com>\n\n\t* configure.in: Add --enable-gtk-cairo check.\n\t* configure: Regenerate.\n\t* Makefile.am: Conditionally link against cairo.\n\t* Makefile.in: Regenerate.\n\t* acinclude.m4: Include PKG_CHECK_MODULES.\n\t* aclocal.m4: Regenerate.\n\t* gnu/java/awt/peer/gtk/GtkToolkit.java (useGraphics2D): New method.\n\t(getFontMetrics, getClasspathFontPeer):\n\t* gnu/java/awt/peer/gtk/GtkCanvasPeer.java (getGraphics):\n\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java (createImage):\n\t* gnu/java/awt/peer/gtk/GtkContainerPeer.java (getGraphics):\n\t* gnu/java/awt/peer/gtk/GtkFramePeer.java (getGraphics):\n\tSwitch behavior depending on GtkToolkit.useGraphics2D().\n\t* gnu/java/awt/peer/gtk/GtkFontPeer.java: Extend ClasspathFontPeer.\n\t* java/awt/Font.java: Switch to peer model.\n\t* jni/gtk-peer/gtkcairopeer.h: Definitions of cairo stuff.\n\t* jni/gtk-peer/gdkfont.h: Include gtkcairopeer.h.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c: Include gtkcairopeer.h.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c: Un-include gtkpeer.h.\n\nFrom-SVN: r75260", "tree": {"sha": "242b3e4088e49dd2c4f8cc0dcf7bb9282753348f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/242b3e4088e49dd2c4f8cc0dcf7bb9282753348f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fe7789eddcc6ff9517e5768a573fc89d95b102b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fe7789eddcc6ff9517e5768a573fc89d95b102b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fe7789eddcc6ff9517e5768a573fc89d95b102b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fe7789eddcc6ff9517e5768a573fc89d95b102b/comments", "author": null, "committer": null, "parents": [{"sha": "4f0c9c8a876450531bcfa8989d327efdbd0cd93c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f0c9c8a876450531bcfa8989d327efdbd0cd93c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f0c9c8a876450531bcfa8989d327efdbd0cd93c"}], "stats": {"total": 2188, "additions": 1456, "deletions": 732}, "files": [{"sha": "dcfc1a5435eca6de9f3adb4cdcf30a19d9755119", "filename": "libjava/Makefile.am", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=8fe7789eddcc6ff9517e5768a573fc89d95b102b", "patch": "@@ -168,8 +168,20 @@ libgcj_la_LDFLAGS = -rpath $(toolexeclibdir) $(THREADLDFLAGS) $(THREADLIBS) \\\n \t-version-info `grep -v '^\\#' $(srcdir)/libtool-version`\n libgcj_la_LINK = $(LIBLINK)\n \n+# Gtk/Cairo JNI sources.\n+if GTK_CAIRO\n+gtk_cairo_c_source_files = \\\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeer.c \\\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c \\\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c \\\n+jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c\n+else\n+gtk_cairo_c_source_files = \n+endif\n+\n ## Gtk JNI sources.\n gtk_c_source_files = \\\n+$(gtk_cairo_c_source_files) \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c \\\n@@ -207,8 +219,12 @@ jni/classpath/primlib.c\n \n ## Java sources for Gtk peers.\n gtk_awt_peer_sources = \\\n+gnu/java/awt/peer/gtk/GdkClasspathFontPeer.java \\\n+gnu/java/awt/peer/gtk/GdkClasspathFontPeerMetrics.java \\\n gnu/java/awt/peer/gtk/GdkFontMetrics.java \\\n+gnu/java/awt/peer/gtk/GdkGlyphVector.java \\\n gnu/java/awt/peer/gtk/GdkGraphics.java \\\n+gnu/java/awt/peer/gtk/GdkGraphics2D.java \\\n gnu/java/awt/peer/gtk/GdkPixbufDecoder.java \\\n gnu/java/awt/peer/gtk/GtkArg.java \\\n gnu/java/awt/peer/gtk/GtkArgList.java \\\n@@ -264,7 +280,7 @@ jni/classpath/jnilink.h\t\\\n jni/classpath/native_state.h \\\n jni/classpath/primlib.h\n \n-lib_gnu_java_awt_peer_gtk_la_LIBADD = $(GTK_LIBS) $(GLIB_LIBS) $(LIBART_LIBS)\n+lib_gnu_java_awt_peer_gtk_la_LIBADD = $(GTK_LIBS) $(GLIB_LIBS) $(LIBART_LIBS) $(CAIRO_LIBS) $(PANGOFT2_LIBS)\n \n lib_org_w3c_dom_la_SOURCES = org/w3c/dom/Attr.java \\\n org/w3c/dom/CDATASection.java \\\n@@ -430,7 +446,8 @@ $(c_files): java/lang/fdlibm.h java/lang/ieeefp.h java/lang/mprec.h\n \n ## FIXME: see above\n $(gtk_c_files): %.lo: %.c\n-\t$(LTCOMPILE) -c -Ijniinclude -I$(srcdir)/jni/classpath -I$(srcdir)/jni/gtk-peer $(GTK_CFLAGS) $(LIBART_CFLAGS) -o $@ $<\n+\t$(LTCOMPILE) -c -Ijniinclude -I$(srcdir)/jni/classpath -I$(srcdir)/jni/gtk-peer \\\n+\t$(GTK_CFLAGS) $(LIBART_CFLAGS) $(CAIRO_LIBS) $(PANGOFT2_LIBS) -o $@ $<\n \n $(gtk_c_files): $(gtk_c_headers)\n \n@@ -604,7 +621,6 @@ install-data-local:\n \t$(INSTALL_DATA) 'java/lang/reflect/Proxy$$ProxyType.h' $(DESTDIR)$(includedir)/java/lang/reflect/\n \t$(INSTALL_DATA) 'gnu/java/net/PlainSocketImpl$$SocketInputStream.h' $(DESTDIR)$(includedir)/gnu/java/net/\n \t$(INSTALL_DATA) 'gnu/java/net/PlainSocketImpl$$SocketOutputStream.h' $(DESTDIR)$(includedir)/gnu/java/net/\n-\t\n \t$(INSTALL_DATA) $(srcdir)/java/util/logging/logging.properties $(DESTDIR)$(propdir)/logging.properties\n \n ## ################################################################\n@@ -833,13 +849,15 @@ gnu/awt/j2d/MappedRaster.java \\\n gnu/java/awt/BitMaskExtent.java \\\n gnu/java/awt/Buffers.java \\\n gnu/java/awt/ComponentDataBlitOp.java \\\n+gnu/java/awt/ClasspathToolkit.java \\\n gnu/java/awt/EmbeddedWindow.java \\\n gnu/java/awt/EmbeddedWindowSupport.java \\\n gnu/java/awt/EventModifier.java \\\n gnu/java/awt/image/ImageDecoder.java \\\n gnu/java/awt/image/XBMDecoder.java \\\n gnu/java/awt/peer/EmbeddedWindowPeer.java \\\n gnu/java/awt/peer/GLightweightPeer.java \\\n+gnu/java/awt/peer/ClasspathFontPeer.java \\\n gnu/java/beans/editors/ColorEditor.java\t\\\n gnu/java/beans/editors/FontEditor.java \\\n gnu/java/beans/editors/NativeBooleanEditor.java\t\\"}, {"sha": "6db0bf0d4f6e0fa711ee0b3c748c6fcb56dc98ba", "filename": "libjava/Makefile.in", "status": "modified", "additions": 192, "deletions": 80, "changes": 272, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=8fe7789eddcc6ff9517e5768a573fc89d95b102b", "patch": "@@ -1,6 +1,6 @@\n-# Makefile.in generated automatically by automake 1.4 from Makefile.am\n+# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am\n \n-# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n+# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -66,6 +66,8 @@ target_triplet = @target@\n AR = @AR@\n AS = @AS@\n BACKTRACESPEC = @BACKTRACESPEC@\n+CAIRO_CFLAGS = @CAIRO_CFLAGS@\n+CAIRO_LIBS = @CAIRO_LIBS@\n CC = @CC@\n CHECKREFSPEC = @CHECKREFSPEC@\n COMPPATH = @COMPPATH@\n@@ -116,6 +118,8 @@ MAKEINFO = @MAKEINFO@\n OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n PACKAGE = @PACKAGE@\n+PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n+PANGOFT2_LIBS = @PANGOFT2_LIBS@\n PERL = @PERL@\n PKG_CONFIG = @PKG_CONFIG@\n PLATFORMOBJS = @PLATFORMOBJS@\n@@ -258,8 +262,15 @@ libgcj_la_LDFLAGS = -rpath $(toolexeclibdir) $(THREADLDFLAGS) $(THREADLIBS) \\\n \t-version-info `grep -v '^\\#' $(srcdir)/libtool-version`\n \n libgcj_la_LINK = $(LIBLINK)\n+@GTK_CAIRO_TRUE@gtk_cairo_c_source_files = @GTK_CAIRO_TRUE@\\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeer.c \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.c \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c\n+@GTK_CAIRO_FALSE@gtk_cairo_c_source_files = \n \n gtk_c_source_files = \\\n+$(gtk_cairo_c_source_files) \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c \\\n jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.c \\\n@@ -297,8 +308,12 @@ jni/classpath/primlib.c\n \n \n gtk_awt_peer_sources = \\\n+gnu/java/awt/peer/gtk/GdkClasspathFontPeer.java \\\n+gnu/java/awt/peer/gtk/GdkClasspathFontPeerMetrics.java \\\n gnu/java/awt/peer/gtk/GdkFontMetrics.java \\\n+gnu/java/awt/peer/gtk/GdkGlyphVector.java \\\n gnu/java/awt/peer/gtk/GdkGraphics.java \\\n+gnu/java/awt/peer/gtk/GdkGraphics2D.java \\\n gnu/java/awt/peer/gtk/GdkPixbufDecoder.java \\\n gnu/java/awt/peer/gtk/GtkArg.java \\\n gnu/java/awt/peer/gtk/GtkArgList.java \\\n@@ -351,7 +366,7 @@ jni/classpath/native_state.h \\\n jni/classpath/primlib.h\n \n \n-lib_gnu_java_awt_peer_gtk_la_LIBADD = $(GTK_LIBS) $(GLIB_LIBS) $(LIBART_LIBS)\n+lib_gnu_java_awt_peer_gtk_la_LIBADD = $(GTK_LIBS) $(GLIB_LIBS) $(LIBART_LIBS) $(CAIRO_LIBS) $(PANGOFT2_LIBS)\n \n lib_org_w3c_dom_la_SOURCES = org/w3c/dom/Attr.java \\\n org/w3c/dom/CDATASection.java \\\n@@ -547,13 +562,15 @@ gnu/awt/j2d/MappedRaster.java \\\n gnu/java/awt/BitMaskExtent.java \\\n gnu/java/awt/Buffers.java \\\n gnu/java/awt/ComponentDataBlitOp.java \\\n+gnu/java/awt/ClasspathToolkit.java \\\n gnu/java/awt/EmbeddedWindow.java \\\n gnu/java/awt/EmbeddedWindowSupport.java \\\n gnu/java/awt/EventModifier.java \\\n gnu/java/awt/image/ImageDecoder.java \\\n gnu/java/awt/image/XBMDecoder.java \\\n gnu/java/awt/peer/EmbeddedWindowPeer.java \\\n gnu/java/awt/peer/GLightweightPeer.java \\\n+gnu/java/awt/peer/ClasspathFontPeer.java \\\n gnu/java/beans/editors/ColorEditor.java\t\\\n gnu/java/beans/editors/FontEditor.java \\\n gnu/java/beans/editors/NativeBooleanEditor.java\t\\\n@@ -2682,77 +2699,162 @@ org/w3c/dom/traversal/NodeIterator.lo \\\n org/w3c/dom/traversal/TreeWalker.lo\n lib_gnu_java_awt_peer_gtk_la_LDFLAGS = \n lib_gnu_java_awt_peer_gtk_la_DEPENDENCIES = \n-lib_gnu_java_awt_peer_gtk_la_OBJECTS =  \\\n-gnu/java/awt/peer/gtk/GdkFontMetrics.lo \\\n-gnu/java/awt/peer/gtk/GdkGraphics.lo \\\n-gnu/java/awt/peer/gtk/GdkPixbufDecoder.lo \\\n-gnu/java/awt/peer/gtk/GtkArg.lo gnu/java/awt/peer/gtk/GtkArgList.lo \\\n-gnu/java/awt/peer/gtk/GtkButtonPeer.lo \\\n-gnu/java/awt/peer/gtk/GtkCanvasPeer.lo \\\n-gnu/java/awt/peer/gtk/GtkCheckboxGroupPeer.lo \\\n-gnu/java/awt/peer/gtk/GtkCheckboxMenuItemPeer.lo \\\n-gnu/java/awt/peer/gtk/GtkCheckboxPeer.lo \\\n-gnu/java/awt/peer/gtk/GtkChoicePeer.lo \\\n-gnu/java/awt/peer/gtk/GtkClipboard.lo \\\n-gnu/java/awt/peer/gtk/GtkComponentPeer.lo \\\n-gnu/java/awt/peer/gtk/GtkContainerPeer.lo \\\n-gnu/java/awt/peer/gtk/GtkDialogPeer.lo \\\n-gnu/java/awt/peer/gtk/GtkEmbeddedWindowPeer.lo \\\n-gnu/java/awt/peer/gtk/GtkFileDialogPeer.lo \\\n-gnu/java/awt/peer/gtk/GtkFontPeer.lo \\\n-gnu/java/awt/peer/gtk/GtkFramePeer.lo \\\n-gnu/java/awt/peer/gtk/GtkGenericPeer.lo \\\n-gnu/java/awt/peer/gtk/GtkImage.lo \\\n-gnu/java/awt/peer/gtk/GtkImagePainter.lo \\\n-gnu/java/awt/peer/gtk/GtkLabelPeer.lo \\\n-gnu/java/awt/peer/gtk/GtkListPeer.lo \\\n-gnu/java/awt/peer/gtk/GtkMainThread.lo \\\n-gnu/java/awt/peer/gtk/GtkMenuBarPeer.lo \\\n-gnu/java/awt/peer/gtk/GtkMenuComponentPeer.lo \\\n-gnu/java/awt/peer/gtk/GtkMenuItemPeer.lo \\\n-gnu/java/awt/peer/gtk/GtkMenuPeer.lo \\\n-gnu/java/awt/peer/gtk/GtkOffScreenImage.lo \\\n-gnu/java/awt/peer/gtk/GtkPanelPeer.lo \\\n-gnu/java/awt/peer/gtk/GtkPopupMenuPeer.lo \\\n-gnu/java/awt/peer/gtk/GtkScrollPanePeer.lo \\\n-gnu/java/awt/peer/gtk/GtkScrollbarPeer.lo \\\n-gnu/java/awt/peer/gtk/GtkTextAreaPeer.lo \\\n-gnu/java/awt/peer/gtk/GtkTextComponentPeer.lo \\\n-gnu/java/awt/peer/gtk/GtkTextFieldPeer.lo \\\n-gnu/java/awt/peer/gtk/GtkToolkit.lo \\\n-gnu/java/awt/peer/gtk/GtkWindowPeer.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCanvasPeer.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkClipboard.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEmbeddedWindowPeer.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkLabelPeer.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuBarPeer.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuPeer.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPanelPeer.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPopupMenuPeer.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollBarPeer.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollPanePeer.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextAreaPeer.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkToolkit.lo \\\n-jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.lo \\\n-jni/gtk-peer/gthread-jni.lo jni/classpath/jcl.lo \\\n-jni/classpath/jnilink.lo jni/classpath/native_state.lo \\\n-jni/classpath/primlib.lo\n+@GTK_CAIRO_TRUE@lib_gnu_java_awt_peer_gtk_la_OBJECTS =  \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GdkClasspathFontPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GdkClasspathFontPeerMetrics.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GdkFontMetrics.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GdkGlyphVector.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GdkGraphics.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GdkGraphics2D.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GdkPixbufDecoder.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkArg.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkArgList.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkButtonPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkCanvasPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkCheckboxGroupPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkCheckboxMenuItemPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkCheckboxPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkChoicePeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkClipboard.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkComponentPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkContainerPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkDialogPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkEmbeddedWindowPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkFileDialogPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkFontPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkFramePeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkGenericPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkImage.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkImagePainter.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkLabelPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkListPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkMainThread.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkMenuBarPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkMenuComponentPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkMenuItemPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkMenuPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkOffScreenImage.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkPanelPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkPopupMenuPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkScrollPanePeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkScrollbarPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkTextAreaPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkTextComponentPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkTextFieldPeer.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkToolkit.lo \\\n+@GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GtkWindowPeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCanvasPeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkClipboard.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEmbeddedWindowPeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkLabelPeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuBarPeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuPeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPanelPeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPopupMenuPeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollBarPeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollPanePeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextAreaPeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkToolkit.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.lo \\\n+@GTK_CAIRO_TRUE@jni/gtk-peer/gthread-jni.lo jni/classpath/jcl.lo \\\n+@GTK_CAIRO_TRUE@jni/classpath/jnilink.lo jni/classpath/native_state.lo \\\n+@GTK_CAIRO_TRUE@jni/classpath/primlib.lo\n+@GTK_CAIRO_FALSE@lib_gnu_java_awt_peer_gtk_la_OBJECTS =  \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkClasspathFontPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkClasspathFontPeerMetrics.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkFontMetrics.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkGlyphVector.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkGraphics.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkGraphics2D.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkPixbufDecoder.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkArg.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkArgList.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkButtonPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkCanvasPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkCheckboxGroupPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkCheckboxMenuItemPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkCheckboxPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkChoicePeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkClipboard.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkComponentPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkContainerPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkDialogPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkEmbeddedWindowPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkFileDialogPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkFontPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkFramePeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkGenericPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkImage.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkImagePainter.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkLabelPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkListPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMainThread.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMenuBarPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMenuComponentPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMenuItemPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMenuPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkOffScreenImage.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkPanelPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkPopupMenuPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkScrollPanePeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkScrollbarPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkTextAreaPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkTextComponentPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkTextFieldPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkToolkit.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkWindowPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCanvasPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkClipboard.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEmbeddedWindowPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkLabelPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuBarPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPanelPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPopupMenuPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollBarPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollPanePeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextAreaPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkToolkit.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gthread-jni.lo jni/classpath/jcl.lo \\\n+@GTK_CAIRO_FALSE@jni/classpath/jnilink.lo jni/classpath/native_state.lo \\\n+@GTK_CAIRO_FALSE@jni/classpath/primlib.lo\n lib_gnu_awt_xlib_la_OBJECTS =  gnu/gcj/xlib/natClip.lo \\\n gnu/gcj/xlib/natColormap.lo gnu/gcj/xlib/natDisplay.lo \\\n gnu/gcj/xlib/natDrawable.lo gnu/gcj/xlib/natFont.lo \\\n@@ -2796,7 +2898,7 @@ libgcj-test.spec.in libgcj.pc.in libgcj.spec.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = tar\n+TAR = gtar\n GZIP_ENV = --best\n DIST_SUBDIRS =  @DIRLTDL@ testsuite gcj include @DIRLTDL@ gcj include\n DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n@@ -2878,17 +2980,23 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/gnu/gcj/xlib/natXException.P .deps/gnu/gcj/xlib/natXExposeEvent.P \\\n .deps/gnu/gcj/xlib/natXImage.P .deps/gnu/gcj/xlib/natXUnmapEvent.P \\\n .deps/gnu/java/awt/BitMaskExtent.P .deps/gnu/java/awt/Buffers.P \\\n+.deps/gnu/java/awt/ClasspathToolkit.P \\\n .deps/gnu/java/awt/ComponentDataBlitOp.P \\\n .deps/gnu/java/awt/EmbeddedWindow.P \\\n .deps/gnu/java/awt/EmbeddedWindowSupport.P \\\n .deps/gnu/java/awt/EventModifier.P \\\n .deps/gnu/java/awt/image/ImageDecoder.P \\\n .deps/gnu/java/awt/image/XBMDecoder.P \\\n .deps/gnu/java/awt/natEmbeddedWindow.P \\\n+.deps/gnu/java/awt/peer/ClasspathFontPeer.P \\\n .deps/gnu/java/awt/peer/EmbeddedWindowPeer.P \\\n .deps/gnu/java/awt/peer/GLightweightPeer.P \\\n+.deps/gnu/java/awt/peer/gtk/GdkClasspathFontPeer.P \\\n+.deps/gnu/java/awt/peer/gtk/GdkClasspathFontPeerMetrics.P \\\n .deps/gnu/java/awt/peer/gtk/GdkFontMetrics.P \\\n+.deps/gnu/java/awt/peer/gtk/GdkGlyphVector.P \\\n .deps/gnu/java/awt/peer/gtk/GdkGraphics.P \\\n+.deps/gnu/java/awt/peer/gtk/GdkGraphics2D.P \\\n .deps/gnu/java/awt/peer/gtk/GdkPixbufDecoder.P \\\n .deps/gnu/java/awt/peer/gtk/GtkArg.P \\\n .deps/gnu/java/awt/peer/gtk/GtkArgList.P \\\n@@ -4396,8 +4504,12 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/javax/transaction/xa/Xid.P .deps/jni.P .deps/jni/classpath/jcl.P \\\n .deps/jni/classpath/jnilink.P .deps/jni/classpath/native_state.P \\\n .deps/jni/classpath/primlib.P \\\n+.deps/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeer.P \\\n+.deps/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.P \\\n .deps/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.P \\\n+.deps/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGlyphVector.P \\\n .deps/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.P \\\n+.deps/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.P \\\n .deps/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.P \\\n .deps/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.P \\\n .deps/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCanvasPeer.P \\\n@@ -4715,7 +4827,7 @@ uninstall-toolexecmainlibDATA:\n all-recursive install-data-recursive install-exec-recursive \\\n installdirs-recursive install-recursive uninstall-recursive  \\\n check-recursive installcheck-recursive info-recursive dvi-recursive:\n-\t@set fnord $(MAKEFLAGS); amf=$$2; \\\n+\t@set fnord $$MAKEFLAGS; amf=$$2; \\\n \tdot_seen=no; \\\n \ttarget=`echo $@ | sed s/-recursive//`; \\\n \tlist='$(SUBDIRS)'; for subdir in $$list; do \\\n@@ -4735,11 +4847,11 @@ check-recursive installcheck-recursive info-recursive dvi-recursive:\n \n mostlyclean-recursive clean-recursive distclean-recursive \\\n maintainer-clean-recursive:\n-\t@set fnord $(MAKEFLAGS); amf=$$2; \\\n+\t@set fnord $$MAKEFLAGS; amf=$$2; \\\n \tdot_seen=no; \\\n \trev=''; list='$(SUBDIRS)'; for subdir in $$list; do \\\n \t  rev=\"$$subdir $$rev\"; \\\n-\t  test \"$$subdir\" = \".\" && dot_seen=yes; \\\n+\t  test \"$$subdir\" != \".\" || dot_seen=yes; \\\n \tdone; \\\n \ttest \"$$dot_seen\" = \"no\" && rev=\". $$rev\"; \\\n \ttarget=`echo $@ | sed s/-recursive//`; \\\n@@ -5084,7 +5196,8 @@ $(extra_cc_files): %.lo: %.cc\n $(c_files): java/lang/fdlibm.h java/lang/ieeefp.h java/lang/mprec.h\n \n $(gtk_c_files): %.lo: %.c\n-\t$(LTCOMPILE) -c -Ijniinclude -I$(srcdir)/jni/classpath -I$(srcdir)/jni/gtk-peer $(GTK_CFLAGS) $(LIBART_CFLAGS) -o $@ $<\n+\t$(LTCOMPILE) -c -Ijniinclude -I$(srcdir)/jni/classpath -I$(srcdir)/jni/gtk-peer \\\n+\t$(GTK_CFLAGS) $(LIBART_CFLAGS) $(CAIRO_LIBS) $(PANGOFT2_LIBS) -o $@ $<\n \n $(gtk_c_files): $(gtk_c_headers)\n \n@@ -5223,7 +5336,6 @@ install-data-local:\n \t$(INSTALL_DATA) 'java/lang/reflect/Proxy$$ProxyType.h' $(DESTDIR)$(includedir)/java/lang/reflect/\n \t$(INSTALL_DATA) 'gnu/java/net/PlainSocketImpl$$SocketInputStream.h' $(DESTDIR)$(includedir)/gnu/java/net/\n \t$(INSTALL_DATA) 'gnu/java/net/PlainSocketImpl$$SocketOutputStream.h' $(DESTDIR)$(includedir)/gnu/java/net/\n-\n \t$(INSTALL_DATA) $(srcdir)/java/util/logging/logging.properties $(DESTDIR)$(propdir)/logging.properties\n \n maintainer-check: libgcj.la"}, {"sha": "6e9ade4dc55c2add52e84c95ffeb769cfb3a1002", "filename": "libjava/acinclude.m4", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Facinclude.m4?ref=8fe7789eddcc6ff9517e5768a573fc89d95b102b", "patch": "@@ -268,3 +268,60 @@ else\n             [Indicate that linker is not able to 8-byte align static data])\n fi[]dnl\n ])# CHECK_FOR_BROKEN_MINGW_LD\n+\n+dnl PKG_CHECK_MODULES(GSTUFF, gtk+-2.0 >= 1.3 glib = 1.3.4, action-if, action-not)\n+dnl defines GSTUFF_LIBS, GSTUFF_CFLAGS, see pkg-config man page\n+dnl also defines GSTUFF_PKG_ERRORS on error\n+AC_DEFUN(PKG_CHECK_MODULES, [\n+  succeeded=no\n+\n+  if test -z \"$PKG_CONFIG\"; then\n+    AC_PATH_PROG(PKG_CONFIG, pkg-config, no)\n+  fi\n+\n+  if test \"$PKG_CONFIG\" = \"no\" ; then\n+     echo \"*** The pkg-config script could not be found. Make sure it is\"\n+     echo \"*** in your path, or set the PKG_CONFIG environment variable\"\n+     echo \"*** to the full path to pkg-config.\"\n+     echo \"*** Or see http://www.freedesktop.org/software/pkgconfig to get pkg-config.\"\n+  else\n+     PKG_CONFIG_MIN_VERSION=0.9.0\n+     if $PKG_CONFIG --atleast-pkgconfig-version $PKG_CONFIG_MIN_VERSION; then\n+        AC_MSG_CHECKING(for $2)\n+\n+        if $PKG_CONFIG --exists \"$2\" ; then\n+            AC_MSG_RESULT(yes)\n+            succeeded=yes\n+\n+            AC_MSG_CHECKING($1_CFLAGS)\n+            $1_CFLAGS=`$PKG_CONFIG --cflags \"$2\"`\n+            AC_MSG_RESULT($$1_CFLAGS)\n+\n+            AC_MSG_CHECKING($1_LIBS)\n+            $1_LIBS=`$PKG_CONFIG --libs \"$2\"`\n+            AC_MSG_RESULT($$1_LIBS)\n+        else\n+            $1_CFLAGS=\"\"\n+            $1_LIBS=\"\"\n+            ## If we have a custom action on failure, don't print errors, but \n+            ## do set a variable so people can do so.\n+            $1_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors \"$2\"`\n+            ifelse([$4], ,echo $$1_PKG_ERRORS,)\n+        fi\n+\n+        AC_SUBST($1_CFLAGS)\n+        AC_SUBST($1_LIBS)\n+     else\n+        echo \"*** Your version of pkg-config is too old. You need version $PKG_CONFIG_MIN_VERSION or newer.\"\n+        echo \"*** See http://www.freedesktop.org/software/pkgconfig\"\n+     fi\n+  fi\n+\n+  if test $succeeded = yes; then\n+     ifelse([$3], , :, [$3])\n+  else\n+     ifelse([$4], , AC_MSG_ERROR([Library requirements ($2) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them.]), [$4])\n+  fi\n+])\n+\n+"}, {"sha": "0a6a15eae71ddf83b1650cac762e56fe39ad11e5", "filename": "libjava/aclocal.m4", "status": "modified", "additions": 99, "deletions": 15, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Faclocal.m4?ref=8fe7789eddcc6ff9517e5768a573fc89d95b102b", "patch": "@@ -1,6 +1,6 @@\n-dnl aclocal.m4 generated automatically by aclocal 1.4\n+dnl aclocal.m4 generated automatically by aclocal 1.4-p6\n \n-dnl Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n+dnl Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.\n dnl This file is free software; the Free Software Foundation\n dnl gives unlimited permission to copy and/or distribute it,\n dnl with or without modifications, as long as this notice is preserved.\n@@ -281,6 +281,63 @@ else\n fi[]dnl\n ])# CHECK_FOR_BROKEN_MINGW_LD\n \n+dnl PKG_CHECK_MODULES(GSTUFF, gtk+-2.0 >= 1.3 glib = 1.3.4, action-if, action-not)\n+dnl defines GSTUFF_LIBS, GSTUFF_CFLAGS, see pkg-config man page\n+dnl also defines GSTUFF_PKG_ERRORS on error\n+AC_DEFUN(PKG_CHECK_MODULES, [\n+  succeeded=no\n+\n+  if test -z \"$PKG_CONFIG\"; then\n+    AC_PATH_PROG(PKG_CONFIG, pkg-config, no)\n+  fi\n+\n+  if test \"$PKG_CONFIG\" = \"no\" ; then\n+     echo \"*** The pkg-config script could not be found. Make sure it is\"\n+     echo \"*** in your path, or set the PKG_CONFIG environment variable\"\n+     echo \"*** to the full path to pkg-config.\"\n+     echo \"*** Or see http://www.freedesktop.org/software/pkgconfig to get pkg-config.\"\n+  else\n+     PKG_CONFIG_MIN_VERSION=0.9.0\n+     if $PKG_CONFIG --atleast-pkgconfig-version $PKG_CONFIG_MIN_VERSION; then\n+        AC_MSG_CHECKING(for $2)\n+\n+        if $PKG_CONFIG --exists \"$2\" ; then\n+            AC_MSG_RESULT(yes)\n+            succeeded=yes\n+\n+            AC_MSG_CHECKING($1_CFLAGS)\n+            $1_CFLAGS=`$PKG_CONFIG --cflags \"$2\"`\n+            AC_MSG_RESULT($$1_CFLAGS)\n+\n+            AC_MSG_CHECKING($1_LIBS)\n+            $1_LIBS=`$PKG_CONFIG --libs \"$2\"`\n+            AC_MSG_RESULT($$1_LIBS)\n+        else\n+            $1_CFLAGS=\"\"\n+            $1_LIBS=\"\"\n+            ## If we have a custom action on failure, don't print errors, but \n+            ## do set a variable so people can do so.\n+            $1_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors \"$2\"`\n+            ifelse([$4], ,echo $$1_PKG_ERRORS,)\n+        fi\n+\n+        AC_SUBST($1_CFLAGS)\n+        AC_SUBST($1_LIBS)\n+     else\n+        echo \"*** Your version of pkg-config is too old. You need version $PKG_CONFIG_MIN_VERSION or newer.\"\n+        echo \"*** See http://www.freedesktop.org/software/pkgconfig\"\n+     fi\n+  fi\n+\n+  if test $succeeded = yes; then\n+     ifelse([$3], , :, [$3])\n+  else\n+     ifelse([$4], , AC_MSG_ERROR([Library requirements ($2) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them.]), [$4])\n+  fi\n+])\n+\n+\n+\n # Do all the work for Automake.  This macro actually does too much --\n # some checks are only needed if your package does certain things.\n # But this isn't really a big deal.\n@@ -290,8 +347,9 @@ fi[]dnl\n dnl Usage:\n dnl AM_INIT_AUTOMAKE(package,version, [no-define])\n \n-AC_DEFUN(AM_INIT_AUTOMAKE,\n-[AC_REQUIRE([AC_PROG_INSTALL])\n+AC_DEFUN([AM_INIT_AUTOMAKE],\n+[AC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl\n+AC_REQUIRE([AC_PROG_INSTALL])\n PACKAGE=[$1]\n AC_SUBST(PACKAGE)\n VERSION=[$2]\n@@ -307,18 +365,47 @@ AC_REQUIRE([AM_SANITY_CHECK])\n AC_REQUIRE([AC_ARG_PROGRAM])\n dnl FIXME This is truly gross.\n missing_dir=`cd $ac_aux_dir && pwd`\n-AM_MISSING_PROG(ACLOCAL, aclocal, $missing_dir)\n+AM_MISSING_PROG(ACLOCAL, aclocal-${am__api_version}, $missing_dir)\n AM_MISSING_PROG(AUTOCONF, autoconf, $missing_dir)\n-AM_MISSING_PROG(AUTOMAKE, automake, $missing_dir)\n+AM_MISSING_PROG(AUTOMAKE, automake-${am__api_version}, $missing_dir)\n AM_MISSING_PROG(AUTOHEADER, autoheader, $missing_dir)\n AM_MISSING_PROG(MAKEINFO, makeinfo, $missing_dir)\n AC_REQUIRE([AC_PROG_MAKE_SET])])\n \n+# Copyright 2002  Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n+\n+# AM_AUTOMAKE_VERSION(VERSION)\n+# ----------------------------\n+# Automake X.Y traces this macro to ensure aclocal.m4 has been\n+# generated from the m4 files accompanying Automake X.Y.\n+AC_DEFUN([AM_AUTOMAKE_VERSION],[am__api_version=\"1.4\"])\n+\n+# AM_SET_CURRENT_AUTOMAKE_VERSION\n+# -------------------------------\n+# Call AM_AUTOMAKE_VERSION so it can be traced.\n+# This function is AC_REQUIREd by AC_INIT_AUTOMAKE.\n+AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],\n+\t [AM_AUTOMAKE_VERSION([1.4-p6])])\n+\n #\n # Check to make sure that the build environment is sane.\n #\n \n-AC_DEFUN(AM_SANITY_CHECK,\n+AC_DEFUN([AM_SANITY_CHECK],\n [AC_MSG_CHECKING([whether build environment is sane])\n # Just in case\n sleep 1\n@@ -359,7 +446,7 @@ AC_MSG_RESULT(yes)])\n \n dnl AM_MISSING_PROG(NAME, PROGRAM, DIRECTORY)\n dnl The program must properly implement --version.\n-AC_DEFUN(AM_MISSING_PROG,\n+AC_DEFUN([AM_MISSING_PROG],\n [AC_MSG_CHECKING(for working $2)\n # Run test in a subshell; some versions of sh will print an error if\n # an executable is not found, even if stderr is redirected.\n@@ -378,7 +465,7 @@ AC_SUBST($1)])\n \n # serial 1\n \n-AC_DEFUN(AM_MAINTAINER_MODE,\n+AC_DEFUN([AM_MAINTAINER_MODE],\n [AC_MSG_CHECKING([whether to enable maintainer-specific portions of Makefiles])\n   dnl maintainer-mode is disabled by default\n   AC_ARG_ENABLE(maintainer-mode,\n@@ -395,7 +482,7 @@ AC_DEFUN(AM_MAINTAINER_MODE,\n \n # Define a conditional.\n \n-AC_DEFUN(AM_CONDITIONAL,\n+AC_DEFUN([AM_CONDITIONAL],\n [AC_SUBST($1_TRUE)\n AC_SUBST($1_FALSE)\n if $2; then\n@@ -408,7 +495,7 @@ fi])\n \n # Like AC_CONFIG_HEADER, but automatically create stamp file.\n \n-AC_DEFUN(AM_CONFIG_HEADER,\n+AC_DEFUN([AM_CONFIG_HEADER],\n [AC_PREREQ([2.12])\n AC_CONFIG_HEADER([$1])\n dnl When config.status generates a header, we must update the stamp-h file.\n@@ -873,10 +960,7 @@ AC_ARG_ENABLE(libarttest, [  --disable-libarttest       Do not try to compile an\n      fi\n   fi\n \n-  AC_PATH_PROG(LIBART_CONFIG, libart2-config, no)\n-  if test \"$LIBART_CONFIG\" = \"no\" ; then\n-    AC_PATH_PROG(LIBART_CONFIG, libart-config, no)\n-  fi\n+  AC_PATH_PROG(LIBART_CONFIG, libart-config, no)\n   min_libart_version=ifelse([$1], ,0.2.5,$1)\n   AC_MSG_CHECKING(for LIBART - version >= $min_libart_version)\n   no_libart=\"\""}, {"sha": "f3fbae6d907299ac9fca3adc9b0f1abdfddb8adc", "filename": "libjava/configure", "status": "modified", "additions": 580, "deletions": 398, "changes": 978, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=8fe7789eddcc6ff9517e5768a573fc89d95b102b"}, {"sha": "134fe1e2f11fd051cd18c4c38db3062b0507e210", "filename": "libjava/configure.in", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.in?ref=8fe7789eddcc6ff9517e5768a573fc89d95b102b", "patch": "@@ -405,6 +405,18 @@ done\n AM_CONDITIONAL(XLIB_AWT, test \"$use_xlib_awt\" = yes)\n AM_CONDITIONAL(GTK_AWT, test \"$use_gtk_awt\" = yes)\n \n+dnl determine whether to enable the cairo GTK Graphics2D backend\n+AC_ARG_ENABLE(gtk-cairo, [  --enable-gtk-cairo       build the cairo Graphics2D implementation on GTK])\n+AM_CONDITIONAL(GTK_CAIRO, test \"x${enable_gtk_cairo}\" = xyes)\n+if test \"x${enable_gtk_cairo}\" = xyes\n+then\n+\tPKG_CHECK_MODULES(CAIRO, cairo)\n+\tPKG_CHECK_MODULES(PANGOFT2, pangoft2)\n+fi\n+AC_SUBST(CAIRO_LIBS)\n+AC_SUBST(CAIRO_CFLAGS)\n+AC_SUBST(PANGOFT2_LIBS)\n+AC_SUBST(PANGOFT2_CFLAGS)\n \n dnl FIXME: this should be _libs on some hosts.\n libsubdir=.libs"}, {"sha": "1a0c4c968e386724d3a9108b8093f3d0f3716476", "filename": "libjava/gnu/java/awt/peer/gtk/GtkCanvasPeer.java", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCanvasPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCanvasPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCanvasPeer.java?ref=8fe7789eddcc6ff9517e5768a573fc89d95b102b", "patch": "@@ -56,6 +56,9 @@ public GtkCanvasPeer (Canvas c)\n \n   public Graphics getGraphics ()\n   {\n+    if (GtkToolkit.useGraphics2D ())\n+      return new GdkGraphics2D (this);\n+    else\n     return new GdkGraphics (this);\n   }\n "}, {"sha": "6a7c3405f844070029799ab219374e741da24326", "filename": "libjava/gnu/java/awt/peer/gtk/GtkComponentPeer.java", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java?ref=8fe7789eddcc6ff9517e5768a573fc89d95b102b", "patch": "@@ -48,6 +48,7 @@\n import java.awt.FontMetrics;\n import java.awt.Frame;\n import java.awt.Graphics;\n+import java.awt.Graphics2D;\n import java.awt.GraphicsConfiguration;\n import java.awt.Image;\n import java.awt.Insets;\n@@ -148,7 +149,16 @@ public Image createImage (ImageProducer producer)\n \n   public Image createImage (int width, int height)\n   {\n-    GdkGraphics g = new GdkGraphics (width, height);\n+    Graphics g;\n+    if (GtkToolkit.useGraphics2D ())\n+      {\n+        Graphics2D g2 = new GdkGraphics2D (width, height);\n+        g2.setBackground (getBackground ());\n+        g = g2;\n+      }\n+    else\n+      g = new GdkGraphics (width, height);\n+\n     return new GtkOffScreenImage (null, g, width, height);\n   }\n "}, {"sha": "e51b7f0985651dc37df0999bc3fb4604fd4fa3c3", "filename": "libjava/gnu/java/awt/peer/gtk/GtkContainerPeer.java", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkContainerPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkContainerPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkContainerPeer.java?ref=8fe7789eddcc6ff9517e5768a573fc89d95b102b", "patch": "@@ -92,6 +92,9 @@ public void setBounds (int x, int y, int width, int height)\n \n   public Graphics getGraphics ()\n   {\n+    if (GtkToolkit.useGraphics2D ())\n+        return new GdkGraphics2D (this);\n+    else\n     return new GdkGraphics (this);\n   }\n "}, {"sha": "8c1ec8fedd0404691b1f8955fdb62418a4197a22", "filename": "libjava/gnu/java/awt/peer/gtk/GtkFontPeer.java", "status": "modified", "additions": 109, "deletions": 2, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFontPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFontPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFontPeer.java?ref=8fe7789eddcc6ff9517e5768a573fc89d95b102b", "patch": "@@ -38,10 +38,15 @@\n \n package gnu.java.awt.peer.gtk;\n import java.awt.peer.FontPeer;\n-import java.awt.Font;\n+import java.awt.*;\n+import java.awt.geom.*;\n+import java.awt.font.*;\n+import java.util.Locale;\n import java.util.ResourceBundle;\n+import java.text.*;\n+import gnu.java.awt.peer.ClasspathFontPeer;\n \n-public class GtkFontPeer implements FontPeer\n+public class GtkFontPeer extends ClasspathFontPeer\n {\n   private static ResourceBundle bundle;\n   \n@@ -61,6 +66,8 @@ public class GtkFontPeer implements FontPeer\n \n   public GtkFontPeer (String name, int style)\n   {\n+    super(name, style, 12 /* kludge */);\n+\n     if (bundle != null)\n       Xname = bundle.getString (name.toLowerCase () + \".\" + style);\n     else\n@@ -91,4 +98,104 @@ public String getXLFD ()\n   {\n     return Xname;\n   }\n+\n+\n+  /* remaining methods are for static compatibility with the newer\n+     ClasspathFontPeer superclass; none of these methods ever existed or\n+     worked on the older FontPeer interface, but we need to pretend to\n+     support them anyways. */\n+\n+  public boolean canDisplay (Font font, char c)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  public int canDisplayUpTo (Font font, CharacterIterator i, int start, int limit)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  public String getSubFamilyName (Font font, Locale locale)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  public String getPostScriptName (Font font)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  public int getNumGlyphs (Font font)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  public int getMissingGlyphCode (Font font)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  public byte getBaselineFor (Font font, char c)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  public String getGlyphName (Font font, int glyphIndex)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  public GlyphVector createGlyphVector (Font font,\n+                                                 FontRenderContext frc,\n+                                                 CharacterIterator ci)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  public GlyphVector createGlyphVector (Font font, \n+                                                 FontRenderContext ctx, \n+                                                 int[] glyphCodes)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  public GlyphVector layoutGlyphVector (Font font, \n+                                                 FontRenderContext frc, \n+                                                 char[] chars, int start, \n+                                                 int limit, int flags)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  public FontMetrics getFontMetrics (Font font)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  public boolean hasUniformLineMetrics (Font font)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  public LineMetrics getLineMetrics (Font font, \n+                                              CharacterIterator ci, \n+                                              int begin, int limit, \n+                                              FontRenderContext rc)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  public Rectangle2D getMaxCharBounds (Font font, \n+                                                FontRenderContext rc)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  public Rectangle2D getStringBounds (Font font, \n+                                               CharacterIterator ci, \n+                                               int begin, int limit, \n+                                               FontRenderContext frc)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n }"}, {"sha": "13d2fc77a25cae956e1beb3b94e9759e97298251", "filename": "libjava/gnu/java/awt/peer/gtk/GtkFramePeer.java", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java?ref=8fe7789eddcc6ff9517e5768a573fc89d95b102b", "patch": "@@ -41,6 +41,7 @@\n import java.awt.Component;\n import java.awt.Frame;\n import java.awt.Graphics;\n+import java.awt.Graphics2D;\n import java.awt.Image;\n import java.awt.Insets;\n import java.awt.MenuBar;\n@@ -109,8 +110,12 @@ public void setIconImage (Image image)\n \n   public Graphics getGraphics ()\n   {\n-    GdkGraphics g = new GdkGraphics (this);\n-    g.translateNative (-insets.left, -insets.top);\n+    Graphics g;\n+    if (GtkToolkit.useGraphics2D ())\n+      g = new GdkGraphics2D (this);\n+    else\n+      g = new GdkGraphics (this);\n+    g.translate (-insets.left, -insets.top);\n     return g;\n   }\n "}, {"sha": "b703540d56dbb8f836e5745f35954c64825756fa", "filename": "libjava/gnu/java/awt/peer/gtk/GtkToolkit.java", "status": "modified", "additions": 79, "deletions": 2, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java?ref=8fe7789eddcc6ff9517e5768a573fc89d95b102b", "patch": "@@ -42,6 +42,7 @@\n import java.awt.datatransfer.Clipboard;\n import java.awt.dnd.DragGestureEvent;\n import java.awt.dnd.peer.DragSourceContextPeer;\n+import java.awt.font.TextAttribute;\n import java.awt.im.InputMethodHighlight;\n import java.awt.image.ColorModel;\n import java.awt.image.ImageObserver;\n@@ -55,6 +56,7 @@\n import gnu.java.awt.EmbeddedWindow;\n import gnu.java.awt.EmbeddedWindowSupport;\n import gnu.java.awt.peer.EmbeddedWindowPeer;\n+import gnu.java.awt.peer.ClasspathFontPeer;\n import gnu.classpath.Configuration;\n import gnu.java.awt.peer.gtk.GdkPixbufDecoder;\n \n@@ -65,14 +67,35 @@\n    this class.  If getPeer() ever goes away, we can implement a hash table\n    that will keep up with every window's peer, but for now this is faster. */\n \n-public class GtkToolkit extends Toolkit\n+/**\n+ * This class accesses a system property called\n+ * <tt>gnu.java.awt.peer.gtk.Graphics</tt>.  If the property is defined and\n+ * equal to \"Graphics2D\", the cairo-based GdkGraphics2D will be used in\n+ * drawing contexts. Any other value will cause the older GdkGraphics\n+ * object to be used.\n+ */\n+\n+public class GtkToolkit extends gnu.java.awt.ClasspathToolkit\n   implements EmbeddedWindowSupport\n {\n   GtkMainThread main;\n   Hashtable containers = new Hashtable();\n   static EventQueue q = new EventQueue();\n   static Clipboard systemClipboard;\n \n+  static boolean useGraphics2dSet;\n+  static boolean useGraphics2d;\n+\n+  public static boolean useGraphics2D()\n+  {\n+    if (useGraphics2dSet)\n+      return useGraphics2d;\n+    useGraphics2d = System.getProperty(\"gnu.java.awt.peer.gtk.Graphics\", \n+                                       \"Graphics\").equals(\"Graphics2D\");\n+    useGraphics2dSet = true;\n+    return useGraphics2d;\n+  }\n+\n   static \n   {\n     if (Configuration.INIT_LOAD_LIBRARY)\n@@ -135,7 +158,10 @@ public String[] getFontList ()\n \n   public FontMetrics getFontMetrics (Font font) \n   {\n-    return new GdkFontMetrics (font);\n+    if (useGraphics2D())\n+      return new GdkClasspathFontPeerMetrics (font);\n+    else\n+      return new GdkFontMetrics (font);\n   }\n \n   public Image getImage (String filename) \n@@ -322,6 +348,11 @@ public EmbeddedWindowPeer createEmbeddedWindow (EmbeddedWindow w)\n     return new GtkEmbeddedWindowPeer (w);\n   }\n \n+  /** \n+   * @deprecated part of the older \"logical font\" system in earlier AWT\n+   * implementations. Our newer Font class uses getClasspathFontPeer.\n+   */\n+\n   protected FontPeer getFontPeer (String name, int style) \n   {\n     try {\n@@ -332,6 +363,38 @@ protected FontPeer getFontPeer (String name, int style)\n     }\n   }\n \n+  /**\n+   * Newer method to produce a peer for a Font object, even though Sun's\n+   * design claims Font should now be peerless, we do not agree with this\n+   * model, hence \"ClasspathFontPeer\". \n+   */\n+\n+  public ClasspathFontPeer getClasspathFontPeer (String name, Map attrs)\n+  {\n+    if (useGraphics2D())\n+      return new GdkClasspathFontPeer (name, attrs);\n+    else\n+      {\n+        int style = Font.PLAIN;\n+\n+        if (attrs.containsKey (TextAttribute.WEIGHT))\n+          {\n+            Float weight = (Float) attrs.get (TextAttribute.WEIGHT);\n+            if (weight.floatValue () >= TextAttribute.WEIGHT_BOLD.floatValue ())\n+              style += Font.BOLD;\n+          }\n+        \n+        if (attrs.containsKey (TextAttribute.POSTURE))\n+          {\n+            Float posture = (Float) attrs.get (TextAttribute.POSTURE);\n+            if (posture.floatValue () >= TextAttribute.POSTURE_OBLIQUE.floatValue ())\n+              style += Font.ITALIC;\n+          }\n+        \n+        return (ClasspathFontPeer) this.getFontPeer (name, style);\n+      }\n+  }\n+\n   protected EventQueue getSystemEventQueueImpl() \n   {\n     return q;\n@@ -350,4 +413,18 @@ public Map mapInputMethodHighlight(InputMethodHighlight highlight)\n   {\n     throw new Error(\"not implemented\");\n   }\n+\n+  // ClasspathToolkit methods\n+\n+  public GraphicsEnvironment getLocalGraphicsEnvironment()\n+  {\n+    throw new java.lang.UnsupportedOperationException ();\n+  }\n+\n+  public Font createFont(int format, java.io.InputStream stream)\n+  {\n+    throw new java.lang.UnsupportedOperationException ();\n+  }\n+\n+\n } // class GtkToolkit"}, {"sha": "517d332b8b1de183c350c6a5471d8ac2552a0711", "filename": "libjava/java/awt/Font.java", "status": "modified", "additions": 203, "deletions": 226, "changes": 429, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fjava%2Fawt%2FFont.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fjava%2Fawt%2FFont.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFont.java?ref=8fe7789eddcc6ff9517e5768a573fc89d95b102b", "patch": "@@ -42,6 +42,7 @@\n import java.awt.font.GlyphVector;\n import java.awt.font.LineMetrics;\n import java.awt.font.TextAttribute;\n+import java.awt.font.TransformAttribute;\n import java.awt.geom.AffineTransform;\n import java.awt.geom.Rectangle2D;\n import java.awt.peer.FontPeer;\n@@ -50,15 +51,21 @@\n import java.io.Serializable;\n import java.util.Locale;\n import java.util.Map;\n+import java.util.HashMap;\n import java.util.StringTokenizer;\n import java.text.CharacterIterator;\n import java.text.AttributedCharacterIterator;\n+import java.text.StringCharacterIterator;\n+\n+import gnu.java.awt.ClasspathToolkit;\n+import gnu.java.awt.peer.ClasspathFontPeer;\n \n /**\n   * This class represents a windowing system font.\n   *\n   * @author Aaron M. Renn (arenn@urbanophile.com)\n   * @author Warren Levy <warrenl@cygnus.com>\n+ * @author Graydon Hoare <graydon@redhat.com>\n   */\n public class Font implements Serializable\n {\n@@ -160,32 +167,9 @@ public class Font implements Serializable\n // Serialization constant\n private static final long serialVersionUID = -4206021311591459213L;\n \n-/*************************************************************************/\n-\n-/*\n- * Instance Variables\n- */\n-\n-/**\n-  * The name of this font\n-  */\n-protected String name;\n-\n-/**\n-  * The font style, which is a combination (by summing, not OR-ing) of\n-  * the font style constants in this class.\n-  */\n-protected int style;\n-\n-/**\n-  * The font point size.\n-  */\n-protected int size;\n \n-protected float pointSize;\n-\n-// The native peer for this font\n-private FontPeer peer;\n+  // The ClasspathToolkit-provided peer which implements this font\n+  private ClasspathFontPeer peer;\n \n /*************************************************************************/\n \n@@ -208,8 +192,7 @@ public class Font implements Serializable\n   * style if none is specified is PLAIN.  The default size if none\n   * is specified is 12.\n   */\n-public static Font\n-decode(String fontspec)\n+  public static Font decode (String fontspec)\n {\n   String name = null;\n   int style = PLAIN;\n@@ -237,7 +220,7 @@ public class Font implements Serializable\n         }\n       if (token.toUpperCase().equals(\"BOLDITALIC\"))\n         {\n-          style = BOLD + ITALIC;\n+            style = BOLD | ITALIC;\n           continue;\n         }\n \n@@ -252,9 +235,46 @@ public class Font implements Serializable\n         size = tokenval;\n     }\n \n-  return(new Font(name, style, size));\n+    return getFontFromToolkit (name, attrsToMap (style, size));\n }\n \n+  /* These methods delegate to the toolkit. */\n+\n+  protected static ClasspathToolkit tk ()\n+  {\n+    return (ClasspathToolkit)(Toolkit.getDefaultToolkit ());\n+  }\n+\n+  protected static Map attrsToMap(int style, int size)\n+  {\n+    Map attrs = new HashMap();\n+    attrs.put (TextAttribute.SIZE, new Float ((float)size));\n+    \n+    if ((style & BOLD) == BOLD)\n+      attrs.put (TextAttribute.WEIGHT, TextAttribute.WEIGHT_BOLD);\n+    else\n+      attrs.put (TextAttribute.WEIGHT, TextAttribute.WEIGHT_REGULAR);\n+\n+    if ((style & ITALIC) == ITALIC)\n+      attrs.put (TextAttribute.POSTURE, TextAttribute.POSTURE_OBLIQUE);\n+    else\n+      attrs.put (TextAttribute.POSTURE, TextAttribute.POSTURE_REGULAR);\n+    return attrs;\n+  }\n+\n+  /* Every factory method in Font should eventually call this. */\n+  protected static Font getFontFromToolkit (String name, Map attribs)\n+  {\n+    return tk ().getFont (name, attribs);\n+  }\n+\n+  /* Every Font constructor should eventually call this. */\n+  protected static ClasspathFontPeer getPeerFromToolkit (String name, Map attrs)\n+  {\n+    return tk ().getClasspathFontPeer (name, attrs);\n+  }\n+\n+\n /*************************************************************************/\n \n /**\n@@ -266,14 +286,12 @@ public class Font implements Serializable\n   * @return The requested font, or <code>default</code> if the property \n   * not exist or is malformed.\n   */\n-public static Font\n-getFont(String propname, Font defval)\n+  public static Font getFont (String propname, Font defval)\n {\n   String propval = System.getProperty(propname);\n   if (propval != null)\n-    return(decode(propval));\n-\n-  return(defval);\n+      return decode (propval);\n+    return defval;\n }\n \n /*************************************************************************/\n@@ -286,10 +304,9 @@ public class Font implements Serializable\n   * @return The requested font, or <code>null</code> if the property \n   * not exist or is malformed.\n   */\n-public static Font\n-getFont(String propname)\n+  public static Font getFont (String propname)\n {\n-  return(getFont(propname, null));\n+    return getFont (propname, (Font)null);\n }\n \n /*************************************************************************/\n@@ -306,19 +323,22 @@ public class Font implements Serializable\n   * @param style The font style.\n   * @param size The font point size.\n   */\n-public\n-Font(String name, int style, int size)\n+\n+  public Font (String name, int style, int size)\n+  {\n+    this.peer = getPeerFromToolkit (name, attrsToMap (style, size));\n+  }\n+\n+  public Font (Map attrs)\n {\n-  this.name = name;\n-  this.style = style;\n-  this.size = size;\n-  this.pointSize = size;\n+    this.peer = getPeerFromToolkit (null, attrs);\n }\n \n-public  \n-Font(Map attributes)\n+  /* This extra constructor is here to permit ClasspathToolkit and to build\n+     a font with a \"logical name\" as well as attrs.  */\n+  public Font (String name, Map attrs)\n {\n-  throw new UnsupportedOperationException();\n+    this.peer = getPeerFromToolkit (name, attrs);\n }\n \n /*************************************************************************/\n@@ -328,20 +348,19 @@ public class Font implements Serializable\n  */\n \n /**\n-  * Returns the logical name of the font.  A logical name describes a very\n-  * general typographic style (such as Sans Serif). It is less specific\n-  * than both a font family name (such as Helvetica) and a font face name\n-  * (such as Helvetica Bold).\n+   * Returns the logical name of the font.  A logical name is the name the\n+   * font was constructed with. It may be the name of a logical font (one\n+   * of 6 required names in all java environments) or it may be a face\n+   * name.\n   *\n   * @return The logical name of the font.\n   *\n   * @see getFamily()\n   * @see getFontName()\n   */\n-public String\n-getName()\n+  public String getName ()\n {\n-  return(name);\n+    return peer.getName (this);\n }\n \n /*************************************************************************/\n@@ -351,16 +370,14 @@ public class Font implements Serializable\n   * \n   * @return The font style.\n   */\n-public int\n-getSize()\n+  public int getSize ()\n {\n-  return(size);\n+    return (int) peer.getSize (this);\n }\n \n-public float\n-getSize2D()\n+  public float getSize2D ()\n {\n-  return pointSize;\n+    return peer.getSize (this);\n }\n \n /*************************************************************************/\n@@ -372,13 +389,9 @@ public class Font implements Serializable\n   * @return <code>true</code> if this is a plain font, <code>false</code>\n   * otherwise.\n   */\n-public boolean\n-isPlain()\n+  public boolean isPlain ()\n {\n-  if (style == PLAIN)\n-    return(true);\n-  else\n-    return(false);\n+    return peer.isPlain (this); \n }\n \n /*************************************************************************/\n@@ -389,13 +402,9 @@ public class Font implements Serializable\n   * @return <code>true</code> if this font is bold, <code>false</code>\n   * otherwise.\n   */\n-public boolean\n-isBold()\n+  public boolean isBold ()\n {\n-  if ((style == BOLD) || (style == (BOLD+ITALIC)))\n-    return(true);\n-  else\n-    return(false);\n+    return peer.isBold (this);\n }\n \n /*************************************************************************/\n@@ -406,22 +415,17 @@ public class Font implements Serializable\n   * @return <code>true</code> if this font is italic, <code>false</code>\n   * otherwise.\n   */\n-public boolean\n-isItalic()\n+  public boolean isItalic ()\n {\n-  if ((style == ITALIC) || (style == (BOLD+ITALIC)))\n-    return(true);\n-  else\n-    return(false);\n+    return peer.isItalic (this);\n }\n \n /*************************************************************************/\n \n /**\n-  * Returns the family name of this font. A family name describes a\n-  * typographic style (such as Helvetica or Palatino). It is more specific\n-  * than a logical font name (such as Sans Serif) but less specific than a\n-  * font face name (such as Helvetica Bold).\n+   * Returns the family name of this font. A family name describes a design\n+   * or \"brand name\" (such as Helvetica or Palatino). It is less specific\n+   * than a font face name (such as Helvetica Bold).\n   *\n   * @return A string containing the font family name.\n   *\n@@ -431,11 +435,9 @@ public class Font implements Serializable\n   * @see getFontName()\n   * @see GraphicsEnvironment.getAvailableFontFamilyNames()\n   */\n-public String\n-getFamily()\n+  public String getFamily ()\n {\n-  // FIXME: How do I implement this?\n-  return(name);\n+    return peer.getFamily (this);\n }\n \n /**\n@@ -448,10 +450,9 @@ public class Font implements Serializable\n   * @see isBold()\n   * @see isItalic()\n   */\n-public int\n-getStyle()\n+  public int getStyle ()\n {\n-  return style;\n+    return peer.getStyle (this);\n }\n \n /**\n@@ -463,10 +464,9 @@ public class Font implements Serializable\n   *\n   * @since 1.2\n   */\n-public boolean \n-canDisplay(char c)\n+  public boolean canDisplay (char c)\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.canDisplay (this, c);    \n }\n \n /**\n@@ -481,10 +481,10 @@ public class Font implements Serializable\n   *\n   * @since 1.2\n   */\n-public int \n-canDisplayUpTo(String s)\n+  public int canDisplayUpTo (String s)\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.canDisplayUpTo (this, new StringCharacterIterator (s), \n+                                0, s.length () - 1);\n }\n \n /**\n@@ -504,10 +504,10 @@ public class Font implements Serializable\n   * @throws IndexOutOfBoundsException if the range [start, limit] is\n   * invalid in <code>text</code>.\n   */\n-public int\n-canDisplayUpTo(char[] text, int start, int limit)\n+  public int canDisplayUpTo (char[] text, int start, int limit)\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.canDisplayUpTo \n+      (this, new StringCharacterIterator (new String (text)), start, limit);\n }\n \n /**\n@@ -527,10 +527,9 @@ public class Font implements Serializable\n   * @throws IndexOutOfBoundsException if the range [start, limit] is\n   * invalid in <code>i</code>.\n   */\n-public int\n-canDisplayUpTo(CharacterIterator i, int start, int limit)\n+  public int canDisplayUpTo (CharacterIterator i, int start, int limit)\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.canDisplayUpTo (this, i, start, limit);    \n }\n \n /**\n@@ -554,11 +553,10 @@ public class Font implements Serializable\n   *\n   * @since 1.3\n   */\n-public static Font \n-createFont(int fontFormat, InputStream is) \n+  public static Font createFont (int fontFormat, InputStream is) \n   throws FontFormatException, IOException\n {\n-  throw new UnsupportedOperationException ();\n+    return tk().createFont (fontFormat, is);\n }\n \n /**\n@@ -576,10 +574,9 @@ public class Font implements Serializable\n   *\n   * @see layoutGlyphVector()\n   */\n-public GlyphVector\n-createGlyphVector(FontRenderContext ctx, String str)\n+  public GlyphVector createGlyphVector (FontRenderContext ctx, String str)\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.createGlyphVector (this, ctx, new StringCharacterIterator (str));\n }\n \n /**\n@@ -597,10 +594,9 @@ public class Font implements Serializable\n   *\n   * @see layoutGlyphVector()\n   */\n-public GlyphVector\n-createGlyphVector(FontRenderContext ctx, CharacterIterator i)\n+  public GlyphVector createGlyphVector (FontRenderContext ctx, CharacterIterator i)\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.createGlyphVector (this, ctx, i);\n }\n \n /**\n@@ -618,10 +614,10 @@ public class Font implements Serializable\n   *\n   * @see layoutGlyphVector()\n   */\n-public GlyphVector\n-createGlyphVector(FontRenderContext ctx, char[] chars)\n+  public GlyphVector createGlyphVector (FontRenderContext ctx, char[] chars)\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.createGlyphVector \n+      (this, ctx, new StringCharacterIterator (new String (chars)));\n }\n \n /**\n@@ -642,10 +638,10 @@ public class Font implements Serializable\n   * purpose was to transport character codes inside integers. I assume it\n   * is mis-documented in the Sun documentation.\n   */\n-public GlyphVector\n-createGlyphVector(FontRenderContext ctx, int[] glyphCodes)\n+\n+  public GlyphVector createGlyphVector (FontRenderContext ctx, int[] glyphCodes)\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.createGlyphVector (this, ctx, glyphCodes);\n }\n \n /**\n@@ -658,10 +654,9 @@ public class Font implements Serializable\n   *\n   * @since 1.2\n   */\n-public Font\n-deriveFont(float size)\n+  public Font deriveFont (float size)\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.deriveFont (this, size);\n }\n \n /**\n@@ -674,10 +669,9 @@ public class Font implements Serializable\n   *\n   * @since 1.2\n   */\n-public Font\n-deriveFont(int style)\n+  public Font deriveFont (int style)\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.deriveFont (this, style);\n }\n \n /**\n@@ -695,10 +689,12 @@ public class Font implements Serializable\n   *\n   * @since 1.2\n   */\n-public Font\n-deriveFont(int style, AffineTransform a)\n+  public Font deriveFont (int style, AffineTransform a)\n {\n-  throw new UnsupportedOperationException ();\n+    if (a == null)\n+      throw new IllegalArgumentException (\"Affine transformation is null\");\n+\n+    return peer.deriveFont (this, style, a);\n }\n \n /**\n@@ -711,10 +707,9 @@ public class Font implements Serializable\n   *\n   * @since 1.2\n   */\n-public Font\n-deriveFont(Map attributes)\n+  public Font deriveFont (Map attributes)\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.deriveFont (this, attributes);\n }\n \n /**\n@@ -726,10 +721,9 @@ public class Font implements Serializable\n   * @see java.text.AttributedCharacterIterator.Attribute\n   * @see java.awt.font.TextAttribute\n   */\n-public Map\n-getAttributes()\n+  public Map getAttributes ()\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.getAttributes (this);\n }\n \n /**\n@@ -741,10 +735,9 @@ public class Font implements Serializable\n   * @see java.text.AttributedCharacterIterator.Attribute\n   * @see java.awt.font.TextAttribute\n   */\n-public AttributedCharacterIterator.Attribute[]\n-getAvailableAttributes()\n+  public AttributedCharacterIterator.Attribute[] getAvailableAttributes()\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.getAvailableAttributes (this);\n }\n \n /**\n@@ -768,10 +761,9 @@ public class Font implements Serializable\n   *\n   * @see LineMetrics.getBaselineOffsets()\n   */\n-public byte \n-getBaselineFor(char c)\n+  public byte getBaselineFor (char c)\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.getBaselineFor (this, c);\n }\n \n /**\n@@ -792,10 +784,9 @@ public class Font implements Serializable\n   * @see GraphicsEnvironment.getAvailableFontFamilyNames()\n   * @see Locale\n   */\n-public String\n-getFamily(Locale lc)\n+  public String getFamily (Locale lc)\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.getFamily (this, lc); \n }\n \n /**\n@@ -809,10 +800,9 @@ public class Font implements Serializable\n   *\n   * @see TextAttribure  \n   */\n-public static Font\n-getFont(Map attributes)\n+  public static Font getFont (Map attributes)\n {\n-  throw new UnsupportedOperationException ();\n+    return getFontFromToolkit (null, attributes);\n }\n \n /**\n@@ -828,17 +818,15 @@ public class Font implements Serializable\n   * @see getName()\n   * @see getFamily()\n   */\n-public String\n-getFontName()\n+  public String getFontName ()\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.getFontName (this);\n }\n \n /**\n   * Returns the font face name of the font.  A font face name describes a\n   * specific variant of a font family (such as Helvetica Bold). It is more\n-  * specific than both a font family name (such as Helvetica) and a logical\n-  * font name (such as Sans Serif).\n+   * specific than both a font family name (such as Helvetica).\n   *\n   * @param lc The locale in which to describe the name of the font face.\n   *\n@@ -850,10 +838,9 @@ public class Font implements Serializable\n   * @see getName()\n   * @see getFamily()\n   */\n-public String\n-getFontName(Locale lc)\n+  public String getFontName (Locale lc)\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.getFontName (this, lc);\n }\n \n /**\n@@ -865,10 +852,9 @@ public class Font implements Serializable\n   *\n   * @see TextAttribute.POSTURE\n   */\n-public float\n-getItalicAngle()\n+  public float getItalicAngle ()\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.getItalicAngle (this);\n }\n \n /**\n@@ -885,10 +871,11 @@ public class Font implements Serializable\n   * @throws IndexOutOfBoundsException if the range [begin, limit] is\n   * invalid in <code>text</code>.\n   */\n-public LineMetrics\n-getLineMetrics(String text, int begin, int limit, FontRenderContext rc)\n+  public LineMetrics getLineMetrics(String text, int begin, \n+                                    int limit, FontRenderContext rc)\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.getLineMetrics (this, new StringCharacterIterator (text), \n+                                begin, limit, rc);\n }\n \n /**\n@@ -905,10 +892,11 @@ public class Font implements Serializable\n   * @throws IndexOutOfBoundsException if the range [begin, limit] is\n   * invalid in <code>chars</code>.\n   */\n-public LineMetrics\n-getLineMetrics(char[] chars, int begin, int limit, FontRenderContext rc)\n+  public LineMetrics getLineMetrics(char[] chars, int begin, \n+                                    int limit, FontRenderContext rc)\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.getLineMetrics (this, new StringCharacterIterator (new String(chars)), \n+                                begin, limit, rc);\n }\n \n /**\n@@ -925,10 +913,10 @@ public class Font implements Serializable\n   * @throws IndexOutOfBoundsException if the range [begin, limit] is\n   * invalid in <code>ci</code>.\n   */\n-public LineMetrics\n-getLineMetrics(CharacterIterator ci, int begin, int limit, FontRenderContext rc)\n+  public LineMetrics getLineMetrics (CharacterIterator ci, int begin, \n+                                     int limit, FontRenderContext rc)\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.getLineMetrics (this, ci, begin, limit, rc);\n }\n \n /**\n@@ -940,10 +928,9 @@ public class Font implements Serializable\n   *\n   * @return The maximal bounding box.\n   */\n-public Rectangle2D\n-getMaxCharBounds(FontRenderContext rc)\n+  public Rectangle2D getMaxCharBounds (FontRenderContext rc)\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.getMaxCharBounds (this, rc);\n }\n \n /**\n@@ -955,10 +942,9 @@ public class Font implements Serializable\n   *\n   * @since 1.2\n   */\n-public int\n-getMissingGlyphCode()\n+  public int getMissingGlyphCode ()\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.getMissingGlyphCode (this);\n }\n \n /**\n@@ -971,10 +957,9 @@ public class Font implements Serializable\n   * \n   * @since 1.2\n   */\n-public int\n-getNumGlyphs()\n+  public int getNumGlyphs ()\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.getMissingGlyphCode (this);\n }\n \n /**\n@@ -988,10 +973,9 @@ public class Font implements Serializable\n   * @see getFamily()\n   * @see getFontName()\n   */\n-public String\n-getPSName()\n+  public String getPSName ()\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.getPostScriptName (this);\n }\n \n /**\n@@ -1009,10 +993,9 @@ public class Font implements Serializable\n   *\n   * @see createGlyphVector()\n   */\n-public Rectangle2D\n-getStringBounds(String str, FontRenderContext frc)\n+  public Rectangle2D getStringBounds (String str, FontRenderContext frc)\n {\n-  throw new UnsupportedOperationException ();\n+    return getStringBounds (str, 0, str.length () - 1, frc);\n }\n \n /**\n@@ -1037,10 +1020,10 @@ public class Font implements Serializable\n   *\n   * @see createGlyphVector()\n   */\n-public Rectangle2D\n-getStringBounds(String str, int begin, int limit, FontRenderContext frc)\n+  public Rectangle2D getStringBounds (String str, int begin, \n+                                      int limit, FontRenderContext frc)\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.getStringBounds (this, new StringCharacterIterator(str), begin, limit, frc);\n }\n \n /**\n@@ -1065,10 +1048,10 @@ public class Font implements Serializable\n   *\n   * @see createGlyphVector()\n   */\n-public Rectangle2D\n-getStringBounds(CharacterIterator ci, int begin, int limit, FontRenderContext frc)\n+  public Rectangle2D getStringBounds (CharacterIterator ci, int begin, \n+                                      int limit, FontRenderContext frc)\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.getStringBounds (this, ci, begin, limit, frc);\n }\n \n /**\n@@ -1093,10 +1076,11 @@ public class Font implements Serializable\n   *\n   * @see createGlyphVector()\n   */\n-public Rectangle2D\n-getStringBounds(char[] chars, int begin, int limit, FontRenderContext frc)\n+  public Rectangle2D getStringBounds (char[] chars, int begin, \n+                                      int limit, FontRenderContext frc)\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.getStringBounds (this, new StringCharacterIterator (new String (chars)), \n+                                 begin, limit, frc);\n }\n \n /**\n@@ -1105,10 +1089,9 @@ public class Font implements Serializable\n   *\n   * @return The current transformation.\n  */\n-public AffineTransform\n-getTransform()\n+  public AffineTransform getTransform ()\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.getTransform (this);\n }\n \n /**\n@@ -1123,10 +1106,9 @@ public class Font implements Serializable\n   * @see LineMetrics\n   * @see getLineMetrics()\n   */\n-public boolean\n-hasUniformLineMetrics()\n+  public boolean hasUniformLineMetrics ()\n {\n-  throw new UnsupportedOperationException ();\n+    return peer.hasUniformLineMetrics (this);\n }\n \n /**\n@@ -1136,10 +1118,9 @@ public class Font implements Serializable\n   * @return <code>true</code> iff the font has a non-identity affine\n   * transformation applied to it.\n   */\n-public boolean\n-isTransformed()\n+  public boolean isTransformed ()\n {\n-  throw new UnsupportedOperationException ();  \n+    return peer.isTransformed (this);\n }\n \n /**\n@@ -1169,46 +1150,37 @@ public class Font implements Serializable\n   * @throws IndexOutOfBoundsException if the range [begin, limit] is\n   * invalid in <code>chars</code>. \n   */\n-public GlyphVector\n-layoutGlyphVector(FontRenderContext frc, char[] chars, int start, int limit, int flags)\n+  public GlyphVector layoutGlyphVector (FontRenderContext frc, \n+                                        char[] chars, int start, \n+                                        int limit, int flags)\n {\n-  throw new UnsupportedOperationException ();  \n+    return peer.layoutGlyphVector (this, frc, chars, start, limit, flags);\n }\n \n \n-/*************************************************************************/\n-\n /**\n   * Returns a native peer object for this font.\n   *\n   * @return A native peer object for this font.\n   *\n   * @deprecated\n   */\n-public FontPeer\n-getPeer()\n+  public FontPeer getPeer ()\n {\n-  if (peer != null)\n-    return(peer);\n-\n-  peer = Toolkit.getDefaultToolkit().getFontPeer(name, style);\n-  return(peer);\n+    return peer;\n }\n \n-/*************************************************************************/\n \n /**\n   * Returns a hash value for this font.\n   * \n   * @return A hash for this font.\n   */\n-public int\n-hashCode()\n+  public int hashCode()\n {\n-  return((new String(name + size + style)).hashCode());\n+    return this.toString().hashCode();\n }\n \n-/*************************************************************************/\n \n /**\n   * Tests whether or not the specified object is equal to this font.  This\n@@ -1217,7 +1189,7 @@ public class Font implements Serializable\n   * <ul>\n   * <li>The object is not <code>null</code>.\n   * <li>The object is an instance of <code>Font</code>.\n-  * <li>The object has the same name, style, and size as this object.\n+  * <li>The object has the same names, style, size, and transform as this object.\n   * </ul>\n   *\n   * @return <code>true</code> if the specified object is equal to this\n@@ -1226,21 +1198,20 @@ public class Font implements Serializable\n public boolean\n equals(Object obj)\n {\n-  if (!(obj instanceof Font))\n+  if (obj == null)\n     return(false);\n \n-  Font f = (Font)obj;\n-\n-  if (!f.name.equals(name))\n-    return(false);\n-\n-  if (f.size != size)\n+  if (!(obj instanceof Font))\n     return(false);\n \n-  if (f.style != style)\n-    return(false);\n+  Font f = (Font)obj;\n \n-  return(true);\n+  return (f.getName ().equals (this.getName ()) &&\n+          f.getFamily ().equals (this.getFamily ()) &&\n+          f.getFontName ().equals (this.getFontName ()) &&\n+          f.getTransform ().equals (this.getTransform ()) &&\n+          f.getSize() == this.getSize() &&\n+          f.getStyle() == this.getStyle());\n } \n \n /*************************************************************************/\n@@ -1253,8 +1224,13 @@ public class Font implements Serializable\n public String\n toString()\n {\n-  return(getClass().getName() + \"(name=\" + name + \",style=\" + style +\n-         \",size=\" + size + \")\");\n+  return(getClass().getName() \n+         + \"(logical=\" + getName () \n+         + \",family=\" + getFamily ()\n+         + \",face=\" + getFontName ()\n+         + \",style=\" + getStyle ()\n+         + \",size=\" + getSize ()\n+         + \",transform=\" + getTransform () + \")\");\n }\n \n \n@@ -1278,7 +1254,8 @@ public class Font implements Serializable\n    */\n   public LineMetrics getLineMetrics(String str, FontRenderContext frc)\n   {\n-    throw new UnsupportedOperationException(); // FIXME\n+    return getLineMetrics (str, 0, str.length () - 1, frc);\n   }\n+\n } // class Font \n "}, {"sha": "f2ee86a2d69550780394ac24fabbc0f0de1b4927", "filename": "libjava/jni/gtk-peer/gdkfont.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fjni%2Fgtk-peer%2Fgdkfont.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fjni%2Fgtk-peer%2Fgdkfont.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgdkfont.h?ref=8fe7789eddcc6ff9517e5768a573fc89d95b102b", "patch": "@@ -38,7 +38,7 @@\n    obligated to do so.  If you do not wish to do so, delete this\n    exception statement from your version. */\n \n-#include \"gtkpeer.h\"\n+#include \"gtkcairopeer.h\"\n \n #include <pango/pango.h>\n #include <pango/pango-context.h>"}, {"sha": "86139db52e616934ddfd3fcf5856d3397eda26c4", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.c?ref=8fe7789eddcc6ff9517e5768a573fc89d95b102b", "patch": "@@ -37,7 +37,6 @@\n \n #include <math.h>\n \n-#include \"gtkpeer.h\"\n #include \"gdkfont.h\"\n #include \"gnu_java_awt_peer_gtk_GdkClasspathFontPeerMetrics.h\"\n "}, {"sha": "581cb82cf7578ec9c0ac57ce34b50efc37cbf1b0", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics2D.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGraphics2D.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGraphics2D.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGraphics2D.c?ref=8fe7789eddcc6ff9517e5768a573fc89d95b102b", "patch": "@@ -35,7 +35,7 @@\n    obligated to do so.  If you do not wish to do so, delete this\n    exception statement from your version. */\n \n-#include \"gtkpeer.h\"\n+#include \"gtkcairopeer.h\"\n #include \"gdkfont.h\"\n #include \"gnu_java_awt_peer_gtk_GdkGraphics2D.h\"\n #include <gdk/gdktypes.h>"}, {"sha": "90a148fa9fc14d3fab9a0565454156f1a23debd8", "filename": "libjava/jni/gtk-peer/gtkcairopeer.h", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fjni%2Fgtk-peer%2Fgtkcairopeer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fe7789eddcc6ff9517e5768a573fc89d95b102b/libjava%2Fjni%2Fgtk-peer%2Fgtkcairopeer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgtkcairopeer.h?ref=8fe7789eddcc6ff9517e5768a573fc89d95b102b", "patch": "@@ -0,0 +1,78 @@\n+#ifndef __GTKCAIROPEER_H__\n+#define __GTKCAIROPEER_H__\n+\n+/* gtkcairopeer.h -- Some global variables and #defines\n+   Copyright (C) 1998, 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+#include \"gtkpeer.h\"\n+#include <cairo.h>\n+#include <gdk-pixbuf/gdk-pixbuf.h>\n+\n+/* \n+   A graphics2d struct is both simpler and uglier than a graphics\n+   struct. \n+\n+   Most of the graphics2d drawing state is held in the referenced cairo_t\n+   and corresponding cairo_surface_t, so we can ignore it.\n+\n+   In addition to the cairo_t, we need to hold an extra reference to the\n+   underlying GdkDrawable so its refcount matches the lifecycle of the java\n+   Graphics object which is peering with us; also a reference to a byte\n+   buffer and cairo_surface_t which contain the pattern you're drawing from\n+   (if it exists).\n+\n+   Finally, it is possible that we are using a non-RENDER capable X server,\n+   therefore we will be drawing to an cairo_surface_t which is actually a\n+   pixbuf. When this is the case, the pointer to a GdkPixbuf will be\n+   non-NULL and any drawing operation needs to be bracketed by pixbuf\n+   load/save operations. If the GdkPixbuf pointer is NULL, we will treat\n+   the cairo_surface_t as RENDER-capable.\n+ */\n+\n+struct graphics2d\n+{\n+  cairo_t *cr;\n+  cairo_surface_t *surface;\n+  GdkDrawable *drawable;\n+  GdkWindow *win;\n+  GdkPixbuf *drawbuf;\n+  char *pattern_pixels;\n+  cairo_surface_t *pattern;\n+  gboolean debug;\n+};\n+\n+#endif /* __GTKCAIROPEER_H */"}]}