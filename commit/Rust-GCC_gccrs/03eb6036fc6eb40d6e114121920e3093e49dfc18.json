{"sha": "03eb6036fc6eb40d6e114121920e3093e49dfc18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNlYjYwMzZmYzZlYjQwZDZlMTE0MTIxOTIwZTMwOTNlNDlkZmMxOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-11T12:58:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-11T12:58:54Z"}, "message": "[multiple changes]\n\n2013-04-11  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* init.c (RETURN_ADDR_OFFSET): Delete as unused.\n\n2013-04-11  Robert Dewar  <dewar@adacore.com>\n\n\t* a-crbtgk.adb, a-ciorse.adb, a-crbtgo.adb, a-coorse.adb, a-rbtgbo.adb,\n\ta-cborse.adb, a-rbtgso.adb, exp_ch3.adb: Minor reformatting.\n\n2013-04-11  Yannick Moy  <moy@adacore.com>\n\n\t* exp_ch4.adb (Expand_N_Selected_Component): Do not expand\n\tdiscriminant check for Unchecked_Union.\n\t* sem_res.adb (Resolve_Selected_Component): Set flag\n\tDo_Discriminant_Check even when expansion is not performed.\n\t* sinfo.ads (Do_Discriminant_Check): Update documentation for the case\n\tof Unchecked_Union.\n\n2013-04-11  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch13.adb (Same_Representation): Two types with different scalar\n\tstorage order never have the same representation.\n\n2013-04-11  Arnaud Charlet  <charlet@adacore.com>\n\n\t* xgnatugn.adb (Push_Conditional): Simplify handling,\n\tno longer need to keep track of \"excluding\" sections.\n\t(Currently_Excluding): Removed.\n\t(Process_Source_File):\n\tSet unw/vms flag so that texinfo can do the whole handling of\n\t@ifset/@ifclear sections.  Fix handling of nested @ifset/@ifclear\n\tsections.\n\t* gnat_ugn.texi: Add a section on performing unassisted install\n\ton Windows.\n\nFrom-SVN: r197785", "tree": {"sha": "1547b16350ca752c1a97751edaddd33a3f57d5ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1547b16350ca752c1a97751edaddd33a3f57d5ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03eb6036fc6eb40d6e114121920e3093e49dfc18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03eb6036fc6eb40d6e114121920e3093e49dfc18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03eb6036fc6eb40d6e114121920e3093e49dfc18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03eb6036fc6eb40d6e114121920e3093e49dfc18/comments", "author": null, "committer": null, "parents": [{"sha": "e7f11067a1011e49909905be0ea421c4fc8dd1cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7f11067a1011e49909905be0ea421c4fc8dd1cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7f11067a1011e49909905be0ea421c4fc8dd1cc"}], "stats": {"total": 336, "additions": 226, "deletions": 110}, "files": [{"sha": "e1125f7a567fe56e5cc8c089afc03498e06abb44", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=03eb6036fc6eb40d6e114121920e3093e49dfc18", "patch": "@@ -1,3 +1,38 @@\n+2013-04-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* init.c (RETURN_ADDR_OFFSET): Delete as unused.\n+\n+2013-04-11  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-crbtgk.adb, a-ciorse.adb, a-crbtgo.adb, a-coorse.adb, a-rbtgbo.adb,\n+\ta-cborse.adb, a-rbtgso.adb, exp_ch3.adb: Minor reformatting.\n+\n+2013-04-11  Yannick Moy  <moy@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Selected_Component): Do not expand\n+\tdiscriminant check for Unchecked_Union.\n+\t* sem_res.adb (Resolve_Selected_Component): Set flag\n+\tDo_Discriminant_Check even when expansion is not performed.\n+\t* sinfo.ads (Do_Discriminant_Check): Update documentation for the case\n+\tof Unchecked_Union.\n+\n+2013-04-11  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch13.adb (Same_Representation): Two types with different scalar\n+\tstorage order never have the same representation.\n+\n+2013-04-11  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* xgnatugn.adb (Push_Conditional): Simplify handling,\n+\tno longer need to keep track of \"excluding\" sections.\n+\t(Currently_Excluding): Removed.\n+\t(Process_Source_File):\n+\tSet unw/vms flag so that texinfo can do the whole handling of\n+\t@ifset/@ifclear sections.  Fix handling of nested @ifset/@ifclear\n+\tsections.\n+\t* gnat_ugn.texi: Add a section on performing unassisted install\n+\ton Windows.\n+\n 2013-04-11  Johannes Kanig  <kanig@adacore.com>\n \n \t* debug.adb: Document usage of -gnatd.Q switch."}, {"sha": "64220f91ef2ed9d18ae7501848833fbae3bf0c96", "filename": "gcc/ada/a-cborse.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fa-cborse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fa-cborse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cborse.adb?ref=03eb6036fc6eb40d6e114121920e3093e49dfc18", "patch": "@@ -1768,6 +1768,7 @@ package body Ada.Containers.Bounded_Ordered_Sets is\n \n          L := L - 1;\n          B := B - 1;\n+\n       exception\n          when others =>\n             L := L - 1;\n@@ -1776,6 +1777,7 @@ package body Ada.Containers.Bounded_Ordered_Sets is\n       end;\n \n       if Compare then\n+\n          --  Item is equivalent to the node's element, so we will not have to\n          --  move the node.\n \n@@ -1808,14 +1810,18 @@ package body Ada.Containers.Bounded_Ordered_Sets is\n \n             L := L - 1;\n             B := B - 1;\n+\n          exception\n             when others =>\n                L := L - 1;\n                B := B - 1;\n                raise;\n          end;\n \n-         if not Compare then  -- Item is equivalent to Nodes (Hint).Element\n+         --  Item is equivalent to Nodes (Hint).Element\n+\n+         if not Compare then\n+\n             --  Ceiling returns an element that is equivalent or greater than\n             --  Item. If Item is \"not less than\" the element, then by\n             --  elimination we know that Item is equivalent to the element."}, {"sha": "3b1ffb43022c6c1a0b7351795d7238d871058ddc", "filename": "gcc/ada/a-ciorse.adb", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fa-ciorse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fa-ciorse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorse.adb?ref=03eb6036fc6eb40d6e114121920e3093e49dfc18", "patch": "@@ -494,14 +494,13 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n \n    procedure Delete (Container : in out Set; Item : Element_Type) is\n       X : Node_Access := Element_Keys.Find (Container.Tree, Item);\n-\n    begin\n       if X = null then\n          raise Constraint_Error with \"attempt to delete element not in set\";\n+      else\n+         Tree_Operations.Delete_Node_Sans_Free (Container.Tree, X);\n+         Free (X);\n       end if;\n-\n-      Tree_Operations.Delete_Node_Sans_Free (Container.Tree, X);\n-      Free (X);\n    end Delete;\n \n    ------------------\n@@ -1924,6 +1923,7 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n \n          L := L - 1;\n          B := B - 1;\n+\n       exception\n          when others =>\n             L := L - 1;\n@@ -1975,17 +1975,21 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n \n             L := L - 1;\n             B := B - 1;\n+\n          exception\n             when others =>\n                L := L - 1;\n                B := B - 1;\n                raise;\n          end;\n \n-         if not Compare then  -- Item >= Hint.Element\n-            --  Ceiling returns an element that is equivalent or greater than\n-            --  Item. If Item is \"not less than\" the element, then by\n-            --  elimination we know that Item is equivalent to the element.\n+         --  Item >= Hint.Element\n+\n+         if not Compare then\n+\n+            --  Ceiling returns an element that is equivalent or greater\n+            --  than Item. If Item is \"not less than\" the element, then\n+            --  by elimination we know that Item is equivalent to the element.\n \n             --  But this means that it is not possible to assign the value of\n             --  Item to the specified element (on Node), because a different"}, {"sha": "43d4ec9a3e81335dfbe8427353e57b009447baec", "filename": "gcc/ada/a-coorse.adb", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fa-coorse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fa-coorse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorse.adb?ref=03eb6036fc6eb40d6e114121920e3093e49dfc18", "patch": "@@ -1757,6 +1757,7 @@ package body Ada.Containers.Ordered_Sets is\n \n          L := L - 1;\n          B := B - 1;\n+\n       exception\n          when others =>\n             L := L - 1;\n@@ -1797,17 +1798,21 @@ package body Ada.Containers.Ordered_Sets is\n \n             L := L - 1;\n             B := B - 1;\n+\n          exception\n             when others =>\n                L := L - 1;\n                B := B - 1;\n                raise;\n          end;\n \n-         if not Compare then  -- Item >= Hint.Element\n-            --  Ceiling returns an element that is equivalent or greater than\n-            --  Item. If Item is \"not less than\" the element, then by\n-            --  elimination we know that Item is equivalent to the element.\n+         --  Item >= Hint.Element\n+\n+         if not Compare then\n+\n+            --  Ceiling returns an element that is equivalent or greater\n+            --  than Item. If Item is \"not less than\" the element, then\n+            --  by elimination we know that Item is equivalent to the element.\n \n             --  But this means that it is not possible to assign the value of\n             --  Item to the specified element (on Node), because a different"}, {"sha": "f1762f8be8396aff202c1af59b44efaf56a4f669", "filename": "gcc/ada/a-crbtgk.adb", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fa-crbtgk.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fa-crbtgk.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-crbtgk.adb?ref=03eb6036fc6eb40d6e114121920e3093e49dfc18", "patch": "@@ -65,6 +65,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Keys is\n       L := L - 1;\n \n       return Y;\n+\n    exception\n       when others =>\n          B := B - 1;\n@@ -116,6 +117,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Keys is\n       L := L - 1;\n \n       return Result;\n+\n    exception\n       when others =>\n          B := B - 1;\n@@ -155,6 +157,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Keys is\n       L := L - 1;\n \n       return Y;\n+\n    exception\n       when others =>\n          B := B - 1;\n@@ -214,6 +217,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Keys is\n \n          L := L - 1;\n          B := B - 1;\n+\n       exception\n          when others =>\n             L := L - 1;\n@@ -258,6 +262,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Keys is\n \n          L := L - 1;\n          B := B - 1;\n+\n       exception\n          when others =>\n             L := L - 1;\n@@ -321,11 +326,12 @@ package body Ada.Containers.Red_Black_Trees.Generic_Keys is\n             B := B + 1;\n             L := L + 1;\n \n-            Compare := Tree.Last = null\n-                         or else Is_Greater_Key_Node (Key, Tree.Last);\n+            Compare :=\n+              Tree.Last = null or else Is_Greater_Key_Node (Key, Tree.Last);\n \n             L := L - 1;\n             B := B - 1;\n+\n          exception\n             when others =>\n                L := L - 1;\n@@ -370,6 +376,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Keys is\n \n          L := L - 1;\n          B := B - 1;\n+\n       exception\n          when others =>\n             L := L - 1;\n@@ -395,6 +402,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Keys is\n \n             L := L - 1;\n             B := B - 1;\n+\n          exception\n             when others =>\n                L := L - 1;\n@@ -418,11 +426,11 @@ package body Ada.Containers.Red_Black_Trees.Generic_Keys is\n          return;\n       end if;\n \n-      --  We know that Key isn't less than the hint so we try again,\n-      --  this time to see if it's greater than the hint. If so we\n-      --  compare Key to the node that follows the hint. If Key is both\n-      --  greater than the hint and less than the hint's next neighbor,\n-      --  then we're done; otherwise we must search.\n+      --  We know that Key isn't less than the hint so we try again, this time\n+      --  to see if it's greater than the hint. If so we compare Key to the\n+      --  node that follows the hint. If Key is both greater than the hint and\n+      --  less than the hint's next neighbor, then we're done; otherwise we\n+      --  must search.\n \n       begin\n          B := B + 1;\n@@ -432,6 +440,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Keys is\n \n          L := L - 1;\n          B := B - 1;\n+\n       exception\n          when others =>\n             L := L - 1;\n@@ -457,6 +466,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Keys is\n \n             L := L - 1;\n             B := B - 1;\n+\n          exception\n             when others =>\n                L := L - 1;\n@@ -480,10 +490,9 @@ package body Ada.Containers.Red_Black_Trees.Generic_Keys is\n          return;\n       end if;\n \n-      --  We know that Key is neither less than the hint nor greater\n-      --  than the hint, and that's the definition of equivalence.\n-      --  There's nothing else we need to do, since a search would just\n-      --  reach the same conclusion.\n+      --  We know that Key is neither less than the hint nor greater than the\n+      --  hint, and that's the definition of equivalence. There's nothing else\n+      --  we need to do, since a search would just reach the same conclusion.\n \n       Node := Position;\n       Inserted := False;"}, {"sha": "6cce55d25ab3c2b4d17d1497827ff22f5f82b5b9", "filename": "gcc/ada/a-crbtgo.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fa-crbtgo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fa-crbtgo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-crbtgo.adb?ref=03eb6036fc6eb40d6e114121920e3093e49dfc18", "patch": "@@ -675,6 +675,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Operations is\n       LR := LR - 1;\n \n       return Result;\n+\n    exception\n       when others =>\n          BL := BL - 1;"}, {"sha": "d1c26778128a2f127746cea051992dfd07695538", "filename": "gcc/ada/a-rbtgbo.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fa-rbtgbo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fa-rbtgbo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-rbtgbo.adb?ref=03eb6036fc6eb40d6e114121920e3093e49dfc18", "patch": "@@ -654,6 +654,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Bounded_Operations is\n       LR := LR - 1;\n \n       return Result;\n+\n    exception\n       when others =>\n          BL := BL - 1;"}, {"sha": "06a78e922c32aed58582e473f7c322c34f9473ef", "filename": "gcc/ada/a-rbtgso.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fa-rbtgso.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fa-rbtgso.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-rbtgso.adb?ref=03eb6036fc6eb40d6e114121920e3093e49dfc18", "patch": "@@ -149,6 +149,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Set_Operations is\n \n             BS := BS - 1;\n             LS := LS - 1;\n+\n          exception\n             when others =>\n                BT := BT - 1;\n@@ -265,6 +266,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Set_Operations is\n          LR := LR - 1;\n \n          return Tree;\n+\n       exception\n          when others =>\n             BL := BL - 1;\n@@ -340,6 +342,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Set_Operations is\n \n             BS := BS - 1;\n             LS := LS - 1;\n+\n          exception\n             when others =>\n                BT := BT - 1;\n@@ -447,6 +450,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Set_Operations is\n          LR := LR - 1;\n \n          return Tree;\n+\n       exception\n          when others =>\n             BL := BL - 1;\n@@ -532,6 +536,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Set_Operations is\n          LR := LR - 1;\n \n          return Result;\n+\n       exception\n          when others =>\n             BL := BL - 1;\n@@ -605,6 +610,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Set_Operations is\n          LR := LR - 1;\n \n          return Result;\n+\n       exception\n          when others =>\n             BL := BL - 1;\n@@ -689,6 +695,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Set_Operations is\n \n             BS := BS - 1;\n             LS := LS - 1;\n+\n          exception\n             when others =>\n                BT := BT - 1;\n@@ -826,6 +833,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Set_Operations is\n          LR := LR - 1;\n \n          return Tree;\n+\n       exception\n          when others =>\n             BL := BL - 1;\n@@ -886,6 +894,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Set_Operations is\n \n          BS := BS - 1;\n          LS := LS - 1;\n+\n       exception\n          when others =>\n             BS := BS - 1;\n@@ -957,6 +966,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Set_Operations is\n          LR := LR - 1;\n \n          return Tree;\n+\n       exception\n          when others =>\n             BL := BL - 1;"}, {"sha": "980cc3cd48904322e87ed56ef3455e325f11aeeb", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=03eb6036fc6eb40d6e114121920e3093e49dfc18", "patch": "@@ -4846,9 +4846,8 @@ package body Exp_Ch3 is\n \n       begin\n          Full_Type := Typ;\n-         if Is_Private_Type (Typ)\n-           and then Present (Full_View (Typ))\n-         then\n+\n+         if Is_Private_Type (Typ) and then Present (Full_View (Typ)) then\n             Full_Type := Full_View (Typ);\n          end if;\n \n@@ -5169,9 +5168,9 @@ package body Exp_Ch3 is\n                     (N, New_Copy_Tree (Init_Expr, New_Scope => Current_Scope));\n                   return;\n \n-               --  If type has discriminants, try to build equivalent\n-               --  aggregate using discriminant values from the declaration.\n-               --  This is a useful optimization, in particular if restriction\n+               --  If type has discriminants, try to build equivalent aggregate\n+               --  using discriminant values from the declaration. This\n+               --  is a useful optimization, in particular if restriction\n                --  No_Elaboration_Code is active.\n \n                elsif Build_Equivalent_Aggregate then"}, {"sha": "3a70183818512103d5169f157ff4967ac4e75f26", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=03eb6036fc6eb40d6e114121920e3093e49dfc18", "patch": "@@ -9198,6 +9198,7 @@ package body Exp_Ch4 is\n       Loc   : constant Source_Ptr := Sloc (N);\n       Par   : constant Node_Id    := Parent (N);\n       P     : constant Node_Id    := Prefix (N);\n+      S     : constant Node_Id    := Selector_Name (N);\n       Ptyp  : Entity_Id           := Underlying_Type (Etype (P));\n       Disc  : Entity_Id;\n       New_N : Node_Id;\n@@ -9273,18 +9274,27 @@ package body Exp_Ch4 is\n       --  Deal with discriminant check required\n \n       if Do_Discriminant_Check (N) then\n+         if Present (Discriminant_Checking_Func\n+                      (Original_Record_Component (Entity (S))))\n+         then\n+            --  Present the discriminant checking function to the backend, so\n+            --  that it can inline the call to the function.\n+\n+            Add_Inlined_Body\n+              (Discriminant_Checking_Func\n+                (Original_Record_Component (Entity (S))));\n \n-         --  Present the discriminant checking function to the backend, so that\n-         --  it can inline the call to the function.\n+            --  Now reset the flag and generate the call\n \n-         Add_Inlined_Body\n-           (Discriminant_Checking_Func\n-             (Original_Record_Component (Entity (Selector_Name (N)))));\n+            Set_Do_Discriminant_Check (N, False);\n+            Generate_Discriminant_Check (N);\n \n-         --  Now reset the flag and generate the call\n+         --  In the case of Unchecked_Union, no discriminant checking is\n+         --  actually performed.\n \n-         Set_Do_Discriminant_Check (N, False);\n-         Generate_Discriminant_Check (N);\n+         else\n+            Set_Do_Discriminant_Check (N, False);\n+         end if;\n       end if;\n \n       --  Ada 2005 (AI-318-02): If the prefix is a call to a build-in-place"}, {"sha": "519890f176416836d1c6a36f4f7939c735120c9b", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=03eb6036fc6eb40d6e114121920e3093e49dfc18", "patch": "@@ -655,7 +655,11 @@ Compatibility and Porting Guide\n @ifset unw\n Microsoft Windows Topics\n \n+@ifclear FSFEDITION\n+* Installing from the Command Line::\n+@end ifclear\n * Using GNAT on Windows::\n+* Using a network installation of GNAT::\n * CONSOLE and WINDOWS subsystems::\n * Temporary Files::\n * Mixed-Language Programming on Windows::\n@@ -29091,6 +29095,9 @@ This chapter describes topics that are specific to the Microsoft Windows\n platforms (NT, 2000, and XP Professional).\n \n @menu\n+@ifclear FSFEDITION\n+* Installing from the Command Line::\n+@end ifclear\n * Using GNAT on Windows::\n * Using a network installation of GNAT::\n * CONSOLE and WINDOWS subsystems::\n@@ -29108,6 +29115,54 @@ platforms (NT, 2000, and XP Professional).\n * Setting Heap Size from gnatlink::\n @end menu\n \n+@ifclear FSFEDITION\n+@node Installing from the Command Line\n+@section Installing from the Command Line\n+@cindex Batch installation\n+@cindex Silent installation\n+@cindex Unassisted installation\n+\n+@noindent\n+By default the @value{EDITION} installers display a GUI that prompts the user\n+to enter installation path and similar information, and guide him through the\n+installation process. It is also possible to perform silent installations\n+using the command-line interface.\n+\n+In order to install one of the @value{EDITION} installers from the command\n+line you should pass parameter @code{/S} (and, optionally,\n+@code{/D=<directory>}) as command-line arguments.\n+\n+@ifset PROEDITION\n+For example, for an unattended installation of\n+@value{EDITION} 7.0.2 into the default directory\n+@code{C:\\GNATPRO\\7.0.2} you would run:\n+\n+@smallexample\n+gnatpro-7.0.2-i686-pc-mingw32-bin.exe /S\n+@end smallexample\n+\n+To install into a custom directory, say, @code{C:\\TOOLS\\GNATPRO\\7.0.2}:\n+\n+@smallexample\n+gnatpro-7.0.2-i686-pc-mingw32-bin /S /D=C:\\TOOLS\\GNATPRO\\7.0.2\n+@end smallexample\n+@end ifset\n+\n+@ifset GPLEDITION\n+For example, for an unattended installation of\n+@value{EDITION} 2012 into @code{C:\\GNAT\\2012}:\n+\n+@smallexample\n+gnat-gpl-2012-i686-pc-mingw32-bin /S /D=C:\\GNAT\\2012\n+@end smallexample\n+@end ifset\n+\n+You can use the same syntax for all installers.\n+\n+Note that unattended installations don't modify system path, nor create file\n+associations, so such activities need to be done by hand.\n+@end ifclear\n+\n @node Using GNAT on Windows\n @section Using GNAT on Windows\n "}, {"sha": "8473ff03ff2309341f4e70b87aef41acb820ee5a", "filename": "gcc/ada/init.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=03eb6036fc6eb40d6e114121920e3093e49dfc18", "patch": "@@ -711,15 +711,6 @@ __gnat_install_handler(void)\n #include <sys/ucontext.h>\n #include <sys/regset.h>\n \n-/* The code below is common to SPARC and x86.  Beware of the delay slot\n-   differences for signal context adjustments.  */\n-\n-#if defined (__sparc)\n-#define RETURN_ADDR_OFFSET 8\n-#else\n-#define RETURN_ADDR_OFFSET 0\n-#endif\n-\n static void\n __gnat_error_handler (int sig, siginfo_t *si, void *ucontext ATTRIBUTE_UNUSED)\n {"}, {"sha": "832e7c24aa42518e58fae508929ddea6d9e8540c", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=03eb6036fc6eb40d6e114121920e3093e49dfc18", "patch": "@@ -9448,12 +9448,16 @@ package body Sem_Ch13 is\n          return False;\n       end if;\n \n-      --  Representations are different if component alignments differ\n+      --  Representations are different if component alignments or scalar\n+      --  storage orders differ.\n \n       if (Is_Record_Type (T1) or else Is_Array_Type (T1))\n         and then\n          (Is_Record_Type (T2) or else Is_Array_Type (T2))\n-        and then Component_Alignment (T1) /= Component_Alignment (T2)\n+        and then\n+         (Component_Alignment (T1) /= Component_Alignment (T2)\n+            or else\n+          Reverse_Storage_Order (T1) /= Reverse_Storage_Order (T2))\n       then\n          return False;\n       end if;\n@@ -9530,7 +9534,7 @@ package body Sem_Ch13 is\n \n                function Same_Rep return Boolean;\n                --  CD1 and CD2 are either components or discriminants. This\n-               --  function tests whether the two have the same representation\n+               --  function tests whether they have the same representation.\n \n                --------------\n                -- Same_Rep --\n@@ -9540,8 +9544,11 @@ package body Sem_Ch13 is\n                begin\n                   if No (Component_Clause (CD1)) then\n                      return No (Component_Clause (CD2));\n-\n                   else\n+                     --  Note: at this point, component clauses have been\n+                     --  normalized to the default bit order, so that the\n+                     --  comparison of Component_Bit_Offsets is meaningful.\n+\n                      return\n                         Present (Component_Clause (CD2))\n                           and then"}, {"sha": "c6e8dca4820bb162236d6626756afd6159cc5d7c", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=03eb6036fc6eb40d6e114121920e3093e49dfc18", "patch": "@@ -8798,8 +8798,6 @@ package body Sem_Res is\n         and then Ekind_In (Entity (S), E_Component, E_Discriminant)\n         and then Present (Original_Record_Component (Entity (S)))\n         and then Ekind (Original_Record_Component (Entity (S))) = E_Component\n-        and then Present (Discriminant_Checking_Func\n-                           (Original_Record_Component (Entity (S))))\n         and then not Discriminant_Checks_Suppressed (T)\n         and then not Init_Component\n       then"}, {"sha": "3be0f5833f2efd444556ca51716ba3c9ec2db855", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=03eb6036fc6eb40d6e114121920e3093e49dfc18", "patch": "@@ -807,7 +807,10 @@ package Sinfo is\n    --    This flag is set on N_Selected_Component nodes to indicate that a\n    --    discriminant check is required using the discriminant check routine\n    --    associated with the selector. The actual check is generated by the\n-   --    expander when processing selected components.\n+   --    expander when processing selected components. In the case of\n+   --    Unchecked_Union, the flag is also set, but no discriminant check\n+   --    routine is associated with the selector, and the expander does not\n+   --    generate a check.\n \n    --  Do_Division_Check (Flag13-Sem)\n    --    This flag is set on a division operator (/ mod rem) to indicate"}, {"sha": "3403ad4d8713d5623695f3464199f3fe878174d4", "filename": "gcc/ada/xgnatugn.adb", "status": "modified", "additions": 38, "deletions": 56, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fxgnatugn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03eb6036fc6eb40d6e114121920e3093e49dfc18/gcc%2Fada%2Fxgnatugn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxgnatugn.adb?ref=03eb6036fc6eb40d6e114121920e3093e49dfc18", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -129,6 +129,7 @@ procedure Xgnatugn is\n    procedure Put_Line (F : Sfile; S : String);\n    --  Local version of Put_Line ensures Unix style line endings\n \n+   First_Time         : Boolean := True;\n    Number_Of_Warnings : Natural := 0;\n    Number_Of_Errors   : Natural := 0;\n    Warnings_Enabled   : Boolean;\n@@ -237,15 +238,11 @@ procedure Xgnatugn is\n    --  It relies on information in Source_File to generate error messages.\n \n    type Conditional is (Set, Clear);\n-   procedure Push_Conditional (Cond : Conditional; Flag : Target_Type);\n+   procedure Push_Conditional (Cond : Conditional; Flag : Flag_Type);\n    procedure Pop_Conditional  (Cond : Conditional);\n    --  These subprograms deal with conditional processing (@ifset/@ifclear).\n    --  They rely on information in Source_File to generate error messages.\n \n-   function Currently_Excluding return Boolean;\n-   --  Returns true if conditional processing directives imply that the\n-   --  current line should not be included in the output.\n-\n    function VMS_Context_Determined return Boolean;\n    --  Returns true if, in the current conditional preprocessing context, we\n    --  always have a VMS or a non-VMS version, regardless of the value of\n@@ -266,7 +263,6 @@ procedure Xgnatugn is\n       Starting_Line : Positive;\n       Cond          : Conditional;\n       Flag          : Flag_Type;\n-      Excluding     : Boolean;\n    end record;\n \n    Conditional_Stack_Depth : constant := 3;\n@@ -972,6 +968,14 @@ procedure Xgnatugn is\n                            Error (Source_File, \"flag has to be lowercase\");\n                         end if;\n \n+                        --  Set unw/vms flag in the output file so that\n+                        --  @ifset/@ifclear will work as expected.\n+\n+                        if First_Time then\n+                           Put_Line (Output_File, \"@set \" & Argument (1));\n+                           First_Time := False;\n+                        end if;\n+\n                      when Edition_Type =>\n                         null;\n                   end case;\n@@ -1002,6 +1006,14 @@ procedure Xgnatugn is\n                            Error (Source_File, \"flag has to be lowercase\");\n                         end if;\n \n+                        --  Set unw/vms flag in the output file so that\n+                        --  @ifset/@ifclear will work as expected.\n+\n+                        if First_Time then\n+                           Put_Line (Output_File, \"@set \" & Argument (1));\n+                           First_Time := False;\n+                        end if;\n+\n                      when Edition_Type =>\n                         null;\n                   end case;\n@@ -1011,16 +1023,14 @@ procedure Xgnatugn is\n                end;\n             end if;\n \n-            if Have_Conditional and (Flag in Target_Type) then\n-\n+            if Have_Conditional then\n                --  We create a new conditional context and suppress the\n                --  directive in the output.\n \n                Push_Conditional (Cond, Flag);\n \n             elsif Line'Length >= Endsetclear'Length\n               and then Line (1 .. Endsetclear'Length) = Endsetclear\n-              and then (Flag in Target_Type)\n             then\n                --  The '@end ifset'/'@end ifclear' case is handled here. We\n                --  have to pop the conditional context.\n@@ -1049,6 +1059,10 @@ procedure Xgnatugn is\n \n                      if Have_Conditional then\n                         Pop_Conditional (Cond);\n+\n+                        if Conditional_TOS > 0 then\n+                           Flag := Conditional_Stack (Conditional_TOS).Flag;\n+                        end if;\n                      end if;\n \n                      --  We fall through to the ordinary case for other @end\n@@ -1058,14 +1072,7 @@ procedure Xgnatugn is\n                end;\n             end if;                     --  Have_Conditional\n \n-            if (not Have_Conditional) or (Flag in Edition_Type) then\n-\n-               --  The ordinary case\n-\n-               if not Currently_Excluding then\n-                  Put_Line (Output_File, Rewritten);\n-               end if;\n-            end if;\n+            Put_Line (Output_File, Rewritten);\n          end;\n       end loop;\n \n@@ -1156,42 +1163,27 @@ procedure Xgnatugn is\n    -- Push_Conditional --\n    ----------------------\n \n-   procedure Push_Conditional (Cond : Conditional; Flag : Target_Type) is\n-      Will_Exclude : Boolean;\n-\n+   procedure Push_Conditional (Cond : Conditional; Flag : Flag_Type) is\n    begin\n-      --  If we are already in an excluding context, inherit this property,\n-      --  otherwise calculate it from scratch.\n+      if Flag in Target_Type then\n \n-      if Conditional_TOS > 0\n-        and then Conditional_Stack (Conditional_TOS).Excluding\n-      then\n-         Will_Exclude := True;\n-      else\n-         case Cond is\n-            when Set =>\n-               Will_Exclude := Flag /= Target;\n-            when Clear =>\n-               Will_Exclude := Flag = Target;\n-         end case;\n-      end if;\n+         --  Check if the current directive is pointless because of a previous,\n+         --  enclosing directive.\n \n-      --  Check if the current directive is pointless because of a previous,\n-      --  enclosing directive.\n-\n-      for J in 1 .. Conditional_TOS loop\n-         if Conditional_Stack (J).Flag = Flag then\n-            Warning (Source_File, \"directive without effect because of line\"\n-                     & Integer'Image (Conditional_Stack (J).Starting_Line));\n-         end if;\n-      end loop;\n+         for J in 1 .. Conditional_TOS loop\n+            if Conditional_Stack (J).Flag = Flag then\n+               Warning\n+                 (Source_File, \"directive without effect because of line\"\n+                 & Integer'Image (Conditional_Stack (J).Starting_Line));\n+            end if;\n+         end loop;\n+      end if;\n \n       Conditional_TOS := Conditional_TOS + 1;\n       Conditional_Stack (Conditional_TOS) :=\n         (Starting_Line => Source_File.Line,\n          Cond          => Cond,\n-         Flag          => Flag,\n-         Excluding     => Will_Exclude);\n+         Flag          => Flag);\n    end Push_Conditional;\n \n    ---------------------\n@@ -1234,16 +1226,6 @@ procedure Xgnatugn is\n       end if;\n    end Pop_Conditional;\n \n-   -------------------------\n-   -- Currently_Excluding --\n-   -------------------------\n-\n-   function Currently_Excluding return Boolean is\n-   begin\n-      return Conditional_TOS > 0\n-        and then Conditional_Stack (Conditional_TOS).Excluding;\n-   end Currently_Excluding;\n-\n    ----------------------------\n    -- VMS_Context_Determined --\n    ----------------------------"}]}