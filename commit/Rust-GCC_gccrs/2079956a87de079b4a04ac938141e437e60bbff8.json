{"sha": "2079956a87de079b4a04ac938141e437e60bbff8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA3OTk1NmE4N2RlMDc5YjRhMDRhYzkzODE0MWU0MzdlNjBiYmZmOA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2014-11-12T13:33:45Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2014-11-12T13:33:45Z"}, "message": "Predefine __NO_MATH_ERRNO__ for -fno-math-errno.\n\nThis patch adds a predefined macro __NO_MATH_ERRNO__ for when\n-fno-math-errno is passed or implied.  This allows math.h to provide a\nmore accurate definition of the C99 math_errhandling macro that takes\nthis option into account, and allows for choice of libm functions to\nbe optimized at compile time based on this option.\n\n(There may be a case for such interfaces for -fno-rounding-math\n(default) and -fno-trapping-math as well, but as C99 standard pragmas\nwould allow those to vary on a per-block basis, predefined macros\nwould be problematic as the interface; you can't select a\n-fno-trapping-math or -fno-rounding-math version of a function in a\nstandard header if a conforming program could then use \"#pragma STDC\nFENV_ACCESS ON\" to require a -ftrapping-math -frounding-math version\nin a particular block.  So built-in functions might be a better way of\nproviding access to information about those options.)\n\nBootstrapped with no regressions on x86_64-unknown-linux-gnu.  OK to\ncommit?\n\n\t* cppbuiltin.c (define_builtin_macros_for_compilation_flags):\n\tDefine __NO_MATH_ERRNO__ if -fno-math-errno.\n\t* doc/cpp.texi (__NO_MATH_ERRNO__): Document predefined macro.\n\nc-family:\n\t* c-cppbuiltin.c (c_cpp_builtins_optimize_pragma): Define and\n\tundefine __NO_MATH_ERRNO__ based on changes to -fmath-errno state.\n\ntestsuite:\n\t* gcc.dg/no-math-errno-1.c, gcc.dg/no-math-errno-2.c,\n\tgcc.dg/no-math-errno-3.c, gcc.dg/no-math-errno-4.c: New tests.\n\nFrom-SVN: r217420", "tree": {"sha": "d88a9be0aeb520b5e2b97631474f3e34c980ada8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d88a9be0aeb520b5e2b97631474f3e34c980ada8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2079956a87de079b4a04ac938141e437e60bbff8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2079956a87de079b4a04ac938141e437e60bbff8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2079956a87de079b4a04ac938141e437e60bbff8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2079956a87de079b4a04ac938141e437e60bbff8/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9700367fa3ab754909f3b2930b432c34a74a691", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9700367fa3ab754909f3b2930b432c34a74a691", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9700367fa3ab754909f3b2930b432c34a74a691"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "8d52622b1bf76d73e35accc037ce782b1c5512fd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2079956a87de079b4a04ac938141e437e60bbff8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2079956a87de079b4a04ac938141e437e60bbff8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2079956a87de079b4a04ac938141e437e60bbff8", "patch": "@@ -1,3 +1,9 @@\n+2014-11-12  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* cppbuiltin.c (define_builtin_macros_for_compilation_flags):\n+\tDefine __NO_MATH_ERRNO__ if -fno-math-errno.\n+\t* doc/cpp.texi (__NO_MATH_ERRNO__): Document predefined macro.\n+\n 2014-11-12  Richard Biener  <rguenther@suse.de>\n \n \t* genmatch.c (::gen_transform): Add capture_info and"}, {"sha": "4eb90fc1b117011931170d3518c97175c3ca75e3", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2079956a87de079b4a04ac938141e437e60bbff8/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2079956a87de079b4a04ac938141e437e60bbff8/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=2079956a87de079b4a04ac938141e437e60bbff8", "patch": "@@ -1,3 +1,8 @@\n+2014-11-12  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* c-cppbuiltin.c (c_cpp_builtins_optimize_pragma): Define and\n+\tundefine __NO_MATH_ERRNO__ based on changes to -fmath-errno state.\n+\n 2014-11-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/59708"}, {"sha": "c571d1b2e1ea569f456d24faf416490824c1af40", "filename": "gcc/c-family/c-cppbuiltin.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2079956a87de079b4a04ac938141e437e60bbff8/gcc%2Fc-family%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2079956a87de079b4a04ac938141e437e60bbff8/gcc%2Fc-family%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-cppbuiltin.c?ref=2079956a87de079b4a04ac938141e437e60bbff8", "patch": "@@ -549,6 +549,11 @@ c_cpp_builtins_optimize_pragma (cpp_reader *pfile, tree prev_tree,\n   else if (prev->x_flag_signaling_nans && !cur->x_flag_signaling_nans)\n     cpp_undef (pfile, \"__SUPPORT_SNAN__\");\n \n+  if (!prev->x_flag_errno_math && cur->x_flag_errno_math)\n+    cpp_undef (pfile, \"__NO_MATH_ERRNO__\");\n+  else if (prev->x_flag_errno_math && !cur->x_flag_errno_math)\n+    cpp_define (pfile, \"__NO_MATH_ERRNO__\");\n+\n   if (!prev->x_flag_finite_math_only && cur->x_flag_finite_math_only)\n     {\n       cpp_undef (pfile, \"__FINITE_MATH_ONLY__\");"}, {"sha": "474f72407274ea55b75c9dfadd9668ada8adcc27", "filename": "gcc/cppbuiltin.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2079956a87de079b4a04ac938141e437e60bbff8/gcc%2Fcppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2079956a87de079b4a04ac938141e437e60bbff8/gcc%2Fcppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppbuiltin.c?ref=2079956a87de079b4a04ac938141e437e60bbff8", "patch": "@@ -102,6 +102,8 @@ define_builtin_macros_for_compilation_flags (cpp_reader *pfile)\n     cpp_define (pfile, \"__FAST_MATH__\");\n   if (flag_signaling_nans)\n     cpp_define (pfile, \"__SUPPORT_SNAN__\");\n+  if (!flag_errno_math)\n+    cpp_define (pfile, \"__NO_MATH_ERRNO__\");\n \n   cpp_define_formatted (pfile, \"__FINITE_MATH_ONLY__=%d\",\n \t\t\tflag_finite_math_only);"}, {"sha": "df04d0baf467485fc9f993690da4e290321a145a", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2079956a87de079b4a04ac938141e437e60bbff8/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2079956a87de079b4a04ac938141e437e60bbff8/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=2079956a87de079b4a04ac938141e437e60bbff8", "patch": "@@ -2421,6 +2421,10 @@ Annex G requirements (for example, because @option{-fcx-limited-range}\n was used).  If 1 or more, it indicates that it is intended to support\n those requirements; this does not mean that all relevant language\n features are supported by GCC.\n+\n+@item __NO_MATH_ERRNO__\n+This macro is defined if @option{-fno-math-errno} is used, or enabled\n+by another option such as @option{-ffast-math} or by default.\n @end table\n \n @node System-specific Predefined Macros"}, {"sha": "0b5b0946982207794a5986432e319092f4b09de7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2079956a87de079b4a04ac938141e437e60bbff8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2079956a87de079b4a04ac938141e437e60bbff8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2079956a87de079b4a04ac938141e437e60bbff8", "patch": "@@ -1,3 +1,8 @@\n+2014-11-12  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/no-math-errno-1.c, gcc.dg/no-math-errno-2.c,\n+\tgcc.dg/no-math-errno-3.c, gcc.dg/no-math-errno-4.c: New tests.\n+\n 2014-11-12  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR testsuite/63830"}, {"sha": "2659f59c9ca23e79110561245c65cf69fd6ee182", "filename": "gcc/testsuite/gcc.dg/no-math-errno-1.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2079956a87de079b4a04ac938141e437e60bbff8/gcc%2Ftestsuite%2Fgcc.dg%2Fno-math-errno-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2079956a87de079b4a04ac938141e437e60bbff8/gcc%2Ftestsuite%2Fgcc.dg%2Fno-math-errno-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fno-math-errno-1.c?ref=2079956a87de079b4a04ac938141e437e60bbff8", "patch": "@@ -0,0 +1,7 @@\n+/* Test __NO_MATH_ERRNO__ is defined with -fno-math-errno.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-fno-math-errno\" } */\n+\n+#ifndef __NO_MATH_ERRNO__\n+#error \"__NO_MATH_ERRNO__ not defined\"\n+#endif"}, {"sha": "f44a997cad37c40f3d4a3a088371d1cd682af35c", "filename": "gcc/testsuite/gcc.dg/no-math-errno-2.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2079956a87de079b4a04ac938141e437e60bbff8/gcc%2Ftestsuite%2Fgcc.dg%2Fno-math-errno-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2079956a87de079b4a04ac938141e437e60bbff8/gcc%2Ftestsuite%2Fgcc.dg%2Fno-math-errno-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fno-math-errno-2.c?ref=2079956a87de079b4a04ac938141e437e60bbff8", "patch": "@@ -0,0 +1,7 @@\n+/* Test __NO_MATH_ERRNO__ is defined with -ffast-math.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-ffast-math\" } */\n+\n+#ifndef __NO_MATH_ERRNO__\n+#error \"__NO_MATH_ERRNO__ not defined\"\n+#endif"}, {"sha": "e19e94f2be59062671b0a41d4f886b5622f885ce", "filename": "gcc/testsuite/gcc.dg/no-math-errno-3.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2079956a87de079b4a04ac938141e437e60bbff8/gcc%2Ftestsuite%2Fgcc.dg%2Fno-math-errno-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2079956a87de079b4a04ac938141e437e60bbff8/gcc%2Ftestsuite%2Fgcc.dg%2Fno-math-errno-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fno-math-errno-3.c?ref=2079956a87de079b4a04ac938141e437e60bbff8", "patch": "@@ -0,0 +1,7 @@\n+/* Test __NO_MATH_ERRNO__ is not defined with -fmath-errno.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-fmath-errno\" } */\n+\n+#ifdef __NO_MATH_ERRNO__\n+#error \"__NO_MATH_ERRNO__ defined\"\n+#endif"}, {"sha": "c6daa128ffdd47a260d70fe9b16e7137813732ed", "filename": "gcc/testsuite/gcc.dg/no-math-errno-4.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2079956a87de079b4a04ac938141e437e60bbff8/gcc%2Ftestsuite%2Fgcc.dg%2Fno-math-errno-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2079956a87de079b4a04ac938141e437e60bbff8/gcc%2Ftestsuite%2Fgcc.dg%2Fno-math-errno-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fno-math-errno-4.c?ref=2079956a87de079b4a04ac938141e437e60bbff8", "patch": "@@ -0,0 +1,17 @@\n+/* Test __NO_MATH_ERRNO__ is defined and undefined by pragmas.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-fmath-errno\" } */\n+\n+#ifdef __NO_MATH_ERRNO__\n+#error \"__NO_MATH_ERRNO__ defined\"\n+#endif\n+\n+#pragma GCC optimize \"-fno-math-errno\"\n+#ifndef __NO_MATH_ERRNO__\n+#error \"__NO_MATH_ERRNO__ not defined\"\n+#endif\n+\n+#pragma GCC optimize \"-fmath-errno\"\n+#ifdef __NO_MATH_ERRNO__\n+#error \"__NO_MATH_ERRNO__ defined\"\n+#endif"}]}