{"sha": "1f46bd52c5ef8a050b6547dd0f272dc14364d979", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY0NmJkNTJjNWVmOGEwNTBiNjU0N2RkMGYyNzJkYzE0MzY0ZDk3OQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2015-01-13T14:08:21Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2015-01-13T14:08:21Z"}, "message": "\u001a2015-01-13  Andrew Pinski   <apinski@cavium.com>\n\n        * config/aarch64/aarch64.c (fusion_load_store): Check dest mode\n        instead of src mode.\n\n\n2015-01-13  Andrew Pinski  <apinski@cavium.com>\n\n        * gcc.target/aarch64/store-pair-1.c: New testcase.\n\nFrom-SVN: r219532", "tree": {"sha": "550fd98f214ee4a1ecd48e0f04f70d7d34629109", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/550fd98f214ee4a1ecd48e0f04f70d7d34629109"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f46bd52c5ef8a050b6547dd0f272dc14364d979", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f46bd52c5ef8a050b6547dd0f272dc14364d979", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f46bd52c5ef8a050b6547dd0f272dc14364d979", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f46bd52c5ef8a050b6547dd0f272dc14364d979/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e0ffb247d696aa7a98088e0cd9c647947b1d5d39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0ffb247d696aa7a98088e0cd9c647947b1d5d39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0ffb247d696aa7a98088e0cd9c647947b1d5d39"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "0248000ea77caca7c32aa0383895d666d2794315", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f46bd52c5ef8a050b6547dd0f272dc14364d979/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f46bd52c5ef8a050b6547dd0f272dc14364d979/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f46bd52c5ef8a050b6547dd0f272dc14364d979", "patch": "@@ -1,3 +1,8 @@\n+2015-01-13  Andrew Pinski   <apinski@cavium.com>\n+\n+\t* config/aarch64/aarch64.c (fusion_load_store): Check dest mode\n+\tinstead of src mode.\t\n+\n 2015-01-13  Richard Biener  <rguenther@suse.de>\n \n \tPR lto/64373"}, {"sha": "1151c8b7e014785b748b513e65c3cd87f4958b3b", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f46bd52c5ef8a050b6547dd0f272dc14364d979/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f46bd52c5ef8a050b6547dd0f272dc14364d979/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=1f46bd52c5ef8a050b6547dd0f272dc14364d979", "patch": "@@ -10520,8 +10520,8 @@ fusion_load_store (rtx_insn *insn, rtx *base, rtx *offset)\n   src = SET_SRC (x);\n   dest = SET_DEST (x);\n \n-  if (GET_MODE (src) != SImode && GET_MODE (src) != DImode\n-      && GET_MODE (src) != SFmode && GET_MODE (src) != DFmode)\n+  if (GET_MODE (dest) != SImode && GET_MODE (dest) != DImode\n+      && GET_MODE (dest) != SFmode && GET_MODE (dest) != DFmode)\n     return SCHED_FUSION_NONE;\n \n   if (GET_CODE (src) == SIGN_EXTEND)"}, {"sha": "4aad423598f8f759fa684b81354b4df4b518e7c6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f46bd52c5ef8a050b6547dd0f272dc14364d979/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f46bd52c5ef8a050b6547dd0f272dc14364d979/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1f46bd52c5ef8a050b6547dd0f272dc14364d979", "patch": "@@ -1,3 +1,7 @@\n+2015-01-13  Andrew Pinski  <apinski@cavium.com>\n+\n+\t* gcc.target/aarch64/store-pair-1.c: New testcase.\n+\n 2015-01-13  Richard Biener  <rguenther@suse.de>\n \n \tPR lto/64373"}, {"sha": "46c727e01d561c0e32068fcf1c79ac642fbe6759", "filename": "gcc/testsuite/gcc.target/aarch64/store-pair-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f46bd52c5ef8a050b6547dd0f272dc14364d979/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fstore-pair-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f46bd52c5ef8a050b6547dd0f272dc14364d979/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fstore-pair-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fstore-pair-1.c?ref=1f46bd52c5ef8a050b6547dd0f272dc14364d979", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int f(int *a, int b)\n+{\n+  a[28] = 0;\n+  a[29] = b;\n+  a[31] = 0;\n+}\n+\n+/* We should be able to produce store pair for the store of 28/29 store. */\n+{ dg-final { scan-assembler \"stp\\tw\\[0-9\\]+, w\\[0-9\\]+\" } }"}]}