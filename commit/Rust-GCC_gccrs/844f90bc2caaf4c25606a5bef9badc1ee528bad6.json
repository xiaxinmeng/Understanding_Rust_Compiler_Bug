{"sha": "844f90bc2caaf4c25606a5bef9badc1ee528bad6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ0ZjkwYmMyY2FhZjRjMjU2MDZhNWJlZjliYWRjMWVlNTI4YmFkNg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "1999-04-26T14:28:20Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "1999-04-26T14:28:20Z"}, "message": "libjava.exp (libjava_find_lib): New proc.\n\n\t* lib/libjava.exp (libjava_find_lib): New proc.\n\t(libjava_arguments): Use it.  Force static linking.\n\nFrom-SVN: r26651", "tree": {"sha": "8c366219c7caf1089fe0869e92742fceebcd85b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c366219c7caf1089fe0869e92742fceebcd85b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/844f90bc2caaf4c25606a5bef9badc1ee528bad6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/844f90bc2caaf4c25606a5bef9badc1ee528bad6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/844f90bc2caaf4c25606a5bef9badc1ee528bad6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/844f90bc2caaf4c25606a5bef9badc1ee528bad6/comments", "author": null, "committer": null, "parents": [{"sha": "66deb2be595d1a2ca4d00cfbf24d13e7a772c5ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66deb2be595d1a2ca4d00cfbf24d13e7a772c5ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66deb2be595d1a2ca4d00cfbf24d13e7a772c5ab"}], "stats": {"total": 66, "additions": 35, "deletions": 31}, "files": [{"sha": "506c1a889bc691be2cdb67ddfcfed0e965df37c1", "filename": "libjava/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844f90bc2caaf4c25606a5bef9badc1ee528bad6/libjava%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844f90bc2caaf4c25606a5bef9badc1ee528bad6/libjava%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FChangeLog?ref=844f90bc2caaf4c25606a5bef9badc1ee528bad6", "patch": "@@ -1,3 +1,8 @@\n+1999-04-26  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* lib/libjava.exp (libjava_find_lib): New proc.\n+\t(libjava_arguments): Use it.  Force static linking.\n+\n Thu Apr 22 14:19:35 1999  Anthony Green  <green@cygnus.com>\n \n \t* libjava.compile/OperatorBenchmark.java: New file."}, {"sha": "ce37a4ddef013e1fde225968e976d7ef24bf77d6", "filename": "libjava/testsuite/Makefile.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844f90bc2caaf4c25606a5bef9badc1ee528bad6/libjava%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844f90bc2caaf4c25606a5bef9badc1ee528bad6/libjava%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FMakefile.in?ref=844f90bc2caaf4c25606a5bef9badc1ee528bad6", "patch": "@@ -71,17 +71,22 @@ COMPPATH = @COMPPATH@\n CPP = @CPP@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n+DLLTOOL = @DLLTOOL@\n EH_COMMON_INCLUDE = @EH_COMMON_INCLUDE@\n EXEEXT = @EXEEXT@\n GCDEPS = @GCDEPS@\n GCINCS = @GCINCS@\n GCLIBS = @GCLIBS@\n GCOBJS = @GCOBJS@\n+LD = @LD@\n LIBGCJ_CFLAGS = @LIBGCJ_CFLAGS@\n LIBGCJ_CXXFLAGS = @LIBGCJ_CXXFLAGS@\n LIBGCJ_JAVAFLAGS = @LIBGCJ_JAVAFLAGS@\n+LIBTOOL = @LIBTOOL@\n+LN_S = @LN_S@\n MAINT = @MAINT@\n MAKEINFO = @MAKEINFO@\n+NM = @NM@\n PACKAGE = @PACKAGE@\n PERL = @PERL@\n RANLIB = @RANLIB@\n@@ -229,6 +234,7 @@ clean-am:  clean-generic mostlyclean-am\n clean: clean-am\n \n distclean-am:  distclean-generic clean-am\n+\t-rm -f libtool\n \n distclean: distclean-am\n "}, {"sha": "b3f34f5cbd7a756bdd116e4c0c7850995b29e5c1", "filename": "libjava/testsuite/lib/libjava.exp", "status": "modified", "additions": 24, "deletions": 31, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844f90bc2caaf4c25606a5bef9badc1ee528bad6/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844f90bc2caaf4c25606a5bef9badc1ee528bad6/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flib%2Flibjava.exp?ref=844f90bc2caaf4c25606a5bef9badc1ee528bad6", "patch": "@@ -79,6 +79,26 @@ proc libjava_init { args } {\n     set libjava_initialized 1\n }\n \n+# Find a library.  We know where libtool puts the actual libraries,\n+# and we look there.\n+proc libjava_find_lib {dir name} {\n+    global base_dir\n+    set gp [get_multilibs]\n+    foreach sub {.libs _libs} {\n+\tif {$gp != \"\"} {\n+\t    if {[file exists $gp/$dir/$sub/lib${name}.a]} then {\n+\t\treturn \"-L$gp/$dir/$sub -l$name\"\n+\t    }\n+\t}\n+\tset lib [findfile $base_dir/../../$dir/$sub/lib${name}.a \\\n+\t\t   \"-L$base_dir/../../$dir/$sub -l$name\" \"\"]\n+\tif {$lib != \"\"} {\n+\t    return $lib\n+\t}\n+    }\n+    return \"\"\n+}\n+\n # Compute arguments needed for compiler.\n proc libjava_arguments {} {\n     global base_dir\n@@ -93,47 +113,19 @@ proc libjava_arguments {} {\n     if [info exists LIBJAVA] {\n \tset libjava $LIBJAVA;\n     } else {\n-\tset gp [get_multilibs];\n-\tif { $gp != \"\" } {\n-\t    if [file exists \"$gp/libjava/libgcj.a\"] {\n-\t\tset libjava \"-L$gp/libjava -lgcj\";\n-\t    }\n-\t}\n-\tif ![info exists libjava] {\n-\t  set libjava [findfile $base_dir/../../libjava/libgcj.a \"-L$base_dir/../../libjava -lgcj\" -lgcj]\n-\t}\n+\tset libjava [libjava_find_lib libjava gcj]\n     }\n \n     if [info exists LIBGC] {\n \tset libgc $LIBGC;\n     } else {\n-\tset gp [get_multilibs];\n-\tif { $gp != \"\" } {\n-\t    if [file exists \"$gp/boehm-gc/libgcjgc.a\"] {\n-\t\tset libgc \"-L$gp/boehm-gc -lgcjgc\";\n-\t    }\n-\t}\n-\tif ![info exists libgc] {\n-\t  set libgc [findfile $base_dir/../../boehm-gc/libgcjgc.a \\\n-\t\t       \"-L$base_dir/../../boehm-gc -lgcjgc\" \\\n-\t\t       {}]\n-\t}\n+\tset libgc [libjava_find_lib boehm-gc gcjgc]\n     }\n \n     if [info exists LIBQTHREADS] {\n \tset libqthreads $LIBQTHREADS\n     } else {\n-\tset gp [get_multilibs]\n-\tif { $gp != \"\" } {\n-\t    if [file exists \"$gp/qthreads/libgcjcoop.a\"] {\n-\t\tset libqthreads \"-L$gp/qthreads -lgcjcoop\";\n-\t    }\n-\t}\n-\tif ![info exists libqthreads] {\n-\t    set libqthreads [findfile $base_dir/../../qthreads/libgcjcoop.a \\\n-\t\t\t       \"-L$base_dir/../../qthreads -lgcjcoop\" \\\n-\t\t\t       {}]\n-\t}\n+\tset libqthreads [libjava_find_lib qthreads gcjcoop]\n     }\n \n     # FIXME: there's no way to determine whether -lpthread is\n@@ -175,6 +167,7 @@ proc libjava_arguments {} {\n \n     global wrapper_file wrap_compile_flags;\n     lappend args \"additional_flags=$wrap_compile_flags\";\n+    lappend args \"additional_flags=-static\"\n     lappend args \"libs=$wrapper_file\";\n     lappend args \"libs=$libjava\";\n     lappend args \"libs=$libgc\";"}]}