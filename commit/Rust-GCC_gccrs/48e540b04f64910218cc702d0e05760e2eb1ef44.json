{"sha": "48e540b04f64910218cc702d0e05760e2eb1ef44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhlNTQwYjA0ZjY0OTEwMjE4Y2M3MDJkMGUwNTc2MGUyZWIxZWY0NA==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2007-01-29T17:25:04Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2007-01-29T17:25:04Z"}, "message": "re PR tree-optimization/30630 (Trunk GCC hangs while compiling cpu2k6/perlbench at -O2)\n\n2007-01-29  Daniel Berlin  <dberlin@dberlin.org>\n\n\tPR tree-optimization/30630\n\t* tree-ssa-structalias.c (do_complex_constraint): Mark correct\n\tvariable as changed.\n\nFrom-SVN: r121295", "tree": {"sha": "a919a2c1431ecdd74cd19e6f3977b96f57143280", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a919a2c1431ecdd74cd19e6f3977b96f57143280"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48e540b04f64910218cc702d0e05760e2eb1ef44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48e540b04f64910218cc702d0e05760e2eb1ef44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48e540b04f64910218cc702d0e05760e2eb1ef44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48e540b04f64910218cc702d0e05760e2eb1ef44/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "99af1cca0dee34626dfdfbe9754a8f59c0d6af35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99af1cca0dee34626dfdfbe9754a8f59c0d6af35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99af1cca0dee34626dfdfbe9754a8f59c0d6af35"}], "stats": {"total": 105, "additions": 103, "deletions": 2}, "files": [{"sha": "a733865012e8860df37aa0d80e96b2046b759d74", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48e540b04f64910218cc702d0e05760e2eb1ef44/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48e540b04f64910218cc702d0e05760e2eb1ef44/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48e540b04f64910218cc702d0e05760e2eb1ef44", "patch": "@@ -1,3 +1,9 @@\n+2007-01-29  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\tPR tree-optimization/30630\n+\t* tree-ssa-structalias.c (do_complex_constraint): Mark correct\n+\tvariable as changed.\n+\n 2007-01-29  Simon Martin  <simartin@users.sourceforge.net>\n \n \tPR c++/28266"}, {"sha": "3204d9658076213a093d858693efef1838d0a046", "filename": "gcc/testsuite/gcc.c-torture/compile/20070129.c", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48e540b04f64910218cc702d0e05760e2eb1ef44/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20070129.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48e540b04f64910218cc702d0e05760e2eb1ef44/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20070129.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20070129.c?ref=48e540b04f64910218cc702d0e05760e2eb1ef44", "patch": "@@ -0,0 +1,94 @@\n+/* This testcase would cause a hang in PTA solving due to a complex copy\n+   constraint and marking the wrong variable as changed.  */\n+\n+typedef struct RExC_state_t\n+{\n+ char *end;\n+ char *parse;\n+} RExC_state_t;\n+\n+struct regnode_string\n+{\n+ unsigned char str_len;\n+ char string[1];\n+};\n+\n+static void *regatom (RExC_state_t * pRExC_state, int *flagp);\n+\n+static void *\n+regpiece (RExC_state_t * pRExC_state, int *flagp)\n+{\n+ return regatom (0, 0);\n+}\n+\n+static void *\n+regbranch (RExC_state_t * pRExC_state, int *flagp, int first)\n+{\n+ return regpiece (0, 0);\n+}\n+\n+static void *\n+reg (RExC_state_t * pRExC_state, int paren, int *flagp)\n+{\n+ return regbranch (0, 0, 1);\n+}\n+\n+void *\n+Perl_pregcomp (char *exp, char *xend, void *pm)\n+{\n+ return reg (0, 0, 0);\n+}\n+\n+static void *\n+regatom (RExC_state_t * pRExC_state, int *flagp)\n+{\n+ register void *ret = 0;\n+ int flags;\n+\n+tryagain:\n+ switch (*(pRExC_state->parse))\n+   {\n+   case '(':\n+     ret = reg (pRExC_state, 1, &flags);\n+     if (flags & 0x8)\n+       {\n+         goto tryagain;\n+       }\n+     break;\n+   default:\n+ {\n+       register unsigned long len;\n+       register unsigned ender;\n+       register char *p;\n+       char *oldp, *s;\n+       unsigned long numlen;\n+       unsigned long foldlen;\n+       unsigned char tmpbuf[6 + 1], *foldbuf;\n+\n+     defchar:\n+       s = (((struct regnode_string *) ret)->string);\n+       for (len = 0, p = (pRExC_state->parse) - 1;\n+            len < 127 && p < (pRExC_state->end); len++)\n+         {\n+           if (((*p) == '*' || (*p) == '+' || (*p) == '?'\n+                || ((*p) == '{' && regcurly (p))))\n+             {\n+               unsigned long unilen;\n+               for (foldbuf = tmpbuf; foldlen; foldlen -= numlen)\n+                 {\n+                   reguni (pRExC_state, ender, s, &unilen);\n+                   s += unilen;\n+                 }\n+               break;\n+             }\n+           unsigned long unilen;\n+\n+           reguni (pRExC_state, ender, s, &unilen);\n+           s += unilen;\n+         }\n+\n+     };\n+     break;\n+   }\n+ return (ret);\n+}"}, {"sha": "c57f1c23592888151aa0f5deea470f7e133fbbe7", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48e540b04f64910218cc702d0e05760e2eb1ef44/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48e540b04f64910218cc702d0e05760e2eb1ef44/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=48e540b04f64910218cc702d0e05760e2eb1ef44", "patch": "@@ -1538,9 +1538,9 @@ do_complex_constraint (constraint_graph_t graph, constraint_t c, bitmap delta)\n       if (flag)\n \t{\n \t  get_varinfo (t)->solution = tmp;\n-\t  if (!TEST_BIT (changed, c->lhs.var))\n+\t  if (!TEST_BIT (changed, t))\n \t    {\n-\t      SET_BIT (changed, c->lhs.var);\n+\t      SET_BIT (changed, t);\n \t      changed_count++;\n \t    }\n \t}\n@@ -2065,6 +2065,7 @@ solve_graph (constraint_graph_t graph)\n \t      bitmap solution;\n \t      VEC(constraint_t,heap) *complex = graph->complex[i];\n \t      bool solution_empty;\n+\n \t      RESET_BIT (changed, i);\n \t      changed_count--;\n "}]}