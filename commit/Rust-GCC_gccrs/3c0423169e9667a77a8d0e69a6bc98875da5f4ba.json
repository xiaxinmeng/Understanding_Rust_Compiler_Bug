{"sha": "3c0423169e9667a77a8d0e69a6bc98875da5f4ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MwNDIzMTY5ZTk2NjdhNzdhOGQwZTY5YTZiYzk4ODc1ZGE1ZjRiYQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-02-28T13:34:31Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-02-28T13:34:31Z"}, "message": "h8300.md (*tst_extzv_bitqi_1_n): Accept the test of bit 7.\n\n\t* config/h8300/h8300.md (*tst_extzv_bitqi_1_n): Accept the\n\ttest of bit 7.\n\t(*tst_extzv_memqi_1_n): Likewise.\n\t(a peephole2): New.\n\nFrom-SVN: r63558", "tree": {"sha": "3be1f9f794487ca4fdefd6d47eb2bf96a180ddfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3be1f9f794487ca4fdefd6d47eb2bf96a180ddfc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c0423169e9667a77a8d0e69a6bc98875da5f4ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c0423169e9667a77a8d0e69a6bc98875da5f4ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c0423169e9667a77a8d0e69a6bc98875da5f4ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c0423169e9667a77a8d0e69a6bc98875da5f4ba/comments", "author": null, "committer": null, "parents": [{"sha": "4480b3dcf640e952085da75f887d7392c5afc994", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4480b3dcf640e952085da75f887d7392c5afc994", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4480b3dcf640e952085da75f887d7392c5afc994"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "a4f86aa9d17748eb2fe793685aeb7881da370a9a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0423169e9667a77a8d0e69a6bc98875da5f4ba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0423169e9667a77a8d0e69a6bc98875da5f4ba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c0423169e9667a77a8d0e69a6bc98875da5f4ba", "patch": "@@ -1,3 +1,10 @@\n+2003-02-28  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.md (*tst_extzv_bitqi_1_n): Accept the\n+\ttest of bit 7.\n+\t(*tst_extzv_memqi_1_n): Likewise.\n+\t(a peephole2): New.\n+\n 2002-02-28  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips.h (CRT_CALL_STATIC_FUNCTION): Wrap in"}, {"sha": "162b9a3f95d6e5e54d6febf363227d0abb08341a", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0423169e9667a77a8d0e69a6bc98875da5f4ba/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0423169e9667a77a8d0e69a6bc98875da5f4ba/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=3c0423169e9667a77a8d0e69a6bc98875da5f4ba", "patch": "@@ -592,8 +592,7 @@\n   [(set (cc0) (zero_extract:SI (match_operand:QI 0 \"bit_operand\" \"r,U\")\n \t\t\t       (const_int 1)\n \t\t\t       (match_operand 1 \"const_int_operand\" \"n,n\")))]\n-  \"(TARGET_H8300H || TARGET_H8300S)\n-   && INTVAL (operands[1]) != 7\"\n+  \"(TARGET_H8300H || TARGET_H8300S)\"\n   \"btst\t%Z1,%Y0\"\n   [(set_attr \"length\" \"2,8\")\n    (set_attr \"cc\" \"set_zn,set_zn\")])\n@@ -604,8 +603,7 @@\n \t\t\t       (match_operand 1 \"const_int_operand\" \"n\")))\n    (clobber (match_scratch:QI 2 \"=&r\"))]\n   \"(TARGET_H8300H || TARGET_H8300S)\n-   && !EXTRA_CONSTRAINT (operands[0], 'U')\n-   && INTVAL (operands[1]) != 7\"\n+   && !EXTRA_CONSTRAINT (operands[0], 'U')\"\n   \"#\"\n   \"&& reload_completed\"\n   [(set (match_dup 2)\n@@ -3514,6 +3512,27 @@\n \t\t      (pc)))]\n   \"\")\n \n+(define_peephole2\n+  [(set (cc0)\n+\t(zero_extract:SI (match_operand:QI 0 \"register_operand\" \"\")\n+\t\t\t (const_int 1)\n+\t\t\t (const_int 7)))\n+   (set (pc)\n+\t(if_then_else (match_operator 1 \"eqne_operator\"\n+\t\t\t[(cc0) (const_int 0)])\n+\t\t      (label_ref (match_operand 2 \"\" \"\"))\n+\t\t      (pc)))]\n+  \"(TARGET_H8300H || TARGET_H8300S)\"\n+  [(set (cc0)\n+        (match_dup 0))\n+   (set (pc)\n+\t(if_then_else (match_op_dup 3 [(cc0) (const_int 0)])\n+\t\t      (label_ref (match_dup 2))\n+\t\t      (pc)))]\n+  \"operands[3] = ((GET_CODE (operands[1]) == EQ)\n+\t\t  ? gen_rtx_GE (VOIDmode, cc0_rtx, const0_rtx)\n+\t\t  : gen_rtx_LT (VOIDmode, cc0_rtx, const0_rtx));\")\n+\n ;; (compare (reg:SI) (const_int)) takes 6 bytes, so we try to achieve\n ;; the equivalent with shorter sequences.  Here is the summary.  Cases\n ;; are grouped for each define_peephole2."}]}