{"sha": "314b62ec787abdf320fcca8ceb09b8c9bcf72512", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE0YjYyZWM3ODdhYmRmMzIwZmNjYThjZWIwOWI4YzliY2Y3MjUxMg==", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-23T14:21:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-23T14:21:43Z"}, "message": "Merge #591\n\n591: Remove error handling in parse_type_no_bounds for PLUS token r=philberty a=philberty\n\nparse_type_no_bounds tries to be helpful and greedily looks for a PLUS\r\ntoken after having parsed a typepath so it can produce an error. But\r\nthat error breaks parsing expressions that contain \"as\" Cast\r\nExpressions like \"a as usize + b as usize\". Drop the explicit error on\r\nseeing a PLUS token and just return the type path parsed.\n\nCo-authored-by: Mark Wielaard <mark@klomp.org>", "tree": {"sha": "84466ab994fe528038b51bc19e75757f4247eaf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84466ab994fe528038b51bc19e75757f4247eaf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/314b62ec787abdf320fcca8ceb09b8c9bcf72512", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg+tB3CRBK7hj4Ov3rIwAA2PwIALFJ3imyjCdxI9pWLaEytb/U\n2z1E4xr8cGPJRnoBgz7hOtfN3PMpquuLQfQJzClWeD3UDUasfSnkiycZTYpgZ8Ag\na92qwpFpw/JremPopOgWKXaOhbTrw9Ilkoij2YEYir5UlivmnV7ATbSUllIrF5/3\n8WGANJhHf/bhCUTUjjUPK8FQTxec8+k8O7ecRv5dvB0q2bzymxRpX4QgpTG4KLl1\npCKZrws9g+K6X+oGrYyUB+Nw4o1aBfow4Mkxm70RBrua9Zh5tDTj7WwxdCWnVOlC\nrcELpQjKcyG78Vl2tu7aXxK+IXrCkH+baefEprt13mpUoV6OCTVcp5yX99NEoC8=\n=JzUA\n-----END PGP SIGNATURE-----\n", "payload": "tree 84466ab994fe528038b51bc19e75757f4247eaf4\nparent afd9db6f6b28d273434b0c61ec0b1aa0dcc4c89f\nparent 4d841a49ddb49d7201f0af98ddd3baf3a745c65c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1627050103 +0000\ncommitter GitHub <noreply@github.com> 1627050103 +0000\n\nMerge #591\n\n591: Remove error handling in parse_type_no_bounds for PLUS token r=philberty a=philberty\n\nparse_type_no_bounds tries to be helpful and greedily looks for a PLUS\r\ntoken after having parsed a typepath so it can produce an error. But\r\nthat error breaks parsing expressions that contain \"as\" Cast\r\nExpressions like \"a as usize + b as usize\". Drop the explicit error on\r\nseeing a PLUS token and just return the type path parsed.\n\nCo-authored-by: Mark Wielaard <mark@klomp.org>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/314b62ec787abdf320fcca8ceb09b8c9bcf72512", "html_url": "https://github.com/Rust-GCC/gccrs/commit/314b62ec787abdf320fcca8ceb09b8c9bcf72512", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/314b62ec787abdf320fcca8ceb09b8c9bcf72512/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afd9db6f6b28d273434b0c61ec0b1aa0dcc4c89f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afd9db6f6b28d273434b0c61ec0b1aa0dcc4c89f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afd9db6f6b28d273434b0c61ec0b1aa0dcc4c89f"}, {"sha": "4d841a49ddb49d7201f0af98ddd3baf3a745c65c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d841a49ddb49d7201f0af98ddd3baf3a745c65c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d841a49ddb49d7201f0af98ddd3baf3a745c65c"}], "stats": {"total": 7, "additions": 0, "deletions": 7}, "files": [{"sha": "be261715c6ca3952b43096924f0ee163958a867a", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/314b62ec787abdf320fcca8ceb09b8c9bcf72512/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/314b62ec787abdf320fcca8ceb09b8c9bcf72512/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=314b62ec787abdf320fcca8ceb09b8c9bcf72512", "patch": "@@ -10003,13 +10003,6 @@ Parser<ManagedTokenSource>::parse_type_no_bounds ()\n \t\t\t\t       std::move (tok_tree)),\n \t\t  {}, locus));\n \t    }\n-\t  case PLUS:\n-\t    // type param bounds - not allowed, here for error message\n-\t    add_error (Error (t->get_locus (),\n-\t\t\t      \"type param bounds (in TraitObjectType) are not \"\n-\t\t\t      \"allowed as TypeNoBounds\"));\n-\n-\t    return nullptr;\n \t  default:\n \t    // assume that this is a type path and not an error\n \t    return std::unique_ptr<AST::TypePath> ("}]}