{"sha": "bb07057a316f7f8c3daa1a4dd67fd3c5d9d450c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIwNzA1N2EzMTZmN2Y4YzNkYWExYTRkZDY3ZmQzYzVkOWQ0NTBjNw==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-05-26T14:13:28Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-05-26T15:45:38Z"}, "message": "gcc-changelog: remove file descriptor leaks\n\nCurrently, running gcc-changelog's unit tests may clutter the output\nwith tons of warnings such as:\n\n    .../contrib/gcc-changelog/git_email.py:40: ResourceWarning: unclosed\n    file <_io.TextIOWrapper name='/tmp/tmpt5okd4qp.patch' mode='r'\n    encoding='UTF-8'>\n      lines = open(self.filename).read().splitlines()\n    ResourceWarning: Enable tracemalloc to get the object allocation\n    traceback\n\nThis commit fixes these leaks, which restores a clean testsuite output.\n\ncontrib/\n\n\t* gcc-changelog/git_update_version.py: Close file objects after\n\tuse.\n\t* gcc-changelog/git_email.py: Likewise.\n\t* gcc-changelog/test_email.py: Likewise.", "tree": {"sha": "f29fde9a9240e9ac011053ac7ed31358638754df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f29fde9a9240e9ac011053ac7ed31358638754df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb07057a316f7f8c3daa1a4dd67fd3c5d9d450c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb07057a316f7f8c3daa1a4dd67fd3c5d9d450c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb07057a316f7f8c3daa1a4dd67fd3c5d9d450c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb07057a316f7f8c3daa1a4dd67fd3c5d9d450c7/comments", "author": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0981cf960d07752f9844a2f2799fbc85a7f1efd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0981cf960d07752f9844a2f2799fbc85a7f1efd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0981cf960d07752f9844a2f2799fbc85a7f1efd8"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "8c9df293a6610213231ac51e5cedf31005d44446", "filename": "contrib/gcc-changelog/git_email.py", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb07057a316f7f8c3daa1a4dd67fd3c5d9d450c7/contrib%2Fgcc-changelog%2Fgit_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb07057a316f7f8c3daa1a4dd67fd3c5d9d450c7/contrib%2Fgcc-changelog%2Fgit_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_email.py?ref=bb07057a316f7f8c3daa1a4dd67fd3c5d9d450c7", "patch": "@@ -37,7 +37,8 @@ def __init__(self, filename, strict=False):\n         date = None\n         author = None\n \n-        lines = open(self.filename).read().splitlines()\n+        with open(self.filename, 'r') as f:\n+            lines = f.read().splitlines()\n         lines = list(takewhile(lambda line: line != '---', lines))\n         for line in lines:\n             if line.startswith(DATE_PREFIX):"}, {"sha": "6b6ccf68a5e29d3d4427c5d6bea3808348490724", "filename": "contrib/gcc-changelog/git_update_version.py", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb07057a316f7f8c3daa1a4dd67fd3c5d9d450c7/contrib%2Fgcc-changelog%2Fgit_update_version.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb07057a316f7f8c3daa1a4dd67fd3c5d9d450c7/contrib%2Fgcc-changelog%2Fgit_update_version.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_update_version.py?ref=bb07057a316f7f8c3daa1a4dd67fd3c5d9d450c7", "patch": "@@ -28,7 +28,8 @@\n \n \n def read_timestamp(path):\n-    return open(path).read()\n+    with open(path) as f:\n+        return f.read()\n \n \n def prepend_to_changelog_files(repo, folder, git_commit, add_to_git):\n@@ -40,7 +41,8 @@ def prepend_to_changelog_files(repo, folder, git_commit, add_to_git):\n         full_path = os.path.join(folder, entry, 'ChangeLog')\n         print('writting to %s' % full_path)\n         if os.path.exists(full_path):\n-            content = open(full_path).read()\n+            with open(full_path) as f:\n+                content = f.read()\n         else:\n             content = ''\n         with open(full_path, 'w+') as f:"}, {"sha": "1379502e755f7347705f74464b85a0d6e1e98977", "filename": "contrib/gcc-changelog/test_email.py", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb07057a316f7f8c3daa1a4dd67fd3c5d9d450c7/contrib%2Fgcc-changelog%2Ftest_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb07057a316f7f8c3daa1a4dd67fd3c5d9d450c7/contrib%2Fgcc-changelog%2Ftest_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_email.py?ref=bb07057a316f7f8c3daa1a4dd67fd3c5d9d450c7", "patch": "@@ -33,7 +33,8 @@ def setUp(self):\n \n         filename = None\n         patch_lines = []\n-        lines = open(os.path.join(script_path, 'test_patches.txt')).read()\n+        with open(os.path.join(script_path, 'test_patches.txt')) as f:\n+            lines = f.read()\n         for line in lines.split('\\n'):\n             if line.startswith('==='):\n                 if patch_lines:"}]}