{"sha": "649794ff576fb9a033358799eb43a43addff1aa9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ5Nzk0ZmY1NzZmYjlhMDMzMzU4Nzk5ZWI0M2E0M2FkZGZmMWFhOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-01-18T13:13:21Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-01-18T13:13:21Z"}, "message": "re PR tree-optimization/88903 (wrong-code with SLP vectorized shift)\n\n2019-01-18  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/88903\n\t* tree-vect-stmts.c (vectorizable_shift): Verify we see all\n\tscalar stmts a SLP shift amount is composed of when detecting\n\tshifts by scalars.\n\n\t* gcc.dg/vect/pr88903-1.c: New testcase.\n\t* gcc.dg/vect/pr88903-2.c: Likewise.\n\nFrom-SVN: r268076", "tree": {"sha": "af1f4ed29767e1b12eba1441e6669678ffaf5c42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af1f4ed29767e1b12eba1441e6669678ffaf5c42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/649794ff576fb9a033358799eb43a43addff1aa9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/649794ff576fb9a033358799eb43a43addff1aa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/649794ff576fb9a033358799eb43a43addff1aa9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/649794ff576fb9a033358799eb43a43addff1aa9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "420183d996f320dddb3d1094ae340c53719e0de3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/420183d996f320dddb3d1094ae340c53719e0de3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/420183d996f320dddb3d1094ae340c53719e0de3"}], "stats": {"total": 77, "additions": 77, "deletions": 0}, "files": [{"sha": "13890776cc083cea314a91dffc1d92e56b0e73ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/649794ff576fb9a033358799eb43a43addff1aa9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/649794ff576fb9a033358799eb43a43addff1aa9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=649794ff576fb9a033358799eb43a43addff1aa9", "patch": "@@ -1,3 +1,10 @@\n+2019-01-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/88903\n+\t* tree-vect-stmts.c (vectorizable_shift): Verify we see all\n+\tscalar stmts a SLP shift amount is composed of when detecting\n+\tshifts by scalars.\n+\n 2019-01-18  Richard Earnshaw  <rearnsha@arm.com>\n \n \tPR target/88799"}, {"sha": "77b89f46084b91750323b53204201bcc92cf599f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/649794ff576fb9a033358799eb43a43addff1aa9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/649794ff576fb9a033358799eb43a43addff1aa9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=649794ff576fb9a033358799eb43a43addff1aa9", "patch": "@@ -1,3 +1,9 @@\n+2019-01-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/88903\n+\t* gcc.dg/vect/pr88903-1.c: New testcase.\n+\t* gcc.dg/vect/pr88903-2.c: Likewise.\n+\n 2019-01-18  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR c/51628"}, {"sha": "dead2b5e723eaff77fa1edb6ae32d12b005c680e", "filename": "gcc/testsuite/gcc.dg/vect/pr88903-1.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/649794ff576fb9a033358799eb43a43addff1aa9/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr88903-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/649794ff576fb9a033358799eb43a43addff1aa9/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr88903-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr88903-1.c?ref=649794ff576fb9a033358799eb43a43addff1aa9", "patch": "@@ -0,0 +1,26 @@\n+#include \"tree-vect.h\"\n+\n+int x[1024];\n+\n+void __attribute__((noinline))\n+foo()\n+{\n+  for (int i = 0; i < 512; ++i)\n+    {\n+      x[2*i] = x[2*i] << (i+1);\n+      x[2*i+1] = x[2*i+1] << (i+1);\n+    }\n+}\n+\n+int\n+main()\n+{\n+  check_vect ();\n+  for (int i = 0; i < 1024; ++i)\n+    x[i] = i;\n+  foo ();\n+  for (int i = 0; i < 1024; ++i)\n+    if (x[i] != i << (i/2+1))\n+      __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "cd88a99c6045c6a3eb848f053386d22b9cbe46ce", "filename": "gcc/testsuite/gcc.dg/vect/pr88903-2.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/649794ff576fb9a033358799eb43a43addff1aa9/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr88903-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/649794ff576fb9a033358799eb43a43addff1aa9/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr88903-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr88903-2.c?ref=649794ff576fb9a033358799eb43a43addff1aa9", "patch": "@@ -0,0 +1,28 @@\n+#include \"tree-vect.h\"\n+\n+int x[1024];\n+int y[1024];\n+int z[1024];\n+\n+void __attribute__((noinline)) foo()\n+{\n+  for (int i = 0; i < 512; ++i)\n+    {\n+      x[2*i] = x[2*i] << y[2*i];\n+      x[2*i+1] = x[2*i+1] << y[2*i];\n+      z[2*i] = y[2*i];\n+      z[2*i+1] = y[2*i+1];\n+    }\n+}\n+\n+int main()\n+{\n+  check_vect ();\n+  for (int i = 0; i < 1024; ++i)\n+    x[i] = i, y[i] = i % 8;\n+  foo ();\n+  for (int i = 0; i < 1024; ++i)\n+    if (x[i] != i << ((i & ~1) % 8))\n+      __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "2220fce316553d2afdff3185f9d566ac1b2f7cce", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/649794ff576fb9a033358799eb43a43addff1aa9/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/649794ff576fb9a033358799eb43a43addff1aa9/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=649794ff576fb9a033358799eb43a43addff1aa9", "patch": "@@ -5540,6 +5540,16 @@ vectorizable_shift (stmt_vec_info stmt_info, gimple_stmt_iterator *gsi,\n \t      if (!operand_equal_p (gimple_assign_rhs2 (slpstmt), op1, 0))\n \t\tscalar_shift_arg = false;\n \t    }\n+\n+\t  /* For internal SLP defs we have to make sure we see scalar stmts\n+\t     for all vector elements.\n+\t     ???  For different vectors we could resort to a different\n+\t     scalar shift operand but code-generation below simply always\n+\t     takes the first.  */\n+\t  if (dt[1] == vect_internal_def\n+\t      && maybe_ne (nunits_out * SLP_TREE_NUMBER_OF_VEC_STMTS (slp_node),\n+\t\t\t   stmts.length ()))\n+\t    scalar_shift_arg = false;\n \t}\n \n       /* If the shift amount is computed by a pattern stmt we cannot"}]}