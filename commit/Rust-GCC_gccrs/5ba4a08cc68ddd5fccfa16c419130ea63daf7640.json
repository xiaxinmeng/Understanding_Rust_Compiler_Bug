{"sha": "5ba4a08cc68ddd5fccfa16c419130ea63daf7640", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJhNGEwOGNjNjhkZGQ1ZmNjZmExNmM0MTkxMzBlYTYzZGFmNzY0MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-09-14T09:01:49Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-09-14T09:01:49Z"}, "message": "re PR sanitizer/68260 (false positive with tsan)\n\n\tPR sanitizer/68260\n\t* tsan.c: Include target.h.\n\t(enum tsan_atomic_action): Add bool_clear and bool_test_and_set.\n\t(BOOL_CLEAR, BOOL_TEST_AND_SET): Define.\n\t(tsan_atomic_table): Add BUILT_IN_ATOMIC_CLEAR and\n\tBUILT_IN_ATOMIC_TEST_AND_SET entries.\n\t(instrument_builtin_call): Handle bool_clear and bool_test_and_set.\n\n\t* c-c++-common/tsan/pr68260.c: New test.\n\nFrom-SVN: r240129", "tree": {"sha": "5e531f060222a533f2c6e86459883b8b39120199", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e531f060222a533f2c6e86459883b8b39120199"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ba4a08cc68ddd5fccfa16c419130ea63daf7640", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ba4a08cc68ddd5fccfa16c419130ea63daf7640", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ba4a08cc68ddd5fccfa16c419130ea63daf7640", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ba4a08cc68ddd5fccfa16c419130ea63daf7640/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "130ffea03c8226065628437f9611c029f21fcc62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/130ffea03c8226065628437f9611c029f21fcc62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/130ffea03c8226065628437f9611c029f21fcc62"}], "stats": {"total": 108, "additions": 106, "deletions": 2}, "files": [{"sha": "5759b8d1f67e0707317f8d2cf4207d92a3ae6f68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ba4a08cc68ddd5fccfa16c419130ea63daf7640/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ba4a08cc68ddd5fccfa16c419130ea63daf7640/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5ba4a08cc68ddd5fccfa16c419130ea63daf7640", "patch": "@@ -1,3 +1,13 @@\n+2016-09-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/68260\n+\t* tsan.c: Include target.h.\n+\t(enum tsan_atomic_action): Add bool_clear and bool_test_and_set.\n+\t(BOOL_CLEAR, BOOL_TEST_AND_SET): Define.\n+\t(tsan_atomic_table): Add BUILT_IN_ATOMIC_CLEAR and\n+\tBUILT_IN_ATOMIC_TEST_AND_SET entries.\n+\t(instrument_builtin_call): Handle bool_clear and bool_test_and_set.\n+\n 2016-09-14  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \t    Martin Liska  <mliska@suse.cz>\n "}, {"sha": "36e57c6edc157d17f1c2dc0216b19c8f167ad64a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ba4a08cc68ddd5fccfa16c419130ea63daf7640/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ba4a08cc68ddd5fccfa16c419130ea63daf7640/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5ba4a08cc68ddd5fccfa16c419130ea63daf7640", "patch": "@@ -1,3 +1,8 @@\n+2016-09-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/68260\n+\t* c-c++-common/tsan/pr68260.c: New test.\n+\n 2016-09-13  Joe Seymour  <joe.s@somniumtech.com>\n \n \tPR target/70713"}, {"sha": "86ffd2b2823ea2bb345e0ecd5ae9328f507e3705", "filename": "gcc/testsuite/c-c++-common/tsan/pr68260.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ba4a08cc68ddd5fccfa16c419130ea63daf7640/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fpr68260.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ba4a08cc68ddd5fccfa16c419130ea63daf7640/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fpr68260.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fpr68260.c?ref=5ba4a08cc68ddd5fccfa16c419130ea63daf7640", "patch": "@@ -0,0 +1,28 @@\n+/* PR sanitizer/68260 */\n+\n+#include <pthread.h>\n+#include <stdbool.h>\n+\n+bool lock;\n+int counter;\n+\n+void *\n+tf (void *arg)\n+{\n+  (void) arg;\n+  while (__atomic_test_and_set (&lock, __ATOMIC_ACQUIRE))\n+    ;\n+  ++counter;\n+  __atomic_clear (&lock, __ATOMIC_RELEASE);\n+  return (void *) 0;\n+}\n+\n+int\n+main ()\n+{\n+  pthread_t thr;\n+  pthread_create (&thr, 0, tf, 0);\n+  tf ((void *) 0);\n+  pthread_join (thr, 0);\n+  return 0;\n+}"}, {"sha": "d69432e52948260868e6d2cec3b948578c0b89cd", "filename": "gcc/tsan.c", "status": "modified", "additions": 63, "deletions": 2, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ba4a08cc68ddd5fccfa16c419130ea63daf7640/gcc%2Ftsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ba4a08cc68ddd5fccfa16c419130ea63daf7640/gcc%2Ftsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftsan.c?ref=5ba4a08cc68ddd5fccfa16c419130ea63daf7640", "patch": "@@ -40,6 +40,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tsan.h\"\n #include \"asan.h\"\n #include \"builtins.h\"\n+#include \"target.h\"\n \n /* Number of instrumented memory accesses in the current function.  */\n \n@@ -240,7 +241,8 @@ instrument_expr (gimple_stmt_iterator gsi, tree expr, bool is_write)\n enum tsan_atomic_action\n {\n   check_last, add_seq_cst, add_acquire, weak_cas, strong_cas,\n-  bool_cas, val_cas, lock_release, fetch_op, fetch_op_seq_cst\n+  bool_cas, val_cas, lock_release, fetch_op, fetch_op_seq_cst,\n+  bool_clear, bool_test_and_set\n };\n \n /* Table how to map sync/atomic builtins to their corresponding\n@@ -274,6 +276,10 @@ static const struct tsan_map_atomic\n   TRANSFORM (fcode, tsan_fcode, fetch_op, code)\n #define FETCH_OPS(fcode, tsan_fcode, code) \\\n   TRANSFORM (fcode, tsan_fcode, fetch_op_seq_cst, code)\n+#define BOOL_CLEAR(fcode, tsan_fcode) \\\n+  TRANSFORM (fcode, tsan_fcode, bool_clear, ERROR_MARK)\n+#define BOOL_TEST_AND_SET(fcode, tsan_fcode) \\\n+  TRANSFORM (fcode, tsan_fcode, bool_test_and_set, ERROR_MARK)\n \n   CHECK_LAST (ATOMIC_LOAD_1, TSAN_ATOMIC8_LOAD),\n   CHECK_LAST (ATOMIC_LOAD_2, TSAN_ATOMIC16_LOAD),\n@@ -463,7 +469,11 @@ static const struct tsan_map_atomic\n   LOCK_RELEASE (SYNC_LOCK_RELEASE_2, TSAN_ATOMIC16_STORE),\n   LOCK_RELEASE (SYNC_LOCK_RELEASE_4, TSAN_ATOMIC32_STORE),\n   LOCK_RELEASE (SYNC_LOCK_RELEASE_8, TSAN_ATOMIC64_STORE),\n-  LOCK_RELEASE (SYNC_LOCK_RELEASE_16, TSAN_ATOMIC128_STORE)\n+  LOCK_RELEASE (SYNC_LOCK_RELEASE_16, TSAN_ATOMIC128_STORE),\n+\n+  BOOL_CLEAR (ATOMIC_CLEAR, TSAN_ATOMIC8_STORE),\n+\n+  BOOL_TEST_AND_SET (ATOMIC_TEST_AND_SET, TSAN_ATOMIC8_EXCHANGE)\n };\n \n /* Instrument an atomic builtin.  */\n@@ -615,6 +625,57 @@ instrument_builtin_call (gimple_stmt_iterator *gsi)\n \t\t\t\tbuild_int_cst (NULL_TREE,\n \t\t\t\t\t       MEMMODEL_RELEASE));\n \t    return;\n+\t  case bool_clear:\n+\t  case bool_test_and_set:\n+\t    if (BOOL_TYPE_SIZE != 8)\n+\t      {\n+\t\tdecl = NULL_TREE;\n+\t\tfor (j = 1; j < 5; j++)\n+\t\t  if (BOOL_TYPE_SIZE == (8 << j))\n+\t\t    {\n+\t\t      enum built_in_function tsan_fcode\n+\t\t\t= (enum built_in_function)\n+\t\t\t  (tsan_atomic_table[i].tsan_fcode + j);\n+\t\t      decl = builtin_decl_implicit (tsan_fcode);\n+\t\t      break;\n+\t\t    }\n+\t\tif (decl == NULL_TREE)\n+\t\t  return;\n+\t      }\n+\t    last_arg = gimple_call_arg (stmt, num - 1);\n+\t    if (!tree_fits_uhwi_p (last_arg)\n+\t\t|| memmodel_base (tree_to_uhwi (last_arg)) >= MEMMODEL_LAST)\n+\t      return;\n+\t    t = TYPE_ARG_TYPES (TREE_TYPE (decl));\n+\t    t = TREE_VALUE (TREE_CHAIN (t));\n+\t    if (tsan_atomic_table[i].action == bool_clear)\n+\t      {\n+\t\tupdate_gimple_call (gsi, decl, 3, gimple_call_arg (stmt, 0),\n+\t\t\t\t    build_int_cst (t, 0), last_arg);\n+\t\treturn;\n+\t      }\n+\t    t = build_int_cst (t, targetm.atomic_test_and_set_trueval);\n+\t    update_gimple_call (gsi, decl, 3, gimple_call_arg (stmt, 0),\n+\t\t\t\tt, last_arg);\n+\t    stmt = gsi_stmt (*gsi);\n+\t    lhs = gimple_call_lhs (stmt);\n+\t    if (lhs == NULL_TREE)\n+\t      return;\n+\t    if (targetm.atomic_test_and_set_trueval != 1\n+\t\t|| !useless_type_conversion_p (TREE_TYPE (lhs),\n+\t\t\t\t\t       TREE_TYPE (t)))\n+\t      {\n+\t\ttree new_lhs = make_ssa_name (TREE_TYPE (t));\n+\t\tgimple_call_set_lhs (stmt, new_lhs);\n+\t\tif (targetm.atomic_test_and_set_trueval != 1)\n+\t\t  g = gimple_build_assign (lhs, NE_EXPR, new_lhs,\n+\t\t\t\t\t   build_int_cst (TREE_TYPE (t), 0));\n+\t\telse\n+\t\t  g = gimple_build_assign (lhs, NOP_EXPR, new_lhs);\n+\t\tgsi_insert_after (gsi, g, GSI_NEW_STMT);\n+\t\tupdate_stmt (stmt);\n+\t      }\n+\t    return;\n \t  default:\n \t    continue;\n \t  }"}]}