{"sha": "0f8bc3e1736a1b5b8195f0cb968511ca36a17c19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY4YmMzZTE3MzZhMWI1YjgxOTVmMGNiOTY4NTExY2EzNmExN2MxOQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2006-10-29T17:05:37Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2006-10-29T17:05:37Z"}, "message": "trans-intrinsic.c (gfc_conv_intrinsic_loc): Make LOC return a signed integer node.\n\n\t* trans-intrinsic.c (gfc_conv_intrinsic_loc): Make LOC return a\n\tsigned integer node.\n\nFrom-SVN: r118151", "tree": {"sha": "599d5d0f82a07ea4686d007f7b116331c4a3e0c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/599d5d0f82a07ea4686d007f7b116331c4a3e0c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f8bc3e1736a1b5b8195f0cb968511ca36a17c19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f8bc3e1736a1b5b8195f0cb968511ca36a17c19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f8bc3e1736a1b5b8195f0cb968511ca36a17c19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f8bc3e1736a1b5b8195f0cb968511ca36a17c19/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c693a24a05776bfdc330219fdd0d91896a5b412", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c693a24a05776bfdc330219fdd0d91896a5b412", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c693a24a05776bfdc330219fdd0d91896a5b412"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "b015e78412cb7557b8978ded2ff438289d880021", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8bc3e1736a1b5b8195f0cb968511ca36a17c19/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8bc3e1736a1b5b8195f0cb968511ca36a17c19/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0f8bc3e1736a1b5b8195f0cb968511ca36a17c19", "patch": "@@ -1,3 +1,8 @@\n+2006-10-29  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_loc): Make LOC return a\n+\tsigned integer node.\n+\n 2006-10-29  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/17741"}, {"sha": "911782ba8de2657c57dbbbf2f9a7bdb8fed3b270", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8bc3e1736a1b5b8195f0cb968511ca36a17c19/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8bc3e1736a1b5b8195f0cb968511ca36a17c19/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=0f8bc3e1736a1b5b8195f0cb968511ca36a17c19", "patch": "@@ -3301,7 +3301,7 @@ gfc_conv_intrinsic_iargc (gfc_se * se, gfc_expr * expr)\n    gfc_index_integer_kind integer.  */\n \n static void\n-gfc_conv_intrinsic_loc(gfc_se * se, gfc_expr * expr)\n+gfc_conv_intrinsic_loc (gfc_se * se, gfc_expr * expr)\n {\n   tree temp_var;\n   gfc_expr *arg_expr;\n@@ -3315,13 +3315,11 @@ gfc_conv_intrinsic_loc(gfc_se * se, gfc_expr * expr)\n     gfc_conv_expr_reference (se, arg_expr);\n   else\n     gfc_conv_array_parameter (se, arg_expr, ss, 1); \n-  se->expr= convert (gfc_unsigned_type (long_integer_type_node), \n-\t\t     se->expr);\n+  se->expr= convert (gfc_get_int_type (gfc_index_integer_kind), se->expr);\n    \n   /* Create a temporary variable for loc return value.  Without this, \n      we get an error an ICE in gcc/expr.c(expand_expr_addr_expr_1).  */\n-  temp_var = gfc_create_var (gfc_unsigned_type (long_integer_type_node), \n-\t\t\t     NULL);\n+  temp_var = gfc_create_var (gfc_get_int_type (gfc_index_integer_kind), NULL);\n   gfc_add_modify_expr (&se->pre, temp_var, se->expr);\n   se->expr = temp_var;\n }"}]}