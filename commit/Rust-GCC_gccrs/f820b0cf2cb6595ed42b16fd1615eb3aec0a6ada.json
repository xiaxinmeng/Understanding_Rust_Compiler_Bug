{"sha": "f820b0cf2cb6595ed42b16fd1615eb3aec0a6ada", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjgyMGIwY2YyY2I2NTk1ZWQ0MmIxNmZkMTYxNWViM2FlYzBhNmFkYQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2003-09-29T21:19:10Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2003-09-29T21:19:10Z"}, "message": "re PR c++/12175 (Tru64 UNIX bootstrap failure: multiply defined symbols linking libstdc++.so)\n\n\n\tPR c++/12175\n\t* varasm.c (notice_global_symbol): Discard external symbols.\n\n\tPR optimization/12286\n\t* gcov-io.c (gcov_read_words): Fix memmove call.\n\t* profile.c (compute_branch_probabilities): Add extra sanity checks.\n\n\tPR C++/12047\n\t* except.c (build_eh_type_type): Call mark_used on the type.\n\nFrom-SVN: r71916", "tree": {"sha": "ac8d51ac3e224b015d329e29e83234c8093f3647", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac8d51ac3e224b015d329e29e83234c8093f3647"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f820b0cf2cb6595ed42b16fd1615eb3aec0a6ada", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f820b0cf2cb6595ed42b16fd1615eb3aec0a6ada", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f820b0cf2cb6595ed42b16fd1615eb3aec0a6ada", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f820b0cf2cb6595ed42b16fd1615eb3aec0a6ada/comments", "author": null, "committer": null, "parents": [{"sha": "2cd5614273c9579fa35eff4b53a773c95b74fc75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cd5614273c9579fa35eff4b53a773c95b74fc75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cd5614273c9579fa35eff4b53a773c95b74fc75"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "78365cd474fc2973d93b13dc1ada0d8b78c24f05", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f820b0cf2cb6595ed42b16fd1615eb3aec0a6ada/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f820b0cf2cb6595ed42b16fd1615eb3aec0a6ada/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f820b0cf2cb6595ed42b16fd1615eb3aec0a6ada", "patch": "@@ -1,3 +1,12 @@\n+Mon Sep 29 22:59:05 CEST 2003  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR c++/12175\n+\t* varasm.c (notice_global_symbol): Discard external symbols.\n+\n+\tPR optimization/12286\n+\t* gcov-io.c (gcov_read_words): Fix memmove call.\n+\t* profile.c (compute_branch_probabilities): Add extra sanity checks.\n+\n 2003-09-29  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* config.gcc (sparc-*-solaris2*): Handle Solaris 10 and up like"}, {"sha": "b0f2c9cd05f5a8abe7475789d528d85168d588fb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f820b0cf2cb6595ed42b16fd1615eb3aec0a6ada/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f820b0cf2cb6595ed42b16fd1615eb3aec0a6ada/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f820b0cf2cb6595ed42b16fd1615eb3aec0a6ada", "patch": "@@ -1,3 +1,8 @@\n+2003-09-29  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR C++/12047\n+\t* except.c (build_eh_type_type): Call mark_used on the type.\n+\n 2003-09-28  Richard Henderson  <rth@redhat.com>\n \n \t* typeck.c (c_expand_asm_operands): Take location_t, instead of"}, {"sha": "1dc149a8685ce3caa612825d57cc61be23bea4fb", "filename": "gcc/cp/except.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f820b0cf2cb6595ed42b16fd1615eb3aec0a6ada/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f820b0cf2cb6595ed42b16fd1615eb3aec0a6ada/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=f820b0cf2cb6595ed42b16fd1615eb3aec0a6ada", "patch": "@@ -143,6 +143,8 @@ build_eh_type_type (tree type)\n   if (!exp)\n     return NULL;\n \n+  mark_used (exp);\n+\n   return build1 (ADDR_EXPR, ptr_type_node, exp);\n }\n "}, {"sha": "99731f79939edb2c1d048db3b58c7d17740b44f6", "filename": "gcc/gcov-io.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f820b0cf2cb6595ed42b16fd1615eb3aec0a6ada/gcc%2Fgcov-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f820b0cf2cb6595ed42b16fd1615eb3aec0a6ada/gcc%2Fgcov-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-io.c?ref=f820b0cf2cb6595ed42b16fd1615eb3aec0a6ada", "patch": "@@ -361,7 +361,7 @@ gcov_read_words (unsigned words)\n \t  memcpy (gcov_var.buffer, gcov_var.buffer + gcov_var.offset, 4);\n \t}\n #else\n-      memmove (gcov_var.buffer, gcov_var.buffer + gcov_var.offset, excess);\n+      memmove (gcov_var.buffer, gcov_var.buffer + gcov_var.offset, excess * 4);\n #endif\n       gcov_var.offset = 0;\n       gcov_var.length = excess;"}, {"sha": "082ed322e5a78dac66855cd74ee83acc4e91417a", "filename": "gcc/profile.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f820b0cf2cb6595ed42b16fd1615eb3aec0a6ada/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f820b0cf2cb6595ed42b16fd1615eb3aec0a6ada/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=f820b0cf2cb6595ed42b16fd1615eb3aec0a6ada", "patch": "@@ -280,6 +280,22 @@ compute_branch_probabilities (void)\n   gcov_type *exec_counts = get_exec_counts ();\n   int exec_counts_pos = 0;\n \n+  /* Very simple sanity checks so we catch bugs in our profiling code.  */\n+  if (profile_info)\n+    {\n+      if (profile_info->run_max * profile_info->runs < profile_info->sum_max)\n+\t{\n+\t  error (\"corrupted profile info: run_max * runs < sum_max\");\n+\t  exec_counts = NULL;\n+\t}\n+\n+      if (profile_info->sum_all < profile_info->sum_max)\n+\t{\n+\t  error (\"corrupted profile info: sum_all is smaller than sum_max\");\n+\t  exec_counts = NULL;\n+\t}\n+    }\n+\n   /* Attach extra info block to each bb.  */\n \n   alloc_aux_for_blocks (sizeof (struct bb_info));\n@@ -315,6 +331,11 @@ compute_branch_probabilities (void)\n \t    if (exec_counts)\n \t      {\n \t\te->count = exec_counts[exec_counts_pos++];\n+\t\tif (e->count > profile_info->sum_max)\n+\t\t  {\n+\t\t    error (\"corrupted profile info: edge from %i to %i exceeds maximal count\",\n+\t\t\t   bb->index, e->dest->index);\n+\t\t  }\n \t      }\n \t    else\n \t      e->count = 0;"}, {"sha": "e6d0189e312cba34937e624a39d1005ee7b03e2f", "filename": "gcc/varasm.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f820b0cf2cb6595ed42b16fd1615eb3aec0a6ada/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f820b0cf2cb6595ed42b16fd1615eb3aec0a6ada/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=f820b0cf2cb6595ed42b16fd1615eb3aec0a6ada", "patch": "@@ -1043,6 +1043,7 @@ notice_global_symbol (tree decl)\n {\n   if ((!first_global_object_name || !weak_global_object_name)\n       && TREE_PUBLIC (decl) && !DECL_COMMON (decl)\n+      && !DECL_EXTERNAL (decl)\n       && (TREE_CODE (decl) == FUNCTION_DECL\n \t  || (TREE_CODE (decl) == VAR_DECL\n \t      && (DECL_INITIAL (decl) != 0"}]}