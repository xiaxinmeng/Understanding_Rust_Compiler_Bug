{"sha": "08b3748ce73c94460f314cb34f21702049650e72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhiMzc0OGNlNzNjOTQ0NjBmMzE0Y2IzNGYyMTcwMjA0OTY1MGU3Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-01-31T20:45:41Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-01-31T20:45:41Z"}, "message": "re PR c++/83993 (ICE: constant not recomputed when ADDR_EXPR changed)\n\n\tPR c++/83993\n\t* constexpr.c (diag_array_subscript): Emit different diagnostics\n\tif TYPE_DOMAIN (arraytype) is NULL.\n\t(cxx_eval_array_reference, cxx_eval_store_expression): For arrays\n\twith NULL TYPE_DOMAIN use size_zero_node as nelts.\n\n\t* g++.dg/init/pr83993-1.C: New test.\n\t* g++.dg/cpp0x/pr83993.C: New test.\n\nFrom-SVN: r257264", "tree": {"sha": "4aa63514381983678f6850e2ca0d9829a59a773f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4aa63514381983678f6850e2ca0d9829a59a773f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08b3748ce73c94460f314cb34f21702049650e72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08b3748ce73c94460f314cb34f21702049650e72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08b3748ce73c94460f314cb34f21702049650e72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08b3748ce73c94460f314cb34f21702049650e72/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1af734911a08c4cb41046cb0e0ffe2206dcdf142", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1af734911a08c4cb41046cb0e0ffe2206dcdf142", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1af734911a08c4cb41046cb0e0ffe2206dcdf142"}], "stats": {"total": 101, "additions": 96, "deletions": 5}, "files": [{"sha": "c8df8f12f14cc27eb625270defe3425ca04c6676", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08b3748ce73c94460f314cb34f21702049650e72/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08b3748ce73c94460f314cb34f21702049650e72/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=08b3748ce73c94460f314cb34f21702049650e72", "patch": "@@ -1,3 +1,11 @@\n+2018-01-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/83993\n+\t* constexpr.c (diag_array_subscript): Emit different diagnostics\n+\tif TYPE_DOMAIN (arraytype) is NULL.\n+\t(cxx_eval_array_reference, cxx_eval_store_expression): For arrays\n+\twith NULL TYPE_DOMAIN use size_zero_node as nelts.\n+\n 2018-01-31  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/84092"}, {"sha": "087d8d8f4a3d157f726f276effc89bd81ae4f9ef", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08b3748ce73c94460f314cb34f21702049650e72/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08b3748ce73c94460f314cb34f21702049650e72/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=08b3748ce73c94460f314cb34f21702049650e72", "patch": "@@ -2270,13 +2270,20 @@ diag_array_subscript (const constexpr_ctx *ctx, tree array, tree index)\n       tree sidx = fold_convert (ssizetype, index);\n       if (DECL_P (array))\n \t{\n-\t  error (\"array subscript value %qE is outside the bounds \"\n-\t\t \"of array %qD of type %qT\", sidx, array, arraytype);\n+\t  if (TYPE_DOMAIN (arraytype))\n+\t    error (\"array subscript value %qE is outside the bounds \"\n+\t           \"of array %qD of type %qT\", sidx, array, arraytype);\n+\t  else\n+\t    error (\"non-zero array subscript %qE is used with array %qD of \"\n+\t\t   \"type %qT with unknown bounds\", sidx, array, arraytype);\n \t  inform (DECL_SOURCE_LOCATION (array), \"declared here\");\n \t}\n-      else\n+      else if (TYPE_DOMAIN (arraytype))\n \terror (\"array subscript value %qE is outside the bounds \"\n \t       \"of array type %qT\", sidx, arraytype);\n+      else\n+\terror (\"non-zero array subscript %qE is used with array of type %qT \"\n+\t       \"with unknown bounds\", sidx, arraytype);\n     }\n }\n \n@@ -2361,7 +2368,12 @@ cxx_eval_array_reference (const constexpr_ctx *ctx, tree t,\n \n   tree nelts;\n   if (TREE_CODE (TREE_TYPE (ary)) == ARRAY_TYPE)\n-    nelts = array_type_nelts_top (TREE_TYPE (ary));\n+    {\n+      if (TYPE_DOMAIN (TREE_TYPE (ary)))\n+\tnelts = array_type_nelts_top (TREE_TYPE (ary));\n+      else\n+\tnelts = size_zero_node;\n+    }\n   else if (VECTOR_TYPE_P (TREE_TYPE (ary)))\n     nelts = size_int (TYPE_VECTOR_SUBPARTS (TREE_TYPE (ary)));\n   else\n@@ -3445,7 +3457,12 @@ cxx_eval_store_expression (const constexpr_ctx *ctx, tree t,\n \t  tree nelts, ary;\n \t  ary = TREE_OPERAND (probe, 0);\n \t  if (TREE_CODE (TREE_TYPE (ary)) == ARRAY_TYPE)\n-\t    nelts = array_type_nelts_top (TREE_TYPE (ary));\n+\t    {\n+\t      if (TYPE_DOMAIN (TREE_TYPE (ary)))\n+\t\tnelts = array_type_nelts_top (TREE_TYPE (ary));\n+\t      else\n+\t\tnelts = size_zero_node;\n+\t    }\n \t  else if (VECTOR_TYPE_P (TREE_TYPE (ary)))\n \t    nelts = size_int (TYPE_VECTOR_SUBPARTS (TREE_TYPE (ary)));\n \t  else"}, {"sha": "5feda0b90cfa7ead1b64d912ab279836ac27aaf3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08b3748ce73c94460f314cb34f21702049650e72/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08b3748ce73c94460f314cb34f21702049650e72/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=08b3748ce73c94460f314cb34f21702049650e72", "patch": "@@ -1,3 +1,9 @@\n+2018-01-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/83993\n+\t* g++.dg/init/pr83993-1.C: New test.\n+\t* g++.dg/cpp0x/pr83993.C: New test.\n+\n 2018-01-31  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/84088"}, {"sha": "17b7a6419578de7074277ad7dc99603954b01ffb", "filename": "gcc/testsuite/g++.dg/cpp0x/pr83993.C", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08b3748ce73c94460f314cb34f21702049650e72/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr83993.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08b3748ce73c94460f314cb34f21702049650e72/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr83993.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr83993.C?ref=08b3748ce73c94460f314cb34f21702049650e72", "patch": "@@ -0,0 +1,49 @@\n+// PR c++/83993\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"\" }\n+\n+extern const int a[];\n+const int b[5] = { 1, 2, 3, 4, 5 };\n+extern const int c[4];\n+constexpr const int *d = &a[0];\n+constexpr const int *d2 = a;\n+constexpr const int *e = &a[1];\t\t// { dg-error \"non-zero array subscript '1' is used with array 'a' of type 'const int \\\\\\[\\\\\\]' with unknown bounds\" }\n+constexpr const int *f = &b[0];\n+constexpr const int *f2 = b;\n+constexpr const int *g = &b[5];\n+constexpr const int *h = &b[6];\t\t// { dg-error \"array subscript value '6' is outside the bounds of array 'b' of type 'const int \\\\\\[5\\\\\\]'\" }\n+constexpr const int *i = &c[0];\n+constexpr const int *i2 = c;\n+constexpr const int *j = &c[4];\n+constexpr const int *k = &c[5];\t\t// { dg-error \"array subscript value '5' is outside the bounds of array 'c' of type 'const int \\\\\\[4\\\\\\]'\" }\n+extern const int l[];\n+\n+void\n+foo ()\n+{\n+  extern const int l[3];\n+  constexpr const int *m = &l[0];\n+  constexpr const int *m2 = l;\n+  constexpr const int *n = &l[1];\n+  static_assert (m == m2, \"\");\n+}\n+\n+constexpr const int *m = &l[0];\n+constexpr const int *m2 = l;\n+constexpr const int *n = &l[1];\t\t// { dg-error \"non-zero array subscript '1' is used with array 'l' of type 'const int \\\\\\[\\\\\\]' with unknown bounds\" }\n+static_assert (d == d2 && f == f2 && i == i2 && m == m2, \"\");\n+const int o[] = { 1, 2 };\n+constexpr const int *p = &o[0];\n+constexpr const int *p2 = o;\n+constexpr const int *q = &o[2];\n+constexpr const int *r = &o[3];\t\t// { dg-error \"array subscript value '3' is outside the bounds of array 'o' of type 'const int \\\\\\[2\\\\\\]'\" }\n+struct S { char a; char b[]; } s;\n+constexpr const char *t = &s.b[0];\n+constexpr const char *t2 = s.b;\n+constexpr const char *u = &s.b[1];\t// { dg-error \"non-zero array subscript '1' is used with array of type 'char \\\\\\[\\\\\\]' with unknown bounds\" }\n+struct V { int a; };\n+extern V v[];\n+constexpr V *w = &v[0];\n+constexpr V *w2 = v;\n+constexpr int *x = &v[0].a;\n+constexpr int y = a[0];\t\t\t// { dg-error \"the value of 'a' is not usable in a constant expression\" }"}, {"sha": "04992356314bc8ad307e52d1b47a5084a1458985", "filename": "gcc/testsuite/g++.dg/init/pr83993-1.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08b3748ce73c94460f314cb34f21702049650e72/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fpr83993-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08b3748ce73c94460f314cb34f21702049650e72/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fpr83993-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fpr83993-1.C?ref=08b3748ce73c94460f314cb34f21702049650e72", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/83993\n+// { dg-do compile }\n+\n+extern const int a[];\n+const int *const b = &a[0];\n+\n+int\n+foo ()\n+{\n+  return b[0];\n+}"}]}