{"sha": "b77f6d2fa848eca0aa04ff63aaeb52a54522e2aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjc3ZjZkMmZhODQ4ZWNhMGFhMDRmZjYzYWFlYjUyYTU0NTIyZTJhYQ==", "commit": {"author": {"name": "Stafford Horne", "email": "shorne@gmail.com", "date": "2020-01-24T12:30:31Z"}, "committer": {"name": "Stafford Horne", "email": "shorne@gmail.com", "date": "2021-01-13T23:45:01Z"}, "message": "or1k: Support for softfloat to emulate hw exceptions\n\nThis allows the openrisc softfloat implementation to set exceptions.\nThis also sets the correct tininess after rounding value to be\nconsistent with hardware and simulator implementations.\n\nlibgcc/ChangeLog:\n\n\t* config/or1k/sfp-machine.h (FP_RND_NEAREST, FP_RND_ZERO,\n\tFP_RND_PINF, FP_RND_MINF, FP_RND_MASK, FP_EX_OVERFLOW,\n\tFP_EX_UNDERFLOW, FP_EX_INEXACT, FP_EX_INVALID, FP_EX_DIVZERO,\n\tFP_EX_ALL): New constant macros.\n\t(_FP_DECL_EX, FP_ROUNDMODE, FP_INIT_ROUNDMODE,\n\tFP_HANDLE_EXCEPTIONS): New macros.\n\t(_FP_TININESS_AFTER_ROUNDING): Change to 1.", "tree": {"sha": "dd52f739c69f15190ac03ce711adb9083db05949", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd52f739c69f15190ac03ce711adb9083db05949"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b77f6d2fa848eca0aa04ff63aaeb52a54522e2aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b77f6d2fa848eca0aa04ff63aaeb52a54522e2aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b77f6d2fa848eca0aa04ff63aaeb52a54522e2aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b77f6d2fa848eca0aa04ff63aaeb52a54522e2aa/comments", "author": {"login": "stffrdhrn", "id": 2404255, "node_id": "MDQ6VXNlcjI0MDQyNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/2404255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stffrdhrn", "html_url": "https://github.com/stffrdhrn", "followers_url": "https://api.github.com/users/stffrdhrn/followers", "following_url": "https://api.github.com/users/stffrdhrn/following{/other_user}", "gists_url": "https://api.github.com/users/stffrdhrn/gists{/gist_id}", "starred_url": "https://api.github.com/users/stffrdhrn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stffrdhrn/subscriptions", "organizations_url": "https://api.github.com/users/stffrdhrn/orgs", "repos_url": "https://api.github.com/users/stffrdhrn/repos", "events_url": "https://api.github.com/users/stffrdhrn/events{/privacy}", "received_events_url": "https://api.github.com/users/stffrdhrn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "stffrdhrn", "id": 2404255, "node_id": "MDQ6VXNlcjI0MDQyNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/2404255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stffrdhrn", "html_url": "https://github.com/stffrdhrn", "followers_url": "https://api.github.com/users/stffrdhrn/followers", "following_url": "https://api.github.com/users/stffrdhrn/following{/other_user}", "gists_url": "https://api.github.com/users/stffrdhrn/gists{/gist_id}", "starred_url": "https://api.github.com/users/stffrdhrn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stffrdhrn/subscriptions", "organizations_url": "https://api.github.com/users/stffrdhrn/orgs", "repos_url": "https://api.github.com/users/stffrdhrn/repos", "events_url": "https://api.github.com/users/stffrdhrn/events{/privacy}", "received_events_url": "https://api.github.com/users/stffrdhrn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1171c32502372cacc658ddc44a3b04ec8c8ce17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1171c32502372cacc658ddc44a3b04ec8c8ce17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1171c32502372cacc658ddc44a3b04ec8c8ce17"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "eebe5b0578edaceaedc48ecce5cdda76fe788855", "filename": "libgcc/config/or1k/sfp-machine.h", "status": "modified", "additions": 40, "deletions": 1, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77f6d2fa848eca0aa04ff63aaeb52a54522e2aa/libgcc%2Fconfig%2For1k%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77f6d2fa848eca0aa04ff63aaeb52a54522e2aa/libgcc%2Fconfig%2For1k%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2For1k%2Fsfp-machine.h?ref=b77f6d2fa848eca0aa04ff63aaeb52a54522e2aa", "patch": "@@ -41,12 +41,51 @@\n     R##_c = FP_CLS_NAN;\t\t\t\t\t\t\\\n   } while (0)\n \n+/* Handle getting and setting rounding mode for soft fp operations.  */\n+\n+#define FP_RND_NEAREST\t\t(0x0 << 1)\n+#define FP_RND_ZERO\t\t(0x1 << 1)\n+#define FP_RND_PINF\t\t(0x2 << 1)\n+#define FP_RND_MINF\t\t(0x3 << 1)\n+#define FP_RND_MASK\t\t(0x3 << 1)\n+\n+#define FP_EX_OVERFLOW\t\t1 << 3\n+#define FP_EX_UNDERFLOW\t\t1 << 4\n+#define FP_EX_INEXACT\t\t1 << 8\n+#define FP_EX_INVALID\t\t1 << 9\n+#define FP_EX_DIVZERO\t\t1 << 11\n+#define FP_EX_ALL \\\n+\t(FP_EX_INVALID | FP_EX_DIVZERO | FP_EX_OVERFLOW | FP_EX_UNDERFLOW \\\n+\t | FP_EX_INEXACT)\n+\n+#define _FP_DECL_EX \\\n+  unsigned int _fpcsr __attribute__ ((unused)) = FP_RND_NEAREST\n+\n+#define FP_ROUNDMODE (_fpcsr & FP_RND_MASK)\n+\n+#ifdef __or1k_hard_float__\n+#define FP_INIT_ROUNDMODE\t\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\\\n+  __asm__ volatile (\"l.mfspr %0,r0,20\" : \"=r\" (_fpcsr));\t\\\n+} while (0)\n+\n+#define FP_HANDLE_EXCEPTIONS\t\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\\\n+  if (__builtin_expect (_fex, 0))\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      _fpcsr &= ~FP_EX_ALL;\t\t\t\t\t\\\n+      _fpcsr |= _fex;\t\t\t\t\t\t\\\n+      __asm__ volatile (\"l.mtspr r0,%0,20\" : : \"r\" (_fpcsr));\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+} while (0)\n+#endif\n+\n #define\t__LITTLE_ENDIAN\t1234\n #define\t__BIG_ENDIAN\t4321\n \n #define __BYTE_ORDER __BIG_ENDIAN\n \n-#define _FP_TININESS_AFTER_ROUNDING 0\n+#define _FP_TININESS_AFTER_ROUNDING 1\n \n /* Define ALIASNAME as a strong alias for NAME.  */\n # define strong_alias(name, aliasname) _strong_alias(name, aliasname)"}]}