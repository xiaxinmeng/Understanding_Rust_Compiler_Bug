{"sha": "513e0aa0c4e60757e7e99e479a940812f6107dd9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTEzZTBhYTBjNGU2MDc1N2U3ZTk5ZTQ3OWE5NDA4MTJmNjEwN2RkOQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2019-11-16T17:14:14Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2019-11-16T17:14:14Z"}, "message": "[PATCH] Fix slowness in demangler\n\n\t* cp-demangle.c (d_print_init): Remove const from 4th param.\n\t(cplus_demangle_fill_name): Initialize d->d_counting.\n\t(cplus_demangle_fill_extended_operator): Likewise.\n\t(cplus_demangle_fill_ctor): Likewise.\n\t(cplus_demangle_fill_dtor): Likewise.\n\t(d_make_empty): Likewise.\n\t(d_count_templates_scopes): Remobe const from 3rd param,\n\tReturn on dc->d_counting > 1,\n\tIncrement dc->d_counting.\n        * cp-demint.c (cplus_demangle_fill_component): Initialize d->d_counting.\n\t(cplus_demangle_fill_builtin_type): Likewise.\n\t(cplus_demangle_fill_operator): Likewise.\n\n\t* demangle.h (struct demangle_component): Add member\n\td_counting.\n\nFrom-SVN: r278359", "tree": {"sha": "dd08e84cc15708a9a190f9963d51d296f6481a0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd08e84cc15708a9a190f9963d51d296f6481a0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/513e0aa0c4e60757e7e99e479a940812f6107dd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/513e0aa0c4e60757e7e99e479a940812f6107dd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/513e0aa0c4e60757e7e99e479a940812f6107dd9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/513e0aa0c4e60757e7e99e479a940812f6107dd9/comments", "author": null, "committer": null, "parents": [{"sha": "32fc3719e06899d43e2298ad6d0028efe5ec3024", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32fc3719e06899d43e2298ad6d0028efe5ec3024", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32fc3719e06899d43e2298ad6d0028efe5ec3024"}], "stats": {"total": 43, "additions": 37, "deletions": 6}, "files": [{"sha": "6364ab4de6109180036e16045c1fb3c2f019b1cb", "filename": "include/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/513e0aa0c4e60757e7e99e479a940812f6107dd9/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/513e0aa0c4e60757e7e99e479a940812f6107dd9/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=513e0aa0c4e60757e7e99e479a940812f6107dd9", "patch": "@@ -1,4 +1,9 @@\n-2019-10-22  Eduard-Mihai Burtescu  <eddyb@lyken.rs>\n+2019-11-16  Tim Ruehsen  <tim.ruehsen@gmx.de>\n+\n+\t* demangle.h (struct demangle_component): Add member\n+\td_counting.\n+\n+2019-11-16  Eduard-Mihai Burtescu  <eddyb@lyken.rs>\n \n \t* demangle.h (rust_demangle_callback): Add.\n "}, {"sha": "66f3a9fd7d8d963c9765f9ea122240bd70f38e64", "filename": "include/demangle.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/513e0aa0c4e60757e7e99e479a940812f6107dd9/include%2Fdemangle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/513e0aa0c4e60757e7e99e479a940812f6107dd9/include%2Fdemangle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fdemangle.h?ref=513e0aa0c4e60757e7e99e479a940812f6107dd9", "patch": "@@ -468,6 +468,7 @@ struct demangle_component\n      Initialize to zero.  Private to d_print_comp.\n      All other fields are final after initialization.  */\n   int d_printing;\n+  int d_counting;\n \n   union\n   {"}, {"sha": "a766bd8af69bea294a68b1d38f83dc0a339893d1", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/513e0aa0c4e60757e7e99e479a940812f6107dd9/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/513e0aa0c4e60757e7e99e479a940812f6107dd9/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=513e0aa0c4e60757e7e99e479a940812f6107dd9", "patch": "@@ -1,4 +1,19 @@\n-2019-10-22  Eduard-Mihai Burtescu  <eddyb@lyken.rs>\n+2019-11-16  Tim Ruehsen  <tim.ruehsen@gmx.de>\n+\n+\t* cp-demangle.c (d_print_init): Remove const from 4th param.\n+\t(cplus_demangle_fill_name): Initialize d->d_counting.\n+\t(cplus_demangle_fill_extended_operator): Likewise.\n+\t(cplus_demangle_fill_ctor): Likewise.\n+\t(cplus_demangle_fill_dtor): Likewise.\n+\t(d_make_empty): Likewise.\n+\t(d_count_templates_scopes): Remobe const from 3rd param,\n+\tReturn on dc->d_counting > 1,\n+\tIncrement dc->d_counting.\n+        * cp-demint.c (cplus_demangle_fill_component): Initialize d->d_counting.\n+\t(cplus_demangle_fill_builtin_type): Likewise.\n+\t(cplus_demangle_fill_operator): Likewise.\n+\n+2019-11-16  Eduard-Mihai Burtescu  <eddyb@lyken.rs>\n \n \t* cplus-dem.c (cplus_demangle): Use rust_demangle directly.\n \t(rust_demangle): Remove."}, {"sha": "d7fee643d0bde51f32ec9bed7a713d70d7c99211", "filename": "libiberty/cp-demangle.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/513e0aa0c4e60757e7e99e479a940812f6107dd9/libiberty%2Fcp-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/513e0aa0c4e60757e7e99e479a940812f6107dd9/libiberty%2Fcp-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.c?ref=513e0aa0c4e60757e7e99e479a940812f6107dd9", "patch": "@@ -517,7 +517,7 @@ d_growable_string_callback_adapter (const char *, size_t, void *);\n \n static void\n d_print_init (struct d_print_info *, demangle_callbackref, void *,\n-\t      const struct demangle_component *);\n+\t      struct demangle_component *);\n \n static inline void d_print_error (struct d_print_info *);\n \n@@ -864,6 +864,7 @@ cplus_demangle_fill_name (struct demangle_component *p, const char *s, int len)\n   if (p == NULL || s == NULL || len <= 0)\n     return 0;\n   p->d_printing = 0;\n+  p->d_counting = 0;\n   p->type = DEMANGLE_COMPONENT_NAME;\n   p->u.s_name.s = s;\n   p->u.s_name.len = len;\n@@ -880,6 +881,7 @@ cplus_demangle_fill_extended_operator (struct demangle_component *p, int args,\n   if (p == NULL || args < 0 || name == NULL)\n     return 0;\n   p->d_printing = 0;\n+  p->d_counting = 0;\n   p->type = DEMANGLE_COMPONENT_EXTENDED_OPERATOR;\n   p->u.s_extended_operator.args = args;\n   p->u.s_extended_operator.name = name;\n@@ -900,6 +902,7 @@ cplus_demangle_fill_ctor (struct demangle_component *p,\n       || (int) kind > gnu_v3_object_ctor_group)\n     return 0;\n   p->d_printing = 0;\n+  p->d_counting = 0;\n   p->type = DEMANGLE_COMPONENT_CTOR;\n   p->u.s_ctor.kind = kind;\n   p->u.s_ctor.name = name;\n@@ -920,6 +923,7 @@ cplus_demangle_fill_dtor (struct demangle_component *p,\n       || (int) kind > gnu_v3_object_dtor_group)\n     return 0;\n   p->d_printing = 0;\n+  p->d_counting = 0;\n   p->type = DEMANGLE_COMPONENT_DTOR;\n   p->u.s_dtor.kind = kind;\n   p->u.s_dtor.name = name;\n@@ -937,6 +941,7 @@ d_make_empty (struct d_info *di)\n     return NULL;\n   p = &di->comps[di->next_comp];\n   p->d_printing = 0;\n+  p->d_counting = 0;\n   ++di->next_comp;\n   return p;\n }\n@@ -4079,11 +4084,13 @@ d_growable_string_callback_adapter (const char *s, size_t l, void *opaque)\n \n static void\n d_count_templates_scopes (struct d_print_info *dpi,\n-\t\t\t  const struct demangle_component *dc)\n+\t\t\t  struct demangle_component *dc)\n {\n-  if (dc == NULL)\n+  if (dc == NULL || dc->d_counting > 1 || dpi->recursion > MAX_RECURSION_COUNT)\n     return;\n \n+  ++ dc->d_counting;\n+\n   switch (dc->type)\n     {\n     case DEMANGLE_COMPONENT_NAME:\n@@ -4213,7 +4220,7 @@ d_count_templates_scopes (struct d_print_info *dpi,\n \n static void\n d_print_init (struct d_print_info *dpi, demangle_callbackref callback,\n-\t      void *opaque, const struct demangle_component *dc)\n+\t      void *opaque, struct demangle_component *dc)\n {\n   dpi->len = 0;\n   dpi->last_char = '\\0';"}, {"sha": "16bf1f8ce6d5222c094f912191ce0f75ddb8138b", "filename": "libiberty/cp-demint.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/513e0aa0c4e60757e7e99e479a940812f6107dd9/libiberty%2Fcp-demint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/513e0aa0c4e60757e7e99e479a940812f6107dd9/libiberty%2Fcp-demint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demint.c?ref=513e0aa0c4e60757e7e99e479a940812f6107dd9", "patch": "@@ -125,6 +125,7 @@ cplus_demangle_fill_component (struct demangle_component *p,\n   p->u.s_binary.left = left;\n   p->u.s_binary.right = right;\n   p->d_printing = 0;\n+  p->d_counting = 0;\n \n   return 1;\n }\n@@ -149,6 +150,7 @@ cplus_demangle_fill_builtin_type (struct demangle_component *p,\n \t  p->type = DEMANGLE_COMPONENT_BUILTIN_TYPE;\n \t  p->u.s_builtin.type = &cplus_demangle_builtin_types[i];\n \t  p->d_printing = 0;\n+\t  p->d_counting = 0;\n \t  return 1;\n \t}\n     }\n@@ -176,6 +178,7 @@ cplus_demangle_fill_operator (struct demangle_component *p,\n \t  p->type = DEMANGLE_COMPONENT_OPERATOR;\n \t  p->u.s_operator.op = &cplus_demangle_operators[i];\n \t  p->d_printing = 0;\n+\t  p->d_counting = 0;\n \t  return 1;\n \t}\n     }"}]}