{"sha": "69bd5d473d22157d0737fc20e98eb3347cbd6ab5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjliZDVkNDczZDIyMTU3ZDA3MzdmYzIwZTk4ZWIzMzQ3Y2JkNmFiNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-15T09:16:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-15T09:16:08Z"}, "message": "i386: Fix up -march=x86-64-v[234] vs. target attribute [PR98274]\n\nThe following testcase fails to compile.  The problem is that\nwhen ix86_option_override_internal is called the first time for command\nline, it sees -mtune= wasn't present on the command line and so as fallback\nsets ix86_tune_string to ix86_arch_string value (\"x86-64-v2\"), but\nix86_tune_specified is false, so we don't find the tuning in the table\nbut don't error on it.\nWhen processing the target attribute, ix86_tune_string is what\nit was earlier left with, but this time ix86_tune_specified is true and\nso we error on it.\n\nThe following patch does what is done already e.g. for \"x86-64\" march,\nin particular default the tuning to \"generic\".\n\n2020-12-15  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/98274\n\t* config/i386/i386-options.c (ix86_option_override_internal): Set\n\tix86_tune_string to \"generic\" even when it wasn't specified and\n\tix86_arch_string is \"x86-64-v2\", \"x86-64-v3\" or \"x86-64-v4\".\n\tRemove useless {}s around a single statement.\n\n\t* gcc.target/i386/pr98274.c: New test.", "tree": {"sha": "f08acbee46c18ee8097de50ef6185fb95033a1db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f08acbee46c18ee8097de50ef6185fb95033a1db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69bd5d473d22157d0737fc20e98eb3347cbd6ab5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69bd5d473d22157d0737fc20e98eb3347cbd6ab5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69bd5d473d22157d0737fc20e98eb3347cbd6ab5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69bd5d473d22157d0737fc20e98eb3347cbd6ab5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cab1b0ebc00ea53040afcbe4b91e653a87915092", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cab1b0ebc00ea53040afcbe4b91e653a87915092", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cab1b0ebc00ea53040afcbe4b91e653a87915092"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "2999b611273c42f306ff880d5880b6a34c2ad876", "filename": "gcc/config/i386/i386-options.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69bd5d473d22157d0737fc20e98eb3347cbd6ab5/gcc%2Fconfig%2Fi386%2Fi386-options.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69bd5d473d22157d0737fc20e98eb3347cbd6ab5/gcc%2Fconfig%2Fi386%2Fi386-options.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-options.c?ref=69bd5d473d22157d0737fc20e98eb3347cbd6ab5", "patch": "@@ -1884,9 +1884,7 @@ ix86_option_override_internal (bool main_args_p,\n \t     as -mtune=generic.  With native compilers we won't see the\n \t     -mtune=native, as it was changed by the driver.  */\n       if (!strcmp (opts->x_ix86_tune_string, \"native\"))\n-\t{\n-\t  opts->x_ix86_tune_string = \"generic\";\n-\t}\n+\topts->x_ix86_tune_string = \"generic\";\n       else if (!strcmp (opts->x_ix86_tune_string, \"x86-64\"))\n         warning (OPT_Wdeprecated,\n \t\t main_args_p\n@@ -1908,10 +1906,12 @@ ix86_option_override_internal (bool main_args_p,\n \n       /* opts->x_ix86_tune_string is set to opts->x_ix86_arch_string\n \t or defaulted.  We need to use a sensible tune option.  */\n-      if (!strcmp (opts->x_ix86_tune_string, \"x86-64\"))\n-\t{\n-\t  opts->x_ix86_tune_string = \"generic\";\n-\t}\n+      if (!strncmp (opts->x_ix86_tune_string, \"x86-64\", 6)\n+\t  && (opts->x_ix86_tune_string[6] == '\\0'\n+\t      || (!strcmp (opts->x_ix86_tune_string + 6, \"-v2\")\n+\t\t  || !strcmp (opts->x_ix86_tune_string + 6, \"-v3\")\n+\t\t  || !strcmp (opts->x_ix86_tune_string + 6, \"-v4\"))))\n+\topts->x_ix86_tune_string = \"generic\";\n     }\n \n   if (opts->x_ix86_stringop_alg == rep_prefix_8_byte"}, {"sha": "dd08f33cf535cd1875b854ab2d0e605f5ccd5823", "filename": "gcc/testsuite/gcc.target/i386/pr98274.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69bd5d473d22157d0737fc20e98eb3347cbd6ab5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98274.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69bd5d473d22157d0737fc20e98eb3347cbd6ab5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98274.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98274.c?ref=69bd5d473d22157d0737fc20e98eb3347cbd6ab5", "patch": "@@ -0,0 +1,8 @@\n+/* PR target/98274 */\n+/* { dg-do compile { target lp64 } } */\n+/* { dg-options \"-mabi=sysv -O2 -march=x86-64-v2\" } */\n+\n+void __attribute__((target (\"avx\")))\n+foo (void)\n+{\n+}"}]}