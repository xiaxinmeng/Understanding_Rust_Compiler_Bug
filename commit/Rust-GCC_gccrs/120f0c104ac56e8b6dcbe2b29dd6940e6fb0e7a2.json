{"sha": "120f0c104ac56e8b6dcbe2b29dd6940e6fb0e7a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTIwZjBjMTA0YWM1NmU4YjZkY2JlMmIyOWRkNjk0MGU2ZmIwZTdhMg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-06-25T17:28:35Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-06-25T17:28:35Z"}, "message": "parse.y (check_abstract_method_definitions): Also check if `other_method' is abstract.\n\n\t* parse.y (check_abstract_method_definitions): Also check if\n\t`other_method' is abstract.\n\nFrom-SVN: r34697", "tree": {"sha": "9ba33b828f8748830217c3c762dbb2803b515de2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ba33b828f8748830217c3c762dbb2803b515de2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/120f0c104ac56e8b6dcbe2b29dd6940e6fb0e7a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/120f0c104ac56e8b6dcbe2b29dd6940e6fb0e7a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/120f0c104ac56e8b6dcbe2b29dd6940e6fb0e7a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/120f0c104ac56e8b6dcbe2b29dd6940e6fb0e7a2/comments", "author": null, "committer": null, "parents": [{"sha": "4061f623a6ab220259c77be5f97617a05aa67d51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4061f623a6ab220259c77be5f97617a05aa67d51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4061f623a6ab220259c77be5f97617a05aa67d51"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "10d0a73ea4034b2b72b83a4b109c5e0a4398149c", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/120f0c104ac56e8b6dcbe2b29dd6940e6fb0e7a2/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/120f0c104ac56e8b6dcbe2b29dd6940e6fb0e7a2/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=120f0c104ac56e8b6dcbe2b29dd6940e6fb0e7a2", "patch": "@@ -1,3 +1,8 @@\n+2000-06-24  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* parse.y (check_abstract_method_definitions): Also check if\n+\t`other_method' is abstract.\n+\n 2000-06-23  Tom Tromey  <tromey@cygnus.com>\n \n \t* parse.y (patch_incomplete_class_ref): Initialize the returned"}, {"sha": "c28407e79c53c08866967d3f9131109d3e3536ba", "filename": "gcc/java/parse.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/120f0c104ac56e8b6dcbe2b29dd6940e6fb0e7a2/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/120f0c104ac56e8b6dcbe2b29dd6940e6fb0e7a2/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=120f0c104ac56e8b6dcbe2b29dd6940e6fb0e7a2", "patch": "@@ -8540,7 +8540,9 @@ check_abstract_method_definitions (do_interface, class_decl, type)\n \t      other_name = EXPR_WFL_NODE (other_name);\n \t    if (!DECL_CLINIT_P (other_method)\n \t\t&& !DECL_CONSTRUCTOR_P (other_method)\n-\t\t&& method_name == other_name && method_sig == s)\n+\t\t&& method_name == other_name\n+\t\t&& method_sig == s\n+\t\t&& !METHOD_ABSTRACT (other_method))\n              {\n                found = 1;\n                break;"}, {"sha": "a24c3a016ea999f516d227398a4aa0b5d935b0a0", "filename": "gcc/java/parse.y", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/120f0c104ac56e8b6dcbe2b29dd6940e6fb0e7a2/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/120f0c104ac56e8b6dcbe2b29dd6940e6fb0e7a2/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=120f0c104ac56e8b6dcbe2b29dd6940e6fb0e7a2", "patch": "@@ -5842,7 +5842,9 @@ check_abstract_method_definitions (do_interface, class_decl, type)\n \t      other_name = EXPR_WFL_NODE (other_name);\n \t    if (!DECL_CLINIT_P (other_method)\n \t\t&& !DECL_CONSTRUCTOR_P (other_method)\n-\t\t&& method_name == other_name && method_sig == s)\n+\t\t&& method_name == other_name\n+\t\t&& method_sig == s\n+\t\t&& !METHOD_ABSTRACT (other_method))\n              {\n                found = 1;\n                break;"}]}