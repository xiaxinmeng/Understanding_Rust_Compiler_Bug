{"sha": "26a29f015c8fcd83cd199443745c9dfd462913bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZhMjlmMDE1YzhmY2Q4M2NkMTk5NDQzNzQ1YzlkZmQ0NjI5MTNiZA==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2008-08-20T15:29:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-20T15:29:44Z"}, "message": "exp_ch3.adb (Build_Array_Init_Proc): Clarify comment related to creating dummy init proc.\n\n2008-08-20  Gary Dismukes  <dismukes@adacore.com>\n\n\t* exp_ch3.adb (Build_Array_Init_Proc): Clarify comment related to\n\tcreating dummy init proc.\n\t(Requires_Init_Proc): Return False in the case No_Default_Initialization\n\tis in force and the type does not have associated default\n\tinitialization. Move test of Is_Public (with tests of restrictions\n\tNo_Initialize_Scalars and No_Default_Initialization) to end, past tests\n\tfor default initialization.\n\nFrom-SVN: r139313", "tree": {"sha": "3924926def0cc2f25563117e10aa5fb45b325553", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3924926def0cc2f25563117e10aa5fb45b325553"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26a29f015c8fcd83cd199443745c9dfd462913bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26a29f015c8fcd83cd199443745c9dfd462913bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26a29f015c8fcd83cd199443745c9dfd462913bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26a29f015c8fcd83cd199443745c9dfd462913bd/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aa2fca8f34ba2372731c060464c00d1292ddd113", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa2fca8f34ba2372731c060464c00d1292ddd113", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa2fca8f34ba2372731c060464c00d1292ddd113"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "57cb43ee34ce5e8dee8b169ba6f5f51e633f2e4e", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26a29f015c8fcd83cd199443745c9dfd462913bd/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26a29f015c8fcd83cd199443745c9dfd462913bd/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=26a29f015c8fcd83cd199443745c9dfd462913bd", "patch": "@@ -692,9 +692,9 @@ package body Exp_Ch3 is\n          --  would be needed if this restriction was not active (so that we can\n          --  detect attempts to call it), so set a dummy init_proc in place.\n          --  This is only done though when actual default initialization is\n-         --  needed, so we exclude the setting in the Is_Public case, such\n-         --  as for arrays of scalars, since otherwise such objects would be\n-         --  wrongly flagged as violating the restriction.\n+         --  needed (and not done when only Is_Public is True), since otherwise\n+         --  objects such as arrays of scalars could be wrongly flagged as\n+         --  violating the restriction.\n \n          if Restriction_Active (No_Default_Initialization) then\n             if Has_Default_Init then\n@@ -3013,11 +3013,6 @@ package body Exp_Ch3 is\n          elsif Is_Interface (Rec_Id) then\n             return False;\n \n-         elsif not Restriction_Active (No_Initialize_Scalars)\n-           and then Is_Public (Rec_Id)\n-         then\n-            return True;\n-\n          elsif (Has_Discriminants (Rec_Id)\n                   and then not Is_Unchecked_Union (Rec_Id))\n            or else Is_Tagged_Type (Rec_Id)\n@@ -3042,6 +3037,22 @@ package body Exp_Ch3 is\n             Next_Component (Id);\n          end loop;\n \n+         --  As explained above, a record initialization procedure is needed\n+         --  for public types in case Initialize_Scalars applies to a client.\n+         --  However, such a procedure is not needed in the case where either\n+         --  of restrictions No_Initialize_Scalars or No_Default_Initialization\n+         --  apply. No_Initialize_Scalars excludes the possibility of using\n+         --  Initialize_Scalars in any partition, and No_Default_Initialization\n+         --  implies that no initialization should ever be done for objects of\n+         --  the type, so is incompatible with Initialize_Scalars.\n+\n+         if not Restriction_Active (No_Initialize_Scalars)\n+           and then not Restriction_Active (No_Default_Initialization)\n+           and then Is_Public (Rec_Id)\n+         then\n+            return True;\n+         end if;\n+\n          return False;\n       end Requires_Init_Proc;\n "}]}