{"sha": "19b2fd27ea262649afb3869fa0b1e98153121829", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTliMmZkMjdlYTI2MjY0OWFmYjM4NjlmYTBiMWU5ODE1MzEyMTgyOQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-08-01T20:11:48Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-08-01T20:11:48Z"}, "message": "(do_tablejump): Use PIC_CASE_VECTOR_ADDRESS if defined.\n\nFrom-SVN: r5050", "tree": {"sha": "1a2969b301109c1ab2c9f6ba3c640b73726dc15a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a2969b301109c1ab2c9f6ba3c640b73726dc15a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19b2fd27ea262649afb3869fa0b1e98153121829", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19b2fd27ea262649afb3869fa0b1e98153121829", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19b2fd27ea262649afb3869fa0b1e98153121829", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19b2fd27ea262649afb3869fa0b1e98153121829/comments", "author": null, "committer": null, "parents": [{"sha": "89ef1046347b12a5e4a989650dbcb8cbcbd6ef1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89ef1046347b12a5e4a989650dbcb8cbcbd6ef1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89ef1046347b12a5e4a989650dbcb8cbcbd6ef1f"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "c0320249d0d188692a575db987f36c968cb7ddde", "filename": "gcc/expr.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19b2fd27ea262649afb3869fa0b1e98153121829/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19b2fd27ea262649afb3869fa0b1e98153121829/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=19b2fd27ea262649afb3869fa0b1e98153121829", "patch": "@@ -8145,12 +8145,16 @@ do_tablejump (index, mode, range, table_label, default_label)\n      GET_MODE_SIZE, because this indicates how large insns are.  The other\n      uses should all be Pmode, because they are addresses.  This code\n      could fail if addresses and insns are not the same size.  */\n-  index = memory_address_noforce\n-    (CASE_VECTOR_MODE,\n-     gen_rtx (PLUS, Pmode,\n-\t      gen_rtx (MULT, Pmode, index,\n-\t\t       GEN_INT (GET_MODE_SIZE (CASE_VECTOR_MODE))),\n-\t      gen_rtx (LABEL_REF, Pmode, table_label)));\n+  index = gen_rtx (PLUS, Pmode,\n+\t\t   gen_rtx (MULT, Pmode, index,\n+\t\t\t    GEN_INT (GET_MODE_SIZE (CASE_VECTOR_MODE))),\n+\t\t   gen_rtx (LABEL_REF, Pmode, table_label));\n+#ifdef PIC_CASE_VECTOR_ADDRESS\n+  if (flag_pic)\n+    index = PIC_CASE_VECTOR_ADDRESS (index);\n+  else\n+#endif\n+    index = memory_address_noforce (CASE_VECTOR_MODE, index);\n   temp = gen_reg_rtx (CASE_VECTOR_MODE);\n   vector = gen_rtx (MEM, CASE_VECTOR_MODE, index);\n   RTX_UNCHANGING_P (vector) = 1;"}]}