{"sha": "23a555b077d77c46a1690eb90c029d40a33ea5c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNhNTU1YjA3N2Q3N2M0NmExNjkwZWI5MGMwMjlkNDBhMzNlYTVjNQ==", "commit": {"author": {"name": "Thomas Fitzsimmons", "email": "fitzsim@redhat.com", "date": "2003-10-09T00:26:29Z"}, "committer": {"name": "Thomas Fitzsimmons", "email": "fitzsim@gcc.gnu.org", "date": "2003-10-09T00:26:29Z"}, "message": "GtkButtonPeer.java (handleEvent): Remove modality check.\n\n2003-10-08  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* gnu/java/awt/peer/gtk/GtkButtonPeer.java (handleEvent): Remove\n\tmodality check.\n\t* gnu/java/awt/peer/gtk/GtkDialogPeer.java (initializeInsets):\n\tInitialize insets to use latest insets.\n\t* gnu/java/awt/peer/gtk/GtkFramePeer.java: Likewise.\n\t* gnu/java/awt/peer/gtk/GtkWindowPeer.java (latestInsets): New\n\tfield.\n\t(postConfigureEvent): Update latestInsets field when insets\n\tchange.  Remove call to setSize.  Move validate call outside of\n\tif blocks.\n\t(setVisible): Call setBounds before showing window.\n\t(nativeSetVisible): New native method.\n\t* java/awt/Window.java (show): Show visible owned windows.\n\t(hide): Hide visible owned windows.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c\n\t(awt_event_handler): Implement modality using GTK grabs.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c\n\t(global_gtk_window_group): New global variable.\n\t(gtkInit): Initialize global_gtk_window_group.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c (create):\n\tClamp width and height values to at least 1.  Add this window to\n\tthe global GTK window group.\n\t(setVisible): Rename to nativeSetVisible.\n\t(setup_window): Remove function.\n\t(setSize): Clamp width and height values to at least 1.\n\t(nativeSetBounds): Likewise.\n\t(gdk_window_get_root_geometry): Remove function.\n\t* jni/gtk-peer/gtkpeer.h: Remove gdk_window_get_root_geometry\n\tand setup_window declarations.  Declare global_gtk_window_group.\n\nFrom-SVN: r72252", "tree": {"sha": "e8c4b26ac43e59bc2b91154944ca054acfa5b1ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8c4b26ac43e59bc2b91154944ca054acfa5b1ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23a555b077d77c46a1690eb90c029d40a33ea5c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23a555b077d77c46a1690eb90c029d40a33ea5c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23a555b077d77c46a1690eb90c029d40a33ea5c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23a555b077d77c46a1690eb90c029d40a33ea5c5/comments", "author": null, "committer": null, "parents": [{"sha": "ba401f2f1fe18f83efe35676cf1c530f195cbdeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba401f2f1fe18f83efe35676cf1c530f195cbdeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba401f2f1fe18f83efe35676cf1c530f195cbdeb"}], "stats": {"total": 304, "additions": 183, "deletions": 121}, "files": [{"sha": "54d8dbc050aa4f0075320d3cf01ccc87193e4dc0", "filename": "libjava/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23a555b077d77c46a1690eb90c029d40a33ea5c5/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23a555b077d77c46a1690eb90c029d40a33ea5c5/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=23a555b077d77c46a1690eb90c029d40a33ea5c5", "patch": "@@ -1,5 +1,35 @@\n 2003-10-08  Thomas Fitzsimmons  <fitzsim@redhat.com>\n \n+\t* gnu/java/awt/peer/gtk/GtkButtonPeer.java (handleEvent): Remove\n+\tmodality check.\n+\t* gnu/java/awt/peer/gtk/GtkDialogPeer.java (initializeInsets):\n+\tInitialize insets to use latest insets.\n+\t* gnu/java/awt/peer/gtk/GtkFramePeer.java: Likewise.\n+\t* gnu/java/awt/peer/gtk/GtkWindowPeer.java (latestInsets): New\n+\tfield.\n+\t(postConfigureEvent): Update latestInsets field when insets\n+\tchange.  Remove call to setSize.  Move validate call outside of\n+\tif blocks.\n+\t(setVisible): Call setBounds before showing window.\n+\t(nativeSetVisible): New native method.\n+\t* java/awt/Window.java (show): Show visible owned windows.\n+\t(hide): Hide visible owned windows.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c\n+\t(awt_event_handler): Implement modality using GTK grabs.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c\n+\t(global_gtk_window_group): New global variable.\n+\t(gtkInit): Initialize global_gtk_window_group.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c (create):\n+\tClamp width and height values to at least 1.  Add this window to\n+\tthe global GTK window group.\n+\t(setVisible): Rename to nativeSetVisible.\n+\t(setup_window): Remove function.\n+\t(setSize): Clamp width and height values to at least 1.\n+\t(nativeSetBounds): Likewise.\n+\t(gdk_window_get_root_geometry): Remove function.\n+\t* jni/gtk-peer/gtkpeer.h: Remove gdk_window_get_root_geometry\n+\tand setup_window declarations.  Declare global_gtk_window_group.\n+\n \t* gnu/java/awt/peer/gtk/GtkButtonPeer.java,\n \tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c\n \t(gtkSetFont): Handle BOLD and ITALIC style specifiers."}, {"sha": "0801f9c6ec0ec4b1eed9919bc16bb78f617901d9", "filename": "libjava/gnu/java/awt/peer/gtk/GtkButtonPeer.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23a555b077d77c46a1690eb90c029d40a33ea5c5/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkButtonPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23a555b077d77c46a1690eb90c029d40a33ea5c5/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkButtonPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkButtonPeer.java?ref=23a555b077d77c46a1690eb90c029d40a33ea5c5", "patch": "@@ -66,8 +66,7 @@ public void setLabel (String label)\n \n   public void handleEvent (AWTEvent e)\n   {\n-    if (e.getID () == MouseEvent.MOUSE_CLICKED && isEnabled () \n-\t&& !modalHasGrab ())\n+    if (e.getID () == MouseEvent.MOUSE_CLICKED && isEnabled ())\n       {\n \tMouseEvent me = (MouseEvent) e;\n \tif (!me.isConsumed ()"}, {"sha": "551d05ded8fd2d01e2440e8915d608306733aead", "filename": "libjava/gnu/java/awt/peer/gtk/GtkDialogPeer.java", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23a555b077d77c46a1690eb90c029d40a33ea5c5/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkDialogPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23a555b077d77c46a1690eb90c029d40a33ea5c5/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkDialogPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkDialogPeer.java?ref=23a555b077d77c46a1690eb90c029d40a33ea5c5", "patch": "@@ -54,11 +54,13 @@ public GtkDialogPeer (Dialog dialog)\n \n   void initializeInsets ()\n   {\n-    // Unfortunately, X does not provide a clean way to calculate the\n-    // dimensions of a dialog's borders before it has been displayed.\n-    // So we guess and then fix the dimensions upon receipt of the\n-    // first configure event.\n-    insets = new Insets (20, 6, 6, 6);\n+    synchronized (latestInsets)\n+      {\n+\tinsets = new Insets (latestInsets.top,\n+\t\t\t     latestInsets.left,\n+\t\t\t     latestInsets.bottom,\n+\t\t\t     latestInsets.right);\n+      }\n   }\n \n   void create ()"}, {"sha": "ce5aa71e573bcd3fcee9b604875ebb1d7cb932b7", "filename": "libjava/gnu/java/awt/peer/gtk/GtkFramePeer.java", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23a555b077d77c46a1690eb90c029d40a33ea5c5/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23a555b077d77c46a1690eb90c029d40a33ea5c5/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java?ref=23a555b077d77c46a1690eb90c029d40a33ea5c5", "patch": "@@ -76,7 +76,13 @@ void initializeInsets ()\n     // dimensions of a frame's borders before it has been displayed.\n     // So we guess and then fix the dimensions upon receipt of the\n     // first configure event.\n-    insets = new Insets (20, 6, 6, 6);\n+    synchronized (latestInsets)\n+      {\n+\tinsets = new Insets (latestInsets.top,\n+\t\t\t     latestInsets.left,\n+\t\t\t     latestInsets.bottom,\n+\t\t\t     latestInsets.right);\n+      }\n   }\n \n   void create ()"}, {"sha": "8875913d4fce598c32f41ecf0899d3f6e3d253c4", "filename": "libjava/gnu/java/awt/peer/gtk/GtkWindowPeer.java", "status": "modified", "additions": 32, "deletions": 10, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23a555b077d77c46a1690eb90c029d40a33ea5c5/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23a555b077d77c46a1690eb90c029d40a33ea5c5/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java?ref=23a555b077d77c46a1690eb90c029d40a33ea5c5", "patch": "@@ -56,6 +56,15 @@ public class GtkWindowPeer extends GtkContainerPeer\n   static protected final int GDK_WINDOW_TYPE_HINT_DOCK = 6;\n   static protected final int GDK_WINDOW_TYPE_HINT_DESKTOP = 7;\n \n+  // Unfortunately, X does not provide a clean way to calculate the\n+  // dimensions of a window's borders before it has been displayed.\n+  // So when creating the application's first window we guess the\n+  // border dimensions.  Then if need be for that window, we fix the\n+  // dimensions upon receipt of the first configure event.  Windows\n+  // created after the first one will use the latest inset values\n+  // received in postConfigureEvent.\n+  static Insets latestInsets = new Insets (20, 6, 6, 6);\n+\n   native void create (int type, boolean decorated,\n \t\t      int width, int height,\n \t\t      GtkWindowPeer parent);\n@@ -109,18 +118,19 @@ public void setTitle (String title)\n     set (\"title\", title);\n   }\n \n+  native void setSize (int width, int height);\n+\n   public void setResizable (boolean resizable)\n   {\n     // Call setSize; otherwise when resizable is changed from true to\n     // false the window will shrink to the dimensions it had before it\n     // was resizable.\n     setSize (awtComponent.getWidth() - insets.left - insets.right,\n-\t     awtComponent.getHeight() - insets.top - insets.bottom);\n+    \t     awtComponent.getHeight() - insets.top - insets.bottom);\n     set (\"allow_shrink\", resizable);\n     set (\"allow_grow\", resizable);\n   }\n \n-  native void setSize (int width, int height);\n   native void setBoundsCallback (Window window,\n \t\t\t\t int x, int y,\n \t\t\t\t int width, int height);\n@@ -159,7 +169,13 @@ protected void postConfigureEvent (int x, int y, int width, int height,\n \tinsets.bottom = bottom;\n \tinsets.right = right;\n \n-\tawtComponent.validate();\n+\tsynchronized (latestInsets)\n+\t  {\n+\t    latestInsets.top = top;\n+\t    latestInsets.left = left;\n+\t    latestInsets.bottom = bottom;\n+\t    latestInsets.right = right;\n+\t  }\n       }\n     else\n       {\n@@ -178,15 +194,21 @@ protected void postConfigureEvent (int x, int y, int width, int height,\n \t\t\t       frame_y,\n \t\t\t       frame_width,\n \t\t\t       frame_height);\n-\n-\t    if (frame_width != awtComponent.getWidth()\n-\t\t|| frame_height != awtComponent.getHeight())\n-\t      setSize (width, height);\n-\n-\t    awtComponent.validate();\n \t  }\n       }\n+    awtComponent.validate();\n   }\n \n-  native public void setVisible (boolean b);\n+  native void nativeSetVisible (boolean b);\n+  public void setVisible (boolean b)\n+  {\n+    // Prevent the window manager from automatically placing this\n+    // window when it is shown.\n+    if (b)\n+      setBounds (awtComponent.getX(),\n+\t\t awtComponent.getY(),\n+\t\t awtComponent.getWidth(),\n+\t\t awtComponent.getHeight());\n+    nativeSetVisible (b);\n+  }\n }"}, {"sha": "ad4aec7064957987ee38c48dfba809e827c483c6", "filename": "libjava/java/awt/Window.java", "status": "modified", "additions": 27, "deletions": 7, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23a555b077d77c46a1690eb90c029d40a33ea5c5/libjava%2Fjava%2Fawt%2FWindow.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23a555b077d77c46a1690eb90c029d40a33ea5c5/libjava%2Fjava%2Fawt%2FWindow.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FWindow.java?ref=23a555b077d77c46a1690eb90c029d40a33ea5c5", "patch": "@@ -209,7 +209,8 @@ public void pack()\n   }\n \n   /**\n-   * Makes this window visible and brings it to the front.\n+   * Shows on-screen this window and any of its owned windows for whom\n+   * isVisible returns true.\n    */\n   public void show()\n   {\n@@ -218,30 +219,49 @@ public void show()\n     if (peer == null)\n       addNotify();\n \n+    // Show visible owned windows.\n+    synchronized (ownedWindows)\n+      {\n+\tIterator e = ownedWindows.iterator();\n+\twhile(e.hasNext())\n+\t  {\n+\t    Window w = (Window)(((Reference) e.next()).get());\n+\t    if (w != null)\n+\t      {\n+\t\tif (w.isVisible())\n+\t\t  w.getPeer().setVisible(true);\n+\t      }\n+     \t    else\n+\t      // Remove null weak reference from ownedWindows.\n+\t      // Unfortunately this can't be done in the Window's\n+\t      // finalize method because there is no way to guarantee\n+\t      // synchronous access to ownedWindows there.\n+\t      e.remove();\n+\t  }\n+      }\n     validate();\n     super.show();\n     toFront();\n   }\n \n   public void hide()\n   {\n+    // Hide visible owned windows.\n     synchronized (ownedWindows)\n       {\n \tIterator e = ownedWindows.iterator();\n \twhile(e.hasNext())\n \t  {\n \t    Window w = (Window)(((Reference) e.next()).get());\n \t    if (w != null)\n-\t      w.hide();\n+\t      {\n+\t\tif (w.isVisible() && w.getPeer() != null)\n+\t\t  w.getPeer().setVisible(false);\n+\t      }\n      \t    else\n-\t      // Remove null weak reference from ownedWindows.\n-\t      // Unfortunately this can't be done in the Window's\n-\t      // finalize method because there is no way to guarantee\n-\t      // synchronous access to ownedWindows there.\n \t      e.remove();\n \t  }\n       }\n-\n     super.hide();\n   }\n "}, {"sha": "563492a3627522867b86ccee252c302e2a43ca9a", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c", "status": "modified", "additions": 60, "deletions": 19, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23a555b077d77c46a1690eb90c029d40a33ea5c5/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23a555b077d77c46a1690eb90c029d40a33ea5c5/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c?ref=23a555b077d77c46a1690eb90c029d40a33ea5c5", "patch": "@@ -813,7 +813,7 @@ generates_key_typed_event (GdkEvent *event, GtkWidget *source)\n void\n awt_event_handler (GdkEvent *event)\n {\n-  jobject *obj_ptr;\n+  jobject *event_obj_ptr;\n   static guint32 button_click_time = 0;\n   static GdkWindow *button_window = NULL;\n   static guint button_number = -1;\n@@ -865,12 +865,49 @@ awt_event_handler (GdkEvent *event)\n \t\t\t   NULL,\n \t\t\t   NULL,\n \t\t\t   NULL,\n-\t\t\t   (guchar **)&obj_ptr))\n+\t\t\t   (guchar **)&event_obj_ptr))\n     {\n+      GtkWidget *event_widget;\n+      GtkWidget *grab_widget;\n+      jobject *grab_obj_ptr = NULL;\n+      void *ptr;\n+\n+      /* Implement modality using GTK grabs. */\n+      g_assert (global_gtk_window_group);\n+      if (global_gtk_window_group->grabs)\n+\t{\n+\t  grab_widget = global_gtk_window_group->grabs->data;\n+\t  g_assert (grab_widget);\n+\n+\t  gdk_property_get (grab_widget->window,\n+\t\t\t    gdk_atom_intern (\"_GNU_GTKAWT_ADDR\", FALSE),\n+\t\t\t    gdk_atom_intern (\"CARDINAL\", FALSE),\n+\t\t\t    0,\n+\t\t\t    sizeof (jobject),\n+\t\t\t    FALSE,\n+\t\t\t    NULL,\n+\t\t\t    NULL,\n+\t\t\t    NULL,\n+\t\t\t    (guchar **)&grab_obj_ptr);\n+\n+\t  ptr = NSA_GET_PTR (gdk_env, *event_obj_ptr);\n+\t  event_widget = GTK_WIDGET(ptr);\n+\n+\t  if (GTK_WIDGET_IS_SENSITIVE (event_widget) &&\n+\t      gtk_widget_is_ancestor (event_widget, grab_widget))\n+\t    {\n+\t      g_free (grab_obj_ptr);\n+\n+\t      grab_obj_ptr = event_obj_ptr;\n+\t    }\n+\t}\n+      else\n+\tgrab_obj_ptr = event_obj_ptr;\n+\n       switch (event->type)\n \t{\n \tcase GDK_BUTTON_PRESS:\n-\t  (*gdk_env)->CallVoidMethod (gdk_env, *obj_ptr, postMouseEventID,\n+\t  (*gdk_env)->CallVoidMethod (gdk_env, *grab_obj_ptr, postMouseEventID,\n \t\t\t\t      AWT_MOUSE_PRESSED, \n \t\t\t\t      (jlong)event->button.time,\n \t\t\t\t    state_to_awt_mods (event->button.state) |\n@@ -902,7 +939,8 @@ awt_event_handler (GdkEvent *event)\n \t    /*\t    if (--grab_counter == 0)\n \t      gdk_pointer_ungrab (event->button.time);\n \t    */\n-\t    (*gdk_env)->CallVoidMethod (gdk_env, *obj_ptr, postMouseEventID,\n+\t    (*gdk_env)->CallVoidMethod (gdk_env, *grab_obj_ptr,\n+\t\t\t\t\tpostMouseEventID,\n \t\t\t\t\tAWT_MOUSE_RELEASED, \n \t\t\t\t\t(jlong)event->button.time,\n \t\t\t\t    state_to_awt_mods (event->button.state) |\n@@ -918,7 +956,8 @@ awt_event_handler (GdkEvent *event)\n \t\t&& event->button.y >= 0\n \t\t&& event->button.x <= width \n \t\t&& event->button.y <= height)\n-\t      (*gdk_env)->CallVoidMethod (gdk_env, *obj_ptr, postMouseEventID,\n+\t      (*gdk_env)->CallVoidMethod (gdk_env, *grab_obj_ptr,\n+\t\t\t\t\t  postMouseEventID,\n \t\t\t\t\t  AWT_MOUSE_CLICKED, \n \t\t\t\t\t  (jlong)event->button.time,\n \t\t\t\t   state_to_awt_mods (event->button.state) |\n@@ -930,7 +969,7 @@ awt_event_handler (GdkEvent *event)\n \t  }\n \t  break;\n \tcase GDK_MOTION_NOTIFY:\n-\t  (*gdk_env)->CallVoidMethod (gdk_env, *obj_ptr, postMouseEventID,\n+\t  (*gdk_env)->CallVoidMethod (gdk_env, *grab_obj_ptr, postMouseEventID,\n \t\t\t\t      AWT_MOUSE_MOVED,\n \t\t\t\t      (jlong)event->motion.time,\n \t\t\t\t      state_to_awt_mods (event->motion.state),\n@@ -944,7 +983,8 @@ awt_event_handler (GdkEvent *event)\n \t\t\t\t     | GDK_BUTTON4_MASK\n \t\t\t\t     | GDK_BUTTON5_MASK))\n \t    {\n-\t      (*gdk_env)->CallVoidMethod (gdk_env, *obj_ptr, postMouseEventID,\n+\t      (*gdk_env)->CallVoidMethod (gdk_env, *grab_obj_ptr,\n+\t\t\t\t\t  postMouseEventID,\n \t\t\t\t\t  AWT_MOUSE_DRAGGED,\n \t\t\t\t\t  (jlong)event->motion.time,\n \t\t\t\t      state_to_awt_mods (event->motion.state),\n@@ -954,7 +994,7 @@ awt_event_handler (GdkEvent *event)\n \t    }\n \t  break;\n \tcase GDK_ENTER_NOTIFY:\n-\t  (*gdk_env)->CallVoidMethod (gdk_env, *obj_ptr, postMouseEventID,\n+\t  (*gdk_env)->CallVoidMethod (gdk_env, *grab_obj_ptr, postMouseEventID,\n \t\t\t\t      AWT_MOUSE_ENTERED, \n \t\t\t\t      (jlong)event->crossing.time,\n \t\t\t\t    state_to_awt_mods (event->crossing.state), \n@@ -964,7 +1004,8 @@ awt_event_handler (GdkEvent *event)\n \t  break;\n \tcase GDK_LEAVE_NOTIFY:\n \t  if (event->crossing.mode == GDK_CROSSING_NORMAL)\n-\t    (*gdk_env)->CallVoidMethod (gdk_env, *obj_ptr, postMouseEventID,\n+\t    (*gdk_env)->CallVoidMethod (gdk_env, *grab_obj_ptr,\n+\t\t\t\t\tpostMouseEventID,\n \t\t\t\t\tAWT_MOUSE_EXITED, \n \t\t\t\t\t(jlong)event->crossing.time,\n \t\t\t\t    state_to_awt_mods (event->crossing.state),\n@@ -1005,7 +1046,7 @@ awt_event_handler (GdkEvent *event)\n \t\tbottom = r.height - h - y;\n \t\tright = r.width - w - x;\n \n-\t\t(*gdk_env)->CallVoidMethod (gdk_env, *obj_ptr,\n+\t\t(*gdk_env)->CallVoidMethod (gdk_env, *event_obj_ptr,\n \t\t\t\t\t    postConfigureEventID,\n \t\t\t\t\t    (jint) event->configure.x,\n \t\t\t\t\t    (jint) event->configure.y,\n@@ -1021,7 +1062,7 @@ awt_event_handler (GdkEvent *event)\n \t  break;\n \tcase GDK_EXPOSE:\n \t  {\n-\t    (*gdk_env)->CallVoidMethod (gdk_env, *obj_ptr,\n+\t    (*gdk_env)->CallVoidMethod (gdk_env, *event_obj_ptr,\n \t\t\t\t\tpostExposeEventID,\n \t\t\t\t\t(jint)event->expose.area.x,\n \t\t\t\t\t(jint)event->expose.area.y,\n@@ -1066,9 +1107,9 @@ awt_event_handler (GdkEvent *event)\n \t\t\t\t  NULL,\n \t\t\t\t  NULL,\n \t\t\t\t  NULL,\n-\t\t\t\t  (guchar **)&obj_ptr);\n+\t\t\t\t  (guchar **)&grab_obj_ptr);\n \n-\t\t(*gdk_env)->CallVoidMethod (gdk_env, *obj_ptr,\n+\t\t(*gdk_env)->CallVoidMethod (gdk_env, *grab_obj_ptr,\n \t\t\t\t\t    postKeyEventID,\n \t\t\t\t\t    (jint) AWT_KEY_PRESSED,\n \t\t\t\t\t    (jlong) event->key.time,\n@@ -1078,11 +1119,11 @@ awt_event_handler (GdkEvent *event)\n                              keysym_to_awt_keylocation (event));\n \n                 if (generates_key_typed_event (event, window->focus_widget))\n-                  (*gdk_env)->CallVoidMethod (gdk_env, *obj_ptr,\n+                  (*gdk_env)->CallVoidMethod (gdk_env, *grab_obj_ptr,\n                                               postKeyEventID,\n                                               (jint) AWT_KEY_TYPED,\n                                               (jlong) event->key.time,\n-                                              state_to_awt_mods (event->key.state),\n+                                          state_to_awt_mods (event->key.state),\n                                               VK_UNDEFINED,\n                                               keyevent_to_awt_keychar (event),\n                                               AWT_KEY_LOCATION_UNKNOWN);\n@@ -1121,9 +1162,9 @@ awt_event_handler (GdkEvent *event)\n \t\t\t\t  NULL,\n \t\t\t\t  NULL,\n \t\t\t\t  NULL,\n-\t\t\t\t  (guchar **)&obj_ptr);\n+\t\t\t\t  (guchar **)&grab_obj_ptr);\n \n-\t\t(*gdk_env)->CallVoidMethod (gdk_env, *obj_ptr,\n+\t\t(*gdk_env)->CallVoidMethod (gdk_env, *grab_obj_ptr,\n \t\t\t\t\t    postKeyEventID,\n \t\t\t\t\t    (jint) AWT_KEY_RELEASED,\n \t\t\t\t\t    (jlong) event->key.time,\n@@ -1135,7 +1176,7 @@ awt_event_handler (GdkEvent *event)\n           }\n           break;\n \tcase GDK_FOCUS_CHANGE:\n-\t  (*gdk_env)->CallVoidMethod (gdk_env, *obj_ptr,\n+\t  (*gdk_env)->CallVoidMethod (gdk_env, *event_obj_ptr,\n \t\t\t\t      postFocusEventID,\n \t\t\t\t      (jint) (event->focus_change.in) ? \n \t\t\t\t      AWT_FOCUS_GAINED : AWT_FOCUS_LOST,\n@@ -1144,7 +1185,7 @@ awt_event_handler (GdkEvent *event)\n         default:\n \t  break;\n \t}\n-      g_free (obj_ptr);\n+      g_free (event_obj_ptr);\n     }\n \n   gtk_main_do_event (event);"}, {"sha": "79d7f7d55b2a11dbbeae16a46be6ae6c193d4810", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23a555b077d77c46a1690eb90c029d40a33ea5c5/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23a555b077d77c46a1690eb90c029d40a33ea5c5/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c?ref=23a555b077d77c46a1690eb90c029d40a33ea5c5", "patch": "@@ -63,6 +63,8 @@ JNIEnv *gdk_env;\n JavaVM *gdk_vm;\n #endif\n \n+GtkWindowGroup *global_gtk_window_group;\n+\n /*\n  * Call gtk_init.  It is very important that this happen before any other\n  * gtk calls.\n@@ -179,6 +181,7 @@ Java_gnu_java_awt_peer_gtk_GtkMainThread_gtkInit (JNIEnv *env, jclass clazz)\n   postTextEventID = (*env)->GetMethodID (env, gtktextcomponentpeer,\n \t\t\t\t\t     \"postTextEvent\",\n \t\t\t\t\t     \"()V\");\n+  global_gtk_window_group = gtk_window_group_new ();\n }\n \n /*"}, {"sha": "3cac71835b75f154971f38cb86c436566bd87b75", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c", "status": "modified", "additions": 15, "deletions": 67, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23a555b077d77c46a1690eb90c029d40a33ea5c5/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23a555b077d77c46a1690eb90c029d40a33ea5c5/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c?ref=23a555b077d77c46a1690eb90c029d40a33ea5c5", "patch": "@@ -60,6 +60,10 @@ Java_gnu_java_awt_peer_gtk_GtkWindowPeer_create\n   window_widget = gtk_window_new (GTK_WINDOW_TOPLEVEL);\n   window = GTK_WINDOW (window_widget);\n \n+  // Avoid GTK runtime assertion failures.\n+  width = (width < 1) ? 1 : width;\n+  height = (height < 1) ? 1 : height;\n+\n   gtk_window_set_default_size (window, width, height);\n \n   /* We must set this window's size requisition.  Otherwise when a\n@@ -80,6 +84,8 @@ Java_gnu_java_awt_peer_gtk_GtkWindowPeer_create\n \n   gtk_window_set_type_hint (window, type);\n \n+  gtk_window_group_add_window (global_gtk_window_group, window);\n+\n   vbox = gtk_vbox_new (0, 0);\n   layout = gtk_layout_new (NULL, NULL);\n   gtk_box_pack_end (GTK_BOX (vbox), layout, 1, 1, 0);\n@@ -93,7 +99,7 @@ Java_gnu_java_awt_peer_gtk_GtkWindowPeer_create\n   NSA_SET_PTR (env, obj, window_widget);\n }\n \n-JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkWindowPeer_setVisible\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkWindowPeer_nativeSetVisible\n   (JNIEnv *env, jobject obj, jboolean visible)\n {\n   void *ptr;\n@@ -149,32 +155,6 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkWindowPeer_connectHooks\n   gdk_threads_leave ();\n }\n \n-void\n-setup_window (JNIEnv *env, jobject obj, GtkWidget *window, jint width, \n-\t      jint height, jboolean visible)\n-{\n-  GtkWidget *layout, *vbox;\n-\n-  gdk_threads_enter();\n-  gtk_window_set_policy (GTK_WINDOW (window), 1, 1, 0);\n-  gtk_widget_set_usize (window, width, height);\n-\n-  vbox = gtk_vbox_new (0, 0);\n-  layout = gtk_layout_new (NULL, NULL);\n-  gtk_box_pack_end (GTK_BOX (vbox), layout, 1, 1, 0);\n-  gtk_container_add (GTK_CONTAINER (window), vbox);\n-  gtk_widget_realize (layout);\n-  connect_awt_hook (env, obj, 1, GTK_LAYOUT(layout)->bin_window);\n-  gtk_widget_show (layout);\n-  gtk_widget_show (vbox);\n-\n-  gtk_widget_realize (window);\n-\n-  connect_awt_hook (env, obj, 1, window->window);\n-  set_visible (window, visible);\n-  gdk_threads_leave ();\n-}\n-\n /*\n  * Set a frame's title\n  */\n@@ -250,6 +230,10 @@ Java_gnu_java_awt_peer_gtk_GtkWindowPeer_setSize\n {\n   void *ptr = NSA_GET_PTR (env, obj);\n \n+  // Avoid GTK runtime assertion failures.\n+  width = (width < 1) ? 1 : width;\n+  height = (height < 1) ? 1 : height;\n+\n   gdk_threads_enter ();\n   gtk_widget_set_size_request (GTK_WIDGET(ptr), width, height);\n   gdk_threads_leave ();\n@@ -261,6 +245,10 @@ Java_gnu_java_awt_peer_gtk_GtkWindowPeer_nativeSetBounds\n {\n   void *ptr = NSA_GET_PTR (env, obj);\n \n+  // Avoid GTK runtime assertion failures.\n+  width = (width < 1) ? 1 : width;\n+  height = (height < 1) ? 1 : height;\n+\n   gdk_threads_enter ();\n   gtk_window_move (GTK_WINDOW(ptr), x, y);\n   /* Need to change the widget's request size. */\n@@ -314,43 +302,3 @@ Java_gnu_java_awt_peer_gtk_GtkFramePeer_getMenuBarHeight\n \n   return height;\n }\n-\n-\n-void\n-gdk_window_get_root_geometry (GdkWindow *window,\n-\t\t\t      gint      *x,\n-\t\t\t      gint      *y,\n-\t\t\t      gint      *width,\n-\t\t\t      gint      *height,\n-\t\t\t      gint      *border,\n-\t\t\t      gint      *depth)\n-{\n-  GdkWindow *private;\n-\n-  g_return_if_fail (window != NULL);\n-  \n-  private = (GdkWindow*) window;\n-  if (x)\n-    *x = 0;\n-  if (y)\n-    *y = 0;\n-  if (width)\n-    *width = 0;\n-  if (height)\n-    *height = 0;\n-  if (border)\n-    *border = 0;\n-  if (depth)\n-    *depth = 0;\n-\n-  if (GDK_WINDOW_DESTROYED (private))\n-    return;\n-  \n-  private = gdk_window_get_toplevel (private);\n-  if (GDK_WINDOW_DESTROYED(private))\n-    return;\n-  \n-  gdk_window_get_geometry (private, x, y, width, height, depth);\n-      \n-}\n-"}, {"sha": "879f0b0b457777ce5b008ef547ac2410e8421fe4", "filename": "libjava/jni/gtk-peer/gtkpeer.h", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23a555b077d77c46a1690eb90c029d40a33ea5c5/libjava%2Fjni%2Fgtk-peer%2Fgtkpeer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23a555b077d77c46a1690eb90c029d40a33ea5c5/libjava%2Fjni%2Fgtk-peer%2Fgtkpeer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgtkpeer.h?ref=23a555b077d77c46a1690eb90c029d40a33ea5c5", "patch": "@@ -369,14 +369,7 @@ extern jclass gdkColor;\n extern jmethodID gdkColorID;\n extern JNIEnv *gdk_env;\n \n-void\n-gdk_window_get_root_geometry (GdkWindow *window,\n-\t\t\t      gint      *x,\n-\t\t\t      gint      *y,\n-\t\t\t      gint      *width,\n-\t\t\t      gint      *height,\n-\t\t\t      gint      *border,\n-\t\t\t      gint      *depth);\n+extern GtkWindowGroup *global_gtk_window_group;\n \n void awt_event_handler (GdkEvent *event);\n \n@@ -385,8 +378,6 @@ void connect_awt_hook (JNIEnv *env, jobject peer_obj, int nwindows, ...);\n void set_visible (GtkWidget *widget, jboolean visible);\n void set_parent (GtkWidget *widget, GtkContainer *parent);\n GtkLayout *find_gtk_layout (GtkWidget *parent);\n-void setup_window (JNIEnv *env, jobject obj, GtkWidget *window, jint width, \n-\t\t   jint height, jboolean visible);\n \n jint keyevent_state_to_awt_mods (GdkEvent *event);\n "}]}