{"sha": "4cfa46c8af9b89461914a1fd2f843a9b17e996dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNmYTQ2YzhhZjliODk0NjE5MTRhMWZkMmY4NDNhOWIxN2U5OTZkYw==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2004-11-03T15:04:56Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2004-11-03T15:04:56Z"}, "message": "stmt.c (expand_case): Speed up code to detect duplicate case label targets and count unique case...\n\n        * stmt.c (expand_case): Speed up code to detect duplicate case\n        label targets and count unique case label targets.\n\nFrom-SVN: r90027", "tree": {"sha": "6998589e82d54f69a3bea503f525a9ddeca7113a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6998589e82d54f69a3bea503f525a9ddeca7113a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cfa46c8af9b89461914a1fd2f843a9b17e996dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cfa46c8af9b89461914a1fd2f843a9b17e996dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cfa46c8af9b89461914a1fd2f843a9b17e996dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cfa46c8af9b89461914a1fd2f843a9b17e996dc/comments", "author": null, "committer": null, "parents": [{"sha": "dae62ba8fdc4b831f311f654811244537d8819c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dae62ba8fdc4b831f311f654811244537d8819c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dae62ba8fdc4b831f311f654811244537d8819c9"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "cbc5bc6f5c2c808cbc89568d2be67691f2f2b525", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cfa46c8af9b89461914a1fd2f843a9b17e996dc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cfa46c8af9b89461914a1fd2f843a9b17e996dc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4cfa46c8af9b89461914a1fd2f843a9b17e996dc", "patch": "@@ -1,3 +1,8 @@\n+2004-11-03 Jeff Law  <law@redhat.com>\n+\n+\t* stmt.c (expand_case): Speed up code to detect duplicate case\n+\tlabel targets and count unique case label targets.\n+\n 2004-11-03  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* cppdefault.c, cppdefault.h, timevar.h: Update copyright."}, {"sha": "08dabdef1cfee968da60c5651720743cf5d34d42", "filename": "gcc/stmt.c", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cfa46c8af9b89461914a1fd2f843a9b17e996dc/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cfa46c8af9b89461914a1fd2f843a9b17e996dc/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=4cfa46c8af9b89461914a1fd2f843a9b17e996dc", "patch": "@@ -2317,7 +2317,7 @@ expand_case (tree exp)\n {\n   tree minval = NULL_TREE, maxval = NULL_TREE, range = NULL_TREE;\n   rtx default_label = 0;\n-  struct case_node *n, *m;\n+  struct case_node *n;\n   unsigned int count, uniq;\n   rtx index;\n   rtx table_label;\n@@ -2354,6 +2354,7 @@ expand_case (tree exp)\n   if (index_type != error_mark_node)\n     {\n       tree elt;\n+      bitmap label_bitmap;\n \n       /* cleanup_tree_cfg removes all SWITCH_EXPR with their index\n \t expressions being INTEGER_CST.  */\n@@ -2392,6 +2393,7 @@ expand_case (tree exp)\n \n       uniq = 0;\n       count = 0;\n+      label_bitmap = BITMAP_XMALLOC ();\n       for (n = case_list; n; n = n->right)\n \t{\n \t  /* Count the elements and track the largest and smallest\n@@ -2412,17 +2414,18 @@ expand_case (tree exp)\n \t  if (! tree_int_cst_equal (n->low, n->high))\n \t    count++;\n \n-\t  /* Count the number of unique case node targets.  */\n-          uniq++;\n+\t  /* If we have not seen this label yet, then increase the\n+\t     number of unique case node targets seen.  */\n \t  lab = label_rtx (n->code_label);\n-          for (m = case_list; m != n; m = m->right)\n-            if (label_rtx (m->code_label) == lab)\n-              {\n-                uniq--;\n-                break;\n-              }\n+\t  if (!bitmap_bit_p (label_bitmap, CODE_LABEL_NUMBER (lab)))\n+\t    {\n+\t      bitmap_set_bit (label_bitmap, CODE_LABEL_NUMBER (lab));\n+\t      uniq++;\n+\t    }\n \t}\n \n+      BITMAP_XFREE (label_bitmap);\n+\n       /* cleanup_tree_cfg removes all SWITCH_EXPR with a single\n \t destination, such as one with a default case only.  */\n       gcc_assert (count != 0);"}]}