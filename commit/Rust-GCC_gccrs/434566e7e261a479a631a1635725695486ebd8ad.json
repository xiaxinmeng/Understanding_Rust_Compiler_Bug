{"sha": "434566e7e261a479a631a1635725695486ebd8ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM0NTY2ZTdlMjYxYTQ3OWE2MzFhMTYzNTcyNTY5NTQ4NmViZDhhZA==", "commit": {"author": {"name": "Thomas Fitzsimmons", "email": "fitzsim@redhat.com", "date": "2003-07-23T22:26:35Z"}, "committer": {"name": "Thomas Fitzsimmons", "email": "fitzsim@gcc.gnu.org", "date": "2003-07-23T22:26:35Z"}, "message": "* gnu/java/awt/peer/gtk/GtkTextComponentPeer.java\n\t(connectHooks): New method.\n\t(handleEvent): Remove.\n\t* gnu/java/awt/peer/gtk/GtkTextFieldPeer.java\n\t(createHooks): Remove declaration.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c\n\t(generates_key_typed_event): Change to handle only certain\n\tkeyvals.\n\t(awt_event_handler): Add special handling for GtkTextView.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.c\n\t(textcomponent_commit_cb): New function.\n\t(textcomponent_changed_cb): Likewise.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.c\n\t(connectHooks): Remove.\n\nFrom-SVN: r69728", "tree": {"sha": "f323cf6b1c52677c2158122c5985db87dd047a98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f323cf6b1c52677c2158122c5985db87dd047a98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/434566e7e261a479a631a1635725695486ebd8ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/434566e7e261a479a631a1635725695486ebd8ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/434566e7e261a479a631a1635725695486ebd8ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/434566e7e261a479a631a1635725695486ebd8ad/comments", "author": null, "committer": null, "parents": [{"sha": "118545ec26eb2c3cfe966f552b30860e35c416d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/118545ec26eb2c3cfe966f552b30860e35c416d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/118545ec26eb2c3cfe966f552b30860e35c416d3"}], "stats": {"total": 201, "additions": 141, "deletions": 60}, "files": [{"sha": "5372dfc9509ad9b08fb4f6d9e61ce283f5b6e1ec", "filename": "libjava/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/434566e7e261a479a631a1635725695486ebd8ad/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/434566e7e261a479a631a1635725695486ebd8ad/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=434566e7e261a479a631a1635725695486ebd8ad", "patch": "@@ -1,3 +1,20 @@\n+2003-07-23  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GtkTextComponentPeer.java\n+\t(connectHooks): New method.\n+\t(handleEvent): Remove.\n+\t* gnu/java/awt/peer/gtk/GtkTextFieldPeer.java\n+\t(createHooks): Remove declaration.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c\n+\t(generates_key_typed_event): Change to handle only certain\n+\tkeyvals.\n+\t(awt_event_handler): Add special handling for GtkTextView.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.c\n+\t(textcomponent_commit_cb): New function.\n+\t(textcomponent_changed_cb): Likewise.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.c\n+\t(connectHooks): Remove.\n+\n 2003-07-23  Tom Tromey  <tromey@redhat.com>\n \n \t* java/lang/natSystem.cc (arraycopy): Check for overflow."}, {"sha": "7439f2085bfa2943cf64d5af7a820eddf9123ce5", "filename": "libjava/gnu/java/awt/peer/gtk/GtkTextComponentPeer.java", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/434566e7e261a479a631a1635725695486ebd8ad/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/434566e7e261a479a631a1635725695486ebd8ad/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextComponentPeer.java?ref=434566e7e261a479a631a1635725695486ebd8ad", "patch": "@@ -56,6 +56,7 @@ public class GtkTextComponentPeer extends GtkComponentPeer\n     setText (tc.getText ());\n   }\n   \n+  public native void connectHooks ();\n   public native int getCaretPosition ();\n   public native void setCaretPosition (int pos);\n   public native int getSelectionStart ();\n@@ -84,16 +85,4 @@ protected void postTextEvent ()\n   {\n     q.postEvent (new TextEvent (awtComponent, TextEvent.TEXT_VALUE_CHANGED));\n   }\n-\n-  public void handleEvent (AWTEvent e)\n-  {\n-    if (e.getID () == KeyEvent.KEY_TYPED\n-        && ((TextComponent)e.getSource()).isEditable())\n-      {\n-        KeyEvent ke = (KeyEvent)e;\n-\n-        if (!ke.isConsumed())\n-          postTextEvent ();\n-      }\n-  }\n }"}, {"sha": "efc3ff7c58a6511bf1ec076ec6c454e3bd2f2765", "filename": "libjava/gnu/java/awt/peer/gtk/GtkTextFieldPeer.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/434566e7e261a479a631a1635725695486ebd8ad/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextFieldPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/434566e7e261a479a631a1635725695486ebd8ad/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextFieldPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextFieldPeer.java?ref=434566e7e261a479a631a1635725695486ebd8ad", "patch": "@@ -52,7 +52,6 @@ public class GtkTextFieldPeer extends GtkTextComponentPeer\n //    native void create (ComponentPeer parent, String text);\n \n   native void create ();\n-  native void createHooks ();\n \n   native void gtkEntryGetSize (int cols, int dims[]);\n "}, {"sha": "de18166fd7b01999692cbd146d7e02af00191c3e", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c", "status": "modified", "additions": 34, "deletions": 19, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/434566e7e261a479a631a1635725695486ebd8ad/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/434566e7e261a479a631a1635725695486ebd8ad/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c?ref=434566e7e261a479a631a1635725695486ebd8ad", "patch": "@@ -232,22 +232,18 @@ keysym_to_awt_keycode (guint keyval)\n     }\n }\n \n+/* Checks if keyval triggers a KEY_TYPED event on the source widget.\n+   This function identifies special keyvals that don't trigger\n+   GtkIMContext \"commit\" signals, but that do trigger Java KEY_TYPED\n+   events. */\n static int\n-generates_key_typed_event (guint keyval)\n+generates_key_typed_event (guint keyval, GtkWidget *source)\n {\n-  guint vk;\n-\n-  vk = gdk_keyval_to_upper (keyval);\n-\n-  if ((vk >= 0x20 && vk <= 0x7e)\t/* Most printable keysyms on a\n-                                           standard US keyboard. */\n-      || (vk >= 0xFF9F && vk <= 0xFFB9) /* Numeric Keypad keysyms. */\n-      || vk == GDK_BackSpace\n-      || vk == GDK_Delete\n-      || vk == GDK_Return)\n-    return 1;\n-  else\n-    return 0;\n+  return (keyval == GDK_BackSpace\n+          || keyval == GDK_Delete\n+          || keyval == GDK_Return\n+          || (keyval == GDK_Tab\n+              && GTK_IS_TEXT_VIEW(source))) ? 1 : 0;\n }\n \n void\n@@ -465,6 +461,8 @@ awt_event_handler (GdkEvent *event)\n \t  {\n \t    GtkWidget *widget;\n \t    GtkWindow *window;\n+            /* The window to which the Java peer is attached. */\n+            GdkWindow *obj_window;\n \n \t    gdk_window_get_user_data (event->any.window, (void **) &widget);\n \n@@ -477,7 +475,16 @@ awt_event_handler (GdkEvent *event)\n \t\t&& window->focus_widget->window)\n \t      {\n \t\tgtk_widget_activate (window->focus_widget);\n-\t\tgdk_property_get (window->focus_widget->window,\n+\n+                /* TextArea peers are attached to the scrolled window\n+                   that contains the GtkTextView, not to the text view\n+                   itself. */\n+                if (GTK_IS_TEXT_VIEW (window->focus_widget))\n+                  obj_window = gtk_widget_get_parent (window->focus_widget)->window;\n+                else\n+                  obj_window = window->focus_widget->window;\n+\n+\t\tgdk_property_get (obj_window,\n \t\t\t\t  gdk_atom_intern (\"_GNU_GTKAWT_ADDR\", FALSE),\n \t\t\t\t  gdk_atom_intern (\"CARDINAL\", FALSE),\n \t\t\t\t  0,\n@@ -500,22 +507,24 @@ awt_event_handler (GdkEvent *event)\n \t\t\t\t\t    event->key.string[0] : \n \t\t\t\t\t    AWT_KEY_CHAR_UNDEFINED);\n \n-\t\tif (event->key.length\n-                    && generates_key_typed_event(event->key.keyval))\n+                if (generates_key_typed_event (event->key.keyval, window->focus_widget))\n \t\t  (*gdk_env)->CallVoidMethod (gdk_env, *obj_ptr,\n \t\t\t\t\t      postKeyEventID,\n \t\t\t\t\t      (jint) AWT_KEY_TYPED,\n \t\t\t\t\t      (jlong) event->key.time,\n                                               state_to_awt_mods (event->key.state),\n \t\t\t\t\t      VK_UNDEFINED,\n-\t\t\t\t\t      (jchar) event->key.string[0]);\n+                                              (jchar) (event->key.length) ?\n+                                              event->key.string[0] :\n+                                              AWT_KEY_CHAR_UNDEFINED);\n \t      }\n \t  }\n \t  break;\n         case GDK_KEY_RELEASE:\n \t  {\n \t    GtkWidget *widget;\n \t    GtkWindow *window;\n+            GdkWindow *obj_window;\n \n \t    gdk_window_get_user_data (event->any.window, (void **) &widget);\n \n@@ -528,7 +537,13 @@ awt_event_handler (GdkEvent *event)\n \t\t&& window->focus_widget->window)\n \t      {\n \t\tgtk_widget_activate (window->focus_widget);\n-\t\tgdk_property_get (window->focus_widget->window,\n+\n+                if (GTK_IS_TEXT_VIEW (window->focus_widget))\n+                  obj_window = gtk_widget_get_parent (window->focus_widget)->window;\n+                else\n+                  obj_window = window->focus_widget->window;\n+\n+\t\tgdk_property_get (obj_window,\n \t\t\t\t  gdk_atom_intern (\"_GNU_GTKAWT_ADDR\", FALSE),\n \t\t\t\t  gdk_atom_intern (\"CARDINAL\", FALSE),\n \t\t\t\t  0,"}, {"sha": "009eb351659b0dbba62c9dad60cf90446e88732f", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.c", "status": "modified", "additions": 89, "deletions": 12, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/434566e7e261a479a631a1635725695486ebd8ad/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextComponentPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/434566e7e261a479a631a1635725695486ebd8ad/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextComponentPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextComponentPeer.c?ref=434566e7e261a479a631a1635725695486ebd8ad", "patch": "@@ -39,6 +39,62 @@ exception statement from your version. */\n #include \"gtkpeer.h\"\n #include \"gnu_java_awt_peer_gtk_GtkTextComponentPeer.h\"\n \n+static void textcomponent_commit_cb (GtkIMContext *context,\n+                                 const gchar  *str,\n+                                 jobject peer);\n+\n+static void textcomponent_changed_cb (GtkEditable *editable,\n+                                  jobject peer);\n+\n+JNIEXPORT void JNICALL\n+Java_gnu_java_awt_peer_gtk_GtkTextComponentPeer_connectHooks\n+  (JNIEnv *env, jobject obj)\n+{\n+  void *ptr;\n+  GtkTextView *text = NULL;\n+  GtkTextBuffer *buf;\n+\n+  ptr = NSA_GET_PTR (env, obj);\n+\n+  gdk_threads_enter ();\n+\n+  if (GTK_IS_ENTRY(ptr))\n+    {\n+      g_signal_connect (GTK_ENTRY (ptr)->im_context, \"commit\",\n+                        G_CALLBACK (textcomponent_commit_cb), obj);\n+\n+      g_signal_connect (GTK_EDITABLE (ptr), \"changed\",\n+                        G_CALLBACK (textcomponent_changed_cb), obj);\n+    }\n+  else\n+    {\n+      if (GTK_IS_SCROLLED_WINDOW (ptr))\n+\t{\n+          text = GTK_TEXT_VIEW (GTK_SCROLLED_WINDOW (ptr)->container.child);\n+\t}\n+      else if (GTK_IS_TEXT_VIEW (ptr))\n+\t{\n+\t  text = GTK_TEXT_VIEW (ptr);\n+\t}\n+\n+      if (text)\n+\t{\n+          g_signal_connect (text->im_context, \"commit\",\n+                            G_CALLBACK (textcomponent_commit_cb), obj);\n+\n+          buf = gtk_text_view_get_buffer (text);\n+          if (buf)\n+            g_signal_connect (buf, \"changed\",\n+                              G_CALLBACK (textcomponent_changed_cb), obj);\n+\t}\n+    }\n+\n+  gdk_threads_leave ();\n+\n+  /* Connect the superclass hooks.  */\n+  Java_gnu_java_awt_peer_gtk_GtkComponentPeer_connectHooks (env, obj);\n+}\n+\n JNIEXPORT jint JNICALL \n Java_gnu_java_awt_peer_gtk_GtkTextComponentPeer_getCaretPosition\n   (JNIEnv *env, jobject obj)\n@@ -371,18 +427,6 @@ Java_gnu_java_awt_peer_gtk_GtkTextComponentPeer_setText\n   if (GTK_IS_EDITABLE (ptr))\n     {\n       gtk_entry_set_text (GTK_ENTRY (ptr), str);\n-\n-      if (gdk_property_get (GTK_WIDGET(ptr)->window,\n-                            gdk_atom_intern (\"_GNU_GTKAWT_ADDR\", FALSE),\n-                            gdk_atom_intern (\"CARDINAL\", FALSE),\n-                            0,\n-                            sizeof (jobject),\n-                            FALSE,\n-                            NULL,\n-                            NULL,\n-                            NULL,\n-                            (guchar **)&obj_ptr))\n-        (*gdk_env)->CallVoidMethod (gdk_env, *obj_ptr, postTextEventID);\n     }\n   else\n     {\n@@ -406,3 +450,36 @@ Java_gnu_java_awt_peer_gtk_GtkTextComponentPeer_setText\n \n   (*env)->ReleaseStringUTFChars (env, contents, str);\n }\n+\n+static void\n+textcomponent_commit_cb (GtkIMContext *context,\n+                         const gchar  *str,\n+                         jobject peer)\n+{\n+  void *ptr;\n+\n+  /* str is a \\0-terminated UTF-8 encoded character. */\n+  gunichar2 *jc = g_utf8_to_utf16 (str, -1, NULL, NULL, NULL);\n+\n+  if (jc)\n+    (*gdk_env)->CallVoidMethod (gdk_env, peer,\n+                                postKeyEventID,\n+                                (jint) AWT_KEY_TYPED,\n+                                /* We don't have access to the event\n+                                   that caused this commit signal to\n+                                   be fired.  So approximate the event\n+                                   time... */\n+                                (jlong) gdk_event_get_time (NULL),\n+                                /* ... and assume no modifiers. */\n+                                0,\n+                                VK_UNDEFINED,\n+                                (jchar) jc[0]);\n+  g_free (jc);\n+}\n+\n+static void\n+textcomponent_changed_cb (GtkEditable *editable,\n+                      jobject peer)\n+{\n+  (*gdk_env)->CallVoidMethod (gdk_env, peer, postTextEventID);\n+}"}, {"sha": "7836bb34a6349335fa3a5e09e07d6c51adde5c37", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.c", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/434566e7e261a479a631a1635725695486ebd8ad/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextFieldPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/434566e7e261a479a631a1635725695486ebd8ad/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextFieldPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextFieldPeer.c?ref=434566e7e261a479a631a1635725695486ebd8ad", "patch": "@@ -52,22 +52,6 @@ Java_gnu_java_awt_peer_gtk_GtkTextFieldPeer_create\n   NSA_SET_PTR (env, obj, widget);\n }\n \n-JNIEXPORT void JNICALL \n-Java_gnu_java_awt_peer_gtk_GtkTextFieldPeer_connectHooks\n-  (JNIEnv *env, jobject obj)\n-{\n-  void *ptr;\n-\n-  ptr = NSA_GET_PTR (env, obj);\n-\n-  gdk_threads_enter ();\n-  gtk_widget_realize (GTK_WIDGET (ptr));\n-  connect_awt_hook (env, obj, 2, \n-\t\t    GTK_WIDGET (ptr)->window, \n-\t\t    GTK_ENTRY (ptr)->text_area);\n-  gdk_threads_leave ();\n-}\n-\n JNIEXPORT void JNICALL \n Java_gnu_java_awt_peer_gtk_GtkTextFieldPeer_gtkEntryGetSize\n   (JNIEnv *env, jobject obj, jint cols, jintArray jdims)"}]}