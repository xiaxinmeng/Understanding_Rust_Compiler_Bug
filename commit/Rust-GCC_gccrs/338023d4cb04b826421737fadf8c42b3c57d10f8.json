{"sha": "338023d4cb04b826421737fadf8c42b3c57d10f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM4MDIzZDRjYjA0YjgyNjQyMTczN2ZhZGY4YzQyYjNjNTdkMTBmOA==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-11-17T21:03:59Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-11-17T21:03:59Z"}, "message": "(program_transform_name, program_transform_cross_name): Define.\n\n(GCC_INSTALL_NAME, GCC_CROSS_NAME): Define.\n(install-common): Use them.\n(install-man): Likewise.\n(distclean): Delete *.asm.\n(stage*, risky-stage*): If as/ld/real-ld exist, copy them to stage dir.\n\nFrom-SVN: r8486", "tree": {"sha": "95fe041f9bc9a03a47b4be772174714c96c83d29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95fe041f9bc9a03a47b4be772174714c96c83d29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/338023d4cb04b826421737fadf8c42b3c57d10f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/338023d4cb04b826421737fadf8c42b3c57d10f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/338023d4cb04b826421737fadf8c42b3c57d10f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/338023d4cb04b826421737fadf8c42b3c57d10f8/comments", "author": null, "committer": null, "parents": [{"sha": "b82b6eea9339954d55d1e189565f8574bd95f9e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b82b6eea9339954d55d1e189565f8574bd95f9e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b82b6eea9339954d55d1e189565f8574bd95f9e3"}], "stats": {"total": 77, "additions": 68, "deletions": 9}, "files": [{"sha": "192478f08564f7194abac42b0ae8c8ea8e7a239d", "filename": "gcc/Makefile.in", "status": "modified", "additions": 68, "deletions": 9, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338023d4cb04b826421737fadf8c42b3c57d10f8/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338023d4cb04b826421737fadf8c42b3c57d10f8/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=338023d4cb04b826421737fadf8c42b3c57d10f8", "patch": "@@ -117,6 +117,10 @@ GCC_CFLAGS=$(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(CFLAGS) -I./include\n ENQUIRE_CFLAGS = -DNO_MEM -DNO_LONG_DOUBLE_IO -O0\n ENQUIRE_LDFLAGS = $(LDFLAGS)\n \n+# Sed command to transform gcc to installed name.  Overwritten by configure.\n+program_transform_name = s,x,x,\n+program_transform_cross_name = s,^,$(target)-,\n+\n # Tools to use when building a cross-compiler.\n # These are used because `configure' appends `cross-make'\n # to the makefile when making a cross-compiler.\n@@ -318,6 +322,12 @@ HOST_ALLOCA=$(ALLOCA)\n HOST_MALLOC=$(MALLOC)\n HOST_OBSTACK=$(OBSTACK)\n \n+# Actual name to use when installing a native compiler.\n+GCC_INSTALL_NAME = `t='$(program_transform_name)'; echo gcc | sed $$t`\n+\n+# Actual name to use when installing a cross-compiler.\n+GCC_CROSS_NAME = `t='$(program_transform_cross_name)'; echo gcc | sed $$t`\n+\n # Choose the real default target.\n ALL=all.internal\n \n@@ -1841,6 +1851,7 @@ distclean: clean bytecode.distclean lang.distclean\n \t-rm -f */stage1 */stage2 */stage3 */stage4 */include\n \t-rm -f objc-parse.output\n \t-rm -f c-parse.output\n+\t-rm -f *.asm\n \n # Delete anything likely to be found in the source directory\n # that shouldn't be in the distribution.\n@@ -1952,15 +1963,15 @@ install-common: native install-dir xgcc $(EXTRA_PARTS) lang.install-common\n # Install the driver program as $(target)-gcc\n # and also as either gcc (if native) or $(tooldir)/bin/gcc.\n \t-if [ -f gcc-cross ] ; then \\\n-\t  rm -f $(bindir)/$(target)-gcc; \\\n-\t  $(INSTALL_PROGRAM) gcc-cross $(bindir)/$(target)-gcc; \\\n+\t  rm -f $(bindir)/$(GCC_CROSS_NAME); \\\n+\t  $(INSTALL_PROGRAM) gcc-cross $(bindir)/$(GCC_CROSS_NAME); \\\n \t  if [ -d $(tooldir)/bin/. ] ; then \\\n \t    rm -f $(tooldir)/bin/gcc; \\\n \t    $(INSTALL_PROGRAM) gcc-cross $(tooldir)/bin/gcc; \\\n \t  else true; fi; \\\n \telse \\\n-\t  rm -f $(bindir)/gcc; \\\n-\t  $(INSTALL_PROGRAM) xgcc $(bindir)/gcc; \\\n+\t  rm -f $(bindir)/$(GCC_INSTALL_NAME); \\\n+\t  $(INSTALL_PROGRAM) xgcc $(bindir)/$(GCC_INSTALL_NAME); \\\n \t  rm -f $(bindir)/$(target)-gcc-1; \\\n \t  ln $(bindir)/gcc $(bindir)/$(target)-gcc-1; \\\n \t  mv $(bindir)/$(target)-gcc-1 $(bindir)/$(target)-gcc; \\\n@@ -1988,9 +1999,15 @@ install-info: doc install-dir lang.install-info\n \n # Install the man pages.\n install-man: install-dir $(srcdir)/gcc.1 $(srcdir)/cccp.1 lang.install-man\n-\t-rm -f $(mandir)/gcc$(manext)\n-\t-$(INSTALL_DATA) $(srcdir)/gcc.1 $(mandir)/gcc$(manext)\n-\t-chmod a-x $(mandir)/gcc$(manext)\n+\t-if [ -f gcc-cross ] ; then \\\n+\t  rm -f $(mandir)/$(GCC_CROSS_NAME)$(manext); \\\n+\t  $(INSTALL_DATA) $(srcdir)/gcc.1 $(mandir)/$(GCC_CROSS_NAME)$(manext); \\\n+\t  chmod a-x $(mandir)/$(GCC_CROSS_NAME)$(manext); \\\n+\telse \\\n+\t  rm -f $(mandir)/$(GCC_INSTALL_NAME)$(manext); \\\n+\t  $(INSTALL_DATA) $(srcdir)/gcc.1 $(mandir)/$(GCC_INSTALL_NAME)$(manext); \\\n+\t  chmod a-x $(mandir)/$(GCC_INSTALL_NAME)$(manext); \\\n+\tfi\n \t-rm -f $(mandir)/cccp$(manext)\n \t-$(INSTALL_DATA) $(srcdir)/cccp.1 $(mandir)/cccp$(manext)\n \t-chmod a-x $(mandir)/cccp$(manext)\n@@ -2093,10 +2110,12 @@ install-collect2: collect2 install-dir\n # Cancel installation by deleting the installed files.\n uninstall: lang.uninstall\n \t-rm -rf $(libsubdir)\n-\t-rm -rf $(bindir)/gcc\n+\t-rm -rf $(bindir)/$(GCC_INSTALL_NAME)\n+\t-rm -rf $(bindir)/$(GCC_CROSS_NAME)\n \t-rm -rf $(bindir)/protoize\n \t-rm -rf $(bindir)/unprotoize\n-\t-rm -rf $(mandir)/gcc$(manext)\n+\t-rm -rf $(mandir)/$(GCC_INSTALL_NAME)$(manext)\n+\t-rm -rf $(mandir)/$(GCC_CROSS_NAME)$(manext)\n \t-rm -rf $(mandir)/cccp$(manext)\n \t-rm -rf $(mandir)/protoize$(manext)\n \t-rm -rf $(mandir)/unprotoize$(manext)\n@@ -2317,6 +2336,11 @@ stage1-start:\n \t   if [ -d stage1/$$dir ] ; then true ; else mkdir stage1/$$dir ; fi ; \\\n \t done\n \t-mv $(STAGESTUFF) stage1\n+# Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n+# dir will work properly.\n+\t-if [ -f as ] ; then cp as stage1 ; else true ; fi\n+\t-if [ -f ld ] ; then cp ld stage1 ; else true ; fi\n+\t-if [ -f real-ld ] ; then cp real-ld stage1 ; else true ; fi\n \t-rm -f stage1/libgcc.a\n \t-cp libgcc.a stage1\n \t-if $(RANLIB_TEST) ; then $(RANLIB) stage1/libgcc.a; else true; fi\n@@ -2329,6 +2353,11 @@ stage2-start:\n \t   if [ -d stage2/$$dir ] ; then true ; else mkdir stage2/$$dir ; fi ; \\\n \t done\n \t-mv $(STAGESTUFF) stage2\n+# Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n+# dir will work properly.\n+\t-if [ -f as ] ; then cp as stage2 ; else true ; fi\n+\t-if [ -f ld ] ; then cp ld stage2 ; else true ; fi\n+\t-if [ -f real-ld ] ; then cp real-ld stage2 ; else true ; fi\n \t-rm -f stage2/libgcc.a\n \t-cp libgcc.a stage2\n \t-if $(RANLIB_TEST) ; then $(RANLIB) stage2/libgcc.a; else true; fi\n@@ -2341,6 +2370,11 @@ stage3-start:\n \t   if [ -d stage3/$$dir ] ; then true ; else mkdir stage3/$$dir ; fi ; \\\n \t done\n \t-mv $(STAGESTUFF) stage3\n+# Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n+# dir will work properly.\n+\t-if [ -f as ] ; then cp as stage3 ; else true ; fi\n+\t-if [ -f ld ] ; then cp ld stage3 ; else true ; fi\n+\t-if [ -f real-ld ] ; then cp real-ld stage3 ; else true ; fi\n \t-rm -f stage3/libgcc.a\n \t-cp libgcc.a stage3\n \t-if $(RANLIB_TEST) ; then $(RANLIB) stage3/libgcc.a; else true; fi\n@@ -2353,6 +2387,11 @@ stage4-start:\n \t   if [ -d stage4/$$dir ] ; then true ; else mkdir stage4/$$dir ; fi ; \\\n \t done\n \t-mv $(STAGESTUFF) stage4\n+# Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n+# dir will work properly.\n+\t-if [ -f as ] ; then cp as stage4 ; else true ; fi\n+\t-if [ -f ld ] ; then cp ld stage4 ; else true ; fi\n+\t-if [ -f real-ld ] ; then cp real-ld stage4 ; else true ; fi\n \t-rm -f stage4/libgcc.a\n \t-cp libgcc.a stage4\n \t-if $(RANLIB_TEST) ; then $(RANLIB) stage4/libgcc.a; else true; fi\n@@ -2364,27 +2403,47 @@ stage4: force stage4-start lang.stage4\n risky-stage1: force\n \t-if [ -d stage1 ] ; then true ; else mkdir stage1 ; fi\n \t-mv $(GCC_PARTS) stage1\n+# Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n+# dir will work properly.\n+\t-if [ -f as ] ; then cp as stage1 ; else true ; fi\n+\t-if [ -f ld ] ; then cp ld stage1 ; else true ; fi\n+\t-if [ -f real-ld ] ; then cp real-ld stage1 ; else true ; fi\n \t-rm -f stage1/libgcc.a\n \t-cp libgcc.a stage1 && $(RANLIB) stage1/libgcc.a\n \t-make clean\n \n risky-stage2: force\n \t-if [ -d stage2 ] ; then true ; else mkdir stage2 ; fi\n \t-mv $(GCC_PARTS) stage2\n+# Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n+# dir will work properly.\n+\t-if [ -f as ] ; then cp as stage2 ; else true ; fi\n+\t-if [ -f ld ] ; then cp ld stage2 ; else true ; fi\n+\t-if [ -f real-ld ] ; then cp real-ld stage2 ; else true ; fi\n \t-rm -f stage2/libgcc.a\n \t-cp libgcc.a stage2 && $(RANLIB) stage2/libgcc.a\n \t-make clean\n \n risky-stage3: force\n \t-if [ -d stage3 ] ; then true ; else mkdir stage3 ; fi\n \t-mv $(GCC_PARTS) stage3\n+# Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n+# dir will work properly.\n+\t-if [ -f as ] ; then cp as stage3 ; else true ; fi\n+\t-if [ -f ld ] ; then cp ld stage3 ; else true ; fi\n+\t-if [ -f real-ld ] ; then cp real-ld stage3 ; else true ; fi\n \t-rm -f stage3/libgcc.a\n \t-cp libgcc.a stage3 && $(RANLIB) stage3/libgcc.a\n \t-make clean\n \n risky-stage4: force\n \t-if [ -d stage4 ] ; then true ; else mkdir stage4 ; fi\n \t-mv $(GCC_PARTS) stage4\n+# Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n+# dir will work properly.\n+\t-if [ -f as ] ; then cp as stage4 ; else true ; fi\n+\t-if [ -f ld ] ; then cp ld stage4 ; else true ; fi\n+\t-if [ -f real-ld ] ; then cp real-ld stage4 ; else true ; fi\n \t-rm -f stage4/libgcc.a\n \t-cp libgcc.a stage4 && $(RANLIB) stage4/libgcc.a\n \t-make clean"}]}