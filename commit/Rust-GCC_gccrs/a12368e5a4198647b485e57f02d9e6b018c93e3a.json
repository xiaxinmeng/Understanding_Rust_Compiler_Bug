{"sha": "a12368e5a4198647b485e57f02d9e6b018c93e3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTEyMzY4ZTVhNDE5ODY0N2I0ODVlNTdmMDJkOWU2YjAxOGM5M2UzYQ==", "commit": {"author": {"name": "Rafael Avila de Espindola", "email": "espindola@google.com", "date": "2009-10-05T20:53:29Z"}, "committer": {"name": "Rafael Espindola", "email": "espindola@gcc.gnu.org", "date": "2009-10-05T20:53:29Z"}, "message": "plugin-api.h: Sync with src.\n\n2009-10-05   Rafael Espindola  <espindola@google.com>\n\n\t* plugin-api.h: Sync with src.\n\nFrom-SVN: r152472", "tree": {"sha": "e81ff7b3eb1475f6ab6d383e09074054cc08c17e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e81ff7b3eb1475f6ab6d383e09074054cc08c17e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a12368e5a4198647b485e57f02d9e6b018c93e3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a12368e5a4198647b485e57f02d9e6b018c93e3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a12368e5a4198647b485e57f02d9e6b018c93e3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a12368e5a4198647b485e57f02d9e6b018c93e3a/comments", "author": null, "committer": null, "parents": [{"sha": "da66774323ba38c87f876555a62a83867bd7e706", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da66774323ba38c87f876555a62a83867bd7e706", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da66774323ba38c87f876555a62a83867bd7e706"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "c40a1f3630b7fad9b80ccc5b334ea2ad439278e2", "filename": "include/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a12368e5a4198647b485e57f02d9e6b018c93e3a/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a12368e5a4198647b485e57f02d9e6b018c93e3a/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=a12368e5a4198647b485e57f02d9e6b018c93e3a", "patch": "@@ -1,3 +1,7 @@\n+2009-10-05   Rafael Espindola  <espindola@google.com>\n+\n+\t* plugin-api.h: Sync with src.\n+\n 2009-10-04  Jerry Quinn  <jlquinn@optonline.net>\n \n \t* plugin-api.h: Fix compile."}, {"sha": "530f3f448737f3aa1dec68e542da6ad5e8a02184", "filename": "include/plugin-api.h", "status": "modified", "additions": 29, "deletions": 2, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a12368e5a4198647b485e57f02d9e6b018c93e3a/include%2Fplugin-api.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a12368e5a4198647b485e57f02d9e6b018c93e3a/include%2Fplugin-api.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fplugin-api.h?ref=a12368e5a4198647b485e57f02d9e6b018c93e3a", "patch": "@@ -40,6 +40,7 @@ enum ld_plugin_status\n {\n   LDPS_OK = 0,\n   LDPS_NO_SYMS,         /* Attempt to get symbols that haven't been added. */\n+  LDPS_BAD_HANDLE,      /* No claimed object associated with given handle. */\n   LDPS_ERR\n   /* Additional Error codes TBD.  */\n };\n@@ -186,6 +187,20 @@ enum ld_plugin_status\n (*ld_plugin_add_symbols) (void *handle, int nsyms,\n                           const struct ld_plugin_symbol *syms);\n \n+/* The linker's interface for getting the input file information with\n+   an open (possibly re-opened) file descriptor.  */\n+\n+typedef\n+enum ld_plugin_status\n+(*ld_plugin_get_input_file) (const void *handle,\n+                             struct ld_plugin_input_file *file);\n+\n+/* The linker's interface for releasing the input file.  */\n+\n+typedef\n+enum ld_plugin_status\n+(*ld_plugin_release_input_file) (const void *handle);\n+\n /* The linker's interface for retrieving symbol resolution information.  */\n \n typedef\n@@ -199,11 +214,17 @@ typedef\n enum ld_plugin_status\n (*ld_plugin_add_input_file) (char *pathname);\n \n+/* The linker's interface for adding a library that should be searched.  */\n+\n+typedef\n+enum ld_plugin_status\n+(*ld_plugin_add_input_library) (char *pathname);\n+\n /* The linker's interface for issuing a warning or error message.  */\n \n typedef\n enum ld_plugin_status\n-(*ld_plugin_message) (int level, char *format, ...);\n+(*ld_plugin_message) (int level, const char *format, ...);\n \n enum ld_plugin_level\n {\n@@ -228,7 +249,10 @@ enum ld_plugin_tag\n   LDPT_ADD_SYMBOLS,\n   LDPT_GET_SYMBOLS,\n   LDPT_ADD_INPUT_FILE,\n-  LDPT_MESSAGE\n+  LDPT_MESSAGE,\n+  LDPT_GET_INPUT_FILE,\n+  LDPT_RELEASE_INPUT_FILE,\n+  LDPT_ADD_INPUT_LIBRARY\n };\n \n /* The plugin transfer vector.  */\n@@ -247,6 +271,9 @@ struct ld_plugin_tv\n     ld_plugin_get_symbols tv_get_symbols;\n     ld_plugin_add_input_file tv_add_input_file;\n     ld_plugin_message tv_message;\n+    ld_plugin_get_input_file tv_get_input_file;\n+    ld_plugin_release_input_file tv_release_input_file;\n+    ld_plugin_add_input_library tv_add_input_library;\n   } tv_u;\n };\n "}]}