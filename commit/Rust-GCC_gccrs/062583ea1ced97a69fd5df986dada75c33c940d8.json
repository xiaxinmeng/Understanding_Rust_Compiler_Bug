{"sha": "062583ea1ced97a69fd5df986dada75c33c940d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYyNTgzZWExY2VkOTdhNjlmZDVkZjk4NmRhZGE3NWMzM2M5NDBkOA==", "commit": {"author": {"name": "Bryce McKinlay", "email": "mckinlay@redhat.com", "date": "2004-05-27T13:05:34Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2004-05-27T13:05:34Z"}, "message": "decl.c (struct binding_level): Add GTY marker.\n\n\t* decl.c (struct binding_level): Add GTY marker. Compile\n\tbinding_depth unconditionally.\n\t(current_binding_level, free_binding_level, global_binding_level):\n\tLikewise.\n\t(clear_binding_level): Unconditionally set binding_depth.\n\t(make_binding_level): Use ggc_alloc_cleared, not xmalloc.\n\nFrom-SVN: r82323", "tree": {"sha": "c1dd751dcb0f5da3c0e9e7f082fa77ff44a2560f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1dd751dcb0f5da3c0e9e7f082fa77ff44a2560f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/062583ea1ced97a69fd5df986dada75c33c940d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/062583ea1ced97a69fd5df986dada75c33c940d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/062583ea1ced97a69fd5df986dada75c33c940d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/062583ea1ced97a69fd5df986dada75c33c940d8/comments", "author": null, "committer": null, "parents": [{"sha": "08fb03fdf38f9055a55007ab4782561ba48f1b04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08fb03fdf38f9055a55007ab4782561ba48f1b04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08fb03fdf38f9055a55007ab4782561ba48f1b04"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "b3a951b1d6c8296d35bbcce47ecbd8170b9bccd3", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062583ea1ced97a69fd5df986dada75c33c940d8/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062583ea1ced97a69fd5df986dada75c33c940d8/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=062583ea1ced97a69fd5df986dada75c33c940d8", "patch": "@@ -1,3 +1,12 @@\n+2004-05-26  Bryce McKinlay  <mckinlay@redhat.com>\n+\n+\t* decl.c (struct binding_level): Add GTY marker. Compile\n+\tbinding_depth unconditionally.\n+\t(current_binding_level, free_binding_level, global_binding_level):\n+\tLikewise.\n+\t(clear_binding_level): Unconditionally set binding_depth.\n+\t(make_binding_level): Use ggc_alloc_cleared, not xmalloc.\n+\n 2004-05-26  Bryce McKinlay  <mckinlay@redhat.com>\n \n \t* lex.c (java_new_lexer): Set 'encoding'."}, {"sha": "632f0c8bc35346889da2ccb4cc74e2336f70b25d", "filename": "gcc/java/decl.c", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062583ea1ced97a69fd5df986dada75c33c940d8/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062583ea1ced97a69fd5df986dada75c33c940d8/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=062583ea1ced97a69fd5df986dada75c33c940d8", "patch": "@@ -281,7 +281,7 @@ find_stack_slot (int index, tree type)\n \t\t\t      type, -1);\n }\n \n-struct binding_level\n+struct binding_level GTY(())\n   {\n     /* A chain of _DECL nodes for all variables, constants, functions,\n      * and typedef types.  These are in the reverse of the order supplied.\n@@ -314,27 +314,25 @@ struct binding_level\n     /* The statements in this binding level.  */\n     tree stmts;\n \n-#if defined(DEBUG_JAVA_BINDING_LEVELS)\n-    /* Binding depth at which this level began.  */\n+    /* Binding depth at which this level began.  Used only for debugging.  */\n     unsigned binding_depth;\n-#endif /* defined(DEBUG_JAVA_BINDING_LEVELS) */\n   };\n \n #define NULL_BINDING_LEVEL (struct binding_level *) NULL\n \n /* The binding level currently in effect.  */\n \n-static struct binding_level *current_binding_level;\n+static GTY(()) struct binding_level *current_binding_level;\n \n /* A chain of binding_level structures awaiting reuse.  */\n \n-static struct binding_level *free_binding_level;\n+static GTY(()) struct binding_level *free_binding_level;\n \n /* The outermost binding level, for names of file scope.\n    This is created when the compiler is started and exists\n    through the entire run.  */\n \n-static struct binding_level *global_binding_level;\n+static GTY(()) struct binding_level *global_binding_level;\n \n /* A PC value bigger than any PC value we may ever may encounter. */\n \n@@ -344,11 +342,7 @@ static struct binding_level *global_binding_level;\n \n static const struct binding_level clear_binding_level\n   = {NULL_TREE, NULL_TREE, NULL_TREE, NULL_TREE,\n-     NULL_BINDING_LEVEL, LARGEST_PC, 0, NULL,\n-#if defined(DEBUG_JAVA_BINDING_LEVELS)\n-     0,\n-#endif /* defined(DEBUG_JAVA_BINDING_LEVELS) */\n-};\n+     NULL_BINDING_LEVEL, LARGEST_PC, 0, NULL_TREE, 0};\n \n #if 0\n /* A list (chain of TREE_LIST nodes) of all LABEL_DECLs in the function\n@@ -1200,7 +1194,7 @@ static struct binding_level *\n make_binding_level (void)\n {\n   /* NOSTRICT */\n-  return xmalloc (sizeof (struct binding_level));\n+  return ggc_alloc_cleared (sizeof (struct binding_level));\n }\n \n void"}]}