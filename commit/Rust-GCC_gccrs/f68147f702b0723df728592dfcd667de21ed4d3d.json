{"sha": "f68147f702b0723df728592dfcd667de21ed4d3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY4MTQ3ZjcwMmIwNzIzZGY3Mjg1OTJkZmNkNjY3ZGUyMWVkNGQzZA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2001-03-13T19:32:00Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-03-13T19:32:00Z"}, "message": "new: Remove pragma interface.\n\n\n2001-03-13  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* libsupc++/new: Remove pragma interface.\n\t* libsupc++/typeinfo: Same.\n\t* libsupc++/exception: Same.\n\t* libsupc++/new_handler.cc: Remove pragma implementation.\n\t(bad_alloc::~bad_alloc()): Add.\n\t* libsupc++/exception_support.cc: Same.\n\t(exception::~exception): Add.\n\t(bad_exception::~bad_exception): Add.\n\t* libsupc++/tinfo.cc: Same.\n\t(bad_cast::~bad_cast): Add.\n\t(bad_typeid::~bad_typeid): Add.\n\nFrom-SVN: r40442", "tree": {"sha": "c7c801d8135b3204b36fcdb537f8ee2a0f57e31a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7c801d8135b3204b36fcdb537f8ee2a0f57e31a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f68147f702b0723df728592dfcd667de21ed4d3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f68147f702b0723df728592dfcd667de21ed4d3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f68147f702b0723df728592dfcd667de21ed4d3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f68147f702b0723df728592dfcd667de21ed4d3d/comments", "author": null, "committer": null, "parents": [{"sha": "65aac28aa2837f43df0d36a1e6368d1836946669", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65aac28aa2837f43df0d36a1e6368d1836946669", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65aac28aa2837f43df0d36a1e6368d1836946669"}], "stats": {"total": 48, "additions": 33, "deletions": 15}, "files": [{"sha": "fea829a5acb2545103c4171bc545a8a75940dd01", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f68147f702b0723df728592dfcd667de21ed4d3d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f68147f702b0723df728592dfcd667de21ed4d3d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f68147f702b0723df728592dfcd667de21ed4d3d", "patch": "@@ -1,3 +1,17 @@\n+2001-03-13  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* libsupc++/new: Remove pragma interface.\n+\t* libsupc++/typeinfo: Same.\n+\t* libsupc++/exception: Same.\n+\t* libsupc++/new_handler.cc: Remove pragma implementation. \n+\t(bad_alloc::~bad_alloc()): Add.\n+\t* libsupc++/exception_support.cc: Same.\n+\t(exception::~exception): Add.\n+\t(bad_exception::~bad_exception): Add.\n+\t* libsupc++/tinfo.cc: Same.\n+\t(bad_cast::~bad_cast): Add.\n+\t(bad_typeid::~bad_typeid): Add.\n+\n 2001-03-13  Phil Edwards  <pme@sources.redhat.com>\n \n \t* mkcheck.in:  Fix IFS regression for non-bash-2.01 hosts."}, {"sha": "3676a7314816ce7a6fdceb47abdd4614f0f876ed", "filename": "libstdc++-v3/libsupc++/exception", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f68147f702b0723df728592dfcd667de21ed4d3d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f68147f702b0723df728592dfcd667de21ed4d3d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception?ref=f68147f702b0723df728592dfcd667de21ed4d3d", "patch": "@@ -31,8 +31,6 @@\n #ifndef __EXCEPTION__\n #define __EXCEPTION__\n \n-#pragma interface \"exception\"\n-\n extern \"C++\" {\n \n namespace std \n@@ -41,15 +39,15 @@ namespace std\n   {\n   public:\n     exception() throw() { }\n-    virtual ~exception() throw() { }\n+    virtual ~exception() throw();\n     virtual const char* what() const throw();\n   };\n \n   class bad_exception : public exception \n   {\n   public:\n     bad_exception() throw() { }\n-    virtual ~bad_exception() throw() { }\n+    virtual ~bad_exception() throw();\n   };\n \n   typedef void (*terminate_handler) ();"}, {"sha": "48adafa4ab907baf5829b8072a64da8dc1902694", "filename": "libstdc++-v3/libsupc++/exception_support.cc", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f68147f702b0723df728592dfcd667de21ed4d3d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception_support.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f68147f702b0723df728592dfcd667de21ed4d3d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception_support.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception_support.cc?ref=f68147f702b0723df728592dfcd667de21ed4d3d", "patch": "@@ -29,8 +29,6 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-#pragma implementation \"exception\"\n-\n #include \"typeinfo\"\n #include \"exception\"\n #include <cstddef>\n@@ -377,6 +375,14 @@ std::uncaught_exception() throw()\n   return p && ! p->caught;\n }\n \n+std::exception::~exception() throw() { }\n+\n+std::bad_exception::~bad_exception() throw() { }\n+\n const char* \n std::exception::what() const throw()\n { return typeid (*this).name (); }\n+\n+\n+\n+"}, {"sha": "56cc1833fe8e92960d770f83593549a73ee5c550", "filename": "libstdc++-v3/libsupc++/new", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f68147f702b0723df728592dfcd667de21ed4d3d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f68147f702b0723df728592dfcd667de21ed4d3d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew?ref=f68147f702b0723df728592dfcd667de21ed4d3d", "patch": "@@ -31,7 +31,6 @@\n #ifndef __NEW__\n #define __NEW__\n \n-#pragma interface \"new\"\n #include <cstddef>\n #include <exception>\n \n@@ -42,7 +41,8 @@ namespace std\n   class bad_alloc : public exception \n   {\n   public:\n-    virtual const char* what() const throw() { return \"bad_alloc\"; }\n+    bad_alloc() throw() { }\n+    virtual ~bad_alloc() throw();\n   };\n \n   struct nothrow_t { };"}, {"sha": "8c1628f4f71a35c816aedfc872c1263cce26da62", "filename": "libstdc++-v3/libsupc++/new_handler.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f68147f702b0723df728592dfcd667de21ed4d3d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew_handler.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f68147f702b0723df728592dfcd667de21ed4d3d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew_handler.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew_handler.cc?ref=f68147f702b0723df728592dfcd667de21ed4d3d", "patch": "@@ -28,7 +28,6 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-#pragma implementation \"new\"\n #include \"new\"\n \n const std::nothrow_t std::nothrow = { };\n@@ -43,3 +42,5 @@ std::set_new_handler (new_handler handler)\n   __new_handler = handler;\n   return prev_handler;\n }\n+\n+std::bad_alloc::~bad_alloc() throw() { }"}, {"sha": "732609cf0482b48f710d4d77dfe7a258cd6428d8", "filename": "libstdc++-v3/libsupc++/tinfo.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f68147f702b0723df728592dfcd667de21ed4d3d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Ftinfo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f68147f702b0723df728592dfcd667de21ed4d3d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Ftinfo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Ftinfo.cc?ref=f68147f702b0723df728592dfcd667de21ed4d3d", "patch": "@@ -27,8 +27,6 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-#pragma implementation \"typeinfo\"\n-\n #include <cstddef>\n #include \"tinfo.h\"\n #include \"new\"\t\t\t// for placement new\n@@ -41,6 +39,9 @@ std::type_info::\n ~type_info ()\n { }\n \n+std::bad_cast::~bad_cast() throw() { }\n+std::bad_typeid::~bad_typeid() throw() { }\n+\n #if !__GXX_MERGED_TYPEINFO_NAMES\n \n // We can't rely on common symbols being shared between shared objects."}, {"sha": "8d8133b6a5c5da2f7875f865b3b5a59801caf7a7", "filename": "libstdc++-v3/libsupc++/typeinfo", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f68147f702b0723df728592dfcd667de21ed4d3d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Ftypeinfo", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f68147f702b0723df728592dfcd667de21ed4d3d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Ftypeinfo", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Ftypeinfo?ref=f68147f702b0723df728592dfcd667de21ed4d3d", "patch": "@@ -30,8 +30,6 @@\n #ifndef __TYPEINFO__\n #define __TYPEINFO__\n \n-#pragma interface \"typeinfo\"\n-\n #include <exception>\n \n extern \"C++\" {\n@@ -118,14 +116,14 @@ namespace std\n   {\n   public:\n     bad_cast() throw() { }\n-    virtual ~bad_cast() throw() { }\n+    virtual ~bad_cast() throw();\n   };\n   \n   class bad_typeid : public exception \n   {\n   public:\n     bad_typeid () throw() { }\n-    virtual ~bad_typeid () throw() { }\n+    virtual ~bad_typeid () throw();\n   };\n } // namespace std\n "}]}