{"sha": "6b2b88712792698e1348e585ab91fa8518a250f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmIyYjg4NzEyNzkyNjk4ZTEzNDhlNTg1YWI5MWZhODUxOGEyNTBmMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-03-17T17:46:23Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-03-17T17:46:23Z"}, "message": "re PR middle-end/39443 (Builtin redirection no longer working for memcmp)\n\n\tPR middle-end/39443\n\t* optabs.c (set_user_assembler_libfunc): New function.\n\t* expr.h (set_user_assembler_libfunc): New prototype.\n\t* c-common.c: Include libfuncs.h.\n\t(set_builtin_user_assembler_name): Call set_user_assembler_libfunc\n\tfor memcmp, memset, memcpy, memmove and abort.\n\t* Makefile.in (c-common.o): Depend on libfuncs.h.\n\n\t* gcc.dg/pr39443.c: New test.\n\nFrom-SVN: r144910", "tree": {"sha": "1561d673290eb404bb41c2a5161a6ff3f15f7b15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1561d673290eb404bb41c2a5161a6ff3f15f7b15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b2b88712792698e1348e585ab91fa8518a250f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b2b88712792698e1348e585ab91fa8518a250f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b2b88712792698e1348e585ab91fa8518a250f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b2b88712792698e1348e585ab91fa8518a250f0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "16e60c1706a8abf971d1ae216a33cc7e2f29e3c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16e60c1706a8abf971d1ae216a33cc7e2f29e3c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16e60c1706a8abf971d1ae216a33cc7e2f29e3c5"}], "stats": {"total": 79, "additions": 73, "deletions": 6}, "files": [{"sha": "7af0db068e42dc750ec5a0d9cb10a119bd1353ff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b2b88712792698e1348e585ab91fa8518a250f0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b2b88712792698e1348e585ab91fa8518a250f0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b2b88712792698e1348e585ab91fa8518a250f0", "patch": "@@ -1,5 +1,13 @@\n 2009-03-17  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/39443\n+\t* optabs.c (set_user_assembler_libfunc): New function.\n+\t* expr.h (set_user_assembler_libfunc): New prototype.\n+\t* c-common.c: Include libfuncs.h.\n+\t(set_builtin_user_assembler_name): Call set_user_assembler_libfunc\n+\tfor memcmp, memset, memcpy, memmove and abort.\n+\t* Makefile.in (c-common.o): Depend on libfuncs.h.\n+\n \tPR debug/39412\n \t* dwarf2out.c (gen_inlined_enumeration_type_die,\n \tgen_inlined_structure_type_die, gen_inlined_union_type_die,"}, {"sha": "d4d6683b32f8bc1591c50bb88734ea73d0c2a108", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b2b88712792698e1348e585ab91fa8518a250f0/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b2b88712792698e1348e585ab91fa8518a250f0/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=6b2b88712792698e1348e585ab91fa8518a250f0", "patch": "@@ -1890,7 +1890,7 @@ c-common.o : c-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n \t$(TARGET_H) $(C_TREE_H) tree-iterator.h langhooks.h tree-mudflap.h \\\n \tintl.h opts.h $(REAL_H) $(CPPLIB_H) $(TREE_INLINE_H) $(HASHTAB_H) \\\n \t$(BUILTINS_DEF) $(CGRAPH_H) $(BASIC_BLOCK_H) $(TARGET_DEF_H) \\\n-\t$(GIMPLE_H)\n+\t$(GIMPLE_H) libfuncs.h\n \n c-pretty-print.o : c-pretty-print.c $(C_PRETTY_PRINT_H) \\\n \t$(C_TREE_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(REAL_H) \\"}, {"sha": "cc00511cc0c912f5dcdda29e68016c6736792bf0", "filename": "gcc/c-common.c", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b2b88712792698e1348e585ab91fa8518a250f0/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b2b88712792698e1348e585ab91fa8518a250f0/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=6b2b88712792698e1348e585ab91fa8518a250f0", "patch": "@@ -51,6 +51,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target-def.h\"\n #include \"gimple.h\"\n #include \"fixed-value.h\"\n+#include \"libfuncs.h\"\n \n cpp_reader *parse_in;\t\t/* Declared in c-pragma.h.  */\n \n@@ -4401,10 +4402,28 @@ set_builtin_user_assembler_name (tree decl, const char *asmspec)\n \n   builtin = built_in_decls [DECL_FUNCTION_CODE (decl)];\n   set_user_assembler_name (builtin, asmspec);\n-  if (DECL_FUNCTION_CODE (decl) == BUILT_IN_MEMCPY)\n-    init_block_move_fn (asmspec);\n-  else if (DECL_FUNCTION_CODE (decl) == BUILT_IN_MEMSET)\n-    init_block_clear_fn (asmspec);\n+  switch (DECL_FUNCTION_CODE (decl))\n+    {\n+    case BUILT_IN_MEMCPY:\n+      init_block_move_fn (asmspec);\n+      memcpy_libfunc = set_user_assembler_libfunc (\"memcpy\", asmspec);\n+      break;\n+    case BUILT_IN_MEMSET:\n+      init_block_clear_fn (asmspec);\n+      memset_libfunc = set_user_assembler_libfunc (\"memset\", asmspec);\n+      break;\n+    case BUILT_IN_MEMMOVE:\n+      memmove_libfunc = set_user_assembler_libfunc (\"memmove\", asmspec);\n+      break;\n+    case BUILT_IN_MEMCMP:\n+      memcmp_libfunc = set_user_assembler_libfunc (\"memcmp\", asmspec);\n+      break;\n+    case BUILT_IN_ABORT:\n+      abort_libfunc = set_user_assembler_libfunc (\"abort\", asmspec);\n+      break;\n+    default:\n+      break;\n+    }\n }\n \n /* The number of named compound-literals generated thus far.  */"}, {"sha": "216de87feb13c3269dfa0b0f98549fe1914d61a1", "filename": "gcc/expr.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b2b88712792698e1348e585ab91fa8518a250f0/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b2b88712792698e1348e585ab91fa8518a250f0/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=6b2b88712792698e1348e585ab91fa8518a250f0", "patch": "@@ -1,6 +1,6 @@\n /* Definitions for code generation pass of GNU compiler.\n    Copyright (C) 1987, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -786,6 +786,7 @@ extern void init_all_optabs (void);\n \n /* Call this to initialize an optab function entry.  */\n extern rtx init_one_libfunc (const char *);\n+extern rtx set_user_assembler_libfunc (const char *, const char *);\n \n extern int vector_mode_valid_p (enum machine_mode);\n "}, {"sha": "f7e44db48c2b4ddcdc9c8fb0df46ce31d6ba7f8e", "filename": "gcc/optabs.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b2b88712792698e1348e585ab91fa8518a250f0/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b2b88712792698e1348e585ab91fa8518a250f0/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=6b2b88712792698e1348e585ab91fa8518a250f0", "patch": "@@ -6072,6 +6072,24 @@ init_one_libfunc (const char *name)\n   return XEXP (DECL_RTL (decl), 0);\n }\n \n+/* Adjust the assembler name of libfunc NAME to ASMSPEC.  */\n+\n+rtx\n+set_user_assembler_libfunc (const char *name, const char *asmspec)\n+{\n+  tree id, decl;\n+  void **slot;\n+  hashval_t hash;\n+\n+  id = get_identifier (name);\n+  hash = htab_hash_string (name);\n+  slot = htab_find_slot_with_hash (libfunc_decls, id, hash, NO_INSERT);\n+  gcc_assert (slot);\n+  decl = (tree) *slot;\n+  set_user_assembler_name (decl, asmspec);\n+  return XEXP (DECL_RTL (decl), 0);\n+}\n+\n /* Call this to reset the function entry for one optab (OPTABLE) in mode\n    MODE to NAME, which should be either 0 or a string constant.  */\n void"}, {"sha": "ae361a5c7e75307f168cd909e74eb81b9760e767", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b2b88712792698e1348e585ab91fa8518a250f0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b2b88712792698e1348e585ab91fa8518a250f0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6b2b88712792698e1348e585ab91fa8518a250f0", "patch": "@@ -1,5 +1,8 @@\n 2009-03-17  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/39443\n+\t* gcc.dg/pr39443.c: New test.\n+\n \tPR debug/39412\n \t* gcc.dg/debug/pr39412.c: New test.\n "}, {"sha": "1baa63a9985309f1f8960311efd07be4b336b2e5", "filename": "gcc/testsuite/gcc.dg/pr39443.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b2b88712792698e1348e585ab91fa8518a250f0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr39443.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b2b88712792698e1348e585ab91fa8518a250f0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr39443.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr39443.c?ref=6b2b88712792698e1348e585ab91fa8518a250f0", "patch": "@@ -0,0 +1,18 @@\n+/* PR middle-end/39443 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-final { scan-assembler-not \"memcmp\" } } */\n+\n+typedef __SIZE_TYPE__ size_t;\n+\n+extern int memcmp (const void *s1, const void *s2, size_t n)\n+  __attribute__ ((__nothrow__, __pure__));\n+extern __typeof (memcmp) memcmp __asm__ (\"memory_compare\");\n+\n+int\n+test (char *s, char *t, int cnt)\n+{\n+  if (__builtin_expect (cnt, 0))\n+    return memcmp (s, t, cnt);\n+  return 0;\n+}"}]}