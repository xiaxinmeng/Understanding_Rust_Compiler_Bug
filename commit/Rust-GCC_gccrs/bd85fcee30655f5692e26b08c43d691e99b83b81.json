{"sha": "bd85fcee30655f5692e26b08c43d691e99b83b81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ4NWZjZWUzMDY1NWY1NjkyZTI2YjA4YzQzZDY5MWU5OWI4M2I4MQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2007-08-11T23:14:24Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2007-08-11T23:14:24Z"}, "message": "cgraphunit.c (record_cdtor_fn): Declare all cdtors always inlined.\n\n\n\t* cgraphunit.c (record_cdtor_fn): Declare all cdtors always inlined.\n\t(cgraph_process_new_functions): Honor previous value of\n\tdisregard_inline_limits.\n\t* ipa-inline.c (compute_inline_parameters): Likewise.\n\nFrom-SVN: r127365", "tree": {"sha": "f0954f84995a9bca9019f39db8adc5a403c44459", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0954f84995a9bca9019f39db8adc5a403c44459"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd85fcee30655f5692e26b08c43d691e99b83b81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd85fcee30655f5692e26b08c43d691e99b83b81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd85fcee30655f5692e26b08c43d691e99b83b81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd85fcee30655f5692e26b08c43d691e99b83b81/comments", "author": null, "committer": null, "parents": [{"sha": "2b840e50679f5b3208241746984cd2f195785f02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b840e50679f5b3208241746984cd2f195785f02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b840e50679f5b3208241746984cd2f195785f02"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "834db6708a0f1e9ffe1b19d9277aef8007eaf25b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd85fcee30655f5692e26b08c43d691e99b83b81/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd85fcee30655f5692e26b08c43d691e99b83b81/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd85fcee30655f5692e26b08c43d691e99b83b81", "patch": "@@ -1,3 +1,10 @@\n+2007-08-11  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cgraphunit.c (record_cdtor_fn): Declare all cdtors always inlined.\n+\t(cgraph_process_new_functions): Honor previous value of\n+\tdisregard_inline_limits.\n+\t* ipa-inline.c (compute_inline_parameters): Likewise.\n+\n 2007-08-11  Ian Lance Taylor  <iant@google.com>\n \n \t* alias.h (alias_set_type): Define new type."}, {"sha": "f810c278b665c6594b25bf5f8c2e4b556a66bca8", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd85fcee30655f5692e26b08c43d691e99b83b81/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd85fcee30655f5692e26b08c43d691e99b83b81/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=bd85fcee30655f5692e26b08c43d691e99b83b81", "patch": "@@ -180,21 +180,26 @@ static GTY (()) tree static_dtors;\n static void\n record_cdtor_fn (tree fndecl)\n {\n-  if (targetm.have_ctors_dtors)\n+  struct cgraph_node *node;\n+  if (targetm.have_ctors_dtors\n+      || (!DECL_STATIC_CONSTRUCTOR (fndecl)\n+\t  && !DECL_STATIC_DESTRUCTOR (fndecl)))\n     return;\n \n   if (DECL_STATIC_CONSTRUCTOR (fndecl))\n     {\n       static_ctors = tree_cons (NULL_TREE, fndecl, static_ctors);\n       DECL_STATIC_CONSTRUCTOR (fndecl) = 0;\n-      cgraph_mark_reachable_node (cgraph_node (fndecl));\n     }\n   if (DECL_STATIC_DESTRUCTOR (fndecl))\n     {\n       static_dtors = tree_cons (NULL_TREE, fndecl, static_dtors);\n       DECL_STATIC_DESTRUCTOR (fndecl) = 0;\n-      cgraph_mark_reachable_node (cgraph_node (fndecl));\n     }\n+  DECL_INLINE (fndecl) = 1;\n+  node = cgraph_node (fndecl);\n+  node->local.disregard_inline_limits = 1;\n+  cgraph_mark_reachable_node (node);\n }\n \n /* Synthesize a function which calls all the global ctors or global\n@@ -376,7 +381,7 @@ cgraph_process_new_functions (void)\n \t  node->local.self_insns = estimate_num_insns (fndecl,\n \t\t\t\t\t\t       &eni_inlining_weights);\n \t  node->local.disregard_inline_limits\n-\t    = lang_hooks.tree_inlining.disregard_inline_limits (fndecl);\n+\t    |= lang_hooks.tree_inlining.disregard_inline_limits (fndecl);\n \t  /* Inlining characteristics are maintained by the\n \t     cgraph_mark_inline.  */\n \t  node->global.insns = node->local.self_insns;"}, {"sha": "21b894f7f5342eda3961b2d65c455b0116235d44", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd85fcee30655f5692e26b08c43d691e99b83b81/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd85fcee30655f5692e26b08c43d691e99b83b81/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=bd85fcee30655f5692e26b08c43d691e99b83b81", "patch": "@@ -1527,7 +1527,7 @@ compute_inline_parameters (void)\n   node->local.inlinable = tree_inlinable_function_p (current_function_decl);\n   node->local.self_insns = estimate_num_insns (current_function_decl,\n \t\t\t\t\t       &eni_inlining_weights);\n-  if (node->local.inlinable)\n+  if (node->local.inlinable && !node->local.disregard_inline_limits)\n     node->local.disregard_inline_limits\n       = lang_hooks.tree_inlining.disregard_inline_limits (current_function_decl);\n   if (flag_really_no_inline && !node->local.disregard_inline_limits)"}]}