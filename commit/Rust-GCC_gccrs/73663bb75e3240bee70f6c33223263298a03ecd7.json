{"sha": "73663bb75e3240bee70f6c33223263298a03ecd7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM2NjNiYjc1ZTMyNDBiZWU3MGY2YzMzMjIzMjYzMjk4YTAzZWNkNw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2007-02-16T00:42:11Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2007-02-16T00:42:11Z"}, "message": "lower-subreg.c (move_eh_region_note): New static function.\n\n./:\t* lower-subreg.c (move_eh_region_note): New static function.\n\t(resolve_simple_move): Call it.\n\t(decompose_multiword_subregs): Track blocks for which we resolve a\n\tsimple move which is also a control flow insn.  Pass them to\n\tfind_many_sub_basic_blocks.\n\t(pass_lower_subreg): Add TODO_verify_flow.\n\t(pass_lower_subreg2): Likewise.\ntestsuite/:\n\t* g++.dg/eh/subreg-1.C: New test.\n\nFrom-SVN: r122025", "tree": {"sha": "27124f097b1f1b28de1e3429a91b3725b2071fb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27124f097b1f1b28de1e3429a91b3725b2071fb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73663bb75e3240bee70f6c33223263298a03ecd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73663bb75e3240bee70f6c33223263298a03ecd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73663bb75e3240bee70f6c33223263298a03ecd7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73663bb75e3240bee70f6c33223263298a03ecd7/comments", "author": null, "committer": null, "parents": [{"sha": "845a9c4e61264983bdeeb77061afcd2cb6da5206", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/845a9c4e61264983bdeeb77061afcd2cb6da5206", "html_url": "https://github.com/Rust-GCC/gccrs/commit/845a9c4e61264983bdeeb77061afcd2cb6da5206"}], "stats": {"total": 111, "additions": 103, "deletions": 8}, "files": [{"sha": "f36c288bc95bfeb632f4410b7421b75a5b7146f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73663bb75e3240bee70f6c33223263298a03ecd7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73663bb75e3240bee70f6c33223263298a03ecd7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=73663bb75e3240bee70f6c33223263298a03ecd7", "patch": "@@ -1,3 +1,13 @@\n+2007-02-15  Ian Lance Taylor  <iant@google.com>\n+\n+\t* lower-subreg.c (move_eh_region_note): New static function.\n+\t(resolve_simple_move): Call it.\n+\t(decompose_multiword_subregs): Track blocks for which we resolve a\n+\tsimple move which is also a control flow insn.  Pass them to\n+\tfind_many_sub_basic_blocks.\n+\t(pass_lower_subreg): Add TODO_verify_flow.\n+\t(pass_lower_subreg2): Likewise.\n+\n 2007-02-15  Sandra Loosemore  <sandra@codesourcery.com>\n \t    Brooks Moses  <brooks.moses@codesourcery.com>\n \t    Lee Millward  <lee.millward@codesourcery.com>"}, {"sha": "22a40e629b1bce65b8ab556756292f1bf05e7822", "filename": "gcc/lower-subreg.c", "status": "modified", "additions": 48, "deletions": 8, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73663bb75e3240bee70f6c33223263298a03ecd7/gcc%2Flower-subreg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73663bb75e3240bee70f6c33223263298a03ecd7/gcc%2Flower-subreg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flower-subreg.c?ref=73663bb75e3240bee70f6c33223263298a03ecd7", "patch": "@@ -521,6 +521,31 @@ resolve_subreg_use (rtx *px, void *data)\n   return 0;\n }\n \n+/* We are deleting INSN.  Move any EH_REGION notes to INSNS.  */\n+\n+static void\n+move_eh_region_note (rtx insn, rtx insns)\n+{\n+  rtx note, p;\n+\n+  note = find_reg_note (insn, REG_EH_REGION, NULL_RTX);\n+  if (note == NULL_RTX)\n+    return;\n+\n+  gcc_assert (CALL_P (insn)\n+\t      || (flag_non_call_exceptions && may_trap_p (PATTERN (insn))));\n+\n+  for (p = insns; p != NULL_RTX; p = NEXT_INSN (p))\n+    {\n+      if (CALL_P (p)\n+\t  || (flag_non_call_exceptions\n+\t      && INSN_P (p)\n+\t      && may_trap_p (PATTERN (p))))\n+\tREG_NOTES (p) = gen_rtx_EXPR_LIST (REG_EH_REGION, XEXP (note, 0),\n+\t\t\t\t\t   REG_NOTES (p));\n+    }\n+}\n+\n /* If there is a REG_LIBCALL note on OLD_START, move it to NEW_START,\n    and link the corresponding REG_RETVAL note to NEW_START.  */\n \n@@ -837,6 +862,8 @@ resolve_simple_move (rtx set, rtx insn)\n   insns = get_insns ();\n   end_sequence ();\n \n+  move_eh_region_note (insn, insns);\n+\n   emit_insn_before (insns, insn);\n \n   move_libcall_note (insn, insns);\n@@ -1022,15 +1049,18 @@ decompose_multiword_subregs (bool update_life)\n     {\n       int hold_no_new_pseudos = no_new_pseudos;\n       int max_regno = max_reg_num ();\n-      sbitmap blocks;\n+      sbitmap life_blocks;\n+      sbitmap sub_blocks;\n       bitmap_iterator iter;\n       unsigned int regno;\n \n       propagate_pseudo_copies ();\n \n       no_new_pseudos = 0;\n-      blocks = sbitmap_alloc (last_basic_block);\n-      sbitmap_zero (blocks);\n+      life_blocks = sbitmap_alloc (last_basic_block);\n+      sbitmap_zero (life_blocks);\n+      sub_blocks = sbitmap_alloc (last_basic_block);\n+      sbitmap_zero (sub_blocks);\n \n       EXECUTE_IF_SET_IN_BITMAP (decomposable_context, 0, regno, iter)\n \tdecompose_register (regno);\n@@ -1073,6 +1103,7 @@ decompose_multiword_subregs (bool update_life)\n \t\t  if (set)\n \t\t    {\n \t\t      rtx orig_insn = insn;\n+\t\t      bool cfi = control_flow_insn_p (insn);\n \n \t\t      insn = resolve_simple_move (set, insn);\n \t\t      if (insn != orig_insn)\n@@ -1081,6 +1112,9 @@ decompose_multiword_subregs (bool update_life)\n \n \t\t\t  recog_memoized (insn);\n \t\t\t  extract_insn (insn);\n+\n+\t\t\t  if (cfi)\n+\t\t\t    SET_BIT (sub_blocks, bb->index);\n \t\t\t}\n \t\t    }\n \n@@ -1111,7 +1145,7 @@ decompose_multiword_subregs (bool update_life)\n \n \t      if (changed)\n \t\t{\n-\t\t  SET_BIT (blocks, bb->index);\n+\t\t  SET_BIT (life_blocks, bb->index);\n \t\t  reg_scan_update (insn, next, max_regno);\n \t\t}\n \t    }\n@@ -1120,10 +1154,14 @@ decompose_multiword_subregs (bool update_life)\n       no_new_pseudos = hold_no_new_pseudos;\n \n       if (update_life)\n-\tupdate_life_info (blocks, UPDATE_LIFE_GLOBAL_RM_NOTES,\n+\tupdate_life_info (life_blocks, UPDATE_LIFE_GLOBAL_RM_NOTES,\n \t\t\t  PROP_DEATH_NOTES);\n \n-      sbitmap_free (blocks);\n+      if (sbitmap_first_set_bit (sub_blocks) >= 0)\n+\tfind_many_sub_basic_blocks (sub_blocks);\n+\n+      sbitmap_free (life_blocks);\n+      sbitmap_free (sub_blocks);\n     }\n \n   {\n@@ -1181,7 +1219,8 @@ struct tree_opt_pass pass_lower_subreg =\n   0,                                    /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n   TODO_dump_func |\n-  TODO_ggc_collect,                     /* todo_flags_finish */\n+  TODO_ggc_collect |\n+  TODO_verify_flow,                     /* todo_flags_finish */\n   'u'                                   /* letter */\n };\n \n@@ -1199,6 +1238,7 @@ struct tree_opt_pass pass_lower_subreg2 =\n   0,                                    /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n   TODO_dump_func |\n-  TODO_ggc_collect,                     /* todo_flags_finish */\n+  TODO_ggc_collect |\n+  TODO_verify_flow,                     /* todo_flags_finish */\n   'U'                                   /* letter */\n };"}, {"sha": "191cb00bf6211d1e14502d14c908055274a99bd6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73663bb75e3240bee70f6c33223263298a03ecd7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73663bb75e3240bee70f6c33223263298a03ecd7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=73663bb75e3240bee70f6c33223263298a03ecd7", "patch": "@@ -1,3 +1,7 @@\n+2007-02-15  Ian Lance Taylor  <iant@google.com>\n+\n+\t* g++.dg/eh/subreg-1.C: New test.\n+\n 2007-02-15  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n \tPR c/26494"}, {"sha": "1ac976dae61a4182dcb397f0dbb4377e21480ebe", "filename": "gcc/testsuite/g++.dg/eh/subreg-1.C", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73663bb75e3240bee70f6c33223263298a03ecd7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fsubreg-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73663bb75e3240bee70f6c33223263298a03ecd7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fsubreg-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fsubreg-1.C?ref=73663bb75e3240bee70f6c33223263298a03ecd7", "patch": "@@ -0,0 +1,41 @@\n+/* The lower-subreg pass would ICE on this test case with\n+   TODO_verify_flow on 32-bit PowerPC.  It didn't handle REG_EH_REGION\n+   notes correctly.  This is reduced from interpret.cc in libjava.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fnon-call-exceptions\" } */\n+\n+union _Jv_word\n+{\n+  double *o;\n+  int i;\n+  int ia[1];\n+};\n+union _Jv_word2\n+{\n+  int ia[2];\n+  double d;\n+};\n+\n+class _Jv_InterpMethod\n+{\n+  static void run_debug (_Jv_word *);\n+};\n+\n+void\n+_Jv_InterpMethod::run_debug (_Jv_word *sp)\n+{\n+  try\n+  {\n+    {\n+      int index = ((int) (--sp)->i);\n+      double *arr = (double *) ((--sp)->o);\n+      _Jv_word2 w2;\n+      w2.d = arr[index];\n+      (sp++)->ia[0] = w2.ia[0];\n+    }\n+  }\n+  catch (int * ex)\n+  {\n+  }\n+}"}]}