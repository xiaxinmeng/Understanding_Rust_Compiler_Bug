{"sha": "83a416b095d7bcd52ed95cfefc3ea51baddc5b87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNhNDE2YjA5NWQ3YmNkNTJlZDk1Y2ZlZmMzZWE1MWJhZGRjNWI4Nw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-04-07T10:15:05Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-04-07T10:15:05Z"}, "message": "re PR rtl-optimization/42617 (TARGET_MEM_REF and plain INDIRECT_REFs are not handled by the RTL oracle)\n\n2010-04-07  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/42617\n\t* expr.c (expand_expr_real_1): For TARGET_MEM_REFs with\n\tpointer bases build simple mem attributes to retain\n\tpoints-to information.\n\nFrom-SVN: r158048", "tree": {"sha": "f1d76dbdf1132745f7deb2e31b0d2c6149ec453b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1d76dbdf1132745f7deb2e31b0d2c6149ec453b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83a416b095d7bcd52ed95cfefc3ea51baddc5b87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83a416b095d7bcd52ed95cfefc3ea51baddc5b87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83a416b095d7bcd52ed95cfefc3ea51baddc5b87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83a416b095d7bcd52ed95cfefc3ea51baddc5b87/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6addabbbe815be8107207fcb6e2aa640e2e8c6ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6addabbbe815be8107207fcb6e2aa640e2e8c6ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6addabbbe815be8107207fcb6e2aa640e2e8c6ca"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "b4aa73ebee4aa047bc7edb41861e4b3e35f8aeef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83a416b095d7bcd52ed95cfefc3ea51baddc5b87/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83a416b095d7bcd52ed95cfefc3ea51baddc5b87/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=83a416b095d7bcd52ed95cfefc3ea51baddc5b87", "patch": "@@ -1,3 +1,10 @@\n+2010-04-07  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/42617\n+\t* expr.c (expand_expr_real_1): For TARGET_MEM_REFs with\n+\tpointer bases build simple mem attributes to retain\n+\tpoints-to information.\n+\n 2010-04-07  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/42617"}, {"sha": "1f04ffb3bb44388e8521b8d28c6694173473b551", "filename": "gcc/expr.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83a416b095d7bcd52ed95cfefc3ea51baddc5b87/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83a416b095d7bcd52ed95cfefc3ea51baddc5b87/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=83a416b095d7bcd52ed95cfefc3ea51baddc5b87", "patch": "@@ -8730,13 +8730,24 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n       {\n \taddr_space_t as = TYPE_ADDR_SPACE (TREE_TYPE (exp));\n \tstruct mem_address addr;\n+\ttree base;\n \n \tget_address_description (exp, &addr);\n \top0 = addr_for_mem_ref (&addr, as, true);\n \top0 = memory_address_addr_space (mode, op0, as);\n \ttemp = gen_rtx_MEM (mode, op0);\n \tset_mem_attributes (temp, TMR_ORIGINAL (exp), 0);\n \tset_mem_addr_space (temp, as);\n+\tbase = get_base_address (TMR_ORIGINAL (exp));\n+\tif (INDIRECT_REF_P (base)\n+\t    && TMR_BASE (exp)\n+\t    && TREE_CODE (TMR_BASE (exp)) == SSA_NAME\n+\t    && POINTER_TYPE_P (TREE_TYPE (TMR_BASE (exp))))\n+\t  {\n+\t    set_mem_expr (temp, build1 (INDIRECT_REF,\n+\t\t\t\t\tTREE_TYPE (exp), TMR_BASE (exp)));\n+\t    set_mem_offset (temp, NULL_RTX);\n+\t  }\n       }\n       return temp;\n "}]}