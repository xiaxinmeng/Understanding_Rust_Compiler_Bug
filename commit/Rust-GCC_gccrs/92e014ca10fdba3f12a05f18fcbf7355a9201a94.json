{"sha": "92e014ca10fdba3f12a05f18fcbf7355a9201a94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJlMDE0Y2ExMGZkYmEzZjEyYTA1ZjE4ZmNiZjczNTVhOTIwMWE5NA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2012-08-01T20:26:49Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2012-08-01T20:26:49Z"}, "message": "m32c: Don't use set_optab_handler\n\nFrom-SVN: r190049", "tree": {"sha": "44315f9312f06698b289f88ba6d5d906d51f5e05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44315f9312f06698b289f88ba6d5d906d51f5e05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92e014ca10fdba3f12a05f18fcbf7355a9201a94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92e014ca10fdba3f12a05f18fcbf7355a9201a94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92e014ca10fdba3f12a05f18fcbf7355a9201a94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92e014ca10fdba3f12a05f18fcbf7355a9201a94/comments", "author": null, "committer": null, "parents": [{"sha": "d94b820b51b38be47a7b2cb71fb80bb0ae7c6ce3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d94b820b51b38be47a7b2cb71fb80bb0ae7c6ce3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d94b820b51b38be47a7b2cb71fb80bb0ae7c6ce3"}], "stats": {"total": 49, "additions": 27, "deletions": 22}, "files": [{"sha": "0afe7b64b628eacf5a7aefe649e8b8c6e15a1a46", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e014ca10fdba3f12a05f18fcbf7355a9201a94/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e014ca10fdba3f12a05f18fcbf7355a9201a94/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=92e014ca10fdba3f12a05f18fcbf7355a9201a94", "patch": "@@ -1,3 +1,10 @@\n+2012-08-01  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/m32c/m32c.c (TARGET_INIT_LIBFUNCS): Remove.\n+\t(m32c_init_libfuncs): Remove.\n+\t* config/m32c/cond.md (cstore<QHPSI>4_16): Rename from cstore<QHPSI>4.\n+\t(cstore<QHPSI>4): New expander.\n+\n 2012-08-01  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-flow-inline.h (referenced_var): Remove."}, {"sha": "5886a7da963d4f09bb40db4582d41c64b2d2d5ee", "filename": "gcc/config/m32c/cond.md", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e014ca10fdba3f12a05f18fcbf7355a9201a94/gcc%2Fconfig%2Fm32c%2Fcond.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e014ca10fdba3f12a05f18fcbf7355a9201a94/gcc%2Fconfig%2Fm32c%2Fcond.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fcond.md?ref=92e014ca10fdba3f12a05f18fcbf7355a9201a94", "patch": "@@ -152,14 +152,31 @@\n \n ;; These are the pre-split patterns for the conditional sets.\n \n-(define_insn_and_split \"cstore<mode>4\"\n+(define_expand \"cstore<mode>4\"\n+  [(set (match_operand:QI 0 \"register_operand\")\n+\t(match_operator:QI 1 \"ordered_comparison_operator\"\n+\t [(match_operand:QHPSI 2 \"mra_operand\")\n+\t  (match_operand:QHPSI 3 \"mrai_operand\")]))]\n+  \"\"\n+{\n+  if (TARGET_A24)\n+    {\n+      rtx o = gen_reg_rtx (HImode);\n+      emit_insn (gen_cstore<mode>4_24 (o, operands[1],\n+\t\t\t\t       operands[2], operands[3]));\n+      emit_move_insn (operands[0], gen_lowpart (QImode, o));\n+      DONE;\n+    }\n+})\n+\n+(define_insn_and_split \"*cstore<mode>4_16\"\n   [(set (match_operand:QI 0 \"register_operand\" \"=Rqi\")\n \t(match_operator:QI 1 \"ordered_comparison_operator\"\n \t [(match_operand:QHPSI 2 \"mra_operand\" \"RraSd\")\n \t  (match_operand:QHPSI 3 \"mrai_operand\" \"RraSdi\")]))]\n   \"TARGET_A16\"\n   \"#\"\n-  \"reload_completed\"\n+  \"&& reload_completed\"\n   [(set (reg:CC FLG_REGNO)\n \t(compare (match_dup 2)\n \t\t (match_dup 3)))\n@@ -176,7 +193,7 @@\n \t  (match_operand:QHPSI 3 \"mrai_operand\" \"RraSdi\")]))]\n   \"TARGET_A24\"\n   \"#\"\n-  \"reload_completed\"\n+  \"&& reload_completed\"\n   [(set (reg:CC FLG_REGNO)\n \t(compare (match_dup 2)\n \t\t (match_dup 3)))"}, {"sha": "878be09fb5958da1be4f7d6edc86bcded6a641a8", "filename": "gcc/config/m32c/m32c.c", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e014ca10fdba3f12a05f18fcbf7355a9201a94/gcc%2Fconfig%2Fm32c%2Fm32c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e014ca10fdba3f12a05f18fcbf7355a9201a94/gcc%2Fconfig%2Fm32c%2Fm32c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c.c?ref=92e014ca10fdba3f12a05f18fcbf7355a9201a94", "patch": "@@ -1857,25 +1857,6 @@ m32c_trampoline_init (rtx m_tramp, tree fndecl, rtx chainval)\n #undef A0\n }\n \n-/* Implicit Calls to Library Routines */\n-\n-#undef TARGET_INIT_LIBFUNCS\n-#define TARGET_INIT_LIBFUNCS m32c_init_libfuncs\n-static void\n-m32c_init_libfuncs (void)\n-{\n-  /* We do this because the M32C has an HImode operand, but the\n-     M16C has an 8-bit operand.  Since gcc looks at the match data\n-     and not the expanded rtl, we have to reset the optab so that\n-     the right modes are found. */\n-  if (TARGET_A24)\n-    {\n-      set_optab_handler (cstore_optab, QImode, CODE_FOR_cstoreqi4_24);\n-      set_optab_handler (cstore_optab, HImode, CODE_FOR_cstorehi4_24);\n-      set_optab_handler (cstore_optab, PSImode, CODE_FOR_cstorepsi4_24);\n-    }\n-}\n-\n /* Addressing Modes */\n \n /* The r8c/m32c family supports a wide range of non-orthogonal"}]}