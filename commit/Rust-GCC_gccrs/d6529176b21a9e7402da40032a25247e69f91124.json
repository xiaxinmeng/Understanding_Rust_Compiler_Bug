{"sha": "d6529176b21a9e7402da40032a25247e69f91124", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY1MjkxNzZiMjFhOWU3NDAyZGE0MDAzMmEyNTI0N2U2OWY5MTEyNA==", "commit": {"author": {"name": "Chung-Ju Wu", "email": "jasonwucj@gmail.com", "date": "2015-01-16T06:45:09Z"}, "committer": {"name": "Chung-Ju Wu", "email": "jasonwucj@gcc.gnu.org", "date": "2015-01-16T06:45:09Z"}, "message": "[NDS32] Have sibling calls optmization to be performed on nds32 target.\n\ngcc/\n\t* config/nds32/nds32-protos.h (nds32_expand_epilogue): Change\n\tprototype.\n\t(nds32_expand_epilogue_v3pop): Likewise.\n\t* config/nds32/nds32.md (sibcall): Define this for sibling call\n\toptimization.\n\t(sibcall_register): Likewise.\n\t(sibcall_immediate): Likewise.\n\t(sibcall_value): Likewise.\n\t(sibcall_value_register): Likewise.\n\t(sibcall_value_immediate): Likewise.\n\t(sibcall_epilogue): Likewise.\n\t(epilogue): Pass false to indicate this is not a sibcall epilogue.\n\t* config/nds32/nds32.c (nds32_expand_epilogue): Consider sibcall case.\n\t(nds32_expand_epilogue_v3pop): Likewise.\n\nFrom-SVN: r219712", "tree": {"sha": "9ad5242156362721d37d48216c9c8867faa73af6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ad5242156362721d37d48216c9c8867faa73af6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6529176b21a9e7402da40032a25247e69f91124", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6529176b21a9e7402da40032a25247e69f91124", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6529176b21a9e7402da40032a25247e69f91124", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6529176b21a9e7402da40032a25247e69f91124/comments", "author": {"login": "jasonwucj", "id": 5520732, "node_id": "MDQ6VXNlcjU1MjA3MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5520732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonwucj", "html_url": "https://github.com/jasonwucj", "followers_url": "https://api.github.com/users/jasonwucj/followers", "following_url": "https://api.github.com/users/jasonwucj/following{/other_user}", "gists_url": "https://api.github.com/users/jasonwucj/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonwucj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonwucj/subscriptions", "organizations_url": "https://api.github.com/users/jasonwucj/orgs", "repos_url": "https://api.github.com/users/jasonwucj/repos", "events_url": "https://api.github.com/users/jasonwucj/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonwucj/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "03390cda42267d8d04c7bde6c2a649cd255ae367", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03390cda42267d8d04c7bde6c2a649cd255ae367", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03390cda42267d8d04c7bde6c2a649cd255ae367"}], "stats": {"total": 148, "additions": 139, "deletions": 9}, "files": [{"sha": "09a0c98643033b2b4fca943da7ad13e6a8f8ea13", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6529176b21a9e7402da40032a25247e69f91124/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6529176b21a9e7402da40032a25247e69f91124/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d6529176b21a9e7402da40032a25247e69f91124", "patch": "@@ -1,3 +1,20 @@\n+2015-01-16  Chung-Ju Wu  <jasonwucj@gmail.com>\n+\n+\t* config/nds32/nds32-protos.h (nds32_expand_epilogue): Change\n+\tprototype.\n+\t(nds32_expand_epilogue_v3pop): Likewise.\n+\t* config/nds32/nds32.md (sibcall): Define this for sibling call\n+\toptimization.\n+\t(sibcall_register): Likewise.\n+\t(sibcall_immediate): Likewise.\n+\t(sibcall_value): Likewise.\n+\t(sibcall_value_register): Likewise.\n+\t(sibcall_value_immediate): Likewise.\n+\t(sibcall_epilogue): Likewise.\n+\t(epilogue): Pass false to indicate this is not a sibcall epilogue.\n+\t* config/nds32/nds32.c (nds32_expand_epilogue): Consider sibcall case.\n+\t(nds32_expand_epilogue_v3pop): Likewise.\n+\n 2015-01-16  Chung-Ju Wu  <jasonwucj@gmail.com>\n \n \t* config/nds32/nds32-protos.h (nds32_can_use_return_insn): New."}, {"sha": "620d897535a084b96392c7676f8c5bf3b15c5bde", "filename": "gcc/config/nds32/nds32-protos.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6529176b21a9e7402da40032a25247e69f91124/gcc%2Fconfig%2Fnds32%2Fnds32-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6529176b21a9e7402da40032a25247e69f91124/gcc%2Fconfig%2Fnds32%2Fnds32-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-protos.h?ref=d6529176b21a9e7402da40032a25247e69f91124", "patch": "@@ -58,9 +58,9 @@ extern void nds32_init_cumulative_args (CUMULATIVE_ARGS *,\n /* -- Function Entry and Exit.  */\n \n extern void nds32_expand_prologue (void);\n-extern void nds32_expand_epilogue (void);\n+extern void nds32_expand_epilogue (bool);\n extern void nds32_expand_prologue_v3push (void);\n-extern void nds32_expand_epilogue_v3pop (void);\n+extern void nds32_expand_epilogue_v3pop (bool);\n \n /* ------------------------------------------------------------------------ */\n "}, {"sha": "1845bc218122822dda3e53d93f5f16711f1648a1", "filename": "gcc/config/nds32/nds32.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6529176b21a9e7402da40032a25247e69f91124/gcc%2Fconfig%2Fnds32%2Fnds32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6529176b21a9e7402da40032a25247e69f91124/gcc%2Fconfig%2Fnds32%2Fnds32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.c?ref=d6529176b21a9e7402da40032a25247e69f91124", "patch": "@@ -3044,7 +3044,7 @@ nds32_expand_prologue (void)\n \n /* Function for normal multiple pop epilogue.  */\n void\n-nds32_expand_epilogue (void)\n+nds32_expand_epilogue (bool sibcall_p)\n {\n   int sp_adjust;\n   int en4_const;\n@@ -3089,7 +3089,8 @@ nds32_expand_epilogue (void)\n \n       /* Generate return instruction by using 'return_internal' pattern.\n          Make sure this instruction is after gen_blockage().  */\n-      emit_jump_insn (gen_return_internal ());\n+      if (!sibcall_p)\n+\temit_jump_insn (gen_return_internal ());\n       return;\n     }\n \n@@ -3194,7 +3195,8 @@ nds32_expand_epilogue (void)\n     }\n \n   /* Generate return instruction.  */\n-  emit_jump_insn (gen_return_internal ());\n+  if (!sibcall_p)\n+    emit_jump_insn (gen_return_internal ());\n }\n \n /* Function for v3push prologue.  */\n@@ -3327,7 +3329,7 @@ nds32_expand_prologue_v3push (void)\n \n /* Function for v3pop epilogue.  */\n void\n-nds32_expand_epilogue_v3pop (void)\n+nds32_expand_epilogue_v3pop (bool sibcall_p)\n {\n   int sp_adjust;\n \n@@ -3348,7 +3350,8 @@ nds32_expand_epilogue_v3pop (void)\n     {\n       /* Generate return instruction by using 'return_internal' pattern.\n          Make sure this instruction is after gen_blockage().  */\n-      emit_jump_insn (gen_return_internal ());\n+      if (!sibcall_p)\n+\temit_jump_insn (gen_return_internal ());\n       return;\n     }\n "}, {"sha": "64823a13a47f307cb23f32f36b9996d4151f2e54", "filename": "gcc/config/nds32/nds32.md", "status": "modified", "additions": 112, "deletions": 2, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6529176b21a9e7402da40032a25247e69f91124/gcc%2Fconfig%2Fnds32%2Fnds32.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6529176b21a9e7402da40032a25247e69f91124/gcc%2Fconfig%2Fnds32%2Fnds32.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.md?ref=d6529176b21a9e7402da40032a25247e69f91124", "patch": "@@ -1988,6 +1988,102 @@ create_template:\n \t\t      (const_int 4)))])\n \n \n+;; ----------------------------------------------------------------------------\n+\n+;; The sibcall patterns.\n+\n+;; sibcall\n+;; sibcall_register\n+;; sibcall_immediate\n+\n+(define_expand \"sibcall\"\n+  [(parallel [(call (match_operand 0 \"memory_operand\" \"\")\n+\t\t    (const_int 0))\n+\t      (clobber (reg:SI TA_REGNUM))\n+\t      (return)])]\n+  \"\"\n+  \"\"\n+)\n+\n+(define_insn \"*sibcall_register\"\n+  [(parallel [(call (mem (match_operand:SI 0 \"register_operand\" \"r, r\"))\n+\t\t    (match_operand 1))\n+\t      (clobber (reg:SI TA_REGNUM))\n+\t      (return)])]\n+  \"\"\n+  \"@\n+   jr5\\t%0\n+   jr\\t%0\"\n+  [(set_attr \"type\"   \"branch,branch\")\n+   (set_attr \"length\" \"     2,     4\")])\n+\n+(define_insn \"*sibcall_immediate\"\n+  [(parallel [(call (mem (match_operand:SI 0 \"immediate_operand\" \"i\"))\n+\t\t    (match_operand 1))\n+\t      (clobber (reg:SI TA_REGNUM))\n+\t      (return)])]\n+  \"\"\n+{\n+  if (TARGET_CMODEL_LARGE)\n+    return \"b\\t%0\";\n+  else\n+    return \"j\\t%0\";\n+}\n+  [(set_attr \"type\"   \"branch\")\n+   (set (attr \"length\")\n+\t(if_then_else (match_test \"TARGET_CMODEL_LARGE\")\n+\t\t      (const_int 12)\n+\t\t      (const_int 4)))])\n+\n+;; sibcall_value\n+;; sibcall_value_register\n+;; sibcall_value_immediate\n+\n+(define_expand \"sibcall_value\"\n+  [(parallel [(set (match_operand 0)\n+\t\t   (call (match_operand 1 \"memory_operand\" \"\")\n+\t\t\t (const_int 0)))\n+\t      (clobber (reg:SI TA_REGNUM))\n+\t      (return)])]\n+  \"\"\n+  \"\"\n+)\n+\n+(define_insn \"*sibcall_value_register\"\n+  [(parallel [(set (match_operand 0)\n+\t\t   (call (mem (match_operand:SI 1 \"register_operand\" \"r, r\"))\n+\t\t\t (match_operand 2)))\n+\t      (clobber (reg:SI TA_REGNUM))\n+\t      (return)])]\n+  \"\"\n+  \"@\n+   jr5\\t%1\n+   jr\\t%1\"\n+  [(set_attr \"type\"   \"branch,branch\")\n+   (set_attr \"length\" \"     2,     4\")])\n+\n+(define_insn \"*sibcall_value_immediate\"\n+  [(parallel [(set (match_operand 0)\n+\t\t   (call (mem (match_operand:SI 1 \"immediate_operand\" \"i\"))\n+\t\t\t (match_operand 2)))\n+\t      (clobber (reg:SI TA_REGNUM))\n+\t      (return)])]\n+  \"\"\n+{\n+  if (TARGET_CMODEL_LARGE)\n+    return \"b\\t%1\";\n+  else\n+    return \"j\\t%1\";\n+}\n+  [(set_attr \"type\"   \"branch\")\n+   (set (attr \"length\")\n+\t(if_then_else (match_test \"TARGET_CMODEL_LARGE\")\n+\t\t      (const_int 12)\n+\t\t      (const_int 4)))])\n+\n+\n+;; ----------------------------------------------------------------------------\n+\n ;; prologue and epilogue.\n \n (define_expand \"prologue\" [(const_int 0)]\n@@ -2014,9 +2110,23 @@ create_template:\n   if (TARGET_V3PUSH\n       && !nds32_isr_function_p (current_function_decl)\n       && (cfun->machine->va_args_size == 0))\n-    nds32_expand_epilogue_v3pop ();\n+    nds32_expand_epilogue_v3pop (false);\n+  else\n+    nds32_expand_epilogue (false);\n+  DONE;\n+})\n+\n+(define_expand \"sibcall_epilogue\" [(const_int 0)]\n+  \"\"\n+{\n+  /* Pass true to indicate that this is sibcall epilogue and\n+     exit from a function without the final branch back to the\n+     calling function.  */\n+  if (TARGET_V3PUSH && !nds32_isr_function_p (current_function_decl))\n+    nds32_expand_epilogue_v3pop (true);\n   else\n-    nds32_expand_epilogue ();\n+    nds32_expand_epilogue (true);\n+\n   DONE;\n })\n "}]}