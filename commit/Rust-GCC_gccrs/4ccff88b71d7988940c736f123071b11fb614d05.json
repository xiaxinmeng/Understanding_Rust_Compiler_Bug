{"sha": "4ccff88b71d7988940c736f123071b11fb614d05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNjZmY4OGI3MWQ3OTg4OTQwYzczNmYxMjMwNzFiMTFmYjYxNGQwNQ==", "commit": {"author": {"name": "Andre Vehreschild", "email": "vehre@gcc.gnu.org", "date": "2017-01-13T10:22:21Z"}, "committer": {"name": "Andre Vehreschild", "email": "vehre@gcc.gnu.org", "date": "2017-01-13T10:22:21Z"}, "message": "re PR fortran/70696 ([Coarray] ICE on EVENT POST of host-associated EVENT_TYPE coarray)\n\ngcc/testsuite/ChangeLog:\n\n2017-01-13  Andre Vehreschild  <vehre@gcc.gnu.org>\n\n\tPR fortran/70696\n\t* gfortran.dg/coarray/event_3.f08: New test.\n\ngcc/fortran/ChangeLog:\n\n2017-01-13  Andre Vehreschild  <vehre@gcc.gnu.org>\n\n\tPR fortran/70696\n\t* trans-expr.c (gfc_get_tree_for_caf_expr): Ensure the backend_decl\n\tis valid before accessing it.\n\nlibgfortran/ChangeLog:\n\n2017-01-13  Andre Vehreschild  <vehre@gcc.gnu.org>\n\n\tPR fortran/70696\n\t* caf/single.c (_gfortran_caf_register): Allocate enough memory for\n\tthe event counter.\n\nFrom-SVN: r244407", "tree": {"sha": "02a651be289a53ea81ff6fe0d011d7b35f3e8ef2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02a651be289a53ea81ff6fe0d011d7b35f3e8ef2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ccff88b71d7988940c736f123071b11fb614d05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ccff88b71d7988940c736f123071b11fb614d05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ccff88b71d7988940c736f123071b11fb614d05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ccff88b71d7988940c736f123071b11fb614d05/comments", "author": null, "committer": null, "parents": [{"sha": "d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8f43ee6d0921b73670e8e123cdd0850dfeb330e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8f43ee6d0921b73670e8e123cdd0850dfeb330e"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "e979a3082392ec570b9933d33e4ef816dbc9a018", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ccff88b71d7988940c736f123071b11fb614d05/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ccff88b71d7988940c736f123071b11fb614d05/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4ccff88b71d7988940c736f123071b11fb614d05", "patch": "@@ -1,3 +1,9 @@\n+2017-01-13  Andre Vehreschild  <vehre@gcc.gnu.org>\n+\n+\tPR fortran/70696\n+\t* trans-expr.c (gfc_get_tree_for_caf_expr): Ensure the backend_decl\n+\tis valid before accessing it.\n+\n 2017-01-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR translation/79019"}, {"sha": "01b7dd27dced2dafe11d236c67c380abdf97a3d6", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ccff88b71d7988940c736f123071b11fb614d05/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ccff88b71d7988940c736f123071b11fb614d05/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=4ccff88b71d7988940c736f123071b11fb614d05", "patch": "@@ -1838,6 +1838,10 @@ gfc_get_tree_for_caf_expr (gfc_expr *expr)\n \t\t     \"component at %L is not supported\", &expr->where);\n       }\n \n+  /* Make sure the backend_decl is present before accessing it.  */\n+  if (expr->symtree->n.sym->backend_decl == NULL_TREE)\n+    expr->symtree->n.sym->backend_decl\n+\t= gfc_get_symbol_decl (expr->symtree->n.sym);\n   caf_decl = expr->symtree->n.sym->backend_decl;\n   gcc_assert (caf_decl);\n   if (expr->symtree->n.sym->ts.type == BT_CLASS)"}, {"sha": "df14a1bc3350eee5614d56f2e5b7e227eb7b156c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ccff88b71d7988940c736f123071b11fb614d05/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ccff88b71d7988940c736f123071b11fb614d05/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4ccff88b71d7988940c736f123071b11fb614d05", "patch": "@@ -1,3 +1,8 @@\n+2017-01-13  Andre Vehreschild  <vehre@gcc.gnu.org>\n+\n+\tPR fortran/70696\n+\t* gfortran.dg/coarray/event_3.f08: New test.\n+\n 2017-01-13  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/77283"}, {"sha": "f6e28b78c8db602d39302bd2f2b5522e5f38de2f", "filename": "gcc/testsuite/gfortran.dg/coarray/event_3.f08", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ccff88b71d7988940c736f123071b11fb614d05/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fevent_3.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ccff88b71d7988940c736f123071b11fb614d05/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fevent_3.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fevent_3.f08?ref=4ccff88b71d7988940c736f123071b11fb614d05", "patch": "@@ -0,0 +1,20 @@\n+! { dg-do run }\n+!\n+! Check PR fortran/70696 is fixed.\n+\n+program global_event\n+  use iso_fortran_env , only : event_type\n+  implicit none\n+  type(event_type) :: x[*]\n+  \n+  call exchange\n+  contains\n+    subroutine exchange\n+      integer :: cnt\n+      event post(x[1])\n+      event post(x[1])\n+      call event_query(x, cnt)\n+      if (cnt /= 2) error stop 1\n+      event wait(x, until_count=2)\n+    end subroutine\n+end "}, {"sha": "1a687300a78faa70b0b828cc62bdc9168f67dc9a", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ccff88b71d7988940c736f123071b11fb614d05/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ccff88b71d7988940c736f123071b11fb614d05/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=4ccff88b71d7988940c736f123071b11fb614d05", "patch": "@@ -1,3 +1,9 @@\n+2017-01-13  Andre Vehreschild  <vehre@gcc.gnu.org>\n+\n+\tPR fortran/70696\n+\t* caf/single.c (_gfortran_caf_register): Allocate enough memory for\n+\tthe event counter.\n+\n 2017-01-07  Andre Vehreschild  <vehre@gcc.gnu.org>\n \n \tPR fortran/78781"}, {"sha": "8d3bcbfb80eedc91d189a3670771c07d41f5b932", "filename": "libgfortran/caf/single.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ccff88b71d7988940c736f123071b11fb614d05/libgfortran%2Fcaf%2Fsingle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ccff88b71d7988940c736f123071b11fb614d05/libgfortran%2Fcaf%2Fsingle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fcaf%2Fsingle.c?ref=4ccff88b71d7988940c736f123071b11fb614d05", "patch": "@@ -141,9 +141,12 @@ _gfortran_caf_register (size_t size, caf_register_t type, caf_token_t *token,\n   caf_single_token_t single_token;\n \n   if (type == CAF_REGTYPE_LOCK_STATIC || type == CAF_REGTYPE_LOCK_ALLOC\n-      || type == CAF_REGTYPE_CRITICAL || type == CAF_REGTYPE_EVENT_STATIC\n-      || type == CAF_REGTYPE_EVENT_ALLOC)\n+      || type == CAF_REGTYPE_CRITICAL)\n     local = calloc (size, sizeof (bool));\n+  else if (type == CAF_REGTYPE_EVENT_STATIC || type == CAF_REGTYPE_EVENT_ALLOC)\n+    /* In the event_(wait|post) function the counter for events is a uint32,\n+       so better allocate enough memory here.  */\n+    local = calloc (size, sizeof (uint32_t));\n   else if (type == CAF_REGTYPE_COARRAY_ALLOC_REGISTER_ONLY)\n     local = NULL;\n   else"}]}