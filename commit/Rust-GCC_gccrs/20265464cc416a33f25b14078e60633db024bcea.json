{"sha": "20265464cc416a33f25b14078e60633db024bcea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAyNjU0NjRjYzQxNmEzM2YyNWIxNDA3OGU2MDYzM2RiMDI0YmNlYQ==", "commit": {"author": {"name": "Zhenqiang Chen", "email": "zhenqiang.chen@linaro.org", "date": "2012-09-25T06:37:29Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2012-09-25T06:37:29Z"}, "message": "re PR target/50970 (Function pointer dereferenced twice in if statement on Arm cpu)\n\n\tPR c++/50970\n\t* typeck.c (cp_build_binary_op): Check side effects before generating\n\tpfn and delta related expressions.\n\nFrom-SVN: r191692", "tree": {"sha": "da1a729c7d5bb69c881824399b9e0e13fbfb9a26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da1a729c7d5bb69c881824399b9e0e13fbfb9a26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20265464cc416a33f25b14078e60633db024bcea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20265464cc416a33f25b14078e60633db024bcea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20265464cc416a33f25b14078e60633db024bcea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20265464cc416a33f25b14078e60633db024bcea/comments", "author": null, "committer": null, "parents": [{"sha": "21a8ccc02f643458b82780ac1b884f8454b89871", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21a8ccc02f643458b82780ac1b884f8454b89871", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21a8ccc02f643458b82780ac1b884f8454b89871"}], "stats": {"total": 35, "additions": 23, "deletions": 12}, "files": [{"sha": "ba1f775c055fe7723196b4930d3cf84ea1ff08f1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20265464cc416a33f25b14078e60633db024bcea/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20265464cc416a33f25b14078e60633db024bcea/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=20265464cc416a33f25b14078e60633db024bcea", "patch": "@@ -1,3 +1,9 @@\n+2012-09-25  Zhenqiang Chen <zhenqiang.chen@linaro.org>\n+\n+\tPR c++/50970\n+\t* typeck.c (cp_build_binary_op): Check side effects before generating\n+\tpfn and delta related expressions.\n+\n 2012-09-24  Lawrence Crowl  <crowl@google.com>\n \n \t* init.c (build_new_1): Change to new double_int API."}, {"sha": "884f7d0573b69d60430c857eae7a289ff299cf1f", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20265464cc416a33f25b14078e60633db024bcea/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20265464cc416a33f25b14078e60633db024bcea/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=20265464cc416a33f25b14078e60633db024bcea", "patch": "@@ -4159,18 +4159,23 @@ cp_build_binary_op (location_t location,\n \t  if (TARGET_PTRMEMFUNC_VBIT_LOCATION\n \t      == ptrmemfunc_vbit_in_delta)\n \t    {\n-\t      tree pfn0 = pfn_from_ptrmemfunc (op0);\n-\t      tree delta0 = delta_from_ptrmemfunc (op0);\n-\t      tree e1 = cp_build_binary_op (location,\n-\t\t\t\t\t    EQ_EXPR,\n-\t  \t\t\t            pfn0,\t\n-\t\t\t\t      \t    build_zero_cst (TREE_TYPE (pfn0)),\n-\t\t\t\t\t    complain);\n-\t      tree e2 = cp_build_binary_op (location,\n-\t\t\t\t\t    BIT_AND_EXPR, \n-\t\t\t\t\t    delta0,\n-\t\t\t\t            integer_one_node,\n-\t\t\t\t\t    complain);\n+\t      tree pfn0, delta0, e1, e2;\n+\n+\t      if (TREE_SIDE_EFFECTS (op0))\n+\t\top0 = save_expr (op0);\n+\n+\t      pfn0 = pfn_from_ptrmemfunc (op0);\n+\t      delta0 = delta_from_ptrmemfunc (op0);\n+\t      e1 = cp_build_binary_op (location,\n+\t\t\t\t       EQ_EXPR,\n+\t  \t\t\t       pfn0,\n+\t\t\t\t       build_zero_cst (TREE_TYPE (pfn0)),\n+\t\t\t\t       complain);\n+\t      e2 = cp_build_binary_op (location,\n+\t\t\t\t       BIT_AND_EXPR,\n+\t\t\t\t       delta0,\n+\t\t\t\t       integer_one_node,\n+\t\t\t\t       complain);\n \t      \n \t      if ((complain & tf_warning)\n \t\t  && c_inhibit_evaluation_warnings == 0"}]}