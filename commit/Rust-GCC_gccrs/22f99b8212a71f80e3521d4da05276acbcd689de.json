{"sha": "22f99b8212a71f80e3521d4da05276acbcd689de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJmOTliODIxMmE3MWY4MGUzNTIxZDRkYTA1Mjc2YWNiY2Q2ODlkZQ==", "commit": {"author": {"name": "Ulrich Weigand", "email": "weigand@informatik.uni-erlangen.de", "date": "2005-08-14T19:38:34Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2005-08-14T19:38:34Z"}, "message": "mf-runtime.c (__mf_state_1): Initialize to reentrant.\n\n\t* mf-runtime.c (__mf_state_1): Initialize to reentrant.\n\t(__mf_init): Set thread state active.\n\t* mf-hooks3.c (__mf_pthread_spawner): Always set thread\n\tstate active.\n\t(pthread_create wrapper): Always use thread spawner.\n\n\t* testsuite/libmudflap.cth/pass37-frag.c: Increase timeout.\n\t* testsuite/libmudflap.cth/pass39-frag.c: Likewise.\n\nFrom-SVN: r103084", "tree": {"sha": "202dc3571b5024f7a8cfdd97d391485aae1bf2c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/202dc3571b5024f7a8cfdd97d391485aae1bf2c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22f99b8212a71f80e3521d4da05276acbcd689de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22f99b8212a71f80e3521d4da05276acbcd689de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22f99b8212a71f80e3521d4da05276acbcd689de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22f99b8212a71f80e3521d4da05276acbcd689de/comments", "author": null, "committer": null, "parents": [{"sha": "8971094d72ac03277fefdcd65e9bb449ecb3dae0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8971094d72ac03277fefdcd65e9bb449ecb3dae0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8971094d72ac03277fefdcd65e9bb449ecb3dae0"}], "stats": {"total": 53, "additions": 24, "deletions": 29}, "files": [{"sha": "ad616633dcb3241ba809b3fb3d12bde22d56bc45", "filename": "libmudflap/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22f99b8212a71f80e3521d4da05276acbcd689de/libmudflap%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22f99b8212a71f80e3521d4da05276acbcd689de/libmudflap%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2FChangeLog?ref=22f99b8212a71f80e3521d4da05276acbcd689de", "patch": "@@ -1,3 +1,14 @@\n+2005-08-14  Ulrich Weigand  <weigand@informatik.uni-erlangen.de>\n+\n+\t* mf-runtime.c (__mf_state_1): Initialize to reentrant.\n+\t(__mf_init): Set thread state active.\n+\t* mf-hooks3.c (__mf_pthread_spawner): Always set thread\n+\tstate active.\n+\t(pthread_create wrapper): Always use thread spawner.\n+\n+\t* testsuite/libmudflap.cth/pass37-frag.c: Increase timeout.\n+\t* testsuite/libmudflap.cth/pass39-frag.c: Likewise.\n+\n 2005-07-16  Richard Henderson  <rth@redhat.com>\n \n \t* acinclude.m4: New file."}, {"sha": "73a7f717131851dc23d06a12dab0c4eae035c46c", "filename": "libmudflap/mf-hooks3.c", "status": "modified", "additions": 7, "deletions": 25, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22f99b8212a71f80e3521d4da05276acbcd689de/libmudflap%2Fmf-hooks3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22f99b8212a71f80e3521d4da05276acbcd689de/libmudflap%2Fmf-hooks3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fmf-hooks3.c?ref=22f99b8212a71f80e3521d4da05276acbcd689de", "patch": "@@ -245,9 +245,7 @@ __mf_pthread_spawner (void *arg)\n {\n   void *result = NULL;\n \n-#ifndef HAVE_TLS\n   __mf_set_state (active);\n-#endif\n \n   /* NB: We could use __MF_TYPE_STATIC here, but we guess that the thread\n      errno is coming out of some dynamically allocated pool that we already\n@@ -291,31 +289,15 @@ __mf_0fn_pthread_create (pthread_t *thr, const pthread_attr_t *attr,\n WRAPPER(int, pthread_create, pthread_t *thr, const pthread_attr_t *attr,\n \t void * (*start) (void *), void *arg)\n {\n-  int result, need_wrapper = 0;\n+  struct mf_thread_start_info *si;\n \n   TRACE (\"pthread_create\\n\");\n \n-#ifndef HAVE_TLS\n-  need_wrapper = 1;\n-#endif\n-  need_wrapper |= __mf_opts.heur_std_data != 0;\n-\n-  if (need_wrapper)\n-    {\n-      struct mf_thread_start_info *si = CALL_REAL (malloc, sizeof (*si));\n-\n-      /* Fill in startup-control fields.  */\n-      si->user_fn = start;\n-      si->user_arg = arg;\n+  /* Fill in startup-control fields.  */\n+  si = CALL_REAL (malloc, sizeof (*si));\n+  si->user_fn = start;\n+  si->user_arg = arg;\n \n-      /* Actually create the thread.  */\n-      result = CALL_REAL (pthread_create, thr, attr, __mf_pthread_spawner, si);\n-    }\n-  else\n-    {\n-      /* If we're not handling heur_std_data, nothing special to do.  */\n-      result = CALL_REAL (pthread_create, thr, attr, start, arg);\n-    }\n-\n-  return result;\n+  /* Actually create the thread.  */\n+  return CALL_REAL (pthread_create, thr, attr, __mf_pthread_spawner, si);\n }"}, {"sha": "e6901650975735fa257fb62726070ab37d5d96b5", "filename": "libmudflap/mf-runtime.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22f99b8212a71f80e3521d4da05276acbcd689de/libmudflap%2Fmf-runtime.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22f99b8212a71f80e3521d4da05276acbcd689de/libmudflap%2Fmf-runtime.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fmf-runtime.c?ref=22f99b8212a71f80e3521d4da05276acbcd689de", "patch": "@@ -178,10 +178,10 @@ int __mf_starting_p = 1;\n \n #ifdef LIBMUDFLAPTH\n #ifdef HAVE_TLS\n-__thread enum __mf_state_enum __mf_state_1 = active;\n+__thread enum __mf_state_enum __mf_state_1 = reentrant;\n #endif\n #else\n-enum __mf_state_enum __mf_state_1 = active;\n+enum __mf_state_enum __mf_state_1 = reentrant;\n #endif\n \n #ifdef LIBMUDFLAPTH\n@@ -697,6 +697,8 @@ __mf_init ()\n #endif\n   __mf_starting_p = 0;\n \n+  __mf_set_state (active);\n+\n   __mf_set_default_options ();\n \n   ov = getenv (\"MUDFLAP_OPTIONS\");"}, {"sha": "877803c1ea028489384c8fdbf08e04bf9e9fb070", "filename": "libmudflap/testsuite/libmudflap.cth/pass37-frag.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22f99b8212a71f80e3521d4da05276acbcd689de/libmudflap%2Ftestsuite%2Flibmudflap.cth%2Fpass37-frag.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22f99b8212a71f80e3521d4da05276acbcd689de/libmudflap%2Ftestsuite%2Flibmudflap.cth%2Fpass37-frag.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Ftestsuite%2Flibmudflap.cth%2Fpass37-frag.c?ref=22f99b8212a71f80e3521d4da05276acbcd689de", "patch": "@@ -55,4 +55,4 @@ int main ()\n \n /* { dg-output \"100 100 100 100 100 100 100 100 100 100\" } */\n /* { dg-repetitions 20 } */\n-/* { dg-timeout 3 } */\n+/* { dg-timeout 10 } */"}, {"sha": "cd3eb5abdafb61b03733c9c1a3a7663c03ee1feb", "filename": "libmudflap/testsuite/libmudflap.cth/pass39-frag.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22f99b8212a71f80e3521d4da05276acbcd689de/libmudflap%2Ftestsuite%2Flibmudflap.cth%2Fpass39-frag.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22f99b8212a71f80e3521d4da05276acbcd689de/libmudflap%2Ftestsuite%2Flibmudflap.cth%2Fpass39-frag.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Ftestsuite%2Flibmudflap.cth%2Fpass39-frag.c?ref=22f99b8212a71f80e3521d4da05276acbcd689de", "patch": "@@ -54,4 +54,4 @@ int main ()\n }\n /* { dg-output \"100 100 100 100 100 100 100 100 100 100\" } */\n /* { dg-repetitions 20 } */\n-/* { dg-timeout 3 } */\n+/* { dg-timeout 10 } */"}]}