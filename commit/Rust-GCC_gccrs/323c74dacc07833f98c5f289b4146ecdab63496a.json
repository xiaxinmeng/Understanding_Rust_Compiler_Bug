{"sha": "323c74dacc07833f98c5f289b4146ecdab63496a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzIzYzc0ZGFjYzA3ODMzZjk4YzVmMjg5YjQxNDZlY2RhYjYzNDk2YQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-12-08T21:17:18Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-12-08T21:17:18Z"}, "message": "intrinsic.c (gfc_convert_type_warn): Propagate the input shape to the output expression.\n\n        * intrinsic.c (gfc_convert_type_warn): Propagate the input shape\n        to the output expression.\n        * iresolve.c (gfc_resolve_cshift, gfc_resolve_eoshift): Suppress\n        warning conversion.\n        (gfc_resolve_reshape): Force convert SHAPE and ORDER parameters\n        to index kind.\n\nFrom-SVN: r91917", "tree": {"sha": "4fb96003b004905eebacb01b94b3de90448d7d5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fb96003b004905eebacb01b94b3de90448d7d5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/323c74dacc07833f98c5f289b4146ecdab63496a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/323c74dacc07833f98c5f289b4146ecdab63496a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/323c74dacc07833f98c5f289b4146ecdab63496a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/323c74dacc07833f98c5f289b4146ecdab63496a/comments", "author": null, "committer": null, "parents": [{"sha": "1b227ee01aa9462531fdb1dc3d95e0d674f9c16a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b227ee01aa9462531fdb1dc3d95e0d674f9c16a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b227ee01aa9462531fdb1dc3d95e0d674f9c16a"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "052e7bfcc90d474edcf81a1948bb08049eee868b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/323c74dacc07833f98c5f289b4146ecdab63496a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/323c74dacc07833f98c5f289b4146ecdab63496a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=323c74dacc07833f98c5f289b4146ecdab63496a", "patch": "@@ -1,3 +1,12 @@\n+2004-12-08  Richard Henderson  <rth@redhat.com>\n+\n+\t* intrinsic.c (gfc_convert_type_warn): Propagate the input shape\n+\tto the output expression.\n+\t* iresolve.c (gfc_resolve_cshift, gfc_resolve_eoshift): Suppress\n+\twarning conversion.\n+\t(gfc_resolve_reshape): Force convert SHAPE and ORDER parameters\n+\tto index kind.\n+\n 2004-12-08  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \tPR fortran/18826"}, {"sha": "a079e86374d5c7d5e7d020bd787b07e503df585c", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/323c74dacc07833f98c5f289b4146ecdab63496a/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/323c74dacc07833f98c5f289b4146ecdab63496a/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=323c74dacc07833f98c5f289b4146ecdab63496a", "patch": "@@ -3014,6 +3014,7 @@ gfc_convert_type_warn (gfc_expr * expr, gfc_typespec * ts, int eflag,\n   locus old_where;\n   gfc_expr *new;\n   int rank;\n+  mpz_t *shape;\n \n   from_ts = expr->ts;\t\t/* expr->ts gets clobbered */\n \n@@ -3050,6 +3051,8 @@ gfc_convert_type_warn (gfc_expr * expr, gfc_typespec * ts, int eflag,\n   /* Insert a pre-resolved function call to the right function.  */\n   old_where = expr->where;\n   rank = expr->rank;\n+  shape = expr->shape;\n+\n   new = gfc_get_expr ();\n   *new = *expr;\n \n@@ -3058,6 +3061,7 @@ gfc_convert_type_warn (gfc_expr * expr, gfc_typespec * ts, int eflag,\n   new->value.function.isym = sym;\n   new->where = old_where;\n   new->rank = rank;\n+  new->shape = gfc_copy_shape (shape, rank);\n \n   *expr = *new;\n "}, {"sha": "687421b0b6c76b270b335be6e21520be01b179b7", "filename": "gcc/fortran/iresolve.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/323c74dacc07833f98c5f289b4146ecdab63496a/gcc%2Ffortran%2Firesolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/323c74dacc07833f98c5f289b4146ecdab63496a/gcc%2Ffortran%2Firesolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Firesolve.c?ref=323c74dacc07833f98c5f289b4146ecdab63496a", "patch": "@@ -421,7 +421,7 @@ gfc_resolve_cshift (gfc_expr * f, gfc_expr * array,\n       gfc_resolve_index (dim, 1);\n       /* Convert dim to shift's kind, so we don't need so many variations.  */\n       if (dim->ts.kind != shift->ts.kind)\n-\tgfc_convert_type (dim, &shift->ts, 2);\n+\tgfc_convert_type_warn (dim, &shift->ts, 2, 0);\n     }\n   f->value.function.name =\n     gfc_get_string (\"__cshift%d_%d\", n, shift->ts.kind);\n@@ -510,7 +510,7 @@ gfc_resolve_eoshift (gfc_expr * f, gfc_expr * array,\n   /* Convert dim to the same type as shift, so we don't need quite so many\n      variations.  */\n   if (dim != NULL && dim->ts.kind != shift->ts.kind)\n-    gfc_convert_type (dim, &shift->ts, 2);\n+    gfc_convert_type_warn (dim, &shift->ts, 2, 0);\n \n   f->value.function.name =\n     gfc_get_string (\"__eoshift%d_%d\", n, shift->ts.kind);\n@@ -1172,6 +1172,17 @@ gfc_resolve_reshape (gfc_expr * f, gfc_expr * source, gfc_expr * shape,\n \t  c = c->next;\n \t}\n     }\n+\n+  /* Force-convert both SHAPE and ORDER to index_kind so that we don't need\n+     so many runtime variations.  */\n+  if (shape->ts.kind != gfc_index_integer_kind)\n+    {\n+      gfc_typespec ts = shape->ts;\n+      ts.kind = gfc_index_integer_kind;\n+      gfc_convert_type_warn (shape, &ts, 2, 0);\n+    }\n+  if (order && order->ts.kind != gfc_index_integer_kind)\n+    gfc_convert_type_warn (order, &shape->ts, 2, 0);\n }\n \n "}]}