{"sha": "8e3dc7a3449a516cacb71735055eb12fcebf5b6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUzZGM3YTM0NDlhNTE2Y2FjYjcxNzM1MDU1ZWIxMmZjZWJmNWI2Zg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-12-12T12:13:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-12-12T12:13:48Z"}, "message": "re PR middle-end/30147 (ICE in fold_convert with -O2)\n\n2006-12-12  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/30147\n\t* fold-const.c (fold_read_from_constant_string): Only fold read\n\tfrom constant string if the result type is integer.\n\n\t* gfortran.fortran-torture/compile/pr30147.f90: New testcase.\n\nFrom-SVN: r119776", "tree": {"sha": "eef02827a46ae7abdabd3134fa48f4b80f1b23ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eef02827a46ae7abdabd3134fa48f4b80f1b23ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e3dc7a3449a516cacb71735055eb12fcebf5b6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e3dc7a3449a516cacb71735055eb12fcebf5b6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e3dc7a3449a516cacb71735055eb12fcebf5b6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e3dc7a3449a516cacb71735055eb12fcebf5b6f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "527a08917e8c4310c129c42649991f51b2f5c1a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/527a08917e8c4310c129c42649991f51b2f5c1a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/527a08917e8c4310c129c42649991f51b2f5c1a9"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "61f49fa745b27630970ee02f57a2e4b4fe1d8a7d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3dc7a3449a516cacb71735055eb12fcebf5b6f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3dc7a3449a516cacb71735055eb12fcebf5b6f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e3dc7a3449a516cacb71735055eb12fcebf5b6f", "patch": "@@ -1,3 +1,9 @@\n+2006-12-12  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/30147\n+\t* fold-const.c (fold_read_from_constant_string): Only fold read\n+\tfrom constant string if the result type is integer.\n+\n 2006-12-12  Olivier Hainque  <hainque@adacore.com>\n \n \t* config/rs6000/t-vxworks: Remove assignment to LIB2FUNCS_EXTRA."}, {"sha": "f1f9c00226181ab81d23938eb1d44c96f761e544", "filename": "gcc/fold-const.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3dc7a3449a516cacb71735055eb12fcebf5b6f/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3dc7a3449a516cacb71735055eb12fcebf5b6f/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=8e3dc7a3449a516cacb71735055eb12fcebf5b6f", "patch": "@@ -12726,7 +12726,9 @@ fold_unary_to_constant (enum tree_code code, tree type, tree op0)\n tree\n fold_read_from_constant_string (tree exp)\n {\n-  if (TREE_CODE (exp) == INDIRECT_REF || TREE_CODE (exp) == ARRAY_REF)\n+  if ((TREE_CODE (exp) == INDIRECT_REF\n+       || TREE_CODE (exp) == ARRAY_REF)\n+      && TREE_CODE (TREE_TYPE (exp)) == INTEGER_TYPE)\n     {\n       tree exp1 = TREE_OPERAND (exp, 0);\n       tree index;"}, {"sha": "8e8c438739ea116f38b7741b2f67550619a3bf48", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3dc7a3449a516cacb71735055eb12fcebf5b6f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3dc7a3449a516cacb71735055eb12fcebf5b6f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8e3dc7a3449a516cacb71735055eb12fcebf5b6f", "patch": "@@ -1,3 +1,8 @@\n+2006-12-12  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/30147\n+\t* gfortran.fortran-torture/compile/pr30147.f90: New testcase.\n+\n 2006-12-11  Aldy Hernandez  <aldyh@redhat.com>\n \t    Diego Novillo  <dnovillo@redhat.com>\n "}, {"sha": "b9c1533d5d225d78a86308cfb5a0f873baf9741f", "filename": "gcc/testsuite/gfortran.fortran-torture/compile/pr30147.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3dc7a3449a516cacb71735055eb12fcebf5b6f/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fpr30147.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3dc7a3449a516cacb71735055eb12fcebf5b6f/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fpr30147.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fpr30147.f90?ref=8e3dc7a3449a516cacb71735055eb12fcebf5b6f", "patch": "@@ -0,0 +1,14 @@\n+MODULE input_cp2k_motion\n+  IMPLICIT NONE\n+  interface\n+    SUBROUTINE keyword_create(variants)\n+      CHARACTER(len=*), DIMENSION(:), &\n+      INTENT(in)                   :: variants\n+    end subroutine\n+  end interface\n+CONTAINS\n+  SUBROUTINE create_neb_section()\n+    CALL keyword_create(variants=(/\"K\"/))\n+  END SUBROUTINE create_neb_section\n+END MODULE input_cp2k_motion\n+"}]}