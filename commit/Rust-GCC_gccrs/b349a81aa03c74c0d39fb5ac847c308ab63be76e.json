{"sha": "b349a81aa03c74c0d39fb5ac847c308ab63be76e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM0OWE4MWFhMDNjNzRjMGQzOWZiNWFjODQ3YzMwOGFiNjNiZTc2ZQ==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2016-11-09T17:22:02Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2016-11-09T17:22:02Z"}, "message": "[multiple changes]\n\n2016-11-09  Steve Kargl <kargl@gcc.gnu.org>\n\t    Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/60777\n\t* expr.c (external_spec_function): Allow recursive specification\n\tfunctions in F03.\n\n2016-11-09  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/60777\n\t* gfortran.dg/spec_expr_7.f90: New test.\n\nFrom-SVN: r242009", "tree": {"sha": "32a1321fa05b9167e353ebb55bc85f5f3ffe838d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32a1321fa05b9167e353ebb55bc85f5f3ffe838d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b349a81aa03c74c0d39fb5ac847c308ab63be76e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b349a81aa03c74c0d39fb5ac847c308ab63be76e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b349a81aa03c74c0d39fb5ac847c308ab63be76e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b349a81aa03c74c0d39fb5ac847c308ab63be76e/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f3535815e039b0593297e17ce03715b6afa93b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f3535815e039b0593297e17ce03715b6afa93b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f3535815e039b0593297e17ce03715b6afa93b1"}], "stats": {"total": 56, "additions": 51, "deletions": 5}, "files": [{"sha": "615ade012f7911f69c170ad4d341084207d05806", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b349a81aa03c74c0d39fb5ac847c308ab63be76e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b349a81aa03c74c0d39fb5ac847c308ab63be76e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=b349a81aa03c74c0d39fb5ac847c308ab63be76e", "patch": "@@ -1,3 +1,10 @@\n+2016-11-09  Steve Kargl <kargl@gcc.gnu.org>\n+\t    Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/60777\n+\t* expr.c (external_spec_function): Allow recursive specification\n+\tfunctions in F03.\n+\n 2016-11-09  Paul Thomas  <pault@gcc.gnu.org>\n \n \t* check.c (gfc_check_move_alloc): Prevent error that avoids"}, {"sha": "e2d1311d1a5838e35a95b8f0fc020570954db314", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b349a81aa03c74c0d39fb5ac847c308ab63be76e/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b349a81aa03c74c0d39fb5ac847c308ab63be76e/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=b349a81aa03c74c0d39fb5ac847c308ab63be76e", "patch": "@@ -2794,12 +2794,12 @@ external_spec_function (gfc_expr *e)\n       return false;\n     }\n \n-  if (f->attr.recursive)\n-    {\n-      gfc_error (\"Specification function %qs at %L cannot be RECURSIVE\",\n-\t\t f->name, &e->where);\n+  /* F08:7.1.11.6. */\n+  if (f->attr.recursive\n+      && !gfc_notify_std (GFC_STD_F2003,\n+\t\t\t  \"Specification function '%s' \"\n+\t\t\t  \"at %L cannot be RECURSIVE\",  f->name, &e->where))\n       return false;\n-    }\n \n function_allowed:\n   return restricted_args (e->value.function.actual);"}, {"sha": "749c7d6bef0672e6fa58fabef247dfb3fe9d477b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b349a81aa03c74c0d39fb5ac847c308ab63be76e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b349a81aa03c74c0d39fb5ac847c308ab63be76e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b349a81aa03c74c0d39fb5ac847c308ab63be76e", "patch": "@@ -1,3 +1,8 @@\n+2016-11-09  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/60777\n+\t* gfortran.dg/spec_expr_7.f90: New test.\n+\n 2016-11-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/77718"}, {"sha": "0680d1207a81d8ea9abfb6276903584641cdd995", "filename": "gcc/testsuite/gfortran.dg/spec_expr_7.f90", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b349a81aa03c74c0d39fb5ac847c308ab63be76e/gcc%2Ftestsuite%2Fgfortran.dg%2Fspec_expr_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b349a81aa03c74c0d39fb5ac847c308ab63be76e/gcc%2Ftestsuite%2Fgfortran.dg%2Fspec_expr_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fspec_expr_7.f90?ref=b349a81aa03c74c0d39fb5ac847c308ab63be76e", "patch": "@@ -0,0 +1,34 @@\n+! { dg-do run }\n+!\n+! PR 60777: [F03] RECURSIVE function rejected in specification expression\n+!\n+! Contributed by Vladimir Fuka <vladimir.fuka@gmail.com>\n+\n+module recur\n+  implicit none\n+contains\n+\n+  pure recursive function f(n) result(answer)\n+    integer, intent(in) :: n\n+    integer             :: answer\n+    if (n<2) then\n+      answer = 1\n+    else\n+      answer = f(n-1)*n\n+    end if\n+  end function\n+\n+  pure function usef(n)\n+    integer,intent(in) :: n\n+    character(f(n))    :: usef\n+    usef = repeat('*',f(n))\n+  end function\n+end module\n+\n+program testspecexpr\n+  use recur\n+  implicit none\n+  if (usef(1) /= '*')      call abort()\n+  if (usef(2) /= '**')     call abort()\n+  if (usef(3) /= '******') call abort()\n+end"}]}