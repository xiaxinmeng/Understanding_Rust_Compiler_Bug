{"sha": "c0017f91c4895e8cc625614454d0e2571c077770", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzAwMTdmOTFjNDg5NWU4Y2M2MjU2MTQ0NTRkMGUyNTcxYzA3Nzc3MA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2019-03-07T00:53:41Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-03-07T00:53:41Z"}, "message": "re PR go/89227 (gotools test cmd/go fails with link error \"call lacks nop, can't restore toc; recompile with -fPIC\")\n\n\tPR go/89227\n\t* go-gcc.cc (Gcc_backend::function): Set TREE_PUBLIC for an\n\tonly-inline function.\n\nFrom-SVN: r269449", "tree": {"sha": "dc61aea344aa137c09ed7d6281764f2844c0f4a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc61aea344aa137c09ed7d6281764f2844c0f4a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0017f91c4895e8cc625614454d0e2571c077770", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0017f91c4895e8cc625614454d0e2571c077770", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0017f91c4895e8cc625614454d0e2571c077770", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0017f91c4895e8cc625614454d0e2571c077770/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "295bae04b2140479029ed5f47a78954cc5995122", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/295bae04b2140479029ed5f47a78954cc5995122", "html_url": "https://github.com/Rust-GCC/gccrs/commit/295bae04b2140479029ed5f47a78954cc5995122"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "2c88593b05b5915840125832aa8892c7d4c08c0b", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0017f91c4895e8cc625614454d0e2571c077770/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0017f91c4895e8cc625614454d0e2571c077770/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=c0017f91c4895e8cc625614454d0e2571c077770", "patch": "@@ -1,3 +1,9 @@\n+2019-03-06  Ian Lance Taylor  <iant@golang.org>\n+\n+\tPR go/89227\n+\t* go-gcc.cc (Gcc_backend::function): Set TREE_PUBLIC for an\n+\tonly-inline function.\n+\n 2019-02-15  Cherry Zhang  <cherryyz@google.com>\n \n \t* go-gcc.cc (Gcc_backend::Gcc_backend): Define __builtin_dwarf_cfa"}, {"sha": "1a52d9b22c1385c8a57b9127ade81a600d615a1f", "filename": "gcc/go/go-gcc.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0017f91c4895e8cc625614454d0e2571c077770/gcc%2Fgo%2Fgo-gcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0017f91c4895e8cc625614454d0e2571c077770/gcc%2Fgo%2Fgo-gcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-gcc.cc?ref=c0017f91c4895e8cc625614454d0e2571c077770", "patch": "@@ -3101,6 +3101,7 @@ Gcc_backend::function(Btype* fntype, const std::string& name,\n     resolve_unique_section(decl, 0, 1);\n   if ((flags & function_only_inline) != 0)\n     {\n+      TREE_PUBLIC (decl) = 1;\n       DECL_EXTERNAL(decl) = 1;\n       DECL_DECLARED_INLINE_P(decl) = 1;\n     }"}]}