{"sha": "e21c2e1c3823acc0628216d1eb7c959a17bffb50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIxYzJlMWMzODIzYWNjMDYyODIxNmQxZWI3Yzk1OWExN2JmZmI1MA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2002-08-23T03:39:51Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-08-23T03:39:51Z"}, "message": "acinclude.m4 (GLIBCPP_CONFIGURE_TESTSUITE): Set GLIBCPP_BUILD_ABI_CHECK based on cross compiling, build, host variables.\n\n\n2002-08-22  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* acinclude.m4 (GLIBCPP_CONFIGURE_TESTSUITE): Set\n\tGLIBCPP_BUILD_ABI_CHECK based on cross compiling, build, host\n\tvariables.\n\t* aclocal.m4: Regenerate.\n\t* testsuite/Makefile.am (noinst_PROGRAMS): Make conditional on\n\tnative compiling.\n\t* testsuite/Makefile.in: Regenerate.\n\nFrom-SVN: r56531", "tree": {"sha": "208e4cc8d4185c2c33a9c9f072a395f0cd555f0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/208e4cc8d4185c2c33a9c9f072a395f0cd555f0f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e21c2e1c3823acc0628216d1eb7c959a17bffb50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e21c2e1c3823acc0628216d1eb7c959a17bffb50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e21c2e1c3823acc0628216d1eb7c959a17bffb50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e21c2e1c3823acc0628216d1eb7c959a17bffb50/comments", "author": null, "committer": null, "parents": [{"sha": "809abaff7e0596958793b603fdccfe3e9898a9eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/809abaff7e0596958793b603fdccfe3e9898a9eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/809abaff7e0596958793b603fdccfe3e9898a9eb"}], "stats": {"total": 60, "additions": 48, "deletions": 12}, "files": [{"sha": "2d39ac52f2e899cbed0625c11d04a703352fc170", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e21c2e1c3823acc0628216d1eb7c959a17bffb50/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e21c2e1c3823acc0628216d1eb7c959a17bffb50/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e21c2e1c3823acc0628216d1eb7c959a17bffb50", "patch": "@@ -1,3 +1,13 @@\n+2002-08-22  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* acinclude.m4 (GLIBCPP_CONFIGURE_TESTSUITE): Set\n+\tGLIBCPP_BUILD_ABI_CHECK based on cross compiling, build, host\n+\tvariables.\n+\t* aclocal.m4: Regenerate.\n+\t* testsuite/Makefile.am (noinst_PROGRAMS): Make conditional on\n+\tnative compiling.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t\n 2002-08-22  Loren J. Rittle <ljrittle@acm.org>\n \n \t* testsuite/abi_check.cc: Enhance shell portability."}, {"sha": "075427d0ff9d29b33c048776d1b69d1839d3a1f8", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e21c2e1c3823acc0628216d1eb7c959a17bffb50/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e21c2e1c3823acc0628216d1eb7c959a17bffb50/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=e21c2e1c3823acc0628216d1eb7c959a17bffb50", "patch": "@@ -2030,6 +2030,10 @@ AC_DEFUN(GLIBCPP_CONFIGURE_TESTSUITE, [\n   # Export file names for ABI checking.\n   baseline_file=\"${glibcpp_srcdir}/config/abi/${target_alias}/baseline_symbols.txt\"\n   AC_SUBST(baseline_file)\n+\n+  # Don't do ABI checking unless native.\n+  AM_CONDITIONAL(GLIBCPP_BUILD_ABI_CHECK,\n+                 test x\"$build\" == x\"$host\" && test -z \"$with_cross_host\")\n ])\n \n "}, {"sha": "dddb6bab840504560b626c50616c88bfb0977a04", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e21c2e1c3823acc0628216d1eb7c959a17bffb50/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e21c2e1c3823acc0628216d1eb7c959a17bffb50/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=e21c2e1c3823acc0628216d1eb7c959a17bffb50", "patch": "@@ -2042,6 +2042,10 @@ AC_DEFUN(GLIBCPP_CONFIGURE_TESTSUITE, [\n   # Export file names for ABI checking.\n   baseline_file=\"${glibcpp_srcdir}/config/abi/${target_alias}/baseline_symbols.txt\"\n   AC_SUBST(baseline_file)\n+\n+  # Don't do ABI checking unless native.\n+  AM_CONDITIONAL(GLIBCPP_BUILD_ABI_CHECK,\n+                 test x\"$build\" == x\"$host\" && test -z \"$with_cross_host\")\n ])\n \n "}, {"sha": "d1930eb63c90c5d5c30cb42d016091ccb782aba9", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e21c2e1c3823acc0628216d1eb7c959a17bffb50/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e21c2e1c3823acc0628216d1eb7c959a17bffb50/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=e21c2e1c3823acc0628216d1eb7c959a17bffb50", "patch": "@@ -22084,6 +22084,17 @@ done\n   baseline_file=\"${glibcpp_srcdir}/config/abi/${target_alias}/baseline_symbols.txt\"\n   \n \n+  # Don't do ABI checking unless native.\n+  \n+\n+if test x\"$build\" == x\"$host\" && test -z \"$with_cross_host\"; then\n+  GLIBCPP_BUILD_ABI_CHECK_TRUE=\n+  GLIBCPP_BUILD_ABI_CHECK_FALSE='#'\n+else\n+  GLIBCPP_BUILD_ABI_CHECK_TRUE='#'\n+  GLIBCPP_BUILD_ABI_CHECK_FALSE=\n+fi\n+\n fi\n \n # This depends on the possibly-skipped linker test above.\n@@ -22113,18 +22124,18 @@ fi\n # Check to see if libgcc_s exists, indicating that shared libgcc is possible.\n if test $enable_symvers != no; then\n   echo $ac_n \"checking for shared libgcc\"\"... $ac_c\" 1>&6\n-echo \"configure:22117: checking for shared libgcc\" >&5\n+echo \"configure:22128: checking for shared libgcc\" >&5\n   ac_save_CFLAGS=\"$CFLAGS\"\n   CFLAGS=' -lgcc_s'\n   cat > conftest.$ac_ext <<EOF\n-#line 22121 \"configure\"\n+#line 22132 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n return 0\n ; return 0; }\n EOF\n-if { (eval echo configure:22128: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:22139: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   glibcpp_shared_libgcc=yes\n else\n@@ -22159,14 +22170,14 @@ if test $enable_symvers = yes ; then\n       echo 'FOO { global: f[a-z]o; local: *; };' > conftest.map\n       \n       cat > conftest.$ac_ext <<EOF\n-#line 22163 \"configure\"\n+#line 22174 \"configure\"\n #include \"confdefs.h\"\n int foo;\n int main() {\n \n ; return 0; }\n EOF\n-if { (eval echo configure:22170: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:22181: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   enable_symvers=gnu\n else\n@@ -22208,7 +22219,7 @@ else\n   GLIBCPP_BUILD_VERSIONED_SHLIB_FALSE=\n fi\n echo $ac_n \"checking versioning on shared library symbols\"\"... $ac_c\" 1>&6\n-echo \"configure:22212: checking versioning on shared library symbols\" >&5\n+echo \"configure:22223: checking versioning on shared library symbols\" >&5\n echo \"$ac_t\"\"$enable_symvers\" 1>&6\n \n \n@@ -22297,7 +22308,7 @@ glibcpp_prefixdir=${prefix}\n \n # Process the option --with-gxx-include-dir=<path to include-files directory>\n echo $ac_n \"checking for --with-gxx-include-dir\"\"... $ac_c\" 1>&6\n-echo \"configure:22301: checking for --with-gxx-include-dir\" >&5\n+echo \"configure:22312: checking for --with-gxx-include-dir\" >&5\n # Check whether --with-gxx-include-dir or --without-gxx-include-dir was given.\n if test \"${with_gxx_include_dir+set}\" = set; then\n   withval=\"$with_gxx_include_dir\"\n@@ -22321,7 +22332,7 @@ echo \"$ac_t\"\"$gxx_include_dir\" 1>&6\n \n # Process the option \"--enable-version-specific-runtime-libs\"\n echo $ac_n \"checking for --enable-version-specific-runtime-libs\"\"... $ac_c\" 1>&6\n-echo \"configure:22325: checking for --enable-version-specific-runtime-libs\" >&5\n+echo \"configure:22336: checking for --enable-version-specific-runtime-libs\" >&5\n # Check whether --enable-version-specific-runtime-libs or --disable-version-specific-runtime-libs was given.\n if test \"${enable_version_specific_runtime_libs+set}\" = set; then\n   enableval=\"$enable_version_specific_runtime_libs\"\n@@ -22367,7 +22378,7 @@ if test x\"$glibcpp_toolexecdir\" = x\"no\"; then\n fi\n \n echo $ac_n \"checking for install location\"\"... $ac_c\" 1>&6\n-echo \"configure:22371: checking for install location\" >&5\n+echo \"configure:22382: checking for install location\" >&5\n echo \"$ac_t\"\"$gxx_include_dir\" 1>&6\n \n \n@@ -22647,6 +22658,8 @@ s%@OPT_LDFLAGS@%$OPT_LDFLAGS%g\n s%@LIBMATHOBJS@%$LIBMATHOBJS%g\n s%@WERROR@%$WERROR%g\n s%@baseline_file@%$baseline_file%g\n+s%@GLIBCPP_BUILD_ABI_CHECK_TRUE@%$GLIBCPP_BUILD_ABI_CHECK_TRUE%g\n+s%@GLIBCPP_BUILD_ABI_CHECK_FALSE@%$GLIBCPP_BUILD_ABI_CHECK_FALSE%g\n s%@GLIBCPP_BUILD_VERSIONED_SHLIB_TRUE@%$GLIBCPP_BUILD_VERSIONED_SHLIB_TRUE%g\n s%@GLIBCPP_BUILD_VERSIONED_SHLIB_FALSE@%$GLIBCPP_BUILD_VERSIONED_SHLIB_FALSE%g\n s%@OS_INC_SRCDIR@%$OS_INC_SRCDIR%g"}, {"sha": "cda8f110d66d84824a540c1ba9f27dac86a66efd", "filename": "libstdc++-v3/testsuite/Makefile.am", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e21c2e1c3823acc0628216d1eb7c959a17bffb50/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e21c2e1c3823acc0628216d1eb7c959a17bffb50/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am?ref=e21c2e1c3823acc0628216d1eb7c959a17bffb50", "patch": "@@ -53,5 +53,10 @@ noinst_LIBRARIES = libv3test.a\n libv3test_a_SOURCES = testsuite_hooks.cc\n \n ## Build support utilities.\n+## Only build this as native, as need to find startup files and libc to link.\n+if GLIBCPP_BUILD_ABI_CHECK\n noinst_PROGRAMS = abi_check\n+else\n+noinst_PROGRAMS = \n+endif\n abi_check_SOURCES = abi_check.cc"}, {"sha": "25ce0f09971e4d189f7a30003d1fffeccfa34349", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e21c2e1c3823acc0628216d1eb7c959a17bffb50/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e21c2e1c3823acc0628216d1eb7c959a17bffb50/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=e21c2e1c3823acc0628216d1eb7c959a17bffb50", "patch": "@@ -163,8 +163,8 @@ INCLUDES = \\\n \n noinst_LIBRARIES = libv3test.a\n libv3test_a_SOURCES = testsuite_hooks.cc\n-\n-noinst_PROGRAMS = abi_check\n+@GLIBCPP_BUILD_ABI_CHECK_TRUE@noinst_PROGRAMS = @GLIBCPP_BUILD_ABI_CHECK_TRUE@abi_check\n+@GLIBCPP_BUILD_ABI_CHECK_FALSE@noinst_PROGRAMS = \n abi_check_SOURCES = abi_check.cc\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n CONFIG_HEADER = ../config.h\n@@ -178,7 +178,7 @@ LDFLAGS = @LDFLAGS@\n LIBS = @LIBS@\n libv3test_a_LIBADD = \n libv3test_a_OBJECTS =  testsuite_hooks.$(OBJEXT)\n-noinst_PROGRAMS =  abi_check$(EXEEXT)\n+@GLIBCPP_BUILD_ABI_CHECK_FALSE@noinst_PROGRAMS = \n PROGRAMS =  $(noinst_PROGRAMS)\n \n abi_check_OBJECTS =  abi_check.$(OBJEXT)"}]}