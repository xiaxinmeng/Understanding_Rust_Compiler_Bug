{"sha": "cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M4MjJjYzFmM2YwNjgxNGNjZmEyMWQ5ZDNlYmU1NDA1YTY5NzVjNw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-07-29T18:19:29Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-07-29T18:19:29Z"}, "message": "driver-native.c [__sgi__]: Include <invent.h>, <sys/sbd.h>.\n\n\t* config/mips/driver-native.c [__sgi__]: Include <invent.h>,\n\t<sys/sbd.h>.\n\t(cpu_types): New array.\n\t(cputype): New function.\n\t(host_detect_local_cpu): Only define buf, f if !__sgi__.\n\tUse scaninvent instead of /proc/cpuinfo if __sgi__.\n\t* config.host: Also use driver-native.o, mips/x-native on\n\tmips-sgi-irix*.\n\t* config/mips/iris6.h [__mips__] (host_detect_local_cpu):\n\tDeclare.\n\t(EXTRA_SPEC_FUNCTIONS, MARCH_MTUNE_NATIVE_SPECS): Define.\n\t(DRIVER_SELF_SPECS): Add MARCH_MTUNE_NATIVE_SPECS.\n\nFrom-SVN: r176947", "tree": {"sha": "67f398530eb3bd9aedabefce738b4a513d5ddbab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67f398530eb3bd9aedabefce738b4a513d5ddbab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2514265077f4260ae10377791317c6754b3292df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2514265077f4260ae10377791317c6754b3292df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2514265077f4260ae10377791317c6754b3292df"}], "stats": {"total": 97, "additions": 93, "deletions": 4}, "files": [{"sha": "6c707bb6fd9b4cdbb0be6b4848fb2af3f69dc90f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,3 +1,18 @@\n+2011-07-29  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config/mips/driver-native.c [__sgi__]: Include <invent.h>,\n+\t<sys/sbd.h>.\n+\t(cpu_types): New array.\n+\t(cputype): New function.\n+\t(host_detect_local_cpu): Only define buf, f if !__sgi__.\n+\tUse scaninvent instead of /proc/cpuinfo if __sgi__.\n+\t* config.host: Also use driver-native.o, mips/x-native on\n+\tmips-sgi-irix*.\n+\t* config/mips/iris6.h [__mips__] (host_detect_local_cpu):\n+\tDeclare.\n+\t(EXTRA_SPEC_FUNCTIONS, MARCH_MTUNE_NATIVE_SPECS): Define.\n+\t(DRIVER_SELF_SPECS): Add MARCH_MTUNE_NATIVE_SPECS.\n+\n 2011-07-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/49897"}, {"sha": "85009d1b45c606dd9714f0b8335d13c79e6bc028", "filename": "gcc/config.host", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/gcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/gcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.host?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -118,9 +118,9 @@ case ${host} in\n \t;;\n     esac\n     ;;\n-  mips*-*-linux*)\n+  mips*-*-linux* | mips-sgi-irix*)\n     case ${target} in\n-      mips*-*-linux*)\n+      mips*-*-linux* | mips-sgi-irix*)\n \thost_extra_gcc_objs=\"driver-native.o\"\n \thost_xmake_file=\"${host_xmake_file} mips/x-native\"\n       ;;"}, {"sha": "ec5adf42867886c68d3594ed8512575701d099bc", "filename": "gcc/config/mips/driver-native.c", "status": "modified", "additions": 60, "deletions": 1, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/gcc%2Fconfig%2Fmips%2Fdriver-native.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/gcc%2Fconfig%2Fmips%2Fdriver-native.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fdriver-native.c?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for the gcc driver.\n-   Copyright (C) 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2008, 2011 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -22,6 +22,59 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n \n+#ifdef __sgi__\n+#include <invent.h>\n+#include <sys/sbd.h>\n+\n+/* Cf. MIPS R10000 Microprocessor User Guide, Version 2.0, 14.13 Processor\n+   Revision Identifier (PRId) Register (15).\n+\n+   http://techpubs.sgi.com/library/tpl/cgi-bin/getdoc.cgi/hdwr/bks/SGI_Developer/books/R10K_UM/sgi_html/t5.Ver.2.0.book_279.html  */\n+\n+static const struct cpu_types {\n+  int impl;\n+  const char *cpu;\n+} cpu_types[] = {\n+  { C0_IMP_R2000, \"r2000\" },\n+  { C0_IMP_R3000, \"r3000\" },\n+  { C0_IMP_R6000, \"r6000\" },\n+  { C0_IMP_R4000, \"r4000\" },\n+  { C0_IMP_R6000A, \"r6000\" },\n+  { C0_IMP_R10000, \"r10000\" },\n+  { C0_IMP_R12000, \"r12000\" },\n+  { C0_IMP_R14000, \"r14000\" },\n+  { C0_IMP_R8000,  \"r8000\" },\n+  { C0_IMP_R4600,  \"r4600\" },\n+  { C0_IMP_R4700,  \"r4600\" },\n+  { C0_IMP_R4650,  \"r4650\" },\n+  { C0_IMP_R5000,  \"vr5000\" },\n+  { C0_IMP_RM7000, \"rm7000\" },\n+  { C0_IMP_RM5271, \"vr5000\" },\n+  { 0, 0 }\n+};\n+\n+static int\n+cputype (inventory_t *inv, void *arg)\n+{\n+  if (inv != NULL\n+      && inv->inv_class == INV_PROCESSOR\n+      && inv->inv_type == INV_CPUCHIP)\n+    {\n+      int i;\n+      /* inv_state is the cpu revision number.  */\n+      int impl = (inv->inv_state & C0_IMPMASK) >> C0_IMPSHIFT;\n+\n+      for (i = 0; cpu_types[i].cpu != NULL; i++)\n+\tif (cpu_types[i].impl == impl)\n+\t  {\n+\t    *((const char **) arg) = cpu_types[i].cpu;\n+\t    break;\n+\t  }\n+    }\n+  return 0;\n+}\n+#endif\n+\n /* This will be called by the spec parser in gcc.c when it sees\n    a %:local_cpu_detect(args) construct.  Currently it will be called\n    with either \"arch\" or \"tune\" as argument depending on if -march=native\n@@ -39,8 +92,10 @@ const char *\n host_detect_local_cpu (int argc, const char **argv)\n {\n   const char *cpu = NULL;\n+#ifndef __sgi__\n   char buf[128];\n   FILE *f;\n+#endif\n   bool arch;\n \n   if (argc < 1)\n@@ -50,6 +105,9 @@ host_detect_local_cpu (int argc, const char **argv)\n   if (!arch && strcmp (argv[0], \"tune\"))\n     return NULL;\n \n+#ifdef __sgi__\n+  scaninvent (cputype, &cpu);\n+#else\n   f = fopen (\"/proc/cpuinfo\", \"r\");\n   if (f == NULL)\n     return NULL;\n@@ -73,6 +131,7 @@ host_detect_local_cpu (int argc, const char **argv)\n       }\n \n   fclose (f);\n+#endif\n \n   if (cpu == NULL)\n     return NULL;"}, {"sha": "7ab1f7864dd289c2375153bc22a225f7ad561d53", "filename": "gcc/config/mips/iris6.h", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/gcc%2Fconfig%2Fmips%2Firis6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/gcc%2Fconfig%2Fmips%2Firis6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis6.h?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -27,13 +27,28 @@ along with GCC; see the file COPYING3.  If not see\n #undef MULTILIB_DEFAULTS\n #define MULTILIB_DEFAULTS { \"mabi=n32\" }\n \n+/* -march=native handling only makes sense with compiler running on\n+   a MIPS chip.  */\n+#if defined(__mips__)\n+extern const char *host_detect_local_cpu (int argc, const char **argv);\n+# define EXTRA_SPEC_FUNCTIONS \\\n+  { \"local_cpu_detect\", host_detect_local_cpu },\n+\n+# define MARCH_MTUNE_NATIVE_SPECS\t\t\t\t\\\n+  \" %{march=native:%<march=native %:local_cpu_detect(arch)}\"\t\\\n+  \" %{mtune=native:%<mtune=native %:local_cpu_detect(tune)}\"\n+#else\n+# define MARCH_MTUNE_NATIVE_SPECS \"\"\n+#endif\n+\n /* Force the default ABI onto the command line in order to make the specs\n    easier to write.  */\n #undef DRIVER_SELF_SPECS\n #define DRIVER_SELF_SPECS \t\t\t\\\n   \"%{!mabi=*: -mabi=n32}\", \t\t\t\\\n   /* Configuration-independent MIPS rules.  */\t\\\n-  BASE_DRIVER_SELF_SPECS\n+  BASE_DRIVER_SELF_SPECS,\t\t\t\\\n+  MARCH_MTUNE_NATIVE_SPECS\n \n /* IRIX 6.5 has the float and long double forms of math functions.  */\n #define TARGET_C99_FUNCTIONS 1"}]}