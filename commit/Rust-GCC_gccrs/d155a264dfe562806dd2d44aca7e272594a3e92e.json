{"sha": "d155a264dfe562806dd2d44aca7e272594a3e92e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE1NWEyNjRkZmU1NjI4MDZkZDJkNDRhY2E3ZTI3MjU5NGEzZTkyZQ==", "commit": {"author": {"name": "Sudakshina Das", "email": "sudi.das@arm.com", "date": "2017-10-06T13:25:18Z"}, "committer": {"name": "Tamar Christina", "email": "tnfchris@gcc.gnu.org", "date": "2017-10-06T13:25:18Z"}, "message": "Committed on behalf of Sudi Das\n\n2017-10-06  Sudakshina Das  <sudi.das@arm.com>\n\n\tPR target/82440\n\t* config/aarch64/predicates.md (aarch64_reg_or_orr_imm): Only call\n\taarch64_simd_valid_immediate on CONST_VECTORs.\n\t(aarch64_reg_or_bic_imm): Likewise.\n\n*** gcc/testsuite/ChangeLog ***\n\n2017-10-06  Sudakshina Das  <sudi.das@arm.com>\n\n\t* gcc.target/aarch64/bic_imm_1.c: New test.\n\t* gcc.target/aarch64/orr_imm_1.c: Likewise.\n\nFrom-SVN: r253490", "tree": {"sha": "e936357bf426c8b4f09b3315239cf441a39480e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e936357bf426c8b4f09b3315239cf441a39480e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d155a264dfe562806dd2d44aca7e272594a3e92e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d155a264dfe562806dd2d44aca7e272594a3e92e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d155a264dfe562806dd2d44aca7e272594a3e92e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d155a264dfe562806dd2d44aca7e272594a3e92e/comments", "author": {"login": "sudakshina-das-arm", "id": 28538945, "node_id": "MDQ6VXNlcjI4NTM4OTQ1", "avatar_url": "https://avatars.githubusercontent.com/u/28538945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sudakshina-das-arm", "html_url": "https://github.com/sudakshina-das-arm", "followers_url": "https://api.github.com/users/sudakshina-das-arm/followers", "following_url": "https://api.github.com/users/sudakshina-das-arm/following{/other_user}", "gists_url": "https://api.github.com/users/sudakshina-das-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/sudakshina-das-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sudakshina-das-arm/subscriptions", "organizations_url": "https://api.github.com/users/sudakshina-das-arm/orgs", "repos_url": "https://api.github.com/users/sudakshina-das-arm/repos", "events_url": "https://api.github.com/users/sudakshina-das-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/sudakshina-das-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e833f686bb246d02dda9096653214ba657f460ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e833f686bb246d02dda9096653214ba657f460ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e833f686bb246d02dda9096653214ba657f460ba"}], "stats": {"total": 132, "additions": 128, "deletions": 4}, "files": [{"sha": "ecc6e5ba0c9760ce8bb9eb427f7ad5092bc016a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d155a264dfe562806dd2d44aca7e272594a3e92e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d155a264dfe562806dd2d44aca7e272594a3e92e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d155a264dfe562806dd2d44aca7e272594a3e92e", "patch": "@@ -1,3 +1,10 @@\n+2017-10-06  Sudakshina Das  <sudi.das@arm.com>\n+\n+\tPR target/82440\n+\t* config/aarch64/predicates.md (aarch64_reg_or_orr_imm): Only call\n+\taarch64_simd_valid_immediate on CONST_VECTORs.\n+\t(aarch64_reg_or_bic_imm): Likewise.\n+\n 2017-10-06  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \tPR rtl-optimization/82396"}, {"sha": "bf23b88cb596a6374250e2bba08fc58ea420e5c0", "filename": "gcc/config/aarch64/predicates.md", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d155a264dfe562806dd2d44aca7e272594a3e92e/gcc%2Fconfig%2Faarch64%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d155a264dfe562806dd2d44aca7e272594a3e92e/gcc%2Fconfig%2Faarch64%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fpredicates.md?ref=d155a264dfe562806dd2d44aca7e272594a3e92e", "patch": "@@ -71,13 +71,15 @@\n \n (define_predicate \"aarch64_reg_or_orr_imm\"\n    (ior (match_operand 0 \"register_operand\")\n-\t(match_test \"aarch64_simd_valid_immediate (op, mode, false,\n-\t\t\t\t\t\t   NULL, AARCH64_CHECK_ORR)\")))\n+\t(and (match_code \"const_vector\")\n+\t     (match_test \"aarch64_simd_valid_immediate (op, mode, false,\n+\t\t\t\t\t\tNULL, AARCH64_CHECK_ORR)\"))))\n \n (define_predicate \"aarch64_reg_or_bic_imm\"\n    (ior (match_operand 0 \"register_operand\")\n-\t(match_test \"aarch64_simd_valid_immediate (op, mode, false,\n-\t\t\t\t\t\t   NULL, AARCH64_CHECK_BIC)\")))\n+\t(and (match_code \"const_vector\")\n+\t     (match_test \"aarch64_simd_valid_immediate (op, mode, false,\n+\t\t\t\t\t\tNULL, AARCH64_CHECK_BIC)\"))))\n \n (define_predicate \"aarch64_fp_compare_operand\"\n   (ior (match_operand 0 \"register_operand\")"}, {"sha": "2e6ca4f4bb62efbae565e8ec7d1f65286530dcf4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d155a264dfe562806dd2d44aca7e272594a3e92e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d155a264dfe562806dd2d44aca7e272594a3e92e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d155a264dfe562806dd2d44aca7e272594a3e92e", "patch": "@@ -1,3 +1,8 @@\n+2017-10-06  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* gcc.target/aarch64/bic_imm_1.c: New test.\n+\t* gcc.target/aarch64/orr_imm_1.c: Likewise.\n+\n 2017-10-06  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/60153"}, {"sha": "b14f0091ff5c78dd56bc02a3913d473f71e192a1", "filename": "gcc/testsuite/gcc.target/aarch64/bic_imm_1.c", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d155a264dfe562806dd2d44aca7e272594a3e92e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbic_imm_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d155a264dfe562806dd2d44aca7e272594a3e92e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbic_imm_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbic_imm_1.c?ref=d155a264dfe562806dd2d44aca7e272594a3e92e", "patch": "@@ -0,0 +1,56 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-O2 --save-temps -ftree-vectorize\" } */\n+\n+/* Each function uses the correspoding 'CLASS' in\n+   Marco CHECK (aarch64_simd_valid_immediate).  */\n+\n+void\n+bic_6 (int *a)\n+{\n+  for (int i = 0; i < 1024; i++)\n+    a[i] &= ~(0xab);\n+}\n+\n+void\n+bic_7 (int *a)\n+{\n+  for (int i = 0; i < 1024; i++)\n+    a[i] &= ~(0xcd00);\n+}\n+\n+void\n+bic_8 (int *a)\n+{\n+  for (int i = 0; i < 1024; i++)\n+    a[i] &= ~(0xef0000);\n+}\n+\n+void\n+bic_9 (int *a)\n+{\n+  for (int i = 0; i < 1024; i++)\n+    a[i] &= ~(0x12000000);\n+}\n+\n+void\n+bic_10 (short *a)\n+{\n+  for (int i = 0; i < 1024; i++)\n+    a[i] &= ~(0x34);\n+}\n+\n+\n+void\n+bic_11 (short *a)\n+{\n+  for (int i = 0; i < 1024; i++)\n+    a[i] &= ~(0x5600);\n+}\n+\n+\n+/* { dg-final { scan-assembler \"bic\\\\tv\\[0-9\\]+.4s, #171\" } } */\n+/* { dg-final { scan-assembler \"bic\\\\tv\\[0-9\\]+.4s, #205, lsl #8\" } } */\n+/* { dg-final { scan-assembler \"bic\\\\tv\\[0-9\\]+.4s, #239, lsl #16\" } } */\n+/* { dg-final { scan-assembler \"bic\\\\tv\\[0-9\\]+.4s, #18, lsl #24\" } } */\n+/* { dg-final { scan-assembler \"bic\\\\tv\\[0-9\\]+.8h, #52\" } } */\n+/* { dg-final { scan-assembler \"bic\\\\tv\\[0-9\\]+.8h, #86, lsl #8\" } } */"}, {"sha": "ff6f68350eb5df07cf3a8499eee7af8b37aa64b1", "filename": "gcc/testsuite/gcc.target/aarch64/orr_imm_1.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d155a264dfe562806dd2d44aca7e272594a3e92e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Forr_imm_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d155a264dfe562806dd2d44aca7e272594a3e92e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Forr_imm_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Forr_imm_1.c?ref=d155a264dfe562806dd2d44aca7e272594a3e92e", "patch": "@@ -0,0 +1,54 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-O2 --save-temps -ftree-vectorize\" } */\n+\n+/* Each function uses the correspoding 'CLASS' in\n+   Marco CHECK (aarch64_simd_valid_immediate).  */\n+\n+void\n+orr_0 (int *a)\n+{\n+  for (int i = 0; i < 1024; i++)\n+    a[i] |= 0xab;\n+}\n+\n+void\n+orr_1 (int *a)\n+{\n+  for (int i = 0; i < 1024; i++)\n+    a[i] |= 0x0000cd00;\n+}\n+\n+void\n+orr_2 (int *a)\n+{\n+  for (int i = 0; i < 1024; i++)\n+    a[i] |= 0x00ef0000;\n+}\n+\n+void\n+orr_3 (int *a)\n+{\n+  for (int i = 0; i < 1024; i++)\n+    a[i] |= 0x12000000;\n+}\n+\n+void\n+orr_4 (short *a)\n+{\n+  for (int i = 0; i < 1024; i++)\n+    a[i] |= 0x00340034;\n+}\n+\n+void\n+orr_5 (int *a)\n+{\n+  for (int i = 0; i < 1024; i++)\n+    a[i] |= 0x56005600;\n+}\n+\n+/* { dg-final { scan-assembler \"orr\\\\tv\\[0-9\\]+.4s, #171\" } } */\n+/* { dg-final { scan-assembler \"orr\\\\tv\\[0-9\\]+.4s, #205, lsl #8\" } } */\n+/* { dg-final { scan-assembler \"orr\\\\tv\\[0-9\\]+.4s, #239, lsl #16\" } } */\n+/* { dg-final { scan-assembler \"orr\\\\tv\\[0-9\\]+.4s, #18, lsl #24\" } } */\n+/* { dg-final { scan-assembler \"orr\\\\tv\\[0-9\\]+.8h, #52\" } } */\n+/* { dg-final { scan-assembler \"orr\\\\tv\\[0-9\\]+.8h, #86, lsl #8\" } } */"}]}