{"sha": "5096114103d8760599ed4377fde637b22a9e5e91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA5NjExNDEwM2Q4NzYwNTk5ZWQ0Mzc3ZmRlNjM3YjIyYTllNWU5MQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2007-02-06T18:25:47Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2007-02-06T18:25:47Z"}, "message": "constraints.md (Y2): Rename from Y.\n\n        * config/i386/constraints.md (Y2): Rename from Y.\n        (Yi): New constraint. \n        * config/i386/i386.md (movsi_1, movdi_2, pushdf_nointeger,\n        pushdf_integer, movdf_nointeger, movdf_integer, zero_extendsidi2_32,\n        zero_extendsidi2_rex64, truncxfdf2_mixed): Change Y constraints to Y2.\n        (extendsfdf2_mixed, extendsfdf2_sse, truncdfsf_fast_mixed,\n        truncdfsf_fast_sse, truncdfsf_mixed, fix_truncdfdi_sse,\n        fix_truncdfsi_sse, floatsidf2_mixed, floatsidf2_sse,\n        floatdidf2_mixed, floatdidf2_sse, absnegdf2_mixed,\n        absnegdf2_sse, sse_setccdf, fop_df_comm_mixed, fop_df_comm_sse,\n        fop_df_1_mixed, fop_df_1_sse): Change Y constraints to x.\n        * config/i386/mmx.md (mov<MMXMODEI>_internal_rex64,\n        mov<MMXMODEI>_internal, movv2sf_internal_rex64, movv2sf_internal,\n        vec_extractv2si_1): Change Y constraints to Y2.\n        * config/i386/sse.md (vec_setv4sf_0, vec_concatv2df, vec_dupv4si,\n        vec_dupv2di, sse2_concatv2si, vec_concatv4si_1, vec_concatv2di):\n        Change Y constraints to Y2.\n        (sse2_loadld): Change Y constraints to x.\n\nFrom-SVN: r121660", "tree": {"sha": "28b4eb7c364b7f4fa02be5fa59dc61ffb439e7f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28b4eb7c364b7f4fa02be5fa59dc61ffb439e7f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5096114103d8760599ed4377fde637b22a9e5e91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5096114103d8760599ed4377fde637b22a9e5e91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5096114103d8760599ed4377fde637b22a9e5e91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5096114103d8760599ed4377fde637b22a9e5e91/comments", "author": null, "committer": null, "parents": [{"sha": "6728236fe94d5562e319cf1fd39f9fa5bb6fa2ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6728236fe94d5562e319cf1fd39f9fa5bb6fa2ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6728236fe94d5562e319cf1fd39f9fa5bb6fa2ea"}], "stats": {"total": 198, "additions": 115, "deletions": 83}, "files": [{"sha": "5daa426e453210ed9ea5d77bc8fb983eb3870afe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5096114103d8760599ed4377fde637b22a9e5e91/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5096114103d8760599ed4377fde637b22a9e5e91/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5096114103d8760599ed4377fde637b22a9e5e91", "patch": "@@ -1,3 +1,24 @@\n+2007-02-06  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/constraints.md (Y2): Rename from Y.\n+\t(Yi): New constraint.\n+\t* config/i386/i386.md (movsi_1, movdi_2, pushdf_nointeger,\n+\tpushdf_integer, movdf_nointeger, movdf_integer, zero_extendsidi2_32,\n+\tzero_extendsidi2_rex64, truncxfdf2_mixed): Change Y constraints to Y2.\n+\t(extendsfdf2_mixed, extendsfdf2_sse, truncdfsf_fast_mixed,\n+\ttruncdfsf_fast_sse, truncdfsf_mixed, fix_truncdfdi_sse,\n+\tfix_truncdfsi_sse, floatsidf2_mixed, floatsidf2_sse,\n+\tfloatdidf2_mixed, floatdidf2_sse, absnegdf2_mixed, \n+\tabsnegdf2_sse, sse_setccdf, fop_df_comm_mixed, fop_df_comm_sse,\n+\tfop_df_1_mixed, fop_df_1_sse): Change Y constraints to x.\n+\t* config/i386/mmx.md (mov<MMXMODEI>_internal_rex64,\n+\tmov<MMXMODEI>_internal, movv2sf_internal_rex64, movv2sf_internal,\n+\tvec_extractv2si_1): Change Y constraints to Y2.\n+\t* config/i386/sse.md (vec_setv4sf_0, vec_concatv2df, vec_dupv4si,\n+\tvec_dupv2di, sse2_concatv2si, vec_concatv4si_1, vec_concatv2di):\n+\tChange Y constraints to Y2.\n+\t(sse2_loadld): Change Y constraints to x.\n+\n 2007-02-06  Roger Sayle  <roger@eyesopen.com>\n \n \t* config/rs6000/rs6000.md (popcount<mode>2): Rewrite."}, {"sha": "f5b7c5134285df7c7853f9bcaeab5bef54d2d965", "filename": "gcc/config/i386/constraints.md", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5096114103d8760599ed4377fde637b22a9e5e91/gcc%2Fconfig%2Fi386%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5096114103d8760599ed4377fde637b22a9e5e91/gcc%2Fconfig%2Fi386%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fconstraints.md?ref=5096114103d8760599ed4377fde637b22a9e5e91", "patch": "@@ -83,8 +83,16 @@\n (define_register_constraint \"x\" \"TARGET_SSE ? SSE_REGS : NO_REGS\"\n  \"Any SSE register.\")\n \n-(define_register_constraint \"Y\" \"TARGET_SSE2? SSE_REGS : NO_REGS\"\n- \"@internal Any SSE2 register.\")\n+;; We use the Y prefix to denote any number of conditional register sets:\n+;;  2\tSSE2 enabled\n+;;  i\tSSE2 inter-unit moves enabled\n+\n+(define_register_constraint \"Y2\" \"TARGET_SSE2 ? SSE_REGS : NO_REGS\"\n+ \"@internal Any SSE register, when SSE2 is enabled.\")\n+\n+(define_register_constraint \"Yi\"\n+ \"TARGET_SSE2 && TARGET_INTER_UNIT_MOVES ? SSE_REGS : NO_REGS\"\n+ \"@internal Any SSE register, when SSE2 and inter-unit moves are enabled.\")\n \n ;; Integer constant constraints.\n (define_constraint \"I\""}, {"sha": "ffb575a8075e691b2c5e6496eeea5b883d66b152", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 54, "deletions": 51, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5096114103d8760599ed4377fde637b22a9e5e91/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5096114103d8760599ed4377fde637b22a9e5e91/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=5096114103d8760599ed4377fde637b22a9e5e91", "patch": "@@ -1187,9 +1187,9 @@\n \n (define_insn \"*movsi_1\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\"\n-\t\t\t\"=r  ,m  ,*y,*y,?rm,?*y,*x,*x,?r,m ,?*Y,*x\")\n+\t\t\t\"=r  ,m  ,*y,*y,?rm,?*y,*x,*x,?r ,m ,?*Y2,*x\")\n \t(match_operand:SI 1 \"general_operand\"\n-\t\t\t\"rinm,rin,C ,*y,*y ,rm ,C ,*x,*Y,*x,r  ,m \"))]\n+\t\t\t\"rinm,rin,C ,*y,*y ,rm ,C ,*x,*Y2,*x,r   ,m \"))]\n   \"!(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n {\n   switch (get_attr_type (insn))\n@@ -1981,9 +1981,9 @@\n \n (define_insn \"*movdi_2\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\"\n-\t\t\t\t\"=r  ,o  ,*y,m*y,*y,*Y,m ,*Y,*Y,*x,m ,*x,*x\")\n+\t\t\t\"=r  ,o  ,*y,m*y,*y,*Y2,m  ,*Y2,*Y2,*x,m ,*x,*x\")\n \t(match_operand:DI 1 \"general_operand\"\n-\t\t\t\t\"riFo,riF,C ,*y ,m ,C ,*Y,*Y,m ,C ,*x,*x,m \"))]\n+\t\t\t\"riFo,riF,C ,*y ,m ,C  ,*Y2,*Y2,m  ,C ,*x,*x,m \"))]\n   \"!TARGET_64BIT && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"@\n    #\n@@ -2437,7 +2437,7 @@\n \n (define_insn \"*pushdf_nointeger\"\n   [(set (match_operand:DF 0 \"push_operand\" \"=<,<,<,<\")\n-\t(match_operand:DF 1 \"general_no_elim_operand\" \"f,Fo,*r,Y\"))]\n+\t(match_operand:DF 1 \"general_no_elim_operand\" \"f,Fo,*r,Y2\"))]\n   \"!TARGET_64BIT && !TARGET_INTEGER_DFMODE_MOVES\"\n {\n   /* This insn should be already split before reg-stack.  */\n@@ -2449,7 +2449,7 @@\n \n (define_insn \"*pushdf_integer\"\n   [(set (match_operand:DF 0 \"push_operand\" \"=<,<,<\")\n-\t(match_operand:DF 1 \"general_no_elim_operand\" \"f,rFo,Y\"))]\n+\t(match_operand:DF 1 \"general_no_elim_operand\" \"f,rFo,Y2\"))]\n   \"TARGET_64BIT || TARGET_INTEGER_DFMODE_MOVES\"\n {\n   /* This insn should be already split before reg-stack.  */\n@@ -2489,9 +2489,9 @@\n \n (define_insn \"*movdf_nointeger\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\"\n-\t\t\t\"=f,m,f,*r  ,o  ,Y*x,Y*x,Y*x ,m  \")\n+\t\t\t\"=f,m,f,*r  ,o  ,Y2*x,Y2*x,Y2*x ,m  \")\n \t(match_operand:DF 1 \"general_operand\"\n-\t\t\t\"fm,f,G,*roF,F*r,C  ,Y*x,mY*x,Y*x\"))]\n+\t\t\t\"fm,f,G,*roF,F*r,C   ,Y2*x,mY2*x,Y2*x\"))]\n   \"!(MEM_P (operands[0]) && MEM_P (operands[1]))\n    && ((optimize_size || !TARGET_INTEGER_DFMODE_MOVES) && !TARGET_64BIT)\n    && (reload_in_progress || reload_completed\n@@ -2611,9 +2611,9 @@\n \n (define_insn \"*movdf_integer\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\"\n-\t\t\"=f,m,f,r  ,o ,Y*x,Y*x,Y*x,m  \")\n+\t\t\"=f,m,f,r  ,o ,Y2*x,Y2*x,Y2*x,m   \")\n \t(match_operand:DF 1 \"general_operand\"\n-\t\t\"fm,f,G,roF,Fr,C  ,Y*x,m  ,Y*x\"))]\n+\t\t\"fm,f,G,roF,Fr,C   ,Y2*x,m   ,Y2*x\"))]\n   \"!(MEM_P (operands[0]) && MEM_P (operands[1]))\n    && ((!optimize_size && TARGET_INTEGER_DFMODE_MOVES) || TARGET_64BIT)\n    && (reload_in_progress || reload_completed\n@@ -3269,8 +3269,9 @@\n   \")\n \n (define_insn \"zero_extendsidi2_32\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,?r,?*o,?*y,?*Y\")\n-\t(zero_extend:DI (match_operand:SI 1 \"nonimmediate_operand\" \"0,rm,r,rm,rm\")))\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,?r,?*o,?*y,?*Y2\")\n+\t(zero_extend:DI\n+\t (match_operand:SI 1 \"nonimmediate_operand\" \"0,rm,r,rm,rm\")))\n    (clobber (reg:CC FLAGS_REG))]\n   \"!TARGET_64BIT\"\n   \"@\n@@ -3283,8 +3284,9 @@\n    (set_attr \"type\" \"multi,multi,multi,mmxmov,ssemov\")])\n \n (define_insn \"zero_extendsidi2_rex64\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,o,?*y,?*Y\")\n-     (zero_extend:DI (match_operand:SI 1 \"nonimmediate_operand\" \"rm,0,rm,rm\")))]\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,o,?*y,?*Y2\")\n+     (zero_extend:DI\n+       (match_operand:SI 1 \"nonimmediate_operand\" \"rm,0,rm,rm\")))]\n   \"TARGET_64BIT\"\n   \"@\n    mov\\t{%k1, %k0|%k0, %k1}\n@@ -3644,8 +3646,9 @@\n })\n \n (define_insn \"*extendsfdf2_mixed\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,m,Y\")\n-        (float_extend:DF (match_operand:SF 1 \"nonimmediate_operand\" \"fm,f,mY\")))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,m,x\")\n+        (float_extend:DF\n+\t  (match_operand:SF 1 \"nonimmediate_operand\" \"fm,f,xm\")))]\n   \"TARGET_SSE2 && TARGET_MIX_SSE_I387\"\n {\n   switch (which_alternative)\n@@ -3670,8 +3673,8 @@\n    (set_attr \"mode\" \"SF,XF,DF\")])\n \n (define_insn \"*extendsfdf2_sse\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=Y\")\n-        (float_extend:DF (match_operand:SF 1 \"nonimmediate_operand\" \"mY\")))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=x\")\n+        (float_extend:DF (match_operand:SF 1 \"nonimmediate_operand\" \"xm\")))]\n   \"TARGET_SSE2 && TARGET_SSE_MATH\"\n   \"cvtss2sd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n@@ -3823,9 +3826,9 @@\n   \"\")\n \n (define_insn \"*truncdfsf_fast_mixed\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\"   \"=m,f,Y\")\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\"   \"=m,f,x\")\n         (float_truncate:SF\n-          (match_operand:DF 1 \"nonimmediate_operand\" \"f ,f,Ym\")))]\n+          (match_operand:DF 1 \"nonimmediate_operand\" \"f ,f,xm\")))]\n   \"TARGET_SSE2 && TARGET_MIX_SSE_I387 && flag_unsafe_math_optimizations\"\n {\n   switch (which_alternative)\n@@ -3849,9 +3852,9 @@\n ;; Yes, this one doesn't depend on flag_unsafe_math_optimizations,\n ;; because nothing we do here is unsafe.\n (define_insn \"*truncdfsf_fast_sse\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\"   \"=Y\")\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\"   \"=x\")\n         (float_truncate:SF\n-          (match_operand:DF 1 \"nonimmediate_operand\" \"Ym\")))]\n+          (match_operand:DF 1 \"nonimmediate_operand\" \"xm\")))]\n   \"TARGET_SSE2 && TARGET_SSE_MATH\"\n   \"cvtsd2ss\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n@@ -3867,9 +3870,9 @@\n    (set_attr \"mode\" \"SF\")])\n \n (define_insn \"*truncdfsf_mixed\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\"   \"=m,?fx*r,Y\")\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\"   \"=m,?fx*r,Y2\")\n \t(float_truncate:SF\n-\t  (match_operand:DF 1 \"nonimmediate_operand\" \"f ,f    ,Ym\")))\n+\t  (match_operand:DF 1 \"nonimmediate_operand\" \"f ,f    ,Y2m\")))\n    (clobber (match_operand:SF 2 \"memory_operand\"     \"=X,m    ,X\"))]\n   \"TARGET_MIX_SSE_I387\"\n {\n@@ -4045,7 +4048,7 @@\n })\n \n (define_insn \"*truncxfdf2_mixed\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=m,?f,?r,?Y\")\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=m,?f,?r,?Y2*x\")\n \t(float_truncate:DF\n \t (match_operand:XF 1 \"register_operand\" \"f,f,f,f\")))\n    (clobber (match_operand:DF 2 \"memory_operand\" \"=X,m,m,m\"))]\n@@ -4205,7 +4208,7 @@\n \n (define_insn \"fix_truncdfdi_sse\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n-\t(fix:DI (match_operand:DF 1 \"nonimmediate_operand\" \"Y,Ym\")))]\n+\t(fix:DI (match_operand:DF 1 \"nonimmediate_operand\" \"x,xm\")))]\n   \"TARGET_64BIT && TARGET_SSE2 && (!TARGET_FISTTP || TARGET_SSE_MATH)\"\n   \"cvttsd2si{q}\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseicvt\")\n@@ -4225,7 +4228,7 @@\n \n (define_insn \"fix_truncdfsi_sse\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n-\t(fix:SI (match_operand:DF 1 \"nonimmediate_operand\" \"Y,Ym\")))]\n+\t(fix:SI (match_operand:DF 1 \"nonimmediate_operand\" \"x,xm\")))]\n   \"TARGET_SSE2 && (!TARGET_FISTTP || TARGET_SSE_MATH)\"\n   \"cvttsd2si\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseicvt\")\n@@ -4668,7 +4671,7 @@\n   \"\")\n \n (define_insn \"*floatsidf2_mixed\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,?f,Y,Y\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f,?f,x,x\")\n \t(float:DF (match_operand:SI 1 \"nonimmediate_operand\" \"m,r,r,mr\")))]\n   \"TARGET_SSE2 && TARGET_MIX_SSE_I387\"\n   \"@\n@@ -4684,7 +4687,7 @@\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_insn \"*floatsidf2_sse\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=Y,Y\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=x,x\")\n \t(float:DF (match_operand:SI 1 \"nonimmediate_operand\" \"r,mr\")))]\n   \"TARGET_SSE2 && TARGET_SSE_MATH\"\n   \"cvtsi2sd\\t{%1, %0|%0, %1}\"\n@@ -4713,7 +4716,7 @@\n   \"\")\n \n (define_insn \"*floatdidf2_mixed\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,?f,Y,Y\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f,?f,x,x\")\n \t(float:DF (match_operand:DI 1 \"nonimmediate_operand\" \"m,r,r,mr\")))]\n   \"TARGET_64BIT && TARGET_SSE2 && TARGET_MIX_SSE_I387\"\n   \"@\n@@ -4729,7 +4732,7 @@\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_insn \"*floatdidf2_sse\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=Y,Y\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=x,x\")\n \t(float:DF (match_operand:DI 1 \"nonimmediate_operand\" \"r,mr\")))]\n   \"TARGET_64BIT && TARGET_SSE2 && TARGET_SSE_MATH\"\n   \"cvtsi2sd{q}\\t{%1, %0|%0, %1}\"\n@@ -9790,20 +9793,20 @@\n   \"ix86_expand_fp_absneg_operator (ABS, DFmode, operands); DONE;\")\n \n (define_insn \"*absnegdf2_mixed\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\"    \"=Y,Y,f,rm\")\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\"    \"=x,x,f,rm\")\n \t(match_operator:DF 3 \"absneg_operator\"\n-\t  [(match_operand:DF 1 \"nonimmediate_operand\" \"0 ,Y,0,0\")]))\n-   (use (match_operand:V2DF 2 \"nonimmediate_operand\"  \"Ym,0,X,X\"))\n+\t  [(match_operand:DF 1 \"nonimmediate_operand\" \"0 ,x,0,0\")]))\n+   (use (match_operand:V2DF 2 \"nonimmediate_operand\"  \"xm,0,X,X\"))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_SSE2 && TARGET_SSE_MATH && TARGET_MIX_SSE_I387\n    && ix86_unary_operator_ok (GET_CODE (operands[3]), DFmode, operands)\"\n   \"#\")\n \n (define_insn \"*absnegdf2_sse\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\"    \"=Y,Y,rm\")\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\"    \"=x,x,rm\")\n \t(match_operator:DF 3 \"absneg_operator\"\n-\t  [(match_operand:DF 1 \"nonimmediate_operand\" \"0 ,Y,0 \")]))\n-   (use (match_operand:V2DF 2 \"nonimmediate_operand\"  \"Ym,0,X \"))\n+\t  [(match_operand:DF 1 \"nonimmediate_operand\" \"0 ,x,0 \")]))\n+   (use (match_operand:V2DF 2 \"nonimmediate_operand\"  \"xm,0,X \"))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_SSE2 && TARGET_SSE_MATH\n    && ix86_unary_operator_ok (GET_CODE (operands[3]), DFmode, operands)\"\n@@ -13513,10 +13516,10 @@\n    (set_attr \"mode\" \"SF\")])\n \n (define_insn \"*sse_setccdf\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=Y\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=x\")\n \t(match_operator:DF 1 \"sse_comparison_operator\"\n \t  [(match_operand:DF 2 \"register_operand\" \"0\")\n-\t   (match_operand:DF 3 \"nonimmediate_operand\" \"Ym\")]))]\n+\t   (match_operand:DF 3 \"nonimmediate_operand\" \"xm\")]))]\n   \"TARGET_SSE2\"\n   \"cmp%D1sd\\t{%3, %0|%0, %3}\"\n   [(set_attr \"type\" \"ssecmp\")\n@@ -15437,10 +15440,10 @@\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"*fop_df_comm_mixed\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,Y\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f,x\")\n \t(match_operator:DF 3 \"binary_fp_operator\"\n-\t\t\t[(match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n-\t\t\t (match_operand:DF 2 \"nonimmediate_operand\" \"fm,Ym\")]))]\n+\t  [(match_operand:DF 1 \"nonimmediate_operand\" \"%0,0\")\n+\t   (match_operand:DF 2 \"nonimmediate_operand\" \"fm,xm\")]))]\n   \"TARGET_SSE2 && TARGET_MIX_SSE_I387\n    && COMMUTATIVE_ARITH_P (operands[3])\n    && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n@@ -15456,10 +15459,10 @@\n    (set_attr \"mode\" \"DF\")])\n \n (define_insn \"*fop_df_comm_sse\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=Y\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=x\")\n \t(match_operator:DF 3 \"binary_fp_operator\"\n-\t\t\t[(match_operand:DF 1 \"nonimmediate_operand\" \"%0\")\n-\t\t\t (match_operand:DF 2 \"nonimmediate_operand\" \"Ym\")]))]\n+\t  [(match_operand:DF 1 \"nonimmediate_operand\" \"%0\")\n+\t   (match_operand:DF 2 \"nonimmediate_operand\" \"xm\")]))]\n   \"TARGET_SSE2 && TARGET_SSE_MATH\n    && COMMUTATIVE_ARITH_P (operands[3])\n    && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n@@ -15486,10 +15489,10 @@\n    (set_attr \"mode\" \"DF\")])\n \n (define_insn \"*fop_df_1_mixed\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f,Y\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f,f,x\")\n \t(match_operator:DF 3 \"binary_fp_operator\"\n-\t\t\t[(match_operand:DF 1 \"nonimmediate_operand\" \"0,fm,0\")\n-\t\t\t (match_operand:DF 2 \"nonimmediate_operand\" \"fm,0,Ym\")]))]\n+\t  [(match_operand:DF 1 \"nonimmediate_operand\" \"0,fm,0\")\n+\t   (match_operand:DF 2 \"nonimmediate_operand\" \"fm,0,xm\")]))]\n   \"TARGET_SSE2 && TARGET_SSE_MATH && TARGET_MIX_SSE_I387\n    && !COMMUTATIVE_ARITH_P (operands[3])\n    && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n@@ -15512,10 +15515,10 @@\n    (set_attr \"mode\" \"DF\")])\n \n (define_insn \"*fop_df_1_sse\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=Y\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=x\")\n \t(match_operator:DF 3 \"binary_fp_operator\"\n-\t\t\t[(match_operand:DF 1 \"register_operand\" \"0\")\n-\t\t\t (match_operand:DF 2 \"nonimmediate_operand\" \"Ym\")]))]\n+\t  [(match_operand:DF 1 \"register_operand\" \"0\")\n+\t   (match_operand:DF 2 \"nonimmediate_operand\" \"xm\")]))]\n   \"TARGET_SSE2 && TARGET_SSE_MATH\n    && !COMMUTATIVE_ARITH_P (operands[3])\"\n   \"* return output_387_binary_op (insn, operands);\""}, {"sha": "3766d083ed6e8e24bd83142991f9fd7a49c6df7f", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5096114103d8760599ed4377fde637b22a9e5e91/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5096114103d8760599ed4377fde637b22a9e5e91/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=5096114103d8760599ed4377fde637b22a9e5e91", "patch": "@@ -64,9 +64,9 @@\n \n (define_insn \"*mov<mode>_internal_rex64\"\n   [(set (match_operand:MMXMODEI 0 \"nonimmediate_operand\"\n-\t\t\t\t\"=rm,r,*y,*y ,m ,*y,Y ,x,x ,m,r,x\")\n+\t\t\t\t\"=rm,r,*y,*y ,m ,*y,Y2,x,x ,m,r,x\")\n \t(match_operand:MMXMODEI 1 \"vector_move_operand\"\n-\t\t\t\t\"Cr ,m,C ,*ym,*y,Y ,*y,C,xm,x,x,r\"))]\n+\t\t\t\t\"Cr ,m,C ,*ym,*y,Y2,*y,C,xm,x,x,r\"))]\n   \"TARGET_64BIT && TARGET_MMX\n    && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"@\n@@ -88,9 +88,9 @@\n \n (define_insn \"*mov<mode>_internal\"\n   [(set (match_operand:MMXMODEI 0 \"nonimmediate_operand\"\n-\t\t\t\"=*y,*y ,m ,*y,*Y,*Y,*Y ,m ,*x,*x,*x,m ,?r ,?m\")\n+\t\t\t\"=*y,*y ,m ,*y ,*Y2,*Y2,*Y2 ,m  ,*x,*x,*x,m ,?r ,?m\")\n \t(match_operand:MMXMODEI 1 \"vector_move_operand\"\n-\t\t\t\"C  ,*ym,*y,*Y,*y,C ,*Ym,*Y,C ,*x,m ,*x,irm,r\"))]\n+\t\t\t\"C  ,*ym,*y,*Y2,*y ,C  ,*Y2m,*Y2,C ,*x,m ,*x,irm,r\"))]\n   \"TARGET_MMX\n    && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"@\n@@ -123,9 +123,9 @@\n \n (define_insn \"*movv2sf_internal_rex64\"\n   [(set (match_operand:V2SF 0 \"nonimmediate_operand\"\n-\t\t\t\t\"=rm,r,*y ,*y ,m ,*y,Y ,x,x,x,m,r,x\")\n+\t\t\t\t\"=rm,r,*y ,*y ,m ,*y,Y2,x,x,x,m,r,x\")\n         (match_operand:V2SF 1 \"vector_move_operand\"\n-\t\t\t\t\"Cr ,m ,C ,*ym,*y,Y ,*y,C,x,m,x,x,r\"))]\n+\t\t\t\t\"Cr ,m ,C ,*ym,*y,Y2,*y,C,x,m,x,x,r\"))]\n   \"TARGET_64BIT && TARGET_MMX\n    && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"@\n@@ -148,9 +148,9 @@\n \n (define_insn \"*movv2sf_internal\"\n   [(set (match_operand:V2SF 0 \"nonimmediate_operand\"\n-\t\t\t\t\t\"=*y,*y ,m,*y,*Y,*x,*x,*x,m ,?r ,?m\")\n+\t\t\t\"=*y,*y ,m,*y ,*Y2,*x,*x,*x,m ,?r ,?m\")\n         (match_operand:V2SF 1 \"vector_move_operand\"\n-\t\t\t\t\t\"C ,*ym,*y,*Y,*y,C ,*x,m ,*x,irm,r\"))]\n+\t\t\t\"C ,*ym,*y,*Y2,*y ,C ,*x,m ,*x,irm,r\"))]\n   \"TARGET_MMX\n    && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"@\n@@ -1172,9 +1172,9 @@\n })\n \n (define_insn \"*vec_extractv2si_1\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\"     \"=y,Y,Y,x,frxy\")\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\"     \"=y,Y2,Y2,x,frxy\")\n \t(vec_select:SI\n-\t  (match_operand:V2SI 1 \"nonimmediate_operand\" \" 0,0,Y,0,o\")\n+\t  (match_operand:V2SI 1 \"nonimmediate_operand\" \" 0,0 ,Y2,0,o\")\n \t  (parallel [(const_int 1)])))]\n   \"TARGET_MMX && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"@"}, {"sha": "50abb8ae2ba516da73fa6ec1d547022912e6fecb", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5096114103d8760599ed4377fde637b22a9e5e91/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5096114103d8760599ed4377fde637b22a9e5e91/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=5096114103d8760599ed4377fde637b22a9e5e91", "patch": "@@ -1327,7 +1327,7 @@\n })\n \n (define_insn \"*vec_setv4sf_0\"\n-  [(set (match_operand:V4SF 0 \"nonimmediate_operand\"  \"=x,x,Y ,m\")\n+  [(set (match_operand:V4SF 0 \"nonimmediate_operand\"  \"=x,x,Y2,m\")\n \t(vec_merge:V4SF\n \t  (vec_duplicate:V4SF\n \t    (match_operand:SF 2 \"general_operand\"     \" x,m,*r,x*rfF\"))\n@@ -2445,10 +2445,10 @@\n    (set_attr \"mode\" \"DF\")])\n \n (define_insn \"*vec_concatv2df\"\n-  [(set (match_operand:V2DF 0 \"register_operand\"     \"=Y,Y,Y,x,x\")\n+  [(set (match_operand:V2DF 0 \"register_operand\"     \"=Y2,Y2,Y2,x,x\")\n \t(vec_concat:V2DF\n-\t  (match_operand:DF 1 \"nonimmediate_operand\" \" 0,0,m,0,0\")\n-\t  (match_operand:DF 2 \"vector_move_operand\"  \" Y,m,C,x,m\")))]\n+\t  (match_operand:DF 1 \"nonimmediate_operand\" \" 0 ,0 ,m ,0,0\")\n+\t  (match_operand:DF 2 \"vector_move_operand\"  \" Y2,m ,C ,x,m\")))]\n   \"TARGET_SSE\"\n   \"@\n    unpcklpd\\t{%2, %0|%0, %2}\n@@ -3961,11 +3961,11 @@\n   \"operands[2] = CONST0_RTX (V4SImode);\")\n \n (define_insn \"sse2_loadld\"\n-  [(set (match_operand:V4SI 0 \"register_operand\"       \"=Y,x,x\")\n+  [(set (match_operand:V4SI 0 \"register_operand\"       \"=Y2,x,x\")\n \t(vec_merge:V4SI\n \t  (vec_duplicate:V4SI\n-\t    (match_operand:SI 2 \"nonimmediate_operand\" \"mr,m,x\"))\n-\t  (match_operand:V4SI 1 \"reg_or_0_operand\"     \" C,C,0\")\n+\t    (match_operand:SI 2 \"nonimmediate_operand\" \"mr ,m,x\"))\n+\t  (match_operand:V4SI 1 \"reg_or_0_operand\"     \" C ,C,0\")\n \t  (const_int 1)))]\n   \"TARGET_SSE\"\n   \"@\n@@ -4048,9 +4048,9 @@\n    (set_attr \"mode\" \"V2SF,V4SF,V2SF\")])\n \n (define_insn \"*vec_dupv4si\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=Y,x\")\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=Y2,x\")\n \t(vec_duplicate:V4SI\n-\t  (match_operand:SI 1 \"register_operand\" \" Y,0\")))]\n+\t  (match_operand:SI 1 \"register_operand\" \" Y2,0\")))]\n   \"TARGET_SSE\"\n   \"@\n    pshufd\\t{$0, %1, %0|%0, %1, 0}\n@@ -4059,9 +4059,9 @@\n    (set_attr \"mode\" \"TI,V4SF\")])\n \n (define_insn \"*vec_dupv2di\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=Y,x\")\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=Y2,x\")\n \t(vec_duplicate:V2DI\n-\t  (match_operand:DI 1 \"register_operand\" \" 0,0\")))]\n+\t  (match_operand:DI 1 \"register_operand\" \" 0 ,0\")))]\n   \"TARGET_SSE\"\n   \"@\n    punpcklqdq\\t%0, %0\n@@ -4073,10 +4073,10 @@\n ;; nonimmediate_operand for operand 2 and *not* allowing memory for the SSE\n ;; alternatives pretty much forces the MMX alternative to be chosen.\n (define_insn \"*sse2_concatv2si\"\n-  [(set (match_operand:V2SI 0 \"register_operand\"     \"=Y, Y,*y,*y\")\n+  [(set (match_operand:V2SI 0 \"register_operand\"     \"=Y2, Y2,*y,*y\")\n \t(vec_concat:V2SI\n-\t  (match_operand:SI 1 \"nonimmediate_operand\" \" 0,rm, 0,rm\")\n-\t  (match_operand:SI 2 \"reg_or_0_operand\"     \" Y, C,*y, C\")))]\n+\t  (match_operand:SI 1 \"nonimmediate_operand\" \" 0 ,rm , 0,rm\")\n+\t  (match_operand:SI 2 \"reg_or_0_operand\"     \" Y2,C  ,*y, C\")))]\n   \"TARGET_SSE2\"\n   \"@\n    punpckldq\\t{%2, %0|%0, %2}\n@@ -4101,10 +4101,10 @@\n    (set_attr \"mode\" \"V4SF,V4SF,DI,DI\")])\n \n (define_insn \"*vec_concatv4si_1\"\n-  [(set (match_operand:V4SI 0 \"register_operand\"       \"=Y,x,x\")\n+  [(set (match_operand:V4SI 0 \"register_operand\"       \"=Y2,x,x\")\n \t(vec_concat:V4SI\n-\t  (match_operand:V2SI 1 \"register_operand\"     \" 0,0,0\")\n-\t  (match_operand:V2SI 2 \"nonimmediate_operand\" \" Y,x,m\")))]\n+\t  (match_operand:V2SI 1 \"register_operand\"     \" 0 ,0,0\")\n+\t  (match_operand:V2SI 2 \"nonimmediate_operand\" \" Y2,x,m\")))]\n   \"TARGET_SSE\"\n   \"@\n    punpcklqdq\\t{%2, %0|%0, %2}\n@@ -4114,10 +4114,10 @@\n    (set_attr \"mode\" \"TI,V4SF,V2SF\")])\n \n (define_insn \"*vec_concatv2di\"\n-  [(set (match_operand:V2DI 0 \"register_operand\"     \"=Y,?Y,Y,x,x,x\")\n+  [(set (match_operand:V2DI 0 \"register_operand\"     \"=Y2,?Y2,Y2,x,x,x\")\n \t(vec_concat:V2DI\n-\t  (match_operand:DI 1 \"nonimmediate_operand\" \" m,*y,0,0,0,m\")\n-\t  (match_operand:DI 2 \"vector_move_operand\"  \" C, C,Y,x,m,0\")))]\n+\t  (match_operand:DI 1 \"nonimmediate_operand\" \"  m,*y ,0 ,0,0,m\")\n+\t  (match_operand:DI 2 \"vector_move_operand\"  \"  C,  C,Y2,x,m,0\")))]\n   \"TARGET_SSE\"\n   \"@\n    movq\\t{%1, %0|%0, %1}"}]}