{"sha": "635c6321d455dd13aeb1d5d19615fd10407dd71d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM1YzYzMjFkNDU1ZGQxM2FlYjFkNWQxOTYxNWZkMTA0MDdkZDcxZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-11-04T10:39:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-11-04T10:39:25Z"}, "message": "i386.c (ix86_expand_vector_convert_uns_vsivsf): New function.\n\n\t* config/i386/i386.c (ix86_expand_vector_convert_uns_vsivsf): New\n\tfunction.\n\t* config/i386/i386-protos.h (ix86_expand_vector_convert_uns_vsivsf):\n\tNew prototype.\n\t* config/i386/sse.md (floatuns<sseintvecmodelower><mode>2): Use it.\n\tFor floatunsv8siv8sf2 require TARGET_AVX2.\n\n\t* gcc.dg/torture/vec-cvt-1.c: Enable commented out inttoflttestui\n\ttest.\n\nFrom-SVN: r180934", "tree": {"sha": "2d020db81461685cb3a0182ea9b3a6aa4e012d22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d020db81461685cb3a0182ea9b3a6aa4e012d22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/635c6321d455dd13aeb1d5d19615fd10407dd71d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/635c6321d455dd13aeb1d5d19615fd10407dd71d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/635c6321d455dd13aeb1d5d19615fd10407dd71d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/635c6321d455dd13aeb1d5d19615fd10407dd71d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2f2da9e931c163c6f4ce6433972854e5d0e62216", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f2da9e931c163c6f4ce6433972854e5d0e62216", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f2da9e931c163c6f4ce6433972854e5d0e62216"}], "stats": {"total": 78, "additions": 54, "deletions": 24}, "files": [{"sha": "6896ffde41f3c5cdac3e545ec44325c16b9d91a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/635c6321d455dd13aeb1d5d19615fd10407dd71d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/635c6321d455dd13aeb1d5d19615fd10407dd71d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=635c6321d455dd13aeb1d5d19615fd10407dd71d", "patch": "@@ -1,5 +1,12 @@\n 2011-11-04  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* config/i386/i386.c (ix86_expand_vector_convert_uns_vsivsf): New\n+\tfunction.\n+\t* config/i386/i386-protos.h (ix86_expand_vector_convert_uns_vsivsf):\n+\tNew prototype.\n+\t* config/i386/sse.md (floatuns<sseintvecmodelower><mode>2): Use it.\n+\tFor floatunsv8siv8sf2 require TARGET_AVX2.\n+\n \t* config/i386/i386.c (ix86_expand_adjust_ufix_to_sfix_si): Add\n \tXORP argument.  Subtract 0x1p31 instead of 0x1p32.  Use normal\n \tsignalling comparison instead of non-signalling.  Store into"}, {"sha": "b2eb973355982a9eca516a30f4c07a7dfc7141af", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/635c6321d455dd13aeb1d5d19615fd10407dd71d/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/635c6321d455dd13aeb1d5d19615fd10407dd71d/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=635c6321d455dd13aeb1d5d19615fd10407dd71d", "patch": "@@ -109,6 +109,7 @@ extern void ix86_expand_convert_uns_sixf_sse (rtx, rtx);\n extern void ix86_expand_convert_uns_sidf_sse (rtx, rtx);\n extern void ix86_expand_convert_uns_sisf_sse (rtx, rtx);\n extern void ix86_expand_convert_sign_didf_sse (rtx, rtx);\n+extern void ix86_expand_vector_convert_uns_vsivsf (rtx, rtx);\n extern rtx ix86_expand_adjust_ufix_to_sfix_si (rtx, rtx *);\n extern enum ix86_fpcmp_strategy ix86_fp_comparison_strategy (enum rtx_code);\n extern void ix86_expand_fp_absneg_operator (enum rtx_code, enum machine_mode,"}, {"sha": "fb0ac8de0b092e99124c0852bedf2618a98b9487", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/635c6321d455dd13aeb1d5d19615fd10407dd71d/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/635c6321d455dd13aeb1d5d19615fd10407dd71d/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=635c6321d455dd13aeb1d5d19615fd10407dd71d", "patch": "@@ -17016,6 +17016,43 @@ ix86_expand_convert_uns_sisf_sse (rtx target, rtx input)\n     emit_move_insn (target, fp_hi);\n }\n \n+/* floatunsv{4,8}siv{4,8}sf2 expander.  Expand code to convert\n+   a vector of unsigned ints VAL to vector of floats TARGET.  */\n+\n+void\n+ix86_expand_vector_convert_uns_vsivsf (rtx target, rtx val)\n+{\n+  rtx tmp[8];\n+  REAL_VALUE_TYPE TWO16r;\n+  enum machine_mode intmode = GET_MODE (val);\n+  enum machine_mode fltmode = GET_MODE (target);\n+  rtx (*cvt) (rtx, rtx);\n+\n+  if (intmode == V4SImode)\n+    cvt = gen_floatv4siv4sf2;\n+  else\n+    cvt = gen_floatv8siv8sf2;\n+  tmp[0] = ix86_build_const_vector (intmode, 1, GEN_INT (0xffff));\n+  tmp[0] = force_reg (intmode, tmp[0]);\n+  tmp[1] = expand_simple_binop (intmode, AND, val, tmp[0], NULL_RTX, 1,\n+\t\t\t\tOPTAB_DIRECT);\n+  tmp[2] = expand_simple_binop (intmode, LSHIFTRT, val, GEN_INT (16),\n+\t\t\t\tNULL_RTX, 1, OPTAB_DIRECT);\n+  tmp[3] = gen_reg_rtx (fltmode);\n+  emit_insn (cvt (tmp[3], tmp[1]));\n+  tmp[4] = gen_reg_rtx (fltmode);\n+  emit_insn (cvt (tmp[4], tmp[2]));\n+  real_ldexp (&TWO16r, &dconst1, 16);\n+  tmp[5] = const_double_from_real_value (TWO16r, SFmode);\n+  tmp[5] = force_reg (fltmode, ix86_build_const_vector (fltmode, 1, tmp[5]));\n+  tmp[6] = expand_simple_binop (fltmode, MULT, tmp[4], tmp[5], NULL_RTX, 1,\n+\t\t\t\tOPTAB_DIRECT);\n+  tmp[7] = expand_simple_binop (fltmode, PLUS, tmp[3], tmp[6], target, 1,\n+\t\t\t\tOPTAB_DIRECT);\n+  if (tmp[7] != target)\n+    emit_move_insn (target, tmp[7]);\n+}\n+\n /* Adjust a V*SFmode/V*DFmode value VAL so that *sfix_trunc* resp. fix_trunc*\n    pattern can be used on it instead of *ufix_trunc* resp. fixuns_trunc*.\n    This is done by doing just signed conversion if < 0x1p31, and otherwise by"}, {"sha": "a2826cefcee9dcebe45d846b995b8505025a1195", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 5, "deletions": 23, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/635c6321d455dd13aeb1d5d19615fd10407dd71d/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/635c6321d455dd13aeb1d5d19615fd10407dd71d/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=635c6321d455dd13aeb1d5d19615fd10407dd71d", "patch": "@@ -2242,30 +2242,12 @@\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_expand \"floatuns<sseintvecmodelower><mode>2\"\n-  [(set (match_dup 5)\n-\t(float:VF1\n-\t  (match_operand:<sseintvecmode> 1 \"nonimmediate_operand\" \"\")))\n-   (set (match_dup 6)\n-\t(lt:VF1 (match_dup 5) (match_dup 3)))\n-   (set (match_dup 7)\n-\t(and:VF1 (match_dup 6) (match_dup 4)))\n-   (set (match_operand:VF1 0 \"register_operand\" \"\")\n-\t(plus:VF1 (match_dup 5) (match_dup 7)))]\n-  \"TARGET_SSE2\"\n+  [(match_operand:VF1 0 \"register_operand\" \"\")\n+   (match_operand:<sseintvecmode> 1 \"register_operand\" \"\")]\n+  \"TARGET_SSE2 && (<MODE>mode == V4SFmode || TARGET_AVX2)\"\n {\n-  REAL_VALUE_TYPE TWO32r;\n-  rtx x;\n-  int i;\n-\n-  real_ldexp (&TWO32r, &dconst1, 32);\n-  x = const_double_from_real_value (TWO32r, SFmode);\n-\n-  operands[3] = force_reg (<MODE>mode, CONST0_RTX (<MODE>mode));\n-  operands[4] = force_reg (<MODE>mode,\n-\t\t\t   ix86_build_const_vector (<MODE>mode, 1, x));\n-\n-  for (i = 5; i < 8; i++)\n-    operands[i] = gen_reg_rtx (<MODE>mode);\n+  ix86_expand_vector_convert_uns_vsivsf (operands[0], operands[1]);\n+  DONE;\n })\n \n (define_insn \"avx_cvtps2dq256\""}, {"sha": "f17ff70ec74cea01f4e986efe769ef3cb84da599", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/635c6321d455dd13aeb1d5d19615fd10407dd71d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/635c6321d455dd13aeb1d5d19615fd10407dd71d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=635c6321d455dd13aeb1d5d19615fd10407dd71d", "patch": "@@ -1,5 +1,8 @@\n 2011-11-04  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* gcc.dg/torture/vec-cvt-1.c: Enable commented out inttoflttestui\n+\ttest.\n+\n \t* gcc.dg/torture/vec-cvt-1.c: Enable flttointtestui test.\n \n \t* gcc.dg/torture/vec-cvt-1.c: New test."}, {"sha": "601f098889c4e77f39029e1f288e6d6859d51865", "filename": "gcc/testsuite/gcc.dg/torture/vec-cvt-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/635c6321d455dd13aeb1d5d19615fd10407dd71d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fvec-cvt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/635c6321d455dd13aeb1d5d19615fd10407dd71d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fvec-cvt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fvec-cvt-1.c?ref=635c6321d455dd13aeb1d5d19615fd10407dd71d", "patch": "@@ -205,7 +205,7 @@ main ()\n   inttoflttestsl ();\n   inttoflttestuc ();\n   inttoflttestus ();\n-//  inttoflttestui ();\n+  inttoflttestui ();\n   inttoflttestul ();\n   return 0;\n }"}]}