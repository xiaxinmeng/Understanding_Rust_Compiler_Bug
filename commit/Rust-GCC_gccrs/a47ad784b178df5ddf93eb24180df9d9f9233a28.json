{"sha": "a47ad784b178df5ddf93eb24180df9d9f9233a28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ3YWQ3ODRiMTc4ZGY1ZGRmOTNlYjI0MTgwZGY5ZDlmOTIzM2EyOA==", "commit": {"author": {"name": "Martin v. L\u00f6wis", "email": "loewis@gcc.gnu.org", "date": "2000-05-01T11:15:22Z"}, "committer": {"name": "Martin v. L\u00f6wis", "email": "loewis@gcc.gnu.org", "date": "2000-05-01T11:15:22Z"}, "message": "New file\n\nFrom-SVN: r33566", "tree": {"sha": "4135adfd8b9621f2e3afbf3a4707bd5ffde778cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4135adfd8b9621f2e3afbf3a4707bd5ffde778cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a47ad784b178df5ddf93eb24180df9d9f9233a28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a47ad784b178df5ddf93eb24180df9d9f9233a28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a47ad784b178df5ddf93eb24180df9d9f9233a28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a47ad784b178df5ddf93eb24180df9d9f9233a28/comments", "author": null, "committer": null, "parents": [{"sha": "cac50545ecd7ab12015d18838fa012d039696171", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cac50545ecd7ab12015d18838fa012d039696171", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cac50545ecd7ab12015d18838fa012d039696171"}], "stats": {"total": 84, "additions": 84, "deletions": 0}, "files": [{"sha": "55821e5e6c5c00dffa11928361d6ef79b3131edb", "filename": "contrib/gccbug.el", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a47ad784b178df5ddf93eb24180df9d9f9233a28/contrib%2Fgccbug.el", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a47ad784b178df5ddf93eb24180df9d9f9233a28/contrib%2Fgccbug.el", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgccbug.el?ref=a47ad784b178df5ddf93eb24180df9d9f9233a28", "patch": "@@ -0,0 +1,84 @@\n+;;; gccbug.el --- forward bug reports to gnats\n+;; (C) 2000 Free Software Foundation\n+;; Written by Martin v. L\ufffdwis\n+;; Usage:\n+;; In rmail, bind a key to rmail-gccbug-reply, e.g.\n+;;   (require 'rmail)\n+;;   (require 'gccbug)\n+;;   (define-key rmail-mode-map \"R\" 'rmail-gccbug-reply)\n+;; Then, when reviewing a report, type R to create a gnats-formatted\n+;; message.\n+\n+(provide 'gccbug)\n+\n+(defun gccbug-reply ()\n+  (interactive)\n+  (let ((orig-yank-prefix mail-yank-prefix))\n+    (insert \">Submitter-Id: net\\n\")\n+    (insert \">Originator: \\n\")\n+    (insert \">Confidential: no\\n\")\n+    (insert \">Synopsis: \")\n+    (save-excursion\n+      (mail-subject)\n+      (let ((stop (point)))\n+\t(re-search-backward \"Re: \")\n+\t(copy-region-as-kill (match-end 0) stop)))\n+    (yank)\n+    (insert \"\\n\")\n+    (insert \">Severity: serious\\n\")\n+    (insert \">Priority: medium\\n\")\n+    (insert \">Category: \\n\")\n+    (insert \">Class: \\n\")\n+    ;(insert \">State: analyzed\\n\")\n+    (insert \">Release: 2.95.2\\n\")\n+    (insert \">Environment:\\n\")\n+    (insert \">Description:\\n\")\n+    (set 'mail-yank-prefix nil)\n+    (set 'mail-yank-ignored-headers \n+\t \"^via:\\\\|^mail-from:\\\\|^origin:\\\\|^status:\\\\|^remailed\\\\|^received:\\\\|^summary-line:\\\\|^to:\\\\|^subject:\\\\|^in-reply-to:\\\\|^return-path:\\\\|^X-.*:\\\\|^User-Agent:\\\\|^MIME-Version:\\\\|^Content-.*:\\\\|^List-.*:\\\\|C[Cc]:\\\\|^Precedence:\\\\|^Sender:\\\\|^Mailing-List:\\\\|^Delivered-To:\\\\|^>From\")\n+    (mail-yank-original t)\n+    (set 'mail-yank-prefix orig-yank-prefix)\n+    ; Copy From: field to Originator:\n+    (re-search-backward \"From: \")\n+    (let ((beg (match-end 0)))\n+      (end-of-line)\n+      (kill-region beg (point)))\n+    (re-search-backward \">Originator: \")\n+    (goto-char (match-end 0))\n+    (yank)\n+    ; Kill From: line\n+    (re-search-forward \"From:\")\n+    (beginning-of-line)\n+    (kill-line 1)\n+    ; Replace Message-ID: with Original-Message-ID\n+    (beginning-of-buffer)\n+    (re-search-forward \"Message-ID: .*\")\n+    (replace-match \"Original-\\\\&\")\n+    ; Replace To: line, adding recipient to Notify list\n+    (mail-to)\n+    (re-search-backward \"To: \")\n+    (replace-match \"To: gcc-gnats@gcc.gnu.org\\nX-GNATS-Notify: \")\n+    ; add additional fields\n+    (end-of-buffer)\n+    (insert \">How-To-Repeat: \\n>Fix: \\n\")\n+    ; See whether an Organization: is present\n+    (let ((org (re-search-backward \"Organization:.*\" nil t)))\n+      (if org\n+\t  (progn \n+\t    (kill-region (point) (match-end 0))\n+\t    (re-search-backward \">Confidential\")\n+\t    (insert \">\")\n+\t    (yank)\n+\t    (insert \"\\n\"))))\n+;     This kills CC: lines, but rmail-reply below won't create any\n+;     (mail-cc)\n+;     (beginning-of-line)\n+;     (kill-line 1)\n+    ))\n+\n+(defun rmail-gccbug-reply ()\n+  (interactive)\n+  (rmail-toggle-header 0)\n+  (rmail-reply t)\n+  (gccbug-reply))\n+"}]}