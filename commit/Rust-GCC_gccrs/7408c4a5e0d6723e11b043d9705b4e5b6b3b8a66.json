{"sha": "7408c4a5e0d6723e11b043d9705b4e5b6b3b8a66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQwOGM0YTVlMGQ2NzIzZTExYjA0M2Q5NzA1YjRlNWI2YjNiOGE2Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-11-12T11:42:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-11-12T11:42:00Z"}, "message": "sem_ch4.adb (analyze_If_Expression): Reject IF-expression where THEN-expression is overloaded and none of its...\n\n2015-11-12  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch4.adb (analyze_If_Expression): Reject IF-expression where\n\tTHEN-expression is overloaded and none of its interpretation is\n\tcompatible with the ELSE-expression.\n\nFrom-SVN: r230241", "tree": {"sha": "c6cadeec21c954d297eef79d14bd9968b167a763", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6cadeec21c954d297eef79d14bd9968b167a763"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7408c4a5e0d6723e11b043d9705b4e5b6b3b8a66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7408c4a5e0d6723e11b043d9705b4e5b6b3b8a66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7408c4a5e0d6723e11b043d9705b4e5b6b3b8a66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7408c4a5e0d6723e11b043d9705b4e5b6b3b8a66/comments", "author": null, "committer": null, "parents": [{"sha": "e3f94155df2c4223b92f63837d0d887502fa7e6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3f94155df2c4223b92f63837d0d887502fa7e6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3f94155df2c4223b92f63837d0d887502fa7e6e"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "cd0764a4a86a400d8b482789e5d954b2d22f2103", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7408c4a5e0d6723e11b043d9705b4e5b6b3b8a66/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7408c4a5e0d6723e11b043d9705b4e5b6b3b8a66/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7408c4a5e0d6723e11b043d9705b4e5b6b3b8a66", "patch": "@@ -1,3 +1,21 @@\n+2015-11-12  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch4.adb (analyze_If_Expression): Reject IF-expression where\n+\tTHEN-expression is overloaded and none of its interpretation is\n+\tcompatible with the ELSE-expression.\n+\n+2015-11-12  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* init.c: Do not try to mess with the MSR values in RTP mode:\n+\tnot needed and forbidden.\n+\n+2015-11-12  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_attr.adb (Compile_Stream_Body_In_Scope): Do not install\n+\tfull view of a type that has pragma Stream_Convert, because\n+\tthis indicates special processing for the stream operations of\n+\tthe type.\n+\n 2015-11-12  Jerome Lambourg  <lambourg@adacore.com>\n \n \t* init.c: Do not try to mess with the MSR values in RTP mode:"}, {"sha": "bf134ba8640f400285f1bd08baa65a9f204700bd", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7408c4a5e0d6723e11b043d9705b4e5b6b3b8a66/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7408c4a5e0d6723e11b043d9705b4e5b6b3b8a66/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=7408c4a5e0d6723e11b043d9705b4e5b6b3b8a66", "patch": "@@ -2191,6 +2191,17 @@ package body Sem_Ch4 is\n \n                Get_Next_Interp (I, It);\n             end loop;\n+\n+            --  If no valid interpretation has been found, then the type of\n+            --  the ELSE expression does not match any interpretation of\n+            --  the THEN expression.\n+\n+            if Etype (N) = Any_Type then\n+               Error_Msg_N\n+                 (\"type incompatible with that of `THEN` expression\",\n+                  Else_Expr);\n+               return;\n+            end if;\n          end;\n       end if;\n    end Analyze_If_Expression;"}]}