{"sha": "4309e92c980377d6f2c2ba2bb224f254b3cda49f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDMwOWU5MmM5ODAzNzdkNmYyYzJiYTJiYjIyNGYyNTRiM2NkYTQ5Zg==", "commit": {"author": {"name": "Romain Geissler", "email": "romain.geissler@gmail.com", "date": "2011-08-11T15:57:38Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2011-08-11T15:57:38Z"}, "message": "plugin.def: Add event for finish_decl.\n\n2011-08-11  Romain Geissler  <romain.geissler@gmail.com>\n            Brian Hackett  <bhackett1024@gmail.com>\n\ngcc/ChangeLog:\n\n      * plugin.def: Add event for finish_decl.\n      * plugin.c (register_callback, invoke_plugin_callbacks): Same.\n      * c-decl.c (finish_decl): Invoke callbacks on above event.\n      * doc/plugins.texi: Document above event.\n\ngcc/cp/ChangeLog:\n\n      * decl.c (cp_finish_decl): Invoke callbacks on finish_decl event.\n\ngcc/testsuite/ChangeLog:\n\n      * g++.dg/plugin/decl_plugin.c: New.\n      * g++.dg/plugin/decl-plugin-test.C: New.\n      * g++.dg/plugin/plugin.exp: Add above testcase.\n\nCo-Authored-By: Brian Hackett <bhackett1024@gmail.com>\n\nFrom-SVN: r177674", "tree": {"sha": "f0e5cd42f4834ff1cb97931ca420f0b81dd28570", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0e5cd42f4834ff1cb97931ca420f0b81dd28570"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4309e92c980377d6f2c2ba2bb224f254b3cda49f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4309e92c980377d6f2c2ba2bb224f254b3cda49f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4309e92c980377d6f2c2ba2bb224f254b3cda49f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4309e92c980377d6f2c2ba2bb224f254b3cda49f/comments", "author": {"login": "Romain-Geissler", "id": 801960, "node_id": "MDQ6VXNlcjgwMTk2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/801960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Romain-Geissler", "html_url": "https://github.com/Romain-Geissler", "followers_url": "https://api.github.com/users/Romain-Geissler/followers", "following_url": "https://api.github.com/users/Romain-Geissler/following{/other_user}", "gists_url": "https://api.github.com/users/Romain-Geissler/gists{/gist_id}", "starred_url": "https://api.github.com/users/Romain-Geissler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Romain-Geissler/subscriptions", "organizations_url": "https://api.github.com/users/Romain-Geissler/orgs", "repos_url": "https://api.github.com/users/Romain-Geissler/repos", "events_url": "https://api.github.com/users/Romain-Geissler/events{/privacy}", "received_events_url": "https://api.github.com/users/Romain-Geissler/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "25aa059e63fe5b759e18fdcb7cac4b51868a44d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25aa059e63fe5b759e18fdcb7cac4b51868a44d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25aa059e63fe5b759e18fdcb7cac4b51868a44d0"}], "stats": {"total": 114, "additions": 113, "deletions": 1}, "files": [{"sha": "803e9c7481d465debf1d981060de045043f02205", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4309e92c980377d6f2c2ba2bb224f254b3cda49f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4309e92c980377d6f2c2ba2bb224f254b3cda49f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4309e92c980377d6f2c2ba2bb224f254b3cda49f", "patch": "@@ -1,3 +1,11 @@\n+2011-08-11  Romain Geissler  <romain.geissler@gmail.com>\n+            Brian Hackett  <bhackett1024@gmail.com>\n+\n+\t* plugin.def: Add event for finish_decl.\n+\t* plugin.c (register_callback, invoke_plugin_callbacks): Same.\n+\t* c-decl.c (finish_decl): Invoke callbacks on above event.\n+\t* doc/plugins.texi: Document above event.\n+\n 2011-08-11  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-sccvn.c (vn_reference_lookup_3): Avoid redundant"}, {"sha": "927beb0a33de1c3f51a5bb6ac198fcdb1d988897", "filename": "gcc/c-decl.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4309e92c980377d6f2c2ba2bb224f254b3cda49f/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4309e92c980377d6f2c2ba2bb224f254b3cda49f/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=4309e92c980377d6f2c2ba2bb224f254b3cda49f", "patch": "@@ -4466,6 +4466,8 @@ finish_decl (tree decl, location_t init_loc, tree init,\n \t       && C_TYPE_FIELDS_READONLY (type))\n \tdiagnose_uninitialized_cst_member (decl, type);\n     }\n+\n+\tinvoke_plugin_callbacks (PLUGIN_FINISH_DECL, decl);\n }\n \n /* Given a parsed parameter declaration, decode it into a PARM_DECL."}, {"sha": "f5989f4bc9840cff1df5100d73fc8fca8ae1558f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4309e92c980377d6f2c2ba2bb224f254b3cda49f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4309e92c980377d6f2c2ba2bb224f254b3cda49f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4309e92c980377d6f2c2ba2bb224f254b3cda49f", "patch": "@@ -1,3 +1,8 @@\n+2011-08-11  Romain Geissler  <romain.geissler@gmail.com>\n+            Brian Hackett  <bhackett1024@gmail.com>\n+\n+\t* decl.c (cp_finish_decl): Invoke callbacks on finish_decl event.\n+\n 2011-08-10  Richard Guenther  <rguenther@suse.de>\n \n \t* call.c (build_over_call): Call memcpy unconditionally."}, {"sha": "1db074809c8ffbf28f8d438aa03832aa40ee05cd", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4309e92c980377d6f2c2ba2bb224f254b3cda49f/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4309e92c980377d6f2c2ba2bb224f254b3cda49f/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=4309e92c980377d6f2c2ba2bb224f254b3cda49f", "patch": "@@ -6311,6 +6311,8 @@ cp_finish_decl (tree decl, tree init, bool init_const_expr_p,\n \n   if (was_readonly)\n     TREE_READONLY (decl) = 1;\n+\n+  invoke_plugin_callbacks (PLUGIN_FINISH_DECL, decl);\n }\n \n /* Returns a declaration for a VAR_DECL as if:"}, {"sha": "398ebf0c536d4cfe2c942e606ee793047fa1a095", "filename": "gcc/doc/plugins.texi", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4309e92c980377d6f2c2ba2bb224f254b3cda49f/gcc%2Fdoc%2Fplugins.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4309e92c980377d6f2c2ba2bb224f254b3cda49f/gcc%2Fdoc%2Fplugins.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fplugins.texi?ref=4309e92c980377d6f2c2ba2bb224f254b3cda49f", "patch": "@@ -151,6 +151,7 @@ enum plugin_event\n @{\n   PLUGIN_PASS_MANAGER_SETUP,    /* To hook into pass manager.  */\n   PLUGIN_FINISH_TYPE,           /* After finishing parsing a type.  */\n+  PLUGIN_FINISH_DECL,           /* After finishing parsing a declaration. */\n   PLUGIN_FINISH_UNIT,           /* Useful for summary processing.  */\n   PLUGIN_PRE_GENERICIZE,        /* Allows to see low level AST in C and C++ frontends.  */\n   PLUGIN_FINISH,                /* Called before GCC exits.  */"}, {"sha": "3906bffc68bf6ac4aa23e22a90275946d2e4491a", "filename": "gcc/plugin.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4309e92c980377d6f2c2ba2bb224f254b3cda49f/gcc%2Fplugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4309e92c980377d6f2c2ba2bb224f254b3cda49f/gcc%2Fplugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fplugin.c?ref=4309e92c980377d6f2c2ba2bb224f254b3cda49f", "patch": "@@ -420,6 +420,7 @@ register_callback (const char *plugin_name,\n \t  }\n       /* Fall through.  */\n       case PLUGIN_FINISH_TYPE:\n+      case PLUGIN_FINISH_DECL:\n       case PLUGIN_START_UNIT:\n       case PLUGIN_FINISH_UNIT:\n       case PLUGIN_PRE_GENERICIZE:\n@@ -496,6 +497,7 @@ invoke_plugin_callbacks_full (int event, void *gcc_data)\n \tgcc_assert (event < event_last);\n       /* Fall through.  */\n       case PLUGIN_FINISH_TYPE:\n+      case PLUGIN_FINISH_DECL:\n       case PLUGIN_START_UNIT:\n       case PLUGIN_FINISH_UNIT:\n       case PLUGIN_PRE_GENERICIZE:"}, {"sha": "0c9c8bc76f540a2d00c411406efccfc15399e0ff", "filename": "gcc/plugin.def", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4309e92c980377d6f2c2ba2bb224f254b3cda49f/gcc%2Fplugin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4309e92c980377d6f2c2ba2bb224f254b3cda49f/gcc%2Fplugin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fplugin.def?ref=4309e92c980377d6f2c2ba2bb224f254b3cda49f", "patch": "@@ -24,6 +24,9 @@ DEFEVENT (PLUGIN_PASS_MANAGER_SETUP)\n /* After finishing parsing a type.  */\n DEFEVENT (PLUGIN_FINISH_TYPE)\n \n+/* After finishing parsing a declaration. */\n+DEFEVENT (PLUGIN_FINISH_DECL)\n+\n /* Useful for summary processing.  */\n DEFEVENT (PLUGIN_FINISH_UNIT)\n "}, {"sha": "a18bf7e9def6147d3100430cc20ee79ea2b98367", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4309e92c980377d6f2c2ba2bb224f254b3cda49f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4309e92c980377d6f2c2ba2bb224f254b3cda49f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4309e92c980377d6f2c2ba2bb224f254b3cda49f", "patch": "@@ -1,3 +1,10 @@\n+2011-08-11  Romain Geissler  <romain.geissler@gmail.com>\n+            Brian Hackett  <bhackett1024@gmail.com>\n+\n+\t* g++.dg/plugin/decl_plugin.c: New.\n+\t* g++.dg/plugin/decl-plugin-test.C: New.\n+\t* g++.dg/plugin/plugin.exp: Add above testcase.\n+\n 2011-08-11  Richard Guenther  <rguenther@suse.de>\n \n \t* g++.dg/tree-ssa/pr41186.C: Un-XFAIL."}, {"sha": "08a2ff2aa5dcea30be5d6aef602f2d5063fa6762", "filename": "gcc/testsuite/g++.dg/plugin/decl-plugin-test.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4309e92c980377d6f2c2ba2bb224f254b3cda49f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fdecl-plugin-test.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4309e92c980377d6f2c2ba2bb224f254b3cda49f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fdecl-plugin-test.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fdecl-plugin-test.C?ref=4309e92c980377d6f2c2ba2bb224f254b3cda49f", "patch": "@@ -0,0 +1,30 @@\n+extern int global; // { dg-warning \"Decl Global global\" }\n+int global_array[] = { 1, 2, 3 }; // { dg-warning \"Decl Global global_array\" }\n+\n+int takes_args(int arg1, int arg2)\n+{\n+  int local = arg1 + arg2 + global; // { dg-warning \"Decl Local local\" }\n+  return local + 1;\n+}\n+\n+int global = 12; // { dg-warning \"Decl Global global\" }\n+\n+struct test_str {\n+  int field; // { dg-warning \"Decl Field field\" }\n+};\n+\n+class test_class {\n+  int class_field1; // { dg-warning \"Decl Field class_field1\" }\n+  int class_field2; // { dg-warning \"Decl Field class_field2\" }\n+\n+  test_class() // { dg-warning \"Decl Function test_class\" }\n+    : class_field1(0), class_field2(0)\n+  {}\n+\n+  void swap_fields(int bias) // { dg-warning \"Decl Function swap_fields\" }\n+  {\n+    int temp = class_field1 + bias; // { dg-warning \"Decl Local temp\" }\n+    class_field1 = class_field2 - bias;\n+    class_field2 = temp;\n+  }\n+};"}, {"sha": "879b09accf3668954bbe5b1b7d1ee1cd17f01142", "filename": "gcc/testsuite/g++.dg/plugin/decl_plugin.c", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4309e92c980377d6f2c2ba2bb224f254b3cda49f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fdecl_plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4309e92c980377d6f2c2ba2bb224f254b3cda49f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fdecl_plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fdecl_plugin.c?ref=4309e92c980377d6f2c2ba2bb224f254b3cda49f", "patch": "@@ -0,0 +1,51 @@\n+/* A plugin example that shows which declarations are caught by FINISH_DECL */\n+\n+#include \"gcc-plugin.h\"\n+#include <stdlib.h>\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tree.h\"\n+#include \"tree-pass.h\"\n+#include \"intl.h\"\n+\n+int plugin_is_GPL_compatible;\n+\n+/* Callback function to invoke after GCC finishes a declaration. */\n+\n+void plugin_finish_decl (void *event_data, void *data)\n+{\n+  tree decl = (tree) event_data;\n+\n+  const char *kind = NULL;\n+  switch (TREE_CODE(decl)) {\n+  case FUNCTION_DECL:\n+    kind = \"Function\"; break;\n+  case PARM_DECL:\n+    kind = \"Parameter\"; break;\n+  case VAR_DECL:\n+    if (DECL_FILE_SCOPE_P(decl))\n+      kind = \"Global\";\n+    else\n+      kind = \"Local\";\n+    break;\n+  case FIELD_DECL:\n+    kind = \"Field\"; break;\n+  default:\n+    kind = \"Unknown\";\n+  }\n+\n+  warning (0, G_(\"Decl %s %s\"),\n+           kind, IDENTIFIER_POINTER (DECL_NAME (decl)));\n+}\n+\n+int\n+plugin_init (struct plugin_name_args *plugin_info,\n+             struct plugin_gcc_version *version)\n+{\n+  const char *plugin_name = plugin_info->base_name;\n+\n+  register_callback (plugin_name, PLUGIN_FINISH_DECL,\n+                     plugin_finish_decl, NULL);\n+  return 0;\n+}"}, {"sha": "fb962dfdead636409bded3bf5f9c800124ef0126", "filename": "gcc/testsuite/g++.dg/plugin/plugin.exp", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4309e92c980377d6f2c2ba2bb224f254b3cda49f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fplugin.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4309e92c980377d6f2c2ba2bb224f254b3cda49f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fplugin.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fplugin.exp?ref=4309e92c980377d6f2c2ba2bb224f254b3cda49f", "patch": "@@ -51,7 +51,8 @@ set plugin_test_list [list \\\n     { pragma_plugin.c pragma_plugin-test-1.C } \\\n     { selfassign.c self-assign-test-1.C self-assign-test-2.C self-assign-test-3.C } \\\n     { dumb_plugin.c dumb-plugin-test-1.C } \\\n-    { header_plugin.c header-plugin-test.C } ]\n+    { header_plugin.c header-plugin-test.C } \\\n+    { decl_plugin.c decl-plugin-test.C } ]\n \n foreach plugin_test $plugin_test_list {\n     # Replace each source file with its full-path name"}]}