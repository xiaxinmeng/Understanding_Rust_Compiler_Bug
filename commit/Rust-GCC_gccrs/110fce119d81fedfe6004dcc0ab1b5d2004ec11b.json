{"sha": "110fce119d81fedfe6004dcc0ab1b5d2004ec11b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTEwZmNlMTE5ZDgxZmVkZmU2MDA0ZGNjMGFiMWI1ZDIwMDRlYzExYg==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2004-09-11T00:00:31Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2004-09-11T00:00:31Z"}, "message": "re PR c/16046 (ICE tree check: expected tree_list, have identifier_node in decl_attributes, at attribs.c:151)\n\n2004-09-10  Eric Christopher  <echristo@redhat.com>\n\n\tPR c/16046\n\t* c-parse.in (attribute): Add NULL_TREE for error case\n\tfor error recovery.\n\n2004-09-10  Eric Christopher  <echristo@redhat.com>\n\n\t* gcc.dg/20040910-1.c: New test.\n\nFrom-SVN: r87330", "tree": {"sha": "b1842f804894a71a405ad99e2a9f90ec1db14438", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1842f804894a71a405ad99e2a9f90ec1db14438"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/110fce119d81fedfe6004dcc0ab1b5d2004ec11b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/110fce119d81fedfe6004dcc0ab1b5d2004ec11b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/110fce119d81fedfe6004dcc0ab1b5d2004ec11b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/110fce119d81fedfe6004dcc0ab1b5d2004ec11b/comments", "author": null, "committer": null, "parents": [{"sha": "5d709b0013a3d180de93f3349233637c281215b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d709b0013a3d180de93f3349233637c281215b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d709b0013a3d180de93f3349233637c281215b2"}], "stats": {"total": 30, "additions": 21, "deletions": 9}, "files": [{"sha": "5c5fd675e4935d62e744778de7a7301d6a8eee82", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/110fce119d81fedfe6004dcc0ab1b5d2004ec11b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/110fce119d81fedfe6004dcc0ab1b5d2004ec11b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=110fce119d81fedfe6004dcc0ab1b5d2004ec11b", "patch": "@@ -1,3 +1,9 @@\n+2004-09-10  Eric Christopher  <echristo@redhat.com>\n+\n+\tPR c/16046\n+\t* c-parse.in (attribute): Add NULL_TREE for error case\n+\tfor error recovery.\n+\n 2004-09-10  Zack Weinberg  <zack@codesourcery.com>\n \n \t* c-common.h (struct c_fileinfo): Comment moved here from cp-tree.h.\n@@ -6,8 +12,8 @@\n \t* c-lex.c (get_fileinfo): Initialize file_info_tree here, if\n \tit's not already been done ...\n \t(init_c_lex): ... not here.\n-\t(fe_file_change): Don't call extract_interface_info\n-.\n+\t(fe_file_change): Don't call extract_interface_info.\n+\n 2004-09-11  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* c-tree.h (struct c_declspecs): Remove typedef_decl.  Add"}, {"sha": "b14a5eae6c5bcff66af79cc356fb020bdca76118", "filename": "gcc/c-parse.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/110fce119d81fedfe6004dcc0ab1b5d2004ec11b/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/110fce119d81fedfe6004dcc0ab1b5d2004ec11b/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=110fce119d81fedfe6004dcc0ab1b5d2004ec11b", "patch": "@@ -1359,7 +1359,7 @@ attribute:\n                 '(' '(' attribute_list ')' ')' start_string_translation\n \t\t{ $$ = $5; }\n       | ATTRIBUTE error start_string_translation\n-                {}\n+                { $$ = NULL_TREE; }\n \t;\n \n attribute_list:\n@@ -2048,9 +2048,9 @@ c99_block_lineno_labeled_stmt:\n \n lineno_stmt:\n \t  save_location stmt\n-\t\t{ \n+\t\t{\n \t\t  /* Two cases cannot and do not have line numbers associated:\n-\t\t     If stmt is degenerate, such as \"2;\", then stmt is an \n+\t\t     If stmt is degenerate, such as \"2;\", then stmt is an\n \t\t     INTEGER_CST, which cannot hold line numbers.  But that's\n \t\t     ok because the statement will either be changed to a\n \t\t     MODIFY_EXPR during gimplification of the statement expr,\n@@ -2831,7 +2831,7 @@ optparms:\n \t\t\t\t\t\t     grokparm ($3)));\n \t\t}\n \t;\n-\t\n+\n optellipsis:\n \t  /* NULL */\n \t\t{"}, {"sha": "3d052a9aae665fd4cb9b7ae65264d43e10674d7b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/110fce119d81fedfe6004dcc0ab1b5d2004ec11b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/110fce119d81fedfe6004dcc0ab1b5d2004ec11b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=110fce119d81fedfe6004dcc0ab1b5d2004ec11b", "patch": "@@ -1,3 +1,7 @@\n+2004-09-10  Eric Christopher  <echristo@redhat.com>\n+\n+\t* gcc.dg/20040910-1.c: New test.\n+\n 2004-09-11  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* gcc.dg/bitfld-9.c: New test.\n@@ -45,7 +49,7 @@\n \t* gcc.dg/darwin-ld-20040828-1.c: New test.\n \t* gcc.dg/darwin-ld-20040828-2.c: New test.\n \t* gcc.dg/darwin-ld-20040828-3.c: New test.\n-\t\n+\n 2004-09-08  Ziemowit Laski  <zlaski@apple.com>\n \n \t* objc.dg/bitfield-2.m: Make 'id' definition a typedef.\n@@ -66,10 +70,10 @@\n \tLD_LIBRARYN32_PATH, LD_LIBRARY64_PATH and DYLD_LIBRARY_PATH.\n \n 2004-09-06  Devang Patel  <dpatel@apple.com>\n-\t\n+\n \t* gcc.dg/tree-ssa/ifc-20040816-1.c: Use -ftree-vectorize.\n \t* gcc.dg/tree-ssa/ifc-20040816-2.c: Use -ftree-vectorize.\n-\t\n+\n 2004-09-06  Zack Weinberg  <zack@codesourcery.com>\n \n \t* g++.old-deja/g++.other/enum2.C: Move dg-error markers to"}, {"sha": "8d27c732f3527424beedc7003e4136b02fbca386", "filename": "gcc/testsuite/gcc.dg/20040910-1.c", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/110fce119d81fedfe6004dcc0ab1b5d2004ec11b/gcc%2Ftestsuite%2Fgcc.dg%2F20040910-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/110fce119d81fedfe6004dcc0ab1b5d2004ec11b/gcc%2Ftestsuite%2Fgcc.dg%2F20040910-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20040910-1.c?ref=110fce119d81fedfe6004dcc0ab1b5d2004ec11b", "patch": "@@ -0,0 +1,2 @@\n+/* Tests error recovery for invalid code.  */\n+__attribute__((foo)  int f (){} /* { dg-error \"syntax error before \\\"int\\\"\" } */"}]}