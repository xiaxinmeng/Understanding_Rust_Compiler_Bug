{"sha": "e1da1089c4f071c70e8b8447aca97e1e49c27bcd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFkYTEwODljNGYwNzFjNzBlOGI4NDQ3YWNhOTdlMWU0OWMyN2JjZA==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2002-07-08T20:06:51Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2002-07-08T20:06:51Z"}, "message": "Makefile.in: Remove references to bsp, cygmon, libstub.\n\n\t* Makefile.in: Remove references to bsp, cygmon, libstub.\n\t* configure.in: Ditto.\n\n\t* configure.in: Remove leftover reference to gdbtest.\n\nFrom-SVN: r55332", "tree": {"sha": "cef73fd185c872d16edd4fc4e1390a23698772de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cef73fd185c872d16edd4fc4e1390a23698772de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1da1089c4f071c70e8b8447aca97e1e49c27bcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1da1089c4f071c70e8b8447aca97e1e49c27bcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1da1089c4f071c70e8b8447aca97e1e49c27bcd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1da1089c4f071c70e8b8447aca97e1e49c27bcd/comments", "author": null, "committer": null, "parents": [{"sha": "17640f249bd016b2a4c5bee3b04edb528c5fac6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17640f249bd016b2a4c5bee3b04edb528c5fac6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17640f249bd016b2a4c5bee3b04edb528c5fac6c"}], "stats": {"total": 69, "additions": 13, "deletions": 56}, "files": [{"sha": "89c87a9472d2f003c01db063d0c3222237a65f4f", "filename": "ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1da1089c4f071c70e8b8447aca97e1e49c27bcd/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1da1089c4f071c70e8b8447aca97e1e49c27bcd/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=e1da1089c4f071c70e8b8447aca97e1e49c27bcd", "patch": "@@ -1,3 +1,10 @@\n+2002-07-08  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* Makefile.in: Remove references to bsp, cygmon, libstub.\n+\t* configure.in: Ditto.\n+\n+\t* configure.in: Remove leftover reference to gdbtest.\n+\n 2002-07-08  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* configure.in (gxx_include_dir):  Change to match versioned"}, {"sha": "d90c1a660cd0a8f476264651a4812a0126b90bb9", "filename": "Makefile.in", "status": "modified", "additions": 4, "deletions": 20, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1da1089c4f071c70e8b8447aca97e1e49c27bcd/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1da1089c4f071c70e8b8447aca97e1e49c27bcd/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=e1da1089c4f071c70e8b8447aca97e1e49c27bcd", "patch": "@@ -186,7 +186,7 @@ OTHERS =\n \n # This is set by the configure script to the list of directories which\n # should be built using the target tools.\n-TARGET_CONFIGDIRS = libiberty libgloss $(SPECIAL_LIBS) newlib winsup opcodes bsp libstub cygmon libf2c libobjc\n+TARGET_CONFIGDIRS = libiberty libgloss $(SPECIAL_LIBS) newlib winsup opcodes libf2c libobjc\n \n # Target libraries are put under this directory:\n # Changed by configure to $(target_alias) if cross.\n@@ -768,14 +768,11 @@ ALL_TARGET_MODULES = \\\n \tall-target-libiberty \\\n \tall-target-gperf \\\n \tall-target-examples \\\n-\tall-target-libstub \\\n \tall-target-libffi \\\n \tall-target-libjava \\\n \tall-target-zlib \\\n \tall-target-boehm-gc \\\n-\tall-target-qthreads \\\n-\tall-target-bsp \\\n-\tall-target-cygmon\n+\tall-target-qthreads\n \n # This is a list of the configure targets for all of the modules which\n # are compiled using the target tools.\n@@ -790,14 +787,11 @@ CONFIGURE_TARGET_MODULES = \\\n \tconfigure-target-libiberty \\\n \tconfigure-target-gperf \\\n \tconfigure-target-examples \\\n-\tconfigure-target-libstub \\\n \tconfigure-target-libffi \\\n \tconfigure-target-libjava \\\n \tconfigure-target-zlib \\\n \tconfigure-target-boehm-gc \\\n-\tconfigure-target-qthreads \\\n-\tconfigure-target-bsp \\\n-\tconfigure-target-cygmon\n+\tconfigure-target-qthreads\n \n # This is a list of the check targets for all of the modules which are\n # compiled using $(TARGET_FLAGS_TO_PASS).\n@@ -826,7 +820,6 @@ INSTALL_TARGET_MODULES = \\\n \tinstall-target-winsup \\\n \tinstall-target-libgloss \\\n \tinstall-target-libiberty \\\n-\tinstall-target-bsp \\\n \tinstall-target-libjava \\\n \tinstall-target-zlib \\\n \tinstall-target-boehm-gc \\\n@@ -908,14 +901,11 @@ CLEAN_TARGET_MODULES = \\\n \tclean-target-libiberty \\\n \tclean-target-gperf \\\n \tclean-target-examples \\\n-\tclean-target-libstub \\\n \tclean-target-libffi \\\n \tclean-target-libjava \\\n \tclean-target-zlib \\\n \tclean-target-boehm-gc \\\n-\tclean-target-qthreads \\\n-\tclean-target-bsp \\\n-\tclean-target-cygmon\n+\tclean-target-qthreads\n \n # All of the x11 modules that can be cleaned\n CLEAN_X11_MODULES = \\\n@@ -1672,12 +1662,8 @@ all-binutils: all-libiberty all-opcodes all-bfd all-flex all-bison all-byacc all\n all-bison: all-texinfo\n configure-target-boehm-gc: $(ALL_GCC_C) configure-target-qthreads\n all-target-boehm-gc: configure-target-boehm-gc\n-configure-target-bsp: $(ALL_GCC_C)\n-all-target-bsp: configure-target-bsp\n all-byacc:\n all-bzip2:\n-configure-target-cygmon: $(ALL_GCC_C)\n-all-target-cygmon: configure-target-cygmon all-target-libiberty all-target-libstub all-target-bsp\n all-db:\n all-dejagnu: all-tcl all-expect all-tk\n all-diff: all-libiberty\n@@ -1723,8 +1709,6 @@ configure-target-libjava: $(ALL_GCC_C) configure-target-zlib configure-target-bo\n all-target-libjava: configure-target-libjava all-fastjar all-target-zlib all-target-boehm-gc all-target-qthreads all-target-libffi\n configure-target-libstdc++-v3: $(ALL_GCC_C)\n all-target-libstdc++-v3: configure-target-libstdc++-v3 all-target-libiberty\n-configure-target-libstub: $(ALL_GCC_C)\n-all-target-libstub: configure-target-libstub\n all-libtool:\n configure-target-libf2c: $(ALL_GCC_C)\n all-target-libf2c: configure-target-libf2c all-target-libiberty"}, {"sha": "8de7b906b03e034f79c044b68a345b0deb98ba4b", "filename": "configure.in", "status": "modified", "additions": 2, "deletions": 36, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1da1089c4f071c70e8b8447aca97e1e49c27bcd/configure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1da1089c4f071c70e8b8447aca97e1e49c27bcd/configure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.in?ref=e1da1089c4f071c70e8b8447aca97e1e49c27bcd", "patch": "@@ -94,7 +94,7 @@ native_only=\"autoconf automake libtool fileutils find gawk gettext grep gzip hel\n \n # directories to be built in a cross environment only\n #\n-cross_only=\"target-libgloss target-newlib target-cygmon target-opcodes target-libstub\"\n+cross_only=\"target-libgloss target-newlib target-opcodes\"\n \n ## All tools belong in one of the four categories, and are assigned above\n ## We assign ${configdirs} this way to remove all embedded newlines.  This\n@@ -396,15 +396,9 @@ case \"${target}\" in\n     ;;\n   fr30-*-elf*)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n-    if test x${is_cross_compiler} != xno ; then\n-\t   target_configdirs=\"${target_configdirs} target-bsp target-libstub target-cygmon\"\n-    fi\n     ;;\n   frv-*-*)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n-    if test x${is_cross_compiler} != xno ; then\n-\t   target_configdirs=\"${target_configdirs} target-bsp target-cygmon\"\n-    fi\n     ;;\n   h8300*-*-*)\n     noconfigdirs=\"$noconfigdirs target-libgloss\"\n@@ -440,9 +434,6 @@ case \"${target}\" in\n     ;;\n   i[3456]86-*-coff | i[3456]86-*-elf)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n-    if test x${is_cross_compiler} != xno ; then\n-         target_configdirs=\"${target_configdirs} target-libstub target-cygmon\"\n-    fi\n     ;;\n   i[34567]86-*-freebsd*)\n     noconfigdirs=\"$noconfigdirs target-newlib target-libgloss\"\n@@ -515,15 +506,9 @@ case \"${target}\" in\n     ;;\n   m68k-*-elf*)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n-    if test x${is_cross_compiler} != xno ; then\n-\t   target_configdirs=\"${target_configdirs} target-bsp target-cygmon\"\n-    fi\n     ;;\n   m68k-*-coff*)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n-    if test x${is_cross_compiler} != xno ; then\n-\t   target_configdirs=\"${target_configdirs} target-bsp target-cygmon\"\n-    fi\n     ;;\n   mcore-*-pe*)\n   # The EPOC C++ environment does not support exceptions or rtti,\n@@ -535,15 +520,9 @@ case \"${target}\" in\n     ;;\n   mn10200-*-*)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n-    if test x${is_cross_compiler} != xno ; then\n-\t   target_configdirs=\"${target_configdirs} target-libstub target-cygmon\"\n-    fi\n     ;;\n   mn10300-*-*)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n-    if test x${is_cross_compiler} != xno ; then\n-\t   target_configdirs=\"${target_configdirs} target-bsp target-libstub target-cygmon\"\n-    fi\n     ;;\n   powerpc-*-aix*)\n     # copied from rs6000-*-* entry\n@@ -564,9 +543,6 @@ case \"${target}\" in\n     ;;\n   powerpc-*-eabi)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n-    if test x${is_cross_compiler} != xno ; then\n-\t   target_configdirs=\"${target_configdirs} target-bsp target-libstub target-cygmon\"\n-    fi\n     ;;\n   rs6000-*-lynxos*)\n     noconfigdirs=\"$noconfigdirs target-newlib gprof ${libgcj}\"\n@@ -600,7 +576,6 @@ case \"${target}\" in\n     ;;\n   mipstx39-*-*)\n     noconfigdirs=\"$noconfigdirs gprof ${libgcj}\"   # same as generic mips\n-    target_configdirs=\"${target_configdirs} target-bsp target-libstub target-cygmon\"\n    ;;\n   mips*-*-linux*)\n     noconfigdirs=\"$noconfigdirs target-libffi\"\n@@ -624,27 +599,18 @@ case \"${target}\" in\n     noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n     ;;\n   sparc-*-elf*)\n-    if test x${is_cross_compiler} != xno ; then\n-\t   target_configdirs=\"${target_configdirs} target-libstub target-cygmon\"\n-    fi\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n     ;;\n   sparc64-*-elf*)\n-    if test x${is_cross_compiler} != xno ; then\n-\t   target_configdirs=\"${target_configdirs} target-libstub target-cygmon\"\n-    fi\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n     ;;\n   sparclite-*-*)\n-    if test x${is_cross_compiler} != xno ; then\n-\t   target_configdirs=\"${target_configdirs} target-bsp target-libstub target-cygmon\"\n-    fi\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n     ;;\n   sparc-*-sunos4*)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n     if test x${is_cross_compiler} != xno ; then\n-           noconfigdirs=\"$noconfigdirs gdb gdbtest target-newlib target-libgloss\"\n+           noconfigdirs=\"$noconfigdirs gdb target-newlib target-libgloss\"\n     else\n            use_gnu_ld=no\n     fi"}]}