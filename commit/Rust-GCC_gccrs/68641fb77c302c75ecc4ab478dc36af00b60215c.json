{"sha": "68641fb77c302c75ecc4ab478dc36af00b60215c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg2NDFmYjc3YzMwMmM3NWVjYzRhYjQ3OGRjMzZhZjAwYjYwMjE1Yw==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2019-02-12T14:00:59Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2019-02-12T14:00:59Z"}, "message": "[libbacktrace] Handle bsearch with NULL base in dwarf_lookup_pc\n\nThe call to bsearch in dwarf_lookup_pc can have NULL as base argument when\nthe nmemb argument is 0.  The base argument is required to be pointing to the\ninitial member of an array of nmemb objects.  It is not specified what\nconstitutes a valid pointer to an array of 0 objects, but glibc declares base\nwith attribute non-null, so the NULL will trigger a sanitizer runtime error.\n\nFix this by only calling bsearch if nmemb != 0.\n\n2019-02-12  Tom de Vries  <tdevries@suse.de>\n\n\tPR libbacktrace/81983\n\t* dwarf.c (dwarf_lookup_pc): Don't call bsearch if nmemb == 0.\n\nFrom-SVN: r268796", "tree": {"sha": "2dd62060cb986bf7c3b7551130513771d88b2a12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2dd62060cb986bf7c3b7551130513771d88b2a12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68641fb77c302c75ecc4ab478dc36af00b60215c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68641fb77c302c75ecc4ab478dc36af00b60215c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68641fb77c302c75ecc4ab478dc36af00b60215c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68641fb77c302c75ecc4ab478dc36af00b60215c/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b3f2b048eb9833a7d0b72cd1ef68166dcf6bf566", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3f2b048eb9833a7d0b72cd1ef68166dcf6bf566", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3f2b048eb9833a7d0b72cd1ef68166dcf6bf566"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "e29c41f78ed2cb5a357dd3bc97060ee898407d6a", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68641fb77c302c75ecc4ab478dc36af00b60215c/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68641fb77c302c75ecc4ab478dc36af00b60215c/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=68641fb77c302c75ecc4ab478dc36af00b60215c", "patch": "@@ -1,3 +1,8 @@\n+2019-02-12  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR libbacktrace/81983\n+\t* dwarf.c (dwarf_lookup_pc): Don't call bsearch if nmemb == 0.\n+\n 2019-02-10  Tom de Vries  <tdevries@suse.de>\n \n \t* Makefile.am (BUILDTESTS): Add btest_lto."}, {"sha": "f338489fe4496fa8c550722936eb0fb49b11bc7b", "filename": "libbacktrace/dwarf.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68641fb77c302c75ecc4ab478dc36af00b60215c/libbacktrace%2Fdwarf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68641fb77c302c75ecc4ab478dc36af00b60215c/libbacktrace%2Fdwarf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fdwarf.c?ref=68641fb77c302c75ecc4ab478dc36af00b60215c", "patch": "@@ -2821,8 +2821,10 @@ dwarf_lookup_pc (struct backtrace_state *state, struct dwarf_data *ddata,\n   *found = 1;\n \n   /* Find an address range that includes PC.  */\n-  entry = bsearch (&pc, ddata->addrs, ddata->addrs_count,\n-\t\t   sizeof (struct unit_addrs), unit_addrs_search);\n+  entry = (ddata->addrs_count == 0\n+\t   ? NULL\n+\t   : bsearch (&pc, ddata->addrs, ddata->addrs_count,\n+\t\t      sizeof (struct unit_addrs), unit_addrs_search));\n \n   if (entry == NULL)\n     {"}]}