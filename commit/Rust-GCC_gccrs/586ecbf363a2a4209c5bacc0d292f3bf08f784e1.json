{"sha": "586ecbf363a2a4209c5bacc0d292f3bf08f784e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg2ZWNiZjM2M2EyYTQyMDljNWJhY2MwZDI5MmYzYmYwOGY3ODRlMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-06-12T10:05:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-06-12T10:05:20Z"}, "message": "[multiple changes]\n\n2012-06-12  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch6.adb: Minor reformatting.\n\n2012-06-12  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* gnat_ugn.texi: Couple of minor corrections.\n\n2012-06-12  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_prag.adb (Check_Variant): An empty component list is not\n\tillegal in an unchecked union variant.\n\nFrom-SVN: r188436", "tree": {"sha": "7b7564af950a782481ed065c77f9cca3e727f568", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b7564af950a782481ed065c77f9cca3e727f568"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/586ecbf363a2a4209c5bacc0d292f3bf08f784e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/586ecbf363a2a4209c5bacc0d292f3bf08f784e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/586ecbf363a2a4209c5bacc0d292f3bf08f784e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/586ecbf363a2a4209c5bacc0d292f3bf08f784e1/comments", "author": null, "committer": null, "parents": [{"sha": "70f4ad204d9ef74b9650a1088a5d26d121e4ded8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70f4ad204d9ef74b9650a1088a5d26d121e4ded8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70f4ad204d9ef74b9650a1088a5d26d121e4ded8"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "c10eef0be54580f0a33f69dcb89afe1313913fc6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/586ecbf363a2a4209c5bacc0d292f3bf08f784e1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/586ecbf363a2a4209c5bacc0d292f3bf08f784e1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=586ecbf363a2a4209c5bacc0d292f3bf08f784e1", "patch": "@@ -1,3 +1,16 @@\n+2012-06-12  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch6.adb: Minor reformatting.\n+\n+2012-06-12  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat_ugn.texi: Couple of minor corrections.\n+\n+2012-06-12  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_prag.adb (Check_Variant): An empty component list is not\n+\tillegal in an unchecked union variant.\n+\n 2012-06-12  Gary Dismukes  <dismukes@adacore.com>\n \n \t* projects.texi: Remove comments."}, {"sha": "825c8a4df7aba085cf4b71b93dce56e0ae62f507", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/586ecbf363a2a4209c5bacc0d292f3bf08f784e1/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/586ecbf363a2a4209c5bacc0d292f3bf08f784e1/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=586ecbf363a2a4209c5bacc0d292f3bf08f784e1", "patch": "@@ -10618,13 +10618,13 @@ Any one of the following applies: @code{pragma Inline} is applied to the\n subprogram and the @option{^-gnatn^/INLINE^} switch is specified; the\n subprogram is local to the unit and called once from within it; the\n subprogram is small and optimization level @option{-O2} is specified;\n-optimization level @option{-O3}) is specified.\n+optimization level @option{-O3} is specified.\n @end itemize\n \n @noindent\n Calls to subprograms in @code{with}'ed units are normally not inlined.\n To achieve actual inlining (that is, replacement of the call by the code\n-in the body of the subprogram), the following conditions must all be true.\n+in the body of the subprogram), the following conditions must all be true:\n \n @itemize @bullet\n @item"}, {"sha": "c69bf918e5d24ed00b0e96b358622eb965136857", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/586ecbf363a2a4209c5bacc0d292f3bf08f784e1/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/586ecbf363a2a4209c5bacc0d292f3bf08f784e1/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=586ecbf363a2a4209c5bacc0d292f3bf08f784e1", "patch": "@@ -7416,6 +7416,7 @@ package body Sem_Ch6 is\n             --  The following is too permissive. A more precise test should\n             --  check that the generic actual is an ancestor subtype of the\n             --  other ???.\n+\n             --  See code in Find_Corresponding_Spec that applies an additional\n             --  filter to handle accidental amiguities in instances.\n \n@@ -8164,19 +8165,17 @@ package body Sem_Ch6 is\n \n       begin\n          if Ekind (E) = E_Function\n-           and then Is_Generic_Actual_Type (Etype (E))\n-           /= Is_Generic_Actual_Type (Etype (Designator))\n+           and then Is_Generic_Actual_Type (Etype (E)) /=\n+                    Is_Generic_Actual_Type (Etype (Designator))\n          then\n             return True;\n          end if;\n \n          F1 := First_Formal (Designator);\n          F2 := First_Formal (E);\n-\n          while Present (F1) loop\n-            if\n-              Is_Generic_Actual_Type (Etype (F1))\n-              /= Is_Generic_Actual_Type (Etype (F2))\n+            if Is_Generic_Actual_Type (Etype (F1)) /=\n+               Is_Generic_Actual_Type (Etype (F2))\n             then\n                return True;\n             end if;\n@@ -8202,7 +8201,7 @@ package body Sem_Ch6 is\n          if Scope (E) = Current_Scope then\n             if Current_Scope = Standard_Standard\n               or else (Ekind (E) = Ekind (Designator)\n-                         and then Type_Conformant (E, Designator))\n+                        and then Type_Conformant (E, Designator))\n             then\n                --  Within an instantiation, we know that spec and body are\n                --  subtype conformant, because they were subtype conformant in"}, {"sha": "cbcc0be3d17bae7aec8b92df87ea4a5a25bfa03c", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/586ecbf363a2a4209c5bacc0d292f3bf08f784e1/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/586ecbf363a2a4209c5bacc0d292f3bf08f784e1/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=586ecbf363a2a4209c5bacc0d292f3bf08f784e1", "patch": "@@ -2483,13 +2483,6 @@ package body Sem_Prag is\n          Comp  : Node_Id;\n \n       begin\n-         if not Is_Non_Empty_List (Component_Items (Clist)) then\n-            Error_Msg_N\n-              (\"Unchecked_Union may not have empty component list\",\n-               Variant);\n-            return;\n-         end if;\n-\n          Comp := First (Component_Items (Clist));\n          while Present (Comp) loop\n             Check_Component (Comp, UU_Typ, In_Variant_Part => True);"}]}