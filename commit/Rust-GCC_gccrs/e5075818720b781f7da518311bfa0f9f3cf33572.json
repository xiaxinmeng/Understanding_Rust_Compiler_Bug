{"sha": "e5075818720b781f7da518311bfa0f9f3cf33572", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUwNzU4MTg3MjBiNzgxZjdkYTUxODMxMWJmYTBmOWYzY2YzMzU3Mg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-07-27T00:26:20Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-07-27T00:26:20Z"}, "message": "(fold, case EQ_EXPR): Remove code that converts mod to unsigned mod;\n\nit isn't correct for negative operands.\n\nFrom-SVN: r4995", "tree": {"sha": "b86da7334840377c03b15be7c9476d4bbc2edd45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b86da7334840377c03b15be7c9476d4bbc2edd45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5075818720b781f7da518311bfa0f9f3cf33572", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5075818720b781f7da518311bfa0f9f3cf33572", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5075818720b781f7da518311bfa0f9f3cf33572", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5075818720b781f7da518311bfa0f9f3cf33572/comments", "author": null, "committer": null, "parents": [{"sha": "437b3c097dbc0157e978e2e31c672542cf72d564", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/437b3c097dbc0157e978e2e31c672542cf72d564", "html_url": "https://github.com/Rust-GCC/gccrs/commit/437b3c097dbc0157e978e2e31c672542cf72d564"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "5f23e98ff955b23040d877440c6b340d6a41ade1", "filename": "gcc/fold-const.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5075818720b781f7da518311bfa0f9f3cf33572/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5075818720b781f7da518311bfa0f9f3cf33572/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=e5075818720b781f7da518311bfa0f9f3cf33572", "patch": "@@ -4203,6 +4203,10 @@ fold (expr)\n \t\t\t   arg1));\n \t}\n \n+      /* It would be nice to do this since it generates better code.\n+\t Unfortunately, it doesn't produce the correct result if the\n+\t first operand is negative.  */\n+#if 0\n       /* If this is an NE or EQ comparison of zero against the result of a\n \t signed MOD operation, make the MOD operation unsigned since it\n \t is simpler and equivalent.  */\n@@ -4221,6 +4225,7 @@ fold (expr)\n \n \t  return build (code, type, newmod, convert (newtype, arg1));\n \t}\n+#endif\n \n       /* If this is an NE comparison of zero with an AND of one, remove the\n \t comparison since the AND will give the correct value.  */"}]}