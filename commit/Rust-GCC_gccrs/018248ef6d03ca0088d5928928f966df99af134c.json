{"sha": "018248ef6d03ca0088d5928928f966df99af134c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE4MjQ4ZWY2ZDAzY2EwMDg4ZDU5Mjg5MjhmOTY2ZGY5OWFmMTM0Yw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-12-02T07:15:03Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-12-02T07:28:11Z"}, "message": "i386: Fix abs an maxmin expanders for TARGET_PARTIAL_REG_STALL [PR98079].\n\nQImode shold be enabled only for !TARGET_PARTIAL_REG_STALL\n\n2020-12-02  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\n\tPR target/98079\n\ngcc/\n\t* config/i386/i386.md (abs<mode>2): Enable QImode\n\tonly for !TARGET_PARTIAL_REG_STALL.\n\t(*abs<mode>2_1): Ditto.\n\t(<maxmin:code><mode>3): Ditto.\n\t(*<maxmin:code><mode>3_1): Ditto.\n\ngcc/testsuite/\n\t* gcc.target/i386/pr98079.c: New test.", "tree": {"sha": "65623437285c5439c5f005480e6a91397e7376d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65623437285c5439c5f005480e6a91397e7376d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/018248ef6d03ca0088d5928928f966df99af134c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/018248ef6d03ca0088d5928928f966df99af134c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/018248ef6d03ca0088d5928928f966df99af134c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/018248ef6d03ca0088d5928928f966df99af134c/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49ca22dd67817acd196e81f7615162a88cb39587", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49ca22dd67817acd196e81f7615162a88cb39587", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49ca22dd67817acd196e81f7615162a88cb39587"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "76e9499ad74f2991d01b98ede5492caf8cdf274f", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018248ef6d03ca0088d5928928f966df99af134c/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018248ef6d03ca0088d5928928f966df99af134c/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=018248ef6d03ca0088d5928928f966df99af134c", "patch": "@@ -10184,7 +10184,8 @@\n \t  (abs:SDWIM\n \t    (match_operand:SDWIM 1 \"general_operand\")))\n      (clobber (reg:CC FLAGS_REG))])]\n-  \"TARGET_CMOVE\"\n+  \"TARGET_CMOVE\n+   && (<MODE>mode != QImode || !TARGET_PARTIAL_REG_STALL)\"\n {\n   if (TARGET_EXPAND_ABS)\n     {\n@@ -10257,6 +10258,7 @@\n \t  (match_operand:SWI 1 \"general_operand\")))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_CMOVE\n+   && (<MODE>mode != QImode || !TARGET_PARTIAL_REG_STALL)\n    && ix86_pre_reload_split ()\"\n    \"#\"\n    \"&& 1\"\n@@ -18972,7 +18974,8 @@\n \t    (match_operand:SDWIM 1 \"register_operand\")\n \t    (match_operand:SDWIM 2 \"general_operand\")))\n      (clobber (reg:CC FLAGS_REG))])]\n-  \"TARGET_CMOVE\")\n+  \"TARGET_CMOVE\n+   && (<MODE>mode != QImode || !TARGET_PARTIAL_REG_STALL)\")\n \n (define_insn_and_split \"*<code><dwi>3_doubleword\"\n   [(set (match_operand:<DWI> 0 \"register_operand\")\n@@ -19039,6 +19042,7 @@\n \t  (match_operand:SWI 2 \"general_operand\")))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_CMOVE\n+   && (<MODE>mode != QImode || !TARGET_PARTIAL_REG_STALL)\n    && ix86_pre_reload_split ()\"\n   \"#\"\n   \"&& 1\""}, {"sha": "8de0ec34dfa50e0e254942c9b78fe8aa0954148b", "filename": "gcc/testsuite/gcc.target/i386/pr98079.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018248ef6d03ca0088d5928928f966df99af134c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98079.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018248ef6d03ca0088d5928928f966df99af134c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98079.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98079.c?ref=018248ef6d03ca0088d5928928f966df99af134c", "patch": "@@ -0,0 +1,13 @@\n+/* PR target/98079 */\n+/* { dg-do compile { target ia32 } } */\n+/* { dg-options \"-O2 -march=pentium3\" } */\n+\n+typedef __UINT8_TYPE__ uint8_t;\n+\n+uint8_t foo (uint8_t x)\n+{\n+  if (x & 0x80)\n+    x = -x;\n+\n+  return x;\n+}"}]}