{"sha": "c3e960731043e1de34786c085a34286b46d622a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNlOTYwNzMxMDQzZTFkZTM0Nzg2YzA4NWEzNDI4NmI0NmQ2MjJhMg==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2014-01-30T22:36:13Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2014-01-30T22:36:13Z"}, "message": "rs6000.c (rs6000_expand_vector_init): Remove unused variable \"field\".\n\n2014-01-30  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* config/rs6000/rs6000.c (rs6000_expand_vector_init): Remove\n\tunused variable \"field\".\n\t* config/rs6000/vsx.md (vsx_mergel_<mode>): Add missing DONE.\n\t(vsx_mergeh_<mode>): Likewise.\n\t* config/rs6000/altivec.md (altivec_vmrghb): Likewise.\n\t(altivec_vmrghh): Likewise.\n\t(altivec_vmrghw): Likewise.\n\t(altivec_vmrglb): Likewise.\n\t(altivec_vmrglh): Likewise.\n\t(altivec_vmrglw): Likewise.\n\t(altivec_vspltb): Add missing uses.\n\t(altivec_vsplth): Likewise.\n\t(altivec_vspltw): Likewise.\n\t(altivec_vspltsf): Likewise.\n\nFrom-SVN: r207326", "tree": {"sha": "5c3c770d53d2cb99c96b22e2e6ff8318f4735778", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c3c770d53d2cb99c96b22e2e6ff8318f4735778"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3e960731043e1de34786c085a34286b46d622a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3e960731043e1de34786c085a34286b46d622a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3e960731043e1de34786c085a34286b46d622a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3e960731043e1de34786c085a34286b46d622a2/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4bb9c32da1d4f8b68524725507228ae93a7b1d0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bb9c32da1d4f8b68524725507228ae93a7b1d0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bb9c32da1d4f8b68524725507228ae93a7b1d0d"}], "stats": {"total": 50, "additions": 37, "deletions": 13}, "files": [{"sha": "8939e12abdc19068e7e4c06e1b310251137759a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3e960731043e1de34786c085a34286b46d622a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3e960731043e1de34786c085a34286b46d622a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c3e960731043e1de34786c085a34286b46d622a2", "patch": "@@ -1,3 +1,20 @@\n+2014-01-30  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_expand_vector_init): Remove\n+\tunused variable \"field\".\n+\t* config/rs6000/vsx.md (vsx_mergel_<mode>): Add missing DONE.\n+\t(vsx_mergeh_<mode>): Likewise.\n+\t* config/rs6000/altivec.md (altivec_vmrghb): Likewise.\n+\t(altivec_vmrghh): Likewise.\n+\t(altivec_vmrghw): Likewise.\n+\t(altivec_vmrglb): Likewise.\n+\t(altivec_vmrglh): Likewise.\n+\t(altivec_vmrglw): Likewise.\n+\t(altivec_vspltb): Add missing uses.\n+\t(altivec_vsplth): Likewise.\n+\t(altivec_vspltw): Likewise.\n+\t(altivec_vspltsf): Likewise.\n+\n 2014-01-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/59923"}, {"sha": "7e92d06888f42bb47e90a5030c4b06f6817765c3", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3e960731043e1de34786c085a34286b46d622a2/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3e960731043e1de34786c085a34286b46d622a2/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=c3e960731043e1de34786c085a34286b46d622a2", "patch": "@@ -871,6 +871,7 @@\n \n   x = gen_rtx_VEC_SELECT (V16QImode, x, gen_rtx_PARALLEL (VOIDmode, v));\n   emit_insn (gen_rtx_SET (VOIDmode, operands[0], x));\n+  DONE;\n })\n \n (define_insn \"*altivec_vmrghb_internal\"\n@@ -930,6 +931,7 @@\n \n   x = gen_rtx_VEC_SELECT (V8HImode, x, gen_rtx_PARALLEL (VOIDmode, v));\n   emit_insn (gen_rtx_SET (VOIDmode, operands[0], x));\n+  DONE;\n })\n \n (define_insn \"*altivec_vmrghh_internal\"\n@@ -983,6 +985,7 @@\n \n   x = gen_rtx_VEC_SELECT (V4SImode, x, gen_rtx_PARALLEL (VOIDmode, v));\n   emit_insn (gen_rtx_SET (VOIDmode, operands[0], x));\n+  DONE;\n })\n \n (define_insn \"*altivec_vmrghw_internal\"\n@@ -1057,6 +1060,7 @@\n \n   x = gen_rtx_VEC_SELECT (V16QImode, x, gen_rtx_PARALLEL (VOIDmode, v));\n   emit_insn (gen_rtx_SET (VOIDmode, operands[0], x));\n+  DONE;\n })\n \n (define_insn \"*altivec_vmrglb_internal\"\n@@ -1116,6 +1120,7 @@\n \n   x = gen_rtx_VEC_SELECT (V8HImode, x, gen_rtx_PARALLEL (VOIDmode, v));\n   emit_insn (gen_rtx_SET (VOIDmode, operands[0], x));\n+  DONE;\n })\n \n (define_insn \"*altivec_vmrglh_internal\"\n@@ -1169,6 +1174,7 @@\n \n   x = gen_rtx_VEC_SELECT (V4SImode, x, gen_rtx_PARALLEL (VOIDmode, v));\n   emit_insn (gen_rtx_SET (VOIDmode, operands[0], x));\n+  DONE;\n })\n \n (define_insn \"*altivec_vmrglw_internal\"\n@@ -1601,9 +1607,9 @@\n   [(set_attr \"type\" \"veccomplex\")])\n \n (define_expand \"altivec_vspltb\"\n-  [(match_operand:V16QI 0 \"register_operand\" \"\")\n-   (match_operand:V16QI 1 \"register_operand\" \"\")\n-   (match_operand:QI 2 \"u5bit_cint_operand\" \"\")]\n+  [(use (match_operand:V16QI 0 \"register_operand\" \"\"))\n+   (use (match_operand:V16QI 1 \"register_operand\" \"\"))\n+   (use (match_operand:QI 2 \"u5bit_cint_operand\" \"\"))]\n   \"TARGET_ALTIVEC\"\n {\n   rtvec v;\n@@ -1649,9 +1655,9 @@\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_expand \"altivec_vsplth\"\n-  [(match_operand:V8HI 0 \"register_operand\" \"\")\n-   (match_operand:V8HI 1 \"register_operand\" \"\")\n-   (match_operand:QI 2 \"u5bit_cint_operand\" \"\")]\n+  [(use (match_operand:V8HI 0 \"register_operand\" \"\"))\n+   (use (match_operand:V8HI 1 \"register_operand\" \"\"))\n+   (use (match_operand:QI 2 \"u5bit_cint_operand\" \"\"))]\n   \"TARGET_ALTIVEC\"\n {\n   rtvec v;\n@@ -1697,9 +1703,9 @@\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_expand \"altivec_vspltw\"\n-  [(match_operand:V4SI 0 \"register_operand\" \"\")\n-   (match_operand:V4SI 1 \"register_operand\" \"\")\n-   (match_operand:QI 2 \"u5bit_cint_operand\" \"\")]\n+  [(use (match_operand:V4SI 0 \"register_operand\" \"\"))\n+   (use (match_operand:V4SI 1 \"register_operand\" \"\"))\n+   (use (match_operand:QI 2 \"u5bit_cint_operand\" \"\"))]\n   \"TARGET_ALTIVEC\"\n {\n   rtvec v;\n@@ -1745,9 +1751,9 @@\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_expand \"altivec_vspltsf\"\n-  [(match_operand:V4SF 0 \"register_operand\" \"\")\n-   (match_operand:V4SF 1 \"register_operand\" \"\")\n-   (match_operand:QI 2 \"u5bit_cint_operand\" \"\")]\n+  [(use (match_operand:V4SF 0 \"register_operand\" \"\"))\n+   (use (match_operand:V4SF 1 \"register_operand\" \"\"))\n+   (use (match_operand:QI 2 \"u5bit_cint_operand\" \"\"))]\n   \"TARGET_ALTIVEC\"\n {\n   rtvec v;"}, {"sha": "0bd92d4352234b909d7647f1777990624e2d0d41", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3e960731043e1de34786c085a34286b46d622a2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3e960731043e1de34786c085a34286b46d622a2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=c3e960731043e1de34786c085a34286b46d622a2", "patch": "@@ -5511,7 +5511,6 @@ rs6000_expand_vector_init (rtx target, rtx vals)\n      of 64-bit items is not supported on Altivec.  */\n   if (all_same && GET_MODE_SIZE (inner_mode) <= 4)\n     {\n-      rtx field;\n       mem = assign_stack_temp (mode, GET_MODE_SIZE (inner_mode));\n       emit_move_insn (adjust_address_nv (mem, inner_mode, 0),\n \t\t      XVECEXP (vals, 0, 0));"}, {"sha": "d0fc8cb7c9b8a660cde38f7c2b2f366a9755dd6b", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3e960731043e1de34786c085a34286b46d622a2/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3e960731043e1de34786c085a34286b46d622a2/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=c3e960731043e1de34786c085a34286b46d622a2", "patch": "@@ -1701,6 +1701,7 @@\n \n   x = gen_rtx_VEC_SELECT (<MODE>mode, x, gen_rtx_PARALLEL (VOIDmode, v));\n   emit_insn (gen_rtx_SET (VOIDmode, operands[0], x));\n+  DONE;\n })\n \n (define_expand \"vsx_mergeh_<mode>\"\n@@ -1726,6 +1727,7 @@\n \n   x = gen_rtx_VEC_SELECT (<MODE>mode, x, gen_rtx_PARALLEL (VOIDmode, v));\n   emit_insn (gen_rtx_SET (VOIDmode, operands[0], x));\n+  DONE;\n })\n \n ;; V2DF/V2DI splat"}]}