{"sha": "78aa76df40b581bbc79a8ada55e437845b88d764", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhhYTc2ZGY0MGI1ODFiYmM3OWE4YWRhNTVlNDM3ODQ1Yjg4ZDc2NA==", "commit": {"author": {"name": "Xi Ruoyao", "email": "ryxi@stu.xidian.edu.cn", "date": "2017-05-23T16:11:57Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-05-23T16:11:57Z"}, "message": "PR libstdc++/67578 Implement non-trivial std::random_device::entropy\n\n2017-05-23  Xi Ruoyao  <ryxi@stu.xidian.edu.cn>\n\t    Jonathan Wakely  <jwakely@redhat.com>\n\n\tPR libstdc++/67578\n\t* acinclude.m4: Bump libtool_VERSION.\n\t* config/abi/pre/gnu.ver: Create GLIBCXX_3.4.24 with new symbol.\n\t* config.h.in: Regenerate.\n\t* configure: Regenerate.\n\t* configure.ac: Add test for <linux/random.h>.\n\t* doc/xml/manual/abi.xml: Document new library version.\n\t* include/bits/random.h (random_device::entropy)\n\t[_GLIBCXX_USE_RANDOM_TR1]: Add call to new _M_getentropy member.\n\t(random_device::_M_getentropy): Declare.\n\t* src/c++11/random.cc (random_device::_M_getentropy): Define.\n\t* testsuite/util/testsuite_abi.cc: Add GLIBCXX_3.4.24 to known\n\tversions, and make it the latest version.\n\nCo-Authored-By: Jonathan Wakely <jwakely@redhat.com>\n\nFrom-SVN: r248374", "tree": {"sha": "1fafd31d92df7bef501ad28913440b5d993a740b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fafd31d92df7bef501ad28913440b5d993a740b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78aa76df40b581bbc79a8ada55e437845b88d764", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78aa76df40b581bbc79a8ada55e437845b88d764", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78aa76df40b581bbc79a8ada55e437845b88d764", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78aa76df40b581bbc79a8ada55e437845b88d764/comments", "author": {"login": "xry111", "id": 8733039, "node_id": "MDQ6VXNlcjg3MzMwMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8733039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xry111", "html_url": "https://github.com/xry111", "followers_url": "https://api.github.com/users/xry111/followers", "following_url": "https://api.github.com/users/xry111/following{/other_user}", "gists_url": "https://api.github.com/users/xry111/gists{/gist_id}", "starred_url": "https://api.github.com/users/xry111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xry111/subscriptions", "organizations_url": "https://api.github.com/users/xry111/orgs", "repos_url": "https://api.github.com/users/xry111/repos", "events_url": "https://api.github.com/users/xry111/events{/privacy}", "received_events_url": "https://api.github.com/users/xry111/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4ea7a4cfe438d0bdbede4b714aba50df01a4a76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4ea7a4cfe438d0bdbede4b714aba50df01a4a76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4ea7a4cfe438d0bdbede4b714aba50df01a4a76"}], "stats": {"total": 84, "additions": 78, "deletions": 6}, "files": [{"sha": "536e710f1effa8dd02ac6421d8acfc5111c9b994", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78aa76df40b581bbc79a8ada55e437845b88d764/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78aa76df40b581bbc79a8ada55e437845b88d764/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=78aa76df40b581bbc79a8ada55e437845b88d764", "patch": "@@ -1,3 +1,20 @@\n+2017-05-23  Xi Ruoyao  <ryxi@stu.xidian.edu.cn>\n+\t    Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/67578\n+\t* acinclude.m4: Bump libtool_VERSION.\n+\t* config/abi/pre/gnu.ver: Create GLIBCXX_3.4.24 with new symbol.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* configure.ac: Add test for <linux/random.h>.\n+\t* doc/xml/manual/abi.xml: Document new library version.\n+\t* include/bits/random.h (random_device::entropy)\n+\t[_GLIBCXX_USE_RANDOM_TR1]: Add call to new _M_getentropy member.\n+\t(random_device::_M_getentropy): Declare.\n+\t* src/c++11/random.cc (random_device::_M_getentropy): Define.\n+\t* testsuite/util/testsuite_abi.cc: Add GLIBCXX_3.4.24 to known\n+\tversions, and make it the latest version.\n+\n 2017-05-23  Xi Ruoyao  <ryxi@stu.xidian.edu.cn>\n \n \tPR libstdc++/67214"}, {"sha": "baeea67c459fb59b9fbedf60d29fb3e090c9ec60", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78aa76df40b581bbc79a8ada55e437845b88d764/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78aa76df40b581bbc79a8ada55e437845b88d764/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=78aa76df40b581bbc79a8ada55e437845b88d764", "patch": "@@ -3750,7 +3750,7 @@ changequote([,])dnl\n fi\n \n # For libtool versioning info, format is CURRENT:REVISION:AGE\n-libtool_VERSION=6:23:0\n+libtool_VERSION=6:24:0\n \n # Everything parsed; figure out what files and settings to use.\n case $enable_symvers in"}, {"sha": "e31e054c0244be2eb44f810838ed7615de62e572", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78aa76df40b581bbc79a8ada55e437845b88d764/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78aa76df40b581bbc79a8ada55e437845b88d764/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=78aa76df40b581bbc79a8ada55e437845b88d764", "patch": "@@ -267,6 +267,9 @@\n /* Define if futex syscall is available. */\n #undef HAVE_LINUX_FUTEX\n \n+/* Define to 1 if you have the <linux/random.h> header file. */\n+#undef HAVE_LINUX_RANDOM_H\n+\n /* Define to 1 if you have the <locale.h> header file. */\n #undef HAVE_LOCALE_H\n "}, {"sha": "48e2ec870fc3106cefe517a9982116c8272acff5", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78aa76df40b581bbc79a8ada55e437845b88d764/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78aa76df40b581bbc79a8ada55e437845b88d764/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=78aa76df40b581bbc79a8ada55e437845b88d764", "patch": "@@ -1967,6 +1967,13 @@ GLIBCXX_3.4.23 {\n \n } GLIBCXX_3.4.22;\n \n+GLIBCXX_3.4.24 {\n+\n+    # std::random_device::_M_getentropy() const\n+    _ZNKSt13random_device13_M_getentropyEv;\n+\n+} GLIBCXX_3.4.23;\n+\n # Symbols in the support library (libsupc++) have their own tag.\n CXXABI_1.3 {\n "}, {"sha": "282b4617db8331aab2c867f5f150103cff041647", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78aa76df40b581bbc79a8ada55e437845b88d764/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78aa76df40b581bbc79a8ada55e437845b88d764/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=78aa76df40b581bbc79a8ada55e437845b88d764", "patch": "@@ -21795,7 +21795,7 @@ for ac_header in endian.h execinfo.h float.h fp.h ieeefp.h inttypes.h \\\n locale.h machine/endian.h machine/param.h nan.h stdint.h stdlib.h string.h \\\n strings.h sys/ipc.h sys/isa_defs.h sys/machine.h sys/param.h \\\n sys/resource.h sys/sem.h sys/stat.h sys/time.h sys/types.h unistd.h \\\n-wchar.h wctype.h\n+wchar.h wctype.h linux/random.h\n do :\n   as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n ac_fn_c_check_header_mongrel \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\"\n@@ -79268,7 +79268,7 @@ $as_echo \"$as_me: WARNING: === Symbol versioning will be disabled.\" >&2;}\n fi\n \n # For libtool versioning info, format is CURRENT:REVISION:AGE\n-libtool_VERSION=6:23:0\n+libtool_VERSION=6:24:0\n \n # Everything parsed; figure out what files and settings to use.\n case $enable_symvers in"}, {"sha": "270dcbaf7234c9b3da2cafa9599f19f570f5205a", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78aa76df40b581bbc79a8ada55e437845b88d764/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78aa76df40b581bbc79a8ada55e437845b88d764/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=78aa76df40b581bbc79a8ada55e437845b88d764", "patch": "@@ -237,7 +237,7 @@ AC_CHECK_HEADERS([endian.h execinfo.h float.h fp.h ieeefp.h inttypes.h \\\n locale.h machine/endian.h machine/param.h nan.h stdint.h stdlib.h string.h \\\n strings.h sys/ipc.h sys/isa_defs.h sys/machine.h sys/param.h \\\n sys/resource.h sys/sem.h sys/stat.h sys/time.h sys/types.h unistd.h \\\n-wchar.h wctype.h])\n+wchar.h wctype.h linux/random.h])\n \n # Only do link tests if native. Else, hardcode.\n if $GLIBCXX_IS_NATIVE; then"}, {"sha": "d17f06e25fb3f97887857dfaa99465694b1f6a83", "filename": "libstdc++-v3/doc/xml/manual/abi.xml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78aa76df40b581bbc79a8ada55e437845b88d764/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fabi.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78aa76df40b581bbc79a8ada55e437845b88d764/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fabi.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fabi.xml?ref=78aa76df40b581bbc79a8ada55e437845b88d764", "patch": "@@ -266,6 +266,7 @@ compatible.\n     <listitem><para>GCC 5.1.0: libstdc++.so.6.0.21</para></listitem>\n     <listitem><para>GCC 6.1.0: libstdc++.so.6.0.22</para></listitem>\n     <listitem><para>GCC 7.1.0: libstdc++.so.6.0.23</para></listitem>\n+    <listitem><para>GCC 8.0.0: libstdc++.so.6.0.24</para></listitem>\n     </itemizedlist>\n     <para>\n       Note 1: Error should be libstdc++.so.3.0.3.\n@@ -334,6 +335,7 @@ compatible.\n     <listitem><para>GCC 5.1.0: GLIBCXX_3.4.21, CXXABI_1.3.9</para></listitem>\n     <listitem><para>GCC 6.1.0: GLIBCXX_3.4.22, CXXABI_1.3.10</para></listitem>\n     <listitem><para>GCC 7.1.0: GLIBCXX_3.4.23, CXXABI_1.3.11</para></listitem>\n+    <listitem><para>GCC 8.0.0: GLIBCXX_3.4.24, CXXABI_1.3.11</para></listitem>\n     </itemizedlist>\n     </listitem>\n "}, {"sha": "bb761ec8fb0615f1c67bf2d7ffd7349f4347de7c", "filename": "libstdc++-v3/include/bits/random.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78aa76df40b581bbc79a8ada55e437845b88d764/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78aa76df40b581bbc79a8ada55e437845b88d764/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h?ref=78aa76df40b581bbc79a8ada55e437845b88d764", "patch": "@@ -1603,7 +1603,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     double\n     entropy() const noexcept\n-    { return 0.0; }\n+    {\n+#ifdef _GLIBCXX_USE_RANDOM_TR1\n+      return this->_M_getentropy();\n+#else\n+      return 0.0;\n+#endif\n+    }\n \n     result_type\n     operator()()\n@@ -1627,6 +1633,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     result_type _M_getval();\n     result_type _M_getval_pretr1();\n+    double _M_getentropy() const noexcept;\n \n     union\n     {"}, {"sha": "5011cf2bb6b720df4f41c748cb80ca87d974eb19", "filename": "libstdc++-v3/src/c++11/random.cc", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78aa76df40b581bbc79a8ada55e437845b88d764/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Frandom.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78aa76df40b581bbc79a8ada55e437845b88d764/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Frandom.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Frandom.cc?ref=78aa76df40b581bbc79a8ada55e437845b88d764", "patch": "@@ -38,6 +38,14 @@\n # include <unistd.h>\n #endif\n \n+#ifdef _GLIBCXX_HAVE_SYS_IOCTL_H\n+# include <sys/ioctl.h>\n+#endif\n+\n+#ifdef _GLIBCXX_HAVE_LINUX_RANDOM_H\n+# include <linux/random.h>\n+#endif\n+\n namespace std _GLIBCXX_VISIBILITY(default)\n {\n   namespace\n@@ -161,6 +169,33 @@ namespace std _GLIBCXX_VISIBILITY(default)\n     return _M_mt();\n   }\n \n+  double\n+  random_device::_M_getentropy() const noexcept\n+  {\n+#if defined _GLIBCXX_HAVE_SYS_IOCTL_H && defined RNDGETENTCNT\n+    if (!_M_file)\n+      return 0.0;\n+\n+    const int fd = fileno(static_cast<FILE*>(_M_file));\n+    if (fd < 0)\n+      return 0.0;\n+\n+    int ent;\n+    if (ioctl(fd, RNDGETENTCNT, &ent) < 0)\n+      return 0.0;\n+\n+    if (ent < 0)\n+      return 0.0;\n+\n+    if (static_cast<unsigned>(ent) > sizeof(result_type) * 8)\n+      return static_cast<double>(sizeof(result_type) * 8);\n+\n+    return static_cast<double>(ent);\n+#else\n+    return 0.0;\n+#endif\n+  }\n+\n   template class mersenne_twister_engine<\n     uint_fast32_t,\n     32, 624, 397, 31,"}, {"sha": "ee7572ea2444d70c15b528f95dd42f0b1723adcb", "filename": "libstdc++-v3/testsuite/util/testsuite_abi.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78aa76df40b581bbc79a8ada55e437845b88d764/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_abi.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78aa76df40b581bbc79a8ada55e437845b88d764/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_abi.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_abi.cc?ref=78aa76df40b581bbc79a8ada55e437845b88d764", "patch": "@@ -204,6 +204,7 @@ check_version(symbol& test, bool added)\n       known_versions.push_back(\"GLIBCXX_LDBL_3.4.21\");\n       known_versions.push_back(\"GLIBCXX_3.4.22\");\n       known_versions.push_back(\"GLIBCXX_3.4.23\");\n+      known_versions.push_back(\"GLIBCXX_3.4.24\");\n       known_versions.push_back(\"CXXABI_1.3\");\n       known_versions.push_back(\"CXXABI_LDBL_1.3\");\n       known_versions.push_back(\"CXXABI_1.3.1\");\n@@ -234,7 +235,7 @@ check_version(symbol& test, bool added)\n \ttest.version_status = symbol::incompatible;\n \n       // Check that added symbols are added in the latest pre-release version.\n-      bool latestp = (test.version_name == \"GLIBCXX_3.4.23\"\n+      bool latestp = (test.version_name == \"GLIBCXX_3.4.24\"\n \t\t     || test.version_name == \"CXXABI_1.3.11\"\n \t\t     || test.version_name == \"CXXABI_FLOAT128\"\n \t\t     || test.version_name == \"CXXABI_TM_1\");"}]}