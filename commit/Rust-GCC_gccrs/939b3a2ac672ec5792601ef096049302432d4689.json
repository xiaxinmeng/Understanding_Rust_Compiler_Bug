{"sha": "939b3a2ac672ec5792601ef096049302432d4689", "node_id": "C_kwDOANBUbNoAKDkzOWIzYTJhYzY3MmVjNTc5MjYwMWVmMDk2MDQ5MzAyNDMyZDQ2ODk", "commit": {"author": {"name": "Etienne Servais", "email": "servais@adacore.com", "date": "2021-09-30T12:27:34Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-11T13:38:11Z"}, "message": "[Ada] Reorder subprogram spec and bodies in alphabetical order\n\ngcc/ada/\n\n\t* sem_ch4.adb (Analyze_Membership_Op): Reorder subprogram spec\n\tand bodies in alphabetical order.", "tree": {"sha": "ba8ac61a82353f76b9daf1623b2c6bbd04fc89b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba8ac61a82353f76b9daf1623b2c6bbd04fc89b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/939b3a2ac672ec5792601ef096049302432d4689", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/939b3a2ac672ec5792601ef096049302432d4689", "html_url": "https://github.com/Rust-GCC/gccrs/commit/939b3a2ac672ec5792601ef096049302432d4689", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/939b3a2ac672ec5792601ef096049302432d4689/comments", "author": {"login": "vser1", "id": 8308457, "node_id": "MDQ6VXNlcjgzMDg0NTc=", "avatar_url": "https://avatars.githubusercontent.com/u/8308457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vser1", "html_url": "https://github.com/vser1", "followers_url": "https://api.github.com/users/vser1/followers", "following_url": "https://api.github.com/users/vser1/following{/other_user}", "gists_url": "https://api.github.com/users/vser1/gists{/gist_id}", "starred_url": "https://api.github.com/users/vser1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vser1/subscriptions", "organizations_url": "https://api.github.com/users/vser1/orgs", "repos_url": "https://api.github.com/users/vser1/repos", "events_url": "https://api.github.com/users/vser1/events{/privacy}", "received_events_url": "https://api.github.com/users/vser1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0926f7901431a1f145c83db284b94d75b926fe0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0926f7901431a1f145c83db284b94d75b926fe0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0926f7901431a1f145c83db284b94d75b926fe0"}], "stats": {"total": 70, "additions": 35, "deletions": 35}, "files": [{"sha": "bf13fb21bd82735769ae4e85b4c4653e8a363d07", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 35, "deletions": 35, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/939b3a2ac672ec5792601ef096049302432d4689/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/939b3a2ac672ec5792601ef096049302432d4689/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=939b3a2ac672ec5792601ef096049302432d4689", "patch": "@@ -2956,47 +2956,16 @@ package body Sem_Ch4 is\n       I_F   : Interp_Index;\n       T_F   : Entity_Id;\n \n+      procedure Analyze_Set_Membership;\n+      --  If a set of alternatives is present, analyze each and find the\n+      --  common type to which they must all resolve.\n+\n       procedure Try_One_Interp (T1 : Entity_Id);\n       --  Routine to try one proposed interpretation. Note that the context\n       --  of the operation plays no role in resolving the arguments, so that\n       --  if there is more than one interpretation of the operands that is\n       --  compatible with a membership test, the operation is ambiguous.\n \n-      --------------------\n-      -- Try_One_Interp --\n-      --------------------\n-\n-      procedure Try_One_Interp (T1 : Entity_Id) is\n-      begin\n-         if Has_Compatible_Type (R, T1) then\n-            if Found\n-              and then Base_Type (T1) /= Base_Type (T_F)\n-            then\n-               It := Disambiguate (L, I_F, Index, Any_Type);\n-\n-               if It = No_Interp then\n-                  Ambiguous_Operands (N);\n-                  Set_Etype (L, Any_Type);\n-                  return;\n-\n-               else\n-                  T_F := It.Typ;\n-               end if;\n-\n-            else\n-               Found := True;\n-               T_F   := T1;\n-               I_F   := Index;\n-            end if;\n-\n-            Set_Etype (L, T_F);\n-         end if;\n-      end Try_One_Interp;\n-\n-      procedure Analyze_Set_Membership;\n-      --  If a set of alternatives is present, analyze each and find the\n-      --  common type to which they must all resolve.\n-\n       ----------------------------\n       -- Analyze_Set_Membership --\n       ----------------------------\n@@ -3095,6 +3064,37 @@ package body Sem_Ch4 is\n          end if;\n       end Analyze_Set_Membership;\n \n+      --------------------\n+      -- Try_One_Interp --\n+      --------------------\n+\n+      procedure Try_One_Interp (T1 : Entity_Id) is\n+      begin\n+         if Has_Compatible_Type (R, T1) then\n+            if Found\n+              and then Base_Type (T1) /= Base_Type (T_F)\n+            then\n+               It := Disambiguate (L, I_F, Index, Any_Type);\n+\n+               if It = No_Interp then\n+                  Ambiguous_Operands (N);\n+                  Set_Etype (L, Any_Type);\n+                  return;\n+\n+               else\n+                  T_F := It.Typ;\n+               end if;\n+\n+            else\n+               Found := True;\n+               T_F   := T1;\n+               I_F   := Index;\n+            end if;\n+\n+            Set_Etype (L, T_F);\n+         end if;\n+      end Try_One_Interp;\n+\n       Op : Node_Id;\n \n    --  Start of processing for Analyze_Membership_Op"}]}