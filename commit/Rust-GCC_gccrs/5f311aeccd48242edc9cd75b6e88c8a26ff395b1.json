{"sha": "5f311aeccd48242edc9cd75b6e88c8a26ff395b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYzMTFhZWNjZDQ4MjQyZWRjOWNkNzViNmU4OGM4YTI2ZmYzOTViMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-02-27T02:42:03Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-02-27T02:42:03Z"}, "message": "comment\n\nFrom-SVN: r18282", "tree": {"sha": "04a6f59bd8f1ee0f8ddd77b411212121a1d93d66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04a6f59bd8f1ee0f8ddd77b411212121a1d93d66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f311aeccd48242edc9cd75b6e88c8a26ff395b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f311aeccd48242edc9cd75b6e88c8a26ff395b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f311aeccd48242edc9cd75b6e88c8a26ff395b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f311aeccd48242edc9cd75b6e88c8a26ff395b1/comments", "author": null, "committer": null, "parents": [{"sha": "bd762873cd42996a919c89cb7c5150dc0edd4ca0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd762873cd42996a919c89cb7c5150dc0edd4ca0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd762873cd42996a919c89cb7c5150dc0edd4ca0"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "ee68dfc1b483b053138b9e825bbf4dee2e61b52e", "filename": "gcc/cp/init.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f311aeccd48242edc9cd75b6e88c8a26ff395b1/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f311aeccd48242edc9cd75b6e88c8a26ff395b1/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=5f311aeccd48242edc9cd75b6e88c8a26ff395b1", "patch": "@@ -1836,6 +1836,7 @@ build_offset_ref (type, name)\n   tree basebinfo = NULL_TREE;\n   int dtor = 0;\n \n+  /* class templates can come in as TEMPLATE_DECLs here.  */\n   if (TREE_CODE (name) != IDENTIFIER_NODE)\n     return name;\n "}, {"sha": "fe66bf43b47cf9b05c8d8601c351c4753d11ee9c", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f311aeccd48242edc9cd75b6e88c8a26ff395b1/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f311aeccd48242edc9cd75b6e88c8a26ff395b1/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=5f311aeccd48242edc9cd75b6e88c8a26ff395b1", "patch": "@@ -107,6 +107,7 @@ finish_member_template_decl (template_parameters, decl)\n     return NULL_TREE;\n   else if (TREE_CODE (decl) == TREE_LIST)\n     {\n+      /* Assume that the class is the only declspec.  */\n       decl = TREE_VALUE (decl);\n       if (IS_AGGR_TYPE (decl) && CLASSTYPE_TEMPLATE_INFO (decl))\n \t{\n@@ -2958,6 +2959,7 @@ instantiate_class_template (type)\n \ttemplate = DECL_TI_TEMPLATE (template);\n     }\n \n+  /* FIXME deal with partial specializations of member templates.  */\n   t = most_specialized_class\n     (DECL_TEMPLATE_SPECIALIZATIONS (template), args);\n \n@@ -3615,6 +3617,7 @@ tsubst (t, args, in_decl)\n \tif (PRIMARY_TEMPLATE_P (t))\n \t  TREE_TYPE (DECL_INNERMOST_TEMPLATE_PARMS (tmpl)) = tmpl;\n \n+\t/* FIXME deal with partial specializations.  */\n \tif (TREE_CODE (decl) == TYPE_DECL)\n \t  return tmpl;\n "}]}