{"sha": "bb343a6c9b448d036a02a3eaeb475f76f1871577", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIzNDNhNmM5YjQ0OGQwMzZhMDJhM2VhZWI0NzVmNzZmMTg3MTU3Nw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2007-11-15T15:12:03Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-11-15T15:12:03Z"}, "message": "re PR fortran/33917 (Rejects valid PROCEDURE declarations)\n\n2007-11-15  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/33917\n        * decl.c (match_procedure_decl): Pre-resolve interface.\n        * resolve.c (resolve_symbol): Reject interfaces later\n        declared in procedure statements.\n\n2007-11-15  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/33917\n        * gfortran.dg/proc_decl_11.f90: New.\n\nFrom-SVN: r130202", "tree": {"sha": "87b38110bd972bf830aae9bed26b88a27b52c998", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87b38110bd972bf830aae9bed26b88a27b52c998"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb343a6c9b448d036a02a3eaeb475f76f1871577", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb343a6c9b448d036a02a3eaeb475f76f1871577", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb343a6c9b448d036a02a3eaeb475f76f1871577", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb343a6c9b448d036a02a3eaeb475f76f1871577/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ea6684648c9c2bf8d3e2e656a3dd1726768a87e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea6684648c9c2bf8d3e2e656a3dd1726768a87e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea6684648c9c2bf8d3e2e656a3dd1726768a87e8"}], "stats": {"total": 58, "additions": 56, "deletions": 2}, "files": [{"sha": "5411776c66854e9746d3d1467863bf33093a499c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb343a6c9b448d036a02a3eaeb475f76f1871577/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb343a6c9b448d036a02a3eaeb475f76f1871577/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=bb343a6c9b448d036a02a3eaeb475f76f1871577", "patch": "@@ -1,3 +1,10 @@\n+2007-11-15  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/33917\n+\t* decl.c (match_procedure_decl): Pre-resolve interface.\n+\t* resolve.c (resolve_symbol): Reject interfaces later\n+\tdeclared in procedure statements.\n+\n 2007-11-13  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/33162"}, {"sha": "be197bc9d264c4dab2bdac4001e507cd70fdc24d", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb343a6c9b448d036a02a3eaeb475f76f1871577/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb343a6c9b448d036a02a3eaeb475f76f1871577/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=bb343a6c9b448d036a02a3eaeb475f76f1871577", "patch": "@@ -3946,6 +3946,12 @@ match_procedure_decl (void)\n   /* Various interface checks.  */\n   if (proc_if)\n     {\n+      /* Resolve interface if possible. That way, attr.procedure is only set\n+\t if it is declared by a later procedure-declaration-stmt, which is\n+\t invalid per C1212.  */\n+      while (proc_if->interface)\n+\tproc_if = proc_if->interface;\n+\n       if (proc_if->generic)\n \t{\n \t  gfc_error (\"Interface '%s' at %C may not be generic\", proc_if->name);"}, {"sha": "586d601985f27fac674c7cdd696856a2e1c1c44a", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb343a6c9b448d036a02a3eaeb475f76f1871577/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb343a6c9b448d036a02a3eaeb475f76f1871577/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=bb343a6c9b448d036a02a3eaeb475f76f1871577", "patch": "@@ -7615,8 +7615,10 @@ resolve_symbol (gfc_symbol *sym)\n   if (sym->attr.procedure && sym->interface\n       && sym->attr.if_source != IFSRC_DECL)\n     {\n-      while (sym->interface->interface)\n-\tsym->interface = sym->interface->interface;\n+      if (sym->interface->attr.procedure)\n+\tgfc_error (\"Interface '%s', used by procedure '%s' at %L, is declared \"\n+\t\t   \"in a later PROCEDURE statement\", sym->interface->name,\n+\t\t   sym->name,&sym->declared_at);\n \n       /* Get the attributes from the interface (now resolved).  */\n       if (sym->interface->attr.if_source || sym->interface->attr.intrinsic)"}, {"sha": "b3e26c0dbd0c0fc443a6535eb549e13d93a7ef69", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb343a6c9b448d036a02a3eaeb475f76f1871577/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb343a6c9b448d036a02a3eaeb475f76f1871577/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bb343a6c9b448d036a02a3eaeb475f76f1871577", "patch": "@@ -1,3 +1,8 @@\n+2007-11-15  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/33917\n+\t* gfortran.dg/proc_decl_11.f90: New.\n+\n 2007-11-15  Ben Elliston  <bje@au.ibm.com>\n \n \t* gcc.target/spu/compare-dp.c: New test."}, {"sha": "74c0680692ae296ef211bce7b7d6150cc337097b", "filename": "gcc/testsuite/gfortran.dg/proc_decl_11.f90", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb343a6c9b448d036a02a3eaeb475f76f1871577/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_decl_11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb343a6c9b448d036a02a3eaeb475f76f1871577/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_decl_11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_decl_11.f90?ref=bb343a6c9b448d036a02a3eaeb475f76f1871577", "patch": "@@ -0,0 +1,34 @@\n+! { dg-do compile }\n+! PR fortran/33917\n+!\n+! Depending, in which order the symbol tree\n+! was walked in resolve, gfortran resolved\n+! p6 before p4; thus there was no explicit\n+! interface available for p4 and an error\n+! was printed. (This is a variant of proc_decl_2.f90)\n+!\n+! Additionally, the following contrain was not honoured:\n+! \"C1212 (R1215) [...] If name is declared by a procedure-declaration-stmt\n+! it shall be previously declared.\" (\"name\" = interface-name)\n+!\n+program s\n+  implicit none\n+  procedure() :: q2\n+  procedure() :: q3\n+  procedure() :: q5\n+  procedure(sub) :: p4\n+  procedure(p4) :: p6\n+contains\n+  subroutine sub\n+  end subroutine\n+end program s\n+\n+subroutine test\n+  implicit none\n+  abstract interface\n+    subroutine sub()\n+    end subroutine sub\n+  end interface\n+  procedure(p4) :: p6 ! { dg-error \"declared in a later PROCEDURE statement\" }\n+  procedure(sub) :: p4\n+end subroutine test"}]}