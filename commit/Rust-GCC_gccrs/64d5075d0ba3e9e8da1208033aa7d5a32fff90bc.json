{"sha": "64d5075d0ba3e9e8da1208033aa7d5a32fff90bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRkNTA3NWQwYmEzZTllOGRhMTIwODAzM2FhN2Q1YTMyZmZmOTBiYw==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2005-04-10T10:37:59Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2005-04-10T10:37:59Z"}, "message": "re PR libfortran/20788 (Loading libgfortran.so clobbers C redirection of stdin/stdout/stderr)\n\n\tPR libfortran/20788\n\t* runtime/environ.c (init_unsigned_integer): Function for\n\tenvironment variables we want to be positive.\n\t(init_integer): Function to allow negative environment\n\tvariables (e.g. for GFORTRAN_STDIN_UNIT).\n\nFrom-SVN: r97946", "tree": {"sha": "373a5bce8f5033bab314b344e1726a3f26fd6a88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/373a5bce8f5033bab314b344e1726a3f26fd6a88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64d5075d0ba3e9e8da1208033aa7d5a32fff90bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64d5075d0ba3e9e8da1208033aa7d5a32fff90bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64d5075d0ba3e9e8da1208033aa7d5a32fff90bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64d5075d0ba3e9e8da1208033aa7d5a32fff90bc/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb232f4ef11305a4c2ce9ae0cc7975eafd942153", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb232f4ef11305a4c2ce9ae0cc7975eafd942153", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb232f4ef11305a4c2ce9ae0cc7975eafd942153"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "ca2120d26f5454911b1a7f339828b5236cbbee6e", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64d5075d0ba3e9e8da1208033aa7d5a32fff90bc/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64d5075d0ba3e9e8da1208033aa7d5a32fff90bc/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=64d5075d0ba3e9e8da1208033aa7d5a32fff90bc", "patch": "@@ -1,3 +1,11 @@\n+2005-04-10  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/20788\n+\t* runtime/environ.c (init_unsigned_integer): Function for\n+\tenvironment variables we want to be positive.\n+\t(init_integer): Function to allow negative environment\n+\tvariables (e.g. for GFORTRAN_STDIN_UNIT).\n+\t\n 2005-04-10  Thomas Koenig <Thomas.Koenig@online.de>\n \n \tPR libfortran/17992"}, {"sha": "c1a71cf6eef223e8da71d6e8697faec24699d266", "filename": "libgfortran/runtime/environ.c", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64d5075d0ba3e9e8da1208033aa7d5a32fff90bc/libgfortran%2Fruntime%2Fenviron.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64d5075d0ba3e9e8da1208033aa7d5a32fff90bc/libgfortran%2Fruntime%2Fenviron.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fenviron.c?ref=64d5075d0ba3e9e8da1208033aa7d5a32fff90bc", "patch": "@@ -97,13 +97,41 @@ var_source (variable * v)\n }\n \n \n-/* init_integer()-- Initialize an integer environment variable */\n+/* init_integer()-- Initialize an integer environment variable.  */\n \n static void\n init_integer (variable * v)\n {\n   char *p, *q;\n \n+  p = getenv (v->name);\n+  if (p == NULL)\n+    goto set_default;\n+\n+  for (q = p; *q; q++)\n+    if (!isdigit (*q) && (p != q || *q != '-'))\n+      {\n+\tv->bad = 1;\n+\tgoto set_default;\n+      }\n+\n+  *v->var = atoi (p);\n+  return;\n+\n+ set_default:\n+  *v->var = v->value;\n+  return;\n+}\n+\n+\n+/* init_unsigned_integer()-- Initialize an integer environment variable\n+   which has to be positive.  */\n+\n+static void\n+init_unsigned_integer (variable * v)\n+{\n+  char *p, *q;\n+\n   p = getenv (v->name);\n   if (p == NULL)\n     goto set_default;\n@@ -467,7 +495,7 @@ static variable variable_table[] = {\n    \"Print optional plus signs in numbers where permitted.  Default FALSE.\"},\n \n   {\"GFORTRAN_DEFAULT_RECL\", DEFAULT_RECL, &options.default_recl,\n-   init_integer, show_integer,\n+   init_integer, show_unsigned_integer,\n    \"Default maximum record length for sequential files.  Most useful for\\n\"\n    \"adjusting line length of preconnected units.  Default \"\n    stringize (DEFAULT_RECL)},"}]}