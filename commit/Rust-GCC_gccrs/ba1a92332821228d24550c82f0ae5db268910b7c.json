{"sha": "ba1a92332821228d24550c82f0ae5db268910b7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmExYTkyMzMyODIxMjI4ZDI0NTUwYzgyZjBhZTVkYjI2ODkxMGI3Yw==", "commit": {"author": {"name": "Rainer Emrich", "email": "rainer@emrich-ebersheim.de", "date": "2013-02-06T12:01:20Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2013-02-06T12:01:20Z"}, "message": "re PR ada/52123 (gcc bootstrap with ada fails on mingw target)\n\n2013-02-06  Rainer Emrich  <rainer@emrich-ebersheim.de>\n\n\tPR target/52123\n\t* adaint.c (__gnat_check_OWNER_ACL): Cast from pointer via\n\tSECURITY_DESCRIPTOR *\n\t(__gnat_set_OWNER_ACL): Cast from DWORD to ACCESS_MODE\n\t(__gnat_portable_spawn): Fix cast to char* const*\n\t(add_handle): Cast from pointer via void **\n\t(add_handle): Cast from pointer via int *\n\t(__gnat_locate_exec_on_path): Cast from pointer via TCHAR *\n\t(__gnat_locate_exec_on_path): Cast from pointer via char *\n\t* initialize.c (append_arg): Cast from pointer via LPWSTR\n\t(__gnat_initialize): Cast from pointer via LPWSTR\n\t* seh_init.c (__gnat_map_SEH): Cast from pointer via FARPROC\n\nFrom-SVN: r195803", "tree": {"sha": "4baf90c16f328b7ad87739ed4b7c6605ffe44532", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4baf90c16f328b7ad87739ed4b7c6605ffe44532"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba1a92332821228d24550c82f0ae5db268910b7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba1a92332821228d24550c82f0ae5db268910b7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba1a92332821228d24550c82f0ae5db268910b7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba1a92332821228d24550c82f0ae5db268910b7c/comments", "author": {"login": "RainerEmrich", "id": 26002841, "node_id": "MDQ6VXNlcjI2MDAyODQx", "avatar_url": "https://avatars.githubusercontent.com/u/26002841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RainerEmrich", "html_url": "https://github.com/RainerEmrich", "followers_url": "https://api.github.com/users/RainerEmrich/followers", "following_url": "https://api.github.com/users/RainerEmrich/following{/other_user}", "gists_url": "https://api.github.com/users/RainerEmrich/gists{/gist_id}", "starred_url": "https://api.github.com/users/RainerEmrich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RainerEmrich/subscriptions", "organizations_url": "https://api.github.com/users/RainerEmrich/orgs", "repos_url": "https://api.github.com/users/RainerEmrich/repos", "events_url": "https://api.github.com/users/RainerEmrich/events{/privacy}", "received_events_url": "https://api.github.com/users/RainerEmrich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9bc44bff6fbb70abfaae86a9e954dbd750d5cece", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bc44bff6fbb70abfaae86a9e954dbd750d5cece", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bc44bff6fbb70abfaae86a9e954dbd750d5cece"}], "stats": {"total": 37, "additions": 26, "deletions": 11}, "files": [{"sha": "fbacc4fdd6a4a21a650b78eb5414055d33e30f56", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba1a92332821228d24550c82f0ae5db268910b7c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba1a92332821228d24550c82f0ae5db268910b7c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ba1a92332821228d24550c82f0ae5db268910b7c", "patch": "@@ -1,3 +1,18 @@\n+2013-02-06  Rainer Emrich  <rainer@emrich-ebersheim.de>\n+\n+\tPR target/52123\n+\t* adaint.c (__gnat_check_OWNER_ACL): Cast from pointer via\n+\tSECURITY_DESCRIPTOR *\n+\t(__gnat_set_OWNER_ACL): Cast from DWORD to ACCESS_MODE\n+\t(__gnat_portable_spawn): Fix cast to char* const*\n+\t(add_handle): Cast from pointer via void **\n+\t(add_handle): Cast from pointer via int *\n+\t(__gnat_locate_exec_on_path): Cast from pointer via TCHAR *\n+\t(__gnat_locate_exec_on_path): Cast from pointer via char *\n+\t* initialize.c (append_arg): Cast from pointer via LPWSTR\n+\t(__gnat_initialize): Cast from pointer via LPWSTR\n+\t* seh_init.c (__gnat_map_SEH): Cast from pointer via FARPROC\n+\n 2013-02-06  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* gcc-interface/Make-lang.in: Enable System.Stack_Checking.Operations"}, {"sha": "dc94d63d5566ba53875a84f3f5127697db9c22a5", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba1a92332821228d24550c82f0ae5db268910b7c/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba1a92332821228d24550c82f0ae5db268910b7c/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=ba1a92332821228d24550c82f0ae5db268910b7c", "patch": "@@ -1982,7 +1982,7 @@ __gnat_check_OWNER_ACL\n      GROUP_SECURITY_INFORMATION | DACL_SECURITY_INFORMATION,\n      NULL, 0, &nLength);\n \n-  if ((pSD = (PSECURITY_DESCRIPTOR) HeapAlloc\n+  if ((pSD = (SECURITY_DESCRIPTOR *) HeapAlloc\n        (GetProcessHeap (), HEAP_ZERO_MEMORY, nLength)) == NULL)\n     return 0;\n \n@@ -2059,7 +2059,7 @@ __gnat_set_OWNER_ACL\n     return;\n \n   BuildExplicitAccessWithName\n-    (&ea, username, AccessPermissions, AccessMode, NO_INHERITANCE);\n+    (&ea, username, AccessPermissions, (ACCESS_MODE) AccessMode, NO_INHERITANCE);\n \n   if (AccessMode == SET_ACCESS)\n     {\n@@ -2384,7 +2384,7 @@ __gnat_portable_spawn (char *args[])\n   strcat (args[0], args_0);\n   strcat (args[0], \"\\\"\");\n \n-  status = spawnvp (P_WAIT, args_0, (const char* const*)args);\n+  status = spawnvp (P_WAIT, args_0, (char* const*)args);\n \n   /* restore previous value */\n   free (args[0]);\n@@ -2540,9 +2540,9 @@ add_handle (HANDLE h, int pid)\n     {\n       plist_max_length += 1000;\n       HANDLES_LIST =\n-        xrealloc (HANDLES_LIST, sizeof (HANDLE) * plist_max_length);\n+        (void **) xrealloc (HANDLES_LIST, sizeof (HANDLE) * plist_max_length);\n       PID_LIST =\n-        xrealloc (PID_LIST, sizeof (int) * plist_max_length);\n+        (int *) xrealloc (PID_LIST, sizeof (int) * plist_max_length);\n     }\n \n   HANDLES_LIST[plist_length] = h;\n@@ -2931,7 +2931,7 @@ __gnat_locate_exec_on_path (char *exec_name)\n \n   #define EXPAND_BUFFER_SIZE 32767\n \n-  wapath_val = alloca (EXPAND_BUFFER_SIZE);\n+  wapath_val = (TCHAR *) alloca (EXPAND_BUFFER_SIZE);\n \n   wapath_val [0] = '.';\n   wapath_val [1] = ';';\n@@ -2941,7 +2941,7 @@ __gnat_locate_exec_on_path (char *exec_name)\n \n   if (!res) wapath_val [0] = _T('\\0');\n \n-  apath_val = alloca (EXPAND_BUFFER_SIZE);\n+  apath_val = (char *) alloca (EXPAND_BUFFER_SIZE);\n \n   WS2SC (apath_val, wapath_val, EXPAND_BUFFER_SIZE);\n   return __gnat_locate_exec (exec_name, apath_val);"}, {"sha": "00c4d04e13bc4db4473431fc5d4a7c2cec262aa0", "filename": "gcc/ada/initialize.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba1a92332821228d24550c82f0ae5db268910b7c/gcc%2Fada%2Finitialize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba1a92332821228d24550c82f0ae5db268910b7c/gcc%2Fada%2Finitialize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finitialize.c?ref=ba1a92332821228d24550c82f0ae5db268910b7c", "patch": "@@ -88,14 +88,14 @@ append_arg (int *index, LPWSTR dir, LPWSTR value,\n     {\n       /* no dir prefix */\n       dirlen = 0;\n-      fullvalue = xmalloc ((vallen + 1) * sizeof(TCHAR));\n+      fullvalue = (LPWSTR) xmalloc ((vallen + 1) * sizeof(TCHAR));\n     }\n   else\n     {\n       /* Add dir first */\n       dirlen = _tcslen (dir);\n \n-      fullvalue = xmalloc ((dirlen + vallen + 1) * sizeof(TCHAR));\n+      fullvalue = (LPWSTR) xmalloc ((dirlen + vallen + 1) * sizeof(TCHAR));\n       _tcscpy (fullvalue, dir);\n     }\n \n@@ -203,7 +203,7 @@ __gnat_initialize (void *eh ATTRIBUTE_UNUSED)\n \t\t     if (ldir != NULL)\n \t\t       {\n \t\t\t int n = ldir - wargv[k] + 1;\n-\t\t\t dir = xmalloc ((n + 1) * sizeof (TCHAR));\n+\t\t\t dir = (LPWSTR) xmalloc ((n + 1) * sizeof (TCHAR));\n \t\t\t _tcsncpy (dir, wargv[k], n);\n \t\t\t dir[n] = _T('\\0');\n \t\t       }"}, {"sha": "3a2cb516b23a7a2da0e344ec7487994c2f5bb884", "filename": "gcc/ada/seh_init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba1a92332821228d24550c82f0ae5db268910b7c/gcc%2Fada%2Fseh_init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba1a92332821228d24550c82f0ae5db268910b7c/gcc%2Fada%2Fseh_init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fseh_init.c?ref=ba1a92332821228d24550c82f0ae5db268910b7c", "patch": "@@ -91,7 +91,7 @@ __gnat_map_SEH (EXCEPTION_RECORD* ExceptionRecord, const char **msg)\n       */\n       if ((ExceptionRecord->ExceptionInformation[1] & 3) != 0\n \t  || IsBadCodePtr\n-\t  ((void *)(ExceptionRecord->ExceptionInformation[1] + 4096)))\n+\t  ((FARPROC)(ExceptionRecord->ExceptionInformation[1] + 4096)))\n \t{\n \t  *msg = \"EXCEPTION_ACCESS_VIOLATION\";\n \t  return &program_error;"}]}