{"sha": "109140655e4230e3efa1ec489dd46d815f1b82e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA5MTQwNjU1ZTQyMzBlM2VmYTFlYzQ4OWRkNDZkODE1ZjFiODJlMQ==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-08-13T20:49:10Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-08-13T20:49:10Z"}, "message": "(contains): Return the number of insns.\n\n        (reposition_prologue_and_epilogue_notes): Count all the prologue and\n        epilogue insns.\n\nFrom-SVN: r1814", "tree": {"sha": "4731903d512ba5c3c67838d02fbf1abd9aded41a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4731903d512ba5c3c67838d02fbf1abd9aded41a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/109140655e4230e3efa1ec489dd46d815f1b82e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/109140655e4230e3efa1ec489dd46d815f1b82e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/109140655e4230e3efa1ec489dd46d815f1b82e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/109140655e4230e3efa1ec489dd46d815f1b82e1/comments", "author": null, "committer": null, "parents": [{"sha": "e5ed215546e9bdc14a4ae1b537822ecfd6a708b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5ed215546e9bdc14a4ae1b537822ecfd6a708b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5ed215546e9bdc14a4ae1b537822ecfd6a708b6"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "685fcc386fc1a15645f6a4d48c542310b57b5b40", "filename": "gcc/function.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/109140655e4230e3efa1ec489dd46d815f1b82e1/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/109140655e4230e3efa1ec489dd46d815f1b82e1/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=109140655e4230e3efa1ec489dd46d815f1b82e1", "patch": "@@ -4278,9 +4278,9 @@ record_insns (insns)\n   return vec;\n }\n \n-/* Determine whether INSN is in the array of INSN_UIDs VEC.  */\n+/* Determine how many INSN_UIDs in VEC are part of INSN.  */\n \n-static rtx\n+static int\n contains (insn, vec)\n      rtx insn;\n      int *vec;\n@@ -4290,16 +4290,18 @@ contains (insn, vec)\n   if (GET_CODE (insn) == INSN\n       && GET_CODE (PATTERN (insn)) == SEQUENCE)\n     {\n+      int count = 0;\n       for (i = XVECLEN (PATTERN (insn), 0) - 1; i >= 0; i--)\n \tfor (j = 0; vec[j]; j++)\n \t  if (INSN_UID (XVECEXP (PATTERN (insn), 0, i)) == vec[j])\n-\t    return XVECEXP (PATTERN (insn), 0, i);\n+\t    count++;\n+      return count;\n     }\n   else\n     {\n       for (j = 0; vec[j]; j++)\n \tif (INSN_UID (insn) == vec[j])\n-\t  return insn;\n+\t  return 1;\n     }\n   return 0;\n }\n@@ -4411,7 +4413,7 @@ reposition_prologue_and_epilogue_notes (f)\n \t\tif (NOTE_LINE_NUMBER (insn) == NOTE_INSN_PROLOGUE_END)\n \t\t  note = insn;\n \t      }\n-\t    else if (contains (insn, prologue) && --len == 0)\n+\t    else if ((len -= contains (insn, prologue)) == 0)\n \t      {\n \t\t/* Find the prologue-end note if we haven't already, and\n \t\t   move it to just after the last prologue insn.  */\n@@ -4446,7 +4448,7 @@ reposition_prologue_and_epilogue_notes (f)\n \t\tif (NOTE_LINE_NUMBER (insn) == NOTE_INSN_EPILOGUE_BEG)\n \t\t  note = insn;\n \t      }\n-\t    else if (contains (insn, epilogue) && --len == 0)\n+\t    else if ((len -= contains (insn, epilogue)) == 0)\n \t      {\n \t\t/* Find the epilogue-begin note if we haven't already, and\n \t\t   move it to just before the first epilogue insn.  */"}]}