{"sha": "0340ed6c77f2fea0bfdbe82c1e32a1494251235e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM0MGVkNmM3N2YyZmVhMGJmZGJlODJjMWUzMmExNDk0MjUxMjM1ZQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-02-03T00:09:57Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-02-03T00:09:57Z"}, "message": "jump.c (jump_optimize): Fix first arg to modified_in_p in previous change.\n\n        * jump.c (jump_optimize): Fix first arg to modified_in_p in\n        previous change.\n\nFrom-SVN: r17610", "tree": {"sha": "2d94f0837fa1b7a4b6c888ea44c47d913bbe3f5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d94f0837fa1b7a4b6c888ea44c47d913bbe3f5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0340ed6c77f2fea0bfdbe82c1e32a1494251235e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0340ed6c77f2fea0bfdbe82c1e32a1494251235e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0340ed6c77f2fea0bfdbe82c1e32a1494251235e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0340ed6c77f2fea0bfdbe82c1e32a1494251235e/comments", "author": null, "committer": null, "parents": [{"sha": "d7684f2df80bbec945f9b30a49cca3c63ba17bc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7684f2df80bbec945f9b30a49cca3c63ba17bc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7684f2df80bbec945f9b30a49cca3c63ba17bc9"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "9bfff269bbdf291e31eb0056b2db60bfccd69560", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0340ed6c77f2fea0bfdbe82c1e32a1494251235e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0340ed6c77f2fea0bfdbe82c1e32a1494251235e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0340ed6c77f2fea0bfdbe82c1e32a1494251235e", "patch": "@@ -1,3 +1,8 @@\n+Tue Feb  3 01:11:12 1998  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* jump.c (jump_optimize): Fix first arg to modified_in_p in\n+\tprevious change.\n+\n Mon Feb  2 19:18:14 1998  Richard Henderson  <rth@cygnus.com>\n \n         * expr.c (expand_builtin_setjmp): Accept two new arguments for"}, {"sha": "b0a35c346cef6c245318d43b0f6bce85c2f04ed3", "filename": "gcc/jump.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0340ed6c77f2fea0bfdbe82c1e32a1494251235e/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0340ed6c77f2fea0bfdbe82c1e32a1494251235e/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=0340ed6c77f2fea0bfdbe82c1e32a1494251235e", "patch": "@@ -995,7 +995,7 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n \t      && GET_CODE (SET_SRC (temp1)) != REG\n \t      && GET_CODE (SET_SRC (temp1)) != SUBREG\n \t      && GET_CODE (SET_SRC (temp1)) != CONST_INT\n-\t      && ! modified_in_p (insn, temp)\n+\t      && ! modified_in_p (PATTERN (insn), temp)\n \t      && ! side_effects_p (SET_SRC (temp1))\n \t      && ! may_trap_p (SET_SRC (temp1))\n \t      && rtx_cost (SET_SRC (temp1), SET) < 10)\n@@ -1035,13 +1035,13 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n \t      && GET_MODE_CLASS (GET_MODE (temp2)) == MODE_INT\n \t      && (! SMALL_REGISTER_CLASSES\n \t\t  || REGNO (temp2) >= FIRST_PSEUDO_REGISTER)\n-\t      && ! modified_in_p (insn, temp)\n+\t      && ! modified_in_p (PATTERN (insn), temp)\n \t      && ! side_effects_p (SET_SRC (temp1))\n \t      && ! may_trap_p (SET_SRC (temp1))\n \t      && rtx_cost (SET_SRC (temp1), SET) < 10\n \t      && (temp4 = single_set (temp3)) != 0\n \t      && rtx_equal_p (SET_DEST (temp4), temp2)\n-\t      && ! modified_in_p (insn, temp3)\n+\t      && ! modified_in_p (PATTERN (insn), temp3)\n \t      && ! side_effects_p (SET_SRC (temp4))\n \t      && ! may_trap_p (SET_SRC (temp4))\n \t      && rtx_cost (SET_SRC (temp4), SET) < 10)\n@@ -1094,7 +1094,7 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n \t      && REGNO (temp5) >= FIRST_PSEUDO_REGISTER\n \t      && REGNO_FIRST_UID (REGNO (temp5)) == INSN_UID (temp)\n \t      && REGNO_LAST_UID (REGNO (temp5)) == INSN_UID (temp3)\n-\t      && ! modified_in_p (insn, temp)\n+\t      && ! modified_in_p (PATTERN (insn), temp)\n \t      && ! side_effects_p (SET_SRC (temp1))\n \t      && ! may_trap_p (SET_SRC (temp1))\n \t      && rtx_cost (SET_SRC (temp1), SET) < 10\n@@ -1104,7 +1104,7 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n \t      && (! SMALL_REGISTER_CLASSES\n \t\t  || REGNO (temp2) >= FIRST_PSEUDO_REGISTER)\n \t      && rtx_equal_p (SET_DEST (temp4), temp2)\n-\t      && ! modified_in_p (insn, temp3)\n+\t      && ! modified_in_p (PATTERN (insn), temp3)\n \t      && ! side_effects_p (SET_SRC (temp4))\n \t      && ! may_trap_p (SET_SRC (temp4))\n \t      && rtx_cost (SET_SRC (temp4), SET) < 10)"}]}