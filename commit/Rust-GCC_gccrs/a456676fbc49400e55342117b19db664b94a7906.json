{"sha": "a456676fbc49400e55342117b19db664b94a7906", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ1NjY3NmZiYzQ5NDAwZTU1MzQyMTE3YjE5ZGI2NjRiOTRhNzkwNg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-11-08T13:41:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-11-08T13:41:57Z"}, "message": "re PR regression/50999 (g++.dg/lto/20081109 execute -O2 -flto -flto-partition=1to1 -fno-use-linker-plugin)\n\n2011-11-08  Richard Guenther  <rguenther@suse.de>\n\n\tPR lto/50999\n\t* lto-opts.c (append_to_collect_gcc_options): Split out from...\n\t(lto_write_options): ... here.  Prepend frontend specific flags.\n\nFrom-SVN: r181160", "tree": {"sha": "03ac2f68c385ce43daa774280e5f0b9e39c3f717", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03ac2f68c385ce43daa774280e5f0b9e39c3f717"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a456676fbc49400e55342117b19db664b94a7906", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a456676fbc49400e55342117b19db664b94a7906", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a456676fbc49400e55342117b19db664b94a7906", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a456676fbc49400e55342117b19db664b94a7906/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a0eabe5751e3ca92ae6673936c9b73db85bbfb67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0eabe5751e3ca92ae6673936c9b73db85bbfb67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0eabe5751e3ca92ae6673936c9b73db85bbfb67"}], "stats": {"total": 74, "additions": 47, "deletions": 27}, "files": [{"sha": "6c92689892c3fcb330e9bede2d13874bd0c68bed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a456676fbc49400e55342117b19db664b94a7906/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a456676fbc49400e55342117b19db664b94a7906/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a456676fbc49400e55342117b19db664b94a7906", "patch": "@@ -1,3 +1,9 @@\n+2011-11-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/50999\n+\t* lto-opts.c (append_to_collect_gcc_options): Split out from...\n+\t(lto_write_options): ... here.  Prepend frontend specific flags.\n+\n 2011-11-08  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/sse.md (*avx_vperm2f128<mode>3_nozero): Emit mask"}, {"sha": "668a5ce9163d45bca900d739d145504ba30f33a1", "filename": "gcc/lto-opts.c", "status": "modified", "additions": 41, "deletions": 27, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a456676fbc49400e55342117b19db664b94a7906/gcc%2Flto-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a456676fbc49400e55342117b19db664b94a7906/gcc%2Flto-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-opts.c?ref=a456676fbc49400e55342117b19db664b94a7906", "patch": "@@ -35,6 +35,29 @@ along with GCC; see the file COPYING3.  If not see\n #include \"lto-streamer.h\"\n #include \"toplev.h\"\n \n+/* Append the option piece OPT to the COLLECT_GCC_OPTIONS string\n+   set up by OB, appropriately quoted and separated by spaces\n+   (if !*FIRST_P).  */\n+\n+static void\n+append_to_collect_gcc_options (struct obstack *ob,\n+\t\t\t       bool *first_p, const char *opt)\n+{\n+  const char *p, *q = opt;\n+  if (!first_p)\n+    obstack_grow (ob, \" \", 1);\n+  obstack_grow (ob, \"'\", 1);\n+  while ((p = strchr (q, '\\'')))\n+    {\n+      obstack_grow (ob, q, p - q);\n+      obstack_grow (ob, \"'\\\\''\", 4);\n+      q = ++p;\n+    }\n+  obstack_grow (ob, q, strlen (q));\n+  obstack_grow (ob, \"'\", 1);\n+  *first_p = false;\n+}\n+\n /* Write currently held options to an LTO IL section.  */\n \n void\n@@ -45,16 +68,30 @@ lto_write_options (void)\n   struct obstack temporary_obstack;\n   unsigned int i, j;\n   char *args;\n+  bool first_p = true;\n \n   section_name = lto_get_section_name (LTO_section_opts, NULL, NULL);\n   lto_begin_section (section_name, false);\n   memset (&stream, 0, sizeof (stream));\n \n   obstack_init (&temporary_obstack);\n+\n+  /* Output options that affect GIMPLE IL semantics and are implicitely\n+     enabled by the frontend.\n+     This for now includes an explicit set of options that we also handle\n+     explicitly in lto-wrapper.c.  In the end the effects on GIMPLE IL\n+     semantics should be explicitely encoded in the IL or saved per\n+     function rather than per compilation unit.  */\n+  /* -fexceptions causes the EH machinery to be initialized, enabling\n+     generation of unwind data so that explicit throw() calls work.  */\n+  if (global_options.x_flag_exceptions)\n+    append_to_collect_gcc_options (&temporary_obstack, &first_p,\n+\t\t\t\t   \"-fexceptions\");\n+\n+  /* Output explicitely passed options.  */\n   for (i = 1; i < save_decoded_options_count; ++i)\n     {\n       struct cl_decoded_option *option = &save_decoded_options[i];\n-      const char *q, *p;\n \n       /* Skip frontend and driver specific options here.  */\n       if (!(cl_options[option->opt_index].flags & (CL_COMMON|CL_TARGET|CL_LTO)))\n@@ -82,32 +119,9 @@ lto_write_options (void)\n \t  break;\n \t}\n \n-      if (i != 1)\n-\tobstack_grow (&temporary_obstack, \" \", 1);\n-      obstack_grow (&temporary_obstack, \"'\", 1);\n-      q = option->canonical_option[0];\n-      while ((p = strchr (q, '\\'')))\n-\t{\n-\t  obstack_grow (&temporary_obstack, q, p - q);\n-\t  obstack_grow (&temporary_obstack, \"'\\\\''\", 4);\n-\t  q = ++p;\n-\t}\n-      obstack_grow (&temporary_obstack, q, strlen (q));\n-      obstack_grow (&temporary_obstack, \"'\", 1);\n-\n-      for (j = 1; j < option->canonical_option_num_elements; ++j)\n-\t{\n-\t  obstack_grow (&temporary_obstack, \" '\", 2);\n-\t  q = option->canonical_option[j];\n-\t  while ((p = strchr (q, '\\'')))\n-\t    {\n-\t      obstack_grow (&temporary_obstack, q, p - q);\n-\t      obstack_grow (&temporary_obstack, \"'\\\\''\", 4);\n-\t      q = ++p;\n-\t    }\n-\t  obstack_grow (&temporary_obstack, q, strlen (q));\n-\t  obstack_grow (&temporary_obstack, \"'\", 1);\n-\t}\n+      for (j = 0; j < option->canonical_option_num_elements; ++j)\n+\tappend_to_collect_gcc_options (&temporary_obstack, &first_p,\n+\t\t\t\t       option->canonical_option[j]);\n     }\n   obstack_grow (&temporary_obstack, \"\\0\", 1);\n   args = XOBFINISH (&temporary_obstack, char *);"}]}