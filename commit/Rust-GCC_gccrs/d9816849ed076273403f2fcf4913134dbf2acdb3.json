{"sha": "d9816849ed076273403f2fcf4913134dbf2acdb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk4MTY4NDllZDA3NjI3MzQwM2YyZmNmNDkxMzEzNGRiZjJhY2RiMw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-06-26T21:08:46Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-06-26T21:08:46Z"}, "message": "sparc.c (sparc_emit_set_const32): Make static.\n\n\t* config/sparc/sparc.c (sparc_emit_set_const32): Make static.\n\t(sparc_emit_set_const64): Likewise.  Remove disabled code.\n\t* config/sparc/sparc-protos.h (sparc_emit_set_const32): Delete.\n\t(sparc_emit_set_const64): Likewise.\n\nFrom-SVN: r161442", "tree": {"sha": "7052fce69835e361b58522a3eebf3e566243c1ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7052fce69835e361b58522a3eebf3e566243c1ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9816849ed076273403f2fcf4913134dbf2acdb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9816849ed076273403f2fcf4913134dbf2acdb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9816849ed076273403f2fcf4913134dbf2acdb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9816849ed076273403f2fcf4913134dbf2acdb3/comments", "author": null, "committer": null, "parents": [{"sha": "820d2ff72024098295a9bb3194793c320c0929af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/820d2ff72024098295a9bb3194793c320c0929af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/820d2ff72024098295a9bb3194793c320c0929af"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "624af3d574734d278b4dcff99282d33e7566c6fd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9816849ed076273403f2fcf4913134dbf2acdb3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9816849ed076273403f2fcf4913134dbf2acdb3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d9816849ed076273403f2fcf4913134dbf2acdb3", "patch": "@@ -1,3 +1,10 @@\n+2010-06-26  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/sparc/sparc.c (sparc_emit_set_const32): Make static.\n+\t(sparc_emit_set_const64): Likewise.  Remove disabled code.\n+\t* config/sparc/sparc-protos.h (sparc_emit_set_const32): Delete.\n+\t(sparc_emit_set_const64): Likewise.\n+\n 2010-06-26  Catherine Moore  <clm@codesourcery.com>\n \n \t* config/mips/mips.md (alu_type): New attribute."}, {"sha": "cc51280596c32c1ac093e64a4d7e1c025f90783c", "filename": "gcc/config/sparc/sparc-protos.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9816849ed076273403f2fcf4913134dbf2acdb3/gcc%2Fconfig%2Fsparc%2Fsparc-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9816849ed076273403f2fcf4913134dbf2acdb3/gcc%2Fconfig%2Fsparc%2Fsparc-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc-protos.h?ref=d9816849ed076273403f2fcf4913134dbf2acdb3", "patch": "@@ -66,8 +66,6 @@ extern bool legitimate_pic_operand_p (rtx);\n extern void sparc_emit_call_insn (rtx, rtx);\n extern void sparc_defer_case_vector (rtx, rtx, int);\n extern bool sparc_expand_move (enum machine_mode, rtx *);\n-extern void sparc_emit_set_const32 (rtx, rtx);\n-extern void sparc_emit_set_const64 (rtx, rtx);\n extern void sparc_emit_set_symbolic_const64 (rtx, rtx, rtx);\n extern int sparc_splitdi_legitimate (rtx, rtx);\n extern int sparc_absnegfloat_split_legitimate (rtx, rtx);"}, {"sha": "412f27c30668bde61b67c2e69ce9ed6ac4580e5c", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9816849ed076273403f2fcf4913134dbf2acdb3/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9816849ed076273403f2fcf4913134dbf2acdb3/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=d9816849ed076273403f2fcf4913134dbf2acdb3", "patch": "@@ -354,6 +354,8 @@ static int function_arg_slotno (const CUMULATIVE_ARGS *, enum machine_mode,\n static int supersparc_adjust_cost (rtx, rtx, rtx, int);\n static int hypersparc_adjust_cost (rtx, rtx, rtx, int);\n \n+static void sparc_emit_set_const32 (rtx, rtx);\n+static void sparc_emit_set_const64 (rtx, rtx);\n static void sparc_output_addr_vec (rtx);\n static void sparc_output_addr_diff_vec (rtx);\n static void sparc_output_deferred_case_vectors (void);\n@@ -1111,7 +1113,7 @@ sparc_expand_move (enum machine_mode mode, rtx *operands)\n    We know it can't be done in one insn when we get\n    here, the move expander guarantees this.  */\n \n-void\n+static void\n sparc_emit_set_const32 (rtx op0, rtx op1)\n {\n   enum machine_mode mode = GET_MODE (op0);\n@@ -1353,7 +1355,7 @@ sparc_emit_set_symbolic_const64 (rtx op0, rtx op1, rtx temp)\n }\n \n #if HOST_BITS_PER_WIDE_INT == 32\n-void\n+static void\n sparc_emit_set_const64 (rtx op0 ATTRIBUTE_UNUSED, rtx op1 ATTRIBUTE_UNUSED)\n {\n   gcc_unreachable ();\n@@ -1710,7 +1712,7 @@ create_simple_focus_bits (unsigned HOST_WIDE_INT high_bits,\n    being loaded into a register.  Emit the most efficient\n    insn sequence possible.  Detection of all the 1-insn cases\n    has been done already.  */\n-void\n+static void\n sparc_emit_set_const64 (rtx op0, rtx op1)\n {\n   unsigned HOST_WIDE_INT high_bits, low_bits;\n@@ -1936,10 +1938,6 @@ sparc_emit_set_const64 (rtx op0, rtx op1)\n     }\n \n   /* The easiest way when all else fails, is full decomposition.  */\n-#if 0\n-  printf (\"sparc_emit_set_const64: Hard constant [%08lx%08lx] neg[%08lx%08lx]\\n\",\n-\t  high_bits, low_bits, ~high_bits, ~low_bits);\n-#endif\n   sparc_emit_set_const64_longway (op0, temp, high_bits, low_bits);\n }\n #endif /* HOST_BITS_PER_WIDE_INT == 32 */"}]}