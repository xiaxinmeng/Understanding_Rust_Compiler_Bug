{"sha": "d30869a8d4886aee4020be3b28b15b1b15c8d9ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMwODY5YThkNDg4NmFlZTQwMjBiZTNiMjhiMTViMWIxNWM4ZDlhZA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2020-09-07T07:38:25Z"}, "committer": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2020-09-07T07:38:25Z"}, "message": "fortran: Fix argument types in derived types procedures\n\ngcc/fortran/ChangeLog\n\n\t* trans-types.c (gfc_get_derived_type): Fix argument types.", "tree": {"sha": "3bb6548ce949dac447dcd722635d89df425cb9d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bb6548ce949dac447dcd722635d89df425cb9d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d30869a8d4886aee4020be3b28b15b1b15c8d9ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d30869a8d4886aee4020be3b28b15b1b15c8d9ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d30869a8d4886aee4020be3b28b15b1b15c8d9ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d30869a8d4886aee4020be3b28b15b1b15c8d9ad/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a502683de1f036b5f8b4e483bd9f5a45be73382e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a502683de1f036b5f8b4e483bd9f5a45be73382e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a502683de1f036b5f8b4e483bd9f5a45be73382e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "26fdb2803a723fad5ef44a24052f5db408d4fcd5", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d30869a8d4886aee4020be3b28b15b1b15c8d9ad/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d30869a8d4886aee4020be3b28b15b1b15c8d9ad/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=d30869a8d4886aee4020be3b28b15b1b15c8d9ad", "patch": "@@ -2716,7 +2716,7 @@ gfc_get_derived_type (gfc_symbol * derived, int codimen)\n \tfield_type = gfc_get_ppc_type (c);\n       else if (c->attr.proc_pointer && derived->backend_decl)\n \t{\n-\t  tmp = build_function_type_list (derived->backend_decl, NULL_TREE);\n+\t  tmp = build_function_type (derived->backend_decl, NULL_TREE);\n \t  field_type = build_pointer_type (tmp);\n \t}\n       else if (c->ts.type == BT_DERIVED || c->ts.type == BT_CLASS)"}]}