{"sha": "657bb6dc84c557465d1d6683ba0731017f6137b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU3YmI2ZGM4NGM1NTc0NjVkMWQ2NjgzYmEwNzMxMDE3ZjYxMzdiOA==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1995-04-20T22:26:30Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1995-04-20T22:26:30Z"}, "message": "Use TREE_ADDRESSABLE rather than | TYPE_NEEDS_CONSTRUCTING to decide whether a...\n\nUse TREE_ADDRESSABLE rather than\n|        TYPE_NEEDS_CONSTRUCTING to decide whether a parameter needs to be\n|        passed by invisible reference.\n\nFrom-SVN: r9420", "tree": {"sha": "2bc0dae2f3e3cca9188a8d15dbda1bb8205f033a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bc0dae2f3e3cca9188a8d15dbda1bb8205f033a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/657bb6dc84c557465d1d6683ba0731017f6137b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/657bb6dc84c557465d1d6683ba0731017f6137b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/657bb6dc84c557465d1d6683ba0731017f6137b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/657bb6dc84c557465d1d6683ba0731017f6137b8/comments", "author": null, "committer": null, "parents": [{"sha": "a01408abbe4b7e5a70e423efd8228fb78e9fae11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a01408abbe4b7e5a70e423efd8228fb78e9fae11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a01408abbe4b7e5a70e423efd8228fb78e9fae11"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "63125a3e1fc5f64ddd901b3d20d7b059b91b0b6c", "filename": "gcc/calls.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/657bb6dc84c557465d1d6683ba0731017f6137b8/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/657bb6dc84c557465d1d6683ba0731017f6137b8/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=657bb6dc84c557465d1d6683ba0731017f6137b8", "patch": "@@ -1022,7 +1022,7 @@ expand_call (exp, target, ignore)\n       /* See if this argument should be passed by invisible reference.  */\n       if ((TREE_CODE (TYPE_SIZE (type)) != INTEGER_CST\n \t   && contains_placeholder_p (TYPE_SIZE (type)))\n-\t  || TYPE_NEEDS_CONSTRUCTING (type)\n+\t  || TREE_ADDRESSABLE (type)\n #ifdef FUNCTION_ARG_PASS_BY_REFERENCE\n \t  || FUNCTION_ARG_PASS_BY_REFERENCE (args_so_far, TYPE_MODE (type),\n \t\t\t\t\t     type, argpos < n_named_args)\n@@ -1325,6 +1325,10 @@ expand_call (exp, target, ignore)\n \t|| (must_preallocate && (args_size.var != 0 || args_size.constant != 0)\n \t    && calls_function (args[i].tree_value, 0)))\n       {\n+\t/* If this is an addressable type, we cannot pre-evaluate it.  */\n+\tif (TREE_ADDRESSABLE (TREE_TYPE (args[i].tree_value)))\n+\t  abort ();\n+\n \tpush_temp_slots ();\n \n \targs[i].initial_value = args[i].value"}, {"sha": "48bcc9f3d8acf6b1846967f9a8df5e19fb34d87a", "filename": "gcc/function.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/657bb6dc84c557465d1d6683ba0731017f6137b8/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/657bb6dc84c557465d1d6683ba0731017f6137b8/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=657bb6dc84c557465d1d6683ba0731017f6137b8", "patch": "@@ -3271,7 +3271,7 @@ assign_parms (fndecl, second_time)\n \n       if ((TREE_CODE (TYPE_SIZE (passed_type)) != INTEGER_CST\n \t   && contains_placeholder_p (TYPE_SIZE (passed_type)))\n-\t  || TYPE_NEEDS_CONSTRUCTING (passed_type)\n+\t  || TREE_ADDRESSABLE (passed_type)\n #ifdef FUNCTION_ARG_PASS_BY_REFERENCE\n \t  || FUNCTION_ARG_PASS_BY_REFERENCE (args_so_far, passed_mode,\n \t\t\t\t\t      passed_type, ! last_named)"}]}