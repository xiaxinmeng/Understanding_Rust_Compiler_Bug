{"sha": "3f2338b4706cdc53ab276b9a5fed7f6927404f07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YyMzM4YjQ3MDZjZGM1M2FiMjc2YjlhNWZlZDdmNjkyNzQwNGYwNw==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2021-07-09T02:23:35Z"}, "committer": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2021-07-12T16:29:23Z"}, "message": "[PHIOPT/MATCH] Remove the statement to move if not used\n\nInstead of waiting for DCE to remove the unused statement,\nand maybe optimize another conditional, it is better if\nwe don't move the statement and have the statement\nremoved.\n\nOK? Bootstrapped and tested on x86_64-linux-gnu.\n\nChanges from v1:\n* v2: Change the order of insertation and check to see if the lhs\n  is used rather than see if the lhs was used in the sequence.\n\ngcc/ChangeLog:\n\n\t* tree-ssa-phiopt.c (match_simplify_replacement): Move\n\tinsert of the sequence before the movement of the\n\tstatement. Check if to see if the statement is used\n\toutside of the original phi to see if we should move it.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/tree-ssa/pr96928-1.c: Update to similar as pr96928.c.", "tree": {"sha": "b8da0a21805622c8d1557ac9b074e0bfb7fc6e3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8da0a21805622c8d1557ac9b074e0bfb7fc6e3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f2338b4706cdc53ab276b9a5fed7f6927404f07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f2338b4706cdc53ab276b9a5fed7f6927404f07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f2338b4706cdc53ab276b9a5fed7f6927404f07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f2338b4706cdc53ab276b9a5fed7f6927404f07/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47113773456ade7324c5467511d97f36cced57b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47113773456ade7324c5467511d97f36cced57b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47113773456ade7324c5467511d97f36cced57b4"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "9e505ac9900b8d45d2c6533ccbfc3b7a3b141d44", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr96928-1.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f2338b4706cdc53ab276b9a5fed7f6927404f07/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr96928-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f2338b4706cdc53ab276b9a5fed7f6927404f07/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr96928-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr96928-1.c?ref=3f2338b4706cdc53ab276b9a5fed7f6927404f07", "patch": "@@ -2,7 +2,10 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-phiopt2 -fdump-tree-optimized\" } */\n /* { dg-final { scan-tree-dump-times \" = a_\\[0-9]*\\\\\\(D\\\\\\) >> \" 5 \"phiopt2\" } } */\n-/* { dg-final { scan-tree-dump-times \" = ~c_\\[0-9]*\\\\\\(D\\\\\\);\" 1 \"phiopt2\" } } */\n+/* The following check is done at optimized because a ^ (~b) is rewritten as ~(a^b)\n+   and in the case of match.pd optimizing these ?:, the ~ is moved out already\n+   by the time we get to phiopt2. */\n+/* { dg-final { scan-tree-dump-times \"c_\\[0-9]*\\\\\\(D\\\\\\) \\\\\\^\" 1 \"optimized\" } } */\n /* { dg-final { scan-tree-dump-times \" = ~\" 1 \"optimized\" } } */\n /* { dg-final { scan-tree-dump-times \" = \\[abc_0-9\\\\\\(\\\\\\)D]* \\\\\\^ \" 5 \"phiopt2\" } } */\n /* { dg-final { scan-tree-dump-not \"a < 0\" \"phiopt2\" } } */"}, {"sha": "c6adbbd28a012a94b29ffbd8334628f0db64a119", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f2338b4706cdc53ab276b9a5fed7f6927404f07/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f2338b4706cdc53ab276b9a5fed7f6927404f07/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=3f2338b4706cdc53ab276b9a5fed7f6927404f07", "patch": "@@ -1020,7 +1020,16 @@ match_simplify_replacement (basic_block cond_bb, basic_block middle_bb,\n     return false;\n \n   gsi = gsi_last_bb (cond_bb);\n-  if (stmt_to_move)\n+  /* Insert the sequence generated from gimple_simplify_phiopt.  */\n+  if (seq)\n+    gsi_insert_seq_before (&gsi, seq, GSI_CONTINUE_LINKING);\n+\n+  /* If there was a statement to move and the result of the statement\n+     is going to be used, move it to right before the original\n+     conditional.  */\n+  if (stmt_to_move\n+      && (gimple_assign_lhs (stmt_to_move) == result\n+\t  || !has_single_use (gimple_assign_lhs (stmt_to_move))))\n     {\n       if (dump_file && (dump_flags & TDF_DETAILS))\n \t{\n@@ -1032,8 +1041,6 @@ match_simplify_replacement (basic_block cond_bb, basic_block middle_bb,\n       gsi_move_before (&gsi1, &gsi);\n       reset_flow_sensitive_info (gimple_assign_lhs (stmt_to_move));\n     }\n-  if (seq)\n-    gsi_insert_seq_before (&gsi, seq, GSI_SAME_STMT);\n \n   replace_phi_edge_with_variable (cond_bb, e1, phi, result);\n "}]}