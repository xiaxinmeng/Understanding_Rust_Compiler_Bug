{"sha": "0248ce054752e353be11bdf52dae7c5f6d2cb7f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI0OGNlMDU0NzUyZTM1M2JlMTFiZGY1MmRhZTdjNWY2ZDJjYjdmMA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2001-07-19T22:42:07Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2001-07-19T22:42:07Z"}, "message": "simplify-rtx.c (simplify_replace_rtx): Try to obtain mode from old and new operands in `<', `3' and `b'.\n\n2001-07-19  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* simplify-rtx.c (simplify_replace_rtx): Try to obtain mode from\n\told and new operands in `<', `3' and `b'.\n\nFrom-SVN: r44164", "tree": {"sha": "0ba44d7828040d98fc8b57247fc9e7f1558682ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ba44d7828040d98fc8b57247fc9e7f1558682ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0248ce054752e353be11bdf52dae7c5f6d2cb7f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0248ce054752e353be11bdf52dae7c5f6d2cb7f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0248ce054752e353be11bdf52dae7c5f6d2cb7f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0248ce054752e353be11bdf52dae7c5f6d2cb7f0/comments", "author": null, "committer": null, "parents": [{"sha": "e1772ac0583495ca8fbc949988dd51dbfc83b8fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1772ac0583495ca8fbc949988dd51dbfc83b8fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1772ac0583495ca8fbc949988dd51dbfc83b8fa"}], "stats": {"total": 46, "additions": 34, "deletions": 12}, "files": [{"sha": "e427ce579af9317bec85ce26ffe867743610ecd2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0248ce054752e353be11bdf52dae7c5f6d2cb7f0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0248ce054752e353be11bdf52dae7c5f6d2cb7f0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0248ce054752e353be11bdf52dae7c5f6d2cb7f0", "patch": "@@ -1,3 +1,8 @@\n+2001-07-19  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* simplify-rtx.c (simplify_replace_rtx): Try to obtain mode from\n+\told and new operands in `<', `3' and `b'.\n+\n 2001-07-19  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* Makefile.in (emit-rtl.o, c-decl.o): Depend on debug.h."}, {"sha": "1d090ba77839bcd42211cfb726127dda7dbd81ca", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 29, "deletions": 12, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0248ce054752e353be11bdf52dae7c5f6d2cb7f0/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0248ce054752e353be11bdf52dae7c5f6d2cb7f0/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=0248ce054752e353be11bdf52dae7c5f6d2cb7f0", "patch": "@@ -247,21 +247,38 @@ simplify_replace_rtx (x, old, new)\n \t\t\t     simplify_replace_rtx (XEXP (x, 0), old, new),\n \t\t\t     simplify_replace_rtx (XEXP (x, 1), old, new));\n     case '<':\n-      return\n-\tsimplify_gen_relational (code, mode,\n-\t\t\t\t (GET_MODE (XEXP (x, 0)) != VOIDmode\n-\t\t\t\t  ? GET_MODE (XEXP (x, 0))\n-\t\t\t\t  : GET_MODE (XEXP (x, 1))),\n-\t\t\t\t simplify_replace_rtx (XEXP (x, 0), old, new),\n-\t\t\t\t simplify_replace_rtx (XEXP (x, 1), old, new));\n+      {\n+\tenum machine_mode op_mode = (GET_MODE (XEXP (x, 0)) != VOIDmode\n+\t\t\t\t     ? GET_MODE (XEXP (x, 0))\n+\t\t\t\t     : GET_MODE (XEXP (x, 1)));\n+\trtx op0 = simplify_replace_rtx (XEXP (x, 0), old, new);\n+\trtx op1 = simplify_replace_rtx (XEXP (x, 1), old, new);\n+\n+\treturn\n+\t  simplify_gen_relational (code, mode,\n+\t\t\t\t   (op_mode != VOIDmode\n+\t\t\t\t    ? op_mode\n+\t\t\t\t    : GET_MODE (op0) != VOIDmode\n+\t\t\t\t    ? GET_MODE (op0)\n+\t\t\t\t    : GET_MODE (op1)),\n+\t\t\t\t   op0, op1);\n+      }\n \n     case '3':\n     case 'b':\n-      return\n-\tsimplify_gen_ternary (code, mode, GET_MODE (XEXP (x, 0)),\n-\t\t\t      simplify_replace_rtx (XEXP (x, 0), old, new),\n-\t\t\t      simplify_replace_rtx (XEXP (x, 1), old, new),\n-\t\t\t      simplify_replace_rtx (XEXP (x, 2), old, new));\n+      {\n+\tenum machine_mode op_mode = GET_MODE (XEXP (x, 0));\n+\trtx op0 = simplify_replace_rtx (XEXP (x, 0), old, new);\n+\n+\treturn\n+\t  simplify_gen_ternary (code, mode, \n+\t\t\t\t(op_mode != VOIDmode\n+\t\t\t\t ? op_mode\n+\t\t\t\t : GET_MODE (op0)),\n+\t\t\t\top0,\n+\t\t\t\tsimplify_replace_rtx (XEXP (x, 1), old, new),\n+\t\t\t\tsimplify_replace_rtx (XEXP (x, 2), old, new));\n+      }\n \n     case 'x':\n       /* The only case we try to handle is a SUBREG.  */"}]}