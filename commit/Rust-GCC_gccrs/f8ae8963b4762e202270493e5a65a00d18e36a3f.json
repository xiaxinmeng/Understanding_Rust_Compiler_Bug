{"sha": "f8ae8963b4762e202270493e5a65a00d18e36a3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhhZTg5NjNiNDc2MmUyMDIyNzA0OTNlNWE2NWEwMGQxOGUzNmEzZg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2019-11-12T21:56:13Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-11-12T21:56:13Z"}, "message": "rs6000: Use ULL on big hexadecimal literal\n\nC++98 does not have long long int, and does not use (unsigned) long\nlong int for hexadecimal literals.  So let's use an ULL suffix here,\nwhich is still not strict C++98, but which works with more compilers.\n\n\n\t* config/rs6000/rs6000.md (rs6000_set_fpscr_drn): Use ULL on big\n\thexadecimal literal.\n\nFrom-SVN: r278107", "tree": {"sha": "319ced2121a0bac4dbab646058e5f52a9ec62afa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/319ced2121a0bac4dbab646058e5f52a9ec62afa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8ae8963b4762e202270493e5a65a00d18e36a3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8ae8963b4762e202270493e5a65a00d18e36a3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8ae8963b4762e202270493e5a65a00d18e36a3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8ae8963b4762e202270493e5a65a00d18e36a3f/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5c44cef5f5610e48cce17e8d085636c18f308363", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c44cef5f5610e48cce17e8d085636c18f308363", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c44cef5f5610e48cce17e8d085636c18f308363"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "e8ebbecf1b16b1796c2a3fa6c51ba7c750c8ab84", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8ae8963b4762e202270493e5a65a00d18e36a3f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8ae8963b4762e202270493e5a65a00d18e36a3f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8ae8963b4762e202270493e5a65a00d18e36a3f", "patch": "@@ -1,3 +1,8 @@\n+2019-11-12  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (rs6000_set_fpscr_drn): Use ULL on big\n+\thexadecimal literal.\n+\n 2019-11-12  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/vsx.md (xscmpexpdp_<code> for CMP_TEST): Handle"}, {"sha": "040fc886057cca2e829d9c38ee1b2018bcf22414", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8ae8963b4762e202270493e5a65a00d18e36a3f/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8ae8963b4762e202270493e5a65a00d18e36a3f/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=f8ae8963b4762e202270493e5a65a00d18e36a3f", "patch": "@@ -6008,7 +6008,7 @@\n       /* Insert new RN mode into FSCPR.  */\n       emit_insn (gen_rs6000_mffs (tmp_df));\n       tmp_di = simplify_gen_subreg (DImode, tmp_df, DFmode, 0);\n-      emit_insn (gen_anddi3 (tmp_di, tmp_di, GEN_INT (0xFFFFFFF8FFFFFFFF)));\n+      emit_insn (gen_anddi3 (tmp_di, tmp_di, GEN_INT (0xFFFFFFF8FFFFFFFFULL)));\n       emit_insn (gen_iordi3 (tmp_di, tmp_di, tmp_rn));\n \n       /* Need to write to field 7.  The fields are [0:15].  The equation to"}]}