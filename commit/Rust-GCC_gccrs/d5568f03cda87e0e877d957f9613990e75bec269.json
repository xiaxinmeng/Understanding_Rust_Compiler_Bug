{"sha": "d5568f03cda87e0e877d957f9613990e75bec269", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU1NjhmMDNjZGE4N2UwZTg3N2Q5NTdmOTYxMzk5MGU3NWJlYzI2OQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-06-11T21:56:08Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-06-11T21:56:08Z"}, "message": "bitmap.h (+bmp_iter_next_bit): New.\n\n\t* bitmap.h (+bmp_iter_next_bit): New.\n\t(bmp_iter_set, bmp_iter_and, bmp_iter_and_compl):\n\tUse it.\n\nFrom-SVN: r160637", "tree": {"sha": "6edcae1a220065b5aa70ffb364fc27ec8739365d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6edcae1a220065b5aa70ffb364fc27ec8739365d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5568f03cda87e0e877d957f9613990e75bec269", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5568f03cda87e0e877d957f9613990e75bec269", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5568f03cda87e0e877d957f9613990e75bec269", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5568f03cda87e0e877d957f9613990e75bec269/comments", "author": null, "committer": null, "parents": [{"sha": "5914a70f0b669ed041d200b8b6e67a6e601e2c66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5914a70f0b669ed041d200b8b6e67a6e601e2c66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5914a70f0b669ed041d200b8b6e67a6e601e2c66"}], "stats": {"total": 45, "additions": 30, "deletions": 15}, "files": [{"sha": "fa404da1723b44c76fa524f4089082153f83154a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5568f03cda87e0e877d957f9613990e75bec269/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5568f03cda87e0e877d957f9613990e75bec269/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d5568f03cda87e0e877d957f9613990e75bec269", "patch": "@@ -1,3 +1,9 @@\n+2010-06-11  Jan Hubicka  <jh@suse.cz>\n+\n+\t* bitmap.h (+bmp_iter_next_bit): New.\n+\t(bmp_iter_set, bmp_iter_and, bmp_iter_and_compl):\n+\tUse it.\n+\n 2010-06-11  Sandra Loosemore  <sandra@codesourcery.com>\n             Eric Botcazou  <ebotcazou@adacore.com>\n "}, {"sha": "68a46204a544460d90b3f34be45a834a52ae3893", "filename": "gcc/bitmap.h", "status": "modified", "additions": 24, "deletions": 15, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5568f03cda87e0e877d957f9613990e75bec269/gcc%2Fbitmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5568f03cda87e0e877d957f9613990e75bec269/gcc%2Fbitmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.h?ref=d5568f03cda87e0e877d957f9613990e75bec269", "patch": "@@ -385,6 +385,27 @@ bmp_iter_next (bitmap_iterator *bi, unsigned *bit_no)\n   *bit_no += 1;\n }\n \n+/* Advance to first set bit in BI.  */\n+\n+static inline void\n+bmp_iter_next_bit (bitmap_iterator * bi, unsigned *bit_no)\n+{\n+#if (GCC_VERSION >= 3004)\n+  {\n+    unsigned int n = __builtin_ctzl (bi->bits);\n+    gcc_assert (sizeof (unsigned long) == sizeof (BITMAP_WORD));\n+    bi->bits >>= n;\n+    *bit_no += n;\n+  }\n+#else\n+  while (!(bi->bits & 1))\n+    {\n+      bi->bits >>= 1;\n+      *bit_no += 1;\n+    }\n+#endif\n+}\n+\n /* Advance to the next nonzero bit of a single bitmap, we will have\n    already advanced past the just iterated bit.  Return true if there\n    is a bit to iterate.  */\n@@ -396,11 +417,7 @@ bmp_iter_set (bitmap_iterator *bi, unsigned *bit_no)\n   if (bi->bits)\n     {\n     next_bit:\n-      while (!(bi->bits & 1))\n-\t{\n-\t  bi->bits >>= 1;\n-\t  *bit_no += 1;\n-\t}\n+      bmp_iter_next_bit (bi, bit_no);\n       return true;\n     }\n \n@@ -443,11 +460,7 @@ bmp_iter_and (bitmap_iterator *bi, unsigned *bit_no)\n   if (bi->bits)\n     {\n     next_bit:\n-      while (!(bi->bits & 1))\n-\t{\n-\t  bi->bits >>= 1;\n-\t  *bit_no += 1;\n-\t}\n+      bmp_iter_next_bit (bi, bit_no);\n       return true;\n     }\n \n@@ -510,11 +523,7 @@ bmp_iter_and_compl (bitmap_iterator *bi, unsigned *bit_no)\n   if (bi->bits)\n     {\n     next_bit:\n-      while (!(bi->bits & 1))\n-\t{\n-\t  bi->bits >>= 1;\n-\t  *bit_no += 1;\n-\t}\n+      bmp_iter_next_bit (bi, bit_no);\n       return true;\n     }\n "}]}