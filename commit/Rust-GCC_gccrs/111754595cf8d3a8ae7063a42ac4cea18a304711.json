{"sha": "111754595cf8d3a8ae7063a42ac4cea18a304711", "node_id": "C_kwDOANBUbNoAKDExMTc1NDU5NWNmOGQzYThhZTcwNjNhNDJhYzRjZWExOGEzMDQ3MTE", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-02-04T14:50:17Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-03-07T14:45:21Z"}, "message": "opts: fix -gtoggle + optimize attribute\n\nNote -fvar-tracking is enabled automatically with OPT_LEVELS_1_PLUS and\nso we need to drop it if we are called from optimize attribute and the\noption is unset.\n\n\tPR middle-end/104381\n\ngcc/ChangeLog:\n\n\t* opts.cc (finish_options): If debug info is disabled\n\t(debug_info_level) and -fvar-tracking is unset, disable it.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/pr104381.c: New test.", "tree": {"sha": "f914e60d7576cd84a17fc86d8652671a19d9f01c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f914e60d7576cd84a17fc86d8652671a19d9f01c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/111754595cf8d3a8ae7063a42ac4cea18a304711", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/111754595cf8d3a8ae7063a42ac4cea18a304711", "html_url": "https://github.com/Rust-GCC/gccrs/commit/111754595cf8d3a8ae7063a42ac4cea18a304711", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/111754595cf8d3a8ae7063a42ac4cea18a304711/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02b7dd7f8233eb83f660cc021857be36cab2b846", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02b7dd7f8233eb83f660cc021857be36cab2b846", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02b7dd7f8233eb83f660cc021857be36cab2b846"}], "stats": {"total": 69, "additions": 48, "deletions": 21}, "files": [{"sha": "ef5fe9b11cafde5e6cec3fc62ecf2a2528ab28fa", "filename": "gcc/opts.cc", "status": "modified", "additions": 28, "deletions": 21, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/111754595cf8d3a8ae7063a42ac4cea18a304711/gcc%2Fopts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/111754595cf8d3a8ae7063a42ac4cea18a304711/gcc%2Fopts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.cc?ref=111754595cf8d3a8ae7063a42ac4cea18a304711", "patch": "@@ -1302,6 +1302,34 @@ finish_options (struct gcc_options *opts, struct gcc_options *opts_set,\n     SET_OPTION_IF_UNSET (opts, opts_set, flag_vect_cost_model,\n \t\t\t VECT_COST_MODEL_CHEAP);\n \n+  if (flag_gtoggle)\n+    {\n+      /* Make sure to process -gtoggle only once.  */\n+      flag_gtoggle = false;\n+      if (debug_info_level == DINFO_LEVEL_NONE)\n+\t{\n+\t  debug_info_level = DINFO_LEVEL_NORMAL;\n+\n+\t  if (write_symbols == NO_DEBUG)\n+\t    write_symbols = PREFERRED_DEBUGGING_TYPE;\n+\t}\n+      else\n+\tdebug_info_level = DINFO_LEVEL_NONE;\n+    }\n+\n+  if (!OPTION_SET_P (debug_nonbind_markers_p))\n+    debug_nonbind_markers_p\n+      = (optimize\n+\t && debug_info_level >= DINFO_LEVEL_NORMAL\n+\t && dwarf_debuginfo_p ()\n+\t && !(flag_selective_scheduling || flag_selective_scheduling2));\n+\n+  /* Note -fvar-tracking is enabled automatically with OPT_LEVELS_1_PLUS and\n+     so we need to drop it if we are called from optimize attribute.  */\n+  if (debug_info_level == DINFO_LEVEL_NONE\n+      && !OPTION_SET_P (flag_var_tracking))\n+    flag_var_tracking = false;\n+\n   /* One could use EnabledBy, but it would lead to a circular dependency.  */\n   if (!OPTION_SET_P (flag_var_tracking_uninit))\n      flag_var_tracking_uninit = flag_var_tracking;\n@@ -1328,27 +1356,6 @@ finish_options (struct gcc_options *opts, struct gcc_options *opts_set,\n       profile_flag = 0;\n     }\n \n-  if (flag_gtoggle)\n-    {\n-      /* Make sure to process -gtoggle only once.  */\n-      flag_gtoggle = false;\n-      if (debug_info_level == DINFO_LEVEL_NONE)\n-\t{\n-\t  debug_info_level = DINFO_LEVEL_NORMAL;\n-\n-\t  if (write_symbols == NO_DEBUG)\n-\t    write_symbols = PREFERRED_DEBUGGING_TYPE;\n-\t}\n-      else\n-\tdebug_info_level = DINFO_LEVEL_NONE;\n-    }\n-\n-  if (!OPTION_SET_P (debug_nonbind_markers_p))\n-    debug_nonbind_markers_p\n-      = (optimize\n-\t && debug_info_level >= DINFO_LEVEL_NORMAL\n-\t && dwarf_debuginfo_p ()\n-\t && !(flag_selective_scheduling || flag_selective_scheduling2));\n \n   diagnose_options (opts, opts_set, loc);\n }"}, {"sha": "a3aec919beedc5cbb63378f82bcaa9389eb018ee", "filename": "gcc/testsuite/gcc.dg/pr104381.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/111754595cf8d3a8ae7063a42ac4cea18a304711/gcc%2Ftestsuite%2Fgcc.dg%2Fpr104381.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/111754595cf8d3a8ae7063a42ac4cea18a304711/gcc%2Ftestsuite%2Fgcc.dg%2Fpr104381.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr104381.c?ref=111754595cf8d3a8ae7063a42ac4cea18a304711", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -g -gtoggle -fdump-tree-optimized\" } */\n+\n+int foo (int x)\n+{\n+  int tem = x + 1;\n+  int tem2 = tem - 1;\n+  return tem2;\n+}\n+\n+int\n+__attribute__((optimize(\"no-tree-pre\")))\n+bar (int x)\n+{\n+  int tem = x + 1;\n+  int tem2 = tem - 1;\n+  return tem2;\n+}\n+\n+// { dg-final { scan-tree-dump-not \"DEBUG \" \"optimized\" } }"}]}