{"sha": "dd1ba632e78c78e10bdc5c70fa07b1946ffa9ae9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQxYmE2MzJlNzhjNzhlMTBiZGM1YzcwZmEwN2IxOTQ2ZmZhOWFlOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@casey.cygnus.com", "date": "2000-03-10T19:50:09Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-03-10T19:50:09Z"}, "message": "builtins.c (expand_builtin_strlen): Make sure that we have something at the beginning of the sequence.\n\n        * builtins.c (expand_builtin_strlen): Make sure that we have something\n        at the beginning of the sequence.\n\n        * toplev.c (rest_of_compilation): Also set TREE_NOTHROW for\n        deferred inlines.\n\n        * invoke.texi (C++ Dialect Options): Document -fno-enforce-eh-specs.\n\nFrom-SVN: r32473", "tree": {"sha": "11522170f443932489f0ab341701a866c7b110ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11522170f443932489f0ab341701a866c7b110ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd1ba632e78c78e10bdc5c70fa07b1946ffa9ae9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd1ba632e78c78e10bdc5c70fa07b1946ffa9ae9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd1ba632e78c78e10bdc5c70fa07b1946ffa9ae9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd1ba632e78c78e10bdc5c70fa07b1946ffa9ae9/comments", "author": null, "committer": null, "parents": [{"sha": "8ad52449ba05e1481e381daebca6cf152ea68986", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ad52449ba05e1481e381daebca6cf152ea68986", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ad52449ba05e1481e381daebca6cf152ea68986"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "e56848c593784160f7ad905e58527b0b29bf5d05", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1ba632e78c78e10bdc5c70fa07b1946ffa9ae9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1ba632e78c78e10bdc5c70fa07b1946ffa9ae9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd1ba632e78c78e10bdc5c70fa07b1946ffa9ae9", "patch": "@@ -1,3 +1,13 @@\n+2000-03-10  Jason Merrill  <jason@casey.cygnus.com>\n+\n+\t* builtins.c (expand_builtin_strlen): Make sure that we have something\n+\tat the beginning of the sequence.\n+\n+\t* toplev.c (rest_of_compilation): Also set TREE_NOTHROW for\n+\tdeferred inlines.\n+\n+\t* invoke.texi (C++ Dialect Options): Document -fno-enforce-eh-specs.\n+\n 2000-03-10  Richard Henderson  <rth@cygnus.com>\n \n \t* except.c (can_throw): Use INTVAL on a CONST_INT."}, {"sha": "14dddf1a9db126933aec6ca705feb330625aeb65", "filename": "gcc/builtins.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1ba632e78c78e10bdc5c70fa07b1946ffa9ae9/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1ba632e78c78e10bdc5c70fa07b1946ffa9ae9/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=dd1ba632e78c78e10bdc5c70fa07b1946ffa9ae9", "patch": "@@ -1381,6 +1381,8 @@ expand_builtin_strlen (exp, target, mode)\n       /* Mark the beginning of the strlen sequence so we can emit the\n \t source operand later.  */\n       before_strlen = get_last_insn();\n+      if (before_strlen == NULL_RTX)\n+\tbefore_strlen = emit_note (0, NOTE_INSN_DELETED);\n \n       /* Check the string is readable and has an end.  */\n       if (current_function_check_memory_usage)"}, {"sha": "837c48ba855d08442761b5db58d10a9a574ba680", "filename": "gcc/invoke.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1ba632e78c78e10bdc5c70fa07b1946ffa9ae9/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1ba632e78c78e10bdc5c70fa07b1946ffa9ae9/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=dd1ba632e78c78e10bdc5c70fa07b1946ffa9ae9", "patch": "@@ -1064,6 +1064,12 @@ which is only used to initialize another object of the same type.\n Specifying this option disables that optimization, and forces g++ to\n call the copy constructor in all cases.\n \n+@item -fno-enforce-eh-specs\n+Don't check for violation of exception specifications at runtime.  This\n+option violates the C++ standard, but may be useful for reducing code\n+size in production builds, much like defining @samp{NDEBUG}.  The compiler\n+will still optimize based on the exception specifications.\n+\n @item -fexternal-templates\n Cause template instantiations to obey @samp{#pragma interface} and\n @samp{implementation}; template instances are emitted or not according"}, {"sha": "aab5c3055bfae9f4ea2f4c6de7e2c87db118d889", "filename": "gcc/toplev.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1ba632e78c78e10bdc5c70fa07b1946ffa9ae9/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1ba632e78c78e10bdc5c70fa07b1946ffa9ae9/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=dd1ba632e78c78e10bdc5c70fa07b1946ffa9ae9", "patch": "@@ -2967,6 +2967,12 @@ rest_of_compilation (decl)\n \t      optimize = saved_optimize;\n \t    }\n \n+\t  current_function_nothrow = nothrow_function_p ();\n+\t  if (current_function_nothrow)\n+\t    /* Now we know that this can't throw; set the flag for the benefit\n+\t       of other functions later in this translation unit.  */\n+\t    TREE_NOTHROW (current_function_decl) = 1;\n+\n \t  note_deferral_of_defined_inline_function (decl);\n \t  TIMEVAR (integration_time, save_for_inline_nocopy (decl));\n \t  DECL_SAVED_INSNS (decl)->inlinable = inlinable;"}]}