{"sha": "359ea407e98009b6734ace47175c840a30ca4271", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU5ZWE0MDdlOTgwMDliNjczNGFjZTQ3MTc1Yzg0MGEzMGNhNDI3MQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-03-19T20:47:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-03-19T20:47:29Z"}, "message": "re PR sanitizer/84761 (AddressSanitizer is not compatible with glibc 2.27 on x86)\n\n\tPR sanitizer/84761\n\t* sanitizer_common/sanitizer_linux_libcdep.cc (__GLIBC_PREREQ):\n\tDefine if not defined.\n\t(DL_INTERNAL_FUNCTION): Don't define.\n\t(InitTlsSize): For __i386__ if not compiled against glibc 2.27+\n\tdetermine at runtime whether to use regparm(3), stdcall calling\n\tconvention for older glibcs or normal calling convention for\n\tnewer glibcs for call to _dl_get_tls_static_info.\n\nFrom-SVN: r258663", "tree": {"sha": "f2200269164a2149ab11c0c7dd05d586b67e57c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2200269164a2149ab11c0c7dd05d586b67e57c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/359ea407e98009b6734ace47175c840a30ca4271", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/359ea407e98009b6734ace47175c840a30ca4271", "html_url": "https://github.com/Rust-GCC/gccrs/commit/359ea407e98009b6734ace47175c840a30ca4271", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/359ea407e98009b6734ace47175c840a30ca4271/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "42f8338d592506ccafe30a639b60f73d510c643e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42f8338d592506ccafe30a639b60f73d510c643e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42f8338d592506ccafe30a639b60f73d510c643e"}], "stats": {"total": 54, "additions": 40, "deletions": 14}, "files": [{"sha": "57d5640ac6c212fedc616a743293a48650602b47", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/359ea407e98009b6734ace47175c840a30ca4271/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/359ea407e98009b6734ace47175c840a30ca4271/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=359ea407e98009b6734ace47175c840a30ca4271", "patch": "@@ -1,3 +1,14 @@\n+2018-03-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/84761\n+\t* sanitizer_common/sanitizer_linux_libcdep.cc (__GLIBC_PREREQ):\n+\tDefine if not defined.\n+\t(DL_INTERNAL_FUNCTION): Don't define.\n+\t(InitTlsSize): For __i386__ if not compiled against glibc 2.27+\n+\tdetermine at runtime whether to use regparm(3), stdcall calling\n+\tconvention for older glibcs or normal calling convention for\n+\tnewer glibcs for call to _dl_get_tls_static_info.\n+\n 2018-03-14  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* sanitizer_common/sanitizer_stacktrace.cc"}, {"sha": "d27a84358024c120ea24a2f6535fea939fbaec95", "filename": "libsanitizer/sanitizer_common/sanitizer_linux_libcdep.cc", "status": "modified", "additions": 29, "deletions": 14, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/359ea407e98009b6734ace47175c840a30ca4271/libsanitizer%2Fsanitizer_common%2Fsanitizer_linux_libcdep.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/359ea407e98009b6734ace47175c840a30ca4271/libsanitizer%2Fsanitizer_common%2Fsanitizer_linux_libcdep.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_linux_libcdep.cc?ref=359ea407e98009b6734ace47175c840a30ca4271", "patch": "@@ -147,29 +147,44 @@ bool SanitizerGetThreadName(char *name, int max_len) {\n #endif\n }\n \n+#ifndef __GLIBC_PREREQ\n+#define __GLIBC_PREREQ(x, y) 0\n+#endif\n+\n #if !SANITIZER_FREEBSD && !SANITIZER_ANDROID && !SANITIZER_GO && \\\n     !SANITIZER_NETBSD\n static uptr g_tls_size;\n \n-#ifdef __i386__\n-# define DL_INTERNAL_FUNCTION __attribute__((regparm(3), stdcall))\n-#else\n-# define DL_INTERNAL_FUNCTION\n-#endif\n-\n void InitTlsSize() {\n // all current supported platforms have 16 bytes stack alignment\n   const size_t kStackAlign = 16;\n-  typedef void (*get_tls_func)(size_t*, size_t*) DL_INTERNAL_FUNCTION;\n-  get_tls_func get_tls;\n-  void *get_tls_static_info_ptr = dlsym(RTLD_NEXT, \"_dl_get_tls_static_info\");\n-  CHECK_EQ(sizeof(get_tls), sizeof(get_tls_static_info_ptr));\n-  internal_memcpy(&get_tls, &get_tls_static_info_ptr,\n-                  sizeof(get_tls_static_info_ptr));\n-  CHECK_NE(get_tls, 0);\n   size_t tls_size = 0;\n   size_t tls_align = 0;\n-  get_tls(&tls_size, &tls_align);\n+  void *get_tls_static_info_ptr = dlsym(RTLD_NEXT, \"_dl_get_tls_static_info\");\n+#if defined(__i386__) && !__GLIBC_PREREQ(2, 27)\n+  /* On i?86, _dl_get_tls_static_info used to be internal_function, i.e.\n+     __attribute__((regparm(3), stdcall)) before glibc 2.27 and is normal\n+     function in 2.27 and later.  */\n+  if (!dlvsym(RTLD_NEXT, \"glob\", \"GLIBC_2.27\")) {\n+    typedef void (*get_tls_func)(size_t*, size_t*)\n+      __attribute__((regparm(3), stdcall));\n+    get_tls_func get_tls;\n+    CHECK_EQ(sizeof(get_tls), sizeof(get_tls_static_info_ptr));\n+    internal_memcpy(&get_tls, &get_tls_static_info_ptr,\n+                    sizeof(get_tls_static_info_ptr));\n+    CHECK_NE(get_tls, 0);\n+    get_tls(&tls_size, &tls_align);\n+  } else\n+#endif\n+  {\n+    typedef void (*get_tls_func)(size_t*, size_t*);\n+    get_tls_func get_tls;\n+    CHECK_EQ(sizeof(get_tls), sizeof(get_tls_static_info_ptr));\n+    internal_memcpy(&get_tls, &get_tls_static_info_ptr,\n+                    sizeof(get_tls_static_info_ptr));\n+    CHECK_NE(get_tls, 0);\n+    get_tls(&tls_size, &tls_align);\n+  }\n   if (tls_align < kStackAlign)\n     tls_align = kStackAlign;\n   g_tls_size = RoundUpTo(tls_size, tls_align);"}]}