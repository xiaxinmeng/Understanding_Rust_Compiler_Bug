{"sha": "7cbd4c5e848e97666ca4703aff9ea1c36881f39a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NiZDRjNWU4NDhlOTc2NjZjYTQ3MDNhZmY5ZWExYzM2ODgxZjM5YQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-02-06T17:40:52Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-02-06T17:40:52Z"}, "message": "Factor uses of build_pairwise_scheduling.\n\n2010-01-20  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-dependences.c (build_pairwise_scheduling_equality): Removed.\n\t(build_pairwise_scheduling_inequality): Renamed build_pairwise_scheduling.\n\t(lexicographically_gt_p): Change type of direction to int.\n\t(build_lexicographically_gt_constraint): Same.\n\t(dependence_polyhedron_1): Same.\n\t(dependence_polyhedron): Same.\n\t(pddr_original_scattering): Use integers for direction.\n\t(pddr_transformed_scattering): Same.\n\t(graphite_legal_transform_dr): Same.\n\t(graphite_carried_dependence_level_k): Same.\n\nFrom-SVN: r156542", "tree": {"sha": "6fce155eadb41c14bc1dfb460306c0550451f48a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fce155eadb41c14bc1dfb460306c0550451f48a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cbd4c5e848e97666ca4703aff9ea1c36881f39a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cbd4c5e848e97666ca4703aff9ea1c36881f39a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cbd4c5e848e97666ca4703aff9ea1c36881f39a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cbd4c5e848e97666ca4703aff9ea1c36881f39a/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "429ba7409063a0877d79d76dfa2eff7e44b3b6d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/429ba7409063a0877d79d76dfa2eff7e44b3b6d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/429ba7409063a0877d79d76dfa2eff7e44b3b6d9"}], "stats": {"total": 91, "additions": 49, "deletions": 42}, "files": [{"sha": "a160dde48dcb00d639bc55d00a4a1cac14d1cb16", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cbd4c5e848e97666ca4703aff9ea1c36881f39a/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cbd4c5e848e97666ca4703aff9ea1c36881f39a/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=7cbd4c5e848e97666ca4703aff9ea1c36881f39a", "patch": "@@ -1,3 +1,16 @@\n+2010-01-20  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-dependences.c (build_pairwise_scheduling_equality): Removed.\n+\t(build_pairwise_scheduling_inequality): Renamed build_pairwise_scheduling.\n+\t(lexicographically_gt_p): Change type of direction to int.\n+\t(build_lexicographically_gt_constraint): Same.\n+\t(dependence_polyhedron_1): Same.\n+\t(dependence_polyhedron): Same.\n+\t(pddr_original_scattering): Use integers for direction.\n+\t(pddr_transformed_scattering): Same.\n+\t(graphite_legal_transform_dr): Same.\n+\t(graphite_carried_dependence_level_k): Same.\n+\n 2010-01-20  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-dependences.c (build_pairwise_constraint): Renamed"}, {"sha": "bc9d2708133d2f83f112270fc321d0bbc9c1b4b6", "filename": "gcc/graphite-dependences.c", "status": "modified", "additions": 36, "deletions": 42, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cbd4c5e848e97666ca4703aff9ea1c36881f39a/gcc%2Fgraphite-dependences.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cbd4c5e848e97666ca4703aff9ea1c36881f39a/gcc%2Fgraphite-dependences.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-dependences.c?ref=7cbd4c5e848e97666ca4703aff9ea1c36881f39a", "patch": "@@ -216,48 +216,43 @@ dr_equality_constraints (graphite_dim_t dim,\n   return res;\n }\n \n-/* Builds scheduling equality constraints.  */\n+/* Builds scheduling inequality constraints: when DIRECTION is\n+   1 builds a GE constraint,\n+   0 builds an EQ constraint,\n+   -1 builds a LE constraint.  */\n \n static ppl_Pointset_Powerset_C_Polyhedron_t\n-build_pairwise_scheduling_equality (graphite_dim_t dim,\n-\t\t                    graphite_dim_t pos, graphite_dim_t offset)\n+build_pairwise_scheduling (graphite_dim_t dim,\n+\t\t\t   graphite_dim_t pos,\n+\t\t\t   graphite_dim_t offset,\n+\t\t\t   int direction)\n {\n   ppl_Pointset_Powerset_C_Polyhedron_t res;\n   ppl_Polyhedron_t equalities;\n   ppl_Constraint_t cstr;\n \n   ppl_new_C_Polyhedron_from_space_dimension (&equalities, dim, 0);\n \n-  cstr = ppl_build_relation (dim, pos, pos + offset, 0,\n-\t\t\t     PPL_CONSTRAINT_TYPE_EQUAL);\n-  ppl_Polyhedron_add_constraint (equalities, cstr);\n-  ppl_delete_Constraint (cstr);\n-\n-  ppl_new_Pointset_Powerset_C_Polyhedron_from_C_Polyhedron (&res, equalities);\n-  ppl_delete_Polyhedron (equalities);\n-  return res;\n-}\n-\n-/* Builds scheduling inequality constraints.  */\n+  switch (direction)\n+    {\n+    case -1:\n+      cstr = ppl_build_relation (dim, pos, pos + offset, 1,\n+\t\t\t\t PPL_CONSTRAINT_TYPE_LESS_OR_EQUAL);\n+      break;\n \n-static ppl_Pointset_Powerset_C_Polyhedron_t\n-build_pairwise_scheduling_inequality (graphite_dim_t dim,\n-\t\t\t\t      graphite_dim_t pos,\n-\t\t\t\t      graphite_dim_t offset,\n-\t\t\t\t      bool direction)\n-{\n-  ppl_Pointset_Powerset_C_Polyhedron_t res;\n-  ppl_Polyhedron_t equalities;\n-  ppl_Constraint_t cstr;\n+    case 0:\n+      cstr = ppl_build_relation (dim, pos, pos + offset, 0,\n+\t\t\t\t PPL_CONSTRAINT_TYPE_EQUAL);\n+      break;\n \n-  ppl_new_C_Polyhedron_from_space_dimension (&equalities, dim, 0);\n+    case 1:\n+      cstr = ppl_build_relation (dim, pos, pos + offset, -1,\n+\t\t\t\t PPL_CONSTRAINT_TYPE_GREATER_OR_EQUAL);\n+      break;\n \n-  if (direction)\n-    cstr = ppl_build_relation (dim, pos, pos + offset, -1,\n-\t\t\t       PPL_CONSTRAINT_TYPE_GREATER_OR_EQUAL);\n-  else\n-    cstr = ppl_build_relation (dim, pos, pos + offset, 1,\n-\t\t\t       PPL_CONSTRAINT_TYPE_LESS_OR_EQUAL);\n+    default:\n+      gcc_unreachable ();\n+    }\n \n   ppl_Polyhedron_add_constraint (equalities, cstr);\n   ppl_delete_Constraint (cstr);\n@@ -274,13 +269,12 @@ static bool\n lexicographically_gt_p (ppl_Pointset_Powerset_C_Polyhedron_t res,\n \t\t\tgraphite_dim_t dim,\n \t\t\tgraphite_dim_t offset,\n-\t\t\tbool direction, graphite_dim_t i)\n+\t\t\tint direction, graphite_dim_t i)\n {\n   ppl_Pointset_Powerset_C_Polyhedron_t ineq;\n   bool empty_p;\n \n-  ineq = build_pairwise_scheduling_inequality (dim, i, offset,\n-\t\t\t\t\t       direction);\n+  ineq = build_pairwise_scheduling (dim, i, offset, direction);\n   ppl_Pointset_Powerset_C_Polyhedron_intersection_assign (ineq, res);\n   empty_p = ppl_Pointset_Powerset_C_Polyhedron_is_empty (ineq);\n   if (!empty_p)\n@@ -298,7 +292,7 @@ build_lexicographically_gt_constraint (ppl_Pointset_Powerset_C_Polyhedron_t *res\n \t\t\t\t       graphite_dim_t dim,\n \t\t\t\t       graphite_dim_t tdim1,\n \t\t\t\t       graphite_dim_t offset,\n-\t\t\t\t       bool direction)\n+\t\t\t\t       int direction)\n {\n   graphite_dim_t i;\n \n@@ -309,7 +303,7 @@ build_lexicographically_gt_constraint (ppl_Pointset_Powerset_C_Polyhedron_t *res\n     {\n       ppl_Pointset_Powerset_C_Polyhedron_t sceq;\n \n-      sceq = build_pairwise_scheduling_equality (dim, i, offset);\n+      sceq = build_pairwise_scheduling (dim, i, offset, 0);\n       ppl_Pointset_Powerset_C_Polyhedron_intersection_assign (*res, sceq);\n       ppl_delete_Pointset_Powerset_C_Polyhedron (sceq);\n \n@@ -341,7 +335,7 @@ dependence_polyhedron_1 (poly_bb_p pbb1, poly_bb_p pbb2,\n \t\t         ppl_Pointset_Powerset_C_Polyhedron_t d2,\n \t\t         poly_dr_p pdr1, poly_dr_p pdr2,\n \t                 ppl_Polyhedron_t s1, ppl_Polyhedron_t s2,\n-\t\t         bool direction,\n+\t\t         int direction,\n \t\t         bool original_scattering_p)\n {\n   scop_p scop = PBB_SCOP (pbb1);\n@@ -419,7 +413,7 @@ dependence_polyhedron (poly_bb_p pbb1, poly_bb_p pbb2,\n \t\t       ppl_Pointset_Powerset_C_Polyhedron_t d2,\n \t\t       poly_dr_p pdr1, poly_dr_p pdr2,\n \t               ppl_Polyhedron_t s1, ppl_Polyhedron_t s2,\n-\t\t       bool direction,\n+\t\t       int direction,\n \t\t       bool original_scattering_p)\n {\n   PTR *x = NULL;\n@@ -470,7 +464,7 @@ pddr_original_scattering (poly_bb_p pbb1, poly_bb_p pbb2,\n     return NULL;\n \n   pddr = dependence_polyhedron (pbb1, pbb2, d1, d2, pdr1, pdr2, so1, so2,\n-\t\t\t\ttrue, true);\n+\t\t\t\t1, true);\n   if (pddr_is_empty (pddr))\n     return NULL;\n \n@@ -497,7 +491,7 @@ pddr_transformed_scattering (poly_bb_p pbb1, poly_bb_p pbb2,\n     return NULL;\n \n   pddr = dependence_polyhedron (pbb1, pbb2, d1, d2, pdr1, pdr2, st1, st2,\n-\t\t\t\ttrue, false);\n+\t\t\t\t1, false);\n   if (pddr_is_empty (pddr))\n     return NULL;\n \n@@ -585,7 +579,7 @@ graphite_legal_transform_dr (poly_bb_p pbb1, poly_bb_p pbb2,\n   ppl_Pointset_Powerset_C_Polyhedron_intersection_assign (temp, po);\n \n   pddr = dependence_polyhedron (pbb1, pbb2, d1, d2, pdr1, pdr2, st1, st2,\n-\t\t\t\tfalse, false);\n+\t\t\t\t-1, false);\n   pt = PDDR_DDP (pddr);\n \n   /* Extend PO and PT to have the same dimensions.  */\n@@ -755,14 +749,14 @@ graphite_carried_dependence_level_k (poly_dr_p pdr1, poly_dr_p pdr2,\n     return false;\n \n   pddr = dependence_polyhedron (pbb1, pbb2, d1, d2, pdr1, pdr2, so1, so2,\n-\t\t\t\ttrue, false);\n+\t\t\t\t1, false);\n \n   if (pddr_is_empty (pddr))\n     return false;\n \n   po = PDDR_DDP (pddr);\n   ppl_Pointset_Powerset_C_Polyhedron_space_dimension (po, &dim);\n-  eqpp = build_pairwise_scheduling_inequality (dim, level, tdim1 + ddim1, 1);\n+  eqpp = build_pairwise_scheduling (dim, level, tdim1 + ddim1, 1);\n \n   ppl_Pointset_Powerset_C_Polyhedron_intersection_assign (eqpp, po);\n   empty_p = ppl_Pointset_Powerset_C_Polyhedron_is_empty (eqpp);"}]}