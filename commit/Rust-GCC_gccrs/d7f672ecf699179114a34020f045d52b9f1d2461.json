{"sha": "d7f672ecf699179114a34020f045d52b9f1d2461", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdmNjcyZWNmNjk5MTc5MTE0YTM0MDIwZjA0NWQ1MmI5ZjFkMjQ2MQ==", "commit": {"author": {"name": "Andrey Belevantsev", "email": "abel@ispras.ru", "date": "2010-12-22T07:46:53Z"}, "committer": {"name": "Andrey Belevantsev", "email": "abel@gcc.gnu.org", "date": "2010-12-22T07:46:53Z"}, "message": "re PR rtl-optimization/45352 (ICE: in reset_sched_cycles_in_current_ebb, at sel-sched.c:7058)\n\n\tPR rtl-optimization/45352\n\tPR rtl-optimization/46521\n\tPR rtl-optimization/46522\n\t* sel-sched.c (reset_sched_cycles_in_current_ebb): Recheck the DFA state\n\ton the last iteration of the advancing loop.\n\t(sel_sched_region_1): Propagate the rescheduling bit to the next block\n\talso for empty blocks.\n\n\t* gcc.dg/pr46521.c: New.\n\t* gcc.dg/pr46522.c: New.\n\nFrom-SVN: r168164", "tree": {"sha": "82073ce3ad5d93cd8db010086551d856ac634f10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82073ce3ad5d93cd8db010086551d856ac634f10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7f672ecf699179114a34020f045d52b9f1d2461", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7f672ecf699179114a34020f045d52b9f1d2461", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7f672ecf699179114a34020f045d52b9f1d2461", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7f672ecf699179114a34020f045d52b9f1d2461/comments", "author": {"login": "abonzo", "id": 20396542, "node_id": "MDQ6VXNlcjIwMzk2NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/20396542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abonzo", "html_url": "https://github.com/abonzo", "followers_url": "https://api.github.com/users/abonzo/followers", "following_url": "https://api.github.com/users/abonzo/following{/other_user}", "gists_url": "https://api.github.com/users/abonzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/abonzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abonzo/subscriptions", "organizations_url": "https://api.github.com/users/abonzo/orgs", "repos_url": "https://api.github.com/users/abonzo/repos", "events_url": "https://api.github.com/users/abonzo/events{/privacy}", "received_events_url": "https://api.github.com/users/abonzo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d7ab2512cd9b4330fb12d86d49219782375e3ac4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7ab2512cd9b4330fb12d86d49219782375e3ac4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7ab2512cd9b4330fb12d86d49219782375e3ac4"}], "stats": {"total": 99, "additions": 91, "deletions": 8}, "files": [{"sha": "60d8c64ed856f182afd688f7e857528601db01bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f672ecf699179114a34020f045d52b9f1d2461/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f672ecf699179114a34020f045d52b9f1d2461/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d7f672ecf699179114a34020f045d52b9f1d2461", "patch": "@@ -1,3 +1,13 @@\n+2010-12-22  Andrey Belevantsev  <abel@ispras.ru>\n+\n+\tPR rtl-optimization/45352\n+\tPR rtl-optimization/46521\n+\tPR rtl-optimization/46522\n+\t* sel-sched.c (reset_sched_cycles_in_current_ebb): Recheck the DFA state\n+\ton the last iteration of the advancing loop.\n+\t(sel_sched_region_1): Propagate the rescheduling bit to the next block\n+\talso for empty blocks. \n+\n 2010-12-22  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/46724"}, {"sha": "edd6cb9d3cd3625431e06b25cfe2fbd30f001f1f", "filename": "gcc/sel-sched.c", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f672ecf699179114a34020f045d52b9f1d2461/gcc%2Fsel-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f672ecf699179114a34020f045d52b9f1d2461/gcc%2Fsel-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched.c?ref=d7f672ecf699179114a34020f045d52b9f1d2461", "patch": "@@ -7053,7 +7053,17 @@ reset_sched_cycles_in_current_ebb (void)\n                   && haifa_cost > 0\n                   && estimate_insn_cost (insn, curr_state) == 0)\n                 break;\n-\t    }\n+\n+              /* When the data dependency stall is longer than the DFA stall,\n+                 it could be that after the longer stall the insn will again\n+                 become unavailable  to the DFA restrictions.  Looks strange\n+                 but happens e.g. on x86-64.  So recheck DFA on the last\n+                 iteration.  */\n+              if (after_stall\n+                  && real_insn\n+                  && haifa_cost == 0)\n+                haifa_cost = estimate_insn_cost (insn, curr_state);\n+            }\n \n \t  haifa_clock += i;\n           if (sched_verbose >= 2)\n@@ -7504,21 +7514,23 @@ sel_sched_region_1 (void)\n             {\n               basic_block bb = EBB_FIRST_BB (i);\n \n-              if (sel_bb_empty_p (bb))\n-                {\n-                  bitmap_clear_bit (blocks_to_reschedule, bb->index);\n-                  continue;\n-                }\n-\n               if (bitmap_bit_p (blocks_to_reschedule, bb->index))\n                 {\n+                  if (! bb_ends_ebb_p (bb))\n+                    bitmap_set_bit (blocks_to_reschedule, bb_next_bb (bb)->index);\n+                  if (sel_bb_empty_p (bb))\n+                    {\n+                      bitmap_clear_bit (blocks_to_reschedule, bb->index);\n+                      continue;\n+                    }\n                   clear_outdated_rtx_info (bb);\n                   if (sel_insn_is_speculation_check (BB_END (bb))\n                       && JUMP_P (BB_END (bb)))\n                     bitmap_set_bit (blocks_to_reschedule,\n                                     BRANCH_EDGE (bb)->dest->index);\n                 }\n-              else if (INSN_SCHED_TIMES (sel_bb_head (bb)) <= 0)\n+              else if (! sel_bb_empty_p (bb)\n+                       && INSN_SCHED_TIMES (sel_bb_head (bb)) <= 0)\n                 bitmap_set_bit (blocks_to_reschedule, bb->index);\n             }\n "}, {"sha": "65af694706ee3c7890a3e76bc401fc88ab47fdda", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f672ecf699179114a34020f045d52b9f1d2461/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f672ecf699179114a34020f045d52b9f1d2461/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d7f672ecf699179114a34020f045d52b9f1d2461", "patch": "@@ -1,3 +1,11 @@\n+2010-12-22  Andrey Belevantsev  <abel@ispras.ru>\n+\n+\tPR rtl-optimization/45352\n+\tPR rtl-optimization/46521\n+\tPR rtl-optimization/46522\n+\t* gcc.dg/pr46521.c: New.\n+\t* gcc.dg/pr46522.c: New. \n+\n 2010-12-21  Ian Lance Taylor  <iant@google.com>\n \n \t* go.test/go-test.exp: Clear runtests around invocation of"}, {"sha": "0c41c4328f88781411d738dfdd06b10bbdec4218", "filename": "gcc/testsuite/gcc.dg/pr46521.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f672ecf699179114a34020f045d52b9f1d2461/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46521.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f672ecf699179114a34020f045d52b9f1d2461/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46521.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46521.c?ref=d7f672ecf699179114a34020f045d52b9f1d2461", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-options \"-Os -fselective-scheduling2 -fsel-sched-pipelining -fprofile-generate -fno-early-inlining\" } */\n+\n+static void bmp_iter_next (int *bi)\n+{\n+  *bi >>= 1;\n+}\n+\n+int bmp_iter_set (int *, int);\n+void bitmap_clear (void);\n+void bitmap_initialize_stat (void);\n+\n+void df_md_alloc (int bi, int bb_index, int bb_info)\n+{\n+  for (; bmp_iter_set (&bi, bb_index); bmp_iter_next (&bi))\n+    if (bb_info)\n+      bitmap_clear ();\n+    else\n+      bitmap_initialize_stat ();\n+}"}, {"sha": "13a5aa9da57520db7b7336f68f35576fa437af1f", "filename": "gcc/testsuite/gcc.dg/pr46522.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f672ecf699179114a34020f045d52b9f1d2461/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46522.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f672ecf699179114a34020f045d52b9f1d2461/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46522.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46522.c?ref=d7f672ecf699179114a34020f045d52b9f1d2461", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-options \"-O3 -fkeep-inline-functions -fsel-sched-pipelining -fselective-scheduling2 -funroll-loops\" } */\n+\n+struct S\n+{\n+  unsigned i, j;\n+};\n+\n+static inline void\n+bar (struct S *s)\n+{\n+  if (s->i++ == 1)\n+    {\n+      s->i = 0;\n+      s->j++;\n+    }\n+}\n+\n+void\n+foo1 (struct S *s)\n+{\n+  bar (s);\n+}\n+\n+void\n+foo2 (struct S s1, struct S s2, int i)\n+{\n+  while (s1.i != s2.i) {\n+    if (i)\n+      *(unsigned *) 0 |= (1U << s1.i);\n+    bar (&s1);\n+  }\n+}"}]}