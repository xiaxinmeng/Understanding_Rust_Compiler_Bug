{"sha": "c381174498de37235d62c1417c067bfecedf94c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM4MTE3NDQ5OGRlMzcyMzVkNjJjMTQxN2MwNjdiZmVjZWRmOTRjNA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2016-06-07T07:36:02Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2016-06-07T07:36:02Z"}, "message": "diagnostic.c (diagnostic_impl, [...]): New.\n\n2016-06-07  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* diagnostic.c (diagnostic_impl, diagnostic_n_impl): New.\n\t(inform, inform_at_rich_loc, inform_n, warning, warning_at,\n\twarning_at_rich_loc, warning_n, pedwarn, permerror,\n\tpermerror_at_rich_loc, error, error_n, error_at, error_at_rich_loc,\n\tsorry, fatal_error, internal_error, internal_error_no_backtrace):\n\tUse the above.\n\nFrom-SVN: r237168", "tree": {"sha": "0a37d7e58c4855543795df77108907607d57d27a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a37d7e58c4855543795df77108907607d57d27a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c381174498de37235d62c1417c067bfecedf94c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c381174498de37235d62c1417c067bfecedf94c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c381174498de37235d62c1417c067bfecedf94c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c381174498de37235d62c1417c067bfecedf94c4/comments", "author": null, "committer": null, "parents": [{"sha": "6b80d6fa72d99c5531ba8607bf2483e94a3b0a3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b80d6fa72d99c5531ba8607bf2483e94a3b0a3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b80d6fa72d99c5531ba8607bf2483e94a3b0a3d"}], "stats": {"total": 217, "additions": 90, "deletions": 127}, "files": [{"sha": "3c2825c99c7f753e833de9ca14ee230df47ca559", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c381174498de37235d62c1417c067bfecedf94c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c381174498de37235d62c1417c067bfecedf94c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c381174498de37235d62c1417c067bfecedf94c4", "patch": "@@ -1,3 +1,12 @@\n+2016-06-07  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* diagnostic.c (diagnostic_impl, diagnostic_n_impl): New.\n+\t(inform, inform_at_rich_loc, inform_n, warning, warning_at,\n+\twarning_at_rich_loc, warning_n, pedwarn, permerror,\n+\tpermerror_at_rich_loc, error, error_n, error_at, error_at_rich_loc,\n+\tsorry, fatal_error, internal_error, internal_error_no_backtrace):\n+\tUse the above.\n+\n 2016-06-07  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/71428"}, {"sha": "8467aaa377dbb2f958d0ad860294dadfe8382eec", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 81, "deletions": 127, "changes": 208, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c381174498de37235d62c1417c067bfecedf94c4/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c381174498de37235d62c1417c067bfecedf94c4/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=c381174498de37235d62c1417c067bfecedf94c4", "patch": "@@ -46,8 +46,12 @@ along with GCC; see the file COPYING3.  If not see\n #define permissive_error_option(DC) ((DC)->opt_permissive)\n \n /* Prototypes.  */\n+static bool diagnostic_impl (rich_location *, int, const char *,\n+\t\t\t     va_list *, diagnostic_t) ATTRIBUTE_GCC_DIAG(3,0);\n+static bool diagnostic_n_impl (location_t, int, int, const char *,\n+\t\t\t       const char *, va_list *,\n+\t\t\t       diagnostic_t) ATTRIBUTE_GCC_DIAG(5,0);\n static void error_recursion (diagnostic_context *) ATTRIBUTE_NORETURN;\n-\n static void real_abort (void) ATTRIBUTE_NORETURN;\n \n /* Name of program invoked, sans directories.  */\n@@ -913,29 +917,57 @@ diagnostic_append_note (diagnostic_context *context,\n   va_end (ap);\n }\n \n-bool\n-emit_diagnostic (diagnostic_t kind, location_t location, int opt,\n-\t\t const char *gmsgid, ...)\n+/* Implement emit_diagnostic, inform, inform_at_rich_loc, warning, warning_at,\n+   warning_at_rich_loc, pedwarn, permerror, permerror_at_rich_loc, error,\n+   error_at, error_at_rich_loc, sorry, fatal_error, internal_error, and\n+   internal_error_no_backtrace, as documented and defined below.  */\n+static bool\n+diagnostic_impl (rich_location *richloc, int opt,\n+\t\t const char *gmsgid,\n+\t\t va_list *ap, diagnostic_t kind)\n {\n   diagnostic_info diagnostic;\n-  va_list ap;\n-  bool ret;\n-  rich_location richloc (line_table, location);\n-\n-  va_start (ap, gmsgid);\n   if (kind == DK_PERMERROR)\n     {\n-      diagnostic_set_info (&diagnostic, gmsgid, &ap, &richloc,\n+      diagnostic_set_info (&diagnostic, gmsgid, ap, richloc,\n \t\t\t   permissive_error_kind (global_dc));\n       diagnostic.option_index = permissive_error_option (global_dc);\n     }\n-  else {\n-      diagnostic_set_info (&diagnostic, gmsgid, &ap, &richloc, kind);\n+  else\n+    {\n+      diagnostic_set_info (&diagnostic, gmsgid, ap, richloc, kind);\n       if (kind == DK_WARNING || kind == DK_PEDWARN)\n \tdiagnostic.option_index = opt;\n-  }\n+    }\n+  return report_diagnostic (&diagnostic);\n+}\n+\n+/* Implement inform_n, warning_n, and error_n, as documented and\n+   defined below.  */\n+static bool\n+diagnostic_n_impl (location_t location, int opt, int n,\n+\t\t   const char *singular_gmsgid,\n+\t\t   const char *plural_gmsgid,\n+\t\t   va_list *ap, diagnostic_t kind)\n+{\n+  diagnostic_info diagnostic;\n+  rich_location richloc (line_table, location);\n+  diagnostic_set_info_translated (&diagnostic,\n+                                  ngettext (singular_gmsgid, plural_gmsgid, n),\n+                                  ap, &richloc, kind);\n+  if (kind == DK_WARNING)\n+    diagnostic.option_index = opt;\n+  return report_diagnostic (&diagnostic);\n+}\n \n-  ret = report_diagnostic (&diagnostic);\n+bool\n+emit_diagnostic (diagnostic_t kind, location_t location, int opt,\n+\t\t const char *gmsgid, ...)\n+{\n+  va_list ap;\n+  va_start (ap, gmsgid);\n+  rich_location richloc (line_table, location);\n+  bool ret = diagnostic_impl (&richloc, opt, gmsgid, &ap, kind);\n   va_end (ap);\n   return ret;\n }\n@@ -945,26 +977,20 @@ emit_diagnostic (diagnostic_t kind, location_t location, int opt,\n void\n inform (location_t location, const char *gmsgid, ...)\n {\n-  diagnostic_info diagnostic;\n   va_list ap;\n-  rich_location richloc (line_table, location);\n-\n   va_start (ap, gmsgid);\n-  diagnostic_set_info (&diagnostic, gmsgid, &ap, &richloc, DK_NOTE);\n-  report_diagnostic (&diagnostic);\n+  rich_location richloc (line_table, location);\n+  diagnostic_impl (&richloc, -1, gmsgid, &ap, DK_NOTE);\n   va_end (ap);\n }\n \n /* Same as \"inform\", but at RICHLOC.  */\n void\n inform_at_rich_loc (rich_location *richloc, const char *gmsgid, ...)\n {\n-  diagnostic_info diagnostic;\n   va_list ap;\n-\n   va_start (ap, gmsgid);\n-  diagnostic_set_info (&diagnostic, gmsgid, &ap, richloc, DK_NOTE);\n-  report_diagnostic (&diagnostic);\n+  diagnostic_impl (richloc, -1, gmsgid, &ap, DK_NOTE);\n   va_end (ap);\n }\n \n@@ -974,15 +1000,10 @@ void\n inform_n (location_t location, int n, const char *singular_gmsgid,\n           const char *plural_gmsgid, ...)\n {\n-  diagnostic_info diagnostic;\n   va_list ap;\n-  rich_location richloc (line_table, location);\n-\n   va_start (ap, plural_gmsgid);\n-  diagnostic_set_info_translated (&diagnostic,\n-                                  ngettext (singular_gmsgid, plural_gmsgid, n),\n-                                  &ap, &richloc, DK_NOTE);\n-  report_diagnostic (&diagnostic);\n+  diagnostic_n_impl (location, -1, n, singular_gmsgid, plural_gmsgid,\n+\t\t     &ap, DK_NOTE);\n   va_end (ap);\n }\n \n@@ -992,16 +1013,10 @@ inform_n (location_t location, int n, const char *singular_gmsgid,\n bool\n warning (int opt, const char *gmsgid, ...)\n {\n-  diagnostic_info diagnostic;\n   va_list ap;\n-  bool ret;\n-  rich_location richloc (line_table, input_location);\n-\n   va_start (ap, gmsgid);\n-  diagnostic_set_info (&diagnostic, gmsgid, &ap, &richloc, DK_WARNING);\n-  diagnostic.option_index = opt;\n-\n-  ret = report_diagnostic (&diagnostic);\n+  rich_location richloc (line_table, input_location);\n+  bool ret = diagnostic_impl (&richloc, opt, gmsgid, &ap, DK_WARNING);\n   va_end (ap);\n   return ret;\n }\n@@ -1013,15 +1028,10 @@ warning (int opt, const char *gmsgid, ...)\n bool\n warning_at (location_t location, int opt, const char *gmsgid, ...)\n {\n-  diagnostic_info diagnostic;\n   va_list ap;\n-  bool ret;\n-  rich_location richloc (line_table, location);\n-\n   va_start (ap, gmsgid);\n-  diagnostic_set_info (&diagnostic, gmsgid, &ap, &richloc, DK_WARNING);\n-  diagnostic.option_index = opt;\n-  ret = report_diagnostic (&diagnostic);\n+  rich_location richloc (line_table, location);\n+  bool ret = diagnostic_impl (&richloc, opt, gmsgid, &ap, DK_WARNING);\n   va_end (ap);\n   return ret;\n }\n@@ -1031,14 +1041,9 @@ warning_at (location_t location, int opt, const char *gmsgid, ...)\n bool\n warning_at_rich_loc (rich_location *richloc, int opt, const char *gmsgid, ...)\n {\n-  diagnostic_info diagnostic;\n   va_list ap;\n-  bool ret;\n-\n   va_start (ap, gmsgid);\n-  diagnostic_set_info (&diagnostic, gmsgid, &ap, richloc, DK_WARNING);\n-  diagnostic.option_index = opt;\n-  ret = report_diagnostic (&diagnostic);\n+  bool ret = diagnostic_impl (richloc, opt, gmsgid, &ap, DK_WARNING);\n   va_end (ap);\n   return ret;\n }\n@@ -1051,18 +1056,11 @@ bool\n warning_n (location_t location, int opt, int n, const char *singular_gmsgid,\n \t   const char *plural_gmsgid, ...)\n {\n-  diagnostic_info diagnostic;\n   va_list ap;\n-  bool ret;\n-  rich_location richloc (line_table, location);\n-\n   va_start (ap, plural_gmsgid);\n-  diagnostic_set_info_translated (&diagnostic,\n-                                  ngettext (singular_gmsgid, plural_gmsgid, n),\n-                                  &ap, &richloc, DK_WARNING\n-);\n-  diagnostic.option_index = opt;\n-  ret = report_diagnostic (&diagnostic);\n+  bool ret = diagnostic_n_impl (location, opt, n,\n+\t\t\t\tsingular_gmsgid, plural_gmsgid,\n+\t\t\t\t&ap, DK_WARNING);\n   va_end (ap);\n   return ret;\n }\n@@ -1083,15 +1081,10 @@ warning_n (location_t location, int opt, int n, const char *singular_gmsgid,\n bool\n pedwarn (location_t location, int opt, const char *gmsgid, ...)\n {\n-  diagnostic_info diagnostic;\n   va_list ap;\n-  bool ret;\n-  rich_location richloc (line_table, location);\n-\n   va_start (ap, gmsgid);\n-  diagnostic_set_info (&diagnostic, gmsgid, &ap, &richloc,  DK_PEDWARN);\n-  diagnostic.option_index = opt;\n-  ret = report_diagnostic (&diagnostic);\n+  rich_location richloc (line_table, location);\n+  bool ret = diagnostic_impl (&richloc, opt, gmsgid, &ap, DK_PEDWARN);\n   va_end (ap);\n   return ret;\n }\n@@ -1106,16 +1099,10 @@ pedwarn (location_t location, int opt, const char *gmsgid, ...)\n bool\n permerror (location_t location, const char *gmsgid, ...)\n {\n-  diagnostic_info diagnostic;\n   va_list ap;\n-  bool ret;\n-  rich_location richloc (line_table, location);\n-\n   va_start (ap, gmsgid);\n-  diagnostic_set_info (&diagnostic, gmsgid, &ap, &richloc,\n-                       permissive_error_kind (global_dc));\n-  diagnostic.option_index = permissive_error_option (global_dc);\n-  ret = report_diagnostic (&diagnostic);\n+  rich_location richloc (line_table, location);\n+  bool ret = diagnostic_impl (&richloc, -1, gmsgid, &ap, DK_PERMERROR);\n   va_end (ap);\n   return ret;\n }\n@@ -1125,15 +1112,9 @@ permerror (location_t location, const char *gmsgid, ...)\n bool\n permerror_at_rich_loc (rich_location *richloc, const char *gmsgid, ...)\n {\n-  diagnostic_info diagnostic;\n   va_list ap;\n-  bool ret;\n-\n   va_start (ap, gmsgid);\n-  diagnostic_set_info (&diagnostic, gmsgid, &ap, richloc,\n-                       permissive_error_kind (global_dc));\n-  diagnostic.option_index = permissive_error_option (global_dc);\n-  ret = report_diagnostic (&diagnostic);\n+  bool ret = diagnostic_impl (richloc, -1, gmsgid, &ap, DK_PERMERROR);\n   va_end (ap);\n   return ret;\n }\n@@ -1143,13 +1124,10 @@ permerror_at_rich_loc (rich_location *richloc, const char *gmsgid, ...)\n void\n error (const char *gmsgid, ...)\n {\n-  diagnostic_info diagnostic;\n   va_list ap;\n-  rich_location richloc (line_table, input_location);\n-\n   va_start (ap, gmsgid);\n-  diagnostic_set_info (&diagnostic, gmsgid, &ap, &richloc, DK_ERROR);\n-  report_diagnostic (&diagnostic);\n+  rich_location richloc (line_table, input_location);\n+  diagnostic_impl (&richloc, -1, gmsgid, &ap, DK_ERROR);\n   va_end (ap);\n }\n \n@@ -1159,44 +1137,32 @@ void\n error_n (location_t location, int n, const char *singular_gmsgid,\n          const char *plural_gmsgid, ...)\n {\n-  diagnostic_info diagnostic;\n   va_list ap;\n-  rich_location richloc (line_table, location);\n-\n   va_start (ap, plural_gmsgid);\n-  diagnostic_set_info_translated (&diagnostic,\n-                                  ngettext (singular_gmsgid, plural_gmsgid, n),\n-                                  &ap, &richloc, DK_ERROR);\n-  report_diagnostic (&diagnostic);\n+  diagnostic_n_impl (location, -1, n, singular_gmsgid, plural_gmsgid,\n+\t\t     &ap, DK_ERROR);\n   va_end (ap);\n }\n \n-/* Same as ebove, but use location LOC instead of input_location.  */\n+/* Same as above, but use location LOC instead of input_location.  */\n void\n error_at (location_t loc, const char *gmsgid, ...)\n {\n-  diagnostic_info diagnostic;\n   va_list ap;\n-  rich_location richloc (line_table, loc);\n-\n   va_start (ap, gmsgid);\n-  diagnostic_set_info (&diagnostic, gmsgid, &ap, &richloc, DK_ERROR);\n-  report_diagnostic (&diagnostic);\n+  rich_location richloc (line_table, loc);\n+  diagnostic_impl (&richloc, -1, gmsgid, &ap, DK_ERROR);\n   va_end (ap);\n }\n \n /* Same as above, but use RICH_LOC.  */\n \n void\n-error_at_rich_loc (rich_location *rich_loc, const char *gmsgid, ...)\n+error_at_rich_loc (rich_location *richloc, const char *gmsgid, ...)\n {\n-  diagnostic_info diagnostic;\n   va_list ap;\n-\n   va_start (ap, gmsgid);\n-  diagnostic_set_info (&diagnostic, gmsgid, &ap, rich_loc,\n-\t\t       DK_ERROR);\n-  report_diagnostic (&diagnostic);\n+  diagnostic_impl (richloc, -1, gmsgid, &ap, DK_ERROR);\n   va_end (ap);\n }\n \n@@ -1206,13 +1172,10 @@ error_at_rich_loc (rich_location *rich_loc, const char *gmsgid, ...)\n void\n sorry (const char *gmsgid, ...)\n {\n-  diagnostic_info diagnostic;\n   va_list ap;\n-  rich_location richloc (line_table, input_location);\n-\n   va_start (ap, gmsgid);\n-  diagnostic_set_info (&diagnostic, gmsgid, &ap, &richloc, DK_SORRY);\n-  report_diagnostic (&diagnostic);\n+  rich_location richloc (line_table, input_location);\n+  diagnostic_impl (&richloc, -1, gmsgid, &ap, DK_SORRY);\n   va_end (ap);\n }\n \n@@ -1230,13 +1193,10 @@ seen_error (void)\n void\n fatal_error (location_t loc, const char *gmsgid, ...)\n {\n-  diagnostic_info diagnostic;\n   va_list ap;\n-  rich_location richloc (line_table, loc);\n-\n   va_start (ap, gmsgid);\n-  diagnostic_set_info (&diagnostic, gmsgid, &ap, &richloc, DK_FATAL);\n-  report_diagnostic (&diagnostic);\n+  rich_location richloc (line_table, loc);\n+  diagnostic_impl (&richloc, -1, gmsgid, &ap, DK_FATAL);\n   va_end (ap);\n \n   gcc_unreachable ();\n@@ -1249,13 +1209,10 @@ fatal_error (location_t loc, const char *gmsgid, ...)\n void\n internal_error (const char *gmsgid, ...)\n {\n-  diagnostic_info diagnostic;\n   va_list ap;\n-  rich_location richloc (line_table, input_location);\n-\n   va_start (ap, gmsgid);\n-  diagnostic_set_info (&diagnostic, gmsgid, &ap, &richloc, DK_ICE);\n-  report_diagnostic (&diagnostic);\n+  rich_location richloc (line_table, input_location);\n+  diagnostic_impl (&richloc, -1, gmsgid, &ap, DK_ICE);\n   va_end (ap);\n \n   gcc_unreachable ();\n@@ -1267,13 +1224,10 @@ internal_error (const char *gmsgid, ...)\n void\n internal_error_no_backtrace (const char *gmsgid, ...)\n {\n-  diagnostic_info diagnostic;\n   va_list ap;\n-  rich_location richloc (line_table, input_location);\n-\n   va_start (ap, gmsgid);\n-  diagnostic_set_info (&diagnostic, gmsgid, &ap, &richloc, DK_ICE_NOBT);\n-  report_diagnostic (&diagnostic);\n+  rich_location richloc (line_table, input_location);\n+  diagnostic_impl (&richloc, -1, gmsgid, &ap, DK_ICE_NOBT);\n   va_end (ap);\n \n   gcc_unreachable ();"}]}