{"sha": "07a38de7ceed3080f6f95912624d7e01ae352b6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdhMzhkZTdjZWVkMzA4MGY2Zjk1OTEyNjI0ZDdlMDFhZTM1MmI2ZA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2018-09-25T23:31:22Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2018-09-25T23:31:22Z"}, "message": "rs6000: Simplify \"switch (which_alternative)\" patterns\n\nA few of the rs6000 patterns use C code as output control string, where\nthat code is just a \"switch (which_alternative)\" with all alternatives\nreturning a constant string or just the result of a function call as\ntemplate.\nWrite such cases as just a list of templates, with the few pieces that\nare C code preceded by \"*\".\n\n\n\t* config/rs6000/altivec.md (*altivec_mov<mode>): Write the output\n\tcontrol string as a list of templates instead of as C code.\n\t(*altivec_movti): Ditto.\n\t* config/rs6000/darwin.md (movdf_low_di): Ditto.\n\nFrom-SVN: r264587", "tree": {"sha": "774a4e1523391a2a22a0699cb1bbd7f91da054ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/774a4e1523391a2a22a0699cb1bbd7f91da054ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07a38de7ceed3080f6f95912624d7e01ae352b6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07a38de7ceed3080f6f95912624d7e01ae352b6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07a38de7ceed3080f6f95912624d7e01ae352b6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07a38de7ceed3080f6f95912624d7e01ae352b6d/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ad117173a0d8a5412bc2b9fb99e2c9b1cb4036af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad117173a0d8a5412bc2b9fb99e2c9b1cb4036af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad117173a0d8a5412bc2b9fb99e2c9b1cb4036af"}], "stats": {"total": 69, "additions": 29, "deletions": 40}, "files": [{"sha": "54d9ecfe36e6369e256303a21c61381def0cad78", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07a38de7ceed3080f6f95912624d7e01ae352b6d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07a38de7ceed3080f6f95912624d7e01ae352b6d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=07a38de7ceed3080f6f95912624d7e01ae352b6d", "patch": "@@ -1,3 +1,10 @@\n+2018-09-25  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/altivec.md (*altivec_mov<mode>): Write the output\n+\tcontrol string as a list of templates instead of as C code.\n+\t(*altivec_movti): Ditto.\n+\t* config/rs6000/darwin.md (movdf_low_di): Ditto.\n+\n 2018-09-25  Jim Wilson  <jimw@sifive.com>\n \n \t* config/riscv/riscv.c (riscv_split_symbol): Mark auipc label as weak"}, {"sha": "f37ad5a59b008204df04faee9e32fc2f585744e7", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 19, "deletions": 29, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07a38de7ceed3080f6f95912624d7e01ae352b6d/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07a38de7ceed3080f6f95912624d7e01ae352b6d/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=07a38de7ceed3080f6f95912624d7e01ae352b6d", "patch": "@@ -245,21 +245,16 @@\n   \"VECTOR_MEM_ALTIVEC_P (<MODE>mode)\n    && (register_operand (operands[0], <MODE>mode) \n        || register_operand (operands[1], <MODE>mode))\"\n-{\n-  switch (which_alternative)\n-    {\n-    case 0: return \"stvx %1,%y0\";\n-    case 1: return \"lvx %0,%y1\";\n-    case 2: return \"vor %0,%1,%1\";\n-    case 3: return \"#\";\n-    case 4: return \"#\";\n-    case 5: return \"#\";\n-    case 6: return \"vxor %0,%0,%0\";\n-    case 7: return output_vec_const_move (operands);\n-    case 8: return \"#\";\n-    default: gcc_unreachable ();\n-    }\n-}\n+  \"@\n+   stvx %1,%y0\n+   lvx %0,%y1\n+   vor %0,%1,%1\n+   #\n+   #\n+   #\n+   vxor %0,%0,%0\n+   * return output_vec_const_move (operands);\n+   #\"\n   [(set_attr \"type\" \"vecstore,vecload,veclogical,store,load,*,veclogical,*,*\")\n    (set_attr \"length\" \"4,4,4,20,20,20,4,8,32\")])\n \n@@ -272,20 +267,15 @@\n   \"VECTOR_MEM_ALTIVEC_P (TImode)\n    && (register_operand (operands[0], TImode) \n        || register_operand (operands[1], TImode))\"\n-{\n-  switch (which_alternative)\n-    {\n-    case 0: return \"stvx %1,%y0\";\n-    case 1: return \"lvx %0,%y1\";\n-    case 2: return \"vor %0,%1,%1\";\n-    case 3: return \"#\";\n-    case 4: return \"#\";\n-    case 5: return \"#\";\n-    case 6: return \"vxor %0,%0,%0\";\n-    case 7: return output_vec_const_move (operands);\n-    default: gcc_unreachable ();\n-    }\n-}\n+  \"@\n+   stvx %1,%y0\n+   lvx %0,%y1\n+   vor %0,%1,%1\n+   #\n+   #\n+   #\n+   vxor %0,%0,%0\n+   * return output_vec_const_move (operands);\"\n   [(set_attr \"type\" \"vecstore,vecload,veclogical,store,load,*,veclogical,*\")])\n \n ;; Load up a vector with the most significant bit set by loading up -1 and"}, {"sha": "2d6d1ca57dd52b4f4233a2d6bc40f2837cda62cd", "filename": "gcc/config/rs6000/darwin.md", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07a38de7ceed3080f6f95912624d7e01ae352b6d/gcc%2Fconfig%2Frs6000%2Fdarwin.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07a38de7ceed3080f6f95912624d7e01ae352b6d/gcc%2Fconfig%2Frs6000%2Fdarwin.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.md?ref=07a38de7ceed3080f6f95912624d7e01ae352b6d", "patch": "@@ -60,17 +60,9 @@ You should have received a copy of the GNU General Public License\n         (mem:DF (lo_sum:DI (match_operand:DI 1 \"gpc_reg_operand\" \"b,b\")\n                            (match_operand 2 \"\" \"\"))))]\n   \"TARGET_MACHO && TARGET_HARD_FLOAT && TARGET_64BIT\"\n-{\n-  switch (which_alternative)\n-    {\n-      case 0:\n-\treturn \"lfd %0,lo16(%2)(%1)\";\n-      case 1:\n-\treturn \"ld %0,lo16(%2)(%1)\";\n-      default:\n-\tgcc_unreachable ();\n-    }\n-}\n+  \"@\n+   lfd %0,lo16(%2)(%1)\n+   ld %0,lo16(%2)(%1)\"\n   [(set_attr \"type\" \"load\")])\n \n (define_insn \"movdf_low_st_si\""}]}