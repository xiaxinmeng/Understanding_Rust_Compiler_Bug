{"sha": "596f2b172abcab2882c9ed03b9a91703de051844", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk2ZjJiMTcyYWJjYWIyODgyYzllZDAzYjlhOTE3MDNkZTA1MTg0NA==", "commit": {"author": {"name": "Trevor Saunders", "email": "tsaunders@mozilla.com", "date": "2014-09-05T02:31:40Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2014-09-05T02:31:40Z"}, "message": "make several emit functions take an rtx_insn *\n\ngcc/ChangeLog:\n\n2014-09-04  Trevor Saunders  <tsaunders@mozilla.com>\n\n\t* emit-rtl.c (emit_insn_before_noloc): Take an rtx_insn * instead of\n\tan rtx.\n\t(emit_jump_insn_before_noloc): Likewise.\n\t(emit_call_insn_before_noloc): Likewise.\n\t(emit_label_before): Likewise.\n\t(emit_label_after): Likewise.\n\t(emit_insn_before_setloc): Likewise.\n\t(emit_jump_insn_before_setloc): Likewise.\n\t(emit_call_insn_before_setloc): Likewise.\n\t(emit_call_insn_before): Likewise.\n\t* rtl.h: Adjust.\n\nFrom-SVN: r214933", "tree": {"sha": "44b1e6a330346cd61799f67c5eb0cfb84ff05d64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44b1e6a330346cd61799f67c5eb0cfb84ff05d64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/596f2b172abcab2882c9ed03b9a91703de051844", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/596f2b172abcab2882c9ed03b9a91703de051844", "html_url": "https://github.com/Rust-GCC/gccrs/commit/596f2b172abcab2882c9ed03b9a91703de051844", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/596f2b172abcab2882c9ed03b9a91703de051844/comments", "author": null, "committer": null, "parents": [{"sha": "49506606f08072a9780d8eef521ea06bf2edc06e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49506606f08072a9780d8eef521ea06bf2edc06e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49506606f08072a9780d8eef521ea06bf2edc06e"}], "stats": {"total": 50, "additions": 32, "deletions": 18}, "files": [{"sha": "0a5252a92d7307eb23f98350b8193e32d6f25364", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596f2b172abcab2882c9ed03b9a91703de051844/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596f2b172abcab2882c9ed03b9a91703de051844/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=596f2b172abcab2882c9ed03b9a91703de051844", "patch": "@@ -1,3 +1,17 @@\n+2014-09-04  Trevor Saunders  <tsaunders@mozilla.com>\n+\n+\t* emit-rtl.c (emit_insn_before_noloc): Take an rtx_insn * instead of\n+\tan rtx.\n+\t(emit_jump_insn_before_noloc): Likewise.\n+\t(emit_call_insn_before_noloc): Likewise.\n+\t(emit_label_before): Likewise.\n+\t(emit_label_after): Likewise.\n+\t(emit_insn_before_setloc): Likewise.\n+\t(emit_jump_insn_before_setloc): Likewise.\n+\t(emit_call_insn_before_setloc): Likewise.\n+\t(emit_call_insn_before): Likewise.\n+\t* rtl.h: Adjust.\n+\n 2014-09-05  David Malcolm  <dmalcolm@redhat.com>\n \n \t* cse.c (cse_insn): Strengthen local \"new_rtx\" from rtx to"}, {"sha": "e3df826fda2eff317f38d5f049f6d0145fe06f6e", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596f2b172abcab2882c9ed03b9a91703de051844/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596f2b172abcab2882c9ed03b9a91703de051844/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=596f2b172abcab2882c9ed03b9a91703de051844", "patch": "@@ -4377,7 +4377,7 @@ emit_pattern_before_noloc (rtx x, rtx before, rtx last, basic_block bb,\n /* Make X be output before the instruction BEFORE.  */\n \n rtx_insn *\n-emit_insn_before_noloc (rtx x, rtx before, basic_block bb)\n+emit_insn_before_noloc (rtx x, rtx_insn *before, basic_block bb)\n {\n   return emit_pattern_before_noloc (x, before, before, bb, make_insn_raw);\n }\n@@ -4386,7 +4386,7 @@ emit_insn_before_noloc (rtx x, rtx before, basic_block bb)\n    and output it before the instruction BEFORE.  */\n \n rtx_insn *\n-emit_jump_insn_before_noloc (rtx x, rtx before)\n+emit_jump_insn_before_noloc (rtx x, rtx_insn *before)\n {\n   return emit_pattern_before_noloc (x, before, NULL_RTX, NULL,\n \t\t\t\t    make_jump_insn_raw);\n@@ -4396,7 +4396,7 @@ emit_jump_insn_before_noloc (rtx x, rtx before)\n    and output it before the instruction BEFORE.  */\n \n rtx_insn *\n-emit_call_insn_before_noloc (rtx x, rtx before)\n+emit_call_insn_before_noloc (rtx x, rtx_insn *before)\n {\n   return emit_pattern_before_noloc (x, before, NULL_RTX, NULL,\n \t\t\t\t    make_call_insn_raw);\n@@ -4429,7 +4429,7 @@ emit_barrier_before (rtx before)\n /* Emit the label LABEL before the insn BEFORE.  */\n \n rtx_insn *\n-emit_label_before (rtx label, rtx before)\n+emit_label_before (rtx label, rtx_insn *before)\n {\n   gcc_checking_assert (INSN_UID (label) == 0);\n   INSN_UID (label) = cur_insn_uid++;\n@@ -4577,7 +4577,7 @@ emit_barrier_after (rtx after)\n /* Emit the label LABEL after the insn AFTER.  */\n \n rtx_insn *\n-emit_label_after (rtx label, rtx after)\n+emit_label_after (rtx label, rtx_insn *after)\n {\n   gcc_checking_assert (INSN_UID (label) == 0);\n   INSN_UID (label) = cur_insn_uid++;\n@@ -4814,7 +4814,7 @@ emit_pattern_before (rtx pattern, rtx uncast_before, bool skip_debug_insns,\n \n /* Like emit_insn_before_noloc, but set INSN_LOCATION according to LOC.  */\n rtx_insn *\n-emit_insn_before_setloc (rtx pattern, rtx before, int loc)\n+emit_insn_before_setloc (rtx pattern, rtx_insn *before, int loc)\n {\n   return emit_pattern_before_setloc (pattern, before, loc, true,\n \t\t\t\t     make_insn_raw);\n@@ -4829,7 +4829,7 @@ emit_insn_before (rtx pattern, rtx before)\n \n /* like emit_insn_before_noloc, but set INSN_LOCATION according to LOC.  */\n rtx_insn *\n-emit_jump_insn_before_setloc (rtx pattern, rtx before, int loc)\n+emit_jump_insn_before_setloc (rtx pattern, rtx_insn *before, int loc)\n {\n   return emit_pattern_before_setloc (pattern, before, loc, false,\n \t\t\t\t     make_jump_insn_raw);\n@@ -4845,7 +4845,7 @@ emit_jump_insn_before (rtx pattern, rtx before)\n \n /* Like emit_insn_before_noloc, but set INSN_LOCATION according to LOC.  */\n rtx_insn *\n-emit_call_insn_before_setloc (rtx pattern, rtx before, int loc)\n+emit_call_insn_before_setloc (rtx pattern, rtx_insn *before, int loc)\n {\n   return emit_pattern_before_setloc (pattern, before, loc, false,\n \t\t\t\t     make_call_insn_raw);\n@@ -4854,7 +4854,7 @@ emit_call_insn_before_setloc (rtx pattern, rtx before, int loc)\n /* Like emit_call_insn_before_noloc,\n    but set insn_location according to BEFORE.  */\n rtx_insn *\n-emit_call_insn_before (rtx pattern, rtx before)\n+emit_call_insn_before (rtx pattern, rtx_insn *before)\n {\n   return emit_pattern_before (pattern, before, true, false,\n \t\t\t      make_call_insn_raw);"}, {"sha": "cd2f2e7ae157199669265bc1c4e4b42b72c2d5cb", "filename": "gcc/rtl.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596f2b172abcab2882c9ed03b9a91703de051844/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596f2b172abcab2882c9ed03b9a91703de051844/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=596f2b172abcab2882c9ed03b9a91703de051844", "patch": "@@ -2575,19 +2575,19 @@ extern rtx assign_temp (tree, int, int);\n \n /* In emit-rtl.c */\n extern rtx_insn *emit_insn_before (rtx, rtx);\n-extern rtx_insn *emit_insn_before_noloc (rtx, rtx, basic_block);\n-extern rtx_insn *emit_insn_before_setloc (rtx, rtx, int);\n+extern rtx_insn *emit_insn_before_noloc (rtx, rtx_insn *, basic_block);\n+extern rtx_insn *emit_insn_before_setloc (rtx, rtx_insn *, int);\n extern rtx_insn *emit_jump_insn_before (rtx, rtx);\n-extern rtx_insn *emit_jump_insn_before_noloc (rtx, rtx);\n-extern rtx_insn *emit_jump_insn_before_setloc (rtx, rtx, int);\n-extern rtx_insn *emit_call_insn_before (rtx, rtx);\n-extern rtx_insn *emit_call_insn_before_noloc (rtx, rtx);\n-extern rtx_insn *emit_call_insn_before_setloc (rtx, rtx, int);\n+extern rtx_insn *emit_jump_insn_before_noloc (rtx, rtx_insn *);\n+extern rtx_insn *emit_jump_insn_before_setloc (rtx, rtx_insn *, int);\n+extern rtx_insn *emit_call_insn_before (rtx, rtx_insn *);\n+extern rtx_insn *emit_call_insn_before_noloc (rtx, rtx_insn *);\n+extern rtx_insn *emit_call_insn_before_setloc (rtx, rtx_insn *, int);\n extern rtx_insn *emit_debug_insn_before (rtx, rtx);\n extern rtx_insn *emit_debug_insn_before_noloc (rtx, rtx);\n extern rtx_insn *emit_debug_insn_before_setloc (rtx, rtx, int);\n extern rtx_barrier *emit_barrier_before (rtx);\n-extern rtx_insn *emit_label_before (rtx, rtx);\n+extern rtx_insn *emit_label_before (rtx, rtx_insn *);\n extern rtx_note *emit_note_before (enum insn_note, rtx);\n extern rtx_insn *emit_insn_after (rtx, rtx);\n extern rtx_insn *emit_insn_after_noloc (rtx, rtx, basic_block);\n@@ -2602,7 +2602,7 @@ extern rtx_insn *emit_debug_insn_after (rtx, rtx);\n extern rtx_insn *emit_debug_insn_after_noloc (rtx, rtx);\n extern rtx_insn *emit_debug_insn_after_setloc (rtx, rtx, int);\n extern rtx_barrier *emit_barrier_after (rtx);\n-extern rtx_insn *emit_label_after (rtx, rtx);\n+extern rtx_insn *emit_label_after (rtx, rtx_insn *);\n extern rtx_note *emit_note_after (enum insn_note, rtx);\n extern rtx_insn *emit_insn (rtx);\n extern rtx_insn *emit_debug_insn (rtx);"}]}