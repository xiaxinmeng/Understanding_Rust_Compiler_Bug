{"sha": "f436d2ff9523eb271a4528a5f7a680cc8ec6f6a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQzNmQyZmY5NTIzZWIyNzFhNDUyOGE1ZjdhNjgwY2M4ZWM2ZjZhNw==", "commit": {"author": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2010-12-13T08:36:06Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2010-12-13T08:36:06Z"}, "message": "encoding.c (_darwin_rs6000_special_round_type_align): New.\n\n\nlibobjc:\n\n\t* encoding.c (_darwin_rs6000_special_round_type_align): New.\n\t(darwin_rs6000_special_round_type_align): Adjust to use new routine.\n\ntestsuite:\n\n\t* objc.dg/gnu-encoding/struct-layout-encoding-1_generate.c: Adjust XFAILs.\n\nFrom-SVN: r167741", "tree": {"sha": "c5519c0e05dc8ac7df769081f92fed94e2b2cc59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5519c0e05dc8ac7df769081f92fed94e2b2cc59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f436d2ff9523eb271a4528a5f7a680cc8ec6f6a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f436d2ff9523eb271a4528a5f7a680cc8ec6f6a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f436d2ff9523eb271a4528a5f7a680cc8ec6f6a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f436d2ff9523eb271a4528a5f7a680cc8ec6f6a7/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b403760c3eca837c4b54eab24062648672b4ea29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b403760c3eca837c4b54eab24062648672b4ea29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b403760c3eca837c4b54eab24062648672b4ea29"}], "stats": {"total": 66, "additions": 52, "deletions": 14}, "files": [{"sha": "dec16b5954008e065b57690b27586f970e23bab4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f436d2ff9523eb271a4528a5f7a680cc8ec6f6a7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f436d2ff9523eb271a4528a5f7a680cc8ec6f6a7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f436d2ff9523eb271a4528a5f7a680cc8ec6f6a7", "patch": "@@ -1,3 +1,8 @@\n+2010-12-13  Iain Sandoe  <iains@gcc.gnu.org>\n+\n+\t* objc.dg/gnu-encoding/struct-layout-encoding-1_generate.c:\n+\tAdjust XFAILs.\n+\n 2010-12-13  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/46576"}, {"sha": "b75a09d29fb2edb9183aa49a0588d99303dc58f4", "filename": "gcc/testsuite/objc.dg/gnu-encoding/struct-layout-encoding-1_generate.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f436d2ff9523eb271a4528a5f7a680cc8ec6f6a7/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-encoding%2Fstruct-layout-encoding-1_generate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f436d2ff9523eb271a4528a5f7a680cc8ec6f6a7/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-encoding%2Fstruct-layout-encoding-1_generate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fgnu-encoding%2Fstruct-layout-encoding-1_generate.c?ref=f436d2ff9523eb271a4528a5f7a680cc8ec6f6a7", "patch": "@@ -221,9 +221,9 @@ switchfiles (int fields)\n       fputs (\"failed to create test files\\n\", stderr);\n       exit (1);\n     }\n-  /* FIXME: these tests should not be xfailed on PowerPC darwin or aix\n-     but they are because libobjc uses GCC's headers for trying to find\n-     the struct layout but it gets it wrong.  */\n+  /* FIXME: these tests should not be xfailed on aix but they are because\n+     libobjc uses GCC's headers for trying to find the struct layout but it\n+     gets it wrong.  */\n   if (filecnt == 2\n       || filecnt == 3\n       || filecnt == 4\n@@ -236,7 +236,7 @@ switchfiles (int fields)\n       || filecnt == 22)\n      {\n       fprintf (outfile, \"\\\n-/* { dg-do run { xfail { { \\\"powerpc*-*-darwin*\\\" && { ! lp64 } } || { \\\"powerpc*-*-aix*\\\" } } } } */\\n\\\n+/* { dg-do run { xfail { \\\"powerpc*-*-aix*\\\" } } } */\\n\\\n /* { dg-options \\\"-w -I%s -fgnu-runtime\\\" } */\\n\", srcdir);\n      }\n   /* FIXME: these should not be xfailed but they are because"}, {"sha": "81c790fc4cbce3219b7c42420bfb6e23fcf5434a", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f436d2ff9523eb271a4528a5f7a680cc8ec6f6a7/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f436d2ff9523eb271a4528a5f7a680cc8ec6f6a7/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=f436d2ff9523eb271a4528a5f7a680cc8ec6f6a7", "patch": "@@ -1,3 +1,8 @@\n+2010-12-13  Iain Sandoe  <iains@gcc.gnu.org>\n+\n+\t* encoding.c (_darwin_rs6000_special_round_type_align): New.\n+\t(darwin_rs6000_special_round_type_align): Adjust to use new routine.\n+\n 2010-12-11  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* sendmsg.c (selector_resolveClassMethod): New."}, {"sha": "92b7305d83e5fbc182aeaaa0bc8a8fa5723f5509", "filename": "libobjc/encoding.c", "status": "modified", "additions": 38, "deletions": 10, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f436d2ff9523eb271a4528a5f7a680cc8ec6f6a7/libobjc%2Fencoding.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f436d2ff9523eb271a4528a5f7a680cc8ec6f6a7/libobjc%2Fencoding.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fencoding.c?ref=f436d2ff9523eb271a4528a5f7a680cc8ec6f6a7", "patch": "@@ -117,27 +117,55 @@ static int __attribute__ ((__unused__)) not_target_flags = 0;\n  to a static variable, initialized by target overrides. This is reset\n  in linux64.h but not in darwin64.h.  The macro is not used by *86*.  */\n \n-#if __MACH__ && __LP64__\n-# undef TARGET_ALIGN_NATURAL\n-# define TARGET_ALIGN_NATURAL 1\n+#if __MACH__ \n+# if __LP64__\n+#  undef TARGET_ALIGN_NATURAL\n+#  define TARGET_ALIGN_NATURAL 1\n+# endif\n+\n+/* On Darwin32, we need to recurse until we find the starting stuct type.  */\n+static int \n+_darwin_rs6000_special_round_type_align (const char *struc, int comp, int spec)\n+{\n+  const char *_stp , *_fields = TYPE_FIELDS (struc);\n+  if (!_fields)\n+    return MAX (comp, spec);\n+  _stp = strip_array_types (_fields);\n+  if (TYPE_MODE(_stp) == _C_COMPLEX)\n+   _stp++;\n+  switch (TYPE_MODE(_stp))\n+    {\n+      case RECORD_TYPE:\n+      case UNION_TYPE:\n+\treturn MAX (MAX (comp, spec), objc_alignof_type (_stp) * BITS_PER_UNIT);\n+\tbreak;\n+      case DFmode:\n+      case _C_LNG_LNG:\n+      case _C_ULNG_LNG:\n+\treturn MAX (MAX (comp, spec), 64);\n+\tbreak;\n+\n+      default:\n+\treturn MAX (comp, spec);\n+\tbreak;\n+    }\n+}\n+\n+/* See comment below.  */\n+#define darwin_rs6000_special_round_type_align(S,C,S2)\t\t\t\\\n+  (_darwin_rs6000_special_round_type_align ((char*)(S), (int)(C), (int)(S2)))\n #endif\n \n /*  FIXME: while this file has no business including tm.h, this\n     definitely has no business defining this macro but it\n     is only way around without really rewritting this file,\n-    should look after the branch of 3.4 to fix this.\n-    FIXME1: It's also out of date, darwin no longer has the same alignment\n-    'special' as aix - this is probably the origin of the m32 breakage.  */\n+    should look after the branch of 3.4 to fix this.   */\n #define rs6000_special_round_type_align(STRUCT, COMPUTED, SPECIFIED)\t\\\n   ({ const char *_fields = TYPE_FIELDS (STRUCT);\t\t\t\\\n   ((_fields != 0\t\t\t\t\t\t\t\\\n     && TYPE_MODE (strip_array_types (TREE_TYPE (_fields))) == DFmode)\t\\\n    ? MAX (MAX (COMPUTED, SPECIFIED), 64)\t\t\t\t\\\n    : MAX (COMPUTED, SPECIFIED));})\n-/* FIXME: The word 'fixme' is insufficient to explain the wrong-ness\n-   of this next macro definition.  */\n-#define darwin_rs6000_special_round_type_align(S,C,S2) \\\n-  rs6000_special_round_type_align(S,C,S2)\n \n \n /* Skip a variable name, enclosed in quotes (\").  */"}]}