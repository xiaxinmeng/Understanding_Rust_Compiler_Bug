{"sha": "266d276c4eb2c06d3593ddf1d828776be91f0eea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY2ZDI3NmM0ZWIyYzA2ZDM1OTNkZGYxZDgyODc3NmJlOTFmMGVlYQ==", "commit": {"author": {"name": "Bingfeng Mei", "email": "bmei@broadcom.com", "date": "2013-12-23T17:22:30Z"}, "committer": {"name": "Bingfeng Mei", "email": "meibf@gcc.gnu.org", "date": "2013-12-23T17:22:30Z"}, "message": "vect-neg-store-1.c: New test.\n\n2013-12-23  Bingfeng Mei  <bmei@broadcom.com>\n\n\t* gcc.dg/vect/vect-neg-store-1.c: New test.\n\t* gcc.dg/vect/vect-neg-store-2.c: Ditto.\n\nFrom-SVN: r206181", "tree": {"sha": "9ad432cb2b0d4521c49312a2c690aff03044848c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ad432cb2b0d4521c49312a2c690aff03044848c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/266d276c4eb2c06d3593ddf1d828776be91f0eea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/266d276c4eb2c06d3593ddf1d828776be91f0eea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/266d276c4eb2c06d3593ddf1d828776be91f0eea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/266d276c4eb2c06d3593ddf1d828776be91f0eea/comments", "author": null, "committer": null, "parents": [{"sha": "7c2539fc5a68eb9bd57d3b46855e419821effb23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c2539fc5a68eb9bd57d3b46855e419821effb23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c2539fc5a68eb9bd57d3b46855e419821effb23"}], "stats": {"total": 83, "additions": 83, "deletions": 0}, "files": [{"sha": "c0bba43dc395424e5a71f11901fed6afd01a86d8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/266d276c4eb2c06d3593ddf1d828776be91f0eea/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/266d276c4eb2c06d3593ddf1d828776be91f0eea/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=266d276c4eb2c06d3593ddf1d828776be91f0eea", "patch": "@@ -1,3 +1,8 @@\n+2013-12-23  Bingfeng Mei  <bmei@broadcom.com>\n+\n+\t* gcc.dg/vect/vect-neg-store-1.c: New test.\n+\t* gcc.dg/vect/vect-neg-store-2.c: Ditto.\n+\n 2013-12-23  Bingfeng Mei  <bmei@broadcom.com>\n \n \tPR middle-end/59569"}, {"sha": "178f0a1ec9d07d89b40c00bd13f3655b60e4ef30", "filename": "gcc/testsuite/gcc.dg/vect/vect-neg-store-1.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/266d276c4eb2c06d3593ddf1d828776be91f0eea/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-neg-store-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/266d276c4eb2c06d3593ddf1d828776be91f0eea/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-neg-store-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-neg-store-1.c?ref=266d276c4eb2c06d3593ddf1d828776be91f0eea", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-require-effective-target vect_int } */\n+#include <stdlib.h>\n+\n+__attribute__((noinline, noclone))\n+void test1(short x[128])\n+{\n+    int i;\n+    for (i=127; i>=0; i--) {\n+\tx[i] = 1234;\n+    }\n+}\n+\n+int main (void)\n+{\n+  short x[128 + 32];\n+  int i;\n+  \n+  for (i = 0; i < 16; i ++)\n+    {\n+      asm (\"\");\n+      x[i] = x[i + 144] = 5678;\n+    }\n+   \n+  test1 (x + 16);\n+  \n+  for (i = 0; i < 128; i++)\n+   if (x[i + 16] != 1234)\n+     abort ();\n+  \n+  for (i = 0; i < 16; i++)\n+    if (x[i] != 5678\n+       || x[i + 144] != 5678)\n+      abort ();\n+         \n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "e97b9bf40efbb158b9b380779218225e313d4a44", "filename": "gcc/testsuite/gcc.dg/vect/vect-neg-store-2.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/266d276c4eb2c06d3593ddf1d828776be91f0eea/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-neg-store-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/266d276c4eb2c06d3593ddf1d828776be91f0eea/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-neg-store-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-neg-store-2.c?ref=266d276c4eb2c06d3593ddf1d828776be91f0eea", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-require-effective-target vect_int } */\n+#include <stdlib.h>\n+\n+__attribute__((noinline, noclone))\n+void test1(short x[128], short D)\n+{\n+    int i;\n+    for (i=127; i>=0; i--) {\n+\tx[i] = D;\n+    }\n+}\n+\n+int main (void)\n+{\n+  short x[128 + 32];\n+  int i;\n+  \n+  for (i = 0; i < 16; i ++)\n+    {\n+      asm (\"\");\n+      x[i] = x[i + 144] = 5678;\n+    }\n+   \n+  test1 (x + 16, 1234);\n+  \n+  for (i = 0; i < 128; i++)\n+   if (x[i + 16] != 1234)\n+     abort ();\n+  \n+  for (i = 0; i < 16; i++)\n+    if (x[i] != 5678\n+       || x[i + 144] != 5678)\n+      abort ();\n+         \n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}]}