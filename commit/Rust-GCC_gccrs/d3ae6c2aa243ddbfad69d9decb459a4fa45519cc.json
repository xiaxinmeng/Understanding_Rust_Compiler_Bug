{"sha": "d3ae6c2aa243ddbfad69d9decb459a4fa45519cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNhZTZjMmFhMjQzZGRiZmFkNjlkOWRlY2I0NTlhNGZhNDU1MTljYw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2009-12-30T21:28:45Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2009-12-30T21:28:45Z"}, "message": "re PR c/42439 (Linux kernel BUILD_BUG_ON() broke)\n\n\tPR c/42439\n\t* c-decl.c (check_bitfield_type_and_width): Only pedwarn if\n\tpedantic for bit-field width not an integer constant expression\n\tbut folding to one.\n\ntestsuite:\n\t* gcc.dg/bitfld-19.c, gcc.dg/bitfld-20.c, gcc.dg/bitfld-21.c: New\n\ttests.\n\nFrom-SVN: r155526", "tree": {"sha": "3a957a9cf0bc7ad075c1b21b01621d3751c9e85b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a957a9cf0bc7ad075c1b21b01621d3751c9e85b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3ae6c2aa243ddbfad69d9decb459a4fa45519cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3ae6c2aa243ddbfad69d9decb459a4fa45519cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3ae6c2aa243ddbfad69d9decb459a4fa45519cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3ae6c2aa243ddbfad69d9decb459a4fa45519cc/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7417f6c0bd77d7cc05b6b051efa0c60987825f90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7417f6c0bd77d7cc05b6b051efa0c60987825f90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7417f6c0bd77d7cc05b6b051efa0c60987825f90"}], "stats": {"total": 62, "additions": 60, "deletions": 2}, "files": [{"sha": "bd540df9bba8150d972bc417c5827bca351b6dae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3ae6c2aa243ddbfad69d9decb459a4fa45519cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3ae6c2aa243ddbfad69d9decb459a4fa45519cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d3ae6c2aa243ddbfad69d9decb459a4fa45519cc", "patch": "@@ -1,3 +1,10 @@\n+2009-12-30  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR c/42439\n+\t* c-decl.c (check_bitfield_type_and_width): Only pedwarn if\n+\tpedantic for bit-field width not an integer constant expression\n+\tbut folding to one.\n+\n 2009-12-30  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/41956"}, {"sha": "0655197f5bc819943c24269556caf5631da84679", "filename": "gcc/c-decl.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3ae6c2aa243ddbfad69d9decb459a4fa45519cc/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3ae6c2aa243ddbfad69d9decb459a4fa45519cc/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=d3ae6c2aa243ddbfad69d9decb459a4fa45519cc", "patch": "@@ -4570,14 +4570,26 @@ check_bitfield_type_and_width (tree *type, tree *width, tree orig_name)\n \n   /* Detect and ignore out of range field width and process valid\n      field widths.  */\n-  if (!INTEGRAL_TYPE_P (TREE_TYPE (*width))\n-      || TREE_CODE (*width) != INTEGER_CST)\n+  if (!INTEGRAL_TYPE_P (TREE_TYPE (*width)))\n     {\n       error (\"bit-field %qs width not an integer constant\", name);\n       *width = integer_one_node;\n     }\n   else\n     {\n+      if (TREE_CODE (*width) != INTEGER_CST)\n+\t{\n+\t  *width = c_fully_fold (*width, false, NULL);\n+\t  if (TREE_CODE (*width) == INTEGER_CST)\n+\t    pedwarn (input_location, OPT_pedantic,\n+\t\t     \"bit-field %qs width not an integer constant expression\",\n+\t\t     name);\n+\t}\n+      if (TREE_CODE (*width) != INTEGER_CST)\n+\t{\n+\t  error (\"bit-field %qs width not an integer constant\", name);\n+\t  *width = integer_one_node;\n+\t}\n       constant_expression_warning (*width);\n       if (tree_int_cst_sgn (*width) < 0)\n \t{"}, {"sha": "005b4ac4e9d0b616a26380bddc4049290b9ec1e1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3ae6c2aa243ddbfad69d9decb459a4fa45519cc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3ae6c2aa243ddbfad69d9decb459a4fa45519cc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d3ae6c2aa243ddbfad69d9decb459a4fa45519cc", "patch": "@@ -1,3 +1,9 @@\n+2009-12-30  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR c/42439\n+\t* gcc.dg/bitfld-19.c, gcc.dg/bitfld-20.c, gcc.dg/bitfld-21.c: New\n+\ttests.\n+\n 2009-12-30  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/41956"}, {"sha": "072e93c2ae9e72e6638a2fe6889e2182d9d3a628", "filename": "gcc/testsuite/gcc.dg/bitfld-19.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3ae6c2aa243ddbfad69d9decb459a4fa45519cc/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3ae6c2aa243ddbfad69d9decb459a4fa45519cc/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-19.c?ref=d3ae6c2aa243ddbfad69d9decb459a4fa45519cc", "patch": "@@ -0,0 +1,11 @@\n+/* Test for bit-field widths not integer constant expressions but\n+   folding to integer constants: PR 42439.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+void\n+f (void)\n+{\n+  const int m = 1;\n+  ((void)(sizeof(struct { int i:!!m; })));\n+}"}, {"sha": "63aaa5c8dc966fbab0167c43c286738be792ec9f", "filename": "gcc/testsuite/gcc.dg/bitfld-20.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3ae6c2aa243ddbfad69d9decb459a4fa45519cc/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3ae6c2aa243ddbfad69d9decb459a4fa45519cc/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-20.c?ref=d3ae6c2aa243ddbfad69d9decb459a4fa45519cc", "patch": "@@ -0,0 +1,11 @@\n+/* Test for bit-field widths not integer constant expressions but\n+   folding to integer constants: PR 42439.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -pedantic\" } */\n+\n+void\n+f (void)\n+{\n+  const int m = 1;\n+  ((void)(sizeof(struct { int i:!!m; }))); /* { dg-warning \"not an integer constant expression\" } */\n+}"}, {"sha": "66f9330f1905378e59d643b19a82303966703750", "filename": "gcc/testsuite/gcc.dg/bitfld-21.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3ae6c2aa243ddbfad69d9decb459a4fa45519cc/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3ae6c2aa243ddbfad69d9decb459a4fa45519cc/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-21.c?ref=d3ae6c2aa243ddbfad69d9decb459a4fa45519cc", "patch": "@@ -0,0 +1,11 @@\n+/* Test for bit-field widths not integer constant expressions but\n+   folding to integer constants: PR 42439.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -pedantic-errors\" } */\n+\n+void\n+f (void)\n+{\n+  const int m = 1;\n+  ((void)(sizeof(struct { int i:!!m; }))); /* { dg-error \"not an integer constant expression\" } */\n+}"}]}