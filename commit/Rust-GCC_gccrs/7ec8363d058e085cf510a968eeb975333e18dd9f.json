{"sha": "7ec8363d058e085cf510a968eeb975333e18dd9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VjODM2M2QwNThlMDg1Y2Y1MTBhOTY4ZWViOTc1MzMzZTE4ZGQ5Zg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2010-06-22T07:32:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-22T07:32:15Z"}, "message": "sem_util.adb (Is_Delegate): Put in proper alpha order.\n\n2010-06-22  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_util.adb (Is_Delegate): Put in proper alpha order.\n\t* sem_eval.adb: Minor reformatting.\n\nFrom-SVN: r161140", "tree": {"sha": "f385557a32456697e597dace37ae011ba2165375", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f385557a32456697e597dace37ae011ba2165375"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ec8363d058e085cf510a968eeb975333e18dd9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ec8363d058e085cf510a968eeb975333e18dd9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ec8363d058e085cf510a968eeb975333e18dd9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ec8363d058e085cf510a968eeb975333e18dd9f/comments", "author": null, "committer": null, "parents": [{"sha": "74e7891f8d73153b50beebbd497d69b18fc8cb24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74e7891f8d73153b50beebbd497d69b18fc8cb24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74e7891f8d73153b50beebbd497d69b18fc8cb24"}], "stats": {"total": 133, "additions": 69, "deletions": 64}, "files": [{"sha": "81521cf9374aea00327f6fd4f6d407573ca6a4fc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec8363d058e085cf510a968eeb975333e18dd9f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec8363d058e085cf510a968eeb975333e18dd9f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7ec8363d058e085cf510a968eeb975333e18dd9f", "patch": "@@ -1,3 +1,8 @@\n+2010-06-22  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_util.adb (Is_Delegate): Put in proper alpha order.\n+\t* sem_eval.adb: Minor reformatting.\n+\n 2010-06-22  Robert Dewar  <dewar@adacore.com>\n \n \t* g-expect-vms.adb, sem_res.adb: Minor reformatting."}, {"sha": "6b2602ef461b2e9fc142c0fa43ca1442085c05b2", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec8363d058e085cf510a968eeb975333e18dd9f/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec8363d058e085cf510a968eeb975333e18dd9f/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=7ec8363d058e085cf510a968eeb975333e18dd9f", "patch": "@@ -3802,23 +3802,25 @@ package body Sem_Eval is\n       Priv_E : Entity_Id;\n \n       function Is_Mixed_Mode_Operand (Op : Node_Id) return Boolean;\n-      --  Check whether one operand is a mixed-mode operation that requires\n-      --  the presence of a fixed-point type. Given that all operands are\n-      --  universal and have been constant-folded, retrieve the original\n-      --  function call.\n+      --  Check whether one operand is a mixed-mode operation that requires the\n+      --  presence of a fixed-point type. Given that all operands are universal\n+      --  and have been constant-folded, retrieve the original function call.\n \n       ---------------------------\n       -- Is_Mixed_Mode_Operand --\n       ---------------------------\n \n       function Is_Mixed_Mode_Operand (Op : Node_Id) return Boolean is\n+         Onod : constant Node_Id := Original_Node (Op);\n       begin\n-         return Nkind (Original_Node (Op)) = N_Function_Call\n-           and then Present (Next_Actual (First_Actual (Original_Node (Op))))\n-           and then Etype (First_Actual (Original_Node (Op))) /=\n-                    Etype (Next_Actual (First_Actual (Original_Node (Op))));\n+         return Nkind (Onod) = N_Function_Call\n+           and then Present (Next_Actual (First_Actual (Onod)))\n+           and then Etype (First_Actual (Onod)) /=\n+                    Etype (Next_Actual (First_Actual (Onod)));\n       end Is_Mixed_Mode_Operand;\n \n+   --  Start of processing for Find_Universal_Operator_Type\n+\n    begin\n       if Nkind (Call) /= N_Function_Call\n         or else Nkind (Name (Call)) /= N_Expanded_Name\n@@ -3827,20 +3829,18 @@ package body Sem_Eval is\n \n       --  There are two cases where the context does not imply the type of the\n       --  operands: either the universal expression appears in a type\n-      --  type conversion, or we are in the case of a predefined relational\n+      --  conversion, or we are in the case of a predefined relational\n       --  operator, where the context type is always Boolean.\n \n       elsif Nkind (Parent (N)) = N_Type_Conversion\n-              or else\n-            Is_Relational\n-              or else\n-            In_Membership\n+        or else Is_Relational\n+        or else In_Membership\n       then\n          Pack := Entity (Prefix (Name (Call)));\n \n-         --  If the prefix is a package declared elsewhere, iterate over\n-         --  its visible entities, otherwise iterate over all declarations\n-         --  in the designated scope.\n+         --  If the prefix is a package declared elsewhere, iterate over its\n+         --  visible entities, otherwise iterate over all declarations in the\n+         --  designated scope.\n \n          if Ekind (Pack) = E_Package\n            and then not In_Open_Scopes (Pack)"}, {"sha": "9e0dece40c073e53a37700ba2c1f5932be9ef1bc", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 48, "deletions": 48, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec8363d058e085cf510a968eeb975333e18dd9f/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec8363d058e085cf510a968eeb975333e18dd9f/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=7ec8363d058e085cf510a968eeb975333e18dd9f", "patch": "@@ -5848,6 +5848,54 @@ package body Sem_Util is\n         and then Is_Imported (Entity (Name (N)));\n    end Is_CPP_Constructor_Call;\n \n+   -----------------\n+   -- Is_Delegate --\n+   -----------------\n+\n+   function Is_Delegate (T : Entity_Id) return Boolean is\n+      Desig_Type : Entity_Id;\n+\n+   begin\n+      if VM_Target /= CLI_Target then\n+         return False;\n+      end if;\n+\n+      --  Access-to-subprograms are delegates in CIL\n+\n+      if Ekind (T) = E_Access_Subprogram_Type then\n+         return True;\n+      end if;\n+\n+      if Ekind (T) not in Access_Kind then\n+\n+         --  A delegate is a managed pointer. If no designated type is defined\n+         --  it means that it's not a delegate.\n+\n+         return False;\n+      end if;\n+\n+      Desig_Type := Etype (Directly_Designated_Type (T));\n+\n+      if not Is_Tagged_Type (Desig_Type) then\n+         return False;\n+      end if;\n+\n+      --  Test if the type is inherited from [mscorlib]System.Delegate\n+\n+      while Etype (Desig_Type) /= Desig_Type loop\n+         if Chars (Scope (Desig_Type)) /= No_Name\n+           and then Is_Imported (Scope (Desig_Type))\n+           and then Get_Name_String (Chars (Scope (Desig_Type))) = \"delegate\"\n+         then\n+            return True;\n+         end if;\n+\n+         Desig_Type := Etype (Desig_Type);\n+      end loop;\n+\n+      return False;\n+   end Is_Delegate;\n+\n    ----------------------------------------------\n    -- Is_Dependent_Component_Of_Mutable_Object --\n    ----------------------------------------------\n@@ -7114,54 +7162,6 @@ package body Sem_Util is\n         and then OpenVMS_On_Target;\n    end Is_VMS_Operator;\n \n-   -----------------\n-   -- Is_Delegate --\n-   -----------------\n-\n-   function Is_Delegate (T : Entity_Id) return Boolean is\n-      Desig_Type : Entity_Id;\n-\n-   begin\n-      if VM_Target /= CLI_Target then\n-         return False;\n-      end if;\n-\n-      --  Access-to-subprograms are delegates in CIL\n-\n-      if Ekind (T) = E_Access_Subprogram_Type then\n-         return True;\n-      end if;\n-\n-      if Ekind (T) not in Access_Kind then\n-\n-         --  A delegate is a managed pointer. If no designated type is defined\n-         --  it means that it's not a delegate.\n-\n-         return False;\n-      end if;\n-\n-      Desig_Type := Etype (Directly_Designated_Type (T));\n-\n-      if not Is_Tagged_Type (Desig_Type) then\n-         return False;\n-      end if;\n-\n-      --  Test if the type is inherited from [mscorlib]System.Delegate\n-\n-      while Etype (Desig_Type) /= Desig_Type loop\n-         if Chars (Scope (Desig_Type)) /= No_Name\n-           and then Is_Imported (Scope (Desig_Type))\n-           and then Get_Name_String (Chars (Scope (Desig_Type))) = \"delegate\"\n-         then\n-            return True;\n-         end if;\n-\n-         Desig_Type := Etype (Desig_Type);\n-      end loop;\n-\n-      return False;\n-   end Is_Delegate;\n-\n    -----------------\n    -- Is_Variable --\n    -----------------"}]}