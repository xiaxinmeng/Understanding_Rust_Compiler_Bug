{"sha": "7d25f9b6f1e3c72149868fd66d5a3aac429ecb83", "node_id": "C_kwDOANBUbNoAKDdkMjVmOWI2ZjFlM2M3MjE0OTg2OGZkNjZkNWEzYWFjNDI5ZWNiODM", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2022-04-11T07:52:46Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2022-04-11T14:39:12Z"}, "message": "RISC-V: Sync arch-canonicalize and riscv-common.cc\n\nCurrently we are sync that manually, but I guess we should re-implement\narch-canonicalize in C++, so that we could reuse the stuffs from\nriscv-common.cc.\n\ngcc/ChangeLog:\n\n\t* config/riscv/arch-canonicalize: Add TODO item.\n\t(IMPLIED_EXT): Sync.\n\t(arch_canonicalize): Checking until no change.", "tree": {"sha": "08bd27ad35780319055a99c145ce86aa3446e9a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08bd27ad35780319055a99c145ce86aa3446e9a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d25f9b6f1e3c72149868fd66d5a3aac429ecb83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d25f9b6f1e3c72149868fd66d5a3aac429ecb83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d25f9b6f1e3c72149868fd66d5a3aac429ecb83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d25f9b6f1e3c72149868fd66d5a3aac429ecb83/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78c718490bc2843d4dadcef8a0ae14aed1d15a32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78c718490bc2843d4dadcef8a0ae14aed1d15a32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78c718490bc2843d4dadcef8a0ae14aed1d15a32"}], "stats": {"total": 58, "additions": 37, "deletions": 21}, "files": [{"sha": "73589af608edcfa2fedf3784e1ad2c6e9d6fe7eb", "filename": "gcc/config/riscv/arch-canonicalize", "status": "modified", "additions": 37, "deletions": 21, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d25f9b6f1e3c72149868fd66d5a3aac429ecb83/gcc%2Fconfig%2Friscv%2Farch-canonicalize", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d25f9b6f1e3c72149868fd66d5a3aac429ecb83/gcc%2Fconfig%2Friscv%2Farch-canonicalize", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Farch-canonicalize?ref=7d25f9b6f1e3c72149868fd66d5a3aac429ecb83", "patch": "@@ -20,6 +20,9 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n+# TODO: Extract riscv_subset_t from riscv-common.cc and make it can be compiled\n+#       standalone to replace this script, that also prevents us implementing\n+#       that twice and keep sync again and again.\n \n from __future__ import print_function\n import sys\n@@ -35,21 +38,30 @@ LONG_EXT_PREFIXES = ['z', 's', 'h', 'x']\n # IMPLIED_EXT(ext) -> implied extension list.\n #\n IMPLIED_EXT = {\n-  \"d\" : [\"f\"],\n-  \"zk\" : [\"zkn\"],\n-  \"zk\" : [\"zkr\"],\n-  \"zk\" : [\"zkt\"],\n-  \"zkn\" : [\"zbkb\"],\n-  \"zkn\" : [\"zbkc\"],\n-  \"zkn\" : [\"zbkx\"],\n-  \"zkn\" : [\"zkne\"],\n-  \"zkn\" : [\"zknd\"],\n-  \"zkn\" : [\"zknh\"],\n-  \"zks\" : [\"zbkb\"],\n-  \"zks\" : [\"zbkc\"],\n-  \"zks\" : [\"zbkx\"],\n-  \"zks\" : [\"zksed\"],\n-  \"zks\" : [\"zksh\"],\n+  \"d\" : [\"f\", \"zicsr\"],\n+  \"f\" : [\"zicsr\"],\n+  \"zk\" : [\"zkn\", \"zkr\", \"zkt\"],\n+  \"zkn\" : [\"zbkb\", \"zbkc\", \"zbkx\", \"zkne\", \"zknd\", \"zknh\"],\n+  \"zks\" : [\"zbkb\", \"zbkc\", \"zbkx\", \"zksed\", \"zksh\"],\n+\n+  \"v\" : [\"zvl128b\", \"zve64d\"],\n+  \"zve32x\" : [\"zvl32b\"],\n+  \"zve64x\" : [\"zve32x\", \"zvl64b\"],\n+  \"zve32f\" : [\"f\", \"zve32x\"],\n+  \"zve64f\" : [\"f\", \"zve32f\", \"zve64x\"],\n+  \"zve64d\" : [\"d\", \"zve64f\"],\n+\n+  \"zvl64b\" : [\"zvl32b\"],\n+  \"zvl128b\" : [\"zvl64b\"],\n+  \"zvl256b\" : [\"zvl128b\"],\n+  \"zvl512b\" : [\"zvl256b\"],\n+  \"zvl1024b\" : [\"zvl512b\"],\n+  \"zvl2048b\" : [\"zvl1024b\"],\n+  \"zvl4096b\" : [\"zvl2048b\"],\n+  \"zvl8192b\" : [\"zvl4096b\"],\n+  \"zvl16384b\" : [\"zvl8192b\"],\n+  \"zvl32768b\" : [\"zvl16384b\"],\n+  \"zvl65536b\" : [\"zvl32768b\"],\n }\n \n def arch_canonicalize(arch):\n@@ -77,12 +89,16 @@ def arch_canonicalize(arch):\n   #\n   # Handle implied extensions.\n   #\n-  for ext in std_exts + long_exts:\n-    if ext in IMPLIED_EXT:\n-      implied_exts = IMPLIED_EXT[ext]\n-      for implied_ext in implied_exts:\n-        if implied_ext not in std_exts + long_exts:\n-          long_exts.append(implied_ext)\n+  any_change = True\n+  while any_change:\n+    any_change = False\n+    for ext in std_exts + long_exts:\n+      if ext in IMPLIED_EXT:\n+        implied_exts = IMPLIED_EXT[ext]\n+        for implied_ext in implied_exts:\n+          if implied_ext not in std_exts + long_exts:\n+            long_exts.append(implied_ext)\n+            any_change = True\n \n   # Single letter extension might appear in the long_exts list,\n   # becasue we just append extensions list to the arch string."}]}