{"sha": "297a5329dca4f22150ec201d48b8de8a730f6447", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk3YTUzMjlkY2E0ZjIyMTUwZWMyMDFkNDhiOGRlOGE3MzBmNjQ0Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2000-06-15T21:24:39Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-06-15T21:24:39Z"}, "message": "tree.c (count_trees): New debugging function.\n\n        * tree.c (count_trees): New debugging function.\n\n        * typeck.c (build_x_function_call): Use DECL_FUNCTION_TEMPLATE_P.\n        * init.c (build_member_call): Pull out the name of a DECL.\n\n        * Makefile.in (semantics.o, pt.o): Depend on TIMEVAR_H.\n        * semantics.c (expand_body): Push to TV_INTEGRATION here.\n        * optimize.c (optimize_function): Not here.\n        * pt.c (instantiate_decl): Push to TV_PARSE.\n\nFrom-SVN: r34568", "tree": {"sha": "8ef4fe73525824ae88ccfba0772d1ad4632e748a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ef4fe73525824ae88ccfba0772d1ad4632e748a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/297a5329dca4f22150ec201d48b8de8a730f6447", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/297a5329dca4f22150ec201d48b8de8a730f6447", "html_url": "https://github.com/Rust-GCC/gccrs/commit/297a5329dca4f22150ec201d48b8de8a730f6447", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/297a5329dca4f22150ec201d48b8de8a730f6447/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f5e6b7bc9e27420b063970b49bb62bcea1bff43d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5e6b7bc9e27420b063970b49bb62bcea1bff43d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5e6b7bc9e27420b063970b49bb62bcea1bff43d"}], "stats": {"total": 59, "additions": 51, "deletions": 8}, "files": [{"sha": "9dc43eed8795e415d09e17dd929329929af9681e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/297a5329dca4f22150ec201d48b8de8a730f6447/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/297a5329dca4f22150ec201d48b8de8a730f6447/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=297a5329dca4f22150ec201d48b8de8a730f6447", "patch": "@@ -1,3 +1,15 @@\n+2000-06-15  Jason Merrill  <jason@redhat.com>\n+\n+\t* tree.c (count_trees): New debugging function.\n+\n+\t* typeck.c (build_x_function_call): Use DECL_FUNCTION_TEMPLATE_P.\n+\t* init.c (build_member_call): Pull out the name of a DECL.\n+\n+\t* Makefile.in (semantics.o, pt.o): Depend on TIMEVAR_H.\n+\t* semantics.c (expand_body): Push to TV_INTEGRATION here.\n+\t* optimize.c (optimize_function): Not here.\n+\t* pt.c (instantiate_decl): Push to TV_PARSE.\n+\n 2000-06-15  Mark Mitchell  <mark@codesourcery.com>\n \n \t* cp-tree.h (DECL_PENDING_INLINE_P): Relax checking."}, {"sha": "fa98d3bcfa791f6d64722614e356c437d06a746b", "filename": "gcc/cp/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/297a5329dca4f22150ec201d48b8de8a730f6447/gcc%2Fcp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/297a5329dca4f22150ec201d48b8de8a730f6447/gcc%2Fcp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMakefile.in?ref=297a5329dca4f22150ec201d48b8de8a730f6447", "patch": "@@ -211,6 +211,7 @@ PARSE_C = $(srcdir)/parse.c\n EXPR_H = $(srcdir)/../expr.h ../insn-codes.h\n GGC_H = $(srcdir)/../ggc.h $(srcdir)/../varray.h\n HTAB_H = $(srcdir)/../../include/hashtab.h\n+TIMEVAR_H = $(srcdir)/../timevar.h $(srcdir)/../timevar.def\n \n parse.o : $(PARSE_C) $(CXX_TREE_H) $(srcdir)/../flags.h lex.h \\\n \t$(srcdir)/../except.h $(srcdir)/../output.h $(srcdir)/../system.h \\\n@@ -306,7 +307,7 @@ repo.o : repo.c $(CXX_TREE_H) \\\n semantics.o: semantics.c $(CXX_TREE_H) lex.h \\\n   $(srcdir)/../except.h $(srcdir)/../toplev.h \\\n   $(srcdir)/../flags.h $(GGC_H) \\\n-  $(srcdir)/../output.h $(RTL_H) \n+  $(srcdir)/../output.h $(RTL_H) $(TIMEVAR_H)\n dump.o: dump.c $(CXX_TREE_H)\n optimize.o: optimize.c $(CXX_TREE_H) \\\n   $(srcdir)/../rtl.h $(srcdir)/../integrate.h ../insn-config.h \\"}, {"sha": "0dfa403b484619c8d1663cada699bc91a955db68", "filename": "gcc/cp/init.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/297a5329dca4f22150ec201d48b8de8a730f6447/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/297a5329dca4f22150ec201d48b8de8a730f6447/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=297a5329dca4f22150ec201d48b8de8a730f6447", "patch": "@@ -1470,6 +1470,9 @@ build_member_call (type, name, parmlist)\n       return build_x_function_call (name, parmlist, current_class_ref);\n     }\n \n+  if (DECL_P (name))\n+    name = DECL_NAME (name);\n+\n   if (type == std_node)\n     return build_x_function_call (do_scoped_id (name, 0), parmlist,\n \t\t\t\t  current_class_ref);"}, {"sha": "1cf5bd7cd77e0ae9999e432d2faf54f69b50662e", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/297a5329dca4f22150ec201d48b8de8a730f6447/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/297a5329dca4f22150ec201d48b8de8a730f6447/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=297a5329dca4f22150ec201d48b8de8a730f6447", "patch": "@@ -28,7 +28,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"input.h\"\n #include \"integrate.h\"\n #include \"varray.h\"\n-#include \"timevar.h\"\n \n /* To Do:\n \n@@ -810,8 +809,6 @@ optimize_function (fn)\n       tree prev_fn;\n       struct saved_scope *s;\n \n-      timevar_push (TV_INTEGRATION);\n-      \n       /* Clear out ID.  */\n       memset (&id, 0, sizeof (id));\n \n@@ -842,8 +839,6 @@ optimize_function (fn)\n       /* Clean up.  */\n       VARRAY_FREE (id.fns);\n       VARRAY_FREE (id.target_exprs);\n-\n-      timevar_pop (TV_INTEGRATION);\n     }\n }\n "}, {"sha": "6286d8f2a60760ac53a9cadc7743454b0b60ed8f", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/297a5329dca4f22150ec201d48b8de8a730f6447/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/297a5329dca4f22150ec201d48b8de8a730f6447/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=297a5329dca4f22150ec201d48b8de8a730f6447", "patch": "@@ -44,6 +44,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"defaults.h\"\n #include \"ggc.h\"\n #include \"hashtab.h\"\n+#include \"timevar.h\"\n \n /* The type of functions taking a tree, and some additional data, and\n    returning an int.  */\n@@ -9530,6 +9531,8 @@ instantiate_decl (d, defer_ok)\n   if (! push_tinst_level (d))\n     return d;\n \n+  timevar_push (TV_PARSE);\n+\n   /* Set TD to the template whose DECL_TEMPLATE_RESULT is the pattern\n      for the instantiation.  This is not always the most general\n      template.  Consider, for example:\n@@ -9721,6 +9724,8 @@ instantiate_decl (d, defer_ok)\n   pop_from_top_level ();\n   pop_tinst_level ();\n \n+  timevar_pop (TV_PARSE);\n+\n   return d;\n }\n "}, {"sha": "49dc5ddd85f35b2b7f4bb4644dab46afd478927c", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/297a5329dca4f22150ec201d48b8de8a730f6447/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/297a5329dca4f22150ec201d48b8de8a730f6447/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=297a5329dca4f22150ec201d48b8de8a730f6447", "patch": "@@ -2789,11 +2789,14 @@ expand_body (fn)\n       return;\n     }\n \n-  timevar_push (TV_EXPAND);\n+  timevar_push (TV_INTEGRATION);\n \n   /* Optimize the body of the function before expanding it.  */\n   optimize_function (fn);\n \n+  timevar_pop (TV_INTEGRATION);\n+  timevar_push (TV_EXPAND);\n+\n   /* Save the current file name and line number.  When we expand the\n      body of the function, we'll set LINENO and INPUT_FILENAME so that\n      error-mesages come out in the right places.  */"}, {"sha": "c890c37691e80f102e06458e44f76947ae098af2", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/297a5329dca4f22150ec201d48b8de8a730f6447/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/297a5329dca4f22150ec201d48b8de8a730f6447/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=297a5329dca4f22150ec201d48b8de8a730f6447", "patch": "@@ -1396,6 +1396,30 @@ walk_tree (tp, func, data)\n #undef WALK_SUBTREE\n }\n \n+int n_trees;\n+\n+static tree\n+count_trees_r (tp, walk_subtrees, data)\n+     tree *tp ATTRIBUTE_UNUSED;\n+     int *walk_subtrees ATTRIBUTE_UNUSED;\n+     void *data ATTRIBUTE_UNUSED;\n+{\n+  ++n_trees;\n+  return NULL_TREE;\n+}\n+\n+/* Debugging function for measuring the rough complexity of a tree\n+   representation.  */\n+\n+int\n+count_trees (t)\n+     tree t;\n+{\n+  n_trees = 0;\n+  walk_tree (&t, count_trees_r, NULL);\n+  return n_trees;\n+}  \n+\n /* Passed to walk_tree.  Checks for the use of types with no linkage.  */\n \n static tree"}, {"sha": "b167c7ee19866c564e78cf0f721be75f5856e086", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/297a5329dca4f22150ec201d48b8de8a730f6447/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/297a5329dca4f22150ec201d48b8de8a730f6447/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=297a5329dca4f22150ec201d48b8de8a730f6447", "patch": "@@ -2578,7 +2578,7 @@ build_x_function_call (function, params, decl)\n \n   if ((TREE_CODE (function) == FUNCTION_DECL\n        && DECL_STATIC_FUNCTION_P (function))\n-      || (TREE_CODE (function) == TEMPLATE_DECL\n+      || (DECL_FUNCTION_TEMPLATE_P (function)\n \t  && DECL_STATIC_FUNCTION_P (DECL_TEMPLATE_RESULT (function))))\n       return build_member_call (DECL_CONTEXT (function), \n \t\t\t\ttemplate_id "}]}