{"sha": "6f4d39bb3f20a2bdf5e8767596557030241f9219", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY0ZDM5YmIzZjIwYTJiZGY1ZTg3Njc1OTY1NTcwMzAyNDFmOTIxOQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2011-05-07T05:38:08Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-05-07T05:38:08Z"}, "message": "re PR fortran/18918 (Eventually support Fortran 2008's coarrays [co-arrays])\n\n2011-05-07  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/18918\n        PR fortran/48919\n        * trans.h: Move gfc_init_coarray_decl prototype ...\n        * gfortran.h: ... to here.\n        * parse.c (translate_all_program_units): Call\n        * gfc_init_coarray_decl.\n        (gfc_parse_file): Update translate_all_program_units call.\n        * trans-decl.c (gfc_init_coarray_decl): Fix variable\n        * declaration,\n        new argument whether DECL_EXTERNAL should be used.\n        (create_main_function): Update gfc_init_coarray_decl call.\n        * trans-intrinsic.c (trans_this_image, trans_image_index,\n        conv_intrinsic_cobound): Ditto.\n\nFrom-SVN: r173528", "tree": {"sha": "5f68d70948ef0ed456c9d5d7318754f161728822", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f68d70948ef0ed456c9d5d7318754f161728822"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f4d39bb3f20a2bdf5e8767596557030241f9219", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f4d39bb3f20a2bdf5e8767596557030241f9219", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f4d39bb3f20a2bdf5e8767596557030241f9219", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f4d39bb3f20a2bdf5e8767596557030241f9219/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9142588a737852f26d123802a1df171ef4ee0893", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9142588a737852f26d123802a1df171ef4ee0893", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9142588a737852f26d123802a1df171ef4ee0893"}], "stats": {"total": 80, "additions": 61, "deletions": 19}, "files": [{"sha": "0a392c544124d8626f6c4f26b7e73d8fb07b5d3f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4d39bb3f20a2bdf5e8767596557030241f9219/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4d39bb3f20a2bdf5e8767596557030241f9219/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6f4d39bb3f20a2bdf5e8767596557030241f9219", "patch": "@@ -1,3 +1,17 @@\n+2011-05-07  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/18918\n+\tPR fortran/48919\n+\t* trans.h: Move gfc_init_coarray_decl prototype ...\n+\t* gfortran.h: ... to here.\n+\t* parse.c (translate_all_program_units): Call gfc_init_coarray_decl.\n+\t(gfc_parse_file): Update translate_all_program_units call.\n+\t* trans-decl.c (gfc_init_coarray_decl): Fix variable declaration,\n+\tnew argument whether DECL_EXTERNAL should be used.\n+\t(create_main_function): Update gfc_init_coarray_decl call.\n+\t* trans-intrinsic.c (trans_this_image, trans_image_index,\n+\tconv_intrinsic_cobound): Ditto.\n+\n 2011-05-06  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/18918"}, {"sha": "92adf72e8af544f87758f7eac97b233f20f53b06", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4d39bb3f20a2bdf5e8767596557030241f9219/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4d39bb3f20a2bdf5e8767596557030241f9219/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=6f4d39bb3f20a2bdf5e8767596557030241f9219", "patch": "@@ -2851,6 +2851,7 @@ bool gfc_is_function_return_value (gfc_symbol *, gfc_namespace *);\n /* trans.c */\n void gfc_generate_code (gfc_namespace *);\n void gfc_generate_module_code (gfc_namespace *);\n+void gfc_init_coarray_decl (bool);\n \n /* bbt.c */\n typedef int (*compare_fn) (void *, void *);"}, {"sha": "80fcf0014305501bccfaf7a21f1961e2a6f0069b", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4d39bb3f20a2bdf5e8767596557030241f9219/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4d39bb3f20a2bdf5e8767596557030241f9219/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=6f4d39bb3f20a2bdf5e8767596557030241f9219", "patch": "@@ -4231,13 +4231,19 @@ clean_up_modules (gfc_gsymbol *gsym)\n    is active. This could be in a different order to resolution if\n    there are forward references in the file.  */\n static void\n-translate_all_program_units (gfc_namespace *gfc_global_ns_list)\n+translate_all_program_units (gfc_namespace *gfc_global_ns_list,\n+\t\t\t     bool main_in_tu)\n {\n   int errors;\n \n   gfc_current_ns = gfc_global_ns_list;\n   gfc_get_errors (NULL, &errors);\n \n+  /* If the main program is in the translation unit and we have\n+     -fcoarray=libs, generate the static variables.  */\n+  if (gfc_option.coarray == GFC_FCOARRAY_LIB && main_in_tu)\n+    gfc_init_coarray_decl (true);\n+\n   /* We first translate all modules to make sure that later parts\n      of the program can use the decl. Then we translate the nonmodules.  */\n \n@@ -4475,7 +4481,7 @@ gfc_parse_file (void)\n       }\n \n   /* Do the translation.  */\n-  translate_all_program_units (gfc_global_ns_list);\n+  translate_all_program_units (gfc_global_ns_list, seen_program);\n \n termination:\n "}, {"sha": "77e2a594ee26498dc842a27164694f5b491b2302", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 33, "deletions": 9, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4d39bb3f20a2bdf5e8767596557030241f9219/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4d39bb3f20a2bdf5e8767596557030241f9219/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=6f4d39bb3f20a2bdf5e8767596557030241f9219", "patch": "@@ -4454,10 +4454,16 @@ add_argument_checking (stmtblock_t *block, gfc_symbol *sym)\n }\n \n \n+/* Generate the _gfortran_caf_this_image and _gfortran_caf_num_images\n+   global variables for -fcoarray=lib. They are placed into the translation\n+   unit of the main program.  Make sure that in one TU (the one of the main\n+   program), the first call to gfc_init_coarray_decl is done with true.\n+   Otherwise, expect link errors.  */\n+\n void\n-gfc_init_coarray_decl (void)\n+gfc_init_coarray_decl (bool main_tu)\n {\n-  tree save_fn_decl = current_function_decl;\n+  tree save_fn_decl;\n \n   if (gfc_option.coarray != GFC_FCOARRAY_LIB)\n     return;\n@@ -4469,19 +4475,37 @@ gfc_init_coarray_decl (void)\n   current_function_decl = NULL_TREE;\n   push_cfun (cfun);\n \n-  gfort_gvar_caf_this_image = gfc_create_var (integer_type_node,\n-\t\t\t\t\t      PREFIX(\"caf_this_image\"));\n+  gfort_gvar_caf_this_image\n+\t= build_decl (input_location, VAR_DECL,\n+\t\t      get_identifier (PREFIX(\"caf_this_image\")),\n+\t\t      integer_type_node);\n   DECL_ARTIFICIAL (gfort_gvar_caf_this_image) = 1;\n   TREE_USED (gfort_gvar_caf_this_image) = 1;\n   TREE_PUBLIC (gfort_gvar_caf_this_image) = 1;\n-  TREE_STATIC (gfort_gvar_caf_this_image) = 1;\n+  TREE_READONLY (gfort_gvar_caf_this_image) = 0;\n+\n+  if (main_tu)\n+    TREE_STATIC (gfort_gvar_caf_this_image) = 1;\n+  else\n+    DECL_EXTERNAL (gfort_gvar_caf_this_image) = 1;\n+\n+  pushdecl_top_level (gfort_gvar_caf_this_image);\n \n-  gfort_gvar_caf_num_images = gfc_create_var (integer_type_node,\n-\t\t\t\t\t      PREFIX(\"caf_num_images\"));\n+  gfort_gvar_caf_num_images\n+\t= build_decl (input_location, VAR_DECL,\n+\t\t      get_identifier (PREFIX(\"caf_num_images\")),\n+\t\t      integer_type_node);\n   DECL_ARTIFICIAL (gfort_gvar_caf_num_images) = 1;\n   TREE_USED (gfort_gvar_caf_num_images) = 1;\n   TREE_PUBLIC (gfort_gvar_caf_num_images) = 1;\n-  TREE_STATIC (gfort_gvar_caf_num_images) = 1;\n+  TREE_READONLY (gfort_gvar_caf_num_images) = 0;\n+\n+  if (main_tu)\n+    TREE_STATIC (gfort_gvar_caf_num_images) = 1;\n+  else\n+    DECL_EXTERNAL (gfort_gvar_caf_num_images) = 1;\n+\n+  pushdecl_top_level (gfort_gvar_caf_num_images);\n \n   pop_cfun ();\n   current_function_decl = save_fn_decl;\n@@ -4575,7 +4599,7 @@ create_main_function (tree fndecl)\n       pppchar_type\n \t= build_pointer_type (build_pointer_type (pchar_type_node));\n \n-      gfc_init_coarray_decl ();\n+      gfc_init_coarray_decl (true);\n       tmp = build_call_expr_loc (input_location, gfor_fndecl_caf_init, 4,\n \t\tgfc_build_addr_expr (pint_type, argc),\n \t\tgfc_build_addr_expr (pppchar_type, argv),"}, {"sha": "fa5d3cfc5dfe74724b9e1f6d88ce87007c43e33c", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4d39bb3f20a2bdf5e8767596557030241f9219/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4d39bb3f20a2bdf5e8767596557030241f9219/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=6f4d39bb3f20a2bdf5e8767596557030241f9219", "patch": "@@ -952,7 +952,7 @@ trans_this_image (gfc_se * se, gfc_expr *expr)\n   /* The case -fcoarray=single is handled elsewhere.  */\n   gcc_assert (gfc_option.coarray != GFC_FCOARRAY_SINGLE);\n \n-  gfc_init_coarray_decl ();\n+  gfc_init_coarray_decl (false);\n \n   /* Argument-free version: THIS_IMAGE().  */\n   if (expr->value.function.actual->expr == NULL)\n@@ -1252,7 +1252,7 @@ trans_image_index (gfc_se * se, gfc_expr *expr)\n     num_images = build_int_cst (type, 1);\n   else\n     {\n-      gfc_init_coarray_decl ();\n+      gfc_init_coarray_decl (false);\n       num_images = gfort_gvar_caf_num_images;\n     }\n \n@@ -1272,7 +1272,7 @@ trans_image_index (gfc_se * se, gfc_expr *expr)\n static void\n trans_num_images (gfc_se * se)\n {\n-  gfc_init_coarray_decl ();\n+  gfc_init_coarray_decl (false);\n   se->expr = gfort_gvar_caf_num_images;\n }\n \n@@ -1575,7 +1575,7 @@ conv_intrinsic_cobound (gfc_se * se, gfc_expr * expr)\n \t{\n           tree cosize;\n \n-\t  gfc_init_coarray_decl ();\n+\t  gfc_init_coarray_decl (false);\n \t  cosize = gfc_conv_descriptor_cosize (desc, arg->expr->rank, corank);\n \n \t  tmp = fold_build2_loc (input_location, MINUS_EXPR,\n@@ -1591,7 +1591,7 @@ conv_intrinsic_cobound (gfc_se * se, gfc_expr * expr)\n       else if (gfc_option.coarray != GFC_FCOARRAY_SINGLE)\n \t{\n \t  /* ubound = lbound + num_images() - 1.  */\n-\t  gfc_init_coarray_decl ();\n+\t  gfc_init_coarray_decl (false);\n \t  tmp = fold_build2_loc (input_location, MINUS_EXPR,\n \t\t\t\t gfc_array_index_type,\n \t\t\t\t gfort_gvar_caf_num_images,"}, {"sha": "2b06d80a9424f661b733af758155827e3dafa1a5", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4d39bb3f20a2bdf5e8767596557030241f9219/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4d39bb3f20a2bdf5e8767596557030241f9219/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=6f4d39bb3f20a2bdf5e8767596557030241f9219", "patch": "@@ -449,9 +449,6 @@ bool gfc_get_module_backend_decl (gfc_symbol *);\n /* Return the variable decl for a symbol.  */\n tree gfc_get_symbol_decl (gfc_symbol *);\n \n-/* Initialize coarray global variables.  */\n-void gfc_init_coarray_decl (void);\n-\n /* Build a static initializer.  */\n tree gfc_conv_initializer (gfc_expr *, gfc_typespec *, tree, bool, bool, bool);\n "}]}