{"sha": "554cf33034e4a4ba3960a0885f45fa7a919dbd0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU0Y2YzMzAzNGU0YTRiYTM5NjBhMDg4NWY0NWZhN2E5MTlkYmQwZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-02-19T09:50:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-02-19T09:50:30Z"}, "message": "re PR middle-end/42233 (c++ builtin_expect code generation regression)\n\n\tPR middle-end/42233\n\t* gimplify.c (gimple_boolify): For __builtin_expect call\n\tgimple_boolify also on its first argument.\n\nFrom-SVN: r156888", "tree": {"sha": "c44db830c7f9a0e1b1c2a068434cbcd0e8876bc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c44db830c7f9a0e1b1c2a068434cbcd0e8876bc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/554cf33034e4a4ba3960a0885f45fa7a919dbd0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/554cf33034e4a4ba3960a0885f45fa7a919dbd0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/554cf33034e4a4ba3960a0885f45fa7a919dbd0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/554cf33034e4a4ba3960a0885f45fa7a919dbd0d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "40e053e3b823a02b3b77aebefbd037d0d9cb4707", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40e053e3b823a02b3b77aebefbd037d0d9cb4707", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40e053e3b823a02b3b77aebefbd037d0d9cb4707"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "bde0623d236fb5fc2ad9e46e4942f76e297d7c40", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/554cf33034e4a4ba3960a0885f45fa7a919dbd0d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/554cf33034e4a4ba3960a0885f45fa7a919dbd0d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=554cf33034e4a4ba3960a0885f45fa7a919dbd0d", "patch": "@@ -1,3 +1,9 @@\n+2010-02-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/42233\n+\t* gimplify.c (gimple_boolify): For __builtin_expect call\n+\tgimple_boolify also on its first argument.\n+\n 2010-02-18  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* configure.ac (gnu-unique-object): Wrap regexps using [] in"}, {"sha": "618e3a6613787537f2e971a183210995f5a9b706", "filename": "gcc/gimplify.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/554cf33034e4a4ba3960a0885f45fa7a919dbd0d/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/554cf33034e4a4ba3960a0885f45fa7a919dbd0d/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=554cf33034e4a4ba3960a0885f45fa7a919dbd0d", "patch": "@@ -2720,6 +2720,32 @@ gimple_boolify (tree expr)\n   tree type = TREE_TYPE (expr);\n   location_t loc = EXPR_LOCATION (expr);\n \n+  if (TREE_CODE (expr) == NE_EXPR\n+      && TREE_CODE (TREE_OPERAND (expr, 0)) == CALL_EXPR\n+      && integer_zerop (TREE_OPERAND (expr, 1)))\n+    {\n+      tree call = TREE_OPERAND (expr, 0);\n+      tree fn = get_callee_fndecl (call);\n+\n+      /* For __builtin_expect ((long) (x), y) recurse into x as well.  */\n+      if (fn\n+\t  && DECL_BUILT_IN_CLASS (fn) == BUILT_IN_NORMAL\n+\t  && DECL_FUNCTION_CODE (fn) == BUILT_IN_EXPECT\n+\t  && call_expr_nargs (call) == 2)\n+\t{\n+\t  tree arg = CALL_EXPR_ARG (call, 0);\n+\t  if (arg)\n+\t    {\n+\t      if (TREE_CODE (arg) == NOP_EXPR\n+\t\t  && TREE_TYPE (arg) == TREE_TYPE (call))\n+\t\targ = TREE_OPERAND (arg, 0);\n+\t      arg = gimple_boolify (arg);\n+\t      CALL_EXPR_ARG (call, 0)\n+\t\t= fold_convert_loc (loc, TREE_TYPE (call), arg);\n+\t    }\n+\t}\n+    }\n+\n   if (TREE_CODE (type) == BOOLEAN_TYPE)\n     return expr;\n "}]}