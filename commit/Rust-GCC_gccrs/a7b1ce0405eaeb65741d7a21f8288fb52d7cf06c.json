{"sha": "a7b1ce0405eaeb65741d7a21f8288fb52d7cf06c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdiMWNlMDQwNWVhZWI2NTc0MWQ3YTIxZjgyODhmYjUyZDdjZjA2Yw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-12-05T21:00:15Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-12-05T21:00:15Z"}, "message": "re PR c++/79228 ('i' suffix for __complex__ extension interferes with C++14 UDLs for std::complex)\n\n\tPR c++/79228\n\t* expr.c (interpret_float_suffix): Avoid memcmp.\n\t(interpret_int_suffix): Likewise.  Don't check for if.\n\nFrom-SVN: r255434", "tree": {"sha": "f89caeee8c05c6e6d793f7fc99d1831444af875a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f89caeee8c05c6e6d793f7fc99d1831444af875a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7b1ce0405eaeb65741d7a21f8288fb52d7cf06c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7b1ce0405eaeb65741d7a21f8288fb52d7cf06c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7b1ce0405eaeb65741d7a21f8288fb52d7cf06c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7b1ce0405eaeb65741d7a21f8288fb52d7cf06c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "186d43a78e945ebe9fbe217fc341847af7f95d30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/186d43a78e945ebe9fbe217fc341847af7f95d30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/186d43a78e945ebe9fbe217fc341847af7f95d30"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "76f10fb2af75a713a38c949690c884b52b37a5f9", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b1ce0405eaeb65741d7a21f8288fb52d7cf06c/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b1ce0405eaeb65741d7a21f8288fb52d7cf06c/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=a7b1ce0405eaeb65741d7a21f8288fb52d7cf06c", "patch": "@@ -1,3 +1,9 @@\n+2017-12-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/79228\n+\t* expr.c (interpret_float_suffix): Avoid memcmp.\n+\t(interpret_int_suffix): Likewise.  Don't check for if.\n+\n 2017-12-01  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/79228 - extensions hide C++14 complex literal operators"}, {"sha": "b26fe2539fe42a6f06b28aa254ff58fd2ac94912", "filename": "libcpp/expr.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b1ce0405eaeb65741d7a21f8288fb52d7cf06c/libcpp%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b1ce0405eaeb65741d7a21f8288fb52d7cf06c/libcpp%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fexpr.c?ref=a7b1ce0405eaeb65741d7a21f8288fb52d7cf06c", "patch": "@@ -280,9 +280,10 @@ interpret_float_suffix (cpp_reader *pfile, const uchar *s, size_t len)\n \t them as user-defined literals.  */\n       if (CPP_OPTION (pfile, cplusplus)\n \t  && CPP_OPTION (pfile, lang) > CLK_CXX11\n-\t  && (!memcmp (orig_s, \"i\", orig_len)\n-\t      || !memcmp (orig_s, \"if\", orig_len)\n-\t      || !memcmp (orig_s, \"il\", orig_len)))\n+\t  && orig_s[0] == 'i'\n+\t  && (orig_len == 1\n+\t      || (orig_len == 2\n+\t\t  && (orig_s[1] == 'f' || orig_s[1] == 'l'))))\n \treturn 0;\n     }\n \n@@ -345,9 +346,8 @@ interpret_int_suffix (cpp_reader *pfile, const uchar *s, size_t len)\n \t them as user-defined literals.  */\n       if (CPP_OPTION (pfile, cplusplus)\n \t  && CPP_OPTION (pfile, lang) > CLK_CXX11\n-\t  && (!memcmp (s, \"i\", orig_len)\n-\t      || !memcmp (s, \"if\", orig_len)\n-\t      || !memcmp (s, \"il\", orig_len)))\n+\t  && s[0] == 'i'\n+\t  && (orig_len == 1 || (orig_len == 2 && s[1] == 'l')))\n \treturn 0;\n     }\n "}]}