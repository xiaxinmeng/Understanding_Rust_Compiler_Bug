{"sha": "5796b4e4623eac9924f312f402ffe57dffbadaf4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc5NmI0ZTQ2MjNlYWM5OTI0ZjMxMmY0MDJmZmU1N2RmZmJhZGFmNA==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2013-07-21T16:46:05Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2013-07-21T16:46:05Z"}, "message": "Fix typo.\n\nFrom-SVN: r201101", "tree": {"sha": "06a882b554268375b16faf89a6e8d4a8b1a04629", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06a882b554268375b16faf89a6e8d4a8b1a04629"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5796b4e4623eac9924f312f402ffe57dffbadaf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5796b4e4623eac9924f312f402ffe57dffbadaf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5796b4e4623eac9924f312f402ffe57dffbadaf4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5796b4e4623eac9924f312f402ffe57dffbadaf4/comments", "author": null, "committer": null, "parents": [{"sha": "a44376202015b5a7c7ce137c6bfb91624b0d52ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a44376202015b5a7c7ce137c6bfb91624b0d52ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a44376202015b5a7c7ce137c6bfb91624b0d52ec"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "4fc720cf19cebe407131c30275ae698493304f48", "filename": "gcc/ipa.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5796b4e4623eac9924f312f402ffe57dffbadaf4/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5796b4e4623eac9924f312f402ffe57dffbadaf4/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=5796b4e4623eac9924f312f402ffe57dffbadaf4", "patch": "@@ -548,8 +548,8 @@ static bool\n comdat_can_be_unshared_p_1 (symtab_node node)\n {\n   /* When address is taken, we don't know if equality comparison won't\n-     break eventaully. Exception are virutal functions and vtables, where\n-     this is not possible by language standard.  */\n+     break eventually. Exception are virutal functions and vtables,\n+     where this is not possible by language standard.  */\n   if (!DECL_VIRTUAL_P (node->symbol.decl)\n       && address_taken_from_non_vtable_p (node))\n     return false;"}]}