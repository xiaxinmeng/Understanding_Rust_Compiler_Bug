{"sha": "fc722a0ea442f0b037a0aecdabc74f182b508d5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM3MjJhMGVhNDQyZjBiMDM3YTBhZWNkYWJjNzRmMTgyYjUwOGQ1Yw==", "commit": {"author": {"name": "Johannes Singler", "email": "singler@kit.edu", "date": "2011-01-24T17:07:35Z"}, "committer": {"name": "Johannes Singler", "email": "singler@gcc.gnu.org", "date": "2011-01-24T17:07:35Z"}, "message": "re PR libstdc++/47433 (libstdc++ parallel mode calls std::swap explicitely)\n\n2011-01-24  Johannes Singler  <singler@kit.edu>\n\n        PR libstdc++/47433\n        * include/parallel/losertree.h\n        (_LoserTree<>::__delete_min_insert):\n        Do not qualify swap with std:: for value type, \n        but include a using directive instead.\n        (_LoserTreeUnguarded<>::__delete_min_insert): Likewise.\n        * include/parallel/balanced_quicksort.h (__qsb_divide):\n        Use std::iter_swap instead of std::swap.\n        (__qsb_local_sort_with_helping): Likewise.\n        * include/parallel/partition.h (__parallel_partition): \n        Likewise. (__parallel_nth_element): Likewise.\n\nFrom-SVN: r169171", "tree": {"sha": "e2efd3a9dbc49e1b9103c8a35bf237e498ac15f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2efd3a9dbc49e1b9103c8a35bf237e498ac15f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc722a0ea442f0b037a0aecdabc74f182b508d5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc722a0ea442f0b037a0aecdabc74f182b508d5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc722a0ea442f0b037a0aecdabc74f182b508d5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc722a0ea442f0b037a0aecdabc74f182b508d5c/comments", "author": null, "committer": null, "parents": [{"sha": "a40d79d7af069afb35fb1655a45bf3e04a202e35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a40d79d7af069afb35fb1655a45bf3e04a202e35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a40d79d7af069afb35fb1655a45bf3e04a202e35"}], "stats": {"total": 43, "additions": 30, "deletions": 13}, "files": [{"sha": "361d766b2841b264d434f2de7baeccbc9321dda9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc722a0ea442f0b037a0aecdabc74f182b508d5c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc722a0ea442f0b037a0aecdabc74f182b508d5c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=fc722a0ea442f0b037a0aecdabc74f182b508d5c", "patch": "@@ -1,3 +1,17 @@\n+2011-01-24  Johannes Singler  <singler@kit.edu>\n+\n+        PR libstdc++/47433\n+        * include/parallel/losertree.h\n+        (_LoserTree<>::__delete_min_insert):\n+        Do not qualify swap with std:: for value type, \n+        but include a using directive instead.\n+        (_LoserTreeUnguarded<>::__delete_min_insert): Likewise.\n+        * include/parallel/balanced_quicksort.h (__qsb_divide):\n+        Use std::iter_swap instead of std::swap.\n+        (__qsb_local_sort_with_helping): Likewise.\n+        * include/parallel/partition.h (__parallel_partition): \n+        Likewise. (__parallel_nth_element): Likewise.\n+\n 2011-01-24  Johannes Singler  <singler@kit.edu>\n \n         PR libstdc++/47437"}, {"sha": "441e7b44acaf5778d7d4a3df9c229116729f2b68", "filename": "libstdc++-v3/include/parallel/balanced_quicksort.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc722a0ea442f0b037a0aecdabc74f182b508d5c/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fbalanced_quicksort.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc722a0ea442f0b037a0aecdabc74f182b508d5c/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fbalanced_quicksort.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fbalanced_quicksort.h?ref=fc722a0ea442f0b037a0aecdabc74f182b508d5c", "patch": "@@ -132,7 +132,7 @@ namespace __gnu_parallel\n \n       // Swap pivot value to end.\n       if (__pivot_pos != (__end - 1))\n-\tstd::swap(*__pivot_pos, *(__end - 1));\n+\tstd::iter_swap(__pivot_pos, __end - 1);\n       __pivot_pos = __end - 1;\n \n       __gnu_parallel::__binder2nd<_Compare, _ValueType, _ValueType, bool>\n@@ -144,7 +144,7 @@ namespace __gnu_parallel\n \t\t\t\t\t\t\t __num_threads);\n \n       // Swap back pivot to middle.\n-      std::swap(*(__begin + __split_pos), *__pivot_pos);\n+      std::iter_swap(__begin + __split_pos, __pivot_pos);\n       __pivot_pos = __begin + __split_pos;\n \n #if _GLIBCXX_ASSERTIONS\n@@ -284,7 +284,7 @@ namespace __gnu_parallel\n \n               // Swap __pivot_pos value to end.\n               if (__pivot_pos != (__end - 1))\n-        \tstd::swap(*__pivot_pos, *(__end - 1));\n+        \tstd::iter_swap(__pivot_pos, __end - 1);\n               __pivot_pos = __end - 1;\n \n               __gnu_parallel::__binder2nd\n@@ -303,7 +303,7 @@ namespace __gnu_parallel\n #endif\n               // Swap pivot back to middle.\n               if (__split_pos1 != __pivot_pos)\n-        \tstd::swap(*__split_pos1, *__pivot_pos);\n+        \tstd::iter_swap(__split_pos1, __pivot_pos);\n               __pivot_pos = __split_pos1;\n \n               // In case all elements are equal, __split_pos1 == 0."}, {"sha": "ccc930b29fb4137cd3bdcc174c0a0461178ef046", "filename": "libstdc++-v3/include/parallel/losertree.h", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc722a0ea442f0b037a0aecdabc74f182b508d5c/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Flosertree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc722a0ea442f0b037a0aecdabc74f182b508d5c/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Flosertree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Flosertree.h?ref=fc722a0ea442f0b037a0aecdabc74f182b508d5c", "patch": "@@ -216,6 +216,7 @@ namespace __gnu_parallel\n       void\n       __delete_min_insert(_Tp __key, bool __sup)\n       {\n+        using std::swap;\n #if _GLIBCXX_ASSERTIONS\n \t// no dummy sequence can ever be at the top!\n \t_GLIBCXX_PARALLEL_ASSERT(_M_losers[0]._M_source != -1);\n@@ -236,7 +237,7 @@ namespace __gnu_parallel\n \t\t// The other one is smaller.\n \t\tstd::swap(_M_losers[__pos]._M_sup, __sup);\n \t\tstd::swap(_M_losers[__pos]._M_source, __source);\n-\t\tstd::swap(_M_losers[__pos]._M_key, __key);\n+\t\tswap(_M_losers[__pos]._M_key, __key);\n \t      }\n \t  }\n \n@@ -316,6 +317,7 @@ namespace __gnu_parallel\n       void\n       __delete_min_insert(_Tp __key, bool __sup)\n       {\n+        using std::swap;\n #if _GLIBCXX_ASSERTIONS\n \t// no dummy sequence can ever be at the top!\n \t_GLIBCXX_PARALLEL_ASSERT(_M_losers[0]._M_source != -1);\n@@ -332,7 +334,7 @@ namespace __gnu_parallel\n \t\t// The other one is smaller.\n \t\tstd::swap(_M_losers[__pos]._M_sup, __sup);\n \t\tstd::swap(_M_losers[__pos]._M_source, __source);\n-\t\tstd::swap(_M_losers[__pos]._M_key, __key);\n+\t\tswap(_M_losers[__pos]._M_key, __key);\n \t      }\n \t  }\n \n@@ -679,6 +681,7 @@ namespace __gnu_parallel\n       void\n       __delete_min_insert(_Tp __key, bool)\n       {\n+        using std::swap;\n #if _GLIBCXX_ASSERTIONS\n \t// no dummy sequence can ever be at the top!\n \t_GLIBCXX_PARALLEL_ASSERT(_M_losers[0]._M_source != -1);\n@@ -695,7 +698,7 @@ namespace __gnu_parallel\n \t      {\n \t\t// The other one is smaller.\n \t\tstd::swap(_M_losers[__pos]._M_source, __source);\n-\t\tstd::swap(_M_losers[__pos]._M_key, __key);\n+\t\tswap(_M_losers[__pos]._M_key, __key);\n \t      }\n \t  }\n \n@@ -786,7 +789,7 @@ namespace __gnu_parallel\n \t      {\n \t\t// The other one is smaller.\n \t\tstd::swap(_M_losers[__pos]._M_source, __source);\n-\t\tstd::swap(_M_losers[__pos]._M_key, __key);\n+\t\tswap(_M_losers[__pos]._M_key, __key);\n \t      }\n \t  }\n "}, {"sha": "c651321584e117ef8b4ab3a595a095d2a05bbac7", "filename": "libstdc++-v3/include/parallel/partition.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc722a0ea442f0b037a0aecdabc74f182b508d5c/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpartition.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc722a0ea442f0b037a0aecdabc74f182b508d5c/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpartition.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpartition.h?ref=fc722a0ea442f0b037a0aecdabc74f182b508d5c", "patch": "@@ -178,8 +178,8 @@ namespace __gnu_parallel\n \t\t\t// Fetch new chunk(__s).\n \t\t\tbreak;\n \n-\t\t      std::swap(__begin[__thread_left],\n-\t\t\t\t__begin[__thread_right]);\n+\t\t      std::iter_swap(__begin + __thread_left,\n+                             __begin + __thread_right);\n \t\t      ++__thread_left;\n \t\t      --__thread_right;\n \t\t    }\n@@ -301,7 +301,7 @@ namespace __gnu_parallel\n \n \t    if (__final_left == __final_right)\n \t      break;\n-\t    std::swap(__begin[__final_left], __begin[__final_right]);\n+\t    std::iter_swap(__begin + __final_left, __begin + __final_right);\n \t    ++__final_left;\n \t    --__final_right;\n \t  }\n@@ -354,7 +354,7 @@ namespace __gnu_parallel\n \n           // Swap __pivot_pos value to end.\n           if (__pivot_pos != (__end - 1))\n-            std::swap(*__pivot_pos, *(__end - 1));\n+            std::iter_swap(__pivot_pos, __end - 1);\n           __pivot_pos = __end - 1;\n \n           // _Compare must have first_value_type, second_value_type,\n@@ -376,7 +376,7 @@ namespace __gnu_parallel\n \n           // Swap pivot back to middle.\n           if (__split_pos1 != __pivot_pos)\n-            std::swap(*__split_pos1, *__pivot_pos);\n+            std::iter_swap(__split_pos1, __pivot_pos);\n           __pivot_pos = __split_pos1;\n \n           // In case all elements are equal, __split_pos1 == 0"}]}