{"sha": "4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY1Zjk5NjJjOGM5M2Y5ZTQyMGI2YjQyYTMxZWM2ZGFhNGVmYjI2Yw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-07-15T20:23:08Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-07-15T20:23:08Z"}, "message": "Replace references to C++0x with C++11 in comments\n\n\t* include/bits/algorithmfwd.h: Change C++0x to C++11 in comments.\n\t* include/bits/move.h: Likewise.\n\t* include/bits/postypes.h: Likewise.\n\t* include/debug/bitset: Likewise.\n\t* include/ext/pb_ds/detail/type_utils.hpp: Likewise.\n\t* include/ext/string_conversions.h: Change C++0x to __cxx11 in\n\tcomment.\n\t* testsuite/27_io/fpos/14320-1.cc: Change C++0x to C++11 in comment.\n\t* testsuite/util/thread/all.h: Likewise.\n\nFrom-SVN: r238402", "tree": {"sha": "00c34d78409cc316928f15fa6601341e89f6cd89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00c34d78409cc316928f15fa6601341e89f6cd89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a07b81c7422349f3a104058af3ae192565a6a6f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a07b81c7422349f3a104058af3ae192565a6a6f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a07b81c7422349f3a104058af3ae192565a6a6f4"}], "stats": {"total": 58, "additions": 34, "deletions": 24}, "files": [{"sha": "65998e324e10a4eaf5bf2647eb0ec579f5f4f1e1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c", "patch": "@@ -1,5 +1,15 @@\n 2016-07-15  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/algorithmfwd.h: Change C++0x to C++11 in comments.\n+\t* include/bits/move.h: Likewise.\n+\t* include/bits/postypes.h: Likewise.\n+\t* include/debug/bitset: Likewise.\n+\t* include/ext/pb_ds/detail/type_utils.hpp: Likewise.\n+\t* include/ext/string_conversions.h: Change C++0x to __cxx11 in\n+\tcomment.\n+\t* testsuite/27_io/fpos/14320-1.cc: Change C++0x to C++11 in comment.\n+\t* testsuite/util/thread/all.h: Likewise.\n+\n \t* include/bits/stl_algo.h (for_each): Remove redundant _GLIBCXX_MOVE\n \tand adjust comment.\n "}, {"sha": "c6481691236b3681ceacb8c95bd7c8aec9be4b68", "filename": "libstdc++-v3/include/bits/algorithmfwd.h", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falgorithmfwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falgorithmfwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falgorithmfwd.h?ref=4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c", "patch": "@@ -45,14 +45,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /*\n     adjacent_find\n-    all_of (C++0x)\n-    any_of (C++0x)\n+    all_of (C++11)\n+    any_of (C++11)\n     binary_search\n     clamp (C++17)\n     copy\n     copy_backward\n-    copy_if (C++0x)\n-    copy_n (C++0x)\n+    copy_if (C++11)\n+    copy_n (C++11)\n     count\n     count_if\n     equal\n@@ -63,17 +63,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     find_end\n     find_first_of\n     find_if\n-    find_if_not (C++0x)\n+    find_if_not (C++11)\n     for_each\n     generate\n     generate_n\n     includes\n     inplace_merge\n-    is_heap (C++0x)\n-    is_heap_until (C++0x)\n-    is_partitioned (C++0x)\n-    is_sorted (C++0x)\n-    is_sorted_until (C++0x)\n+    is_heap (C++11)\n+    is_heap_until (C++11)\n+    is_partitioned (C++11)\n+    is_sorted (C++11)\n+    is_sorted_until (C++11)\n     iter_swap\n     lexicographical_compare\n     lower_bound\n@@ -83,17 +83,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     merge\n     min\n     min_element\n-    minmax (C++0x)\n-    minmax_element (C++0x)\n+    minmax (C++11)\n+    minmax_element (C++11)\n     mismatch\n     next_permutation\n-    none_of (C++0x)\n+    none_of (C++11)\n     nth_element\n     partial_sort\n     partial_sort_copy\n     partition\n-    partition_copy (C++0x)\n-    partition_point (C++0x)\n+    partition_copy (C++11)\n+    partition_point (C++11)\n     pop_heap\n     prev_permutation\n     push_heap\n@@ -116,7 +116,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     set_intersection\n     set_symmetric_difference\n     set_union\n-    shuffle (C++0x)\n+    shuffle (C++11)\n     sort\n     sort_heap\n     stable_partition"}, {"sha": "9deec427e24e3045c33fb1a639d6804768ba0ee9", "filename": "libstdc++-v3/include/bits/move.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmove.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmove.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmove.h?ref=4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c", "patch": "@@ -1,4 +1,4 @@\n-// Move, forward and identity for C++0x + swap -*- C++ -*-\n+// Move, forward and identity for C++11 + swap -*- C++ -*-\n \n // Copyright (C) 2007-2016 Free Software Foundation, Inc.\n //"}, {"sha": "bdd1f4adb5d7b80a83fa83abd1f38415ca7c4e20", "filename": "libstdc++-v3/include/bits/postypes.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fpostypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fpostypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fpostypes.h?ref=4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c", "patch": "@@ -41,7 +41,7 @@\n \n // XXX If <stdint.h> is really needed, make sure to define the macros\n // before including it, in order not to break <tr1/cstdint> (and <cstdint>\n-// in C++0x).  Reconsider all this as soon as possible...\n+// in C++11).  Reconsider all this as soon as possible...\n #if (defined(_GLIBCXX_HAVE_INT64_T) && !defined(_GLIBCXX_HAVE_INT64_T_LONG) \\\n      && !defined(_GLIBCXX_HAVE_INT64_T_LONG_LONG))\n "}, {"sha": "55d3281ee3d06159d7fc390bee2f42cff2f1afa1", "filename": "libstdc++-v3/include/debug/bitset", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fbitset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fbitset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fbitset?ref=4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c", "patch": "@@ -50,7 +50,7 @@ namespace __debug\n       typedef _GLIBCXX_STD_C::bitset<_Nb> _Base;\n \n     public:\n-      // In C++0x we rely on normal reference type to preserve the property\n+      // In C++11 we rely on normal reference type to preserve the property\n       // of bitset to be use as a literal.\n       // TODO: Find another solution.\n #if __cplusplus >= 201103L"}, {"sha": "602c28bbdf673af236569bff1e57c0b8a5889083", "filename": "libstdc++-v3/include/ext/pb_ds/detail/type_utils.hpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftype_utils.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftype_utils.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftype_utils.hpp?ref=4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c", "patch": "@@ -131,7 +131,7 @@ namespace __gnu_pbds\n \t};\n     };\n \n-    // Use C++0x's static_assert if possible.\n+    // Use C++11's static_assert if possible.\n #if __cplusplus >= 201103L\n #define PB_DS_STATIC_ASSERT(UNIQUE, E)  static_assert(E, #UNIQUE)\n #else"}, {"sha": "fc451f00a8629cbb76bc467df89e79132224c5cb", "filename": "libstdc++-v3/include/ext/string_conversions.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstring_conversions.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstring_conversions.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstring_conversions.h?ref=4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c", "patch": "@@ -100,8 +100,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t\t __builtin_va_list), std::size_t __n,\n \t\t const _CharT* __fmt, ...)\n     {\n-      // XXX Eventually the result will be constructed in place in\n-      // the C++0x string, likely with the help of internal hooks.\n+      // XXX Eventually the result should be constructed in-place in\n+      // the __cxx11 string, likely with the help of internal hooks.\n       _CharT* __s = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)\n \t\t\t\t\t\t\t  * __n));\n "}, {"sha": "5b348ec58cad06794081a1490eb206a35e79291e", "filename": "libstdc++-v3/testsuite/27_io/fpos/14320-1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos%2F14320-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos%2F14320-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos%2F14320-1.cc?ref=4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c", "patch": "@@ -36,7 +36,7 @@ void test01()\n \n   bool found = false;\n   // The C++ standard didn't originally have \"long long\", however that\n-  // type will be in the C++0x standard and testing for it allows\n+  // type is in the C++11 standard and testing for it allows\n   // ilp32 targets to pass this test when `Distance' is 64 bits.\n   if (typeid(Distance) == typeid(long long int))\n     found = true;"}, {"sha": "3d982acaaaa83377d59a47510dbc2f9571deedb0", "filename": "libstdc++-v3/testsuite/util/thread/all.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fthread%2Fall.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fthread%2Fall.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fthread%2Fall.h?ref=4f5f9962c8c93f9e420b6b42a31ec6daa4efb26c", "patch": "@@ -26,7 +26,7 @@\n #include <stdexcept>\n #include <type_traits>\n \n-// C++0x only.\n+// C++11 only.\n namespace __gnu_test\n {\n   // Assume _Tp::native_handle_type."}]}