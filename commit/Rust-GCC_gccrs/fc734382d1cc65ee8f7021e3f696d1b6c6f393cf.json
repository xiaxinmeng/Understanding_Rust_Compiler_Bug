{"sha": "fc734382d1cc65ee8f7021e3f696d1b6c6f393cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM3MzQzODJkMWNjNjVlZThmNzAyMWUzZjY5NmQxYjZjNmYzOTNjZg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-08-03T11:50:25Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-08-03T11:50:25Z"}, "message": "tree-sra.c (completely_scalarize_record): New parameter REF, create its own access->expr intead of using build_ref_for_offset.\n\n2010-08-03  Martin Jambor  <mjambor@suse.cz>\n\n\t* tree-sra.c (completely_scalarize_record): New parameter REF, create\n\tits own access->expr intead of using build_ref_for_offset.\n\nFrom-SVN: r162841", "tree": {"sha": "0a93a1cfde731d33864d37a1ecd296aa2fde88da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a93a1cfde731d33864d37a1ecd296aa2fde88da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc734382d1cc65ee8f7021e3f696d1b6c6f393cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc734382d1cc65ee8f7021e3f696d1b6c6f393cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc734382d1cc65ee8f7021e3f696d1b6c6f393cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc734382d1cc65ee8f7021e3f696d1b6c6f393cf/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aea18e926af4167682a3fda159647e001c660991", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aea18e926af4167682a3fda159647e001c660991", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aea18e926af4167682a3fda159647e001c660991"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "023a461e356ac27cdd66cb98fddfdb9d5d53f0f1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc734382d1cc65ee8f7021e3f696d1b6c6f393cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc734382d1cc65ee8f7021e3f696d1b6c6f393cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc734382d1cc65ee8f7021e3f696d1b6c6f393cf", "patch": "@@ -1,3 +1,8 @@\n+2010-08-03  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* tree-sra.c (completely_scalarize_record): New parameter REF, create\n+\tits own access->expr intead of using build_ref_for_offset.\n+\n 2010-08-03  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/alpha/alpha.h (SWITCH_TAKES_ARG): Define."}, {"sha": "372139f59494223b0cfd7f86b80aeba94cdafe8d", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc734382d1cc65ee8f7021e3f696d1b6c6f393cf/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc734382d1cc65ee8f7021e3f696d1b6c6f393cf/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=fc734382d1cc65ee8f7021e3f696d1b6c6f393cf", "patch": "@@ -843,10 +843,12 @@ type_consists_of_records_p (tree type)\n /* Create total_scalarization accesses for all scalar type fields in DECL that\n    must be of a RECORD_TYPE conforming to type_consists_of_records_p.  BASE\n    must be the top-most VAR_DECL representing the variable, OFFSET must be the\n-   offset of DECL within BASE.  */\n+   offset of DECL within BASE.  REF must be the memory reference expression for\n+   the given decl.  */\n \n static void\n-completely_scalarize_record (tree base, tree decl, HOST_WIDE_INT offset)\n+completely_scalarize_record (tree base, tree decl, HOST_WIDE_INT offset,\n+\t\t\t     tree ref)\n {\n   tree fld, decl_type = TREE_TYPE (decl);\n \n@@ -855,28 +857,23 @@ completely_scalarize_record (tree base, tree decl, HOST_WIDE_INT offset)\n       {\n \tHOST_WIDE_INT pos = offset + int_bit_position (fld);\n \ttree ft = TREE_TYPE (fld);\n+\ttree nref = build3 (COMPONENT_REF, TREE_TYPE (fld), ref, fld,\n+\t\t\t    NULL_TREE);\n \n \tif (is_gimple_reg_type (ft))\n \t  {\n \t    struct access *access;\n \t    HOST_WIDE_INT size;\n-\t    tree expr;\n-\t    bool ok;\n \n \t    size = tree_low_cst (DECL_SIZE (fld), 1);\n-\t    expr = base;\n-\t    ok = build_ref_for_offset (&expr, TREE_TYPE (base), pos,\n-\t\t\t\t       ft, false);\n-\t    gcc_assert (ok);\n-\n \t    access = create_access_1 (base, pos, size);\n-\t    access->expr = expr;\n+\t    access->expr = nref;\n \t    access->type = ft;\n \t    access->total_scalarization = 1;\n \t    /* Accesses for intraprocedural SRA can have their stmt NULL.  */\n \t  }\n \telse\n-\t  completely_scalarize_record (base, fld, pos);\n+\t  completely_scalarize_record (base, fld, pos, nref);\n       }\n }\n \n@@ -2067,7 +2064,7 @@ analyze_all_variable_accesses (void)\n \t\t<= max_total_scalarization_size)\n \t    && type_consists_of_records_p (TREE_TYPE (var)))\n \t  {\n-\t    completely_scalarize_record (var, var, 0);\n+\t    completely_scalarize_record (var, var, 0, var);\n \t    if (dump_file && (dump_flags & TDF_DETAILS))\n \t      {\n \t\tfprintf (dump_file, \"Will attempt to totally scalarize \");"}]}