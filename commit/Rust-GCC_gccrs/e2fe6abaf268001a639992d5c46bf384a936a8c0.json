{"sha": "e2fe6abaf268001a639992d5c46bf384a936a8c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJmZTZhYmFmMjY4MDAxYTYzOTk5MmQ1YzQ2YmYzODRhOTM2YThjMA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-03-02T07:07:33Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-03-02T07:07:33Z"}, "message": "mips.c (abort_with_insn): Make function static...\n\n        * mips.c (abort_with_insn): Make function static, add a prototype,\n        constify 2nd parameter and mark with ATTRIBUTE_NORETURN.\n        (current_function_file, mips_cpu_string, mips_isa_string,\n        mips_abi_string, mips_no_mips16_string, mips_entry_string,\n        mips_move_1word, mips_move_2words, output_block_move, load_store,\n        override_options, make_temp_file, mips16_fp_args): Qualify a char*\n        with the `const' keyword.\n        * mips.h (current_function_file, mips_cpu_string, mips_isa_string,\n        mips_abi_string, mips_entry_string, mips_no_mips16_string,\n        mips_move_1word, mips_move_2words, output_block_move): Likewise.\n        (abort_with_insn): Remove extern prototype.\n        * mips.md: Qualify a char* with the `const' keyword.\n        Remove many unused variables named `label'.\n\nFrom-SVN: r25531", "tree": {"sha": "5f8e523e4e2077eb663e84a5a75de6211af9dcd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f8e523e4e2077eb663e84a5a75de6211af9dcd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2fe6abaf268001a639992d5c46bf384a936a8c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2fe6abaf268001a639992d5c46bf384a936a8c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2fe6abaf268001a639992d5c46bf384a936a8c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2fe6abaf268001a639992d5c46bf384a936a8c0/comments", "author": null, "committer": null, "parents": [{"sha": "9fc9b82ad461ebea6ce323c9e59854b34a6c51bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fc9b82ad461ebea6ce323c9e59854b34a6c51bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fc9b82ad461ebea6ce323c9e59854b34a6c51bf"}], "stats": {"total": 111, "additions": 53, "deletions": 58}, "files": [{"sha": "c498a20304f584161db6378df8814cab35801e89", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2fe6abaf268001a639992d5c46bf384a936a8c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2fe6abaf268001a639992d5c46bf384a936a8c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2fe6abaf268001a639992d5c46bf384a936a8c0", "patch": "@@ -1,3 +1,21 @@\n+Tue Mar  2 10:00:21 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* mips.c (abort_with_insn): Make function static, add a prototype,\n+\tconstify 2nd parameter and mark with ATTRIBUTE_NORETURN.\n+\t(current_function_file, mips_cpu_string, mips_isa_string,\n+\tmips_abi_string, mips_no_mips16_string, mips_entry_string,\n+\tmips_move_1word, mips_move_2words, output_block_move, load_store,\n+\toverride_options, make_temp_file, mips16_fp_args): Qualify a char*\n+\twith the `const' keyword.\n+\n+\t* mips.h (current_function_file, mips_cpu_string, mips_isa_string,\n+\tmips_abi_string, mips_entry_string, mips_no_mips16_string,\n+\tmips_move_1word, mips_move_2words, output_block_move): Likewise.\n+\t(abort_with_insn): Remove extern prototype.\n+\n+\t* mips.md: Qualify a char* with the `const' keyword.\n+\tRemove many unused variables named `label'.\n+\n Tue Mar  2 01:27:52 1999  H.J. Lu  (hjl@gnu.org)\n \n \t* Makefile.in (cpp_install_dir, INSTALL_CPP, UNINSTALL_CPP): New"}, {"sha": "3f64e5ecc5ba4fa97a597cf8a83c9dc19e3ba710", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 23, "deletions": 21, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2fe6abaf268001a639992d5c46bf384a936a8c0/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2fe6abaf268001a639992d5c46bf384a936a8c0/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=e2fe6abaf268001a639992d5c46bf384a936a8c0", "patch": "@@ -106,6 +106,8 @@ static rtx add_constant\t\t\t\tPROTO ((struct constant **,\n static void dump_constants\t\t\tPROTO ((struct constant *,\n \t\t\t\t\t\t\trtx));\n static rtx mips_find_symbol\t\t\tPROTO ((rtx));\n+static void abort_with_insn\t\t\tPROTO ((rtx, const char *))\n+  ATTRIBUTE_NORETURN;\n \n \n /* Global variables for machine-dependent things.  */\n@@ -148,7 +150,7 @@ struct extern_list\n } *extern_head = 0;\n \n /* Name of the file containing the current function.  */\n-char *current_function_file = \"\";\n+const char *current_function_file = \"\";\n \n /* Warning given that Mips ECOFF can't support changing files\n    within a function.  */\n@@ -206,9 +208,9 @@ int mips_abi;\n #endif\n \n /* Strings to hold which cpu and instruction set architecture to use.  */\n-char *mips_cpu_string;\t\t/* for -mcpu=<xxx> */\n-char *mips_isa_string;\t\t/* for -mips{1,2,3,4} */\n-char *mips_abi_string;\t\t/* for -mabi={32,n32,64,eabi} */\n+const char *mips_cpu_string;\t/* for -mcpu=<xxx> */\n+const char *mips_isa_string;\t/* for -mips{1,2,3,4} */\n+const char *mips_abi_string;\t/* for -mabi={32,n32,64,eabi} */\n \n /* Whether we are generating mips16 code.  This is a synonym for\n    TARGET_MIPS16, and exists for use as an attribute.  */\n@@ -217,7 +219,7 @@ int mips16;\n /* This variable is set by -mno-mips16.  We only care whether\n    -mno-mips16 appears or not, and using a string in this fashion is\n    just a way to avoid using up another bit in target_flags.  */\n-char *mips_no_mips16_string;\n+const char *mips_no_mips16_string;\n \n /* Whether we are generating mips16 hard float code.  In mips16 mode\n    we always set TARGET_SOFT_FLOAT; this variable is nonzero if\n@@ -228,7 +230,7 @@ int mips16_hard_float;\n /* This variable is set by -mentry.  We only care whether -mentry\n    appears or not, and using a string in this fashion is just a way to\n    avoid using up another bit in target_flags.  */\n-char *mips_entry_string;\n+const char *mips_entry_string;\n \n /* Whether we should entry and exit pseudo-ops in mips16 mode.  */\n int mips_entry;\n@@ -1649,13 +1651,13 @@ embedded_pic_offset (x)\n \n /* Return the appropriate instructions to move one operand to another.  */\n \n-char *\n+const char *\n mips_move_1word (operands, insn, unsignedp)\n      rtx operands[];\n      rtx insn;\n      int unsignedp;\n {\n-  char *ret = 0;\n+  const char *ret = 0;\n   rtx op0 = operands[0];\n   rtx op1 = operands[1];\n   enum rtx_code code0 = GET_CODE (op0);\n@@ -2043,12 +2045,12 @@ mips_move_1word (operands, insn, unsignedp)\n \f\n /* Return the appropriate instructions to move 2 words */\n \n-char *\n+const char *\n mips_move_2words (operands, insn)\n      rtx operands[];\n      rtx insn;\n {\n-  char *ret = 0;\n+  const char *ret = 0;\n   rtx op0 = operands[0];\n   rtx op1 = operands[1];\n   enum rtx_code code0 = GET_CODE (operands[0]);\n@@ -3224,7 +3226,7 @@ expand_block_move (operands)\n \tBLOCK_MOVE_NOT_LAST\tDo all but the last store.\n \tBLOCK_MOVE_LAST\t\tDo just the last store. */\n \n-char *\n+const char *\n output_block_move (insn, operands, num_regs, move_type)\n      rtx insn;\n      rtx operands[];\n@@ -3244,11 +3246,11 @@ output_block_move (insn, operands, num_regs, move_type)\n   rtx xoperands[10];\n \n   struct {\n-    char *load;\t\t\t/* load insn without nop */\n-    char *load_nop;\t\t/* load insn with trailing nop */\n-    char *store;\t\t/* store insn */\n-    char *final;\t\t/* if last_store used: NULL or swr */\n-    char *last_store;\t\t/* last store instruction */\n+    const char *load;\t\t/* load insn without nop */\n+    const char *load_nop;\t/* load insn with trailing nop */\n+    const char *store;\t\t/* store insn */\n+    const char *final;\t\t/* if last_store used: NULL or swr */\n+    const char *last_store;\t/* last store instruction */\n     int offset;\t\t\t/* current offset */\n     enum machine_mode mode;\t/* mode to use on (MEM) */\n   } load_store[4];\n@@ -3982,10 +3984,10 @@ function_arg_partial_nregs (cum, mode, type, named)\n \f\n /* Abort after printing out a specific insn.  */\n \n-void\n+static void\n abort_with_insn (insn, reason)\n      rtx insn;\n-     char *reason;\n+     const char *reason;\n {\n   error (reason);\n   debug_rtx (insn);\n@@ -4172,7 +4174,7 @@ override_options ()\n \n   else\n     {\n-      char *p = mips_cpu_string;\n+      const char *p = mips_cpu_string;\n       int seen_v = 0;\n \n       /* We need to cope with the various \"vr\" prefixes for the NEC 4300\n@@ -5076,7 +5078,7 @@ static FILE *\n make_temp_file ()\n {\n   FILE *stream;\n-  char *base = getenv (\"TMPDIR\");\n+  const char *base = getenv (\"TMPDIR\");\n   int len;\n \n   if (base == 0)\n@@ -7469,7 +7471,7 @@ mips16_fp_args (file, fp_code, from_fp_p)\n      int fp_code;\n      int from_fp_p;\n {\n-  char *s;\n+  const char *s;\n   int gparg, fparg;\n   unsigned int f;\n "}, {"sha": "6fa583f723c6b2ec51e06c6ac1eda5cd3fa3feef", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2fe6abaf268001a639992d5c46bf384a936a8c0/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2fe6abaf268001a639992d5c46bf384a936a8c0/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=e2fe6abaf268001a639992d5c46bf384a936a8c0", "patch": "@@ -116,7 +116,7 @@ enum block_move_type {\n \n extern char mips_reg_names[][8];\t/* register names (a0 vs. $4). */\n extern char mips_print_operand_punct[];\t/* print_operand punctuation chars */\n-extern char *current_function_file;\t/* filename current function is in */\n+extern const char *current_function_file; /* filename current function is in */\n extern int num_source_filenames;\t/* current .file # */\n extern int inside_function;\t\t/* != 0 if inside of a function */\n extern int ignore_line_number;\t\t/* != 0 if we are to ignore next .loc */\n@@ -141,11 +141,11 @@ extern int mips_isa;\t\t\t/* architectural level */\n extern int mips16;\t\t\t/* whether generating mips16 code */\n extern int mips16_hard_float;\t\t/* mips16 without -msoft-float */\n extern int mips_entry;\t\t\t/* generate entry/exit for mips16 */\n-extern char *mips_cpu_string;\t\t/* for -mcpu=<xxx> */\n-extern char *mips_isa_string;\t\t/* for -mips{1,2,3,4} */\n-extern char *mips_abi_string;\t\t/* for -mabi={32,n32,64} */\n-extern char *mips_entry_string;\t\t/* for -mentry */\n-extern char *mips_no_mips16_string;\t/* for -mno-mips16 */\n+extern const char *mips_cpu_string;\t/* for -mcpu=<xxx> */\n+extern const char *mips_isa_string;\t/* for -mips{1,2,3,4} */\n+extern const char *mips_abi_string;\t/* for -mabi={32,n32,64} */\n+extern const char *mips_entry_string;\t/* for -mentry */\n+extern const char *mips_no_mips16_string;/* for -mno-mips16 */\n extern int mips_split_addresses;\t/* perform high/lo_sum support */\n extern int dslots_load_total;\t\t/* total # load related delay slots */\n extern int dslots_load_filled;\t\t/* # filled load delay slots */\n@@ -178,7 +178,6 @@ extern struct rtx_def *mips16_gp_pseudo_rtx; /* psuedo reg holding $gp */\n \n #endif\n \n-extern void\t\tabort_with_insn ();\n extern int\t\tarith32_operand ();\n extern int\t\tarith_operand ();\n extern int\t\tcmp_op ();\n@@ -212,14 +211,14 @@ extern void\t\tmips_expand_epilogue ();\n extern void\t\tmips_expand_prologue ();\n extern int\t\tmips_check_split ();\n extern char\t       *mips_fill_delay_slot ();\n-extern char\t       *mips_move_1word ();\n-extern char\t       *mips_move_2words ();\n+extern const char       *mips_move_1word ();\n+extern const char       *mips_move_2words ();\n extern void\t\tmips_output_double ();\n extern int\t\tmips_output_external ();\n extern void\t\tmips_output_float ();\n extern void\t\tmips_output_filename ();\n extern void\t\tmips_output_lineno ();\n-extern char\t       *output_block_move ();\n+extern const char       *output_block_move ();\n extern void\t\toverride_options ();\n extern int\t\tpc_or_label_operand ();\n extern void\t\tprint_operand_address ();"}, {"sha": "6dde18bf3720b5f3717c2641db1699519788eddf", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 3, "deletions": 27, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2fe6abaf268001a639992d5c46bf384a936a8c0/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2fe6abaf268001a639992d5c46bf384a936a8c0/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=e2fe6abaf268001a639992d5c46bf384a936a8c0", "patch": "@@ -1735,7 +1735,7 @@\n    && !TARGET_MIPS16\"\n   \"*\n {\n-  static char *const madd[] = { \\\"madd\\\\t%1,%2\\\",    \\\"madd\\\\t%0,%1,%2\\\" };\n+  static const char *const madd[] = { \\\"madd\\\\t%1,%2\\\", \\\"madd\\\\t%0,%1,%2\\\" };\n   if (which_alternative == 2)\n     return \\\"#\\\";\n   return madd[which_alternative];\n@@ -2241,8 +2241,6 @@\n   \"optimize\"\n   \"\n {\n-  rtx label;\n-\n   emit_insn (gen_divmodsi4_internal (operands[0], operands[1], operands[2],\n \t     operands[3]));\n   if (!TARGET_NO_CHECK_ZERO_DIV)\n@@ -2291,8 +2289,6 @@\n   \"TARGET_64BIT && optimize\"\n   \"\n {\n-  rtx label;\n-\n   emit_insn (gen_divmoddi4_internal (operands[0], operands[1], operands[2],\n              operands[3]));\n   if (!TARGET_NO_CHECK_ZERO_DIV)\n@@ -2341,8 +2337,6 @@\n   \"optimize\"\n   \"\n {\n-  rtx label;\n-\n   emit_insn (gen_udivmodsi4_internal (operands[0], operands[1], operands[2],\n                                       operands[3]));\n   if (!TARGET_NO_CHECK_ZERO_DIV)\n@@ -2382,8 +2376,6 @@\n   \"TARGET_64BIT && optimize\"\n   \"\n {\n-  rtx label;\n-\n   emit_insn (gen_udivmoddi4_internal (operands[0], operands[1], operands[2],\n                                       operands[3]));\n   if (!TARGET_NO_CHECK_ZERO_DIV)\n@@ -2512,8 +2504,6 @@\n   \"!optimize\"\n   \"\n {\n-  rtx label;\n-\n   emit_insn (gen_divsi3_internal (operands[0], operands[1], operands[2]));\n   if (!TARGET_NO_CHECK_ZERO_DIV)\n     {\n@@ -2555,8 +2545,6 @@\n   \"TARGET_64BIT && !optimize\"\n   \"\n {\n-  rtx label;\n-\n   emit_insn (gen_divdi3_internal (operands[0], operands[1], operands[2]));\n   if (!TARGET_NO_CHECK_ZERO_DIV)\n     {\n@@ -2598,8 +2586,6 @@\n   \"!optimize\"\n   \"\n {\n-  rtx label;\n-\n   emit_insn (gen_modsi3_internal (operands[0], operands[1], operands[2]));\n   if (!TARGET_NO_CHECK_ZERO_DIV)\n     {\n@@ -2641,8 +2627,6 @@\n   \"TARGET_64BIT && !optimize\"\n   \"\n {\n-  rtx label;\n-\n   emit_insn (gen_moddi3_internal (operands[0], operands[1], operands[2]));\n   if (!TARGET_NO_CHECK_ZERO_DIV)\n     {\n@@ -2684,8 +2668,6 @@\n   \"!optimize\"\n   \"\n {\n-  rtx label;\n-\n   emit_insn (gen_udivsi3_internal (operands[0], operands[1], operands[2]));\n   if (!TARGET_NO_CHECK_ZERO_DIV)\n     {\n@@ -2718,8 +2700,6 @@\n   \"TARGET_64BIT && !optimize\"\n   \"\n {\n-  rtx label;\n-\n   emit_insn (gen_udivdi3_internal (operands[0], operands[1], operands[2]));\n   if (!TARGET_NO_CHECK_ZERO_DIV)\n     {\n@@ -2752,8 +2732,6 @@\n   \"!optimize\"\n   \"\n {\n-  rtx label;\n-\n   emit_insn (gen_umodsi3_internal (operands[0], operands[1], operands[2]));\n   if (!TARGET_NO_CHECK_ZERO_DIV)\n     {\n@@ -2786,8 +2764,6 @@\n   \"TARGET_64BIT && !optimize\"\n   \"\n {\n-  rtx label;\n-\n   emit_insn (gen_umoddi3_internal (operands[0], operands[1], operands[2]));\n   if (!TARGET_NO_CHECK_ZERO_DIV)\n     {\n@@ -4664,7 +4640,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   rtx offset = const0_rtx;\n   rtx addr = XEXP (operands[1], 0);\n   rtx mem_addr = eliminate_constant_term (addr, &offset);\n-  char *ret;\n+  const char *ret;\n \n   if (TARGET_STATS)\n     mips_count_memory_refs (operands[1], 2);\n@@ -4723,7 +4699,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   rtx offset = const0_rtx;\n   rtx addr = XEXP (operands[1], 0);\n   rtx mem_addr = eliminate_constant_term (addr, &offset);\n-  char *ret;\n+  const char *ret;\n \n   if (TARGET_STATS)\n     mips_count_memory_refs (operands[1], 2);"}]}