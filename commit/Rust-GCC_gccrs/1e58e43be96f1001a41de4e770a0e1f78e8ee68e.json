{"sha": "1e58e43be96f1001a41de4e770a0e1f78e8ee68e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU1OGU0M2JlOTZmMTAwMWE0MWRlNGU3NzBhMGUxZjc4ZThlZTY4ZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-07-22T13:52:14Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-07-22T13:52:14Z"}, "message": "sso_string_base.h (__sso_string_base<>::__sso_string_base(std::initializer_list<_CharT>, const _Alloc&)): Remove.\n\n2008-07-22  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/ext/sso_string_base.h\n\t(__sso_string_base<>::__sso_string_base(std::initializer_list<_CharT>,\n\tconst _Alloc&)): Remove.\n\t* include/ext/rc_string_base.h\n\t(__rc_string_base<>::__rc_string_base(std::initializer_list<_CharT>,\n\tconst _Alloc&)): Likewise.\n\t* include/ext/vstring.h\n\t(__versa_string<>::__versa_string(std::initializer_list<_CharT>,\n\tconst _Alloc&)): Adjust.\n\nFrom-SVN: r138058", "tree": {"sha": "569a1aa68faa0be6ee174ea9f82184c57c5697ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/569a1aa68faa0be6ee174ea9f82184c57c5697ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e58e43be96f1001a41de4e770a0e1f78e8ee68e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e58e43be96f1001a41de4e770a0e1f78e8ee68e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e58e43be96f1001a41de4e770a0e1f78e8ee68e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e58e43be96f1001a41de4e770a0e1f78e8ee68e/comments", "author": null, "committer": null, "parents": [{"sha": "3571ae2e08289a7f84999a095a40923c2365259e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3571ae2e08289a7f84999a095a40923c2365259e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3571ae2e08289a7f84999a095a40923c2365259e"}], "stats": {"total": 28, "additions": 17, "deletions": 11}, "files": [{"sha": "4fa789a4d6dbd522deb1cb24773adfdbcb959ac1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e58e43be96f1001a41de4e770a0e1f78e8ee68e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e58e43be96f1001a41de4e770a0e1f78e8ee68e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1e58e43be96f1001a41de4e770a0e1f78e8ee68e", "patch": "@@ -1,3 +1,15 @@\n+2008-07-22  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/ext/sso_string_base.h\n+\t(__sso_string_base<>::__sso_string_base(std::initializer_list<_CharT>,\n+\tconst _Alloc&)): Remove.\n+\t* include/ext/rc_string_base.h\n+\t(__rc_string_base<>::__rc_string_base(std::initializer_list<_CharT>,\n+\tconst _Alloc&)): Likewise.\n+\t* include/ext/vstring.h\n+\t(__versa_string<>::__versa_string(std::initializer_list<_CharT>,\n+\tconst _Alloc&)): Adjust.\n+\n 2008-07-21  Jason Merrill  <jason@redhat.com>\n \n \tAdd initializer_list support as per N2679."}, {"sha": "213e3cf1c97321f13a64b18e942fbb95b882cad8", "filename": "libstdc++-v3/include/ext/rc_string_base.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e58e43be96f1001a41de4e770a0e1f78e8ee68e/libstdc%2B%2B-v3%2Finclude%2Fext%2Frc_string_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e58e43be96f1001a41de4e770a0e1f78e8ee68e/libstdc%2B%2B-v3%2Finclude%2Fext%2Frc_string_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Frc_string_base.h?ref=1e58e43be96f1001a41de4e770a0e1f78e8ee68e", "patch": "@@ -309,9 +309,6 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       __rc_string_base(__rc_string_base&& __rcs)\n       : _M_dataplus(__rcs._M_get_allocator(), __rcs._M_data())\n       { __rcs._M_data(_S_empty_rep._M_refcopy()); }\n-\n-      __rc_string_base(std::initializer_list<_CharT> __l, const _Alloc& __a)\n-      : _M_dataplus(__a, _S_construct(__l.begin(), __l.end(), __a)) { }\n #endif\n \n       __rc_string_base(size_type __n, _CharT __c, const _Alloc& __a);"}, {"sha": "73c6a1b2df063afe7154b2c068682606e4d42e87", "filename": "libstdc++-v3/include/ext/sso_string_base.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e58e43be96f1001a41de4e770a0e1f78e8ee68e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fsso_string_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e58e43be96f1001a41de4e770a0e1f78e8ee68e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fsso_string_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fsso_string_base.h?ref=1e58e43be96f1001a41de4e770a0e1f78e8ee68e", "patch": "@@ -1,6 +1,6 @@\n // Short-string-optimized versatile string base -*- C++ -*-\n \n-// Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -184,10 +184,6 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n \n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       __sso_string_base(__sso_string_base&& __rcs);\n-\n-      __sso_string_base(std::initializer_list<_CharT> __l, const _Alloc& __a)\n-      : _M_dataplus(__a, _M_local_data)\n-      { _M_construct(__l.begin(), __l.end()); }\n #endif\n \n       __sso_string_base(size_type __n, _CharT __c, const _Alloc& __a);"}, {"sha": "ea1652db54ef746d2d17c27a582738bd67302b2a", "filename": "libstdc++-v3/include/ext/vstring.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e58e43be96f1001a41de4e770a0e1f78e8ee68e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e58e43be96f1001a41de4e770a0e1f78e8ee68e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.h?ref=1e58e43be96f1001a41de4e770a0e1f78e8ee68e", "patch": "@@ -163,8 +163,9 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n        *  @param  l  std::initializer_list of characters.\n        *  @param  a  Allocator to use (default is default allocator).\n        */\n-      __versa_string(std::initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())\n-\t: __vstring_base(__l, __a) { }\n+      __versa_string(std::initializer_list<_CharT> __l,\n+\t\t     const _Alloc& __a = _Alloc())\n+      : __vstring_base(__l.begin(), __l.end(), __a) { }\n #endif\n \n       /**\n@@ -274,7 +275,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       __versa_string&\n       operator=(std::initializer_list<_CharT> __l)\n       {\n-\tthis->assign (__l.begin(), __l.end());\n+\tthis->assign(__l.begin(), __l.end());\n \treturn *this;\n       }\n #endif"}]}