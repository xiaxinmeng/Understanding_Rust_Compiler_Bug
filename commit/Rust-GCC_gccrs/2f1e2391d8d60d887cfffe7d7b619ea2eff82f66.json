{"sha": "2f1e2391d8d60d887cfffe7d7b619ea2eff82f66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYxZTIzOTFkOGQ2MGQ4ODdjZmZmZTdkN2I2MTllYTJlZmY4MmY2Ng==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2008-11-11T23:23:23Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2008-11-11T23:23:23Z"}, "message": "re PR rtl-optimization/37363 (Fix for PR 36090 causes libstdc++ regressions)\n\ngcc/\n\tPR rtl-optimization/37363\n\t* simplify-rtx.c (simplify_plus_minus): Don't create (const (minus ...))\n\texpresisons.\n\nFrom-SVN: r141774", "tree": {"sha": "4d810b4b30d1bbc66dec48c7363f8c9f1f5358a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d810b4b30d1bbc66dec48c7363f8c9f1f5358a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f1e2391d8d60d887cfffe7d7b619ea2eff82f66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f1e2391d8d60d887cfffe7d7b619ea2eff82f66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f1e2391d8d60d887cfffe7d7b619ea2eff82f66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f1e2391d8d60d887cfffe7d7b619ea2eff82f66/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5dbd125c5c3e1e45dfa6710224743e74c4c40622", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dbd125c5c3e1e45dfa6710224743e74c4c40622", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dbd125c5c3e1e45dfa6710224743e74c4c40622"}], "stats": {"total": 24, "additions": 6, "deletions": 18}, "files": [{"sha": "4fee1bbeb2789e1b6635b1fe932b10c44a52d58a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f1e2391d8d60d887cfffe7d7b619ea2eff82f66/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f1e2391d8d60d887cfffe7d7b619ea2eff82f66/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f1e2391d8d60d887cfffe7d7b619ea2eff82f66", "patch": "@@ -1,3 +1,9 @@\n+2008-11-11  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\tPR rtl-optimization/37363\n+\t* simplify-rtx.c (simplify_plus_minus): Don't create (const (minus ...))\n+\texpresisons.\n+\n 2008-11-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* ira-lives.c (process_bb_node_lives): Restore EH_RETURN_DATA_REGNO"}, {"sha": "dd91e120d23ba80358370a06bd7c74729d628d25", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f1e2391d8d60d887cfffe7d7b619ea2eff82f66/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f1e2391d8d60d887cfffe7d7b619ea2eff82f66/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=2f1e2391d8d60d887cfffe7d7b619ea2eff82f66", "patch": "@@ -3678,24 +3678,6 @@ simplify_plus_minus (enum rtx_code code, enum machine_mode mode, rtx op0,\n      one CONST_INT, and the sort will have ensured that it is last\n      in the array and that any other constant will be next-to-last.  */\n \n-  if (GET_CODE (ops[n_ops - 1].op) == CONST_INT)\n-    i = n_ops - 2;\n-  else\n-    i = n_ops - 1;\n-\n-  if (i >= 1\n-      && ops[i].neg\n-      && !ops[i - 1].neg\n-      && CONSTANT_P (ops[i].op)\n-      && GET_CODE (ops[i].op) == GET_CODE (ops[i - 1].op))\n-    {\n-      ops[i - 1].op = gen_rtx_MINUS (mode, ops[i - 1].op, ops[i].op);\n-      ops[i - 1].op = gen_rtx_CONST (mode, ops[i - 1].op);\n-      if (i < n_ops - 1)\n-\tops[i] = ops[i + 1];\n-      n_ops--;\n-    }\n-\n   if (n_ops > 1\n       && GET_CODE (ops[n_ops - 1].op) == CONST_INT\n       && CONSTANT_P (ops[n_ops - 2].op))"}]}