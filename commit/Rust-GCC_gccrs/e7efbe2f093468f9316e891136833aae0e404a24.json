{"sha": "e7efbe2f093468f9316e891136833aae0e404a24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdlZmJlMmYwOTM0NjhmOTMxNmU4OTExMzY4MzNhYWUwZTQwNGEyNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-18T10:03:30Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-18T10:03:30Z"}, "message": "[multiple changes]\n\n2010-10-18  Tristan Gingold  <gingold@adacore.com>\n\n\t* init.c: Indentation, and minor changes to more closely follow GNU\n\tstyle rules.  Make more variable statics.\n\n2010-10-18  Vincent Celier  <celier@adacore.com>\n\n\t* prj.adb (Is_Compilable): On first call for a source, cache value in\n\tcomponent Compilable.\n\t* prj.ads (Source_Data): New component Compilable, to cache the value\n\treturned by function Is_Compilable.\n\n2010-10-18  Vincent Celier  <celier@adacore.com>\n\n\t* prj-attr.adb: New project level attribute Ignore_Source_Sub_Dirs.\n\t* prj-nmsc.adb (Expand_Subdirectory_Pattern): New string list parameter\n\tIgnore.\n\t(Recursive_Find_Dirs): Do not consider subdirectories listed in Ignore.\n\t(Get_Directories): Call Find_Source_Dirs with the string list\n\tindicated by attribute Ignore_Source_Sub_Dirs.\n\t* snames.ads-tmpl: New standard name Ignore_Source_Sub_Dirs.\n\nFrom-SVN: r165619", "tree": {"sha": "5b2b67273a354c215e6a9d10700a644c9303f9a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b2b67273a354c215e6a9d10700a644c9303f9a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7efbe2f093468f9316e891136833aae0e404a24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7efbe2f093468f9316e891136833aae0e404a24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7efbe2f093468f9316e891136833aae0e404a24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7efbe2f093468f9316e891136833aae0e404a24/comments", "author": null, "committer": null, "parents": [{"sha": "ef2a63ba1869942eae7ab3ceb4cada0f025a60ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad"}], "stats": {"total": 184, "additions": 123, "deletions": 61}, "files": [{"sha": "f7bdeb515e49a7e3524bcc5265ce680e71099694", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7efbe2f093468f9316e891136833aae0e404a24/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7efbe2f093468f9316e891136833aae0e404a24/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e7efbe2f093468f9316e891136833aae0e404a24", "patch": "@@ -1,3 +1,25 @@\n+2010-10-18  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* init.c: Indentation, and minor changes to more closely follow GNU\n+\tstyle rules.  Make more variable statics.\n+\n+2010-10-18  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj.adb (Is_Compilable): On first call for a source, cache value in\n+\tcomponent Compilable.\n+\t* prj.ads (Source_Data): New component Compilable, to cache the value\n+\treturned by function Is_Compilable.\n+\n+2010-10-18  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-attr.adb: New project level attribute Ignore_Source_Sub_Dirs.\n+\t* prj-nmsc.adb (Expand_Subdirectory_Pattern): New string list parameter\n+\tIgnore.\n+\t(Recursive_Find_Dirs): Do not consider subdirectories listed in Ignore.\n+\t(Get_Directories): Call Find_Source_Dirs with the string list\n+\tindicated by attribute Ignore_Source_Sub_Dirs.\n+\t* snames.ads-tmpl: New standard name Ignore_Source_Sub_Dirs.\n+\n 2010-10-18  Javier Miranda  <miranda@adacore.com>\n \n \t* einfo.ads, einfo.adb (Primitive_Operations): New synthesized"}, {"sha": "3f2916d9d2dba15ea5f9ea9e0e2f317eec28a5c2", "filename": "gcc/ada/init.c", "status": "modified", "additions": 29, "deletions": 49, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7efbe2f093468f9316e891136833aae0e404a24/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7efbe2f093468f9316e891136833aae0e404a24/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=e7efbe2f093468f9316e891136833aae0e404a24", "patch": "@@ -1262,7 +1262,7 @@ static const struct cond_except cond_except_table [] = {\n typedef int\n resignal_predicate (int code);\n \n-const int *cond_resignal_table [] = {\n+static const int * const cond_resignal_table [] = {\n   &C$_SIGKILL,\n   &CMA$_EXIT_THREAD,\n   &SS$_DEBUG,\n@@ -1273,7 +1273,7 @@ const int *cond_resignal_table [] = {\n   0\n };\n \n-const int facility_resignal_table [] = {\n+static const int facility_resignal_table [] = {\n   0x1380000, /* RDB */\n   0x2220000, /* SQL */\n   0\n@@ -1301,15 +1301,15 @@ __gnat_default_resignal_p (int code)\n /* Static pointer to predicate that the __gnat_error_handler exception\n    vector invokes to determine if it should resignal a condition.  */\n \n-static resignal_predicate * __gnat_resignal_p = __gnat_default_resignal_p;\n+static resignal_predicate *__gnat_resignal_p = __gnat_default_resignal_p;\n \n /* User interface to change the predicate pointer to PREDICATE. Reset to\n    the default if PREDICATE is null.  */\n \n void\n-__gnat_set_resignal_predicate (resignal_predicate * predicate)\n+__gnat_set_resignal_predicate (resignal_predicate *predicate)\n {\n-  if (predicate == 0)\n+  if (predicate == NULL)\n     __gnat_resignal_p = __gnat_default_resignal_p;\n   else\n     __gnat_resignal_p = predicate;\n@@ -1323,9 +1323,7 @@ __gnat_set_resignal_predicate (resignal_predicate * predicate)\n    and separated by line termination.  */\n \n static int\n-copy_msg (msgdesc, message)\n-     struct descriptor_s *msgdesc;\n-     char *message;\n+copy_msg (struct descriptor_s *msgdesc, char *message)\n {\n   int len = strlen (message);\n   int copy_len;\n@@ -1352,7 +1350,7 @@ __gnat_handle_vms_condition (int *sigargs, void *mechargs)\n {\n   struct Exception_Data *exception = 0;\n   Exception_Code base_code;\n-  struct descriptor_s gnat_facility = {4,0,\"GNAT\"};\n+  struct descriptor_s gnat_facility = {4, 0, \"GNAT\"};\n   char message [Default_Exception_Msg_Max_Length];\n \n   const char *msg = \"\";\n@@ -1365,17 +1363,17 @@ __gnat_handle_vms_condition (int *sigargs, void *mechargs)\n #ifdef IN_RTS\n   /* See if it's an imported exception.  Beware that registered exceptions\n      are bound to their base code, with the severity bits masked off.  */\n-  base_code = Base_Code_In ((Exception_Code) sigargs [1]);\n+  base_code = Base_Code_In ((Exception_Code) sigargs[1]);\n   exception = Coded_Exception (base_code);\n \n   if (exception)\n     {\n-      message [0] = 0;\n+      message[0] = 0;\n \n       /* Subtract PC & PSL fields which messes with PUTMSG.  */\n-      sigargs [0] -= 2;\n+      sigargs[0] -= 2;\n       SYS$PUTMSG (sigargs, copy_msg, &gnat_facility, message);\n-      sigargs [0] += 2;\n+      sigargs[0] += 2;\n       msg = message;\n \n       exception->Name_Length = 19;\n@@ -1448,8 +1446,8 @@ __gnat_handle_vms_condition (int *sigargs, void *mechargs)\n \t      /* Scan the VMS standard condition table for a match and fetch\n \t\t the associated GNAT exception pointer.  */\n \t      for (i = 0;\n-\t\t   cond_except_table [i].cond &&\n-\t\t   !LIB$MATCH_COND (&sigargs [1], &cond_except_table [i].cond);\n+\t\t   cond_except_table[i].cond &&\n+\t\t   !LIB$MATCH_COND (&sigargs[1], &cond_except_table[i].cond);\n \t\t   i++);\n \t      exception = (struct Exception_Data *)\n \t\tcond_except_table [i].except;\n@@ -1463,46 +1461,25 @@ __gnat_handle_vms_condition (int *sigargs, void *mechargs)\n #else\n \texception = &program_error;\n #endif\n-\tmessage [0] = 0;\n+\tmessage[0] = 0;\n \t/* Subtract PC & PSL fields which messes with PUTMSG.  */\n-\tsigargs [0] -= 2;\n+\tsigargs[0] -= 2;\n \tSYS$PUTMSG (sigargs, copy_msg, &gnat_facility, message);\n-\tsigargs [0] += 2;\n+\tsigargs[0] += 2;\n \tmsg = message;\n \tbreak;\n       }\n \n   Raise_From_Signal_Handler (exception, msg);\n }\n \n-long\n-__gnat_error_handler (int *sigargs, void *mechargs)\n-{\n-  return __gnat_handle_vms_condition (sigargs, mechargs);\n-}\n-\n void\n __gnat_install_handler (void)\n {\n   long prvhnd ATTRIBUTE_UNUSED;\n \n #if !defined (IN_RTS)\n-  SYS$SETEXV (1, __gnat_error_handler, 3, &prvhnd);\n-#endif\n-\n-  /* On alpha-vms, we avoid the global vector annoyance thanks to frame based\n-     handlers to turn conditions into exceptions since GCC 3.4.  The global\n-     vector is still required for earlier GCC versions.  We're resorting to\n-     the __gnat_error_prehandler assembly function in this case.  */\n-\n-#if defined (IN_RTS) && defined (__alpha__)\n-  if ((__GNUC__ * 10 + __GNUC_MINOR__) < 34)\n-    {\n-      char * c = (char *) xmalloc (2049);\n-\n-      __gnat_error_prehandler_stack = &c[2048];\n-      SYS$SETEXV (1, __gnat_error_prehandler, 3, &prvhnd);\n-    }\n+  SYS$SETEXV (1, __gnat_handle_vms_condition, 3, &prvhnd);\n #endif\n \n   __gnat_handler_installed = 1;\n@@ -1572,7 +1549,10 @@ __gnat_adjust_context_for_raise (int signo ATTRIBUTE_UNUSED, void *ucontext)\n    If we ever add another feature logical to this list, the\n    feature struct will need to be enhanced to take into account\n    possible values for *gl_addr.  */\n-struct feature {char *name; int* gl_addr;};\n+struct feature {\n+  char *name;\n+  int *gl_addr;\n+};\n \n /* Default values for GNAT features set by environment. */\n int __gl_heap_size = 64;\n@@ -1583,21 +1563,21 @@ static struct feature features[] = {\n   {0, 0}\n };\n \n-void __gnat_set_features ()\n+void __gnat_set_features (void)\n {\n   struct descriptor_s name_desc, result_desc;\n   int i, status;\n   unsigned short rlen;\n \n #define MAXEQUIV 10\n-  char buff [MAXEQUIV];\n+  char buff[MAXEQUIV];\n \n   /* Loop through features array and test name for enable/disable */\n-  for (i=0; features [i].name; i++)\n+  for (i = 0; features[i].name; i++)\n     {\n-       name_desc.len = strlen (features [i].name);\n+       name_desc.len = strlen (features[i].name);\n        name_desc.mbz = 0;\n-       name_desc.adr = features [i].name;\n+       name_desc.adr = features[i].name;\n \n        result_desc.len = MAXEQUIV - 1;\n        result_desc.mbz = 0;\n@@ -1606,18 +1586,18 @@ void __gnat_set_features ()\n        status = LIB$GET_LOGICAL (&name_desc, &result_desc, &rlen);\n \n        if (((status & 1) == 1) && (rlen < MAXEQUIV))\n-         buff [rlen] = 0;\n+         buff[rlen] = 0;\n        else\n          strcpy (buff, \"\");\n \n        if ((strcmp (buff, \"ENABLE\") == 0) ||\n            (strcmp (buff, \"TRUE\") == 0) ||\n            (strcmp (buff, \"1\") == 0))\n-          *features [i].gl_addr = 32;\n+          *features[i].gl_addr = 32;\n        else if ((strcmp (buff, \"DISABLE\") == 0) ||\n                 (strcmp (buff, \"FALSE\") == 0) ||\n                 (strcmp (buff, \"0\") == 0))\n-          *features [i].gl_addr = 64;\n+          *features[i].gl_addr = 64;\n     }\n \n     __gnat_features_set = 1;"}, {"sha": "6fb2c0a3e5b1ec787d06f5187a3510ce454d64c6", "filename": "gcc/ada/prj-attr.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7efbe2f093468f9316e891136833aae0e404a24/gcc%2Fada%2Fprj-attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7efbe2f093468f9316e891136833aae0e404a24/gcc%2Fada%2Fprj-attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.adb?ref=e7efbe2f093468f9316e891136833aae0e404a24", "patch": "@@ -81,6 +81,7 @@ package body Prj.Attr is\n    \"LVsource_dirs#\" &\n    \"Lainherit_source_path#\" &\n    \"LVexcluded_source_dirs#\" &\n+   \"LVignore_source_sub_dirs#\" &\n \n    --  Source files\n "}, {"sha": "5dbf1a7d7d5e3ec38906e1d3166cd99efd3f6f7b", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 42, "deletions": 6, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7efbe2f093468f9316e891136833aae0e404a24/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7efbe2f093468f9316e891136833aae0e404a24/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=e7efbe2f093468f9316e891136833aae0e404a24", "patch": "@@ -223,6 +223,7 @@ package body Prj.Nmsc is\n      (Project       : Project_Id;\n       Data          : in out Tree_Processing_Data;\n       Patterns      : String_List_Id;\n+      Ignore        : String_List_Id;\n       Search_For    : Search_Type;\n       Resolve_Links : Boolean);\n    --  Search the subdirectories of Project's directory for files or\n@@ -966,6 +967,7 @@ package body Prj.Nmsc is\n         (Project       => Project,\n          Data          => Data,\n          Patterns      => Project_Files.Values,\n+         Ignore        => Nil_String,\n          Search_For    => Search_Files,\n          Resolve_Links => Opt.Follow_Links_For_Files);\n \n@@ -4950,6 +4952,12 @@ package body Prj.Nmsc is\n                       Util.Value_Of\n                         (Name_Source_Dirs, Project.Decl.Attributes, Data.Tree);\n \n+      Ignore_Source_Sub_Dirs : constant Variable_Value :=\n+                                 Util.Value_Of\n+                                   (Name_Ignore_Source_Sub_Dirs,\n+                                    Project.Decl.Attributes,\n+                                    Data.Tree);\n+\n       Excluded_Source_Dirs : constant Variable_Value :=\n                               Util.Value_Of\n                                 (Name_Excluded_Source_Dirs,\n@@ -5259,6 +5267,7 @@ package body Prj.Nmsc is\n            (Project         => Project,\n             Data            => Data,\n             Patterns        => Source_Dirs.Values,\n+            Ignore          => Ignore_Source_Sub_Dirs.Values,\n             Search_For      => Search_Directories,\n             Resolve_Links   => Opt.Follow_Links_For_Dirs);\n \n@@ -5280,6 +5289,7 @@ package body Prj.Nmsc is\n            (Project         => Project,\n             Data            => Data,\n             Patterns        => Excluded_Source_Dirs.Values,\n+            Ignore          => Nil_String,\n             Search_For      => Search_Directories,\n             Resolve_Links   => Opt.Follow_Links_For_Dirs);\n       end if;\n@@ -6745,6 +6755,7 @@ package body Prj.Nmsc is\n      (Project       : Project_Id;\n       Data          : in out Tree_Processing_Data;\n       Patterns      : String_List_Id;\n+      Ignore        : String_List_Id;\n       Search_For    : Search_Type;\n       Resolve_Links : Boolean)\n    is\n@@ -6878,17 +6889,42 @@ package body Prj.Nmsc is\n                        Resolve_Links  => Resolve_Links)\n                     & Directory_Separator;\n                   Path2     : Path_Information;\n+                  OK        : Boolean := True;\n \n                begin\n                   if Is_Directory (Path_Name) then\n-                     Name_Len := 0;\n-                     Add_Str_To_Name_Buffer (Path_Name);\n-                     Path2.Display_Name := Name_Find;\n+                     if Ignore /= Nil_String then\n+                        declare\n+                           Dir_Name : String := Name (1 .. Last);\n+                           List : String_List_Id := Ignore;\n+                        begin\n+                           Canonical_Case_File_Name (Dir_Name);\n \n-                     Canonical_Case_File_Name (Name_Buffer (1 .. Name_Len));\n-                     Path2.Name := Name_Find;\n+                           while List /= Nil_String loop\n+                              Get_Name_String\n+                                (Data.Tree.String_Elements.Table\n+                                   (List).Value);\n+                              Canonical_Case_File_Name\n+                                (Name_Buffer (1 .. Name_Len));\n+                              OK := Name_Buffer (1 .. Name_Len) /= Dir_Name;\n+                              exit when not OK;\n+                              List := Data.Tree.String_Elements.Table\n+                                                                 (List).Next;\n+                           end loop;\n+                        end;\n+                     end if;\n+\n+                     if OK then\n+                        Name_Len := 0;\n+                        Add_Str_To_Name_Buffer (Path_Name);\n+                        Path2.Display_Name := Name_Find;\n \n-                     Success := Recursive_Find_Dirs (Path2, Rank) or Success;\n+                        Canonical_Case_File_Name (Name_Buffer (1 .. Name_Len));\n+                        Path2.Name := Name_Find;\n+\n+                        Success :=\n+                          Recursive_Find_Dirs (Path2, Rank) or Success;\n+                     end if;\n                   end if;\n                end;\n             end if;"}, {"sha": "607209204718b07233fa91292f5a90f7b4cece8b", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7efbe2f093468f9316e891136833aae0e404a24/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7efbe2f093468f9316e891136833aae0e404a24/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=e7efbe2f093468f9316e891136833aae0e404a24", "patch": "@@ -1154,12 +1154,29 @@ package body Prj is\n \n    function Is_Compilable (Source : Source_Id) return Boolean is\n    begin\n-      return Source.Language.Config.Compiler_Driver /= No_File\n-        and then Length_Of_Name (Source.Language.Config.Compiler_Driver) /= 0\n-        and then not Source.Locally_Removed\n-        and then (Source.Language.Config.Kind /= File_Based\n-                    or else\n-                  Source.Kind /= Spec);\n+      case Source.Compilable is\n+         when Unknown =>\n+            if Source.Language.Config.Compiler_Driver /= No_File\n+              and then\n+                Length_Of_Name (Source.Language.Config.Compiler_Driver) /= 0\n+              and then not Source.Locally_Removed\n+              and then (Source.Language.Config.Kind /= File_Based\n+                        or else\n+                          Source.Kind /= Spec)\n+            then\n+               Source.Compilable := Yes;\n+               return True;\n+            else\n+               Source.Compilable := No;\n+               return False;\n+            end if;\n+\n+         when Yes =>\n+            return True;\n+\n+         when No =>\n+            return False;\n+      end case;\n    end Is_Compilable;\n \n    ------------------------------"}, {"sha": "dd3c98156b9fb345366b47b7165492d980065dc6", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7efbe2f093468f9316e891136833aae0e404a24/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7efbe2f093468f9316e891136833aae0e404a24/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=e7efbe2f093468f9316e891136833aae0e404a24", "patch": "@@ -706,6 +706,10 @@ package Prj is\n       --  file). Index is 0 if there is either no unit or a single one, and\n       --  starts at 1 when there are multiple units\n \n+      Compilable : Yes_No_Unknown := Unknown;\n+      --  Updated at the first call to Is_Compilable. Yes if source file is\n+      --  compilable.\n+\n       Locally_Removed : Boolean := False;\n       --  True if the source has been \"excluded\"\n \n@@ -788,6 +792,7 @@ package Prj is\n                        Unit                   => No_Unit_Index,\n                        Index                  => 0,\n                        Locally_Removed        => False,\n+                       Compilable             => Unknown,\n                        Replaced_By            => No_Source,\n                        File                   => No_File,\n                        Display_File           => No_File,"}, {"sha": "fa85239ccef2f51e5f1f4d672ff8c67c12275777", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7efbe2f093468f9316e891136833aae0e404a24/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7efbe2f093468f9316e891136833aae0e404a24/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=e7efbe2f093468f9316e891136833aae0e404a24", "patch": "@@ -1089,6 +1089,7 @@ package Snames is\n    Name_Gnatstub                         : constant Name_Id := N + $;\n    Name_Gnu                              : constant Name_Id := N + $;\n    Name_Ide                              : constant Name_Id := N + $;\n+   Name_Ignore_Source_Sub_Dirs           : constant Name_Id := N + $;\n    Name_Implementation                   : constant Name_Id := N + $;\n    Name_Implementation_Exceptions        : constant Name_Id := N + $;\n    Name_Implementation_Suffix            : constant Name_Id := N + $;"}]}