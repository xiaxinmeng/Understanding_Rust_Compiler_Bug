{"sha": "5bb27a1bb2f1c0533e1dda6c4a326e50756830f1", "node_id": "C_kwDOANBUbNoAKDViYjI3YTFiYjJmMWMwNTMzZTFkZGE2YzRhMzI2ZTUwNzU2ODMwZjE", "commit": {"author": {"name": "Gaius Mulley", "email": "gaiusmod2@gmail.com", "date": "2023-04-02T19:30:43Z"}, "committer": {"name": "Gaius Mulley", "email": "gaiusmod2@gmail.com", "date": "2023-04-02T19:30:43Z"}, "message": "PR modula2/109336 pass -fmod= though and build m2/stage2/cc1gm2 libs\n\nThis patch enables gm2 to pass -fmod= though to cc1gm2.  It also\nbuilds the libraries for m2/stage2/cc1gm2 with no named path and\nfull debugging.\n\ngcc/m2/ChangeLog:\n\n\tPR modula2/109336\n\t* Make-lang.in (GM2_O): Set to -O0.\n\t(GM2_LIBS): Remove target libraries and replace with build libs.\n\t(BUILD-LIBS): New declaration.\n\t(m2/gm2-libs/libgm2.a): New rule.\n\t(m2/gm2-libs/%.o): New rule.\n\t(m2/gm2-libs/choosetemp.o): New rule.\n\t* gm2-compiler/M2ColorString.mod (append): Use ADR rather than\n\timplicit conversion.\n\t* gm2-compiler/M2Comp.mod (Compile): Add qprintf messages for when\n\ta source file is not found.  Improve comments and formatting.\n\t* gm2-libs-ch/cgetopt.c (cgetopt_cgetopt_long): Remove\n\tansi-decl.h.  Add getopt.h.\n\t(cgetopt_cgetopt_long_only): Change cgetopt_ to getopt_.\n\t* gm2spec.cc (lang_specific_driver): Do not skip -fmod=.\n\tRemove comment.\n\nSigned-off-by: Gaius Mulley <gaiusmod2@gmail.com>", "tree": {"sha": "3f083ec2b38a0368ec66d2639149f2103033492f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f083ec2b38a0368ec66d2639149f2103033492f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bb27a1bb2f1c0533e1dda6c4a326e50756830f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bb27a1bb2f1c0533e1dda6c4a326e50756830f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bb27a1bb2f1c0533e1dda6c4a326e50756830f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bb27a1bb2f1c0533e1dda6c4a326e50756830f1/comments", "author": null, "committer": null, "parents": [{"sha": "1719fa40c4ee4def60a2ce2f27e17f8168cf28ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1719fa40c4ee4def60a2ce2f27e17f8168cf28ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1719fa40c4ee4def60a2ce2f27e17f8168cf28ba"}], "stats": {"total": 59, "additions": 45, "deletions": 14}, "files": [{"sha": "b34db0d91563070e956ad95e1d3d5729cc8c2ae0", "filename": "gcc/m2/Make-lang.in", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bb27a1bb2f1c0533e1dda6c4a326e50756830f1/gcc%2Fm2%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bb27a1bb2f1c0533e1dda6c4a326e50756830f1/gcc%2Fm2%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FMake-lang.in?ref=5bb27a1bb2f1c0533e1dda6c4a326e50756830f1", "patch": "@@ -455,7 +455,7 @@ MC=m2/boot-bin/mc$(exeext) $(MC_ARGS)\n MC_LIBS=m2/mc-boot-ch/Glibc.o m2/mc-boot-ch/Gmcrts.o\n \n M2LINK=m2/boot-bin/mklink$(exeext)\n-GM2_O=\n+GM2_O=-O0\n GM2_O_S3=-O\n GM2_OS=-Os\n GM2_G=-g -fm2-g\n@@ -505,7 +505,7 @@ GM2_C_OBJS        = m2/gm2-lang.o \\\n                     m2/gm2-gcc/m2misc.o \\\n                     m2/gm2-gcc/init.o\n GM2_LIBS          = m2/gm2-compiler/gm2.a \\\n-                    ../$(target_subdir)/libgm2/libm2pim/.libs/libm2pim.a m2/gm2-libs-boot/choosetemp.o\n+                    m2/gm2-libs/libgm2.a \\\n \n GM2_LIBS_BOOT     = m2/gm2-compiler-boot/gm2.a \\\n                     m2/gm2-libs-boot/libgm2.a \\\n@@ -1138,6 +1138,11 @@ BUILD-COMPILER-BOOT = $(BUILD-COMPILER-BOOT-H) \\\n BUILD-BOOT-H = m2/boot-bin/mc$(exeext) \\\n                $(BUILD-LIBS-BOOT-H) $(BUILD-COMPILER-BOOT-H) $(TARGET_H) $(PLUGIN_HEADERS)\n \n+BUILD-LIBS = $(BUILD-LIBS-BOOT-H) \\\n+             $(GM2-LIBS-MODS:%.mod=m2/gm2-libs/%.o) \\\n+             $(GM2-LIBS-CC:%.cc=m2/gm2-libs/%.o) \\\n+             $(GM2-LIBS-C:%.c=m2/gm2-libs/%.o)\n+\n # Core library definition modules used by the modula-2 to C++ translator.\n \n MC-LIB-DEFS = \\\n@@ -1595,6 +1600,29 @@ m2/gm2-compiler/gm2.a: build-compiler gm2$(exeext)\n                     $(GM2-AUTO-MODS:%.mod=m2/gm2-compiler/%.o)\n \t$(RANLIB) $@\n \n+m2/gm2-libs/libgm2.a: build-compiler gm2$(exeext) $(BUILD-LIBS)\n+\t-test -d $(@D) || $(mkinstalldirs) $(@D)\n+\t$(AR) cr $@ $(GM2-LIBS-MODS:%.mod=m2/gm2-libs/%.o) \\\n+                    $(GM2-LIBS-CC:%.cc=m2/gm2-libs/%.o) \\\n+                    $(GM2-LIBS-C:%.c=m2/gm2-libs/%.o)\n+\t$(RANLIB) $@\n+\n+m2/gm2-libs/%.o: $(srcdir)/m2/gm2-libs/%.mod $(MCDEPS) $(BUILD-BOOT-H)\n+\t-test -d $(@D) || $(mkinstalldirs) $(@D)\n+\t$(GM2_1) -c $(GM2_FLAGS) -Im2/gm2-libs -I$(srcdir)/m2/gm2-libs -I$(srcdir)/m2/gm2-libs-iso $< -o $@\n+\n+m2/gm2-libs/%.o: $(srcdir)/m2/gm2-libs-ch/%.c m2/gm2-libs/gm2-libs-host.h\n+\t-test -d $(@D) || $(mkinstalldirs) $(@D)\n+\t$(CXX) -DBUILD_GM2_LIBS -c $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2/gm2-libs-boot $(INCLUDES) $< -o $@\n+\n+m2/gm2-libs/%.o: $(srcdir)/m2/gm2-libs-ch/%.cc m2/gm2-libs/gm2-libs-host.h\n+\t-test -d $(@D) || $(mkinstalldirs) $(@D)\n+\t$(CXX) -c $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot $(INCLUDES) $< -o $@\n+\n+m2/gm2-libs/choosetemp.o: m2/gm2-libs-ch/choosetemp.c m2/gm2-libiberty/Gchoosetemp.h m2/gm2-libs/gm2-libs-host.h\n+\t-test -d $(@D) || $(mkinstalldirs) $(@D)\n+\t$(CXX) -c $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot -Im2/gm2-libiberty -I$(srcdir)/m2/gm2-libiberty/ $(INCLUDES) $< -o $@\n+\n m2/gm2-libs-boot/libgm2.a: m2/boot-bin/mc$(exeext) $(BUILD-LIBS-BOOT)\n \t-test -d $(@D) || $(mkinstalldirs) $(@D)\n \t$(AR) cr $@ $(GM2-LIBS-BOOT-MODS:%.mod=m2/gm2-libs-boot/%.o) \\"}, {"sha": "ec44b8607b00af3278466e28298609378a24936f", "filename": "gcc/m2/gm2-compiler/M2ColorString.mod", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bb27a1bb2f1c0533e1dda6c4a326e50756830f1/gcc%2Fm2%2Fgm2-compiler%2FM2ColorString.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bb27a1bb2f1c0533e1dda6c4a326e50756830f1/gcc%2Fm2%2Fgm2-compiler%2FM2ColorString.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2ColorString.mod?ref=5bb27a1bb2f1c0533e1dda6c4a326e50756830f1", "patch": "@@ -27,6 +27,7 @@ FROM DynamicStrings IMPORT InitString, InitStringCharStar,\n                            Dup, char, Length, Mult ;\n FROM StrLib IMPORT StrLen ;\n FROM libc IMPORT printf ;\n+FROM SYSTEM IMPORT ADR ;\n \n \n VAR\n@@ -57,7 +58,7 @@ PROCEDURE append (s: String; name: ARRAY OF CHAR) : String ;\n VAR\n    c: String ;\n BEGIN\n-   c := InitStringCharStar (colorize_start (EnableColor, name, StrLen (name))) ;\n+   c := InitStringCharStar (colorize_start (EnableColor, ADR (name), StrLen (name))) ;\n    s := ConCat (s, c) ;\n    c := KillString (c) ;\n    RETURN s"}, {"sha": "e33363e9f834d9b98b8a336c45a7d8b1c34a3b3b", "filename": "gcc/m2/gm2-compiler/M2Comp.mod", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bb27a1bb2f1c0533e1dda6c4a326e50756830f1/gcc%2Fm2%2Fgm2-compiler%2FM2Comp.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bb27a1bb2f1c0533e1dda6c4a326e50756830f1/gcc%2Fm2%2Fgm2-compiler%2FM2Comp.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Comp.mod?ref=5bb27a1bb2f1c0533e1dda6c4a326e50756830f1", "patch": "@@ -319,9 +319,9 @@ BEGIN\n       ELSE\n          ModuleType := Program\n       END ;\n-      IF (Main=Sym) OR NeedToParseImplementation(Sym)\n+      IF (Main=Sym) OR NeedToParseImplementation (Sym)\n       THEN\n-         (* only need to read implementation module if hidden types are declared or it is the main module *)\n+         (* Only need to read implementation module if hidden types are declared or it is the main module *)\n          LibName := NIL ;\n          IF Main=Sym\n          THEN\n@@ -333,13 +333,16 @@ BEGIN\n             THEN\n                FileName := PreprocessModule (FileName, FALSE) ;\n                PutLibName (Sym, makekey (string (LibName)))\n+            ELSE\n+               qprintf1 ('   Module %-20s : implementation source file not found\\n', SymName)\n             END\n          END ;\n+\n          IF FileName#NIL\n          THEN\n             IF OpenSource (AssociateModule (Dup (FileName), Sym))\n             THEN\n-               IF NOT P0SyntaxCheck.CompilationUnit()\n+               IF NOT P0SyntaxCheck.CompilationUnit ()\n                THEN\n                   WriteFormat0 ('compilation failed') ;\n                   CloseSource ;\n@@ -356,9 +359,9 @@ BEGIN\n             ELSE\n                (* It is quite legitimate to implement a module in C (and pretend it was a M2\n                   implementation) providing that it is not the main program module and the\n-                  definition module do not declare a hidden type when -fextended-opaque\n+                  definition module does not declare a hidden type when -fextended-opaque\n                   is used.  *)\n-               IF (NOT WholeProgram) OR (Sym=Main) OR IsHiddenTypeDeclared(Sym)\n+               IF (NOT WholeProgram) OR (Sym=Main) OR IsHiddenTypeDeclared (Sym)\n                THEN\n                   (* Unrecoverable error.  *)\n                   MetaErrorString1 (Sprintf1 (InitString ('file {%%1EUAF%s} containing module {%%1a} cannot be found'),"}, {"sha": "017fe91ad95df1c8e9d3c3919628a9aeb473acf9", "filename": "gcc/m2/gm2-libs-ch/cgetopt.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bb27a1bb2f1c0533e1dda6c4a326e50756830f1/gcc%2Fm2%2Fgm2-libs-ch%2Fcgetopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bb27a1bb2f1c0533e1dda6c4a326e50756830f1/gcc%2Fm2%2Fgm2-libs-ch%2Fcgetopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-ch%2Fcgetopt.c?ref=5bb27a1bb2f1c0533e1dda6c4a326e50756830f1", "patch": "@@ -26,7 +26,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #include \"config.h\"\n #include \"system.h\"\n-#include \"ansi-decl.h\"\n+#include <getopt.h>\n+// #include \"ansi-decl.h\"\n \n \n #ifdef __cplusplus\n@@ -60,7 +61,7 @@ int\n cgetopt_cgetopt_long (int argc, char *argv[], char *optstring, const struct option *longopts,\n                     int *longindex)\n {\n-  int r = cgetopt_long (argc, argv, optstring, longopts, longindex);\n+  int r = getopt_long (argc, argv, optstring, longopts, longindex);\n \n   cgetopt_optarg = optarg;\n   cgetopt_optind = optind;\n@@ -75,7 +76,7 @@ int\n cgetopt_cgetopt_long_only (int argc, char *argv[], char *optstring,\n                          const struct option *longopts, int *longindex)\n {\n-  int r = cgetopt_long_only (argc, argv, optstring, longopts, longindex);\n+  int r = getopt_long_only (argc, argv, optstring, longopts, longindex);\n \n   cgetopt_optarg = optarg;\n   cgetopt_optind = optind;"}, {"sha": "cd7ae808d98750a025e0882f4065815ae9ab02d2", "filename": "gcc/m2/gm2spec.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bb27a1bb2f1c0533e1dda6c4a326e50756830f1/gcc%2Fm2%2Fgm2spec.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bb27a1bb2f1c0533e1dda6c4a326e50756830f1/gcc%2Fm2%2Fgm2spec.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2spec.cc?ref=5bb27a1bb2f1c0533e1dda6c4a326e50756830f1", "patch": "@@ -451,7 +451,7 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n   int need_math = (MATH_LIBRARY[0] != '\\0');\n \n   /* 1 if we should add -lpthread to the command-line.\n-    FIXME: the default should be a configuration choice.  */\n+     FIXME: the default should be a configuration choice.  */\n   int need_pthread = 1;\n \n   /* True if we saw -static.  */\n@@ -533,7 +533,6 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n \t  break;\n \tcase OPT_fmod_:\n \t  module_extension = xstrdup (arg);\n-\t  args[i] |= SKIPOPT; /* We will add the option if it is needed.  */\n #if defined(DEBUG_ARG)\n \t  printf (\"seen -fmod=%s\\n\", module_extension);\n #endif\n@@ -701,7 +700,6 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n \t\t    printf (\"modula-2 source file detected: %s\\n\", source_file);\n #endif\n \t\t    args[i] |= M2SOURCE;\n-\t\t    // args[i] = 0;\n \t\t  }\n \t      }\n \t  }"}]}