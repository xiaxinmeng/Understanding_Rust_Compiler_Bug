{"sha": "839e7f16abda3fd8bd46d59ff1521d402d328a24", "node_id": "C_kwDOANBUbNoAKDgzOWU3ZjE2YWJkYTNmZDhiZDQ2ZDU5ZmYxNTIxZDQwMmQzMjhhMjQ", "commit": {"author": {"name": "Joel Brobecker", "email": "brobecker@adacore.com", "date": "2022-03-11T04:22:34Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-16T08:42:05Z"}, "message": "[Ada] Fix thinko in QNX's implementation of __gnat_install_handler\n\nOn QNX, the sigaction handler is incorrectly installed via the\nsa_handler field of struct sigaction, rather than the sa_sigaction\nfield. This triggers a compilation warning due to a mismatch between the\nfunction's signature and the field's type.\n\n    | init.c:2614:18: warning: assignment to 'void (*)(int)'\n    | from incompatible pointer type 'void (*)(int,  siginfo_t *, void *)'\n    | {aka 'void (*)(int,  struct _siginfo *, void *)'}\n    | [-Wincompatible-pointer-types]\n\nIn practice, using the sa_handler field actually works, but only because\nthose two fields are inside a union:\n\n    From target/qnx7/usr/include/signal.h:\n    | union { \\\n    |     __handler_type  _sa_handler; \\\n    |     __action_type   _sa_sigaction; \\\n    |     } __sa_un; \\\n\nThis commit fixes this.\n\ngcc/ada/\n\n\t* init.c (__gnat_install_handler) [__QNX__]: Set\n\tact.sa_sigaction rather than act.sa_handler.", "tree": {"sha": "48ea4aac57af73f537c49ad07d7a266d28e58597", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48ea4aac57af73f537c49ad07d7a266d28e58597"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/839e7f16abda3fd8bd46d59ff1521d402d328a24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/839e7f16abda3fd8bd46d59ff1521d402d328a24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/839e7f16abda3fd8bd46d59ff1521d402d328a24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/839e7f16abda3fd8bd46d59ff1521d402d328a24/comments", "author": {"login": "brobecke", "id": 11981700, "node_id": "MDQ6VXNlcjExOTgxNzAw", "avatar_url": "https://avatars.githubusercontent.com/u/11981700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brobecke", "html_url": "https://github.com/brobecke", "followers_url": "https://api.github.com/users/brobecke/followers", "following_url": "https://api.github.com/users/brobecke/following{/other_user}", "gists_url": "https://api.github.com/users/brobecke/gists{/gist_id}", "starred_url": "https://api.github.com/users/brobecke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brobecke/subscriptions", "organizations_url": "https://api.github.com/users/brobecke/orgs", "repos_url": "https://api.github.com/users/brobecke/repos", "events_url": "https://api.github.com/users/brobecke/events{/privacy}", "received_events_url": "https://api.github.com/users/brobecke/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9abb17d9fad628a237136b3348ca33f189d2ad2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9abb17d9fad628a237136b3348ca33f189d2ad2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9abb17d9fad628a237136b3348ca33f189d2ad2b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "4615cc152b2f37a2b08ec17416addfbd60fc21a6", "filename": "gcc/ada/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/839e7f16abda3fd8bd46d59ff1521d402d328a24/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/839e7f16abda3fd8bd46d59ff1521d402d328a24/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=839e7f16abda3fd8bd46d59ff1521d402d328a24", "patch": "@@ -2611,7 +2611,7 @@ __gnat_install_handler (void)\n   struct sigaction act;\n   int err;\n \n-  act.sa_handler = __gnat_error_handler;\n+  act.sa_sigaction = __gnat_error_handler;\n   act.sa_flags = SA_NODEFER | SA_SIGINFO;\n   sigemptyset (&act.sa_mask);\n "}]}