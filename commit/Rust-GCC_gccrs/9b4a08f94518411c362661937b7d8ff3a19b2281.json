{"sha": "9b4a08f94518411c362661937b7d8ff3a19b2281", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI0YTA4Zjk0NTE4NDExYzM2MjY2MTkzN2I3ZDhmZjNhMTliMjI4MQ==", "commit": {"author": {"name": "Scott Bambrough", "email": "scottb@netwinder.org", "date": "2000-02-03T06:46:30Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-02-03T06:46:30Z"}, "message": "gjavah.c (D_NAN_MASK): Alternate definition required when HOST_FLOAT_WORDS_BIG_ENDIAN is defined to be 1.\n\n2000-01-31  Scott Bambrough  <scottb@netwinder.org>\n\n\t* gcc/java/gjavah.c (D_NAN_MASK): Alternate definition required when\n\tHOST_FLOAT_WORDS_BIG_ENDIAN is defined to be 1.\n\t(java_float_finite): Convert to use union Word from javaop.h.\n\t(java_double_finite): Convert to use union DWord from javaop.h.\n\nFrom-SVN: r31768", "tree": {"sha": "b2c8de68e45959edb1a17ee8a6257c1ae2a1a57f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2c8de68e45959edb1a17ee8a6257c1ae2a1a57f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b4a08f94518411c362661937b7d8ff3a19b2281", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b4a08f94518411c362661937b7d8ff3a19b2281", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b4a08f94518411c362661937b7d8ff3a19b2281", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b4a08f94518411c362661937b7d8ff3a19b2281/comments", "author": null, "committer": null, "parents": [{"sha": "de3807234afd3fe695900166c35bc120f67a5ef4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de3807234afd3fe695900166c35bc120f67a5ef4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de3807234afd3fe695900166c35bc120f67a5ef4"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "e9807e4e69993b3ee3df8b49a00a41dd13464c8e", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b4a08f94518411c362661937b7d8ff3a19b2281/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b4a08f94518411c362661937b7d8ff3a19b2281/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=9b4a08f94518411c362661937b7d8ff3a19b2281", "patch": "@@ -1,3 +1,10 @@\n+2000-01-31  Scott Bambrough  <scottb@netwinder.org>\n+\n+\t* gcc/java/gjavah.c (D_NAN_MASK): Alternate definition required when\n+\tHOST_FLOAT_WORDS_BIG_ENDIAN is defined to be 1.\n+\t(java_float_finite): Convert to use union Word from javaop.h.\n+\t(java_double_finite): Convert to use union DWord from javaop.h.\n+\n 2000-02-02  Tom Tromey  <tromey@cygnus.com>\n \n \t* gjavah.c (options): Added `jni' entry."}, {"sha": "6f97a64e83aaa33614a1e0bb2b685efa2922e505", "filename": "gcc/java/gjavah.c", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b4a08f94518411c362661937b7d8ff3a19b2281/gcc%2Fjava%2Fgjavah.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b4a08f94518411c362661937b7d8ff3a19b2281/gcc%2Fjava%2Fgjavah.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgjavah.c?ref=9b4a08f94518411c362661937b7d8ff3a19b2281", "patch": "@@ -30,6 +30,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n #include \"jcf.h\"\n #include \"tree.h\"\n+#include \"javaop.h\"\n #include \"java-tree.h\"\n #include \"java-opcodes.h\"\n \n@@ -204,17 +205,18 @@ static int decompiled = 0;\n \n /* Some useful constants.  */\n #define F_NAN_MASK 0x7f800000\n+#if (1 == HOST_FLOAT_WORDS_BIG_ENDIAN)\n+#define D_NAN_MASK 0x000000007ff00000LL\n+#else\n #define D_NAN_MASK 0x7ff0000000000000LL\n+#endif\n \n /* Return 1 if F is not Inf or NaN.  */\n static int\n java_float_finite (f)\n      jfloat f;\n {\n-  union {\n-    jfloat f;\n-    int32 i;\n-  } u;\n+  union Word u;\n   u.f = f;\n \n   /* We happen to know that F_NAN_MASK will match all NaN values, and\n@@ -228,14 +230,11 @@ static int\n java_double_finite (d)\n      jdouble d;\n {\n-  union {\n-    jdouble d;\n-    int64 i;\n-  } u;\n+  union DWord u;\n   u.d = d;\n \n   /* Now check for all NaNs.  */\n-  return (u.i & D_NAN_MASK) != D_NAN_MASK;\n+  return (u.l & D_NAN_MASK) != D_NAN_MASK;\n }\n \n static void"}]}