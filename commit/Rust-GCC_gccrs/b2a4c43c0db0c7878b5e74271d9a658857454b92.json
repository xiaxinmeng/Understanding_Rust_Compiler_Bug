{"sha": "b2a4c43c0db0c7878b5e74271d9a658857454b92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJhNGM0M2MwZGIwYzc4NzhiNWU3NDI3MWQ5YTY1ODg1NzQ1NGI5Mg==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@merlin.codesourcery.com", "date": "2001-07-19T03:06:01Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2001-07-19T03:06:01Z"}, "message": "gen-num-limits.cc (set_signals_handler): New function.\n\n        * src/gen-num-limits.cc (set_signals_handler): New function.\n        Factor out signals setting.  Set signal handler for SIGILL.\n\nCo-Authored-By: Bert De Knuydt <Bert.Deknuydt@esat.kuleuven.ac.be>\n\nFrom-SVN: r44139", "tree": {"sha": "0676b7ed67fef27a6f5966b14ddec759b2455c53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0676b7ed67fef27a6f5966b14ddec759b2455c53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2a4c43c0db0c7878b5e74271d9a658857454b92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2a4c43c0db0c7878b5e74271d9a658857454b92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2a4c43c0db0c7878b5e74271d9a658857454b92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2a4c43c0db0c7878b5e74271d9a658857454b92/comments", "author": null, "committer": null, "parents": [{"sha": "27ffc806c4fb1354fb40cb2e5148098ea85e9dcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27ffc806c4fb1354fb40cb2e5148098ea85e9dcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27ffc806c4fb1354fb40cb2e5148098ea85e9dcf"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "179e073ed78e19242ac826eaa40946d9bceadbb8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2a4c43c0db0c7878b5e74271d9a658857454b92/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2a4c43c0db0c7878b5e74271d9a658857454b92/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b2a4c43c0db0c7878b5e74271d9a658857454b92", "patch": "@@ -1,3 +1,9 @@\n+2001-07-19  Gabriel Dos Reis  <gdr@merlin.codesourcery.com>\n+\t    Bert De Knuydt <Bert.Deknuydt@esat.kuleuven.ac.be>\n+\n+\t* src/gen-num-limits.cc (set_signals_handler): New function.\n+\tFactor out signals setting.  Set signal handler for SIGILL.\n+\n 2001-07-18  Phil Edwards  <pme@sources.redhat.com>\n \n \t* docs/html/27_io/howto.html:  Fix typo."}, {"sha": "e52f67dc43589919602f2f6a4ac90401182a9857", "filename": "libstdc++-v3/src/gen-num-limits.cc", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2a4c43c0db0c7878b5e74271d9a658857454b92/libstdc%2B%2B-v3%2Fsrc%2Fgen-num-limits.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2a4c43c0db0c7878b5e74271d9a658857454b92/libstdc%2B%2B-v3%2Fsrc%2Fgen-num-limits.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fgen-num-limits.cc?ref=b2a4c43c0db0c7878b5e74271d9a658857454b92", "patch": "@@ -157,15 +157,23 @@ template<typename T>\n \n template<typename T> struct underflow { };\n \n+\n+// Set various signals handler for trapping aritmetic ops.\n+void set_signals_handler()\n+{\n+  signal_adapter(signal, SIGFPE, signal_handler);\n+  signal_adapter(signal, SIGTRAP, signal_handler);\n+  // This is necessary for Linux/SPARC.\n+  signal_adapter(signal, SIGILL, signal_handler);\n+}\n+\n // traps\n template<typename T> void traps()\n {\n   fflush(NULL);\n-  signal_adapter (signal, SIGFPE, signal_handler);\n-  signal_adapter (signal, SIGTRAP, signal_handler);\n+  set_signals_handler();\n   bool trap_flag = trapping(division_by_zero<T>());\n-  signal_adapter (signal, SIGFPE, signal_handler);\n-  signal_adapter (signal, SIGTRAP, signal_handler);\n+  set_signals_handler();\n   trap_flag = trap_flag || trapping(overflow<T>());\n   const char* p = bool_alpha[trap_flag];\n   printf(\"%s%s = %s;\\n\", tab2, \"static const bool traps\", p);    \n@@ -175,8 +183,7 @@ template<typename T> void traps()\n template<> void traps< T >()                                            \\\n {       \t\t\t\t\t\t\t\t\\\n   fflush(NULL);                                                         \\\n-  signal_adapter (signal, SIGFPE, signal_handler);                      \\\n-  signal_adapter (signal, SIGTRAP, signal_handler);                     \\\n+  set_signals_handler();                                                \\\n   const char* p = bool_alpha[trapping(division_by_zero<T>())];          \\\n   printf(\"%s%s = %s;\\n\", tab2, \"static const bool traps\", p);           \\\n }"}]}