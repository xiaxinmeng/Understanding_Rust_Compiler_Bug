{"sha": "e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTliZmRmMThjYjRmNmZkNmQzMjNiYzFhOTAwOGQyZTcxNzY3MGZmNw==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-02-12T19:53:17Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-02-12T19:53:17Z"}, "message": "libgfortran.h (GFC_ARRAY_DESCRIPTOR): Remove dimension of descriptor to use vaiable members for dim.\n\n2018-02-12  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\t* libgfortran.h (GFC_ARRAY_DESCRIPTOR): Remove dimension\n\tof descriptor to use vaiable members for dim.\n\tChange usage of GFC_ARRAY_DESCRIPTOR accordingly.\n\t(GFC_FILL_ARRAY_DESCRIPTOR): New macro.\n\t(gfc_full_array_i4): New type.\n\t* intrinsics/date_and_time.c (secnds): Use sizeof\n\t(gfc_array_i4) + sizeof (descriptor_dimension) for memory\n\tallocation.\n\t* intrinsics/reshape_generic.c: Use GFC_FULL_ARRAY_DESCRIPTOR.\n\t* io/format.c: Use sizeof (gfc_array_i4) + sizeof\n\t(descriptor_dimension) for memoy allocation.\n\t* io/list_read.c (list_formatted_read_scalar): Use\n\tgfc_full_array_i4 for variable.\n\t(nml_read_obj): Likewise.\n\t* io/write.c (list_formatted_write_scalar): Likewise.\n\t(nml_write_obj): Likewise.\n\t* m4/reshape.m4: Use GFC_FULL_ARRAY_DESCRIPTOR.\n\t* generated/reshape_c10.c: Regenerated.\n\t* generated/reshape_c16.c: Regenerated.\n\t* generated/reshape_c4.c: Regenerated.\n\t* generated/reshape_c8.c: Regenerated.\n\t* generated/reshape_i16.c: Regenerated.\n\t* generated/reshape_i4.c: Regenerated.\n\t* generated/reshape_i8.c: Regenerated.\n\t* generated/reshape_r10.c: Regenerated.\n\t* generated/reshape_r16.c: Regenerated.\n\t* generated/reshape_r4.c: Regenerated.\n\t* generated/reshape_r8.c: Regenerated.\n\nFrom-SVN: r257601", "tree": {"sha": "02ed85c48bc8966ec79c5aace72da2283178c8e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02ed85c48bc8966ec79c5aace72da2283178c8e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/comments", "author": null, "committer": null, "parents": [{"sha": "52eb4ab4092228369cea5d7ca2717d32cc666c5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52eb4ab4092228369cea5d7ca2717d32cc666c5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52eb4ab4092228369cea5d7ca2717d32cc666c5c"}], "stats": {"total": 138, "additions": 93, "deletions": 45}, "files": [{"sha": "2220ec2bae63a8548a36bcb8fcb6a9a1c17235b8", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7", "patch": "@@ -1,3 +1,34 @@\n+2018-02-12  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\t* libgfortran.h (GFC_ARRAY_DESCRIPTOR): Remove dimension\n+\tof descriptor to use vaiable members for dim.\n+\tChange usage of GFC_ARRAY_DESCRIPTOR accordingly.\n+\t(GFC_FILL_ARRAY_DESCRIPTOR): New macro.\n+\t(gfc_full_array_i4): New type.\n+\t* intrinsics/date_and_time.c (secnds): Use sizeof\n+\t(gfc_array_i4) + sizeof (descriptor_dimension) for memory\n+\tallocation.\n+\t* intrinsics/reshape_generic.c: Use GFC_FULL_ARRAY_DESCRIPTOR.\n+\t* io/format.c: Use sizeof (gfc_array_i4) + sizeof\n+\t(descriptor_dimension) for memoy allocation.\n+\t* io/list_read.c (list_formatted_read_scalar): Use\n+\tgfc_full_array_i4 for variable.\n+\t(nml_read_obj): Likewise.\n+\t* io/write.c (list_formatted_write_scalar): Likewise.\n+\t(nml_write_obj): Likewise.\n+\t* m4/reshape.m4: Use GFC_FULL_ARRAY_DESCRIPTOR.\n+\t* generated/reshape_c10.c: Regenerated.\n+\t* generated/reshape_c16.c: Regenerated.\n+\t* generated/reshape_c4.c: Regenerated.\n+\t* generated/reshape_c8.c: Regenerated.\n+\t* generated/reshape_i16.c: Regenerated.\n+\t* generated/reshape_i4.c: Regenerated.\n+\t* generated/reshape_i8.c: Regenerated.\n+\t* generated/reshape_r10.c: Regenerated.\n+\t* generated/reshape_r16.c: Regenerated.\n+\t* generated/reshape_r4.c: Regenerated.\n+\t* generated/reshape_r8.c: Regenerated.\n+\n 2018-01-31  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \t* generated/cshift1_16.c (cshift1): Regenerated."}, {"sha": "a6077551e1b37763369e324745c2ea2f5e092f7d", "filename": "libgfortran/generated/reshape_c10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fgenerated%2Freshape_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fgenerated%2Freshape_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c10.c?ref=e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7", "patch": "@@ -28,7 +28,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #if defined (HAVE_GFC_COMPLEX_10)\n \n-typedef GFC_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n+typedef GFC_FULL_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n \n \n extern void reshape_c10 (gfc_array_c10 * const restrict, "}, {"sha": "daecd1eb87569636704fe3c8b8103107685c9c51", "filename": "libgfortran/generated/reshape_c16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fgenerated%2Freshape_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fgenerated%2Freshape_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c16.c?ref=e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7", "patch": "@@ -28,7 +28,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #if defined (HAVE_GFC_COMPLEX_16)\n \n-typedef GFC_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n+typedef GFC_FULL_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n \n \n extern void reshape_c16 (gfc_array_c16 * const restrict, "}, {"sha": "c2f89e9f99a55ab046847fd5704f954d6ab453d1", "filename": "libgfortran/generated/reshape_c4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fgenerated%2Freshape_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fgenerated%2Freshape_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c4.c?ref=e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7", "patch": "@@ -28,7 +28,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #if defined (HAVE_GFC_COMPLEX_4)\n \n-typedef GFC_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n+typedef GFC_FULL_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n \n \n extern void reshape_c4 (gfc_array_c4 * const restrict, "}, {"sha": "2b2a0b8ee7c4c8689e52b82858795219fce49024", "filename": "libgfortran/generated/reshape_c8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fgenerated%2Freshape_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fgenerated%2Freshape_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c8.c?ref=e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7", "patch": "@@ -28,7 +28,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #if defined (HAVE_GFC_COMPLEX_8)\n \n-typedef GFC_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n+typedef GFC_FULL_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n \n \n extern void reshape_c8 (gfc_array_c8 * const restrict, "}, {"sha": "620d74bf137bc8e839d8c8872534c4838ca8438d", "filename": "libgfortran/generated/reshape_i16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fgenerated%2Freshape_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fgenerated%2Freshape_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_i16.c?ref=e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7", "patch": "@@ -28,7 +28,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #if defined (HAVE_GFC_INTEGER_16)\n \n-typedef GFC_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n+typedef GFC_FULL_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n \n \n extern void reshape_16 (gfc_array_i16 * const restrict, "}, {"sha": "fb616e64fd64f7d024b259d425c8c763003094b6", "filename": "libgfortran/generated/reshape_i4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fgenerated%2Freshape_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fgenerated%2Freshape_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_i4.c?ref=e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7", "patch": "@@ -28,7 +28,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #if defined (HAVE_GFC_INTEGER_4)\n \n-typedef GFC_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n+typedef GFC_FULL_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n \n \n extern void reshape_4 (gfc_array_i4 * const restrict, "}, {"sha": "abe466368282516ac0f42f4566283b04206a2077", "filename": "libgfortran/generated/reshape_i8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fgenerated%2Freshape_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fgenerated%2Freshape_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_i8.c?ref=e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7", "patch": "@@ -28,7 +28,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #if defined (HAVE_GFC_INTEGER_8)\n \n-typedef GFC_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n+typedef GFC_FULL_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n \n \n extern void reshape_8 (gfc_array_i8 * const restrict, "}, {"sha": "e2f6cb64604f5106676a2b0bb64d6321ee90e666", "filename": "libgfortran/generated/reshape_r10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fgenerated%2Freshape_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fgenerated%2Freshape_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_r10.c?ref=e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7", "patch": "@@ -28,7 +28,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #if defined (HAVE_GFC_REAL_10)\n \n-typedef GFC_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n+typedef GFC_FULL_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n \n \n extern void reshape_r10 (gfc_array_r10 * const restrict, "}, {"sha": "0a24a751c80d376c8f13db745043c5821e81b193", "filename": "libgfortran/generated/reshape_r16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fgenerated%2Freshape_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fgenerated%2Freshape_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_r16.c?ref=e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7", "patch": "@@ -28,7 +28,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #if defined (HAVE_GFC_REAL_16)\n \n-typedef GFC_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n+typedef GFC_FULL_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n \n \n extern void reshape_r16 (gfc_array_r16 * const restrict, "}, {"sha": "db8d76a4135ef0dd59e391630558cc21478b3167", "filename": "libgfortran/generated/reshape_r4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fgenerated%2Freshape_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fgenerated%2Freshape_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_r4.c?ref=e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7", "patch": "@@ -28,7 +28,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #if defined (HAVE_GFC_REAL_4)\n \n-typedef GFC_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n+typedef GFC_FULL_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n \n \n extern void reshape_r4 (gfc_array_r4 * const restrict, "}, {"sha": "06fc72f6efc3cf02d11daa4f7f470c9754595907", "filename": "libgfortran/generated/reshape_r8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fgenerated%2Freshape_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fgenerated%2Freshape_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_r8.c?ref=e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7", "patch": "@@ -28,7 +28,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #if defined (HAVE_GFC_REAL_8)\n \n-typedef GFC_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n+typedef GFC_FULL_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n \n \n extern void reshape_r8 (gfc_array_r8 * const restrict, "}, {"sha": "78a7cd0e48b50944324116b6136ca52b9e2e8ddc", "filename": "libgfortran/intrinsics/date_and_time.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fintrinsics%2Fdate_and_time.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fintrinsics%2Fdate_and_time.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fdate_and_time.c?ref=e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7", "patch": "@@ -267,8 +267,10 @@ secnds (GFC_REAL_4 *x)\n   GFC_INTEGER_4 values[VALUES_SIZE];\n   GFC_REAL_4 temp1, temp2;\n \n-  /* Make the INTEGER*4 array for passing to date_and_time.  */\n-  gfc_array_i4 *avalues = xmalloc (sizeof (gfc_array_i4));\n+  /* Make the INTEGER*4 array for passing to date_and_time, with enough space\n+   for a rank-one array.  */\n+  gfc_array_i4 *avalues = xmalloc (sizeof (gfc_array_i4)\n+\t\t\t\t   + sizeof (descriptor_dimension));\n   avalues->base_addr = &values[0];\n   GFC_DESCRIPTOR_DTYPE (avalues).type = BT_REAL;\n   GFC_DESCRIPTOR_DTYPE (avalues).elem_len = 4;"}, {"sha": "276c69ca59582959c4f2dd8b110fee55568d97e9", "filename": "libgfortran/intrinsics/reshape_generic.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fintrinsics%2Freshape_generic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fintrinsics%2Freshape_generic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Freshape_generic.c?ref=e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7", "patch": "@@ -26,8 +26,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n #include <string.h>\n \n-typedef GFC_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n-typedef GFC_ARRAY_DESCRIPTOR(GFC_MAX_DIMENSIONS, char) parray;\n+typedef GFC_FULL_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n+typedef GFC_FULL_ARRAY_DESCRIPTOR(GFC_MAX_DIMENSIONS, char) parray;\n \n static void\n reshape_internal (parray *ret, parray *source, shape_type *shape,"}, {"sha": "b4920aaf1f1f8d848e6c72de9e06ba9674ac76a6", "filename": "libgfortran/io/format.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fio%2Fformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fio%2Fformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fformat.c?ref=e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7", "patch": "@@ -1024,8 +1024,9 @@ parse_format_list (st_parameter_dt *dtp, bool *seen_dd)\n \n       t = format_lex (fmt);\n \n-      /* Initialize the vlist to a zero size array.  */\n-      tail->u.udf.vlist= xmalloc (sizeof(gfc_array_i4));\n+      /* Initialize the vlist to a zero size, rank-one array.  */\n+      tail->u.udf.vlist= xmalloc (sizeof(gfc_array_i4)\n+\t\t\t\t  + sizeof (descriptor_dimension));\n       GFC_DESCRIPTOR_DATA(tail->u.udf.vlist) = NULL;\n       GFC_DIMENSION_SET(tail->u.udf.vlist->dim[0],1, 0, 0);\n "}, {"sha": "d052d1fa828e313f2ed486e7609ad89048308930", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7", "patch": "@@ -2198,7 +2198,7 @@ list_formatted_read_scalar (st_parameter_dt *dtp, bt type, void *p,\n \t  gfc_charlen_type child_iomsg_len;\n \t  int noiostat;\n \t  int *child_iostat = NULL;\n-\t  gfc_array_i4 vlist;\n+\t  gfc_full_array_i4 vlist;\n \n \t  GFC_DESCRIPTOR_DATA(&vlist) = NULL;\n \t  GFC_DIMENSION_SET(vlist.dim[0],1, 0, 0);\n@@ -2996,7 +2996,7 @@ nml_read_obj (st_parameter_dt *dtp, namelist_info *nl, index_type offset,\n \t\tgfc_charlen_type child_iomsg_len;\n \t\tint noiostat;\n \t\tint *child_iostat = NULL;\n-\t\tgfc_array_i4 vlist;\n+\t\tgfc_full_array_i4 vlist;\n \t\tformatted_dtio dtio_ptr = (formatted_dtio)nl->dtio_sub;\n \n \t\tGFC_DESCRIPTOR_DATA(&vlist) = NULL;"}, {"sha": "50ea13364e385f39a7615c71ca507fb4258596df", "filename": "libgfortran/io/write.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fio%2Fwrite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fio%2Fwrite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fwrite.c?ref=e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7", "patch": "@@ -1886,7 +1886,7 @@ list_formatted_write_scalar (st_parameter_dt *dtp, bt type, void *p, int kind,\n \t  gfc_charlen_type child_iomsg_len;\n \t  int noiostat;\n \t  int *child_iostat = NULL;\n-\t  gfc_array_i4 vlist;\n+\t  gfc_full_array_i4 vlist;\n \n \t  GFC_DESCRIPTOR_DATA(&vlist) = NULL;\n \t  GFC_DIMENSION_SET(vlist.dim[0],1, 0, 0);\n@@ -2211,7 +2211,7 @@ nml_write_obj (st_parameter_dt *dtp, namelist_info *obj, index_type offset,\n \t\t  gfc_charlen_type child_iomsg_len;\n \t\t  int noiostat;\n \t\t  int *child_iostat = NULL;\n-\t\t  gfc_array_i4 vlist;\n+\t\t  gfc_full_array_i4 vlist;\n \t\t  formatted_dtio dtio_ptr = (formatted_dtio)obj->dtio_sub;\n \n \t\t  GFC_DIMENSION_SET(vlist.dim[0],1, 0, 0);"}, {"sha": "38e364f1012ff77bb719a1a90d6c8267b2326c82", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 37, "deletions": 23, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7", "patch": "@@ -339,51 +339,65 @@ typedef struct dtype_type\n }\n dtype_type;\n \n-#define GFC_ARRAY_DESCRIPTOR(r, type) \\\n+#define GFC_ARRAY_DESCRIPTOR(type) \\\n struct {\\\n   type *base_addr;\\\n   size_t offset;\\\n   dtype_type dtype;\\\n   index_type span;\\\n-  descriptor_dimension dim[r];\\\n+  descriptor_dimension dim[];\\\n }\n \n /* Commonly used array descriptor types.  */\n-typedef GFC_ARRAY_DESCRIPTOR (GFC_MAX_DIMENSIONS, void) gfc_array_void;\n-typedef GFC_ARRAY_DESCRIPTOR (GFC_MAX_DIMENSIONS, char) gfc_array_char;\n-typedef GFC_ARRAY_DESCRIPTOR (GFC_MAX_DIMENSIONS, GFC_INTEGER_1) gfc_array_i1;\n-typedef GFC_ARRAY_DESCRIPTOR (GFC_MAX_DIMENSIONS, GFC_INTEGER_2) gfc_array_i2;\n-typedef GFC_ARRAY_DESCRIPTOR (GFC_MAX_DIMENSIONS, GFC_INTEGER_4) gfc_array_i4;\n-typedef GFC_ARRAY_DESCRIPTOR (GFC_MAX_DIMENSIONS, GFC_INTEGER_8) gfc_array_i8;\n+typedef GFC_ARRAY_DESCRIPTOR (void) gfc_array_void;\n+typedef GFC_ARRAY_DESCRIPTOR (char) gfc_array_char;\n+typedef GFC_ARRAY_DESCRIPTOR (GFC_INTEGER_1) gfc_array_i1;\n+typedef GFC_ARRAY_DESCRIPTOR (GFC_INTEGER_2) gfc_array_i2;\n+typedef GFC_ARRAY_DESCRIPTOR (GFC_INTEGER_4) gfc_array_i4;\n+typedef GFC_ARRAY_DESCRIPTOR (GFC_INTEGER_8) gfc_array_i8;\n #ifdef HAVE_GFC_INTEGER_16\n-typedef GFC_ARRAY_DESCRIPTOR (GFC_MAX_DIMENSIONS, GFC_INTEGER_16) gfc_array_i16;\n+typedef GFC_ARRAY_DESCRIPTOR (GFC_INTEGER_16) gfc_array_i16;\n #endif\n-typedef GFC_ARRAY_DESCRIPTOR (GFC_MAX_DIMENSIONS, GFC_REAL_4) gfc_array_r4;\n-typedef GFC_ARRAY_DESCRIPTOR (GFC_MAX_DIMENSIONS, GFC_REAL_8) gfc_array_r8;\n+typedef GFC_ARRAY_DESCRIPTOR (GFC_REAL_4) gfc_array_r4;\n+typedef GFC_ARRAY_DESCRIPTOR (GFC_REAL_8) gfc_array_r8;\n #ifdef HAVE_GFC_REAL_10\n-typedef GFC_ARRAY_DESCRIPTOR (GFC_MAX_DIMENSIONS, GFC_REAL_10) gfc_array_r10;\n+typedef GFC_ARRAY_DESCRIPTOR (GFC_REAL_10) gfc_array_r10;\n #endif\n #ifdef HAVE_GFC_REAL_16\n-typedef GFC_ARRAY_DESCRIPTOR (GFC_MAX_DIMENSIONS, GFC_REAL_16) gfc_array_r16;\n+typedef GFC_ARRAY_DESCRIPTOR (GFC_REAL_16) gfc_array_r16;\n #endif\n-typedef GFC_ARRAY_DESCRIPTOR (GFC_MAX_DIMENSIONS, GFC_COMPLEX_4) gfc_array_c4;\n-typedef GFC_ARRAY_DESCRIPTOR (GFC_MAX_DIMENSIONS, GFC_COMPLEX_8) gfc_array_c8;\n+typedef GFC_ARRAY_DESCRIPTOR (GFC_COMPLEX_4) gfc_array_c4;\n+typedef GFC_ARRAY_DESCRIPTOR (GFC_COMPLEX_8) gfc_array_c8;\n #ifdef HAVE_GFC_COMPLEX_10\n-typedef GFC_ARRAY_DESCRIPTOR (GFC_MAX_DIMENSIONS, GFC_COMPLEX_10) gfc_array_c10;\n+typedef GFC_ARRAY_DESCRIPTOR (GFC_COMPLEX_10) gfc_array_c10;\n #endif\n #ifdef HAVE_GFC_COMPLEX_16\n-typedef GFC_ARRAY_DESCRIPTOR (GFC_MAX_DIMENSIONS, GFC_COMPLEX_16) gfc_array_c16;\n+typedef GFC_ARRAY_DESCRIPTOR (GFC_COMPLEX_16) gfc_array_c16;\n #endif\n-typedef GFC_ARRAY_DESCRIPTOR (GFC_MAX_DIMENSIONS, GFC_LOGICAL_1) gfc_array_l1;\n-typedef GFC_ARRAY_DESCRIPTOR (GFC_MAX_DIMENSIONS, GFC_LOGICAL_2) gfc_array_l2;\n-typedef GFC_ARRAY_DESCRIPTOR (GFC_MAX_DIMENSIONS, GFC_LOGICAL_4) gfc_array_l4;\n-typedef GFC_ARRAY_DESCRIPTOR (GFC_MAX_DIMENSIONS, GFC_LOGICAL_8) gfc_array_l8;\n+typedef GFC_ARRAY_DESCRIPTOR (GFC_LOGICAL_1) gfc_array_l1;\n+typedef GFC_ARRAY_DESCRIPTOR (GFC_LOGICAL_2) gfc_array_l2;\n+typedef GFC_ARRAY_DESCRIPTOR (GFC_LOGICAL_4) gfc_array_l4;\n+typedef GFC_ARRAY_DESCRIPTOR (GFC_LOGICAL_8) gfc_array_l8;\n #ifdef HAVE_GFC_LOGICAL_16\n-typedef GFC_ARRAY_DESCRIPTOR (GFC_MAX_DIMENSIONS, GFC_LOGICAL_16) gfc_array_l16;\n+typedef GFC_ARRAY_DESCRIPTOR (GFC_LOGICAL_16) gfc_array_l16;\n #endif\n typedef gfc_array_i1 gfc_array_s1;\n typedef gfc_array_i4 gfc_array_s4;\n \n+/* These are for when you actually want to declare a descriptor, as\n+   opposed to a pointer to it.  */\n+\n+#define GFC_FULL_ARRAY_DESCRIPTOR(r, type) \\\n+struct {\\\n+  type *base_addr;\\\n+  size_t offset;\\\n+  dtype_type dtype;\\\n+  index_type span;\\\n+  descriptor_dimension dim[r];\\\n+}\n+\n+typedef GFC_FULL_ARRAY_DESCRIPTOR (GFC_MAX_DIMENSIONS, GFC_INTEGER_4) gfc_full_array_i4;\n+\n #define GFC_DESCRIPTOR_RANK(desc) ((desc)->dtype.rank)\n #define GFC_DESCRIPTOR_TYPE(desc) ((desc)->dtype.type)\n #define GFC_DESCRIPTOR_SIZE(desc) ((desc)->dtype.elem_len)\n@@ -1345,7 +1359,7 @@ iexport_proto(random_seed_i8);\n \n /* size.c */\n \n-typedef GFC_ARRAY_DESCRIPTOR (GFC_MAX_DIMENSIONS, void) array_t;\n+typedef GFC_ARRAY_DESCRIPTOR (void) array_t;\n \n extern index_type size0 (const array_t * array); \n iexport_proto(size0);"}, {"sha": "c96ad9f35a3098a72e476afd427d44c671fd07da", "filename": "libgfortran/m4/reshape.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fm4%2Freshape.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7/libgfortran%2Fm4%2Freshape.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Freshape.m4?ref=e9bfdf18cb4f6fd6d323bc1a9008d2e717670ff7", "patch": "@@ -29,7 +29,7 @@ include(iparm.m4)dnl\n \n `#if defined (HAVE_'rtype_name`)\n \n-typedef GFC_ARRAY_DESCRIPTOR(1, 'index_type`) 'shape_type`;'\n+typedef GFC_FULL_ARRAY_DESCRIPTOR(1, 'index_type`) 'shape_type`;'\n \n dnl For integer routines, only the kind (ie size) is used to name the\n dnl function.  The same function will be used for integer and logical"}]}