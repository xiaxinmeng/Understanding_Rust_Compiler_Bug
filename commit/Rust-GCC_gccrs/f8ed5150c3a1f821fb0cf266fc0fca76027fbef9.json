{"sha": "f8ed5150c3a1f821fb0cf266fc0fca76027fbef9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhlZDUxNTBjM2ExZjgyMWZiMGNmMjY2ZmMwZmNhNzYwMjdmYmVmOQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-04-30T07:34:43Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-04-30T07:34:43Z"}, "message": "gcc.c (sanitize_spec_function): Handle SANITIZE_FLOAT_DIVIDE.\n\n\t* gcc.c (sanitize_spec_function): Handle SANITIZE_FLOAT_DIVIDE.\n\t* builtins.def: Initialize builtins even for SANITIZE_FLOAT_DIVIDE.\n\t* flag-types.h (enum sanitize_code): Add SANITIZE_FLOAT_DIVIDE.\n\t* opts.c (common_handle_option): Add -fsanitize=float-divide-by-zero.\nc-family/\n\t* c-ubsan.c (ubsan_instrument_division): Handle REAL_TYPEs.  Perform\n\tINT_MIN / -1 sanitization only for integer types.\nc/\n\t* c-typeck.c (build_binary_op): Call ubsan_instrument_division\n\talso when SANITIZE_FLOAT_DIVIDE is on.\ncp/\n\t* typeck.c (cp_build_binary_op): Call ubsan_instrument_division\n\teven when SANITIZE_FLOAT_DIVIDE is on.  Set doing_div_or_mod even\n\tfor non-integer types.\ntestsuite/\n\t* c-c++-common/ubsan/div-by-zero-5.c: Fix formatting.\n\t* c-c++-common/ubsan/float-div-by-zero-1.c: New test.\n\nFrom-SVN: r209927", "tree": {"sha": "b9c2023c1b5e5c36a658f26af0093b269e49a14b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9c2023c1b5e5c36a658f26af0093b269e49a14b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8337d1db7113fa0c44541a1917529a0c41057a4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8337d1db7113fa0c44541a1917529a0c41057a4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8337d1db7113fa0c44541a1917529a0c41057a4a"}], "stats": {"total": 102, "additions": 82, "deletions": 20}, "files": [{"sha": "1bec6e12fa8722ae203e9d4b314e45488508e982", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8ed5150c3a1f821fb0cf266fc0fca76027fbef9", "patch": "@@ -1,3 +1,10 @@\n+2014-04-30  Marek Polacek  <polacek@redhat.com>\n+\n+\t* gcc.c (sanitize_spec_function): Handle SANITIZE_FLOAT_DIVIDE.\n+\t* builtins.def: Initialize builtins even for SANITIZE_FLOAT_DIVIDE.\n+\t* flag-types.h (enum sanitize_code): Add SANITIZE_FLOAT_DIVIDE.\n+\t* opts.c (common_handle_option): Add -fsanitize=float-divide-by-zero.\n+\n 2014-04-29  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* config/aarch64/arm_neon.h (vzip1_f32, vzip1_p8, vzip1_p16, vzip1_s8,"}, {"sha": "d400ecb4e8fffaa898aa7f44617cacd32503a499", "filename": "gcc/builtins.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=f8ed5150c3a1f821fb0cf266fc0fca76027fbef9", "patch": "@@ -176,7 +176,7 @@ along with GCC; see the file COPYING3.  If not see\n   DEF_BUILTIN (ENUM, \"__builtin_\" NAME, BUILT_IN_NORMAL, TYPE, TYPE,    \\\n \t       true, true, true, ATTRS, true, \\\n \t      (flag_sanitize & (SANITIZE_ADDRESS | SANITIZE_THREAD \\\n-\t\t\t\t| SANITIZE_UNDEFINED)))\n+\t\t\t\t| SANITIZE_UNDEFINED | SANITIZE_FLOAT_DIVIDE)))\n \n #undef DEF_CILKPLUS_BUILTIN\n #define DEF_CILKPLUS_BUILTIN(ENUM, NAME, TYPE, ATTRS)  \\"}, {"sha": "47bb11438ad997dbca72276e6f48c23b0e0b502c", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=f8ed5150c3a1f821fb0cf266fc0fca76027fbef9", "patch": "@@ -1,3 +1,8 @@\n+2014-04-30  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-ubsan.c (ubsan_instrument_division): Handle REAL_TYPEs.  Perform\n+\tINT_MIN / -1 sanitization only for integer types.\n+\n 2014-04-25  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/18079"}, {"sha": "a0397925fe7aa9db4427782a14740b3fbb5d1f05", "filename": "gcc/c-family/c-ubsan.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Fc-family%2Fc-ubsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Fc-family%2Fc-ubsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ubsan.c?ref=f8ed5150c3a1f821fb0cf266fc0fca76027fbef9", "patch": "@@ -46,15 +46,21 @@ ubsan_instrument_division (location_t loc, tree op0, tree op1)\n   gcc_assert (TYPE_MAIN_VARIANT (TREE_TYPE (op0))\n \t      == TYPE_MAIN_VARIANT (TREE_TYPE (op1)));\n \n-  /* TODO: REAL_TYPE is not supported yet.  */\n-  if (TREE_CODE (type) != INTEGER_TYPE)\n+  if (TREE_CODE (type) == INTEGER_TYPE\n+      && (flag_sanitize & SANITIZE_DIVIDE))\n+    t = fold_build2 (EQ_EXPR, boolean_type_node,\n+\t\t     op1, build_int_cst (type, 0));\n+  else if (TREE_CODE (type) == REAL_TYPE\n+\t   && (flag_sanitize & SANITIZE_FLOAT_DIVIDE))\n+    t = fold_build2 (EQ_EXPR, boolean_type_node,\n+\t\t     op1, build_real (type, dconst0));\n+  else\n     return NULL_TREE;\n \n-  t = fold_build2 (EQ_EXPR, boolean_type_node,\n-\t\t    op1, build_int_cst (type, 0));\n-\n   /* We check INT_MIN / -1 only for signed types.  */\n-  if (!TYPE_UNSIGNED (type))\n+  if (TREE_CODE (type) == INTEGER_TYPE\n+      && (flag_sanitize & SANITIZE_DIVIDE)\n+      && !TYPE_UNSIGNED (type))\n     {\n       tree x;\n       tt = fold_build2 (EQ_EXPR, boolean_type_node, op1,"}, {"sha": "bf61610e37cb2c7a7ecef29700186734f41d75c7", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=f8ed5150c3a1f821fb0cf266fc0fca76027fbef9", "patch": "@@ -1,3 +1,8 @@\n+2014-04-30  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-typeck.c (build_binary_op): Call ubsan_instrument_division\n+\talso when SANITIZE_FLOAT_DIVIDE is on.\n+\n 2014-04-30  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/60139"}, {"sha": "cb8ae44e3632cf613d49aaf183ebf8c9fedaa003", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=f8ed5150c3a1f821fb0cf266fc0fca76027fbef9", "patch": "@@ -10997,7 +10997,8 @@ build_binary_op (location_t location, enum tree_code code,\n \treturn error_mark_node;\n     }\n \n-  if ((flag_sanitize & (SANITIZE_SHIFT | SANITIZE_DIVIDE))\n+  if ((flag_sanitize & (SANITIZE_SHIFT | SANITIZE_DIVIDE\n+\t\t\t| SANITIZE_FLOAT_DIVIDE))\n       && current_function_decl != 0\n       && !lookup_attribute (\"no_sanitize_undefined\",\n \t\t\t    DECL_ATTRIBUTES (current_function_decl))\n@@ -11008,7 +11009,8 @@ build_binary_op (location_t location, enum tree_code code,\n       op1 = c_save_expr (op1);\n       op0 = c_fully_fold (op0, false, NULL);\n       op1 = c_fully_fold (op1, false, NULL);\n-      if (doing_div_or_mod && (flag_sanitize & SANITIZE_DIVIDE))\n+      if (doing_div_or_mod && (flag_sanitize & (SANITIZE_DIVIDE\n+\t\t\t\t\t\t| SANITIZE_FLOAT_DIVIDE)))\n \tinstrument_expr = ubsan_instrument_division (location, op0, op1);\n       else if (doing_shift && (flag_sanitize & SANITIZE_SHIFT))\n \tinstrument_expr = ubsan_instrument_shift (location, code, op0, op1);"}, {"sha": "c4be5bdde6c51be38291fd68cf654c6dc2c7565e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f8ed5150c3a1f821fb0cf266fc0fca76027fbef9", "patch": "@@ -1,3 +1,9 @@\n+2014-04-30  Marek Polacek  <polacek@redhat.com>\n+\n+\t* typeck.c (cp_build_binary_op): Call ubsan_instrument_division\n+\teven when SANITIZE_FLOAT_DIVIDE is on.  Set doing_div_or_mod even\n+\tfor non-integer types.\n+\n 2014-04-29  Jason Merrill  <jason@redhat.com>\n \n \tDR 1351"}, {"sha": "729e22eadc57dc262759fbcd9880df4424acc008", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=f8ed5150c3a1f821fb0cf266fc0fca76027fbef9", "patch": "@@ -4110,10 +4110,7 @@ cp_build_binary_op (location_t location,\n \t  enum tree_code tcode0 = code0, tcode1 = code1;\n \t  tree cop1 = fold_non_dependent_expr_sfinae (op1, tf_none);\n \t  cop1 = maybe_constant_value (cop1);\n-\n-\t  if (tcode0 == INTEGER_TYPE)\n-\t    doing_div_or_mod = true;\n-\n+\t  doing_div_or_mod = true;\n \t  warn_for_div_by_zero (location, cop1);\n \n \t  if (tcode0 == COMPLEX_TYPE || tcode0 == VECTOR_TYPE)\n@@ -4153,9 +4150,7 @@ cp_build_binary_op (location_t location,\n       {\n \ttree cop1 = fold_non_dependent_expr_sfinae (op1, tf_none);\n \tcop1 = maybe_constant_value (cop1);\n-\n-\tif (code0 == INTEGER_TYPE)\n-\t  doing_div_or_mod = true;\n+\tdoing_div_or_mod = true;\n \twarn_for_div_by_zero (location, cop1);\n       }\n \n@@ -4902,7 +4897,8 @@ cp_build_binary_op (location_t location,\n   if (build_type == NULL_TREE)\n     build_type = result_type;\n \n-  if ((flag_sanitize & (SANITIZE_SHIFT | SANITIZE_DIVIDE))\n+  if ((flag_sanitize & (SANITIZE_SHIFT | SANITIZE_DIVIDE\n+\t\t\t| SANITIZE_FLOAT_DIVIDE))\n       && !processing_template_decl\n       && current_function_decl != 0\n       && !lookup_attribute (\"no_sanitize_undefined\",\n@@ -4916,7 +4912,8 @@ cp_build_binary_op (location_t location,\n \t\t\t\t\t\t\t\t  tf_none));\n       op1 = maybe_constant_value (fold_non_dependent_expr_sfinae (op1,\n \t\t\t\t\t\t\t\t  tf_none));\n-      if (doing_div_or_mod && (flag_sanitize & SANITIZE_DIVIDE))\n+      if (doing_div_or_mod && (flag_sanitize & (SANITIZE_DIVIDE\n+\t\t\t\t\t\t| SANITIZE_FLOAT_DIVIDE)))\n \t{\n \t  /* For diagnostics we want to use the promoted types without\n \t     shorten_binary_op.  So convert the arguments to the"}, {"sha": "caf4039f9df03c8cf9f5654299f08b39ac975d0b", "filename": "gcc/flag-types.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Fflag-types.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Fflag-types.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflag-types.h?ref=f8ed5150c3a1f821fb0cf266fc0fca76027fbef9", "patch": "@@ -228,6 +228,7 @@ enum sanitize_code {\n   SANITIZE_SI_OVERFLOW = 1 << 9,\n   SANITIZE_BOOL = 1 << 10,\n   SANITIZE_ENUM = 1 << 11,\n+  SANITIZE_FLOAT_DIVIDE = 1 << 12,\n   SANITIZE_UNDEFINED = SANITIZE_SHIFT | SANITIZE_DIVIDE | SANITIZE_UNREACHABLE\n \t\t       | SANITIZE_VLA | SANITIZE_NULL | SANITIZE_RETURN\n \t\t       | SANITIZE_SI_OVERFLOW | SANITIZE_BOOL | SANITIZE_ENUM"}, {"sha": "7bea6d79ac2753a30cb7ed53ca04de9c7d28a2f7", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=f8ed5150c3a1f821fb0cf266fc0fca76027fbef9", "patch": "@@ -8170,7 +8170,7 @@ sanitize_spec_function (int argc, const char **argv)\n   if (strcmp (argv[0], \"thread\") == 0)\n     return (flag_sanitize & SANITIZE_THREAD) ? \"\" : NULL;\n   if (strcmp (argv[0], \"undefined\") == 0)\n-    return ((flag_sanitize & SANITIZE_UNDEFINED)\n+    return ((flag_sanitize & (SANITIZE_UNDEFINED | SANITIZE_FLOAT_DIVIDE))\n \t    && !flag_sanitize_undefined_trap_on_error) ? \"\" : NULL;\n   if (strcmp (argv[0], \"leak\") == 0)\n     return ((flag_sanitize"}, {"sha": "3c214f09701f7f39d6cc96318d80a232809b6421", "filename": "gcc/opts.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=f8ed5150c3a1f821fb0cf266fc0fca76027fbef9", "patch": "@@ -1461,6 +1461,8 @@ common_handle_option (struct gcc_options *opts,\n \t\tsizeof \"signed-integer-overflow\" -1 },\n \t      { \"bool\", SANITIZE_BOOL, sizeof \"bool\" - 1 },\n \t      { \"enum\", SANITIZE_ENUM, sizeof \"enum\" - 1 },\n+\t      { \"float-divide-by-zero\", SANITIZE_FLOAT_DIVIDE,\n+\t\tsizeof \"float-divide-by-zero\" - 1 },\n \t      { NULL, 0, 0 }\n \t    };\n \t    const char *comma;"}, {"sha": "f07c90a754612647dfd2c9b9467a1d1385e9c759", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f8ed5150c3a1f821fb0cf266fc0fca76027fbef9", "patch": "@@ -1,3 +1,8 @@\n+2014-04-30  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-c++-common/ubsan/div-by-zero-5.c: Fix formatting.\n+\t* c-c++-common/ubsan/float-div-by-zero-1.c: New test.\n+\n 2014-04-30  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/60139"}, {"sha": "bb391c5b36df0f2bdc863ff149295e462ae633e9", "filename": "gcc/testsuite/c-c++-common/ubsan/div-by-zero-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fdiv-by-zero-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fdiv-by-zero-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fdiv-by-zero-5.c?ref=f8ed5150c3a1f821fb0cf266fc0fca76027fbef9", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile} */\n+/* { dg-do compile } */\n /* { dg-options \"-fsanitize=integer-divide-by-zero\" } */\n \n void"}, {"sha": "2271ea9b7761043b3252b022a3e43a1af0ac9ff4", "filename": "gcc/testsuite/c-c++-common/ubsan/float-div-by-zero-1.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-div-by-zero-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8ed5150c3a1f821fb0cf266fc0fca76027fbef9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-div-by-zero-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-div-by-zero-1.c?ref=f8ed5150c3a1f821fb0cf266fc0fca76027fbef9", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do run } */\n+/* { dg-options \"-fsanitize=float-divide-by-zero\" } */\n+\n+int\n+main (void)\n+{\n+  volatile float a = 1.3f;\n+  volatile double b = 0.0;\n+  volatile int c = 4;\n+  volatile float res;\n+\n+  res = a / b;\n+  res = a / 0.0;\n+  res = 2.7f / b;\n+  res = 3.6 / (b = 0.0, b);\n+  res = c / b;\n+  res = b / c;\n+\n+  return 0;\n+}\n+\n+/* { dg-output \"division by zero\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*division by zero\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*division by zero\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*division by zero\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*division by zero\\[^\\n\\r]*\" } */"}]}