{"sha": "d0b898529b9ac6e3c227567a197d12dcf71dc800", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBiODk4NTI5YjlhYzZlM2MyMjc1NjdhMTk3ZDEyZGNmNzFkYzgwMA==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-05-16T04:16:00Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-05-16T04:16:00Z"}, "message": "re PR target/26600 (internal compiler error: in push_reload, at reload.c:1303)\n\n\n\tPR target/26600\n\t* config/i386/i386.c (legitimate_constant_p) <CONST_DOUBLE>: TImode\n\tinteger constants other than zero are only legitimate on TARGET_64BIT.\n\t<CONST_VECTOR> Only zero vectors are legitimate.\n\t(ix86_cannot_force_const_mem): Integral and vector constants can\n\talways be put in the constant pool.\n\n\t* gcc.target/i386/pr26600.c: New test case.\n\nFrom-SVN: r113818", "tree": {"sha": "1c68ea8e0d38ca424a0acc2d3a6cf4b1a617a9cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c68ea8e0d38ca424a0acc2d3a6cf4b1a617a9cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0b898529b9ac6e3c227567a197d12dcf71dc800", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0b898529b9ac6e3c227567a197d12dcf71dc800", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0b898529b9ac6e3c227567a197d12dcf71dc800", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0b898529b9ac6e3c227567a197d12dcf71dc800/comments", "author": null, "committer": null, "parents": [{"sha": "a0cfeb0fcd3953ba10886a4a5d2b33b9d4bd1d7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0cfeb0fcd3953ba10886a4a5d2b33b9d4bd1d7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0cfeb0fcd3953ba10886a4a5d2b33b9d4bd1d7d"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "b4119862cd5e916a69ba4ca1bcdbdb9051a29453", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b898529b9ac6e3c227567a197d12dcf71dc800/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b898529b9ac6e3c227567a197d12dcf71dc800/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d0b898529b9ac6e3c227567a197d12dcf71dc800", "patch": "@@ -1,3 +1,12 @@\n+2006-05-15  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR target/26600\n+\t* config/i386/i386.c (legitimate_constant_p) <CONST_DOUBLE>: TImode\n+\tinteger constants other than zero are only legitimate on TARGET_64BIT.\n+\t<CONST_VECTOR> Only zero vectors are legitimate.\n+\t(ix86_cannot_force_const_mem): Integral and vector constants can\n+\talways be put in the constant pool.\n+\n 2006-05-16  DJ Delorie  <dj@redhat.com>\n \n \t* crtstuff.c (__dso_handle): Set section from"}, {"sha": "3ff5abbd66cfcd595c16a0ec1c3cb1b5e548fd3d", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b898529b9ac6e3c227567a197d12dcf71dc800/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b898529b9ac6e3c227567a197d12dcf71dc800/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=d0b898529b9ac6e3c227567a197d12dcf71dc800", "patch": "@@ -5934,6 +5934,18 @@ legitimate_constant_p (rtx x)\n \treturn false;\n       break;\n \n+    case CONST_DOUBLE:\n+      if (GET_MODE (x) == TImode\n+\t  && x != CONST0_RTX (TImode)\n+          && !TARGET_64BIT)\n+\treturn false;\n+      break;\n+\n+    case CONST_VECTOR:\n+      if (x == CONST0_RTX (GET_MODE (x)))\n+\treturn true;\n+      return false;\n+\n     default:\n       break;\n     }\n@@ -5949,6 +5961,17 @@ legitimate_constant_p (rtx x)\n static bool\n ix86_cannot_force_const_mem (rtx x)\n {\n+  /* We can always put integral constants and vectors in memory.  */\n+  switch (GET_CODE (x))\n+    {\n+    case CONST_INT:\n+    case CONST_DOUBLE:\n+    case CONST_VECTOR:\n+      return false;\n+\n+    default:\n+      break;\n+    }\n   return !legitimate_constant_p (x);\n }\n "}, {"sha": "9f65c93f1af487fbae259cd695c3aabe0dc93140", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b898529b9ac6e3c227567a197d12dcf71dc800/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b898529b9ac6e3c227567a197d12dcf71dc800/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d0b898529b9ac6e3c227567a197d12dcf71dc800", "patch": "@@ -1,3 +1,8 @@\n+2006-05-15  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR target/26600\n+\t* gcc.target/i386/pr26600.c: New test case.\n+\n 2006-05-15  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/27505"}, {"sha": "bbe0663da7e07bde0bc24fc88d1e5299849ea0ac", "filename": "gcc/testsuite/gcc.target/i386/pr26600.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b898529b9ac6e3c227567a197d12dcf71dc800/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr26600.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b898529b9ac6e3c227567a197d12dcf71dc800/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr26600.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr26600.c?ref=d0b898529b9ac6e3c227567a197d12dcf71dc800", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -ftree-vectorize -msse2\" } */\n+\n+void foo(int *p, int N)\n+{\n+    int i;\n+    for (i=0; i<8; ++i, ++p)\n+    {\n+        int j = N+2*(N+p[0]), k = 2*N+p[0];\n+        p[0] = j+N;\n+        p[5] = j+k;\n+    }\n+}\n+"}]}