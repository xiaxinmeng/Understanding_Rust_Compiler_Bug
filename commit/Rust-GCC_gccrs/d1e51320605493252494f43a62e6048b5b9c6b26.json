{"sha": "d1e51320605493252494f43a62e6048b5b9c6b26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFlNTEzMjA2MDU0OTMyNTI0OTRmNDNhNjJlNjA0OGI1YjljNmIyNg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-02-12T19:19:01Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-02-12T19:19:01Z"}, "message": "crtstuff.c (__do_global_ctors_aux, [...]): Add prototype argument.\n\n\t* crtstuff.c (__do_global_ctors_aux, __reg_frame_ctor,\n\t__dereg_frame_dtor): Add prototype argument.\n\n\t* gthr-dce.h (__gthread_active_p, __gthread_once): Likewise.\n\n\t* gthr-posix.h (__gthread_active_p, __gthread_once): Likewise.\n\n\t* gthr-solaris.h (__gthread_active_p, __gthread_once): Likewise.\n\n\t* gthr-vxworks.h (__gthread_once): Likewise.\n\n\t* gthr-win32.h (__gthread_active_p, __gthread_once): Likewise.\n\nFrom-SVN: r31945", "tree": {"sha": "bb69efaa2a8d376889e6ca501bfc5aafd4d9c33a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb69efaa2a8d376889e6ca501bfc5aafd4d9c33a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1e51320605493252494f43a62e6048b5b9c6b26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1e51320605493252494f43a62e6048b5b9c6b26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1e51320605493252494f43a62e6048b5b9c6b26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1e51320605493252494f43a62e6048b5b9c6b26/comments", "author": null, "committer": null, "parents": [{"sha": "e35b951f52fe3c43ac8bf209e9b0f0574f797c8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e35b951f52fe3c43ac8bf209e9b0f0574f797c8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e35b951f52fe3c43ac8bf209e9b0f0574f797c8d"}], "stats": {"total": 48, "additions": 31, "deletions": 17}, "files": [{"sha": "42df9cdc0dbfd583bdc009f018fc3235b20fe81f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e51320605493252494f43a62e6048b5b9c6b26/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e51320605493252494f43a62e6048b5b9c6b26/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d1e51320605493252494f43a62e6048b5b9c6b26", "patch": "@@ -1,3 +1,18 @@\n+2000-02-12  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* crtstuff.c (__do_global_ctors_aux, __reg_frame_ctor,\n+\t__dereg_frame_dtor): Add prototype argument.\n+\n+\t* gthr-dce.h (__gthread_active_p, __gthread_once): Likewise.\n+\n+\t* gthr-posix.h (__gthread_active_p, __gthread_once): Likewise.\n+\n+\t* gthr-solaris.h (__gthread_active_p, __gthread_once): Likewise.\n+\n+\t* gthr-vxworks.h (__gthread_once): Likewise.\n+\n+\t* gthr-win32.h (__gthread_active_p, __gthread_once): Likewise.\n+\n Sat Feb 12 01:44:26 MET 2000  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.c (ix86_emit_restore_regs_using_mov): Break out from ..."}, {"sha": "ebfb340f51bae2ca607329573b0e51cea1885519", "filename": "gcc/crtstuff.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e51320605493252494f43a62e6048b5b9c6b26/gcc%2Fcrtstuff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e51320605493252494f43a62e6048b5b9c6b26/gcc%2Fcrtstuff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcrtstuff.c?ref=d1e51320605493252494f43a62e6048b5b9c6b26", "patch": "@@ -239,7 +239,7 @@ init_dummy (void)\n    INVOKE__main is defined.  This has the additional effect of forcing cc1\n    to switch to the .text section.  */\n \n-static void __do_global_ctors_aux ();\n+static void __do_global_ctors_aux (void);\n void\n __do_global_ctors (void)\n {\n@@ -532,7 +532,7 @@ extern const struct section *\n \n #ifdef CRT_BEGIN\n \n-static void __reg_frame_ctor () __attribute__ ((constructor));\n+static void __reg_frame_ctor (void) __attribute__ ((constructor));\n \n static void\n __reg_frame_ctor (void)\n@@ -549,10 +549,9 @@ __reg_frame_ctor (void)\n \n #ifdef CRT_END\n \n-static void __dereg_frame_dtor () __attribute__ ((destructor));\n+static void __dereg_frame_dtor (void) __attribute__ ((destructor));\n \n-static\n-void\n+static void\n __dereg_frame_dtor (void)\n {\n   const struct section *eh_frame;"}, {"sha": "7c12b00b8b5f23507136e292ab0b269d4ec2c215", "filename": "gcc/gthr-dce.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e51320605493252494f43a62e6048b5b9c6b26/gcc%2Fgthr-dce.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e51320605493252494f43a62e6048b5b9c6b26/gcc%2Fgthr-dce.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-dce.h?ref=d1e51320605493252494f43a62e6048b5b9c6b26", "patch": "@@ -61,23 +61,23 @@ typedef pthread_mutex_t __gthread_mutex_t;\n static void *__gthread_active_ptr = &pthread_create;\n \n static inline int\n-__gthread_active_p ()\n+__gthread_active_p (void)\n {\n   return __gthread_active_ptr != 0;\n }\n \n #else /* not SUPPORTS_WEAK */\n \n static inline int\n-__gthread_active_p ()\n+__gthread_active_p (void)\n {\n   return 1;\n }\n \n #endif /* SUPPORTS_WEAK */\n \n static inline int\n-__gthread_once (__gthread_once_t *once, void (*func) ())\n+__gthread_once (__gthread_once_t *once, void (*func) (void))\n {\n   if (__gthread_active_p ())\n     return pthread_once (once, func);"}, {"sha": "f420e5f8be5b75090be0e173f2fc9b990ad0b731", "filename": "gcc/gthr-posix.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e51320605493252494f43a62e6048b5b9c6b26/gcc%2Fgthr-posix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e51320605493252494f43a62e6048b5b9c6b26/gcc%2Fgthr-posix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-posix.h?ref=d1e51320605493252494f43a62e6048b5b9c6b26", "patch": "@@ -59,23 +59,23 @@ typedef pthread_mutex_t __gthread_mutex_t;\n static void *__gthread_active_ptr = &pthread_create;\n \n static inline int\n-__gthread_active_p ()\n+__gthread_active_p (void)\n {\n   return __gthread_active_ptr != 0;\n }\n \n #else /* not SUPPORTS_WEAK */\n \n static inline int\n-__gthread_active_p ()\n+__gthread_active_p (void)\n {\n   return 1;\n }\n \n #endif /* SUPPORTS_WEAK */\n \n static inline int\n-__gthread_once (__gthread_once_t *once, void (*func) ())\n+__gthread_once (__gthread_once_t *once, void (*func) (void))\n {\n   if (__gthread_active_p ())\n     return pthread_once (once, func);"}, {"sha": "0c2406081354529a438c78b6d1ff2fc9bf4e0389", "filename": "gcc/gthr-solaris.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e51320605493252494f43a62e6048b5b9c6b26/gcc%2Fgthr-solaris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e51320605493252494f43a62e6048b5b9c6b26/gcc%2Fgthr-solaris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-solaris.h?ref=d1e51320605493252494f43a62e6048b5b9c6b26", "patch": "@@ -66,23 +66,23 @@ typedef mutex_t __gthread_mutex_t;\n static void *__gthread_active_ptr = &thr_create;\n \n static inline int\n-__gthread_active_p ()\n+__gthread_active_p (void)\n {\n   return __gthread_active_ptr != 0;\n }\n \n #else /* not SUPPORTS_WEAK */\n \n static inline int\n-__gthread_active_p ()\n+__gthread_active_p (void)\n {\n   return 1;\n }\n \n #endif /* SUPPORTS_WEAK */\n \n static inline int\n-__gthread_once (__gthread_once_t *once, void (*func) ())\n+__gthread_once (__gthread_once_t *once, void (*func) (void))\n {\n   if (! __gthread_active_p ())\n     return -1;"}, {"sha": "fc6c9dc932dc20c804895924b6c21f67cf1264f4", "filename": "gcc/gthr-vxworks.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e51320605493252494f43a62e6048b5b9c6b26/gcc%2Fgthr-vxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e51320605493252494f43a62e6048b5b9c6b26/gcc%2Fgthr-vxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-vxworks.h?ref=d1e51320605493252494f43a62e6048b5b9c6b26", "patch": "@@ -48,7 +48,7 @@ typedef SEM_ID __gthread_mutex_t;\n \n #ifndef REG_SAVED_REG\n static inline int\n-__gthread_once (__gthread_once_t *once, void (*func) ())\n+__gthread_once (__gthread_once_t *once, void (*func) (void))\n {\n   (*func)();\n   return 0;"}, {"sha": "9c82217959235e6cd1a1d9840bdad5e24360f987", "filename": "gcc/gthr-win32.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e51320605493252494f43a62e6048b5b9c6b26/gcc%2Fgthr-win32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e51320605493252494f43a62e6048b5b9c6b26/gcc%2Fgthr-win32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-win32.h?ref=d1e51320605493252494f43a62e6048b5b9c6b26", "patch": "@@ -93,7 +93,7 @@ extern int _CRT_MT;\n #endif\n \n static inline int\n-__gthread_active_p ()\n+__gthread_active_p (void)\n {\n #ifdef MINGW32_SUPPORTS_MT_EH\n   return _CRT_MT;\n@@ -103,7 +103,7 @@ __gthread_active_p ()\n }\n \n static inline int\n-__gthread_once (__gthread_once_t *once, void (*func) ())\n+__gthread_once (__gthread_once_t *once, void (*func) (void))\n {\n   if (! __gthread_active_p ())\n     return -1;"}]}