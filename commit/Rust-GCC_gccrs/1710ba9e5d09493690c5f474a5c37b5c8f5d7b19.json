{"sha": "1710ba9e5d09493690c5f474a5c37b5c8f5d7b19", "node_id": "C_kwDOANBUbNoAKDE3MTBiYTllNWQwOTQ5MzY5MGM1ZjQ3NGE1YzM3YjVjOGY1ZDdiMTk", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-06-03T13:18:24Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-07-12T12:24:11Z"}, "message": "[Ada] Warn about unreachable code after calls with No_Return\n\nGNAT was already warning about unreachable code after raise/goto/exit\nstatements, but not after calls to procedures with No_Return. Now this\nwarning is extended.\n\nAlso, previously the warning was suppressed for unreachable RETURN after\nRAISE statements. Now this suppression is narrowed to functions, because\nonly in function such a RETURN statement might be indeed needed (where\nit is the only RETURN statement of a function).\n\ngcc/ada/\n\n\t* sem_ch5.adb (Check_Unreachable_Code): Extend suppression to\n\tcalls with No_Return aspect, but narrow it to functions.\n\t* sem_res.adb (Resolve_Call): Warn about unreachable code after\n\tcalls with No_Return.", "tree": {"sha": "8e0d8ef1e695dcbd46c435df9b6c1dee75a90edd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e0d8ef1e695dcbd46c435df9b6c1dee75a90edd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1710ba9e5d09493690c5f474a5c37b5c8f5d7b19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1710ba9e5d09493690c5f474a5c37b5c8f5d7b19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1710ba9e5d09493690c5f474a5c37b5c8f5d7b19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1710ba9e5d09493690c5f474a5c37b5c8f5d7b19/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2148f2996ae76a7773eb7d8e30c02bd036ec7b3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2148f2996ae76a7773eb7d8e30c02bd036ec7b3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2148f2996ae76a7773eb7d8e30c02bd036ec7b3c"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "f38c213a42a35d7a33ce4dc87757724d94ba9f2d", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1710ba9e5d09493690c5f474a5c37b5c8f5d7b19/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1710ba9e5d09493690c5f474a5c37b5c8f5d7b19/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=1710ba9e5d09493690c5f474a5c37b5c8f5d7b19", "patch": "@@ -4418,12 +4418,20 @@ package body Sem_Ch5 is\n          elsif Comes_From_Source (Nxt)\n            and then Is_Statement (Nxt)\n          then\n-            --  Special very annoying exception. If we have a return that\n-            --  follows a raise, then we allow it without a warning, since\n-            --  the Ada RM annoyingly requires a useless return here.\n-\n-            if Nkind (Original_Node (N)) /= N_Raise_Statement\n-              or else Nkind (Nxt) /= N_Simple_Return_Statement\n+            --  Special very annoying exception. Ada RM 6.5(5) annoyingly\n+            --  requires functions to have at least one return statement, so\n+            --  don't complain about a simple return that follows a raise or a\n+            --  call to procedure with No_Return.\n+\n+            if not (Present (Current_Subprogram)\n+                    and then Ekind (Current_Subprogram) = E_Function\n+                    and then (Nkind (Original_Node (N)) = N_Raise_Statement\n+                                or else\n+                              (Nkind (N) = N_Procedure_Call_Statement\n+                               and then Is_Entity_Name (Name (N))\n+                               and then Present (Entity (Name (N)))\n+                               and then No_Return (Entity (Name (N)))))\n+                    and then Nkind (Nxt) = N_Simple_Return_Statement)\n             then\n                --  The rather strange shenanigans with the warning message\n                --  here reflects the fact that Kill_Dead_Code is very good at"}, {"sha": "4335940cab575865c472a7fdc62909cbc867c82f", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1710ba9e5d09493690c5f474a5c37b5c8f5d7b19/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1710ba9e5d09493690c5f474a5c37b5c8f5d7b19/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=1710ba9e5d09493690c5f474a5c37b5c8f5d7b19", "patch": "@@ -62,6 +62,7 @@ with Sem_Case;       use Sem_Case;\n with Sem_Cat;        use Sem_Cat;\n with Sem_Ch3;        use Sem_Ch3;\n with Sem_Ch4;        use Sem_Ch4;\n+with Sem_Ch5;        use Sem_Ch5;\n with Sem_Ch6;        use Sem_Ch6;\n with Sem_Ch8;        use Sem_Ch8;\n with Sem_Ch13;       use Sem_Ch13;\n@@ -7193,6 +7194,14 @@ package body Sem_Res is\n \n       Analyze_Dimension_Call (N, Nam);\n \n+      --  Check unreachable code after calls to procedures with No_Return\n+\n+      if Ekind (Nam) = E_Procedure\n+        and then No_Return (Nam)\n+      then\n+         Check_Unreachable_Code (N);\n+      end if;\n+\n       --  All done, evaluate call and deal with elaboration issues\n \n       Eval_Call (N);"}]}