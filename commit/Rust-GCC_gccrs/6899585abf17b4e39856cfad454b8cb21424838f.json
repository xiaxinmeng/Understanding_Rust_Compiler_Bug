{"sha": "6899585abf17b4e39856cfad454b8cb21424838f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg5OTU4NWFiZjE3YjRlMzk4NTZjZmFkNDU0YjhjYjIxNDI0ODM4Zg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-03-12T13:02:42Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-03-12T13:02:42Z"}, "message": "re PR ipa/65270 (issues with merging memory accesses from different code paths)\n\n2015-03-12  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/65270\n\t* fold-const.c (operand_equal_p): Fix ordering of resetting\n\tOEP_ADDRESS_OF and checking for it in the [TARGET_]MEM_REF case.\n\nFrom-SVN: r221386", "tree": {"sha": "9ceb774564833f61a19b23ec390e9101e1131c61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ceb774564833f61a19b23ec390e9101e1131c61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6899585abf17b4e39856cfad454b8cb21424838f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6899585abf17b4e39856cfad454b8cb21424838f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6899585abf17b4e39856cfad454b8cb21424838f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6899585abf17b4e39856cfad454b8cb21424838f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f8af0e30507397f8ad7895d788b432b6695a4a66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8af0e30507397f8ad7895d788b432b6695a4a66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8af0e30507397f8ad7895d788b432b6695a4a66"}], "stats": {"total": 28, "additions": 16, "deletions": 12}, "files": [{"sha": "35c6a95c51cb1e0feb189b8ecd399b8bba2afdb9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6899585abf17b4e39856cfad454b8cb21424838f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6899585abf17b4e39856cfad454b8cb21424838f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6899585abf17b4e39856cfad454b8cb21424838f", "patch": "@@ -1,3 +1,9 @@\n+2015-03-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/65270\n+\t* fold-const.c (operand_equal_p): Fix ordering of resetting\n+\tOEP_ADDRESS_OF and checking for it in the [TARGET_]MEM_REF case.\n+\n 2015-03-12  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n \t* config/s390/s390.c (s390_reorg): Move code to output nops after label"}, {"sha": "6d085b185895f715d99a53a9e706295aa983d52a", "filename": "gcc/fold-const.c", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6899585abf17b4e39856cfad454b8cb21424838f/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6899585abf17b4e39856cfad454b8cb21424838f/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=6899585abf17b4e39856cfad454b8cb21424838f", "patch": "@@ -2934,21 +2934,12 @@ operand_equal_p (const_tree arg0, const_tree arg1, unsigned int flags)\n \t  return OP_SAME (0);\n \n \tcase TARGET_MEM_REF:\n-\t  flags &= ~(OEP_CONSTANT_ADDRESS_OF|OEP_ADDRESS_OF);\n-\t  /* Require equal extra operands and then fall through to MEM_REF\n-\t     handling of the two common operands.  */\n-\t  if (!OP_SAME_WITH_NULL (2)\n-\t      || !OP_SAME_WITH_NULL (3)\n-\t      || !OP_SAME_WITH_NULL (4))\n-\t    return 0;\n-\t  /* Fallthru.  */\n \tcase MEM_REF:\n-\t  flags &= ~(OEP_CONSTANT_ADDRESS_OF|OEP_ADDRESS_OF);\n \t  /* Require equal access sizes, and similar pointer types.\n \t     We can have incomplete types for array references of\n \t     variable-sized arrays from the Fortran frontend\n \t     though.  Also verify the types are compatible.  */\n-\t  return ((TYPE_SIZE (TREE_TYPE (arg0)) == TYPE_SIZE (TREE_TYPE (arg1))\n+\t  if (!((TYPE_SIZE (TREE_TYPE (arg0)) == TYPE_SIZE (TREE_TYPE (arg1))\n \t\t   || (TYPE_SIZE (TREE_TYPE (arg0))\n \t\t       && TYPE_SIZE (TREE_TYPE (arg1))\n \t\t       && operand_equal_p (TYPE_SIZE (TREE_TYPE (arg0)),\n@@ -2963,8 +2954,15 @@ operand_equal_p (const_tree arg0, const_tree arg1, unsigned int flags)\n \t\t\t  && (MR_DEPENDENCE_BASE (arg0)\n \t\t\t      == MR_DEPENDENCE_BASE (arg1))\n \t\t\t  && (TYPE_ALIGN (TREE_TYPE (arg0))\n-\t\t\t      == TYPE_ALIGN (TREE_TYPE (arg1)))))\n-\t\t  && OP_SAME (0) && OP_SAME (1));\n+\t\t\t    == TYPE_ALIGN (TREE_TYPE (arg1)))))))\n+\t    return 0;\n+\t  flags &= ~(OEP_CONSTANT_ADDRESS_OF|OEP_ADDRESS_OF);\n+\t  return (OP_SAME (0) && OP_SAME (1)\n+\t\t  /* TARGET_MEM_REF require equal extra operands.  */\n+\t\t  && (TREE_CODE (arg0) != TARGET_MEM_REF\n+\t\t      || (OP_SAME_WITH_NULL (2)\n+\t\t\t  && OP_SAME_WITH_NULL (3)\n+\t\t\t  && OP_SAME_WITH_NULL (4))));\n \n \tcase ARRAY_REF:\n \tcase ARRAY_RANGE_REF:"}]}