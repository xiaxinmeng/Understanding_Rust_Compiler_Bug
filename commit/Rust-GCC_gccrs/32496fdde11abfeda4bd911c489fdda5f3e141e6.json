{"sha": "32496fdde11abfeda4bd911c489fdda5f3e141e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI0OTZmZGRlMTFhYmZlZGE0YmQ5MTFjNDg5ZmRkYTVmM2UxNDFlNg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-04-30T04:43:32Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-04-30T04:43:32Z"}, "message": "ipa-devirt.c (odr_subtypes_equivalent_p): Compare TYPE_NAME only for aggregate types.\n\n\n\t* ipa-devirt.c (odr_subtypes_equivalent_p): Compare TYPE_NAME only\n\tfor aggregate types.\n\t(register_odr_type): Be ready for MAIN_VARIANT of ODR type\n\ttype to be non_ODR.\n\t* tree.c (need_assembler_name_p): Compute mangled name for\n\tnon-fundamental types and integer types.\n\nFrom-SVN: r222609", "tree": {"sha": "b983c60b589ae306425cb0067163d88f62953c25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b983c60b589ae306425cb0067163d88f62953c25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32496fdde11abfeda4bd911c489fdda5f3e141e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32496fdde11abfeda4bd911c489fdda5f3e141e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32496fdde11abfeda4bd911c489fdda5f3e141e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32496fdde11abfeda4bd911c489fdda5f3e141e6/comments", "author": null, "committer": null, "parents": [{"sha": "00c1cf38e148cdbd57d350e240684181dac01091", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00c1cf38e148cdbd57d350e240684181dac01091", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00c1cf38e148cdbd57d350e240684181dac01091"}], "stats": {"total": 34, "additions": 29, "deletions": 5}, "files": [{"sha": "071c12db71ad02031bdb4a01a24b87fbf349d0f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32496fdde11abfeda4bd911c489fdda5f3e141e6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32496fdde11abfeda4bd911c489fdda5f3e141e6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=32496fdde11abfeda4bd911c489fdda5f3e141e6", "patch": "@@ -1,3 +1,12 @@\n+2015-04-29  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-devirt.c (odr_subtypes_equivalent_p): Compare TYPE_NAME only\n+\tfor aggregate types.\n+\t(register_odr_type): Be ready for MAIN_VARIANT of ODR type\n+\ttype to be non_ODR.\n+\t* tree.c (need_assembler_name_p): Compute mangled name for\n+\tnon-fundamental types and integer types.\n+\n 2015-04-29  Mikhail Maltsev  <maltsevm@gmail.com>\n \n \t* dojump.c (do_compare_rtx_and_jump): Use std::swap instead of"}, {"sha": "aacc59cf7a1257b76d3e04d5df5e78e4add8c998", "filename": "gcc/ipa-devirt.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32496fdde11abfeda4bd911c489fdda5f3e141e6/gcc%2Fipa-devirt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32496fdde11abfeda4bd911c489fdda5f3e141e6/gcc%2Fipa-devirt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.c?ref=32496fdde11abfeda4bd911c489fdda5f3e141e6", "patch": "@@ -675,7 +675,8 @@ odr_subtypes_equivalent_p (tree t1, tree t2,\n      have to be compared structurally.  */\n   if (TREE_CODE (t1) != TREE_CODE (t2))\n     return false;\n-  if ((TYPE_NAME (t1) == NULL_TREE) != (TYPE_NAME (t2) == NULL_TREE))\n+  if (AGGREGATE_TYPE_P (t1)\n+      && (TYPE_NAME (t1) == NULL_TREE) != (TYPE_NAME (t2) == NULL_TREE))\n     return false;\n \n   type_pair pair={t1,t2};\n@@ -2029,10 +2030,14 @@ register_odr_type (tree type)\n       if (in_lto_p)\n         odr_vtable_hash = new odr_vtable_hash_type (23);\n     }\n-  /* Arrange things to be nicer and insert main variants first.  */\n-  if (odr_type_p (TYPE_MAIN_VARIANT (type)))\n+  /* Arrange things to be nicer and insert main variants first.\n+     ??? fundamental prerecorded types do not have mangled names; this\n+     makes it possible that non-ODR type is main_odr_variant of ODR type.\n+     Things may get smoother if LTO FE set mangled name of those types same\n+     way as C++ FE does.  */\n+  if (odr_type_p (main_odr_variant (TYPE_MAIN_VARIANT (type))))\n     get_odr_type (TYPE_MAIN_VARIANT (type), true);\n-  if (TYPE_MAIN_VARIANT (type) != type)\n+  if (TYPE_MAIN_VARIANT (type) != type && odr_type_p (main_odr_variant (type)))\n     get_odr_type (type, true);\n }\n "}, {"sha": "15d94a3f3f47a88da94a4560489f90abb254b612", "filename": "gcc/tree.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32496fdde11abfeda4bd911c489fdda5f3e141e6/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32496fdde11abfeda4bd911c489fdda5f3e141e6/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=32496fdde11abfeda4bd911c489fdda5f3e141e6", "patch": "@@ -5145,7 +5145,17 @@ need_assembler_name_p (tree decl)\n       && DECL_NAME (decl)\n       && decl == TYPE_NAME (TREE_TYPE (decl))\n       && !is_lang_specific (TREE_TYPE (decl))\n-      && AGGREGATE_TYPE_P (TREE_TYPE (decl))\n+      /* Save some work. Names of builtin types are always derived from\n+\t properties of its main variant.  A special case are integer types\n+\t where mangling do make differences between char/signed char/unsigned\n+\t char etc.  Storing name for these makes e.g.\n+\t -fno-signed-char/-fsigned-char mismatches to be handled well.\n+\n+\t See cp/mangle.c:write_builtin_type for details.  */\n+      && (TREE_CODE (TREE_TYPE (decl)) != VOID_TYPE\n+\t  && TREE_CODE (TREE_TYPE (decl)) != BOOLEAN_TYPE\n+\t  && TREE_CODE (TREE_TYPE (decl)) != REAL_TYPE\n+\t  && TREE_CODE (TREE_TYPE (decl)) != FIXED_POINT_TYPE)\n       && !TYPE_ARTIFICIAL (TREE_TYPE (decl))\n       && !variably_modified_type_p (TREE_TYPE (decl), NULL_TREE)\n       && !type_in_anonymous_namespace_p (TREE_TYPE (decl)))"}]}