{"sha": "031d3f095520f0e1ee03e29b7ad5067c2a3f96e0", "node_id": "C_kwDOANBUbNoAKDAzMWQzZjA5NTUyMGYwZTFlZTAzZTI5YjdhZDUwNjdjMmEzZjk2ZTA", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2022-11-11T23:54:47Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2022-11-30T14:36:14Z"}, "message": "d: Fix ICE on named continue label in an unrolled loop [PR107592]\n\nContinue labels in an unrolled loop require a unique label per\niteration.  Previously this used the Statement body node for each\nunrolled iteration to generate a new entry in the label hash table.\nThis does not work when the continue label has an identifier, as said\nnamed label is pointing to the outer UnrolledLoopStatement node.\n\nWhat would happen is that during the lowering of `continue label', an\nautomatic label associated with the unrolled loop would be generated,\nand a jump to that label inserted, but because it was never pushed by\nthe visitor for the loop itself, it subsequently never gets emitted.\n\nTo fix, correctly use the UnrolledLoopStatement as the key to look up\nand store the break/continue label pair, but remove the continue label\nfrom the value entry after every loop to force a new label to be\ngenerated by the next call to `push_continue_label'\n\n\tPR d/107592\n\ngcc/d/ChangeLog:\n\n\t* toir.cc (IRVisitor::push_unrolled_continue_label): New method.\n\t(IRVisitor::pop_unrolled_continue_label): New method.\n\t(IRVisitor::visit (UnrolledLoopStatement *)): Use them instead of\n\tpush_continue_label and pop_continue_label.\n\ngcc/testsuite/ChangeLog:\n\n\t* gdc.dg/pr107592.d: New test.", "tree": {"sha": "2e258bdfb175613a8573c7b703ce8afcf72a4feb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e258bdfb175613a8573c7b703ce8afcf72a4feb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/031d3f095520f0e1ee03e29b7ad5067c2a3f96e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/031d3f095520f0e1ee03e29b7ad5067c2a3f96e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/031d3f095520f0e1ee03e29b7ad5067c2a3f96e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/031d3f095520f0e1ee03e29b7ad5067c2a3f96e0/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0a3d55ae4a2656f7c306c9345ba14853b4075d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0a3d55ae4a2656f7c306c9345ba14853b4075d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0a3d55ae4a2656f7c306c9345ba14853b4075d5"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "e387f27760d9cb3b0ea2929572b295d7a4f77a28", "filename": "gcc/d/toir.cc", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/031d3f095520f0e1ee03e29b7ad5067c2a3f96e0/gcc%2Fd%2Ftoir.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/031d3f095520f0e1ee03e29b7ad5067c2a3f96e0/gcc%2Fd%2Ftoir.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Ftoir.cc?ref=031d3f095520f0e1ee03e29b7ad5067c2a3f96e0", "patch": "@@ -529,6 +529,28 @@ class IRVisitor : public Visitor\n     this->do_label (label);\n   }\n \n+  /* Generate and set a new continue label for the current unrolled loop.  */\n+\n+  void push_unrolled_continue_label (UnrolledLoopStatement *s)\n+  {\n+    this->push_continue_label (s);\n+  }\n+\n+  /* Finish with the continue label for the unrolled loop.  */\n+\n+  void pop_unrolled_continue_label (UnrolledLoopStatement *s)\n+  {\n+    Statement *stmt = s->getRelatedLabeled ();\n+    d_label_entry *ent = d_function_chain->labels->get (stmt);\n+    gcc_assert (ent != NULL && ent->bc_label == true);\n+\n+    this->pop_continue_label (TREE_VEC_ELT (ent->label, bc_continue));\n+\n+    /* Remove the continue label from the label htab, as a new one must be\n+       inserted at the end of every unrolled loop.  */\n+    ent->label = TREE_VEC_ELT (ent->label, bc_break);\n+  }\n+\n   /* Visitor interfaces.  */\n \n \n@@ -1089,9 +1111,9 @@ class IRVisitor : public Visitor\n \n \tif (statement != NULL)\n \t  {\n-\t    tree lcontinue = this->push_continue_label (statement);\n+\t    this->push_unrolled_continue_label (s);\n \t    this->build_stmt (statement);\n-\t    this->pop_continue_label (lcontinue);\n+\t    this->pop_unrolled_continue_label (s);\n \t  }\n       }\n "}, {"sha": "59f34477356249d51abf772f5193b2295cc68add", "filename": "gcc/testsuite/gdc.dg/pr107592.d", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/031d3f095520f0e1ee03e29b7ad5067c2a3f96e0/gcc%2Ftestsuite%2Fgdc.dg%2Fpr107592.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/031d3f095520f0e1ee03e29b7ad5067c2a3f96e0/gcc%2Ftestsuite%2Fgdc.dg%2Fpr107592.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fpr107592.d?ref=031d3f095520f0e1ee03e29b7ad5067c2a3f96e0", "patch": "@@ -0,0 +1,13 @@\n+// https://gcc.gnu.org/bugzilla/show_bug.cgi?id=107592\n+// { dg-do compile }\n+\n+void test107592(Things...)(Things things)\n+{\n+    label:\n+    foreach (thing; things)\n+    {\n+        continue label;\n+    }\n+}\n+\n+alias a107592 = test107592!(string);"}]}