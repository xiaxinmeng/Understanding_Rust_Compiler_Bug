{"sha": "efaffc6997f33f663f887f63c72e589d4318f902", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZhZmZjNjk5N2YzM2Y2NjNmODg3ZjYzYzcyZTU4OWQ0MzE4ZjkwMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-05-04T07:31:27Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-05-04T07:31:27Z"}, "message": "diagnostics: get_option_html_page fixes\n\nWhile testing the --with-documentation-root-url= changes, I run into\n[Wreturn-type] URL pointing to gfortran documentation where it obviously\nisn't documented.  The following patch updates the list of options to match\nreality (on the other side -Wconversion-extra is gfortran only option\ndocumented in gfortran.texi).\n\nOr, perhaps better use the attached patch instead, which doesn't have a\nhardcoded list and instead uses the flags?  I went through options.c\nand the updated list of options matches exactly the cases where CL_Fortran\nis set for \"-W*\" options together with CL_C and/or CL_CXX (ok, there is also\n-Wall and -Wextra, but hopefully we don't emit [Wall] or [Wextra] for\nanything).\n\n2020-05-04  Jakub Jelinek  <jakub@redhat.com>\n\n\t* opts.c (get_option_html_page): Instead of hardcoding a list of\n\toptions common between C/C++ and Fortran only use gfortran/\n\tdocumentation for warnings that have CL_Fortran set but not\n\tCL_C or CL_CXX.", "tree": {"sha": "e177e8c94490dd6f7cf2759f7a65d36118830915", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e177e8c94490dd6f7cf2759f7a65d36118830915"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efaffc6997f33f663f887f63c72e589d4318f902", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efaffc6997f33f663f887f63c72e589d4318f902", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efaffc6997f33f663f887f63c72e589d4318f902", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efaffc6997f33f663f887f63c72e589d4318f902/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb8274155a31f2bb134edb91b5dcf8f1ad4f98d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb8274155a31f2bb134edb91b5dcf8f1ad4f98d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb8274155a31f2bb134edb91b5dcf8f1ad4f98d1"}], "stats": {"total": 35, "additions": 16, "deletions": 19}, "files": [{"sha": "026ee8b185a8fdb946bcfb2e744faadc3e6d2d01", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efaffc6997f33f663f887f63c72e589d4318f902/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efaffc6997f33f663f887f63c72e589d4318f902/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=efaffc6997f33f663f887f63c72e589d4318f902", "patch": "@@ -1,3 +1,10 @@\n+2020-05-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* opts.c (get_option_html_page): Instead of hardcoding a list of\n+\toptions common between C/C++ and Fortran only use gfortran/\n+\tdocumentation for warnings that have CL_Fortran set but not\n+\tCL_C or CL_CXX.\n+\n 2020-05-03  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n         * config/i386/i386-expand.c (ix86_expand_int_movcc):"}, {"sha": "ec3ca0720f906d62fb4d9604fef7d3658f8dc740", "filename": "gcc/opts.c", "status": "modified", "additions": 9, "deletions": 19, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efaffc6997f33f663f887f63c72e589d4318f902/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efaffc6997f33f663f887f63c72e589d4318f902/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=efaffc6997f33f663f887f63c72e589d4318f902", "patch": "@@ -3143,25 +3143,15 @@ get_option_html_page (int option_index)\n     return \"gcc/Static-Analyzer-Options.html\";\n \n #ifdef CL_Fortran\n-  if (cl_opt->flags & CL_Fortran)\n-    {\n-      switch (option_index)\n-\t{\n-\tdefault:\n-\t  /* Most Fortran warnings are documented on this page.  */\n-\t  return \"gfortran/Error-and-Warning-Options.html\";\n-\n-\tcase OPT_Wdate_time:\n-\tcase OPT_Wconversion:\n-\tcase OPT_Wconversion_extra:\n-\tcase OPT_Wmissing_include_dirs:\n-\tcase OPT_Wopenmp_simd:\n-\t  /* These warnings are marked in fortran/lang.opt as\n-\t     \"Documented in C\" and thus use the common\n-\t     Warning-Options page below.  */\n-\t  break;\n-\t}\n-    }\n+  if ((cl_opt->flags & CL_Fortran) != 0\n+      /* If it is option common to both C/C++ and Fortran, it is documented\n+\t in gcc/ rather than gfortran/ docs.  */\n+      && (cl_opt->flags & CL_C) == 0\n+#ifdef CL_CXX\n+      && (cl_opt->flags & CL_CXX) == 0\n+#endif\n+     )\n+    return \"gfortran/Error-and-Warning-Options.html\";\n #endif\n \n   return \"gcc/Warning-Options.html\";"}]}