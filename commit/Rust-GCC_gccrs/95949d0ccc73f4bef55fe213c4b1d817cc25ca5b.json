{"sha": "95949d0ccc73f4bef55fe213c4b1d817cc25ca5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU5NDlkMGNjYzczZjRiZWY1NWZlMjEzYzRiMWQ4MTdjYzI1Y2E1Yg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-06T22:04:35Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-06T22:04:35Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r923", "tree": {"sha": "65fa99d36afde0ec049e206232e201bdaf183e15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65fa99d36afde0ec049e206232e201bdaf183e15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95949d0ccc73f4bef55fe213c4b1d817cc25ca5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95949d0ccc73f4bef55fe213c4b1d817cc25ca5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95949d0ccc73f4bef55fe213c4b1d817cc25ca5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95949d0ccc73f4bef55fe213c4b1d817cc25ca5b/comments", "author": null, "committer": null, "parents": [{"sha": "ddd8ab482ee9325b3f0cbd62f1b0840e1edac9ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd8ab482ee9325b3f0cbd62f1b0840e1edac9ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddd8ab482ee9325b3f0cbd62f1b0840e1edac9ad"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "971a60a6ddc3efed06cbd1ef5b0090b8e7f5face", "filename": "gcc/calls.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95949d0ccc73f4bef55fe213c4b1d817cc25ca5b/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95949d0ccc73f4bef55fe213c4b1d817cc25ca5b/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=95949d0ccc73f4bef55fe213c4b1d817cc25ca5b", "patch": "@@ -1008,7 +1008,7 @@ expand_call (exp, target, ignore)\n \t      += int_size_in_bytes (TREE_TYPE (args[i].tree_value));\n \t}\n \n-      if (copy_to_evaluate_size >= args_size.constant / 2)\n+      if (copy_to_evaluate_size * 2 >= args_size.constant)\n \tmust_preallocate = 1;\n     }\n "}]}