{"sha": "6bc3403cba35affa0b7b484a6bacedc801b5638f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJjMzQwM2NiYTM1YWZmYTBiN2I0ODRhNmJhY2VkYzgwMWI1NjM4Zg==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "1996-04-22T15:52:29Z"}, "committer": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "1996-04-22T15:52:29Z"}, "message": "fix AIX struct/union/field alignment\n\nFrom-SVN: r11866", "tree": {"sha": "fd837128ed043ab1359dd0139f4a79e984507562", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd837128ed043ab1359dd0139f4a79e984507562"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bc3403cba35affa0b7b484a6bacedc801b5638f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bc3403cba35affa0b7b484a6bacedc801b5638f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bc3403cba35affa0b7b484a6bacedc801b5638f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bc3403cba35affa0b7b484a6bacedc801b5638f/comments", "author": null, "committer": null, "parents": [{"sha": "75c91bcd752ca5f5be4859f91c90e53d8c1a1c72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75c91bcd752ca5f5be4859f91c90e53d8c1a1c72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75c91bcd752ca5f5be4859f91c90e53d8c1a1c72"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "5582f412e17646fedf0dc7b429e55f4fbbe49edc", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bc3403cba35affa0b7b484a6bacedc801b5638f/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bc3403cba35affa0b7b484a6bacedc801b5638f/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=6bc3403cba35affa0b7b484a6bacedc801b5638f", "patch": "@@ -572,8 +572,9 @@ extern struct rs6000_cpu_select rs6000_select[];\n /* No data type wants to be aligned rounder than this.  */\n #define BIGGEST_ALIGNMENT 64\n \n-/* AIX aligns internal doubles in structures on word boundaries.  */\n-#define BIGGEST_FIELD_ALIGNMENT 32\n+/* AIX word-aligns FP doubles but doubleword-aligns 64-bit ints.  */\n+#define ADJUST_FIELD_ALIGN(FIELD, COMPUTED) \\\n+  (DECL_MODE (FIELD) != DFmode ? (COMPUTED) : MIN ((COMPUTED), 32))\n \n /* Alignment of field after `int : 0' in a structure.  */\n #define EMPTY_FIELD_BOUNDARY 32\n@@ -584,6 +585,16 @@ extern struct rs6000_cpu_select rs6000_select[];\n /* A bitfield declared as `int' forces `int' alignment for the struct.  */\n #define PCC_BITFIELD_TYPE_MATTERS 1\n \n+/* AIX increases natural record alignment to doubleword if the first\n+   field is an FP double while the FP fields remain word aligned.  */\n+#define ROUND_TYPE_ALIGN(STRUCT, COMPUTED, SPECIFIED)\t\\\n+  ((TREE_CODE (STRUCT) == RECORD_TYPE\t\t\t\\\n+    || TREE_CODE (STRUCT) == UNION_TYPE\t\t\t\\\n+    || TREE_CODE (STRUCT) == QUAL_UNION_TYPE)\t\t\\\n+   && DECL_MODE (TYPE_FIELDS (STRUCT)) == DFmode\t\\\n+   ? MAX (MAX ((COMPUTED), (SPECIFIED)), BIGGEST_ALIGNMENT) \\\n+   : MAX ((COMPUTED), (SPECIFIED)))\n+\n /* Make strings word-aligned so strcpy from constants will be faster.  */\n #define CONSTANT_ALIGNMENT(EXP, ALIGN)  \\\n   (TREE_CODE (EXP) == STRING_CST\t\\"}]}