{"sha": "ffa8a92137cd41829d477be4ef1c1c28849ffee1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZhOGE5MjEzN2NkNDE4MjlkNDc3YmU0ZWYxYzFjMjg4NDlmZmVlMQ==", "commit": {"author": {"name": "Sudakshina Das", "email": "sudi.das@arm.com", "date": "2017-06-02T15:32:41Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2017-06-02T15:32:41Z"}, "message": "[PATCH][AArch64] Allow CMP+SHIFT when comparing with zero\n\ngcc/\n\n\t* config/aarch64/aarch64.c (aarch64_select_cc_mode): Return CC_SWP for\n\tcomparision with zero.\n\ngcc/testsuite/\n\n\t* gcc.target/aarch64/cmp_shifted_reg_1.c: New.\n\nFrom-SVN: r248836", "tree": {"sha": "87ea0cd2ba57089fdd06b051c2c1ca7ba7142895", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87ea0cd2ba57089fdd06b051c2c1ca7ba7142895"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffa8a92137cd41829d477be4ef1c1c28849ffee1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffa8a92137cd41829d477be4ef1c1c28849ffee1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffa8a92137cd41829d477be4ef1c1c28849ffee1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffa8a92137cd41829d477be4ef1c1c28849ffee1/comments", "author": {"login": "sudakshina-das-arm", "id": 28538945, "node_id": "MDQ6VXNlcjI4NTM4OTQ1", "avatar_url": "https://avatars.githubusercontent.com/u/28538945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sudakshina-das-arm", "html_url": "https://github.com/sudakshina-das-arm", "followers_url": "https://api.github.com/users/sudakshina-das-arm/followers", "following_url": "https://api.github.com/users/sudakshina-das-arm/following{/other_user}", "gists_url": "https://api.github.com/users/sudakshina-das-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/sudakshina-das-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sudakshina-das-arm/subscriptions", "organizations_url": "https://api.github.com/users/sudakshina-das-arm/orgs", "repos_url": "https://api.github.com/users/sudakshina-das-arm/repos", "events_url": "https://api.github.com/users/sudakshina-das-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/sudakshina-das-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b160939bf3cd072e1c7a05bbbe221040f7670df2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b160939bf3cd072e1c7a05bbbe221040f7670df2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b160939bf3cd072e1c7a05bbbe221040f7670df2"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "070bb8f6db5e60c094cb257067547988184b4d10", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa8a92137cd41829d477be4ef1c1c28849ffee1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa8a92137cd41829d477be4ef1c1c28849ffee1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ffa8a92137cd41829d477be4ef1c1c28849ffee1", "patch": "@@ -1,3 +1,8 @@\n+2017-06-02  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_select_cc_mode): Return CC_SWP for\n+\tcomparision with zero.\n+\n 2017-06-02  Will Schmidt  <will_schmidt@vnet.ibm.com>\n \t* config/rs6000/rs6000.c (rs6000_gimple_fold_builtin): Add handling\n \tfor early expansion of vec_min and vec_max builtins."}, {"sha": "5707e5317e2a11f3ed7b9620f96e4acf92b0557c", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa8a92137cd41829d477be4ef1c1c28849ffee1/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa8a92137cd41829d477be4ef1c1c28849ffee1/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=ffa8a92137cd41829d477be4ef1c1c28849ffee1", "patch": "@@ -4767,7 +4767,7 @@ aarch64_select_cc_mode (RTX_CODE code, rtx x, rtx y)\n      the comparison will have to be swapped when we emit the assembly\n      code.  */\n   if ((GET_MODE (x) == SImode || GET_MODE (x) == DImode)\n-      && (REG_P (y) || GET_CODE (y) == SUBREG)\n+      && (REG_P (y) || GET_CODE (y) == SUBREG || y == const0_rtx)\n       && (GET_CODE (x) == ASHIFT || GET_CODE (x) == ASHIFTRT\n \t  || GET_CODE (x) == LSHIFTRT\n \t  || GET_CODE (x) == ZERO_EXTEND || GET_CODE (x) == SIGN_EXTEND))"}, {"sha": "2f38470c9d17d964a6f5b0325c8ad1e3c6ab98b0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa8a92137cd41829d477be4ef1c1c28849ffee1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa8a92137cd41829d477be4ef1c1c28849ffee1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ffa8a92137cd41829d477be4ef1c1c28849ffee1", "patch": "@@ -1,3 +1,7 @@\n+2017-06-02  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* gcc.target/aarch64/cmp_shifted_reg_1.c: New.\n+\n 2017-06-02  Will Schmidt  <will_schmidt@vnet.ibm.com>\n \n \t* gcc.target/powerpc/fold-vec-minmax-char.c: New."}, {"sha": "cacecf4e71d2b74132eadfe97078a99fbf3fb811", "filename": "gcc/testsuite/gcc.target/aarch64/cmp_shifted_reg_1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa8a92137cd41829d477be4ef1c1c28849ffee1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcmp_shifted_reg_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa8a92137cd41829d477be4ef1c1c28849ffee1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcmp_shifted_reg_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcmp_shifted_reg_1.c?ref=ffa8a92137cd41829d477be4ef1c1c28849ffee1", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 \" } */\n+\n+int f3 (int x, int y)\n+{\n+  int res = x << 3;\n+  return res != 0;\n+}\n+\n+/* We should combine the shift and compare */\n+/* { dg-final { scan-assembler \"cmp\\.*\\twzr, w\\[0-9\\]+, lsl 3\" } } */"}]}