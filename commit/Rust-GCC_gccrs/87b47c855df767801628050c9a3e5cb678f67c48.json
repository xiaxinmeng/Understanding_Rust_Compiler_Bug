{"sha": "87b47c855df767801628050c9a3e5cb678f67c48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdiNDdjODU1ZGY3Njc4MDE2MjgwNTBjOWEzZTVjYjY3OGY2N2M0OA==", "commit": {"author": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "1999-03-25T12:04:24Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "1999-03-25T12:04:24Z"}, "message": "rtl.texi (RTX_FRAME_RELATED_P): Add documentation.\n\na\nThu Mar 25 14:04:54 EST 1999  Andrew MacLeod  <amacleod@cygnus.com>\n\t* rtl.texi (RTX_FRAME_RELATED_P): Add documentation.\n\t* rtl.h (struct rtx_def): Update comment for frame_related field.\n\t(set_unique_reg_note): Declare prototype.\n\t* dwarf2out.c (dwarf2out_frame_debug_expr): Split out from\n\t'dwarf2out_frame_debug' to handle only expressions, and process\n\tcomponent parts of a PARALLEL expression.\n\t(dwarf2out_frame_debug): Process insns only, and call\n\tnew function 'dwarf2out_frame_debug_expr' for patterns.\n\t* emit-rtl.c (set_unique_reg_note): New function to add a reg note,\n\tbut if there is an existingone, deletes it first.\n\t* expmed.c (expand_mult, expand_divmod): Use set_unique_reg_note.\n\t* optabs.c (add_equal_note, expand_binop): Use set_unique_reg_note.\n\t(emit_no_conflict_block, emit_libcall_block): Use set_unique_reg_note.\n\t(expand_fix):  Use set_unique_reg_note.\n\nFrom-SVN: r25978", "tree": {"sha": "00dd4d5a9aac9fc759eff7ed802a3e53fdc88cea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00dd4d5a9aac9fc759eff7ed802a3e53fdc88cea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87b47c855df767801628050c9a3e5cb678f67c48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87b47c855df767801628050c9a3e5cb678f67c48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87b47c855df767801628050c9a3e5cb678f67c48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87b47c855df767801628050c9a3e5cb678f67c48/comments", "author": null, "committer": null, "parents": [{"sha": "b664de3a04685f7558b80df9f172deb8decebeff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b664de3a04685f7558b80df9f172deb8decebeff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b664de3a04685f7558b80df9f172deb8decebeff"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "eec6b06da77a7b26df235a7d997590183dbc6d0f", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87b47c855df767801628050c9a3e5cb678f67c48/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87b47c855df767801628050c9a3e5cb678f67c48/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=87b47c855df767801628050c9a3e5cb678f67c48", "patch": "@@ -3149,6 +3149,24 @@ force_next_line_note ()\n {\n   last_linenum = -1;\n }\n+\n+/* Place a note of KIND on insn INSN with DATUM as the datum. If a\n+   note of this type already exists, remove it first. */\n+\n+void \n+set_unique_reg_note (insn, kind, datum)\n+     rtx insn;\n+     enum reg_note kind;\n+     rtx datum;\n+{\n+  rtx note = find_reg_note (insn, kind, NULL_RTX);\n+\n+  /* First remove the note if there already is one.  */\n+  if (note) \n+    remove_note (insn, note);\n+\n+  REG_NOTES (insn) = gen_rtx_EXPR_LIST (kind, datum, REG_NOTES (insn));\n+}\n \f\n /* Return an indication of which type of insn should have X as a body.\n    The value is CODE_LABEL, INSN, CALL_INSN or JUMP_INSN.  */"}]}