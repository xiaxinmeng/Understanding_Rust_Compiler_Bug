{"sha": "602b85231dd432fdad1cdb814eec39d449a33d7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAyYjg1MjMxZGQ0MzJmZGFkMWNkYjgxNGVlYzM5ZDQ0OWEzM2Q3Zg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2009-05-15T06:52:41Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2009-05-15T06:52:41Z"}, "message": "re PR fortran/39352 (gfortran.dg/vect/pr39318.f90 doesn't work on ia64)\n\n2009-05-15  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/39352\n        * f95-lang.c: Add gfc_maybe_initialize_eh.\n        * gfortran.h: Add gfc_maybe_initialize_eh prototype.\n        * Make-lang.in: Add new .h dendencies for f95-lang.c\n        * openmp.c (resolve_omp_do): Call gfc_maybe_initialize_eh.\n        * misc.c (gfc_free): Avoid #define trickery for free.\n\nFrom-SVN: r147559", "tree": {"sha": "bb58acd84e5324e34712e80a80cc5d4bccdea56f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb58acd84e5324e34712e80a80cc5d4bccdea56f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/602b85231dd432fdad1cdb814eec39d449a33d7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/602b85231dd432fdad1cdb814eec39d449a33d7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/602b85231dd432fdad1cdb814eec39d449a33d7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/602b85231dd432fdad1cdb814eec39d449a33d7f/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "675a72d643ceab289bc4adc0484cd90c2812caf5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/675a72d643ceab289bc4adc0484cd90c2812caf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/675a72d643ceab289bc4adc0484cd90c2812caf5"}], "stats": {"total": 55, "additions": 44, "deletions": 11}, "files": [{"sha": "bc6dd0b9645780ddc80581d6ac327f2b7699a541", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/602b85231dd432fdad1cdb814eec39d449a33d7f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/602b85231dd432fdad1cdb814eec39d449a33d7f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=602b85231dd432fdad1cdb814eec39d449a33d7f", "patch": "@@ -1,3 +1,12 @@\n+2009-05-15  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/39352\n+\t* f95-lang.c: Add gfc_maybe_initialize_eh.\n+\t* gfortran.h: Add gfc_maybe_initialize_eh prototype.\n+\t* Make-lang.in: Add new .h dendencies for f95-lang.c\n+\t* openmp.c (resolve_omp_do): Call gfc_maybe_initialize_eh.\n+\t* misc.c (gfc_free): Avoid #define trickery for free.\n+\n 2009-05-14  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \t* dump-parse-tree.c (show_code_node): Add ERRMSG to the dumping"}, {"sha": "5885a62193380ba58de14745c7adeb4811d06342", "filename": "gcc/fortran/Make-lang.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/602b85231dd432fdad1cdb814eec39d449a33d7f/gcc%2Ffortran%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/602b85231dd432fdad1cdb814eec39d449a33d7f/gcc%2Ffortran%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FMake-lang.in?ref=602b85231dd432fdad1cdb814eec39d449a33d7f", "patch": "@@ -313,7 +313,8 @@ GFORTRAN_TRANS_DEPS = fortran/gfortran.h fortran/libgfortran.h \\\n \n fortran/f95-lang.o: $(GFORTRAN_TRANS_DEPS) fortran/mathbuiltins.def \\\n   gt-fortran-f95-lang.h gtype-fortran.h $(CGRAPH_H) $(TARGET_H) fortran/cpp.h \\\n-  $(BUILTINS_DEF) fortran/types.def\n+  $(BUILTINS_DEF) fortran/types.def \\\n+  libfuncs.h expr.h except.h\n fortran/scanner.o: toplev.h fortran/cpp.h\n fortran/convert.o: $(GFORTRAN_TRANS_DEPS)\n fortran/trans.o: $(GFORTRAN_TRANS_DEPS) tree-iterator.h"}, {"sha": "97a071d06f9d182cc9174a31b87a59e1c309de68", "filename": "gcc/fortran/f95-lang.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/602b85231dd432fdad1cdb814eec39d449a33d7f/gcc%2Ffortran%2Ff95-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/602b85231dd432fdad1cdb814eec39d449a33d7f/gcc%2Ffortran%2Ff95-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ff95-lang.c?ref=602b85231dd432fdad1cdb814eec39d449a33d7f", "patch": "@@ -43,6 +43,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic.h\"\n #include \"tree-dump.h\"\n #include \"cgraph.h\"\n+/* For gfc_maybe_initialize_eh.  */\n+#include \"libfuncs.h\"\n+#include \"expr.h\"\n+#include \"except.h\"\n \n #include \"gfortran.h\"\n #include \"cpp.h\"\n@@ -165,6 +169,10 @@ static GTY(()) struct binding_level *free_binding_level;\n    It is indexed by a RID_... value.  */\n tree *ridpointers = NULL;\n \n+/* True means we've initialized exception handling.  */\n+bool gfc_eh_initialized_p;\n+\n+\n /* Prepare expr to be an argument of a TRUTH_NOT_EXPR,\n    or validate its data type for an `if' or `while' statement or ?..: exp.\n \n@@ -1223,5 +1231,21 @@ gfc_init_ts (void)\n   tree_contains_struct[NAMESPACE_DECL][TS_DECL_MINIMAL] = 1;\n }\n \n+void\n+gfc_maybe_initialize_eh (void)\n+{\n+  if (!flag_exceptions || gfc_eh_initialized_p)\n+    return;\n+\n+  gfc_eh_initialized_p = true;\n+  eh_personality_libfunc\n+    = init_one_libfunc (USING_SJLJ_EXCEPTIONS\n+                       ? \"__gcc_personality_sj0\"\n+                       : \"__gcc_personality_v0\");\n+  default_init_unwind_resume_libfunc ();\n+  using_eh_for_cleanups ();\n+}\n+\n+\n #include \"gt-fortran-f95-lang.h\"\n #include \"gtype-fortran.h\""}, {"sha": "bc066bc8b8ee76904bc2d4dce244ddf2c1aae2a4", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/602b85231dd432fdad1cdb814eec39d449a33d7f/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/602b85231dd432fdad1cdb814eec39d449a33d7f/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=602b85231dd432fdad1cdb814eec39d449a33d7f", "patch": "@@ -2198,6 +2198,9 @@ unsigned int gfc_init_options (unsigned int, const char **);\n int gfc_handle_option (size_t, const char *, int);\n bool gfc_post_options (const char **);\n \n+/* f95-lang.c */\n+void gfc_maybe_initialize_eh (void);\n+\n /* iresolve.c */\n const char * gfc_get_string (const char *, ...) ATTRIBUTE_PRINTF_1;\n bool gfc_find_sym_in_expr (gfc_symbol *, gfc_expr *);"}, {"sha": "94d61c9ec863d4f898b5b48d72438b57f4b636de", "filename": "gcc/fortran/misc.c", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/602b85231dd432fdad1cdb814eec39d449a33d7f/gcc%2Ffortran%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/602b85231dd432fdad1cdb814eec39d449a33d7f/gcc%2Ffortran%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmisc.c?ref=602b85231dd432fdad1cdb814eec39d449a33d7f", "patch": "@@ -42,22 +42,15 @@ gfc_getmem (size_t n)\n }\n \n \n-/* gfortran.h defines free to something that triggers a syntax error,\n-   but we need free() here.  */\n-\n-#define temp free\n-#undef free\n-\n void\n gfc_free (void *p)\n {\n+  /* The parentheses around free are needed in order to call not\n+     the redefined free of gfortran.h.  */\n   if (p != NULL)\n-    free (p);\n+    (free) (p);\n }\n \n-#define free temp\n-#undef temp\n-\n \n /* Get terminal width.  */\n "}, {"sha": "608d605c951f11cddc2782f252cfa4707f13d5ea", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/602b85231dd432fdad1cdb814eec39d449a33d7f/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/602b85231dd432fdad1cdb814eec39d449a33d7f/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=602b85231dd432fdad1cdb814eec39d449a33d7f", "patch": "@@ -1503,6 +1503,9 @@ resolve_omp_do (gfc_code *code)\n void\n gfc_resolve_omp_directive (gfc_code *code, gfc_namespace *ns ATTRIBUTE_UNUSED)\n {\n+  if (code->op != EXEC_OMP_ATOMIC)\n+    gfc_maybe_initialize_eh ();\n+\n   switch (code->op)\n     {\n     case EXEC_OMP_DO:"}]}