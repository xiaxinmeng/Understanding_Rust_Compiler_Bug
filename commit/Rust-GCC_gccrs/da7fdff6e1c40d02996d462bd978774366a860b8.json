{"sha": "da7fdff6e1c40d02996d462bd978774366a860b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE3ZmRmZjZlMWM0MGQwMjk5NmQ0NjJiZDk3ODc3NDM2NmE4NjBiOA==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobias.schlueter@physik.uni-muenchen.de", "date": "2005-02-21T13:03:06Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2005-02-21T13:03:06Z"}, "message": "do_iterator: Split loop, markup all lines for which an error locus is printed.\n\n* gfortran.dg/do_iterator: Split loop, markup all lines for\nwhich an error locus is printed.\n* gfortran.dg/pr17708.f90: Markup all lines for which an error\nlocus is printed.\n* gfortran.dg/select_4.f90: Likewise.\n* lib/gfortran-dg.exp (gfortran-dg-test): Handle gfortran error\nlocuses in the various permutations.\n\nFrom-SVN: r95329", "tree": {"sha": "cf1996725d71e65750bfb0453bba3453a903d08d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf1996725d71e65750bfb0453bba3453a903d08d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da7fdff6e1c40d02996d462bd978774366a860b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da7fdff6e1c40d02996d462bd978774366a860b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da7fdff6e1c40d02996d462bd978774366a860b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da7fdff6e1c40d02996d462bd978774366a860b8/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a22dcdd52f3b65ded125a950d3c779370aab525", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a22dcdd52f3b65ded125a950d3c779370aab525", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a22dcdd52f3b65ded125a950d3c779370aab525"}], "stats": {"total": 73, "additions": 57, "deletions": 16}, "files": [{"sha": "0feb30b148bc7359a52b298439f237d031ea1e6d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da7fdff6e1c40d02996d462bd978774366a860b8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da7fdff6e1c40d02996d462bd978774366a860b8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=da7fdff6e1c40d02996d462bd978774366a860b8", "patch": "@@ -1,3 +1,13 @@\n+2005-02-20  Tobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\t* gfortran.dg/do_iterator: Split loop, markup all lines for\n+\twhich an error locus is printed.\n+\t* gfortran.dg/pr17708.f90: Markup all lines for which an error\n+\tlocus is printed.\n+\t* gfortran.dg/select_4.f90: Likewise.\n+\t* lib/gfortran-dg.exp (gfortran-dg-test): Handle gfortran error\n+\tlocuses in the various permutations.\n+\n 2005-02-20  Dorit Naishlos  <dorit@il.ibm.com>\n \n \tPR tree-optimization/19951"}, {"sha": "0e11aa23339a0b6eb436074eb64124ebd3fd296b", "filename": "gcc/testsuite/gfortran.dg/do_iterator.f90", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da7fdff6e1c40d02996d462bd978774366a860b8/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_iterator.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da7fdff6e1c40d02996d462bd978774366a860b8/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_iterator.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_iterator.f90?ref=da7fdff6e1c40d02996d462bd978774366a860b8", "patch": "@@ -1,8 +1,12 @@\n ! { dg-do compile }\n ! various checks which verify that we don't change do-iterators\n-DO I=1,5\n-   I=1        ! { dg-error \"cannot be redefined\" \"changing do-iterator 1\" }\n+DO I=1,5       ! { dg-error \"cannot be redefined\" \"changing do-iterator 1\" }\n+   I=1         ! { dg-error \"cannot be redefined\" \"changing do-iterator 1\" }\n+END DO\n+DO I=1,5       ! { dg-error \"cannot be redefined\" \"changing do-iterator 2\" }\n    READ(5,*) I ! { dg-error \"cannot be redefined\" \"changing do-iterator 2\" }\n+END DO\n+DO I=1,5       ! { dg-error \"cannot be redefined\" \"changing do-iterator 3\" }\n    READ(5,*,iostat=i) j ! { dg-error \"cannot be redefined\" \"changing do-iterator 3\" }\n ENDDO\n END"}, {"sha": "b696b0c27579c00f337c7b3ed34c945041e402b3", "filename": "gcc/testsuite/gfortran.dg/pr17708.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da7fdff6e1c40d02996d462bd978774366a860b8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr17708.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da7fdff6e1c40d02996d462bd978774366a860b8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr17708.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr17708.f90?ref=da7fdff6e1c40d02996d462bd978774366a860b8", "patch": "@@ -2,8 +2,8 @@\n       program test\n         j = 0\n         do 10 i=1,3\n-           if(i == 2) goto 10 ! { dg-warning \"\" \"\" }\n+           if(i == 2) goto 10 ! { dg-warning \"jumps to END\" }\n            j = j+1\n-10      enddo\n+10      enddo                 ! { dg-warning \"jumps to END\" }\n         if (j/=2) call abort\n       end"}, {"sha": "dbced6e4c665a15bb4b94bcdc045be9a791651c7", "filename": "gcc/testsuite/gfortran.dg/select_4.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da7fdff6e1c40d02996d462bd978774366a860b8/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da7fdff6e1c40d02996d462bd978774366a860b8/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_4.f90?ref=da7fdff6e1c40d02996d462bd978774366a860b8", "patch": "@@ -4,15 +4,15 @@\n program select_5\n   integer i\n   select case(i)\n-  case (20:30)\n-  case (25:) ! { dg-error \"overlaps with CASE\" \"\" }\n+  case (20:30) ! { dg-error \"overlaps with CASE\" }\n+  case (25:) ! { dg-error \"overlaps with CASE\" }\n   end select\n   select case(i)\n-  case (30)\n-  case (25:) ! { dg-error \"overlaps with CASE\" \"\" }\n+  case (30)  ! { dg-error \"overlaps with CASE\" }\n+  case (25:) ! { dg-error \"overlaps with CASE\" }\n   end select\n   select case(i)\n-  case (20:30)\n-  case (25) ! { dg-error \"overlaps with CASE\" \"\" }\n+  case (20:30) ! { dg-error \"overlaps with CASE\" }\n+  case (25) ! { dg-error \"overlaps with CASE\" }\n   end select\n end program select_5"}, {"sha": "d6887b050e2970e5eb99cdf82775b16118059fe8", "filename": "gcc/testsuite/lib/gfortran-dg.exp", "status": "modified", "additions": 33, "deletions": 6, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da7fdff6e1c40d02996d462bd978774366a860b8/gcc%2Ftestsuite%2Flib%2Fgfortran-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da7fdff6e1c40d02996d462bd978774366a860b8/gcc%2Ftestsuite%2Flib%2Fgfortran-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgfortran-dg.exp?ref=da7fdff6e1c40d02996d462bd978774366a860b8", "patch": "@@ -1,4 +1,4 @@\n-#   Copyright (C) 2004 Free Software Foundation, Inc.\n+#   Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -25,11 +25,38 @@ proc gfortran-dg-test { prog do_what extra_tool_flags } {\n     set comp_output [lindex $result 0]\n     set output_file [lindex $result 1]\n \n-    # Put the error message on the same line as the line number\n-    # FIXME: Add a colon after line number\n-    # Remove the line of source code with the error and\n-    # the number pointing to error\n-    regsub -all \"\\n\\n\\[^\\n\\]*\\n *\\[0-9\\]*\\n\" $comp_output \": \" comp_output    \n+    # gfortran error messages look like this:\n+    #      In file [name]:[line]\n+    #\n+    #        some code\n+    #              1\n+    #     Error: Some error at (1) and (2)\n+    # or\n+    #      In file [name]:[line]\n+    #\n+    #       some code\n+    #              1\n+    #      In file [name]:[line2]\n+    #\n+    #       some other code\n+    #         2\n+    #     Error: Some error at (1) and (2)\n+    # or\n+    #      In file [name]:[line]\n+    #\n+    #       some code and some more code\n+    #              1       2\n+    #     Error: Some error at (1) and (2)\n+    #\n+    # We collapse these to look like:\n+    #  [name]:[line]: Error: Some error at (1) and (2)\n+    # or\n+    #  [name]:[line]: Error: Some error at (1) and (2)\n+    #  [name]:[line2]: Error: Some error at (1) and (2)\n+    # We proceed in two steps: first we deal with the form with two\n+    # different locus lines, then with the form with only one locus line.\n+    regsub -all \" In file (\\[^\\n\\]*)\\n\\n\\[^\\n\\]*\\n\\[^\\n\\]*\\n In file (\\[^\\n\\]*)\\n\\n\\[^\\n\\]*\\n\\[^\\n\\]*\\n(\\[^\\n\\]*)\\n\" $comp_output \"\\\\1: \\\\3\\n\\\\2: \\\\3\\n\"  comp_output\n+    regsub -all \" In file (\\[^\\n\\]*)\\n\\n\\[^\\n\\]*\\n\\[^\\n\\]*\\n(\\[^\\n\\]*)\\n\" $comp_output \"\\\\1: \\\\2\\n\" comp_output\n \n     return [list $comp_output $output_file]\n }"}]}