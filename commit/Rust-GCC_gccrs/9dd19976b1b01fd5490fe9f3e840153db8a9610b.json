{"sha": "9dd19976b1b01fd5490fe9f3e840153db8a9610b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWRkMTk5NzZiMWIwMWZkNTQ5MGZlOWYzZTg0MDE1M2RiOGE5NjEwYg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-05-12T15:55:46Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-05-12T15:55:46Z"}, "message": "re PR ada/80117 (Standard'Word_Size is wrong for aarch64 ILP32)\n\n\t* system-linux-arm.ads (Memory_Size): Use Long_Integer'Size\n\tinstead of Word_Size.\n\n\tRevert\n\t2017-03-28  Andreas Schwab  <schwab@suse.de>\n\n\tPR ada/80117\n\t* system-linux-aarch64-ilp32.ads: New file.\n\t* gcc-interface/Makefile.in (LIBGNAT_TARGET_PAIRS_COMMON): Rename\n\tfrom LIBGNAT_TARGET_PAIRS.\n\t(LIBGNAT_TARGET_PAIRS_32, LIBGNAT_TARGET_PAIRS_64): Define.\n\t(LIBGNAT_TARGET_PAIRS): Use LIBGNAT_TARGET_PAIRS_COMMON, and\n\tLIBGNAT_TARGET_PAIRS_64 or LIBGNAT_TARGET_PAIRS_32 for -mabi=lp64\n\tor -mabi=ilp32, resp.\n\nFrom-SVN: r247979", "tree": {"sha": "e1254fa04d261a17dd6d88f9be4c1ada79194ebb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1254fa04d261a17dd6d88f9be4c1ada79194ebb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9dd19976b1b01fd5490fe9f3e840153db8a9610b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dd19976b1b01fd5490fe9f3e840153db8a9610b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dd19976b1b01fd5490fe9f3e840153db8a9610b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dd19976b1b01fd5490fe9f3e840153db8a9610b/comments", "author": null, "committer": null, "parents": [{"sha": "302a0e37cfa7255c3049ec97996a050e7ade3407", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/302a0e37cfa7255c3049ec97996a050e7ade3407", "html_url": "https://github.com/Rust-GCC/gccrs/commit/302a0e37cfa7255c3049ec97996a050e7ade3407"}], "stats": {"total": 193, "additions": 20, "deletions": 173}, "files": [{"sha": "0dd6d04bc7c1cba586d5ce5b8d01be3a15e8fe30", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dd19976b1b01fd5490fe9f3e840153db8a9610b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dd19976b1b01fd5490fe9f3e840153db8a9610b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9dd19976b1b01fd5490fe9f3e840153db8a9610b", "patch": "@@ -1,3 +1,20 @@\n+2017-05-12  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* system-linux-arm.ads (Memory_Size): Use Long_Integer'Size\n+\tinstead of Word_Size.\n+\n+\tRevert\n+\t2017-03-28  Andreas Schwab  <schwab@suse.de>\n+\n+\tPR ada/80117\n+\t* system-linux-aarch64-ilp32.ads: New file.\n+\t* gcc-interface/Makefile.in (LIBGNAT_TARGET_PAIRS_COMMON): Rename\n+\tfrom LIBGNAT_TARGET_PAIRS.\n+\t(LIBGNAT_TARGET_PAIRS_32, LIBGNAT_TARGET_PAIRS_64): Define.\n+\t(LIBGNAT_TARGET_PAIRS): Use LIBGNAT_TARGET_PAIRS_COMMON, and\n+\tLIBGNAT_TARGET_PAIRS_64 or LIBGNAT_TARGET_PAIRS_32 for -mabi=lp64\n+\tor -mabi=ilp32, resp.\n+\n 2017-05-10  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR ada/80626"}, {"sha": "9566759f760696b8633493bb604f57b644e18b2e", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dd19976b1b01fd5490fe9f3e840153db8a9610b/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dd19976b1b01fd5490fe9f3e840153db8a9610b/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=9dd19976b1b01fd5490fe9f3e840153db8a9610b", "patch": "@@ -1984,7 +1984,7 @@ endif\n \n # AArch64 Linux\n ifeq ($(strip $(filter-out aarch64% linux%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS_COMMON = \\\n+  LIBGNAT_TARGET_PAIRS = \\\n   a-exetim.adb<a-exetim-posix.adb \\\n   a-exetim.ads<a-exetim-default.ads \\\n   a-intnam.ads<a-intnam-linux.ads \\\n@@ -2004,22 +2004,9 @@ ifeq ($(strip $(filter-out aarch64% linux%,$(target_cpu) $(target_os))),)\n   s-taspri.ads<s-taspri-posix.ads \\\n   g-sercom.adb<g-sercom-linux.adb \\\n   $(ATOMICS_TARGET_PAIRS) \\\n-  $(ATOMICS_BUILTINS_TARGET_PAIRS)\n-\n-  LIBGNAT_TARGET_PAIRS_32 = \\\n-  system.ads<system-linux-aarch64-ilp32.ads\n-\n-  LIBGNAT_TARGET_PAIRS_64 = \\\n+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n   system.ads<system-linux-arm.ads\n \n-  ifneq (,$(or $(filter aarch64-linux-gnu, $(shell $(GCC_FOR_TARGET) $(GNATLIBCFLAGS) -print-multiarch)), $(filter ../lib64, $(shell $(GCC_FOR_TARGET) $(GNATLIBCFLAGS) -print-multi-os-directory))))\n-    LIBGNAT_TARGET_PAIRS = \\\n-    $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_64)\n-  else\n-    LIBGNAT_TARGET_PAIRS = \\\n-    $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_32)\n-  endif\n-\n   TOOLS_TARGET_PAIRS =  \\\n     mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n     indepsw.adb<indepsw-gnu.adb"}, {"sha": "496bccf3fcf641ec66a060d9a25764df0fb3579a", "filename": "gcc/ada/system-linux-aarch64-ilp32.ads", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/302a0e37cfa7255c3049ec97996a050e7ade3407/gcc%2Fada%2Fsystem-linux-aarch64-ilp32.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/302a0e37cfa7255c3049ec97996a050e7ade3407/gcc%2Fada%2Fsystem-linux-aarch64-ilp32.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-aarch64-ilp32.ads?ref=302a0e37cfa7255c3049ec97996a050e7ade3407", "patch": "@@ -1,157 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                        GNAT RUN-TIME COMPONENTS                          --\n---                                                                          --\n---                               S Y S T E M                                --\n---                                                                          --\n---                                 S p e c                                  --\n---                        (GNU-Linux/ARM Version)                           --\n---                                                                          --\n---          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n---                                                                          --\n--- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-package System is\n-   pragma Pure;\n-   --  Note that we take advantage of the implementation permission to make\n-   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n-   --  2005, this is Pure in any case (AI-362).\n-\n-   pragma No_Elaboration_Code_All;\n-   --  Allow the use of that restriction in units that WITH this unit\n-\n-   type Name is (SYSTEM_NAME_GNAT);\n-   System_Name : constant Name := SYSTEM_NAME_GNAT;\n-\n-   --  System-Dependent Named Numbers\n-\n-   Min_Int               : constant := Long_Long_Integer'First;\n-   Max_Int               : constant := Long_Long_Integer'Last;\n-\n-   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n-   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;\n-\n-   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n-   Max_Digits            : constant := Long_Long_Float'Digits;\n-\n-   Max_Mantissa          : constant := 63;\n-   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n-\n-   Tick                  : constant := 0.000_001;\n-\n-   --  Storage-related Declarations\n-\n-   type Address is private;\n-   pragma Preelaborable_Initialization (Address);\n-   Null_Address : constant Address;\n-\n-   Storage_Unit : constant := 8;\n-   Word_Size    : constant := 32;\n-   Memory_Size  : constant := 2 ** Word_Size;\n-\n-   --  Address comparison\n-\n-   function \"<\"  (Left, Right : Address) return Boolean;\n-   function \"<=\" (Left, Right : Address) return Boolean;\n-   function \">\"  (Left, Right : Address) return Boolean;\n-   function \">=\" (Left, Right : Address) return Boolean;\n-   function \"=\"  (Left, Right : Address) return Boolean;\n-\n-   pragma Import (Intrinsic, \"<\");\n-   pragma Import (Intrinsic, \"<=\");\n-   pragma Import (Intrinsic, \">\");\n-   pragma Import (Intrinsic, \">=\");\n-   pragma Import (Intrinsic, \"=\");\n-\n-   --  Other System-Dependent Declarations\n-\n-   type Bit_Order is (High_Order_First, Low_Order_First);\n-   Default_Bit_Order : constant Bit_Order :=\n-                         Bit_Order'Val (Standard'Default_Bit_Order);\n-   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n-\n-   --  Priority-related Declarations (RM D.1)\n-\n-   --  0 .. 98 corresponds to the system priority range 1 .. 99.\n-   --\n-   --  If the scheduling policy is SCHED_FIFO or SCHED_RR the runtime makes use\n-   --  of the entire range provided by the system.\n-   --\n-   --  If the scheduling policy is SCHED_OTHER the only valid system priority\n-   --  is 1 and other values are simply ignored.\n-\n-   Max_Priority           : constant Positive := 97;\n-   Max_Interrupt_Priority : constant Positive := 98;\n-\n-   subtype Any_Priority       is Integer      range  0 .. 98;\n-   subtype Priority           is Any_Priority range  0 .. 97;\n-   subtype Interrupt_Priority is Any_Priority range 98 .. 98;\n-\n-   Default_Priority : constant Priority := 48;\n-\n-private\n-\n-   type Address is mod Memory_Size;\n-   Null_Address : constant Address := 0;\n-\n-   --------------------------------------\n-   -- System Implementation Parameters --\n-   --------------------------------------\n-\n-   --  These parameters provide information about the target that is used\n-   --  by the compiler. They are in the private part of System, where they\n-   --  can be accessed using the special circuitry in the Targparm unit\n-   --  whose source should be consulted for more detailed descriptions\n-   --  of the individual switch values.\n-\n-   Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := True;\n-   Command_Line_Args         : constant Boolean := True;\n-   Configurable_Run_Time     : constant Boolean := False;\n-   Denorm                    : constant Boolean := True;\n-   Duration_32_Bits          : constant Boolean := False;\n-   Exit_Status_Supported     : constant Boolean := True;\n-   Fractional_Fixed_Ops      : constant Boolean := False;\n-   Frontend_Layout           : constant Boolean := False;\n-   Machine_Overflows         : constant Boolean := False;\n-   Machine_Rounds            : constant Boolean := True;\n-   Preallocated_Stacks       : constant Boolean := False;\n-   Signed_Zeros              : constant Boolean := True;\n-   Stack_Check_Default       : constant Boolean := False;\n-   Stack_Check_Probes        : constant Boolean := True;\n-   Stack_Check_Limits        : constant Boolean := False;\n-   Support_Aggregates        : constant Boolean := True;\n-   Support_Atomic_Primitives : constant Boolean := True;\n-   Support_Composite_Assign  : constant Boolean := True;\n-   Support_Composite_Compare : constant Boolean := True;\n-   Support_Long_Shifts       : constant Boolean := True;\n-   Always_Compatible_Rep     : constant Boolean := False;\n-   Suppress_Standard_Library : constant Boolean := False;\n-   Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n-   ZCX_By_Default            : constant Boolean := True;\n-\n-end System;"}, {"sha": "e36f38d1e38f86bb4a0b52c361b5488293cd9cab", "filename": "gcc/ada/system-linux-arm.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dd19976b1b01fd5490fe9f3e840153db8a9610b/gcc%2Fada%2Fsystem-linux-arm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dd19976b1b01fd5490fe9f3e840153db8a9610b/gcc%2Fada%2Fsystem-linux-arm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-arm.ads?ref=9dd19976b1b01fd5490fe9f3e840153db8a9610b", "patch": "@@ -70,7 +70,7 @@ package System is\n \n    Storage_Unit : constant := 8;\n    Word_Size    : constant := Standard'Word_Size;\n-   Memory_Size  : constant := 2 ** Word_Size;\n+   Memory_Size  : constant := 2 ** Long_Integer'Size;\n \n    --  Address comparison\n "}]}