{"sha": "844bf05b0d607c110483c0a01462c21a63b28c87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ0YmYwNWIwZDYwN2MxMTA0ODNjMGEwMTQ2MmMyMWE2M2IyOGM4Nw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-07-28T15:15:47Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-07-28T15:15:47Z"}, "message": "* ChangeLog: Remove mess.\n\nFrom-SVN: r176874", "tree": {"sha": "74526be9e2bdda646af86a7c9e6557c6765d0ae2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74526be9e2bdda646af86a7c9e6557c6765d0ae2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/844bf05b0d607c110483c0a01462c21a63b28c87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/844bf05b0d607c110483c0a01462c21a63b28c87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/844bf05b0d607c110483c0a01462c21a63b28c87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/844bf05b0d607c110483c0a01462c21a63b28c87/comments", "author": null, "committer": null, "parents": [{"sha": "0465f4f89336091fece09375a95d1e1bc1547a50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0465f4f89336091fece09375a95d1e1bc1547a50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0465f4f89336091fece09375a95d1e1bc1547a50"}], "stats": {"total": 39, "additions": 2, "deletions": 37}, "files": [{"sha": "a19ed37d0276303f5e3056466b8ee9ce61134696", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 37, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844bf05b0d607c110483c0a01462c21a63b28c87/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844bf05b0d607c110483c0a01462c21a63b28c87/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=844bf05b0d607c110483c0a01462c21a63b28c87", "patch": "@@ -1,7 +1,7 @@\n 2011-07-28  H.J. Lu  <hongjiu.lu@intel.com>\n \n-\t* config/i386/i386.md (*tls_global_dynamic_64): Update length\n-\tattribute.\n+\t* config/i386/i386.md (*tls_global_dynamic_64): Update\n+\tlength attribute.\n \n 2011-07-28  Uros Bizjak  <ubizjak@gmail.com>\n \n@@ -4601,25 +4601,13 @@\n \t* regrename.c (scan_rtx_reg): Handle the case where we write to an\n \topen chain in a smaller mode without failing the entire block.\n \n-2011-06-20  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR middle-end/47725\n-\t* combine.c (cant_combine_insn_p): Don't check zero/sign\n-\textended hard registers.\n-\n 2011-06-21  Alan Modra  <amodra@gmail.com>\n \n \t* config/rs6000/rs6000.c (rs6000_cannot_force_const_mem): Match\n \tCONST high part large-toc address.\n \t(rs6000_tls_referenced_p): Make static.\n \t* config/rs6000/rs6000-protos.h (rs6000_tls_referenced_p): Delete.\n \n-2011-06-20  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR middle-end/47725\n-\t* combine.c (cant_combine_insn_p): Check zero/sign extended\n-\thard registers.\n-\n 2011-06-20  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n \n \tPR target/49385\n@@ -18331,18 +18319,6 @@\n \t* expr.c (expand_expr_addr_expr_1): Use simplify_gen_binary\n \tinstead of gen_rtx_PLUS if EXPAND_SUM or EXPAND_INITIALIZER.\n \n-2011-03-17  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR middle-end/47725\n-\t* combine.c (cant_combine_insn_p): Don't check zero/sign\n-\textended hard registers.\n-\n-2011-03-17  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR middle-end/47725\n-\t* combine.c (cant_combine_insn_p): Check zero/sign extended\n-\thard registers.\n-\n 2011-03-17  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/v850/v850.h (OUTPUT_ADDR_CONST_EXTRA): Remove.\n@@ -19734,11 +19710,6 @@\n \thandle them like argument loads from stack slots.  Do not double\n \tcount memory for memory constants and argument loads from stack slots.\n \n-2011-02-15  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR middle-end/47725\n-\t* combine.c (cant_combine_insn_p): Revert the last change.\n-\n 2011-02-15  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/47755\n@@ -19833,12 +19804,6 @@\n \t(cmp_liw, liw_cmp): Likewise.  Plus fix order of operands in the\n \tinstruction.\n \n-2011-02-15  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR middle-end/47725\n-\t* combine.c (cant_combine_insn_p): Check zero/sign extended\n-\thard registers.\n-\n 2011-02-15  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/47743"}]}