{"sha": "bb96aa6726d1fac7e2500ef37d1193eed00b03f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI5NmFhNjcyNmQxZmFjN2UyNTAwZWYzN2QxMTkzZWVkMDBiMDNmMQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-06-23T16:05:44Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-06-23T16:05:44Z"}, "message": "runtime: don't crash if no p in kickoff\n    \n    The kickoff function for g0 can be invoked without a p, for example\n    from mcall(exitsyscall0) in exitsyscall after exitsyscall has cleared\n    the p field. The assignment gp.param = nil will invoke a write barrier.\n    If gp.param is not already nil, this will require a p. Avoid the problem\n    for a specific case that is known to be OK: when the value in gp.param\n    is a *g.\n    \n    Reviewed-on: https://go-review.googlesource.com/46512\n\nFrom-SVN: r249595", "tree": {"sha": "f9c9927c7f70e3dd316f3234661634304e55c10a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9c9927c7f70e3dd316f3234661634304e55c10a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb96aa6726d1fac7e2500ef37d1193eed00b03f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb96aa6726d1fac7e2500ef37d1193eed00b03f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb96aa6726d1fac7e2500ef37d1193eed00b03f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb96aa6726d1fac7e2500ef37d1193eed00b03f1/comments", "author": null, "committer": null, "parents": [{"sha": "5f0b897b2ee47bf3845d924dd5bc3beb949bc78b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f0b897b2ee47bf3845d924dd5bc3beb949bc78b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f0b897b2ee47bf3845d924dd5bc3beb949bc78b"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "473eeca22daaa9e4b848f221f4f9311be66f6dfc", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb96aa6726d1fac7e2500ef37d1193eed00b03f1/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb96aa6726d1fac7e2500ef37d1193eed00b03f1/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=bb96aa6726d1fac7e2500ef37d1193eed00b03f1", "patch": "@@ -1,4 +1,4 @@\n-29c61dc3c5151df5de9362b7882ccf04679df976\n+f107cc8bced1939b0083231fc1ea24669ca4832c\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "6b6f9c9c379c3ce30f77153cb00bbf5a263e8852", "filename": "libgo/go/runtime/proc.go", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb96aa6726d1fac7e2500ef37d1193eed00b03f1/libgo%2Fgo%2Fruntime%2Fproc.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb96aa6726d1fac7e2500ef37d1193eed00b03f1/libgo%2Fgo%2Fruntime%2Fproc.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fproc.go?ref=bb96aa6726d1fac7e2500ef37d1193eed00b03f1", "patch": "@@ -1097,7 +1097,25 @@ func kickoff() {\n \tfv := gp.entry\n \tparam := gp.param\n \tgp.entry = nil\n+\n+\t// When running on the g0 stack we can wind up here without a p,\n+\t// for example from mcall(exitsyscall0) in exitsyscall.\n+\t// Setting gp.param = nil will call a write barrier, and if\n+\t// there is no p that write barrier will crash. When called from\n+\t// mcall the gp.param value will be a *g, which we don't need to\n+\t// shade since we know it will be kept alive elsewhere. In that\n+\t// case clear the field using uintptr so that the write barrier\n+\t// does nothing.\n+\tif gp.m.p == 0 {\n+\t\tif gp == gp.m.g0 && gp.param == unsafe.Pointer(gp.m.curg) {\n+\t\t\t*(*uintptr)(unsafe.Pointer(&gp.param)) = 0\n+\t\t} else {\n+\t\t\tthrow(\"no p in kickoff\")\n+\t\t}\n+\t}\n+\n \tgp.param = nil\n+\n \tfv(param)\n \tgoexit1()\n }"}]}