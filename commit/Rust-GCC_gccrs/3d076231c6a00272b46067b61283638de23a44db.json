{"sha": "3d076231c6a00272b46067b61283638de23a44db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2QwNzYyMzFjNmEwMDI3MmI0NjA2N2I2MTI4MzYzOGRlMjNhNDRkYg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-01-15T23:00:30Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-01-15T23:00:30Z"}, "message": "PR libstdc++/69294 Check for isinf and isnan on AIX\n\n\tPR libstdc++/69294\n\t* acinclude.m4 (GLIBCXX_CHECK_MATH11_PROTO): Check for obsolete isinf\n\tand isnan on AIX. Quote variables.\n\t* configure: Regenerate.\n\nFrom-SVN: r232455", "tree": {"sha": "82cd09a42bc86879ab3041f19bc34ce0f2b716df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82cd09a42bc86879ab3041f19bc34ce0f2b716df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d076231c6a00272b46067b61283638de23a44db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d076231c6a00272b46067b61283638de23a44db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d076231c6a00272b46067b61283638de23a44db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d076231c6a00272b46067b61283638de23a44db/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a04d5fc95d7494824b07feb6c57cf71b4891e3de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a04d5fc95d7494824b07feb6c57cf71b4891e3de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a04d5fc95d7494824b07feb6c57cf71b4891e3de"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "5e293546e985c22fa0803d7dd6ba5ec8f94f2c9a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d076231c6a00272b46067b61283638de23a44db/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d076231c6a00272b46067b61283638de23a44db/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3d076231c6a00272b46067b61283638de23a44db", "patch": "@@ -1,3 +1,10 @@\n+2016-01-15  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/69294\n+\t* acinclude.m4 (GLIBCXX_CHECK_MATH11_PROTO): Check for obsolete isinf\n+\tand isnan on AIX. Quote variables.\n+\t* configure: Regenerate.\n+\n 2016-01-15  Torvald Riegel  <triegel@redhat.com>\n \n \t* include/bits/basic_string.h (basic_string): Declare friends."}, {"sha": "f8dbb95265a34b7bea5c219d0227ae3456ecea8d", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d076231c6a00272b46067b61283638de23a44db/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d076231c6a00272b46067b61283638de23a44db/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=3d076231c6a00272b46067b61283638de23a44db", "patch": "@@ -2186,7 +2186,7 @@ AC_DEFUN([GLIBCXX_CHECK_MATH11_PROTO], [\n       fi\n       AC_MSG_RESULT([$glibcxx_cv_math11_overload])\n       ;;\n-    *-*-*gnu*)\n+    *-*-*gnu* | *-*-aix*)\n       # If <math.h> defines the obsolete isinf(double) and isnan(double)\n       # functions (instead of or as well as the C99 generic macros) then we\n       # can't define std::isinf(double) and std::isnan(double) in <cmath>\n@@ -3445,9 +3445,9 @@ EOF\n   AC_LANG_RESTORE\n \n   # Set atomicity_dir to builtins if all but the long long test above passes.\n-  if test $glibcxx_cv_atomic_bool = yes \\\n-     && test $glibcxx_cv_atomic_short = yes \\\n-     && test $glibcxx_cv_atomic_int = yes; then\n+  if test \"$glibcxx_cv_atomic_bool\" = yes \\\n+     && test \"$glibcxx_cv_atomic_short\" = yes \\\n+     && test \"$glibcxx_cv_atomic_int\" = yes; then\n     AC_DEFINE(_GLIBCXX_ATOMIC_BUILTINS, 1,\n     [Define if the compiler supports C++11 atomics.])\n     atomicity_dir=cpu/generic/atomicity_builtins"}, {"sha": "5e91deb0016e110236d897cc81a66db114c9a38f", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d076231c6a00272b46067b61283638de23a44db/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d076231c6a00272b46067b61283638de23a44db/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=3d076231c6a00272b46067b61283638de23a44db", "patch": "@@ -15539,9 +15539,9 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n   # Set atomicity_dir to builtins if all but the long long test above passes.\n-  if test $glibcxx_cv_atomic_bool = yes \\\n-     && test $glibcxx_cv_atomic_short = yes \\\n-     && test $glibcxx_cv_atomic_int = yes; then\n+  if test \"$glibcxx_cv_atomic_bool\" = yes \\\n+     && test \"$glibcxx_cv_atomic_short\" = yes \\\n+     && test \"$glibcxx_cv_atomic_int\" = yes; then\n \n $as_echo \"#define _GLIBCXX_ATOMIC_BUILTINS 1\" >>confdefs.h\n \n@@ -18177,7 +18177,7 @@ fi\n       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_math11_overload\" >&5\n $as_echo \"$glibcxx_cv_math11_overload\" >&6; }\n       ;;\n-    *-*-*gnu*)\n+    *-*-*gnu* | *-*-aix*)\n       # If <math.h> defines the obsolete isinf(double) and isnan(double)\n       # functions (instead of or as well as the C99 generic macros) then we\n       # can't define std::isinf(double) and std::isnan(double) in <cmath>"}]}