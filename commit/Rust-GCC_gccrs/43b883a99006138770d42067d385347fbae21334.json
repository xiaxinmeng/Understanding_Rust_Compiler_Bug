{"sha": "43b883a99006138770d42067d385347fbae21334", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNiODgzYTk5MDA2MTM4NzcwZDQyMDY3ZDM4NTM0N2ZiYWUyMTMzNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-05-11T14:08:07Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-05-11T14:08:07Z"}, "message": "re PR tree-optimization/80705 (Incorrect code generated for profile counter updates due to SLP+LIM)\n\n2017-05-11  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/80705\n\t* tree-vect-data-refs.c (vect_analyze_data_refs): DECL_NONALIASED\n\tbases are not vectorizable.\n\n\t* gcc.dg/vect/bb-slp-pr80705.c: New testcase.\n\nFrom-SVN: r247906", "tree": {"sha": "60aa0326b74bb6c26cb4ebb65d8f8152f48b53f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60aa0326b74bb6c26cb4ebb65d8f8152f48b53f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43b883a99006138770d42067d385347fbae21334", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43b883a99006138770d42067d385347fbae21334", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43b883a99006138770d42067d385347fbae21334", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43b883a99006138770d42067d385347fbae21334/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f8cba3aaaef329e00f8af4364765274205402be9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8cba3aaaef329e00f8af4364765274205402be9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8cba3aaaef329e00f8af4364765274205402be9"}], "stats": {"total": 76, "additions": 76, "deletions": 0}, "files": [{"sha": "a317c211ebe77ac5477820799c143e91902ba8c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43b883a99006138770d42067d385347fbae21334/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43b883a99006138770d42067d385347fbae21334/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43b883a99006138770d42067d385347fbae21334", "patch": "@@ -1,3 +1,9 @@\n+2017-05-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/80705\n+\t* tree-vect-data-refs.c (vect_analyze_data_refs): DECL_NONALIASED\n+\tbases are not vectorizable.\n+\n 2017-05-11  Bin Cheng  <bin.cheng@arm.com>\n \n \t* tree-ssa-loop-ivopts.c (determine_set_costs): Skip non-interger"}, {"sha": "1af2958dfee2d23568b858ebed12e979ee01fa3d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43b883a99006138770d42067d385347fbae21334/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43b883a99006138770d42067d385347fbae21334/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=43b883a99006138770d42067d385347fbae21334", "patch": "@@ -1,3 +1,8 @@\n+2017-05-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/80705\n+\t* gcc.dg/vect/bb-slp-pr80705.c: New testcase.\n+\n 2017-05-11  Nathan Sidwell  <nathan@acm.org>\n \n \t* lib/scanlang.exp: New."}, {"sha": "189e3d14bdf475c295ba5348ceedbd98a9c6d462", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-pr80705.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43b883a99006138770d42067d385347fbae21334/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr80705.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43b883a99006138770d42067d385347fbae21334/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr80705.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr80705.c?ref=43b883a99006138770d42067d385347fbae21334", "patch": "@@ -0,0 +1,44 @@\n+/* { dg-do compile } */\n+/* { dg-require-profiling \"-fprofile-generate\" } */\n+/* { dg-additional-options \"-fprofile-generate\" } */\n+\n+extern int isspace (int);\n+\n+int foo(const char *txt, char *buf)\n+{\n+  const char *s;\n+  char *d;\n+  int ws = 1;\n+  for (s=txt, d=buf; *s; )\n+    {\n+      if (*s=='/' && *(s+1)=='/') {\n+\n+\t  s += 2;\n+\t  while (*s && *s!='\\r' && *s!='\\n')\n+\t    s++;\n+      }\n+      else if (*s=='\"') {\n+\n+\t  s++;\n+\t  while (*s && *s!='\\r' && *s!='\\n' && *s!='\"')\n+\t    if (*s++=='\\\\')\n+\t      s++;\n+\t  if (*s=='\"')\n+\t    s++;\n+      }\n+      else {\n+\t  if (*s && !isspace(*s))\n+\t    ws = 0;\n+\n+\n+\t  *d++ = *s++;\n+\n+      }\n+    }\n+  *d = '\\0';\n+\n+  return ws;\n+}\n+\n+/* { dg-final { scan-tree-dump \"base object not addressable\" \"slp1\" } } */\n+/* { dg-final { scan-tree-dump-not \"MEM\\[^\\r\\n\\]*__gcov\\[^\\r\\n\\]* = vect_cst\" \"slp1\" } } */"}, {"sha": "67cc969757df2d0a23f6b716704ff8370086763b", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43b883a99006138770d42067d385347fbae21334/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43b883a99006138770d42067d385347fbae21334/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=43b883a99006138770d42067d385347fbae21334", "patch": "@@ -3957,6 +3957,27 @@ vect_analyze_data_refs (vec_info *vinfo, int *min_vf)\n \t  datarefs[i] = dr;\n \t}\n \n+      if (TREE_CODE (DR_BASE_ADDRESS (dr)) == ADDR_EXPR\n+\t  && VAR_P (TREE_OPERAND (DR_BASE_ADDRESS (dr), 0))\n+\t  && DECL_NONALIASED (TREE_OPERAND (DR_BASE_ADDRESS (dr), 0)))\n+\t{\n+          if (dump_enabled_p ())\n+            {\n+              dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n+                               \"not vectorized: base object not addressable \"\n+\t\t\t       \"for stmt: \");\n+              dump_gimple_stmt (MSG_MISSED_OPTIMIZATION, TDF_SLIM, stmt, 0);\n+            }\n+          if (is_a <bb_vec_info> (vinfo))\n+\t    {\n+\t      /* In BB vectorization the ref can still participate\n+\t         in dependence analysis, we just can't vectorize it.  */\n+\t      STMT_VINFO_VECTORIZABLE (stmt_info) = false;\n+\t      continue;\n+\t    }\n+\t  return false;\n+\t}\n+\n       /* Set vectype for STMT.  */\n       scalar_type = TREE_TYPE (DR_REF (dr));\n       STMT_VINFO_VECTYPE (stmt_info)"}]}