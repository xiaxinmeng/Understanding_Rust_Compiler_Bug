{"sha": "4ba96c0283e415800421dfc9a1e1263b21dabfd9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJhOTZjMDI4M2U0MTU4MDA0MjFkZmM5YTFlMTI2M2IyMWRhYmZkOQ==", "commit": {"author": {"name": "Brooks Moses", "email": "brooks.moses@codesourcery.com", "date": "2007-01-04T00:39:15Z"}, "committer": {"name": "Brooks Moses", "email": "brooks@gcc.gnu.org", "date": "2007-01-04T00:39:15Z"}, "message": "intrinsic.texi: Improvements to index entries; change @findex entries to @cindex entries.\n\n* intrinsic.texi: Improvements to index entries; change\n@findex entries to @cindex entries.\n* invoke.texi: Standardize and improve index entries.\n* gfortran.texi: Fix @code in one index entry.\n\nFrom-SVN: r120421", "tree": {"sha": "1d3fb4f05efbbb7088877b1c92973437e94c1ddd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d3fb4f05efbbb7088877b1c92973437e94c1ddd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ba96c0283e415800421dfc9a1e1263b21dabfd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ba96c0283e415800421dfc9a1e1263b21dabfd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ba96c0283e415800421dfc9a1e1263b21dabfd9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ba96c0283e415800421dfc9a1e1263b21dabfd9/comments", "author": null, "committer": null, "parents": [{"sha": "40746dccd1050a3f97adf682472338043cb1b3bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40746dccd1050a3f97adf682472338043cb1b3bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40746dccd1050a3f97adf682472338043cb1b3bd"}], "stats": {"total": 902, "additions": 458, "deletions": 444}, "files": [{"sha": "6dc9f5100caaf521bf69d96cb91774473b53c01d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ba96c0283e415800421dfc9a1e1263b21dabfd9/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ba96c0283e415800421dfc9a1e1263b21dabfd9/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4ba96c0283e415800421dfc9a1e1263b21dabfd9", "patch": "@@ -1,3 +1,10 @@\n+2007-01-03  Brooks Moses  <brooks.moses@codesourcery.com>\n+\n+\t* intrinsic.texi: Improvements to index entries; change\n+\t@findex entries to @cindex entries.\n+\t* invoke.texi: Standardize and improve index entries.\n+\t* gfortran.texi: Fix @code in one index entry.\n+\n 2007-01-03  Brooks Moses  <brooks.moses@codesourcery.com>\n \n \t* invoke.texi: Change @code-type macros to appropriate"}, {"sha": "66202bec47c3a8a0c42ff6400ef73e804f1e4329", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ba96c0283e415800421dfc9a1e1263b21dabfd9/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ba96c0283e415800421dfc9a1e1263b21dabfd9/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=4ba96c0283e415800421dfc9a1e1263b21dabfd9", "patch": "@@ -728,7 +728,7 @@ than @code{(/.../)}.\n @item\n @cindex @code{ENUM} statement\n @cindex @code{ENUMERATOR} statement\n-@cindex @command{-fshort-enums}\n+@cindex @code{-fshort-enums} option\n Support for the declaration of enumeration constants via the\n @code{ENUM} and @code{ENUMERATOR} statements.  Interoperability with\n @command{gcc} is guaranteed also for the case where the"}, {"sha": "ed40e757ba138df8238bfd3883862b6df8af2c34", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 332, "deletions": 322, "changes": 654, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ba96c0283e415800421dfc9a1e1263b21dabfd9/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ba96c0283e415800421dfc9a1e1263b21dabfd9/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=4ba96c0283e415800421dfc9a1e1263b21dabfd9", "patch": "@@ -36,7 +36,7 @@ Some basic guidelines for editing this document:\n \n @node Intrinsic Procedures\n @chapter Intrinsic Procedures\n-@cindex Intrinsic Procedures\n+@cindex intrinsic procedures\n \n This portion of the document is incomplete and undergoing massive expansion \n and editing.  All contributions and corrections are strongly encouraged. \n@@ -293,7 +293,7 @@ the applicable option(s) is noted.\n \n @node ABORT\n @section @code{ABORT} --- Abort the program  \n-@findex @code{ABORT} intrinsic\n+@cindex @code{ABORT} intrinsic\n @cindex abort\n \n @table @asis\n@@ -330,12 +330,12 @@ end program test_abort\n \n @node ABS\n @section @code{ABS} --- Absolute value  \n-@findex @code{ABS} intrinsic\n-@findex @code{CABS} intrinsic\n-@findex @code{DABS} intrinsic\n-@findex @code{IABS} intrinsic\n-@findex @code{ZABS} intrinsic\n-@findex @code{CDABS} intrinsic\n+@cindex @code{ABS} intrinsic\n+@cindex @code{CABS} intrinsic\n+@cindex @code{DABS} intrinsic\n+@cindex @code{IABS} intrinsic\n+@cindex @code{ZABS} intrinsic\n+@cindex @code{CDABS} intrinsic\n @cindex absolute value\n \n @table @asis\n@@ -388,8 +388,8 @@ end program test_abs\n \n @node ACCESS\n @section @code{ACCESS} --- Checks file access modes\n-@findex @code{ACCESS} \n-@cindex file system functions\n+@cindex @code{ACCESS} \n+@cindex file system operations\n \n @table @asis\n @item @emph{Description}:\n@@ -445,7 +445,7 @@ end program access_test\n \n @node ACHAR\n @section @code{ACHAR} --- Character in @acronym{ASCII} collating sequence \n-@findex @code{ACHAR} intrinsic\n+@cindex @code{ACHAR} intrinsic\n @cindex @acronym{ASCII} collating sequence\n \n @table @asis\n@@ -484,8 +484,8 @@ end program test_achar\n \n @node ACOS\n @section @code{ACOS} --- Arccosine function \n-@findex @code{ACOS} intrinsic\n-@findex @code{DACOS} intrinsic\n+@cindex @code{ACOS} intrinsic\n+@cindex @code{DACOS} intrinsic\n @cindex trigonometric functions (inverse)\n \n @table @asis\n@@ -534,7 +534,7 @@ Inverse function: @ref{COS}\n \n @node ACOSH\n @section @code{ACOSH} --- Hyperbolic arccosine function\n-@findex @code{ACOSH} intrinsic\n+@cindex @code{ACOSH} intrinsic\n @cindex hyperbolic arccosine\n @cindex hyperbolic cosine (inverse)\n \n@@ -577,7 +577,7 @@ Inverse function: @ref{COSH}\n \n @node ADJUSTL\n @section @code{ADJUSTL} --- Left adjust a string \n-@findex @code{ADJUSTL} intrinsic\n+@cindex @code{ADJUSTL} intrinsic\n @cindex adjust string\n \n @table @asis\n@@ -618,7 +618,7 @@ end program test_adjustl\n \n @node ADJUSTR\n @section @code{ADJUSTR} --- Right adjust a string \n-@findex @code{ADJUSTR} intrinsic\n+@cindex @code{ADJUSTR} intrinsic\n @cindex adjust string\n \n @table @asis\n@@ -659,11 +659,11 @@ end program test_adjustr\n \n @node AIMAG\n @section @code{AIMAG} --- Imaginary part of complex number  \n-@findex @code{AIMAG} intrinsic\n-@findex @code{DIMAG} intrinsic\n-@findex @code{IMAG} intrinsic\n-@findex @code{IMAGPART} intrinsic\n-@cindex Imaginary part\n+@cindex @code{AIMAG} intrinsic\n+@cindex @code{DIMAG} intrinsic\n+@cindex @code{IMAG} intrinsic\n+@cindex @code{IMAGPART} intrinsic\n+@cindex imaginary part of a complex number\n \n @table @asis\n @item @emph{Description}:\n@@ -714,8 +714,8 @@ end program test_aimag\n \n @node AINT\n @section @code{AINT} --- Truncate to a whole number\n-@findex @code{AINT} intrinsic\n-@findex @code{DINT} intrinsic\n+@cindex @code{AINT} intrinsic\n+@cindex @code{DINT} intrinsic\n @cindex whole number\n \n @table @asis\n@@ -770,7 +770,7 @@ end program test_aint\n \n @node ALARM\n @section @code{ALARM} --- Execute a routine after a given delay\n-@findex @code{ALARM} intrinsic\n+@cindex @code{ALARM} intrinsic\n \n @table @asis\n @item @emph{Description}:\n@@ -819,7 +819,7 @@ after 3 seconds.\n \n @node ALL\n @section @code{ALL} --- All values in @var{MASK} along @var{DIM} are true \n-@findex @code{ALL} intrinsic\n+@cindex @code{ALL} intrinsic\n @cindex true values\n \n @table @asis\n@@ -885,7 +885,7 @@ end program test_all\n \n @node ALLOCATED\n @section @code{ALLOCATED} --- Status of an allocatable entity\n-@findex @code{ALLOCATED} intrinsic\n+@cindex @code{ALLOCATED} intrinsic\n @cindex allocation status\n \n @table @asis\n@@ -924,7 +924,7 @@ end program test_allocated\n \n @node AND\n @section @code{AND} --- Bitwise logical AND\n-@findex @code{AND} intrinsic\n+@cindex @code{AND} intrinsic\n @cindex bit operations\n \n @table @asis\n@@ -974,8 +974,8 @@ F95 elemental function: @ref{IAND}\n \n @node ANINT\n @section @code{ANINT} --- Nearest whole number\n-@findex @code{ANINT} intrinsic\n-@findex @code{DNINT} intrinsic\n+@cindex @code{ANINT} intrinsic\n+@cindex @code{DNINT} intrinsic\n @cindex whole number\n \n @table @asis\n@@ -1029,7 +1029,7 @@ end program test_anint\n \n @node ANY\n @section @code{ANY} --- Any value in @var{MASK} along @var{DIM} is true \n-@findex @code{ANY} intrinsic\n+@cindex @code{ANY} intrinsic\n @cindex true values\n \n @table @asis\n@@ -1096,8 +1096,8 @@ end program test_any\n \n @node ASIN\n @section @code{ASIN} --- Arcsine function \n-@findex @code{ASIN} intrinsic\n-@findex @code{DASIN} intrinsic\n+@cindex @code{ASIN} intrinsic\n+@cindex @code{DASIN} intrinsic\n @cindex trigonometric functions (inverse)\n \n @table @asis\n@@ -1146,7 +1146,7 @@ Inverse function: @ref{SIN}\n \n @node ASINH\n @section @code{ASINH} --- Hyperbolic arcsine function\n-@findex @code{ASINH} intrinsic\n+@cindex @code{ASINH} intrinsic\n @cindex hyperbolic arcsine\n @cindex hyperbolic sine (inverse)\n \n@@ -1188,7 +1188,7 @@ Inverse function: @ref{SINH}\n \n @node ASSOCIATED\n @section @code{ASSOCIATED} --- Status of a pointer or pointer/target pair \n-@findex @code{ASSOCIATED} intrinsic\n+@cindex @code{ASSOCIATED} intrinsic\n @cindex pointer status\n \n @table @asis\n@@ -1264,8 +1264,8 @@ end program test_associated\n \n @node ATAN\n @section @code{ATAN} --- Arctangent function \n-@findex @code{ATAN} intrinsic\n-@findex @code{DATAN} intrinsic\n+@cindex @code{ATAN} intrinsic\n+@cindex @code{DATAN} intrinsic\n @cindex trigonometric functions (inverse)\n \n @table @asis\n@@ -1313,8 +1313,8 @@ Inverse function: @ref{TAN}\n \n @node ATAN2\n @section @code{ATAN2} --- Arctangent function \n-@findex @code{ATAN2} intrinsic\n-@findex @code{DATAN2} intrinsic\n+@cindex @code{ATAN2} intrinsic\n+@cindex @code{DATAN2} intrinsic\n @cindex trigonometric functions (inverse)\n \n @table @asis\n@@ -1365,7 +1365,7 @@ end program test_atan2\n \n @node ATANH\n @section @code{ATANH} --- Hyperbolic arctangent function\n-@findex @code{ASINH} intrinsic\n+@cindex @code{ASINH} intrinsic\n @cindex hyperbolic arctangent\n @cindex hyperbolic tangent (inverse)\n \n@@ -1408,8 +1408,8 @@ Inverse function: @ref{TANH}\n \n @node BESJ0\n @section @code{BESJ0} --- Bessel function of the first kind of order 0\n-@findex @code{BESJ0} intrinsic\n-@findex @code{DBESJ0} intrinsic\n+@cindex @code{BESJ0} intrinsic\n+@cindex @code{DBESJ0} intrinsic\n @cindex Bessel\n \n @table @asis\n@@ -1454,8 +1454,8 @@ end program test_besj0\n \n @node BESJ1\n @section @code{BESJ1} --- Bessel function of the first kind of order 1\n-@findex @code{BESJ1} intrinsic\n-@findex @code{DBESJ1} intrinsic\n+@cindex @code{BESJ1} intrinsic\n+@cindex @code{DBESJ1} intrinsic\n @cindex Bessel\n \n @table @asis\n@@ -1500,8 +1500,8 @@ end program test_besj1\n \n @node BESJN\n @section @code{BESJN} --- Bessel function of the first kind\n-@findex @code{BESJN} intrinsic\n-@findex @code{DBESJN} intrinsic\n+@cindex @code{BESJN} intrinsic\n+@cindex @code{DBESJN} intrinsic\n @cindex Bessel\n \n @table @asis\n@@ -1547,8 +1547,8 @@ end program test_besjn\n \n @node BESY0\n @section @code{BESY0} --- Bessel function of the second kind of order 0\n-@findex @code{BESY0} intrinsic\n-@findex @code{DBESY0} intrinsic\n+@cindex @code{BESY0} intrinsic\n+@cindex @code{DBESY0} intrinsic\n @cindex Bessel\n \n @table @asis\n@@ -1592,8 +1592,8 @@ end program test_besy0\n \n @node BESY1\n @section @code{BESY1} --- Bessel function of the second kind of order 1\n-@findex @code{BESY1} intrinsic\n-@findex @code{DBESY1} intrinsic\n+@cindex @code{BESY1} intrinsic\n+@cindex @code{DBESY1} intrinsic\n @cindex Bessel\n \n @table @asis\n@@ -1637,8 +1637,8 @@ end program test_besy1\n \n @node BESYN\n @section @code{BESYN} --- Bessel function of the second kind\n-@findex @code{BESYN} intrinsic\n-@findex @code{DBESYN} intrinsic\n+@cindex @code{BESYN} intrinsic\n+@cindex @code{DBESYN} intrinsic\n @cindex Bessel\n \n @table @asis\n@@ -1684,8 +1684,9 @@ end program test_besyn\n \n @node BIT_SIZE\n @section @code{BIT_SIZE} --- Bit size inquiry function\n-@findex @code{BIT_SIZE} intrinsic\n-@cindex bit_size\n+@cindex @code{BIT_SIZE} intrinsic\n+@cindex bit size of a variable\n+@cindex size of a variable, in bits\n \n @table @asis\n @item @emph{Description}:\n@@ -1724,7 +1725,7 @@ end program test_bit_size\n \n @node BTEST\n @section @code{BTEST} --- Bit test function\n-@findex @code{BTEST} intrinsic\n+@cindex @code{BTEST} intrinsic\n @cindex bit operations\n \n @table @asis\n@@ -1768,8 +1769,8 @@ end program test_btest\n \n @node CEILING\n @section @code{CEILING} --- Integer ceiling function\n-@findex @code{CEILING} intrinsic\n-@cindex CEILING\n+@cindex @code{CEILING} intrinsic\n+@cindex ceiling\n \n @table @asis\n @item @emph{Description}:\n@@ -1812,7 +1813,7 @@ end program test_ceiling\n \n @node CHAR\n @section @code{CHAR} --- Character conversion function\n-@findex @code{CHAR} intrinsic\n+@cindex @code{CHAR} intrinsic\n @cindex conversion function (character)\n \n @table @asis\n@@ -1855,8 +1856,8 @@ end program test_char\n \n @node CHDIR\n @section @code{CHDIR} --- Change working directory\n-@findex @code{CHDIR} intrinsic\n-@cindex file system functions\n+@cindex @code{CHDIR} intrinsic\n+@cindex file system operations\n \n @table @asis\n @item @emph{Description}:\n@@ -1898,8 +1899,8 @@ END PROGRAM\n \n @node CHMOD\n @section @code{CHMOD} --- Change access permissions of files\n-@findex @code{CHMOD} \n-@cindex file system functions\n+@cindex @code{CHMOD} intrinsic\n+@cindex file system operations\n \n @table @asis\n @item @emph{Description}:\n@@ -1967,8 +1968,8 @@ end program chmod_test\n \n @node CMPLX\n @section @code{CMPLX} --- Complex conversion function\n-@findex @code{CMPLX} intrinsic\n-@cindex CMPLX\n+@cindex @code{CMPLX} intrinsic\n+@cindex complex numbers, conversion to\n \n @table @asis\n @item @emph{Description}:\n@@ -2012,9 +2013,8 @@ end program test_cmplx\n \n @node COMMAND_ARGUMENT_COUNT\n @section @code{COMMAND_ARGUMENT_COUNT} --- Get number of command line arguments\n-@findex @code{COMMAND_ARGUMENT_COUNT} intrinsic\n-@cindex command line arguments\n-@cindex getopt\n+@cindex @code{COMMAND_ARGUMENT_COUNT} intrinsic\n+@cindex command-line arguments, to program\n \n @table @asis\n @item @emph{Description}:\n@@ -2053,8 +2053,8 @@ end program test_command_argument_count\n \n @node CONJG\n @section @code{CONJG} --- Complex conjugate function \n-@findex @code{CONJG} intrinsic\n-@findex @code{DCONJG} intrinsic\n+@cindex @code{CONJG} intrinsic\n+@cindex @code{DCONJG} intrinsic\n @cindex complex conjugate\n @table @asis\n @item @emph{Description}:\n@@ -2101,10 +2101,10 @@ end program test_conjg\n \n @node COS\n @section @code{COS} --- Cosine function \n-@findex @code{COS} intrinsic\n-@findex @code{DCOS} intrinsic\n-@findex @code{ZCOS} intrinsic\n-@findex @code{CDCOS} intrinsic\n+@cindex @code{COS} intrinsic\n+@cindex @code{DCOS} intrinsic\n+@cindex @code{ZCOS} intrinsic\n+@cindex @code{CDCOS} intrinsic\n @cindex trigonometric functions\n \n @table @asis\n@@ -2157,8 +2157,8 @@ Inverse function: @ref{ACOS}\n \n @node COSH\n @section @code{COSH} --- Hyperbolic cosine function \n-@findex @code{COSH} intrinsic\n-@findex @code{DCOSH} intrinsic\n+@cindex @code{COSH} intrinsic\n+@cindex @code{DCOSH} intrinsic\n @cindex hyperbolic cosine\n \n @table @asis\n@@ -2206,7 +2206,7 @@ Inverse function: @ref{ACOSH}\n \n @node COUNT\n @section @code{COUNT} --- Count function\n-@findex @code{COUNT} intrinsic\n+@cindex @code{COUNT} intrinsic\n @cindex count\n \n @table @asis\n@@ -2265,8 +2265,9 @@ end program test_count\n \n @node CPU_TIME\n @section @code{CPU_TIME} --- CPU elapsed time in seconds\n-@findex @code{CPU_TIME} intrinsic\n-@cindex CPU_TIME\n+@cindex @code{CPU_TIME} intrinsic\n+@cindex time, elapsed\n+@cindex elapsed time\n \n @table @asis\n @item @emph{Description}:\n@@ -2306,8 +2307,8 @@ end program test_cpu_time\n \n @node CSHIFT\n @section @code{CSHIFT} --- Circular shift function\n-@findex @code{CSHIFT} intrinsic\n-@cindex bit manipulation\n+@cindex @code{CSHIFT} intrinsic\n+@cindex bit operations\n \n @table @asis\n @item @emph{Description}:\n@@ -2359,8 +2360,8 @@ end program test_cshift\n \n @node CTIME\n @section @code{CTIME} --- Convert a time into a string\n-@findex @code{CTIME} intrinsic\n-@cindex ctime subroutine \n+@cindex @code{CTIME} intrinsic\n+@cindex time, conversion function\n \n @table @asis\n @item @emph{Description}:\n@@ -2412,8 +2413,11 @@ end program test_ctime\n \n @node DATE_AND_TIME\n @section @code{DATE_AND_TIME} --- Date and time subroutine\n-@findex @code{DATE_AND_TIME} intrinsic\n-@cindex DATE_AND_TIME\n+@cindex @code{DATE_AND_TIME} intrinsic\n+@cindex date, current\n+@cindex current date\n+@cindex time, current\n+@cindex current time\n \n @table @asis\n @item @emph{Description}:\n@@ -2479,7 +2483,7 @@ end program test_time_and_date\n \n @node DBLE\n @section @code{DBLE} --- Double conversion function \n-@findex @code{DBLE} intrinsic\n+@cindex @code{DBLE} intrinsic\n @cindex double conversion\n \n @table @asis\n@@ -2521,8 +2525,8 @@ end program test_dble\n \n @node DCMPLX\n @section @code{DCMPLX} --- Double complex conversion function\n-@findex @code{DCMPLX} intrinsic\n-@cindex DCMPLX\n+@cindex @code{DCMPLX} intrinsic\n+@cindex complex numbers, conversion to\n \n @table @asis\n @item @emph{Description}:\n@@ -2569,7 +2573,7 @@ end program test_dcmplx\n \n @node DFLOAT\n @section @code{DFLOAT} --- Double conversion function \n-@findex @code{DFLOAT} intrinsic\n+@cindex @code{DFLOAT} intrinsic\n @cindex double float conversion\n \n @table @asis\n@@ -2609,7 +2613,7 @@ end program test_dfloat\n \n @node DIGITS\n @section @code{DIGITS} --- Significant digits function\n-@findex @code{DIGITS} intrinsic\n+@cindex @code{DIGITS} intrinsic\n @cindex digits, significant\n \n @table @asis\n@@ -2652,9 +2656,9 @@ end program test_digits\n \n @node DIM\n @section @code{DIM} --- Dim function\n-@findex @code{DIM} intrinsic\n-@findex @code{IDIM} intrinsic\n-@findex @code{DDIM} intrinsic\n+@cindex @code{DIM} intrinsic\n+@cindex @code{IDIM} intrinsic\n+@cindex @code{DDIM} intrinsic\n @cindex dim\n \n @table @asis\n@@ -2704,8 +2708,8 @@ end program test_dim\n \n @node DOT_PRODUCT\n @section @code{DOT_PRODUCT} --- Dot product function\n-@findex @code{DOT_PRODUCT} intrinsic\n-@cindex Dot product\n+@cindex @code{DOT_PRODUCT} intrinsic\n+@cindex dot product\n \n @table @asis\n @item @emph{Description}:\n@@ -2755,8 +2759,8 @@ end program test_dot_prod\n \n @node DPROD\n @section @code{DPROD} --- Double product function\n-@findex @code{DPROD} intrinsic\n-@cindex Double product\n+@cindex @code{DPROD} intrinsic\n+@cindex double-precision product\n \n @table @asis\n @item @emph{Description}:\n@@ -2797,8 +2801,8 @@ end program test_dprod\n \n @node DREAL\n @section @code{DREAL} --- Double real part function\n-@findex @code{DREAL} intrinsic\n-@cindex Double real part\n+@cindex @code{DREAL} intrinsic\n+@cindex double-precision real part\n \n @table @asis\n @item @emph{Description}:\n@@ -2838,8 +2842,9 @@ end program test_dreal\n \n @node DTIME\n @section @code{DTIME} --- Execution time subroutine (or function)\n-@findex @code{DTIME} intrinsic\n-@cindex dtime subroutine \n+@cindex @code{DTIME} intrinsic\n+@cindex time, elapsed\n+@cindex elapsed time\n \n @table @asis\n @item @emph{Description}:\n@@ -2915,8 +2920,8 @@ end program test_dtime\n \n @node EOSHIFT\n @section @code{EOSHIFT} --- End-off shift function\n-@findex @code{EOSHIFT} intrinsic\n-@cindex bit manipulation\n+@cindex @code{EOSHIFT} intrinsic\n+@cindex bit operations\n \n @table @asis\n @item @emph{Description}:\n@@ -2980,7 +2985,7 @@ end program test_eoshift\n \n @node EPSILON\n @section @code{EPSILON} --- Epsilon function\n-@findex @code{EPSILON} intrinsic\n+@cindex @code{EPSILON} intrinsic\n @cindex epsilon, significant\n \n @table @asis\n@@ -3019,7 +3024,7 @@ end program test_epsilon\n \n @node ERF\n @section @code{ERF} --- Error function \n-@findex @code{ERF} intrinsic\n+@cindex @code{ERF} intrinsic\n @cindex error function\n \n @table @asis\n@@ -3063,7 +3068,7 @@ end program test_erf\n \n @node ERFC\n @section @code{ERFC} --- Error function \n-@findex @code{ERFC} intrinsic\n+@cindex @code{ERFC} intrinsic\n @cindex error function\n \n @table @asis\n@@ -3107,8 +3112,8 @@ end program test_erfc\n \n @node ETIME\n @section @code{ETIME} --- Execution time subroutine (or function)\n-@findex @code{ETIME} intrinsic\n-@cindex time functions\n+@cindex @code{ETIME} intrinsic\n+@cindex time, elapsed\n \n @table @asis\n @item @emph{Description}:\n@@ -3184,8 +3189,8 @@ end program test_etime\n \n @node EXIT\n @section @code{EXIT} --- Exit the program with status. \n-@findex @code{EXIT}\n-@cindex exit\n+@cindex @code{EXIT} intrinsic\n+@cindex exit program\n \n @table @asis\n @item @emph{Description}:\n@@ -3227,10 +3232,10 @@ end program test_exit\n \n @node EXP\n @section @code{EXP} --- Exponential function \n-@findex @code{EXP} intrinsic\n-@findex @code{DEXP} intrinsic\n-@findex @code{ZEXP} intrinsic\n-@findex @code{CDEXP} intrinsic\n+@cindex @code{EXP} intrinsic\n+@cindex @code{DEXP} intrinsic\n+@cindex @code{ZEXP} intrinsic\n+@cindex @code{CDEXP} intrinsic\n @cindex exponential\n \n @table @asis\n@@ -3277,8 +3282,8 @@ end program test_exp\n \n @node EXPONENT\n @section @code{EXPONENT} --- Exponent function \n-@findex @code{EXPONENT} intrinsic\n-@cindex exponent function\n+@cindex @code{EXPONENT} intrinsic\n+@cindex exponent part of a real number\n \n @table @asis\n @item @emph{Description}:\n@@ -3317,14 +3322,17 @@ end program test_exponent\n \n @node FDATE\n @section @code{FDATE} --- Get the current time as a string\n-@findex @code{FDATE} intrinsic\n-@cindex fdate subroutine \n+@cindex @code{FDATE} intrinsic\n+@cindex time, current\n+@cindex current time\n+@cindex date, current\n+@cindex current date\n \n @table @asis\n @item @emph{Description}:\n @code{FDATE(DATE)} returns the current date (using the same format as\n @code{CTIME}) in @var{DATE}. It is equivalent to @code{CALL CTIME(DATE,\n-TIME8())}.\n+TIME())}.\n \n If @code{FDATE} is invoked as a function, it can not be invoked as a\n subroutine, and vice versa.\n@@ -3370,7 +3378,7 @@ end program test_fdate\n @node FLOAT\n \n @section @code{FLOAT} --- Convert integer to default real\n-@findex @code{FLOAT} intrinsic\n+@cindex @code{FLOAT} intrinsic\n @cindex conversion function (float)\n \n @table @asis\n@@ -3410,7 +3418,7 @@ end program test_float\n \n @node FGET\n @section @code{FGET} --- Read a single character in stream mode from stdin \n-@findex @code{FGET} intrinsic\n+@cindex @code{FGET} intrinsic\n @cindex file operations\n @cindex stream operations\n \n@@ -3465,7 +3473,7 @@ END PROGRAM\n \n @node FGETC\n @section @code{FGETC} --- Read a single character in stream mode\n-@findex @code{FGETC} intrinsic\n+@cindex @code{FGETC} intrinsic\n @cindex file operations\n @cindex stream operations\n \n@@ -3521,7 +3529,7 @@ END PROGRAM\n \n @node FLOOR\n @section @code{FLOOR} --- Integer floor function\n-@findex @code{FLOOR} intrinsic\n+@cindex @code{FLOOR} intrinsic\n @cindex floor\n \n @table @asis\n@@ -3565,8 +3573,8 @@ end program test_floor\n \n @node FLUSH\n @section @code{FLUSH} --- Flush I/O unit(s)\n-@findex @code{FLUSH}\n-@cindex flush\n+@cindex @code{FLUSH} intrinsic\n+@cindex flush output files\n \n @table @asis\n @item @emph{Description}:\n@@ -3597,7 +3605,7 @@ statement that should be preferred over the @code{FLUSH} intrinsic.\n \n @node FNUM\n @section @code{FNUM} --- File number function\n-@findex @code{FNUM} intrinsic\n+@cindex @code{FNUM} intrinsic\n @cindex fnum\n \n @table @asis\n@@ -3638,7 +3646,7 @@ end program test_fnum\n \n @node FPUT\n @section @code{FPUT} --- Write a single character in stream mode to stdout \n-@findex @code{FPUT} intrinsic\n+@cindex @code{FPUT} intrinsic\n @cindex file operations\n @cindex stream operations\n \n@@ -3688,7 +3696,7 @@ END PROGRAM\n \n @node FPUTC\n @section @code{FPUTC} --- Write a single character in stream mode\n-@findex @code{FPUTC} intrinsic\n+@cindex @code{FPUTC} intrinsic\n @cindex file operations\n @cindex stream operations\n \n@@ -3742,7 +3750,7 @@ END PROGRAM\n \n @node FRACTION\n @section @code{FRACTION} --- Fractional part of the model representation\n-@findex @code{FRACTION} intrinsic\n+@cindex @code{FRACTION} intrinsic\n @cindex fractional part\n \n @table @asis\n@@ -3784,8 +3792,8 @@ end program test_fraction\n \n @node FREE\n @section @code{FREE} --- Frees memory\n-@findex @code{FREE} intrinsic\n-@cindex FREE\n+@cindex @code{FREE} intrinsic\n+@cindex Cray pointers\n \n @table @asis\n @item @emph{Description}:\n@@ -3825,7 +3833,7 @@ See @code{MALLOC} for an example.\n \n @node FSTAT\n @section @code{FSTAT} --- Get file status\n-@findex @code{FSTAT} intrinsic\n+@cindex @code{FSTAT} intrinsic\n @cindex file system operations \n \n @table @asis\n@@ -3863,8 +3871,8 @@ To stat a link: @ref{LSTAT}, to stat a file: @ref{STAT}\n \n @node FSEEK\n @section @code{FSEEK} --- Low level file positioning subroutine\n-@findex @code{FSEEK} \n-@cindex file system functions\n+@cindex @code{FSEEK} intrinsic\n+@cindex file system operations\n \n Not yet implemented in GNU Fortran.\n \n@@ -3891,7 +3899,7 @@ Subroutine\n \n @node FTELL\n @section @code{FTELL} --- Current stream position\n-@findex @code{FTELL} intrinsic\n+@cindex @code{FTELL} intrinsic\n \n @table @asis\n @item @emph{Description}:\n@@ -3940,9 +3948,8 @@ END PROGRAM\n \n @node GETARG\n @section @code{GETARG} --- Get command line arguments\n-@findex @code{GETARG} intrinsic\n-@cindex command line arguments\n-@cindex getopt\n+@cindex @code{GETARG} intrinsic\n+@cindex command-line arguments, to program\n \n @table @asis\n @item @emph{Description}:\n@@ -4000,9 +4007,8 @@ F2003 functions and subroutines: @ref{GET_COMMAND}, @ref{GET_COMMAND_ARGUMENT},\n \n @node GET_COMMAND\n @section @code{GET_COMMAND} --- Get the entire command line\n-@findex @code{GET_COMMAND} intrinsic\n-@cindex command line arguments\n-@cindex getopt\n+@cindex @code{GET_COMMAND} intrinsic\n+@cindex command-line arguments, to program\n \n @table @asis\n @item @emph{Description}:\n@@ -4043,9 +4049,8 @@ END PROGRAM\n \n @node GET_COMMAND_ARGUMENT\n @section @code{GET_COMMAND_ARGUMENT} --- Get command line arguments\n-@findex @code{GET_COMMAND_ARGUMENT} intrinsic\n-@cindex command line arguments\n-@cindex getopt\n+@cindex @code{GET_COMMAND_ARGUMENT} intrinsic\n+@cindex command-line arguments, to program\n \n @table @asis\n @item @emph{Description}:\n@@ -4100,8 +4105,8 @@ END PROGRAM\n \n @node GETCWD\n @section @code{GETCWD} --- Get current working directory\n-@findex @code{GETCWD} intrinsic\n-@cindex file system functions\n+@cindex @code{GETCWD} intrinsic\n+@cindex file system operations\n \n @table @asis\n @item @emph{Description}:\n@@ -4140,7 +4145,7 @@ END PROGRAM\n \n @node GETENV\n @section @code{GETENV} --- Get an environmental variable\n-@findex @code{GETENV} intrinsic\n+@cindex @code{GETENV} intrinsic\n @cindex environment variable\n \n @table @asis\n@@ -4189,7 +4194,7 @@ END PROGRAM\n \n @node GET_ENVIRONMENT_VARIABLE\n @section @code{GET_ENVIRONMENT_VARIABLE} --- Get an environmental variable\n-@findex @code{GET_ENVIRONMENT_VARIABLE} intrinsic\n+@cindex @code{GET_ENVIRONMENT_VARIABLE} intrinsic\n @cindex environment variable\n \n @table @asis\n@@ -4230,8 +4235,8 @@ END PROGRAM\n \n @node GETGID\n @section @code{GETGID} --- Group ID function\n-@findex @code{GETGID} intrinsic\n-@cindex GETGID\n+@cindex @code{GETGID} intrinsic\n+@cindex file system operations\n \n @table @asis\n @item @emph{Description}:\n@@ -4262,7 +4267,7 @@ See @code{GETPID} for an example.\n \n @node GETLOG\n @section @code{GETLOG} --- Get login name\n-@findex @code{GETLOG} intrinsic\n+@cindex @code{GETLOG} intrinsic\n \n @table @asis\n @item @emph{Description}:\n@@ -4304,8 +4309,8 @@ END PROGRAM\n \n @node GETPID\n @section @code{GETPID} --- Process ID function\n-@findex @code{GETPID} intrinsic\n-@cindex GETPID\n+@cindex @code{GETPID} intrinsic\n+@cindex process ID, current\n \n @table @asis\n @item @emph{Description}:\n@@ -4342,8 +4347,8 @@ end program info\n \n @node GETUID\n @section @code{GETUID} --- User ID function\n-@findex @code{GETUID} intrinsic\n-@cindex GETUID\n+@cindex @code{GETUID} intrinsic\n+@cindex user ID, current\n \n @table @asis\n @item @emph{Description}:\n@@ -4374,8 +4379,8 @@ See @code{GETPID} for an example.\n \n @node GMTIME\n @section @code{GMTIME} --- Convert time to GMT info\n-@findex @code{GMTIME} \n-@cindex time function\n+@cindex @code{GMTIME} intrinsic\n+@cindex time, conversion function\n \n Not yet implemented in GNU Fortran.\n \n@@ -4401,7 +4406,7 @@ Subroutine\n \n @node HOSTNM\n @section @code{HOSTNM} --- Get system host name\n-@findex @code{HOSTNM} intrinsic\n+@cindex @code{HOSTNM} intrinsic\n \n @table @asis\n @item @emph{Description}:\n@@ -4440,7 +4445,7 @@ be obtained, or to a blank string otherwise.\n \n @node HUGE\n @section @code{HUGE} --- Largest number of a kind\n-@findex @code{HUGE} intrinsic\n+@cindex @code{HUGE} intrinsic\n @cindex huge\n \n @table @asis\n@@ -4478,7 +4483,7 @@ end program test_huge_tiny\n \n @node IACHAR\n @section @code{IACHAR} --- Code in @acronym{ASCII} collating sequence \n-@findex @code{IACHAR} intrinsic\n+@cindex @code{IACHAR} intrinsic\n @cindex @acronym{ASCII} collating sequence\n @cindex conversion function (character)\n \n@@ -4521,7 +4526,7 @@ end program test_iachar\n \n @node IAND\n @section @code{IAND} --- Bitwise logical and\n-@findex @code{IAND} intrinsic\n+@cindex @code{IAND} intrinsic\n @cindex bit operations\n \n @table @asis\n@@ -4563,9 +4568,8 @@ END PROGRAM\n \n @node IARGC\n @section @code{IARGC} --- Get the number of command line arguments\n-@findex @code{IARGC} intrinsic\n-@cindex command line arguments\n-@cindex getopt\n+@cindex @code{IARGC} intrinsic\n+@cindex command-line arguments, to program\n \n @table @asis\n @item @emph{Description}:\n@@ -4605,7 +4609,7 @@ F2003 functions and subroutines: @ref{GET_COMMAND}, @ref{GET_COMMAND_ARGUMENT},\n \n @node IBCLR\n @section @code{IBCLR} --- Clear bit\n-@findex @code{IBCLR} intrinsic\n+@cindex @code{IBCLR} intrinsic\n @cindex bit operations\n \n Intrinsic implemented, documentation pending.\n@@ -4633,7 +4637,7 @@ Elemental function\n \n @node IBITS\n @section @code{IBITS} --- Bit extraction\n-@findex @code{IBITS} intrinsic\n+@cindex @code{IBITS} intrinsic\n @cindex bit operations\n \n Intrinsic implemented, documentation pending.\n@@ -4661,7 +4665,7 @@ Elemental function\n \n @node IBSET\n @section @code{IBSET} --- Set bit\n-@findex @code{IBSET} intrinsic\n+@cindex @code{IBSET} intrinsic\n @cindex bit operations\n \n Intrinsic implemented, documentation pending.\n@@ -4689,7 +4693,7 @@ Elemental function\n \n @node ICHAR\n @section @code{ICHAR} --- Character-to-integer conversion function\n-@findex @code{ICHAR} intrinsic\n+@cindex @code{ICHAR} intrinsic\n @cindex conversion function (character)\n \n @table @asis\n@@ -4747,7 +4751,7 @@ end program read_val\n \n @node IDATE\n @section @code{IDATE} --- Get current local time subroutine (day/month/year) \n-@findex @code{IDATE} intrinsic\n+@cindex @code{IDATE} intrinsic\n \n @table @asis\n @item @emph{Description}:\n@@ -4790,7 +4794,7 @@ end program test_idate\n \n @node IEOR\n @section @code{IEOR} --- Bitwise logical exclusive or\n-@findex @code{IEOR} intrinsic\n+@cindex @code{IEOR} intrinsic\n @cindex bit operations\n \n Intrinsic implemented, documentation pending.\n@@ -4818,7 +4822,7 @@ Elemental function\n \n @node IERRNO\n @section @code{IERRNO} --- Get the last system error number\n-@findex @code{IERRNO} intrinsic\n+@cindex @code{IERRNO} intrinsic\n @cindex undocumented intrinsic \n \n Intrinsic implemented, documentation pending.\n@@ -4843,7 +4847,7 @@ GNU extension\n \n @node INDEX\n @section @code{INDEX} --- Position of a substring within a string\n-@findex @code{INDEX} intrinsic\n+@cindex @code{INDEX} intrinsic\n @cindex undocumented intrinsic \n \n Intrinsic implemented, documentation pending.\n@@ -4869,9 +4873,9 @@ Elemental function\n \n @node INT\n @section @code{INT} --- Convert to integer type\n-@findex @code{INT} intrinsic\n-@findex @code{IFIX} intrinsic\n-@findex @code{IDINT} intrinsic\n+@cindex @code{INT} intrinsic\n+@cindex @code{IFIX} intrinsic\n+@cindex @code{IDINT} intrinsic\n @cindex conversion function (integer)\n \n @table @asis\n@@ -4936,7 +4940,7 @@ end program\n \n @node IOR\n @section @code{IOR} --- Bitwise logical or\n-@findex @code{IOR} intrinsic\n+@cindex @code{IOR} intrinsic\n @cindex bit operations\n \n Intrinsic implemented, documentation pending.\n@@ -4964,8 +4968,8 @@ Elemental function\n \n @node IRAND\n @section @code{IRAND} --- Integer pseudo-random number\n-@findex @code{IRAND} intrinsic\n-@cindex random number\n+@cindex @code{IRAND} intrinsic\n+@cindex random numbers\n \n @table @asis\n @item @emph{Description}:\n@@ -5010,8 +5014,8 @@ end program test_irand\n \n @node ISHFT\n @section @code{ISHFT} --- Shift bits\n-@findex @code{ISHFT} intrinsic\n-@cindex bit manipulation\n+@cindex @code{ISHFT} intrinsic\n+@cindex bit operations\n \n Intrinsic implemented, documentation pending.\n \n@@ -5038,8 +5042,8 @@ Elemental function\n \n @node ISHFTC\n @section @code{ISHFTC} --- Shift bits circularly\n-@findex @code{ISHFTC} intrinsic\n-@cindex bit manipulation\n+@cindex @code{ISHFTC} intrinsic\n+@cindex bit operations\n \n Intrinsic implemented, documentation pending.\n \n@@ -5065,7 +5069,7 @@ Elemental function\n \n @node ITIME\n @section @code{ITIME} --- Get current local time subroutine (hour/minutes/seconds) \n-@findex @code{ITIME} intrinsic\n+@cindex @code{ITIME} intrinsic\n \n @table @asis\n @item @emph{Description}:\n@@ -5109,7 +5113,7 @@ end program test_itime\n \n @node KILL\n @section @code{KILL} --- Send a signal to a process\n-@findex @code{KILL} intrinsic\n+@cindex @code{KILL} intrinsic\n @cindex undocumented intrinsic \n \n Intrinsic implemented, documentation pending.\n@@ -5136,7 +5140,7 @@ Subroutine\n \n @node KIND\n @section @code{KIND} --- Kind of an entity\n-@findex @code{KIND} intrinsic\n+@cindex @code{KIND} intrinsic\n \n @table @asis\n @item @emph{Description}:\n@@ -5178,7 +5182,7 @@ end program test_kind\n \n @node LBOUND\n @section @code{LBOUND} --- Lower dimension bounds of an array\n-@findex @code{LBOUND} intrinsic\n+@cindex @code{LBOUND} intrinsic\n @cindex undocumented intrinsic \n \n Intrinsic implemented, documentation pending.\n@@ -5204,7 +5208,7 @@ Inquiry function\n \n @node LEN\n @section @code{LEN} --- Length of a character entity\n-@findex @code{LEN} intrinsic\n+@cindex @code{LEN} intrinsic\n @cindex undocumented intrinsic \n \n Intrinsic implemented, documentation pending.\n@@ -5232,7 +5236,7 @@ Inquiry function\n \n @node LEN_TRIM\n @section @code{LEN_TRIM} --- Length of a character entity without trailing blank characters\n-@findex @code{LEN_TRIM} intrinsic\n+@cindex @code{LEN_TRIM} intrinsic\n @cindex undocumented intrinsic \n \n Intrinsic implemented, documentation pending.\n@@ -5259,7 +5263,7 @@ Elemental function\n \n @node LGE\n @section @code{LGE} --- Lexical greater than or equal\n-@findex @code{LGE} intrinsic\n+@cindex @code{LGE} intrinsic\n @cindex comparison (lexical)\n \n Intrinsic implemented, documentation pending.\n@@ -5286,7 +5290,7 @@ Elemental function\n \n @node LGT\n @section @code{LGT} --- Lexical greater than\n-@findex @code{LGT} intrinsic\n+@cindex @code{LGT} intrinsic\n @cindex comparison (lexical)\n \n Intrinsic implemented, documentation pending.\n@@ -5313,7 +5317,7 @@ Elemental function\n \n @node LINK\n @section @code{LINK} --- Create a hard link\n-@findex @code{LINK} intrinsic\n+@cindex @code{LINK} intrinsic\n @cindex file system operations\n \n Intrinsic implemented, documentation pending.\n@@ -5341,7 +5345,7 @@ Subroutine\n \n @node LLE\n @section @code{LLE} --- Lexical less than or equal\n-@findex @code{LLE} intrinsic\n+@cindex @code{LLE} intrinsic\n @cindex comparison (lexical)\n \n Intrinsic implemented, documentation pending.\n@@ -5368,7 +5372,7 @@ Elemental function\n \n @node LLT\n @section @code{LLT} --- Lexical less than\n-@findex @code{LLT} intrinsic\n+@cindex @code{LLT} intrinsic\n @cindex comparison (lexical)\n \n Intrinsic implemented, documentation pending.\n@@ -5395,7 +5399,7 @@ Elemental function\n \n @node LNBLNK\n @section @code{LNBLNK} --- Index of the last non-blank character in a string\n-@findex @code{LNBLNK} intrinsic\n+@cindex @code{LNBLNK} intrinsic\n @cindex undocumented intrinsic \n \n Intrinsic implemented, documentation pending.\n@@ -5421,8 +5425,8 @@ GNU extension\n \n @node LOC\n @section @code{LOC} --- Returns the address of a variable\n-@findex @code{LOC} intrinsic\n-@cindex loc\n+@cindex @code{LOC} intrinsic\n+@cindex location of a variable in memory\n \n @table @asis\n @item @emph{Description}:\n@@ -5460,12 +5464,12 @@ end program test_loc\n \n @node LOG\n @section @code{LOG} --- Logarithm function\n-@findex @code{LOG} intrinsic\n-@findex @code{ALOG} intrinsic\n-@findex @code{DLOG} intrinsic\n-@findex @code{CLOG} intrinsic\n-@findex @code{ZLOG} intrinsic\n-@findex @code{CDLOG} intrinsic\n+@cindex @code{LOG} intrinsic\n+@cindex @code{ALOG} intrinsic\n+@cindex @code{DLOG} intrinsic\n+@cindex @code{CLOG} intrinsic\n+@cindex @code{ZLOG} intrinsic\n+@cindex @code{CDLOG} intrinsic\n @cindex logarithm\n \n @table @asis\n@@ -5516,9 +5520,9 @@ end program test_log\n \n @node LOG10\n @section @code{LOG10} --- Base 10 logarithm function\n-@findex @code{LOG10} intrinsic\n-@findex @code{ALOG10} intrinsic\n-@findex @code{DLOG10} intrinsic\n+@cindex @code{LOG10} intrinsic\n+@cindex @code{ALOG10} intrinsic\n+@cindex @code{DLOG10} intrinsic\n @cindex logarithm\n \n @table @asis\n@@ -5563,7 +5567,7 @@ end program test_log10\n \n @node LOGICAL\n @section @code{LOGICAL} --- Convert to logical type\n-@findex @code{LOGICAL} intrinsic\n+@cindex @code{LOGICAL} intrinsic\n @cindex conversion function (logical)\n \n Intrinsic implemented, documentation pending.\n@@ -5589,8 +5593,8 @@ Elemental function\n \n @node LSHIFT\n @section @code{LSHIFT} --- Left shift bits\n-@findex @code{LSHIFT} \n-@cindex bit manipulation\n+@cindex @code{LSHIFT} intrinsic\n+@cindex bit operations\n \n Not yet implemented in GNU Fortran.\n \n@@ -5615,7 +5619,7 @@ Function\n \n @node LSTAT\n @section @code{LSTAT} --- Get file status\n-@findex @code{LSTAT} intrinsic\n+@cindex @code{LSTAT} intrinsic\n @cindex file system operations \n \n @table @asis\n@@ -5653,8 +5657,8 @@ To stat an open file: @ref{FSTAT}, to stat a file: @ref{STAT}\n \n @node LTIME\n @section @code{LTIME} --- Convert time to local time info\n-@findex @code{LTIME} \n-@cindex time function\n+@cindex @code{LTIME} intrinsic\n+@cindex time, conversion function\n \n Not yet implemented in GNU Fortran.\n \n@@ -5680,8 +5684,8 @@ Subroutine\n \n @node MALLOC\n @section @code{MALLOC} --- Allocate dynamic memory\n-@findex @code{MALLOC} intrinsic\n-@cindex MALLOC\n+@cindex @code{MALLOC} intrinsic\n+@cindex Cray pointers\n \n @table @asis\n @item @emph{Description}:\n@@ -5745,7 +5749,7 @@ end program test_malloc\n \n @node MATMUL\n @section @code{MATMUL} --- matrix multiplication\n-@findex @code{MATMUL} intrinsic\n+@cindex @code{MATMUL} intrinsic\n @cindex matrix operations\n \n Intrinsic implemented, documentation pending.\n@@ -5768,7 +5772,7 @@ Transformational function\n \n @node MAX\n @section @code{MAX} --- Maximum value of an argument list\n-@findex @code{MAX} intrinsic\n+@cindex @code{MAX} intrinsic\n @cindex undocumented intrinsic \n \n Intrinsic implemented, documentation pending.\n@@ -5803,8 +5807,9 @@ Elemental function\n \n @node MAXEXPONENT\n @section @code{MAXEXPONENT} --- Maximum exponent of a real kind\n-@findex @code{MAXEXPONENT} intrinsic\n-@cindex MAXEXPONENT\n+@cindex @code{MAXEXPONENT} intrinsic\n+@cindex maximum exponent\n+@cindex exponent, maximum\n \n @table @asis\n @item @emph{Description}:\n@@ -5844,7 +5849,7 @@ end program exponents\n \n @node MAXLOC\n @section @code{MAXLOC} --- Location of the maximum value within an array\n-@findex @code{MAXLOC} intrinsic\n+@cindex @code{MAXLOC} intrinsic\n @cindex undocumented intrinsic \n \n Intrinsic implemented, documentation pending.\n@@ -5869,7 +5874,7 @@ Transformational function\n \n @node MAXVAL\n @section @code{MAXVAL} --- Maximum value of an array\n-@findex @code{MAXVAL} intrinsic\n+@cindex @code{MAXVAL} intrinsic\n @cindex undocumented intrinsic \n \n Intrinsic implemented, documentation pending.\n@@ -5897,7 +5902,7 @@ Transformational function\n \n @node MERGE\n @section @code{MERGE} --- Merge arrays\n-@findex @code{MERGE} intrinsic\n+@cindex @code{MERGE} intrinsic\n @cindex undocumented intrinsic \n \n Intrinsic implemented, documentation pending.\n@@ -5921,7 +5926,7 @@ elemental function\n \n @node MIN\n @section @code{MIN} --- Minimum value of an argument list\n-@findex @code{MIN} intrinsic\n+@cindex @code{MIN} intrinsic\n @cindex undocumented intrinsic \n \n Intrinsic implemented, documentation pending.\n@@ -5955,8 +5960,9 @@ Elemental function\n \n @node MINEXPONENT\n @section @code{MINEXPONENT} --- Minimum exponent of a real kind\n-@findex @code{MINEXPONENT} intrinsic\n-@cindex MINEXPONENT\n+@cindex @code{MINEXPONENT} intrinsic\n+@cindex minimum exponent\n+@cindex exponent, minimum\n \n @table @asis\n @item @emph{Description}:\n@@ -5988,7 +5994,7 @@ See @code{MAXEXPONENT} for an example.\n \n @node MINLOC\n @section @code{MINLOC} --- Location of the minimum value within an array\n-@findex @code{MINLOC} intrinsic\n+@cindex @code{MINLOC} intrinsic\n @cindex undocumented intrinsic \n \n Intrinsic implemented, documentation pending.\n@@ -6014,7 +6020,7 @@ Transformational function\n \n @node MINVAL\n @section @code{MINVAL} --- Minimum value of an array\n-@findex @code{MINVAL} intrinsic\n+@cindex @code{MINVAL} intrinsic\n @cindex undocumented intrinsic \n \n Intrinsic implemented, documentation pending.\n@@ -6041,9 +6047,9 @@ Transformational function\n \n @node MOD\n @section @code{MOD} --- Remainder function\n-@findex @code{MOD} intrinsic\n-@findex @code{AMOD} intrinsic\n-@findex @code{DMOD} intrinsic\n+@cindex @code{MOD} intrinsic\n+@cindex @code{AMOD} intrinsic\n+@cindex @code{DMOD} intrinsic\n @cindex remainder\n \n @table @asis\n@@ -6103,7 +6109,7 @@ end program test_mod\n \n @node MODULO\n @section @code{MODULO} --- Modulo function\n-@findex @code{MODULO} intrinsic\n+@cindex @code{MODULO} intrinsic\n @cindex modulo\n \n @table @asis\n@@ -6157,7 +6163,7 @@ end program test_mod\n \n @node MVBITS\n @section @code{MVBITS} --- Move bits from one integer to another\n-@findex @code{MVBITS} intrinsic\n+@cindex @code{MVBITS} intrinsic\n @cindex bit operations\n \n Intrinsic implemented, documentation pending.\n@@ -6182,8 +6188,9 @@ Elemental subroutine\n \n @node MOVE_ALLOC\n @section @code{MOVE_ALLOC} --- Move allocation from one object to another\n-@findex @code{MOVE_ALLOC} intrinsic\n-@cindex MOVE_ALLOC\n+@cindex @code{MOVE_ALLOC} intrinsic\n+@cindex moving allocation\n+@cindex allocation, moving\n \n @table @asis\n @item @emph{Description}:\n@@ -6226,7 +6233,7 @@ end program test_move_alloc\n \n @node NEAREST\n @section @code{NEAREST} --- Nearest representable number\n-@findex @code{NEAREST} intrinsic\n+@cindex @code{NEAREST} intrinsic\n @cindex processor-representable number\n \n @table @asis\n@@ -6272,8 +6279,8 @@ end program test_nearest\n \n @node NEW_LINE\n @section @code{NEW_LINE} --- New line character\n-@findex @code{NEW_LINE} intrinsic\n-@findex @code{NEW_LINE} intrinsic\n+@cindex @code{NEW_LINE} intrinsic\n+@cindex @code{NEW_LINE} intrinsic\n \n @table @asis\n @item @emph{Description}:\n@@ -6311,8 +6318,8 @@ end program newline\n \n @node NINT\n @section @code{NINT} --- Nearest whole number\n-@findex @code{NINT} intrinsic\n-@findex @code{IDNINT} intrinsic\n+@cindex @code{NINT} intrinsic\n+@cindex @code{IDNINT} intrinsic\n @cindex whole number\n \n @table @asis\n@@ -6363,7 +6370,7 @@ end program test_nint\n \n @node NOT\n @section @code{NOT} --- Logical negation\n-@findex @code{NOT} intrinsic\n+@cindex @code{NOT} intrinsic\n @cindex logical operations\n \n Intrinsic implemented, documentation pending.\n@@ -6388,7 +6395,7 @@ Elemental function\n \n @node NULL\n @section @code{NULL} --- Function that returns an disassociated pointer\n-@findex @code{NULL} intrinsic\n+@cindex @code{NULL} intrinsic\n @cindex undocumented intrinsic \n \n Intrinsic implemented, documentation pending.\n@@ -6414,7 +6421,7 @@ Transformational function\n \n @node OR\n @section @code{OR} --- Bitwise logical OR\n-@findex @code{OR} intrinsic\n+@cindex @code{OR} intrinsic\n @cindex bit operations\n \n @table @asis\n@@ -6465,7 +6472,7 @@ F95 elemental function: @ref{IOR}\n \n @node PACK\n @section @code{PACK} --- Pack an array into an array of rank one\n-@findex @code{PACK} intrinsic\n+@cindex @code{PACK} intrinsic\n @cindex undocumented intrinsic \n \n Intrinsic implemented, documentation pending.\n@@ -6492,7 +6499,7 @@ Transformational function\n \n @node PERROR\n @section @code{PERROR} --- Print system error message\n-@findex @code{PERROR} intrinsic\n+@cindex @code{PERROR} intrinsic\n @cindex undocumented intrinsic \n \n Intrinsic implemented, documentation pending.\n@@ -6519,8 +6526,8 @@ Subroutine\n \n @node PRECISION\n @section @code{PRECISION} --- Decimal precision of a real kind\n-@findex @code{PRECISION} intrinsic\n-@cindex PRECISION\n+@cindex @code{PRECISION} intrinsic\n+@cindex precision of a real variable\n \n @table @asis\n @item @emph{Description}:\n@@ -6561,7 +6568,7 @@ end program prec_and_range\n \n @node PRESENT\n @section @code{PRESENT} --- Determine whether an optional argument is specified\n-@findex @code{PRESENT} intrinsic\n+@cindex @code{PRESENT} intrinsic\n @cindex undocumented intrinsic \n \n Intrinsic implemented, documentation pending.\n@@ -6586,7 +6593,7 @@ Inquiry function\n \n @node PRODUCT\n @section @code{PRODUCT} --- Product of array elements\n-@findex @code{PRODUCT} intrinsic\n+@cindex @code{PRODUCT} intrinsic\n @cindex undocumented intrinsic \n \n Intrinsic implemented, documentation pending.\n@@ -6613,7 +6620,7 @@ Transformational function\n \n @node RADIX\n @section @code{RADIX} --- Base of a model number\n-@findex @code{RADIX} intrinsic\n+@cindex @code{RADIX} intrinsic\n @cindex base\n \n @table @asis\n@@ -6652,7 +6659,7 @@ end program test_radix\n \n @node RANDOM_NUMBER\n @section @code{RANDOM_NUMBER} --- Pseudo-random number\n-@findex @code{RANDOM_NUMBER} intrinsic\n+@cindex @code{RANDOM_NUMBER} intrinsic\n @cindex random numbers\n \n Intrinsic implemented, documentation pending.\n@@ -6678,7 +6685,7 @@ Elemental subroutine\n \n @node RANDOM_SEED\n @section @code{RANDOM_SEED} --- Initialize a pseudo-random number sequence\n-@findex @code{RANDOM_SEED} intrinsic\n+@cindex @code{RANDOM_SEED} intrinsic\n @cindex random numbers\n \n Intrinsic implemented, documentation pending.\n@@ -6704,9 +6711,9 @@ Subroutine\n \n @node RAND\n @section @code{RAND} --- Real pseudo-random number\n-@findex @code{RAND} intrinsic\n-@findex @code{RAN} intrinsic\n-@cindex random number\n+@cindex @code{RAND} intrinsic\n+@cindex @code{RAN} intrinsic\n+@cindex random numbers\n \n @table @asis\n @item @emph{Description}:\n@@ -6757,8 +6764,8 @@ provided as an alias for @code{RAND}.\n \n @node RANGE\n @section @code{RANGE} --- Decimal exponent range of a real kind\n-@findex @code{RANGE} intrinsic\n-@cindex RANGE\n+@cindex @code{RANGE} intrinsic\n+@cindex range of a real variable\n \n @table @asis\n @item @emph{Description}:\n@@ -6791,8 +6798,8 @@ See @code{PRECISION} for an example.\n \n @node RAN\n @section @code{RAN} --- Real pseudo-random number\n-@findex @code{RAN} intrinsic\n-@cindex random number\n+@cindex @code{RAN} intrinsic\n+@cindex random numbers\n \n @table @asis\n @item @emph{Standard}:\n@@ -6806,8 +6813,8 @@ GNU extension\n \n @node REAL\n @section @code{REAL} --- Convert to real type \n-@findex @code{REAL} intrinsic\n-@findex @code{REALPART} intrinsic\n+@cindex @code{REAL} intrinsic\n+@cindex @code{REALPART} intrinsic\n @cindex true values\n \n @table @asis\n@@ -6869,7 +6876,7 @@ end program test_real\n \n @node RENAME\n @section @code{RENAME} --- Rename a file\n-@findex @code{RENAME} intrinsic\n+@cindex @code{RENAME} intrinsic\n @cindex file system operations\n \n Intrinsic implemented, documentation pending.\n@@ -6894,7 +6901,7 @@ Subroutine\n \n @node REPEAT\n @section @code{REPEAT} --- Repeated string concatenation \n-@findex @code{REPEAT} intrinsic\n+@cindex @code{REPEAT} intrinsic\n @cindex string manipulation\n \n Intrinsic implemented, documentation pending.\n@@ -6919,7 +6926,7 @@ Transformational function\n \n @node RESHAPE\n @section @code{RESHAPE} --- Function to reshape an array\n-@findex @code{RESHAPE} intrinsic\n+@cindex @code{RESHAPE} intrinsic\n @cindex array manipulation\n \n Intrinsic implemented, documentation pending.\n@@ -6944,7 +6951,7 @@ Transformational function\n \n @node RRSPACING\n @section @code{RRSPACING} --- Reciprocal of the relative spacing\n-@findex @code{RRSPACING} intrinsic\n+@cindex @code{RRSPACING} intrinsic\n \n @table @asis\n @item @emph{Description}:\n@@ -6976,8 +6983,8 @@ The value returned is equal to\n \n @node RSHIFT\n @section @code{RSHIFT} --- Right shift bits\n-@findex @code{RSHIFT} \n-@cindex bit manipulation\n+@cindex @code{RSHIFT} intrinsic\n+@cindex bit operations\n \n Not yet implemented in GNU Fortran.\n \n@@ -7002,7 +7009,7 @@ Function\n \n @node SCALE\n @section @code{SCALE} --- Scale a real value\n-@findex @code{SCALE} intrinsic\n+@cindex @code{SCALE} intrinsic\n \n @table @asis\n @item @emph{Description}:\n@@ -7041,7 +7048,7 @@ end program test_scale\n \n @node SCAN\n @section @code{SCAN} --- Scan a string for the presence of a set of characters\n-@findex @code{SCAN} intrinsic\n+@cindex @code{SCAN} intrinsic\n @cindex string manipulation\n \n Intrinsic implemented, documentation pending.\n@@ -7066,8 +7073,9 @@ Elemental function\n \n @node SECNDS\n @section @code{SECNDS} --- Time function\n-@findex @code{SECNDS} intrinsic\n-@cindex SECNDS\n+@cindex @code{SECNDS} intrinsic\n+@cindex time, current\n+@cindex current time\n \n @table @asis\n @item @emph{Description}:\n@@ -7113,7 +7121,7 @@ end program test_secnds\n \n @node SELECTED_INT_KIND\n @section @code{SELECTED_INT_KIND} --- Choose integer kind\n-@findex @code{SELECTED_INT_KIND} intrinsic\n+@cindex @code{SELECTED_INT_KIND} intrinsic\n @cindex integer kind\n \n @table @asis\n@@ -7160,7 +7168,7 @@ end program large_integers\n \n @node SELECTED_REAL_KIND\n @section @code{SELECTED_REAL_KIND} --- Choose real kind\n-@findex @code{SELECTED_REAL_KIND} intrinsic\n+@cindex @code{SELECTED_REAL_KIND} intrinsic\n @cindex real kind\n \n @table @asis\n@@ -7224,13 +7232,13 @@ end program real_kinds\n \n @node SET_EXPONENT\n @section @code{SET_EXPONENT} --- Set the exponent of the model\n-@findex @code{SET_EXPONENT} intrinsic\n-@cindex exponent\n+@cindex @code{SET_EXPONENT} intrinsic\n+@cindex exponent part of a real number\n \n @table @asis\n @item @emph{Description}:\n @code{SET_EXPONENT(X, I)} returns the real number whose fractional part\n-is that that of @var{X} and whose exponent part if @var{I}.\n+is that that of @var{X} and whose exponent part is @var{I}.\n \n @item @emph{Standard}:\n F95 and later\n@@ -7268,7 +7276,7 @@ end program test_setexp\n \n @node SHAPE\n @section @code{SHAPE} --- Determine the shape of an array\n-@findex @code{SHAPE} intrinsic\n+@cindex @code{SHAPE} intrinsic\n @cindex array manipulation\n \n Intrinsic implemented, documentation pending.\n@@ -7294,9 +7302,9 @@ Inquiry function\n \n @node SIGN\n @section @code{SIGN} --- Sign copying function\n-@findex @code{SIGN} intrinsic\n-@findex @code{ISIGN} intrinsic\n-@findex @code{DSIGN} intrinsic\n+@cindex @code{SIGN} intrinsic\n+@cindex @code{ISIGN} intrinsic\n+@cindex @code{DSIGN} intrinsic\n @cindex sign copying\n \n @table @asis\n@@ -7348,8 +7356,8 @@ end program test_sign\n \n @node SIGNAL\n @section @code{SIGNAL} --- Signal handling subroutine (or function)\n-@findex @code{SIGNAL} intrinsic\n-@cindex SIGNAL subroutine \n+@cindex @code{SIGNAL} intrinsic\n+@cindex signal handling\n \n @table @asis\n @item @emph{Description}:\n@@ -7370,9 +7378,9 @@ subroutine, non-elemental function\n \n @item @emph{Syntax}:\n @multitable @columnfractions .30 .80\n-@item @code{CALL ALARM(NUMBER, HANDLER)}\n-@item @code{CALL ALARM(NUMBER, HANDLER, STATUS)}\n-@item @code{STATUS = ALARM(NUMBER, HANDLER)}\n+@item @code{CALL SIGNAL(NUMBER, HANDLER)}\n+@item @code{CALL SIGNAL(NUMBER, HANDLER, STATUS)}\n+@item @code{STATUS = SIGNAL(NUMBER, HANDLER)}\n @end multitable\n \n @item @emph{Arguments}:\n@@ -7386,7 +7394,7 @@ integer. It has @code{INTENT(OUT)}.\n @end multitable\n \n @item @emph{Return value}:\n-The @code{SIGNAL} functions returns the value returned by @code{signal(2)}.\n+The @code{SIGNAL} function returns the value returned by @code{signal(2)}.\n \n @item @emph{Example}:\n @smallexample\n@@ -7407,10 +7415,10 @@ end program test_signal\n \n @node SIN\n @section @code{SIN} --- Sine function \n-@findex @code{SIN} intrinsic\n-@findex @code{DSIN} intrinsic\n-@findex @code{ZSIN} intrinsic\n-@findex @code{CDSIN} intrinsic\n+@cindex @code{SIN} intrinsic\n+@cindex @code{DSIN} intrinsic\n+@cindex @code{ZSIN} intrinsic\n+@cindex @code{CDSIN} intrinsic\n @cindex trigonometric functions\n \n @table @asis\n@@ -7460,8 +7468,8 @@ end program test_sin\n \n @node SINH\n @section @code{SINH} --- Hyperbolic sine function \n-@findex @code{SINH} intrinsic\n-@findex @code{DSINH} intrinsic\n+@cindex @code{SINH} intrinsic\n+@cindex @code{DSINH} intrinsic\n @cindex hyperbolic sine\n \n @table @asis\n@@ -7507,7 +7515,7 @@ end program test_sinh\n \n @node SIZE\n @section @code{SIZE} --- Determine the size of an array\n-@findex @code{SIZE} intrinsic\n+@cindex @code{SIZE} intrinsic\n @cindex array manipulation\n \n Intrinsic implemented, documentation pending.\n@@ -7531,7 +7539,7 @@ Inquiry function\n \n @node SNGL\n @section @code{SNGL} --- Convert double precision real to default real\n-@findex @code{SNGL} intrinsic\n+@cindex @code{SNGL} intrinsic\n @cindex conversion function (real)\n \n @table @asis\n@@ -7565,7 +7573,7 @@ The return value is of type default @code{REAL}.\n \n @node SPACING\n @section @code{SPACING} --- Smallest distance between two numbers of a given type\n-@findex @code{SPACING} intrinsic\n+@cindex @code{SPACING} intrinsic\n @cindex undocumented intrinsic \n \n Intrinsic implemented, documentation pending.\n@@ -7590,7 +7598,7 @@ Elemental function\n \n @node SPREAD\n @section @code{SPREAD} --- Add a dimension to an array\n-@findex @code{SPREAD} intrinsic\n+@cindex @code{SPREAD} intrinsic\n @cindex array manipulation\n \n Intrinsic implemented, documentation pending.\n@@ -7615,11 +7623,11 @@ Transformational function\n \n @node SQRT\n @section @code{SQRT} --- Square-root function\n-@findex @code{SQRT} intrinsic\n-@findex @code{DSQRT} intrinsic\n-@findex @code{CSQRT} intrinsic\n-@findex @code{ZSQRT} intrinsic\n-@findex @code{CDSQRT} intrinsic\n+@cindex @code{SQRT} intrinsic\n+@cindex @code{DSQRT} intrinsic\n+@cindex @code{CSQRT} intrinsic\n+@cindex @code{ZSQRT} intrinsic\n+@cindex @code{CDSQRT} intrinsic\n @cindex square-root\n \n @table @asis\n@@ -7669,8 +7677,8 @@ end program test_sqrt\n \n @node SRAND\n @section @code{SRAND} --- Reinitialize the random number generator\n-@findex @code{SRAND} intrinsic\n-@cindex random number\n+@cindex @code{SRAND} intrinsic\n+@cindex random numbers\n \n @table @asis\n @item @emph{Description}:\n@@ -7715,7 +7723,7 @@ pseudo-random number generators.\n \n @node STAT\n @section @code{STAT} --- Get file status\n-@findex @code{STAT} intrinsic\n+@cindex @code{STAT} intrinsic\n @cindex file system operations\n \n @table @asis\n@@ -7796,7 +7804,7 @@ To stat an open file: @ref{FSTAT}, to stat a link: @ref{LSTAT}\n \n @node SUM\n @section @code{SUM} --- Sum of array elements\n-@findex @code{SUM} intrinsic\n+@cindex @code{SUM} intrinsic\n @cindex array manipulation\n \n Intrinsic implemented, documentation pending.\n@@ -7822,7 +7830,7 @@ Transformational function\n \n @node SYMLNK\n @section @code{SYMLNK} --- Create a symbolic link\n-@findex @code{SYMLNK} intrinsic\n+@cindex @code{SYMLNK} intrinsic\n @cindex file system operations\n \n Intrinsic implemented, documentation pending.\n@@ -7845,7 +7853,7 @@ GNU extension\n \n @node SYSTEM\n @section @code{SYSTEM} --- Execute a shell command\n-@findex @code{SYSTEM} intrinsic\n+@cindex @code{SYSTEM} intrinsic\n @cindex undocumented intrinsic \n \n Intrinsic implemented, documentation pending.\n@@ -7870,8 +7878,9 @@ Subroutine\n \n @node SYSTEM_CLOCK\n @section @code{SYSTEM_CLOCK} --- Time function\n-@findex @code{SYSTEM_CLOCK} intrinsic\n-@cindex time functions\n+@cindex @code{SYSTEM_CLOCK} intrinsic\n+@cindex time, current\n+@cindex current time\n \n Intrinsic implemented, documentation pending.\n \n@@ -7894,8 +7903,8 @@ Subroutine\n \n @node TAN\n @section @code{TAN} --- Tangent function\n-@findex @code{TAN} intrinsic\n-@findex @code{DTAN} intrinsic\n+@cindex @code{TAN} intrinsic\n+@cindex @code{DTAN} intrinsic\n @cindex trigonometric functions\n \n @table @asis\n@@ -7942,8 +7951,8 @@ end program test_tan\n \n @node TANH\n @section @code{TANH} --- Hyperbolic tangent function \n-@findex @code{TANH} intrinsic\n-@findex @code{DTANH} intrinsic\n+@cindex @code{TANH} intrinsic\n+@cindex @code{DTANH} intrinsic\n @cindex hyperbolic tangent\n \n @table @asis\n@@ -7990,8 +7999,9 @@ end program test_tanh\n \n @node TIME\n @section @code{TIME} --- Time function\n-@findex @code{TIME} intrinsic\n-@cindex time functions\n+@cindex @code{TIME} intrinsic\n+@cindex time, current\n+@cindex current time\n \n Intrinsic implemented, documentation pending.\n \n@@ -8014,7 +8024,7 @@ Non-elemental function\n \n @node TINY\n @section @code{TINY} --- Smallest positive number of a real kind\n-@findex @code{TINY} intrinsic\n+@cindex @code{TINY} intrinsic\n @cindex tiny\n \n @table @asis\n@@ -8047,8 +8057,8 @@ See @code{HUGE} for an example.\n \n @node TRANSFER\n @section @code{TRANSFER} --- Transfer bit patterns\n-@findex @code{TRANSFER} intrinsic\n-@cindex bit manipulation\n+@cindex @code{TRANSFER} intrinsic\n+@cindex bit operations\n \n Intrinsic implemented, documentation pending.\n \n@@ -8072,7 +8082,7 @@ Transformational function\n \n @node TRANSPOSE\n @section @code{TRANSPOSE} --- Transpose an array of rank two\n-@findex @code{TRANSPOSE} intrinsic\n+@cindex @code{TRANSPOSE} intrinsic\n @cindex matrix manipulation\n \n Intrinsic implemented, documentation pending.\n@@ -8097,7 +8107,7 @@ Transformational function\n \n @node TRIM\n @section @code{TRIM} --- Function to remove trailing blank characters of a string\n-@findex @code{TRIM} intrinsic\n+@cindex @code{TRIM} intrinsic\n @cindex string manipulation\n \n Intrinsic implemented, documentation pending.\n@@ -8122,7 +8132,7 @@ Transformational function\n \n @node UBOUND\n @section @code{UBOUND} --- Upper dimension bounds of an array\n-@findex @code{UBOUND} intrinsic\n+@cindex @code{UBOUND} intrinsic\n @cindex undocumented intrinsic \n \n Intrinsic implemented, documentation pending.\n@@ -8151,7 +8161,7 @@ Inquiry function\n \n @node UMASK\n @section @code{UMASK} --- Set the file creation mask\n-@findex @code{UMASK} intrinsic\n+@cindex @code{UMASK} intrinsic\n @cindex file system operations\n \n Intrinsic implemented, documentation pending.\n@@ -8177,7 +8187,7 @@ Subroutine\n \n @node UNLINK\n @section @code{UNLINK} --- Remove a file from the file system\n-@findex @code{UNLINK} intrinsic\n+@cindex @code{UNLINK} intrinsic\n @cindex file system operations\n \n Intrinsic implemented, documentation pending.\n@@ -8204,7 +8214,7 @@ Subroutine\n \n @node UNMASK\n @section @code{UNMASK} --- (?)\n-@findex @code{UNMASK} intrinsic\n+@cindex @code{UNMASK} intrinsic\n @cindex undocumented intrinsic \n \n Intrinsic implemented, documentation pending.\n@@ -8226,7 +8236,7 @@ Intrinsic implemented, documentation pending.\n \n @node UNPACK\n @section @code{UNPACK} --- Unpack an array of rank one into an array\n-@findex @code{UNPACK} intrinsic\n+@cindex @code{UNPACK} intrinsic\n @cindex array manipulation\n \n Intrinsic implemented, documentation pending.\n@@ -8253,7 +8263,7 @@ Transformational function\n \n @node VERIFY\n @section @code{VERIFY} --- Scan a string for the absence of a set of characters\n-@findex @code{VERIFY} intrinsic\n+@cindex @code{VERIFY} intrinsic\n @cindex string manipulation\n \n Intrinsic implemented, documentation pending.\n@@ -8277,7 +8287,7 @@ Elemental function\n \n @node XOR\n @section @code{XOR} --- Bitwise logical exclusive OR\n-@findex @code{XOR} intrinsic\n+@cindex @code{XOR} intrinsic\n @cindex bit operations\n \n @table @asis"}, {"sha": "05886c2e03f00da349543202b0c642634302a9ec", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 118, "deletions": 121, "changes": 239, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ba96c0283e415800421dfc9a1e1263b21dabfd9/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ba96c0283e415800421dfc9a1e1263b21dabfd9/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=4ba96c0283e415800421dfc9a1e1263b21dabfd9", "patch": "@@ -174,77 +174,78 @@ The following options control the details of the Fortran dialect\n accepted by the compiler:\n \n @table @gcctabopt\n-@cindex -ffree-form option\n-@cindex options, -ffree-form\n-@cindex -fno-fixed-form option\n-@cindex options, -fno-fixed-form\n+@item -ffree-form\n+@item -ffixed-form\n+@cindex @code{-ffree-form} option\n+@cindex option, @code{-ffree-form}\n+@cindex @code{-fno-fixed-form} option\n+@cindex option, @code{-fno-fixed-form}\n @cindex source file format\n @cindex free form\n @cindex fixed form\n @cindex Source Form\n @cindex Fortran 90, features\n-@item -ffree-form\n-@item -ffixed-form\n Specify the layout used by the source file.  The free form layout\n was introduced in Fortran 90.  Fixed form was traditionally used in\n older Fortran programs.  When neither option is specified, the source\n form is determined by the file extension.\n \n-@cindex -fall-intrinsics\n @item -fall-intrinsics\n+@cindex @code{-fall-intrinsics} option\n+@cindex option, @code{-fall-intrinsics}\n Accept all of the intrinsic procedures provided in libgfortran \n without regard to the setting of @option{-std}.  In particular, \n this option can be quite useful with @option{-std=f95}.  Additionally,\n @command{gfortran} will ignore @option{-Wnonstd-intrinsics}.\n \n-@cindex option, -fd-lines-as-code\n-@cindex -fd-lines-as-code, option\n-@cindex option, -fd-lines-as-comments\n-@cindex -fd-lines-as-comments, option\n @item -fd-lines-as-code\n @item -fd-lines-as-comment\n-Enable special treatment for lines beginning with @samp{d} or @samp{D}\n+@cindex @code{-fd-lines-as-code}, option\n+@cindex option, @code{-fd-lines-as-code}\n+@cindex @code{-fd-lines-as-comments}, option\n+@cindex option, @code{-fd-lines-as-comments}\n+Enable special treatment for lines beginning with @code{d} or @code{D}\n in fixed form sources.  If the @option{-fd-lines-as-code} option is\n given they are treated as if the first column contained a blank.  If the\n @option{-fd-lines-as-comments} option is given, they are treated as\n comment lines.\n \n-@cindex option, -fdefault-double-8\n-@cindex -fdefault-double-8, option\n @item -fdefault-double-8\n+@cindex @code{-fdefault-double-8}, option\n+@cindex option, @code{-fdefault-double-8}\n Set the @code{DOUBLE PRECISION} type to an 8 byte wide type.\n \n-@cindex option, -fdefault-integer-8\n-@cindex -fdefault-integer-8, option\n @item -fdefault-integer-8\n+@cindex @code{-fdefault-integer-8}, option\n+@cindex option, @code{-fdefault-integer-8}\n Set the default integer and logical types to an 8 byte wide type.\n Do nothing if this is already the default.\n \n-@cindex option, -fdefault-real-8\n-@cindex -fdefault-real-8, option\n @item -fdefault-real-8\n+@cindex @code{-fdefault-real-8}, option\n+@cindex option, @code{-fdefault-real-8}\n Set the default real type to an 8 byte wide type.\n Do nothing if this is already the default.\n \n-@cindex -fdollar-ok option\n-@cindex options, -fdollar-ok\n @item -fdollar-ok\n+@cindex @code{-fdollar-ok} option\n+@cindex option, @code{-fdollar-ok}\n @cindex dollar sign\n @cindex symbol names\n @cindex character set\n Allow @samp{$} as a valid character in a symbol name.\n \n-@cindex -fno-backslash option\n-@cindex options, -fno-backslash\n @item -fno-backslash\n+@cindex @code{-fno-backslash} option\n+@cindex option, @code{-fno-backslash}\n @cindex backslash\n @cindex escape characters\n Change the interpretation of backslashes in string literals from\n ``C-style'' escape characters to a single backslash character.\n \n-@cindex -ffixed-line-length-@var{n} option\n-@cindex options, -ffixed-line-length-@var{n}\n @item -ffixed-line-length-@var{n}\n+@cindex @code{-ffixed-line-length-}@var{n} option\n+@cindex option, @code{-ffixed-line-length-}@var{n}\n @cindex source file format\n @cindex lines, length\n @cindex length of source lines\n@@ -265,9 +266,9 @@ to them to fill out the line.\n @option{-ffixed-line-length-0} means the same thing as\n @option{-ffixed-line-length-none}.\n \n-@cindex -ffree-line-length-@var{n} option\n-@cindex options, -ffree-line-length-@var{n}\n @item -ffree-line-length-@var{n}\n+@cindex @code{-ffree-line-length-}@var{n} option\n+@cindex option, @code{-ffree-line-length-}@var{n}\n @cindex source file format\n @cindex lines, length\n @cindex length of source lines\n@@ -279,28 +280,28 @@ lines in the source file. The default value is 132.\n @option{-ffree-line-length-0} means the same thing as\n @option{-ffree-line-length-none}.\n \n-@cindex -fmax-identifier-length=@var{n} option\n-@cindex option -fmax-identifier-length=@var{n}\n @item -fmax-identifier-length=@var{n}\n+@cindex @code{-fmax-identifier-length=}@var{n} option\n+@cindex option @option{-fmax-identifier-length=}@var{n}\n Specify the maximum allowed identifier length. Typical values are\n 31 (Fortran 95) and 63 (Fortran 2003).\n \n-@cindex -fimplicit-none option\n-@cindex options, -fimplicit-none\n @item -fimplicit-none\n+@cindex @code{-fimplicit-none} option\n+@cindex option, @code{-fimplicit-none}\n Specify that no implicit typing is allowed, unless overridden by explicit\n @code{IMPLICIT} statements.  This is the equivalent of adding\n @code{implicit none} to the start of every procedure.\n \n-@cindex -fcray-pointer option\n-@cindex options, -fcray-pointer\n @item -fcray-pointer\n+@cindex @code{-fcray-pointer} option\n+@cindex option, @code{-fcray-pointer}\n Enable the Cray pointer extension, which provides C-like pointer\n functionality.\n \n-@cindex -fopenmp\n-@cindex options, -fopenmp\n @item -fopenmp\n+@cindex @code{-fopenmp} option\n+@cindex option, @code{-fopenmp}\n Enable the OpenMP extensions.  This includes OpenMP @code{!$omp} directives\n in free form\n and @code{c$omp}, @code{*$omp} and @code{!$omp} directives in fixed form,\n@@ -309,9 +310,9 @@ and @code{c$}, @code{*$} and @code{!$} sentinels in fixed form,\n and when linking arranges for the OpenMP runtime library to be linked\n in.\n \n-@cindex -frange-check\n-@cindex options, -frange-check\n @item -frange-check\n+@cindex @code{-frange-check} option\n+@cindex option, @code{-frange-check}\n Enable range checking on results of simplification of constant\n expressions during compilation.  For example, by default, GNU Fortran\n will give an overflow error at compile time when simplifying @code{a =\n@@ -321,9 +322,9 @@ Similarly, @code{DATA i/Z'FFFFFFFF'/} will result in an integer overflow\n on most systems, but with @option{-fno-range-check} the value will\n ``wrap around'' and @code{i} will be initialized to @math{-1} instead.\n \n-@cindex -std=@var{std} option\n-@cindex option, -std=@var{std}\n @item -std=@var{std}\n+@cindex @code{-std=}@var{std} option\n+@cindex option, @code{-std=}@var{std}\n Conform to the specified standard.  The default value for @var{std} is\n @samp{gnu}; a superset of the Fortran 95 standard which includes all\n of the GNU extensions recommended for use in new code.  The @samp{legacy}\n@@ -349,7 +350,7 @@ to aid in debugging, but will not produce any compiled output.\n \n Warnings are diagnostic messages that report constructions which\n are not inherently erroneous but which are risky or suggest there is\n-likely to be a bug in the program.  Unless @option{-Werrors} is specified,\n+likely to be a bug in the program.  Unless @option{-Werror} is specified,\n they do not prevent compilation of the program.\n \n You can request many specific warnings with options beginning @option{-W},\n@@ -363,24 +364,24 @@ These options control the amount and kinds of errors and warnings produced\n by GNU Fortran:\n \n @table @gcctabopt\n-@cindex errors, limiting\n-@cindex -fmax-errors-@var{n} option\n-@cindex options, -fmax-errors-@var{n}\n @item -fmax-errors-@var{n}\n+@cindex @code{-fmax-errors-}@var{n} option\n+@cindex option, @code{-fmax-errors-}@var{n}\n+@cindex errors, limiting\n Limits the maximum number of error messages to @var{n}, at which point\n GNU Fortran bails out rather than attempting to continue processing the\n source code.  If @var{n} is 0, there is no limit on the number of error\n messages produced.\n \n-@cindex syntax checking\n-@cindex -fsyntax-only option\n-@cindex options, -fsyntax-only\n @item -fsyntax-only\n+@cindex @code{-fsyntax-only} option\n+@cindex option, @code{-fsyntax-only}\n+@cindex syntax checking\n Check the code for syntax errors, but don't do anything beyond that.\n \n-@cindex -pedantic option\n-@cindex options, -pedantic\n @item -pedantic\n+@cindex @code{-pedantic} option\n+@cindex option, @code{-pedantic}\n Issue warnings for uses of extensions to Fortran 95.\n @option{-pedantic} also applies to C-language constructs where they\n occur in GNU Fortran source files, such as use of @samp{\\e} in a\n@@ -397,23 +398,23 @@ They soon find that it does not do quite what they want---it finds some\n nonstandard practices, but not all.\n However, improvements to GNU Fortran in this area are welcome.\n \n-This should be used in conjunction with -std=@var{std}.\n+This should be used in conjunction with @option{-std=f95} or\n+@option{-std=f2003}.\n \n-@cindex -pedantic-errors option\n-@cindex options, -pedantic-errors\n @item -pedantic-errors\n+@cindex @code{-pedantic-errors} option\n+@cindex option, @code{-pedantic-errors}\n Like @option{-pedantic}, except that errors are produced rather than\n warnings.\n \n-@cindex -w option\n-@cindex options, -w\n @item -w\n+@cindex @code{-w} option\n+@cindex option, @code{-w}\n Inhibit all warning messages.\n \n-\n-@cindex -Wall option\n-@cindex options, -Wall\n @item -Wall\n+@cindex @code{-Wall} option\n+@cindex option, @code{-Wall}\n @cindex all warnings\n @cindex warnings, all\n Enables commonly used warning options pertaining to usage that\n@@ -422,10 +423,9 @@ This currently includes @option{-Waliasing},\n @option{-Wampersand}, @option{-Wsurprising}, @option{-Wnonstd-intrinsic},\n @option{-Wno-tabs}, and @option{-Wline-truncation}.\n \n-\n-@cindex -Waliasing option\n-@cindex options, -Waliasing\n @item -Waliasing\n+@cindex @code{-Waliasing} option\n+@cindex option, @code{-Waliasing}\n @cindex aliasing\n Warn about possible aliasing of dummy arguments. Specifically, it warns\n if the same actual argument is associated with a dummy argument with\n@@ -445,44 +445,39 @@ The following example will trigger the warning.\n   call bar(a,a)\n @end smallexample\n \n-\n-@cindex -Wampersand option\n-@cindex options, -Wampersand\n @item -Wampersand\n+@cindex @code{-Wampersand} option\n+@cindex option, @code{-Wampersand}\n @cindex ampersand\n Warn about missing ampersand in continued character constants. The warning is\n given with @option{-Wampersand}, @option{-pedantic}, @option{-std=f95}, and\n @option{-std=f2003}. Note: With no ampersand given in a continued character\n constant, GNU Fortran assumes continuation at the first non-comment,\n non-whitespace character after the ampersand that initiated the continuation.\n \n-\n-@cindex -Wconversion option\n-@cindex options, -Wconversion\n @item -Wconversion\n+@cindex @code{-Wconversion} option\n+@cindex option, @code{-Wconversion}\n @cindex conversion\n Warn about implicit conversions between different types.\n \n-\n-@cindex -Wimplicit-interface option\n-@cindex options, -Wimplicit-interface\n @item -Wimplicit-interface\n+@cindex @code{-Wimplicit-interface} option\n+@cindex option, @code{-Wimplicit-interface}\n Warn if a procedure is called without an explicit interface.\n Note this only checks that an explicit interface is present.  It does not\n check that the declared interfaces are consistent across program units.\n \n-\n-@cindex -Wnonstd-intrinsic option\n-@cindex options, -Wnonstd-intrinsic\n @item -Wnonstd-intrinsic\n+@cindex @code{-Wnonstd-intrinsic} option\n+@cindex option, @code{-Wnonstd-intrinsic}\n Warn if the user tries to use an intrinsic that does not belong to the \n standard the user has chosen via the -std option.\n \n-\n-@cindex -Wsurprising\n-@cindex options, -Wsurprising\n @item -Wsurprising\n-@cindex Suspicious\n+@cindex @code{-Wsurprising} option\n+@cindex option, @code{-Wsurprising}\n+@cindex Suspicious code\n Produce a warning when ``suspicious'' code constructs are encountered.\n While technically legal these usually indicate that an error has been made.\n \n@@ -497,34 +492,30 @@ lower value is greater than its upper value.\n A LOGICAL SELECT construct has three CASE statements.\n @end itemize\n \n-\n-@cindex -Wtabs\n-@cindex options, -Wtabs\n @item -Wtabs\n+@cindex @code{-Wtabs} option\n+@cindex option, @code{-Wtabs}\n @cindex Tabs\n By default, tabs are accepted as whitespace, but tabs are not members\n of the Fortran Character Set.  @option{-Wno-tabs} will cause a warning\n to be issued if a tab is encountered. Note, @option{-Wno-tabs} is active\n for @option{-pedantic}, @option{-std=f95}, and @option{-Wall}.\n \n-\n-@cindex -Wunderflow\n-@cindex options, -Wunderflow\n @item -Wunderflow\n+@cindex @code{-Wunderflow} option\n+@cindex option, @code{-Wunderflow}\n @cindex UNDERFLOW\n Produce a warning when numerical constant expressions are\n encountered, which yield an UNDERFLOW during compilation.\n \n-\n-@cindex -Werror\n-@cindex options, -Werror\n @item -Werror\n+@cindex @code{-Werror} option\n+@cindex option, @code{-Werror}\n Turns all warnings into errors.\n \n-\n-@cindex -W option\n-@cindex options, -W\n @item -W\n+@cindex @code{-W} option\n+@cindex option, @code{-W}\n @cindex extra warnings\n @cindex warnings, extra\n Turns on ``extra warnings'' and, if optimization is specified\n@@ -548,17 +539,15 @@ GNU Fortran has various special options that are used for debugging\n either your program or the GNU Fortran compiler.\n \n @table @gcctabopt\n-@cindex -fdump-parse-tree option\n-@cindex option, -fdump-parse-tree\n @item -fdump-parse-tree\n+@cindex @code{-fdump-parse-tree} option\n+@cindex option, @code{-fdump-parse-tree}\n Output the internal parse tree before starting code generation.  Only\n really useful for debugging the GNU Fortran compiler itself.\n-@end table\n \n-@table @gcctabopt\n-@cindex -ffpe-trap=@var{list} option\n-@cindex option, -ffpe-trap=@var{list}\n @item -ffpe-trap=@var{list}\n+@cindex @code{-ffpe-trap=}@var{list} option\n+@cindex option, @code{-ffpe-trap=}@var{list}\n Specify a list of IEEE exceptions when a Floating Point Exception\n (FPE) should be raised.  On most systems, this will result in a SIGFPE\n signal being sent and the program being interrupted, producing a core\n@@ -580,7 +569,6 @@ debugging options.\n @cindex directory, options\n @cindex options, directory search\n @cindex search path\n-\n @cindex INCLUDE directive\n @cindex directive, INCLUDE\n These options affect how GNU Fortran searches\n@@ -591,9 +579,9 @@ It also affects the search paths used by @command{cpp} when used to preprocess\n Fortran source.\n \n @table @gcctabopt\n-@cindex -Idir option\n-@cindex options, -Idir\n @item -I@var{dir}\n+@cindex @code{-I}@var{dir} option\n+@cindex option, @code{-I}@var{dir}\n @cindex directory, search paths for inclusion\n @cindex inclusion, directory search paths for\n @cindex search paths, for included files\n@@ -615,10 +603,12 @@ compiled modules are required by a @code{USE} statement.\n gcc,Using the GNU Compiler Collection (GCC)}, for information on the\n @option{-I} option.\n \n-@cindex -Mdir option\n-@cindex option, -Mdir\n @item -M@var{dir}\n @item -J@var{dir}\n+@cindex @code{-M}@var{dir} option\n+@cindex option, -@code{-M}@var{dir}\n+@cindex @code{-J}@var{dir} option\n+@cindex option, -@code{-J}@var{dir}\n This option specifies where to put @file{.mod} files for compiled modules.\n It is also added to the list of directories to searched by an @code{USE}\n statement.\n@@ -635,8 +625,9 @@ GCC options.\n \n These options affect the runtime behavior of programs compiled with GNU Fortran.\n @table @gcctabopt\n-@cindex -fconvert=@var{conversion} option\n @item -fconvert=@var{conversion}\n+@cindex @code{-fconvert=}@var{conversion} option\n+@cindex option, @code{-fconvert=}@var{conversion}\n Specify the representation of data for unformatted files.  Valid\n values for conversion are: @samp{native}, the default; @samp{swap},\n swap between big- and little-endian; @samp{big-endian}, use big-endian\n@@ -647,17 +638,19 @@ representation for unformatted files.\n The @code{CONVERT} specifier and the GFORTRAN_CONVERT_UNIT environment\n variable override the default specified by @option{-fconvert}.}\n \n-@cindex -frecord-marker=@var{length}\n @item -frecord-marker=@var{length}\n+@cindex @code{-frecord-marker=}@var{length} option\n+@cindex option, @code{-frecord-marker=}@var{length}\n Specify the length of record markers for unformatted files.\n Valid values for @var{length} are 4 and 8.  Default is 4.\n @emph{This is different from previous versions of gfortran},\n which specified a default record marker length of 8 on most\n systems.  If you want to read or write files compatible\n with earlier versions of gfortran, use @option{-frecord-marker=8}.\n \n-@cindex -fmax-subrecord-length=@var{length}\n @item -fmax-subrecord-length=@var{length}\n+@cindex @code{-fmax-subrecord-length=}@var{length} option\n+@cindex option, @code{-fmax-subrecord-length=}@var{length}\n Specify the maximum length for a subrecord.  The maximum permitted\n value for length is 2147483639, which is also the default.  Only\n really useful for use by the gfortran testsuite.\n@@ -679,19 +672,19 @@ can figure out the other form by either removing @option{no-} or adding\n it.\n \n @table @gcctabopt\n-@cindex @option{-fno-automatic} option\n-@cindex options, @option{-fno-automatic}\n @item -fno-automatic\n+@cindex @code{-fno-automatic} option\n+@cindex option, @code{-fno-automatic}\n @cindex SAVE statement\n @cindex statements, SAVE\n Treat each program unit as if the @code{SAVE} statement was specified for\n every local variable and array referenced in it. Does not affect common\n blocks. (Some Fortran compilers provide this option under the name\n @option{-static}.)\n \n-@cindex @option{-ff2c} option\n-@cindex options, @option{-ff2c}\n @item -ff2c\n+@cindex @code{-ff2c} option\n+@cindex option, @code{-ff2c}\n @cindex calling convention\n @cindex @command{f2c} calling convention\n @cindex @command{g77} calling convention\n@@ -724,9 +717,9 @@ calling conventions will break at execution time.\n of type default @code{REAL} or @code{COMPLEX} as actual arguments, as\n the library implementations use the @option{-fno-f2c} calling conventions.\n \n-@cindex @option{-fno-underscoring option}\n-@cindex options, @option{-fno-underscoring}\n @item -fno-underscoring\n+@cindex @code{-fno-underscoring option}\n+@cindex option, @code{-fno-underscoring}\n @cindex underscore\n @cindex symbol names, underscores\n @cindex transforming symbol names\n@@ -795,9 +788,9 @@ in the source, even if the names as seen by the linker are mangled to\n prevent accidental linking between procedures with incompatible\n interfaces.\n \n-@cindex @option{-fsecond-underscore option}\n-@cindex options, @option{-fsecond-underscore}\n @item -fsecond-underscore\n+@cindex @code{-fsecond-underscore option}\n+@cindex option, @code{-fsecond-underscore}\n @cindex underscore\n @cindex symbol names, underscores\n @cindex transforming symbol names\n@@ -821,10 +814,9 @@ is implemented as a reference to the link-time external symbol\n for compatibility with @command{g77} and @command{f2c}, and is implied\n by use of the @option{-ff2c} option.\n \n-\n-@cindex -fbounds-check option\n-@cindex -ffortran-bounds-check option\n @item -fbounds-check\n+@cindex @code{-fbounds-check} option\n+@cindex option, @code{-fbounds-check}\n @cindex bounds checking\n @cindex range checking\n @cindex array bounds checking\n@@ -838,9 +830,9 @@ shape arrays against the actual allocated bounds.\n In the future this may also include other forms of checking, eg. checking\n substring references.\n \n-\n-@cindex -fmax-stack-var-size option\n @item -fmax-stack-var-size=@var{n}\n+@cindex @code{-fmax-stack-var-size} option\n+@cindex option, @code{-fmax-stack-var-size}\n This option specifies the size in bytes of the largest array that will be put\n on the stack.\n \n@@ -850,15 +842,17 @@ Future versions of GNU Fortran may improve this behavior.\n \n The default value for @var{n} is 32768.\n \n-@cindex -fpack-derived\n @item -fpack-derived\n+@cindex @code{-fpack-derived} option\n+@cindex option, @code{-fpack-derived}\n @cindex Structure packing\n This option tells GNU Fortran to pack derived type members as closely as\n possible.  Code compiled with this option is likely to be incompatible\n with code compiled without this option, and may execute slower.\n \n-@cindex -frepack-arrays option\n @item -frepack-arrays\n+@cindex @code{-frepack-arrays} option\n+@cindex option, @code{-frepack-arrays}\n @cindex Repacking arrays\n In some circumstances GNU Fortran may pass assumed shape array\n sections via a descriptor describing a noncontiguous area of memory.\n@@ -869,25 +863,28 @@ This should result in faster accesses to the array.  However it can introduce\n significant overhead to the function call, especially  when the passed data\n is noncontiguous.\n \n-@cindex -fshort-enums\n @item -fshort-enums\n+@cindex @code{-fshort-enums} option\n+@cindex option, @code{-fshort-enums}\n This option is provided for interoperability with C code that was\n-compiled with the @command{-fshort-enums} option.  It will make\n+compiled with the @option{-fshort-enums} option.  It will make\n GNU Fortran choose the smallest @code{INTEGER} kind a given\n enumerator set will fit in, and give all its enumerators this kind.\n \n-@cindex -fexternal-blas\n @item -fexternal-blas\n+@cindex @code{-fexternal-blas} option\n+@cindex option, @code{-fexternal-blas}\n This option will make gfortran generate calls to BLAS functions for some\n matrix operations like @code{MATMUL}, instead of using our own\n algorithms, if the size of the matrices involved is larger than a given\n-limit (see @command{-fblas-matmul-limit}).  This may be profitable if an\n+limit (see @option{-fblas-matmul-limit}).  This may be profitable if an\n optimized vendor BLAS library is available.  The BLAS library will have\n to be specified at link time.\n \n-@cindex -fblas-matmul-limit\n @item -fblas-matmul-limit=@var{n}\n-Only significant when @command{-fexternal-blas} is in effect.\n+@cindex @code{-fblas-matmul-limit} option\n+@cindex option, @code{-fblas-matmul-limit}\n+Only significant when @option{-fexternal-blas} is in effect.\n Matrix multiplication of matrices with size larger than (or equal to) @var{n}\n will be performed by calls to BLAS functions, while others will be\n handled by @command{gfortran} internal algorithms. If the matrices"}]}