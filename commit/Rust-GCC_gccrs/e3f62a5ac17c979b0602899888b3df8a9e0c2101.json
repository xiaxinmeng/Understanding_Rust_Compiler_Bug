{"sha": "e3f62a5ac17c979b0602899888b3df8a9e0c2101", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNmNjJhNWFjMTdjOTc5YjA2MDI4OTk4ODhiM2RmOGE5ZTBjMjEwMQ==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2013-06-15T21:20:29Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2013-06-15T21:20:29Z"}, "message": "re PR fortran/49074 ([OOP] Defined assignment w/ CLASS arrays: Incomplete error message)\n\nfortran/\n\tPR fortran/49074\n\tPR fortran/56136\n\t* dependency.c (gfc_check_argument_var_dependency): Return 0 in the\n\tarray constructor case.\n\ntestsuite/\n\tPR fortran/49074\n\tPR fortran/56136\n\t* gfortran.dg/typebound_assignment_5.f03: Check the absence of any\n\tpacking.\n\t* gfortran.dg/typebound_assignment_6.f03: New.\n\nFrom-SVN: r200128", "tree": {"sha": "8461b05815615ef20ed87a04ea2f823645bc0f09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8461b05815615ef20ed87a04ea2f823645bc0f09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3f62a5ac17c979b0602899888b3df8a9e0c2101", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3f62a5ac17c979b0602899888b3df8a9e0c2101", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3f62a5ac17c979b0602899888b3df8a9e0c2101", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3f62a5ac17c979b0602899888b3df8a9e0c2101/comments", "author": null, "committer": null, "parents": [{"sha": "4de09b857ea83e17912dad82a2dddc1047376d41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4de09b857ea83e17912dad82a2dddc1047376d41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4de09b857ea83e17912dad82a2dddc1047376d41"}], "stats": {"total": 66, "additions": 65, "deletions": 1}, "files": [{"sha": "b003bacd70640deda2d7501dfe15de79591eaaed", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f62a5ac17c979b0602899888b3df8a9e0c2101/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f62a5ac17c979b0602899888b3df8a9e0c2101/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e3f62a5ac17c979b0602899888b3df8a9e0c2101", "patch": "@@ -1,3 +1,10 @@\n+2013-06-15  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/49074\n+\tPR fortran/56136\n+\t* dependency.c (gfc_check_argument_var_dependency): Return 0 in the\n+\tarray constructor case.\n+\n 2013-06-14  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/57508"}, {"sha": "fcdc1e50177222d5cd7b5233d8d1007f40ef1648", "filename": "gcc/fortran/dependency.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f62a5ac17c979b0602899888b3df8a9e0c2101/gcc%2Ffortran%2Fdependency.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f62a5ac17c979b0602899888b3df8a9e0c2101/gcc%2Ffortran%2Fdependency.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdependency.c?ref=e3f62a5ac17c979b0602899888b3df8a9e0c2101", "patch": "@@ -990,7 +990,9 @@ gfc_check_argument_var_dependency (gfc_expr *var, sym_intent intent,\n       return 0;\n \n     case EXPR_ARRAY:\n-      return gfc_check_dependency (var, expr, 1);\n+      /* the scalarizer always generates a temporary for array constructors,\n+\t so there is no dependency.  */\n+      return 0;\n \n     case EXPR_FUNCTION:\n       if (intent != INTENT_IN)"}, {"sha": "39381e277deb24e18a0bbe9f93818bffe308646a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f62a5ac17c979b0602899888b3df8a9e0c2101/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f62a5ac17c979b0602899888b3df8a9e0c2101/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e3f62a5ac17c979b0602899888b3df8a9e0c2101", "patch": "@@ -1,3 +1,11 @@\n+2013-06-15  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/49074\n+\tPR fortran/56136\n+\t* gfortran.dg/typebound_assignment_5.f03: Check the absence of any\n+\tpacking.\n+\t* gfortran.dg/typebound_assignment_6.f03: New.\n+\n 2013-06-15  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \t* gcc.target/h8300/h8300.exp: New."}, {"sha": "3ee4848fc37cb69bef23a3c39447c9bebe62deb2", "filename": "gcc/testsuite/gfortran.dg/typebound_assignment_5.f03", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f62a5ac17c979b0602899888b3df8a9e0c2101/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_assignment_5.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f62a5ac17c979b0602899888b3df8a9e0c2101/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_assignment_5.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_assignment_5.f03?ref=e3f62a5ac17c979b0602899888b3df8a9e0c2101", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do run }\n+! { dg-options \"-fdump-tree-original\" }\n !\n ! PR fortran/49074\n ! ICE on defined assignment with class arrays.\n@@ -38,3 +39,6 @@ program main\n         if (any(foobar%i /= [1, 2])) call abort\n       end program\n \n+! { dg-final { scan-tree-dump-not \"_gfortran_internal_pack\" \"original\" } }\n+! { dg-final { scan-tree-dump-not \"_gfortran_internal_unpack\" \"original\" } }\n+! { dg-final { cleanup-tree-dump \"original\"} }"}, {"sha": "c17de3e3d7ca36ba0fdf44a2de25cfbd0dfdb41a", "filename": "gcc/testsuite/gfortran.dg/typebound_assignment_6.f03", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f62a5ac17c979b0602899888b3df8a9e0c2101/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_assignment_6.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f62a5ac17c979b0602899888b3df8a9e0c2101/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_assignment_6.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_assignment_6.f03?ref=e3f62a5ac17c979b0602899888b3df8a9e0c2101", "patch": "@@ -0,0 +1,43 @@\n+! { dg-do run }\n+! { dg-options \"-fdump-tree-original\" }\n+!\n+! PR fortran/56136\n+! ICE on defined assignment with class arrays.\n+!\n+! Original testcase by Alipasha <alipash.celeris@gmail.com>\n+\n+      MODULE A_TEST_M\n+        TYPE :: A_TYPE\n+          INTEGER :: I\n+          CONTAINS\n+          GENERIC :: ASSIGNMENT (=) => ASGN_A\n+          PROCEDURE, PRIVATE :: ASGN_A\n+        END TYPE\n+\n+        CONTAINS\n+\n+        ELEMENTAL SUBROUTINE ASGN_A (A, B)\n+          CLASS (A_TYPE), INTENT (INOUT) :: A\n+          CLASS (A_TYPE), INTENT (IN) :: B\n+          A%I = B%I\n+        END SUBROUTINE\n+      END MODULE A_TEST_M\n+      \n+      PROGRAM ASGN_REALLOC_TEST\n+        USE A_TEST_M\n+        TYPE (A_TYPE), ALLOCATABLE :: A(:)\n+        INTEGER :: I, J\n+\n+        ALLOCATE (A(100))\n+        A = (/ (A_TYPE(I), I=1,SIZE(A)) /)\n+        A(1:50) = A(51:100)\n+        IF (ANY(A%I /= (/ ((50+I, I=1,SIZE(A)/2), J=1,2) /))) CALL ABORT\n+        A(::2) = A(1:50)        ! pack/unpack\n+        IF (ANY(A( ::2)%I /= (/ (50+I, I=1,SIZE(A)/2) /))) CALL ABORT  \n+        IF (ANY(A(2::2)%I /= (/ ((50+2*I, I=1,SIZE(A)/4), J=1,2) /))) CALL ABORT  \n+      END PROGRAM\n+\n+! { dg-final { scan-tree-dump-times \"_gfortran_internal_pack\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"_gfortran_internal_unpack\" 1 \"original\" } }\n+! { dg-final { cleanup-tree-dump \"original\" } }\n+"}]}