{"sha": "17d6caa1a30b35e0d66a280a82b34c5c143ed938", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdkNmNhYTFhMzBiMzVlMGQ2NmEyODBhODJiMzRjNWMxNDNlZDkzOA==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2006-06-21T19:32:13Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2006-06-21T19:32:13Z"}, "message": "2006-06-21  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        * doc/invoke.texi (-fopenmp) Move to \"Options Controlling C Dialect\"\n        section from the \"Options for Code Generation Conventions\".\n\nFrom-SVN: r114863", "tree": {"sha": "06f5617a9a22731906d6b1ec3da9d9bc94c426da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06f5617a9a22731906d6b1ec3da9d9bc94c426da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17d6caa1a30b35e0d66a280a82b34c5c143ed938", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17d6caa1a30b35e0d66a280a82b34c5c143ed938", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17d6caa1a30b35e0d66a280a82b34c5c143ed938", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17d6caa1a30b35e0d66a280a82b34c5c143ed938/comments", "author": null, "committer": null, "parents": [{"sha": "b0100a4450aa522ae3f079df2f0b9b0cdcd07228", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0100a4450aa522ae3f079df2f0b9b0cdcd07228", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0100a4450aa522ae3f079df2f0b9b0cdcd07228"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "715b45e244c5d35374ee06851cb08cb0cd2bdbba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17d6caa1a30b35e0d66a280a82b34c5c143ed938/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17d6caa1a30b35e0d66a280a82b34c5c143ed938/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17d6caa1a30b35e0d66a280a82b34c5c143ed938", "patch": "@@ -1,3 +1,8 @@\n+2006-06-21  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\t* doc/invoke.texi (-fopenmp) Move to \"Options Controlling C Dialect\"\n+\tsection from the \"Options for Code Generation Conventions\".\n+\n 2006-06-21  Richard Henderson  <rth@redhat.com>\n \n \tPR target/26347"}, {"sha": "d9daa7384ac276aef62e97a043c9fddc9cbc8054", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17d6caa1a30b35e0d66a280a82b34c5c143ed938/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17d6caa1a30b35e0d66a280a82b34c5c143ed938/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=17d6caa1a30b35e0d66a280a82b34c5c143ed938", "patch": "@@ -166,7 +166,7 @@ in the following sections.\n @xref{C Dialect Options,,Options Controlling C Dialect}.\n @gccoptlist{-ansi  -std=@var{standard}  -aux-info @var{filename} @gol\n -fno-asm  -fno-builtin  -fno-builtin-@var{function} @gol\n--fhosted  -ffreestanding  -fms-extensions @gol\n+-fhosted  -ffreestanding -fopenmp -fms-extensions @gol\n -trigraphs  -no-integrated-cpp  -traditional  -traditional-cpp @gol\n -fallow-single-precision  -fcond-mismatch @gol\n -fsigned-bitfields  -fsigned-char @gol\n@@ -779,7 +779,7 @@ See S/390 and zSeries Options.\n -fargument-noalias-global  -fargument-noalias-anything\n -fleading-underscore  -ftls-model=@var{model} @gol\n -ftrapv  -fwrapv  -fbounds-check @gol\n--fvisibility  -fopenmp}\n+-fvisibility}\n @end table\n \n @menu\n@@ -1304,6 +1304,14 @@ This is equivalent to @option{-fno-hosted}.\n @xref{Standards,,Language Standards Supported by GCC}, for details of\n freestanding and hosted environments.\n \n+@item -fopenmp\n+@opindex fopenmp\n+@cindex openmp parallel\n+Enable handling of OpenMP directives @code{#pragma omp} in C/C++ and\n+@code{!$omp} in Fortran.  When @option{-fopenmp} is specified, the\n+compiler generates parallel code according to the OpenMP Application\n+Program Interface v2.5 @w{@uref{http://www.openmp.org/}}.\n+\n @item -fms-extensions\n @opindex fms-extensions\n Accept some non-standard constructs used in Microsoft header files.\n@@ -13501,14 +13509,6 @@ before including any such headers.\n An overview of these techniques, their benefits and how to use them\n is at @w{@uref{http://gcc.gnu.org/wiki/Visibility}}.\n \n-@item -fopenmp\n-@opindex fopenmp\n-@cindex openmp parallel\n-Enable handling of OpenMP directives @code{#pragma omp} in C/C++ and\n-@code{!$omp} in Fortran.  When @option{-fopenmp} is specified, the\n-compiler generates parallel code according to the OpenMP Application\n-Program Interface v2.5 @w{@uref{http://www.openmp.org/}}.\n-\n @end table\n \n @c man end"}]}