{"sha": "d14fc2c6b49df42586749b44a5e0df1ad69ff182", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE0ZmMyYzZiNDlkZjQyNTg2NzQ5YjQ0YTVlMGRmMWFkNjlmZjE4Mg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-09-16T06:42:02Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-09-16T06:42:02Z"}, "message": "re PR fortran/57697 ([OOP] Segfault with defined assignment for components during intrinsic assignment)\n\n2013-09-16  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/57697\n        * resolve.c (generate_component_assignments): Correctly handle\n        * the\n        case that the LHS is not allocated.\n\n2013-09-16  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/57697\n        * gfortran.dg/defined_assignment_10.f90: Comment print\n        * statement.\n\nFrom-SVN: r202609", "tree": {"sha": "03ee176eb8a2cbc4b88523c093cc5f42ecd6a55e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03ee176eb8a2cbc4b88523c093cc5f42ecd6a55e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d14fc2c6b49df42586749b44a5e0df1ad69ff182", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d14fc2c6b49df42586749b44a5e0df1ad69ff182", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d14fc2c6b49df42586749b44a5e0df1ad69ff182", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d14fc2c6b49df42586749b44a5e0df1ad69ff182/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2c995b637dcec7a51aabee43ff6c1f2d90a696a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c995b637dcec7a51aabee43ff6c1f2d90a696a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c995b637dcec7a51aabee43ff6c1f2d90a696a7"}], "stats": {"total": 39, "additions": 27, "deletions": 12}, "files": [{"sha": "0f73dfe5f90852ba4365621c7ce07c2cc8ecaa3e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d14fc2c6b49df42586749b44a5e0df1ad69ff182/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d14fc2c6b49df42586749b44a5e0df1ad69ff182/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d14fc2c6b49df42586749b44a5e0df1ad69ff182", "patch": "@@ -1,3 +1,9 @@\n+2013-09-16  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57697\n+\t* resolve.c (generate_component_assignments): Correctly handle the\n+\tcase that the LHS is not allocated.\n+\n 2013-09-15  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/57697"}, {"sha": "fbd9a6a2472f76be9b037c4d8ff6c262e228b972", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d14fc2c6b49df42586749b44a5e0df1ad69ff182/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d14fc2c6b49df42586749b44a5e0df1ad69ff182/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=d14fc2c6b49df42586749b44a5e0df1ad69ff182", "patch": "@@ -9547,17 +9547,20 @@ generate_component_assignments (gfc_code **code, gfc_namespace *ns)\n \t\t\t\t\t\tt1, (*code)->expr1,\n \t\t\t\tNULL, NULL, (*code)->loc);\n \n-\t\t  /* For allocatable LHS, check whether it is allocated.  */\n-\t\t  if (gfc_expr_attr((*code)->expr1).allocatable)\n+\t\t  /* For allocatable LHS, check whether it is allocated.  Note\n+\t\t     that allocatable components with defined assignment are\n+\t\t     not yet support.  See PR 57696.  */\n+\t\t  if ((*code)->expr1->symtree->n.sym->attr.allocatable)\n \t\t    {\n \t\t      gfc_code *block;\n+\t\t      gfc_expr *e =\n+\t\t\tgfc_lval_expr_from_sym ((*code)->expr1->symtree->n.sym);\n \t\t      block = gfc_get_code (EXEC_IF);\n \t\t      block->block = gfc_get_code (EXEC_IF);\n \t\t      block->block->expr1\n \t\t\t  = gfc_build_intrinsic_call (ns,\n-\t\t\t\t    GFC_ISYM_ASSOCIATED, \"allocated\",\n-\t\t\t\t    (*code)->loc, 2,\n-\t\t\t\t    gfc_copy_expr ((*code)->expr1), NULL);\n+\t\t\t\t    GFC_ISYM_ALLOCATED, \"allocated\",\n+\t\t\t\t    (*code)->loc, 1, e);\n \t\t      block->block->next = temp_code;\n \t\t      temp_code = block;\n \t\t    }\n@@ -9570,9 +9573,11 @@ generate_component_assignments (gfc_code **code, gfc_namespace *ns)\n \t      this_code->ext.actual->expr = gfc_copy_expr (t1);\n \t      add_comp_ref (this_code->ext.actual->expr, comp1);\n \n-\t      /* If the LHS is not allocated, we pointer-assign the LHS address\n-\t\t to the temporary - after the LHS has been allocated.  */\n-\t      if (gfc_expr_attr((*code)->expr1).allocatable)\n+\t      /* If the LHS variable is allocatable and wasn't allocated and\n+                 the temporary is allocatable, pointer assign the address of\n+                 the freshly allocated LHS to the temporary.  */\n+\t      if ((*code)->expr1->symtree->n.sym->attr.allocatable\n+\t\t  && gfc_expr_attr ((*code)->expr1).allocatable)\n \t\t{\n \t\t  gfc_code *block;\n                   gfc_expr *cond;\n@@ -9583,9 +9588,8 @@ generate_component_assignments (gfc_code **code, gfc_namespace *ns)\n \t\t  cond->where = (*code)->loc;\n \t\t  cond->value.op.op = INTRINSIC_NOT;\n \t\t  cond->value.op.op1 = gfc_build_intrinsic_call (ns,\n-\t\t\t\t\t  GFC_ISYM_ASSOCIATED, \"allocated\",\n-\t\t\t\t\t  (*code)->loc, 2,\n-\t\t\t\t\t  gfc_copy_expr (t1), NULL);\n+\t\t\t\t\t  GFC_ISYM_ALLOCATED, \"allocated\",\n+\t\t\t\t\t  (*code)->loc, 1, gfc_copy_expr (t1));\n \t\t  block = gfc_get_code (EXEC_IF);\n \t\t  block->block = gfc_get_code (EXEC_IF);\n \t\t  block->block->expr1 = cond;"}, {"sha": "3240989a00c610211d45d219de012ef8d823d90c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d14fc2c6b49df42586749b44a5e0df1ad69ff182/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d14fc2c6b49df42586749b44a5e0df1ad69ff182/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d14fc2c6b49df42586749b44a5e0df1ad69ff182", "patch": "@@ -1,3 +1,8 @@\n+2013-09-16  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57697\n+\t* gfortran.dg/defined_assignment_10.f90: Comment print statement.\n+\n 2013-09-15  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/57697"}, {"sha": "4385925dcd1f45fb864edafc86aa2aaa0b5825ba", "filename": "gcc/testsuite/gfortran.dg/defined_assignment_10.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d14fc2c6b49df42586749b44a5e0df1ad69ff182/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefined_assignment_10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d14fc2c6b49df42586749b44a5e0df1ad69ff182/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefined_assignment_10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefined_assignment_10.f90?ref=d14fc2c6b49df42586749b44a5e0df1ad69ff182", "patch": "@@ -28,7 +28,7 @@ program main\n   implicit none\n   type(parent), allocatable :: left\n   type(parent) :: right\n-  print *, right%foo\n+!  print *, right%foo\n   left = right\n !  print *, left%foo\n   if (left%foo%i /= 20) call abort()"}]}