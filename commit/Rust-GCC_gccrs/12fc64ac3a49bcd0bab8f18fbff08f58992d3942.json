{"sha": "12fc64ac3a49bcd0bab8f18fbff08f58992d3942", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJmYzY0YWMzYTQ5YmNkMGJhYjhmMThmYmZmMDhmNTg5OTJkMzk0Mg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-05-30T11:44:02Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-05-30T11:44:02Z"}, "message": "stl_algobase.h (__equal<true>::equal): Check length instead of checking for null pointers.\n\n\t* include/bits/stl_algobase.h (__equal<true>::equal): Check length\n\tinstead of checking for null pointers.\n\t(__lexicographical_compare<true>::__lc): Only check shorter length.\n\nFrom-SVN: r223886", "tree": {"sha": "6f6e8369e567de7fd8c5c20ad4411ab2710e9574", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f6e8369e567de7fd8c5c20ad4411ab2710e9574"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12fc64ac3a49bcd0bab8f18fbff08f58992d3942", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12fc64ac3a49bcd0bab8f18fbff08f58992d3942", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12fc64ac3a49bcd0bab8f18fbff08f58992d3942", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12fc64ac3a49bcd0bab8f18fbff08f58992d3942/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d21a61eb5c0a7d12fa4b2bf2dfcb5ca7398a5bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d21a61eb5c0a7d12fa4b2bf2dfcb5ca7398a5bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d21a61eb5c0a7d12fa4b2bf2dfcb5ca7398a5bb"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "19a4c14eaca1041a7827c0df135661fc4ea2b0ad", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12fc64ac3a49bcd0bab8f18fbff08f58992d3942/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12fc64ac3a49bcd0bab8f18fbff08f58992d3942/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=12fc64ac3a49bcd0bab8f18fbff08f58992d3942", "patch": "@@ -1,3 +1,9 @@\n+2015-05-30  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/stl_algobase.h (__equal<true>::equal): Check length\n+\tinstead of checking for null pointers.\n+\t(__lexicographical_compare<true>::__lc): Only check shorter length.\n+\n 2015-05-29  Fran\u00e7ois Dumont  fdumont@gcc.gnu.org>\n \n \t* include/debug/debug.h (_GLIBCXX_DEBUG_ASSERT,"}, {"sha": "12eb7ec61f80c902a266724b15d8bf20c50c6619", "filename": "libstdc++-v3/include/bits/stl_algobase.h", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12fc64ac3a49bcd0bab8f18fbff08f58992d3942/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12fc64ac3a49bcd0bab8f18fbff08f58992d3942/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h?ref=12fc64ac3a49bcd0bab8f18fbff08f58992d3942", "patch": "@@ -812,11 +812,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n         static bool\n         equal(const _Tp* __first1, const _Tp* __last1, const _Tp* __first2)\n         {\n-\t  if (__first1 == 0 || __first2 == 0)\n-\t    return __first1 == __last1;\n-\n-\t  return !__builtin_memcmp(__first1, __first2, sizeof(_Tp)\n-\t\t\t\t   * (__last1 - __first1));\n+\t  if (const size_t __len = (__last1 - __first1))\n+\t    return !__builtin_memcmp(__first1, __first2, sizeof(_Tp) * __len);\n+\t  return true;\n \t}\n     };\n \n@@ -920,14 +918,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t{\n \t  const size_t __len1 = __last1 - __first1;\n \t  const size_t __len2 = __last2 - __first2;\n-\t  if (__len1 && __len2)\n-\t    {\n-\t      if (int __result = __builtin_memcmp(__first1, __first2,\n-\t\t\t\t\t\t  std::min(__len1, __len2)))\n-\t\t{\n-\t\t  return __result < 0;\n-\t\t}\n-\t    }\n+\t  if (const size_t __len = std::min(__len1, __len2))\n+\t    if (int __result = __builtin_memcmp(__first1, __first2, __len))\n+\t      return __result < 0;\n \t  return __len1 < __len2;\n \t}\n     };"}]}