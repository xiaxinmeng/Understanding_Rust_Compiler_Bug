{"sha": "6ac62473ac5ba9253d461fc737417d64dc24823b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFjNjI0NzNhYzViYTkyNTNkNDYxZmM3Mzc0MTdkNjRkYzI0ODIzYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-02-15T23:45:23Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-02-15T23:45:23Z"}, "message": "(cmpsi): Added insn with appropriate constraints for TARGET_5200;\n\nchanged condition of existing insn to !TARGET_5200.\n\nFrom-SVN: r13649", "tree": {"sha": "f5ef4b3552a8d3f51525fbb6c8bb6f777ab949f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5ef4b3552a8d3f51525fbb6c8bb6f777ab949f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ac62473ac5ba9253d461fc737417d64dc24823b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ac62473ac5ba9253d461fc737417d64dc24823b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ac62473ac5ba9253d461fc737417d64dc24823b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ac62473ac5ba9253d461fc737417d64dc24823b/comments", "author": null, "committer": null, "parents": [{"sha": "a7e2b01447165237dad6df2fe2ee5c4fda6aed5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7e2b01447165237dad6df2fe2ee5c4fda6aed5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7e2b01447165237dad6df2fe2ee5c4fda6aed5e"}], "stats": {"total": 29, "additions": 26, "deletions": 3}, "files": [{"sha": "058f47421447bcfc44206e493d86e1a5523dbb6d", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ac62473ac5ba9253d461fc737417d64dc24823b/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ac62473ac5ba9253d461fc737417d64dc24823b/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=6ac62473ac5ba9253d461fc737417d64dc24823b", "patch": "@@ -485,12 +485,12 @@\n     }\n }\")\n \n-;; A composite of the cmp, cmpa, & cmpi m68000 op codes.\n+;; A composite of the cmp, cmpa, cmpi & cmpm m68000 op codes.\n (define_insn \"\"\n   [(set (cc0)\n \t(compare (match_operand:SI 0 \"nonimmediate_operand\" \"rKs,mr,>\")\n-\t\t (match_operand:SI 1 \"general_operand\" \"mr,Ksr,>\")))]\n-  \"\"\n+\t\t (match_operand:SI 1 \"general_operand\" \"mr,rKs,>\")))]\n+  \"!TARGET_5200\"\n   \"*\n {\n   if (GET_CODE (operands[0]) == MEM && GET_CODE (operands[1]) == MEM)\n@@ -515,6 +515,29 @@\n #endif\n }\")\n \n+(define_insn \"\"\n+  [(set (cc0)\n+\t(compare (match_operand:SI 0 \"nonimmediate_operand\" \"mrKs,r\")\n+\t\t (match_operand:SI 1 \"general_operand\" \"r,mrKs\")))]\n+  \"TARGET_5200\"\n+  \"*\n+{\n+  if (REG_P (operands[1])\n+      || (!REG_P (operands[0]) && GET_CODE (operands[0]) != MEM))\n+    { cc_status.flags |= CC_REVERSED;\n+#ifdef SGS_CMP_ORDER\n+      return \\\"cmp%.l %d1,%d0\\\";\n+#else\n+      return \\\"cmp%.l %d0,%d1\\\";\n+#endif\n+    }\n+#ifdef SGS_CMP_ORDER\n+  return \\\"cmp%.l %d0,%d1\\\";\n+#else\n+  return \\\"cmp%.l %d1,%d0\\\";\n+#endif\n+}\")\n+\n (define_insn \"cmphi\"\n   [(set (cc0)\n \t(compare (match_operand:HI 0 \"nonimmediate_operand\" \"rnm,d,n,m,>\")"}]}