{"sha": "61001a358539747f4cf2789a405c9b127aebd552", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjEwMDFhMzU4NTM5NzQ3ZjRjZjI3ODlhNDA1YzliMTI3YWViZDU1Mg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2014-11-25T21:27:17Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2014-11-25T21:27:17Z"}, "message": "ira-lives.c (process_bb_node_lives): Make code with conditional REAL_PIC_OFFSET_TABLE_REGNUM.\n\n2014-11-25  Vladimir Makarov  <vmakarov@redhat.com>\n\n\t* ira-lives.c (process_bb_node_lives): Make code with conditional\n\tREAL_PIC_OFFSET_TABLE_REGNUM.\n\nFrom-SVN: r218063", "tree": {"sha": "5438a3bf2eaa87416dd7e0f19cba176edde9909e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5438a3bf2eaa87416dd7e0f19cba176edde9909e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61001a358539747f4cf2789a405c9b127aebd552", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61001a358539747f4cf2789a405c9b127aebd552", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61001a358539747f4cf2789a405c9b127aebd552", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61001a358539747f4cf2789a405c9b127aebd552/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a56e69dae3619ba2ec73ce2fef81f31fc81af575", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a56e69dae3619ba2ec73ce2fef81f31fc81af575", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a56e69dae3619ba2ec73ce2fef81f31fc81af575"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "adc31461af16a10cbfdd2d5b7023251a4f9073d6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61001a358539747f4cf2789a405c9b127aebd552/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61001a358539747f4cf2789a405c9b127aebd552/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61001a358539747f4cf2789a405c9b127aebd552", "patch": "@@ -1,3 +1,8 @@\n+2014-11-25  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\t* ira-lives.c (process_bb_node_lives): Make code with conditional\n+\tREAL_PIC_OFFSET_TABLE_REGNUM.\n+\n 2014-11-25  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR target/63527"}, {"sha": "e91c35fcdce88b40ad6983b83b95034fc293834a", "filename": "gcc/ira-lives.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61001a358539747f4cf2789a405c9b127aebd552/gcc%2Fira-lives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61001a358539747f4cf2789a405c9b127aebd552/gcc%2Fira-lives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-lives.c?ref=61001a358539747f4cf2789a405c9b127aebd552", "patch": "@@ -1123,10 +1123,9 @@ process_bb_node_lives (ira_loop_tree_node_t loop_tree_node)\n \t pessimistic, but it probably doesn't matter much in practice.  */\n       FOR_BB_INSNS_REVERSE (bb, insn)\n \t{\n-\t  int regno;\n \t  ira_allocno_t a;\n \t  df_ref def, use;\n-\t  bool call_p, clear_pic_use_conflict_p;\n+\t  bool call_p;\n \n \t  if (!NONDEBUG_INSN_P (insn))\n \t    continue;\n@@ -1137,7 +1136,9 @@ process_bb_node_lives (ira_loop_tree_node_t loop_tree_node)\n \t\t     curr_point);\n \n \t  call_p = CALL_P (insn);\n-\t  clear_pic_use_conflict_p = false;\n+#ifdef REAL_PIC_OFFSET_TABLE_REGNUM\n+\t  int regno;\n+\t  bool clear_pic_use_conflict_p = false;\n \t  /* Processing insn usage in call insn can create conflict\n \t     with pic pseudo and pic hard reg and that is wrong.\n \t     Check this situation and fix it at the end of the insn\n@@ -1150,6 +1151,7 @@ process_bb_node_lives (ira_loop_tree_node_t loop_tree_node)\n \t\t   && ! TEST_HARD_REG_BIT (OBJECT_CONFLICT_HARD_REGS\n \t\t\t\t\t   (ALLOCNO_OBJECT (a, 0)),\n \t\t\t\t\t   REAL_PIC_OFFSET_TABLE_REGNUM));\n+#endif\n \n \t  /* Mark each defined value as live.  We need to do this for\n \t     unused values because they still conflict with quantities\n@@ -1302,6 +1304,7 @@ process_bb_node_lives (ira_loop_tree_node_t loop_tree_node)\n \t\t}\n \t    }\n \n+#ifdef REAL_PIC_OFFSET_TABLE_REGNUM\n \t  if (clear_pic_use_conflict_p)\n \t    {\n \t      regno = REGNO (pic_offset_table_rtx);\n@@ -1312,7 +1315,7 @@ process_bb_node_lives (ira_loop_tree_node_t loop_tree_node)\n \t\t\t\t  (ALLOCNO_OBJECT (a, 0)),\n \t\t\t\t  REAL_PIC_OFFSET_TABLE_REGNUM);\n \t    }\n-\n+#endif\n \t  curr_point++;\n \t}\n "}]}