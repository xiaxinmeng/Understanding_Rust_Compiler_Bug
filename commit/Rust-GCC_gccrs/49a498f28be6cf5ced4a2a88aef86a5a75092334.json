{"sha": "49a498f28be6cf5ced4a2a88aef86a5a75092334", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDlhNDk4ZjI4YmU2Y2Y1Y2VkNGEyYTg4YWVmODZhNWE3NTA5MjMzNA==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-08-08T19:00:43Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-08-08T19:00:43Z"}, "message": "refactor error_node to be part of the type not the resolver", "tree": {"sha": "ae7be1e0aea20079769b89f0a7c3f40e69f983af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae7be1e0aea20079769b89f0a7c3f40e69f983af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49a498f28be6cf5ced4a2a88aef86a5a75092334", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49a498f28be6cf5ced4a2a88aef86a5a75092334", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49a498f28be6cf5ced4a2a88aef86a5a75092334", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49a498f28be6cf5ced4a2a88aef86a5a75092334/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43c1ab08f070994a934d90ff4e6457eaee12c493", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43c1ab08f070994a934d90ff4e6457eaee12c493", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43c1ab08f070994a934d90ff4e6457eaee12c493"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "52bdbb015b231adb8488261e4f4655c69c2c42b8", "filename": "gcc/rust/backend/rust-compile-resolve-path.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49a498f28be6cf5ced4a2a88aef86a5a75092334/gcc%2Frust%2Fbackend%2Frust-compile-resolve-path.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49a498f28be6cf5ced4a2a88aef86a5a75092334/gcc%2Frust%2Fbackend%2Frust-compile-resolve-path.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-resolve-path.cc?ref=49a498f28be6cf5ced4a2a88aef86a5a75092334", "patch": "@@ -108,7 +108,7 @@ ResolvePathRef::visit (HIR::PathInExpression &expr)\n \t\t  trait_item->get_mappings ().get_hirid ());\n \n \t      Resolver::TraitReference &trait_ref\n-\t\t= Resolver::TraitResolver::error_node ();\n+\t\t= Resolver::TraitReference::error_node ();\n \t      bool ok = ctx->get_tyctx ()->lookup_trait_reference (\n \t\ttrait->get_mappings ().get_defid (), trait_ref);\n \t      rust_assert (ok);"}, {"sha": "c93f08c4385b4c974588f64fcd5d8419bfdeca11", "filename": "gcc/rust/backend/rust-compile.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49a498f28be6cf5ced4a2a88aef86a5a75092334/gcc%2Frust%2Fbackend%2Frust-compile.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49a498f28be6cf5ced4a2a88aef86a5a75092334/gcc%2Frust%2Fbackend%2Frust-compile.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile.cc?ref=49a498f28be6cf5ced4a2a88aef86a5a75092334", "patch": "@@ -151,7 +151,7 @@ CompileExpr::visit (HIR::MethodCallExpr &expr)\n \t    trait_item->get_mappings ().get_hirid ());\n \n \t  Resolver::TraitReference &trait_ref\n-\t    = Resolver::TraitResolver::error_node ();\n+\t    = Resolver::TraitReference::error_node ();\n \t  bool ok = ctx->get_tyctx ()->lookup_trait_reference (\n \t    trait->get_mappings ().get_defid (), trait_ref);\n \t  rust_assert (ok);"}, {"sha": "dd77dfdc7bb57a3a04f3868e4554e84015488f8e", "filename": "gcc/rust/typecheck/rust-hir-trait-ref.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49a498f28be6cf5ced4a2a88aef86a5a75092334/gcc%2Frust%2Ftypecheck%2Frust-hir-trait-ref.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49a498f28be6cf5ced4a2a88aef86a5a75092334/gcc%2Frust%2Ftypecheck%2Frust-hir-trait-ref.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-trait-ref.h?ref=49a498f28be6cf5ced4a2a88aef86a5a75092334", "patch": "@@ -199,6 +199,12 @@ class TraitReference\n \n   bool is_error () const { return hir_trait_ref == nullptr; }\n \n+  static TraitReference &error_node ()\n+  {\n+    static TraitReference trait_error_node = TraitReference::error ();\n+    return trait_error_node;\n+  }\n+\n   Location get_locus () const { return hir_trait_ref->get_locus (); }\n \n   std::string get_name () const"}, {"sha": "1e69caabb6766cdf22a9f19641d0f01fc377a382", "filename": "gcc/rust/typecheck/rust-hir-trait-resolve.h", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49a498f28be6cf5ced4a2a88aef86a5a75092334/gcc%2Frust%2Ftypecheck%2Frust-hir-trait-resolve.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49a498f28be6cf5ced4a2a88aef86a5a75092334/gcc%2Frust%2Ftypecheck%2Frust-hir-trait-resolve.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-trait-resolve.h?ref=49a498f28be6cf5ced4a2a88aef86a5a75092334", "patch": "@@ -106,12 +106,6 @@ class TraitResolver : public TypeCheckBase\n     return resolver.go (path);\n   }\n \n-  static TraitReference &error_node ()\n-  {\n-    static TraitReference trait_error_node = TraitReference::error ();\n-    return trait_error_node;\n-  }\n-\n private:\n   TraitResolver () : TypeCheckBase () {}\n \n@@ -122,15 +116,15 @@ class TraitResolver : public TypeCheckBase\n \t\t\t\t\t &ref))\n       {\n \trust_error_at (path.get_locus (), \"Failed to resolve path to node-id\");\n-\treturn error_node ();\n+\treturn TraitReference::error_node ();\n       }\n \n     HirId hir_node = UNKNOWN_HIRID;\n     if (!mappings->lookup_node_to_hir (mappings->get_current_crate (), ref,\n \t\t\t\t       &hir_node))\n       {\n \trust_error_at (path.get_locus (), \"Failed to resolve path to hir-id\");\n-\treturn error_node ();\n+\treturn TraitReference::error_node ();\n       }\n \n     HIR::Item *resolved_item\n@@ -140,7 +134,7 @@ class TraitResolver : public TypeCheckBase\n     resolved_item->accept_vis (*this);\n     rust_assert (trait_reference != nullptr);\n \n-    TraitReference &tref = error_node ();\n+    TraitReference &tref = TraitReference::error_node ();\n     if (context->lookup_trait_reference (\n \t  trait_reference->get_mappings ().get_defid (), tref))\n       {\n@@ -189,7 +183,7 @@ class TraitResolver : public TypeCheckBase\n     context->insert_trait_reference (\n       trait_reference->get_mappings ().get_defid (), std::move (tref));\n \n-    tref = error_node ();\n+    tref = TraitReference::error_node ();\n     bool ok = context->lookup_trait_reference (\n       trait_reference->get_mappings ().get_defid (), tref);\n     rust_assert (ok);"}, {"sha": "493e91a6df7911649d6e413805583edfd8347442", "filename": "gcc/rust/typecheck/rust-hir-type-check-item.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49a498f28be6cf5ced4a2a88aef86a5a75092334/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49a498f28be6cf5ced4a2a88aef86a5a75092334/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-item.h?ref=49a498f28be6cf5ced4a2a88aef86a5a75092334", "patch": "@@ -43,7 +43,7 @@ class TypeCheckItem : public TypeCheckBase\n \n   void visit (HIR::ImplBlock &impl_block) override\n   {\n-    TraitReference &trait_reference = TraitResolver::error_node ();\n+    TraitReference &trait_reference = TraitReference::error_node ();\n     if (impl_block.has_trait_ref ())\n       {\n \tstd::unique_ptr<HIR::TypePath> &ref = impl_block.get_trait_ref ();"}]}