{"sha": "602045546463f33fb426f6f623ece65fb41b907e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAyMDQ1NTQ2NDYzZjMzZmI0MjZmNmY2MjNlY2U2NWZiNDFiOTA3ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-03-04T20:28:27Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-03-04T20:28:27Z"}, "message": "re PR target/70062 (ICE: in decide_alg, at config/i386/i386.c:26173 with -mmemcpy-strategy=libcall)\n\n\tPR target/70062\n\t* config/i386/i386.c (decide_alg): Add RECUR argument.  Revert\n\t2016-02-22 changes, instead don't recurse if RECUR is already true.\n\tDon't change *dynamic_check if RECUR.  Adjust recursive caller\n\tto pass true to the new argument.\n\t(ix86_expand_set_or_movmem): Adjust decide_alg caller.\n\n\t* gcc.target/i386/pr70062.c: New test.\n\nFrom-SVN: r233979", "tree": {"sha": "bfacbc66a21eb158218197fefa57e7ab1f9485c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfacbc66a21eb158218197fefa57e7ab1f9485c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/602045546463f33fb426f6f623ece65fb41b907e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/602045546463f33fb426f6f623ece65fb41b907e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/602045546463f33fb426f6f623ece65fb41b907e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/602045546463f33fb426f6f623ece65fb41b907e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f79d4eabaf2646be0090458dfa6b94dabf82ca8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f79d4eabaf2646be0090458dfa6b94dabf82ca8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f79d4eabaf2646be0090458dfa6b94dabf82ca8e"}], "stats": {"total": 51, "additions": 36, "deletions": 15}, "files": [{"sha": "ea4e2d52491d3cf94b3e91a6122004519a592e4b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/602045546463f33fb426f6f623ece65fb41b907e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/602045546463f33fb426f6f623ece65fb41b907e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=602045546463f33fb426f6f623ece65fb41b907e", "patch": "@@ -1,5 +1,12 @@\n 2016-03-04  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/70062\n+\t* config/i386/i386.c (decide_alg): Add RECUR argument.  Revert\n+\t2016-02-22 changes, instead don't recurse if RECUR is already true.\n+\tDon't change *dynamic_check if RECUR.  Adjust recursive caller\n+\tto pass true to the new argument.\n+\t(ix86_expand_set_or_movmem): Adjust decide_alg caller.\n+\n \tPR target/70059\n \t* config/i386/sse.md (vec_set_lo_<mode><mask_name>,\n \t<extract_type_2>_vinsert<shuffletype><extract_suf_2>_mask): Formatting"}, {"sha": "1f98d5bdd171277617851dee25def90c0648b5ba", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 13, "deletions": 15, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/602045546463f33fb426f6f623ece65fb41b907e/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/602045546463f33fb426f6f623ece65fb41b907e/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=602045546463f33fb426f6f623ece65fb41b907e", "patch": "@@ -26032,14 +26032,13 @@ static enum stringop_alg\n decide_alg (HOST_WIDE_INT count, HOST_WIDE_INT expected_size,\n \t    unsigned HOST_WIDE_INT min_size, unsigned HOST_WIDE_INT max_size,\n \t    bool memset, bool zero_memset, bool have_as,\n-\t    int *dynamic_check, bool *noalign)\n+\t    int *dynamic_check, bool *noalign, bool recur)\n {\n   const struct stringop_algs *algs;\n   bool optimize_for_speed;\n   int max = 0;\n   const struct processor_costs *cost;\n   int i;\n-  HOST_WIDE_INT orig_expected_size = expected_size;\n   bool any_alg_usable_p = false;\n \n   *noalign = false;\n@@ -26157,19 +26156,18 @@ decide_alg (HOST_WIDE_INT count, HOST_WIDE_INT expected_size,\n       enum stringop_alg alg;\n       HOST_WIDE_INT new_expected_size = (max > 0 ? max : 4096) / 2;\n \n-      /* If there aren't any usable algorithms or if recursing with the\n-\t same arguments as before, then recursing on smaller sizes or\n-\t same size isn't going to find anything.  Just return the simple\n-\t byte-at-a-time copy loop.  */\n-      if (!any_alg_usable_p || orig_expected_size == new_expected_size)\n-        {\n-          /* Pick something reasonable.  */\n-          if (TARGET_INLINE_STRINGOPS_DYNAMICALLY)\n-            *dynamic_check = 128;\n-          return loop_1_byte;\n-        }\n+      /* If there aren't any usable algorithms or if recursing already,\n+\t then recursing on smaller sizes or same size isn't going to\n+\t find anything.  Just return the simple byte-at-a-time copy loop.  */\n+      if (!any_alg_usable_p || recur)\n+\t{\n+\t  /* Pick something reasonable.  */\n+\t  if (TARGET_INLINE_STRINGOPS_DYNAMICALLY && !recur)\n+\t    *dynamic_check = 128;\n+\t  return loop_1_byte;\n+\t}\n       alg = decide_alg (count, new_expected_size, min_size, max_size, memset,\n-\t\t\tzero_memset, have_as, dynamic_check, noalign);\n+\t\t\tzero_memset, have_as, dynamic_check, noalign, true);\n       gcc_assert (*dynamic_check == -1);\n       if (TARGET_INLINE_STRINGOPS_DYNAMICALLY)\n \t*dynamic_check = max;\n@@ -26430,7 +26428,7 @@ ix86_expand_set_or_movmem (rtx dst, rtx src, rtx count_exp, rtx val_exp,\n   alg = decide_alg (count, expected_size, min_size, probable_max_size,\n \t\t    issetmem,\n \t\t    issetmem && val_exp == const0_rtx, have_as,\n-\t\t    &dynamic_check, &noalign);\n+\t\t    &dynamic_check, &noalign, false);\n   if (alg == libcall)\n     return false;\n   gcc_assert (alg != no_stringop);"}, {"sha": "763364ff42ff3bdb15bfcfb86b0f5a2ee7d03be6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/602045546463f33fb426f6f623ece65fb41b907e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/602045546463f33fb426f6f623ece65fb41b907e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=602045546463f33fb426f6f623ece65fb41b907e", "patch": "@@ -1,3 +1,8 @@\n+2016-03-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/70062\n+\t* gcc.target/i386/pr70062.c: New test.\n+\n 2016-03-04  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* g++.dg/template/typename21.C: Remove c++98_only."}, {"sha": "e5cb854f2eed221b601a245741b42941af96606d", "filename": "gcc/testsuite/gcc.target/i386/pr70062.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/602045546463f33fb426f6f623ece65fb41b907e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70062.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/602045546463f33fb426f6f623ece65fb41b907e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70062.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70062.c?ref=602045546463f33fb426f6f623ece65fb41b907e", "patch": "@@ -0,0 +1,11 @@\n+/* PR target/70062 */\n+/* { dg-options \"-minline-all-stringops -minline-stringops-dynamically -mmemcpy-strategy=libcall:-1:noalign -Wno-psabi\" } */\n+/* { dg-additional-options \"-mtune=k6-2\" { target ia32 } } */\n+\n+typedef int V __attribute__ ((vector_size (32)));\n+\n+V\n+foo (V x)\n+{\n+  return (V) { x[0] };\n+}"}]}