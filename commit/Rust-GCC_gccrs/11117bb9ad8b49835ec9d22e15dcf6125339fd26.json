{"sha": "11117bb9ad8b49835ec9d22e15dcf6125339fd26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTExMTdiYjlhZDhiNDk4MzVlYzlkMjJlMTVkY2Y2MTI1MzM5ZmQyNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-07-05T21:48:04Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-07-05T21:48:04Z"}, "message": "(CPP_PREDEFINES): Define _AIX32.\n\n(ASM_DECLARE_FUNCTION_NAME, TEXT_SECTION_ASM_OP): Use \".text[PR]\" as csect\nname.\n(RS6000_CROR_BIT_NUMBER): New macro.\n(PRINT_OPERAND_PUNCT_VALID_P): Allow `.' as valid.\n\nFrom-SVN: r4847", "tree": {"sha": "76352ce0215bc996436a32605f5ee964094ffe82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76352ce0215bc996436a32605f5ee964094ffe82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11117bb9ad8b49835ec9d22e15dcf6125339fd26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11117bb9ad8b49835ec9d22e15dcf6125339fd26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11117bb9ad8b49835ec9d22e15dcf6125339fd26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11117bb9ad8b49835ec9d22e15dcf6125339fd26/comments", "author": null, "committer": null, "parents": [{"sha": "a8b3aeda411792a2585b8329273cefe3d5221f57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8b3aeda411792a2585b8329273cefe3d5221f57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8b3aeda411792a2585b8329273cefe3d5221f57"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "13d77452f45b38d95f4ea3c15230d973b31e15a5", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11117bb9ad8b49835ec9d22e15dcf6125339fd26/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11117bb9ad8b49835ec9d22e15dcf6125339fd26/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=11117bb9ad8b49835ec9d22e15dcf6125339fd26", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for IBM RS/6000.\n-   Copyright (C) 1992 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1993 Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@nyu.edu)\n \n This file is part of GNU CC.\n@@ -25,7 +25,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n /* Names to predefine in the preprocessor for this target machine.  */\n \n-#define CPP_PREDEFINES \"-D_IBMR2 -D_AIX\"\n+#define CPP_PREDEFINES \"-D_IBMR2 -D_AIX -D_AIX32\"\n \n /* Print subsidiary information on the compiler version in use.  */\n #define TARGET_VERSION ;\n@@ -1492,7 +1492,7 @@ toc_section ()\t\t\t\t\t\t\\\n   fprintf (FILE, \"\\t.long .\");\t\t\t\t\t\\\n   RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\t\\\n   fprintf (FILE, \", TOC[tc0], 0\\n\");\t\t\t\t\\\n-  fprintf (FILE, \".csect [PR]\\n.\");\t\t\t\t\\\n+  fprintf (FILE, \".csect .text[PR]\\n.\");\t\t\t\t\\\n   RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\t\\\n   fprintf (FILE, \":\\n\");\t\t\t\t\t\\\n   if (write_symbols == XCOFF_DEBUG)\t\t\t\t\\\n@@ -1631,7 +1631,7 @@ toc_section ()\t\t\t\t\t\t\\\n \n /* Output before instructions.  */\n \n-#define TEXT_SECTION_ASM_OP \".csect [PR]\"\n+#define TEXT_SECTION_ASM_OP \".csect .text[PR]\"\n \n /* Output before writable data.  */\n \n@@ -1680,6 +1680,10 @@ toc_section ()\t\t\t\t\t\t\\\n \n #define DBX_REGISTER_NUMBER(REGNO) (REGNO)\n \n+/* Bit number to use in cror after branch.  Different between AIX 3.2 and \n+   earlier systems.  */\n+#define RS6000_CROR_BIT_NUMBER 31\n+\n /* This is how to output the definition of a user-level label named NAME,\n    such as the label on a static function or variable NAME.  */\n \n@@ -1842,7 +1846,7 @@ toc_section ()\t\t\t\t\t\t\\\n \n /* Define which CODE values are valid.  */\n \n-#define PRINT_OPERAND_PUNCT_VALID_P(CODE)  0\n+#define PRINT_OPERAND_PUNCT_VALID_P(CODE)  ((CODE) == '.')\n \n /* Print a memory address as an operand to reference that memory location.  */\n "}]}