{"sha": "827e5d3f706ff07400025488c76e1ad7b3300d83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI3ZTVkM2Y3MDZmZjA3NDAwMDI1NDg4Yzc2ZTFhZDdiMzMwMGQ4Mw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-05-13T19:17:47Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-05-13T19:17:47Z"}, "message": "Improve diagnostic for forgotten ().\n\n\t* parser.c (cp_parser_postfix_dot_deref_expression): Use\n\tcomplete_type_or_else for unknown_type_node, too.\n\nFrom-SVN: r236220", "tree": {"sha": "6ea43c9d85b94e824f8c1b1e8df714cd5086d6a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ea43c9d85b94e824f8c1b1e8df714cd5086d6a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/827e5d3f706ff07400025488c76e1ad7b3300d83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/827e5d3f706ff07400025488c76e1ad7b3300d83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/827e5d3f706ff07400025488c76e1ad7b3300d83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/827e5d3f706ff07400025488c76e1ad7b3300d83/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a278aa17f4e95fb96762b75b8b75a6190ec95ac1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a278aa17f4e95fb96762b75b8b75a6190ec95ac1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a278aa17f4e95fb96762b75b8b75a6190ec95ac1"}], "stats": {"total": 23, "additions": 11, "deletions": 12}, "files": [{"sha": "06ce87f8ba6de06cf85b9e0aba6b87071802b5a8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/827e5d3f706ff07400025488c76e1ad7b3300d83/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/827e5d3f706ff07400025488c76e1ad7b3300d83/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=827e5d3f706ff07400025488c76e1ad7b3300d83", "patch": "@@ -1,3 +1,8 @@\n+2016-05-13  Jason Merrill  <jason@redhat.com>\n+\n+\t* parser.c (cp_parser_postfix_dot_deref_expression): Use\n+\tcomplete_type_or_else for unknown_type_node, too.\n+\n 2016-05-12  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/70756"}, {"sha": "7030740c239a0f62b19c2801fdd476a8ed15ad85", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/827e5d3f706ff07400025488c76e1ad7b3300d83/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/827e5d3f706ff07400025488c76e1ad7b3300d83/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=827e5d3f706ff07400025488c76e1ad7b3300d83", "patch": "@@ -7207,18 +7207,12 @@ cp_parser_postfix_dot_deref_expression (cp_parser *parser,\n \t underlying type here.  */\n       scope = non_reference (scope);\n       /* The type of the POSTFIX_EXPRESSION must be complete.  */\n-      if (scope == unknown_type_node)\n-\t{\n-\t  error_at (location, \"%qE does not have class type\",\n-\t\t    postfix_expression.get_value ());\n-\t  scope = NULL_TREE;\n-\t}\n       /* Unlike the object expression in other contexts, *this is not\n \t required to be of complete type for purposes of class member\n \t access (5.2.5) outside the member function body.  */\n-      else if (postfix_expression != current_class_ref\n-\t       && !(processing_template_decl && scope == current_class_type))\n-\tscope = complete_type_or_else (scope, NULL_TREE);\n+      if (postfix_expression != current_class_ref\n+\t  && !(processing_template_decl && scope == current_class_type))\n+\tscope = complete_type_or_else (scope, postfix_expression);\n       /* Let the name lookup machinery know that we are processing a\n \t class member access expression.  */\n       parser->context->object_type = scope;"}, {"sha": "012ff0c97dd8e406cad245fc1c60191530d545c2", "filename": "gcc/testsuite/g++.dg/gomp/udr-4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/827e5d3f706ff07400025488c76e1ad7b3300d83/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fudr-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/827e5d3f706ff07400025488c76e1ad7b3300d83/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fudr-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fudr-4.C?ref=827e5d3f706ff07400025488c76e1ad7b3300d83", "patch": "@@ -1,7 +1,7 @@\n // { dg-do compile }\n \n struct S;\t\t\t\t\t// { dg-message \"forward declaration\" }\n-#pragma omp declare reduction (+:S:omp_out.s += omp_in.s) // { dg-error \"invalid use of incomplete type\" }\n+#pragma omp declare reduction (+:S:omp_out.s += omp_in.s) // { dg-error \"incomplete type\" }\n struct S { int s; S () : s (1) {} };\n #pragma omp declare reduction (*:S:omp_out.s *= omp_in.s)\n "}, {"sha": "416ef9252873eceb857761f1c4a743ec00eecdda", "filename": "gcc/testsuite/g++.dg/parse/dot1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/827e5d3f706ff07400025488c76e1ad7b3300d83/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdot1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/827e5d3f706ff07400025488c76e1ad7b3300d83/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdot1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdot1.C?ref=827e5d3f706ff07400025488c76e1ad7b3300d83", "patch": "@@ -1,4 +1,4 @@\n // PR c++/24560\n \n struct A { void f(); };\n-void g() { A().f.a; } // { dg-error \"class\" }\n+void g() { A().f.a; } // { dg-error \"invalid use of member function\" }"}, {"sha": "8f1f6a736a8e7abe6a37d81da10f17a629e775da", "filename": "gcc/testsuite/g++.dg/template/pseudodtor3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/827e5d3f706ff07400025488c76e1ad7b3300d83/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpseudodtor3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/827e5d3f706ff07400025488c76e1ad7b3300d83/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpseudodtor3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpseudodtor3.C?ref=827e5d3f706ff07400025488c76e1ad7b3300d83", "patch": "@@ -5,7 +5,7 @@ struct A\n {\n   typedef int T;\n   T &foo ();\n-  A () { foo.~T (); }\t// { dg-error \"10:does not have class type|expected\" }\n+  A () { foo.~T (); }\t// { dg-error \"10:invalid use of member function|expected\" }\n };\n \n template <typename T> struct B"}]}