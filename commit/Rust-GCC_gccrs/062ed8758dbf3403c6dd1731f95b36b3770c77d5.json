{"sha": "062ed8758dbf3403c6dd1731f95b36b3770c77d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYyZWQ4NzU4ZGJmMzQwM2M2ZGQxNzMxZjk1YjM2YjM3NzBjNzdkNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-08-20T20:55:15Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-08-20T20:55:15Z"}, "message": "* name-lookup.c (hidden_name_p): Handle OVERLOAD.\n\nFrom-SVN: r227044", "tree": {"sha": "5ea7ad87147e05cca5d2800b0b67bdd84c0378da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ea7ad87147e05cca5d2800b0b67bdd84c0378da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/062ed8758dbf3403c6dd1731f95b36b3770c77d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/062ed8758dbf3403c6dd1731f95b36b3770c77d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/062ed8758dbf3403c6dd1731f95b36b3770c77d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/062ed8758dbf3403c6dd1731f95b36b3770c77d5/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4ba1fef27d93933704aef2a0b39aed2f9a2ab842", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ba1fef27d93933704aef2a0b39aed2f9a2ab842", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ba1fef27d93933704aef2a0b39aed2f9a2ab842"}], "stats": {"total": 49, "additions": 43, "deletions": 6}, "files": [{"sha": "245cf11df7810f35596c378d5e6963502ccb3ccb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062ed8758dbf3403c6dd1731f95b36b3770c77d5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062ed8758dbf3403c6dd1731f95b36b3770c77d5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=062ed8758dbf3403c6dd1731f95b36b3770c77d5", "patch": "@@ -1,3 +1,7 @@\n+2015-08-20  Jason Merrill  <jason@redhat.com>\n+\n+\t* name-lookup.c (hidden_name_p): Handle OVERLOAD.\n+\n 2015-08-20  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/67065"}, {"sha": "baaf3e7ca98e376a1814df7fb166a5b560572ce2", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062ed8758dbf3403c6dd1731f95b36b3770c77d5/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062ed8758dbf3403c6dd1731f95b36b3770c77d5/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=062ed8758dbf3403c6dd1731f95b36b3770c77d5", "patch": "@@ -4346,6 +4346,13 @@ hidden_name_p (tree val)\n       && TYPE_FUNCTION_OR_TEMPLATE_DECL_P (val)\n       && DECL_ANTICIPATED (val))\n     return true;\n+  if (TREE_CODE (val) == OVERLOAD)\n+    {\n+      for (tree o = val; o; o = OVL_CHAIN (o))\n+\tif (!hidden_name_p (OVL_FUNCTION (o)))\n+\t  return false;\n+      return true;\n+    }\n   return false;\n }\n "}, {"sha": "bb27773d7be6fb086fc9f9e14fea91d68a2af4d1", "filename": "gcc/testsuite/g++.dg/lookup/friend16.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062ed8758dbf3403c6dd1731f95b36b3770c77d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ffriend16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062ed8758dbf3403c6dd1731f95b36b3770c77d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ffriend16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Ffriend16.C?ref=062ed8758dbf3403c6dd1731f95b36b3770c77d5", "patch": "@@ -0,0 +1,24 @@\n+namespace std {\n+  class ostream;\n+}\n+\n+namespace N2 {\n+  class C0 {};\n+}\n+\n+std::ostream& operator<<( std::ostream& os_, const N2::C0& m_);\n+\n+namespace N1 {\n+  class C1 {\n+    friend std::ostream& operator<<(std::ostream& os, const C1& what);\n+  };\n+\n+  class C2 {\n+    friend std::ostream& operator<<(std::ostream& os, const C2& what);\n+  };\n+\n+  void foo(std::ostream & os, const N2::C0& m)\n+  {\n+    os << m; // Is this line valid?\n+  }\n+}"}, {"sha": "15ba1c271822a8c4b93a69195d13c6cda241b3a5", "filename": "gcc/testsuite/g++.dg/template/friend15.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062ed8758dbf3403c6dd1731f95b36b3770c77d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062ed8758dbf3403c6dd1731f95b36b3770c77d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend15.C?ref=062ed8758dbf3403c6dd1731f95b36b3770c77d5", "patch": "@@ -10,10 +10,11 @@ template <typename> class X {\n     struct Inner;\n \n     template <typename R>\n-    friend typename X<R>::Inner * foo () { return 0; }\n+    friend typename X<R>::Inner * foo (X<R>*) { return 0; }\n };\n template class X<void>;\n+X<void>* p;\n \n struct U {\n-    void bar () { foo<void> (); }\n+  void bar () { foo (p); }\n };"}, {"sha": "712d4889feaf28437c391e57b5f79b8613fd0f92", "filename": "gcc/testsuite/g++.dg/template/friend18.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062ed8758dbf3403c6dd1731f95b36b3770c77d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062ed8758dbf3403c6dd1731f95b36b3770c77d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend18.C?ref=062ed8758dbf3403c6dd1731f95b36b3770c77d5", "patch": "@@ -7,13 +7,14 @@\n \n template <int N> struct X\n {\n-  template <int M> friend int foo(X const &)\n+  template <int M> friend int foo(X const &, X<M> const&)\n   {\n     return N * 10000 + M;\n   }\n };\n X<1234> bring;\n+X<5678> brung;\n \n int main() {\n-  return foo<5678> (bring) != 12345678;\n+  return foo (bring, brung) != 12345678;\n }"}, {"sha": "db8b724635c72857139dab48ca064ee3c9d0d416", "filename": "gcc/testsuite/g++.old-deja/g++.pt/friend32.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062ed8758dbf3403c6dd1731f95b36b3770c77d5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ffriend32.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062ed8758dbf3403c6dd1731f95b36b3770c77d5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ffriend32.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ffriend32.C?ref=062ed8758dbf3403c6dd1731f95b36b3770c77d5", "patch": "@@ -7,8 +7,8 @@ struct S {\n };\n \n template class S<int, double>;\n-template char f(char, long, short);\n-template char* f(char*, long*, short*);\n+template char f(char, long, short); // { dg-error \"f\" }\n+template char* f(char*, long*, short*); // { dg-error \"f\" }\n \n template <class X, class Y, class Z>\n X f(X x, Y, Z) {"}]}