{"sha": "4bd03ed69bd789278a0286017b692f49052ffe5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJkMDNlZDY5YmQ3ODkyNzhhMDI4NjAxN2I2OTJmNDkwNTJmZmU1Yw==", "commit": {"author": {"name": "Frederik Harwath", "email": "frederik@codesourcery.com", "date": "2020-01-20T13:07:03Z"}, "committer": {"name": "Frederik Harwath", "email": "frederik@codesourcery.com", "date": "2020-01-24T08:14:51Z"}, "message": "Fix expectation and types in acc_get_property tests\n\n* Weaken expectation concerning acc_property_free_memory.\n  Do not expect the value returned by CUDA since that value might have\n  changed in the meantime.\n* Use correct type for the results of calls to acc_get_property in tests.\n\nlibgomp/\n\t* testsuite/libgomp.oacc-c-c++-common/acc_get_property-aux.c\n\t(expect_device_properties): Remove \"expected_free_mem\" argument,\n\tchange \"expected_total_mem\" argument type to size_t;\n\tchange types of acc_get_property results to size_t,\n\tadapt format strings.\n\t* testsuite/libgomp.oacc-c-c++-common/acc_get_property.c:\n\tUse %zu instead of %zd to print size_t values.\n\t* testsuite/libgomp.oacc-c-c++-common/acc_get_property-2.c: Adapt and\n\trename to ...\n\t* testsuite/libgomp.oacc-c-c++-common/acc_get_property-nvptx.c: ... this.\n\t* testsuite/libgomp.oacc-c-c++-common/acc_get_property-3.c: Adapt and\n\trename to ...\n\t* testsuite/libgomp.oacc-c-c++-common/acc_get_property-host.c: ... this.\n\nReviewed-by: Thomas Schwinge  <thomas@codesourcery.com>", "tree": {"sha": "97025ace807fa96ead5bd4f56ac46bd7a9f77a41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97025ace807fa96ead5bd4f56ac46bd7a9f77a41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bd03ed69bd789278a0286017b692f49052ffe5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bd03ed69bd789278a0286017b692f49052ffe5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bd03ed69bd789278a0286017b692f49052ffe5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bd03ed69bd789278a0286017b692f49052ffe5c/comments", "author": {"login": "frederik-h", "id": 22046314, "node_id": "MDQ6VXNlcjIyMDQ2MzE0", "avatar_url": "https://avatars.githubusercontent.com/u/22046314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frederik-h", "html_url": "https://github.com/frederik-h", "followers_url": "https://api.github.com/users/frederik-h/followers", "following_url": "https://api.github.com/users/frederik-h/following{/other_user}", "gists_url": "https://api.github.com/users/frederik-h/gists{/gist_id}", "starred_url": "https://api.github.com/users/frederik-h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frederik-h/subscriptions", "organizations_url": "https://api.github.com/users/frederik-h/orgs", "repos_url": "https://api.github.com/users/frederik-h/repos", "events_url": "https://api.github.com/users/frederik-h/events{/privacy}", "received_events_url": "https://api.github.com/users/frederik-h/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frederik-h", "id": 22046314, "node_id": "MDQ6VXNlcjIyMDQ2MzE0", "avatar_url": "https://avatars.githubusercontent.com/u/22046314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frederik-h", "html_url": "https://github.com/frederik-h", "followers_url": "https://api.github.com/users/frederik-h/followers", "following_url": "https://api.github.com/users/frederik-h/following{/other_user}", "gists_url": "https://api.github.com/users/frederik-h/gists{/gist_id}", "starred_url": "https://api.github.com/users/frederik-h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frederik-h/subscriptions", "organizations_url": "https://api.github.com/users/frederik-h/orgs", "repos_url": "https://api.github.com/users/frederik-h/repos", "events_url": "https://api.github.com/users/frederik-h/events{/privacy}", "received_events_url": "https://api.github.com/users/frederik-h/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9adea9392bdaf9518d6f9cfce3ac0f247f3154d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9adea9392bdaf9518d6f9cfce3ac0f247f3154d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9adea9392bdaf9518d6f9cfce3ac0f247f3154d2"}], "stats": {"total": 50, "additions": 25, "deletions": 25}, "files": [{"sha": "6bb0125014829279cf405ed3d86235f2ad66e16c", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/acc_get_property-aux.c", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bd03ed69bd789278a0286017b692f49052ffe5c/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_get_property-aux.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bd03ed69bd789278a0286017b692f49052ffe5c/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_get_property-aux.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_get_property-aux.c?ref=4bd03ed69bd789278a0286017b692f49052ffe5c", "patch": "@@ -8,9 +8,8 @@\n \n void expect_device_properties\n (acc_device_t dev_type, int dev_num,\n- int expected_total_mem, int expected_free_mem,\n- const char* expected_vendor, const char* expected_name,\n- const char* expected_driver)\n+ size_t expected_memory, const char* expected_vendor,\n+ const char* expected_name, const char* expected_driver)\n {\n   const char *vendor = acc_get_property_string (dev_num, dev_type,\n \t\t\t\t\t\tacc_property_vendor);\n@@ -21,22 +20,23 @@ void expect_device_properties\n       abort ();\n     }\n \n-  int total_mem = acc_get_property (dev_num, dev_type,\n-\t\t\t\t    acc_property_memory);\n-  if (total_mem != expected_total_mem)\n+  size_t total_mem = acc_get_property (dev_num, dev_type,\n+\t\t\t\t       acc_property_memory);\n+  if (total_mem != expected_memory)\n     {\n-      fprintf (stderr, \"Expected acc_property_memory to equal %d, \"\n-\t       \"but was %d.\\n\", expected_total_mem, total_mem);\n+      fprintf (stderr, \"Expected acc_property_memory to equal %zu, \"\n+\t       \"but was %zu.\\n\", expected_memory, total_mem);\n       abort ();\n \n     }\n \n-  int free_mem = acc_get_property (dev_num, dev_type,\n+  size_t free_mem = acc_get_property (dev_num, dev_type,\n \t\t\t\t   acc_property_free_memory);\n-  if (free_mem != expected_free_mem)\n+  if (free_mem > total_mem)\n     {\n-      fprintf (stderr, \"Expected acc_property_free_memory to equal %d, \"\n-\t       \"but was %d.\\n\", expected_free_mem, free_mem);\n+      fprintf (stderr, \"Expected acc_property_free_memory <= acc_property_memory\"\n+\t       \", but free memory was %zu and total memory was %zu.\\n\",\n+\t       free_mem, total_mem);\n       abort ();\n     }\n \n@@ -59,11 +59,11 @@ void expect_device_properties\n     }\n \n   int unknown_property = 16058;\n-  int v = acc_get_property (dev_num, dev_type, (acc_device_property_t)unknown_property);\n+  size_t v = acc_get_property (dev_num, dev_type, (acc_device_property_t)unknown_property);\n   if (v != 0)\n     {\n       fprintf (stderr, \"Expected value of unknown numeric property to equal 0, \"\n-\t       \"but was %d.\\n\", v);\n+\t       \"but was %zu.\\n\", v);\n       abort ();\n     }\n \n@@ -72,7 +72,7 @@ void expect_device_properties\n   if (s != NULL)\n     {\n       fprintf (stderr, \"Expected value of unknown string property to be NULL, \"\n-\t       \"but was %d.\\n\", s);\n+\t       \"but was %s.\\n\", s);\n       abort ();\n     }\n "}, {"sha": "f1cd7cfef39c67f953d51b95096a6a909185cf55", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/acc_get_property-host.c", "status": "renamed", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bd03ed69bd789278a0286017b692f49052ffe5c/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_get_property-host.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bd03ed69bd789278a0286017b692f49052ffe5c/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_get_property-host.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_get_property-host.c?ref=4bd03ed69bd789278a0286017b692f49052ffe5c", "patch": "@@ -8,12 +8,11 @@\n \n void expect_device_properties\n (acc_device_t dev_type, int dev_num,\n- int expected_total_mem, int expected_free_mem,\n- const char* expected_vendor, const char* expected_name,\n- const char* expected_driver);\n+ size_t expected_memory, const char* expected_vendor,\n+ const char* expected_name, const char* expected_driver);\n \n int main()\n {\n   printf (\"Checking acc_device_host device properties\\n\");\n-  expect_device_properties (acc_device_host, 0, 0, 0, \"GNU\", \"GOMP\", \"1.0\");\n+  expect_device_properties (acc_device_host, 0, 0, \"GNU\", \"GOMP\", \"1.0\");\n }", "previous_filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/acc_get_property-3.c"}, {"sha": "0dcaea7c3e8af376c94e5c7b8d56e1a6987b3ac9", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/acc_get_property-nvptx.c", "status": "renamed", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bd03ed69bd789278a0286017b692f49052ffe5c/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_get_property-nvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bd03ed69bd789278a0286017b692f49052ffe5c/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_get_property-nvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_get_property-nvptx.c?ref=4bd03ed69bd789278a0286017b692f49052ffe5c", "patch": "@@ -13,9 +13,8 @@\n \n void expect_device_properties\n (acc_device_t dev_type, int dev_num,\n- int expected_total_mem, int expected_free_mem,\n- const char* expected_vendor, const char* expected_name,\n- const char* expected_driver);\n+ size_t expected_memory, const char* expected_vendor,\n+ const char* expected_name, const char* expected_driver);\n \n int main ()\n {\n@@ -62,7 +61,9 @@ int main ()\n       snprintf (driver, sizeof driver, \"CUDA Driver %u.%u\",\n \t\tdriver_version / 1000, driver_version % 1000 / 10);\n \n+      /* Note that this check relies on the fact that the device numbering\n+\t used by the nvptx plugin agrees with the CUDA device ordering. */\n       expect_device_properties(acc_device_nvidia, dev_num,\n-\t\t\t       total_mem, free_mem, vendor, p.name, driver);\n+\t\t\t       total_mem, vendor, p.name, driver);\n     }\n }", "previous_filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/acc_get_property-2.c"}, {"sha": "388c66c1319a107a878aae0157c7b74a2b914853", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/acc_get_property.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bd03ed69bd789278a0286017b692f49052ffe5c/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_get_property.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bd03ed69bd789278a0286017b692f49052ffe5c/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_get_property.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_get_property.c?ref=4bd03ed69bd789278a0286017b692f49052ffe5c", "patch": "@@ -35,10 +35,10 @@ print_device_properties(acc_device_t type)\n \t}\n \n       v = acc_get_property (i, type,  acc_property_memory);\n-      printf (\"    Total memory: %zd\\n\", v);\n+      printf (\"    Total memory: %zu\\n\", v);\n \n       v = acc_get_property (i, type, acc_property_free_memory);\n-      printf (\"    Free memory: %zd\\n\", v);\n+      printf (\"    Free memory: %zu\\n\", v);\n \n       s = acc_get_property_string (i, type, acc_property_name);\n       printf (\"    Name: %s\\n\", s);"}]}