{"sha": "fbba7d685098eb2173db34b4e2dab4118cd47edb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJiYTdkNjg1MDk4ZWIyMTczZGIzNGI0ZTJkYWI0MTE4Y2Q0N2VkYg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-04-29T11:36:34Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-04-29T11:36:34Z"}, "message": "PropertyPermission.java: New version from classpath\n\n2003-04-29  Michael Koch  <konqueror@gmx.de>\n\n\t* java/util/PropertyPermission.java:\n\tNew version from classpath\n\t* java/util/ResourceBundle.java:\n\tPartly merged from classpath\n\t(getObject): Reformated.\n\t(tryBundle): Set foundBundle = null if no bundle found.\n\nFrom-SVN: r66214", "tree": {"sha": "627f67833f4cfa61711be0c631b952ae3de6e5ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/627f67833f4cfa61711be0c631b952ae3de6e5ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbba7d685098eb2173db34b4e2dab4118cd47edb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbba7d685098eb2173db34b4e2dab4118cd47edb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbba7d685098eb2173db34b4e2dab4118cd47edb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbba7d685098eb2173db34b4e2dab4118cd47edb/comments", "author": null, "committer": null, "parents": [{"sha": "cac9b0bcb14159dc05310d74adad4378a0e339bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cac9b0bcb14159dc05310d74adad4378a0e339bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cac9b0bcb14159dc05310d74adad4378a0e339bf"}], "stats": {"total": 46, "additions": 40, "deletions": 6}, "files": [{"sha": "189d9967fcc49f82a80d9a1f58b59d014ed508d8", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbba7d685098eb2173db34b4e2dab4118cd47edb/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbba7d685098eb2173db34b4e2dab4118cd47edb/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=fbba7d685098eb2173db34b4e2dab4118cd47edb", "patch": "@@ -1,3 +1,12 @@\n+2003-04-29  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/util/PropertyPermission.java:\n+\tNew version from classpath\n+\t* java/util/ResourceBundle.java:\n+\tPartly merged from classpath\n+\t(getObject): Reformated.\n+\t(tryBundle): Set foundBundle = null if no bundle found.\n+\n 2003-04-29  Michael Koch  <konqueror@gmx.de>\n \n \t* javax/swing/AbstractListModel.java,"}, {"sha": "0d439d888a78af279ed6224e5c9e57605bf3fbd6", "filename": "libjava/java/util/PropertyPermission.java", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbba7d685098eb2173db34b4e2dab4118cd47edb/libjava%2Fjava%2Futil%2FPropertyPermission.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbba7d685098eb2173db34b4e2dab4118cd47edb/libjava%2Fjava%2Futil%2FPropertyPermission.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FPropertyPermission.java?ref=fbba7d685098eb2173db34b4e2dab4118cd47edb", "patch": "@@ -121,7 +121,7 @@ public PropertyPermission(String name, String actions)\n     super(name);\n     if (actions == null)\n       throw new IllegalArgumentException();\n-    setActions(actions.toLowerCase());\n+    setActions(actions);\n   }\n \n   /**\n@@ -134,14 +134,37 @@ public PropertyPermission(String name, String actions)\n    */\n   private void setActions(String str)\n   {\n+    // Initialising the class java.util.Locale ...\n+    //    tries to initialise the Locale.defaultLocale static\n+    //    which calls System.getProperty, \n+    //    which calls SecurityManager.checkPropertiesAccess,\n+    //    which creates a PropertyPermission with action \"read,write\",\n+    //    which calls setActions(\"read,write\").\n+    // If we now were to call toLowerCase on 'str',\n+    //    this would call Locale.getDefault() which returns null\n+    //       because Locale.defaultLocale hasn't been set yet\n+    //    then toLowerCase will fail with a null pointer exception.\n+    // \n+    // The solution is to take a punt on 'str' being lower case, and\n+    // test accordingly.  If that fails, we convert 'str' to lower case \n+    // and try the tests again.\n     if (\"read\".equals(str))\n       actions = READ;\n     else if (\"write\".equals(str))\n       actions = WRITE;\n     else if (\"read,write\".equals(str) || \"write,read\".equals(str))\n       actions = READ | WRITE;\n-    else\n-      throw new IllegalArgumentException(\"illegal action \" + str);\n+    else {\n+      String lstr = str.toLowerCase();\n+      if (\"read\".equals(lstr))\n+\tactions = READ;\n+      else if (\"write\".equals(lstr))\n+\tactions = WRITE;\n+      else if (\"read,write\".equals(lstr) || \"write,read\".equals(lstr))\n+\tactions = READ | WRITE;\n+      else\n+\tthrow new IllegalArgumentException(\"illegal action \" + str);\n+    }\n   }\n \n   /**"}, {"sha": "7a4a282e773e5da5bf5ecec830ab66a811cbbce7", "filename": "libjava/java/util/ResourceBundle.java", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbba7d685098eb2173db34b4e2dab4118cd47edb/libjava%2Fjava%2Futil%2FResourceBundle.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbba7d685098eb2173db34b4e2dab4118cd47edb/libjava%2Fjava%2Futil%2FResourceBundle.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FResourceBundle.java?ref=fbba7d685098eb2173db34b4e2dab4118cd47edb", "patch": "@@ -1,5 +1,5 @@\n /* ResourceBundle -- aids in loading resource bundles\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2003 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -182,8 +182,9 @@ public final Object getObject(String key)\n       catch (MissingResourceException ex)\n         {\n         }\n-    throw new MissingResourceException(\"Key not found\",\n-                                       getClass().getName(), key);\n+ \n+    throw new MissingResourceException(\"Key not found\", getClass().getName(),\n+\t\t\t\t       key);\n   }\n \n   /**\n@@ -470,6 +471,7 @@ private static final ResourceBundle tryBundle(String localizedName,\n     catch (Exception ex)\n       {\n         // ignore them all\n+\tfoundBundle = null;\n       }\n     if (foundBundle == null)\n       {"}]}