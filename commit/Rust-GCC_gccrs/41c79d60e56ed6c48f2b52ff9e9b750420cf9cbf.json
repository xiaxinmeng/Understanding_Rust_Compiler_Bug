{"sha": "41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFjNzlkNjBlNTZlZDZjNDhmMmI1MmZmOWU5Yjc1MDQyMGNmOWNiZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-30T15:01:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-30T15:01:55Z"}, "message": "[multiple changes]\n\n2014-07-30  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch7.adb, checks.adb, makeutl.adb, makeutl.ads: Minor reformatting.\n\n2014-07-30  Yannick Moy  <moy@adacore.com>\n\n\t* checks.ads: Fix typo in comment.\n\n2014-07-30  Pierre-Marie Derodat  <derodat@adacore.com>\n\n\t* sem_util.adb (Set_Debug_Info_Needed): For scalar types, recurse on\n\tentities that materialize range bounds, if any.\n\n2014-07-30  Vincent Celier  <celier@adacore.com>\n\n\t* projects.texi: Minor spelling fix.\n\nFrom-SVN: r213292", "tree": {"sha": "596ec2e35a3dcf2422131c5c69bc15ef43f329c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/596ec2e35a3dcf2422131c5c69bc15ef43f329c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf/comments", "author": null, "committer": null, "parents": [{"sha": "8e8889204245049467914f72b9ff664f31e56e24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e8889204245049467914f72b9ff664f31e56e24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e8889204245049467914f72b9ff664f31e56e24"}], "stats": {"total": 124, "additions": 78, "deletions": 46}, "files": [{"sha": "0ec4d21f0162b1c685b2e5e28e1b118e784f74aa", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf", "patch": "@@ -1,3 +1,20 @@\n+2014-07-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch7.adb, checks.adb, makeutl.adb, makeutl.ads: Minor reformatting.\n+\n+2014-07-30  Yannick Moy  <moy@adacore.com>\n+\n+\t* checks.ads: Fix typo in comment.\n+\n+2014-07-30  Pierre-Marie Derodat  <derodat@adacore.com>\n+\n+\t* sem_util.adb (Set_Debug_Info_Needed): For scalar types, recurse on\n+\tentities that materialize range bounds, if any.\n+\n+2014-07-30  Vincent Celier  <celier@adacore.com>\n+\n+\t* projects.texi: Minor spelling fix.\n+\n 2014-07-30  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* checks.adb (Make_Bignum_Block): Use the new secondary stack"}, {"sha": "7d8935b0555e92f283e441bbdb33d40cd8f64e6d", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf", "patch": "@@ -7473,13 +7473,11 @@ package body Checks is\n \n    function Make_Bignum_Block (Loc : Source_Ptr) return Node_Id is\n       M : constant Entity_Id := Make_Defining_Identifier (Loc, Name_uM);\n-\n    begin\n       return\n         Make_Block_Statement (Loc,\n           Declarations               =>\n             New_List (Build_SS_Mark_Call (Loc, M)),\n-\n           Handled_Statement_Sequence =>\n             Make_Handled_Sequence_Of_Statements (Loc,\n               Statements => New_List (Build_SS_Release_Call (Loc, M))));"}, {"sha": "d231e3dfe3ecb34af96ea5bc4fa1970d142a94de", "filename": "gcc/ada/checks.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf/gcc%2Fada%2Fchecks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf/gcc%2Fada%2Fchecks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.ads?ref=41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf", "patch": "@@ -312,8 +312,10 @@ package Checks is\n    --  Similar to Determine_Range, but for a node N of floating-point type. OK\n    --  is True on return only for IEEE floating-point types and only if we do\n    --  not have to worry about extended precision (i.e. on the x86, we must be\n-   --  using -msse2 -mfpmath=sse. At the current time, this is used only in\n+   --  using -msse2 -mfpmath=sse). At the current time, this is used only in\n    --  GNATprove, though we could consider using it more generally in future.\n+   --  For that to happen, the possibility of arguments of infinite or NaN\n+   --  value should be taken into account, which is not the case currently.\n \n    procedure Install_Null_Excluding_Check (N : Node_Id);\n    --  Determines whether an access node requires a runtime access check and"}, {"sha": "e4ca02aab15e301a8bad98763b9d8cf8612b80c6", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 20, "deletions": 30, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf", "patch": "@@ -875,9 +875,7 @@ package body Exp_Ch7 is\n       --  types where the designated type is explicitly derived from [Limited_]\n       --  Controlled.\n \n-      elsif VM_Target /= No_VM\n-        and then not Is_Controlled (Desig_Typ)\n-      then\n+      elsif VM_Target /= No_VM and then not Is_Controlled (Desig_Typ) then\n          return;\n \n       --  Do not create finalization masters in SPARK mode because they result\n@@ -1609,7 +1607,7 @@ package body Exp_Ch7 is\n             --  When the finalizer acts solely as a clean up routine, the body\n             --  is inserted right after the spec.\n \n-            if Acts_As_Clean and then not Has_Ctrl_Objs then\n+            if Acts_As_Clean and not Has_Ctrl_Objs then\n                Insert_After (Fin_Spec, Fin_Body);\n \n             --  In all other cases the body is inserted after either:\n@@ -1817,7 +1815,7 @@ package body Exp_Ch7 is\n                elsif Is_Access_Type (Obj_Typ)\n                  and then Present (Status_Flag_Or_Transient_Decl (Obj_Id))\n                  and then Nkind (Status_Flag_Or_Transient_Decl (Obj_Id)) =\n-                                   N_Object_Declaration\n+                                                       N_Object_Declaration\n                then\n                   Processing_Actions (Has_No_Init => True);\n \n@@ -1867,9 +1865,8 @@ package body Exp_Ch7 is\n \n                elsif Ekind (Obj_Id) = E_Variable\n                  and then not In_Library_Level_Package_Body (Obj_Id)\n-                 and then\n-                   (Is_Simple_Protected_Type (Obj_Typ)\n-                     or else Has_Simple_Protected_Object (Obj_Typ))\n+                 and then (Is_Simple_Protected_Type (Obj_Typ)\n+                            or else Has_Simple_Protected_Object (Obj_Typ))\n                then\n                   Processing_Actions (Is_Protected => True);\n                end if;\n@@ -2205,7 +2202,7 @@ package body Exp_Ch7 is\n \n             --  For constrained or tagged results escalate the condition to\n             --  include the allocation format. Generate:\n-            --\n+\n             --    if BIPallocform > Secondary_Stack'Pos\n             --      and then BIPfinalizationmaster /= null\n             --    then\n@@ -2941,13 +2938,13 @@ package body Exp_Ch7 is\n         and then\n           (not Is_Library_Level_Entity (Spec_Id)\n \n-             --  Nested packages are considered to be library level entities,\n-             --  but do not need to be processed separately. True library level\n-             --  packages have a scope value of 1.\n+            --  Nested packages are considered to be library level entities,\n+            --  but do not need to be processed separately. True library level\n+            --  packages have a scope value of 1.\n \n-             or else Scope_Depth_Value (Spec_Id) /= Uint_1\n-             or else (Is_Generic_Instance (Spec_Id)\n-                       and then Package_Instantiation (Spec_Id) /= N))\n+            or else Scope_Depth_Value (Spec_Id) /= Uint_1\n+            or else (Is_Generic_Instance (Spec_Id)\n+                      and then Package_Instantiation (Spec_Id) /= N))\n       then\n          return;\n       end if;\n@@ -3456,8 +3453,7 @@ package body Exp_Ch7 is\n    begin\n       if Has_Discriminants (U_Typ)\n         and then Nkind (Parent (U_Typ)) = N_Full_Type_Declaration\n-        and then\n-          Nkind (Type_Definition (Parent (U_Typ))) = N_Record_Definition\n+        and then Nkind (Type_Definition (Parent (U_Typ))) = N_Record_Definition\n         and then\n           Present\n             (Variant_Part (Component_List (Type_Definition (Parent (U_Typ)))))\n@@ -4967,8 +4963,8 @@ package body Exp_Ch7 is\n       --  it is not part of a statement list. The actions must be inserted\n       --  before the select itself, which is part of some list of statements.\n       --  Note that the triggering alternative includes the triggering\n-      --  statement and an optional statement list. If the node to be wrapped\n-      --  is part of that list, the normal insertion applies.\n+      --  statement and an optional statement list. If the node to be\n+      --  wrapped is part of that list, the normal insertion applies.\n \n       if Nkind (Parent (Node_To_Wrap)) = N_Triggering_Alternative\n         and then not Is_List_Member (Node_To_Wrap)\n@@ -7004,9 +7000,7 @@ package body Exp_Ch7 is\n \n          --    Deep_Finalize (Obj._parent, False);\n \n-         if Is_Tagged_Type (Typ)\n-           and then Is_Derived_Type (Typ)\n-         then\n+         if Is_Tagged_Type (Typ) and then Is_Derived_Type (Typ) then\n             declare\n                Par_Typ  : constant Entity_Id := Parent_Field_Type (Typ);\n                Call     : Node_Id;\n@@ -7061,9 +7055,7 @@ package body Exp_Ch7 is\n          --  Finalize the object. This action must be performed first before\n          --  all components have been finalized.\n \n-         if Is_Controlled (Typ)\n-           and then not Is_Local\n-         then\n+         if Is_Controlled (Typ) and then not Is_Local then\n             declare\n                Fin_Stmt : Node_Id;\n                Proc     : Entity_Id;\n@@ -7761,9 +7753,7 @@ package body Exp_Ch7 is\n \n       --  Deal with non-tagged derivation of private views\n \n-      if Is_Untagged_Derivation (Typ)\n-        and then not Is_Conc\n-      then\n+      if Is_Untagged_Derivation (Typ) and then not Is_Conc then\n          Utyp := Underlying_Type (Root_Type (Base_Type (Typ)));\n          Ref  := Unchecked_Convert_To (Utyp, Ref);\n \n@@ -8226,11 +8216,11 @@ package body Exp_Ch7 is\n       --    declare\n       --       M : constant Mark_Id := SS_Mark;\n       --       procedure Finalizer is ...  (See Build_Finalizer)\n-      --\n+\n       --    begin\n       --       Temp := <Expr>;                           --  general case\n       --       Temp := (if <Expr> then True else False); --  boolean case\n-      --\n+\n       --    at end\n       --       Finalizer;\n       --    end;"}, {"sha": "88826c73af85921436d021049331b5f0862096c1", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf", "patch": "@@ -624,13 +624,11 @@ package body Makeutl is\n                   end if;\n \n                elsif Sw'Length >= 4\n-                 and then (Sw (2 .. 3) = \"aL\"\n-                             or else\n-                           Sw (2 .. 3) = \"aO\"\n-                             or else\n-                           Sw (2 .. 3) = \"aI\"\n-                             or else\n-                               (For_Gnatbind and then Sw (2 .. 3) = \"A=\"))\n+                 and then\n+                   (Sw (2 .. 3) = \"aL\" or else\n+                    Sw (2 .. 3) = \"aO\" or else\n+                    Sw (2 .. 3) = \"aI\"\n+                      or else (For_Gnatbind and then Sw (2 .. 3) = \"A=\"))\n                then\n                   Start := 4;\n \n@@ -2562,7 +2560,7 @@ package body Makeutl is\n                if Source.Id.Path.Name = Q.Table (J).Info.Id.Path.Name\n                  and then Source.Id.Index = Q.Table (J).Info.Id.Index\n                  and then Source.Id.Project.Path.Name =\n-                          Q.Table (J).Info.Id.Project.Path.Name\n+                            Q.Table (J).Info.Id.Project.Path.Name\n                then\n                   --  No need to insert this source in the queue, but still\n                   --  return True as we may need to insert its roots.\n@@ -3193,9 +3191,8 @@ package body Makeutl is\n          else\n             Data.Closure_Needed   :=\n               Has_Mains\n-              or else\n-                (Root_Project.Library\n-                 and then Root_Project.Standalone_Library /= No);\n+                or else (Root_Project.Library\n+                          and then Root_Project.Standalone_Library /= No);\n             Data.Need_Compilation := All_Phases or Option_Compile_Only;\n             Data.Need_Binding     := All_Phases or Option_Bind_Only;\n             Data.Need_Linking     := (All_Phases or Option_Link_Only)"}, {"sha": "ab8068bd22cc9d0bb36669b892be910a5f92cabd", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf", "patch": "@@ -506,7 +506,7 @@ package Makeutl is\n       --  project-based files (in which case we have a full Source_Id record).\n \n       No_Source_Info : constant Source_Info :=\n-                                  (Format_Gprbuild, null, null, False);\n+                         (Format_Gprbuild, null, null, False);\n \n       procedure Initialize\n         (Queue_Per_Obj_Dir : Boolean;"}, {"sha": "65df6f732046093774811800a42b2baff7832134", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf", "patch": "@@ -1767,6 +1767,10 @@ Other library-related attributes can be used to change the defaults:\n   This attribute may be used to specify additional switches (last switches)\n   when linking a shared library.\n \n+  It may also be used to add foreign object files in a static library.\n+  Each string in Library_Options is an absolute or relative path of an object\n+  file. When a relative path, it is relative to the object directory.\n+\n @item @b{Leading_Library_Options}:\n @cindex @code{Leading_Library_Options}\n   This attribute, that is taken into account only by @command{gprbuild}, may be\n@@ -2889,7 +2893,7 @@ static library named @file{libagg.a} into the @file{lagg}\n directory. An aggregate library project has the same set of\n restriction as a standard library project.\n \n-Note that a shared aggregate library project cannot aggregates a\n+Note that a shared aggregate library project cannot aggregate a\n static library project. In platforms where a compiler option is\n required to create relocatable object files, a Builder package in the\n aggregate library project may be used:"}, {"sha": "9759a6236841a30fba1f97b721e58112e8a67b3d", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=41c79d60e56ed6c48f2b52ff9e9b750420cf9cbf", "patch": "@@ -15997,6 +15997,30 @@ package body Sem_Util is\n \n          elsif Is_Protected_Type (T) then\n             Set_Debug_Info_Needed_If_Not_Set (Corresponding_Record_Type (T));\n+\n+         elsif Is_Scalar_Type (T) then\n+\n+            --  If the subrange bounds are materialized by dedicated constant\n+            --  objects, also include them to the debug info to make sure the\n+            --  debugger can properly use them.\n+\n+            if Present (Scalar_Range (T))\n+              and then Nkind (Scalar_Range (T)) = N_Range\n+            then\n+               declare\n+                  Low_Bnd  : constant Node_Id := Type_Low_Bound (T);\n+                  High_Bnd : constant Node_Id := Type_High_Bound (T);\n+\n+               begin\n+                  if Is_Entity_Name (Low_Bnd) then\n+                     Set_Debug_Info_Needed_If_Not_Set (Entity (Low_Bnd));\n+                  end if;\n+\n+                  if Is_Entity_Name (High_Bnd) then\n+                     Set_Debug_Info_Needed_If_Not_Set (Entity (High_Bnd));\n+                  end if;\n+               end;\n+            end if;\n          end if;\n       end if;\n    end Set_Debug_Info_Needed;"}]}