{"sha": "c7b1ed2b88ec0e8079c07ce759c73b83ded3b41c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdiMWVkMmI4OGVjMGU4MDc5YzA3Y2U3NTljNzNiODNkZWQzYjQxYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-03-22T14:11:37Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-03-22T14:11:37Z"}, "message": "(optimize_reg_copy_1): Only update reg_live_length if it is\nnon-negative.\n\nFrom-SVN: r11596", "tree": {"sha": "cdf04df88173348b8dc41cbb84125e2ecba605b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cdf04df88173348b8dc41cbb84125e2ecba605b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7b1ed2b88ec0e8079c07ce759c73b83ded3b41c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7b1ed2b88ec0e8079c07ce759c73b83ded3b41c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7b1ed2b88ec0e8079c07ce759c73b83ded3b41c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7b1ed2b88ec0e8079c07ce759c73b83ded3b41c/comments", "author": null, "committer": null, "parents": [{"sha": "55e442880910dbb1be014c09f2d84f0fb48d27c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55e442880910dbb1be014c09f2d84f0fb48d27c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55e442880910dbb1be014c09f2d84f0fb48d27c4"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "bde83b2e4c3f27ef2270dea11ef9840dd8b7ab1b", "filename": "gcc/local-alloc.c", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b1ed2b88ec0e8079c07ce759c73b83ded3b41c/gcc%2Flocal-alloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b1ed2b88ec0e8079c07ce759c73b83ded3b41c/gcc%2Flocal-alloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flocal-alloc.c?ref=c7b1ed2b88ec0e8079c07ce759c73b83ded3b41c", "patch": "@@ -818,18 +818,24 @@ optimize_reg_copy_1 (insn, dest, src)\n \t    {\n \t      if (sregno >= FIRST_PSEUDO_REGISTER)\n \t\t{\n-\t\t  reg_live_length[sregno] -= length;\n-\t\t  /* reg_live_length is only an approximation after combine\n-\t\t     if sched is not run, so make sure that we still have\n-\t\t     a reasonable value.  */\n-\t\t  if (reg_live_length[sregno] < 2)\n-\t\t    reg_live_length[sregno] = 2;\n+\t\t  if (reg_live_length[sregno] >= 0)\n+\t\t    {\n+\t\t      reg_live_length[sregno] -= length;\n+\t\t      /* reg_live_length is only an approximation after\n+\t\t\t combine if sched is not run, so make sure that we\n+\t\t\t still have a reasonable value.  */\n+\t\t      if (reg_live_length[sregno] < 2)\n+\t\t\treg_live_length[sregno] = 2;\n+\t\t    }\n+\n \t\t  reg_n_calls_crossed[sregno] -= n_calls;\n \t\t}\n \n \t      if (dregno >= FIRST_PSEUDO_REGISTER)\n \t\t{\n-\t\t  reg_live_length[dregno] += d_length;\n+\t\t  if (reg_live_length[dregno] >= 0)\n+\t\t    reg_live_length[dregno] += d_length;\n+\n \t\t  reg_n_calls_crossed[dregno] += d_n_calls;\n \t\t}\n "}]}