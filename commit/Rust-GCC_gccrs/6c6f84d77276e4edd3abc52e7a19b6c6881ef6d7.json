{"sha": "6c6f84d77276e4edd3abc52e7a19b6c6881ef6d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM2Zjg0ZDc3Mjc2ZTRlZGQzYWJjNTJlN2ExOWI2YzY4ODFlZjZkNw==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-11-25T05:25:43Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-11-25T05:25:43Z"}, "message": "graphite-clast-to-gimple.c (gloog): Do not call sese_reset_aux_in_loops.\n\n2009-10-26  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-clast-to-gimple.c (gloog): Do not call\n\tsese_reset_aux_in_loops.\n\t* graphite-sese-to-poly.c (build_loop_iteration_domains): Pass an\n\textra argument for domains.  Do not use loop->aux.\n\t(build_scop_iteration_domain): Initialize and free domains, pass it\n\tto build_loop_iteration_domains and extract the information from\n\tdomains.  Do not use loop->aux.\n\t* sese.c (sese_reset_aux_in_loops): Removed.\n\t* sese.h (sese_reset_aux_in_loops): Removed.\n\nFrom-SVN: r154627", "tree": {"sha": "a16c5437c17c615f8dae61ea40b98656d3926d38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a16c5437c17c615f8dae61ea40b98656d3926d38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c6f84d77276e4edd3abc52e7a19b6c6881ef6d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c6f84d77276e4edd3abc52e7a19b6c6881ef6d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c6f84d77276e4edd3abc52e7a19b6c6881ef6d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c6f84d77276e4edd3abc52e7a19b6c6881ef6d7/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "585b3e19fe12eb1525ba20557aa993233cc5fab3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/585b3e19fe12eb1525ba20557aa993233cc5fab3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/585b3e19fe12eb1525ba20557aa993233cc5fab3"}], "stats": {"total": 58, "additions": 30, "deletions": 28}, "files": [{"sha": "e67bce75c10dce8ffe3483db40d442e899a86ac8", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6f84d77276e4edd3abc52e7a19b6c6881ef6d7/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6f84d77276e4edd3abc52e7a19b6c6881ef6d7/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=6c6f84d77276e4edd3abc52e7a19b6c6881ef6d7", "patch": "@@ -1,3 +1,15 @@\n+2009-10-26  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-clast-to-gimple.c (gloog): Do not call\n+\tsese_reset_aux_in_loops.\n+\t* graphite-sese-to-poly.c (build_loop_iteration_domains): Pass an\n+\textra argument for domains.  Do not use loop->aux.\n+\t(build_scop_iteration_domain): Initialize and free domains, pass it\n+\tto build_loop_iteration_domains and extract the information from\n+\tdomains.  Do not use loop->aux.\n+\t* sese.c (sese_reset_aux_in_loops): Removed.\n+\t* sese.h (sese_reset_aux_in_loops): Removed.\n+\n 2009-10-26  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-clast-to-gimple.c (find_pbb_via_hash): Moved up."}, {"sha": "85941908663dc75e296919145258b9a35f87fdcb", "filename": "gcc/graphite-clast-to-gimple.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6f84d77276e4edd3abc52e7a19b6c6881ef6d7/gcc%2Fgraphite-clast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6f84d77276e4edd3abc52e7a19b6c6881ef6d7/gcc%2Fgraphite-clast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.c?ref=6c6f84d77276e4edd3abc52e7a19b6c6881ef6d7", "patch": "@@ -1193,7 +1193,6 @@ gloog (scop_p scop, htab_t bb_pbb_mapping)\n \t\t\t\t\tif_region->true_region->entry,\n \t\t\t\t\trename_map, &newivs, newivs_index,\n \t\t\t\t\tbb_pbb_mapping, 1);\n-  sese_reset_aux_in_loops (region);\n   graphite_verify ();\n   sese_adjust_liveout_phis (region, rename_map,\n \t\t\t    if_region->region->exit->src,"}, {"sha": "d3a24037954110277b6fa391713c587f40cf3dea", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6f84d77276e4edd3abc52e7a19b6c6881ef6d7/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6f84d77276e4edd3abc52e7a19b6c6881ef6d7/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=6c6f84d77276e4edd3abc52e7a19b6c6881ef6d7", "patch": "@@ -1066,7 +1066,8 @@ gbb_from_bb (basic_block bb)\n \n static void\n build_loop_iteration_domains (scop_p scop, struct loop *loop,\n-                              ppl_Polyhedron_t outer_ph, int nb)\n+                              ppl_Polyhedron_t outer_ph, int nb,\n+\t\t\t      ppl_Pointset_Powerset_C_Polyhedron_t *domains)\n {\n   int i;\n   ppl_Polyhedron_t ph;\n@@ -1205,15 +1206,15 @@ build_loop_iteration_domains (scop_p scop, struct loop *loop,\n     gcc_unreachable ();\n \n   if (loop->inner && loop_in_sese_p (loop->inner, region))\n-    build_loop_iteration_domains (scop, loop->inner, ph, nb + 1);\n+    build_loop_iteration_domains (scop, loop->inner, ph, nb + 1, domains);\n \n   if (nb != 0\n       && loop->next\n       && loop_in_sese_p (loop->next, region))\n-    build_loop_iteration_domains (scop, loop->next, outer_ph, nb);\n+    build_loop_iteration_domains (scop, loop->next, outer_ph, nb, domains);\n \n   ppl_new_Pointset_Powerset_C_Polyhedron_from_C_Polyhedron\n-    ((ppl_Pointset_Powerset_C_Polyhedron_t *) &loop->aux, ph);\n+    (&domains[loop->num], ph);\n \n   ppl_delete_Polyhedron (ph);\n }\n@@ -1592,31 +1593,34 @@ build_scop_iteration_domain (scop_p scop)\n   int i;\n   ppl_Polyhedron_t ph;\n   poly_bb_p pbb;\n+  int nb_loops = number_of_loops ();\n+  ppl_Pointset_Powerset_C_Polyhedron_t *domains\n+    = XNEWVEC (ppl_Pointset_Powerset_C_Polyhedron_t, nb_loops);\n+\n+  for (i = 0; i < nb_loops; i++)\n+    domains[i] = NULL;\n \n   ppl_new_C_Polyhedron_from_space_dimension (&ph, scop_nb_params (scop), 0);\n \n   for (i = 0; VEC_iterate (loop_p, SESE_LOOP_NEST (region), i, loop); i++)\n     if (!loop_in_sese_p (loop_outer (loop), region))\n-      build_loop_iteration_domains (scop, loop, ph, 0);\n+      build_loop_iteration_domains (scop, loop, ph, 0, domains);\n \n   for (i = 0; VEC_iterate (poly_bb_p, SCOP_BBS (scop), i, pbb); i++)\n-    if (gbb_loop (PBB_BLACK_BOX (pbb))->aux)\n+    if (domains[gbb_loop (PBB_BLACK_BOX (pbb))->num])\n       ppl_new_Pointset_Powerset_C_Polyhedron_from_Pointset_Powerset_C_Polyhedron\n \t(&PBB_DOMAIN (pbb), (ppl_const_Pointset_Powerset_C_Polyhedron_t)\n-\t gbb_loop (PBB_BLACK_BOX (pbb))->aux);\n+\t domains[gbb_loop (PBB_BLACK_BOX (pbb))->num]);\n     else\n       ppl_new_Pointset_Powerset_C_Polyhedron_from_C_Polyhedron\n \t(&PBB_DOMAIN (pbb), ph);\n \n-  for (i = 0; VEC_iterate (loop_p, SESE_LOOP_NEST (region), i, loop); i++)\n-    if (loop->aux)\n-      {\n-\tppl_delete_Pointset_Powerset_C_Polyhedron\n-\t  ((ppl_Pointset_Powerset_C_Polyhedron_t) loop->aux);\n-\tloop->aux = NULL;\n-      }\n+  for (i = 0; i < nb_loops; i++)\n+    if (domains[i])\n+      ppl_delete_Pointset_Powerset_C_Polyhedron (domains[i]);\n \n   ppl_delete_Polyhedron (ph);\n+  free (domains);\n }\n \n /* Add a constrain to the ACCESSES polyhedron for the alias set of"}, {"sha": "76c92bd08b78e2e501ea7459c672ee54e688dfae", "filename": "gcc/sese.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6f84d77276e4edd3abc52e7a19b6c6881ef6d7/gcc%2Fsese.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6f84d77276e4edd3abc52e7a19b6c6881ef6d7/gcc%2Fsese.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsese.c?ref=6c6f84d77276e4edd3abc52e7a19b6c6881ef6d7", "patch": "@@ -1458,18 +1458,6 @@ move_sese_in_condition (sese region)\n   return if_region;\n }\n \n-/* Reset the loop->aux pointer for all loops in REGION.  */\n-\n-void\n-sese_reset_aux_in_loops (sese region)\n-{\n-  int i;\n-  loop_p loop;\n-\n-  for (i = 0; VEC_iterate (loop_p, SESE_LOOP_NEST (region), i, loop); i++)\n-    loop->aux = NULL;\n-}\n-\n /* Returns the scalar evolution of T in REGION.  Every variable that\n    is not defined in the REGION is considered a parameter.  */\n "}, {"sha": "73d5adec45df9c9204ca808ee13feb2553e0c91e", "filename": "gcc/sese.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6f84d77276e4edd3abc52e7a19b6c6881ef6d7/gcc%2Fsese.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6f84d77276e4edd3abc52e7a19b6c6881ef6d7/gcc%2Fsese.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsese.h?ref=6c6f84d77276e4edd3abc52e7a19b6c6881ef6d7", "patch": "@@ -68,7 +68,6 @@ extern edge copy_bb_and_scalar_dependences (basic_block, sese, edge, htab_t);\n extern struct loop *outermost_loop_in_sese (sese, basic_block);\n extern void insert_loop_close_phis (htab_t, loop_p);\n extern void insert_guard_phis (basic_block, edge, edge, htab_t, htab_t);\n-extern void sese_reset_aux_in_loops (sese);\n extern tree scalar_evolution_in_region (sese, loop_p, tree);\n \n /* Check that SESE contains LOOP.  */"}]}