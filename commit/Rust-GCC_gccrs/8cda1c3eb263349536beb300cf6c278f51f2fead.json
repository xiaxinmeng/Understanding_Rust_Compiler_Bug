{"sha": "8cda1c3eb263349536beb300cf6c278f51f2fead", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNkYTFjM2ViMjYzMzQ5NTM2YmViMzAwY2Y2YzI3OGY1MWYyZmVhZA==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2015-10-20T16:26:05Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2015-10-20T16:26:05Z"}, "message": "re PR rtl-optimization/67609 (Generates wrong code for SSE2 _mm_load_pd)\n\n2015-10-20  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/67609\n\t* lra-splill.c (lra_final_code_change): Don't remove all\n\tsub-registers.\n\n2015-10-20  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/67609\n\t* gcc.target/i386/pr67609.c: New.\n\nFrom-SVN: r229087", "tree": {"sha": "21ee9ffc4a802d51f929fd032e0aa58524c64e7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21ee9ffc4a802d51f929fd032e0aa58524c64e7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8cda1c3eb263349536beb300cf6c278f51f2fead", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cda1c3eb263349536beb300cf6c278f51f2fead", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cda1c3eb263349536beb300cf6c278f51f2fead", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cda1c3eb263349536beb300cf6c278f51f2fead/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bfb792b6044c340b54a9d04b2a1e6e0e608b3aa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfb792b6044c340b54a9d04b2a1e6e0e608b3aa6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfb792b6044c340b54a9d04b2a1e6e0e608b3aa6"}], "stats": {"total": 71, "additions": 63, "deletions": 8}, "files": [{"sha": "9ad52a8262e8b5365a13f654aec4add22a8da278", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cda1c3eb263349536beb300cf6c278f51f2fead/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cda1c3eb263349536beb300cf6c278f51f2fead/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8cda1c3eb263349536beb300cf6c278f51f2fead", "patch": "@@ -1,3 +1,9 @@\n+2015-10-20  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/67609\n+\t* lra-splill.c (lra_final_code_change): Don't remove all\n+\tsub-registers.\n+\n 2015-10-20  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* simplify-rtx.c (simplify_binary_operation): If either operand was"}, {"sha": "9c1207f5057956015f475978d19f82cdd3b8d4c0", "filename": "gcc/lra-spills.c", "status": "modified", "additions": 38, "deletions": 8, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cda1c3eb263349536beb300cf6c278f51f2fead/gcc%2Flra-spills.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cda1c3eb263349536beb300cf6c278f51f2fead/gcc%2Flra-spills.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-spills.c?ref=8cda1c3eb263349536beb300cf6c278f51f2fead", "patch": "@@ -727,14 +727,44 @@ lra_final_code_change (void)\n \t  lra_insn_recog_data_t id = lra_get_insn_recog_data (insn);\n \t  struct lra_static_insn_data *static_id = id->insn_static_data;\n \t  bool insn_change_p = false;\n-\n-\t  for (i = id->insn_static_data->n_operands - 1; i >= 0; i--)\n-\t    if ((DEBUG_INSN_P (insn) || ! static_id->operand[i].is_operator)\n-\t\t&& alter_subregs (id->operand_loc[i], ! DEBUG_INSN_P (insn)))\n-\t      {\n-\t\tlra_update_dup (id, i);\n-\t\tinsn_change_p = true;\n-\t      }\n+\t  \n+          for (i = id->insn_static_data->n_operands - 1; i >= 0; i--)\n+\t    {\n+\t      if (! DEBUG_INSN_P (insn) && static_id->operand[i].is_operator)\n+\t\tcontinue;\n+\t      \n+\t      rtx op = *id->operand_loc[i];\n+\t      \n+\t      if (static_id->operand[i].type == OP_OUT\n+\t\t  && GET_CODE (op) == SUBREG && REG_P (SUBREG_REG (op))\n+\t\t  && ! LRA_SUBREG_P (op))\n+\t\t{\n+\t\t  hard_regno = REGNO (SUBREG_REG (op));\n+\t\t  /* We can not always remove sub-registers of\n+\t\t     hard-registers as we may lose information that\n+\t\t     only a part of registers is changed and\n+\t\t     subsequent optimizations may do wrong\n+\t\t     transformations (e.g. dead code eliminations).\n+\t\t     We can not also keep all sub-registers as the\n+\t\t     subsequent optimizations can not handle all such\n+\t\t     cases.  Here is a compromise which works.  */\n+\t\t  if ((GET_MODE_SIZE (GET_MODE (op))\n+\t\t       < GET_MODE_SIZE (GET_MODE (SUBREG_REG (op))))\n+\t\t      && (hard_regno_nregs[hard_regno][GET_MODE (SUBREG_REG (op))]\n+\t\t\t  == hard_regno_nregs[hard_regno][GET_MODE (op)])\n+#ifdef STACK_REGS\n+\t\t      && (hard_regno < FIRST_STACK_REG\n+\t\t\t  || hard_regno > LAST_STACK_REG)\n+#endif\n+\t\t      )\n+\t\t    continue;\n+\t\t}\n+\t      if (alter_subregs (id->operand_loc[i], ! DEBUG_INSN_P (insn)))\n+\t\t{\n+\t\t  lra_update_dup (id, i);\n+\t\t  insn_change_p = true;\n+\t\t}\n+\t    }\n \t  if (insn_change_p)\n \t    lra_update_operator_dups (id);\n \t}"}, {"sha": "8620128cdff8acb2afaa8779f24106a2f76b81d1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cda1c3eb263349536beb300cf6c278f51f2fead/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cda1c3eb263349536beb300cf6c278f51f2fead/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8cda1c3eb263349536beb300cf6c278f51f2fead", "patch": "@@ -1,3 +1,8 @@\n+2015-10-20  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/67609\n+\t* gcc.target/i386/pr67609.c: New.\n+\n 2015-10-20  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.target/aarch64/fmul_fcvt_1.c: Add multiply-by-32 cases."}, {"sha": "518071bdd86cb3b5b1368dc8c723918c246b4ac3", "filename": "gcc/testsuite/gcc.target/i386/pr67609.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cda1c3eb263349536beb300cf6c278f51f2fead/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr67609.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cda1c3eb263349536beb300cf6c278f51f2fead/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr67609.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr67609.c?ref=8cda1c3eb263349536beb300cf6c278f51f2fead", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse2\" } */\n+/* { dg-require-effective-target lp64 } */\n+/* { dg-final { scan-assembler \"movdqa\" } } */\n+\n+#include <emmintrin.h>\n+__m128d reg;\n+void set_lower(double b)\n+{\n+  double v[2];\n+  _mm_store_pd(v, reg);\n+  v[0] = b;\n+  reg = _mm_load_pd(v);\n+}"}]}