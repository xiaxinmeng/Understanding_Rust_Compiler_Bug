{"sha": "964be02f4434ee0244a69dcaf345e46ab36100d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY0YmUwMmY0NDM0ZWUwMjQ0YTY5ZGNhZjM0NWU0NmFiMzYxMDBkMg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-09-03T20:50:33Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-09-03T20:50:33Z"}, "message": "function.h (struct function): Add arg_pointer_save_area_init.\n\n        * function.h (struct function): Add arg_pointer_save_area_init.\n        * function.c (expand_function_end): Init arg_pointer_save_area.\n        (get_arg_pointer_save_area): Do not init arg_pointer_save_area\n        when called from a nested function.\n\nFrom-SVN: r45362", "tree": {"sha": "43ae3eece8ab71f90e9d2f0742e9cff0f9bfe0f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43ae3eece8ab71f90e9d2f0742e9cff0f9bfe0f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/964be02f4434ee0244a69dcaf345e46ab36100d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/964be02f4434ee0244a69dcaf345e46ab36100d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/964be02f4434ee0244a69dcaf345e46ab36100d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/964be02f4434ee0244a69dcaf345e46ab36100d2/comments", "author": null, "committer": null, "parents": [{"sha": "72ea47b1646534dd612dc98abe57a9607a6044c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72ea47b1646534dd612dc98abe57a9607a6044c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72ea47b1646534dd612dc98abe57a9607a6044c2"}], "stats": {"total": 35, "additions": 24, "deletions": 11}, "files": [{"sha": "312b2e069c461be0171a71ad46f00ce26427909c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/964be02f4434ee0244a69dcaf345e46ab36100d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/964be02f4434ee0244a69dcaf345e46ab36100d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=964be02f4434ee0244a69dcaf345e46ab36100d2", "patch": "@@ -1,3 +1,10 @@\n+2001-09-03  Richard Henderson  <rth@redhat.com>\n+\n+\t* function.h (struct function): Add arg_pointer_save_area_init.\n+\t* function.c (expand_function_end): Init arg_pointer_save_area.\n+\t(get_arg_pointer_save_area): Do not init arg_pointer_save_area\n+\twhen called from a nested function.\n+\n 2001-09-02  Angela Marie Thomas <angela@cygnus.com>\n \n \t* fixinc/Makefile.in: Regenerate fixincl.x only if maintainer-mode"}, {"sha": "ae19e07a0a7a03fdcb29199cef9f863fa463d40a", "filename": "gcc/function.c", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/964be02f4434ee0244a69dcaf345e46ab36100d2/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/964be02f4434ee0244a69dcaf345e46ab36100d2/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=964be02f4434ee0244a69dcaf345e46ab36100d2", "patch": "@@ -6681,6 +6681,11 @@ expand_function_end (filename, line, end_bindings)\n \n   finish_expr_for_function ();\n \n+  /* If arg_pointer_save_area was referenced only from a nested\n+     function, we will not have initialized it yet.  Do that now.  */\n+  if (arg_pointer_save_area && ! cfun->arg_pointer_save_area_init)\n+    get_arg_pointer_save_area (cfun);\n+\n #ifdef NON_SAVING_SETJMP\n   /* Don't put any variables in registers if we call setjmp\n      on a machine that fails to restore the registers.  */\n@@ -6998,27 +7003,25 @@ get_arg_pointer_save_area (f)\n \n   if (! ret)\n     {\n-      rtx seq;\n-\n       ret = assign_stack_local_1 (Pmode, GET_MODE_SIZE (Pmode), 0, f);\n       f->x_arg_pointer_save_area = ret;\n+    }\n+\n+  if (f == cfun && ! f->arg_pointer_save_area_init)\n+    {\n+      rtx seq;\n \n       /* Save the arg pointer at the beginning of the function.  The \n-\t generated stack slot may not be a valid memory address, so w\n+\t generated stack slot may not be a valid memory address, so we\n \t have to check it and fix it if necessary.  */\n       start_sequence ();\n       emit_move_insn (validize_mem (ret), virtual_incoming_args_rtx);\n       seq = gen_sequence ();\n       end_sequence ();\n \n-      if (f == cfun)\n-\t{\n-\t  push_topmost_sequence ();\n-\t  emit_insn_after (seq, get_insns ());\n-\t  pop_topmost_sequence ();\n-\t}\n-      else\n-\temit_insn_before (seq, f->x_tail_recursion_reentry);\n+      push_topmost_sequence ();\n+      emit_insn_after (seq, get_insns ());\n+      pop_topmost_sequence ();\n     }\n \n   return ret;"}, {"sha": "8eeda3a290226eabce38ca4e4b6e3448a55d1b4d", "filename": "gcc/function.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/964be02f4434ee0244a69dcaf345e46ab36100d2/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/964be02f4434ee0244a69dcaf345e46ab36100d2/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=964be02f4434ee0244a69dcaf345e46ab36100d2", "patch": "@@ -477,6 +477,9 @@ struct function\n \n   /* Nonzero if the current function needs an lsda for exception handling.  */\n   unsigned int uses_eh_lsda : 1;\n+\n+  /* Nonzero if code to initialize arg_pointer_save_area has been emited.  */\n+  unsigned int arg_pointer_save_area_init : 1;\n };\n \n /* The function currently being compiled.  */"}]}