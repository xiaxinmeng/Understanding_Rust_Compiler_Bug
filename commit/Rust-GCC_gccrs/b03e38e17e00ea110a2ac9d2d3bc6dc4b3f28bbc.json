{"sha": "b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjAzZTM4ZTE3ZTAwZWExMTBhMmFjOWQyZDNiYzZkYzRiM2YyOGJiYw==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2002-04-20T09:14:37Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2002-04-20T09:14:37Z"}, "message": "Makefile.in: Update.\n\n\t* Makefile.in: Update.\n\t* decl.c (push_c_function_context, pop_c_function_context,\n\tmark_c_function_context): Rename for consistency.\n\t* c-objc-common.c (c_objc_common_init): Langhooks set elsewhere.\n\t* c-tree.h (push_c_function_context, pop_c_function_context,\n\tmark_c_function_context): Rename for consistency.\n\t* c-lang.c (LANG_HOOKS_FUNCTION_ENTER_NESTED,\n\tLANG_HOOKS_FUNCTION_LEAVE_NESTED, LANG_HOOKS_FUNCTION_MARK): Redefine.\n\t* function.c (init_lang_status, save_lang_status,\n\trestore_lang_status, mark_lang_status, free_lang_status):\n\tMove to langhooks.h.\n\t(push_function_context_to, pop_function_context_from,\n\tfree_after_parsing, prepare_function_start, ggc_mark_struct_function):\n\tUpdate.\n\t* function.h (init_lang_status, save_lang_status,\n\trestore_lang_status, mark_lang_status, free_lang_status):\n\tMove to langhooks.h.\n\t* langhooks-def.h (LANG_HOOKS_FUNCTION_INIT,\n\tLANG_HOOKS_FUNCTION_FREE, LANG_HOOKS_FUNCTION_ENTER_NESTED,\n\tLANG_HOOKS_FUNCTION_LEAVE_NESTED, LANG_HOOKS_FUNCTION_MARK,\n\tLANG_HOOKS_FUNCTION_INITIALIZER): New.\n\t(LANG_HOOKS_INITIALIZER): Update.\n\t(lhd_do_nothing_f): New.\n\t* langhooks.h (struct lang_hooks_for_functions): New.\n\t(struct lang_hooks): New hooks.\n\t* langhooks.c (lhd_do_nothing_f): New.\ncp:\n\t* cp-lang.c (LANG_HOOKS_FUNCTION_INIT,\n\tLANG_HOOKS_FUNCTION_FREE, LANG_HOOKS_FUNCTION_MARK): Redefine.\n\t* cp-tree.h (cxx_push_function_context, cxx_pop_function_context,\n\tcxx_mark_function_context): New.\n\t* decl.c (push_cp_function_context, pop_cp_function_context,\n\tmark_cp_function_context): Rename for consistency.\n\t(cxx_init_decl_processing): Don't set old hooks.\nobjc:\n\t* objc-lang.c (LANG_HOOKS_FUNCTION_ENTER_NESTED,\n\tLANG_HOOKS_FUNCTION_LEAVE_NESTED, LANG_HOOKS_FUNCTION_MARK): Redefine.\n\nFrom-SVN: r52551", "tree": {"sha": "3f6185495bbea2db918ca94306d10976e505c5c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f6185495bbea2db918ca94306d10976e505c5c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/comments", "author": null, "committer": null, "parents": [{"sha": "c874e8a3bd29744664f8f52db773080a5d38eaae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c874e8a3bd29744664f8f52db773080a5d38eaae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c874e8a3bd29744664f8f52db773080a5d38eaae"}], "stats": {"total": 188, "additions": 136, "deletions": 52}, "files": [{"sha": "f3556f860df15aae14a33beb19fa11418de3ad49", "filename": "gcc/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc", "patch": "@@ -1,3 +1,35 @@\n+2002-04-20  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* Makefile.in: Update.\n+\t* decl.c (push_c_function_context, pop_c_function_context,\n+\tmark_c_function_context): Rename for consistency.\n+\t* c-objc-common.c (c_objc_common_init): Langhooks set elsewhere.\n+\t* c-tree.h (push_c_function_context, pop_c_function_context,\n+\tmark_c_function_context): Rename for consistency.\n+\t* c-lang.c (LANG_HOOKS_FUNCTION_ENTER_NESTED,\n+\tLANG_HOOKS_FUNCTION_LEAVE_NESTED, LANG_HOOKS_FUNCTION_MARK): Redefine.\n+\t* function.c (init_lang_status, save_lang_status,\n+\trestore_lang_status, mark_lang_status, free_lang_status):\n+\tMove to langhooks.h.\n+\t(push_function_context_to, pop_function_context_from,\n+\tfree_after_parsing, prepare_function_start, ggc_mark_struct_function):\n+\tUpdate.\n+\t* function.h (init_lang_status, save_lang_status,\n+\trestore_lang_status, mark_lang_status, free_lang_status):\n+\tMove to langhooks.h.\n+\t* langhooks-def.h (LANG_HOOKS_FUNCTION_INIT,\n+\tLANG_HOOKS_FUNCTION_FREE, LANG_HOOKS_FUNCTION_ENTER_NESTED,\n+\tLANG_HOOKS_FUNCTION_LEAVE_NESTED, LANG_HOOKS_FUNCTION_MARK,\n+\tLANG_HOOKS_FUNCTION_INITIALIZER): New.\n+\t(LANG_HOOKS_INITIALIZER): Update.\n+\t(lhd_do_nothing_f): New.\n+\t* langhooks.h (struct lang_hooks_for_functions): New.\n+\t(struct lang_hooks): New hooks.\n+\t* langhooks.c (lhd_do_nothing_f): New.\n+objc:\n+\t* objc-lang.c (LANG_HOOKS_FUNCTION_ENTER_NESTED,\n+\tLANG_HOOKS_FUNCTION_LEAVE_NESTED, LANG_HOOKS_FUNCTION_MARK): Redefine.\n+\n 2002-04-19  David S. Miller  <davem@redhat.com>\n \n \t* config/sparc/linux.h (MD_FALLBACK_FRAME_STATE_FOR): Define."}, {"sha": "9d88ac6743868f738cb1766ea30b4afabe6bbf9d", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc", "patch": "@@ -1154,9 +1154,9 @@ c-decl.o : c-decl.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) $(C_TREE_H) \\\n c-typeck.o : c-typeck.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(C_TREE_H) \\\n     $(TARGET_H) flags.h intl.h output.h $(EXPR_H) $(RTL_H) toplev.h $(TM_P_H)\n c-lang.o : c-lang.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(C_TREE_H) \\\n-    langhooks.h langhooks-def.h\n+    langhooks.h langhooks-def.h c-common.h\n c-lex.o : c-lex.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) c-lex.h \\\n-    debug.h $(C_TREE_H) \\\n+    debug.h $(C_TREE_H) c-common.h \\\n     c-pragma.h input.h intl.h flags.h toplev.h output.h \\\n     mbchar.h $(CPPLIB_H) $(EXPR_H) $(TM_P_H)\n c-objc-common.o : c-objc-common.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\"}, {"sha": "71ece88d6fe0aa6d56c2026d2856a90f475e7874", "filename": "gcc/c-decl.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc", "patch": "@@ -6712,7 +6712,7 @@ finish_function (nested, can_defer_p)\n \n       /* Let the error reporting routines know that we're outside a\n \t function.  For a nested function, this value is used in\n-\t pop_c_function_context and then reset via pop_function_context.  */\n+\t c_pop_function_context and then reset via pop_function_context.  */\n       current_function_decl = NULL;\n     }\n }\n@@ -6887,7 +6887,7 @@ c_expand_body (fndecl, nested_p, can_defer_p)\n       /* Stop pointing to the local nodes about to be freed.\n \t But DECL_INITIAL must remain nonzero so we know this\n \t was an actual function definition.\n-\t For a nested function, this is done in pop_c_function_context.\n+\t For a nested function, this is done in c_pop_function_context.\n \t If rest_of_compilation set this to 0, leave it 0.  */\n       if (DECL_INITIAL (fndecl) != 0)\n \tDECL_INITIAL (fndecl) = error_mark_node;\n@@ -6998,7 +6998,7 @@ struct c_language_function\n    used during compilation of a C function.  */\n \n void\n-push_c_function_context (f)\n+c_push_function_context (f)\n      struct function *f;\n {\n   struct c_language_function *p;\n@@ -7021,7 +7021,7 @@ push_c_function_context (f)\n /* Restore the variables used during compilation of a C function.  */\n \n void\n-pop_c_function_context (f)\n+c_pop_function_context (f)\n      struct function *f;\n {\n   struct c_language_function *p\n@@ -7062,7 +7062,7 @@ pop_c_function_context (f)\n /* Mark the language specific parts of F for GC.  */\n \n void\n-mark_c_function_context (f)\n+c_mark_function_context (f)\n      struct function *f;\n {\n   struct c_language_function *p"}, {"sha": "f24742d0a16c86aa92e9aad9e877a0f2db6f005e", "filename": "gcc/c-lang.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.c?ref=b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc", "patch": "@@ -74,6 +74,12 @@ static void c_post_options PARAMS ((void));\n #define LANG_HOOKS_PRINT_IDENTIFIER c_print_identifier\n #undef LANG_HOOKS_SET_YYDEBUG\n #define LANG_HOOKS_SET_YYDEBUG c_set_yydebug\n+#undef LANG_HOOKS_FUNCTION_ENTER_NESTED\n+#define LANG_HOOKS_FUNCTION_ENTER_NESTED c_push_function_context\n+#undef LANG_HOOKS_FUNCTION_LEAVE_NESTED\n+#define LANG_HOOKS_FUNCTION_LEAVE_NESTED c_pop_function_context\n+#undef LANG_HOOKS_FUNCTION_MARK\n+#define LANG_HOOKS_FUNCTION_MARK c_mark_function_context\n #undef LANG_HOOKS_DUP_LANG_SPECIFIC_DECL\n #define LANG_HOOKS_DUP_LANG_SPECIFIC_DECL c_dup_lang_specific_decl\n "}, {"sha": "df16be1f491a58fa0f7b2d1580b3b4fa85f9dcbd", "filename": "gcc/c-objc-common.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Fc-objc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Fc-objc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-objc-common.c?ref=b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc", "patch": "@@ -234,9 +234,6 @@ c_objc_common_init (filename)\n   if (filename == NULL)\n     return NULL;\n \n-  save_lang_status = &push_c_function_context;\n-  restore_lang_status = &pop_c_function_context;\n-  mark_lang_status = &mark_c_function_context;\n   lang_expand_decl_stmt = c_expand_decl_stmt;\n \n   /* These were not defined in the Objective-C front end, but I'm"}, {"sha": "eedaa7aa59342ed95d67cff5a89d84cdff6aaad7", "filename": "gcc/c-tree.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc", "patch": "@@ -206,9 +206,9 @@ extern tree lookup_name                         PARAMS ((tree));\n extern tree lookup_name_current_level\t\tPARAMS ((tree));\n extern void parmlist_tags_warning               PARAMS ((void));\n extern void pending_xref_error                  PARAMS ((void));\n-extern void mark_c_function_context             PARAMS ((struct function *));\n-extern void push_c_function_context             PARAMS ((struct function *));\n-extern void pop_c_function_context              PARAMS ((struct function *));\n+extern void c_mark_function_context             PARAMS ((struct function *));\n+extern void c_push_function_context             PARAMS ((struct function *));\n+extern void c_pop_function_context              PARAMS ((struct function *));\n extern void pop_label_level                     PARAMS ((void));\n extern void push_label_level                    PARAMS ((void));\n extern void push_parm_decl                      PARAMS ((tree));"}, {"sha": "67c67b8682eecddbb0a6c11b1dec8a3b227eed5a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc", "patch": "@@ -1,3 +1,13 @@\n+2002-04-20  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* cp-lang.c (LANG_HOOKS_FUNCTION_INIT,\n+\tLANG_HOOKS_FUNCTION_FREE, LANG_HOOKS_FUNCTION_MARK): Redefine.\n+\t* cp-tree.h (cxx_push_function_context, cxx_pop_function_context,\n+\tcxx_mark_function_context): New.\n+\t* decl.c (push_cp_function_context, pop_cp_function_context,\n+\tmark_cp_function_context): Rename for consistency.\n+\t(cxx_init_decl_processing): Don't set old hooks.\n+\n 2002-04-19  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* call.c (convert_type_from_ellipsis): Rename, update."}, {"sha": "0cca2670679742d251be66baa8830ae7e098fded", "filename": "gcc/cp/cp-lang.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Fcp%2Fcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Fcp%2Fcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-lang.c?ref=b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc", "patch": "@@ -93,6 +93,13 @@ static bool cxx_warn_unused_global_decl PARAMS ((tree));\n #undef LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL\n #define LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL cxx_warn_unused_global_decl\n \n+#undef LANG_HOOKS_FUNCTION_INIT\n+#define LANG_HOOKS_FUNCTION_INIT cxx_push_function_context\n+#undef LANG_HOOKS_FUNCTION_FREE\n+#define LANG_HOOKS_FUNCTION_FREE cxx_pop_function_context\n+#undef LANG_HOOKS_FUNCTION_MARK\n+#define LANG_HOOKS_FUNCTION_MARK cxx_mark_function_context\n+\n #undef LANG_HOOKS_TREE_INLINING_WALK_SUBTREES\n #define LANG_HOOKS_TREE_INLINING_WALK_SUBTREES \\\n   cp_walk_subtrees"}, {"sha": "bdc4b4f9353825b8d46fc6fb6d7d73595dbc5922", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc", "patch": "@@ -3658,6 +3658,9 @@ extern void cxx_init_decl_processing\t\tPARAMS ((void));\n extern void cxx_mark_tree\t\t\tPARAMS ((tree));\n extern void cxx_insert_default_attributes\tPARAMS ((tree));\n extern bool cxx_mark_addressable\t\tPARAMS ((tree));\n+extern void cxx_push_function_context\t\tPARAMS ((struct function *));\n+extern void cxx_pop_function_context\t\tPARAMS ((struct function *));\n+extern void cxx_mark_function_context\t\tPARAMS ((struct function *));\n extern int toplevel_bindings_p\t\t\tPARAMS ((void));\n extern int namespace_bindings_p\t\t\tPARAMS ((void));\n extern void keep_next_level\t\t\tPARAMS ((int));"}, {"sha": "58d93bc143cf2fcac0df8f80b07544aad5fa0c40", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc", "patch": "@@ -128,11 +128,8 @@ static void layout_var_decl PARAMS ((tree));\n static void maybe_commonize_var PARAMS ((tree));\n static tree check_initializer PARAMS ((tree, tree));\n static void make_rtl_for_nonlocal_decl PARAMS ((tree, tree, const char *));\n-static void push_cp_function_context PARAMS ((struct function *));\n-static void pop_cp_function_context PARAMS ((struct function *));\n static void mark_binding_level PARAMS ((void *));\n static void mark_named_label_lists PARAMS ((void *, void *));\n-static void mark_cp_function_context PARAMS ((struct function *));\n static void mark_saved_scope PARAMS ((void *));\n static void mark_lang_function PARAMS ((struct cp_language_function *));\n static void save_function_data PARAMS ((tree));\n@@ -6481,9 +6478,6 @@ cxx_init_decl_processing ()\n   initialize_predefined_identifiers ();\n \n   /* Fill in back-end hooks.  */\n-  init_lang_status = &push_cp_function_context;\n-  free_lang_status = &pop_cp_function_context;\n-  mark_lang_status = &mark_cp_function_context;\n   lang_missing_noreturn_ok_p = &cp_missing_noreturn_ok_p;\n \n   cp_parse_init ();\n@@ -14340,7 +14334,7 @@ finish_function (flags)\n   if (! nested)\n     /* Let the error reporting routines know that we're outside a\n        function.  For a nested function, this value is used in\n-       pop_cp_function_context and then reset via pop_function_context.  */\n+       cxx_pop_function_context and then reset via pop_function_context.  */\n     current_function_decl = NULL_TREE;\n \n   return fndecl;\n@@ -14629,8 +14623,8 @@ revert_static_member_fn (decl)\n /* Initialize the variables used during compilation of a C++\n    function.  */\n \n-static void\n-push_cp_function_context (f)\n+void\n+cxx_push_function_context (f)\n      struct function *f;\n {\n   struct cp_language_function *p\n@@ -14650,8 +14644,8 @@ push_cp_function_context (f)\n /* Free the language-specific parts of F, now that we've finished\n    compiling the function.  */\n \n-static void\n-pop_cp_function_context (f)\n+void\n+cxx_pop_function_context (f)\n      struct function *f;\n {\n   if (f->language)\n@@ -14689,8 +14683,8 @@ mark_lang_function (p)\n \n /* Mark the language-specific data in F for GC.  */\n \n-static void\n-mark_cp_function_context (f)\n+void\n+cxx_mark_function_context (f)\n      struct function *f;\n {\n   mark_lang_function ((struct cp_language_function *) f->language);"}, {"sha": "e22273d585af8c644c7d11b120ea19fe56a3edaf", "filename": "gcc/function.c", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc", "patch": "@@ -133,13 +133,6 @@ void (*free_machine_status) PARAMS ((struct function *));\n    that will need garbage collection.  */\n void (*mark_machine_status) PARAMS ((struct function *));\n \n-/* Likewise, but for language-specific data.  */\n-void (*init_lang_status) PARAMS ((struct function *));\n-void (*save_lang_status) PARAMS ((struct function *));\n-void (*restore_lang_status) PARAMS ((struct function *));\n-void (*mark_lang_status) PARAMS ((struct function *));\n-void (*free_lang_status) PARAMS ((struct function *));\n-\n /* The FUNCTION_DECL for an inline function currently being expanded.  */\n tree inline_function_decl;\n \n@@ -328,7 +321,7 @@ find_function_data (decl)\n \n /* Save the current context for compilation of a nested function.\n    This is called from language-specific code.  The caller should use\n-   the save_lang_status callback to save any language-specific state,\n+   the enter_nested langhook to save any language-specific state,\n    since this function knows only about language-independent\n    variables.  */\n \n@@ -357,8 +350,7 @@ push_function_context_to (context)\n   outer_function_chain = p;\n   p->fixup_var_refs_queue = 0;\n \n-  if (save_lang_status)\n-    (*save_lang_status) (p);\n+  (*lang_hooks.function.enter_nested) (p);\n \n   cfun = 0;\n }\n@@ -387,8 +379,7 @@ pop_function_context_from (context)\n \n   restore_emit_status (p);\n \n-  if (restore_lang_status)\n-    (*restore_lang_status) (p);\n+  (*lang_hooks.function.leave_nested) (p);\n \n   /* Finish doing put_var_into_stack for any of our variables which became\n      addressable during the nested function.  If only one entry has to be\n@@ -441,8 +432,7 @@ free_after_parsing (f)\n   /* f->varasm is used by code generation.  */\n   /* f->eh->eh_return_stub_label is used by code generation.  */\n \n-  if (free_lang_status)\n-    (*free_lang_status) (f);\n+  (*lang_hooks.function.free) (f);\n   free_stmt_status (f);\n }\n \n@@ -6301,8 +6291,7 @@ prepare_function_start ()\n \n   current_function_outgoing_args_size = 0;\n \n-  if (init_lang_status)\n-    (*init_lang_status) (cfun);\n+  (*lang_hooks.function.init) (cfun);\n   if (init_machine_status)\n     (*init_machine_status) (cfun);\n }\n@@ -8025,8 +8014,7 @@ ggc_mark_struct_function (f)\n \n   if (mark_machine_status)\n     (*mark_machine_status) (f);\n-  if (mark_lang_status)\n-    (*mark_lang_status) (f);\n+  (*lang_hooks.function.mark) (f);\n \n   if (f->original_arg_vector)\n     ggc_mark_rtvec ((rtvec) f->original_arg_vector);"}, {"sha": "493543d22c1b364d93ba140d84d25cfbec964adf", "filename": "gcc/function.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc", "patch": "@@ -574,13 +574,6 @@ extern void (*free_machine_status)\tPARAMS ((struct function *));\n    that will need garbage collection.  */\n extern void (*mark_machine_status)\tPARAMS ((struct function *));\n \n-/* Likewise, but for language-specific data.  */\n-extern void (*init_lang_status)         PARAMS ((struct function *));\n-extern void (*mark_lang_status)\t\tPARAMS ((struct function *));\n-extern void (*save_lang_status)\t\tPARAMS ((struct function *));\n-extern void (*restore_lang_status)\tPARAMS ((struct function *));\n-extern void (*free_lang_status)         PARAMS ((struct function *));\n-\n /* Save and restore status information for a nested function.  */\n extern void restore_emit_status\t\tPARAMS ((struct function *));\n extern void free_after_parsing\t\tPARAMS ((struct function *));"}, {"sha": "c08f753742f92286bfcc2494828749ff9eee14d7", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc", "patch": "@@ -41,6 +41,7 @@ extern HOST_WIDE_INT hook_get_alias_set_0\tPARAMS ((tree));\n \n extern void lhd_do_nothing PARAMS ((void));\n extern void lhd_do_nothing_t PARAMS ((tree));\n+extern void lhd_do_nothing_f PARAMS ((struct function *));\n extern int lhd_decode_option PARAMS ((int, char **));\n extern HOST_WIDE_INT lhd_get_alias_set PARAMS ((tree));\n extern tree lhd_return_tree PARAMS ((tree));\n@@ -109,6 +110,12 @@ tree lhd_tree_inlining_convert_parm_for_inlining PARAMS ((tree, tree, tree));\n #define LANG_HOOKS_DECL_PRINTABLE_NAME\tlhd_decl_printable_name\n #define LANG_HOOKS_SET_YYDEBUG\t\tlhd_set_yydebug\n \n+#define LANG_HOOKS_FUNCTION_INIT\tlhd_do_nothing_f\n+#define LANG_HOOKS_FUNCTION_FREE\tlhd_do_nothing_f\n+#define LANG_HOOKS_FUNCTION_ENTER_NESTED lhd_do_nothing_f\n+#define LANG_HOOKS_FUNCTION_LEAVE_NESTED lhd_do_nothing_f\n+#define LANG_HOOKS_FUNCTION_MARK\tlhd_do_nothing_f\n+\n /* Tree inlining hooks.  */\n #define LANG_HOOKS_TREE_INLINING_WALK_SUBTREES lhd_tree_inlining_walk_subtrees\n #define LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN \\\n@@ -146,6 +153,14 @@ tree lhd_tree_inlining_convert_parm_for_inlining PARAMS ((tree, tree, tree));\n   LANG_HOOKS_TREE_INLINING_CONVERT_PARM_FOR_INLINING \\\n } \\\n \n+#define LANG_HOOKS_FUNCTION_INITIALIZER { \\\n+  LANG_HOOKS_FUNCTION_INIT, \\\n+  LANG_HOOKS_FUNCTION_FREE, \\\n+  LANG_HOOKS_FUNCTION_ENTER_NESTED, \\\n+  LANG_HOOKS_FUNCTION_LEAVE_NESTED, \\\n+  LANG_HOOKS_FUNCTION_MARK \\\n+}\n+\n /* Tree dump hooks.  */\n int lhd_tree_dump_dump_tree \t\t\tPARAMS ((void *, tree));\n int lhd_tree_dump_type_quals\t\t\tPARAMS ((tree));\n@@ -231,6 +246,7 @@ int lhd_tree_dump_type_quals\t\t\tPARAMS ((tree));\n   LANG_HOOKS_DECL_PRINTABLE_NAME, \\\n   LANG_HOOKS_PRINT_ERROR_FUNCTION, \\\n   LANG_HOOKS_SET_YYDEBUG, \\\n+  LANG_HOOKS_FUNCTION_INITIALIZER, \\\n   LANG_HOOKS_TREE_INLINING_INITIALIZER, \\\n   LANG_HOOKS_TREE_DUMP_INITIALIZER, \\\n   LANG_HOOKS_DECLS, \\"}, {"sha": "0bbb5e33c80a269489355829ea25956e50997f69", "filename": "gcc/langhooks.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Flanghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Flanghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.c?ref=b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc", "patch": "@@ -39,14 +39,22 @@ lhd_do_nothing ()\n {\n }\n \n-/* Do nothing.  */\n+/* Do nothing (tree).  */\n \n void\n lhd_do_nothing_t (t)\n      tree t ATTRIBUTE_UNUSED;\n {\n }\n \n+/* Do nothing (function).  */\n+\n+void\n+lhd_do_nothing_f (f)\n+     struct function *f ATTRIBUTE_UNUSED;\n+{\n+}\n+\n /* Do nothing (return the tree node passed).  */\n \n tree"}, {"sha": "4ec27db9217d218ff6a98a47f6fe823987c0322e", "filename": "gcc/langhooks.h", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc", "patch": "@@ -57,6 +57,26 @@ struct lang_hooks_for_tree_inlining\n \t\t\t\t\t\t\t union tree_node *));\n };\n \n+/* Lang hooks for management of language-specific data or status\n+   when entering / leaving functions etc.  */\n+struct lang_hooks_for_functions\n+{\n+  /* Called when entering a function.  */\n+  void (*init) PARAMS ((struct function *));\n+\n+  /* Called when leaving a function.  */\n+  void (*free) PARAMS ((struct function *));\n+\n+  /* Called when entering a nested function.  */\n+  void (*enter_nested) PARAMS ((struct function *));\n+\n+  /* Called when leaving a nested function.  */\n+  void (*leave_nested) PARAMS ((struct function *));\n+\n+  /* Lang-specific function data marking for GC.  */\n+  void (*mark) PARAMS ((struct function *));\n+};\n+\n /* The following hooks are used by tree-dump.c.  */\n \n struct lang_hooks_for_tree_dump\n@@ -312,6 +332,9 @@ struct lang_hooks\n      warning that the front end does not use such a parser.  */\n   void (*set_yydebug) PARAMS ((int));\n \n+  /* Function-related language hooks.  */\n+  struct lang_hooks_for_functions function;\n+\n   struct lang_hooks_for_tree_inlining tree_inlining;\n   \n   struct lang_hooks_for_tree_dump tree_dump;"}, {"sha": "e5b160a6eb6e89526df5d10980db09202ffb4760", "filename": "gcc/objc/objc-lang.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Fobjc%2Fobjc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc/gcc%2Fobjc%2Fobjc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-lang.c?ref=b03e38e17e00ea110a2ac9d2d3bc6dc4b3f28bbc", "patch": "@@ -73,6 +73,13 @@ static void objc_post_options                   PARAMS ((void));\n #undef LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL\n #define LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL c_warn_unused_global_decl\n \n+#undef LANG_HOOKS_FUNCTION_ENTER_NESTED\n+#define LANG_HOOKS_FUNCTION_ENTER_NESTED c_push_function_context\n+#undef LANG_HOOKS_FUNCTION_LEAVE_NESTED\n+#define LANG_HOOKS_FUNCTION_LEAVE_NESTED c_pop_function_context\n+#undef LANG_HOOKS_FUNCTION_MARK\n+#define LANG_HOOKS_FUNCTION_MARK c_mark_function_context\n+\n /* Inlining hooks same as the C front end.  */\n #undef LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN\n #define LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN \\"}]}