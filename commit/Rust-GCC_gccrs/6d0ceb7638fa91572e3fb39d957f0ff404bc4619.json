{"sha": "6d0ceb7638fa91572e3fb39d957f0ff404bc4619", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQwY2ViNzYzOGZhOTE1NzJlM2ZiMzlkOTU3ZjBmZjQwNGJjNDYxOQ==", "commit": {"author": {"name": "Chen Liqin", "email": "liqin@sunnorth.com.cn", "date": "2007-05-23T06:09:20Z"}, "committer": {"name": "Chen Liqin", "email": "liqin@gcc.gnu.org", "date": "2007-05-23T06:09:20Z"}, "message": "re PR target/30987 (Problem while compiling gcc for score)\n\n2007-05-23  Chen Liqin  <liqin@sunnorth.com.cn>\n\n\tPR target/30987\n\t* config/score/misc.md (bitclr_c, bitset_c, bittgl_c): remove.\n\t* config/score/predicate.md (const_pow2, const_npow2): remove.\n\t* config/score/score.h (ASM_OUTPUT_EXTERNAL): add ASM_OUTPUT_EXTERNAL undef.\n\tPR target/30474\n\t* config/score/score.c (score_print_operand): makes sure that only lower \n        bits are used.\n\nFrom-SVN: r124983", "tree": {"sha": "aca436d9f67d652a8b921381597d788379fdefe7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aca436d9f67d652a8b921381597d788379fdefe7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d0ceb7638fa91572e3fb39d957f0ff404bc4619", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d0ceb7638fa91572e3fb39d957f0ff404bc4619", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d0ceb7638fa91572e3fb39d957f0ff404bc4619", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d0ceb7638fa91572e3fb39d957f0ff404bc4619/comments", "author": null, "committer": null, "parents": [{"sha": "b80cca7b47325f8c46d6f35c0a5d7aa17a28e7c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b80cca7b47325f8c46d6f35c0a5d7aa17a28e7c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b80cca7b47325f8c46d6f35c0a5d7aa17a28e7c5"}], "stats": {"total": 61, "additions": 13, "deletions": 48}, "files": [{"sha": "52da89f144e56d26a708bb640d5bf815b71caa11", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0ceb7638fa91572e3fb39d957f0ff404bc4619/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0ceb7638fa91572e3fb39d957f0ff404bc4619/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d0ceb7638fa91572e3fb39d957f0ff404bc4619", "patch": "@@ -1,3 +1,13 @@\n+2007-05-23  Chen Liqin  <liqin@sunnorth.com.cn>\n+\n+\tPR target/30987\n+\t* config/score/misc.md (bitclr_c, bitset_c, bittgl_c): remove.\n+\t* config/score/predicate.md (const_pow2, const_npow2): remove.\n+\t* config/score/score.h (ASM_OUTPUT_EXTERNAL): add ASM_OUTPUT_EXTERNAL undef.\n+\tPR target/30474\n+\t* config/score/score.c (score_print_operand): makes sure that only lower \n+        bits are used.\n+\t\n 2007-05-22  Ian Lance Taylor  <iant@google.com>\n \n \t* tree-vrp.c (avoid_overflow_infinity): New static function,"}, {"sha": "b43497f08ed6fda742ab62aa53fae153bfce4d63", "filename": "gcc/config/score/misc.md", "status": "modified", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0ceb7638fa91572e3fb39d957f0ff404bc4619/gcc%2Fconfig%2Fscore%2Fmisc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0ceb7638fa91572e3fb39d957f0ff404bc4619/gcc%2Fconfig%2Fscore%2Fmisc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fmisc.md?ref=6d0ceb7638fa91572e3fb39d957f0ff404bc4619", "patch": "@@ -380,38 +380,3 @@\n   [(set_attr \"type\" \"arith\")\n    (set_attr \"mode\" \"SI\")])\n \n-(define_insn \"bitclr_c\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=e,d\")\n-        (and:SI (match_operand:SI 1 \"register_operand\" \"0,d\")\n-                (match_operand:SI 2 \"const_npow2\")))\n-   (clobber (reg:CC CC_REGNUM))]\n-  \"\"\n-  \"@\n-   bitclr!    %0, %F2\n-   bitclr.c   %0, %1, %F2\"\n-  [(set_attr \"type\" \"arith\")\n-   (set_attr \"mode\" \"SI\")])\n-\n-(define_insn \"bitset_c\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=e,d\")\n-        (ior:SI (match_operand:SI 1 \"register_operand\" \"0,d\")\n-                (match_operand:SI 2 \"const_pow2\")))\n-   (clobber (reg:CC CC_REGNUM))]\n-  \"\"\n-  \"@\n-   bitset!    %0, %E2\n-   bitset.c   %0, %1, %E2\"\n-  [(set_attr \"type\" \"arith\")\n-   (set_attr \"mode\" \"SI\")])\n-\n-(define_insn \"bittgl_c\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=e,d\")\n-        (xor:SI (match_operand:SI 1 \"register_operand\" \"0,d\")\n-                (match_operand:SI 2 \"const_pow2\")))\n-   (clobber (reg:CC CC_REGNUM))]\n-  \"\"\n-  \"@\n-   bittgl!    %0, %E2\n-   bittgl.c   %0, %1, %E2\"\n-  [(set_attr \"type\" \"arith\")\n-   (set_attr \"mode\" \"SI\")])"}, {"sha": "07c4b4358ece565a013f1d91190f2ab1611179fe", "filename": "gcc/config/score/predicates.md", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0ceb7638fa91572e3fb39d957f0ff404bc4619/gcc%2Fconfig%2Fscore%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0ceb7638fa91572e3fb39d957f0ff404bc4619/gcc%2Fconfig%2Fscore%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fpredicates.md?ref=6d0ceb7638fa91572e3fb39d957f0ff404bc4619", "patch": "@@ -75,14 +75,3 @@\n   return IMM_IN_RANGE (INTVAL (op), 15, 1);\n })\n \n-(define_predicate \"const_pow2\"\n-  (match_code \"const_int\")\n-{\n-  return IMM_IS_POW_OF_2 ((unsigned HOST_WIDE_INT) INTVAL (op), 0, 31);\n-})\n-\n-(define_predicate \"const_npow2\"\n-  (match_code \"const_int\")\n-{\n-  return IMM_IS_POW_OF_2 (~(unsigned HOST_WIDE_INT) INTVAL (op), 0, 31);\n-})"}, {"sha": "2d6f721b23ba0cf30fdf992e7b44cf7406a0f9ca", "filename": "gcc/config/score/score.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0ceb7638fa91572e3fb39d957f0ff404bc4619/gcc%2Fconfig%2Fscore%2Fscore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0ceb7638fa91572e3fb39d957f0ff404bc4619/gcc%2Fconfig%2Fscore%2Fscore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore.c?ref=6d0ceb7638fa91572e3fb39d957f0ff404bc4619", "patch": "@@ -1167,15 +1167,15 @@ score_print_operand (FILE *file, rtx op, int c)\n     {\n       gcc_assert (code == CONST_INT);\n       fprintf (file, HOST_WIDE_INT_PRINT_HEX,\n-               (unsigned HOST_WIDE_INT) INTVAL (op) >> 16);\n+               (INTVAL (op) >> 16) & 0xffff);\n     }\n   else if (c == 'D')\n     {\n       if (GET_CODE (op) == CONST_DOUBLE)\n         {\n           rtx temp = gen_lowpart (SImode, op);\n           gcc_assert (GET_MODE (op) == SFmode);\n-          fprintf (file, HOST_WIDE_INT_PRINT_HEX, INTVAL (temp));\n+          fprintf (file, HOST_WIDE_INT_PRINT_HEX, INTVAL (temp) & 0xffffffff); \n         }\n       else\n         output_addr_const (file, op);"}, {"sha": "3d36a3805edf642dd5856b37d488aaf8be325d34", "filename": "gcc/config/score/score.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0ceb7638fa91572e3fb39d957f0ff404bc4619/gcc%2Fconfig%2Fscore%2Fscore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0ceb7638fa91572e3fb39d957f0ff404bc4619/gcc%2Fconfig%2Fscore%2Fscore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore.h?ref=6d0ceb7638fa91572e3fb39d957f0ff404bc4619", "patch": "@@ -785,6 +785,7 @@ typedef struct score_args\n    output anything and let undefined symbol become external. However\n    the assembler uses length information on externals to allocate in\n    data/sdata bss/sbss, thereby saving exec time.  */\n+#undef ASM_OUTPUT_EXTERNAL\n #define ASM_OUTPUT_EXTERNAL(STREAM, DECL, NAME) \\\n   score_output_external (STREAM, DECL, NAME)\n "}]}