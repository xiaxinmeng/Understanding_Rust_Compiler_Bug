{"sha": "ba9c87d3255f168db811dd1fa69e5011d4e8194f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE5Yzg3ZDMyNTVmMTY4ZGI4MTFkZDFmYTY5ZTUwMTFkNGU4MTk0Zg==", "commit": {"author": {"name": "Cui,Lili", "email": "lili.cui@intel.com", "date": "2020-06-24T05:08:11Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2020-07-10T08:40:54Z"}, "message": "Initial Sapphire Rapids and Alder Lake support from ISA r40\n\ngcc/\n\t* common/config/i386/cpuinfo.h\n\t(get_intel_cpu): Handle sapphirerapids.\n\t* common/config/i386/i386-common.c\n\t(processor_names): Add sapphirerapids and alderlake.\n\t(processor_alias_table): Add sapphirerapids and alderlake.\n\t* common/config/i386/i386-cpuinfo.h\n\t(processor_subtypes): Add INTEL_COREI7_ALDERLAKE and\n\tINTEL_COREI7_ALDERLAKE.\n\t* config.gcc: Add -march=sapphirerapids and alderlake.\n\t* config/i386/driver-i386.c\n\t(host_detect_local_cpu) Handle sapphirerapids and alderlake.\n\t* config/i386/i386-c.c\n\t(ix86_target_macros_internal): Handle sapphirerapids and alderlake.\n\t* config/i386/i386-options.c\n\t(m_SAPPHIRERAPIDS) : Define.\n\t(m_ALDERLAKE): Ditto.\n\t(m_CORE_AVX512) : Add m_SAPPHIRERAPIDS.\n\t(processor_cost_table): Add sapphirerapids and alderlake.\n\t(ix86_option_override_internal) Handle PTA_WAITPKG, PTA_ENQCMD,\n\tPTA_CLDEMOTE, PTA_SERIALIZE, PTA_TSXLDTRK.\n\t* config/i386/i386.h\n\t(ix86_size_cost) : Define SAPPHIRERAPIDS and ALDERLAKE.\n\t(processor_type) : Add PROCESSOR_SAPPHIRERAPIDS and\n\tPROCESSOR_ALDERLAKE.\n\t(PTA_ENQCMD): New.\n\t(PTA_CLDEMOTE): Ditto.\n\t(PTA_SERIALIZE): Ditto.\n\t(PTA_TSXLDTRK): New.\n\t(PTA_SAPPHIRERAPIDS): Ditto.\n\t(PTA_ALDERLAKE): Ditto.\n\t(processor_type) : Add PROCESSOR_SAPPHIRERAPIDS and\n\tPROCESSOR_ALDERLAKE.\n\t* doc/extend.texi: Add sapphirerapids and alderlake.\n\t* doc/invoke.texi: Add sapphirerapids and alderlake.\n\ngcc/testsuite/\n\t* gcc.target/i386/funcspec-56.inc: Handle new march.\n\t* g++.target/i386/mv16.C: Handle new march", "tree": {"sha": "e71b666fa1344f2430907a685ad2507c60e1e318", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e71b666fa1344f2430907a685ad2507c60e1e318"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba9c87d3255f168db811dd1fa69e5011d4e8194f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba9c87d3255f168db811dd1fa69e5011d4e8194f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba9c87d3255f168db811dd1fa69e5011d4e8194f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba9c87d3255f168db811dd1fa69e5011d4e8194f/comments", "author": {"login": "cuilili8868", "id": 54013017, "node_id": "MDQ6VXNlcjU0MDEzMDE3", "avatar_url": "https://avatars.githubusercontent.com/u/54013017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuilili8868", "html_url": "https://github.com/cuilili8868", "followers_url": "https://api.github.com/users/cuilili8868/followers", "following_url": "https://api.github.com/users/cuilili8868/following{/other_user}", "gists_url": "https://api.github.com/users/cuilili8868/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuilili8868/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuilili8868/subscriptions", "organizations_url": "https://api.github.com/users/cuilili8868/orgs", "repos_url": "https://api.github.com/users/cuilili8868/repos", "events_url": "https://api.github.com/users/cuilili8868/events{/privacy}", "received_events_url": "https://api.github.com/users/cuilili8868/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02947a87c4b3c8306210b3d5ae34839271b82c24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02947a87c4b3c8306210b3d5ae34839271b82c24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02947a87c4b3c8306210b3d5ae34839271b82c24"}], "stats": {"total": 115, "additions": 110, "deletions": 5}, "files": [{"sha": "b14c7c668daf8665dfba6f2e1bae71637443d91d", "filename": "gcc/common/config/i386/cpuinfo.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9c87d3255f168db811dd1fa69e5011d4e8194f/gcc%2Fcommon%2Fconfig%2Fi386%2Fcpuinfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9c87d3255f168db811dd1fa69e5011d4e8194f/gcc%2Fcommon%2Fconfig%2Fi386%2Fcpuinfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fcpuinfo.h?ref=ba9c87d3255f168db811dd1fa69e5011d4e8194f", "patch": "@@ -456,6 +456,14 @@ get_intel_cpu (struct __processor_model *cpu_model,\n       cpu_model->__cpu_type = INTEL_COREI7;\n       cpu_model->__cpu_subtype = INTEL_COREI7_TIGERLAKE;\n       break;\n+    case 0x8f:\n+      /* Sapphire Rapids.  */\n+      cpu = \"sapphirerapids\";\n+      CHECK___builtin_cpu_is (\"corei7\");\n+      CHECK___builtin_cpu_is (\"sapphirerapids\");\n+      cpu_model->__cpu_type = INTEL_COREI7;\n+      cpu_model->__cpu_subtype = INTEL_COREI7_SAPPHIRERAPIDS;\n+      break;\n     case 0x17:\n     case 0x1d:\n       /* Penryn.  */"}, {"sha": "bb14305ad7b7fa6ddcc78b842825cd3a882e9a18", "filename": "gcc/common/config/i386/i386-common.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9c87d3255f168db811dd1fa69e5011d4e8194f/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9c87d3255f168db811dd1fa69e5011d4e8194f/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c?ref=ba9c87d3255f168db811dd1fa69e5011d4e8194f", "patch": "@@ -1598,6 +1598,8 @@ const char *const processor_names[] =\n   \"cascadelake\",\n   \"tigerlake\",\n   \"cooperlake\",\n+  \"sapphirerapids\",\n+  \"alderlake\",\n   \"intel\",\n   \"geode\",\n   \"k6\",\n@@ -1703,6 +1705,10 @@ const pta processor_alias_table[] =\n     M_CPU_SUBTYPE (INTEL_COREI7_TIGERLAKE), P_PROC_AVX512F},\n   {\"cooperlake\", PROCESSOR_COOPERLAKE, CPU_HASWELL, PTA_COOPERLAKE,\n     M_CPU_SUBTYPE (INTEL_COREI7_COOPERLAKE), P_PROC_AVX512F},\n+  {\"sapphirerapids\", PROCESSOR_SAPPHIRERAPIDS, CPU_HASWELL, PTA_SAPPHIRERAPIDS,\n+    M_CPU_SUBTYPE (INTEL_COREI7_SAPPHIRERAPIDS), P_PROC_AVX512F},\n+  {\"alderlake\", PROCESSOR_ALDERLAKE, CPU_HASWELL, PTA_ALDERLAKE,\n+    M_CPU_SUBTYPE (INTEL_COREI7_ALDERLAKE), P_PROC_AVX2},\n   {\"bonnell\", PROCESSOR_BONNELL, CPU_ATOM, PTA_BONNELL,\n     M_CPU_TYPE (INTEL_BONNELL), P_PROC_SSSE3},\n   {\"atom\", PROCESSOR_BONNELL, CPU_ATOM, PTA_BONNELL,"}, {"sha": "84ca97e7ade71dc2ec2c1027ce4f9fe1963343d2", "filename": "gcc/common/config/i386/i386-cpuinfo.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9c87d3255f168db811dd1fa69e5011d4e8194f/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-cpuinfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9c87d3255f168db811dd1fa69e5011d4e8194f/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-cpuinfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-cpuinfo.h?ref=ba9c87d3255f168db811dd1fa69e5011d4e8194f", "patch": "@@ -84,6 +84,8 @@ enum processor_subtypes\n   INTEL_COREI7_CASCADELAKE,\n   INTEL_COREI7_TIGERLAKE,\n   INTEL_COREI7_COOPERLAKE,\n+  INTEL_COREI7_SAPPHIRERAPIDS,\n+  INTEL_COREI7_ALDERLAKE,\n   CPU_SUBTYPE_MAX\n };\n "}, {"sha": "30b51c3dc81e85f9e072b36b860b2d3b17952c53", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9c87d3255f168db811dd1fa69e5011d4e8194f/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9c87d3255f168db811dd1fa69e5011d4e8194f/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=ba9c87d3255f168db811dd1fa69e5011d4e8194f", "patch": "@@ -667,8 +667,8 @@ bdver3 bdver4 znver1 znver2 btver1 btver2 k8 k8-sse3 opteron \\\n opteron-sse3 nocona core2 corei7 corei7-avx core-avx-i core-avx2 atom \\\n slm nehalem westmere sandybridge ivybridge haswell broadwell bonnell \\\n silvermont knl knm skylake-avx512 cannonlake icelake-client icelake-server \\\n-skylake goldmont goldmont-plus tremont cascadelake tigerlake cooperlake x86-64 \\\n-native\"\n+skylake goldmont goldmont-plus tremont cascadelake tigerlake cooperlake \\\n+sapphirerapids alderlake x86-64 native\"\n \n # Additional x86 processors supported by --with-cpu=.  Each processor\n # MUST be separated by exactly one space."}, {"sha": "ecdad5765d57da70da7f35dcc62bb5fb7addb27b", "filename": "gcc/config/i386/driver-i386.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9c87d3255f168db811dd1fa69e5011d4e8194f/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9c87d3255f168db811dd1fa69e5011d4e8194f/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.c?ref=ba9c87d3255f168db811dd1fa69e5011d4e8194f", "patch": "@@ -563,9 +563,15 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n \t      /* This is unknown family 0x6 CPU.  */\n \t      if (has_feature (FEATURE_AVX))\n \t\t{\n-\t\t  /* Assume Tiger Lake */\n \t\t  if (has_feature (FEATURE_AVX512VP2INTERSECT))\n-\t\t    cpu = \"tigerlake\";\n+\t\t    {\n+\t\t      if (has_feature (FEATURE_TSXLDTRK))\n+\t\t\t/* Assume Sapphire Rapids.  */\n+\t\t\tcpu = \"sapphirerapids\";\n+\t\t      else\n+\t\t\t/* Assume Tiger Lake */\n+\t\t\tcpu = \"tigerlake\";\n+\t\t    }\n \t\t  /* Assume Cooper Lake */\n \t\t  else if (has_feature (FEATURE_AVX512BF16))\n \t\t    cpu = \"cooperlake\";\n@@ -587,6 +593,9 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n \t\t/* Assume Skylake with AVX-512.  */\n \t\telse if (has_feature (FEATURE_AVX512F))\n \t\t  cpu = \"skylake-avx512\";\n+\t\t /* Assume Alder Lake */\n+\t\telse if (has_feature (FEATURE_SERIALIZE))\n+\t\t    cpu = \"alderlake\";\n \t\t/* Assume Skylake.  */\n \t\telse if (has_feature (FEATURE_CLFLUSHOPT))\n \t\t  cpu = \"skylake\";"}, {"sha": "2d61a0ce70acd1d7c687d2ae78a328104b20ab74", "filename": "gcc/config/i386/i386-c.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9c87d3255f168db811dd1fa69e5011d4e8194f/gcc%2Fconfig%2Fi386%2Fi386-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9c87d3255f168db811dd1fa69e5011d4e8194f/gcc%2Fconfig%2Fi386%2Fi386-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-c.c?ref=ba9c87d3255f168db811dd1fa69e5011d4e8194f", "patch": "@@ -229,6 +229,15 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n     case PROCESSOR_COOPERLAKE:\n       def_or_undef (parse_in, \"__cooperlake\");\n       def_or_undef (parse_in, \"__cooperlake__\");\n+      break;\n+    case PROCESSOR_SAPPHIRERAPIDS:\n+      def_or_undef (parse_in, \"__sapphirerapids\");\n+      def_or_undef (parse_in, \"__sapphirerapids__\");\n+      break;\n+    case PROCESSOR_ALDERLAKE:\n+      def_or_undef (parse_in, \"__alderlake\");\n+      def_or_undef (parse_in, \"__alderlake__\");\n+      break;\n     /* use PROCESSOR_max to not set/unset the arch macro.  */\n     case PROCESSOR_max:\n       break;\n@@ -383,6 +392,12 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n     case PROCESSOR_COOPERLAKE:\n       def_or_undef (parse_in, \"__tune_cooperlake__\");\n       break;\n+    case PROCESSOR_SAPPHIRERAPIDS:\n+      def_or_undef (parse_in, \"__tune_sapphirerapids__\");\n+      break;\n+    case PROCESSOR_ALDERLAKE:\n+      def_or_undef (parse_in, \"__tune_alderlake__\");\n+      break;\n     case PROCESSOR_INTEL:\n     case PROCESSOR_GENERIC:\n       break;"}, {"sha": "26d1ea18ef1744dd2fd773f5dbbd10551d4b1910", "filename": "gcc/config/i386/i386-options.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9c87d3255f168db811dd1fa69e5011d4e8194f/gcc%2Fconfig%2Fi386%2Fi386-options.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9c87d3255f168db811dd1fa69e5011d4e8194f/gcc%2Fconfig%2Fi386%2Fi386-options.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-options.c?ref=ba9c87d3255f168db811dd1fa69e5011d4e8194f", "patch": "@@ -122,9 +122,11 @@ along with GCC; see the file COPYING3.  If not see\n #define m_CASCADELAKE (HOST_WIDE_INT_1U<<PROCESSOR_CASCADELAKE)\n #define m_TIGERLAKE (HOST_WIDE_INT_1U<<PROCESSOR_TIGERLAKE)\n #define m_COOPERLAKE (HOST_WIDE_INT_1U<<PROCESSOR_COOPERLAKE)\n+#define m_SAPPHIRERAPIDS (HOST_WIDE_INT_1U<<PROCESSOR_SAPPHIRERAPIDS)\n+#define m_ALDERLAKE (HOST_WIDE_INT_1U<<PROCESSOR_ALDERLAKE)\n #define m_CORE_AVX512 (m_SKYLAKE_AVX512 | m_CANNONLAKE \\\n \t\t       | m_ICELAKE_CLIENT | m_ICELAKE_SERVER | m_CASCADELAKE \\\n-\t\t       | m_TIGERLAKE | m_COOPERLAKE)\n+\t\t       | m_TIGERLAKE | m_COOPERLAKE | m_SAPPHIRERAPIDS)\n #define m_CORE_AVX2 (m_HASWELL | m_SKYLAKE | m_CORE_AVX512)\n #define m_CORE_ALL (m_CORE2 | m_NEHALEM  | m_SANDYBRIDGE | m_CORE_AVX2)\n #define m_GOLDMONT (HOST_WIDE_INT_1U<<PROCESSOR_GOLDMONT)\n@@ -719,6 +721,8 @@ static const struct processor_costs *processor_cost_table[] =\n   &skylake_cost,\n   &skylake_cost,\n   &skylake_cost,\n+  &skylake_cost,\n+  &skylake_cost,\n   &intel_cost,\n   &geode_cost,\n   &k6_cost,\n@@ -2230,6 +2234,21 @@ ix86_option_override_internal (bool main_args_p,\n \tif (((processor_alias_table[i].flags & PTA_PTWRITE) != 0)\n \t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_PTWRITE))\n \t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_PTWRITE;\n+\tif (((processor_alias_table[i].flags & PTA_WAITPKG) != 0)\n+\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_WAITPKG))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_WAITPKG;\n+\tif (((processor_alias_table[i].flags & PTA_ENQCMD) != 0)\n+\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_ENQCMD))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_ENQCMD;\n+\tif (((processor_alias_table[i].flags & PTA_CLDEMOTE) != 0)\n+\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_CLDEMOTE))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_CLDEMOTE;\n+\tif (((processor_alias_table[i].flags & PTA_SERIALIZE) != 0)\n+\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_SERIALIZE))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_SERIALIZE;\n+\tif (((processor_alias_table[i].flags & PTA_TSXLDTRK) != 0)\n+\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_TSXLDTRK))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_TSXLDTRK;\n \n \tif ((processor_alias_table[i].flags\n \t   & (PTA_PREFETCH_SSE | PTA_SSE)) != 0)"}, {"sha": "f4a8f1391fae7ce60e6d47b8c15899d23eae98ea", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9c87d3255f168db811dd1fa69e5011d4e8194f/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9c87d3255f168db811dd1fa69e5011d4e8194f/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=ba9c87d3255f168db811dd1fa69e5011d4e8194f", "patch": "@@ -448,6 +448,8 @@ extern const struct processor_costs ix86_size_cost;\n #define TARGET_CASCADELAKE (ix86_tune == PROCESSOR_CASCADELAKE)\n #define TARGET_TIGERLAKE (ix86_tune == PROCESSOR_TIGERLAKE)\n #define TARGET_COOPERLAKE (ix86_tune == PROCESSOR_COOPERLAKE)\n+#define TARGET_SAPPHIRERAPIDS (ix86_tune == PROCESSOR_SAPPHIRERAPIDS)\n+#define TARGET_ALDERLAKE (ix86_tune == PROCESSOR_ALDERLAKE)\n #define TARGET_INTEL (ix86_tune == PROCESSOR_INTEL)\n #define TARGET_GENERIC (ix86_tune == PROCESSOR_GENERIC)\n #define TARGET_AMDFAM10 (ix86_tune == PROCESSOR_AMDFAM10)\n@@ -2348,6 +2350,8 @@ enum processor_type\n   PROCESSOR_CASCADELAKE,\n   PROCESSOR_TIGERLAKE,\n   PROCESSOR_COOPERLAKE,\n+  PROCESSOR_SAPPHIRERAPIDS,\n+  PROCESSOR_ALDERLAKE,\n   PROCESSOR_INTEL,\n   PROCESSOR_GEODE,\n   PROCESSOR_K6,\n@@ -2449,6 +2453,10 @@ const wide_int_bitmask PTA_AVX512BF16 (0, HOST_WIDE_INT_1U << 11);\n const wide_int_bitmask PTA_WAITPKG (0, HOST_WIDE_INT_1U << 12);\n const wide_int_bitmask PTA_MOVDIRI(0, HOST_WIDE_INT_1U << 13);\n const wide_int_bitmask PTA_MOVDIR64B(0, HOST_WIDE_INT_1U << 14);\n+const wide_int_bitmask PTA_ENQCMD (0, HOST_WIDE_INT_1U << 15);\n+const wide_int_bitmask PTA_CLDEMOTE (0, HOST_WIDE_INT_1U << 16);\n+const wide_int_bitmask PTA_SERIALIZE (0, HOST_WIDE_INT_1U << 17);\n+const wide_int_bitmask PTA_TSXLDTRK (0, HOST_WIDE_INT_1U << 18);\n \n const wide_int_bitmask PTA_CORE2 = PTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2\n   | PTA_SSE3 | PTA_SSSE3 | PTA_CX16 | PTA_FXSR;\n@@ -2480,6 +2488,11 @@ const wide_int_bitmask PTA_ICELAKE_SERVER = PTA_ICELAKE_CLIENT | PTA_PCONFIG\n   | PTA_WBNOINVD | PTA_CLWB;\n const wide_int_bitmask PTA_TIGERLAKE = PTA_ICELAKE_CLIENT | PTA_MOVDIRI\n   | PTA_MOVDIR64B | PTA_CLWB | PTA_AVX512VP2INTERSECT;\n+const wide_int_bitmask PTA_SAPPHIRERAPIDS = PTA_COOPERLAKE | PTA_MOVDIRI\n+  | PTA_MOVDIR64B | PTA_AVX512VP2INTERSECT | PTA_ENQCMD | PTA_CLDEMOTE\n+  | PTA_PTWRITE | PTA_WAITPKG | PTA_SERIALIZE | PTA_TSXLDTRK;\n+const wide_int_bitmask PTA_ALDERLAKE = PTA_SKYLAKE | PTA_CLDEMOTE | PTA_PTWRITE\n+  | PTA_WAITPKG | PTA_SERIALIZE;\n const wide_int_bitmask PTA_KNL = PTA_BROADWELL | PTA_AVX512PF | PTA_AVX512ER\n   | PTA_AVX512F | PTA_AVX512CD;\n const wide_int_bitmask PTA_BONNELL = PTA_CORE2 | PTA_MOVBE;"}, {"sha": "c800b741acf423197a0245d4e08ecc7f8694ba6c", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9c87d3255f168db811dd1fa69e5011d4e8194f/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9c87d3255f168db811dd1fa69e5011d4e8194f/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=ba9c87d3255f168db811dd1fa69e5011d4e8194f", "patch": "@@ -22256,6 +22256,12 @@ Intel Core i7 Tigerlake CPU.\n @item cooperlake\n Intel Core i7 Cooperlake CPU.\n \n+@item sapphirerapids\n+Intel Core i7 sapphirerapids CPU.\n+\n+@item alderlake\n+Intel Core i7 Alderlake CPU.\n+\n @item bonnell\n Intel Atom Bonnell CPU.\n "}, {"sha": "09bcc5b0f78e69fe138a88fc3591505b58442099", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9c87d3255f168db811dd1fa69e5011d4e8194f/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9c87d3255f168db811dd1fa69e5011d4e8194f/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=ba9c87d3255f168db811dd1fa69e5011d4e8194f", "patch": "@@ -29089,6 +29089,19 @@ RDPID, GFNI, AVX512VBMI2, AVX512VPOPCNTDQ, AVX512BITALG, AVX512VNNI, VPCLMULQDQ,\n VAES, PCONFIG, WBNOINVD, MOVDIRI, MOVDIR64B and  AVX512VP2INTERSECT instruction\n set support.\n \n+@item sapphirerapids\n+Intel sapphirerapids CPU with 64-bit extensions, MOVBE, MMX, SSE, SSE2, SSE3,\n+SSSE3, SSE4.1, SSE4.2, POPCNT, PKU, AVX, AVX2, AES, PCLMUL, FSGSBASE, RDRND,\n+FMA, BMI, BMI2, F16C, RDSEED, ADCX, PREFETCHW, CLFLUSHOPT, XSAVEC, XSAVES,\n+AVX512F, CLWB, AVX512VL, AVX512BW, AVX512DQ, AVX512CD, AVX512VNNI, AVX512BF16,\n+MOVDIRI, MOVDIR64B, AVX512VP2INTERSECT, ENQCMD, CLDEMOTE, PTWRITE, WAITPKG,\n+SERIALIZE and TSXLDTRK instruction set support.\n+\n+@item alderlake\n+Intel Alderlake CPU with 64-bit extensions, MOVBE, MMX, SSE, SSE2, SSE3, SSSE3,\n+SSE4.1, SSE4.2, POPCNT, AVX, AVX2, AES, PCLMUL, FSGSBASE, RDRND, FMA, CLDEMOTE,\n+PTWRITE, WAITPKG and SERIALIZE instruction set support.\n+\n @item k6\n AMD K6 CPU with MMX instruction set support.\n "}, {"sha": "9b29a1a3e1a8c10146fae2f6bcf183d4976f538c", "filename": "gcc/testsuite/g++.target/i386/mv16.C", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9c87d3255f168db811dd1fa69e5011d4e8194f/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fmv16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9c87d3255f168db811dd1fa69e5011d4e8194f/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fmv16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fmv16.C?ref=ba9c87d3255f168db811dd1fa69e5011d4e8194f", "patch": "@@ -80,6 +80,14 @@ int __attribute__ ((target(\"arch=cooperlake\"))) foo () {\n   return 21;\n }\n \n+int __attribute__ ((target(\"arch=sapphirerapids\"))) foo () {\n+  return 22;\n+}\n+\n+int __attribute__ ((target(\"arch=alderlake\"))) foo () {\n+  return 23;\n+}\n+\n int main ()\n {\n   int val = foo ();\n@@ -112,6 +120,10 @@ int main ()\n     assert (val == 20);\n   else if (__builtin_cpu_is (\"cooperlake\"))\n     assert (val == 21);\n+  else if (__builtin_cpu_is (\"sapphirerapids\"))\n+    assert (val == 22);\n+  else if (__builtin_cpu_is (\"alderlake\"))\n+    assert (val == 23);\n   else\n     assert (val == 0);\n "}, {"sha": "94ffbb64c75bb226ecf70cd824b43f44b773a023", "filename": "gcc/testsuite/gcc.target/i386/funcspec-56.inc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9c87d3255f168db811dd1fa69e5011d4e8194f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-56.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9c87d3255f168db811dd1fa69e5011d4e8194f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-56.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-56.inc?ref=ba9c87d3255f168db811dd1fa69e5011d4e8194f", "patch": "@@ -163,6 +163,8 @@ extern void test_arch_icelake_server (void)\t__attribute__((__target__(\"arch=icel\n extern void test_arch_cascadelake (void)\t__attribute__((__target__(\"arch=cascadelake\")));\n extern void test_arch_tigerlake (void)          __attribute__((__target__(\"arch=tigerlake\")));\n extern void test_arch_cooperlake (void)         __attribute__((__target__(\"arch=cooperlake\")));\n+extern void test_arch_sapphirerapids (void)\t__attribute__((__target__(\"arch=sapphirerapids\")));\n+extern void test_arch_alderlake (void)          __attribute__((__target__(\"arch=alderlake\")));\n extern void test_arch_k8 (void)\t\t\t__attribute__((__target__(\"arch=k8\")));\n extern void test_arch_k8_sse3 (void)\t\t__attribute__((__target__(\"arch=k8-sse3\")));\n extern void test_arch_opteron (void)\t\t__attribute__((__target__(\"arch=opteron\")));"}]}