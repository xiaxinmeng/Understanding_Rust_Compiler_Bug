{"sha": "48d9ade562cf3cc077c60cb1f49436054b34a3c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhkOWFkZTU2MmNmM2NjMDc3YzYwY2IxZjQ5NDM2MDU0YjM0YTNjNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2000-04-20T12:06:58Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-04-20T12:06:58Z"}, "message": "toplev.c (enum dump_file_index, dump_file): Add DFI_sibling.\n\n\t* toplev.c (enum dump_file_index, dump_file): Add DFI_sibling.\n\t(rest_of_compilation): Write sibling dump file and account\n\tfor time as jump time.\n\t* invoke.texi: Update documentation on dump flags.\n\nFrom-SVN: r33279", "tree": {"sha": "757241a368aa1da0bb552e22210e8bb74bfaa4dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/757241a368aa1da0bb552e22210e8bb74bfaa4dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48d9ade562cf3cc077c60cb1f49436054b34a3c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48d9ade562cf3cc077c60cb1f49436054b34a3c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48d9ade562cf3cc077c60cb1f49436054b34a3c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48d9ade562cf3cc077c60cb1f49436054b34a3c6/comments", "author": null, "committer": null, "parents": [{"sha": "5d14e3560cfbbc06f7ef42addfc15263ecf16c9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d14e3560cfbbc06f7ef42addfc15263ecf16c9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d14e3560cfbbc06f7ef42addfc15263ecf16c9e"}], "stats": {"total": 69, "additions": 48, "deletions": 21}, "files": [{"sha": "b5a88c756e43a453f1f16169554f6119c8e2fcc2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48d9ade562cf3cc077c60cb1f49436054b34a3c6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48d9ade562cf3cc077c60cb1f49436054b34a3c6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48d9ade562cf3cc077c60cb1f49436054b34a3c6", "patch": "@@ -1,3 +1,10 @@\n+Thu Apr 20 08:01:07 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* toplev.c (enum dump_file_index, dump_file): Add DFI_sibling.\n+\t(rest_of_compilation): Write sibling dump file and account\n+\tfor time as jump time.\n+\t* invoke.texi: Update documentation on dump flags.\n+\n 2000-04-19  Marek Michalkiewicz  <marekm@linux.org.pl>\n \n \t* avr.c: #include \"system.h\" instead of <stdio.h> and <stdlib.h>."}, {"sha": "3e13098dfb657fe780ce1f39c786c7870c7b3a63", "filename": "gcc/invoke.texi", "status": "modified", "additions": 32, "deletions": 19, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48d9ade562cf3cc077c60cb1f49436054b34a3c6/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48d9ade562cf3cc077c60cb1f49436054b34a3c6/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=48d9ade562cf3cc077c60cb1f49436054b34a3c6", "patch": "@@ -2201,51 +2201,64 @@ Here are the possible letters for use in @var{letters}, and their meanings:\n @item A\n Annotate the assembler output with miscellaneous debugging information.\n @item b\n-Dump after computing branch probabilities, to @file{@var{file}.07.bp}.\n+Dump after computing branch probabilities, to @file{@var{file}.10.bp}.\n+@item B\n+Dump after block reordering, to @file{@var{file}.20.bbro}.\n @item c\n-Dump after instruction combination, to the file @file{@var{file}.09.combine}.\n+Dump after instruction combination, to the file @file{@var{file}.12.combine}.\n @item d\n-Dump after delayed branch scheduling, to @file{@var{file}.19.dbr}.\n+Dump after delayed branch scheduling, to @file{@var{file}.24.dbr}.\n @item D\n Dump all macro definitions, at the end of preprocessing, in addition to\n normal output.\n-@item F\n-Dump after purging ADDRESSOF, to @file{@var{file}.03.addressof}.\n+@item e\n+Dump after SSA optimizations, to @file{@var{file}.05.ssa} and\n+@file{@var{file}.06.ussa}.\n @item f\n-Dump after flow analysis, to @file{@var{file}.08.flow}.\n+Dump after flow analysis, to @file{@var{file}.11.flow}.\n+@item F\n+Dump after purging @code{ADDRESSOF} codes, to @file{@var{file}.04.addressof}.\n @item g\n-Dump after global register allocation, to @file{@var{file}.13.greg}.\n+Dump after global register allocation, to @file{@var{file}.16.greg}.\n @item G      \n-Dump after GCSE, to @file{@var{file}.04.gcse}.\n+Dump after GCSE, to @file{@var{file}.07.gcse}.\n+@item i\n+Dump after sibling call optimizations, to @file{@var{file}.01.sibling}.\n @item j\n-Dump after first jump optimization, to @file{@var{file}.01.jump}.\n+Dump after first jump optimization, to @file{@var{file}.02.jump}.\n @item J\n-Dump after last jump optimization, to @file{@var{file}.17.jump2}.\n+Dump after last jump optimization, to @file{@var{file}.22.jump2}.\n @item k\n-Dump after conversion from registers to stack, to @file{@var{file}.20.stack}.\n+Dump after conversion from registers to stack, to @file{@var{file}.25.stack}.\n @item l\n-Dump after local register allocation, to @file{@var{file}.12.lreg}.\n+Dump after local register allocation, to @file{@var{file}.15.lreg}.\n @item L\n-Dump after loop optimization, to @file{@var{file}.05.loop}.\n+Dump after loop optimization, to @file{@var{file}.08.loop}.\n @item M\n Dump after performing the machine dependent reorganisation pass, to\n-@file{@var{file}.18.mach}. \n+@file{@var{file}.23.mach}. \n+@item n\n+Dump after register renumbering, to @file{@var{file}.21.rnreg}.\n @item N\n-Dump after the register move pass, to @file{@var{file}.10.regmove}.\n+Dump after the register move pass, to @file{@var{file}.13.regmove}.\n @item r\n Dump after RTL generation, to @file{@var{file}.00.rtl}.\n @item R\n Dump after the second instruction scheduling pass, to\n-@file{@var{file}.16.sched2}.\n+@file{@var{file}.19.sched2}.\n @item s\n Dump after CSE (including the jump optimization that sometimes follows\n-CSE), to @file{@var{file}.02.cse}. \n+CSE), to @file{@var{file}.03.cse}. \n @item S\n Dump after the first instruction scheduling pass, to\n-@file{@var{file}.11.sched}.\n+@file{@var{file}.14.sched}.\n @item t\n Dump after the second CSE pass (including the jump optimization that\n-sometimes follows CSE), to @file{@var{file}.06.cse2}. \n+sometimes follows CSE), to @file{@var{file}.09.cse2}.\n+@item w\n+Dump after the second flow pass, to @file{@var{file}.17.flow2}.\n+@item z\n+Dump after the peephold pass, to @file{@var{file}.18.peephole2}.\n @item a\n Produce all the dumps listed above.\n @item m"}, {"sha": "17e8ebc6849b200bb9d3ae7ab7df0c0ea9087b9c", "filename": "gcc/toplev.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48d9ade562cf3cc077c60cb1f49436054b34a3c6/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48d9ade562cf3cc077c60cb1f49436054b34a3c6/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=48d9ade562cf3cc077c60cb1f49436054b34a3c6", "patch": "@@ -251,6 +251,7 @@ struct dump_file_info\n enum dump_file_index\n {\n   DFI_rtl,\n+  DFI_sibling,\n   DFI_jump,\n   DFI_cse,\n   DFI_addressof,\n@@ -284,6 +285,7 @@ enum dump_file_index\n struct dump_file_info dump_file[DFI_MAX] = \n {\n   { \"rtl\",\t'r', 0, 0, 0 },\n+  { \"sibling\",  'i', 0, 0, 0 },\n   { \"jump\",\t'j', 0, 0, 0 },\n   { \"cse\",\t's', 0, 0, 0 },\n   { \"addressof\", 'F', 0, 0, 0 },\n@@ -2897,8 +2899,13 @@ rest_of_compilation (decl)\n \n   /* We may have potential sibling or tail recursion sites.  Select one\n      (of possibly multiple) methods of performing the call.  */\n-  if (flag_optimize_sibling_calls)\n-    optimize_sibling_and_tail_recursive_calls ();\n+  open_dump_file (DFI_sibling, decl);\n+  TIMEVAR (jump_time,\n+\t   {\n+\t     if (flag_optimize_sibling_calls)\n+\t       optimize_sibling_and_tail_recursive_calls ();\n+\t   });\n+  close_dump_file (DFI_sibling, print_rtl, get_insns ());\n   \n   if (ggc_p)\n     ggc_collect ();"}]}