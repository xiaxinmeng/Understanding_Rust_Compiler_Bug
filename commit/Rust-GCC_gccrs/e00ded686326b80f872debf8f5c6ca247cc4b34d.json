{"sha": "e00ded686326b80f872debf8f5c6ca247cc4b34d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAwZGVkNjg2MzI2YjgwZjg3MmRlYmY4ZjVjNmNhMjQ3Y2M0YjM0ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-09-10T05:16:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-09-10T05:16:08Z"}, "message": "configure.ac: Check glibc version even if we have an in-tree assembler.\n\n\t* configure.ac: Check glibc version even if we have an in-tree\n\tassembler.\n\nFrom-SVN: r151585", "tree": {"sha": "7ac3e36b3592f2b449951da1596755f33c771c3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ac3e36b3592f2b449951da1596755f33c771c3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e00ded686326b80f872debf8f5c6ca247cc4b34d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e00ded686326b80f872debf8f5c6ca247cc4b34d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e00ded686326b80f872debf8f5c6ca247cc4b34d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e00ded686326b80f872debf8f5c6ca247cc4b34d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "52718995ee2f24dad71bac848168e55f6c61c5e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52718995ee2f24dad71bac848168e55f6c61c5e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52718995ee2f24dad71bac848168e55f6c61c5e3"}], "stats": {"total": 34, "additions": 19, "deletions": 15}, "files": [{"sha": "b47b5d5409c891739b1721bb05b4459a53f6dd04", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00ded686326b80f872debf8f5c6ca247cc4b34d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00ded686326b80f872debf8f5c6ca247cc4b34d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e00ded686326b80f872debf8f5c6ca247cc4b34d", "patch": "@@ -1,3 +1,8 @@\n+2009-09-09  Jason Merrill  <jason@redhat.com>\n+\n+\t* configure.ac: Check glibc version even if we have an in-tree\n+\tassembler.\n+\n 2009-09-09  Anthony Green  <green@moxielogic.com>\n \n \t* config/moxie/moxie.md (*movsi, *movhi, *movqi): Use xor to load"}, {"sha": "3cfc903a3a3112f98a32de0e43487edc14bd7144", "filename": "gcc/configure", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00ded686326b80f872debf8f5c6ca247cc4b34d/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00ded686326b80f872debf8f5c6ca247cc4b34d/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=e00ded686326b80f872debf8f5c6ca247cc4b34d", "patch": "@@ -23985,16 +23985,7 @@ fi\n   $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n   test $ac_status = 0; }; }\n     then\n-\t# Also check for ld.so support, i.e. glibc 2.11 or higher.\n-   if test x$host = x$build -a x$host = x$target &&\n-       glibcver=`ldd --version 2>/dev/null`; then\n-      glibcmajor=`expr \"$glibcver\" : \"ldd (GNU libc) \\([0-9]*\\)\"`\n-      glibcminor=`expr \"$glibcver\" : \"ldd (GNU libc) [0-9]*\\.\\([0-9]*\\)\"`\n-      glibcnum=`expr $glibcmajor \\* 1000 + $glibcminor`\n-      if test \"$glibcnum\" -ge 2011 ; then\n-        gcc_cv_as_gnu_unique_object=yes\n-      fi\n-    fi\n+\tgcc_cv_as_gnu_unique_object=yes\n     else\n       echo \"configure: failed program was\" >&5\n       cat conftest.s >&5\n@@ -24005,7 +23996,16 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_gnu_unique_object\" >&5\n $as_echo \"$gcc_cv_as_gnu_unique_object\" >&6; }\n if test $gcc_cv_as_gnu_unique_object = yes; then\n-  enable_gnu_unique_object=yes\n+  # Also check for ld.so support, i.e. glibc 2.11 or higher.\n+   if test x$host = x$build -a x$host = x$target &&\n+       glibcver=`ldd --version 2>/dev/null`; then\n+      glibcmajor=`expr \"$glibcver\" : \"ldd (GNU libc) \\([0-9]*\\)\"`\n+      glibcminor=`expr \"$glibcver\" : \"ldd (GNU libc) [0-9]*\\.\\([0-9]*\\)\"`\n+      glibcnum=`expr $glibcmajor \\* 1000 + $glibcminor`\n+      if test \"$glibcnum\" -ge 2011 ; then\n+        enable_gnu_unique_object=yes\n+      fi\n+    fi\n fi\n fi\n "}, {"sha": "b8ec90ee9c17d4605244b460603bfd24b1079f4c", "filename": "gcc/configure.ac", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00ded686326b80f872debf8f5c6ca247cc4b34d/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00ded686326b80f872debf8f5c6ca247cc4b34d/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=e00ded686326b80f872debf8f5c6ca247cc4b34d", "patch": "@@ -3391,18 +3391,17 @@ Valid choices are 'yes' and 'no'.]) ;;\n   esac],\n  [gcc_GAS_CHECK_FEATURE([gnu_unique_object], gcc_cv_as_gnu_unique_object,\n    [elf,2,19,52],,\n-   [.type foo, @gnu_unique_object],\n+   [.type foo, @gnu_unique_object],,\n # Also check for ld.so support, i.e. glibc 2.11 or higher.\n    [if test x$host = x$build -a x$host = x$target &&\n        glibcver=`ldd --version 2>/dev/null`; then\n       glibcmajor=`expr \"$glibcver\" : \"ldd (GNU libc) \\([[0-9]]*\\)\"`\n       glibcminor=`expr \"$glibcver\" : \"ldd (GNU libc) [[0-9]]*\\.\\([[0-9]]*\\)\"`\n       glibcnum=`expr $glibcmajor \\* 1000 + $glibcminor`\n       if test \"$glibcnum\" -ge 2011 ; then\n-        gcc_cv_as_gnu_unique_object=yes\n+        enable_gnu_unique_object=yes\n       fi\n-    fi],\n-   [enable_gnu_unique_object=yes])])\n+    fi])])\n if test x$enable_gnu_unique_object = xyes; then\n   AC_DEFINE(HAVE_GAS_GNU_UNIQUE_OBJECT, 1,\n    [Define if your assembler supports @gnu_unique_object.])"}]}