{"sha": "1139a7354d6818da06edf5227ef6c12c08289b91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTEzOWE3MzU0ZDY4MThkYTA2ZWRmNTIyN2VmNmMxMmMwODI4OWI5MQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-02-28T23:50:57Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-02-28T23:50:57Z"}, "message": "re PR libstdc++/47921 (pbump will overflow when input n is larger than 2G-1)\n\n2011-02-28  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/47921\n\t* include/std/streambuf (basic_streambuf<>::__safe_gbump,\n\t__safe_pbump): Add.\n\t* include/bits/streambuf.tcc (basic_streambuf<>::xgetn,\n\txputn): Use the latter.\n\t* include/bits/streambuf_iterator.h: Likewise.\n\t* src/strstream.cc: Likewise.\n\t* src/streambuf.cc: Likewise.\n\t* src/compatibility.cc: Likewise.\n\t* src/istream.cc: Likewise.\n\t* include/bits/fstream.tcc (basic_filebuf<>::xsgetn): Use setg\n\tinstead of gbump.\n\t* include/std/sstream (basic_stringbuf<>::_M_pbump): Add.\n\t* include/bits/sstream.tcc (basic_stringbuf<>::seekoff,\n\tseekpos, _M_sync): Use setg, setp, and _M_pbump.\n\t* config/abi/pre/gnu.ver: Tweak.\n\nFrom-SVN: r170579", "tree": {"sha": "ee95f0e866d1d1bafe977f8e5861e6f678607891", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee95f0e866d1d1bafe977f8e5861e6f678607891"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1139a7354d6818da06edf5227ef6c12c08289b91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1139a7354d6818da06edf5227ef6c12c08289b91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1139a7354d6818da06edf5227ef6c12c08289b91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1139a7354d6818da06edf5227ef6c12c08289b91/comments", "author": null, "committer": null, "parents": [{"sha": "6dfef9cca7628d454ed535736f9d063a7d45911d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dfef9cca7628d454ed535736f9d063a7d45911d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dfef9cca7628d454ed535736f9d063a7d45911d"}], "stats": {"total": 123, "additions": 85, "deletions": 38}, "files": [{"sha": "16ee72899920a0e66aa683cb1dff1bbff93ac2ef", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1139a7354d6818da06edf5227ef6c12c08289b91/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1139a7354d6818da06edf5227ef6c12c08289b91/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1139a7354d6818da06edf5227ef6c12c08289b91", "patch": "@@ -1,3 +1,22 @@\n+2011-02-28  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/47921\n+\t* include/std/streambuf (basic_streambuf<>::__safe_gbump,\n+\t__safe_pbump): Add.\n+\t* include/bits/streambuf.tcc (basic_streambuf<>::xgetn,\n+\txputn): Use the latter.\n+\t* include/bits/streambuf_iterator.h: Likewise.\n+\t* src/strstream.cc: Likewise.\n+\t* src/streambuf.cc: Likewise.\n+\t* src/compatibility.cc: Likewise.\n+\t* src/istream.cc: Likewise.\n+\t* include/bits/fstream.tcc (basic_filebuf<>::xsgetn): Use setg\n+\tinstead of gbump.\n+\t* include/std/sstream (basic_stringbuf<>::_M_pbump): Add.\n+\t* include/bits/sstream.tcc (basic_stringbuf<>::seekoff,\n+\tseekpos, _M_sync): Use setg, setp, and _M_pbump.\n+\t* config/abi/pre/gnu.ver: Tweak.\n+\n 2011-02-28  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/20_util/ratio/comparisons/comp3.cc: New."}, {"sha": "b3e5380f76dad8fabcd77b8ea17649309ff086af", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1139a7354d6818da06edf5227ef6c12c08289b91/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1139a7354d6818da06edf5227ef6c12c08289b91/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=1139a7354d6818da06edf5227ef6c12c08289b91", "patch": "@@ -322,7 +322,8 @@ GLIBCXX_3.4 {\n     _ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEE3strERKSs;\n     _ZNSt15basic_stringbufIwSt11char_traitsIwESaIwEE3strERKSbIwS1_S2_E;\n     _ZNSt15basic_stringbufI[cw]St11char_traitsI[cw]ESaI[cw]EE[0-9][t-z]*;\n-    _ZNSt15basic_stringbufI[cw]St11char_traitsI[cw]ESaI[cw]EE[0-9]_M_[a-z]*;\n+    _ZNSt15basic_stringbufI[cw]St11char_traitsI[cw]ESaI[cw]EE[0-9]_M_[a-o]*;\n+    _ZNSt15basic_stringbufI[cw]St11char_traitsI[cw]ESaI[cw]EE[0-9]_M_[q-z]*;\n     _ZNSt15basic_stringbufI[cw]St11char_traitsI[cw]ESaI[cw]EE[0-9][0-9]_M_[a-z]*;\n \n     # std::basic_iostream constructors, destructors"}, {"sha": "282934e0b531e0096a7223fa67b5889bad1190a8", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1139a7354d6818da06edf5227ef6c12c08289b91/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1139a7354d6818da06edf5227ef6c12c08289b91/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=1139a7354d6818da06edf5227ef6c12c08289b91", "patch": "@@ -584,14 +584,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n  \t   const streamsize __avail = this->egptr() - this->gptr();\n  \t   if (__avail != 0)\n  \t     {\n- \t       if (__avail == 1)\n- \t\t *__s = *this->gptr();\n- \t       else\n- \t\t traits_type::copy(__s, this->gptr(), __avail);\n+\t       traits_type::copy(__s, this->gptr(), __avail);\n  \t       __s += __avail;\n- \t       this->gbump(__avail);\n- \t       __ret += __avail;\n- \t       __n -= __avail;\n+\t       this->setg(this->eback(), this->gptr() + __avail,\n+\t\t\t  this->egptr());\n+\t       __ret += __avail;\n+\t       __n -= __avail;\n  \t     }\n  \n  \t   // Need to loop in case of short reads (relatively common"}, {"sha": "ffa92e73baa021c0206af10a3b3a0893f989d002", "filename": "libstdc++-v3/include/bits/sstream.tcc", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1139a7354d6818da06edf5227ef6c12c08289b91/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1139a7354d6818da06edf5227ef6c12c08289b91/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc?ref=1139a7354d6818da06edf5227ef6c12c08289b91", "patch": "@@ -1,7 +1,7 @@\n // String based streams -*- C++ -*-\n \n // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-// 2006, 2007, 2009, 2010\n+// 2006, 2007, 2008, 2009, 2010, 2011\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -178,14 +178,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t      && __newoffi >= 0\n \t      && this->egptr() - __beg >= __newoffi)\n \t    {\n-\t      this->gbump((__beg + __newoffi) - this->gptr());\n+\t      this->setg(this->eback(), this->eback() + __newoffi,\n+\t\t\t this->egptr());\n \t      __ret = pos_type(__newoffi);\n \t    }\n \t  if ((__testout || __testboth)\n \t      && __newoffo >= 0\n \t      && this->egptr() - __beg >= __newoffo)\n \t    {\n-\t      this->pbump((__beg + __newoffo) - this->pptr());\n+\t      _M_pbump(this->pbase(), this->epptr(), __newoffo);\n \t      __ret = pos_type(__newoffo);\n \t    }\n \t}\n@@ -212,9 +213,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  if (__testpos)\n \t    {\n \t      if (__testin)\n-\t\tthis->gbump((__beg + __pos) - this->gptr());\n+\t\tthis->setg(this->eback(), this->eback() + __pos,\n+\t\t\t   this->egptr());\n \t      if (__testout)\n-                this->pbump((__beg + __pos) - this->pptr());\n+\t\t_M_pbump(this->pbase(), this->epptr(), __pos);\n \t      __ret = __sp;\n \t    }\n \t}\n@@ -243,8 +245,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tthis->setg(__base, __base + __i, __endg);\n       if (__testout)\n \t{\n-\t  this->setp(__base, __endp);\n-\t  this->pbump(__o);\n+\t  _M_pbump(__base, __endp, __o);\n \t  // egptr() always tracks the string end.  When !__testin,\n \t  // for the correct functioning of the streambuf inlines\n \t  // the other get area pointers are identical.\n@@ -253,6 +254,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t}\n     }\n \n+  template <class _CharT, class _Traits, class _Alloc>\n+    void\n+    basic_stringbuf<_CharT, _Traits, _Alloc>::\n+    _M_pbump(char_type* __pbeg, char_type* __pend, off_type __off)\n+    {\n+      this->setp(__pbeg, __pend);\n+      while (__off > __gnu_cxx::__numeric_traits<int>::__max)\n+\t{\n+\t  this->pbump(__gnu_cxx::__numeric_traits<int>::__max);\n+\t  __off -= __gnu_cxx::__numeric_traits<int>::__max;\n+\t}\n+      this->pbump(__off);\n+    }\n+\n   // Inhibit implicit instantiations for required instantiations,\n   // which are defined via explicit instantiations elsewhere.\n   // NB:  This syntax is a GNU extension."}, {"sha": "d154ef1f19a47ec40757236ae1448740e66208e0", "filename": "libstdc++-v3/include/bits/streambuf.tcc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1139a7354d6818da06edf5227ef6c12c08289b91/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1139a7354d6818da06edf5227ef6c12c08289b91/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc?ref=1139a7354d6818da06edf5227ef6c12c08289b91", "patch": "@@ -1,7 +1,7 @@\n // Stream buffer classes -*- C++ -*-\n \n // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-// 2006, 2009, 2010  Free Software Foundation, Inc.\n+// 2006, 2007, 2008, 2009, 2010, 2011  Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -57,7 +57,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t      traits_type::copy(__s, this->gptr(), __len);\n \t      __ret += __len;\n \t      __s += __len;\n-\t      this->gbump(__len);\n+\t      this->__safe_gbump(__len);\n \t    }\n \n \t  if (__ret < __n)\n@@ -91,7 +91,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t      traits_type::copy(this->pptr(), __s, __len);\n \t      __ret += __len;\n \t      __s += __len;\n-\t      this->pbump(__len);\n+\t      this->__safe_pbump(__len);\n \t    }\n \n \t  if (__ret < __n)"}, {"sha": "83ae6785c2d069c50968ac47fc7d1ff7de91cedf", "filename": "libstdc++-v3/include/bits/streambuf_iterator.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1139a7354d6818da06edf5227ef6c12c08289b91/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1139a7354d6818da06edf5227ef6c12c08289b91/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf_iterator.h?ref=1139a7354d6818da06edf5227ef6c12c08289b91", "patch": "@@ -1,7 +1,7 @@\n // Streambuf iterators\n \n // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-// 2006, 2007, 2009, 2010\n+// 2006, 2007, 2009, 2010, 2011\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -339,7 +339,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t      if (__n > 1)\n \t\t{\n \t\t  traits_type::copy(__result, __sb->gptr(), __n);\n-\t\t  __sb->gbump(__n);\n+\t\t  __sb->__safe_gbump(__n);\n \t\t  __result += __n;\n \t\t  __c = __sb->underflow();\n \t\t}\n@@ -379,7 +379,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t\t\t\t\t__n, __val);\n \t\t  if (__p)\n \t\t    __n = __p - __sb->gptr();\n-\t\t  __sb->gbump(__n);\n+\t\t  __sb->__safe_gbump(__n);\n \t\t  __c = __sb->sgetc();\n \t\t}\n \t      else"}, {"sha": "bf2862add30aeddc6641b7937741077af8597ae7", "filename": "libstdc++-v3/include/std/sstream", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1139a7354d6818da06edf5227ef6c12c08289b91/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsstream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1139a7354d6818da06edf5227ef6c12c08289b91/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsstream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsstream?ref=1139a7354d6818da06edf5227ef6c12c08289b91", "patch": "@@ -241,6 +241,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t      this->setg(this->pptr(), this->pptr(), this->pptr());\n \t  }\n       }\n+\n+      // Works around the issue with pbump, part of the protected\n+      // interface of basic_streambuf, taking just an int.\n+      void\n+      _M_pbump(char_type* __pbeg, char_type* __pend, off_type __off);\n     };\n \n "}, {"sha": "b46efec460106b98492c3e2d2eb898cb8f80be9b", "filename": "libstdc++-v3/include/std/streambuf", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1139a7354d6818da06edf5227ef6c12c08289b91/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1139a7354d6818da06edf5227ef6c12c08289b91/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf?ref=1139a7354d6818da06edf5227ef6c12c08289b91", "patch": "@@ -769,6 +769,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       }\n #endif\n \n+      // Also used by specializations for char and wchar_t in src.\n+      void \n+      __safe_gbump(streamsize __n) { _M_in_cur += __n; }\n+\n+      void\n+      __safe_pbump(streamsize __n) { _M_out_cur += __n; }\n+\n     private:\n       // _GLIBCXX_RESOLVE_LIB_DEFECTS\n       // Side effect of DR 50. "}, {"sha": "d4cf5d7c1225543d72705a9dd376136ce965bf31", "filename": "libstdc++-v3/src/compatibility.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1139a7354d6818da06edf5227ef6c12c08289b91/libstdc%2B%2B-v3%2Fsrc%2Fcompatibility.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1139a7354d6818da06edf5227ef6c12c08289b91/libstdc%2B%2B-v3%2Fsrc%2Fcompatibility.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fcompatibility.cc?ref=1139a7354d6818da06edf5227ef6c12c08289b91", "patch": "@@ -86,7 +86,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t\t\t          streamsize(__n - _M_gcount));\n \t\t      if (__size > 1)\n \t\t\t{\n-\t\t\t  __sb->gbump(__size);\n+\t\t\t  __sb->__safe_gbump(__size);\n \t\t\t  _M_gcount += __size;\n \t\t\t  __c = __sb->sgetc();\n \t\t\t}\n@@ -157,7 +157,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t\t\t\t  streamsize(__n - _M_gcount));\n \t\t      if (__size > 1)\n \t\t\t{\n-\t\t\t  __sb->gbump(__size);\n+\t\t\t  __sb->__safe_gbump(__size);\n \t\t\t  _M_gcount += __size;\n \t\t\t  __c = __sb->sgetc();\n \t\t\t}"}, {"sha": "f161016cf3d1dcd0a5e4f53df57d8d92fd39a98f", "filename": "libstdc++-v3/src/istream.cc", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1139a7354d6818da06edf5227ef6c12c08289b91/libstdc%2B%2B-v3%2Fsrc%2Fistream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1139a7354d6818da06edf5227ef6c12c08289b91/libstdc%2B%2B-v3%2Fsrc%2Fistream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fistream.cc?ref=1139a7354d6818da06edf5227ef6c12c08289b91", "patch": "@@ -67,7 +67,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t__size = __p - __sb->gptr();\n \t\t      traits_type::copy(__s, __sb->gptr(), __size);\n \t\t      __s += __size;\n-\t\t      __sb->gbump(__size);\n+\t\t      __sb->__safe_gbump(__size);\n \t\t      _M_gcount += __size;\n \t\t      __c = __sb->sgetc();\n \t\t    }\n@@ -145,7 +145,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t\t\t\t\t\t   __cdelim);\n \t\t\t  if (__p)\n \t\t\t    __size = __p - __sb->gptr();\n-\t\t\t  __sb->gbump(__size);\n+\t\t\t  __sb->__safe_gbump(__size);\n \t\t\t  _M_gcount += __size;\n \t\t\t  __c = __sb->sgetc();\n \t\t\t}\n@@ -239,7 +239,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t\t- __sb->gptr());\n \t\t      __traits_type::copy(__s, __sb->gptr(), __size);\n \t\t      __s += __size;\n-\t\t      __sb->gbump(__size);\n+\t\t      __sb->__safe_gbump(__size);\n \t\t      __extracted += __size;\n \t\t      __c = __sb->sgetc();\n \t\t    }\n@@ -318,7 +318,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t\t\t     __sb->gptr() + __size)\n \t\t\t\t- __sb->gptr());\n \t\t      __str.append(__sb->gptr(), __size);\n-\t\t      __sb->gbump(__size);\n+\t\t      __sb->__safe_gbump(__size);\n \t\t      __extracted += __size;\n \t\t      __c = __sb->sgetc();\n \t\t    }\n@@ -397,7 +397,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t      if (__p)\n \t\t\t__size = __p - __sb->gptr();\n \t\t      __str.append(__sb->gptr(), __size);\n-\t\t      __sb->gbump(__size);\n+\t\t      __sb->__safe_gbump(__size);\n \t\t      __extracted += __size;\n \t\t      __c = __sb->sgetc();\n \t\t    }\n@@ -474,7 +474,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t__size = __p - __sb->gptr();\n \t\t      traits_type::copy(__s, __sb->gptr(), __size);\n \t\t      __s += __size;\n-\t\t      __sb->gbump(__size);\n+\t\t      __sb->__safe_gbump(__size);\n \t\t      _M_gcount += __size;\n \t\t      __c = __sb->sgetc();\n \t\t    }\n@@ -552,7 +552,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t\t\t\t\t\t   __cdelim);\n \t\t\t  if (__p)\n \t\t\t    __size = __p - __sb->gptr();\n-\t\t\t  __sb->gbump(__size);\n+\t\t\t  __sb->__safe_gbump(__size);\n \t\t\t  _M_gcount += __size;\n \t\t\t  __c = __sb->sgetc();\n \t\t\t}\n@@ -643,7 +643,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t      if (__p)\n \t\t\t__size = __p - __sb->gptr();\n \t\t      __str.append(__sb->gptr(), __size);\n-\t\t      __sb->gbump(__size);\n+\t\t      __sb->__safe_gbump(__size);\n \t\t      __extracted += __size;\n \t\t      __c = __sb->sgetc();\n \t\t    }"}, {"sha": "5bcd0ea8d58516807ecf9e5ccfbe70e925eb4ec6", "filename": "libstdc++-v3/src/streambuf.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1139a7354d6818da06edf5227ef6c12c08289b91/libstdc%2B%2B-v3%2Fsrc%2Fstreambuf.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1139a7354d6818da06edf5227ef6c12c08289b91/libstdc%2B%2B-v3%2Fsrc%2Fstreambuf.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fstreambuf.cc?ref=1139a7354d6818da06edf5227ef6c12c08289b91", "patch": "@@ -1,6 +1,7 @@\n // Stream buffer classes -*- C++ -*-\n \n-// Copyright (C) 2004, 2005, 2006, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -47,7 +48,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  if (__n > 1)\n \t    {\n \t      const streamsize __wrote = __sbout->sputn(__sbin->gptr(), __n);\n-\t      __sbin->gbump(__wrote);\n+\t      __sbin->__safe_gbump(__wrote);\n \t      __ret += __wrote;\n \t      if (__wrote < __n)\n \t\t{\n@@ -87,7 +88,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  if (__n > 1)\n \t    {\n \t      const streamsize __wrote = __sbout->sputn(__sbin->gptr(), __n);\n-\t      __sbin->gbump(__wrote);\n+\t      __sbin->__safe_gbump(__wrote);\n \t      __ret += __wrote;\n \t      if (__wrote < __n)\n \t\t{"}, {"sha": "c76fc60e0ac57bbfe251feac1464eb3d5f095fa6", "filename": "libstdc++-v3/src/strstream.cc", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1139a7354d6818da06edf5227ef6c12c08289b91/libstdc%2B%2B-v3%2Fsrc%2Fstrstream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1139a7354d6818da06edf5227ef6c12c08289b91/libstdc%2B%2B-v3%2Fsrc%2Fstrstream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fstrstream.cc?ref=1139a7354d6818da06edf5227ef6c12c08289b91", "patch": "@@ -1,6 +1,7 @@\n // strstream definitions -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2005, 2009 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2005, 2009, 2010, 2011\n+// Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -161,7 +162,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t      }\n \t    \n \t    setp(buf, buf + new_size);\n-\t    pbump(old_size);\n+\t    __safe_pbump(old_size);\n \n \t    if (reposition_get)\n \t      setg(buf, buf + old_get_offset, buf + \n@@ -271,12 +272,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tif (seeklow + off < pbase()) \n \t  {\n \t    setp(seeklow, epptr());\n-\t    pbump(off);\n+\t    __safe_pbump(off);\n \t  }\n \telse \n \t  {\n \t    setp(pbase(), epptr());\n-\t    pbump(off - (pbase() - seeklow));\n+\t    __safe_pbump(off - (pbase() - seeklow));\n \t  }\n       }\n     if (do_get) "}]}