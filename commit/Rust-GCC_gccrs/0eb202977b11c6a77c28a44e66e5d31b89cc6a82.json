{"sha": "0eb202977b11c6a77c28a44e66e5d31b89cc6a82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGViMjAyOTc3YjExYzZhNzdjMjhhNDRlNjZlNWQzMWI4OWNjNmE4Mg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-09-29T01:24:47Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-09-29T01:24:47Z"}, "message": "(push_temp_slots, pop_temp_slots): Always change level.\n\nFrom-SVN: r5523", "tree": {"sha": "b58aadc30b2d704cccdc0c27194bb693f8603635", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b58aadc30b2d704cccdc0c27194bb693f8603635"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0eb202977b11c6a77c28a44e66e5d31b89cc6a82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eb202977b11c6a77c28a44e66e5d31b89cc6a82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0eb202977b11c6a77c28a44e66e5d31b89cc6a82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eb202977b11c6a77c28a44e66e5d31b89cc6a82/comments", "author": null, "committer": null, "parents": [{"sha": "af463efd96d50cb3dd6090b2ab73732d5d6eee4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af463efd96d50cb3dd6090b2ab73732d5d6eee4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af463efd96d50cb3dd6090b2ab73732d5d6eee4d"}], "stats": {"total": 13, "additions": 0, "deletions": 13}, "files": [{"sha": "3956969eadce2dc6ce159410666f76856f90b273", "filename": "gcc/function.c", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eb202977b11c6a77c28a44e66e5d31b89cc6a82/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eb202977b11c6a77c28a44e66e5d31b89cc6a82/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=0eb202977b11c6a77c28a44e66e5d31b89cc6a82", "patch": "@@ -916,14 +916,6 @@ free_temp_slots ()\n void\n push_temp_slots ()\n {\n-  /* For GNU C++, we must allow a sequence to be emitted anywhere in\n-     the level where the sequence was started.  By not changing levels\n-     when the compiler is inside a sequence, the temporaries for the\n-     sequence and the temporaries will not unwittingly conflict with\n-     the temporaries for other sequences and/or code at that level.  */\n-  if (in_sequence_p ())\n-    return;\n-\n   temp_slot_level++;\n }\n \n@@ -935,11 +927,6 @@ pop_temp_slots ()\n {\n   struct temp_slot *p;\n \n-  /* See comment in push_temp_slots about why we don't change levels\n-     in sequences.  */\n-  if (in_sequence_p ())\n-    return;\n-\n   for (p = temp_slots; p; p = p->next)\n     if (p->in_use && p->level == temp_slot_level)\n       p->in_use = 0;"}]}