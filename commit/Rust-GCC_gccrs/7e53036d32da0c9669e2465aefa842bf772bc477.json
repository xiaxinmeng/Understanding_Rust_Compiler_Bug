{"sha": "7e53036d32da0c9669e2465aefa842bf772bc477", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U1MzAzNmQzMmRhMGM5NjY5ZTI0NjVhZWZhODQyYmY3NzJiYzQ3Nw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-20T01:53:57Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-20T01:53:57Z"}, "message": "(gen_type): For array type, state the size.\n\nFrom-SVN: r1634", "tree": {"sha": "e98a595fb40eba69f940759d112cf608eae9b007", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e98a595fb40eba69f940759d112cf608eae9b007"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e53036d32da0c9669e2465aefa842bf772bc477", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e53036d32da0c9669e2465aefa842bf772bc477", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e53036d32da0c9669e2465aefa842bf772bc477", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e53036d32da0c9669e2465aefa842bf772bc477/comments", "author": null, "committer": null, "parents": [{"sha": "e5d91d5ef8d7e08b50f990dcaed4cbab8936154f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5d91d5ef8d7e08b50f990dcaed4cbab8936154f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5d91d5ef8d7e08b50f990dcaed4cbab8936154f"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "2e1506447e3552cb0c44d317607a5dc80311883d", "filename": "gcc/c-aux-info.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e53036d32da0c9669e2465aefa842bf772bc477/gcc%2Fc-aux-info.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e53036d32da0c9669e2465aefa842bf772bc477/gcc%2Fc-aux-info.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-aux-info.c?ref=7e53036d32da0c9669e2465aefa842bf772bc477", "patch": "@@ -384,7 +384,18 @@ gen_type (ret_val, t, style)\n           return ret_val;\n \n         case ARRAY_TYPE:\n-          ret_val = gen_type (concat (ret_val, \"[]\"), TREE_TYPE (t), style);\n+\t  if (TYPE_SIZE (t) == 0 || TREE_CODE (TYPE_SIZE (t)) != INTEGER_CST)\n+\t    ret_val = gen_type (concat (ret_val, \"[]\"), TREE_TYPE (t), style);\n+\t  else if (int_size_in_bytes (t) == 0)\n+\t    ret_val = gen_type (concat (ret_val, \"[0]\"), TREE_TYPE (t), style);\n+\t  else\n+\t    {\n+\t      int size = (int_size_in_bytes (t) / int_size_in_bytes (TREE_TYPE (t)));\n+\t      char buff[10];\n+\t      sprintf (buff, \"[%d]\", size);\n+\t      ret_val = gen_type (concat (ret_val, buff),\n+\t\t\t\t  TREE_TYPE (t), style);\n+\t    }\n           break;\n \n         case FUNCTION_TYPE:"}]}