{"sha": "e260b0a7dda804cd2bd0beee477d47ce9c01d4c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI2MGIwYTdkZGE4MDRjZDJiZDBiZWVlNDc3ZDQ3Y2U5YzAxZDRjMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-03-10T15:33:04Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-03-10T15:33:04Z"}, "message": "re PR c++/79899 (ICE in ctor_omit_inherited_parms at gcc/cp/method.c:576 on ARM target)\n\n\tPR c++/79899\n\t* optimize.c (maybe_thunk_body): Don't ICE if fns[0] is NULL.\n\tUse XALLOCAVEC macro.\n\n\t* g++.dg/other/friend7.C: New test.\n\nFrom-SVN: r246038", "tree": {"sha": "9961619e7d8b0c379157514d3bc89a496171ee28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9961619e7d8b0c379157514d3bc89a496171ee28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e260b0a7dda804cd2bd0beee477d47ce9c01d4c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e260b0a7dda804cd2bd0beee477d47ce9c01d4c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e260b0a7dda804cd2bd0beee477d47ce9c01d4c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e260b0a7dda804cd2bd0beee477d47ce9c01d4c0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da0ced6eb890fbb1cbe1da7bc620dc6ef9f13246", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da0ced6eb890fbb1cbe1da7bc620dc6ef9f13246", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da0ced6eb890fbb1cbe1da7bc620dc6ef9f13246"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "d3871aada43a41f8e6615c7ecfcc2c9ea6361c8d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e260b0a7dda804cd2bd0beee477d47ce9c01d4c0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e260b0a7dda804cd2bd0beee477d47ce9c01d4c0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e260b0a7dda804cd2bd0beee477d47ce9c01d4c0", "patch": "@@ -1,5 +1,9 @@\n 2017-03-10  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/79899\n+\t* optimize.c (maybe_thunk_body): Don't ICE if fns[0] is NULL.\n+\tUse XALLOCAVEC macro.\n+\n \tPR c++/79896\n \t* decl.c (finish_enum_value_list): If value is error_mark_node,\n \tdon't copy it and change its type."}, {"sha": "d646ef73803fdf4b33b20329aea5287c91c48547", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e260b0a7dda804cd2bd0beee477d47ce9c01d4c0/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e260b0a7dda804cd2bd0beee477d47ce9c01d4c0/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=e260b0a7dda804cd2bd0beee477d47ce9c01d4c0", "patch": "@@ -262,7 +262,7 @@ maybe_thunk_body (tree fn, bool force)\n   populate_clone_array (fn, fns);\n \n   /* Don't use thunks if the base clone omits inherited parameters.  */\n-  if (ctor_omit_inherited_parms (fns[0]))\n+  if (fns[0] && ctor_omit_inherited_parms (fns[0]))\n     return 0;\n \n   DECL_ABSTRACT_P (fn) = false;\n@@ -324,7 +324,7 @@ maybe_thunk_body (tree fn, bool force)\n       if (length > max_parms)\n         max_parms = length;\n     }\n-  args = (tree *) alloca (max_parms * sizeof (tree));\n+  args = XALLOCAVEC (tree, max_parms);\n \n   /* We know that any clones immediately follow FN in TYPE_METHODS.  */\n   FOR_EACH_CLONE (clone, fn)"}, {"sha": "a7dae3d232cd8e8236c6c6978aad15de36f8033a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e260b0a7dda804cd2bd0beee477d47ce9c01d4c0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e260b0a7dda804cd2bd0beee477d47ce9c01d4c0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e260b0a7dda804cd2bd0beee477d47ce9c01d4c0", "patch": "@@ -1,5 +1,8 @@\n 2017-03-10  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/79899\n+\t* g++.dg/other/friend7.C: New test.\n+\n \tPR c++/79896\n \t* g++.dg/ext/int128-5.C: New test.\n "}, {"sha": "4d22a8791fd4cb7cc7d38f9497d0b1f23396793a", "filename": "gcc/testsuite/g++.dg/other/friend7.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e260b0a7dda804cd2bd0beee477d47ce9c01d4c0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffriend7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e260b0a7dda804cd2bd0beee477d47ce9c01d4c0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffriend7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffriend7.C?ref=e260b0a7dda804cd2bd0beee477d47ce9c01d4c0", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/79899\n+\n+// { dg-do compile }\n+// { dg-options \"-Os\" }\n+\n+struct A\n+{\n+  friend A::~A() {} // { dg-error \"implicitly friends of their class\" }\n+};"}]}