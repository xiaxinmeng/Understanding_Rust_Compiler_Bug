{"sha": "e1faf1503e727b7b1a4485e63c042f8dd0a00524", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFmYWYxNTAzZTcyN2I3YjFhNDQ4NWU2M2MwNDJmOGRkMGEwMDUyNA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-10-07T18:19:50Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-10-07T18:19:50Z"}, "message": "Delete incorrect representations of avx2 shifts.\n\n\t* config/i386/i386.c (bdesc_args): Update code for\n\t__builtin_ia32_palignr256.  Change type of __builtin_ia32_pslldqi256,\n\tand __builtin_ia32_psrldqi256 to V4DI_FTYPE_V4DI_INT_CONVERT.\n\t(ix86_expand_args_builtin): Handle V4DI_FTYPE_V4DI_INT_CONVERT.\n\t* config/i386/sse.md (mode iterator V16): Add V2TI.\n\t(mode iterator SSESCALARMODE): Use V2TI not V4DI.\n\t(mode attr ssse3_avx2): Add V2TI.\n\t(avx2_lshrqv4di3, avx2_lshlqv4di3): Remove.\n\nFrom-SVN: r179668", "tree": {"sha": "79748d9421285fd9719e5902f7dcf24452cbf5f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79748d9421285fd9719e5902f7dcf24452cbf5f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1faf1503e727b7b1a4485e63c042f8dd0a00524", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1faf1503e727b7b1a4485e63c042f8dd0a00524", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1faf1503e727b7b1a4485e63c042f8dd0a00524", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1faf1503e727b7b1a4485e63c042f8dd0a00524/comments", "author": null, "committer": null, "parents": [{"sha": "26e2f443df7e81d1adc3ed509928ddc06df432bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26e2f443df7e81d1adc3ed509928ddc06df432bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26e2f443df7e81d1adc3ed509928ddc06df432bd"}], "stats": {"total": 61, "additions": 25, "deletions": 36}, "files": [{"sha": "f3544a2c8a10db36dae43764dae15765a68add9c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1faf1503e727b7b1a4485e63c042f8dd0a00524/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1faf1503e727b7b1a4485e63c042f8dd0a00524/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e1faf1503e727b7b1a4485e63c042f8dd0a00524", "patch": "@@ -1,3 +1,14 @@\n+2011-10-07  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/i386.c (bdesc_args): Update code for\n+\t__builtin_ia32_palignr256.  Change type of __builtin_ia32_pslldqi256,\n+\tand __builtin_ia32_psrldqi256 to V4DI_FTYPE_V4DI_INT_CONVERT.\n+\t(ix86_expand_args_builtin): Handle V4DI_FTYPE_V4DI_INT_CONVERT.\n+\t* config/i386/sse.md (mode iterator V16): Add V2TI.\n+\t(mode iterator SSESCALARMODE): Use V2TI not V4DI.\n+\t(mode attr ssse3_avx2): Add V2TI.\n+\t(avx2_lshrqv4di3, avx2_lshlqv4di3): Remove.\n+\n 2011-10-07  David S. Miller  <davem@davemloft.net>\n \n \tPR 50655"}, {"sha": "9611f1f82e89f9ac7654198b6f444ae99f4ab6ec", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1faf1503e727b7b1a4485e63c042f8dd0a00524/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1faf1503e727b7b1a4485e63c042f8dd0a00524/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=e1faf1503e727b7b1a4485e63c042f8dd0a00524", "patch": "@@ -26107,7 +26107,7 @@ static const struct builtin_description bdesc_args[] =\n   { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_ssaddv16hi3, \"__builtin_ia32_paddsw256\", IX86_BUILTIN_PADDSW256, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI },\n   { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_usaddv32qi3, \"__builtin_ia32_paddusb256\", IX86_BUILTIN_PADDUSB256, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI },\n   { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_usaddv16hi3, \"__builtin_ia32_paddusw256\", IX86_BUILTIN_PADDUSW256, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI },\n-  { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_palignrv4di, \"__builtin_ia32_palignr256\", IX86_BUILTIN_PALIGNR256, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_INT_CONVERT },\n+  { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_palignrv2ti, \"__builtin_ia32_palignr256\", IX86_BUILTIN_PALIGNR256, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_INT_CONVERT },\n   { OPTION_MASK_ISA_AVX2, CODE_FOR_andv4di3, \"__builtin_ia32_andsi256\", IX86_BUILTIN_AND256I, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI },\n   { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_andnotv4di3, \"__builtin_ia32_andnotsi256\", IX86_BUILTIN_ANDNOT256I, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI },\n   { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_uavgv32qi3, \"__builtin_ia32_pavgb256\",  IX86_BUILTIN_PAVGB256, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI },\n@@ -26171,7 +26171,7 @@ static const struct builtin_description bdesc_args[] =\n   { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_psignv32qi3, \"__builtin_ia32_psignb256\", IX86_BUILTIN_PSIGNB256, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI },\n   { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_psignv16hi3, \"__builtin_ia32_psignw256\", IX86_BUILTIN_PSIGNW256, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI },\n   { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_psignv8si3 , \"__builtin_ia32_psignd256\", IX86_BUILTIN_PSIGND256, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI },\n-  { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_lshlqv4di3, \"__builtin_ia32_pslldqi256\", IX86_BUILTIN_PSLLDQI256, UNKNOWN, (int) V4DI_FTYPE_V4DI_INT },\n+  { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_ashlv2ti3, \"__builtin_ia32_pslldqi256\", IX86_BUILTIN_PSLLDQI256, UNKNOWN, (int) V4DI_FTYPE_V4DI_INT_CONVERT },\n   { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_lshlv16hi3, \"__builtin_ia32_psllwi256\", IX86_BUILTIN_PSLLWI256 , UNKNOWN, (int) V16HI_FTYPE_V16HI_SI_COUNT },\n   { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_lshlv16hi3, \"__builtin_ia32_psllw256\", IX86_BUILTIN_PSLLW256, UNKNOWN, (int) V16HI_FTYPE_V16HI_V8HI_COUNT },\n   { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_lshlv8si3, \"__builtin_ia32_pslldi256\", IX86_BUILTIN_PSLLDI256, UNKNOWN, (int) V8SI_FTYPE_V8SI_SI_COUNT },\n@@ -26182,7 +26182,7 @@ static const struct builtin_description bdesc_args[] =\n   { OPTION_MASK_ISA_AVX2, CODE_FOR_ashrv16hi3, \"__builtin_ia32_psraw256\", IX86_BUILTIN_PSRAW256, UNKNOWN, (int) V16HI_FTYPE_V16HI_V8HI_COUNT },\n   { OPTION_MASK_ISA_AVX2, CODE_FOR_ashrv8si3, \"__builtin_ia32_psradi256\", IX86_BUILTIN_PSRADI256, UNKNOWN, (int) V8SI_FTYPE_V8SI_SI_COUNT },\n   { OPTION_MASK_ISA_AVX2, CODE_FOR_ashrv8si3, \"__builtin_ia32_psrad256\", IX86_BUILTIN_PSRAD256, UNKNOWN, (int) V8SI_FTYPE_V8SI_V4SI_COUNT },\n-  { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_lshrqv4di3, \"__builtin_ia32_psrldqi256\", IX86_BUILTIN_PSRLDQI256, UNKNOWN, (int) V4DI_FTYPE_V4DI_INT },\n+  { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_lshrv2ti3, \"__builtin_ia32_psrldqi256\", IX86_BUILTIN_PSRLDQI256, UNKNOWN, (int) V4DI_FTYPE_V4DI_INT_CONVERT },\n   { OPTION_MASK_ISA_AVX2, CODE_FOR_lshrv16hi3, \"__builtin_ia32_psrlwi256\", IX86_BUILTIN_PSRLWI256 , UNKNOWN, (int) V16HI_FTYPE_V16HI_SI_COUNT },\n   { OPTION_MASK_ISA_AVX2, CODE_FOR_lshrv16hi3, \"__builtin_ia32_psrlw256\", IX86_BUILTIN_PSRLW256, UNKNOWN, (int) V16HI_FTYPE_V16HI_V8HI_COUNT },\n   { OPTION_MASK_ISA_AVX2, CODE_FOR_lshrv8si3, \"__builtin_ia32_psrldi256\", IX86_BUILTIN_PSRLDI256, UNKNOWN, (int) V8SI_FTYPE_V8SI_SI_COUNT },\n@@ -27812,6 +27812,11 @@ ix86_expand_args_builtin (const struct builtin_description *d,\n       rmode = V1TImode;\n       nargs_constant = 1;\n       break;\n+    case V4DI_FTYPE_V4DI_INT_CONVERT:\n+      nargs = 2;\n+      rmode = V2TImode;\n+      nargs_constant = 1;\n+      break;\n     case V8HI_FTYPE_V8HI_INT:\n     case V8HI_FTYPE_V8SF_INT:\n     case V8HI_FTYPE_V4SF_INT:"}, {"sha": "a7df2216ccc1a5ea86fd8ecce909a6ebd237e073", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 6, "deletions": 33, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1faf1503e727b7b1a4485e63c042f8dd0a00524/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1faf1503e727b7b1a4485e63c042f8dd0a00524/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=e1faf1503e727b7b1a4485e63c042f8dd0a00524", "patch": "@@ -18,13 +18,13 @@\n ;; along with GCC; see the file COPYING3.  If not see\n ;; <http://www.gnu.org/licenses/>.\n \n-;; All vector modes including V1TImode, used in move patterns.\n+;; All vector modes including V?TImode, used in move patterns.\n (define_mode_iterator V16\n   [(V32QI \"TARGET_AVX\") V16QI\n    (V16HI \"TARGET_AVX\") V8HI\n    (V8SI \"TARGET_AVX\") V4SI\n    (V4DI \"TARGET_AVX\") V2DI\n-   V1TI\n+   (V2TI \"TARGET_AVX\") V1TI\n    (V8SF \"TARGET_AVX\") V4SF\n    (V4DF \"TARGET_AVX\") V2DF])\n \n@@ -99,11 +99,13 @@\n (define_mode_iterator VI8_AVX2\n   [(V4DI \"TARGET_AVX2\") V2DI])\n \n+;; ??? We should probably use TImode instead.\n (define_mode_iterator VIMAX_AVX2\n   [(V2TI \"TARGET_AVX2\") V1TI])\n \n+;; ??? This should probably be dropped in favor of VIMAX_AVX2.\n (define_mode_iterator SSESCALARMODE\n-  [(V4DI \"TARGET_AVX2\") TI])\n+  [(V2TI \"TARGET_AVX2\") TI])\n \n (define_mode_iterator VI12_AVX2\n   [(V32QI \"TARGET_AVX2\") V16QI\n@@ -147,7 +149,7 @@\n     (V8HI \"ssse3\") (V16HI \"avx2\")\n     (V4SI \"ssse3\") (V8SI \"avx2\")\n     (V2DI \"ssse3\") (V4DI \"avx2\")\n-    (TI \"ssse3\")])\n+    (TI \"ssse3\") (V2TI \"avx2\")])\n \n (define_mode_attr sse4_1_avx2\n    [(V16QI \"sse4_1\") (V32QI \"avx2\")\n@@ -5649,21 +5651,6 @@\n    (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_insn \"avx2_lshrqv4di3\"\n-  [(set (match_operand:V4DI 0 \"register_operand\" \"=x\")\n-\t(lshiftrt:V4DI\n-\t (match_operand:V4DI 1 \"register_operand\" \"x\")\n-\t (match_operand:SI 2 \"const_0_to_255_mul_8_operand\" \"n\")))]\n-  \"TARGET_AVX2\"\n-{\n-  operands[2] = GEN_INT (INTVAL (operands[2]) / 8);\n-  return \"vpsrldq\\t{%2, %1, %0|%0, %1, %2}\";\n-}\n-  [(set_attr \"type\" \"sseishft\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"mode\" \"OI\")])\n-\n (define_insn \"lshr<mode>3\"\n   [(set (match_operand:VI248_AVX2 0 \"register_operand\" \"=x,x\")\n \t(lshiftrt:VI248_AVX2\n@@ -5683,20 +5670,6 @@\n    (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_insn \"avx2_lshlqv4di3\"\n-  [(set (match_operand:V4DI 0 \"register_operand\" \"=x\")\n-\t(ashift:V4DI (match_operand:V4DI 1 \"register_operand\" \"x\")\n-\t\t     (match_operand:SI 2 \"const_0_to_255_mul_8_operand\" \"n\")))]\n-  \"TARGET_AVX2\"\n-{\n-  operands[2] = GEN_INT (INTVAL (operands[2]) / 8);\n-  return \"vpslldq\\t{%2, %1, %0|%0, %1, %2}\";\n-}\n-  [(set_attr \"type\" \"sseishft\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"mode\" \"OI\")])\n-\n (define_insn \"avx2_lshl<mode>3\"\n   [(set (match_operand:VI248_256 0 \"register_operand\" \"=x\")\n \t(ashift:VI248_256"}]}