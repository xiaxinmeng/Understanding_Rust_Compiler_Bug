{"sha": "551914b748a9bafe51ed7192c3e7b3d4366211bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTUxOTE0Yjc0OGE5YmFmZTUxZWQ3MTkyYzNlN2IzZDQzNjYyMTFiYg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2017-01-18T20:47:12Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2017-01-18T20:47:12Z"}, "message": "jit.dg: fix issue with compilation of test-threads.c\n\nDejaGnu's <dejagnu.h> provides decls of various inline functions,\nof which the jit testsuite uses \"pass\", \"fail\" and \"note\".\n\nThe jit testcase test-threads.c jumps through some hoops to make\nthese functions threadsafe, using macros to rename the implementation\nin dejagnu.h, giving them a \"dejagnu_\" prefix, then reimplementing\nthe names with wrappers that use a mutex.\n\nThe DejaGnu functions gained a \"static\" modifier in\nad36659ffa984a0541cfc2bd27f393e0d7d173a7, which appears to be in\nDejaGnu 1.5.2 onwards.\n\nUnfortunately, jit.dg/test-threads.c has forward decls of\n\"dejagnu_pass\" etc, and these don't have \"static\", leading to conflicts\nwith later versions of DejaGnu for which \"pass\" etc have \"static\".\n\nThis patch fixes things by removing the forward decls of\n\"dejagnu_pass\", moving the usage of them to a point at which dejagnu.h\nhas been included, which ought to work with both earlier and later\nversions of DejaGnu.\n\nFixes compilation of test-threads.c in jit testsuite.\n\ngcc/testsuite/ChangeLog:\n\t* jit.dg/test-threads.c (dejagnu_pass): Remove decl.\n\t(dejagnu_fail): Likewise.\n\t(dejagnu_note): Likewise.\n\t(pass): Provide forward decl, moving true decl to after #include\n\tof harness.h.\n\t(fail): Likewise.\n\t(note): Likewise.\n\nFrom-SVN: r244597", "tree": {"sha": "117c77e302da4a098308991869e1843bde1be954", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/117c77e302da4a098308991869e1843bde1be954"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/551914b748a9bafe51ed7192c3e7b3d4366211bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/551914b748a9bafe51ed7192c3e7b3d4366211bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/551914b748a9bafe51ed7192c3e7b3d4366211bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/551914b748a9bafe51ed7192c3e7b3d4366211bb/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f8a94453adfa8ccf1243c5a388e8bdb12e5decb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8a94453adfa8ccf1243c5a388e8bdb12e5decb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8a94453adfa8ccf1243c5a388e8bdb12e5decb4"}], "stats": {"total": 61, "additions": 39, "deletions": 22}, "files": [{"sha": "a4e20ec072473b293bd4ccc0814d8f9b02685f5b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/551914b748a9bafe51ed7192c3e7b3d4366211bb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/551914b748a9bafe51ed7192c3e7b3d4366211bb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=551914b748a9bafe51ed7192c3e7b3d4366211bb", "patch": "@@ -1,3 +1,13 @@\n+2017-01-18  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* jit.dg/test-threads.c (dejagnu_pass): Remove decl.\n+\t(dejagnu_fail): Likewise.\n+\t(dejagnu_note): Likewise.\n+\t(pass): Provide forward decl, moving true decl to after #include\n+\tof harness.h.\n+\t(fail): Likewise.\n+\t(note): Likewise.\n+\n 2017-01-18  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* gcc.target/powerpc/p9-xxbr-1.c: New test."}, {"sha": "03fea572e5a4d3b17f8ce94700f7f982028350fa", "filename": "gcc/testsuite/jit.dg/test-threads.c", "status": "modified", "additions": 29, "deletions": 22, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/551914b748a9bafe51ed7192c3e7b3d4366211bb/gcc%2Ftestsuite%2Fjit.dg%2Ftest-threads.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/551914b748a9bafe51ed7192c3e7b3d4366211bb/gcc%2Ftestsuite%2Fjit.dg%2Ftest-threads.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fjit.dg%2Ftest-threads.c?ref=551914b748a9bafe51ed7192c3e7b3d4366211bb", "patch": "@@ -20,9 +20,35 @@ static pthread_mutex_t dg_mutex = PTHREAD_MUTEX_INITIALIZER;\n    harness.h injects macros before including <dejagnu.h> so that the\n    pass/fail functions become \"dejagnu_pass\"/\"dejagnu_fail\" etc.  */\n \n-void dejagnu_pass (const char* fmt, ...);\n-void dejagnu_fail (const char* fmt, ...);\n-void dejagnu_note (const char* fmt, ...);\n+/* Forward decls of our implementations of pass/fail/note.  */\n+\n+inline void\n+pass (const char* fmt, ...);\n+\n+inline void\n+fail (const char* fmt, ...);\n+\n+inline void\n+note (const char* fmt, ...);\n+\n+#define MAKE_DEJAGNU_H_THREADSAFE\n+\n+/* We also need to provide our own version of TEST_NAME.  */\n+#define TEST_NAME\n+\n+/* We can now include all of the relevant selftests.  */\n+\n+#include \"all-non-failing-tests.h\"\n+\n+#define TEST_PROVIDES_MAIN\n+#define TEST_ESCHEWS_TEST_JIT\n+\n+/* Now construct a test case from all the other test cases.\n+\n+   We undefine COMBINED_TEST so that we can now include harness.h\n+   \"for real\".  */\n+#undef COMBINED_TEST\n+#include \"harness.h\"\n \n /* We now provide our own implementations of \"pass\"/\"fail\"/\"note\", which\n    call the underlying dejagnu implementations, but with a mutex.  */\n@@ -72,25 +98,6 @@ note (const char* fmt, ...)\n   pthread_mutex_unlock (&dg_mutex);\n }\n \n-#define MAKE_DEJAGNU_H_THREADSAFE\n-\n-/* We also need to provide our own version of TEST_NAME.  */\n-#define TEST_NAME\n-\n-/* We can now include all of the relevant selftests.  */\n-\n-#include \"all-non-failing-tests.h\"\n-\n-#define TEST_PROVIDES_MAIN\n-#define TEST_ESCHEWS_TEST_JIT\n-\n-/* Now construct a test case from all the other test cases.\n-\n-   We undefine COMBINED_TEST so that we can now include harness.h\n-   \"for real\".  */\n-#undef COMBINED_TEST\n-#include \"harness.h\"\n-\n struct thread_data\n {\n   pthread_t m_tid;"}]}