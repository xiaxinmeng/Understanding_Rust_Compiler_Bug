{"sha": "102a163189b46c6d6e389817ce39b169f1fdbc9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAyYTE2MzE4OWI0NmM2ZDZlMzg5ODE3Y2UzOWIxNjlmMWZkYmM5Yw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-12-10T14:20:50Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-12-10T14:20:50Z"}, "message": "re PR ada/48013 (generic instantiation breaks the No_Elaboration_Code restriction)\n\n\tPR ada/48013\n\t* gcc-interface/trans.c (empty_stmt_list_p): New predicate.\n\t(gigi): Invoke it to compute the No_Elaboration_Code property.\n\t(insert_code_for): Do not insert the code if it's empty.\n\nFrom-SVN: r231515", "tree": {"sha": "bf87539ebc4e1d4622018afae90ff4cfcc235a65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf87539ebc4e1d4622018afae90ff4cfcc235a65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/102a163189b46c6d6e389817ce39b169f1fdbc9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/102a163189b46c6d6e389817ce39b169f1fdbc9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/102a163189b46c6d6e389817ce39b169f1fdbc9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/102a163189b46c6d6e389817ce39b169f1fdbc9c/comments", "author": null, "committer": null, "parents": [{"sha": "47e5754e17e9ac3b86b88aa57a58baee6d79fe16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47e5754e17e9ac3b86b88aa57a58baee6d79fe16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47e5754e17e9ac3b86b88aa57a58baee6d79fe16"}], "stats": {"total": 66, "additions": 62, "deletions": 4}, "files": [{"sha": "6e2e7b14a99c20eee0cfc9735e01c594673ec8f7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/102a163189b46c6d6e389817ce39b169f1fdbc9c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/102a163189b46c6d6e389817ce39b169f1fdbc9c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=102a163189b46c6d6e389817ce39b169f1fdbc9c", "patch": "@@ -1,3 +1,10 @@\n+2015-12-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR ada/48013\n+\t* gcc-interface/trans.c (empty_stmt_list_p): New predicate.\n+\t(gigi): Invoke it to compute the No_Elaboration_Code property.\n+\t(insert_code_for): Do not insert the code if it's empty.\n+\n 2015-12-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (Call_to_gnu): Remove guard for NULL_EXPR."}, {"sha": "ae1d287d443b6bbc75ba0ea282b4bb59793d9db9", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 29, "deletions": 4, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/102a163189b46c6d6e389817ce39b169f1fdbc9c/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/102a163189b46c6d6e389817ce39b169f1fdbc9c/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=102a163189b46c6d6e389817ce39b169f1fdbc9c", "patch": "@@ -218,6 +218,7 @@ static enum tree_code gnu_codes[Number_Node_Kinds];\n \n static void init_code_table (void);\n static void Compilation_Unit_to_gnu (Node_Id);\n+static bool empty_stmt_list_p (tree);\n static void record_code_position (Node_Id);\n static void insert_code_for (Node_Id);\n static void add_cleanup (tree, Node_Id);\n@@ -675,15 +676,15 @@ gigi (Node_Id gnat_root,\n   /* Finally see if we have any elaboration procedures to deal with.  */\n   for (info = elab_info_list; info; info = info->next)\n     {\n-      tree gnu_body = DECL_SAVED_TREE (info->elab_proc), gnu_stmts;\n+      tree gnu_body = DECL_SAVED_TREE (info->elab_proc);\n \n       /* We should have a BIND_EXPR but it may not have any statements in it.\n \t If it doesn't have any, we have nothing to do except for setting the\n \t flag on the GNAT node.  Otherwise, process the function as others.  */\n-      gnu_stmts = gnu_body;\n+      tree gnu_stmts = gnu_body;\n       if (TREE_CODE (gnu_stmts) == BIND_EXPR)\n \tgnu_stmts = BIND_EXPR_BODY (gnu_stmts);\n-      if (!gnu_stmts || !STATEMENT_LIST_HEAD (gnu_stmts))\n+      if (!gnu_stmts || empty_stmt_list_p (gnu_stmts))\n \tSet_Has_No_Elaboration_Code (info->gnat_node, 1);\n       else\n \t{\n@@ -7881,6 +7882,25 @@ push_exception_label_stack (vec<tree, va_gc> **gnu_stack, Entity_Id gnat_label)\n   vec_safe_push (*gnu_stack, gnu_label);\n }\n \f\n+/* Return true if the statement list STMT_LIST is empty.  */\n+\n+static bool\n+empty_stmt_list_p (tree stmt_list)\n+{\n+  tree_stmt_iterator tsi;\n+\n+  for (tsi = tsi_start (stmt_list); !tsi_end_p (tsi); tsi_next (&tsi))\n+    {\n+      tree stmt = tsi_stmt (tsi);\n+\n+      /* Anything else than an empty STMT_STMT counts as something.  */\n+      if (TREE_CODE (stmt) != STMT_STMT || STMT_STMT_STMT (stmt))\n+\treturn false;\n+    }\n+\n+  return true;\n+}\n+\n /* Record the current code position in GNAT_NODE.  */\n \n static void\n@@ -7897,7 +7917,12 @@ record_code_position (Node_Id gnat_node)\n static void\n insert_code_for (Node_Id gnat_node)\n {\n-  STMT_STMT_STMT (get_gnu_tree (gnat_node)) = gnat_to_gnu (gnat_node);\n+  tree code = gnat_to_gnu (gnat_node);\n+\n+  /* It's too late to remove the STMT_STMT itself at this point.  */\n+  if (!empty_stmt_list_p (code))\n+    STMT_STMT_STMT (get_gnu_tree (gnat_node)) = code;\n+\n   save_gnu_tree (gnat_node, NULL_TREE, true);\n }\n \f"}, {"sha": "98ecdb5f3c8c74431f7b4dd03b0d524e98b5f894", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/102a163189b46c6d6e389817ce39b169f1fdbc9c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/102a163189b46c6d6e389817ce39b169f1fdbc9c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=102a163189b46c6d6e389817ce39b169f1fdbc9c", "patch": "@@ -1,3 +1,8 @@\n+2015-12-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/specs/elab4.ads: New test.\n+\t* gnat.dg/specs/elab4_proc.ad[sb]: New helper.\n+\n 2015-12-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/array25.adb: New test."}, {"sha": "f402f0104c7777b1d92f87da623fe68ac1ecd183", "filename": "gcc/testsuite/gnat.dg/specs/elab4.ads", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/102a163189b46c6d6e389817ce39b169f1fdbc9c/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Felab4.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/102a163189b46c6d6e389817ce39b169f1fdbc9c/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Felab4.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Felab4.ads?ref=102a163189b46c6d6e389817ce39b169f1fdbc9c", "patch": "@@ -0,0 +1,13 @@\n+-- { dg-do compile }\n+\n+pragma Restrictions(No_Elaboration_Code);\n+\n+with Elab4_Proc;\n+\n+package Elab4 is\n+\n+  procedure My_G is new Elab4_Proc;\n+\n+end Elab4;\n+\n+-- { dg-final { scan-assembler-not \"elabs\" } }"}, {"sha": "06637663c9559b1263ec6d8e1cca1464e60fb9e0", "filename": "gcc/testsuite/gnat.dg/specs/elab4_proc.adb", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/102a163189b46c6d6e389817ce39b169f1fdbc9c/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Felab4_proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/102a163189b46c6d6e389817ce39b169f1fdbc9c/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Felab4_proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Felab4_proc.adb?ref=102a163189b46c6d6e389817ce39b169f1fdbc9c", "patch": "@@ -0,0 +1,4 @@\n+procedure Elab4_Proc is\n+begin\n+   null;\n+end;"}, {"sha": "437ec6aa29e0a9d73809e8f2178bbe6468c30934", "filename": "gcc/testsuite/gnat.dg/specs/elab4_proc.ads", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/102a163189b46c6d6e389817ce39b169f1fdbc9c/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Felab4_proc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/102a163189b46c6d6e389817ce39b169f1fdbc9c/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Felab4_proc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Felab4_proc.ads?ref=102a163189b46c6d6e389817ce39b169f1fdbc9c", "patch": "@@ -0,0 +1,4 @@\n+-- { dg-excess-errors \"no code generated\" }\n+\n+generic\n+procedure Elab4_Proc;"}]}