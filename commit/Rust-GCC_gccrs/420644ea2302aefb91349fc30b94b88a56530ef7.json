{"sha": "420644ea2302aefb91349fc30b94b88a56530ef7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDIwNjQ0ZWEyMzAyYWVmYjkxMzQ5ZmMzMGI5NGI4OGE1NjUzMGVmNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-07-12T00:05:50Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-07-12T00:05:50Z"}, "message": "locale_facets.tcc (collate<>::do_transform( const _CharT*, const _CharT*)): Simplify previous fix for libstdc++/28277, always allocate memory dynamically.\n\n2006-07-11  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/locale_facets.tcc (collate<>::do_transform(\n\tconst _CharT*, const _CharT*)): Simplify previous fix for\n\tlibstdc++/28277, always allocate memory dynamically.\n\nFrom-SVN: r115356", "tree": {"sha": "2ffe945cca2fd5a687ad44cc83b2dd53fb6ddfbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ffe945cca2fd5a687ad44cc83b2dd53fb6ddfbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/420644ea2302aefb91349fc30b94b88a56530ef7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/420644ea2302aefb91349fc30b94b88a56530ef7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/420644ea2302aefb91349fc30b94b88a56530ef7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/420644ea2302aefb91349fc30b94b88a56530ef7/comments", "author": null, "committer": null, "parents": [{"sha": "ad084e9d07b907cfe52961a1d43155d24626c415", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad084e9d07b907cfe52961a1d43155d24626c415", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad084e9d07b907cfe52961a1d43155d24626c415"}], "stats": {"total": 43, "additions": 21, "deletions": 22}, "files": [{"sha": "4d6cfc39d1cdde8b3400c11d6f663cca09c6df32", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/420644ea2302aefb91349fc30b94b88a56530ef7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/420644ea2302aefb91349fc30b94b88a56530ef7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=420644ea2302aefb91349fc30b94b88a56530ef7", "patch": "@@ -1,3 +1,9 @@\n+2006-07-11  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/locale_facets.tcc (collate<>::do_transform(\n+\tconst _CharT*, const _CharT*)): Simplify previous fix for\n+\tlibstdc++/28277, always allocate memory dynamically.\n+\n 2006-07-11  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/28344"}, {"sha": "af2263b193df7aedfa5b9e8265bab6fd99d76adf", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 15, "deletions": 22, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/420644ea2302aefb91349fc30b94b88a56530ef7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/420644ea2302aefb91349fc30b94b88a56530ef7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=420644ea2302aefb91349fc30b94b88a56530ef7", "patch": "@@ -2457,28 +2457,18 @@ _GLIBCXX_END_LDBL_NAMESPACE\n     {\n       string_type __ret;\n \n-      // Use alloca for an _M_transform temporary buffer up to an arbitrary,\n-      // but limited, asize, to avoid abusing the stack.  Otherwise fall back\n-      // to dynamic memory allocation.  This means splitting the computation\n-      // itself in hunks:  a size <= 8k (thus <= 16k asize) appear sufficient\n-      // for optimal performance.\n-      const size_t __size = std::min(size_t(__hi - __lo), size_t(8192));\n-      const size_t __asize = 2 * __size;\n+      // strxfrm assumes zero-terminated strings so we make a copy\n+      const string_type __str(__lo, __hi);\n \n-      size_t __len = __asize;\n+      const _CharT* __p = __str.c_str();\n+      const _CharT* __pend = __str.data() + __str.length();\n \n-      _CharT* __c =\n-\tstatic_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) * __len));\n+      size_t __len = (__hi - __lo) * 2;\n \n-      for (size_t __hunk = __size; __lo < __hi;\n-\t   __lo += __hunk, __hunk = std::min(size_t(__hi - __lo), __hunk))\n-\t{\n-\t  // strxfrm assumes zero-terminated strings so we make a copy\n-\t  const string_type __str(__lo, __lo + __hunk);\n-\n-\t  const _CharT* __p = __str.c_str();\n-\t  const _CharT* __pend = __str.data() + __hunk;\n+      _CharT* __c = new _CharT[__len];\n \n+      try\n+\t{\n \t  // strxfrm stops when it sees a nul character so we break\n \t  // the string into zero-terminated substrings and pass those\n \t  // to strxfrm.\n@@ -2490,9 +2480,8 @@ _GLIBCXX_END_LDBL_NAMESPACE\n \t      // correct size.\n \t      if (__res >= __len)\n \t\t{\n-\t\t  if (__len > __asize)\n-\t\t    delete [] __c;\n \t\t  __len = __res + 1;\n+\t\t  delete [] __c, __c = 0;\n \t\t  __c = new _CharT[__len];\n \t\t  __res = _M_transform(__c, __p, __len);\n \t\t}\n@@ -2506,9 +2495,13 @@ _GLIBCXX_END_LDBL_NAMESPACE\n \t      __ret.push_back(_CharT());\n \t    }\n \t}\n+      catch(...)\n+\t{\n+\t  delete [] __c;\n+\t  __throw_exception_again;\n+\t}\n \n-      if (__len > __asize)\n-\tdelete [] __c;\n+      delete [] __c;\n \n       return __ret;\n     }"}]}