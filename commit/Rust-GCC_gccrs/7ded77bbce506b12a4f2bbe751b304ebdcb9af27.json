{"sha": "7ded77bbce506b12a4f2bbe751b304ebdcb9af27", "node_id": "C_kwDOANBUbNoAKDdkZWQ3N2JiY2U1MDZiMTJhNGYyYmJlNzUxYjMwNGViZGNiOWFmMjc", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2022-01-03T08:26:44Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-09T09:27:35Z"}, "message": "[Ada] Improve error messages to include full package name\n\nThis patch improves error messages in the compiler so that missing\n'with' error messages show the complete package name instead of a\nlimited number of selectors.\n\ngcc/ada/\n\n\t* err_vars.ads: Add new error message names and nodes.\n\t* erroutc.adb (Set_Msg_Insertion_Name,\n\tSet_Msg_Insertion_Name_Literal): Likewise.\n\t* errout.adb (Set_Msg_Insertion_Node): Likewise.\n\t* errout.ads: Likewise.\n\t* exp_disp.adb (Check_Premature_Freezing): Modify setting of\n\tError_Msg_Node_2 to occur directly before Error_Msg call where\n\tapplicable.\n\t* sem_ch8.adb (Error_Missing_With_Of_Known_Unit): Added to\n\thandle the printing of full package names of known units.\n\t(Undefined, Find_Expanded_Name): Replace error printing with\n\tcall to Error_Missing_With_Of_Known_Unit.", "tree": {"sha": "5f500bf67da1d794778b83cab07c28f1f34a2091", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f500bf67da1d794778b83cab07c28f1f34a2091"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ded77bbce506b12a4f2bbe751b304ebdcb9af27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ded77bbce506b12a4f2bbe751b304ebdcb9af27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ded77bbce506b12a4f2bbe751b304ebdcb9af27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ded77bbce506b12a4f2bbe751b304ebdcb9af27/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "706940c2c867bc2609338f27eaea056aedc13d63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/706940c2c867bc2609338f27eaea056aedc13d63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/706940c2c867bc2609338f27eaea056aedc13d63"}], "stats": {"total": 152, "additions": 120, "deletions": 32}, "files": [{"sha": "05329dc6f21195e82d88029117f90a4683901f7e", "filename": "gcc/ada/err_vars.ads", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ded77bbce506b12a4f2bbe751b304ebdcb9af27/gcc%2Fada%2Ferr_vars.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ded77bbce506b12a4f2bbe751b304ebdcb9af27/gcc%2Fada%2Ferr_vars.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferr_vars.ads?ref=7ded77bbce506b12a4f2bbe751b304ebdcb9af27", "patch": "@@ -100,6 +100,11 @@ package Err_Vars is\n    --\n    --  Some of these are initialized below, because they are read before being\n    --  set by clients.\n+   --\n+   --  Would it be desirable to use arrays (with element renamings) here\n+   --  instead of individual variables, at least for the Error_Msg_Name_N and\n+   --  Error_Msg_Node_N ??? This would allow simplifying existing code in some\n+   --  cases (see errout.adb).\n \n    Error_Msg_Col : Column_Number;\n    --  Column for @ insertion character in message\n@@ -116,6 +121,9 @@ package Err_Vars is\n    Error_Msg_Name_1 : Name_Id;\n    Error_Msg_Name_2 : Name_Id := No_Name;\n    Error_Msg_Name_3 : Name_Id := No_Name;\n+   Error_Msg_Name_4 : Name_Id := No_Name;\n+   Error_Msg_Name_5 : Name_Id := No_Name;\n+   Error_Msg_Name_6 : Name_Id := No_Name;\n    --  Name_Id values for % insertion characters in message\n \n    Error_Msg_File_1 : File_Name_Type;\n@@ -129,6 +137,10 @@ package Err_Vars is\n \n    Error_Msg_Node_1 : Node_Id;\n    Error_Msg_Node_2 : Node_Id := Empty;\n+   Error_Msg_Node_3 : Node_Id := Empty;\n+   Error_Msg_Node_4 : Node_Id := Empty;\n+   Error_Msg_Node_5 : Node_Id := Empty;\n+   Error_Msg_Node_6 : Node_Id := Empty;\n    --  Node_Id values for & insertion characters in message\n \n    Error_Msg_Warn : Boolean;"}, {"sha": "f506bccb7ed4a50afc4f44abba1fe2010e7dfd14", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ded77bbce506b12a4f2bbe751b304ebdcb9af27/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ded77bbce506b12a4f2bbe751b304ebdcb9af27/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=7ded77bbce506b12a4f2bbe751b304ebdcb9af27", "patch": "@@ -3578,10 +3578,14 @@ package body Errout is\n          end if;\n       end if;\n \n-      --  The following assignment ensures that a second ampersand insertion\n-      --  character will correspond to the Error_Msg_Node_2 parameter.\n+      --  The following assignment ensures that further ampersand insertion\n+      --  characters will correspond to the Error_Msg_Node_# parameter.\n \n       Error_Msg_Node_1 := Error_Msg_Node_2;\n+      Error_Msg_Node_2 := Error_Msg_Node_3;\n+      Error_Msg_Node_3 := Error_Msg_Node_4;\n+      Error_Msg_Node_4 := Error_Msg_Node_5;\n+      Error_Msg_Node_5 := Error_Msg_Node_6;\n    end Set_Msg_Insertion_Node;\n \n    --------------------------------------"}, {"sha": "ff363448f7b0e7ece87d9ac58b545a80bfa538db", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ded77bbce506b12a4f2bbe751b304ebdcb9af27/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ded77bbce506b12a4f2bbe751b304ebdcb9af27/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=7ded77bbce506b12a4f2bbe751b304ebdcb9af27", "patch": "@@ -468,6 +468,9 @@ package Errout is\n    Error_Msg_Name_1 : Name_Id renames Err_Vars.Error_Msg_Name_1;\n    Error_Msg_Name_2 : Name_Id renames Err_Vars.Error_Msg_Name_2;\n    Error_Msg_Name_3 : Name_Id renames Err_Vars.Error_Msg_Name_3;\n+   Error_Msg_Name_4 : Name_Id renames Err_Vars.Error_Msg_Name_4;\n+   Error_Msg_Name_5 : Name_Id renames Err_Vars.Error_Msg_Name_5;\n+   Error_Msg_Name_6 : Name_Id renames Err_Vars.Error_Msg_Name_6;\n    --  Name_Id values for % insertion characters in message\n \n    Error_Msg_File_1 : File_Name_Type renames Err_Vars.Error_Msg_File_1;\n@@ -481,6 +484,10 @@ package Errout is\n \n    Error_Msg_Node_1 : Node_Id renames Err_Vars.Error_Msg_Node_1;\n    Error_Msg_Node_2 : Node_Id renames Err_Vars.Error_Msg_Node_2;\n+   Error_Msg_Node_3 : Node_Id renames Err_Vars.Error_Msg_Node_3;\n+   Error_Msg_Node_4 : Node_Id renames Err_Vars.Error_Msg_Node_4;\n+   Error_Msg_Node_5 : Node_Id renames Err_Vars.Error_Msg_Node_5;\n+   Error_Msg_Node_6 : Node_Id renames Err_Vars.Error_Msg_Node_6;\n    --  Node_Id values for & insertion characters in message\n \n    Error_Msg_Qual_Level : Nat renames Err_Vars.Error_Msg_Qual_Level;"}, {"sha": "d92ca334acd811a7812f1bd2d6bb04fefe528239", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ded77bbce506b12a4f2bbe751b304ebdcb9af27/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ded77bbce506b12a4f2bbe751b304ebdcb9af27/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=7ded77bbce506b12a4f2bbe751b304ebdcb9af27", "patch": "@@ -1319,12 +1319,15 @@ package body Erroutc is\n          end if;\n       end if;\n \n-      --  The following assignments ensure that the second and third percent\n-      --  insertion characters will correspond to the Error_Msg_Name_2 and\n-      --  Error_Msg_Name_3 as required.\n+      --  The following assignments ensure that other percent insertion\n+      --  characters will correspond to their appropriate Error_Msg_Name_#\n+      --  values as required.\n \n       Error_Msg_Name_1 := Error_Msg_Name_2;\n       Error_Msg_Name_2 := Error_Msg_Name_3;\n+      Error_Msg_Name_3 := Error_Msg_Name_4;\n+      Error_Msg_Name_4 := Error_Msg_Name_5;\n+      Error_Msg_Name_5 := Error_Msg_Name_6;\n    end Set_Msg_Insertion_Name;\n \n    ------------------------------------\n@@ -1348,12 +1351,15 @@ package body Erroutc is\n          Set_Msg_Quote;\n       end if;\n \n-      --  The following assignments ensure that the second and third % or %%\n-      --  insertion characters will correspond to the Error_Msg_Name_2 and\n-      --  Error_Msg_Name_3 values.\n+      --  The following assignments ensure that other percent insertion\n+      --  characters will correspond to their appropriate Error_Msg_Name_#\n+      --  values as required.\n \n       Error_Msg_Name_1 := Error_Msg_Name_2;\n       Error_Msg_Name_2 := Error_Msg_Name_3;\n+      Error_Msg_Name_3 := Error_Msg_Name_4;\n+      Error_Msg_Name_4 := Error_Msg_Name_5;\n+      Error_Msg_Name_5 := Error_Msg_Name_6;\n    end Set_Msg_Insertion_Name_Literal;\n \n    -------------------------------------"}, {"sha": "e9967b4ac991276cd7f51d5f735a1c84b42cf455", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ded77bbce506b12a4f2bbe751b304ebdcb9af27/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ded77bbce506b12a4f2bbe751b304ebdcb9af27/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=7ded77bbce506b12a4f2bbe751b304ebdcb9af27", "patch": "@@ -3817,11 +3817,11 @@ package body Exp_Disp is\n               and then not Is_Actual_For_Formal_Incomplete_Type (Comp)\n             then\n                Error_Msg_Sloc := Sloc (Subp);\n-               Error_Msg_Node_2 := Subp;\n-               Error_Msg_Name_1 := Chars (Tagged_Type);\n                Error_Msg_NE\n                  (\"declaration must appear after completion of type &\",\n                   N, Comp);\n+               Error_Msg_Node_2 := Subp;\n+               Error_Msg_Name_1 := Chars (Tagged_Type);\n                Error_Msg_NE\n                  (\"\\which is a component of untagged type& in the profile \"\n                   & \"of primitive & of type % that is frozen by the \""}, {"sha": "786df0144862e79969db132224531b574b09273a", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 81, "deletions": 22, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ded77bbce506b12a4f2bbe751b304ebdcb9af27/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ded77bbce506b12a4f2bbe751b304ebdcb9af27/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=7ded77bbce506b12a4f2bbe751b304ebdcb9af27", "patch": "@@ -474,6 +474,10 @@ package body Sem_Ch8 is\n    --  scope: the defining entity for U, unless U is a package instance, in\n    --  which case we retrieve the entity of the instance spec.\n \n+   procedure Error_Missing_With_Of_Known_Unit (Pkg : Node_Id);\n+   --  Display an error message denoting a \"with\" is missing for a given known\n+   --  package Pkg with its full path name.\n+\n    procedure Find_Expanded_Name (N : Node_Id);\n    --  The input is a selected component known to be an expanded name. Verify\n    --  legality of selector given the scope denoted by prefix, and change node\n@@ -5334,6 +5338,81 @@ package body Sem_Ch8 is\n       end if;\n    end Entity_Of_Unit;\n \n+   --------------------------------------\n+   -- Error_Missing_With_Of_Known_Unit --\n+   --------------------------------------\n+\n+   procedure Error_Missing_With_Of_Known_Unit (Pkg : Node_Id) is\n+      Selectors : array (1 .. 6) of Node_Id;\n+      --  Contains the chars of the full package name up to maximum number\n+      --  allowed as per Errout.Error_Msg_Name_# variables.\n+\n+      Count : Integer := Selectors'First;\n+      --  Count of selector names forming the full package name\n+\n+      Current_Pkg : Node_Id := Parent (Pkg);\n+\n+   begin\n+      Selectors (Count) := Pkg;\n+\n+      --  Gather all the selectors we can display\n+\n+      while Nkind (Current_Pkg) = N_Selected_Component\n+        and then Is_Known_Unit (Current_Pkg)\n+        and then Count < Selectors'Length\n+      loop\n+         Count             := Count + 1;\n+         Selectors (Count) := Selector_Name (Current_Pkg);\n+         Current_Pkg       := Parent (Current_Pkg);\n+      end loop;\n+\n+      --  Display the error message based on the number of selectors found\n+\n+      case Count is\n+         when 1 =>\n+            Error_Msg_Node_1 := Selectors (1);\n+            Error_Msg_N -- CODEFIX\n+              (\"\\\\missing `WITH &;`\", Pkg);\n+         when 2 =>\n+            Error_Msg_Node_1 := Selectors (1);\n+            Error_Msg_Node_2 := Selectors (2);\n+            Error_Msg_N -- CODEFIX\n+              (\"\\\\missing `WITH &.&;`\", Pkg);\n+         when 3 =>\n+            Error_Msg_Node_1 := Selectors (1);\n+            Error_Msg_Node_2 := Selectors (2);\n+            Error_Msg_Node_3 := Selectors (3);\n+            Error_Msg_N -- CODEFIX\n+              (\"\\\\missing `WITH &.&.&;`\", Pkg);\n+         when 4 =>\n+            Error_Msg_Node_1 := Selectors (1);\n+            Error_Msg_Node_2 := Selectors (2);\n+            Error_Msg_Node_3 := Selectors (3);\n+            Error_Msg_Node_3 := Selectors (4);\n+            Error_Msg_N -- CODEFIX\n+              (\"\\\\missing `WITH &.&.&.&;`\", Pkg);\n+         when 5 =>\n+            Error_Msg_Node_1 := Selectors (1);\n+            Error_Msg_Node_2 := Selectors (2);\n+            Error_Msg_Node_3 := Selectors (3);\n+            Error_Msg_Node_3 := Selectors (4);\n+            Error_Msg_Node_3 := Selectors (5);\n+            Error_Msg_N -- CODEFIX\n+              (\"\\\\missing `WITH &.&.&.&.&;`\", Pkg);\n+         when 6 =>\n+            Error_Msg_Node_1 := Selectors (1);\n+            Error_Msg_Node_2 := Selectors (2);\n+            Error_Msg_Node_3 := Selectors (3);\n+            Error_Msg_Node_4 := Selectors (4);\n+            Error_Msg_Node_5 := Selectors (5);\n+            Error_Msg_Node_6 := Selectors (6);\n+            Error_Msg_N -- CODEFIX\n+              (\"\\\\missing `WITH &.&.&.&.&.&;`\", Pkg);\n+         when others =>\n+            raise Program_Error;\n+      end case;\n+   end Error_Missing_With_Of_Known_Unit;\n+\n    ----------------------\n    -- Find_Direct_Name --\n    ----------------------\n@@ -5877,25 +5956,7 @@ package body Sem_Ch8 is\n               and then N = Prefix (Parent (N))\n               and then Is_Known_Unit (Parent (N))\n             then\n-               declare\n-                  P : Node_Id := Parent (N);\n-               begin\n-                  Error_Msg_Name_1 := Chars (N);\n-                  Error_Msg_Name_2 := Chars (Selector_Name (P));\n-\n-                  if Nkind (Parent (P)) = N_Selected_Component\n-                    and then Is_Known_Unit (Parent (P))\n-                  then\n-                     P := Parent (P);\n-                     Error_Msg_Name_3 := Chars (Selector_Name (P));\n-                     Error_Msg_N -- CODEFIX\n-                       (\"\\\\missing `WITH %.%.%;`\", N);\n-\n-                  else\n-                     Error_Msg_N -- CODEFIX\n-                       (\"\\\\missing `WITH %.%;`\", N);\n-                  end if;\n-               end;\n+               Error_Missing_With_Of_Known_Unit (N);\n             end if;\n \n             --  Now check for possible misspellings\n@@ -6910,9 +6971,7 @@ package body Sem_Ch8 is\n                                            Standard_Standard)\n                then\n                   if not Error_Posted (N) then\n-                     Error_Msg_Node_2 := Selector;\n-                     Error_Msg_N -- CODEFIX\n-                       (\"missing `WITH &.&;`\", Prefix (N));\n+                     Error_Missing_With_Of_Known_Unit (Prefix (N));\n                   end if;\n \n                --  If this is a selection from a dummy package, then suppress"}]}