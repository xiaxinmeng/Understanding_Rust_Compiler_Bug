{"sha": "243c288370fe51ba55c3a9ee61eb2a1a62cb1279", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQzYzI4ODM3MGZlNTFiYTU1YzNhOWVlNjFlYjJhMWE2MmNiMTI3OQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2017-05-18T07:18:24Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2017-05-18T07:18:24Z"}, "message": "re PR sanitizer/80797 (-fsanitize=null doesn't instrument &s->x)\n\n\tPR sanitizer/80797\n\t* ubsan.c (instrument_null): Unwrap ADDR_EXPRs.\n\t(pass_ubsan::execute): Call gimple_assign_single_p instead of\n\tgimple_assign_load_p.\n\n\t* c-c++-common/ubsan/null-12.c: New test.\n\nFrom-SVN: r248179", "tree": {"sha": "61c04324127c01037d585d966283e4575d024204", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61c04324127c01037d585d966283e4575d024204"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/243c288370fe51ba55c3a9ee61eb2a1a62cb1279", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/243c288370fe51ba55c3a9ee61eb2a1a62cb1279", "html_url": "https://github.com/Rust-GCC/gccrs/commit/243c288370fe51ba55c3a9ee61eb2a1a62cb1279", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/243c288370fe51ba55c3a9ee61eb2a1a62cb1279/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a7ab66385376da4f0d9cbe48f191ddb8928fd06d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7ab66385376da4f0d9cbe48f191ddb8928fd06d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7ab66385376da4f0d9cbe48f191ddb8928fd06d"}], "stats": {"total": 59, "additions": 58, "deletions": 1}, "files": [{"sha": "f839cb0600f8ec72a0bcc0bf4fd51ccaf5324500", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/243c288370fe51ba55c3a9ee61eb2a1a62cb1279/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/243c288370fe51ba55c3a9ee61eb2a1a62cb1279/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=243c288370fe51ba55c3a9ee61eb2a1a62cb1279", "patch": "@@ -1,3 +1,10 @@\n+2017-05-18  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/80797\n+\t* ubsan.c (instrument_null): Unwrap ADDR_EXPRs.\n+\t(pass_ubsan::execute): Call gimple_assign_single_p instead of\n+\tgimple_assign_load_p.\n+\n 2017-05-17  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR middle-end/80692"}, {"sha": "d5ea15c9bcefafc69cbbd371bce76a593480d781", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/243c288370fe51ba55c3a9ee61eb2a1a62cb1279/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/243c288370fe51ba55c3a9ee61eb2a1a62cb1279/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=243c288370fe51ba55c3a9ee61eb2a1a62cb1279", "patch": "@@ -1,3 +1,8 @@\n+2017-05-18  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/80797\n+\t* c-c++-common/ubsan/null-12.c: New test.\n+\n 2017-05-17  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR middle-end/80692"}, {"sha": "3478dc1b5ff0ead2454cf26b5d43d8bb6ad6d623", "filename": "gcc/testsuite/c-c++-common/ubsan/null-12.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/243c288370fe51ba55c3a9ee61eb2a1a62cb1279/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/243c288370fe51ba55c3a9ee61eb2a1a62cb1279/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-12.c?ref=243c288370fe51ba55c3a9ee61eb2a1a62cb1279", "patch": "@@ -0,0 +1,42 @@\n+/* PR sanitizer/80797 */\n+/* { dg-do run } */\n+/* { dg-options \"-fsanitize=undefined\" } */\n+\n+struct S\n+{\n+  int i;\n+};\n+\n+struct R\n+{\n+  struct T {\n+    int i;\n+  } *t;\n+} r;\n+\n+int\n+main ()\n+{\n+  struct S *s = 0;\n+  struct S *s2[1] = { };\n+\n+  int *v1 = &s->i;\n+  int *v2 = &(*s).i;\n+  int *v3 = &s2[0]->i;\n+  int *v4 = &s->i + 1;\n+  int *v5 = &r.t->i;\n+\n+  asm (\"\" : : \"r\" (&v1) : \"memory\");\n+  asm (\"\" : : \"r\" (&v2) : \"memory\");\n+  asm (\"\" : : \"r\" (&v3) : \"memory\");\n+  asm (\"\" : : \"r\" (&v4) : \"memory\");\n+  asm (\"\" : : \"r\" (&v5) : \"memory\");\n+\n+  return 0;\n+}\n+\n+/* { dg-output \"member access within null pointer of type 'struct S'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*member access within null pointer of type 'struct S'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*member access within null pointer of type 'struct S'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*member access within null pointer of type 'struct S'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*member access within null pointer of type 'struct T'\" } */"}, {"sha": "a4808d2d60cfab419741e8de81cd9e21a5e0d4b0", "filename": "gcc/ubsan.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/243c288370fe51ba55c3a9ee61eb2a1a62cb1279/gcc%2Fubsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/243c288370fe51ba55c3a9ee61eb2a1a62cb1279/gcc%2Fubsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fubsan.c?ref=243c288370fe51ba55c3a9ee61eb2a1a62cb1279", "patch": "@@ -1208,6 +1208,9 @@ instrument_null (gimple_stmt_iterator gsi, bool is_lhs)\n {\n   gimple *stmt = gsi_stmt (gsi);\n   tree t = is_lhs ? gimple_get_lhs (stmt) : gimple_assign_rhs1 (stmt);\n+  /* Handle also e.g. &s->i.  */\n+  if (TREE_CODE (t) == ADDR_EXPR)\n+    t = TREE_OPERAND (t, 0);\n   tree base = get_base_address (t);\n   const enum tree_code code = TREE_CODE (base);\n   if (code == MEM_REF\n@@ -1998,7 +2001,7 @@ pass_ubsan::execute (function *fun)\n \t    {\n \t      if (gimple_store_p (stmt))\n \t\tinstrument_null (gsi, true);\n-\t      if (gimple_assign_load_p (stmt))\n+\t      if (gimple_assign_single_p (stmt))\n \t\tinstrument_null (gsi, false);\n \t    }\n "}]}