{"sha": "768f06694f205346b11fe1633d7253fbbd6d4fdb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY4ZjA2Njk0ZjIwNTM0NmIxMWZlMTYzM2Q3MjUzZmJiZDZkNGZkYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2000-11-08T13:13:10Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2000-11-08T13:13:10Z"}, "message": "function.c (expand_function_start): Cast GET_MODE_SIZE to HOST_WIDE_INT before negating it.\n\n\t* function.c (expand_function_start): Cast GET_MODE_SIZE to\n\tHOST_WIDE_INT before negating it.\n\nFrom-SVN: r37317", "tree": {"sha": "ce7102a628dc7b14f9ef2e3b749c06271e82da0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce7102a628dc7b14f9ef2e3b749c06271e82da0f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/768f06694f205346b11fe1633d7253fbbd6d4fdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/768f06694f205346b11fe1633d7253fbbd6d4fdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/768f06694f205346b11fe1633d7253fbbd6d4fdb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/768f06694f205346b11fe1633d7253fbbd6d4fdb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "df6018fd2855dde2f06d355760e61d3eda587074", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df6018fd2855dde2f06d355760e61d3eda587074", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df6018fd2855dde2f06d355760e61d3eda587074"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "87c1086641a7f65d732a5663fe64a0b74cf222e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768f06694f205346b11fe1633d7253fbbd6d4fdb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768f06694f205346b11fe1633d7253fbbd6d4fdb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=768f06694f205346b11fe1633d7253fbbd6d4fdb", "patch": "@@ -1,3 +1,8 @@\n+2000-11-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* function.c (expand_function_start): Cast GET_MODE_SIZE to\n+\tHOST_WIDE_INT before negating it.\n+\n 2000-11-08  Jakub Jelinek  <jakub@redhat.com>\n \n \t* expr.c (expand_expr) [ADDR_EXPR]: Handle when op0 is RETURN_DECL"}, {"sha": "98184eff13b2bcbf69252a3ca417a49f99520d04", "filename": "gcc/function.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768f06694f205346b11fe1633d7253fbbd6d4fdb/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768f06694f205346b11fe1633d7253fbbd6d4fdb/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=768f06694f205346b11fe1633d7253fbbd6d4fdb", "patch": "@@ -6315,7 +6315,8 @@ expand_function_start (subr, parms_have_cleanups)\n \t  /* Chain thru stack frames, assuming pointer to next lexical frame\n \t     is found at the place we always store it.  */\n #ifdef FRAME_GROWS_DOWNWARD\n-\t  last_ptr = plus_constant (last_ptr, -GET_MODE_SIZE (Pmode));\n+\t  last_ptr = plus_constant (last_ptr,\n+\t\t\t\t    -(HOST_WIDE_INT) GET_MODE_SIZE (Pmode));\n #endif\n \t  last_ptr = gen_rtx_MEM (Pmode, memory_address (Pmode, last_ptr));\n \t  MEM_ALIAS_SET (last_ptr) = get_frame_alias_set ();"}]}