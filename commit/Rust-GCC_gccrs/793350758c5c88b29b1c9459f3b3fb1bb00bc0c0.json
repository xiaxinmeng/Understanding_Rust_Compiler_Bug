{"sha": "793350758c5c88b29b1c9459f3b3fb1bb00bc0c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzkzMzUwNzU4YzVjODhiMjliMWM5NDU5ZjNiM2ZiMWJiMDBiYzBjMA==", "commit": {"author": {"name": "Jan Beulich", "email": "jbeulich@suse.com", "date": "2016-07-04T07:41:32Z"}, "committer": {"name": "Jan Beulich", "email": "jbeulich@gcc.gnu.org", "date": "2016-07-04T07:41:32Z"}, "message": "fix interaction of -S and -x {c,c++}-header\n\nIrrespective of the use of -o this so far resulted in \"error: output\nfilename specified twice\", since cc1_options already produces a -o\noption when -S was specified.\n\ngcc/\n2016-07-04  Jan Beulich  <jbeulich@suse.com>\n\n\t* gcc.c (default_compilers[\"@c-header\"]): Conditionalize \"-o\".\n\ngcc/cp/\n2016-07-04  Jan Beulich  <jbeulich@suse.com>\n\n\t* lang-specs.h (\"@c++-header\"): Conditionalize \"-o\".\n\ngcc/testsuite/\n2016-07-04  Jan Beulich  <jbeulich@suse.com>\n\n\t* g++.dg/header.c: New.\n\t* gcc.dg/header.c: New.\n\nFrom-SVN: r237955", "tree": {"sha": "f8b49d82d85f4ae0e59c56067b88910af9eb7702", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8b49d82d85f4ae0e59c56067b88910af9eb7702"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/793350758c5c88b29b1c9459f3b3fb1bb00bc0c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/793350758c5c88b29b1c9459f3b3fb1bb00bc0c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/793350758c5c88b29b1c9459f3b3fb1bb00bc0c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/793350758c5c88b29b1c9459f3b3fb1bb00bc0c0/comments", "author": {"login": "jbeulich", "id": 5610135, "node_id": "MDQ6VXNlcjU2MTAxMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbeulich", "html_url": "https://github.com/jbeulich", "followers_url": "https://api.github.com/users/jbeulich/followers", "following_url": "https://api.github.com/users/jbeulich/following{/other_user}", "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions", "organizations_url": "https://api.github.com/users/jbeulich/orgs", "repos_url": "https://api.github.com/users/jbeulich/repos", "events_url": "https://api.github.com/users/jbeulich/events{/privacy}", "received_events_url": "https://api.github.com/users/jbeulich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b32086d3f0e778eacedca4bdfb2d6a1b8ea20a34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b32086d3f0e778eacedca4bdfb2d6a1b8ea20a34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b32086d3f0e778eacedca4bdfb2d6a1b8ea20a34"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "7ad413572b474f8c13790b25b56c706c50529d71", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/793350758c5c88b29b1c9459f3b3fb1bb00bc0c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/793350758c5c88b29b1c9459f3b3fb1bb00bc0c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=793350758c5c88b29b1c9459f3b3fb1bb00bc0c0", "patch": "@@ -1,3 +1,7 @@\n+2016-07-04  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* gcc.c (default_compilers[\"@c-header\"]): Conditionalize \"-o\".\n+\n 2016-07-01  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/71720"}, {"sha": "7da1c55e93efe8414bb3eb4f12d927f17934a4bf", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/793350758c5c88b29b1c9459f3b3fb1bb00bc0c0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/793350758c5c88b29b1c9459f3b3fb1bb00bc0c0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=793350758c5c88b29b1c9459f3b3fb1bb00bc0c0", "patch": "@@ -1,3 +1,7 @@\n+2016-07-04  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* lang-specs.h (\"@c++-header\"): Conditionalize \"-o\".\n+\n 2016-06-29  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* parser.c (cp_parser_pragma) <PRAGMA_OMP_CANCELLATION_POINT>:"}, {"sha": "9217950a0da44d97b53c5785719baa94d6c26dfd", "filename": "gcc/cp/lang-specs.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/793350758c5c88b29b1c9459f3b3fb1bb00bc0c0/gcc%2Fcp%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/793350758c5c88b29b1c9459f3b3fb1bb00bc0c0/gcc%2Fcp%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flang-specs.h?ref=793350758c5c88b29b1c9459f3b3fb1bb00bc0c0", "patch": "@@ -47,7 +47,7 @@ along with GCC; see the file COPYING3.  If not see\n       cc1plus %{save-temps*|no-integrated-cpp:-fpreprocessed %{save-temps*:%b.ii} %{!save-temps*:%g.ii}}\\\n \t      %{!save-temps*:%{!no-integrated-cpp:%(cpp_unique_options)}}\\\n \t%(cc1_options) %2\\\n-\t%{!fsyntax-only:-o %g.s \\\n+\t%{!fsyntax-only:%{!S:-o %g.s} \\\n \t    %{!fdump-ada-spec*:%{!o*:--output-pch=%i.gch}\\\n \t\t\t       %W{o*:--output-pch=%*}}%V}}}}\",\n      CPLUSPLUS_CPP_SPEC, 0, 0},"}, {"sha": "7460f6af148969734c6cffeef870388355ef76cf", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/793350758c5c88b29b1c9459f3b3fb1bb00bc0c0/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/793350758c5c88b29b1c9459f3b3fb1bb00bc0c0/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=793350758c5c88b29b1c9459f3b3fb1bb00bc0c0", "patch": "@@ -1330,7 +1330,7 @@ static const struct compiler default_compilers[] =\n \t\t\t\t\t       %W{o*:--output-pch=%*}}%V}}\\\n \t  %{!save-temps*:%{!traditional-cpp:%{!no-integrated-cpp:\\\n \t\tcc1 %(cpp_unique_options) %(cc1_options)\\\n-\t\t    %{!fsyntax-only:-o %g.s \\\n+\t\t    %{!fsyntax-only:%{!S:-o %g.s} \\\n \t\t        %{!fdump-ada-spec*:%{!o*:--output-pch=%i.gch}\\\n \t\t\t\t\t   %W{o*:--output-pch=%*}}%V}}}}}}}\", 0, 0, 0},\n   {\".i\", \"@cpp-output\", 0, 0, 0},"}, {"sha": "86c1b5d373b2d93d3a24a8b303c7ea5521d8d2ad", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/793350758c5c88b29b1c9459f3b3fb1bb00bc0c0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/793350758c5c88b29b1c9459f3b3fb1bb00bc0c0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=793350758c5c88b29b1c9459f3b3fb1bb00bc0c0", "patch": "@@ -1,3 +1,8 @@\n+2016-07-04  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* g++.dg/header.c: New.\n+\t* gcc.dg/header.c: New.\n+\n 2016-07-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/71719"}, {"sha": "41a6dcbef3fd23dc43541baeb5da5f7c6c233799", "filename": "gcc/testsuite/g++.dg/header.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/793350758c5c88b29b1c9459f3b3fb1bb00bc0c0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fheader.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/793350758c5c88b29b1c9459f3b3fb1bb00bc0c0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fheader.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fheader.C?ref=793350758c5c88b29b1c9459f3b3fb1bb00bc0c0", "patch": "@@ -0,0 +1,9 @@\n+/* This really should use \"dg-do compile\" without the -S in dg-options,\n+   but the extra options get put after the input file in that case, and\n+   hence the test would fail. */\n+/* { dg-do assemble } */\n+/* { dg-options \"-S -x c++-header\" } */\n+\n+struct s {\n+\tunsigned field;\n+};"}, {"sha": "3241a9634420164d5efef233dd073cfd42452503", "filename": "gcc/testsuite/gcc.dg/header.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/793350758c5c88b29b1c9459f3b3fb1bb00bc0c0/gcc%2Ftestsuite%2Fgcc.dg%2Fheader.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/793350758c5c88b29b1c9459f3b3fb1bb00bc0c0/gcc%2Ftestsuite%2Fgcc.dg%2Fheader.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fheader.c?ref=793350758c5c88b29b1c9459f3b3fb1bb00bc0c0", "patch": "@@ -0,0 +1,9 @@\n+/* This really should use \"dg-do compile\" without the -S in dg-options,\n+   but the extra options get put after the input file in that case, and\n+   hence the test would fail. */\n+/* { dg-do assemble } */\n+/* { dg-options \"-S -x c-header\" } */\n+\n+struct s {\n+\tunsigned field;\n+};"}]}