{"sha": "9b305d55bf262d8896f15f6766bbf77c7f4aeb12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIzMDVkNTViZjI2MmQ4ODk2ZjE1ZjY3NjZiYmY3N2M3ZjRhZWIxMg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@codesourcery.com", "date": "2004-08-09T17:43:17Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-08-09T17:43:17Z"}, "message": "explow.c (memory_address): Use memory_address_p.\n\n\t* explow.c (memory_address): Use memory_address_p.\n\t* recog.c (general_operand): Likewise.\n\t* regrename.c: No need to define REG_OK_STRICT.\n\nFrom-SVN: r85720", "tree": {"sha": "6fef4f7fa04422bce536a2708b9782fb548abd0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fef4f7fa04422bce536a2708b9782fb548abd0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b305d55bf262d8896f15f6766bbf77c7f4aeb12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b305d55bf262d8896f15f6766bbf77c7f4aeb12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b305d55bf262d8896f15f6766bbf77c7f4aeb12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b305d55bf262d8896f15f6766bbf77c7f4aeb12/comments", "author": null, "committer": null, "parents": [{"sha": "702d4b738815d6f10c0a46d2f25b4ea58b14ed55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/702d4b738815d6f10c0a46d2f25b4ea58b14ed55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/702d4b738815d6f10c0a46d2f25b4ea58b14ed55"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "924532b88898f933a2bc6d37f7d5e2249cd858bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b305d55bf262d8896f15f6766bbf77c7f4aeb12/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b305d55bf262d8896f15f6766bbf77c7f4aeb12/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9b305d55bf262d8896f15f6766bbf77c7f4aeb12", "patch": "@@ -1,3 +1,9 @@\n+2004-08-09  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* explow.c (memory_address): Use memory_address_p.\n+\t* recog.c (general_operand): Likewise.\n+\t* regrename.c: No need to define REG_OK_STRICT.\n+\n 2004-08-09  Steven Bosscher  <stevenb@suse.de>\n \n \t* timevar.def (TV_CPROP1, TV_CPROP2, TV_PRE, TV_HOIST, TV_LSM):\n@@ -172,7 +178,7 @@\n \t(CC1PLUS_SPEC): Define it to be the same as CC1_SPEC.\n \n 2004-08-06  Roman Zippel  <zippel@linux-m68k.org>\n- \n+\n \t* config/m68k/m68k.c (post_inc_operand,pre_dec_operand): New.\n \t* config/m68k/m68k.h (PREDICATE_CODES): add post_inc_operand,\n \tpre_dec_operand.\n@@ -215,7 +221,7 @@\n \t(dllimport): Likewise.\n \t* doc/tm.texi (TARGET_DLLIMPORT_DECL_ATTRIBUTES): Mention\n \thandle_dll_attribute.\n-\t\n+\n 2004-08-05  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n \n \t* tree-ssa-loop-manip.c: New file."}, {"sha": "f58873a35272879ae3cc914bb92a975523f3cd5a", "filename": "gcc/explow.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b305d55bf262d8896f15f6766bbf77c7f4aeb12/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b305d55bf262d8896f15f6766bbf77c7f4aeb12/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=9b305d55bf262d8896f15f6766bbf77c7f4aeb12", "patch": "@@ -456,7 +456,8 @@ memory_address (enum machine_mode mode, rtx x)\n \tx = break_out_memory_refs (x);\n \n       /* At this point, any valid address is accepted.  */\n-      GO_IF_LEGITIMATE_ADDRESS (mode, x, win);\n+      if (memory_address_p (mode, x))\n+\tgoto win;\n \n       /* If it was valid before but breaking out memory refs invalidated it,\n \t use it the old way.  */"}, {"sha": "5bd8458baf69a6194a664c6d1654270dc4bcb6ad", "filename": "gcc/recog.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b305d55bf262d8896f15f6766bbf77c7f4aeb12/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b305d55bf262d8896f15f6766bbf77c7f4aeb12/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=9b305d55bf262d8896f15f6766bbf77c7f4aeb12", "patch": "@@ -975,14 +975,11 @@ general_operand (rtx op, enum machine_mode mode)\n \treturn 0;\n \n       /* Use the mem's mode, since it will be reloaded thus.  */\n-      mode = GET_MODE (op);\n-      GO_IF_LEGITIMATE_ADDRESS (mode, y, win);\n+      if (memory_address_p (GET_MODE (op), y))\n+\treturn 1;\n     }\n \n   return 0;\n-\n- win:\n-  return 1;\n }\n \f\n /* Return 1 if OP is a valid memory address for a memory reference"}, {"sha": "80cbcaafd37e8b8f2a2b58ed227e2f6c4120b46b", "filename": "gcc/regrename.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b305d55bf262d8896f15f6766bbf77c7f4aeb12/gcc%2Fregrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b305d55bf262d8896f15f6766bbf77c7f4aeb12/gcc%2Fregrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.c?ref=9b305d55bf262d8896f15f6766bbf77c7f4aeb12", "patch": "@@ -18,8 +18,6 @@\n    Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n    02111-1307, USA.  */\n \n-#define REG_OK_STRICT\n-\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\""}]}