{"sha": "890d52e81ba256b45e856b423a90ade2e6f623e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODkwZDUyZTgxYmEyNTZiNDVlODU2YjQyM2E5MGFkZTJlNmY2MjNlNg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "2002-05-09T17:58:09Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2002-05-09T17:58:09Z"}, "message": "i386.md (type attribute): Add \"rotate\" for rotate insns.\n\n        * i386.md (type attribute): Add \"rotate\" for rotate insns.\n        (rotate insns): Set type to \"rotate\".\n        (various attributes and function units): Treat rotate like shift.\n        (pent_pair attribute): Only rotates by one bit position are\n        pairable.\n        (sbb insns): Explicitly set pent_pair attribute on a couple\n        that were missing it.\n\nFrom-SVN: r53338", "tree": {"sha": "846c5550a219cf3a73ec66f6bfe479e9b21caa8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/846c5550a219cf3a73ec66f6bfe479e9b21caa8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/890d52e81ba256b45e856b423a90ade2e6f623e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/890d52e81ba256b45e856b423a90ade2e6f623e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/890d52e81ba256b45e856b423a90ade2e6f623e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/890d52e81ba256b45e856b423a90ade2e6f623e6/comments", "author": null, "committer": null, "parents": [{"sha": "f78ec36a7132213edd00f50b4686ea23de274c57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f78ec36a7132213edd00f50b4686ea23de274c57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f78ec36a7132213edd00f50b4686ea23de274c57"}], "stats": {"total": 69, "additions": 42, "deletions": 27}, "files": [{"sha": "d718791204622b9718697badbcaebc062c70630a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890d52e81ba256b45e856b423a90ade2e6f623e6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890d52e81ba256b45e856b423a90ade2e6f623e6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=890d52e81ba256b45e856b423a90ade2e6f623e6", "patch": "@@ -1,3 +1,13 @@\n+Thu May  9 11:50:09 2002  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* i386.md (type attribute): Add \"rotate\" for rotate insns.\n+\t(rotate insns): Set type to \"rotate\".\n+\t(various attributes and function units): Treat rotate like shift.\n+\t(pent_pair attribute): Only rotates by one bit position are\n+\tpairable.\n+\t(sbb insns): Explicitly set pent_pair attribute on a couple\n+\tthat were missing it.\n+\n Thu May  9 18:29:24 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* sh.c (sh_builtin_saveregs): If starting with an odd fp register,"}, {"sha": "e99bd0ad6c2214b467c2e5f312bf4b19c28653c3", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 32, "deletions": 27, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890d52e81ba256b45e856b423a90ade2e6f623e6/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890d52e81ba256b45e856b423a90ade2e6f623e6/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=890d52e81ba256b45e856b423a90ade2e6f623e6", "patch": "@@ -123,7 +123,7 @@\n ;; A basic instruction type.  Refinements due to arguments to be\n ;; provided in other attributes.\n (define_attr \"type\"\n-  \"other,multi,alu1,negnot,alu,icmp,test,imov,imovx,lea,incdec,ishift,imul,idiv,ibr,setcc,push,pop,call,callv,icmov,fmov,fop,fsgn,fmul,fdiv,fpspc,fcmov,fcmp,fxch,str,cld,sse,sseadd,ssemul,ssediv,ssemov,ssecmp,ssecvt,sselog,sseiadd,sseishft,sseimul,mmx,mmxmov,mmxadd,mmxshft,mmxcmp,mmxcvt,mmxmul,fistp\"\n+  \"other,multi,alu1,negnot,alu,icmp,test,imov,imovx,lea,incdec,ishift,rotate,imul,idiv,ibr,setcc,push,pop,call,callv,icmov,fmov,fop,fsgn,fmul,fdiv,fpspc,fcmov,fcmp,fxch,str,cld,sse,sseadd,ssemul,ssediv,ssemov,ssecmp,ssecvt,sselog,sseiadd,sseishft,sseimul,mmx,mmxmov,mmxadd,mmxshft,mmxcmp,mmxcvt,mmxmul,fistp\"\n   (const_string \"other\"))\n \n ;; Main data type used by the insn\n@@ -146,7 +146,7 @@\n \t   (const_int 0)\n \t (eq_attr \"unit\" \"i387,sse,mmx\")\n \t   (const_int 0)\n-\t (eq_attr \"type\" \"alu1,negnot,alu,icmp,imovx,ishift,imul,push,pop\")\n+\t (eq_attr \"type\" \"alu1,negnot,alu,icmp,imovx,ishift,rotate,imul,push,pop\")\n \t   (symbol_ref \"ix86_attr_length_immediate_default(insn,1)\")\n \t (eq_attr \"type\" \"imov,test\")\n \t   (symbol_ref \"ix86_attr_length_immediate_default(insn,0)\")\n@@ -305,7 +305,7 @@\n \t      (and (match_operand 0 \"memory_displacement_operand\" \"\")\n \t\t   (match_operand 1 \"immediate_operand\" \"\")))\n \t   (const_string \"true\")\n-\t (and (eq_attr \"type\" \"alu,ishift,imul,idiv\")\n+\t (and (eq_attr \"type\" \"alu,ishift,rotate,imul,idiv\")\n \t      (and (match_operand 0 \"memory_displacement_operand\" \"\")\n \t\t   (match_operand 2 \"immediate_operand\" \"\")))\n \t   (const_string \"true\")\n@@ -356,6 +356,9 @@\n \t (and (eq_attr \"type\" \"ishift\")\n \t      (match_operand 2 \"const_int_operand\" \"\"))\n \t   (const_string \"pu\")\n+\t (and (eq_attr \"type\" \"rotate\")\n+\t      (match_operand 2 \"const_int_1_operand\" \"\"))\n+\t   (const_string \"pu\")\n \t (and (eq_attr \"type\" \"call\")\n \t      (match_operand 0 \"constant_call_address_operand\" \"\"))\n \t   (const_string \"pv\")\n@@ -651,7 +654,7 @@\n \n (define_function_unit \"ppro_p0\" 1 0\n   (and (eq_attr \"cpu\" \"pentiumpro\")\n-       (eq_attr \"type\" \"ishift,lea,ibr,cld\"))\n+       (eq_attr \"type\" \"ishift,rotate,lea,ibr,cld\"))\n   1 1)\n \n (define_function_unit \"ppro_p0\" 1 0\n@@ -766,7 +769,7 @@\n ;; Shift instructions and certain arithmetic are issued only to X pipe.\n (define_function_unit \"k6_alux\" 1 0\n   (and (eq_attr \"cpu\" \"k6\")\n-       (eq_attr \"type\" \"ishift,alu1,negnot,cld\"))\n+       (eq_attr \"type\" \"ishift,rotate,alu1,negnot,cld\"))\n   1 1)\n \n ;; The QI mode arithmetic is issued to X pipe only.\n@@ -778,7 +781,7 @@\n \n (define_function_unit \"k6_alu\" 2 0\n   (and (eq_attr \"cpu\" \"k6\")\n-       (eq_attr \"type\" \"ishift,alu1,negnot,alu,icmp,test,imovx,incdec,setcc,lea\"))\n+       (eq_attr \"type\" \"ishift,rotate,alu1,negnot,alu,icmp,test,imovx,incdec,setcc,lea\"))\n   1 1)\n \n (define_function_unit \"k6_alu\" 2 0\n@@ -907,7 +910,7 @@\n \n (define_function_unit \"athlon_ieu\" 3 0\n   (and (eq_attr \"cpu\" \"athlon\")\n-       (eq_attr \"type\" \"alu1,negnot,alu,icmp,test,imov,imovx,lea,incdec,ishift,ibr,call,callv,icmov,cld,pop,setcc,push,pop\"))\n+       (eq_attr \"type\" \"alu1,negnot,alu,icmp,test,imov,imovx,lea,incdec,ishift,rotate,ibr,call,callv,icmov,cld,pop,setcc,push,pop\"))\n   1 1)\n \n (define_function_unit \"athlon_ieu\" 3 0\n@@ -12237,7 +12240,7 @@\n   \"TARGET_64BIT && ix86_binary_operator_ok (ROTATE, DImode, operands)\n    && (TARGET_PENTIUM || TARGET_PENTIUMPRO)\"\n   \"rol{q}\\t%0\"\n-  [(set_attr \"type\" \"ishift\")\n+  [(set_attr \"type\" \"rotate\")\n    (set (attr \"length\") \n      (if_then_else (match_operand:DI 0 \"register_operand\" \"\") \n \t(const_string \"2\")\n@@ -12252,7 +12255,7 @@\n   \"@\n    rol{q}\\t{%2, %0|%0, %2}\n    rol{q}\\t{%b2, %0|%0, %b2}\"\n-  [(set_attr \"type\" \"ishift\")\n+  [(set_attr \"type\" \"rotate\")\n    (set_attr \"mode\" \"DI\")])\n \n (define_expand \"rotlsi3\"\n@@ -12271,7 +12274,7 @@\n   \"ix86_binary_operator_ok (ROTATE, SImode, operands)\n    && (TARGET_PENTIUM || TARGET_PENTIUMPRO)\"\n   \"rol{l}\\t%0\"\n-  [(set_attr \"type\" \"ishift\")\n+  [(set_attr \"type\" \"rotate\")\n    (set (attr \"length\") \n      (if_then_else (match_operand:SI 0 \"register_operand\" \"\") \n \t(const_string \"2\")\n@@ -12286,7 +12289,7 @@\n   \"TARGET_64BIT && ix86_binary_operator_ok (ROTATE, SImode, operands)\n    && (TARGET_PENTIUM || TARGET_PENTIUMPRO)\"\n   \"rol{l}\\t%k0\"\n-  [(set_attr \"type\" \"ishift\")\n+  [(set_attr \"type\" \"rotate\")\n    (set_attr \"length\" \"2\")])\n \n (define_insn \"*rotlsi3_1\"\n@@ -12298,7 +12301,7 @@\n   \"@\n    rol{l}\\t{%2, %0|%0, %2}\n    rol{l}\\t{%b2, %0|%0, %b2}\"\n-  [(set_attr \"type\" \"ishift\")\n+  [(set_attr \"type\" \"rotate\")\n    (set_attr \"mode\" \"SI\")])\n \n (define_insn \"*rotlsi3_1_zext\"\n@@ -12311,7 +12314,7 @@\n   \"@\n    rol{l}\\t{%2, %k0|%k0, %2}\n    rol{l}\\t{%b2, %k0|%k0, %b2}\"\n-  [(set_attr \"type\" \"ishift\")\n+  [(set_attr \"type\" \"rotate\")\n    (set_attr \"mode\" \"SI\")])\n \n (define_expand \"rotlhi3\"\n@@ -12330,7 +12333,7 @@\n   \"ix86_binary_operator_ok (ROTATE, HImode, operands)\n    && (TARGET_PENTIUM || TARGET_PENTIUMPRO)\"\n   \"rol{w}\\t%0\"\n-  [(set_attr \"type\" \"ishift\")\n+  [(set_attr \"type\" \"rotate\")\n    (set (attr \"length\") \n      (if_then_else (match_operand 0 \"register_operand\" \"\") \n \t(const_string \"2\")\n@@ -12345,7 +12348,7 @@\n   \"@\n    rol{w}\\t{%2, %0|%0, %2}\n    rol{w}\\t{%b2, %0|%0, %b2}\"\n-  [(set_attr \"type\" \"ishift\")\n+  [(set_attr \"type\" \"rotate\")\n    (set_attr \"mode\" \"HI\")])\n \n (define_expand \"rotlqi3\"\n@@ -12364,7 +12367,7 @@\n   \"ix86_binary_operator_ok (ROTATE, QImode, operands)\n    && (TARGET_PENTIUM || TARGET_PENTIUMPRO)\"\n   \"rol{b}\\t%0\"\n-  [(set_attr \"type\" \"ishift\")\n+  [(set_attr \"type\" \"rotate\")\n    (set (attr \"length\") \n      (if_then_else (match_operand 0 \"register_operand\" \"\") \n \t(const_string \"2\")\n@@ -12379,7 +12382,7 @@\n   \"@\n    rol{b}\\t{%2, %0|%0, %2}\n    rol{b}\\t{%b2, %0|%0, %b2}\"\n-  [(set_attr \"type\" \"ishift\")\n+  [(set_attr \"type\" \"rotate\")\n    (set_attr \"mode\" \"QI\")])\n \n (define_expand \"rotrdi3\"\n@@ -12398,7 +12401,7 @@\n   \"TARGET_64BIT && ix86_binary_operator_ok (ROTATERT, DImode, operands)\n    && (TARGET_PENTIUM || TARGET_PENTIUMPRO)\"\n   \"ror{q}\\t%0\"\n-  [(set_attr \"type\" \"ishift\")\n+  [(set_attr \"type\" \"rotate\")\n    (set (attr \"length\") \n      (if_then_else (match_operand:DI 0 \"register_operand\" \"\") \n \t(const_string \"2\")\n@@ -12413,7 +12416,7 @@\n   \"@\n    ror{q}\\t{%2, %0|%0, %2}\n    ror{q}\\t{%b2, %0|%0, %b2}\"\n-  [(set_attr \"type\" \"ishift\")\n+  [(set_attr \"type\" \"rotate\")\n    (set_attr \"mode\" \"DI\")])\n \n (define_expand \"rotrsi3\"\n@@ -12432,7 +12435,7 @@\n   \"ix86_binary_operator_ok (ROTATERT, SImode, operands)\n    && (TARGET_PENTIUM || TARGET_PENTIUMPRO)\"\n   \"ror{l}\\t%0\"\n-  [(set_attr \"type\" \"ishift\")\n+  [(set_attr \"type\" \"rotate\")\n    (set (attr \"length\") \n      (if_then_else (match_operand:SI 0 \"register_operand\" \"\") \n \t(const_string \"2\")\n@@ -12447,7 +12450,7 @@\n   \"TARGET_64BIT && ix86_binary_operator_ok (ROTATERT, SImode, operands)\n    && (TARGET_PENTIUM || TARGET_PENTIUMPRO)\"\n   \"ror{l}\\t%k0\"\n-  [(set_attr \"type\" \"ishift\")\n+  [(set_attr \"type\" \"rotate\")\n    (set (attr \"length\") \n      (if_then_else (match_operand:SI 0 \"register_operand\" \"\") \n \t(const_string \"2\")\n@@ -12462,7 +12465,7 @@\n   \"@\n    ror{l}\\t{%2, %0|%0, %2}\n    ror{l}\\t{%b2, %0|%0, %b2}\"\n-  [(set_attr \"type\" \"ishift\")\n+  [(set_attr \"type\" \"rotate\")\n    (set_attr \"mode\" \"SI\")])\n \n (define_insn \"*rotrsi3_1_zext\"\n@@ -12475,7 +12478,7 @@\n   \"@\n    ror{l}\\t{%2, %k0|%k0, %2}\n    ror{l}\\t{%b2, %k0|%k0, %b2}\"\n-  [(set_attr \"type\" \"ishift\")\n+  [(set_attr \"type\" \"rotate\")\n    (set_attr \"mode\" \"SI\")])\n \n (define_expand \"rotrhi3\"\n@@ -12494,7 +12497,7 @@\n   \"ix86_binary_operator_ok (ROTATERT, HImode, operands)\n    && (TARGET_PENTIUM || TARGET_PENTIUMPRO)\"\n   \"ror{w}\\t%0\"\n-  [(set_attr \"type\" \"ishift\")\n+  [(set_attr \"type\" \"rotate\")\n    (set (attr \"length\") \n      (if_then_else (match_operand 0 \"register_operand\" \"\") \n \t(const_string \"2\")\n@@ -12509,7 +12512,7 @@\n   \"@\n    ror{w}\\t{%2, %0|%0, %2}\n    ror{w}\\t{%b2, %0|%0, %b2}\"\n-  [(set_attr \"type\" \"ishift\")\n+  [(set_attr \"type\" \"rotate\")\n    (set_attr \"mode\" \"HI\")])\n \n (define_expand \"rotrqi3\"\n@@ -12528,7 +12531,7 @@\n   \"ix86_binary_operator_ok (ROTATERT, QImode, operands)\n    && (TARGET_PENTIUM || TARGET_PENTIUMPRO)\"\n   \"ror{b}\\t%0\"\n-  [(set_attr \"type\" \"ishift\")\n+  [(set_attr \"type\" \"rotate\")\n    (set (attr \"length\") \n      (if_then_else (match_operand 0 \"register_operand\" \"\") \n \t(const_string \"2\")\n@@ -12543,7 +12546,7 @@\n   \"@\n    ror{b}\\t{%2, %0|%0, %2}\n    ror{b}\\t{%b2, %0|%0, %b2}\"\n-  [(set_attr \"type\" \"ishift\")\n+  [(set_attr \"type\" \"rotate\")\n    (set_attr \"mode\" \"QI\")])\n \f\n ;; Bit set / bit test instructions\n@@ -15961,6 +15964,7 @@\n   ; Since we don't have the proper number of operands for an alu insn,\n   ; fill in all the blanks.\n   [(set_attr \"type\" \"alu\")\n+   (set_attr \"pent_pair\" \"pu\")\n    (set_attr \"memory\" \"none\")\n    (set_attr \"imm_disp\" \"false\")\n    (set_attr \"mode\" \"DI\")\n@@ -16003,6 +16007,7 @@\n   ; Since we don't have the proper number of operands for an alu insn,\n   ; fill in all the blanks.\n   [(set_attr \"type\" \"alu\")\n+   (set_attr \"pent_pair\" \"pu\")\n    (set_attr \"memory\" \"none\")\n    (set_attr \"imm_disp\" \"false\")\n    (set_attr \"mode\" \"SI\")"}]}