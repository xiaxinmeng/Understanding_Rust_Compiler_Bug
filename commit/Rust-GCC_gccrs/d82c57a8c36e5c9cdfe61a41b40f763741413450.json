{"sha": "d82c57a8c36e5c9cdfe61a41b40f763741413450", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDgyYzU3YThjMzZlNWM5Y2RmZTYxYTQxYjQwZjc2Mzc0MTQxMzQ1MA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2012-03-13T10:18:32Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2012-03-13T10:18:32Z"}, "message": "Remove extra_passes\n\n\t* config.gcc (extra_passes): Remove.\n\t* configure.ac (extra_passes): Don't substitute.\n\t* configure: Regenerate.\n\t* Makefile.in (EXTRA_PASSES): Remove.\n\t(GCC_PASSES): Remove $(EXTRA_PASSES).\n\t(MOSTLYCLEANFILES): Likewise.\n\t(native): Likewise.\n\t(install-common): Likewise.\n\nFrom-SVN: r185323", "tree": {"sha": "7fd9c4382b0457321abe55a99b9e129d3218e53d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fd9c4382b0457321abe55a99b9e129d3218e53d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d82c57a8c36e5c9cdfe61a41b40f763741413450", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d82c57a8c36e5c9cdfe61a41b40f763741413450", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d82c57a8c36e5c9cdfe61a41b40f763741413450", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d82c57a8c36e5c9cdfe61a41b40f763741413450/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9c4271f337bd7debed1e4ae3685589e26252f80a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c4271f337bd7debed1e4ae3685589e26252f80a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c4271f337bd7debed1e4ae3685589e26252f80a"}], "stats": {"total": 38, "additions": 20, "deletions": 18}, "files": [{"sha": "fa5a6590c0693ad9de8e594b03214102c7490706", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82c57a8c36e5c9cdfe61a41b40f763741413450/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82c57a8c36e5c9cdfe61a41b40f763741413450/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d82c57a8c36e5c9cdfe61a41b40f763741413450", "patch": "@@ -1,3 +1,14 @@\n+2012-03-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config.gcc (extra_passes): Remove.\n+\t* configure.ac (extra_passes): Don't substitute.\n+\t* configure: Regenerate.\n+\t* Makefile.in (EXTRA_PASSES): Remove.\n+\t(GCC_PASSES): Remove $(EXTRA_PASSES).\n+\t(MOSTLYCLEANFILES): Likewise.\n+\t(native): Likewise.\n+\t(install-common): Likewise.\n+\n 2012-03-13  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.h (TARGET_TLS_INDIRECT_SEG_REFS): New."}, {"sha": "ffbc7f3effff679ca2f48589d8d7749ee559ac1d", "filename": "gcc/Makefile.in", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82c57a8c36e5c9cdfe61a41b40f763741413450/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82c57a8c36e5c9cdfe61a41b40f763741413450/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=d82c57a8c36e5c9cdfe61a41b40f763741413450", "patch": "@@ -670,11 +670,8 @@ INHIBIT_LIBC_CFLAGS = -Dinhibit_libc\n endif\n \n # List of extra executables that should be compiled for this target machine\n-# that are used for compiling from source code to object code.\n+# that are used when linking.\n # The rules for compiling them should be in the t-* file for the machine.\n-EXTRA_PASSES =@extra_passes@\n-\n-# Like EXTRA_PASSES, but these are used when linking.\n EXTRA_PROGRAMS = @extra_programs@\n \n # List of extra object files that should be compiled and linked with\n@@ -724,7 +721,7 @@ COMPILERS = cc1$(exeext) @all_compilers@\n \n # List of things which should already be built whenever we try to use xgcc\n # to compile anything (without linking).\n-GCC_PASSES=xgcc$(exeext) cc1$(exeext) specs $(EXTRA_PASSES)\n+GCC_PASSES=xgcc$(exeext) cc1$(exeext) specs\n \n # Directory to link to, when using the target `maketest'.\n DIR = ../gcc\n@@ -1481,7 +1478,7 @@ MOSTLYCLEANFILES = insn-flags.h insn-config.h insn-codes.h \\\n  tm-preds.h tm-constrs.h checksum-options \\\n  tree-check.h min-insn-modes.c insn-modes.c insn-modes.h \\\n  genrtl.h gt-*.h gtype-*.h gtype-desc.c gtyp-input.list \\\n- xgcc$(exeext) cpp$(exeext) cc1$(exeext) $(EXTRA_PASSES) \\\n+ xgcc$(exeext) cpp$(exeext) cc1$(exeext) \\\n  $(EXTRA_PROGRAMS) gcc-cross$(exeext) \\\n  $(SPECS) collect2$(exeext) gcc-ar$(exeext) gcc-nm$(exeext) \\\n  gcc-ranlib$(exeext) \\\n@@ -1717,7 +1714,7 @@ rest.encap: lang.rest.encap\n # This is what is made with the host's compiler\n # whether making a cross compiler or not.\n native: config.status auto-host.h build-@POSUB@ $(LANGUAGES) \\\n-\t$(EXTRA_PASSES) $(EXTRA_PROGRAMS) $(COLLECT2) lto-wrapper$(exeext) \\\n+\t$(EXTRA_PROGRAMS) $(COLLECT2) lto-wrapper$(exeext) \\\n \tgcc-ar$(exeext) gcc-nm$(exeext) gcc-ranlib$(exeext)\n \n ifeq ($(enable_plugin),yes)\n@@ -4561,7 +4558,7 @@ install-common: native lang.install-common installdirs\n \t  else true; \\\n \t  fi; \\\n \tdone\n-\tfor file in $(EXTRA_PASSES) $(EXTRA_PROGRAMS) $(COLLECT2) ..; do \\\n+\tfor file in $(EXTRA_PROGRAMS) $(COLLECT2) ..; do \\\n \t  if [ x\"$$file\" != x.. ]; then \\\n \t    rm -f $(DESTDIR)$(libexecsubdir)/$$file; \\\n \t    $(INSTALL_PROGRAM) $$file $(DESTDIR)$(libexecsubdir)/$$file; \\"}, {"sha": "805fa65e91c70ed11e5d192fed5f7545f4a53e55", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82c57a8c36e5c9cdfe61a41b40f763741413450/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82c57a8c36e5c9cdfe61a41b40f763741413450/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=d82c57a8c36e5c9cdfe61a41b40f763741413450", "patch": "@@ -129,10 +129,8 @@\n #\t\t\tsuch a system header; otherwise \"none\", do not\n #\t\t\tprovide such a header at all.\n #\n-#  extra_passes\t\tList of extra executables compiled for this target\n-#\t\t\tmachine, used for compiling from source to object.\n-#\n-#  extra_programs\tLike extra_passes, but these are used when linking.\n+#  extra_programs\tList of extra executables compiled for this target\n+#\t\t\tmachine, used when linking.\n #\n #  extra_options\tList of target-dependent .opt files.\n #\n@@ -205,7 +203,6 @@ user_headers_inc_next_pre=\n user_headers_inc_next_post=\n use_gcc_tgmath=yes\n use_gcc_stdint=none\n-extra_passes=\n extra_programs=\n extra_objs=\n extra_gcc_objs="}, {"sha": "019aebf9577fb467738ac23fb170073e22071566", "filename": "gcc/configure", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82c57a8c36e5c9cdfe61a41b40f763741413450/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82c57a8c36e5c9cdfe61a41b40f763741413450/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=d82c57a8c36e5c9cdfe61a41b40f763741413450", "patch": "@@ -642,7 +642,6 @@ gcc_gxx_include_dir\n gcc_config_arguments\n float_h_file\n extra_programs\n-extra_passes\n extra_objs\n extra_headers_list\n user_headers_inc_next_post\n@@ -17970,7 +17969,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17973 \"configure\"\n+#line 17972 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18076,7 +18075,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18079 \"configure\"\n+#line 18078 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -27125,7 +27124,6 @@ fi\n \n \n \n-\n \n \n # Echo link setup."}, {"sha": "32610ecdb56d1b5dacb839c9d2ad14145383c784", "filename": "gcc/configure.ac", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82c57a8c36e5c9cdfe61a41b40f763741413450/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82c57a8c36e5c9cdfe61a41b40f763741413450/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=d82c57a8c36e5c9cdfe61a41b40f763741413450", "patch": "@@ -4974,7 +4974,6 @@ AC_SUBST(user_headers_inc_next_pre)\n AC_SUBST(user_headers_inc_next_post)\n AC_SUBST(extra_headers_list)\n AC_SUBST(extra_objs)\n-AC_SUBST(extra_passes)\n AC_SUBST(extra_programs)\n AC_SUBST(float_h_file)\n AC_SUBST(gcc_config_arguments)"}]}