{"sha": "b82f1618c4e8ca7dca229d1337e44873386561dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjgyZjE2MThjNGU4Y2E3ZGNhMjI5ZDEzMzdlNDQ4NzMzODY1NjFkYw==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2019-08-20T09:50:38Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-08-20T09:50:38Z"}, "message": "[Ada] Crash on a Storage_Size aspect depending on attr. of another type\n\nThis patch fixes a crash on an aspect specification for Storage_Size for\na type T when the expression for the aspect depends on attributes of a\npreviously declared type that is not frozen yet. The  temporary\ndeclaration that captures the value of the aspect must be part of the\nactions attached to the freeze node for T.\n\n2019-08-20  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch13.adb (Expand_N_Attribute_Definition_Clause, case\n\tStorage_Size): If the expression for Storage_Size is not static\n\tit may depend on characterstics of another type that may bot be\n\tfrozen yet, so the elaboration of the expression for the aspect\n\tmust be attached directly to the freeze actions of the type to\n\twhich it applies.\n\ngcc/testsuite/\n\n\t* gnat.dg/storage_size1.adb: New testcase.\n\nFrom-SVN: r274742", "tree": {"sha": "49420f5a0fdab1e7dd0035516762c89709a8023a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49420f5a0fdab1e7dd0035516762c89709a8023a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b82f1618c4e8ca7dca229d1337e44873386561dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b82f1618c4e8ca7dca229d1337e44873386561dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b82f1618c4e8ca7dca229d1337e44873386561dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b82f1618c4e8ca7dca229d1337e44873386561dc/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aa090e20d4bb02e829aa7e4d9e49ba06b94e0d5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa090e20d4bb02e829aa7e4d9e49ba06b94e0d5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa090e20d4bb02e829aa7e4d9e49ba06b94e0d5f"}], "stats": {"total": 72, "additions": 62, "deletions": 10}, "files": [{"sha": "ee54d2742d50de3d310a3f70e14eb85827707b0d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b82f1618c4e8ca7dca229d1337e44873386561dc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b82f1618c4e8ca7dca229d1337e44873386561dc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b82f1618c4e8ca7dca229d1337e44873386561dc", "patch": "@@ -1,3 +1,12 @@\n+2019-08-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch13.adb (Expand_N_Attribute_Definition_Clause, case\n+\tStorage_Size): If the expression for Storage_Size is not static\n+\tit may depend on characterstics of another type that may bot be\n+\tfrozen yet, so the elaboration of the expression for the aspect\n+\tmust be attached directly to the freeze actions of the type to\n+\twhich it applies.\n+\n 2019-08-20  Piotr Trojanek  <trojanek@adacore.com>\n \n \t* exp_util.adb (Build_DIC_Procedure_Declaration): Set the last"}, {"sha": "f3da4eefa1a2ceecf20787ccb452e63b027ceb31", "filename": "gcc/ada/exp_ch13.adb", "status": "modified", "additions": 30, "deletions": 10, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b82f1618c4e8ca7dca229d1337e44873386561dc/gcc%2Fada%2Fexp_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b82f1618c4e8ca7dca229d1337e44873386561dc/gcc%2Fada%2Fexp_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch13.adb?ref=b82f1618c4e8ca7dca229d1337e44873386561dc", "patch": "@@ -220,9 +220,9 @@ package body Exp_Ch13 is\n             --  task_typeZ := expression\n \n             if Ekind (Ent) = E_Task_Type then\n+\n                declare\n                   Assign : Node_Id;\n-\n                begin\n                   Assign :=\n                     Make_Assignment_Statement (Loc,\n@@ -261,15 +261,35 @@ package body Exp_Ch13 is\n                     Make_Defining_Identifier (Loc,\n                       Chars => New_External_Name (Chars (Ent), 'V'));\n \n-                  --  Insert the declaration of the object\n-\n-                  Insert_Action (N,\n-                    Make_Object_Declaration (Loc,\n-                      Defining_Identifier => V,\n-                      Object_Definition   =>\n-                        New_Occurrence_Of (RTE (RE_Storage_Offset), Loc),\n-                      Expression          =>\n-                        Convert_To (RTE (RE_Storage_Offset), Expression (N))));\n+                  --  Insert the declaration of the object. If the expression\n+                  --  is not static it may depend on some other type that is\n+                  --  not frozen yet, so attach the declaration that captures\n+                  --  the value of the expression to the actions of the freeze\n+                  --  node of the current type.\n+\n+                  declare\n+                     Decl : constant Node_Id :=\n+                       Make_Object_Declaration (Loc,\n+                         Defining_Identifier => V,\n+                         Object_Definition   =>\n+                           New_Occurrence_Of (RTE (RE_Storage_Offset), Loc),\n+                         Expression          =>\n+                           Convert_To\n+                             (RTE (RE_Storage_Offset), Expression (N)));\n+                  begin\n+                     if not Is_OK_Static_Expression (Expression (N))\n+                       and then Present (Freeze_Node (Ent))\n+                     then\n+                        if No (Actions (Freeze_Node (Ent))) then\n+                           Set_Actions (Freeze_Node (Ent), New_List (Decl));\n+                        else\n+                           Append (Decl, Actions (Freeze_Node (Ent)));\n+                        end if;\n+\n+                     else\n+                        Insert_Action (N, Decl);\n+                     end if;\n+                  end;\n \n                   Set_Storage_Size_Variable (Ent, Entity_Id (V));\n                end if;"}, {"sha": "f18ea5f7dd1bc8cbac14353f6b07a0e1dc0cf7c7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b82f1618c4e8ca7dca229d1337e44873386561dc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b82f1618c4e8ca7dca229d1337e44873386561dc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b82f1618c4e8ca7dca229d1337e44873386561dc", "patch": "@@ -1,3 +1,7 @@\n+2019-08-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/storage_size1.adb: New testcase.\n+\n 2019-08-20  Ed Schonberg  <schonberg@adacore.com>\n \n \t* gnat.dg/loop_entry2.adb: New testcase."}, {"sha": "970caf1615613898378d4f6e6e14eb72d694413d", "filename": "gcc/testsuite/gnat.dg/storage_size1.adb", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b82f1618c4e8ca7dca229d1337e44873386561dc/gcc%2Ftestsuite%2Fgnat.dg%2Fstorage_size1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b82f1618c4e8ca7dca229d1337e44873386561dc/gcc%2Ftestsuite%2Fgnat.dg%2Fstorage_size1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fstorage_size1.adb?ref=b82f1618c4e8ca7dca229d1337e44873386561dc", "patch": "@@ -0,0 +1,19 @@\n+--  { dg-do compile }\n+\n+with Ada.Text_IO; with Ada.Integer_Text_IO;\n+\n+procedure Storage_Size1 is\n+\n+  package O renames Ada.Text_IO;\n+  package T renames Ada.Integer_Text_IO;\n+\n+  type Struct is record first, second: Integer; end record;\n+\n+  type SP is access Struct\n+      with Storage_Size => 64 * Struct'Max_Size_In_Storage_Elements;\n+\n+begin\n+\n+  T.Put(SP'Storage_Size); O.New_Line(1);\n+\n+end Storage_Size1;"}]}