{"sha": "18efb1796541e7ebc9f9634755bfaf5c21a17773", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThlZmIxNzk2NTQxZTdlYmM5Zjk2MzQ3NTViZmFmNWMyMWExNzc3Mw==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2008-05-06T10:07:13Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2008-05-06T10:07:13Z"}, "message": "i386.c (output_set_got): Fix for x86_64 output_emit_asm by using 'q' specifier for instruction.\n\n2008-05-06  Kai Tietz  <kai.tietz@onevision.com>\n\n\t* config/i386/i386.c (output_set_got): Fix for x86_64 output_emit_asm\n\tby using 'q' specifier for instruction.\n\t(ix86_file_end): Replaced case TARGET_64BIT_MS_ABI by TARGET_64BIT.\n\nFrom-SVN: r134981", "tree": {"sha": "0c05c34c8013526fe459c2bf65239b2caa23c1d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c05c34c8013526fe459c2bf65239b2caa23c1d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18efb1796541e7ebc9f9634755bfaf5c21a17773", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18efb1796541e7ebc9f9634755bfaf5c21a17773", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18efb1796541e7ebc9f9634755bfaf5c21a17773", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18efb1796541e7ebc9f9634755bfaf5c21a17773/comments", "author": null, "committer": null, "parents": [{"sha": "38ce04d982a3e0bd7aad548443119ba5bbe02757", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38ce04d982a3e0bd7aad548443119ba5bbe02757", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38ce04d982a3e0bd7aad548443119ba5bbe02757"}], "stats": {"total": 54, "additions": 37, "deletions": 17}, "files": [{"sha": "b8e97904198516df85f3418680fbf483a2c5cff1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18efb1796541e7ebc9f9634755bfaf5c21a17773/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18efb1796541e7ebc9f9634755bfaf5c21a17773/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18efb1796541e7ebc9f9634755bfaf5c21a17773", "patch": "@@ -1,3 +1,9 @@\n+2008-05-06  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\t* config/i386/i386.c (output_set_got): Fix for x86_64 output_emit_asm\n+\tby using 'q' specifier for instruction.\n+\t(ix86_file_end): Replaced case TARGET_64BIT_MS_ABI by TARGET_64BIT.\n+\n 2008-05-06  Anatoly Sokolov <aesok@post.ru>\n \n \t* config/avr/avr.md (*sbrx_branch, *sbix_branch, *sbix_branch_tmp):"}, {"sha": "a61bfb7f154f08f41e9cb96b14dace326adb750b", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 31, "deletions": 17, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18efb1796541e7ebc9f9634755bfaf5c21a17773/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18efb1796541e7ebc9f9634755bfaf5c21a17773/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=18efb1796541e7ebc9f9634755bfaf5c21a17773", "patch": "@@ -5884,20 +5884,14 @@ ix86_file_end (void)\n \t  switch_to_section (text_section);\n \t  ASM_OUTPUT_LABEL (asm_out_file, name);\n \t}\n-      if (TARGET_64BIT_MS_ABI)\n-        {\n-\t  xops[0] = gen_rtx_REG (Pmode, regno);\n-\t  xops[1] = gen_rtx_MEM (Pmode, stack_pointer_rtx);\n-\t  output_asm_insn (\"mov{q}\\t{%1, %0|%0, %1}\", xops);\n-\t  output_asm_insn (\"ret\", xops);\n-        }\n+\n+      xops[0] = gen_rtx_REG (Pmode, regno);\n+      xops[1] = gen_rtx_MEM (Pmode, stack_pointer_rtx);\n+      if (TARGET_64BIT)\n+\toutput_asm_insn (\"mov{q}\\t{%1, %0|%0, %1}\", xops);\n       else\n-        {\n-\t  xops[0] = gen_rtx_REG (SImode, regno);\n-\t  xops[1] = gen_rtx_MEM (SImode, stack_pointer_rtx);\n-\t  output_asm_insn (\"mov{l}\\t{%1, %0|%0, %1}\", xops);\n-\t  output_asm_insn (\"ret\", xops);\n-\t}\n+\toutput_asm_insn (\"mov{l}\\t{%1, %0|%0, %1}\", xops);\n+      output_asm_insn (\"ret\", xops);\n     }\n \n   if (NEED_INDICATE_EXEC_STACK)\n@@ -5936,7 +5930,12 @@ output_set_got (rtx dest, rtx label ATTRIBUTE_UNUSED)\n       xops[2] = gen_rtx_LABEL_REF (Pmode, label ? label : gen_label_rtx ());\n \n       if (!flag_pic)\n-\toutput_asm_insn (\"mov{l}\\t{%2, %0|%0, %2}\", xops);\n+        {\n+          if (TARGET_64BIT)\n+\t    output_asm_insn (\"mov{q}\\t{%2, %0|%0, %2}\", xops);\n+\t  else\n+\t    output_asm_insn (\"mov{l}\\t{%2, %0|%0, %2}\", xops);\n+\t}\n       else\n \toutput_asm_insn (\"call\\t%a2\", xops);\n \n@@ -5951,7 +5950,12 @@ output_set_got (rtx dest, rtx label ATTRIBUTE_UNUSED)\n \t\t\t\t CODE_LABEL_NUMBER (XEXP (xops[2], 0)));\n \n       if (flag_pic)\n-\toutput_asm_insn (\"pop{l}\\t%0\", xops);\n+        {\n+          if (TARGET_64BIT)\n+\t    output_asm_insn (\"pop{q}\\t%0\", xops);\n+\t  else\n+\t    output_asm_insn (\"pop{l}\\t%0\", xops);\n+\t}\n     }\n   else\n     {\n@@ -5977,9 +5981,19 @@ output_set_got (rtx dest, rtx label ATTRIBUTE_UNUSED)\n     return \"\";\n \n   if (!flag_pic || TARGET_DEEP_BRANCH_PREDICTION)\n-    output_asm_insn (\"add{l}\\t{%1, %0|%0, %1}\", xops);\n+    {\n+      if (TARGET_64BIT)\n+        output_asm_insn (\"add{q}\\t{%1, %0|%0, %1}\", xops);\n+      else\n+        output_asm_insn (\"add{l}\\t{%1, %0|%0, %1}\", xops);\n+    }\n   else\n-    output_asm_insn (\"add{l}\\t{%1+[.-%a2], %0|%0, %1+(.-%a2)}\", xops);\n+    {\n+      if (TARGET_64BIT)\n+        output_asm_insn (\"add{q}\\t{%1+[.-%a2], %0|%0, %1+(.-%a2)}\", xops);\n+      else\n+        output_asm_insn (\"add{l}\\t{%1+[.-%a2], %0|%0, %1+(.-%a2)}\", xops);\n+    }\n \n   return \"\";\n }"}]}