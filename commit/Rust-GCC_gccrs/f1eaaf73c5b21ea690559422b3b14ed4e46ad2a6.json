{"sha": "f1eaaf73c5b21ea690559422b3b14ed4e46ad2a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFlYWFmNzNjNWIyMWVhNjkwNTU5NDIyYjNiMTRlZDRlNDZhZDJhNg==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2001-05-11T01:56:12Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2001-05-11T01:56:12Z"}, "message": "expr.c (emit_push_insn): Convert PUSH_ROUNDING argument to bytes.\n\n        * expr.c (emit_push_insn): Convert PUSH_ROUNDING argument to\n        bytes.  Reported by Kazu Hirata <kazu@hxi.com>.\n\nFrom-SVN: r41956", "tree": {"sha": "02d6a4a301efb3a16514dae87b553a8b33a862ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02d6a4a301efb3a16514dae87b553a8b33a862ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1eaaf73c5b21ea690559422b3b14ed4e46ad2a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1eaaf73c5b21ea690559422b3b14ed4e46ad2a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1eaaf73c5b21ea690559422b3b14ed4e46ad2a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1eaaf73c5b21ea690559422b3b14ed4e46ad2a6/comments", "author": null, "committer": null, "parents": [{"sha": "dac975d3d9c4d3eb1795075106e82debb39ec9d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dac975d3d9c4d3eb1795075106e82debb39ec9d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dac975d3d9c4d3eb1795075106e82debb39ec9d0"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "59c8e2f9fb5f02476d1a0cfe88ab06b72d4a8bd2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1eaaf73c5b21ea690559422b3b14ed4e46ad2a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1eaaf73c5b21ea690559422b3b14ed4e46ad2a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1eaaf73c5b21ea690559422b3b14ed4e46ad2a6", "patch": "@@ -1,3 +1,8 @@\n+2001-05-10  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* expr.c (emit_push_insn): Convert PUSH_ROUNDING argument to\n+\tbytes.  Reported by Kazu Hirata <kazu@hxi.com>.\n+\n 2001-05-10  David Edelsohn  <edelsohn@gnu.org>\n \n \t* expr.c (emit_group_load): extract_bit_field requires a REG or"}, {"sha": "0f75b6912f99d4fccc71725f03efadefecb884d8", "filename": "gcc/expr.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1eaaf73c5b21ea690559422b3b14ed4e46ad2a6/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1eaaf73c5b21ea690559422b3b14ed4e46ad2a6/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=f1eaaf73c5b21ea690559422b3b14ed4e46ad2a6", "patch": "@@ -1511,7 +1511,7 @@ move_by_pieces (to, from, len, align)\n }\n \n /* Return number of insns required to move L bytes by pieces.\n-   ALIGN (in bytes) is maximum alignment we can assume.  */\n+   ALIGN (in bits) is maximum alignment we can assume.  */\n \n static unsigned HOST_WIDE_INT\n move_by_pieces_ninsns (l, align)\n@@ -3177,7 +3177,7 @@ emit_single_push_insn (mode, x, type)\n    SIZE is an rtx for the size of data to be copied (in bytes),\n    needed only if X is BLKmode.\n \n-   ALIGN is maximum alignment we can assume.\n+   ALIGN (in bits) is maximum alignment we can assume.\n \n    If PARTIAL and REG are both nonzero, then copy that many of the first\n    words of X into registers starting with REG, and push the rest of X.\n@@ -3280,7 +3280,8 @@ emit_push_insn (x, mode, type, size, align, partial, reg, extra,\n \t     and such small pushes do rounding that causes trouble.  */\n \t  && ((! SLOW_UNALIGNED_ACCESS (word_mode, align))\n \t      || align >= BIGGEST_ALIGNMENT\n-\t      || PUSH_ROUNDING (align) == align)\n+\t      || (PUSH_ROUNDING (align / BITS_PER_UNIT)\n+\t\t  == (align / BITS_PER_UNIT)))\n \t  && PUSH_ROUNDING (INTVAL (size)) == INTVAL (size))\n \t{\n \t  /* Push padding now if padding above and stack grows down,"}]}