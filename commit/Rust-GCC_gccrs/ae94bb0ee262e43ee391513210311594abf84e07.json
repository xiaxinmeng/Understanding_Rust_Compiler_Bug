{"sha": "ae94bb0ee262e43ee391513210311594abf84e07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU5NGJiMGVlMjYyZTQzZWUzOTE1MTMyMTAzMTE1OTRhYmY4NGUwNw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-10-23T08:55:05Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-10-23T08:55:05Z"}, "message": "Do not ICE in IPA inliner.\n\n2019-10-23  Martin Liska  <mliska@suse.cz>\n\n\tPR ipa/91969\n\t* ipa-inline.c (recursive_inlining): Do not print\n\twhen curr->count is not initialized.\n2019-10-23  Martin Liska  <mliska@suse.cz>\n\n\tPR ipa/91969\n\t* g++.dg/ipa/pr91969.C: New test.\n\nFrom-SVN: r277309", "tree": {"sha": "fb59de24c7ed6479093ffb4822f3e662885b2ab5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb59de24c7ed6479093ffb4822f3e662885b2ab5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae94bb0ee262e43ee391513210311594abf84e07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae94bb0ee262e43ee391513210311594abf84e07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae94bb0ee262e43ee391513210311594abf84e07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae94bb0ee262e43ee391513210311594abf84e07/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f99d62629933adf91e7e0bc1b1ff344ffb68e1a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f99d62629933adf91e7e0bc1b1ff344ffb68e1a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f99d62629933adf91e7e0bc1b1ff344ffb68e1a2"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "85cd7a023c20d1e782a465b6c38d8d96f8db7ede", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae94bb0ee262e43ee391513210311594abf84e07/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae94bb0ee262e43ee391513210311594abf84e07/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae94bb0ee262e43ee391513210311594abf84e07", "patch": "@@ -1,3 +1,9 @@\n+2019-10-23  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/91969\n+\t* ipa-inline.c (recursive_inlining): Do not print\n+\twhen curr->count is not initialized.\n+\n 2019-10-23  Richard Biener  <rguenther@suse.de>\n \n \t* tree-vect-slp.c (vect_build_slp_tree_2): Do not build"}, {"sha": "ce146e0fc07bc6af5f57c98fc9750c326c4c94f7", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae94bb0ee262e43ee391513210311594abf84e07/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae94bb0ee262e43ee391513210311594abf84e07/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=ae94bb0ee262e43ee391513210311594abf84e07", "patch": "@@ -1610,7 +1610,7 @@ recursive_inlining (struct cgraph_edge *edge,\n \t{\n \t  fprintf (dump_file,\n \t\t   \"   Inlining call of depth %i\", depth);\n-\t  if (node->count.nonzero_p ())\n+\t  if (node->count.nonzero_p () && curr->count.initialized_p ())\n \t    {\n \t      fprintf (dump_file, \" called approx. %.2f times per call\",\n \t\t       (double)curr->count.to_gcov_type ()"}, {"sha": "482ff0ccabc9388a06f942dc7380a4262a2b87e2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae94bb0ee262e43ee391513210311594abf84e07/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae94bb0ee262e43ee391513210311594abf84e07/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ae94bb0ee262e43ee391513210311594abf84e07", "patch": "@@ -1,3 +1,8 @@\n+2019-10-23  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/91969\n+\t* g++.dg/ipa/pr91969.C: New test.\n+\n 2019-10-22  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR c++/85746"}, {"sha": "90006720f1d31efb6d8e4a0512d83c62916c4225", "filename": "gcc/testsuite/g++.dg/ipa/pr91969.C", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae94bb0ee262e43ee391513210311594abf84e07/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr91969.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae94bb0ee262e43ee391513210311594abf84e07/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr91969.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr91969.C?ref=ae94bb0ee262e43ee391513210311594abf84e07", "patch": "@@ -0,0 +1,38 @@\n+/* PR ipa/91969 */\n+/* { dg-options \"-fdump-ipa-inline -O3\" } */\n+\n+enum by\n+{\n+};\n+class A\n+{\n+public:\n+  class B\n+  {\n+  public:\n+    virtual void m_fn2 (by) = 0;\n+  };\n+  virtual int m_fn1 ();\n+  B *cf;\n+};\n+by a;\n+class C : A, A::B\n+{\n+  void m_fn2 (by);\n+};\n+void C::m_fn2 (by) { cf->m_fn2 (a); }\n+\n+struct a\n+{\n+  virtual ~a ();\n+};\n+\n+struct b\n+{\n+  virtual void d (...);\n+};\n+\n+struct c : a, b\n+{\n+  void d (...) {}\n+};"}]}