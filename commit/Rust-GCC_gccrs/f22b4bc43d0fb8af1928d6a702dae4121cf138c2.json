{"sha": "f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjIyYjRiYzQzZDBmYjhhZjE5MjhkNmE3MDJkYWU0MTIxY2YxMzhjMg==", "commit": {"author": {"name": "Joel Sherrill", "email": "joel@OARcorp.com", "date": "2002-02-13T22:49:03Z"}, "committer": {"name": "Joel Sherrill", "email": "joel@gcc.gnu.org", "date": "2002-02-13T22:49:03Z"}, "message": "config.gcc (a29k-*-rtems): General cleanup across all RTEMS targets...\n\n2002-02-13\tJoel Sherrill <joel@OARcorp.com>\n\n\t* config.gcc (a29k-*-rtems), config/a29k/rtems.h: General cleanup across\n\tall RTEMS targets including removal of #includes from config/*/rtems*.h\n\tfile and adding them to tm_file setting. Added xm_defines=POSIX to\n\tmany targets.\n\t* config.gcc (c4x-*-rtems), config/c4x/rtems.h: Ditto.\n\t* config.gcc (h8300-*-rtems), config/h8300/rtems.h: Ditto.\n\t* config.gcc (hppa1.1-*-rtems), config/pa/rtems.h: Ditto.\n\t* config.gcc (i960-*-rtems), config/i960/rtems.h: Ditto.\n\t* config.gcc (m68k-*-rtems*), config/m68k/rtems.h,\n\tconfig/m68k/rtemself.h: Ditto.\n\t* config.gcc (mips*-*-rtems*), config/mips/rtems.h,\n\tconfig/mips/rtems64.h: Ditto.\n\t* config.gcc (powerpc-*-rtems*), config/rs6000/rtems.h: Ditto.\n\t* config.gcc (sh-*-rtems*), config/sh/rtems.h, config/sh/rtemself.h:\n\tDitto.\n\t* config.gcc (sparc-*-rtems*), config/sparc/rtems.h,\n\tconfig/sparc/rtemself.h: Ditto.\n\t* config.gcc (v850-*-rtems*), config/v850/rtems.h: Ditto.\n\t* config.gcc (arm-rtems), config/arm/rtems-elf.h: Ditto plus moved\n\tarm-rtems stanza closer to other arm-elf targets and made arm-rtems\n\tmore like arm-elf.\n\t* config.gcc (i[34567]86-*-rtems*), config/i386/djgpp-rtems.h,\n\tconfig/i386/rtems.h, config/i386/rtemself.h: Ditto plus i386-rtemself\n\ttarget made more similar to i386-elf.\n\t* config/i386/t-rtems-i386: Added soft float support and multilibs.\n\t* config/m68k/t-m68kbare: Add 68040 and 68060 as multilib alternatives to\n\tbe similar to config/m68k/t-m68kelf.\n\t* gthr-rtems.h: Encapsulate with extern \"C\" for C++.\n\nFrom-SVN: r49749", "tree": {"sha": "db76c89c06b96d7cdc2ea6c1b734a02afec534fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db76c89c06b96d7cdc2ea6c1b734a02afec534fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/comments", "author": null, "committer": null, "parents": [{"sha": "8686336f51b1197f22304f92b63780169be7c54b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8686336f51b1197f22304f92b63780169be7c54b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8686336f51b1197f22304f92b63780169be7c54b"}], "stats": {"total": 367, "additions": 173, "deletions": 194}, "files": [{"sha": "6e5c90f883e81bb502b3d5b9d4bad95747cbb9c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -1,3 +1,34 @@\n+2002-02-13\tJoel Sherrill <joel@OARcorp.com>\n+\n+\t* config.gcc (a29k-*-rtems), config/a29k/rtems.h: General cleanup across\n+\tall RTEMS targets including removal of #includes from config/*/rtems*.h\n+\tfile and adding them to tm_file setting. Added xm_defines=POSIX to\n+\tmany targets.\n+\t* config.gcc (c4x-*-rtems), config/c4x/rtems.h: Ditto.\n+\t* config.gcc (h8300-*-rtems), config/h8300/rtems.h: Ditto.\n+\t* config.gcc (hppa1.1-*-rtems), config/pa/rtems.h: Ditto.\n+\t* config.gcc (i960-*-rtems), config/i960/rtems.h: Ditto.\n+\t* config.gcc (m68k-*-rtems*), config/m68k/rtems.h,\n+\tconfig/m68k/rtemself.h: Ditto.\n+\t* config.gcc (mips*-*-rtems*), config/mips/rtems.h,\n+\tconfig/mips/rtems64.h: Ditto.\n+\t* config.gcc (powerpc-*-rtems*), config/rs6000/rtems.h: Ditto.\n+\t* config.gcc (sh-*-rtems*), config/sh/rtems.h, config/sh/rtemself.h:\n+\tDitto.\n+\t* config.gcc (sparc-*-rtems*), config/sparc/rtems.h,\n+\tconfig/sparc/rtemself.h: Ditto.\n+\t* config.gcc (v850-*-rtems*), config/v850/rtems.h: Ditto.\n+\t* config.gcc (arm-rtems), config/arm/rtems-elf.h: Ditto plus moved\n+\tarm-rtems stanza closer to other arm-elf targets and made arm-rtems\n+\tmore like arm-elf.\n+\t* config.gcc (i[34567]86-*-rtems*), config/i386/djgpp-rtems.h,\n+\tconfig/i386/rtems.h, config/i386/rtemself.h: Ditto plus i386-rtemself\n+\ttarget made more similar to i386-elf.\n+\t* config/i386/t-rtems-i386: Added soft float support and multilibs.\n+\t* config/m68k/t-m68kbare: Add 68040 and 68060 as multilib alternatives to\n+\tbe similar to config/m68k/t-m68kelf.\n+\t* gthr-rtems.h: Encapsulate with extern \"C\" for C++.\n+\n Wed Feb 13 23:41:15 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* regmove.c (kill_value): Handle subregs."}, {"sha": "588e648d3d29a5fa3c30ce2ca3834f165a4e4e22", "filename": "gcc/config.gcc", "status": "modified", "additions": 41, "deletions": 23, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -410,7 +410,8 @@ a29k-*-udi | a29k-*-coff)\n \ttmake_file=a29k/t-a29kbare\n \t;;\n a29k*-*-rtems*)\n-\ttm_file=a29k/rtems.h\n+\txm_defines=POSIX\n+\ttm_file=\"a29k/a29k.h a29k/rtems.h rtems.h\"\n \ttmake_file=\"a29k/t-a29kbare t-rtems\"\n \tif test x$enable_threads = xyes; then\n \t  thread_file='rtems'\n@@ -590,13 +591,6 @@ arc-*-elf*)\n \ttm_file=\"dbxelf.h elfos.h svr4.h ${tm_file}\"\n \textra_parts=\"crtinit.o crtfini.o\"\n \t;;\n-arm*-*-rtems*)\n-\ttm_file=\"dbxelf.h elfos.h arm/unknown-elf.h arm/elf.h arm/aout.h arm/arm.h arm/rtems-elf.h rtems.h\"\n-\ttmake_file=\"arm/t-arm-elf t-rtems\"\n-\tif test x$enable_threads = xyes; then\n-\t  thread_file='rtems'\n-\tfi\n-\t;;\n arm-*-coff* | armel-*-coff*)\n \ttm_file=\"arm/semi.h arm/aout.h arm/arm.h arm/coff.h\"\n \ttmake_file=arm/t-arm-coff\n@@ -663,6 +657,14 @@ arm*-*-ecos-elf)\n \ttm_file=\"dbxelf.h elfos.h arm/unknown-elf.h arm/elf.h arm/aout.h arm/arm.h arm/ecos-elf.h\"\n \ttmake_file=arm/t-arm-elf\n \t;;\n+arm*-*-rtems*)\n+\txm_defines=POSIX\n+\ttm_file=\"dbxelf.h elfos.h arm/unknown-elf.h arm/elf.h arm/aout.h arm/arm.h arm/rtems-elf.h rtems.h\"\n+\ttmake_file=\"arm/t-arm-elf t-rtems\"\n+\tif test x$enable_threads = xyes; then\n+\t  thread_file='rtems'\n+\tfi\n+\t;;\n arm*-*-elf)\n \ttm_file=\"dbxelf.h elfos.h arm/unknown-elf.h arm/elf.h arm/aout.h arm/arm.h\"\n \ttmake_file=arm/t-arm-elf\n@@ -703,8 +705,9 @@ c38-convex-*)\n \tuse_collect2=yes\n \t;;\n c4x-*-rtems*)\n+\txm_defines=POSIX\n \ttmake_file=\"c4x/t-c4x t-rtems\"\n-\ttm_file=c4x/rtems.h\n+\ttm_file='c4x/c4x.h c4x/rtems.h rtems.h\"\n \tif test x$enable_threads = xyes; then\n \t  thread_file='rtems'\n \tfi\n@@ -759,8 +762,9 @@ fr30-*-elf)\n \textra_parts=\"crti.o crtn.o crtbegin.o crtend.o\"\n \t;;\n h8300-*-rtems*)\n+\txm_defines=POSIX\n \ttmake_file=\"h8300/t-h8300 t-rtems\"\n-\ttm_file=h8300/rtems.h\n+\ttm_file=\"h8300/h8300.h h8300/rtems.h rtems.h\"\n \tif test x$enable_threads = xyes; then\n \t  thread_file='rtems'\n \tfi\n@@ -808,8 +812,9 @@ hppa1.1-*-osf*)\n \tuse_collect2=yes\n \t;;\n hppa1.1-*-rtems*)\n+\txm_defines=POSIX\n \ttarget_cpu_default=\"(MASK_JUMP_IN_DELAY | MASK_PORTABLE_RUNTIME | MASK_GAS | MASK_NO_SPACE_REGS | MASK_SOFT_FLOAT)\"\n-\ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h elfos.h pa/elf.h pa/pa-pro-end.h libgloss.h pa/rtems.h\"\n+\ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h elfos.h pa/elf.h pa/pa-pro-end.h libgloss.h pa/rtems.h rtems.h\"\n \ttmake_file=\"pa/t-bsd pa/t-pro\"\n \t;;\n hppa1.0-*-osf*)\n@@ -1287,21 +1292,24 @@ i[34567]86-*-osfrose*)\t\t# 386 using OSF/rose\n \textra_objs=halfpic.o\n \t;;\n i[34567]86-go32-rtems*)\n-\ttm_file=i386/djgpp-rtems.h\n+\txm_defines=POSIX\n+\ttm_file=\"i386/djgpp.h i386/djgpp-rtems.h rtems.h\"\n \ttmake_file=t-rtems\n \tif test x$enable_threads = xyes; then\n \t  thread_file='rtems'\n \tfi\n \t;;\n i[34567]86-*-rtemscoff*)\n-\ttm_file=i386/rtems.h\n+\txm_defines=POSIX\n+\ttm_file=\"i386/i386-coff.h i386/rtems.h rtems.h\"\n \ttmake_file=t-rtems\n \tif test x$enable_threads = xyes; then\n \t  thread_file='rtems'\n \tfi\n \t;;\n i[34567]86-*-rtems*|i[34567]86-*-rtemself*)\n-\ttm_file=\"${tm_file} i386/att.h dbxelf.h elfos.h svr4.h linux.h i386/rtemself.h rtems.h\"\n+\txm_defines=POSIX\n+\ttm_file=\"${tm_file} i386/att.h dbxelf.h elfos.h i386/i386elf.h i386/rtemself.h rtems.h\"\n \textra_parts=\"crtbegin.o crtend.o crti.o crtn.o\"\n \ttmake_file=\"i386/t-rtems-i386 i386/t-crtstuff t-rtems\"\n \tif test x$enable_threads = xyes; then\n@@ -1563,8 +1571,9 @@ i960-*-coff*)\n \tcxx_target_objs=\"i960-c.o\"\n \t;;\n i960-*-rtems)\n+\txm_defines=POSIX\n \ttmake_file=\"i960/t-960bare t-rtems\"\n-\ttm_file=\"${tm_file} dbxcoff.h i960/rtems.h\"\n+\ttm_file=\"${tm_file} dbxcoff.h i960/i960-coff.h i960/rtems.h rtems.h\"\n \tif test x$enable_threads = xyes; then\n \t  thread_file='rtems'\n \tfi\n@@ -2009,16 +2018,18 @@ m68k-*-psos*)\n \tfloat_format=m68k\n \t;;\n m68k-*-rtemscoff*)\n+\txm_defines=POSIX\n \ttmake_file=\"m68k/t-m68kbare t-rtems\"\n-\ttm_file=m68k/rtems.h\n+\ttm_file=\"m68k/m68k-coff.h m68k/rtems.h rtems.h\"\n \tfloat_format=m68k\n \tif test x$enable_threads = xyes; then\n \t  thread_file='rtems'\n \tfi\n \t;;\n m68k-*-rtemself*|m68k-*-rtems*)\n+\txm_defines=POSIX\n \ttmake_file=\"m68k/t-m68kbare t-rtems m68k/t-crtstuff\"\n-\ttm_file=m68k/rtemself.h\n+\ttm_file=\"m68k/m68k-none.h m68k/m68kelf.h dbxelf.h elfos.h m68k/m68kemb.h m68k/m68020-elf.h m68k/rtemself.h rtems.h\"\n \tfloat_format=m68k\n \textra_parts=\"crtbegin.o crtend.o\"\n \tif test x$enable_threads = xyes; then\n@@ -2536,14 +2547,16 @@ mips64orion-*-elf*)\n \ttmake_file=mips/t-elf\n \t;;\n mips64orion-*-rtems*)\n-\ttm_file=\"mips/elforion.h mips/elf64.h mips/rtems64.h\"\n+\txm_defines=POSIX\n+\ttm_file=\"mips/elforion.h mips/elf64.h mips/rtems64.h rtems.h\"\n \ttmake_file=\"mips/t-elf t-rtems\"\n \tif test x$enable_threads = xyes; then\n \t  thread_file='rtems'\n \tfi\n \t;;\n mips*-*-rtems*)\n-\ttm_file=\"mips/elf.h mips/rtems.h\"\n+\txm_defines=POSIX\n+\ttm_file=\"mips/elf.h mips/rtems.h rtems.h\"\n \ttmake_file=\"mips/t-elf t-rtems\"\n \tif test x$enable_threads = xyes; then\n \t  thread_file='rtems'\n@@ -2740,7 +2753,7 @@ powerpc-*-eabi*)\n \t;;\n powerpc-*-rtems*)\n \txm_defines=POSIX\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/eabi.h rtems.h rs6000/rtems.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/eabi.h rs6000/rtems.h rtems.h\"\n \ttmake_file=\"rs6000/t-ppcgas t-rtems rs6000/t-ppccomm\"\n \tif test x$enable_threads = xyes; then\n \t  thread_file='rtems'\n@@ -2899,16 +2912,18 @@ sh64-*-elf*)\n \tfi\n \t;;\n sh-*-rtemself*)\n+\txm_defines=POSIX\n \ttmake_file=\"sh/t-sh sh/t-elf t-rtems\"\n-\ttm_file=\"${tm_file} sh/elf.h sh/rtemself.h\"\n+\ttm_file=\"${tm_file} sh/elf.h sh/rtemself.h rtems.h\"\n \tfloat_format=sh\n \tif test x$enable_threads = xyes; then\n \t  thread_file='rtems'\n \tfi\n \t;;\n sh-*-rtems*)\n+\txm_defines=POSIX\n \ttmake_file=\"sh/t-sh t-rtems\"\n-\ttm_file=\"${tm_file} sh/rtems.h\"\n+\ttm_file=\"${tm_file} sh/rtems.h rtems.h\"\n \tfloat_format=sh\n \tif test x$enable_threads = xyes; then\n \t  thread_file='rtems'\n@@ -3012,13 +3027,15 @@ sparc-*-lynxos*)\n \ttmake_file=sparc/t-sunos41\n \t;;\n sparc-*-rtemsaout*)\n+\txm_defines=POSIX\n \ttmake_file=\"sparc/t-sparcbare t-rtems\"\n \ttm_file=\"${tm_file} aoutos.h sparc/aout.h sparc/rtems.h rtems.h\"\n \tif test x$enable_threads = xyes; then\n \t  thread_file='rtems'\n \tfi\n \t;;\n sparc-*-rtems*|sparc-*-rtemself*)\n+\txm_defines=POSIX\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h sparc/sysv4.h sparc/sol2.h sparc/elf.h sparc/rtemself.h rtems.h\"\n \ttmake_file=\"sparc/t-elf t-rtems\"\n \textra_parts=\"crti.o crtn.o crtbegin.o crtend.o\"\n@@ -3231,7 +3248,8 @@ thumb*-*-*)\n *** when the -mthumb switch is given to the compiler.\" 1>&2; exit 1; }\n \t;;\n v850-*-rtems*)\n-\ttm_file=\"dbxelf.h elfos.h svr4.h ${tm_file} v850/rtems.h\"\n+\txm_defines=POSIX\n+\ttm_file=\"dbxelf.h elfos.h svr4.h ${tm_file} v850/v850.h v850/rtems.h rtems.h\"\n \ttmake_file=\"v850/t-v850 t-rtems\"\n \tif test x$stabs = xyes\n \tthen"}, {"sha": "d5a633b380ab0c2cd5bf18797d02cd840c7b8948", "filename": "gcc/config/a29k/rtems.h", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fa29k%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fa29k%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fa29k%2Frtems.h?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for rtems targeting a AMD A29K using COFF.\n-   Copyright (C) 1997, 1998, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1997, 1998, 2000, 2002 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n \n This file is part of GNU CC.\n@@ -19,18 +19,13 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include \"a29k/a29k.h\"\n-\n /* Specify predefined symbols in preprocessor.  */\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-D_AM29K -D_AM29000 -D_EPI -Drtems -D__rtems__ \\\n+#define CPP_PREDEFINES \"-D_AM29K -D_AM29000 -D_EPI -D__rtems__ \\\n   -Asystem(rtems) -Acpu(a29k) -Amachine(a29k)\"\n \n /* Generate calls to memcpy, memcmp and memset.  */\n #ifndef TARGET_MEM_FUNCTIONS\n #define TARGET_MEM_FUNCTIONS\n #endif\n-\n-/* Get machine-independent configuration parameters for RTEMS.  */\n-#include <rtems.h>"}, {"sha": "65ed71e35ace503432fb48e70d6eb8e7db12bc1c", "filename": "gcc/config/arm/rtems-elf.h", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Farm%2Frtems-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Farm%2Frtems-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Frtems-elf.h?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for RTEMS based ARM systems using ELF\n-   Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2002 Free Software Foundation, Inc.\n  \n This file is part of GNU CC.\n  \n@@ -19,15 +19,13 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n /* Run-time Target Specification.  */\n-#undef  TARGET_VERSION\n #define TARGET_VERSION  fputs (\" (ARM/ELF RTEMS)\", stderr);\n \n #define HAS_INIT_SECTION\n \n-#undef  CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Darm -Darm_elf -Drtems -D__rtems__ -D__ELF__ \\\n+#undef CPP_PREDEFINES\n+#define CPP_PREDEFINES \"-D__rtems__ -D__ELF__ \\\n    -Asystem(rtems) -Acpu(arm) -Amachine(arm)\"\n \n-/*#undef INVOKE_main*/\n-\n+#undef INVOKE_main\n "}, {"sha": "d4364dffa4ed7675c05eed64afc598bd3454739e", "filename": "gcc/config/c4x/rtems.h", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fc4x%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fc4x%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Frtems.h?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of RTEMS executing on an TMS320C[34]x using coff\n-   Copyright (C) 1996, 1997, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 1999, 2002 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n \n This file is part of GNU CC.\n@@ -19,19 +19,12 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include \"c4x/c4x.h\"\n-\n /* Specify predefined symbols in preprocessor.  */\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-D__rtems__ -Asystem=rtems\"\n+#define CPP_PREDEFINES \"-D__rtems__ -Asystem=rtems -D__USE_INIT_FINI__\"\n \n /* Generate calls to memcpy, memcmp and memset.  */\n #ifndef TARGET_MEM_FUNCTIONS\n #define TARGET_MEM_FUNCTIONS\n #endif\n-\n-/* Include machine independent RTEMS configuration parameters.  */\n-#include <rtems.h>\n-\n-/* End of c4x/rtems.h.  */"}, {"sha": "35e4d73c533aac3c401af49e5ad3c0de66a74f50", "filename": "gcc/config/h8300/rtems.h", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fh8300%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fh8300%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Frtems.h?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for rtems targeting a H8\n-   Copyright (C) 1996, 1997, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 2000, 2002 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n \n This file is part of GNU CC.\n@@ -19,19 +19,12 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include \"h8300/h8300.h\"\n-\n-/* Specify predefined symbols in preprocessor.  */\n-\n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"-Dh8300 \\\n   -D__LONG_MAX__=2147483647L -D__LONG_LONG_MAX__=2147483647L \\\n-  -Drtems -D__rtems__ -Asystem(rtems) -Acpu(h8300) -Amachine(h8300)\"\n+  -D__rtems__ -Asystem(rtems) -Acpu(h8300) -Amachine(h8300)\"\n \n /* Generate calls to memcpy, memcmp and memset.  */\n #ifndef TARGET_MEM_FUNCTIONS\n #define TARGET_MEM_FUNCTIONS\n #endif\n-\n-/* Get machine-independent configuration parameters for RTEMS.  */\n-#include <rtems.h>"}, {"sha": "551b666b765c21789d3d36c7cfe63381e2f73feb", "filename": "gcc/config/i386/djgpp-rtems.h", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fi386%2Fdjgpp-rtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fi386%2Fdjgpp-rtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdjgpp-rtems.h?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -1,7 +1,7 @@\n /* Configuration for an i386 running RTEMS on top of MS-DOS with\n    DJGPP v2.x.\n \n-   Copyright (C) 1996,1999 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1999, 2002 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n  \n This file is part of GNU CC.\n@@ -21,20 +21,15 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include \"i386/djgpp.h\"\n-\n /* Specify predefined symbols in preprocessor.  */\n \n #ifdef CPP_PREDEFINES\n #undef CPP_PREDEFINES\n #endif\n-#define CPP_PREDEFINES \"-Dunix -DGO32 -DDJGPP=2 -DMSDOS \\\n+#define CPP_PREDEFINES \"-Dunix -DGO32 -DDJGPP=2 -DMSDOS -D__rtems__ \\\n   -Asystem=unix -Asystem=msdos -Asystem=rtems\"\n \n /* Generate calls to memcpy, memcmp and memset.  */\n #ifndef TARGET_MEM_FUNCTIONS\n #define TARGET_MEM_FUNCTIONS\n #endif\n-\n-/* end of i386/djgpp-rtems.h */\n-"}, {"sha": "c2381c79f6e1857183647e1c7df8eb4ca955f303", "filename": "gcc/config/i386/rtems.h", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fi386%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fi386%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Frtems.h?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for rtems targeting an Intel i386 using coff.\n-   Copyright (C) 1996, 1997, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 2000, 2002 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n \n This file is part of GNU CC.\n@@ -19,19 +19,12 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include \"i386/i386-coff.h\"\n-\n /* Specify predefined symbols in preprocessor.  */\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Drtems -D__rtems__ -Asystem=rtems\"\n+#define CPP_PREDEFINES \"-D__rtems__ -Asystem=rtems\"\n \n /* Generate calls to memcpy, memcmp and memset.  */\n #ifndef TARGET_MEM_FUNCTIONS\n #define TARGET_MEM_FUNCTIONS\n #endif\n-\n-/* Get machine-independent configuration parameters for RTEMS.  */\n-#include <rtems.h>\n-\n-/* end of i386/rtems.h */"}, {"sha": "2ebc517cb1aca9aa55363b12e8552595e704b3d4", "filename": "gcc/config/i386/rtemself.h", "status": "modified", "additions": 12, "deletions": 57, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fi386%2Frtemself.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fi386%2Frtemself.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Frtemself.h?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -1,8 +1,6 @@\n-/* Definitions for Intel 386 running Linux-based GNU systems with ELF format.\n-   Copyright (C) 1994, 1995, 1996, 1997, 1998, 2000\n-   Free Software Foundation, Inc.\n-   Contributed by Eric Youngdale.\n-   Modified for stabs-in-ELF by H.J. Lu.\n+/* Definitions for rtems targeting a ix86 using ELF.\n+   Copyright (C) 1996, 1997, 2000, 2001, 2002 Free Software Foundation, Inc.\n+   Contributed by Joel Sherrill (joel@OARcorp.com).\n \n This file is part of GNU CC.\n \n@@ -21,65 +19,22 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#define LINUX_DEFAULT_ELF\n+/* Specify predefined symbols in preprocessor.  */\n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (i386 RTEMS with ELF)\");\n-\n-/* The svr4 ABI for the i386 says that records and unions are returned\n-   in memory.  */\n-#undef DEFAULT_PCC_STRUCT_RETURN\n-#define DEFAULT_PCC_STRUCT_RETURN 1\n-\n-#undef DBX_REGISTER_NUMBER\n-#define DBX_REGISTER_NUMBER(n)  svr4_dbx_register_map[n]\n-\n-/* Output assembler code to FILE to increment profiler label # LABELNO\n-   for profiling a function entry.  */\n-\n-#undef FUNCTION_PROFILER\n-#define FUNCTION_PROFILER(FILE, LABELNO)  \\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (flag_pic)\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      fprintf (FILE, \"\\tleal %sP%d@GOTOFF(%%ebx),%%edx\\n\",\t\t\\\n-\t       LPREFIX, (LABELNO));\t\t\t\t\t\\\n-      fprintf (FILE, \"\\tcall *mcount@GOT(%%ebx)\\n\");\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      fprintf (FILE, \"\\tmovl $%sP%d,%%edx\\n\", LPREFIX, (LABELNO));\t\\\n-      fprintf (FILE, \"\\tcall mcount\\n\");\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-}\n-\n-#undef SIZE_TYPE\n-#define SIZE_TYPE \"unsigned int\"\n- \n-#undef PTRDIFF_TYPE\n-#define PTRDIFF_TYPE \"int\"\n-  \n-#undef WCHAR_TYPE\n-#define WCHAR_TYPE \"long int\"\n-   \n-#undef WCHAR_TYPE_SIZE\n-#define WCHAR_TYPE_SIZE BITS_PER_WORD\n-    \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES  \"-Drtems -D__rtems__ -Asystem=rtems\"\n-\n-/* A C statement (sans semicolon) to output to the stdio stream\n-   FILE the assembler definition of uninitialized global DECL named\n-   NAME whose size is SIZE bytes and alignment is ALIGN bytes.\n-   Try to use asm_output_aligned_bss to implement this macro.  */\n+#define CPP_PREDEFINES  \"-D__rtems__ -Asystem=rtems \\\n+    -D__ELF__ -D__i386__ -D__USE_INIT_FINI__\"\n \n-#define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN) \\\n-  asm_output_aligned_bss (FILE, DECL, NAME, SIZE, ALIGN)\n+#undef CPP_SPEC\n+#define CPP_SPEC \"%(cpp_cpu) %{msoft-float:-D_SOFT_FLOAT}\"\n \n #undef STARTFILE_SPEC\n #define STARTFILE_SPEC \"crt0.o%s crti.o%s crtbegin.o%s\"\n \n #undef ENDFILE_SPEC\n #define ENDFILE_SPEC   \"crtend.o%s crtn.o%s\"\n \n-/* end of i386/rtemself.h */\n+/* Generate calls to memcpy, memcmp and memset.  */\n+#ifndef TARGET_MEM_FUNCTIONS\n+#define TARGET_MEM_FUNCTIONS\n+#endif"}, {"sha": "b57f4fd82dfaa0910509453e5587286ed358c207", "filename": "gcc/config/i386/t-rtems-i386", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fi386%2Ft-rtems-i386", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fi386%2Ft-rtems-i386", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-rtems-i386?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -12,3 +12,43 @@ crtn.o: $(srcdir)/config/i386/sol2-cn.asm $(GCC_PASSES)\n \tsed -e '/^!/d' <$(srcdir)/config/i386/sol2-cn.asm >crtn.s\n \t$(GCC_FOR_TARGET) -c -o crtn.o crtn.s\n \n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n+\n+LIB2FUNCS_EXTRA = xp-bit.c\n+\n+dp-bit.c: $(srcdir)/config/fp-bit.c\n+\techo '#ifdef __LITTLE_ENDIAN__' > dp-bit.c\n+\techo '#define FLOAT_BIT_ORDER_MISMATCH' >>dp-bit.c\n+\techo '#endif'           >> dp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c >> dp-bit.c\n+\n+fp-bit.c: $(srcdir)/config/fp-bit.c\n+\techo '#define FLOAT' > fp-bit.c\n+\techo '#ifdef __LITTLE_ENDIAN__' >> fp-bit.c\n+\techo '#define FLOAT_BIT_ORDER_MISMATCH' >>fp-bit.c\n+\techo '#endif'           >> fp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n+\n+xp-bit.c: $(srcdir)/config/fp-bit.c\n+\techo '#define EXTENDED_FLOAT_STUBS' > xp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c >> xp-bit.c\n+\n+MULTILIB_OPTIONS = mcpu=i486/mcpu=pentium/mcpu=pentiumpro/mcpu=k6/mcpu=athlon \\\n+msoft-float mno-fp-ret-in-387\n+MULTILIB_DIRNAMES= m486 mpentium mpentiumpro k6 athlon soft-float nofp\n+MULTILIB_MATCHES = msoft-float=mno-m80387\n+MULTILIB_EXCEPTIONS = \\\n+mno-fp-ret-in-387 \\\n+mcpu=i486/*mno-fp-ret-in-387* \\\n+mcpu=pentium/*msoft-float* mcpu=pentium/*mno-fp-ret-in-387* \\\n+mcpu=pentiumpro/*msoft-float* mcpu=pentiumpro/*mno-fp-ret-in-387* \\\n+mcpu=k6/*msoft-float* mcpu=k6/*mno-fp-ret-in-387* \\\n+mcpu=athlon/*msoft-float* mcpu=athlon/*mno-fp-ret-in-387*\n+\n+EXTRA_MULTILIB_PARTS = crtbegin.o crtend.o\n+\n+LIBGCC = stmp-multilib\n+INSTALL_LIBGCC = install-multilib"}, {"sha": "d1dccc030e49bd48b0b68d07bcd4db18dc654d6e", "filename": "gcc/config/i960/rtems.h", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fi960%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fi960%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Frtems.h?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for rtems targeting an Intel i960.\n-   Copyright (C) 1996, 1997, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 2000, 2002 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n \n This file is part of GNU CC.\n@@ -19,18 +19,13 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include \"i960/i960-coff.h\"\n-\n /* Specify predefined symbols in preprocessor.  */\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Di960 -Di80960 -DI960 -DI80960 -Drtems -D__rtems__ \\\n+#define CPP_PREDEFINES \"-Di960 -Di80960 -DI960 -DI80960 -D__rtems__ \\\n    -Asystem=rtems -Acpu=i960 -Amachine=i960\"\n \n /* Generate calls to memcpy, memcmp and memset.  */\n #ifndef TARGET_MEM_FUNCTIONS\n #define TARGET_MEM_FUNCTIONS\n #endif\n-\n-/* Get machine-independent configuration parameters for RTEMS.  */\n-#include <rtems.h>"}, {"sha": "89b51601eb4ac40193977dbf741071ed84419de6", "filename": "gcc/config/m68k/rtems.h", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fm68k%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fm68k%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Frtems.h?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for rtems targeting a Motorola m68k using coff.\n-   Copyright (C) 1996, 1997, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 2000, 2002 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n \n This file is part of GNU CC.\n@@ -19,18 +19,13 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include \"m68k/m68k-coff.h\"\n-\n /* Specify predefined symbols in preprocessor.  */\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dmc68000 -Drtems -D__rtems__ \\\n+#define CPP_PREDEFINES \"-Dmc68000 -D__rtems__ \\\n    -Asystem=rtems -Acpu=mc68000 -Acpu=m68k -Amachine=m68k\"\n \n /* Generate calls to memcpy, memcmp and memset.  */\n #ifndef TARGET_MEM_FUNCTIONS\n #define TARGET_MEM_FUNCTIONS\n #endif\n-\n-/* Get machine-independent configuration parameters for RTEMS.  */\n-#include <rtems.h>"}, {"sha": "473ee25548b1ea22f2d258ca7c4fc8dbf7107e2c", "filename": "gcc/config/m68k/rtemself.h", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fm68k%2Frtemself.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fm68k%2Frtemself.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Frtemself.h?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for rtems targeting a Motorola m68k using elf.\n-   Copyright (C) 1999, 2000, National Research Council of Canada.\n+   Copyright (C) 1999, 2000, 2002 National Research Council of Canada.\n    Contributed by Charles-Antoine Gauthier (charles.gauthier@nrc.ca).\n \n This file is part of GNU CC.\n@@ -27,7 +27,7 @@ Boston, MA 02111-1307, USA.  */\n /* Specify predefined symbols in preprocessor.  */\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dmc68000 -Drtems -D__rtems__ -D__ELF__ \\\n+#define CPP_PREDEFINES \"-Dmc68000 -D__rtems__ -D__ELF__ -D__USE_INIT_FINI__ \\\n    -Asystem=rtems -Acpu=mc68000 -Acpu=m68k -Amachine=m68k\"\n \n /* Generate calls to memcpy, memcmp and memset.  */\n@@ -60,8 +60,3 @@ Boston, MA 02111-1307, USA.  */\n \n /* Do I need this? */\n #undef INVOKE__main\n-\n-/* Get machine-independent configuration parameters for RTEMS.  */\n-#include <rtems.h>\n-\n-/* end of m68k/rtemself.h */"}, {"sha": "d9651d1b75b16f6e6f69a59ee4b1bf4f1d708436", "filename": "gcc/config/m68k/t-m68kbare", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fm68k%2Ft-m68kbare", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fm68k%2Ft-m68kbare", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ft-m68kbare?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -14,8 +14,8 @@ xfgnulib.c: $(srcdir)/config/m68k/fpgnulib.c\n \n MULTILIB_OPTIONS = m68000/m68020/m5200/mcpu32/m68040/m68060 m68881/msoft-float\n MULTILIB_DIRNAMES =\n-MULTILIB_MATCHES = m68000=mc68000 m68000=m68302 mcpu32=m68332 m68020=mc68020\n-MULTILIB_EXCEPTIONS = m68000/msoft-float m5200/m68881 m5200/msoft-float mcpu32/m68881 mcpu32/msoft-float m68040/m68881 m68040/msoft-float m68060/m68881 m68060/msoft-float\n+MULTILIB_MATCHES = m68000=mc68000 m68000=m68302 mcpu32=m68332 m68020=mc68020 \n+MULTILIB_EXCEPTIONS = m68000/msoft-float m5200/m68881 m5200/msoft-float mcpu32/m68881 mcpu32/msoft-float m68040/m68681 m68060/m68681\n \n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib"}, {"sha": "d11aae0aa1ab2399b2a77ad284ac1b254efc30ee", "filename": "gcc/config/mips/rtems.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fmips%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fmips%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Frtems.h?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for rtems targeting a MIPS using ELF.\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2002 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n \n This file is part of GNU CC.\n@@ -23,12 +23,9 @@ Boston, MA 02111-1307, USA.  */\n \n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"-Dmips -DMIPSEB -D_mips -D_MIPSEB \\\n-   -Drtems -D__rtems__ -Asystem(rtems)\"\n+   -D__rtems__ -Asystem(rtems)\"\n \n /* Generate calls to memcpy, memcmp and memset.  */\n #ifndef TARGET_MEM_FUNCTIONS\n #define TARGET_MEM_FUNCTIONS\n #endif\n-\n-/* Get machine-independent configuration parameters for RTEMS.  */\n-#include <rtems.h>"}, {"sha": "78281b6d818f068629770677432d91d3efb21ef1", "filename": "gcc/config/mips/rtems64.h", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fmips%2Frtems64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fmips%2Frtems64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Frtems64.h?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for rtems targeting a MIPS ORION using ecoff.\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2002 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n \n This file is part of GNU CC.\n@@ -23,7 +23,7 @@ Boston, MA 02111-1307, USA.  */\n \n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"-Dmips -DMIPSEB -DR4000 -D_mips -D_MIPSEB -D_R4000 \\\n-   -Drtems -D__rtems__ -Asystem=rtems\"\n+   -D__rtems__ -Asystem=rtems\"\n \n /* Generate calls to memcpy, memcmp and memset.  */\n #ifndef TARGET_MEM_FUNCTIONS\n@@ -40,8 +40,3 @@ Boston, MA 02111-1307, USA.  */\n \n #undef STARTFILE_SPEC\n #undef ENDFILE_SPEC\n-\n-/*  End of undefines to turn off .ctor/.dtor section support */\n-\n-/* Get machine-independent configuration parameters for RTEMS.  */\n-#include <rtems.h>"}, {"sha": "10b892e796b05e99fd7a7443f63005005a9726c7", "filename": "gcc/config/pa/rtems.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fpa%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fpa%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Frtems.h?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for PRO.\n-   Copyright (C) 1997, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1997, 2000, 2002 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n \n This file is part of GNU CC.\n@@ -23,12 +23,9 @@ Boston, MA 02111-1307, USA.  */\n \n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"-Dhppa -DPWB -Acpu=hppa -Amachine=hppa \\\n-   -Drtems -D__rtems__ -Asystem=rtems\"\n+   -D__rtems__ -Asystem=rtems\"\n \n /* Generate calls to memcpy, memcmp and memset.  */\n #ifndef TARGET_MEM_FUNCTIONS\n #define TARGET_MEM_FUNCTIONS\n #endif\n-\n-/* Get machine-independent configuration parameters for RTEMS.  */\n-#include <rtems.h>"}, {"sha": "cb5cac51b74bacfc95bc712cf1cee3695b734fd5", "filename": "gcc/config/rs6000/rtems.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Frs6000%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Frs6000%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frtems.h?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for rtems targeting a PowerPC using elf.\n-   Copyright (C) 1996, 1997, 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 2000, 2001, 2002 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n \n This file is part of GNU CC.\n@@ -22,7 +22,7 @@ Boston, MA 02111-1307, USA.  */\n /* Specify predefined symbols in preprocessor.  */\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-DPPC -Drtems -D__rtems__ \\\n+#define CPP_PREDEFINES \"-DPPC -D__rtems__ \\\n    -Asystem=rtems -Acpu=powerpc -Amachine=powerpc\"\n \n /* Generate calls to memcpy, memcmp and memset.  */"}, {"sha": "3f8ce8b6034e1b8f9798ebfee5bc80a7dc71ac74", "filename": "gcc/config/sh/rtems.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fsh%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fsh%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Frtems.h?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for rtems targeting a SH using COFF.\n-   Copyright (C) 1997, 1998, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1997, 1998, 2000, 2002 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n \n This file is part of GNU CC.\n@@ -22,13 +22,10 @@ Boston, MA 02111-1307, USA.  */\n /* Specify predefined symbols in preprocessor.  */\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-D__sh__ -Drtems -D__rtems__ \\\n+#define CPP_PREDEFINES \"-D__sh__ -D__rtems__ \\\n   -Asystem=rtems -Acpu=sh -Amachine=sh\"\n \n /* Generate calls to memcpy, memcmp and memset.  */\n #ifndef TARGET_MEM_FUNCTIONS\n #define TARGET_MEM_FUNCTIONS\n #endif\n-\n-/* Get machine-independent configuration parameters for RTEMS.  */\n-#include <rtems.h>"}, {"sha": "552d77a9b6035ad371a9ffea6c53d5a171803667", "filename": "gcc/config/sh/rtemself.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fsh%2Frtemself.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fsh%2Frtemself.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Frtemself.h?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for rtems targeting a SH using elf.\n-   Copyright (C) 1997, 1998, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1997, 1998, 2000, 2002 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n \n This file is part of GNU CC.\n@@ -22,13 +22,10 @@ Boston, MA 02111-1307, USA.  */\n /* Specify predefined symbols in preprocessor.  */\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-D__sh__ -D__ELF__ -Drtems -D__rtems__ \\\n+#define CPP_PREDEFINES \"-D__sh__ -D__ELF__ -D__rtems__ \\\n   -Asystem=rtems -Acpu=sh -Amachine=sh\"\n \n /* Generate calls to memcpy, memcmp and memset.  */\n #ifndef TARGET_MEM_FUNCTIONS\n #define TARGET_MEM_FUNCTIONS\n #endif\n-\n-/* Get machine-independent configuration parameters for RTEMS.  */\n-#include <rtems.h>"}, {"sha": "f6947ea645e2575bb20b03c9d5b2e2f7955eded3", "filename": "gcc/config/sparc/rtems.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fsparc%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fsparc%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Frtems.h?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for rtems targeting a SPARC using a.out.\n-   Copyright (C) 1996, 1997, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 2000, 2002 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n \n This file is part of GNU CC.\n@@ -23,7 +23,7 @@ Boston, MA 02111-1307, USA.  */\n /* Specify predefined symbols in preprocessor.  */\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dsparc -D__GCC_NEW_VARARGS__ -Drtems -D__rtems__ \\\n+#define CPP_PREDEFINES \"-Dsparc -D__GCC_NEW_VARARGS__ -D__rtems__ \\\n   -Asystem=rtems\"\n \n /* Generate calls to memcpy, memcmp and memset.  */"}, {"sha": "6faa9be55f7445ccbd3948aa6da3dd1ef38afc14", "filename": "gcc/config/sparc/rtemself.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fsparc%2Frtemself.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fsparc%2Frtemself.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Frtemself.h?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for rtems targeting a SPARC using ELF.\n-   Copyright (C) 1996, 1997, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 2000, 2002 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n \n This file is part of GNU CC.\n@@ -22,8 +22,8 @@ Boston, MA 02111-1307, USA.  */\n /* Specify predefined symbols in preprocessor.  */\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dsparc -D__GCC_NEW_VARARGS__ -Drtems -D__rtems__ \\\n-  -Asystem=rtems\"\n+#define CPP_PREDEFINES \"-Dsparc -D__GCC_NEW_VARARGS__ -D__rtems__ \\\n+  -D__USE_INIT_FINI__ -Asystem=rtems\"\n \n /* Generate calls to memcpy, memcmp and memset.  */\n #ifndef TARGET_MEM_FUNCTIONS"}, {"sha": "4f49ba6f80474c2a1ccfd16ba37e3cc8503a7c5a", "filename": "gcc/config/v850/rtems.h", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fv850%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fconfig%2Fv850%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Frtems.h?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for rtems targeting a v850 using elf\n-   Copyright (C) 1996, 1997, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 2000, 2002 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n \n This file is part of GNU CC.\n@@ -19,20 +19,13 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include \"v850/v850.h\"\n-\n /* Specify predefined symbols in preprocessor.  */\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-D__v851__ -D__v850 -Drtems \\\n+#define CPP_PREDEFINES \"-D__v851__ -D__v850 -D__rtems__ \\\n   -Asystem=rtems -Acpu=v850 -Amachine=v850\"\n \n /* Generate calls to memcpy, memcmp and memset.  */\n #ifndef TARGET_MEM_FUNCTIONS\n #define TARGET_MEM_FUNCTIONS\n #endif\n-\n-/* Get machine-independent configuration parameters for RTEMS.  */\n-#include <rtems.h>\n-\n-/* end of v850/rtems.h */"}, {"sha": "7a2264b6bfba3048c9016b854f6ebd95f38e9cca", "filename": "gcc/gthr-rtems.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fgthr-rtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/gcc%2Fgthr-rtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-rtems.h?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -1,7 +1,7 @@\n /* RTEMS threads compatibily routines for libgcc2 and libobjc.\n    by: Rosimildo da Silva( rdasilva@connecttel.com ) */\n /* Compile this one with gcc.  */\n-/* Copyright (C) 1997, 1999, 2000 Free Software Foundation, Inc.\n+/* Copyright (C) 1997, 1999, 2000, 2002 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -30,6 +30,9 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #ifndef GCC_GTHR_RTEMS_H\n #define GCC_GTHR_RTEMS_H\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n \n #define __GTHREADS 1\n \n@@ -124,4 +127,8 @@ __gthread_mutex_unlock (__gthread_mutex_t *mutex)\n     return rtems_gxx_mutex_unlock( mutex );\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n #endif /* ! GCC_GTHR_RTEMS_H */"}]}