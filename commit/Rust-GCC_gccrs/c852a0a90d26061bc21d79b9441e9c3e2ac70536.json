{"sha": "c852a0a90d26061bc21d79b9441e9c3e2ac70536", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg1MmEwYTkwZDI2MDYxYmMyMWQ3OWI5NDQxZTljM2UyYWM3MDUzNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-14T13:20:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-14T13:20:51Z"}, "message": "[multiple changes]\n\n2013-10-14  Tristan Gingold  <gingold@adacore.com>\n\n\t* exp_prag.adb (Expand_Pragma_Import_Export_Exception): Fix\n\ttarget type for code of VMS imported exception.\n\t* init.c: Replace Exception_Code by void *.\n\t* s-vmexta.adb (Hash, Base_Code_In): Adjust code after changing\n\tthe type of Exception_Code.\n\n2013-10-14  Vincent Celier  <celier@adacore.com>\n\n\t* prj.ads: Minor comment updates.\n\t* prj-attr.adb: New attribute Library_Rpath_Options.\n\nFrom-SVN: r203544", "tree": {"sha": "25b7f77c7ccd6fe8aacc3ac9861cb7cd9f5d6e8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25b7f77c7ccd6fe8aacc3ac9861cb7cd9f5d6e8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c852a0a90d26061bc21d79b9441e9c3e2ac70536", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c852a0a90d26061bc21d79b9441e9c3e2ac70536", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c852a0a90d26061bc21d79b9441e9c3e2ac70536", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c852a0a90d26061bc21d79b9441e9c3e2ac70536/comments", "author": null, "committer": null, "parents": [{"sha": "cf3b97ef62af198eacdafcbb4c6d24e0591520e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf3b97ef62af198eacdafcbb4c6d24e0591520e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf3b97ef62af198eacdafcbb4c6d24e0591520e7"}], "stats": {"total": 64, "additions": 45, "deletions": 19}, "files": [{"sha": "dcad0df960a15ea581b1e4f8a304d4b86e5bfa50", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c852a0a90d26061bc21d79b9441e9c3e2ac70536/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c852a0a90d26061bc21d79b9441e9c3e2ac70536/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c852a0a90d26061bc21d79b9441e9c3e2ac70536", "patch": "@@ -1,3 +1,16 @@\n+2013-10-14  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* exp_prag.adb (Expand_Pragma_Import_Export_Exception): Fix\n+\ttarget type for code of VMS imported exception.\n+\t* init.c: Replace Exception_Code by void *.\n+\t* s-vmexta.adb (Hash, Base_Code_In): Adjust code after changing\n+\tthe type of Exception_Code.\n+\n+2013-10-14  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj.ads: Minor comment updates.\n+\t* prj-attr.adb: New attribute Library_Rpath_Options.\n+\n 2013-10-14  Robert Dewar  <dewar@adacore.com>\n \n \t* gnat_rm.texi: Library_Level attribute now applies to an"}, {"sha": "0ace377bd8a73036fcd6b0a2a05515b406e3e9b4", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c852a0a90d26061bc21d79b9441e9c3e2ac70536/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c852a0a90d26061bc21d79b9441e9c3e2ac70536/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=c852a0a90d26061bc21d79b9441e9c3e2ac70536", "patch": "@@ -646,7 +646,7 @@ package body Exp_Prag is\n                      --  alias to define the symbol.\n \n                      Code :=\n-                       Unchecked_Convert_To (Standard_A_Char,\n+                       Unchecked_Convert_To (RTE (RE_Address),\n                          Make_Integer_Literal (Loc,\n                            Intval => Exception_Code (Id)));\n "}, {"sha": "8b00dbe201ba9a7a6ada20ef12aba15ef5f064e5", "filename": "gcc/ada/init.c", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c852a0a90d26061bc21d79b9441e9c3e2ac70536/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c852a0a90d26061bc21d79b9441e9c3e2ac70536/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=c852a0a90d26061bc21d79b9441e9c3e2ac70536", "patch": "@@ -430,19 +430,22 @@ __gnat_install_handler (void)\n \n #pragma weak linux_sigaction\n int linux_sigaction (int signum, const struct sigaction *act,\n-\t\t     struct sigaction *oldact) {\n+\t\t     struct sigaction *oldact)\n+{\n   return sigaction (signum, act, oldact);\n }\n #define sigaction(signum, act, oldact) linux_sigaction (signum, act, oldact)\n \n #pragma weak fake_linux_sigfillset\n-void fake_linux_sigfillset (sigset_t *set) {\n+void fake_linux_sigfillset (sigset_t *set)\n+{\n   sigfillset (set);\n }\n #define sigfillset(set) fake_linux_sigfillset (set)\n \n #pragma weak fake_linux_sigemptyset\n-void fake_linux_sigemptyset (sigset_t *set) {\n+void fake_linux_sigemptyset (sigset_t *set)\n+{\n   sigemptyset (set);\n }\n #define sigemptyset(set) fake_linux_sigemptyset (set)\n@@ -580,7 +583,7 @@ __gnat_install_handler (void)\n \n   /* Turn the current Linux task into a native Xenomai task */\n \n-  rt_task_shadow(&main_task, \"environment_task\", prio, T_FPU);\n+  rt_task_shadow (&main_task, \"environment_task\", prio, T_FPU);\n #endif\n \n   /* Set up signal handler to map synchronous signals to appropriate\n@@ -897,10 +900,10 @@ extern struct Exception_Data Layout_Error;\n extern struct Exception_Data Non_Ada_Error;\n \n #define Coded_Exception system__vms_exception_table__coded_exception\n-extern struct Exception_Data *Coded_Exception (Exception_Code);\n+extern struct Exception_Data *Coded_Exception (void *);\n \n #define Base_Code_In system__vms_exception_table__base_code_in\n-extern Exception_Code Base_Code_In (Exception_Code);\n+extern void *Base_Code_In (void *);\n \n /* DEC Ada exceptions are not defined in a header file, so they\n    must be declared.  */\n@@ -1033,8 +1036,7 @@ static const struct cond_except system_cond_except_table [] =\n    should be use with caution since the implementation has been kept\n    very simple.  */\n \n-typedef int\n-resignal_predicate (int code);\n+typedef int resignal_predicate (int code);\n \n static const int * const cond_resignal_table [] =\n {\n@@ -1123,7 +1125,7 @@ copy_msg (struct descriptor_s *msgdesc, char *message)\n /* Scan TABLE for a match for the condition contained in SIGARGS,\n    and return the entry, or the empty entry if no match found.  */\n static const struct cond_except *\n-  scan_conditions ( int *sigargs, const struct cond_except *table [])\n+scan_conditions ( int *sigargs, const struct cond_except *table [])\n {\n   int i;\n   struct cond_except entry;\n@@ -1177,7 +1179,7 @@ __gnat_handle_vms_condition (int *sigargs, void *mechargs)\n {\n   struct Exception_Data *exception = 0;\n   unsigned int needs_adjust = 0;\n-  Exception_Code base_code;\n+  void *base_code;\n   struct descriptor_s gnat_facility = {4, 0, \"GNAT\"};\n   char message [Default_Exception_Msg_Max_Length];\n \n@@ -1196,7 +1198,7 @@ __gnat_handle_vms_condition (int *sigargs, void *mechargs)\n #ifdef IN_RTS\n   /* See if it's an imported exception.  Beware that registered exceptions\n      are bound to their base code, with the severity bits masked off.  */\n-  base_code = Base_Code_In ((Exception_Code) sigargs[1]);\n+  base_code = Base_Code_In ((void *) sigargs[1]);\n   exception = Coded_Exception (base_code);\n #endif\n "}, {"sha": "4f818f8471789ab76154da069e8031d64adbef39", "filename": "gcc/ada/prj-attr.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c852a0a90d26061bc21d79b9441e9c3e2ac70536/gcc%2Fada%2Fprj-attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c852a0a90d26061bc21d79b9441e9c3e2ac70536/gcc%2Fada%2Fprj-attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.adb?ref=c852a0a90d26061bc21d79b9441e9c3e2ac70536", "patch": "@@ -111,6 +111,7 @@ package body Prj.Attr is\n    \"SVlibrary_auto_init#\" &\n    \"LVleading_library_options#\" &\n    \"LVlibrary_options#\" &\n+   \"Lalibrary_rpath_options#\" &\n    \"SVlibrary_src_dir#\" &\n    \"SVlibrary_ali_dir#\" &\n    \"SVlibrary_gcc#\" &"}, {"sha": "95588268f09cea343f823d6e7dea0a26ed6ad320", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c852a0a90d26061bc21d79b9441e9c3e2ac70536/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c852a0a90d26061bc21d79b9441e9c3e2ac70536/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=c852a0a90d26061bc21d79b9441e9c3e2ac70536", "patch": "@@ -675,16 +675,26 @@ package Prj is\n                            Clean_Object_Artifacts       => No_Name_List,\n                            Clean_Source_Artifacts       => No_Name_List);\n \n-   --  The following record ???\n-\n    type Language_Data is record\n       Name          : Name_Id         := No_Name;\n+      --  The name of the language in lower case\n+\n       Display_Name  : Name_Id         := No_Name;\n+      --  The name of the language, as found in attribute Languages\n+\n       Config        : Language_Config := No_Language_Config;\n+      --  Configuration of the language\n+\n       First_Source  : Source_Id       := No_Source;\n+      --  Head of the list of sources of the language in the project\n+\n       Mapping_Files : Mapping_Files_Htable.Instance :=\n                         Mapping_Files_Htable.Nil;\n+      --  Hash table containing the mapping of the sources to their path names\n+\n       Next          : Language_Ptr  := No_Language_Index;\n+      --  Next language of the project\n+\n    end record;\n \n    No_Language_Data : constant Language_Data :=\n@@ -755,8 +765,7 @@ package Prj is\n       --  recursive notation <dir>/** is used in attribute Source_Dirs.\n \n       Language : Language_Ptr := No_Language_Index;\n-      --  Index of the language. This is an index into\n-      --  Project_Tree.Languages_Data.\n+      --  Language of the source\n \n       In_Interfaces : Boolean := True;\n       --  False when the source is not included in interfaces, when attribute\n@@ -1259,7 +1268,6 @@ package Prj is\n \n       Languages : Language_Ptr := No_Language_Index;\n       --  First index of the language data in the project.\n-      --  This is an index into the project_tree_data.languages_data.\n       --  Traversing the list gives access to all the languages supported by\n       --  the project.\n "}, {"sha": "1164ff8994f10fecb2fe20000a87663cc554a5e8", "filename": "gcc/ada/s-vmexta.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c852a0a90d26061bc21d79b9441e9c3e2ac70536/gcc%2Fada%2Fs-vmexta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c852a0a90d26061bc21d79b9441e9c3e2ac70536/gcc%2Fada%2Fs-vmexta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vmexta.adb?ref=c852a0a90d26061bc21d79b9441e9c3e2ac70536", "patch": "@@ -33,6 +33,7 @@\n \n with System.HTable;\n pragma Elaborate_All (System.HTable);\n+with System.Storage_Elements; use System.Storage_Elements;\n \n package body System.VMS_Exception_Table is\n \n@@ -80,7 +81,7 @@ package body System.VMS_Exception_Table is\n      (Code : Exception_Code) return Exception_Code\n    is\n    begin\n-      return Code and not 2#0111#;\n+      return To_Address (To_Integer (Code) and not 2#0111#);\n    end Base_Code_In;\n \n    ---------------------\n@@ -136,7 +137,8 @@ package body System.VMS_Exception_Table is\n         Exception_Code (HTable_Headers'Last - HTable_Headers'First + 1);\n \n    begin\n-      return HTable_Headers (F mod Headers_Magnitude + 1);\n+      return HTable_Headers\n+        (To_Address ((To_Integer (F) mod To_Integer (Headers_Magnitude)) + 1));\n    end Hash;\n \n    ----------------------------"}]}