{"sha": "cd3cd5b19818bb30992ba42ea61da2914a95e393", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QzY2Q1YjE5ODE4YmIzMDk5MmJhNDJlYTYxZGEyOTE0YTk1ZTM5Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-16T12:21:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-16T12:21:37Z"}, "message": "[multiple changes]\n\n2007-08-16  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_ugn.texi: Add note on preprocessing (output file not written)\n\n2007-08-16  Thomas Quinot  <quinot@adacore.com>\n\n\t* a-tags.adb: Minor reformatting.\n\n2007-08-16  Bob Duff  <duff@adacore.com>\n\n\t* sem_type.ads, sem_ch4.adb: Minor reformatting.\n\nFrom-SVN: r127552", "tree": {"sha": "62a76be9e262320e038fea8f8a4d86a3242d5ab0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62a76be9e262320e038fea8f8a4d86a3242d5ab0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd3cd5b19818bb30992ba42ea61da2914a95e393", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd3cd5b19818bb30992ba42ea61da2914a95e393", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd3cd5b19818bb30992ba42ea61da2914a95e393", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd3cd5b19818bb30992ba42ea61da2914a95e393/comments", "author": null, "committer": null, "parents": [{"sha": "a14782e120670dfc4a9c2405b604610cf73317c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a14782e120670dfc4a9c2405b604610cf73317c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a14782e120670dfc4a9c2405b604610cf73317c5"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "0b735be7a443ca4f2d3993fdf4743383daa10bb6", "filename": "gcc/ada/a-tags.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd3cd5b19818bb30992ba42ea61da2914a95e393/gcc%2Fada%2Fa-tags.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd3cd5b19818bb30992ba42ea61da2914a95e393/gcc%2Fada%2Fa-tags.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tags.adb?ref=cd3cd5b19818bb30992ba42ea61da2914a95e393", "patch": "@@ -351,8 +351,8 @@ package body Ada.Tags is\n                   Obj_Base := Obj_Base +\n                     Iface_Table.Ifaces_Table (Id).Offset_To_Top_Value;\n \n-               --  Otherwise we call the function generated by the expander\n-               --  to provide us with this value\n+               --  Otherwise call the function generated by the expander to\n+               --  provide the value.\n \n                else\n                   Obj_Base := Obj_Base +\n@@ -637,11 +637,10 @@ package body Ada.Tags is\n       --  Handle library-level tagged types\n \n       else\n-         --  Make a copy of the string representing the external tag with\n-         --  a null at the end.\n+         --  Make NUL-terminated copy of external tag string\n \n          Ext_Copy (External'Range) := External;\n-         Ext_Copy (Ext_Copy'Last) := ASCII.NUL;\n+         Ext_Copy (Ext_Copy'Last)  := ASCII.NUL;\n          Res := External_Tag_HTable.Get (Ext_Copy'Address);\n       end if;\n "}, {"sha": "b35707e9f812dc9ee6e8ee86413f0f0aff604f4f", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd3cd5b19818bb30992ba42ea61da2914a95e393/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd3cd5b19818bb30992ba42ea61da2914a95e393/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=cd3cd5b19818bb30992ba42ea61da2914a95e393", "patch": "@@ -6855,13 +6855,21 @@ and communicates it to the compiler using this switch.\n @subsection Integrated Preprocessing\n \n @noindent\n-GNAT sources may be preprocessed immediately before compilation; the actual\n+GNAT sources may be preprocessed immediately before compilation.\n+In this case, the actual\n text of the source is not the text of the source file, but is derived from it\n through a process called preprocessing. Integrated preprocessing is specified\n through switches @option{-gnatep} and/or @option{-gnateD}. @option{-gnatep}\n indicates, through a text file, the preprocessing data to be used.\n @option{-gnateD} specifies or modifies the values of preprocessing symbol.\n \n+@noindent\n+Note that when integrated preprocessing is used, the output from the\n+preprocessor is not written to any external file. Instead it is passed\n+internally to the compiler. If you need to preserve the result of\n+preprocessing in a file, then you should use @command{gnatprep}\n+to perform the desired preprocessing in stand-alone mode.\n+\n @noindent\n It is recommended that @command{gnatmake} switch ^-s^/SWITCH_CHECK^ should be\n used when Integrated Preprocessing is used. The reason is that preprocessing"}, {"sha": "6530cb4a1ac0651b84c702d05796cf56a32a19f4", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd3cd5b19818bb30992ba42ea61da2914a95e393/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd3cd5b19818bb30992ba42ea61da2914a95e393/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=cd3cd5b19818bb30992ba42ea61da2914a95e393", "patch": "@@ -1005,10 +1005,10 @@ package body Sem_Ch4 is\n       Analyze_Expression (L);\n       Analyze_Expression (R);\n \n-      --  If the entity is present, the  node appears in an instance,\n-      --  and denotes a predefined concatenation operation. The resulting\n-      --  type is obtained from the arguments when possible. If the arguments\n-      --  are aggregates, the array type and the concatenation type must be\n+      --  If the entity is present, the node appears in an instance, and\n+      --  denotes a predefined concatenation operation. The resulting type is\n+      --  obtained from the arguments when possible. If the arguments are\n+      --  aggregates, the array type and the concatenation type must be\n       --  visible.\n \n       if Present (Op_Id) then"}, {"sha": "d40f441e38bae16114c1812233cfbf1e84d2bc3f", "filename": "gcc/ada/sem_type.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd3cd5b19818bb30992ba42ea61da2914a95e393/gcc%2Fada%2Fsem_type.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd3cd5b19818bb30992ba42ea61da2914a95e393/gcc%2Fada%2Fsem_type.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.ads?ref=cd3cd5b19818bb30992ba42ea61da2914a95e393", "patch": "@@ -53,7 +53,7 @@ package Sem_Type is\n    --  Both these structures are initialized at the beginning of every complete\n    --  context.\n \n-   --  Corresponding to the set of interpretation for a given overloadable\n+   --  Corresponding to the set of interpretations for a given overloadable\n    --  identifier, there is a set of possible types corresponding to the types\n    --  that the overloaded call may return. We keep a 1-to-1 correspondence\n    --  between interpretations and types: for user-defined subprograms the"}]}