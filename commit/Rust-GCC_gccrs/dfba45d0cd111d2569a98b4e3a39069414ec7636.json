{"sha": "dfba45d0cd111d2569a98b4e3a39069414ec7636", "node_id": "C_kwDOANBUbNoAKGRmYmE0NWQwY2QxMTFkMjU2OWE5OGI0ZTNhMzkwNjk0MTRlYzc2MzY", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-11-05T10:44:40Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-11-05T11:12:50Z"}, "message": "When we are resolving TypePaths default the result to ErrorType", "tree": {"sha": "c711d84c33073aaf20a1cabe8c597a1c46fb2efd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c711d84c33073aaf20a1cabe8c597a1c46fb2efd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dfba45d0cd111d2569a98b4e3a39069414ec7636", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfba45d0cd111d2569a98b4e3a39069414ec7636", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfba45d0cd111d2569a98b4e3a39069414ec7636", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfba45d0cd111d2569a98b4e3a39069414ec7636/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57acd1e20828fabe9cfe3b741680f06a1f21251e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57acd1e20828fabe9cfe3b741680f06a1f21251e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57acd1e20828fabe9cfe3b741680f06a1f21251e"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "08734cec4d3a00493aca719f60bf5f56479e9839", "filename": "gcc/rust/typecheck/rust-hir-type-check-type.h", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfba45d0cd111d2569a98b4e3a39069414ec7636/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-type.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfba45d0cd111d2569a98b4e3a39069414ec7636/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-type.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-type.h?ref=dfba45d0cd111d2569a98b4e3a39069414ec7636", "patch": "@@ -62,13 +62,9 @@ class TypeCheckType : public TypeCheckBase\n \t   std::vector<TyTy::SubstitutionParamMapping> *subst_mappings\n \t   = nullptr)\n   {\n-    TypeCheckType resolver (subst_mappings);\n+    TypeCheckType resolver (type->get_mappings ().get_hirid (), subst_mappings);\n     type->accept_vis (resolver);\n-\n-    if (resolver.translated == nullptr)\n-      resolver.translated\n-\t= new TyTy::ErrorType (type->get_mappings ().get_hirid ());\n-\n+    rust_assert (resolver.translated != nullptr);\n     resolver.context->insert_type (type->get_mappings (), resolver.translated);\n     return resolver.translated;\n   }\n@@ -150,8 +146,10 @@ class TypeCheckType : public TypeCheckBase\n   void visit (HIR::TraitObjectType &type) override;\n \n private:\n-  TypeCheckType (std::vector<TyTy::SubstitutionParamMapping> *subst_mappings)\n-    : TypeCheckBase (), subst_mappings (subst_mappings), translated (nullptr)\n+  TypeCheckType (HirId id,\n+\t\t std::vector<TyTy::SubstitutionParamMapping> *subst_mappings)\n+    : TypeCheckBase (), subst_mappings (subst_mappings),\n+      translated (new TyTy::ErrorType (id))\n   {}\n \n   void"}]}