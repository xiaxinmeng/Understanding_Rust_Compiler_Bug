{"sha": "bfd472b2d13bf75b164e6bb63ca0f4e63abacede", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZkNDcyYjJkMTNiZjc1YjE2NGU2YmI2M2NhMGY0ZTYzYWJhY2VkZQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-05-31T19:03:46Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-05-31T19:03:46Z"}, "message": "Add -mabi=n32 support.\n\n(TARGET_DEFAULT, ASM_OUTPUT_INTERNAL_LABEL,\nASM_GENERATE_INTERNAL_LABEL): Delete.\n(MULTILIB_DEFAULTS, ASM_SPEC, EXTRA_SECTION_FUNCTIONS,\nASM_OUTPUT_ALIGNED_LOCAL, STARTFILE_SPEC, ENDFILE_SPEC, LINK_SPEC):\nModify.\n(MIPS_ABI_DEFAULT, LOCAL_LABEL_PREFIX): Define.\n\nFrom-SVN: r12134", "tree": {"sha": "3fac57bfed6a2423e0ec570bdc500ca64c1c4b0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fac57bfed6a2423e0ec570bdc500ca64c1c4b0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfd472b2d13bf75b164e6bb63ca0f4e63abacede", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfd472b2d13bf75b164e6bb63ca0f4e63abacede", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfd472b2d13bf75b164e6bb63ca0f4e63abacede", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfd472b2d13bf75b164e6bb63ca0f4e63abacede/comments", "author": null, "committer": null, "parents": [{"sha": "ade6c319501af907338b8a25d5bbee6e34fbe642", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ade6c319501af907338b8a25d5bbee6e34fbe642", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ade6c319501af907338b8a25d5bbee6e34fbe642"}], "stats": {"total": 52, "additions": 27, "deletions": 25}, "files": [{"sha": "50192000f93253109d546e876a09504434308a03", "filename": "gcc/config/mips/iris6.h", "status": "modified", "additions": 27, "deletions": 25, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd472b2d13bf75b164e6bb63ca0f4e63abacede/gcc%2Fconfig%2Fmips%2Firis6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd472b2d13bf75b164e6bb63ca0f4e63abacede/gcc%2Fconfig%2Fmips%2Firis6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis6.h?ref=bfd472b2d13bf75b164e6bb63ca0f4e63abacede", "patch": "@@ -23,9 +23,9 @@ Boston, MA 02111-1307, USA.  */\n #define PREFERRED_DEBUGGING_TYPE DWARF_DEBUG\n \n /* Default to -mips4.  */\n-#define TARGET_DEFAULT MASK_ABICALLS|MASK_FLOAT64|MASK_64BIT\n #define MIPS_ISA_DEFAULT 4\n-#define MULTILIB_DEFAULTS { \"EB\", \"mips4\" }\n+#define MIPS_ABI_DEFAULT ABI_64\n+#define MULTILIB_DEFAULTS { \"mabi=64\" }\n \n #include \"mips/iris5gas.h\"\n #include \"mips/abi64.h\"\n@@ -36,6 +36,7 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_IDENTIFY_LANGUAGE\n \n /* Irix 5 stuff that we don't need for Irix 6.  */\n+/* ??? We do need this for the -mabi=32 switch though.  */\n #undef ASM_OUTPUT_UNDEF_FUNCTION\n #undef ASM_OUTPUT_EXTERNAL_LIBCALL\n #undef ASM_DECLARE_FUNCTION_SIZE\n@@ -66,6 +67,8 @@ Boston, MA 02111-1307, USA.  */\n #define PUBNAMES_SECTION\t\".debug_pubnames,1,0,0,1\"\n #define ARANGES_SECTION\t\t\".debug_aranges,1,0,0,1\"\n \n+/* ??? If no mabi=X option give, but a mipsX option is, then should depend\n+   on the mipsX option.  */\n #undef ASM_SPEC\n #if ((TARGET_CPU_DEFAULT | TARGET_DEFAULT) & MASK_GAS) != 0\n /* GAS */\n@@ -82,7 +85,8 @@ Boston, MA 02111-1307, USA.  */\n %{gstabs:-g} %{gstabs0:-g0} %{gstabs1:-g1} %{gstabs2:-g2} %{gstabs3:-g3} \\\n %{gstabs+:-g} %{gstabs+0:-g0} %{gstabs+1:-g1} %{gstabs+2:-g2} %{gstabs+3:-g3} \\\n %{gcoff:-g} %{gcoff0:-g0} %{gcoff1:-g1} %{gcoff2:-g2} %{gcoff3:-g3} \\\n-%{membedded-pic}\"\n+%{membedded-pic} \\\n+%{mabi=32: -32}%{mabi=n32: -n32}%{!mabi=32:%{!mabi=n32: -64}}\"\n \n #else\n /* not GAS */\n@@ -98,9 +102,9 @@ Boston, MA 02111-1307, USA.  */\n \t%{K}} \\\n %{G*} %{EB} %{EL} %{v:-show} \\\n %{mips1} %{mips2} %{mips3} %{mips4} \\\n-%{!mips1: %{!mips2: %{!mips3: %{!mips4: -mips4}}}} \\\n %{noasmopt:-O0} %{!noasmopt:%{O:-O2} %{O1:-O2} %{O2:-O2} %{O3:-O3}} \\\n--g0 -G 0 %{membedded-pic}\"\n+-g0 -G 0 %{membedded-pic} \\\n+%{mabi=32: -32}%{mabi=n32: -n32}%{!mabi=32:%{!mabi=n32: -64}}\"\n \n #endif\n \n@@ -154,7 +158,7 @@ rdata_section ()\t\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   if (in_section != in_rdata)\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n-      if (mips_isa >= 3)\t\t\t\t\t\t\\\n+      if (mips_abi != ABI_32)\t\t\t\t\t\t\\\n \tfprintf (asm_out_file, \"%s\\n\", CONST_SECTION_ASM_OP_64);\t\\\n       else\t\t\t\t\t\t\t\t\\\n \tfprintf (asm_out_file, \"%s\\n\", CONST_SECTION_ASM_OP_32);\t\\\n@@ -232,7 +236,7 @@ while (0)\n #define ASM_OUTPUT_ALIGNED_LOCAL(STREAM, NAME, SIZE, ALIGN)\t\\\n do\t\t\t\t\t\t\t\t\\\n   {\t\t\t\t\t\t\t\t\\\n-    if (mips_isa >= 3)\t\t\t\t\t\t\\\n+    if (mips_abi != ABI_32)\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n \tfputs (\"\\t.section\\t.bss\\n\", STREAM);\t\t\t\\\n \tASM_DECLARE_OBJECT_NAME (STREAM, NAME, 0);\t\t\\\n@@ -245,42 +249,40 @@ do\t\t\t\t\t\t\t\t\\\n   }\t\t\t\t\t\t\t\t\\\n while (0)\n \n-#undef ASM_OUTPUT_INTERNAL_LABEL\n-#define ASM_OUTPUT_INTERNAL_LABEL(STREAM,PREFIX,NUM)\t\t\t\\\n-  fprintf (STREAM, \".%s%d:\\n\", PREFIX, NUM)\n+#undef LOCAL_LABEL_PREFIX\n+#define LOCAL_LABEL_PREFIX (mips_abi == ABI_32 ? \"$\" : \".\")\n \n-/* This is how to store into the string LABEL\n-   the symbol_ref name of an internal numbered label where\n-   PREFIX is the class of label and NUM is the number within the class.\n-   This is suitable for output with `assemble_name'.  */\n-\n-#undef ASM_GENERATE_INTERNAL_LABEL\n-#define ASM_GENERATE_INTERNAL_LABEL(LABEL,PREFIX,NUM)\t\t\t\\\n-  sprintf (LABEL, \"*.%s%d\", PREFIX, NUM)\n-\n-#undef STARTFILE_SPEC\n /* Profiling is supported via libprof1.a not -lc_p as in Irix 3.  */\n+/* ??? If no mabi=X option give, but a mipsX option is, then should depend\n+   on the mipsX option.  */\n+#undef STARTFILE_SPEC\n #undef STARTFILE_SPEC\n #define STARTFILE_SPEC \\\n-  \"%{mips1:%{pg:gcrt1.o%s}%{!pg:%{p:mcrt1.o%s libprof1.a%s}%{!p:crt1.o%s}}} \\\n-   %{mips2:%{pg:gcrt1.o%s}%{!pg:%{p:mcrt1.o%s libprof1.a%s}%{!p:crt1.o%s}}} \\\n-   %{!mips1:%{!mips2:%{pg:/usr/lib64/gcrt1.o}%{!pg:%{p:/usr/lib64/mcrt1.o /usr/lib64/libprof1.a}%{!p:/usr/lib64/crt1.o}}}}\"\n+  \"%{mabi=32:%{pg:gcrt1.o%s}%{!pg:%{p:mcrt1.o%s libprof1.a%s}%{!p:crt1.o%s}}} \\\n+   %{mabi=n32:%{pg:/usr/lib32/gcrt1.o%s}%{!pg:%{p:/usr/lib32/mcrt1.o%s /usr/lib32/libprof1.a%s}%{!p:/usr/lib32/crt1.o%s}}} \\\n+   %{!mabi=32:%{!mabi=n32:%{pg:/usr/lib64/gcrt1.o}%{!pg:%{p:/usr/lib64/mcrt1.o /usr/lib64/libprof1.a}%{!p:/usr/lib64/crt1.o}}}}\"\n \n #undef LIB_SPEC\n #define LIB_SPEC \"%{p:libprof1.a%s}%{pg:libprof1.a%s} -lc\"\n \n+/* ??? If no mabi=X option give, but a mipsX option is, then should depend\n+   on the mipsX option.  */\n #undef ENDFILE_SPEC\n #define ENDFILE_SPEC \\\n-  \"%{mips1:crtn.o%s}%{mips2:crtn.o%s}%{!mips1:%{!mips2:/usr/lib64/crtn.o}}\"\n+  \"%{mabi=32:crtn.o%s}%{mabi=n32:/usr/lib32/crtn.o%s}\\\n+   %{!mabi=32:%{!mabi=n32:/usr/lib64/crtn.o}}\"\n \n+/* ??? If no mabi=X option give, but a mipsX option is, then should depend\n+   on the mipsX option.  */\n #undef LINK_SPEC\n #define LINK_SPEC \"\\\n %{G*} %{EB} %{EL} %{mips1} %{mips2} %{mips3} %{mips4} \\\n %{bestGnum} %{shared} %{non_shared} \\\n %{call_shared} %{no_archive} %{exact_version} \\\n %{!shared: %{!non_shared: %{!call_shared: -call_shared -no_unresolved}}} \\\n %{rpath} \\\n--_SYSTYPE_SVR4\"\n+-_SYSTYPE_SVR4 \\\n+%{mabi=32: -32}%{mabi=n32: -n32}%{!mabi=32:%{!mabi=n32: -64}}\"\n \n /* ??? Debugging does not work.  We get many assembler core dumps,\n    and even some linker core dumps.  */"}]}