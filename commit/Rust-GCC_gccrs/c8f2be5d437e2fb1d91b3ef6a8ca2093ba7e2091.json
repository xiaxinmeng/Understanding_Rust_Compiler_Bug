{"sha": "c8f2be5d437e2fb1d91b3ef6a8ca2093ba7e2091", "node_id": "C_kwDOANBUbNoAKGM4ZjJiZTVkNDM3ZTJmYjFkOTFiM2VmNmE4Y2EyMDkzYmE3ZTIwOTE", "commit": {"author": {"name": "Gaius Mulley", "email": "gaiusmod2@gmail.com", "date": "2023-01-15T13:13:40Z"}, "committer": {"name": "Gaius Mulley", "email": "gaiusmod2@gmail.com", "date": "2023-01-15T13:13:40Z"}, "message": "Bugfix to allow testsuite/gm2/pim/pass/arraybool.mod to compile on ppc64le\n\nThis bug is exposed on the ppc64le platform.  The expression\nparser P3Build.bnf (and PHBuild.bnf) BuiltNot omitted to record\nthe current token position on the quad stack.  The patch changes\nall occurances of NEW to newBoolFrame to ensure that the tokenno\nrecorded in the bool frame is set to a sensible value.\nBuildNot is fixed and improved to generate a virtual token\nrecording the position of the subexpression.\n\ngcc/m2/ChangeLog:\n\n\t* gm2-compiler/M2LexBuf.mod (isSrcToken): Add block comment.\n\tRemove dead code.\n\t* gm2-compiler/M2Quads.def (BuildNot): Add notTokPos parameter.\n\t* gm2-compiler/M2Quads.mod (BuildNot): Add notTokPos parameter.\n\tCreate and push virtual token.\n\t(PopBooltok): New procedure.\n\t(PushBooltok): New procedure.\n\t(PushBool): Re-implement using PushBooltok.\n\t(PopBool): Re-implement using PopBooltok.\n\t* gm2-compiler/P3Build.bnf (ConstFactor): Record token\n\tposition of NOT.\n\t(Factor): Record token position\tof NOT.\n\t* gm2-compiler/PHBuild.bnf (ConstFactor): Record token\n\tposition of NOT.\n\t(Relation): Push token position.\n\t(UnaryOrConstTerm): Push token position.\n\t(AddOperator): Push token position.\n\t(MulOperator): Push token position.\n\nSigned-off-by: Gaius Mulley <gaiusmod2@gmail.com>", "tree": {"sha": "e7d1426dfca73568830067d66e4cdb8389adc454", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7d1426dfca73568830067d66e4cdb8389adc454"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8f2be5d437e2fb1d91b3ef6a8ca2093ba7e2091", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8f2be5d437e2fb1d91b3ef6a8ca2093ba7e2091", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8f2be5d437e2fb1d91b3ef6a8ca2093ba7e2091", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8f2be5d437e2fb1d91b3ef6a8ca2093ba7e2091/comments", "author": null, "committer": null, "parents": [{"sha": "4dc4584b6079ac801ed5f0c79d335891821dbb3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dc4584b6079ac801ed5f0c79d335891821dbb3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dc4584b6079ac801ed5f0c79d335891821dbb3b"}], "stats": {"total": 136, "additions": 85, "deletions": 51}, "files": [{"sha": "eaf938c9a321bd4278498d1b9ab5a17ff8da770f", "filename": "gcc/m2/gm2-compiler/M2LexBuf.mod", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8f2be5d437e2fb1d91b3ef6a8ca2093ba7e2091/gcc%2Fm2%2Fgm2-compiler%2FM2LexBuf.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8f2be5d437e2fb1d91b3ef6a8ca2093ba7e2091/gcc%2Fm2%2Fgm2-compiler%2FM2LexBuf.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2LexBuf.mod?ref=c8f2be5d437e2fb1d91b3ef6a8ca2093ba7e2091", "patch": "@@ -1117,7 +1117,8 @@ END PrintTokenNo ;\n \n \n (*\n-   isSrcToken -\n+   isSrcToken - returns TRUE if tokenno is associated with\n+                program source code.\n *)\n \n PROCEDURE isSrcToken (tokenno: CARDINAL) : BOOLEAN ;\n@@ -1138,10 +1139,6 @@ VAR\n    bufLeft, bufRight: TokenBucket ;\n    lc, ll, lr       : location_t ;\n BEGIN\n-   IF FALSE\n-   THEN\n-      RETURN caret\n-   END ;\n    IF isSrcToken (caret) AND isSrcToken (left) AND isSrcToken (right)\n    THEN\n       lc := TokenToLocation (caret) ;"}, {"sha": "797d5fca8b74914d85349976eabe04113bcd53b0", "filename": "gcc/m2/gm2-compiler/M2Quads.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8f2be5d437e2fb1d91b3ef6a8ca2093ba7e2091/gcc%2Fm2%2Fgm2-compiler%2FM2Quads.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8f2be5d437e2fb1d91b3ef6a8ca2093ba7e2091/gcc%2Fm2%2Fgm2-compiler%2FM2Quads.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Quads.def?ref=c8f2be5d437e2fb1d91b3ef6a8ca2093ba7e2091", "patch": "@@ -2064,7 +2064,7 @@ PROCEDURE PopConstructor ;\n                   |------------|          |------------|\n *)\n \n-PROCEDURE BuildNot ;\n+PROCEDURE BuildNot (notTokPos: CARDINAL) ;\n \n \n (*"}, {"sha": "9006f30bb0b4b94e0a3a927e69cf4e6ddcb28599", "filename": "gcc/m2/gm2-compiler/M2Quads.mod", "status": "modified", "additions": 46, "deletions": 17, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8f2be5d437e2fb1d91b3ef6a8ca2093ba7e2091/gcc%2Fm2%2Fgm2-compiler%2FM2Quads.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8f2be5d437e2fb1d91b3ef6a8ca2093ba7e2091/gcc%2Fm2%2Fgm2-compiler%2FM2Quads.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Quads.mod?ref=c8f2be5d437e2fb1d91b3ef6a8ca2093ba7e2091", "patch": "@@ -12872,13 +12872,16 @@ END BuildRelOp ;\n                   |------------|          |------------|\n *)\n \n-PROCEDURE BuildNot ;\n+PROCEDURE BuildNot (notTokPos: CARDINAL) ;\n VAR\n-   t, f: CARDINAL ;\n+   combinedTok,\n+   exprTokPos : CARDINAL ;\n+   t, f       : CARDINAL ;\n BEGIN\n    CheckBooleanId ;\n-   PopBool (t, f) ;\n-   PushBool (f, t)\n+   PopBooltok (t, f, exprTokPos) ;\n+   combinedTok := MakeVirtualTok (notTokPos, notTokPos, exprTokPos) ;\n+   PushBooltok (f, t, combinedTok)\n END BuildNot ;\n \n \n@@ -13662,44 +13665,70 @@ END OperandTtok ;\n \n \n (*\n-   PopBool - Pops a True and a False exit quad number from the True/False\n-             stack.\n+   PopBooltok - Pops a True and a False exit quad number from the True/False\n+                stack.\n *)\n \n-PROCEDURE PopBool (VAR True, False: CARDINAL) ;\n+PROCEDURE PopBooltok (VAR True, False: CARDINAL; VAR tokno: CARDINAL) ;\n VAR\n    f: BoolFrame ;\n BEGIN\n    f := PopAddress (BoolStack) ;\n    WITH f^ DO\n       True := TrueExit ;\n       False := FalseExit ;\n+      tokno := tokenno ;\n       Assert (BooleanOp)\n    END ;\n    DISPOSE (f)\n-END PopBool ;\n+END PopBooltok ;\n \n \n (*\n-   PushBool - Push a True and a False exit quad numbers onto the\n-              True/False stack.\n+   PushBooltok - Push a True and a False exit quad numbers onto the\n+                 True/False stack.\n *)\n \n-PROCEDURE PushBool (True, False: CARDINAL) ;\n+PROCEDURE PushBooltok (True, False: CARDINAL; tokno: CARDINAL) ;\n VAR\n    f: BoolFrame ;\n BEGIN\n-   Assert(True<=NextQuad) ;\n-   Assert(False<=NextQuad) ;\n-   NEW(f) ;\n+   Assert (True<=NextQuad) ;\n+   Assert (False<=NextQuad) ;\n+   f := newBoolFrame () ;\n    WITH f^ DO\n       TrueExit := True ;\n       FalseExit := False ;\n       BooleanOp := TRUE ;\n+      tokenno := tokno ;\n       Annotation := NIL\n    END ;\n    PushAddress (BoolStack, f) ;\n    Annotate ('<q%1d>|<q%2d>||true quad|false quad')\n+END PushBooltok ;\n+\n+\n+(*\n+   PopBool - Pops a True and a False exit quad number from the True/False\n+             stack.\n+*)\n+\n+PROCEDURE PopBool (VAR True, False: CARDINAL) ;\n+VAR\n+   tokno: CARDINAL ;\n+BEGIN\n+   PopBooltok (True, False, tokno)\n+END PopBool ;\n+\n+\n+(*\n+   PushBool - Push a True and a False exit quad numbers onto the\n+              True/False stack.\n+*)\n+\n+PROCEDURE PushBool (True, False: CARDINAL) ;\n+BEGIN\n+   PushBooltok (True, False, UnknownTokenNo)\n END PushBool ;\n \n \n@@ -14571,7 +14600,7 @@ PROCEDURE newBoolFrame () : BoolFrame ;\n VAR\n    f: BoolFrame ;\n BEGIN\n-   NEW(f) ;\n+   NEW (f) ;\n    WITH f^ DO\n       TrueExit   := 0 ;\n       FalseExit  := 0 ;\n@@ -14618,7 +14647,7 @@ BEGIN\n    WITH f^ DO\n       TrueExit := True\n    END ;\n-   PushAddress(BoolStack, f)\n+   PushAddress (BoolStack, f)\n END PushT ;\n \n \n@@ -14630,7 +14659,7 @@ PROCEDURE PopT (VAR True: WORD) ;\n VAR\n    f: BoolFrame ;\n BEGIN\n-   f := PopAddress(BoolStack) ;\n+   f := PopAddress (BoolStack) ;\n    WITH f^ DO\n       True := TrueExit ;\n       Assert(NOT BooleanOp)"}, {"sha": "9b2e8421a26fa57afa39ef22cbc999f5653989b0", "filename": "gcc/m2/gm2-compiler/P3Build.bnf", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8f2be5d437e2fb1d91b3ef6a8ca2093ba7e2091/gcc%2Fm2%2Fgm2-compiler%2FP3Build.bnf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8f2be5d437e2fb1d91b3ef6a8ca2093ba7e2091/gcc%2Fm2%2Fgm2-compiler%2FP3Build.bnf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FP3Build.bnf?ref=c8f2be5d437e2fb1d91b3ef6a8ca2093ba7e2091", "patch": "@@ -723,8 +723,10 @@ MulOperator := \"*\"                                                         % Pus\n                                                                              RecordOp %\n             =:\n \n-ConstFactor := Number | ConstString | ConstSetOrQualidentOrFunction |\n-               \"(\" ConstExpression \")\" | \"NOT\" ConstFactor                 % BuildNot %\n+ConstFactor :=                                                             % VAR tokpos: CARDINAL ; %\n+               Number | ConstString | ConstSetOrQualidentOrFunction |\n+               \"(\" ConstExpression \")\" | \"NOT\"                             % tokpos := GetTokenNo() -1 %\n+                                               ConstFactor                 % BuildNot (tokpos) %\n                | ConstAttribute =:\n \n -- to help satisfy LL1\n@@ -1087,11 +1089,14 @@ UnaryOrTerm := \"+\"                                                         % Pus\n                  Term                                                      % BuildUnaryOp %\n                | Term =:\n \n-Term := Factor { MulOperator Factor                                        % BuildBinaryOp %\n+Term := Factor\n+               { MulOperator Factor                                        % BuildBinaryOp %\n                } =:\n \n-Factor := Number | string | SetOrDesignatorOrFunction |\n-          \"(\" Expression \")\" | \"NOT\" ( Factor                              % BuildNot %\n+Factor :=                                                                  % VAR tokpos: CARDINAL ; %\n+          Number | string | SetOrDesignatorOrFunction |\n+          \"(\" Expression \")\" | \"NOT\"                                       % tokpos := GetTokenNo ()-1 %\n+                                     ( Factor                              % BuildNot (tokpos) %\n           | ConstAttribute\n                                 ) =:\n "}, {"sha": "1abcec46f34280c82a4f2e69939df70f446096a1", "filename": "gcc/m2/gm2-compiler/PHBuild.bnf", "status": "modified", "additions": 26, "deletions": 23, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8f2be5d437e2fb1d91b3ef6a8ca2093ba7e2091/gcc%2Fm2%2Fgm2-compiler%2FPHBuild.bnf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8f2be5d437e2fb1d91b3ef6a8ca2093ba7e2091/gcc%2Fm2%2Fgm2-compiler%2FPHBuild.bnf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FPHBuild.bnf?ref=c8f2be5d437e2fb1d91b3ef6a8ca2093ba7e2091", "patch": "@@ -53,7 +53,8 @@ FROM M2Printf IMPORT printf0 ;\n FROM M2Debug IMPORT Assert ;\n FROM P2SymBuild IMPORT BuildString, BuildNumber ;\n \n-FROM M2Quads IMPORT PushT, PopT, PushTF, PopTF, PopNothing, PushTFtok, PopTFtok, PopTtok,\n+FROM M2Quads IMPORT PushT, PopT, PushTF, PopTF, PopNothing, Annotate,\n+                    PushTtok, PushTFtok, PopTtok, PopTFtok, OperandTok,\n                     StartBuildDefFile, StartBuildModFile,\n                     BuildModuleStart,\n                     EndBuildFile,\n@@ -630,56 +631,58 @@ ConstExpression :=                                                         % VAR\n                                    ]                                       % PopAuto %\n                 =:\n \n-Relation := \"=\"                                                            % PushT(EqualTok) %\n-            | \"#\"                                                          % PushT(HashTok) %\n-            | \"<>\"                                                         % PushT(LessGreaterTok) %\n-            | \"<\"                                                          % PushT(LessTok) %\n-            | \"<=\"                                                         % PushT(LessEqualTok) %\n-            | \">\"                                                          % PushT(GreaterTok) %\n-            | \">=\"                                                         % PushT(GreaterEqualTok) %\n-            | \"IN\"                                                         % PushT(InTok) %\n+Relation := \"=\"                                                            % PushTtok(EqualTok, GetTokenNo() -1) %\n+            | \"#\"                                                          % PushTtok(HashTok, GetTokenNo() -1) %\n+            | \"<>\"                                                         % PushTtok(LessGreaterTok, GetTokenNo() -1) %\n+            | \"<\"                                                          % PushTtok(LessTok, GetTokenNo() -1) %\n+            | \"<=\"                                                         % PushTtok(LessEqualTok, GetTokenNo() -1) %\n+            | \">\"                                                          % PushTtok(GreaterTok, GetTokenNo() -1) %\n+            | \">=\"                                                         % PushTtok(GreaterEqualTok, GetTokenNo() -1) %\n+            | \"IN\"                                                         % PushTtok(InTok, GetTokenNo() -1) %\n          =:\n \n SimpleConstExpr := UnaryOrConstTerm { AddOperator ConstTerm                % BuildBinaryOp %\n                                     } =:\n \n-UnaryOrConstTerm := \"+\"                                                    % PushT(PlusTok) %\n+UnaryOrConstTerm := \"+\"                                                    % PushTtok(PlusTok, GetTokenNo() -1) %\n                     ConstTerm                                              % BuildUnaryOp %\n                     |\n-                    \"-\"                                                    % PushT(MinusTok) %\n+                    \"-\"                                                    % PushTtok(MinusTok, GetTokenNo() -1) %\n                     ConstTerm                                              % BuildUnaryOp %\n                     |\n                     ConstTerm =:\n \n-AddOperator :=   \"+\"                                                       % PushT(PlusTok) ;\n+AddOperator :=   \"+\"                                                       % PushTtok(PlusTok, GetTokenNo() -1) ;\n                                                                              RecordOp %\n-               | \"-\"                                                       % PushT(MinusTok) ;\n+               | \"-\"                                                       % PushTtok(MinusTok, GetTokenNo() -1) ;\n                                                                              RecordOp %\n-               | \"OR\"                                                      % PushT(OrTok) ;\n+               | \"OR\"                                                      % PushTtok(OrTok, GetTokenNo() -1) ;\n                                                                              RecordOp %\n             =:\n \n ConstTerm := ConstFactor { MulOperator ConstFactor                         % BuildBinaryOp %\n                          } =:\n \n-MulOperator := \"*\"                                                         % PushT(TimesTok) ;\n+MulOperator := \"*\"                                                         % PushTtok(TimesTok, GetTokenNo() -1) ;\n                                                                              RecordOp %\n-               | \"/\"                                                       % PushT(DivideTok) ;\n+               | \"/\"                                                       % PushTtok(DivideTok, GetTokenNo() -1) ;\n                                                                              RecordOp %\n-               | \"DIV\"                                                     % PushT(DivTok) ;\n+               | \"DIV\"                                                     % PushTtok(DivTok, GetTokenNo() -1) ;\n                                                                              RecordOp %\n-               | \"MOD\"                                                     % PushT(ModTok) ;\n+               | \"MOD\"                                                     % PushTtok(ModTok, GetTokenNo() -1) ;\n                                                                              RecordOp %\n-               | \"REM\"                                                     % PushT(RemTok) ;\n+               | \"REM\"                                                     % PushTtok(RemTok, GetTokenNo() -1) ;\n                                                                              RecordOp %\n-               | \"AND\"                                                     % PushT(AndTok) ;\n+               | \"AND\"                                                     % PushTtok(AndTok, GetTokenNo() -1) ;\n                                                                              RecordOp %\n-               | \"&\"                                                       % PushT(AmbersandTok) ;\n+               | \"&\"                                                       % PushTtok(AmbersandTok, GetTokenNo() -1) ;\n                                                                              RecordOp %\n             =:\n \n-ConstFactor := Number | ConstString | ConstSetOrQualidentOrFunction |\n-               \"(\" ConstExpression \")\" | \"NOT\" ConstFactor                 % BuildNot %\n+ConstFactor :=                                                             % VAR tokpos: CARDINAL ; %\n+               Number | ConstString | ConstSetOrQualidentOrFunction |\n+               \"(\" ConstExpression \")\" | \"NOT\"                             % tokpos := GetTokenNo() -1 %\n+                                               ConstFactor                 % BuildNot (tokpos) %\n                | ConstAttribute =:\n \n -- to help satisfy LL1"}]}