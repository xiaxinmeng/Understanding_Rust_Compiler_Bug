{"sha": "0179520a83329a8daefcbb87c2609035694b928a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE3OTUyMGE4MzMyOWE4ZGFlZmNiYjg3YzI2MDkwMzU2OTRiOTI4YQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-03-23T09:52:00Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-03-23T09:52:00Z"}, "message": "re PR tree-optimization/70354 (Wrong code with -O3 -march=broadwell and -march=skylake-avx512.)\n\n\tPR tree-optimization/70354\n\t* tree-vect-patterns.c (vect_recog_vector_vector_shift_pattern): If\n\toprnd0 is wider than oprnd1 and there is a cast from the wider\n\ttype to oprnd1, mask it with the mask of the narrower type.\n\n\t* gcc.dg/vect/pr70354-1.c: New test.\n\t* gcc.dg/vect/pr70354-2.c: New test.\n\t* gcc.target/i386/avx2-pr70354-1.c: New test.\n\t* gcc.target/i386/avx2-pr70354-2.c: New test.\n\nFrom-SVN: r234417", "tree": {"sha": "81cdf9580ade688ff98c3006438d128e3cc6f686", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81cdf9580ade688ff98c3006438d128e3cc6f686"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0179520a83329a8daefcbb87c2609035694b928a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0179520a83329a8daefcbb87c2609035694b928a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0179520a83329a8daefcbb87c2609035694b928a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0179520a83329a8daefcbb87c2609035694b928a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7da7269a693f7bb2c3728002dd88b51e3ffa2f8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7da7269a693f7bb2c3728002dd88b51e3ffa2f8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7da7269a693f7bb2c3728002dd88b51e3ffa2f8b"}], "stats": {"total": 147, "additions": 146, "deletions": 1}, "files": [{"sha": "9a1eb039d880cf6ce6bc303ef32e5df3c22503bf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0179520a83329a8daefcbb87c2609035694b928a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0179520a83329a8daefcbb87c2609035694b928a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0179520a83329a8daefcbb87c2609035694b928a", "patch": "@@ -1,5 +1,10 @@\n 2016-03-23  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/70354\n+\t* tree-vect-patterns.c (vect_recog_vector_vector_shift_pattern): If\n+\toprnd0 is wider than oprnd1 and there is a cast from the wider\n+\ttype to oprnd1, mask it with the mask of the narrower type.\n+\n \tPR target/70321\n \t* config/i386/i386.md (*anddi3_doubleword, *<code>di3_doubleword):\n \tOptimize TARGET_STV splitters, if high or low word of last argument"}, {"sha": "f9c6de25ed9d07580c4d94cc6bc4fca61dfe6423", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0179520a83329a8daefcbb87c2609035694b928a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0179520a83329a8daefcbb87c2609035694b928a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0179520a83329a8daefcbb87c2609035694b928a", "patch": "@@ -1,3 +1,11 @@\n+2016-03-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/70354\n+\t* gcc.dg/vect/pr70354-1.c: New test.\n+\t* gcc.dg/vect/pr70354-2.c: New test.\n+\t* gcc.target/i386/avx2-pr70354-1.c: New test.\n+\t* gcc.target/i386/avx2-pr70354-2.c: New test.\n+\n 2016-03-22  Jeff Law  <law@redhat.com>\n \n \tPR target/70232"}, {"sha": "70de8119a298eb1d4b763931ca0dc7e59c75dfac", "filename": "gcc/testsuite/gcc.dg/vect/pr70354-1.c", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0179520a83329a8daefcbb87c2609035694b928a/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr70354-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0179520a83329a8daefcbb87c2609035694b928a/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr70354-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr70354-1.c?ref=0179520a83329a8daefcbb87c2609035694b928a", "patch": "@@ -0,0 +1,50 @@\n+/* PR tree-optimization/70354 */\n+/* { dg-do run } */\n+\n+#ifndef main\n+#include \"tree-vect.h\"\n+#endif\n+\n+long long int b[64], c[64], g[64];\n+unsigned long long int a[64], d[64], e[64], f[64], h[64];\n+\n+__attribute__ ((noinline, noclone)) void\n+foo (void)\n+{\n+  int i;\n+  for (i = 0; i < 64; i++)\n+    {\n+      d[i] = h[i] << (((((unsigned long long int) b[i] * e[i])\n+\t\t\t<< (-a[i] - 3752448776177690134ULL))\n+\t\t       - 8214565720323784703ULL) - 1ULL);\n+      e[i] = (_Bool) (f[i] + (unsigned long long int) g[i]);\n+      g[i] = c[i];\n+    }\n+}\n+\n+int\n+main ()\n+{\n+  int i;\n+#ifndef main\n+  check_vect ();\n+#endif\n+  if (__CHAR_BIT__ != 8 || sizeof (long long int) != 8)\n+    return 0;\n+  for (i = 0; i < 64; ++i)\n+    {\n+      a[i] = 14694295297531861425ULL;\n+      b[i] = -1725558902283030715LL;\n+      c[i] = 4402992416302558097LL;\n+      e[i] = 6297173129107286501ULL;\n+      f[i] = 13865724171235650855ULL;\n+      g[i] = 982871027473857427LL;\n+      h[i] = 8193845517487445944ULL;\n+    }\n+  foo ();\n+  for (i = 0; i < 64; i++)\n+    if (d[i] != 8193845517487445944ULL || e[i] != 1\n+\t|| g[i] != 4402992416302558097ULL)\n+      abort ();\n+  return 0;\n+}"}, {"sha": "356a1152d0c7d2972ab4544241c2c493afd54cd3", "filename": "gcc/testsuite/gcc.dg/vect/pr70354-2.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0179520a83329a8daefcbb87c2609035694b928a/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr70354-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0179520a83329a8daefcbb87c2609035694b928a/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr70354-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr70354-2.c?ref=0179520a83329a8daefcbb87c2609035694b928a", "patch": "@@ -0,0 +1,37 @@\n+/* PR tree-optimization/70354 */\n+/* { dg-do run } */\n+\n+#ifndef main\n+#include \"tree-vect.h\"\n+#endif\n+\n+unsigned long long a[64], b[64];\n+\n+__attribute__((noinline, noclone)) void\n+foo (void)\n+{\n+  int i;\n+  for (i = 0; i < 64; i++)\n+    a[i] <<= (b[i] - 0x1200000000ULL);\n+}\n+\n+int\n+main ()\n+{\n+  int i;\n+#ifndef main\n+  check_vect ();\n+#endif\n+  if (__CHAR_BIT__ != 8 || sizeof (long long int) != 8)\n+    return 0;\n+  for (i = 0; i < 64; i++)\n+    {\n+      a[i] = 0x1234ULL;\n+      b[i] = 0x1200000000ULL + (i % 54);\n+    }\n+  foo ();\n+  for (i = 0; i < 64; i++)\n+    if (a[i] != (0x1234ULL << (i % 54)))\n+      abort ();\n+  return 0;\n+}"}, {"sha": "d2d9b83d924306d76dee87981b2b92877089b040", "filename": "gcc/testsuite/gcc.target/i386/avx2-pr70354-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0179520a83329a8daefcbb87c2609035694b928a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-pr70354-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0179520a83329a8daefcbb87c2609035694b928a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-pr70354-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-pr70354-1.c?ref=0179520a83329a8daefcbb87c2609035694b928a", "patch": "@@ -0,0 +1,16 @@\n+/* PR tree-optimization/70354 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ftree-vectorize -mavx2\" } */\n+/* { dg-require-effective-target avx2 } */\n+\n+#include \"avx2-check.h\"\n+\n+#define main() do_main ()\n+\n+#include \"../../gcc.dg/vect/pr70354-1.c\"\n+\n+static void\n+avx2_test (void)\n+{\n+  do_main ();\n+}"}, {"sha": "709a51bcb8cb23e19ad7836fa9904a92ca5f50aa", "filename": "gcc/testsuite/gcc.target/i386/avx2-pr70354-2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0179520a83329a8daefcbb87c2609035694b928a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-pr70354-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0179520a83329a8daefcbb87c2609035694b928a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-pr70354-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-pr70354-2.c?ref=0179520a83329a8daefcbb87c2609035694b928a", "patch": "@@ -0,0 +1,16 @@\n+/* PR tree-optimization/70354 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ftree-vectorize -mavx2\" } */\n+/* { dg-require-effective-target avx2 } */\n+\n+#include \"avx2-check.h\"\n+\n+#define main() do_main ()\n+\n+#include \"../../gcc.dg/vect/pr70354-2.c\"\n+\n+static void\n+avx2_test (void)\n+{\n+  do_main ();\n+}"}, {"sha": "27080d28a1d639fb83172d6eba4ec8eb8e683ee5", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0179520a83329a8daefcbb87c2609035694b928a/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0179520a83329a8daefcbb87c2609035694b928a/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=0179520a83329a8daefcbb87c2609035694b928a", "patch": "@@ -2097,7 +2097,20 @@ vect_recog_vector_vector_shift_pattern (vec<gimple *> *stmts,\n       if (TYPE_MODE (TREE_TYPE (rhs1)) == TYPE_MODE (TREE_TYPE (oprnd0))\n \t  && TYPE_PRECISION (TREE_TYPE (rhs1))\n \t     == TYPE_PRECISION (TREE_TYPE (oprnd0)))\n-\tdef = rhs1;\n+\t{\n+\t  if (TYPE_PRECISION (TREE_TYPE (oprnd1))\n+\t      >= TYPE_PRECISION (TREE_TYPE (rhs1)))\n+\t    def = rhs1;\n+\t  else\n+\t    {\n+\t      tree mask\n+\t\t= build_low_bits_mask (TREE_TYPE (rhs1),\n+\t\t\t\t       TYPE_PRECISION (TREE_TYPE (oprnd1)));\n+\t      def = vect_recog_temp_ssa_var (TREE_TYPE (rhs1), NULL);\n+\t      def_stmt = gimple_build_assign (def, BIT_AND_EXPR, rhs1, mask);\n+\t      new_pattern_def_seq (stmt_vinfo, def_stmt);\n+\t    }\n+\t}\n     }\n \n   if (def == NULL_TREE)"}]}