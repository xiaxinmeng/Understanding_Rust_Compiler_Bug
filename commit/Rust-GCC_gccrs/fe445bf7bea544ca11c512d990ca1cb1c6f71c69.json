{"sha": "fe445bf7bea544ca11c512d990ca1cb1c6f71c69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU0NDViZjdiZWE1NDRjYTExYzUxMmQ5OTBjYTFjYjFjNmY3MWM2OQ==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-10-16T19:16:59Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-10-16T19:16:59Z"}, "message": "re PR fortran/50547 (dummy procedure argument of PURE shall be PURE)\n\n2011-10-16  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/50547\n\t* resolve.c (resolve_formal_arglist): Remove unneeded error message.\n\tSome reshuffling.\n\n2011-10-16  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/50547\n\t* gfortran.dg/elemental_args_check_4.f90: New.\n\nFrom-SVN: r180061", "tree": {"sha": "c30b2e718c98ffe8ba914ec7e55473d665d3d68e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c30b2e718c98ffe8ba914ec7e55473d665d3d68e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe445bf7bea544ca11c512d990ca1cb1c6f71c69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe445bf7bea544ca11c512d990ca1cb1c6f71c69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe445bf7bea544ca11c512d990ca1cb1c6f71c69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe445bf7bea544ca11c512d990ca1cb1c6f71c69/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aede122782e489f97b367e786ad56487b790a4ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aede122782e489f97b367e786ad56487b790a4ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aede122782e489f97b367e786ad56487b790a4ee"}], "stats": {"total": 147, "additions": 79, "deletions": 68}, "files": [{"sha": "a6be321f2c52721d6b40c8c1ddc72584c06acbdb", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe445bf7bea544ca11c512d990ca1cb1c6f71c69/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe445bf7bea544ca11c512d990ca1cb1c6f71c69/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=fe445bf7bea544ca11c512d990ca1cb1c6f71c69", "patch": "@@ -1,3 +1,9 @@\n+2011-10-16  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/50547\n+\t* resolve.c (resolve_formal_arglist): Remove unneeded error message.\n+\tSome reshuffling.\n+\n 2011-10-15  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.texi (Fortran 2008 status, TS 29113 status,"}, {"sha": "9b76f98a562d671308abc5250705b6c65e7cdc00", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 56, "deletions": 68, "changes": 124, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe445bf7bea544ca11c512d990ca1cb1c6f71c69/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe445bf7bea544ca11c512d990ca1cb1c6f71c69/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=fe445bf7bea544ca11c512d990ca1cb1c6f71c69", "patch": "@@ -269,50 +269,18 @@ resolve_formal_arglist (gfc_symbol *proc)\n       if (sym->attr.if_source != IFSRC_UNKNOWN)\n \tresolve_formal_arglist (sym);\n \n-      /* F08:C1279.  */\n-      if (gfc_pure (proc)\n-\t  && sym->attr.flavor == FL_PROCEDURE && !gfc_pure (sym))\n+      if (sym->attr.subroutine || sym->attr.external)\n \t{\n-\t  gfc_error (\"Dummy procedure '%s' of PURE procedure at %L must \"\n-\t\t     \"also be PURE\", sym->name, &sym->declared_at);\n-\t  continue;\n+\t  if (sym->attr.flavor == FL_UNKNOWN)\n+\t    gfc_add_flavor (&sym->attr, FL_PROCEDURE, sym->name, &sym->declared_at);\n \t}\n-      \n-      if (sym->attr.subroutine || sym->attr.external || sym->attr.intrinsic)\n+      else\n \t{\n-\t  if (proc->attr.implicit_pure && !gfc_pure(sym))\n-\t    proc->attr.implicit_pure = 0;\n-\n-\t  /* F08:C1289.  */\n-\t  if (gfc_elemental (proc))\n-\t    {\n-\t      gfc_error (\"Dummy procedure at %L not allowed in ELEMENTAL \"\n-\t\t\t \"procedure\", &sym->declared_at);\n-\t      continue;\n-\t    }\n-\n-\t  if (sym->attr.function\n-\t\t&& sym->ts.type == BT_UNKNOWN\n-\t\t&& sym->attr.intrinsic)\n-\t    {\n-\t      gfc_intrinsic_sym *isym;\n-\t      isym = gfc_find_function (sym->name);\n-\t      if (isym == NULL || !isym->specific)\n-\t\t{\n-\t\t  gfc_error (\"Unable to find a specific INTRINSIC procedure \"\n-\t\t\t     \"for the reference '%s' at %L\", sym->name,\n-\t\t\t     &sym->declared_at);\n-\t\t}\n-\t      sym->ts = isym->ts;\n-\t    }\n-\n-\t  continue;\n+\t  if (sym->ts.type == BT_UNKNOWN && !proc->attr.intrinsic\n+\t      && (!sym->attr.function || sym->result == sym))\n+\t    gfc_set_default_type (sym, 1, sym->ns);\n \t}\n \n-      if (sym->ts.type == BT_UNKNOWN && !proc->attr.intrinsic\n-\t  && (!sym->attr.function || sym->result == sym))\n-\tgfc_set_default_type (sym, 1, sym->ns);\n-\n       gfc_resolve_array_spec (sym->as, 0);\n \n       /* We can't tell if an array with dimension (:) is assumed or deferred\n@@ -343,44 +311,64 @@ resolve_formal_arglist (gfc_symbol *proc)\n       if (sym->attr.flavor == FL_UNKNOWN)\n \tgfc_add_flavor (&sym->attr, FL_VARIABLE, sym->name, &sym->declared_at);\n \n-      if (gfc_pure (proc) && !sym->attr.pointer\n-\t  && sym->attr.flavor != FL_PROCEDURE)\n+      if (gfc_pure (proc))\n \t{\n-\t  if (proc->attr.function && sym->attr.intent != INTENT_IN)\n+\t  if (sym->attr.flavor == FL_PROCEDURE)\n \t    {\n-\t      if (sym->attr.value)\n-\t\tgfc_notify_std (GFC_STD_F2008, \"Fortran 2008: Argument '%s' \"\n-\t\t\t\t\"of pure function '%s' at %L with VALUE \"\n-\t\t\t\t\"attribute but without INTENT(IN)\", sym->name,\n-\t\t\t\tproc->name, &sym->declared_at);\n-\t      else\n-\t\tgfc_error (\"Argument '%s' of pure function '%s' at %L must be \"\n-\t\t\t   \"INTENT(IN) or VALUE\", sym->name, proc->name,\n-\t\t\t   &sym->declared_at);\n+\t      /* F08:C1279.  */\n+\t      if (!gfc_pure (sym))\n+\t\t{\n+\t\t  gfc_error (\"Dummy procedure '%s' of PURE procedure at %L must \"\n+\t\t\t    \"also be PURE\", sym->name, &sym->declared_at);\n+\t\t  continue;\n+\t\t}\n \t    }\n-\n-\t  if (proc->attr.subroutine && sym->attr.intent == INTENT_UNKNOWN)\n+\t  else if (!sym->attr.pointer)\n \t    {\n-\t      if (sym->attr.value)\n-\t\tgfc_notify_std (GFC_STD_F2008, \"Fortran 2008: Argument '%s' \"\n-\t\t\t\t\"of pure subroutine '%s' at %L with VALUE \"\n-\t\t\t\t\"attribute but without INTENT\", sym->name,\n-\t\t\t\tproc->name, &sym->declared_at);\n-\t      else\n-\t\tgfc_error (\"Argument '%s' of pure subroutine '%s' at %L must \"\n-\t\t       \"have its INTENT specified or have the VALUE \"\n-\t\t       \"attribute\", sym->name, proc->name, &sym->declared_at);\n+\t      if (proc->attr.function && sym->attr.intent != INTENT_IN)\n+\t\t{\n+\t\t  if (sym->attr.value)\n+\t\t    gfc_notify_std (GFC_STD_F2008, \"Fortran 2008: Argument '%s'\"\n+\t\t\t\t    \" of pure function '%s' at %L with VALUE \"\n+\t\t\t\t    \"attribute but without INTENT(IN)\",\n+\t\t\t\t    sym->name, proc->name, &sym->declared_at);\n+\t\t  else\n+\t\t    gfc_error (\"Argument '%s' of pure function '%s' at %L must \"\n+\t\t\t       \"be INTENT(IN) or VALUE\", sym->name, proc->name,\n+\t\t\t       &sym->declared_at);\n+\t\t}\n+\n+\t      if (proc->attr.subroutine && sym->attr.intent == INTENT_UNKNOWN)\n+\t\t{\n+\t\t  if (sym->attr.value)\n+\t\t    gfc_notify_std (GFC_STD_F2008, \"Fortran 2008: Argument '%s'\"\n+\t\t\t\t    \" of pure subroutine '%s' at %L with VALUE \"\n+\t\t\t\t    \"attribute but without INTENT\", sym->name,\n+\t\t\t\t    proc->name, &sym->declared_at);\n+\t\t  else\n+\t\t    gfc_error (\"Argument '%s' of pure subroutine '%s' at %L \"\n+\t\t\t       \"must have its INTENT specified or have the \"\n+\t\t\t       \"VALUE attribute\", sym->name, proc->name,\n+\t\t\t       &sym->declared_at);\n+\t\t}\n \t    }\n \t}\n \n-      if (proc->attr.implicit_pure && !sym->attr.pointer\n-\t  && sym->attr.flavor != FL_PROCEDURE)\n+      if (proc->attr.implicit_pure)\n \t{\n-\t  if (proc->attr.function && sym->attr.intent != INTENT_IN)\n-\t    proc->attr.implicit_pure = 0;\n+\t  if (sym->attr.flavor == FL_PROCEDURE)\n+\t    {\n+\t      if (!gfc_pure(sym))\n+\t\tproc->attr.implicit_pure = 0;\n+\t    }\n+\t  else if (!sym->attr.pointer)\n+\t    {\n+\t      if (proc->attr.function && sym->attr.intent != INTENT_IN)\n+\t\tproc->attr.implicit_pure = 0;\n \n-\t  if (proc->attr.subroutine && sym->attr.intent == INTENT_UNKNOWN)\n-\t    proc->attr.implicit_pure = 0;\n+\t      if (proc->attr.subroutine && sym->attr.intent == INTENT_UNKNOWN)\n+\t\tproc->attr.implicit_pure = 0;\n+\t    }\n \t}\n \n       if (gfc_elemental (proc))"}, {"sha": "9900074e0aa095c730148793e0cf70c2e560c4a2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe445bf7bea544ca11c512d990ca1cb1c6f71c69/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe445bf7bea544ca11c512d990ca1cb1c6f71c69/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fe445bf7bea544ca11c512d990ca1cb1c6f71c69", "patch": "@@ -1,3 +1,8 @@\n+2011-10-16  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/50547\n+\t* gfortran.dg/elemental_args_check_4.f90: New.\n+\n 2011-10-16  Ira Rosen  <ira.rosen@linaro.org>\n \n \tPR tree-optimization/50727"}, {"sha": "2c50f58de2d9db1e88a1866b302714ca32533fe8", "filename": "gcc/testsuite/gfortran.dg/elemental_args_check_4.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe445bf7bea544ca11c512d990ca1cb1c6f71c69/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_args_check_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe445bf7bea544ca11c512d990ca1cb1c6f71c69/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_args_check_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_args_check_4.f90?ref=fe445bf7bea544ca11c512d990ca1cb1c6f71c69", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do compile }\n+!\n+! PR 50547: dummy procedure argument of PURE shall be PURE\n+!\n+! Contributed by Janus Weil <janus@gcc.gnu.org>\n+\n+elemental function fun (sub)\n+  interface\n+    pure subroutine sub  ! { dg-error \"not allowed in elemental procedure\" }\n+    end subroutine\n+  end interface\n+end function"}]}