{"sha": "0e1d7f3250b8a658688453eeb5f206d0f9e6d2a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGUxZDdmMzI1MGI4YTY1ODY4ODQ1M2VlYjVmMjA2ZDBmOWU2ZDJhMg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2004-02-19T18:50:57Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2004-02-19T18:50:57Z"}, "message": "md.texi (Standard Names): Document additional dependency on fix pattern.\n\n2004-02-19  Aldy Hernandez  <aldyh@redhat.com>\n\n        * doc/md.texi (Standard Names): Document additional dependency on\n        fix pattern.\n\n        * optabs.c (ftruncify): Remove.\n        (expand_fix): Manually inline ftruncify above.\n        (can_fix_p): Add FIXME note.\n\nFrom-SVN: r78116", "tree": {"sha": "be89e4c0e2565b25b32a59e6188690809c53b427", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be89e4c0e2565b25b32a59e6188690809c53b427"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e1d7f3250b8a658688453eeb5f206d0f9e6d2a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e1d7f3250b8a658688453eeb5f206d0f9e6d2a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e1d7f3250b8a658688453eeb5f206d0f9e6d2a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e1d7f3250b8a658688453eeb5f206d0f9e6d2a2/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c6e9f0ebd9e10ae5ef71a57968cc034f901a4e25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6e9f0ebd9e10ae5ef71a57968cc034f901a4e25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6e9f0ebd9e10ae5ef71a57968cc034f901a4e25"}], "stats": {"total": 33, "additions": 22, "deletions": 11}, "files": [{"sha": "0c8a7d2728c3ce4accc04064344b887442e067d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e1d7f3250b8a658688453eeb5f206d0f9e6d2a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e1d7f3250b8a658688453eeb5f206d0f9e6d2a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0e1d7f3250b8a658688453eeb5f206d0f9e6d2a2", "patch": "@@ -1,3 +1,12 @@\n+2004-02-19  Aldy Hernandez  <aldyh@redhat.com>\n+ \n+        * doc/md.texi (Standard Names): Document additional dependency on\n+        fix pattern.\n+ \n+        * optabs.c (ftruncify): Remove.\n+        (expand_fix): Manually inline ftruncify above.\n+        (can_fix_p): Add FIXME note.\n+\n 2004-02-19  Aldy Hernandez  <aldyh@redhat.com>\n  \n         * config/rs6000/spe.md (spe_fixunssfsi2): Rename to"}, {"sha": "11848a501727c8a996089e3a3d3ff9a507b0908e", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e1d7f3250b8a658688453eeb5f206d0f9e6d2a2/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e1d7f3250b8a658688453eeb5f206d0f9e6d2a2/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=0e1d7f3250b8a658688453eeb5f206d0f9e6d2a2", "patch": "@@ -2865,6 +2865,9 @@ point mode @var{n} as a signed number and store in operand 0 (which\n has mode @var{n}).  This instruction's result is defined only when\n the value of operand 1 is an integer.\n \n+If the machine description defines this pattern, it also needs to\n+define the @code{ftrunc} pattern.\n+\n @cindex @code{fixuns@var{mn}2} instruction pattern\n @item @samp{fixuns@var{m}@var{n}2}\n Convert operand 1 (valid for floating point mode @var{m}) to fixed"}, {"sha": "cf3099b35239c9c98ef0ca2cd410f43362b74f8a", "filename": "gcc/optabs.c", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e1d7f3250b8a658688453eeb5f206d0f9e6d2a2/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e1d7f3250b8a658688453eeb5f206d0f9e6d2a2/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=0e1d7f3250b8a658688453eeb5f206d0f9e6d2a2", "patch": "@@ -105,7 +105,6 @@ static void prepare_cmp_insn (rtx *, rtx *, enum rtx_code *, rtx,\n static enum insn_code can_fix_p (enum machine_mode, enum machine_mode, int,\n \t\t\t\t int *);\n static enum insn_code can_float_p (enum machine_mode, enum machine_mode, int);\n-static rtx ftruncify (rtx);\n static optab new_optab (void);\n static convert_optab new_convert_optab (void);\n static inline optab init_optab (enum rtx_code);\n@@ -4434,6 +4433,9 @@ can_fix_p (enum machine_mode fixmode, enum machine_mode fltmode,\n       return icode;\n     }\n \n+  /* FIXME: This requires a port to define both FIX and FTRUNC pattern\n+     for this to work. We need to rework the fix* and ftrunc* patterns\n+     and documentation.  */\n   tab = unsignedp ? ufix_optab : sfix_optab;\n   icode = tab->handlers[fixmode][fltmode].insn_code;\n   if (icode != CODE_FOR_nothing\n@@ -4673,15 +4675,8 @@ expand_float (rtx to, rtx from, int unsignedp)\n     }\n }\n \f\n-/* expand_fix: generate code to convert FROM to fixed point\n-   and store in TO.  FROM must be floating point.  */\n-\n-static rtx\n-ftruncify (rtx x)\n-{\n-  rtx temp = gen_reg_rtx (GET_MODE (x));\n-  return expand_unop (GET_MODE (x), ftrunc_optab, x, temp, 0);\n-}\n+/* Generate code to convert FROM to fixed point and store in TO.  FROM\n+   must be floating point.  */\n \n void\n expand_fix (rtx to, rtx from, int unsignedp)\n@@ -4716,7 +4711,11 @@ expand_fix (rtx to, rtx from, int unsignedp)\n \t      from = convert_to_mode (fmode, from, 0);\n \n \t    if (must_trunc)\n-\t      from = ftruncify (from);\n+\t      {\n+\t\trtx temp = gen_reg_rtx (GET_MODE (from));\n+\t\tfrom = expand_unop (GET_MODE (from), ftrunc_optab, from,\n+\t\t\t\t    temp, 0);\n+\t      }\n \n \t    if (imode != GET_MODE (to))\n \t      target = gen_reg_rtx (imode);"}]}