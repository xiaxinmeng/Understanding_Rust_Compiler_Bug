{"sha": "172a459435c48df322c74231fa60b8d10a36e2af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTcyYTQ1OTQzNWM0OGRmMzIyYzc0MjMxZmE2MGI4ZDEwYTM2ZTJhZg==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2009-01-12T22:47:49Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2009-01-12T22:47:49Z"}, "message": "re PR c++/36019 (template parameter does not hide class name)\n\ngcc/cp/ChangeLog:\n2009-01-12  Dodji Seketeli  <dodji@redhat.com>\n\n\tPR c++/36019\n\t* pt.c (parameter_of_template_p): New function.\n\t* cp-tree.h: Declare it.\n\t* name-lookup.c (binding_to_template_parms_of_scope_p): New\n\tfunction.\n\t(outer_binding): Take template parameters in account when looking for\n\ta name binding.\n\ngcc/testsuite/ChangeLog:\n2009-01-12  Dodji Seketeli  <dodji@redhat.com>\n\n\tPR c++/36019\n\t* g++.dg/lookup/hidden-class12.C: New test.\n\t* g++.dg/lookup/hidden-class13.C: New test.\n\t* g++.dg/lookup/hidden-class14.C: New test.\n\t* g++.dg/lookup/hidden-class15.C: New test.\n\t* g++.dg/lookup/hidden-class16.C: New test.\n\nFrom-SVN: r143315", "tree": {"sha": "d3b45f400b4c42e2a3715c2868a2bee41b7c72e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3b45f400b4c42e2a3715c2868a2bee41b7c72e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/172a459435c48df322c74231fa60b8d10a36e2af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/172a459435c48df322c74231fa60b8d10a36e2af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/172a459435c48df322c74231fa60b8d10a36e2af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/172a459435c48df322c74231fa60b8d10a36e2af/comments", "author": null, "committer": null, "parents": [{"sha": "856c450bd55aae6454c3d43f0bb43d665799ac2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/856c450bd55aae6454c3d43f0bb43d665799ac2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/856c450bd55aae6454c3d43f0bb43d665799ac2f"}], "stats": {"total": 208, "additions": 206, "deletions": 2}, "files": [{"sha": "542b71d71be115fa7af900b3e11502436f72cd02", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/172a459435c48df322c74231fa60b8d10a36e2af/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/172a459435c48df322c74231fa60b8d10a36e2af/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=172a459435c48df322c74231fa60b8d10a36e2af", "patch": "@@ -1,3 +1,13 @@\n+2009-01-12  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR c++/36019\n+\t* pt.c (parameter_of_template_p): New function.\n+\t* cp-tree.h: Declare it.\n+\t* name-lookup.c (binding_to_template_parms_of_scope_p): New\n+\tfunction.\n+\t(outer_binding): Take template parameters in account when looking for\n+\ta name binding.\n+\n 2009-01-12  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/31488"}, {"sha": "718167f0160d7c0ee4a1adaf07870985031b3ba7", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/172a459435c48df322c74231fa60b8d10a36e2af/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/172a459435c48df322c74231fa60b8d10a36e2af/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=172a459435c48df322c74231fa60b8d10a36e2af", "patch": "@@ -4603,6 +4603,7 @@ extern bool reregister_specialization\t\t(tree, tree, tree);\n extern tree fold_non_dependent_expr\t\t(tree);\n extern bool explicit_class_specialization_p     (tree);\n extern struct tinst_level *outermost_tinst_level(void);\n+extern bool parameter_of_template_p\t\t(tree, tree);\n \n /* in repo.c */\n extern void init_repo\t\t\t\t(void);"}, {"sha": "889d9ef559fbf2b091943d7799d30a62d95bb939", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 33, "deletions": 2, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/172a459435c48df322c74231fa60b8d10a36e2af/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/172a459435c48df322c74231fa60b8d10a36e2af/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=172a459435c48df322c74231fa60b8d10a36e2af", "patch": "@@ -3968,9 +3968,34 @@ qualified_lookup_using_namespace (tree name, tree scope,\n   POP_TIMEVAR_AND_RETURN (TV_NAME_LOOKUP, result->value != error_mark_node);\n }\n \n+/* Subroutine of outer_binding.\n+   Returns TRUE if BINDING is a binding to a template parameter of SCOPE,\n+   FALSE otherwise.  */\n+\n+static bool\n+binding_to_template_parms_of_scope_p (cxx_binding *binding,\n+\t\t\t\t      cxx_scope *scope)\n+{\n+  tree binding_value;\n+\n+  if (!binding || !scope)\n+    return false;\n+\n+  binding_value = binding->value ?  binding->value : binding->type;\n+\n+  return (scope\n+\t  && scope->this_entity\n+\t  && get_template_info (scope->this_entity)\n+\t  && parameter_of_template_p (binding_value,\n+\t\t\t\t      TI_TEMPLATE (get_template_info \\\n+\t\t\t\t\t\t    (scope->this_entity))));\n+}\n+\n /* Return the innermost non-namespace binding for NAME from a scope\n-   containing BINDING, or, if BINDING is NULL, the current scope.  If\n-   CLASS_P is false, then class bindings are ignored.  */\n+   containing BINDING, or, if BINDING is NULL, the current scope.\n+   Please note that for a given template, the template parameters are\n+   considered to be in the scope containing the current scope.\n+   If CLASS_P is false, then class bindings are ignored.  */\n \n cxx_binding *\n outer_binding (tree name,\n@@ -4018,6 +4043,12 @@ outer_binding (tree name,\n \t\treturn class_binding;\n \t      }\n \t  }\n+\t/* If SCOPE is a template and if NAME binds to one of its template parameters\n+\t   return the binding, otherwise we might miss it.  */\n+\tif (outer_scope && outer_scope->kind == sk_template_parms\n+\t    && binding_to_template_parms_of_scope_p (outer, scope))\n+\t  return outer;\n+\n \tscope = scope->level_chain;\n       }\n "}, {"sha": "de70e531d0be678f8a5b9c130e797dc52ee47cec", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/172a459435c48df322c74231fa60b8d10a36e2af/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/172a459435c48df322c74231fa60b8d10a36e2af/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=172a459435c48df322c74231fa60b8d10a36e2af", "patch": "@@ -6427,6 +6427,30 @@ outermost_tinst_level (void)\n   return level;\n }\n \n+/* Returns TRUE if PARM is a parameter of the template TEMPL.  */\n+\n+bool\n+parameter_of_template_p (tree parm, tree templ)\n+{\n+  tree parms;\n+  int i;\n+\n+  if (!parm || !templ)\n+    return false;\n+\n+  gcc_assert (DECL_TEMPLATE_PARM_P (parm));\n+  gcc_assert (TREE_CODE (templ) == TEMPLATE_DECL);\n+\n+  parms = DECL_TEMPLATE_PARMS (templ);\n+  parms = INNERMOST_TEMPLATE_PARMS (parms);\n+\n+  for (i = 0; i < TREE_VEC_LENGTH (parms); ++i)\n+    if (parm == TREE_VALUE (TREE_VEC_ELT (parms, i)))\n+      return true;\n+\n+  return false;\n+}\n+\n /* DECL is a friend FUNCTION_DECL or TEMPLATE_DECL.  ARGS is the\n    vector of template arguments, as for tsubst.\n "}, {"sha": "6d2fe902c0a578fb14000894f94e259f2d146dcc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/172a459435c48df322c74231fa60b8d10a36e2af/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/172a459435c48df322c74231fa60b8d10a36e2af/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=172a459435c48df322c74231fa60b8d10a36e2af", "patch": "@@ -1,3 +1,12 @@\n+2009-01-12  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR c++/36019\n+\t* g++.dg/lookup/hidden-class12.C: New test.\n+\t* g++.dg/lookup/hidden-class13.C: New test.\n+\t* g++.dg/lookup/hidden-class14.C: New test.\n+\t* g++.dg/lookup/hidden-class15.C: New test.\n+\t* g++.dg/lookup/hidden-class16.C: New test.\n+\n 2009-01-12  Mark Mitchell  <mark@codesourcery.com>\n \n \t* gcc.dg/struct/wo_prof_single_str_global.c: Mask return value."}, {"sha": "4a3f2d7618be152e1ecc501b2ad1a1f105522872", "filename": "gcc/testsuite/g++.dg/lookup/hidden-class12.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/172a459435c48df322c74231fa60b8d10a36e2af/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fhidden-class12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/172a459435c48df322c74231fa60b8d10a36e2af/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fhidden-class12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fhidden-class12.C?ref=172a459435c48df322c74231fa60b8d10a36e2af", "patch": "@@ -0,0 +1,24 @@\n+// Contributed by Dodji Seketeli <dodji@redhat.com>\n+// Origin PR c++/36019\n+// { dg-do compile }\n+\n+struct F {\n+  static const int x = 0;\n+};\n+\n+struct A {\n+  template <typename A>\n+  static int f ()\n+  {\n+    return A::x;\n+  }\n+};\n+\n+\n+int\n+main ()\n+{\n+  int i = A::f<F> ();\n+  return i;\n+}\n+"}, {"sha": "2f685b2cb363907baa466ae436f8f842899c2535", "filename": "gcc/testsuite/g++.dg/lookup/hidden-class13.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/172a459435c48df322c74231fa60b8d10a36e2af/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fhidden-class13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/172a459435c48df322c74231fa60b8d10a36e2af/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fhidden-class13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fhidden-class13.C?ref=172a459435c48df322c74231fa60b8d10a36e2af", "patch": "@@ -0,0 +1,25 @@\n+// Contributed by Dodji Seketeli <dodji@redhat.com>\n+// Origin PR c++/36019\n+// { dg-do compile }\n+\n+struct F {\n+  static const int x = 0;\n+};\n+\n+struct B {\n+  template <typename B>\n+  struct C\n+  {\n+    static int f ()\n+    {\n+      return B::x;\n+    }\n+  };\n+};\n+\n+int\n+main ()\n+{\n+  int j = B::C<F>::f ();\n+  return 0;\n+}"}, {"sha": "99bd6731b1b00db0661c918e6111b6787e42ec59", "filename": "gcc/testsuite/g++.dg/lookup/hidden-class14.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/172a459435c48df322c74231fa60b8d10a36e2af/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fhidden-class14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/172a459435c48df322c74231fa60b8d10a36e2af/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fhidden-class14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fhidden-class14.C?ref=172a459435c48df322c74231fa60b8d10a36e2af", "patch": "@@ -0,0 +1,23 @@\n+// Contributed by Dodji Seketeli <dodji@redhat.com>\n+// Origin PR c++/36019\n+// { dg-do compile }\n+\n+struct F {\n+  static const int x = 0;\n+  typedef int A;\n+};\n+\n+struct A {\n+  template <typename A>\n+  struct G : public F \n+  {\n+    static const A i = 0;\n+  };\n+};\n+\n+int\n+main ()\n+{\n+  return A::G<F>::i ;\n+}\n+"}, {"sha": "b0ed660a6a3eab64d54951a76417b4855c4db1e7", "filename": "gcc/testsuite/g++.dg/lookup/hidden-class15.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/172a459435c48df322c74231fa60b8d10a36e2af/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fhidden-class15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/172a459435c48df322c74231fa60b8d10a36e2af/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fhidden-class15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fhidden-class15.C?ref=172a459435c48df322c74231fa60b8d10a36e2af", "patch": "@@ -0,0 +1,30 @@\n+// Contributed by Dodji Seketeli <dodji@redhat.com>\n+// Origin PR c++/36019\n+// { dg-do compile }\n+\n+struct F {\n+  static const int y = 0;\n+};\n+\n+struct A {\n+  static const int x = 0;\n+};\n+\n+struct B : public A {\n+  template <typename A>\n+  struct C\n+  {\n+    static int f ()\n+    {\n+      return A::x; // { dg-error \"'x' is not a member of 'F'\" }\n+    }\n+  };\n+};\n+\n+int\n+main ()\n+{\n+  int j = B::C<F>::f ();\n+  return 0;\n+}\n+"}, {"sha": "25cc40294088abce245430dd612dfb58bcc64ae8", "filename": "gcc/testsuite/g++.dg/lookup/hidden-class16.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/172a459435c48df322c74231fa60b8d10a36e2af/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fhidden-class16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/172a459435c48df322c74231fa60b8d10a36e2af/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fhidden-class16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fhidden-class16.C?ref=172a459435c48df322c74231fa60b8d10a36e2af", "patch": "@@ -0,0 +1,27 @@\n+// Contributed by Dodji Seketeli <dodji@redhat.com>\n+// Origin PR c++/36019\n+// { dg-do compile }\n+\n+struct F {\n+  static const int y = 0;\n+};\n+\n+struct A {\n+  static const int x = 0;\n+};\n+\n+struct B : public A {\n+  template <typename A>\n+  static int f ()\n+  {\n+    return A::x; // { dg-error \"'x' is not a member of 'F'\" }\n+  }\n+};\n+\n+int\n+main ()\n+{\n+  int j = B::f<F> ();\n+  return 0;\n+}\n+"}]}