{"sha": "c067c474f85b1e9c56fb34dd51ef0eec9221b766", "node_id": "C_kwDOANBUbNoAKGMwNjdjNDc0Zjg1YjFlOWM1NmZiMzRkZDUxZWYwZWVjOTIyMWI3NjY", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2022-09-29T10:32:54Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2022-09-29T10:32:54Z"}, "message": "aarch64: Reorder an entry in aarch64-option-extensions.def\n\naarch64-option-extensions.def was topologically sorted except\nfor one case: crypto came before its aes and sha2 dependencies.\nThis patch moves crypto after sha2 instead.\n\ngcc/\n\t* config/aarch64/aarch64-option-extensions.def: Move crypto\n\tafter sha2.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/cpunative/native_cpu_0.c: Expect +crypto\n\tto come after +crc.\n\t* gcc.target/aarch64/cpunative/native_cpu_13.c: Likewise.\n\t* gcc.target/aarch64/cpunative/native_cpu_16.c: Likewise.\n\t* gcc.target/aarch64/cpunative/native_cpu_17.c: Likewise.\n\t* gcc.target/aarch64/cpunative/native_cpu_6.c: Likewise.\n\t* gcc.target/aarch64/cpunative/native_cpu_7.c: Likewise.\n\t* gcc.target/aarch64/options_set_2.c: Likewise.\n\t* gcc.target/aarch64/options_set_3.c: Likewise.\n\t* gcc.target/aarch64/options_set_4.c: Likewise.", "tree": {"sha": "1f1d834c6baa52983228adc83436e913240aba41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f1d834c6baa52983228adc83436e913240aba41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c067c474f85b1e9c56fb34dd51ef0eec9221b766", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c067c474f85b1e9c56fb34dd51ef0eec9221b766", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c067c474f85b1e9c56fb34dd51ef0eec9221b766", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c067c474f85b1e9c56fb34dd51ef0eec9221b766/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b754d32d3053a4ba2a82361ac0f2739797a811f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b754d32d3053a4ba2a82361ac0f2739797a811f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b754d32d3053a4ba2a82361ac0f2739797a811f1"}], "stats": {"total": 40, "additions": 20, "deletions": 20}, "files": [{"sha": "df2c8d19b8d397c0e9430f6d18e641e5edbd002f", "filename": "gcc/config/aarch64/aarch64-option-extensions.def", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c067c474f85b1e9c56fb34dd51ef0eec9221b766/gcc%2Fconfig%2Faarch64%2Faarch64-option-extensions.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c067c474f85b1e9c56fb34dd51ef0eec9221b766/gcc%2Fconfig%2Faarch64%2Faarch64-option-extensions.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-option-extensions.def?ref=c067c474f85b1e9c56fb34dd51ef0eec9221b766", "patch": "@@ -76,16 +76,6 @@ AARCH64_OPT_EXTENSION(\"simd\", AARCH64_FL_SIMD, AARCH64_FL_FP, \\\n \t\t      AARCH64_FL_I8MM | AARCH64_FL_F32MM | AARCH64_FL_F64MM, \\\n \t\t      false, \"asimd\")\n \n-/* Enabling \"crypto\" also enables \"fp\", \"simd\", \"aes\" and \"sha2\".\n-   Disabling \"crypto\" disables \"crypto\", \"aes\", \"sha2\", \"sha3\" and \"sm3/sm4\",\n-   \"sve2-aes\", \"sve2-sha3\", \"sve2-sm4\".  */\n-AARCH64_OPT_EXTENSION(\"crypto\", AARCH64_FL_CRYPTO, AARCH64_FL_FP | \\\n-\t\t      AARCH64_FL_SIMD | AARCH64_FL_AES | AARCH64_FL_SHA2, \\\n-\t\t      AARCH64_FL_AES | AARCH64_FL_SHA2 | AARCH64_FL_SHA3 | \\\n-\t\t      AARCH64_FL_SM4 | AARCH64_FL_SVE2_AES | \\\n-\t\t      AARCH64_FL_SVE2_SHA3 | AARCH64_FL_SVE2_SM4, true, \\\n-\t\t      \"aes pmull sha1 sha2\")\n-\n /* Enabling or disabling \"crc\" only changes \"crc\".  */\n AARCH64_OPT_EXTENSION(\"crc\", AARCH64_FL_CRC, 0, 0, false, \"crc32\")\n \n@@ -127,6 +117,16 @@ AARCH64_OPT_EXTENSION(\"sha2\", AARCH64_FL_SHA2, AARCH64_FL_FPSIMD, \\\n \t\t      AARCH64_FL_CRYPTO | AARCH64_FL_SHA3 | \\\n \t\t      AARCH64_FL_SVE2_SHA3, false, \"sha1 sha2\")\n \n+/* Enabling \"crypto\" also enables \"fp\", \"simd\", \"aes\" and \"sha2\".\n+   Disabling \"crypto\" disables \"crypto\", \"aes\", \"sha2\", \"sha3\" and \"sm3/sm4\",\n+   \"sve2-aes\", \"sve2-sha3\", \"sve2-sm4\".  */\n+AARCH64_OPT_EXTENSION(\"crypto\", AARCH64_FL_CRYPTO, AARCH64_FL_FP | \\\n+\t\t      AARCH64_FL_SIMD | AARCH64_FL_AES | AARCH64_FL_SHA2, \\\n+\t\t      AARCH64_FL_AES | AARCH64_FL_SHA2 | AARCH64_FL_SHA3 | \\\n+\t\t      AARCH64_FL_SM4 | AARCH64_FL_SVE2_AES | \\\n+\t\t      AARCH64_FL_SVE2_SHA3 | AARCH64_FL_SVE2_SM4, true, \\\n+\t\t      \"aes pmull sha1 sha2\")\n+\n /* Enabling \"sha3\" enables \"simd\" and \"sha2\".\n    Disabling \"sha3\" disables \"sha3\" and \"sve2-sha3\".  */\n AARCH64_OPT_EXTENSION(\"sha3\", AARCH64_FL_SHA3, AARCH64_FL_FPSIMD | \\"}, {"sha": "8499f87c39b173491a89626af56f4e193b1d12b5", "filename": "gcc/testsuite/gcc.target/aarch64/cpunative/native_cpu_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c067c474f85b1e9c56fb34dd51ef0eec9221b766/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpunative%2Fnative_cpu_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c067c474f85b1e9c56fb34dd51ef0eec9221b766/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpunative%2Fnative_cpu_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpunative%2Fnative_cpu_0.c?ref=c067c474f85b1e9c56fb34dd51ef0eec9221b766", "patch": "@@ -7,6 +7,6 @@ int main()\n   return 0;\n }\n \n-/* { dg-final { scan-assembler {\\.arch armv8-a\\+crypto\\+crc\\+dotprod} } } */\n+/* { dg-final { scan-assembler {\\.arch armv8-a\\+crc\\+dotprod\\+crypto} } } */\n \n /* Test a normal looking procinfo.  */"}, {"sha": "551669091c7010379a4c5247a27c517c4e67ef98", "filename": "gcc/testsuite/gcc.target/aarch64/cpunative/native_cpu_13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c067c474f85b1e9c56fb34dd51ef0eec9221b766/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpunative%2Fnative_cpu_13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c067c474f85b1e9c56fb34dd51ef0eec9221b766/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpunative%2Fnative_cpu_13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpunative%2Fnative_cpu_13.c?ref=c067c474f85b1e9c56fb34dd51ef0eec9221b766", "patch": "@@ -7,6 +7,6 @@ int main()\n   return 0;\n }\n \n-/* { dg-final { scan-assembler {\\.arch armv8-a\\+crypto\\+crc\\+dotprod} } } */\n+/* { dg-final { scan-assembler {\\.arch armv8-a\\+crc\\+dotprod\\+crypto} } } */\n \n /* Test one with mixed order of feature bits.  */"}, {"sha": "2f963bb2312711691f6f1c5989a100b88671ad52", "filename": "gcc/testsuite/gcc.target/aarch64/cpunative/native_cpu_16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c067c474f85b1e9c56fb34dd51ef0eec9221b766/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpunative%2Fnative_cpu_16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c067c474f85b1e9c56fb34dd51ef0eec9221b766/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpunative%2Fnative_cpu_16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpunative%2Fnative_cpu_16.c?ref=c067c474f85b1e9c56fb34dd51ef0eec9221b766", "patch": "@@ -7,6 +7,6 @@ int main()\n   return 0;\n }\n \n-/* { dg-final { scan-assembler {\\.arch armv8-a\\+crypto\\+crc\\+dotprod\\+sve2} } } */\n+/* { dg-final { scan-assembler {\\.arch armv8-a\\+crc\\+dotprod\\+crypto\\+sve2} } } */\n \n /* Test a normal looking procinfo.  */"}, {"sha": "c68a697aa3e97ef52fd7e90233c5bb4ac8dbddd9", "filename": "gcc/testsuite/gcc.target/aarch64/cpunative/native_cpu_17.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c067c474f85b1e9c56fb34dd51ef0eec9221b766/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpunative%2Fnative_cpu_17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c067c474f85b1e9c56fb34dd51ef0eec9221b766/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpunative%2Fnative_cpu_17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpunative%2Fnative_cpu_17.c?ref=c067c474f85b1e9c56fb34dd51ef0eec9221b766", "patch": "@@ -7,6 +7,6 @@ int main()\n   return 0;\n }\n \n-/* { dg-final { scan-assembler {\\.arch armv8-a\\+crypto\\+crc\\+dotprod\\+sve2} } } */\n+/* { dg-final { scan-assembler {\\.arch armv8-a\\+crc\\+dotprod\\+crypto\\+sve2} } } */\n \n /* Test a normal looking procinfo.  */"}, {"sha": "7608e8845a662219488effcdb8277006dcf457a9", "filename": "gcc/testsuite/gcc.target/aarch64/cpunative/native_cpu_6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c067c474f85b1e9c56fb34dd51ef0eec9221b766/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpunative%2Fnative_cpu_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c067c474f85b1e9c56fb34dd51ef0eec9221b766/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpunative%2Fnative_cpu_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpunative%2Fnative_cpu_6.c?ref=c067c474f85b1e9c56fb34dd51ef0eec9221b766", "patch": "@@ -7,7 +7,7 @@ int main()\n   return 0;\n }\n \n-/* { dg-final { scan-assembler {\\.arch armv8-a\\+crypto\\+fp16} } } */\n+/* { dg-final { scan-assembler {\\.arch armv8-a\\+fp16\\+crypto} } } */\n \n /* Test one where the feature bits for crypto and fp16 are given in\n    same order as declared in options file.  */"}, {"sha": "72b14b4f6ed0d50a4fc8a35931fbd232b09d2b61", "filename": "gcc/testsuite/gcc.target/aarch64/cpunative/native_cpu_7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c067c474f85b1e9c56fb34dd51ef0eec9221b766/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpunative%2Fnative_cpu_7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c067c474f85b1e9c56fb34dd51ef0eec9221b766/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpunative%2Fnative_cpu_7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpunative%2Fnative_cpu_7.c?ref=c067c474f85b1e9c56fb34dd51ef0eec9221b766", "patch": "@@ -7,7 +7,7 @@ int main()\n   return 0;\n }\n \n-/* { dg-final { scan-assembler {\\.arch armv8-a\\+crypto\\+fp16} } } */\n+/* { dg-final { scan-assembler {\\.arch armv8-a\\+fp16\\+crypto} } } */\n \n /* Test one where the crypto and fp16 options are specified in different\n    order from what is in the options file.  */"}, {"sha": "f82cb5f7823b47d890046d077f2f47f45cb69803", "filename": "gcc/testsuite/gcc.target/aarch64/options_set_2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c067c474f85b1e9c56fb34dd51ef0eec9221b766/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Foptions_set_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c067c474f85b1e9c56fb34dd51ef0eec9221b766/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Foptions_set_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Foptions_set_2.c?ref=c067c474f85b1e9c56fb34dd51ef0eec9221b766", "patch": "@@ -6,6 +6,6 @@ int main ()\n   return 0;\n }\n \n-/* { dg-final { scan-assembler-times {\\.arch armv8\\.2\\-a\\+crypto\\+crc} 1 } } */\n+/* { dg-final { scan-assembler-times {\\.arch armv8\\.2\\-a\\+crc\\+crypto} 1 } } */\n \n /* Check to see if crc and crypto are maintained if crypto specified.  */"}, {"sha": "7d350cfa36168a4d3e61357bc192ed5e18cda620", "filename": "gcc/testsuite/gcc.target/aarch64/options_set_3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c067c474f85b1e9c56fb34dd51ef0eec9221b766/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Foptions_set_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c067c474f85b1e9c56fb34dd51ef0eec9221b766/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Foptions_set_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Foptions_set_3.c?ref=c067c474f85b1e9c56fb34dd51ef0eec9221b766", "patch": "@@ -6,6 +6,6 @@ int main ()\n   return 0;\n }\n \n-/* { dg-final { scan-assembler-times {\\.arch armv8\\.2\\-a\\+crypto\\+crc} 1 } } */\n+/* { dg-final { scan-assembler-times {\\.arch armv8\\.2\\-a\\+crc\\+crypto} 1 } } */\n \n /* Check if smallest set is maintained when outputting. */"}, {"sha": "5370e02e1531dd26e5a5fb37de0bab6aed513b71", "filename": "gcc/testsuite/gcc.target/aarch64/options_set_4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c067c474f85b1e9c56fb34dd51ef0eec9221b766/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Foptions_set_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c067c474f85b1e9c56fb34dd51ef0eec9221b766/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Foptions_set_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Foptions_set_4.c?ref=c067c474f85b1e9c56fb34dd51ef0eec9221b766", "patch": "@@ -6,7 +6,7 @@ int main ()\n   return 0;\n }\n \n-/* { dg-final { scan-assembler-times {\\.arch armv8\\.2\\-a\\+crypto\\+crc} 1 } } */\n+/* { dg-final { scan-assembler-times {\\.arch armv8\\.2\\-a\\+crc\\+crypto} 1 } } */\n \n /* Check if individual bits that make up a grouping is specified that only the\n-   grouping is kept. */\n\\ No newline at end of file\n+   grouping is kept. */"}]}