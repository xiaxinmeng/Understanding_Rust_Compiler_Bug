{"sha": "0becc98698a748a8b28af730ca55986fa02b9811", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJlY2M5ODY5OGE3NDhhOGIyOGFmNzMwY2E1NTk4NmZhMDJiOTgxMQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-12-02T05:24:11Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-12-02T05:24:11Z"}, "message": "expr.c (expand_assignment): Handle CONCAT both as a final destination and as a middle point.\n\n        * expr.c (expand_assignment): Handle CONCAT both as a final\n        destination and as a middle point.\n\nFrom-SVN: r91614", "tree": {"sha": "cb213fe6556612dd6e1bfda35aac8ccf3abaff8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb213fe6556612dd6e1bfda35aac8ccf3abaff8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0becc98698a748a8b28af730ca55986fa02b9811", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0becc98698a748a8b28af730ca55986fa02b9811", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0becc98698a748a8b28af730ca55986fa02b9811", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0becc98698a748a8b28af730ca55986fa02b9811/comments", "author": null, "committer": null, "parents": [{"sha": "ca3a791a1692d3f0890b647f2b860cfa5e7ea678", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca3a791a1692d3f0890b647f2b860cfa5e7ea678", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca3a791a1692d3f0890b647f2b860cfa5e7ea678"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "7e4bd4ded5c3a3fbdba545fab5df6c0984d396db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0becc98698a748a8b28af730ca55986fa02b9811/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0becc98698a748a8b28af730ca55986fa02b9811/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0becc98698a748a8b28af730ca55986fa02b9811", "patch": "@@ -1,3 +1,8 @@\n+2004-12-01  Richard Henderson  <rth@redhat.com>\n+\n+\t* expr.c (expand_assignment): Handle CONCAT both as a final\n+\tdestination and as a middle point.\n+\n 2004-12-01  Jeff Law  <law@redhat.com>\n \n         * tree.h (save_eptr, save_filt): Now file scoped statics."}, {"sha": "f16f82f10a7184cd2e018c7f1f9a3316f221e463", "filename": "gcc/expr.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0becc98698a748a8b28af730ca55986fa02b9811/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0becc98698a748a8b28af730ca55986fa02b9811/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=0becc98698a748a8b28af730ca55986fa02b9811", "patch": "@@ -3757,8 +3757,16 @@ expand_assignment (tree to, tree from)\n       /* Handle expand_expr of a complex value returning a CONCAT.  */\n       if (GET_CODE (to_rtx) == CONCAT)\n \t{\n-\t  gcc_assert (bitpos == 0 || bitpos == GET_MODE_BITSIZE (mode1));\n-\t  result = store_expr (from, XEXP (to_rtx, bitpos != 0), false);\n+\t  if (TREE_CODE (TREE_TYPE (from)) == COMPLEX_TYPE)\n+\t    {\n+\t      gcc_assert (bitpos == 0);\n+\t      result = store_expr (from, to_rtx, false);\n+\t    }\n+\t  else\n+\t    {\n+\t      gcc_assert (bitpos == 0 || bitpos == GET_MODE_BITSIZE (mode1));\n+\t      result = store_expr (from, XEXP (to_rtx, bitpos != 0), false);\n+\t    }\n \t}\n       else\n \t{"}, {"sha": "54ec82c0d1aa8070b42dc707d75294986154d40d", "filename": "gcc/testsuite/gcc.dg/complex-3.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0becc98698a748a8b28af730ca55986fa02b9811/gcc%2Ftestsuite%2Fgcc.dg%2Fcomplex-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0becc98698a748a8b28af730ca55986fa02b9811/gcc%2Ftestsuite%2Fgcc.dg%2Fcomplex-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcomplex-3.c?ref=0becc98698a748a8b28af730ca55986fa02b9811", "patch": "@@ -0,0 +1,25 @@\n+/* Verify that rtl expansion cleanup doesn't get too aggressive about\n+   code dealing with complex CONCATs.  */\n+/* { dg-do run } */\n+/* { dg-options \"-O -fno-tree-sra\" } */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+__complex__ float foo (void)\n+{\n+  __complex__ float f[1];\n+  __real__ f[0] = 1;\n+  __imag__ f[0] = 1;\n+  f[0] = __builtin_conjf (f[0]);\n+  return f[0];\n+}\n+\n+int main (void)\n+{\n+  __complex__ double d[1];\n+  d[0] = foo ();\n+  if (__real__ d[0] != 1 || __imag__ d[0] != -1)\n+    abort ();\n+  exit (0);\n+}"}]}