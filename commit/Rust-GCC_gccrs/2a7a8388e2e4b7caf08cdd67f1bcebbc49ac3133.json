{"sha": "2a7a8388e2e4b7caf08cdd67f1bcebbc49ac3133", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE3YTgzODhlMmU0YjdjYWYwOGNkZDY3ZjFiY2ViYmM0OWFjMzEzMw==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2014-06-13T14:30:46Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2014-06-13T14:30:46Z"}, "message": "Allow overriding the libiberty used for building the LTO plugin.\n\n\tlto-plugin/\n\t* configure.ac (--with-libiberty): New configure option.\n\t* configure: Regenerate.\n\t* Makefile.am (libiberty, libiberty_noasan, libiberty_pic): New\n\tvariables.\n\t(liblto_plugin_la_LIBADD, liblto_plugin_la_LDFLAGS)\n\t(liblto_plugin_la_DEPENDENCIES): Use them.\n\t* Makefile.in: Regenerate.\n\nFrom-SVN: r211642", "tree": {"sha": "551e04841da61c4b5f65c73d0dcc899ddd993371", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/551e04841da61c4b5f65c73d0dcc899ddd993371"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a7a8388e2e4b7caf08cdd67f1bcebbc49ac3133", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a7a8388e2e4b7caf08cdd67f1bcebbc49ac3133", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a7a8388e2e4b7caf08cdd67f1bcebbc49ac3133", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a7a8388e2e4b7caf08cdd67f1bcebbc49ac3133/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "beb683ab93023d2e80edd30dd8630fb7ae89aae0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beb683ab93023d2e80edd30dd8630fb7ae89aae0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/beb683ab93023d2e80edd30dd8630fb7ae89aae0"}], "stats": {"total": 95, "additions": 64, "deletions": 31}, "files": [{"sha": "1b640bdc70b6ad446fc2fe3d38b16e43c4c62c32", "filename": "lto-plugin/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a7a8388e2e4b7caf08cdd67f1bcebbc49ac3133/lto-plugin%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a7a8388e2e4b7caf08cdd67f1bcebbc49ac3133/lto-plugin%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FChangeLog?ref=2a7a8388e2e4b7caf08cdd67f1bcebbc49ac3133", "patch": "@@ -1,3 +1,13 @@\n+2014-06-13  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* configure.ac (--with-libiberty): New configure option.\n+\t* configure: Regenerate.\n+\t* Makefile.am (libiberty, libiberty_noasan, libiberty_pic): New\n+\tvariables.\n+\t(liblto_plugin_la_LIBADD, liblto_plugin_la_LDFLAGS)\n+\t(liblto_plugin_la_DEPENDENCIES): Use them.\n+\t* Makefile.in: Regenerate.\n+\n 2014-05-15  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR lto/60981"}, {"sha": "f3fb89bbb0ff8bd50307ce6739669f22b8ccd244", "filename": "lto-plugin/Makefile.am", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a7a8388e2e4b7caf08cdd67f1bcebbc49ac3133/lto-plugin%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a7a8388e2e4b7caf08cdd67f1bcebbc49ac3133/lto-plugin%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FMakefile.am?ref=2a7a8388e2e4b7caf08cdd67f1bcebbc49ac3133", "patch": "@@ -18,22 +18,25 @@ libexecsub_LTLIBRARIES = liblto_plugin.la\n gcc_build_dir = ../$(host_subdir)/gcc\n in_gcc_libs = $(foreach lib, $(libexecsub_LTLIBRARIES), $(gcc_build_dir)/$(lib))\n \n-# Can be removed when libiberty becomes a normal convenience library\n-Wc=-Wc,\n-LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n-\n liblto_plugin_la_SOURCES = lto-plugin.c\n-liblto_plugin_la_LIBADD = \\\n-\t$(if $(wildcard ../libiberty/noasan/libiberty.a),$(Wc)../libiberty/noasan/libiberty.a, \\\n-\t$(if $(wildcard ../libiberty/pic/libiberty.a),$(Wc)../libiberty/pic/libiberty.a,))\n-# Note that we intentionally override the bindir supplied by ACX_LT_HOST_FLAGS\n+# Note that we intentionally override the bindir supplied by ACX_LT_HOST_FLAGS.\n liblto_plugin_la_LDFLAGS = $(AM_LDFLAGS) \\\n-\t$(lt_host_flags) -module -bindir $(libexecsubdir) \\\n-\t$(if $(wildcard ../libiberty/noasan/libiberty.a),, \\\n-\t$(if $(wildcard ../libiberty/pic/libiberty.a),,-Wc,../libiberty/libiberty.a))\n-liblto_plugin_la_DEPENDENCIES = $(if $(wildcard \\\n-\t../libiberty/noasan/libiberty.a),../libiberty/noasan/libiberty.a, \\\n-\t$(if $(wildcard ../libiberty/pic/libiberty.a),../libiberty/pic/libiberty.a,))\n+\t$(lt_host_flags) -module -bindir $(libexecsubdir)\n+# Can be simplified when libiberty becomes a normal convenience library.\n+libiberty = $(with_libiberty)/libiberty.a\n+libiberty_noasan = $(with_libiberty)/noasan/libiberty.a\n+libiberty_pic = $(with_libiberty)/pic/libiberty.a\n+Wc=-Wc,\n+liblto_plugin_la_LIBADD = \\\n+\t$(if $(wildcard $(libiberty_noasan)),$(Wc)$(libiberty_noasan), \\\n+\t$(if $(wildcard $(libiberty_pic)),$(Wc)$(libiberty_pic),))\n+liblto_plugin_la_LDFLAGS += \\\n+\t$(if $(wildcard $(libiberty_noasan)),, \\\n+\t$(if $(wildcard $(libiberty_pic)),,-Wc,$(libiberty)))\n+liblto_plugin_la_DEPENDENCIES = \\\n+\t$(if $(wildcard $(libiberty_noasan)),$(libiberty_noasan), \\\n+\t$(if $(wildcard $(libiberty_pic)),$(libiberty_pic),))\n+LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n liblto_plugin_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \\\n \t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\\n \t$(liblto_plugin_la_LDFLAGS) $(LTLDFLAGS) -o $@"}, {"sha": "0a259e41ee8c6400c9272f329ddd59d973dcc041", "filename": "lto-plugin/Makefile.in", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a7a8388e2e4b7caf08cdd67f1bcebbc49ac3133/lto-plugin%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a7a8388e2e4b7caf08cdd67f1bcebbc49ac3133/lto-plugin%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FMakefile.in?ref=2a7a8388e2e4b7caf08cdd67f1bcebbc49ac3133", "patch": "@@ -222,6 +222,7 @@ target_vendor = @target_vendor@\n top_build_prefix = @top_build_prefix@\n top_builddir = @top_builddir@\n top_srcdir = @top_srcdir@\n+with_libiberty = @with_libiberty@\n ACLOCAL_AMFLAGS = -I .. -I ../config\n AUTOMAKE_OPTIONS = no-dependencies\n gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n@@ -233,25 +234,26 @@ AM_LIBTOOLFLAGS = --tag=disable-static\n libexecsub_LTLIBRARIES = liblto_plugin.la\n gcc_build_dir = ../$(host_subdir)/gcc\n in_gcc_libs = $(foreach lib, $(libexecsub_LTLIBRARIES), $(gcc_build_dir)/$(lib))\n-\n-# Can be removed when libiberty becomes a normal convenience library\n-Wc = -Wc,\n-LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n liblto_plugin_la_SOURCES = lto-plugin.c\n+# Note that we intentionally override the bindir supplied by ACX_LT_HOST_FLAGS.\n+liblto_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(lt_host_flags) -module \\\n+\t-bindir $(libexecsubdir) $(if $(wildcard \\\n+\t$(libiberty_noasan)),, $(if $(wildcard \\\n+\t$(libiberty_pic)),,-Wc,$(libiberty)))\n+# Can be simplified when libiberty becomes a normal convenience library.\n+libiberty = $(with_libiberty)/libiberty.a\n+libiberty_noasan = $(with_libiberty)/noasan/libiberty.a\n+libiberty_pic = $(with_libiberty)/pic/libiberty.a\n+Wc = -Wc,\n liblto_plugin_la_LIBADD = \\\n-\t$(if $(wildcard ../libiberty/noasan/libiberty.a),$(Wc)../libiberty/noasan/libiberty.a, \\\n-\t$(if $(wildcard ../libiberty/pic/libiberty.a),$(Wc)../libiberty/pic/libiberty.a,))\n-\n-# Note that we intentionally override the bindir supplied by ACX_LT_HOST_FLAGS\n-liblto_plugin_la_LDFLAGS = $(AM_LDFLAGS) \\\n-\t$(lt_host_flags) -module -bindir $(libexecsubdir) \\\n-\t$(if $(wildcard ../libiberty/noasan/libiberty.a),, \\\n-\t$(if $(wildcard ../libiberty/pic/libiberty.a),,-Wc,../libiberty/libiberty.a))\n+\t$(if $(wildcard $(libiberty_noasan)),$(Wc)$(libiberty_noasan), \\\n+\t$(if $(wildcard $(libiberty_pic)),$(Wc)$(libiberty_pic),))\n \n-liblto_plugin_la_DEPENDENCIES = $(if $(wildcard \\\n-\t../libiberty/noasan/libiberty.a),../libiberty/noasan/libiberty.a, \\\n-\t$(if $(wildcard ../libiberty/pic/libiberty.a),../libiberty/pic/libiberty.a,))\n+liblto_plugin_la_DEPENDENCIES = \\\n+\t$(if $(wildcard $(libiberty_noasan)),$(libiberty_noasan), \\\n+\t$(if $(wildcard $(libiberty_pic)),$(libiberty_pic),))\n \n+LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n liblto_plugin_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \\\n \t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\\n \t$(liblto_plugin_la_LDFLAGS) $(LTLDFLAGS) -o $@"}, {"sha": "6c36dfb5657c1be84c89c95dad235e903b797cba", "filename": "lto-plugin/configure", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a7a8388e2e4b7caf08cdd67f1bcebbc49ac3133/lto-plugin%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a7a8388e2e4b7caf08cdd67f1bcebbc49ac3133/lto-plugin%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Fconfigure?ref=2a7a8388e2e4b7caf08cdd67f1bcebbc49ac3133", "patch": "@@ -640,6 +640,7 @@ CPPFLAGS\n LDFLAGS\n CFLAGS\n CC\n+with_libiberty\n MAINT\n MAINTAINER_MODE_FALSE\n MAINTAINER_MODE_TRUE\n@@ -725,6 +726,7 @@ ac_user_opts='\n enable_option_checking\n with_build_libsubdir\n enable_maintainer_mode\n+with_libiberty\n enable_dependency_tracking\n enable_largefile\n enable_shared\n@@ -1378,6 +1380,8 @@ Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n   --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)\n   --with-build-libsubdir=DIR  Directory where to find libraries for build system\n+  --with-libiberty=PATH   specify the directory where to find libiberty\n+                          [../libiberty]\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n@@ -2889,6 +2893,15 @@ fi\n   MAINT=$MAINTAINER_MODE_TRUE\n \n \n+\n+# Check whether --with-libiberty was given.\n+if test \"${with_libiberty+set}\" = set; then :\n+  withval=$with_libiberty;\n+else\n+  with_libiberty=../libiberty\n+fi\n+\n+\n ac_ext=c\n ac_cpp='$CPP $CPPFLAGS'\n ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n@@ -10586,7 +10599,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10589 \"configure\"\n+#line 10602 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10692,7 +10705,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10695 \"configure\"\n+#line 10708 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "6a5ae8a4ef5591e62d11ac11fd5b02019bdd591a", "filename": "lto-plugin/configure.ac", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a7a8388e2e4b7caf08cdd67f1bcebbc49ac3133/lto-plugin%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a7a8388e2e4b7caf08cdd67f1bcebbc49ac3133/lto-plugin%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Fconfigure.ac?ref=2a7a8388e2e4b7caf08cdd67f1bcebbc49ac3133", "patch": "@@ -4,6 +4,11 @@ AC_CANONICAL_SYSTEM\n GCC_TOPLEV_SUBDIRS\n AM_INIT_AUTOMAKE([foreign no-dist])\n AM_MAINTAINER_MODE\n+AC_ARG_WITH(libiberty,\n+  [AS_HELP_STRING([--with-libiberty=PATH],\n+    [specify the directory where to find libiberty [../libiberty]])],\n+  [], with_libiberty=../libiberty)\n+AC_SUBST(with_libiberty)\n AC_PROG_CC\n AC_SYS_LARGEFILE\n ACX_PROG_CC_WARNING_OPTS([-Wall], [ac_lto_plugin_warn_cflags])"}]}