{"sha": "92a4639e2eeaa74745592505e1e927b8f81b6b85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJhNDYzOWUyZWVhYTc0NzQ1NTkyNTA1ZTFlOTI3YjhmODFiNmI4NQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@cambridge.redhat.com", "date": "2002-01-24T16:27:51Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2002-01-24T16:27:51Z"}, "message": "Allow SImode values to be assigned to the stack pointer.\n\nFrom-SVN: r49183", "tree": {"sha": "95f50f466fdd86ca7863745e0dff124c2f88e81d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95f50f466fdd86ca7863745e0dff124c2f88e81d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92a4639e2eeaa74745592505e1e927b8f81b6b85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92a4639e2eeaa74745592505e1e927b8f81b6b85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92a4639e2eeaa74745592505e1e927b8f81b6b85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92a4639e2eeaa74745592505e1e927b8f81b6b85/comments", "author": null, "committer": null, "parents": [{"sha": "467cb2da563aa7b595a0de7fe36e4c4c50fcd480", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/467cb2da563aa7b595a0de7fe36e4c4c50fcd480", "html_url": "https://github.com/Rust-GCC/gccrs/commit/467cb2da563aa7b595a0de7fe36e4c4c50fcd480"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "aa3fe7bac4e04c77bac076b409497f43ef14f1cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a4639e2eeaa74745592505e1e927b8f81b6b85/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a4639e2eeaa74745592505e1e927b8f81b6b85/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=92a4639e2eeaa74745592505e1e927b8f81b6b85", "patch": "@@ -1,3 +1,8 @@\n+2002-01-24  Nick Clifton  <nickc@cambridge.redhat.com>\n+\n+\t* config/arm/arm.c (arm_hard_regno_mode_ok): Allow SImode\n+\tvalues to be assigned to the stack pointer.\n+\n 2002-01-14  Hartmut Penner  <hpenner@de.ibm.com>\n \n \t* emit_rtl.c (gen_lowpart_common): Conversion from const_int "}, {"sha": "1999af04e4ee0d2d105f711de7d2d1e176c21d04", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a4639e2eeaa74745592505e1e927b8f81b6b85/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a4639e2eeaa74745592505e1e927b8f81b6b85/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=92a4639e2eeaa74745592505e1e927b8f81b6b85", "patch": "@@ -9143,7 +9143,20 @@ arm_hard_regno_mode_ok (regno, mode)\n        it only if it not a special register (SP, LR, PC) and only\n        if there will be enough (non-special) registers to hold the\n        entire value.  */\n-    return regno < (SP_REGNUM - (unsigned) NUM_REGS (mode));\n+    {\n+      /* As a special exception we allow an SImode value to be\n+\t \"assigned\" to the stack pointer.  This is not intended\n+\t to actually allow a value to be stored in the SP, but so\n+\t that the stack pointer can be referenced from C code like\n+\t this:\n+\t \n+\t   register char * stack_ptr asm (\"sp\");\n+\n+\t This expression is actually used in newlib...  */\n+      if (mode == SImode && regno == SP_REGNUM)\n+\treturn 1;\n+      return regno < (SP_REGNUM - (unsigned) NUM_REGS (mode));\n+    }\n \n   if (   regno == FRAME_POINTER_REGNUM\n       || regno == ARG_POINTER_REGNUM)"}]}