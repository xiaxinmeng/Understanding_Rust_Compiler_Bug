{"sha": "43b484fbf281553353c6ef55ff0871b222579004", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNiNDg0ZmJmMjgxNTUzMzUzYzZlZjU1ZmYwODcxYjIyMjU3OTAwNA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-09-30T16:20:15Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-09-30T16:20:15Z"}, "message": "Remove global call sets: cfgloopanal.c\n\n...or rather, make the use of the default ABI explicit.  That seems\nOK if not ideal for this heuristic.\n\nIn practical terms, the code patched here is counting GENERAL_REGS,\nwhich are treated in the same way by all concurrent ABI variants\non AArch64.  It might give bad results if used for interrupt\nhandlers though.\n\n2019-09-30  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* cfgloopanal.c: Include regs.h and function-abi.h.\n\t(init_set_costs): Use default_function_abi to test whether\n\ta general register is call-clobbered.\n\nFrom-SVN: r276315", "tree": {"sha": "09be312850766d7bb5f4c6dfa86e810708db069f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09be312850766d7bb5f4c6dfa86e810708db069f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43b484fbf281553353c6ef55ff0871b222579004", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43b484fbf281553353c6ef55ff0871b222579004", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43b484fbf281553353c6ef55ff0871b222579004", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43b484fbf281553353c6ef55ff0871b222579004/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "016996861c7333f42772c84a5a2a4e52e0bd07c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/016996861c7333f42772c84a5a2a4e52e0bd07c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/016996861c7333f42772c84a5a2a4e52e0bd07c5"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "6b08d70e11c4a1253c8038f92095482cef7cd754", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43b484fbf281553353c6ef55ff0871b222579004/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43b484fbf281553353c6ef55ff0871b222579004/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43b484fbf281553353c6ef55ff0871b222579004", "patch": "@@ -1,3 +1,9 @@\n+2019-09-30  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* cfgloopanal.c: Include regs.h and function-abi.h.\n+\t(init_set_costs): Use default_function_abi to test whether\n+\ta general register is call-clobbered.\n+\n 2019-09-30  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* cfgcleanup.c (old_insns_match_p): Compare the ABIs of calls"}, {"sha": "95ec929c7bde1ba4ce563a9717f3426dcc55db86", "filename": "gcc/cfgloopanal.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43b484fbf281553353c6ef55ff0871b222579004/gcc%2Fcfgloopanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43b484fbf281553353c6ef55ff0871b222579004/gcc%2Fcfgloopanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopanal.c?ref=43b484fbf281553353c6ef55ff0871b222579004", "patch": "@@ -32,6 +32,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"graphds.h\"\n #include \"params.h\"\n #include \"sreal.h\"\n+#include \"regs.h\"\n+#include \"function-abi.h\"\n \n struct target_cfgloop default_target_cfgloop;\n #if SWITCHABLE_TARGET\n@@ -353,7 +355,10 @@ init_set_costs (void)\n \t&& !fixed_regs[i])\n       {\n \ttarget_avail_regs++;\n-\tif (call_used_or_fixed_reg_p (i))\n+\t/* ??? This is only a rough heuristic.  It doesn't cope well\n+\t   with alternative ABIs, but that's an optimization rather than\n+\t   correctness issue.  */\n+\tif (default_function_abi.clobbers_full_reg_p (i))\n \t  target_clobbered_regs++;\n       }\n "}]}