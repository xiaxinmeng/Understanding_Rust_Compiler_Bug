{"sha": "7e41c852e38703c9a7f9ec1d4c513d781f1e46a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U0MWM4NTJlMzg3MDNjOWE3ZjllYzFkNGM1MTNkNzgxZjFlNDZhNg==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2014-01-10T22:13:18Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2014-01-10T22:13:18Z"}, "message": "re PR middle-end/59743 (ICE: Segmentation fault)\n\n\tPR middle-end/59743\n\t* ree.c (combine_reaching_defs): Ensure the defining statement\n\toccurs before the extension when optimizing extensions with\n\tdifferent source and destination hard registers.\n\n\tPR middle-end/59743\n\t* gcc.c-torture/compile/pr59743.c: New test.\n\nFrom-SVN: r206545", "tree": {"sha": "a0b2ee5cd9b29270bf09ee2463c088556c88e09c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0b2ee5cd9b29270bf09ee2463c088556c88e09c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e41c852e38703c9a7f9ec1d4c513d781f1e46a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e41c852e38703c9a7f9ec1d4c513d781f1e46a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e41c852e38703c9a7f9ec1d4c513d781f1e46a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e41c852e38703c9a7f9ec1d4c513d781f1e46a6/comments", "author": null, "committer": null, "parents": [{"sha": "b270b096a14b869e59e10ca879b5cffa65ea3fd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b270b096a14b869e59e10ca879b5cffa65ea3fd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b270b096a14b869e59e10ca879b5cffa65ea3fd5"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "c554609e7b7d189ab5b139840d9bb26ac330aed1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e41c852e38703c9a7f9ec1d4c513d781f1e46a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e41c852e38703c9a7f9ec1d4c513d781f1e46a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e41c852e38703c9a7f9ec1d4c513d781f1e46a6", "patch": "@@ -1,3 +1,10 @@\n+2014-01-10  Jeff Law  <law@redhat.com>\n+\n+\tPR middle-end/59743\n+\t* ree.c (combine_reaching_defs): Ensure the defining statement\n+\toccurs before the extension when optimizing extensions with\n+\tdifferent source and destination hard registers.\n+\n 2014-01-10  Jan Hubicka  <jh@suse.cz>\n \n \tPR ipa/58585"}, {"sha": "63cc8cc7c32eaebda88bc664ec369f4fdf96aecc", "filename": "gcc/ree.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e41c852e38703c9a7f9ec1d4c513d781f1e46a6/gcc%2Free.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e41c852e38703c9a7f9ec1d4c513d781f1e46a6/gcc%2Free.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Free.c?ref=7e41c852e38703c9a7f9ec1d4c513d781f1e46a6", "patch": "@@ -723,8 +723,10 @@ combine_reaching_defs (ext_cand *cand, const_rtx set_pat, ext_state *state)\n \n       /* The defining statement and candidate insn must be in the same block.\n \t This is merely to keep the test for safety and updating the insn\n-\t stream simple.  */\n-      if (BLOCK_FOR_INSN (cand->insn) != BLOCK_FOR_INSN (def_insn))\n+\t stream simple.  Also ensure that within the block the candidate\n+\t follows the defining insn.  */\n+      if (BLOCK_FOR_INSN (cand->insn) != BLOCK_FOR_INSN (def_insn)\n+\t  || DF_INSN_LUID (def_insn) > DF_INSN_LUID (cand->insn))\n \treturn false;\n \n       /* If there is an overlap between the destination of DEF_INSN and"}, {"sha": "f40d56ed2c77c16c49f37166704bc43befd51752", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e41c852e38703c9a7f9ec1d4c513d781f1e46a6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e41c852e38703c9a7f9ec1d4c513d781f1e46a6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7e41c852e38703c9a7f9ec1d4c513d781f1e46a6", "patch": "@@ -1,3 +1,8 @@\n+2014-01-10  Jeff Law  <law@redhat.com>\n+\n+\tPR middle-end/59743\n+\t* gcc.c-torture/compile/pr59743.c: New test.\n+\n 2014-01-10  Jan Hubicka  <jh@suse.cz>\n \n \tPR ipa/58585"}, {"sha": "8dadba594e59ba0941120e061b3f8292c3019424", "filename": "gcc/testsuite/gcc.c-torture/compile/pr59743.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e41c852e38703c9a7f9ec1d4c513d781f1e46a6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr59743.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e41c852e38703c9a7f9ec1d4c513d781f1e46a6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr59743.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr59743.c?ref=7e41c852e38703c9a7f9ec1d4c513d781f1e46a6", "patch": "@@ -0,0 +1,23 @@\n+/* PR middle-end/59743 */\n+\n+typedef union {\n+  long all;\n+  struct {\n+    int low;\n+    int high;\n+  } s;\n+} udwords;\n+int a, b, c, d;\n+void __udivmoddi4() {\n+  udwords r;\n+  d = __builtin_clz(0);\n+  r.s.low = 0;\n+  for (; d; --d) {\n+    r.s.high = r.s.high << 1 | r.s.low >> a;\n+    r.s.low = r.s.low << b >> 1;\n+    int s = -r.all;\n+    c = s;\n+    r.all--;\n+  }\n+}\n+"}]}