{"sha": "b6dc26ba9b701d2f3f5b72fe51e97f428bab3e7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZkYzI2YmE5YjcwMWQyZjNmNWI3MmZlNTFlOTdmNDI4YmFiM2U3YQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-28T13:38:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-28T13:38:19Z"}, "message": "Minor reformatting.\n\nFrom-SVN: r247388", "tree": {"sha": "cef25ab4a4fc1f36859afa00da4a47996eae3ddd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cef25ab4a4fc1f36859afa00da4a47996eae3ddd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6dc26ba9b701d2f3f5b72fe51e97f428bab3e7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6dc26ba9b701d2f3f5b72fe51e97f428bab3e7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6dc26ba9b701d2f3f5b72fe51e97f428bab3e7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6dc26ba9b701d2f3f5b72fe51e97f428bab3e7a/comments", "author": null, "committer": null, "parents": [{"sha": "85be939ea97a39df3c15f2dac34da0cb1d55fc1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85be939ea97a39df3c15f2dac34da0cb1d55fc1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85be939ea97a39df3c15f2dac34da0cb1d55fc1d"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "17fd71d58bd0682b41618152e757c0b0c2968953", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6dc26ba9b701d2f3f5b72fe51e97f428bab3e7a/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6dc26ba9b701d2f3f5b72fe51e97f428bab3e7a/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=b6dc26ba9b701d2f3f5b72fe51e97f428bab3e7a", "patch": "@@ -3111,10 +3111,11 @@ package body Sem_Ch6 is\n                   end;\n                end if;\n \n-            --  Freezing an access type does not freeze the designated\n-            --  type, but freezing conversions between access to interfaces\n-            --  requires that the interface types themselves be frozen, so\n-            --  that dispatch table entities are properly created.\n+            --  Freezing an access type does not freeze the designated type,\n+            --  but freezing conversions between access to interfaces requires\n+            --  that the interface types themselves be frozen, so that dispatch\n+            --  table entities are properly created.\n+\n             --  Unclear whether a more general rule is needed ???\n \n             elsif Nkind (Node) = N_Type_Conversion"}, {"sha": "ba28eda23d7ce2958d5069ab200302efb5b2d5e5", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6dc26ba9b701d2f3f5b72fe51e97f428bab3e7a/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6dc26ba9b701d2f3f5b72fe51e97f428bab3e7a/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=b6dc26ba9b701d2f3f5b72fe51e97f428bab3e7a", "patch": "@@ -11945,6 +11945,7 @@ package body Sem_Res is\n \n       function In_Instance_Code return Boolean is\n          Par : Node_Id;\n+\n       begin\n          if not In_Instance then\n             return False;\n@@ -11953,24 +11954,25 @@ package body Sem_Res is\n             Par := Parent (N);\n             while Present (Par) loop\n \n-               --  The expression is part of an actual object if it appears\n-               --  in the generated object declaration in the instance.\n+               --  The expression is part of an actual object if it appears in\n+               --  the generated object declaration in the instance.\n \n                if Nkind (Par) = N_Object_Declaration\n-                  and then Present (Corresponding_Generic_Association (Par))\n+                 and then Present (Corresponding_Generic_Association (Par))\n                then\n                   return False;\n+\n                else\n-                  exit when Nkind (Par)\n-                      in N_Statement_Other_Than_Procedure_Call\n-                    or else Nkind (Par) in N_Subprogram_Call\n-                    or else Nkind (Par) in N_Declaration;\n+                  exit when\n+                    Nkind (Par) in N_Statement_Other_Than_Procedure_Call\n+                      or else Nkind (Par) in N_Subprogram_Call\n+                      or else Nkind (Par) in N_Declaration;\n                end if;\n \n                Par := Parent (Par);\n             end loop;\n \n-            --  Otherwise the expression appears within the instantiated unit.\n+            --  Otherwise the expression appears within the instantiated unit\n \n             return True;\n          end if;"}]}