{"sha": "5aec7cbfa560440801dfd0b26e408ab6fb692ed6", "node_id": "C_kwDOANBUbNoAKDVhZWM3Y2JmYTU2MDQ0MDgwMWRmZDBiMjZlNDA4YWI2ZmI2OTJlZDY", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-05-02T20:10:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-02T20:10:39Z"}, "message": "Merge #1199\n\n1199: Add new as_name interface for Dynamic types r=philberty a=philberty\n\nThe Gimple names of our dyn trait objects were looking like:\r\n\r\n  const struct dyn [HIR Trait: FnLike->[C: 0 Nid: 31 Hid: 38 Lid: 13] [(FN call ), ]<Self, &isize, &isize>] & const f\r\n\r\nThis is a horrible name but useful for debugging this patch fixes this so\r\nwe have a seperate naming for generating the type. So now it looks like:\r\n\r\n  const struct dyn [FnLike<Self, &isize, &isize>] & const f\r\n\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>", "tree": {"sha": "69fff1e277fe7e58f16722ad201861ff97de4a8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69fff1e277fe7e58f16722ad201861ff97de4a8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5aec7cbfa560440801dfd0b26e408ab6fb692ed6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJicDq/CRBK7hj4Ov3rIwAA5G8IAI7iEko8DnfSGu1WWt/zsTPL\nMyvcc3MNFYMiZJKNrSahGD7LDg9j0n4O+mk4qXryac5KvyXR+ysNTfL9rSuoAXmF\n/h1U0a8774JcExUs0EvpWGX25MgbDxR9GYmCBWJrJfBBbUYRvWD3ZU9B34ner9aK\n8/79Y0urYDmy60MlWxcQNDs0N83Dj4eFcD/v13gdoEnFu8ahhh5igA2gp1otGy11\n+3AyvfZVmZjxGHADGcCYA/SVVoIN6aSzVQI9/VnR5c0PfXTxx8UHXwHlpjzzoVnE\njHldpN6kVzBsjdDyIEmyOdHpYJyqFOKDG79GF6s+OfyA7PpQZWlOl/xoskfb2PI=\n=dkvi\n-----END PGP SIGNATURE-----\n", "payload": "tree 69fff1e277fe7e58f16722ad201861ff97de4a8f\nparent 694114ea9567d1d7bc96b3d5ce287daede11b941\nparent d6fb62465635d67a420285c361d74b41c556e9dc\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1651522239 +0000\ncommitter GitHub <noreply@github.com> 1651522239 +0000\n\nMerge #1199\n\n1199: Add new as_name interface for Dynamic types r=philberty a=philberty\n\nThe Gimple names of our dyn trait objects were looking like:\r\n\r\n  const struct dyn [HIR Trait: FnLike->[C: 0 Nid: 31 Hid: 38 Lid: 13] [(FN call ), ]<Self, &isize, &isize>] & const f\r\n\r\nThis is a horrible name but useful for debugging this patch fixes this so\r\nwe have a seperate naming for generating the type. So now it looks like:\r\n\r\n  const struct dyn [FnLike<Self, &isize, &isize>] & const f\r\n\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5aec7cbfa560440801dfd0b26e408ab6fb692ed6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5aec7cbfa560440801dfd0b26e408ab6fb692ed6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5aec7cbfa560440801dfd0b26e408ab6fb692ed6/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "694114ea9567d1d7bc96b3d5ce287daede11b941", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/694114ea9567d1d7bc96b3d5ce287daede11b941", "html_url": "https://github.com/Rust-GCC/gccrs/commit/694114ea9567d1d7bc96b3d5ce287daede11b941"}, {"sha": "d6fb62465635d67a420285c361d74b41c556e9dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6fb62465635d67a420285c361d74b41c556e9dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6fb62465635d67a420285c361d74b41c556e9dc"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "7a1562ab5442d8081d700fa7fc1a2346f9df6f5a", "filename": "gcc/rust/typecheck/rust-tyty-bounds.cc", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5aec7cbfa560440801dfd0b26e408ab6fb692ed6/gcc%2Frust%2Ftypecheck%2Frust-tyty-bounds.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5aec7cbfa560440801dfd0b26e408ab6fb692ed6/gcc%2Frust%2Ftypecheck%2Frust-tyty-bounds.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty-bounds.cc?ref=5aec7cbfa560440801dfd0b26e408ab6fb692ed6", "patch": "@@ -215,6 +215,12 @@ TypeBoundPredicate::as_string () const\n   return get ()->as_string () + subst_as_string ();\n }\n \n+std::string\n+TypeBoundPredicate::as_name () const\n+{\n+  return get ()->get_name () + subst_as_string ();\n+}\n+\n const Resolver::TraitReference *\n TypeBoundPredicate::get () const\n {\n@@ -432,6 +438,20 @@ TypeBoundsMappings::bounds_as_string () const\n   return \"bounds:[\" + raw_bounds_as_string () + \"]\";\n }\n \n+std::string\n+TypeBoundsMappings::raw_bounds_as_name () const\n+{\n+  std::string buf;\n+  for (size_t i = 0; i < specified_bounds.size (); i++)\n+    {\n+      const TypeBoundPredicate &b = specified_bounds.at (i);\n+      bool has_next = (i + 1) < specified_bounds.size ();\n+      buf += b.as_name () + (has_next ? \" + \" : \"\");\n+    }\n+\n+  return buf;\n+}\n+\n void\n TypeBoundsMappings::add_bound (TypeBoundPredicate predicate)\n {"}, {"sha": "fcbf9986d7d59b53a368f6a9877cc18b3e46be40", "filename": "gcc/rust/typecheck/rust-tyty.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5aec7cbfa560440801dfd0b26e408ab6fb692ed6/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5aec7cbfa560440801dfd0b26e408ab6fb692ed6/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc?ref=5aec7cbfa560440801dfd0b26e408ab6fb692ed6", "patch": "@@ -2867,8 +2867,7 @@ DynamicObjectType::clone () const\n std::string\n DynamicObjectType::get_name () const\n {\n-  std::string bounds = \"[\" + raw_bounds_as_string () + \"]\";\n-  return \"dyn \" + bounds;\n+  return \"dyn [\" + raw_bounds_as_name () + \"]\";\n }\n \n bool"}, {"sha": "b00237c1c27685c2bd99f03ce422c2f98ef3c540", "filename": "gcc/rust/typecheck/rust-tyty.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5aec7cbfa560440801dfd0b26e408ab6fb692ed6/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5aec7cbfa560440801dfd0b26e408ab6fb692ed6/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty.h?ref=5aec7cbfa560440801dfd0b26e408ab6fb692ed6", "patch": "@@ -124,6 +124,8 @@ class TypeBoundsMappings\n \n   std::string bounds_as_string () const;\n \n+  std::string raw_bounds_as_name () const;\n+\n protected:\n   void add_bound (TypeBoundPredicate predicate);\n \n@@ -1019,6 +1021,8 @@ class TypeBoundPredicate : public SubstitutionRef\n \n   std::string as_string () const;\n \n+  std::string as_name () const;\n+\n   const Resolver::TraitReference *get () const;\n \n   Location get_locus () const { return locus; }"}]}