{"sha": "7c05f5c46d5b0db80d65bec5f14a893d0e939c85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MwNWY1YzQ2ZDViMGRiODBkNjViZWM1ZjE0YTg5M2QwZTkzOWM4NQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-09-15T12:35:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-09-15T12:35:13Z"}, "message": "re PR tree-optimization/77544 (segfault at -O0 - infinite loop in simplification)\n\n2016-09-15  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/77544\n\t* fold-const.c (split_tree): Do not split constant ~X.\n\n\t* c-c++-common/torture/pr77544.c: New testcase.\n\nFrom-SVN: r240164", "tree": {"sha": "fee08b4a7ab85ef71f6d59ed2f9505aea883f3a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fee08b4a7ab85ef71f6d59ed2f9505aea883f3a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c05f5c46d5b0db80d65bec5f14a893d0e939c85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c05f5c46d5b0db80d65bec5f14a893d0e939c85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c05f5c46d5b0db80d65bec5f14a893d0e939c85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c05f5c46d5b0db80d65bec5f14a893d0e939c85/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "63c879fca4a3d82c0b8a5c5f42926419259f01ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63c879fca4a3d82c0b8a5c5f42926419259f01ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63c879fca4a3d82c0b8a5c5f42926419259f01ec"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "019be1a49e43f988f7f01f6a9a870de6ea58f732", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c05f5c46d5b0db80d65bec5f14a893d0e939c85/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c05f5c46d5b0db80d65bec5f14a893d0e939c85/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c05f5c46d5b0db80d65bec5f14a893d0e939c85", "patch": "@@ -1,3 +1,8 @@\n+2016-09-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/77544\n+\t* fold-const.c (split_tree): Do not split constant ~X.\n+\n 2016-09-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/77425"}, {"sha": "e5c20528b7eeeb2667e3830d2fcccb38b08d7910", "filename": "gcc/fold-const.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c05f5c46d5b0db80d65bec5f14a893d0e939c85/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c05f5c46d5b0db80d65bec5f14a893d0e939c85/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=7c05f5c46d5b0db80d65bec5f14a893d0e939c85", "patch": "@@ -837,15 +837,16 @@ split_tree (location_t loc, tree in, tree type, enum tree_code code,\n \t  var = negate_expr (var);\n \t}\n     }\n+  else if (TREE_CONSTANT (in))\n+    *conp = in;\n   else if (TREE_CODE (in) == BIT_NOT_EXPR\n \t   && code == PLUS_EXPR)\n     {\n-      /* -X - 1 is folded to ~X, undo that here.  */\n+      /* -X - 1 is folded to ~X, undo that here.  Do _not_ do this\n+         when IN is constant.  */\n       *minus_litp = build_one_cst (TREE_TYPE (in));\n       var = negate_expr (TREE_OPERAND (in, 0));\n     }\n-  else if (TREE_CONSTANT (in))\n-    *conp = in;\n   else\n     var = in;\n "}, {"sha": "6a7cc9c330638b9825382b108b41828a4c1cda13", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c05f5c46d5b0db80d65bec5f14a893d0e939c85/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c05f5c46d5b0db80d65bec5f14a893d0e939c85/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7c05f5c46d5b0db80d65bec5f14a893d0e939c85", "patch": "@@ -1,3 +1,8 @@\n+2016-09-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/77544\n+\t* c-c++-common/torture/pr77544.c: New testcase.\n+\n 2016-09-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/77475"}, {"sha": "1d1ce3ff74f619d83bae507f42b8c16fae33b044", "filename": "gcc/testsuite/c-c++-common/torture/pr77544.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c05f5c46d5b0db80d65bec5f14a893d0e939c85/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftorture%2Fpr77544.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c05f5c46d5b0db80d65bec5f14a893d0e939c85/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftorture%2Fpr77544.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftorture%2Fpr77544.c?ref=7c05f5c46d5b0db80d65bec5f14a893d0e939c85", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+\n+struct {\n+  long a : 17;\n+} b;\n+int c, d;\n+void e() { b.a = d + c + ~(long)(302806U >> 0); }"}]}