{"sha": "6adcf89d9a75ac30a64eb76a0d1bd1d55a869e09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFkY2Y4OWQ5YTc1YWMzMGE2NGViNzZhMGQxYmQxZDU1YTg2OWUwOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@kss-loka.si", "date": "2004-05-03T13:20:57Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2004-05-03T13:20:57Z"}, "message": "i386.md (*fyl2x_sfxf3, [...]): Remove insn definition.\n\n        * config/i386/i386.md (*fyl2x_sfxf3, *fyl2x_dfxf3): Remove insn\n        definition.\n        (log?f2, log10?f2, log2?f2): Reimplement expanders with\n        float_truncate insn.\n        (*fxtractsf3, *fxtractdf3): Remove insn definition.\n        (logb?f2): Reimplement expanders with float_truncate insn.\n\nFrom-SVN: r81432", "tree": {"sha": "a04502087ede0978b9f0d59cf86da38663d325c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a04502087ede0978b9f0d59cf86da38663d325c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6adcf89d9a75ac30a64eb76a0d1bd1d55a869e09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6adcf89d9a75ac30a64eb76a0d1bd1d55a869e09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6adcf89d9a75ac30a64eb76a0d1bd1d55a869e09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6adcf89d9a75ac30a64eb76a0d1bd1d55a869e09/comments", "author": null, "committer": null, "parents": [{"sha": "834eb1f02c99c7d03524e02b7dd482dc0c0e827a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/834eb1f02c99c7d03524e02b7dd482dc0c0e827a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/834eb1f02c99c7d03524e02b7dd482dc0c0e827a"}], "stats": {"total": 208, "additions": 110, "deletions": 98}, "files": [{"sha": "bcf0c0ebb76536fb1e6beca0d42564cb0adedd3e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6adcf89d9a75ac30a64eb76a0d1bd1d55a869e09/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6adcf89d9a75ac30a64eb76a0d1bd1d55a869e09/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6adcf89d9a75ac30a64eb76a0d1bd1d55a869e09", "patch": "@@ -1,3 +1,12 @@\n+2004-05-03  Uros Bizjak  <uros@kss-loka.si>\n+\n+\t* config/i386/i386.md (*fyl2x_sfxf3, *fyl2x_dfxf3): Remove insn\n+\tdefinition.\n+\t(log?f2, log10?f2, log2?f2): Reimplement expanders with\n+\tfloat_truncate insn.\n+\t(*fxtractsf3, *fxtractdf3): Remove insn definition.\n+\t(logb?f2): Reimplement expanders with float_truncate insn.\n+\n 2004-05-03  Graham Stott  <graham.stott@btinternet.com>\n \n \tPR 14718"}, {"sha": "26132f1f5c91a2ef452ada33e60d0f5250eb56df", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 101, "deletions": 98, "changes": 199, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6adcf89d9a75ac30a64eb76a0d1bd1d55a869e09/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6adcf89d9a75ac30a64eb76a0d1bd1d55a869e09/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=6adcf89d9a75ac30a64eb76a0d1bd1d55a869e09", "patch": "@@ -15458,30 +15458,6 @@\n   emit_move_insn (operands[3], CONST1_RTX (XFmode));  /* fld1 */\n })\n \n-(define_insn \"*fyl2x_sfxf3\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-         (unspec:SF [(match_operand:SF 2 \"register_operand\" \"0\")\n-\t\t     (match_operand:XF 1 \"register_operand\" \"u\")]\n-\t\t    UNSPEC_FYL2X))\n-   (clobber (match_scratch:SF 3 \"=1\"))]\n-  \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n-   && flag_unsafe_math_optimizations\"\n-  \"fyl2x\"\n-  [(set_attr \"type\" \"fpspc\")\n-   (set_attr \"mode\" \"SF\")])\n-\n-(define_insn \"*fyl2x_dfxf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-         (unspec:DF [(match_operand:DF 2 \"register_operand\" \"0\")\n-\t\t     (match_operand:XF 1 \"register_operand\" \"u\")]\n-\t\t    UNSPEC_FYL2X))\n-   (clobber (match_scratch:DF 3 \"=1\"))]\n-  \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n-   && flag_unsafe_math_optimizations\"\n-  \"fyl2x\"\n-  [(set_attr \"type\" \"fpspc\")\n-   (set_attr \"mode\" \"DF\")])\n-\n (define_insn \"*fyl2x_xf3\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n         (unspec:XF [(match_operand:XF 2 \"register_operand\" \"0\")\n@@ -15495,33 +15471,47 @@\n    (set_attr \"mode\" \"XF\")])\n \n (define_expand \"logsf2\"\n-  [(parallel [(set (match_operand:SF 0 \"register_operand\" \"\")\n-\t\t   (unspec:SF [(match_operand:SF 1 \"register_operand\" \"\")\n-\t\t\t       (match_dup 2)] UNSPEC_FYL2X))\n-\t      (clobber (match_scratch:SF 3 \"\"))])]\n+  [(set (match_dup 2)\n+\t(float_extend:XF (match_operand:SF 1 \"register_operand\" \"\")))\n+   (parallel [(set (match_dup 4)\n+\t\t   (unspec:XF [(match_dup 2)\n+\t\t\t       (match_dup 3)] UNSPEC_FYL2X))\n+\t      (clobber (match_scratch:XF 5 \"\"))])\n+   (set (match_operand:SF 0 \"register_operand\" \"\")\n+\t(float_truncate:SF (match_dup 4)))]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n    && flag_unsafe_math_optimizations\"\n {\n   rtx temp;\n \n   operands[2] = gen_reg_rtx (XFmode);\n+  operands[3] = gen_reg_rtx (XFmode);\n+  operands[4] = gen_reg_rtx (XFmode);\n+\n   temp = standard_80387_constant_rtx (4); /* fldln2 */\n-  emit_move_insn (operands[2], temp);\n+  emit_move_insn (operands[3], temp);\n })\n \n (define_expand \"logdf2\"\n-  [(parallel [(set (match_operand:DF 0 \"register_operand\" \"\")\n-\t\t   (unspec:DF [(match_operand:DF 1 \"register_operand\" \"\")\n-\t\t\t       (match_dup 2)] UNSPEC_FYL2X))\n-\t      (clobber (match_scratch:DF 3 \"\"))])]\n+  [(set (match_dup 2)\n+\t(float_extend:XF (match_operand:DF 1 \"register_operand\" \"\")))\n+   (parallel [(set (match_dup 4)\n+\t\t   (unspec:XF [(match_dup 2)\n+\t\t\t       (match_dup 3)] UNSPEC_FYL2X))\n+\t      (clobber (match_scratch:XF 5 \"\"))])\n+   (set (match_operand:DF 0 \"register_operand\" \"\")\n+\t(float_truncate:DF (match_dup 4)))]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n    && flag_unsafe_math_optimizations\"\n {\n   rtx temp;\n \n   operands[2] = gen_reg_rtx (XFmode);\n+  operands[3] = gen_reg_rtx (XFmode);\n+  operands[4] = gen_reg_rtx (XFmode);\n+\n   temp = standard_80387_constant_rtx (4); /* fldln2 */\n-  emit_move_insn (operands[2], temp);\n+  emit_move_insn (operands[3], temp);\n })\n \n (define_expand \"logxf2\"\n@@ -15540,33 +15530,47 @@\n })\n \n (define_expand \"log10sf2\"\n-  [(parallel [(set (match_operand:SF 0 \"register_operand\" \"\")\n-\t\t   (unspec:SF [(match_operand:SF 1 \"register_operand\" \"\")\n-\t\t\t       (match_dup 2)] UNSPEC_FYL2X))\n-\t      (clobber (match_scratch:SF 3 \"\"))])]\n+  [(set (match_dup 2)\n+\t(float_extend:XF (match_operand:SF 1 \"register_operand\" \"\")))\n+   (parallel [(set (match_dup 4)\n+\t\t   (unspec:XF [(match_dup 2)\n+\t\t\t       (match_dup 3)] UNSPEC_FYL2X))\n+\t      (clobber (match_scratch:XF 5 \"\"))])\n+   (set (match_operand:SF 0 \"register_operand\" \"\")\n+\t(float_truncate:SF (match_dup 4)))]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n    && flag_unsafe_math_optimizations\"\n {\n   rtx temp;\n \n   operands[2] = gen_reg_rtx (XFmode);\n+  operands[3] = gen_reg_rtx (XFmode);\n+  operands[4] = gen_reg_rtx (XFmode);\n+\n   temp = standard_80387_constant_rtx (3); /* fldlg2 */\n-  emit_move_insn (operands[2], temp);\n+  emit_move_insn (operands[3], temp);\n })\n \n (define_expand \"log10df2\"\n-  [(parallel [(set (match_operand:DF 0 \"register_operand\" \"\")\n-\t\t   (unspec:DF [(match_operand:DF 1 \"register_operand\" \"\")\n-\t\t\t       (match_dup 2)] UNSPEC_FYL2X))\n-\t      (clobber (match_scratch:DF 3 \"\"))])]\n+  [(set (match_dup 2)\n+\t(float_extend:XF (match_operand:DF 1 \"register_operand\" \"\")))\n+   (parallel [(set (match_dup 4)\n+\t\t   (unspec:XF [(match_dup 2)\n+\t\t\t       (match_dup 3)] UNSPEC_FYL2X))\n+\t      (clobber (match_scratch:XF 5 \"\"))])\n+   (set (match_operand:DF 0 \"register_operand\" \"\")\n+\t(float_truncate:DF (match_dup 4)))]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n    && flag_unsafe_math_optimizations\"\n {\n   rtx temp;\n \n   operands[2] = gen_reg_rtx (XFmode);\n+  operands[3] = gen_reg_rtx (XFmode);\n+  operands[4] = gen_reg_rtx (XFmode);\n+\n   temp = standard_80387_constant_rtx (3); /* fldlg2 */\n-  emit_move_insn (operands[2], temp);\n+  emit_move_insn (operands[3], temp);\n })\n \n (define_expand \"log10xf2\"\n@@ -15585,28 +15589,41 @@\n })\n \n (define_expand \"log2sf2\"\n-  [(parallel [(set (match_operand:SF 0 \"register_operand\" \"\")\n-\t\t   (unspec:SF [(match_operand:SF 1 \"register_operand\" \"\")\n-\t\t\t       (match_dup 2)] UNSPEC_FYL2X))\n-\t      (clobber (match_scratch:SF 3 \"\"))])]\n+  [(set (match_dup 2)\n+\t(float_extend:XF (match_operand:SF 1 \"register_operand\" \"\")))\n+   (parallel [(set (match_dup 4)\n+\t\t   (unspec:XF [(match_dup 2)\n+\t\t\t       (match_dup 3)] UNSPEC_FYL2X))\n+\t      (clobber (match_scratch:XF 5 \"\"))])\n+   (set (match_operand:SF 0 \"register_operand\" \"\")\n+\t(float_truncate:SF (match_dup 4)))]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n    && flag_unsafe_math_optimizations\"\n {\n   operands[2] = gen_reg_rtx (XFmode);\n-  emit_move_insn (operands[2], CONST1_RTX (XFmode));  /* fld1 */\n+  operands[3] = gen_reg_rtx (XFmode);\n+  operands[4] = gen_reg_rtx (XFmode);\n \n+  emit_move_insn (operands[3], CONST1_RTX (XFmode));  /* fld1 */\n })\n \n (define_expand \"log2df2\"\n-  [(parallel [(set (match_operand:DF 0 \"register_operand\" \"\")\n-\t\t   (unspec:DF [(match_operand:DF 1 \"register_operand\" \"\")\n-\t\t\t       (match_dup 2)] UNSPEC_FYL2X))\n-\t      (clobber (match_scratch:DF 3 \"\"))])]\n+  [(set (match_dup 2)\n+\t(float_extend:XF (match_operand:DF 1 \"register_operand\" \"\")))\n+   (parallel [(set (match_dup 4)\n+\t\t   (unspec:XF [(match_dup 2)\n+\t\t\t       (match_dup 3)] UNSPEC_FYL2X))\n+\t      (clobber (match_scratch:XF 5 \"\"))])\n+   (set (match_operand:DF 0 \"register_operand\" \"\")\n+\t(float_truncate:DF (match_dup 4)))]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n    && flag_unsafe_math_optimizations\"\n {\n   operands[2] = gen_reg_rtx (XFmode);\n-  emit_move_insn (operands[2], CONST1_RTX (XFmode));  /* fld1 */\n+  operands[3] = gen_reg_rtx (XFmode);\n+  operands[4] = gen_reg_rtx (XFmode);\n+\n+  emit_move_insn (operands[3], CONST1_RTX (XFmode));  /* fld1 */\n })\n \n (define_expand \"log2xf2\"\n@@ -15621,66 +15638,52 @@\n   emit_move_insn (operands[2], CONST1_RTX (XFmode));  /* fld1 */\n })\n \n-(define_insn \"*fxtractdf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(unspec:DF [(match_operand:DF 2 \"register_operand\" \"0\")]\n+(define_insn \"*fxtractxf3\"\n+  [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n+\t(unspec:XF [(match_operand:XF 2 \"register_operand\" \"0\")]\n \t\t   UNSPEC_XTRACT_FRACT))\n-   (set (match_operand:DF 1 \"register_operand\" \"=u\")\n-        (unspec:DF [(match_dup 2)] UNSPEC_XTRACT_EXP))]\n+   (set (match_operand:XF 1 \"register_operand\" \"=u\")\n+        (unspec:XF [(match_dup 2)] UNSPEC_XTRACT_EXP))]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387 \n    && flag_unsafe_math_optimizations\"\n   \"fxtract\"\n   [(set_attr \"type\" \"fpspc\")\n-   (set_attr \"mode\" \"DF\")])\n+   (set_attr \"mode\" \"XF\")])\n \n-(define_expand \"logbdf2\"\n-  [(parallel [(set (match_dup 2)\n-\t\t   (unspec:DF [(match_operand:DF 1 \"register_operand\" \"\")]\n-\t\t\t      UNSPEC_XTRACT_FRACT))\n-\t      (set (match_operand:DF 0 \"register_operand\" \"\")\n-\t\t   (unspec:DF [(match_dup 1)] UNSPEC_XTRACT_EXP))])]\n+(define_expand \"logbsf2\"\n+  [(set (match_dup 2)\n+\t(float_extend:XF (match_operand:SF 1 \"register_operand\" \"\")))\n+   (parallel [(set (match_dup 3)\n+\t\t   (unspec:XF [(match_dup 2)] UNSPEC_XTRACT_FRACT))\n+\t      (set (match_dup 4)\n+\t\t   (unspec:XF [(match_dup 2)] UNSPEC_XTRACT_EXP))])\n+   (set (match_operand:SF 0 \"register_operand\" \"\")\n+\t(float_truncate:SF (match_dup 4)))]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387 \n    && flag_unsafe_math_optimizations\"\n {\n-  operands[2] = gen_reg_rtx (DFmode);\n+  operands[2] = gen_reg_rtx (XFmode);\n+  operands[3] = gen_reg_rtx (XFmode);\n+  operands[4] = gen_reg_rtx (XFmode);\n })\n \n-(define_insn \"*fxtractsf3\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(unspec:SF [(match_operand:SF 2 \"register_operand\" \"0\")]\n-\t\t   UNSPEC_XTRACT_FRACT))\n-   (set (match_operand:SF 1 \"register_operand\" \"=u\")\n-        (unspec:SF [(match_dup 2)] UNSPEC_XTRACT_EXP))]\n-  \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387 \n-   && flag_unsafe_math_optimizations\"\n-  \"fxtract\"\n-  [(set_attr \"type\" \"fpspc\")\n-   (set_attr \"mode\" \"SF\")])\n-\n-(define_expand \"logbsf2\"\n-  [(parallel [(set (match_dup 2)\n-\t\t   (unspec:SF [(match_operand:SF 1 \"register_operand\" \"\")]\n-\t\t\t      UNSPEC_XTRACT_FRACT))\n-\t      (set (match_operand:SF 0 \"register_operand\" \"\")\n-\t\t   (unspec:SF [(match_dup 1)] UNSPEC_XTRACT_EXP))])]\n+(define_expand \"logbdf2\"\n+  [(set (match_dup 2)\n+\t(float_extend:XF (match_operand:DF 1 \"register_operand\" \"\")))\n+   (parallel [(set (match_dup 3)\n+\t\t   (unspec:XF [(match_dup 2)] UNSPEC_XTRACT_FRACT))\n+\t      (set (match_dup 4)\n+\t\t   (unspec:XF [(match_dup 2)] UNSPEC_XTRACT_EXP))])\n+   (set (match_operand:DF 0 \"register_operand\" \"\")\n+\t(float_truncate:DF (match_dup 4)))]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387 \n    && flag_unsafe_math_optimizations\"\n {\n-  operands[2] = gen_reg_rtx (SFmode);\n+  operands[2] = gen_reg_rtx (XFmode);\n+  operands[3] = gen_reg_rtx (XFmode);\n+  operands[4] = gen_reg_rtx (XFmode);\n })\n \n-(define_insn \"*fxtractxf3\"\n-  [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n-\t(unspec:XF [(match_operand:XF 2 \"register_operand\" \"0\")]\n-\t\t   UNSPEC_XTRACT_FRACT))\n-   (set (match_operand:XF 1 \"register_operand\" \"=u\")\n-        (unspec:XF [(match_dup 2)] UNSPEC_XTRACT_EXP))]\n-  \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387 \n-   && flag_unsafe_math_optimizations\"\n-  \"fxtract\"\n-  [(set_attr \"type\" \"fpspc\")\n-   (set_attr \"mode\" \"XF\")])\n-\n (define_expand \"logbxf2\"\n   [(parallel [(set (match_dup 2)\n \t\t   (unspec:XF [(match_operand:XF 1 \"register_operand\" \"\")]"}]}