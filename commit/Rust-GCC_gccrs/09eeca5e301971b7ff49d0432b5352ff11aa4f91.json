{"sha": "09eeca5e301971b7ff49d0432b5352ff11aa4f91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDllZWNhNWUzMDE5NzFiN2ZmNDlkMDQzMmI1MzUyZmYxMWFhNGY5MQ==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2004-07-08T20:21:00Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2004-07-08T20:21:00Z"}, "message": "* pa.md (prefetch_32, prefetch_64): Simplify constraint checks.\n\nFrom-SVN: r84310", "tree": {"sha": "5cbd31d8aca2f0918783be651a82cbeb8ed85339", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cbd31d8aca2f0918783be651a82cbeb8ed85339"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09eeca5e301971b7ff49d0432b5352ff11aa4f91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09eeca5e301971b7ff49d0432b5352ff11aa4f91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09eeca5e301971b7ff49d0432b5352ff11aa4f91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09eeca5e301971b7ff49d0432b5352ff11aa4f91/comments", "author": null, "committer": null, "parents": [{"sha": "ef22126d1be677e6cdb3051bdae18e91dc59bf7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef22126d1be677e6cdb3051bdae18e91dc59bf7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef22126d1be677e6cdb3051bdae18e91dc59bf7b"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "e568892111a03164eb2787c87f69163d639167da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09eeca5e301971b7ff49d0432b5352ff11aa4f91/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09eeca5e301971b7ff49d0432b5352ff11aa4f91/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=09eeca5e301971b7ff49d0432b5352ff11aa4f91", "patch": "@@ -1,3 +1,7 @@\n+2004-07-08  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* pa.md (prefetch_32, prefetch_64): Simplify constraint checks.\n+\n 2004-07-08  Zack Weinberg  <zack@codesourcery.com>\n \n \t* c-decl.c (static_ctors, static_dtors): Make static."}, {"sha": "26588540134f87cbd92212f432d2fbfa9b6dd757", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09eeca5e301971b7ff49d0432b5352ff11aa4f91/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09eeca5e301971b7ff49d0432b5352ff11aa4f91/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=09eeca5e301971b7ff49d0432b5352ff11aa4f91", "patch": "@@ -9393,12 +9393,9 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n \t     (match_operand:DI 2 \"const_int_operand\" \"n,n\"))]\n   \"TARGET_64BIT\n    && (operands[2] != const0_rtx\n-       || REG_P (XEXP (operands[0], 0))\n-       || IS_INDEX_ADDR_P (XEXP (operands[0], 0))\n-       || (GET_CODE (XEXP (operands[0], 0)) == PLUS\n-\t   && REG_P (XEXP (XEXP (operands[0], 0), 0))\n-\t   && GET_CODE (XEXP (XEXP (operands[0], 0), 1)) == CONST_INT\n-\t   && VAL_5_BITS_P (XEXP (XEXP (operands[0], 0), 1))))\"\n+       || GET_CODE (XEXP (operands[0], 0)) != PLUS\n+       || GET_CODE (XEXP (XEXP (operands[0], 0), 1)) != CONST_INT\n+       || VAL_5_BITS_P (XEXP (XEXP (operands[0], 0), 1)))\"\n {\n   /* The SL completor indicates good spatial locality but poor temporal\n      locality.  The ldw instruction with a target of general register 0\n@@ -9448,12 +9445,9 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n \t     (match_operand:SI 2 \"const_int_operand\" \"n,n\"))]\n   \"TARGET_PA_20\n    && (operands[2] != const0_rtx\n-       || REG_P (XEXP (operands[0], 0))\n-       || IS_INDEX_ADDR_P (XEXP (operands[0], 0))\n-       || (GET_CODE (XEXP (operands[0], 0)) == PLUS\n-\t   && REG_P (XEXP (XEXP (operands[0], 0), 0))\n-\t   && GET_CODE (XEXP (XEXP (operands[0], 0), 1)) == CONST_INT\n-\t   && VAL_5_BITS_P (XEXP (XEXP (operands[0], 0), 1))))\"\n+       || GET_CODE (XEXP (operands[0], 0)) != PLUS\n+       || GET_CODE (XEXP (XEXP (operands[0], 0), 1)) != CONST_INT\n+       || VAL_5_BITS_P (XEXP (XEXP (operands[0], 0), 1)))\"\n {\n   /* The SL completor indicates good spatial locality but poor temporal\n      locality.  The ldw instruction with a target of general register 0"}]}