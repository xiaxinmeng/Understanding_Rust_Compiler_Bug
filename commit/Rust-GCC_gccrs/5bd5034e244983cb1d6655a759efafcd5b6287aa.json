{"sha": "5bd5034e244983cb1d6655a759efafcd5b6287aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJkNTAzNGUyNDQ5ODNjYjFkNjY1NWE3NTllZmFmY2Q1YjYyODdhYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2012-04-02T10:04:10Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-04-02T10:04:10Z"}, "message": "Partially revert:\n\n\t2012-03-29  Richard Guenther  <rguenther@suse.de>\n\n\t* rtl.h (extended_count): Remove.\n\t* combine.c (extended_count): Remove.\n\nFrom-SVN: r186077", "tree": {"sha": "25a87d90e52dfd9812287295b22efbecb3a3a3a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25a87d90e52dfd9812287295b22efbecb3a3a3a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bd5034e244983cb1d6655a759efafcd5b6287aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bd5034e244983cb1d6655a759efafcd5b6287aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bd5034e244983cb1d6655a759efafcd5b6287aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bd5034e244983cb1d6655a759efafcd5b6287aa/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "36504e5f465b19d444187bcee11a26e1842d277c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36504e5f465b19d444187bcee11a26e1842d277c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36504e5f465b19d444187bcee11a26e1842d277c"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "e5abe458bf6c242a2b9dde8b849659c4423a5b5d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bd5034e244983cb1d6655a759efafcd5b6287aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bd5034e244983cb1d6655a759efafcd5b6287aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5bd5034e244983cb1d6655a759efafcd5b6287aa", "patch": "@@ -1,3 +1,11 @@\n+2012-04-02  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPartially revert:\n+\t2012-03-29  Richard Guenther  <rguenther@suse.de>\n+\n+\t* rtl.h (extended_count): Remove.\n+\t* combine.c (extended_count): Remove.\n+\n 2012-04-02  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/40942"}, {"sha": "7eaaf476c6eb9189f8614963456d6ab358ac93ea", "filename": "gcc/combine.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bd5034e244983cb1d6655a759efafcd5b6287aa/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bd5034e244983cb1d6655a759efafcd5b6287aa/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=5bd5034e244983cb1d6655a759efafcd5b6287aa", "patch": "@@ -9674,6 +9674,31 @@ reg_num_sign_bit_copies_for_combine (const_rtx x, enum machine_mode mode,\n   return NULL;\n }\n \f\n+/* Return the number of \"extended\" bits there are in X, when interpreted\n+   as a quantity in MODE whose signedness is indicated by UNSIGNEDP.  For\n+   unsigned quantities, this is the number of high-order zero bits.\n+   For signed quantities, this is the number of copies of the sign bit\n+   minus 1.  In both case, this function returns the number of \"spare\"\n+   bits.  For example, if two quantities for which this function returns\n+   at least 1 are added, the addition is known not to overflow.\n+\n+   This function will always return 0 unless called during combine, which\n+   implies that it must be called from a define_split.  */\n+\n+unsigned int\n+extended_count (const_rtx x, enum machine_mode mode, int unsignedp)\n+{\n+  if (nonzero_sign_valid == 0)\n+    return 0;\n+\n+  return (unsignedp\n+\t  ? (HWI_COMPUTABLE_MODE_P (mode)\n+\t     ? (unsigned int) (GET_MODE_PRECISION (mode) - 1\n+\t\t\t       - floor_log2 (nonzero_bits (x, mode)))\n+\t     : 0)\n+\t  : num_sign_bit_copies (x, mode) - 1);\n+}\n+\n /* This function is called from `simplify_shift_const' to merge two\n    outer operations.  Specifically, we have already found that we need\n    to perform operation *POP0 with constant *PCONST0 at the outermost"}, {"sha": "30931b74df7bf701b757125ad8d5c67e4b227a34", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bd5034e244983cb1d6655a759efafcd5b6287aa/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bd5034e244983cb1d6655a759efafcd5b6287aa/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=5bd5034e244983cb1d6655a759efafcd5b6287aa", "patch": "@@ -2455,6 +2455,7 @@ extern bool validate_subreg (enum machine_mode, enum machine_mode,\n \t\t\t     const_rtx, unsigned int);\n \n /* In combine.c  */\n+extern unsigned int extended_count (const_rtx, enum machine_mode, int);\n extern rtx remove_death (unsigned int, rtx);\n extern void dump_combine_stats (FILE *);\n extern void dump_combine_total_stats (FILE *);"}]}