{"sha": "a6bbf1cc9f2847115543d720a99152d7dc2c4892", "node_id": "C_kwDOANBUbNoAKGE2YmJmMWNjOWYyODQ3MTE1NTQzZDcyMGE5OTE1MmQ3ZGMyYzQ4OTI", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2021-10-26T17:19:05Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2021-10-28T14:48:39Z"}, "message": "Unify EVRP and VRP folding predicate message.\n\nEVRP issues a message fior folding predicates in a different format than\nVRP does, this patch unifies the messaging.\n\n\tgcc/\n\t* vr-values.c (simplify_using_ranges::fold_cond): Change fold message.\n\n\tgcc/testsuite/\n\t* gcc.dg/tree-ssa/evrp9.c: Adjust message scanned for.\n\t* gcc.dg/tree-ssa/pr21458-2.c: Ditto.", "tree": {"sha": "d989e1d3eeebed718912c94028d6d7ec819e9099", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d989e1d3eeebed718912c94028d6d7ec819e9099"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6bbf1cc9f2847115543d720a99152d7dc2c4892", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6bbf1cc9f2847115543d720a99152d7dc2c4892", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6bbf1cc9f2847115543d720a99152d7dc2c4892", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6bbf1cc9f2847115543d720a99152d7dc2c4892/comments", "author": null, "committer": null, "parents": [{"sha": "d46aeb5906b8ed7ee255cfbacc5cf9d2f56b850c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d46aeb5906b8ed7ee255cfbacc5cf9d2f56b850c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d46aeb5906b8ed7ee255cfbacc5cf9d2f56b850c"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "fb7c319fc4359a9e476e47954824589fdc326515", "filename": "gcc/testsuite/gcc.dg/tree-ssa/evrp9.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6bbf1cc9f2847115543d720a99152d7dc2c4892/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fevrp9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6bbf1cc9f2847115543d720a99152d7dc2c4892/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fevrp9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fevrp9.c?ref=a6bbf1cc9f2847115543d720a99152d7dc2c4892", "patch": "@@ -24,5 +24,7 @@ foo (unsigned int x, unsigned int y)\n     bar ();\n }\n \n-/* { dg-final { scan-tree-dump-not \"== 5\" \"evrp\" } } */\n-/* { dg-final { scan-tree-dump-not \"== 6\" \"evrp\" } } */\n+/* { dg-final { scan-tree-dump-times \"Folding predicate minv_.* == 5 to 0\" 1 \"evrp\" } } */\n+/* { dg-final { scan-tree-dump-times \"Folding predicate minv_.* == 6 to 0\" 1 \"evrp\" } } */\n+/* { dg-final { scan-tree-dump-times \"Folding predicate maxv_.* == 5 to 0\" 1 \"evrp\" } } */\n+/* { dg-final { scan-tree-dump-times \"Folding predicate maxv_.* == 6 to 0\" 1 \"evrp\" } } */"}, {"sha": "9610570e2729afffec8adc2849382f0548891cf3", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr21458-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6bbf1cc9f2847115543d720a99152d7dc2c4892/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21458-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6bbf1cc9f2847115543d720a99152d7dc2c4892/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21458-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21458-2.c?ref=a6bbf1cc9f2847115543d720a99152d7dc2c4892", "patch": "@@ -16,4 +16,4 @@ foo (int a)\n     }\n }\n \n-/* { dg-final { scan-tree-dump-times \"Predicate evaluates to: 1\" 1 \"evrp\" } } */\n+/* { dg-final { scan-tree-dump-times \"Folding predicate.* to 1\" 1 \"evrp\" } } */"}, {"sha": "ea925f7559d244453db64bb84e6594554f10bc1c", "filename": "gcc/vr-values.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6bbf1cc9f2847115543d720a99152d7dc2c4892/gcc%2Fvr-values.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6bbf1cc9f2847115543d720a99152d7dc2c4892/gcc%2Fvr-values.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvr-values.c?ref=a6bbf1cc9f2847115543d720a99152d7dc2c4892", "patch": "@@ -3495,12 +3495,18 @@ simplify_using_ranges::fold_cond (gcond *cond)\n       if (TREE_CODE (gimple_cond_lhs (cond)) != SSA_NAME\n \t  && TREE_CODE (gimple_cond_rhs (cond)) != SSA_NAME)\n \treturn false;\n+      if (dump_file)\n+\t{\n+\t  fprintf (dump_file, \"Folding predicate \");\n+\t  print_gimple_expr (dump_file, cond, 0);\n+\t  fprintf (dump_file, \" to \");\n+\t}\n       edge e0 = EDGE_SUCC (gimple_bb (cond), 0);\n       edge e1 = EDGE_SUCC (gimple_bb (cond), 1);\n       if (r.zero_p ())\n \t{\n-\t  if (dump_file && (dump_flags & TDF_DETAILS))\n-\t    fprintf (dump_file, \"\\nPredicate evaluates to: 0\\n\");\n+\t  if (dump_file)\n+\t    fprintf (dump_file, \"0\\n\");\n \t  gimple_cond_make_false (cond);\n \t  if (e0->flags & EDGE_TRUE_VALUE)\n \t    set_and_propagate_unexecutable (e0);\n@@ -3509,8 +3515,8 @@ simplify_using_ranges::fold_cond (gcond *cond)\n \t}\n       else\n \t{\n-\t  if (dump_file && (dump_flags & TDF_DETAILS))\n-\t    fprintf (dump_file, \"\\nPredicate evaluates to: 1\\n\");\n+\t  if (dump_file)\n+\t    fprintf (dump_file, \"1\\n\");\n \t  gimple_cond_make_true (cond);\n \t  if (e0->flags & EDGE_FALSE_VALUE)\n \t    set_and_propagate_unexecutable (e0);"}]}