{"sha": "b927d3a45120ee708b6579bd482bb75d627ebd9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjkyN2QzYTQ1MTIwZWU3MDhiNjU3OWJkNDgyYmI3NWQ2MjdlYmQ5ZA==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2005-01-09T13:54:34Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2005-01-09T13:54:34Z"}, "message": "parse.y (process_imports): Allocate (and free) original_name only when not already defined.\n\n       * parse.y (process_imports): Allocate (and free) original_name only\n       when not already defined.\n       * jcf-parse.c (read_class): Free results of find_class() and\n       lrealpath().\n       (java_parse_file): Keep pointer to head of file_list and free when\n       done. Free result of lrealpath().\n\nFrom-SVN: r93109", "tree": {"sha": "36c506c4a7e19915d85364c6a0dde34fd15d7d22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36c506c4a7e19915d85364c6a0dde34fd15d7d22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b927d3a45120ee708b6579bd482bb75d627ebd9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b927d3a45120ee708b6579bd482bb75d627ebd9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b927d3a45120ee708b6579bd482bb75d627ebd9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b927d3a45120ee708b6579bd482bb75d627ebd9d/comments", "author": null, "committer": null, "parents": [{"sha": "e1a5510b3d36fe1b0dfa1cb2c81cd6fdb1dd1c3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1a5510b3d36fe1b0dfa1cb2c81cd6fdb1dd1c3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1a5510b3d36fe1b0dfa1cb2c81cd6fdb1dd1c3d"}], "stats": {"total": 43, "additions": 34, "deletions": 9}, "files": [{"sha": "af1736dc96a41ac48e20961a11bca96f658ecc9a", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b927d3a45120ee708b6579bd482bb75d627ebd9d/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b927d3a45120ee708b6579bd482bb75d627ebd9d/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=b927d3a45120ee708b6579bd482bb75d627ebd9d", "patch": "@@ -1,3 +1,12 @@\n+2005-01-08  Mark Wielaard  <mark@klomp.org>\n+\n+\t* parse.y (process_imports): Allocate (and free) original_name only\n+\twhen not already defined.\n+\t* jcf-parse.c (read_class): Free results of find_class() and\n+\tlrealpath().\n+\t(java_parse_file): Keep pointer to head of file_list and free when\n+\tdone. Free result of lrealpath().\n+\n 2005-01-05  Tom Tromey  <tromey@redhat.com>\n \n \t* gcj.texi (Standard Properties): java.ext.dirs is now used."}, {"sha": "50a75054cb1feaad3d1ff4bc64064cf0d4b4e878", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b927d3a45120ee708b6579bd482bb75d627ebd9d/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b927d3a45120ee708b6579bd482bb75d627ebd9d/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=b927d3a45120ee708b6579bd482bb75d627ebd9d", "patch": "@@ -530,18 +530,25 @@ read_class (tree name)\n \n   if (jcf == NULL)\n     {\n+      const char* path_name;\n       this_jcf.zipd = NULL;\n       jcf = &this_jcf;\n-      if (find_class (IDENTIFIER_POINTER (name), IDENTIFIER_LENGTH (name),\n-\t\t      &this_jcf, 1) == 0)\n+      \n+      path_name = find_class (IDENTIFIER_POINTER (name),\n+\t\t\t      IDENTIFIER_LENGTH (name),\n+\t\t\t      &this_jcf, 1);\n+      if (path_name == 0)\n \treturn 0;\n+      else\n+\tfree((char *) path_name);\n     }\n \n   current_jcf = jcf;\n \n   if (current_jcf->java_source)\n     {\n       const char *filename = current_jcf->filename;\n+      char *real_path;\n       tree given_file, real_file;\n       FILE *finput;\n       int generate;\n@@ -551,7 +558,9 @@ read_class (tree name)\n \n       given_file = get_identifier (filename);\n       filename = IDENTIFIER_POINTER (given_file);\n-      real_file = get_identifier (lrealpath (filename));\n+      real_path = lrealpath (filename);\n+      real_file = get_identifier (real_path);\n+      free (real_path);\n \n       generate = IS_A_COMMAND_LINE_FILENAME_P (given_file);\n       output_class = current_class = NULL_TREE;\n@@ -1025,7 +1034,7 @@ java_parse_file (int set_yydebug ATTRIBUTE_UNUSED)\n {\n   int filename_count = 0;\n   location_t save_location = input_location;\n-  char *list, *next;\n+  char *file_list = NULL, *list, *next;\n   tree node;\n   FILE *finput = NULL;\n   int in_quotes = 0;\n@@ -1063,6 +1072,7 @@ java_parse_file (int set_yydebug ATTRIBUTE_UNUSED)\n \t}\n       fclose (finput);\n       finput = NULL;\n+      file_list = list;\n     }\n   else\n     list = (char *) main_input_filename;\n@@ -1138,6 +1148,9 @@ java_parse_file (int set_yydebug ATTRIBUTE_UNUSED)\n       list = next;\n     }\n \n+  if (file_list != NULL)\n+    free (file_list);\n+\n   if (filename_count == 0)\n     warning (\"no input file specified\");\n \n@@ -1159,13 +1172,16 @@ java_parse_file (int set_yydebug ATTRIBUTE_UNUSED)\n   for (node = current_file_list; node; node = TREE_CHAIN (node))\n     {\n       unsigned char magic_string[4];\n+      char *real_path;\n       uint32 magic = 0;\n       tree name = DECL_NAME (node);\n       tree real_file;\n       const char *filename = IDENTIFIER_POINTER (name);\n \n       /* Skip already parsed files */\n-      real_file = get_identifier (lrealpath (filename));\n+      real_path = lrealpath (filename);\n+      real_file = get_identifier (real_path);\n+      free (real_path);\n       if (HAS_BEEN_ALREADY_PARSED_P (real_file))\n \tcontinue;\n "}, {"sha": "b09bb87515741d41050c1ec41a8f93f8f97f614b", "filename": "gcc/java/parse.y", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b927d3a45120ee708b6579bd482bb75d627ebd9d/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b927d3a45120ee708b6579bd482bb75d627ebd9d/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=b927d3a45120ee708b6579bd482bb75d627ebd9d", "patch": "@@ -6955,14 +6955,14 @@ process_imports (void)\n       tree to_be_found = EXPR_WFL_NODE (TREE_PURPOSE (import));\n       char *original_name;\n \n-      original_name = xmemdup (IDENTIFIER_POINTER (to_be_found),\n-\t\t\t       IDENTIFIER_LENGTH (to_be_found),\n-\t\t\t       IDENTIFIER_LENGTH (to_be_found) + 1);\n-\n       /* Don't load twice something already defined. */\n       if (IDENTIFIER_CLASS_VALUE (to_be_found))\n \tcontinue;\n \n+      original_name = xmemdup (IDENTIFIER_POINTER (to_be_found),\n+\t\t\t       IDENTIFIER_LENGTH (to_be_found),\n+\t\t\t       IDENTIFIER_LENGTH (to_be_found) + 1);\n+\n       while (1)\n \t{\n \t  tree left;"}]}