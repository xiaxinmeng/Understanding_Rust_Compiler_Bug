{"sha": "b7150e45977639889fad84cc279a8ae2dff5d28e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjcxNTBlNDU5Nzc2Mzk4ODlmYWQ4NGNjMjc5YThhZTJkZmY1ZDI4ZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-11T20:41:33Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-11T20:41:33Z"}, "message": "(rescan): Fix botches with `-lint': the output buffer pointer was not recached properly, leading to lost output.\n\n(rescan): Fix botches with `-lint': the output buffer pointer was not\nrecached properly, leading to lost output.  Also, buffer overrun was\npossible.\n\nFrom-SVN: r7896", "tree": {"sha": "9539fef33e4487d1bbb524d9f291663b7bab8aaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9539fef33e4487d1bbb524d9f291663b7bab8aaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7150e45977639889fad84cc279a8ae2dff5d28e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7150e45977639889fad84cc279a8ae2dff5d28e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7150e45977639889fad84cc279a8ae2dff5d28e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7150e45977639889fad84cc279a8ae2dff5d28e/comments", "author": null, "committer": null, "parents": [{"sha": "c451a7a05b5fd1d72b66f1762f34e76bd39bf755", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c451a7a05b5fd1d72b66f1762f34e76bd39bf755", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c451a7a05b5fd1d72b66f1762f34e76bd39bf755"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "65e2d8f5683cebfbe646bdebf769e9eb2774ec20", "filename": "gcc/cccp.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7150e45977639889fad84cc279a8ae2dff5d28e/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7150e45977639889fad84cc279a8ae2dff5d28e/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=b7150e45977639889fad84cc279a8ae2dff5d28e", "patch": "@@ -2797,6 +2797,9 @@ do { ip = &instack[indepth];\t\t\\\n \tchar *lintcmd = get_lintcmd (ibp, limit, &argbp, &arglen, &cmdlen);\n \n \tif (lintcmd != NULL) {\n+\t  op->bufp = obp;\n+\t  check_expand (op, 13 + cmdlen);\n+\t  obp = op->bufp;\n \t  /* I believe it is always safe to emit this newline: */\n \t  obp[-1] = '\\n';\n \t  bcopy (\"#pragma lint \", (char *) obp, 13);\n@@ -2811,10 +2814,12 @@ do { ip = &instack[indepth];\t\t\\\n \t  }\n \n \t  /* OK, now bring us back to the state we were in before we entered\n-\t     this branch.  We need #line b/c the newline for the pragma\n-\t     could fuck things up. */\n+\t     this branch.  We need #line because the #pragma's newline always\n+\t     messes up the line count.  */\n+\t  op->bufp = obp;\n \t  output_line_command (ip, op, 0, same_file);\n-\t  *(obp++) = ' ';\t/* just in case, if comments are copied thru */\n+\t  check_expand (op, ip->length - (ip->bufp - ip->buf));\n+\t  obp = op->bufp;\n \t  *(obp++) = '/';\n \t}\n       }"}]}