{"sha": "42a6ff5138ad896ac47ab9a96a51a354be9522a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJhNmZmNTEzOGFkODk2YWM0N2FiOWE5NmE1MWEzNTRiZTk1MjJhOA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2001-02-13T11:07:43Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2001-02-13T11:07:43Z"}, "message": "combine.c (UWIDE_SHIFT_LEFT_BY_BITS_PER_WORD): New macro.\n\n* combine.c (UWIDE_SHIFT_LEFT_BY_BITS_PER_WORD): New macro.\n(try_combine): Use it.\n\nFrom-SVN: r39624", "tree": {"sha": "cf1b0e9e8e028357c504fdaa229a158d18760e7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf1b0e9e8e028357c504fdaa229a158d18760e7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42a6ff5138ad896ac47ab9a96a51a354be9522a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42a6ff5138ad896ac47ab9a96a51a354be9522a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42a6ff5138ad896ac47ab9a96a51a354be9522a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42a6ff5138ad896ac47ab9a96a51a354be9522a8/comments", "author": null, "committer": null, "parents": [{"sha": "62415523eb8b4369892c63aa5e51942423178b78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62415523eb8b4369892c63aa5e51942423178b78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62415523eb8b4369892c63aa5e51942423178b78"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "6e2895cd3f82199c4ed3ae1c5c44f30dd9019045", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42a6ff5138ad896ac47ab9a96a51a354be9522a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42a6ff5138ad896ac47ab9a96a51a354be9522a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42a6ff5138ad896ac47ab9a96a51a354be9522a8", "patch": "@@ -1,3 +1,8 @@\n+2001-02-13  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* combine.c (UWIDE_SHIFT_LEFT_BY_BITS_PER_WORD): New macro.\n+\t(try_combine): Use it.\n+\n Tue Feb 13 11:37:06 CET 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.h (SSE_CLASS_P, MMX_CLASS_P, MAYBE_FLOAT_CLASS_P,"}, {"sha": "c2fa5bb694a6453375340d242ac4d34c2ebe4af9", "filename": "gcc/combine.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42a6ff5138ad896ac47ab9a96a51a354be9522a8/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42a6ff5138ad896ac47ab9a96a51a354be9522a8/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=42a6ff5138ad896ac47ab9a96a51a354be9522a8", "patch": "@@ -146,6 +146,12 @@ static int max_uid_cuid;\n #define INSN_CUID(INSN) \\\n (INSN_UID (INSN) > max_uid_cuid ? insn_cuid (INSN) : uid_cuid[INSN_UID (INSN)])\n \n+/* In case BITS_PER_WORD == HOST_BITS_PER_WIDE_INT, shifting by\n+   BITS_PER_WORD would invoke undefined behavior.  Work around it.  */\n+\n+#define UWIDE_SHIFT_LEFT_BY_BITS_PER_WORD(val) \\\n+  (((unsigned HOST_WIDE_INT)(val) << (BITS_PER_WORD - 1)) << 1)\n+\n /* Maximum register number, which is the size of the tables below.  */\n \n static unsigned int combine_max_regno;\n@@ -1667,7 +1673,7 @@ try_combine (i3, i2, i1, new_direct_jump_p)\n \t  if (HOST_BITS_PER_WIDE_INT < BITS_PER_WORD)\n \t    abort ();\n \n-\t  lo &= ~(((unsigned HOST_WIDE_INT)1 << BITS_PER_WORD) - 1);\n+\t  lo &= ~(UWIDE_SHIFT_LEFT_BY_BITS_PER_WORD (1) - 1);\n \t  lo |= INTVAL (SET_SRC (PATTERN (i3)));\n \t}\n       else if (HOST_BITS_PER_WIDE_INT == BITS_PER_WORD)\n@@ -1677,9 +1683,10 @@ try_combine (i3, i2, i1, new_direct_jump_p)\n \t  int sign = -(int) ((unsigned HOST_WIDE_INT) lo\n \t\t\t     >> (HOST_BITS_PER_WIDE_INT - 1));\n \n-\t  lo &= ~((((unsigned HOST_WIDE_INT)1 << BITS_PER_WORD) - 1)\n-\t\t  << BITS_PER_WORD);\n-\t  lo |= INTVAL (SET_SRC (PATTERN (i3))) << BITS_PER_WORD;\n+\t  lo &= ~ (UWIDE_SHIFT_LEFT_BY_BITS_PER_WORD\n+\t\t   (UWIDE_SHIFT_LEFT_BY_BITS_PER_WORD (1) - 1));\n+\t  lo |= (UWIDE_SHIFT_LEFT_BY_BITS_PER_WORD\n+\t\t (INTVAL (SET_SRC (PATTERN (i3)))));\n \t  if (hi == sign)\n \t    hi = lo < 0 ? -1 : 0;\n \t}"}]}