{"sha": "db247aed5ebb6e8995f24f5e12f4acde8ee52ce5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIyNDdhZWQ1ZWJiNmU4OTk1ZjI0ZjVlMTJmNGFjZGU4ZWU1MmNlNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-10-15T10:33:02Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-10-15T10:33:02Z"}, "message": "tree-ssa-reassoc.c (optimize_range_tests_diff): Perform MINUS_EXPR in unsigned type to avoid undefined behavior.\n\n\t* tree-ssa-reassoc.c (optimize_range_tests_diff): Perform\n\tMINUS_EXPR in unsigned type to avoid undefined behavior.\n\nFrom-SVN: r216252", "tree": {"sha": "4f7b3a2f04fe397428dc9d83c92631b4272f109f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f7b3a2f04fe397428dc9d83c92631b4272f109f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db247aed5ebb6e8995f24f5e12f4acde8ee52ce5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db247aed5ebb6e8995f24f5e12f4acde8ee52ce5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db247aed5ebb6e8995f24f5e12f4acde8ee52ce5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db247aed5ebb6e8995f24f5e12f4acde8ee52ce5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "211b1daf8c810a42bc18114e69705bf1e55f37c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db247aed5ebb6e8995f24f5e12f4acde8ee52ce5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db247aed5ebb6e8995f24f5e12f4acde8ee52ce5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=db247aed5ebb6e8995f24f5e12f4acde8ee52ce5", "patch": "@@ -1,3 +1,8 @@\n+2014-10-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* tree-ssa-reassoc.c (optimize_range_tests_diff): Perform\n+\tMINUS_EXPR in unsigned type to avoid undefined behavior.\n+\n 2014-10-15  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* stor-layout.c (self_referential_size): Do not promote arguments."}, {"sha": "4714a389eb35752d1892d25d337772bf7000b5bc", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db247aed5ebb6e8995f24f5e12f4acde8ee52ce5/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db247aed5ebb6e8995f24f5e12f4acde8ee52ce5/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=db247aed5ebb6e8995f24f5e12f4acde8ee52ce5", "patch": "@@ -2250,8 +2250,13 @@ optimize_range_tests_diff (enum tree_code opcode, tree type,\n   if (tree_log2 (tem1) < 0)\n     return false;\n \n+  type = unsigned_type_for (type);\n+  tem1 = fold_convert (type, tem1);\n+  tem2 = fold_convert (type, tem2);\n+  lowi = fold_convert (type, lowi);\n   mask = fold_build1 (BIT_NOT_EXPR, type, tem1);\n-  tem1 = fold_binary (MINUS_EXPR, type, rangei->exp, lowi);\n+  tem1 = fold_binary (MINUS_EXPR, type,\n+\t\t      fold_convert (type, rangei->exp), lowi);\n   tem1 = fold_build2 (BIT_AND_EXPR, type, tem1, mask);\n   lowj = build_int_cst (type, 0);\n   if (update_range_test (rangei, rangej, 1, opcode, ops, tem1,"}]}