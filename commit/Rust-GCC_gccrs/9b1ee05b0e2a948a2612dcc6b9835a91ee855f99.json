{"sha": "9b1ee05b0e2a948a2612dcc6b9835a91ee855f99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIxZWUwNWIwZTJhOTQ4YTI2MTJkY2M2Yjk4MzVhOTFlZTg1NWY5OQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@cygnus.com", "date": "2000-08-29T16:12:59Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2000-08-29T16:12:59Z"}, "message": "javaop.h (WORD_TO_INT): Mask lower 32 bits of a jword before sign extending.\n\n2000-08-22  Andrew Haley  <aph@cygnus.com>\n\n\t* javaop.h (WORD_TO_INT): Mask lower 32 bits of a jword before\n\tsign extending. Fixes gcj/321.\n\t* jcf-parse.c (get_constant): Mask lower 32 bits of a jint before\n\tcombining to make a jlong. Fixes gcj/321.\n\n(This fixes gcj/321:\n http://sources.redhat.com/ml/java-prs/2000-q3/msg00146.html\n http://gcc.gnu.org/ml/gcc-patches/2000-08/msg00897.html)\n\nFrom-SVN: r36037", "tree": {"sha": "9e8a6be704176c42bc696fce9ce76e1e2f26270b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e8a6be704176c42bc696fce9ce76e1e2f26270b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b1ee05b0e2a948a2612dcc6b9835a91ee855f99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b1ee05b0e2a948a2612dcc6b9835a91ee855f99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b1ee05b0e2a948a2612dcc6b9835a91ee855f99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b1ee05b0e2a948a2612dcc6b9835a91ee855f99/comments", "author": null, "committer": null, "parents": [{"sha": "dc478a5dd45f10a1c9d42230a3eb6c6aa1e50a1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc478a5dd45f10a1c9d42230a3eb6c6aa1e50a1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc478a5dd45f10a1c9d42230a3eb6c6aa1e50a1d"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "3e5d963ed42d17aef7ba4ffed0b35108fcb9f4d5", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b1ee05b0e2a948a2612dcc6b9835a91ee855f99/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b1ee05b0e2a948a2612dcc6b9835a91ee855f99/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=9b1ee05b0e2a948a2612dcc6b9835a91ee855f99", "patch": "@@ -7,6 +7,13 @@\n \t* lang.c (lang_decode_option): Use ARRAY_SIZE.\n \t* parse.y (BINOP_LOOKUP): Likewise.\n \n+2000-08-22  Andrew Haley  <aph@cygnus.com>\n+\n+\t* javaop.h (WORD_TO_INT): Mask lower 32 bits of a jword before\n+\tsign extending. Fixes gcj/321.\n+\t* jcf-parse.c (get_constant): Mask lower 32 bits of a jint before\n+\tcombining to make a jlong. Fixes gcj/321.\n+\n 2000-08-21  Nix  <nix@esperi.demon.co.uk>\n         \n \t* lang-specs.h: Do not process -o or run the assembler if"}, {"sha": "6ce33ff67a95c349841aed3e76aa5e57442772e3", "filename": "gcc/java/javaop.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b1ee05b0e2a948a2612dcc6b9835a91ee855f99/gcc%2Fjava%2Fjavaop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b1ee05b0e2a948a2612dcc6b9835a91ee855f99/gcc%2Fjava%2Fjavaop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjavaop.h?ref=9b1ee05b0e2a948a2612dcc6b9835a91ee855f99", "patch": "@@ -109,13 +109,16 @@ WORD_TO_FLOAT(jword w)\n   return wu.f;\n } \n \n-/* Sign extend w. */\n+/* Sign extend w.  If the host on which this cross-compiler runs uses\n+   a 64-bit type for jword the appropriate sign extension is\n+   performed; if it's a 32-bit type the arithmetic does nothing but is\n+   harmless.  */\n static inline jint\n WORD_TO_INT(jword w)\n {\n-  jint n = w;\n+  jint n = w & 0xffffffff; /* Mask lower 32 bits.  */\n   n ^= (jint)1 << 31;\n-  n -= (jint)1 << 31;\n+  n -= (jint)1 << 31; /* Sign extend lower 32 bits to upper.  */\n   return n;\n } \n "}, {"sha": "4b00c432f47b0dc7c9154df8f59b413b6e7010ff", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b1ee05b0e2a948a2612dcc6b9835a91ee855f99/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b1ee05b0e2a948a2612dcc6b9835a91ee855f99/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=9b1ee05b0e2a948a2612dcc6b9835a91ee855f99", "patch": "@@ -270,8 +270,8 @@ get_constant (jcf, index)\n \tjint num = JPOOL_INT (jcf, index);\n \tHOST_WIDE_INT lo, hi;\n \tlshift_double (num, 0, 32, 64, &lo, &hi, 0);\n-\tnum = JPOOL_INT (jcf, index+1);\n-\tadd_double (lo, hi, (uint32)num, 0, &lo, &hi);\n+\tnum = JPOOL_INT (jcf, index+1) & 0xffffffff;\n+\tadd_double (lo, hi, num, 0, &lo, &hi);\n \tvalue = build_int_2 (lo, hi);\n \tTREE_TYPE (value) = long_type_node;\n \tforce_fit_type (value, 0);"}]}