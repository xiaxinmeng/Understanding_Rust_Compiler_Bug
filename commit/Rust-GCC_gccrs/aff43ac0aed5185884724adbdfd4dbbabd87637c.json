{"sha": "aff43ac0aed5185884724adbdfd4dbbabd87637c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZmNDNhYzBhZWQ1MTg1ODg0NzI0YWRiZGZkNGRiYmFiZDg3NjM3Yw==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2020-06-26T08:19:14Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2020-06-30T15:48:36Z"}, "message": "Mark up unreachable OpenACC 'attach' code path\n\n... introduced in commit 8e7e71ff247fb116dc381c5ef0c09acc0d2b374f (r279625)\n\"OpenACC 2.6 deep copy: libgomp parts\".\n\n\tlibgomp/\n\t* target.c (gomp_map_vars_existing): Assert 'kind !=\n\tGOMP_MAP_ATTACH'.\n\t(gomp_map_vars_internal): Clean up.", "tree": {"sha": "49b2d1207bf163da6f4b95ad25bf7886c8b92121", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49b2d1207bf163da6f4b95ad25bf7886c8b92121"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aff43ac0aed5185884724adbdfd4dbbabd87637c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aff43ac0aed5185884724adbdfd4dbbabd87637c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aff43ac0aed5185884724adbdfd4dbbabd87637c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aff43ac0aed5185884724adbdfd4dbbabd87637c/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2c17dcb120813a715e4cfb7559803839d3806d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2c17dcb120813a715e4cfb7559803839d3806d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2c17dcb120813a715e4cfb7559803839d3806d9"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "d4a4a408b400efde3c089d55305c4dfc1dd64cc5", "filename": "libgomp/target.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aff43ac0aed5185884724adbdfd4dbbabd87637c/libgomp%2Ftarget.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aff43ac0aed5185884724adbdfd4dbbabd87637c/libgomp%2Ftarget.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftarget.c?ref=aff43ac0aed5185884724adbdfd4dbbabd87637c", "patch": "@@ -357,10 +357,12 @@ gomp_map_vars_existing (struct gomp_device_descr *devicep,\n \t\t\tsplay_tree_key newn, struct target_var_desc *tgt_var,\n \t\t\tunsigned char kind, struct gomp_coalesce_buf *cbuf)\n {\n+  assert (kind != GOMP_MAP_ATTACH);\n+\n   tgt_var->key = oldn;\n   tgt_var->copy_from = GOMP_MAP_COPY_FROM_P (kind);\n   tgt_var->always_copy_from = GOMP_MAP_ALWAYS_FROM_P (kind);\n-  tgt_var->do_detach = kind == GOMP_MAP_ATTACH;\n+  tgt_var->do_detach = false;\n   tgt_var->offset = newn->host_start - oldn->host_start;\n   tgt_var->length = newn->host_end - newn->host_start;\n \n@@ -815,8 +817,7 @@ gomp_map_vars_internal (struct gomp_device_descr *devicep,\n \t  continue;\n \t}\n       cur_node.host_start = (uintptr_t) hostaddrs[i];\n-      if (!GOMP_MAP_POINTER_P (kind & typemask)\n-\t  && (kind & typemask) != GOMP_MAP_ATTACH)\n+      if (!GOMP_MAP_POINTER_P (kind & typemask))\n \tcur_node.host_end = cur_node.host_start + sizes[i];\n       else\n \tcur_node.host_end = cur_node.host_start + sizeof (void *);"}]}