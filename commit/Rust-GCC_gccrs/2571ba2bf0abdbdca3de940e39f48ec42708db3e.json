{"sha": "2571ba2bf0abdbdca3de940e39f48ec42708db3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU3MWJhMmJmMGFiZGJkY2EzZGU5NDBlMzlmNDhlYzQyNzA4ZGIzZQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@verizon.net", "date": "2005-10-25T01:45:02Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2005-10-25T01:45:02Z"}, "message": "re PR libfortran/24224 (Generalized internal array IO not implemented.)\n\n2005-10-24  Jerry DeLisle  <jvdelisle@verizon.net>\n\n        PR libgfortran/24224\n        * gfortran.dg/arrayio_1.f90: Update attribution.\n        * gfortran.dg/arrayio_2.f90: Update attribution.\n        * gfortran.dg/arrayio_3.f90: Update attribution.\n        * gfortran.dg/arrayio_4.f90: Update test conditions.\n        * gfortran.dg/arrayio_5.f90: Update attribution.\n        * gfortran.dg/arrayio_6.f90: New test.\n        * gfortran.dg/arrayio_7.f90: New test.\nsle  <jvdelisle@verizon.net>\n\nFrom-SVN: r105879", "tree": {"sha": "42f5db4ced9de9f41805c044a359d37326f89381", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42f5db4ced9de9f41805c044a359d37326f89381"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2571ba2bf0abdbdca3de940e39f48ec42708db3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2571ba2bf0abdbdca3de940e39f48ec42708db3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2571ba2bf0abdbdca3de940e39f48ec42708db3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2571ba2bf0abdbdca3de940e39f48ec42708db3e/comments", "author": null, "committer": null, "parents": [{"sha": "965eec1676035e748a44bc0069f1b046c40a470c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/965eec1676035e748a44bc0069f1b046c40a470c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/965eec1676035e748a44bc0069f1b046c40a470c"}], "stats": {"total": 72, "additions": 62, "deletions": 10}, "files": [{"sha": "b398d198033c76633403fc2a02c55af07d4e7546", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2571ba2bf0abdbdca3de940e39f48ec42708db3e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2571ba2bf0abdbdca3de940e39f48ec42708db3e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2571ba2bf0abdbdca3de940e39f48ec42708db3e", "patch": "@@ -1,3 +1,10 @@\n+2005-10-24  Jerry DeLisle  <jvdelisle@verizon.net>\n+\n+        PR libgfortran/24224\n+        * gfortran.dg/arrayio_4.f90: Update test conditions.\n+        * gfortran.dg/arrayio_6.f90: New test.\n+        * gfortran.dg/arrayio_7.f90: New test.\n+\n 2005-10-24  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \t* gcc.dg/tree-ssa/loop-9.c: Prevent matching \"leave\"."}, {"sha": "2d4cf31f9820ead395ed51095023f7c0a837e0f6", "filename": "gcc/testsuite/gfortran.dg/arrayio_1.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2571ba2bf0abdbdca3de940e39f48ec42708db3e/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2571ba2bf0abdbdca3de940e39f48ec42708db3e/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_1.f90?ref=2571ba2bf0abdbdca3de940e39f48ec42708db3e", "patch": "@@ -1,5 +1,6 @@\n ! { dg-do run }\n ! PR 21875 : Test formatted input/output to/from character arrays.\n+! Contributed by Jerry DeLisle <jvdelisle@verizon.net>.\n       program arrayio_1\n       implicit none\n       integer         :: i(6),j,k"}, {"sha": "96fd18fea188d289a273ff34854a5e9397047d36", "filename": "gcc/testsuite/gfortran.dg/arrayio_2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2571ba2bf0abdbdca3de940e39f48ec42708db3e/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2571ba2bf0abdbdca3de940e39f48ec42708db3e/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_2.f90?ref=2571ba2bf0abdbdca3de940e39f48ec42708db3e", "patch": "@@ -1,7 +1,7 @@\n ! { dg-do run }\n ! PR 21875 : Test formatted input/output to/from character arrays.\n ! This test ckecks proper positioning and padding with trailing blanks\n-! after write operations\n+! after write operations.  Contributed by Paul Thomas.\n      program arrayio_2\n      implicit none\n      integer :: i=2"}, {"sha": "eb872eb15cac966b4a34cc651a9c49455331c3ba", "filename": "gcc/testsuite/gfortran.dg/arrayio_3.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2571ba2bf0abdbdca3de940e39f48ec42708db3e/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2571ba2bf0abdbdca3de940e39f48ec42708db3e/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_3.f90?ref=2571ba2bf0abdbdca3de940e39f48ec42708db3e", "patch": "@@ -1,7 +1,7 @@\n ! { dg-do run }\n ! PR 21875 : Test formatted input/output to/from character arrays.\n-! This test deliberately exceeds the record length in a write and\n-! verifies the error message.\n+! This test deliberately exceeds the record length in a write and verifies\n+! the error message.  Contributed by Jerry DeLisle <jvdelisle@verizon.net>.\n       program arrayio_3\n       implicit none\n       integer        :: i(6),j,ierr"}, {"sha": "6236d2d676630c5a33ab38095f5991f4375608fd", "filename": "gcc/testsuite/gfortran.dg/arrayio_4.f90", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2571ba2bf0abdbdca3de940e39f48ec42708db3e/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2571ba2bf0abdbdca3de940e39f48ec42708db3e/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_4.f90?ref=2571ba2bf0abdbdca3de940e39f48ec42708db3e", "patch": "@@ -1,21 +1,20 @@\n ! { dg-do run }\n-! PR 21875 : Test formatted input/output to/from character arrays.\n-! This test checks the error checking for non-contiguous character\n-! arrays which are not allowed by standard.  Error 13 is\n-! ERROR_ARRAY_STRIDE in libgfortran.h\n+! PR 24244 : Test formatted input/output to/from character arrays.\n+! This test checks array I/O with strides other than 1.\n+! Contributed by Jerry DeLisle <jvdelisle@verizon.net>.\n program arrayio_4\n   implicit none\n   integer        :: ierr\n   character(12)  :: r(2,3,4) = '0123456789AB'\n    \n   write(r(::2,:,::1),'(i5)', iostat=ierr) 1,2,3,4,5\n-  if (ierr.ne.13) call abort()\n+  if (ierr.ne.0) call abort()\n \n   write(r(:,:,::2),'(i5)', iostat=ierr) 1,2,3,4,5\n-  if (ierr.ne.13) call abort()\n+  if (ierr.ne.0) call abort()\n \n   write(r(::1,::2,::1),'(i5)', iostat=ierr) 1,2,3,4,5\n-  if (ierr.ne.13) call abort()\n+  if (ierr.ne.0) call abort()\n \n   write(r(::1,::1,::1),'(i5)', iostat=ierr) 1,2,3,4,5\n   if (ierr.ne.0) call abort()"}, {"sha": "cb062037a4a81afd130558336297d358823c58fd", "filename": "gcc/testsuite/gfortran.dg/arrayio_5.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2571ba2bf0abdbdca3de940e39f48ec42708db3e/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2571ba2bf0abdbdca3de940e39f48ec42708db3e/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_5.f90?ref=2571ba2bf0abdbdca3de940e39f48ec42708db3e", "patch": "@@ -1,6 +1,7 @@\n ! { dg-do run }\n ! PR 21875 : Test formatted input/output to/from character arrays.\n ! This test checks the error checking for end of file condition.\n+! Contributed by Jerry DeLisle <jvdelisle@verizon.net>.\n program arrayio_5\n   implicit none\n   integer        :: i,ierr"}, {"sha": "d9343ab3611e8e777a57581bcdbff07f083bad13", "filename": "gcc/testsuite/gfortran.dg/arrayio_6.f90", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2571ba2bf0abdbdca3de940e39f48ec42708db3e/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2571ba2bf0abdbdca3de940e39f48ec42708db3e/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_6.f90?ref=2571ba2bf0abdbdca3de940e39f48ec42708db3e", "patch": "@@ -0,0 +1,31 @@\n+! { dg-do run }\n+! PR24224 Test formatted input/output to/from character arrays with strides\n+! other than 1.  Contributed by Jerry DeLisle <jvdelisle@verizon.net>.\n+      program arrayio_6\n+      implicit none\n+      integer         :: i(3),j,k(3)\n+      character(12)  :: r(4,4,4) = '0123456789AB'\n+      character(12)  :: s(64)\n+      equivalence(r,s)\n+ \n+      i = (/(j,j=1,3)/)\n+      write(r(1:4:2,2:4:1,3:4:2),'(3(2x,i4/)/3(3x,i6/))') i\n+\n+      if (s(36).ne.'0123456789AB') call abort()\n+      if (s(37).ne.'     1      ') call abort()\n+      if (s(38).ne.'0123456789AB') call abort()\n+      if (s(39).ne.'     2      ') call abort()\n+      if (s(40).ne.'0123456789AB') call abort()\n+      if (s(41).ne.'     3      ') call abort()\n+      if (s(42).ne.'0123456789AB') call abort()\n+      if (s(43).ne.'            ') call abort()\n+      if (s(44).ne.'0123456789AB') call abort()\n+      if (s(45).ne.'            ') call abort()\n+      if (s(46).ne.'0123456789AB') call abort()\n+ \n+      k = i\n+      i = 0\n+      read(r(1:4:2,2:4:1,3:4:2),'(3(2x,i4/)/3(3x,i6/))') i\n+      if (any(i.ne.k)) call abort()\n+      \n+      end program arrayio_6"}, {"sha": "69581763a643697e8984017a911a057e773255d8", "filename": "gcc/testsuite/gfortran.dg/arrayio_7.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2571ba2bf0abdbdca3de940e39f48ec42708db3e/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2571ba2bf0abdbdca3de940e39f48ec42708db3e/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farrayio_7.f90?ref=2571ba2bf0abdbdca3de940e39f48ec42708db3e", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do run }\n+! PR24224 Test formatted input/output to/from character arrays with strides\n+! other than 1.  Test that reading stops at the end of the current record.\n+! Contributed by Jerry DeLisle <jvdelisle@verizon.net>.\n+program arrayio_7\n+  character*4, dimension(8) :: abuf = (/\"0123\",\"4567\",\"89AB\",\"CDEF\", &\n+                                        \"0123\",\"4567\",\"89AB\",\"CDEF\"/)\n+  character*4, dimension(2,4) :: buf\n+  character*8 :: a\n+  equivalence (buf,abuf)\n+  read(buf(2, 1:3:2), '(a8)') a\n+  if (a.ne.\"4567\") call abort()\n+end program arrayio_7"}]}