{"sha": "d82a54f5644ae3db546e596b7bc426c5cb00b7e1", "node_id": "C_kwDOANBUbNoAKGQ4MmE1NGY1NjQ0YWUzZGI1NDZlNTk2YjdiYzQyNmM1Y2IwMGI3ZTE", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-01-14T15:52:15Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-01-14T15:52:15Z"}, "message": "configure: Regenerate.\n\nRegenerate after change made in g:7c6ae994fb587c19ca14aebe18dbc9aca83be609.\n\ngcc/ChangeLog:\n\n\t* configure: Regenerate.", "tree": {"sha": "a8a728d6fd9454d8141da43c2f7bb7e9e2690c4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8a728d6fd9454d8141da43c2f7bb7e9e2690c4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d82a54f5644ae3db546e596b7bc426c5cb00b7e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d82a54f5644ae3db546e596b7bc426c5cb00b7e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d82a54f5644ae3db546e596b7bc426c5cb00b7e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d82a54f5644ae3db546e596b7bc426c5cb00b7e1/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6795e6ae66096d52a62e20ed33a47599233ab3d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6795e6ae66096d52a62e20ed33a47599233ab3d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6795e6ae66096d52a62e20ed33a47599233ab3d5"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "ff570f73ef5f79887418170bbae3d3135341339e", "filename": "gcc/configure", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82a54f5644ae3db546e596b7bc426c5cb00b7e1/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82a54f5644ae3db546e596b7bc426c5cb00b7e1/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=d82a54f5644ae3db546e596b7bc426c5cb00b7e1", "patch": "@@ -5352,7 +5352,26 @@ else\n   GDC=\"$ac_cv_prog_GDC\"\n fi\n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the D compiler works\" >&5\n+$as_echo_n \"checking whether the D compiler works... \" >&6; }\n+if ${acx_cv_d_compiler_works+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat >conftest.d <<EOF\n+module conftest; int main() { return 0; }\n+EOF\n+acx_cv_d_compiler_works=no\n if test \"x$GDC\" != xno; then\n+  errors=`(${GDC} -I\"$srcdir\"/d -c conftest.d) 2>&1 || echo failure`\n+  if test x\"$errors\" = x && test -f conftest.$ac_objext; then\n+    acx_cv_d_compiler_works=yes\n+  fi\n+  rm -f conftest.*\n+fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_d_compiler_works\" >&5\n+$as_echo \"$acx_cv_d_compiler_works\" >&6; }\n+if test \"x$GDC\" != xno && test x$acx_cv_d_compiler_works != xno; then\n   have_gdc=yes\n else\n   have_gdc=no\n@@ -19640,7 +19659,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19643 \"configure\"\n+#line 19662 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -19746,7 +19765,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19749 \"configure\"\n+#line 19768 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}]}