{"sha": "2784076858a053092d1a712678d89cbb5cbd67ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc4NDA3Njg1OGEwNTMwOTJkMWE3MTI2NzhkODljYmI1Y2JkNjdiYQ==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2006-01-07T02:26:54Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2006-01-07T02:26:54Z"}, "message": "tree.c (iterative_hash_expr): Hash decls based on UID.\n\n2006-01-06  Daniel Berlin  <dberlin@dberlin.org>\n\n\t* tree.c (iterative_hash_expr): Hash decls based on UID.\n\nFrom-SVN: r109448", "tree": {"sha": "918b820672bd4684cf46ff40765b02d176dc772e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/918b820672bd4684cf46ff40765b02d176dc772e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2784076858a053092d1a712678d89cbb5cbd67ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2784076858a053092d1a712678d89cbb5cbd67ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2784076858a053092d1a712678d89cbb5cbd67ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2784076858a053092d1a712678d89cbb5cbd67ba/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b184f89b8a53e9b69016d4661e0181aa1400e3e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b184f89b8a53e9b69016d4661e0181aa1400e3e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b184f89b8a53e9b69016d4661e0181aa1400e3e0"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "428c5230ab4e91dba153f6647a1bc2d766ae8f61", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2784076858a053092d1a712678d89cbb5cbd67ba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2784076858a053092d1a712678d89cbb5cbd67ba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2784076858a053092d1a712678d89cbb5cbd67ba", "patch": "@@ -1,3 +1,7 @@\n+2006-01-06  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\t* tree.c (iterative_hash_expr): Hash decls based on UID.\n+\n 2006-01-06  Eric Christopher  <echristo@apple.com>\n \n \t* doc/tm.texi (TARGET_ASM_EMIT_EXCEPT_TABLE_LABEL): Document."}, {"sha": "574e73b31a2edc5655b756a3542febfe57431364", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2784076858a053092d1a712678d89cbb5cbd67ba/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2784076858a053092d1a712678d89cbb5cbd67ba/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=2784076858a053092d1a712678d89cbb5cbd67ba", "patch": "@@ -4718,8 +4718,8 @@ iterative_hash_expr (tree t, hashval_t val)\n \n       if (class == tcc_declaration)\n \t{\n-\t  /* Otherwise, we can just compare decls by pointer.  */\n-\t  val = iterative_hash_pointer (t, val);\n+\t  /* DECL's have a unique ID */\n+\t  val = iterative_hash_host_wide_int (DECL_UID (t), val);\n \t}\n       else\n \t{"}]}