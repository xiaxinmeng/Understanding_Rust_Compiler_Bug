{"sha": "f8d1529b85d65cec8c84f56b1b907f9d673697f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhkMTUyOWI4NWQ2NWNlYzhjODRmNTZiMWI5MDdmOWQ2NzM2OTdmMg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-07-02T21:16:50Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-07-02T21:16:50Z"}, "message": "flow.c (try_redirect_by_replacing_jump): Remove cc0 setter.\n\n\t* flow.c (try_redirect_by_replacing_jump): Remove cc0 setter.\n\n\t* flow.c (forwarder_block_p): Fix for fallthru blocks.\n\t(try_redirect_by_replacing_jump): Update properly the count\n\tand frequency information.\n\nFrom-SVN: r43708", "tree": {"sha": "d6945804f248caa779d2113a20027c0772b21764", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6945804f248caa779d2113a20027c0772b21764"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8d1529b85d65cec8c84f56b1b907f9d673697f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8d1529b85d65cec8c84f56b1b907f9d673697f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8d1529b85d65cec8c84f56b1b907f9d673697f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8d1529b85d65cec8c84f56b1b907f9d673697f2/comments", "author": null, "committer": null, "parents": [{"sha": "861d4e70e82f01fc77436cf8fe5fd87bc3e8368b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/861d4e70e82f01fc77436cf8fe5fd87bc3e8368b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/861d4e70e82f01fc77436cf8fe5fd87bc3e8368b"}], "stats": {"total": 45, "additions": 36, "deletions": 9}, "files": [{"sha": "a83fdf5142676cf4589249abb6ee2d405370947f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d1529b85d65cec8c84f56b1b907f9d673697f2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d1529b85d65cec8c84f56b1b907f9d673697f2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8d1529b85d65cec8c84f56b1b907f9d673697f2", "patch": "@@ -1,3 +1,11 @@\n+Mon Jul  2 23:14:00 CEST 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\t* flow.c (try_redirect_by_replacing_jump): Remove cc0 setter.\n+\n+\t* flow.c (forwarder_block_p): Fix for fallthru blocks.\n+\t(try_redirect_by_replacing_jump): Update properly the count\n+\tand frequency information.\n+\n Mon Jul  2 14:20:13 2001  Jeffrey A Law  (law@cygnus.com)\n \n \t* toplev.c (dump_file_index): Move SSA dumps just after first"}, {"sha": "391b4b45c11784cb978127583091b3b3aaac941d", "filename": "gcc/flow.c", "status": "modified", "additions": 28, "deletions": 9, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d1529b85d65cec8c84f56b1b907f9d673697f2/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d1529b85d65cec8c84f56b1b907f9d673697f2/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=f8d1529b85d65cec8c84f56b1b907f9d673697f2", "patch": "@@ -1597,18 +1597,19 @@ static bool\n forwarder_block_p (bb)\n      basic_block bb;\n {\n-  rtx insn;\n+  rtx insn = bb->head;\n   if (bb == EXIT_BLOCK_PTR || bb == ENTRY_BLOCK_PTR\n       || !bb->succ || bb->succ->succ_next)\n     return false;\n \n-  insn = next_active_insn (bb->head);\n-  if (!insn)\n-    return false;\n-  if (GET_CODE (insn) == CODE_LABEL\n-      || (GET_CODE (insn) == JUMP_INSN && onlyjump_p (insn)))\n-    return true;\n-  return false;\n+  while (insn != bb->end)\n+    {\n+      if (active_insn_p (insn))\n+\treturn false;\n+      insn = NEXT_INSN (insn);\n+    }\n+  return (!active_insn_p (insn)\n+\t  || (GET_CODE (insn) == JUMP_INSN && onlyjump_p (insn)));\n }\n \n /* Return nonzero if we can reach target from src by falling trought.  */\n@@ -1699,6 +1700,8 @@ try_redirect_by_replacing_jump (e, target)\n     e->flags = EDGE_FALLTHRU;\n   else\n     e->flags = 0;\n+  e->probability = REG_BR_PROB_BASE;\n+  e->count = src->count;\n \n   /* Fixup barriers.  */\n   barrier = next_nonnote_insn (insn);\n@@ -1707,6 +1710,20 @@ try_redirect_by_replacing_jump (e, target)\n   else if (!fallthru && GET_CODE (barrier) != BARRIER)\n     emit_barrier_after (insn);\n \n+  /* In case we've zapped an conditional jump, we need to kill the cc0\n+     setter too if available.  */\n+#ifdef HAVE_cc0\n+  insn = src->end;\n+  if (GET_CODE (insn) == JUMP_INSN)\n+    insn = prev_nonnote_insn (insn);\n+  if (sets_cc0_p (insn))\n+    {\n+      if (insn == src->end)\n+\tsrc->end = PREV_INSN (insn);\n+      flow_delete_insn (insn);\n+    }\n+#endif\n+\n   if (e->dest != target)\n     redirect_edge_succ (e, target);\n   return true;\n@@ -1766,7 +1783,7 @@ redirect_edge_and_branch (e, target)\n       for (j = GET_NUM_ELEM (vec) - 1; j >= 0; --j)\n \tif (XEXP (RTVEC_ELT (vec, j), 0) == old_label)\n \t  {\n-\t    RTVEC_ELT (vec, j) = gen_rtx_LABEL_REF (VOIDmode, new_label);\n+\t    RTVEC_ELT (vec, j) = gen_rtx_LABEL_REF (Pmode, new_label);\n \t    --LABEL_NUSES (old_label);\n \t    ++LABEL_NUSES (new_label);\n \t  }\n@@ -1815,6 +1832,8 @@ redirect_edge_and_branch (e, target)\n       if (s)\n \t{\n \t  s->flags |= e->flags;\n+\t  s->probability += e->probability;\n+\t  s->count += e->count;\n \t  remove_edge (e);\n \t}\n       else"}]}