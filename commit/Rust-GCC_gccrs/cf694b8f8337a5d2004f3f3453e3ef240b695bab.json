{"sha": "cf694b8f8337a5d2004f3f3453e3ef240b695bab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y2OTRiOGY4MzM3YTVkMjAwNGYzZjM0NTNlM2VmMjQwYjY5NWJhYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1999-05-16T20:48:42Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-05-16T20:48:42Z"}, "message": "* init.c (build_new_1): suspend_momentary while calculating size.\n\nFrom-SVN: r26953", "tree": {"sha": "420260da87c3e2c4a7facca3d40125ceceec9547", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/420260da87c3e2c4a7facca3d40125ceceec9547"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf694b8f8337a5d2004f3f3453e3ef240b695bab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf694b8f8337a5d2004f3f3453e3ef240b695bab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf694b8f8337a5d2004f3f3453e3ef240b695bab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf694b8f8337a5d2004f3f3453e3ef240b695bab/comments", "author": null, "committer": null, "parents": [{"sha": "7a8f9fa9cfaaa15db0f4f6624c222b62a65e4175", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a8f9fa9cfaaa15db0f4f6624c222b62a65e4175", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a8f9fa9cfaaa15db0f4f6624c222b62a65e4175"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "98d7d05b4c8b091fc24b20bd133a76771914e666", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf694b8f8337a5d2004f3f3453e3ef240b695bab/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf694b8f8337a5d2004f3f3453e3ef240b695bab/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cf694b8f8337a5d2004f3f3453e3ef240b695bab", "patch": "@@ -1,5 +1,11 @@\n 1999-05-16  Jason Merrill  <jason@yorick.cygnus.com>\n \n+\t* parse.y (direct_new_declarator): Make the first one a\n+\tnonmomentary_expr, too.\n+\t* init.c (build_new): suspend_momentary while we're calculating\n+\tthe size.\n+\t(build_new_1): Likewise.  Don't copy size.\n+\n \t* decl2.c (finish_objects): Don't use .?tors.* if we don't have\n \tASM_OUTPUT_CONSTRUCTOR.\n \n@@ -10,12 +16,6 @@\n \t(grokdeclarator): Adjust.\n \t* cp-tree.h: Adjust.\n \n-\t* parse.y (direct_new_declarator): Make the first one a\n-\tnonmomentary_expr, too.\n-\t* init.c (build_new): suspend_momentary while we're calculating\n-\tthe size.\n-\t(build_new_1): Don't copy size.\n-\n 1999-05-16  Mark Mitchell  <mark@codesourcery.com>\n \n \t* cp-tree.h (permanent_p): New function."}, {"sha": "7ca00053861701a7615b19cc3df536f383a5ec78", "filename": "gcc/cp/init.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf694b8f8337a5d2004f3f3453e3ef240b695bab/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf694b8f8337a5d2004f3f3453e3ef240b695bab/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=cf694b8f8337a5d2004f3f3453e3ef240b695bab", "patch": "@@ -2134,6 +2134,7 @@ build_new_1 (exp)\n   int use_cookie, nothrow, check_new;\n   int use_global_new;\n   int use_java_new = 0;\n+  int susp = 0;\n \n   placement = TREE_OPERAND (exp, 0);\n   type = TREE_OPERAND (exp, 1);\n@@ -2163,11 +2164,13 @@ build_new_1 (exp)\n   if (!complete_type_or_else (true_type, exp))\n     return error_mark_node;\n \n+  susp = suspend_momentary ();\n   if (has_array)\n     size = fold (build_binary_op (MULT_EXPR, size_in_bytes (true_type),\n \t\t\t\t  nelts));\n   else\n     size = size_in_bytes (type);\n+  resume_momentary (susp);\n \n   if (TREE_CODE (true_type) == VOID_TYPE)\n     {\n@@ -2250,8 +2253,6 @@ build_new_1 (exp)\n     }\n   else\n     {\n-      int susp = 0;\n-\n       if (flag_exceptions)\n \t/* We will use RVAL when generating an exception handler for\n \t   this new-expression, so we must save it.  */\n@@ -2424,7 +2425,7 @@ build_new_1 (exp)\n \t  int flags = LOOKUP_NORMAL | (use_global_new * LOOKUP_GLOBAL);\n \n \t  /* All cleanups must last longer than normal.  */\n-\t  int yes = suspend_momentary ();\n+\t  susp = suspend_momentary ();\n \n \t  if (placement)\n \t    {\n@@ -2438,7 +2439,7 @@ build_new_1 (exp)\n \n \t  cleanup = build_op_delete_call (dcode, alloc_node, size, flags, fn);\n \n-\t  resume_momentary (yes);\n+\t  resume_momentary (susp);\n \n \t  /* Ack!  First we allocate the memory.  Then we set our sentry\n \t     variable to true, and expand a cleanup that deletes the memory\n@@ -2452,11 +2453,11 @@ build_new_1 (exp)\n \t      begin = get_target_expr (boolean_true_node);\n \t      sentry = TREE_OPERAND (begin, 0);\n \n-\t      yes = suspend_momentary ();\n+\t      susp = suspend_momentary ();\n \t      TREE_OPERAND (begin, 2)\n \t\t= build (COND_EXPR, void_type_node, sentry,\n \t\t\t cleanup, void_zero_node);\n-\t      resume_momentary (yes);\n+\t      resume_momentary (susp);\n \n \t      rval = get_target_expr (rval);\n "}]}