{"sha": "6abc4e46f8c240aaab286414cdfb6d1e5eb9128a", "node_id": "C_kwDOANBUbNoAKDZhYmM0ZTQ2ZjhjMjQwYWFhYjI4NjQxNGNkZmI2ZDFlNWViOTEyOGE", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-03-14T18:12:55Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-03-14T18:12:55Z"}, "message": "Fix libitm.c/memset-1.c test fails with new peephole2s.\n\nMy sincere apologies for the breakage, but alas handling SImode in the\nrecently added \"xorl;movb -> movzbl\" peephole2 turns out to be slightly\nmore complicated that just using SWI48 as a mode iterator.  I'd failed\nto check the machine description carefully, but the *zero_extend<mode>si2\ndefine_insn is conditionally defined, based on x86 target tuning using\nTARGET_ZERO_EXTEND_WITH_AND, and therefore unavailable on 486 and pentium\nunless optimizing the code for size.  It turns out that the libitm testsuite\nspecifies -m486 with make check RUNTESTFLAGS=\"--target_board='unix{-m32}'\"\nand therefore encounters/catches oversight.\n\nFixed by adding the appropriate conditions to the new peephole2 patterns.\n\n2022-03-14  Roger Sayle  <roger@nextmovesoftware.com>\n\t    Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/ChangeLog\n\t* config/i386/i386.md (peephole2 xorl;movb -> movzbl): Disable\n\ttransformation when *zero_extend<mode>si2 is not available.\n\ngcc/testsuite/ChangeLog\n\t* gcc.target/i386/pr98335.c: Skip this test if tuning for i486\n\tor pentium, and not optimizing for size.", "tree": {"sha": "b02ac1d8979e15c2e0ed2bf31ea091b5e3029c69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b02ac1d8979e15c2e0ed2bf31ea091b5e3029c69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6abc4e46f8c240aaab286414cdfb6d1e5eb9128a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6abc4e46f8c240aaab286414cdfb6d1e5eb9128a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6abc4e46f8c240aaab286414cdfb6d1e5eb9128a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6abc4e46f8c240aaab286414cdfb6d1e5eb9128a/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "344e6f9f2abcff9b2bb4b26b693be4a599272f43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/344e6f9f2abcff9b2bb4b26b693be4a599272f43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/344e6f9f2abcff9b2bb4b26b693be4a599272f43"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "46a266322d37b8af464b064ef43005da129fedf4", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6abc4e46f8c240aaab286414cdfb6d1e5eb9128a/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6abc4e46f8c240aaab286414cdfb6d1e5eb9128a/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=6abc4e46f8c240aaab286414cdfb6d1e5eb9128a", "patch": "@@ -4316,15 +4316,21 @@\n \t      (clobber (reg:CC FLAGS_REG))])\n    (set (strict_low_part (match_operand:SWI12 1 \"general_reg_operand\"))\n \t(match_operand:SWI12 2 \"nonimmediate_operand\"))]\n-  \"REGNO (operands[0]) == REGNO (operands[1])\"\n+  \"REGNO (operands[0]) == REGNO (operands[1])\n+   && (<SWI48:MODE>mode != SImode\n+       || !TARGET_ZERO_EXTEND_WITH_AND\n+       || !optimize_function_for_speed_p (cfun))\"\n   [(set (match_dup 0) (zero_extend:SWI48 (match_dup 2)))])\n \n ;; Likewise, but preserving FLAGS_REG.\n (define_peephole2\n   [(set (match_operand:SWI48 0 \"general_reg_operand\") (const_int 0))\n    (set (strict_low_part (match_operand:SWI12 1 \"general_reg_operand\"))\n \t(match_operand:SWI12 2 \"nonimmediate_operand\"))]\n-  \"REGNO (operands[0]) == REGNO (operands[1])\"\n+  \"REGNO (operands[0]) == REGNO (operands[1])\n+   && (<SWI48:MODE>mode != SImode\n+       || !TARGET_ZERO_EXTEND_WITH_AND\n+       || !optimize_function_for_speed_p (cfun))\"\n   [(set (match_dup 0) (zero_extend:SWI48 (match_dup 2)))])\n \f\n ;; Sign extension instructions"}, {"sha": "bf731b4e3870dbc3029a2ae3fbb5aa708d2e9a35", "filename": "gcc/testsuite/gcc.target/i386/pr98335.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6abc4e46f8c240aaab286414cdfb6d1e5eb9128a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98335.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6abc4e46f8c240aaab286414cdfb6d1e5eb9128a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98335.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98335.c?ref=6abc4e46f8c240aaab286414cdfb6d1e5eb9128a", "patch": "@@ -1,5 +1,10 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-march=i[45]86\" } { \"-O[sz]\" } } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-march=pentium\" } { \"-O[sz]\" } } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-mtune=i[45]86\" } { \"-O[sz]\" } } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-mtune=pentium\" } { \"-O[sz]\" } } */\n+\n union Data { char a; short b; };\n \n char c;"}]}