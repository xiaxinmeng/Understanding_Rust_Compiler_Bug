{"sha": "5161ffa4f5ae6133167673afc607c07e0be787f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE2MWZmYTRmNWFlNjEzMzE2NzY3M2FmYzYwN2MwN2UwYmU3ODdmOA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-03-07T14:53:37Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-03-07T14:53:37Z"}, "message": "re PR tree-optimization/89618 (Inner loop won't vectorize unless dummy statement is included)\n\n2019-04-07  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/89618\n\t* cfgloopmanip.c (copy_loop_info): Copy forgotten fields.\n\t* tree-inline.c (copy_loops): Simplify.\n\n\t* gcc.target/i386/pr89618.c: New testcase.\n\nFrom-SVN: r269458", "tree": {"sha": "ca7ad8acb532fbc7cd99febdb4553ecd19f65ca3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca7ad8acb532fbc7cd99febdb4553ecd19f65ca3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5161ffa4f5ae6133167673afc607c07e0be787f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5161ffa4f5ae6133167673afc607c07e0be787f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5161ffa4f5ae6133167673afc607c07e0be787f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5161ffa4f5ae6133167673afc607c07e0be787f8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e0f7051e44e99d7e9f6b4d187abde5c09be5c77a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0f7051e44e99d7e9f6b4d187abde5c09be5c77a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0f7051e44e99d7e9f6b4d187abde5c09be5c77a"}], "stats": {"total": 53, "additions": 41, "deletions": 12}, "files": [{"sha": "b5a73871a21165900cc7f56ef962cc244adeb3b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5161ffa4f5ae6133167673afc607c07e0be787f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5161ffa4f5ae6133167673afc607c07e0be787f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5161ffa4f5ae6133167673afc607c07e0be787f8", "patch": "@@ -1,3 +1,9 @@\n+2019-04-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/89618\n+\t* cfgloopmanip.c (copy_loop_info): Copy forgotten fields.\n+\t* tree-inline.c (copy_loops): Simplify.\n+\n 2019-03-07  Martin Liska  <mliska@suse.cz>\n \n \t* dwarf2out.c (add_AT_vms_delta): Revert function removal."}, {"sha": "7eb587aaf6157292c7c20e33560e6206c2a59fb1", "filename": "gcc/cfgloopmanip.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5161ffa4f5ae6133167673afc607c07e0be787f8/gcc%2Fcfgloopmanip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5161ffa4f5ae6133167673afc607c07e0be787f8/gcc%2Fcfgloopmanip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopmanip.c?ref=5161ffa4f5ae6133167673afc607c07e0be787f8", "patch": "@@ -1015,10 +1015,15 @@ copy_loop_info (struct loop *loop, struct loop *target)\n   target->any_estimate = loop->any_estimate;\n   target->nb_iterations_estimate = loop->nb_iterations_estimate;\n   target->estimate_state = loop->estimate_state;\n+  target->safelen = loop->safelen;\n   target->constraints = loop->constraints;\n+  target->can_be_parallel = loop->can_be_parallel;\n   target->warned_aggressive_loop_optimizations\n     |= loop->warned_aggressive_loop_optimizations;\n+  target->dont_vectorize = loop->dont_vectorize;\n+  target->force_vectorize = loop->force_vectorize;\n   target->in_oacc_kernels_region = loop->in_oacc_kernels_region;\n+  target->unroll = loop->unroll;\n }\n \n /* Copies copy of LOOP as subloop of TARGET loop, placing newly"}, {"sha": "d13a7db0bb81e1beb2d3365702d891c6f71b13c2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5161ffa4f5ae6133167673afc607c07e0be787f8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5161ffa4f5ae6133167673afc607c07e0be787f8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5161ffa4f5ae6133167673afc607c07e0be787f8", "patch": "@@ -1,3 +1,8 @@\n+2019-04-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/89618\n+\t* gcc.target/i386/pr89618.c: New testcase.\n+\n 2019-03-07  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/89595"}, {"sha": "11b2d28ed941f7b700175f91ff8cf5292c21d13b", "filename": "gcc/testsuite/gcc.target/i386/pr89618.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5161ffa4f5ae6133167673afc607c07e0be787f8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89618.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5161ffa4f5ae6133167673afc607c07e0be787f8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89618.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89618.c?ref=5161ffa4f5ae6133167673afc607c07e0be787f8", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mavx512f -fdump-tree-vect-details\" } */\n+\n+void foo (int n, int *off, double *a)\n+{\n+  const int m = 32;\n+\n+  for (int j = 0; j < n/m; ++j)\n+    {\n+      int const start = j*m;\n+      int const end = (j+1)*m;\n+\n+#pragma GCC ivdep\n+      for (int i = start; i < end; ++i)\n+\t{\n+\t  a[off[i]] = a[i] < 0 ? a[i] : 0;\n+\t}\n+    }\n+}\n+\n+/* { dg-final { scan-tree-dump \"LOOP VECTORIZED\" \"vect\" } } */"}, {"sha": "d3e53d2cb38804f4e324c8816e6d6ee896b4ab70", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5161ffa4f5ae6133167673afc607c07e0be787f8/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5161ffa4f5ae6133167673afc607c07e0be787f8/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=5161ffa4f5ae6133167673afc607c07e0be787f8", "patch": "@@ -2666,23 +2666,15 @@ copy_loops (copy_body_data *id,\n \n \t  /* Copy loop meta-data.  */\n \t  copy_loop_info (src_loop, dest_loop);\n+\t  if (dest_loop->unroll)\n+\t    cfun->has_unroll = true;\n+\t  if (dest_loop->force_vectorize)\n+\t    cfun->has_force_vectorize_loops = true;\n \n \t  /* Finally place it into the loop array and the loop tree.  */\n \t  place_new_loop (cfun, dest_loop);\n \t  flow_loop_tree_node_add (dest_parent, dest_loop);\n \n-\t  dest_loop->safelen = src_loop->safelen;\n-\t  if (src_loop->unroll)\n-\t    {\n-\t      dest_loop->unroll = src_loop->unroll;\n-\t      cfun->has_unroll = true;\n-\t    }\n-\t  dest_loop->dont_vectorize = src_loop->dont_vectorize;\n-\t  if (src_loop->force_vectorize)\n-\t    {\n-\t      dest_loop->force_vectorize = true;\n-\t      cfun->has_force_vectorize_loops = true;\n-\t    }\n \t  if (src_loop->simduid)\n \t    {\n \t      dest_loop->simduid = remap_decl (src_loop->simduid, id);"}]}