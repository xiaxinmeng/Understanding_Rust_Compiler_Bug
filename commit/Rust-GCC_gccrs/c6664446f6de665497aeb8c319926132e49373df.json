{"sha": "c6664446f6de665497aeb8c319926132e49373df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY2NjQ0NDZmNmRlNjY1NDk3YWViOGMzMTk5MjYxMzJlNDkzNzNkZg==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2002-08-23T18:02:22Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2002-08-23T18:02:22Z"}, "message": "rs6000.c (rs6000_elf_select_section): Treat DEFAULT_ABI == ABI_AIX like PIC.\n\n        * config/rs6000/rs6000.c (rs6000_elf_select_section): Treat\n        DEFAULT_ABI == ABI_AIX like PIC.  Test PIC & reloc for readonly\n        default.\n        (rs6000_elf_unique_section): Likewise.\n\nFrom-SVN: r56544", "tree": {"sha": "e2bce1e8f0eae7541bc641155d270506cb549f80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2bce1e8f0eae7541bc641155d270506cb549f80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6664446f6de665497aeb8c319926132e49373df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6664446f6de665497aeb8c319926132e49373df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6664446f6de665497aeb8c319926132e49373df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6664446f6de665497aeb8c319926132e49373df/comments", "author": null, "committer": null, "parents": [{"sha": "da57d233f914080596e109a21f4ba1a3488736dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da57d233f914080596e109a21f4ba1a3488736dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da57d233f914080596e109a21f4ba1a3488736dd"}], "stats": {"total": 43, "additions": 26, "deletions": 17}, "files": [{"sha": "05a7437360a99bed49417017c211804d06829ed7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6664446f6de665497aeb8c319926132e49373df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6664446f6de665497aeb8c319926132e49373df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c6664446f6de665497aeb8c319926132e49373df", "patch": "@@ -1,3 +1,10 @@\n+2002-08-23  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.c (rs6000_elf_select_section): Treat\n+\tDEFAULT_ABI == ABI_AIX like PIC.  Test PIC & reloc for readonly\n+\tdefault.\n+\t(rs6000_elf_unique_section): Likewise.\n+\n 2002-08-23  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* ns32k.c (ns32k_globalize_label): Delete."}, {"sha": "f9e86bee4c246485b80947880fc9ebaeec26f785", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6664446f6de665497aeb8c319926132e49373df/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6664446f6de665497aeb8c319926132e49373df/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=c6664446f6de665497aeb8c319926132e49373df", "patch": "@@ -12428,8 +12428,8 @@ rs6000_elf_select_section (decl, reloc, align)\n      unsigned HOST_WIDE_INT align ATTRIBUTE_UNUSED;\n {\n   int size = int_size_in_bytes (TREE_TYPE (decl));\n-  int needs_sdata;\n-  int readonly;\n+  bool needs_sdata;\n+  bool readonly;\n   static void (* const sec_funcs[4]) PARAMS ((void)) = {\n     &readonly_data_section,\n     &sdata2_section,\n@@ -12443,22 +12443,23 @@ rs6000_elf_select_section (decl, reloc, align)\n \t\t && (rs6000_sdata != SDATA_DATA || TREE_PUBLIC (decl)));\n \n   if (TREE_CODE (decl) == STRING_CST)\n-    readonly = ! flag_writable_strings;\n+    readonly = !flag_writable_strings;\n   else if (TREE_CODE (decl) == VAR_DECL)\n-    readonly = (! (flag_pic && reloc)\n+    readonly = (!((flag_pic || DEFAULT_ABI == ABI_AIX) && reloc)\n \t\t&& TREE_READONLY (decl)\n-\t\t&& ! TREE_SIDE_EFFECTS (decl)\n+\t\t&& !TREE_SIDE_EFFECTS (decl)\n \t\t&& DECL_INITIAL (decl)\n \t\t&& DECL_INITIAL (decl) != error_mark_node\n \t\t&& TREE_CONSTANT (DECL_INITIAL (decl)));\n   else if (TREE_CODE (decl) == CONSTRUCTOR)\n-    readonly = (! (flag_pic && reloc)\n-\t\t&& ! TREE_SIDE_EFFECTS (decl)\n+    readonly = (!((flag_pic || DEFAULT_ABI == ABI_AIX) && reloc)\n+\t\t&& !TREE_SIDE_EFFECTS (decl)\n \t\t&& TREE_CONSTANT (decl));\n   else\n-    readonly = 1;\n+    readonly = !((flag_pic || DEFAULT_ABI == ABI_AIX) && reloc);\n+\n   if (needs_sdata && rs6000_sdata != SDATA_EABI)\n-    readonly = 0;\n+    readonly = false;\n   \n   (*sec_funcs[(readonly ? 0 : 2) + (needs_sdata ? 1 : 0)])();\n }\n@@ -12497,29 +12498,30 @@ rs6000_elf_unique_section (decl, reloc)\n     sec = 6;\n   else\n     {\n-      int readonly;\n-      int needs_sdata;\n+      bool readonly;\n+      bool needs_sdata;\n       int size;\n \n-      readonly = 1;\n       if (TREE_CODE (decl) == STRING_CST)\n-\treadonly = ! flag_writable_strings;\n+\treadonly = !flag_writable_strings;\n       else if (TREE_CODE (decl) == VAR_DECL)\n-\treadonly = (! (flag_pic && reloc)\n+\treadonly = (!((flag_pic || DEFAULT_ABI == ABI_AIX) && reloc)\n \t\t    && TREE_READONLY (decl)\n-\t\t    && ! TREE_SIDE_EFFECTS (decl)\n+\t\t    && !TREE_SIDE_EFFECTS (decl)\n \t\t    && TREE_CONSTANT (DECL_INITIAL (decl)));\n+      else\n+\treadonly = !((flag_pic || DEFAULT_ABI == ABI_AIX) && reloc);\n \n       size = int_size_in_bytes (TREE_TYPE (decl));\n       needs_sdata = (size > 0 \n \t\t     && size <= g_switch_value\n \t\t     && rs6000_sdata != SDATA_NONE\n \t\t     && (rs6000_sdata != SDATA_DATA || TREE_PUBLIC (decl)));\n \n-      if (DECL_INITIAL (decl) == 0\n+      if (DECL_INITIAL (decl) == NULL\n \t  || DECL_INITIAL (decl) == error_mark_node)\n \tsec = 4;\n-      else if (! readonly)\n+      else if (!readonly)\n \tsec = 2;\n       else\n \tsec = 0;"}]}