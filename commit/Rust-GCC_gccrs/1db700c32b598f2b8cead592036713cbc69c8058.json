{"sha": "1db700c32b598f2b8cead592036713cbc69c8058", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRiNzAwYzMyYjU5OGYyYjhjZWFkNTkyMDM2NzEzY2JjNjljODA1OA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-30T15:15:45Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-30T15:15:45Z"}, "message": "[multiple changes]\n\n2015-01-30  Gary Dismukes  <dismukes@adacore.com>\n\n\t* errout.ads: Minor reformatting.\n\n2015-01-30  Yannick Moy  <moy@adacore.com>\n\n\t* inline.adb (Process_Formals): Use the sloc of\n\tthe inlined node instead of the sloc of the actual parameter,\n\twhen replacing formal parameters by the actual one.\n\n2015-01-30  Arnaud Charlet  <charlet@adacore.com>\n\n\t* g-expect.adb (Get_Command_Output): Use infinite timeout when\n\tcalling Expect.\n\n2015-01-30  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Analyze_Associations): If an in-parameter is\n\tdefaulted in an instantiation, add an entry in the list of actuals\n\tto indicate the default value of the formal (as is already done\n\tfor defaulted subprograms).\n\n2015-01-30  Javier Miranda  <miranda@adacore.com>\n\n\t* errout.adb (Error_Msg_PT): Minor error phrasing update.\n\n2015-01-30  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_warn.adb (Warn_On_Known_Condition): Improve error message\n\tfor object case.\n\n2015-01-30  Pierre-Marie de Rodat  <derodat@adacore.com>\n\n\t* exp_dbug.adb (Get_Encoded_Name): When\n\t-fgnat-encodings=minimal, do not generate names for biased types.\n\nFrom-SVN: r220286", "tree": {"sha": "af36e6aacec112b58a5f83a33f916f37537a549e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af36e6aacec112b58a5f83a33f916f37537a549e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1db700c32b598f2b8cead592036713cbc69c8058", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1db700c32b598f2b8cead592036713cbc69c8058", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1db700c32b598f2b8cead592036713cbc69c8058", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1db700c32b598f2b8cead592036713cbc69c8058/comments", "author": null, "committer": null, "parents": [{"sha": "1de83011b142444b5b35e699799c2e7b1485b8e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1de83011b142444b5b35e699799c2e7b1485b8e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1de83011b142444b5b35e699799c2e7b1485b8e6"}], "stats": {"total": 170, "additions": 112, "deletions": 58}, "files": [{"sha": "8829a1f707b8652b7333b1f1a9fcbb4ce19d3d9e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1db700c32b598f2b8cead592036713cbc69c8058/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1db700c32b598f2b8cead592036713cbc69c8058/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1db700c32b598f2b8cead592036713cbc69c8058", "patch": "@@ -1,3 +1,39 @@\n+2015-01-30  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* errout.ads: Minor reformatting.\n+\n+2015-01-30  Yannick Moy  <moy@adacore.com>\n+\n+\t* inline.adb (Process_Formals): Use the sloc of\n+\tthe inlined node instead of the sloc of the actual parameter,\n+\twhen replacing formal parameters by the actual one.\n+\n+2015-01-30  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* g-expect.adb (Get_Command_Output): Use infinite timeout when\n+\tcalling Expect.\n+\n+2015-01-30  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Analyze_Associations): If an in-parameter is\n+\tdefaulted in an instantiation, add an entry in the list of actuals\n+\tto indicate the default value of the formal (as is already done\n+\tfor defaulted subprograms).\n+\n+2015-01-30  Javier Miranda  <miranda@adacore.com>\n+\n+\t* errout.adb (Error_Msg_PT): Minor error phrasing update.\n+\n+2015-01-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_warn.adb (Warn_On_Known_Condition): Improve error message\n+\tfor object case.\n+\n+2015-01-30  Pierre-Marie de Rodat  <derodat@adacore.com>\n+\n+\t* exp_dbug.adb (Get_Encoded_Name): When\n+\t-fgnat-encodings=minimal, do not generate names for biased types.\n+\n 2015-01-30  Tristan Gingold  <gingold@adacore.com>\n \n \tPR ada/64349"}, {"sha": "e48956b4218c03ad7216a2895152565f484b07ce", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1db700c32b598f2b8cead592036713cbc69c8058/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1db700c32b598f2b8cead592036713cbc69c8058/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=1db700c32b598f2b8cead592036713cbc69c8058", "patch": "@@ -687,7 +687,8 @@ package body Errout is\n \n       Error_Msg_Sloc := Sloc (Iface_Prim);\n       Error_Msg_N\n-        (\"\\first formal of & declared # has wrong mode (RM 9.4(11.9))\", E);\n+        (\"\\first formal of & declared # must be of mode `OUT`, `IN OUT` \" &\n+         \"or access-to-variable\", E);\n    end Error_Msg_PT;\n \n    -----------------"}, {"sha": "d1892403540d149ea6f5b7096fbe72a9ba88bda1", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1db700c32b598f2b8cead592036713cbc69c8058/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1db700c32b598f2b8cead592036713cbc69c8058/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=1db700c32b598f2b8cead592036713cbc69c8058", "patch": "@@ -851,7 +851,7 @@ package Errout is\n    procedure Error_Msg_PT (E : Entity_Id; Iface_Prim : Entity_Id);\n    --  Posts an error on protected type entry or subprogram E (referencing its\n    --  overridden interface primitive Iface_Prim) indicating wrong mode of the\n-   --  first formal (RM 9.4(11.9/3))\n+   --  first formal (RM 9.4(11.9/3)).\n \n    procedure Error_Msg_Ada_2012_Feature (Feature : String; Loc : Source_Ptr);\n    --  If not operating in Ada 2012 mode, posts errors complaining that Feature"}, {"sha": "1a05adb73c9dae4153353be2f289882c93a430c8", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1db700c32b598f2b8cead592036713cbc69c8058/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1db700c32b598f2b8cead592036713cbc69c8058/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=1db700c32b598f2b8cead592036713cbc69c8058", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -634,15 +634,12 @@ package body Exp_Dbug is\n             Add_Real_To_Buffer (Small_Value (E));\n          end if;\n \n-      --  Discrete case where bounds do not match size. Match only biased\n-      --  types when asked to output as little encodings as possible.\n+      --  Discrete case where bounds do not match size. Not necessary if we can\n+      --  emit standard DWARF.\n \n-      elsif ((GNAT_Encodings /= DWARF_GNAT_Encodings_Minimal\n-               and then Is_Discrete_Type (E))\n-             or else\n-             (GNAT_Encodings = DWARF_GNAT_Encodings_Minimal\n-               and then Has_Biased_Representation (E)))\n-            and then not Bounds_Match_Size (E)\n+      elsif GNAT_Encodings /= DWARF_GNAT_Encodings_Minimal\n+        and then Is_Discrete_Type (E)\n+        and then not Bounds_Match_Size (E)\n       then\n          declare\n             Lo : constant Node_Id := Type_Low_Bound (E);"}, {"sha": "831d8232fb5979d759d04c2da7e1ebf0cddf4298", "filename": "gcc/ada/g-expect.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1db700c32b598f2b8cead592036713cbc69c8058/gcc%2Fada%2Fg-expect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1db700c32b598f2b8cead592036713cbc69c8058/gcc%2Fada%2Fg-expect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-expect.adb?ref=1db700c32b598f2b8cead592036713cbc69c8058", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2000-2014, AdaCore                     --\n+--                     Copyright (C) 2000-2015, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -927,7 +927,7 @@ package body GNAT.Expect is\n          --  This loop runs until the call to Expect raises Process_Died\n \n          loop\n-            Expect (Process, Result, \".+\");\n+            Expect (Process, Result, \".+\", Timeout => -1);\n \n             declare\n                NOutput : String_Access;"}, {"sha": "896a5e452a54e088cca92c674088fc35719b2708", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1db700c32b598f2b8cead592036713cbc69c8058/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1db700c32b598f2b8cead592036713cbc69c8058/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=1db700c32b598f2b8cead592036713cbc69c8058", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2248,11 +2248,11 @@ package body Inline is\n                --  analyzed with the full view).\n \n                if Is_Entity_Name (A) then\n-                  Rewrite (N, New_Occurrence_Of (Entity (A), Loc));\n+                  Rewrite (N, New_Occurrence_Of (Entity (A), Sloc (N)));\n                   Check_Private_View (N);\n \n                elsif Nkind (A) = N_Defining_Identifier then\n-                  Rewrite (N, New_Occurrence_Of (A, Loc));\n+                  Rewrite (N, New_Occurrence_Of (A, Sloc (N)));\n                   Check_Private_View (N);\n \n                --  Numeric literal"}, {"sha": "0d698cffec7a178ea75fd12f7337471ec67b1187", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 60, "deletions": 40, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1db700c32b598f2b8cead592036713cbc69c8058/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1db700c32b598f2b8cead592036713cbc69c8058/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=1db700c32b598f2b8cead592036713cbc69c8058", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -921,7 +921,7 @@ package body Sem_Ch12 is\n    is\n       Actuals_To_Freeze : constant Elist_Id  := New_Elmt_List;\n       Assoc             : constant List_Id   := New_List;\n-      Default_Actuals   : constant Elist_Id  := New_Elmt_List;\n+      Default_Actuals   : constant List_Id   := New_List;\n       Gen_Unit          : constant Entity_Id :=\n                             Defining_Entity (Parent (F_Copy));\n \n@@ -1385,16 +1385,34 @@ package body Sem_Ch12 is\n             case Nkind (Formal) is\n                when N_Formal_Object_Declaration =>\n                   Match :=\n-                    Matching_Actual (\n-                      Defining_Identifier (Formal),\n-                      Defining_Identifier (Analyzed_Formal));\n+                    Matching_Actual\n+                      (Defining_Identifier (Formal),\n+                       Defining_Identifier (Analyzed_Formal));\n \n                   if No (Match) and then Partial_Parameterization then\n                      Process_Default (Formal);\n+\n                   else\n                      Append_List\n                        (Instantiate_Object (Formal, Match, Analyzed_Formal),\n                         Assoc);\n+\n+                     --  For a defaulted in_parameter, create an entry in the\n+                     --  the list of defaulted actuals, for GNATProve use. Do\n+                     --  not included these defaults for an instance nested\n+                     --  within a generic, because the defaults are also used\n+                     --  in the analysis of the enclosing generic, and only\n+                     --  defaulted subprograms are relevant there.\n+\n+                     if No (Match) and then not Inside_A_Generic then\n+                        Append_To (Default_Actuals,\n+                          Make_Generic_Association (Sloc (I_Node),\n+                            Selector_Name                     =>\n+                              New_Occurrence_Of\n+                                (Defining_Identifier (Formal), Sloc (I_Node)),\n+                            Explicit_Generic_Actual_Parameter =>\n+                              New_Copy_Tree (Default_Expression (Formal))));\n+                     end if;\n                   end if;\n \n                   --  If the object is a call to an expression function, this\n@@ -1404,16 +1422,16 @@ package body Sem_Ch12 is\n                     and then Present (Entity (Match))\n                     and then Nkind\n                       (Original_Node (Unit_Declaration_Node (Entity (Match))))\n-                        = N_Expression_Function\n+                                                     = N_Expression_Function\n                   then\n                      Append_Elmt (Entity (Match), Actuals_To_Freeze);\n                   end if;\n \n                when N_Formal_Type_Declaration =>\n                   Match :=\n-                    Matching_Actual (\n-                      Defining_Identifier (Formal),\n-                      Defining_Identifier (Analyzed_Formal));\n+                    Matching_Actual\n+                      (Defining_Identifier (Formal),\n+                       Defining_Identifier (Analyzed_Formal));\n \n                   if No (Match) then\n                      if Partial_Parameterization then\n@@ -1474,10 +1492,10 @@ package body Sem_Ch12 is\n                   then\n                      declare\n                         Formal_Ent : constant Entity_Id :=\n-                                        Defining_Identifier (Analyzed_Formal);\n+                                       Defining_Identifier (Analyzed_Formal);\n                      begin\n                         if Is_Remote_Access_To_Class_Wide_Type (Entity (Match))\n-                             = Is_Remote_Types (Formal_Ent)\n+                                                = Is_Remote_Types (Formal_Ent)\n                         then\n                            --  Remoteness of formal and actual match\n \n@@ -1567,12 +1585,22 @@ package body Sem_Ch12 is\n                   end if;\n \n                   --  If this is a nested generic, preserve default for later\n-                  --  instantiations.\n+                  --  instantiations. We do this as well for GNATProve use,\n+                  --  so that the list of generic associations is complete.\n \n                   if No (Match) and then Box_Present (Formal) then\n-                     Append_Elmt\n-                       (Defining_Unit_Name (Specification (Last (Assoc))),\n-                        Default_Actuals);\n+                     declare\n+                        Subp : constant Entity_Id :=\n+                          Defining_Unit_Name (Specification (Last (Assoc)));\n+\n+                     begin\n+                        Append_To (Default_Actuals,\n+                          Make_Generic_Association (Sloc (I_Node),\n+                            Selector_Name                     =>\n+                              New_Occurrence_Of (Subp, Sloc (I_Node)),\n+                            Explicit_Generic_Actual_Parameter =>\n+                              New_Occurrence_Of (Subp, Sloc (I_Node))));\n+                     end;\n                   end if;\n \n                when N_Formal_Package_Declaration =>\n@@ -1667,31 +1695,24 @@ package body Sem_Ch12 is\n       --  explicit associations for them. This is required if the instance\n       --  appears within a generic.\n \n-      declare\n-         Elmt  : Elmt_Id;\n-         Subp  : Entity_Id;\n-         New_D : Node_Id;\n+      if not Is_Empty_List (Default_Actuals) then\n+         declare\n+            Default : Node_Id;\n+\n+         begin\n+            Default := First (Default_Actuals);\n+            while Present (Default) loop\n+               Mark_Rewrite_Insertion (Default);\n+               Next (Default);\n+            end loop;\n \n-      begin\n-         Elmt := First_Elmt (Default_Actuals);\n-         while Present (Elmt) loop\n             if No (Actuals) then\n-               Actuals := New_List;\n-               Set_Generic_Associations (I_Node, Actuals);\n-            end if;\n-\n-            Subp := Node (Elmt);\n-            New_D :=\n-              Make_Generic_Association (Sloc (Subp),\n-                Selector_Name                     =>\n-                  New_Occurrence_Of (Subp, Sloc (Subp)),\n-                Explicit_Generic_Actual_Parameter =>\n-                  New_Occurrence_Of (Subp, Sloc (Subp)));\n-            Mark_Rewrite_Insertion (New_D);\n-            Append_To (Actuals, New_D);\n-            Next_Elmt (Elmt);\n-         end loop;\n-      end;\n+               Set_Generic_Associations (I_Node, Default_Actuals);\n+            else\n+               Append_List_To (Actuals, Default_Actuals);\n+            end if;\n+         end;\n+      end if;\n \n       --  If this is a formal package, normalize the parameter list by adding\n       --  explicit box associations for the formals that are covered by an\n@@ -9455,8 +9476,7 @@ package body Sem_Ch12 is\n \n                   if Present (Formal_Ent) then\n                      Find_Matching_Actual (Formal_Node, Actual_Ent);\n-                     Match_Formal_Entity\n-                       (Formal_Node, Formal_Ent, Actual_Ent);\n+                     Match_Formal_Entity (Formal_Node, Formal_Ent, Actual_Ent);\n \n                      --  We iterate at the same time over the actuals of the\n                      --  local package created for the formal, to determine"}, {"sha": "56344279c9edd9b6ebd3e8ff89f601196594529d", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1db700c32b598f2b8cead592036713cbc69c8058/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1db700c32b598f2b8cead592036713cbc69c8058/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=1db700c32b598f2b8cead592036713cbc69c8058", "patch": "@@ -3404,7 +3404,7 @@ package body Sem_Warn is\n                     and then Nkind (Cond) /= N_Op_Not\n                   then\n                      Error_Msg_NE\n-                       (\"object & is always True?c?\",\n+                       (\"object & is always True at this point?c?\",\n                         Cond, Original_Node (C));\n                      Track (Original_Node (C), Cond);\n \n@@ -3420,7 +3420,7 @@ package body Sem_Warn is\n                     and then Nkind (Cond) /= N_Op_Not\n                   then\n                      Error_Msg_NE\n-                       (\"object & is always False?c?\",\n+                       (\"object & is always False at this point?c?\",\n                         Cond, Original_Node (C));\n                      Track (Original_Node (C), Cond);\n "}]}