{"sha": "c2d9083df222456f5d0f15d5a6ceca7a97ded8b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJkOTA4M2RmMjIyNDU2ZjVkMGYxNWQ1YTZjZWNhN2E5N2RlZDhiOQ==", "commit": {"author": {"name": "Haakan Younes", "email": "hyounes@google.com", "date": "2012-10-24T12:20:19Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-10-24T12:20:19Z"}, "message": "re PR libstdc++/55047 (operator() in std::exponential_distribution may call log(0))\n\n2012-10-24   Haakan Younes  <hyounes@google.com>\n\t     Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/55047\n\t* include/bits/random.h (exponential_distribution<>::operator):\n\tFix formula to std::log(result_type(1) - __aurng()).\n\t* include/bits/random.tcc: Likewise, everywhere.\n\nCo-Authored-By: Paolo Carlini <paolo.carlini@oracle.com>\n\nFrom-SVN: r192762", "tree": {"sha": "0c8ee68c0703de1fab83e2d0e6acb422847fc01e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c8ee68c0703de1fab83e2d0e6acb422847fc01e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2d9083df222456f5d0f15d5a6ceca7a97ded8b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2d9083df222456f5d0f15d5a6ceca7a97ded8b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2d9083df222456f5d0f15d5a6ceca7a97ded8b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2d9083df222456f5d0f15d5a6ceca7a97ded8b9/comments", "author": {"login": "hlsyounes", "id": 9813503, "node_id": "MDQ6VXNlcjk4MTM1MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/9813503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hlsyounes", "html_url": "https://github.com/hlsyounes", "followers_url": "https://api.github.com/users/hlsyounes/followers", "following_url": "https://api.github.com/users/hlsyounes/following{/other_user}", "gists_url": "https://api.github.com/users/hlsyounes/gists{/gist_id}", "starred_url": "https://api.github.com/users/hlsyounes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hlsyounes/subscriptions", "organizations_url": "https://api.github.com/users/hlsyounes/orgs", "repos_url": "https://api.github.com/users/hlsyounes/repos", "events_url": "https://api.github.com/users/hlsyounes/events{/privacy}", "received_events_url": "https://api.github.com/users/hlsyounes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c6c084858c967229e5366b7e1ee45820e7e3ba4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6c084858c967229e5366b7e1ee45820e7e3ba4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6c084858c967229e5366b7e1ee45820e7e3ba4d"}], "stats": {"total": 52, "additions": 32, "deletions": 20}, "files": [{"sha": "0c8061fd8a6d93c4596da2bdd370f1d32ffb37e2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2d9083df222456f5d0f15d5a6ceca7a97ded8b9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2d9083df222456f5d0f15d5a6ceca7a97ded8b9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c2d9083df222456f5d0f15d5a6ceca7a97ded8b9", "patch": "@@ -1,3 +1,11 @@\n+2012-10-24   Haakan Younes  <hyounes@google.com>\n+\t     Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/55047\n+\t* include/bits/random.h (exponential_distribution<>::operator):\n+\tFix formula to std::log(result_type(1) - __aurng()).\n+\t* include/bits/random.tcc: Likewise, everywhere.\n+\n 2012-10-23  Yufeng Zhang  <yufeng.zhang@arm.com>\n \n \t* config/cpu/aarch64/cxxabi_tweaks.h: New file."}, {"sha": "f31f5535dee35a0c84f70868124ff0a3aa309778", "filename": "libstdc++-v3/include/bits/random.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2d9083df222456f5d0f15d5a6ceca7a97ded8b9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2d9083df222456f5d0f15d5a6ceca7a97ded8b9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h?ref=c2d9083df222456f5d0f15d5a6ceca7a97ded8b9", "patch": "@@ -1,6 +1,6 @@\n // random number generation -*- C++ -*-\n \n-// Copyright (C) 2009, 2010, 2011, 2012 Free Software Foundation, Inc.\n+// Copyright (C) 2009-2012 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -4748,7 +4748,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t{\n \t  __detail::_Adaptor<_UniformRandomNumberGenerator, result_type>\n \t    __aurng(__urng);\n-\t  return -std::log(__aurng()) / __p.lambda();\n+\t  return -std::log(result_type(1) - __aurng()) / __p.lambda();\n \t}\n \n       template<typename _ForwardIterator,"}, {"sha": "f2edc3e66eed33257719f55add91b33dff83d130", "filename": "libstdc++-v3/include/bits/random.tcc", "status": "modified", "additions": 22, "deletions": 18, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2d9083df222456f5d0f15d5a6ceca7a97ded8b9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2d9083df222456f5d0f15d5a6ceca7a97ded8b9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc?ref=c2d9083df222456f5d0f15d5a6ceca7a97ded8b9", "patch": "@@ -1,6 +1,6 @@\n // random number generation (out of line) -*- C++ -*-\n \n-// Copyright (C) 2009, 2010, 2011, 2012 Free Software Foundation, Inc.\n+// Copyright (C) 2009-2012 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -1187,7 +1187,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n \tdouble __cand;\n \tdo\n-\t  __cand = std::floor(std::log(__aurng()) / __param._M_log_1_p);\n+\t  __cand = std::floor(std::log(1.0 - __aurng()) / __param._M_log_1_p);\n \twhile (__cand >= __thr);\n \n \treturn result_type(__cand + __naf);\n@@ -1217,7 +1217,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  {\n \t    double __cand;\n \t    do\n-\t      __cand = std::floor(std::log(__aurng()) / __param._M_log_1_p);\n+\t      __cand = std::floor(std::log(1.0 - __aurng())\n+\t\t\t\t  / __param._M_log_1_p);\n \t    while (__cand >= __thr);\n \n \t    *__f++ = __cand + __naf;\n@@ -1464,7 +1465,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t    do\n \t      {\n \t\tconst double __u = __c * __aurng();\n-\t\tconst double __e = -std::log(__aurng());\n+\t\tconst double __e = -std::log(1.0 - __aurng());\n \n \t\tdouble __w = 0.0;\n \n@@ -1496,7 +1497,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t  __x = 1;\n \t\telse\n \t\t  {\n-\t\t    const double __v = -std::log(__aurng());\n+\t\t    const double __v = -std::log(1.0 - __aurng());\n \t\t    const double __y = __param._M_d\n \t\t\t\t     + __v * __2cx / __param._M_d;\n \t\t    __x = std::ceil(__y);\n@@ -1655,7 +1656,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n \tdo\n \t  {\n-\t    const double __e = -std::log(__aurng());\n+\t    const double __e = -std::log(1.0 - __aurng());\n \t    __sum += __e / (__t - __x);\n \t    __x += 1;\n \t  }\n@@ -1723,7 +1724,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t    __reject = __y >= __param._M_d1;\n \t\t    if (!__reject)\n \t\t      {\n-\t\t\tconst double __e = -std::log(__aurng());\n+\t\t\tconst double __e = -std::log(1.0 - __aurng());\n \t\t\t__x = std::floor(__y);\n \t\t\t__v = -__e - __n * __n / 2 + __param._M_c;\n \t\t      }\n@@ -1735,15 +1736,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t    __reject = __y >= __param._M_d2;\n \t\t    if (!__reject)\n \t\t      {\n-\t\t\tconst double __e = -std::log(__aurng());\n+\t\t\tconst double __e = -std::log(1.0 - __aurng());\n \t\t\t__x = std::floor(-__y);\n \t\t\t__v = -__e - __n * __n / 2;\n \t\t      }\n \t\t  }\n \t\telse if (__u <= __a123)\n \t\t  {\n-\t\t    const double __e1 = -std::log(__aurng());\n-\t\t    const double __e2 = -std::log(__aurng());\n+\t\t    const double __e1 = -std::log(1.0 - __aurng());\n+\t\t    const double __e2 = -std::log(1.0 - __aurng());\n \n \t\t    const double __y = __param._M_d1\n \t\t\t\t     + 2 * __s1s * __e1 / __param._M_d1;\n@@ -1754,8 +1755,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t  }\n \t\telse\n \t\t  {\n-\t\t    const double __e1 = -std::log(__aurng());\n-\t\t    const double __e2 = -std::log(__aurng());\n+\t\t    const double __e1 = -std::log(1.0 - __aurng());\n+\t\t    const double __e2 = -std::log(1.0 - __aurng());\n \n \t\t    const double __y = __param._M_d2\n \t\t\t\t     + 2 * __s2s * __e1 / __param._M_d2;\n@@ -1869,7 +1870,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>\n \t  __aurng(__urng);\n \twhile (__f != __t)\n-\t  *__f++ = -std::log(__aurng()) / __p.lambda();\n+\t  *__f++ = -std::log(result_type(1) - __aurng()) / __p.lambda();\n       }\n \n   template<typename _RealType, typename _CharT, typename _Traits>\n@@ -2628,7 +2629,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       {\n \t__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>\n \t  __aurng(__urng);\n-\treturn __p.b() * std::pow(-std::log(__aurng()),\n+\treturn __p.b() * std::pow(-std::log(result_type(1) - __aurng()),\n \t\t\t\t  result_type(1) / __p.a());\n       }\n \n@@ -2644,10 +2645,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)\n \t__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>\n \t  __aurng(__urng);\n-\tauto inv_a = result_type(1) / __p.a();\n+\tauto __inv_a = result_type(1) / __p.a();\n \n \twhile (__f != __t)\n-\t  *__f++ = __p.b() * std::pow(-std::log(__aurng()), inv_a);\n+\t  *__f++ = __p.b() * std::pow(-std::log(result_type(1) - __aurng()),\n+\t\t\t\t      __inv_a);\n       }\n \n   template<typename _RealType, typename _CharT, typename _Traits>\n@@ -2704,7 +2706,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       {\n \t__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>\n \t  __aurng(__urng);\n-\treturn __p.a() - __p.b() * std::log(-std::log(__aurng()));\n+\treturn __p.a() - __p.b() * std::log(-std::log(result_type(1)\n+\t\t\t\t\t\t      - __aurng()));\n       }\n \n   template<typename _RealType>\n@@ -2721,7 +2724,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  __aurng(__urng);\n \n \twhile (__f != __t)\n-\t  *__f++ = __p.a() - __p.b() * std::log(-std::log(__aurng()));\n+\t  *__f++ = __p.a() - __p.b() * std::log(-std::log(result_type(1)\n+\t\t\t\t\t\t\t  - __aurng()));\n       }\n \n   template<typename _RealType, typename _CharT, typename _Traits>"}]}