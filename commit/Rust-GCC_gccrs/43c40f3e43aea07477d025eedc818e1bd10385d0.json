{"sha": "43c40f3e43aea07477d025eedc818e1bd10385d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNjNDBmM2U0M2FlYTA3NDc3ZDAyNWVlZGM4MThlMWJkMTAzODVkMA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2016-10-04T09:00:27Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2016-10-04T09:00:27Z"}, "message": "Restore --enable-objc-gc support\n\n\t* configure.ac (target_libraries): Readd target-boehm-gc.\n\tRestore --enable-objc-gc handling.\n\t* configure: Regenerate.\n\nFrom-SVN: r240740", "tree": {"sha": "18515e3301c39e5d8ac8443beb123b3d2e09a74c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18515e3301c39e5d8ac8443beb123b3d2e09a74c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43c40f3e43aea07477d025eedc818e1bd10385d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43c40f3e43aea07477d025eedc818e1bd10385d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43c40f3e43aea07477d025eedc818e1bd10385d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43c40f3e43aea07477d025eedc818e1bd10385d0/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5a79befbf444ecd99ed39bc4b9643c5ca5e0a447", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a79befbf444ecd99ed39bc4b9643c5ca5e0a447", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a79befbf444ecd99ed39bc4b9643c5ca5e0a447"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "228c717ece320072a3cbf0a2c730ac87979519e9", "filename": "ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c40f3e43aea07477d025eedc818e1bd10385d0/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c40f3e43aea07477d025eedc818e1bd10385d0/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=43c40f3e43aea07477d025eedc818e1bd10385d0", "patch": "@@ -1,3 +1,9 @@\n+2016-10-04  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac (target_libraries): Readd target-boehm-gc.\n+\tRestore --enable-objc-gc handling.\n+\t* configure: Regenerate.\n+\n 2015-10-03  Jeff Law  <law@redhat.com>\n \n \t* MAINTAINERS: Move several inactive maintainers to the"}, {"sha": "f9650c92765b4af57e5c02f99b8c1f163b9c89ab", "filename": "configure", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c40f3e43aea07477d025eedc818e1bd10385d0/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c40f3e43aea07477d025eedc818e1bd10385d0/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=43c40f3e43aea07477d025eedc818e1bd10385d0", "patch": "@@ -784,6 +784,7 @@ enable_lto\n enable_linker_plugin_configure_flags\n enable_linker_plugin_flags\n enable_stage1_languages\n+enable_objc_gc\n with_build_sysroot\n with_debug_prefix_map\n with_build_config\n@@ -1499,6 +1500,8 @@ Optional Features:\n   --enable-stage1-languages[=all]\n                           choose additional languages to build during stage1.\n                           Mostly useful for compiler development\n+  --enable-objc-gc        enable use of Boehm's garbage collector with the GNU\n+                          Objective-C runtime\n   --enable-vtable-verify  Enable vtable verification feature\n   --enable-serial-[{host,target,build}-]configure\n                           force sequential configuration of sub-packages for\n@@ -2748,6 +2751,7 @@ target_libraries=\"target-libgcc \\\n \t\ttarget-libssp \\\n \t\ttarget-libquadmath \\\n \t\ttarget-libgfortran \\\n+\t\ttarget-boehm-gc \\\n \t\ttarget-libffi \\\n \t\ttarget-libobjc \\\n \t\ttarget-libada \\\n@@ -6389,6 +6393,28 @@ for dir in $configdirs $build_configdirs $target_configdirs ; do\n   fi\n done\n \n+# Check for Boehm's garbage collector\n+# Check whether --enable-objc-gc was given.\n+if test \"${enable_objc_gc+set}\" = set; then :\n+  enableval=$enable_objc_gc; case ,${enable_languages},:${enable_objc_gc}:${noconfigdirs} in\n+  *,objc,*:*:yes:*target-boehm-gc*)\n+    as_fn_error \"Boehm's garbage collector was requested yet not supported in this configuration\" \"$LINENO\" 5\n+    ;;\n+esac\n+fi\n+\n+\n+# Make sure we only build Boehm's garbage collector if required.\n+case ,${enable_languages},:${enable_objc_gc} in\n+  *,objc,*:yes)\n+    # Keep target-boehm-gc if requested for Objective-C.\n+    ;;\n+  *)\n+    # Otherwise remove target-boehm-gc.\n+    noconfigdirs=\"$noconfigdirs target-boehm-gc\"\n+    ;;\n+esac\n+\n # Disable libcilkrts, libitm, libsanitizer, libvtv, liboffloadmic if we're not building C++\n case ,${enable_languages}, in\n   *,c++,*)"}, {"sha": "aec703a19f08c3f474dcfd052804bf91b24bd993", "filename": "configure.ac", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c40f3e43aea07477d025eedc818e1bd10385d0/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c40f3e43aea07477d025eedc818e1bd10385d0/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=43c40f3e43aea07477d025eedc818e1bd10385d0", "patch": "@@ -161,6 +161,7 @@ target_libraries=\"target-libgcc \\\n \t\ttarget-libssp \\\n \t\ttarget-libquadmath \\\n \t\ttarget-libgfortran \\\n+\t\ttarget-boehm-gc \\\n \t\ttarget-libffi \\\n \t\ttarget-libobjc \\\n \t\ttarget-libada \\\n@@ -2054,6 +2055,28 @@ for dir in $configdirs $build_configdirs $target_configdirs ; do\n   fi\n done\n \n+# Check for Boehm's garbage collector\n+AC_ARG_ENABLE(objc-gc,\n+[AS_HELP_STRING([--enable-objc-gc],\n+\t\t[enable use of Boehm's garbage collector with the\n+\t\t GNU Objective-C runtime])],\n+[case ,${enable_languages},:${enable_objc_gc}:${noconfigdirs} in\n+  *,objc,*:*:yes:*target-boehm-gc*)\n+    AC_MSG_ERROR([Boehm's garbage collector was requested yet not supported in this configuration])\n+    ;;\n+esac])\n+\n+# Make sure we only build Boehm's garbage collector if required.\n+case ,${enable_languages},:${enable_objc_gc} in\n+  *,objc,*:yes)\n+    # Keep target-boehm-gc if requested for Objective-C.\n+    ;;\n+  *)\n+    # Otherwise remove target-boehm-gc.\n+    noconfigdirs=\"$noconfigdirs target-boehm-gc\"\n+    ;;\n+esac\n+\n # Disable libcilkrts, libitm, libsanitizer, libvtv, liboffloadmic if we're not building C++\n case ,${enable_languages}, in\n   *,c++,*)"}]}