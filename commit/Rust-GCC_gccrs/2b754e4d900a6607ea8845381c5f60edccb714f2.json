{"sha": "2b754e4d900a6607ea8845381c5f60edccb714f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI3NTRlNGQ5MDBhNjYwN2VhODg0NTM4MWM1ZjYwZWRjY2I3MTRmMg==", "commit": {"author": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2017-02-20T18:19:54Z"}, "committer": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2017-02-20T18:19:54Z"}, "message": "Makefile.in (BUILD_SYSTEM_HEADER_DIR): New make variabe.\n\n2017-02-20  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        * Makefile.in (BUILD_SYSTEM_HEADER_DIR): New make variabe.\n        (LIMITS_H_TEST, if_multiarch, stmp-fixinc): Use BUILD_SYSTEM_HEADER_DIR\n        instead of SYSTEM_HEADER_DIR.\n\nFrom-SVN: r245613", "tree": {"sha": "21cc6573cceed302004f020baf8404774bc33735", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21cc6573cceed302004f020baf8404774bc33735"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b754e4d900a6607ea8845381c5f60edccb714f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b754e4d900a6607ea8845381c5f60edccb714f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b754e4d900a6607ea8845381c5f60edccb714f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b754e4d900a6607ea8845381c5f60edccb714f2/comments", "author": null, "committer": null, "parents": [{"sha": "0e53a276bc87edde32d88697d27eb38ffb8805ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e53a276bc87edde32d88697d27eb38ffb8805ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e53a276bc87edde32d88697d27eb38ffb8805ad"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "f710536d5d337aa0ad27532195e616f6fc4601b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b754e4d900a6607ea8845381c5f60edccb714f2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b754e4d900a6607ea8845381c5f60edccb714f2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2b754e4d900a6607ea8845381c5f60edccb714f2", "patch": "@@ -1,4 +1,10 @@\n-2017-02-18  Gerald Pfeifer  <gerald@pfeifer.com>\n+2017-02-20  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* Makefile.in (BUILD_SYSTEM_HEADER_DIR): New make variabe.\n+\t(LIMITS_H_TEST, if_multiarch, stmp-fixinc): Use BUILD_SYSTEM_HEADER_DIR\n+\tinstead of SYSTEM_HEADER_DIR.\n+\n+2017-02-20  Gerald Pfeifer  <gerald@pfeifer.com>\n \t    Martin Li\u0161ka  <mliska@suse.cz>\n \n \t* doc/invoke.texi (use-after-scope-direct-emission-threshold):"}, {"sha": "8648d681fece269c02ecce58516d3f160bfa5ff1", "filename": "gcc/Makefile.in", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b754e4d900a6607ea8845381c5f60edccb714f2/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b754e4d900a6607ea8845381c5f60edccb714f2/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=2b754e4d900a6607ea8845381c5f60edccb714f2", "patch": "@@ -517,11 +517,18 @@ CROSS_SYSTEM_HEADER_DIR = @CROSS_SYSTEM_HEADER_DIR@\n # macro is also used in a double-quoted context.\n SYSTEM_HEADER_DIR = `echo @SYSTEM_HEADER_DIR@ | sed -e :a -e 's,[^/]*/\\.\\.\\/,,' -e ta`\n \n+# Path to the system headers on the build machine\n+ifeq ($(build),$(host))\n+BUILD_SYSTEM_HEADER_DIR = $(SYSTEM_HEADER_DIR)\n+else\n+BUILD_SYSTEM_HEADER_DIR = `echo $(CROSS_SYSTEM_HEADER_DIR) | sed -e :a -e 's,[^/]*/\\.\\.\\/,,' -e ta`\n+endif\n+\n # Control whether to run fixincludes.\n STMP_FIXINC = @STMP_FIXINC@\n \n # Test to see whether <limits.h> exists in the system header files.\n-LIMITS_H_TEST = [ -f $(SYSTEM_HEADER_DIR)/limits.h ]\n+LIMITS_H_TEST = [ -f $(BUILD_SYSTEM_HEADER_DIR)/limits.h ]\n \n # Directory for prefix to system directories, for\n # each of $(system_prefix)/usr/include, $(system_prefix)/usr/lib, etc.\n@@ -572,7 +579,7 @@ ifeq ($(enable_multiarch),yes)\n else\n   ifeq ($(enable_multiarch),auto)\n     # SYSTEM_HEADER_DIR is makefile syntax, cannot be evaluated in configure.ac\n-    if_multiarch = $(if $(wildcard $(shell echo $(SYSTEM_HEADER_DIR))/../../usr/lib/*/crti.o),$(1))\n+    if_multiarch = $(if $(wildcard $(shell echo $(BUILD_SYSTEM_HEADER_DIR))/../../usr/lib/*/crti.o),$(1))\n   else\n     if_multiarch =\n   endif\n@@ -2990,11 +2997,11 @@ stmp-fixinc: gsyslimits.h macro_list fixinc_list \\\n \t    sysroot_headers_suffix=`echo $${ml} | sed -e 's/;.*$$//'`; \\\n \t    multi_dir=`echo $${ml} | sed -e 's/^[^;]*;//'`; \\\n \t    fix_dir=include-fixed$${multi_dir}; \\\n-\t    if ! $(inhibit_libc) && test ! -d ${SYSTEM_HEADER_DIR}; then \\\n+\t    if ! $(inhibit_libc) && test ! -d ${BUILD_SYSTEM_HEADER_DIR}; then \\\n \t      echo The directory that should contain system headers does not exist: >&2 ; \\\n-\t      echo \"  ${SYSTEM_HEADER_DIR}\" >&2 ; \\\n+\t      echo \"  ${BUILD_SYSTEM_HEADER_DIR}\" >&2 ; \\\n \t      tooldir_sysinc=`echo \"${gcc_tooldir}/sys-include\" | sed -e :a -e \"s,[^/]*/\\.\\.\\/,,\" -e ta`; \\\n-\t      if test \"x${SYSTEM_HEADER_DIR}\" = \"x$${tooldir_sysinc}\"; \\\n+\t      if test \"x${BUILD_SYSTEM_HEADER_DIR}\" = \"x$${tooldir_sysinc}\"; \\\n \t      then sleep 1; else exit 1; fi; \\\n \t    fi; \\\n \t    $(mkinstalldirs) $${fix_dir}; \\\n@@ -3005,7 +3012,7 @@ stmp-fixinc: gsyslimits.h macro_list fixinc_list \\\n \t      export TARGET_MACHINE srcdir SHELL MACRO_LIST && \\\n \t      cd $(build_objdir)/fixincludes && \\\n \t      $(SHELL) ./fixinc.sh \"$${gcc_dir}/$${fix_dir}\" \\\n-\t        $(SYSTEM_HEADER_DIR) $(OTHER_FIXINCLUDES_DIRS) ); \\\n+\t        $(BUILD_SYSTEM_HEADER_DIR) $(OTHER_FIXINCLUDES_DIRS) ); \\\n \t    rm -f $${fix_dir}/syslimits.h; \\\n \t    if [ -f $${fix_dir}/limits.h ]; then \\\n \t      mv $${fix_dir}/limits.h $${fix_dir}/syslimits.h; \\"}]}