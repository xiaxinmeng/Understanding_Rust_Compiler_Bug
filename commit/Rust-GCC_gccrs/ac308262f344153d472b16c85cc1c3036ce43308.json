{"sha": "ac308262f344153d472b16c85cc1c3036ce43308", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWMzMDgyNjJmMzQ0MTUzZDQ3MmIxNmM4NWNjMWMzMDM2Y2U0MzMwOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-10-14T20:13:49Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-10-14T20:13:49Z"}, "message": "PR c++/91930 - ICE with constrained inherited default ctor.\n\nThe testcase was crashing because lazily_declare_fn was failing to add a\ndefaulted constructor, because the implicit declaration was less constrained\nthan the inherited default constructor.  But when we have an inherited\nconstructor, we shouldn't be trying to declare a default constructor in the\nfirst place, because it counts as \"a user-declared constructor\".  With that\nfixed I needed to adjust a couple of inherited constructor testcases that\npreviously had been diagnosing the default constructor as deleted rather\nthan not declared.\n\n\t* name-lookup.c (do_class_using_decl): Set TYPE_HAS_USER_CONSTRUCTOR\n\tfor inherited constructor.\n\nFrom-SVN: r276968", "tree": {"sha": "21516f4b635028cee88b7647e3697a39de8158b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21516f4b635028cee88b7647e3697a39de8158b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac308262f344153d472b16c85cc1c3036ce43308", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac308262f344153d472b16c85cc1c3036ce43308", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac308262f344153d472b16c85cc1c3036ce43308", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac308262f344153d472b16c85cc1c3036ce43308/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "10aabe339a9eec4e81fbc56cacad7b532b33d20c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10aabe339a9eec4e81fbc56cacad7b532b33d20c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10aabe339a9eec4e81fbc56cacad7b532b33d20c"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "7245b3ed270dc2bf36a0c8ed7fb459151431a4ba", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac308262f344153d472b16c85cc1c3036ce43308/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac308262f344153d472b16c85cc1c3036ce43308/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ac308262f344153d472b16c85cc1c3036ce43308", "patch": "@@ -1,3 +1,9 @@\n+2019-10-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/91930 - ICE with constrained inherited default ctor.\n+\t* name-lookup.c (do_class_using_decl): Set TYPE_HAS_USER_CONSTRUCTOR\n+\tfor inherited constructor.\n+\n 2019-10-14  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* decl.c (check_tag_decl): Use DECL_SOURCE_LOCATION."}, {"sha": "9352ce5da0b00f1a190b5cf7b8117247d2d0944b", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac308262f344153d472b16c85cc1c3036ce43308/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac308262f344153d472b16c85cc1c3036ce43308/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=ac308262f344153d472b16c85cc1c3036ce43308", "patch": "@@ -4613,6 +4613,7 @@ do_class_using_decl (tree scope, tree name)\n       maybe_warn_cpp0x (CPP0X_INHERITING_CTORS);\n       name = ctor_identifier;\n       CLASSTYPE_NON_AGGREGATE (current_class_type) = true;\n+      TYPE_HAS_USER_CONSTRUCTOR (current_class_type) = true;\n     }\n \n   /* Cannot introduce a constructor name.  */"}, {"sha": "673b6380504067d68ff4484b8b2b9a387a2fe6c1", "filename": "gcc/testsuite/g++.dg/cpp0x/inh-ctor5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac308262f344153d472b16c85cc1c3036ce43308/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finh-ctor5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac308262f344153d472b16c85cc1c3036ce43308/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finh-ctor5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finh-ctor5.C?ref=ac308262f344153d472b16c85cc1c3036ce43308", "patch": "@@ -6,13 +6,13 @@ struct B1 {\n struct B2 {\n   B2(double) { }\n };\n-struct D1 : B1 {    // { dg-error \"no match\" }\n+struct D1 : B1 {\n   using B1::B1;\t    // implicitly declares D1(int)\n   int x;\n };\n void test() {\n   D1 d(6);\t    // OK: d.x is not initialized\n-  D1 e;\t\t    // { dg-error \"deleted\" } D1 has no default constructor\n+  D1 e;\t\t    // { dg-error \"no match\" } D1 has no default constructor\n }\n struct D2 : B2 {\n   using B2::B2;\t    // { dg-error \"B1::B1\" }"}, {"sha": "98336a158c13657ba2c0240d9405e313f9be8454", "filename": "gcc/testsuite/g++.dg/cpp1z/inh-ctor22.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac308262f344153d472b16c85cc1c3036ce43308/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finh-ctor22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac308262f344153d472b16c85cc1c3036ce43308/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finh-ctor22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finh-ctor22.C?ref=ac308262f344153d472b16c85cc1c3036ce43308", "patch": "@@ -12,7 +12,7 @@ struct B2 {\n \n int get();\n \n-struct D1 : B1 {\t\t// { dg-message \"B1::B1\" }\n+struct D1 : B1 {\n   using B1::B1;  // inherits B1(int, ...)\n   int x;\n   int y = get();\n@@ -22,7 +22,7 @@ void test() {\n   D1 d(2, 3, 4); // OK: B1 is initialized by calling B1(2, 3, 4),\n   // then d.x is default-initialized (no initialization is performed),\n   // then d.y is initialized by calling get()\n-  D1 e;          // { dg-error \"\" } D1 has a deleted default constructor\n+  D1 e;          // { dg-error \"\" } D1 has no default constructor\n }\n \n struct D2 : B2 {"}, {"sha": "c92d6ac774cd6482fec6f478e00b6e10445e34a2", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-inherit-ctor6.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac308262f344153d472b16c85cc1c3036ce43308/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-inherit-ctor6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac308262f344153d472b16c85cc1c3036ce43308/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-inherit-ctor6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-inherit-ctor6.C?ref=ac308262f344153d472b16c85cc1c3036ce43308", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/91930\n+// { dg-do compile { target c++2a } }\n+\n+template <typename T> struct basic_mixin {\n+  basic_mixin() requires true;\n+};\n+\n+struct mixin : basic_mixin<int> {\n+  using basic_mixin<int>::basic_mixin;\n+};\n+\n+mixin m;"}]}