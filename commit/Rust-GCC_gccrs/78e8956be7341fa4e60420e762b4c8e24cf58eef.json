{"sha": "78e8956be7341fa4e60420e762b4c8e24cf58eef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhlODk1NmJlNzM0MWZhNGU2MDQyMGU3NjJiNGM4ZTI0Y2Y1OGVlZg==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-04-01T19:12:31Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-04-01T19:12:31Z"}, "message": "i386.md (smaxmin): New.\n\n2008-04-01  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/i386.md (smaxmin): New.\n\t(umaxmin): Likewise.\n\t(maxminiprefix): Likewise.\n\t(maxminfprefix): Likewise.\n\t(<code><mode>3): Likewise.\n\t(smin<mode>3): Removed.\n\t(smax<mode>3): Likewise.\n\n\t* config/i386/mmx.md (mmx_<code>v2sf3): New.\n\t(mmx_<code>v4hi3): Likewise.\n\t(mmx_<code>v8qi3): Likewise.\n\t(mmx_smaxv2sf3): Removed.\n\t(mmx_sminv2sf3): Likewise.\n\t(mmx_umaxv8qi3): Likewise.\n\t(mmx_smaxv4hi3): Likewise.\n\t(mmx_uminv8qi3): Likewise.\n\t(mmx_sminv4hi3): Likewise.\n\n\t* config/i386/sse.md (<addsub><mode>3): New.\n\t(*<addsub><mode>3): Likewise.\n\t(<sse>_vm<addsub><mode>3): Likewise.\n\t(<maxmin><mode>3): Likewise.\n\t(*<maxmin><mode>3_finite): Likewise.\n\t(*<maxmin><mode>3): Likewise.\n\t(<sse>_vm<maxmin><mode>3): Likewise.\n\t(sse3_h<addsub>v4sf3): Likewise.\n\t(sse3_h<addsub>v2df3): Likewise.\n\t(<maxmin>v16qi3): Likewise.\n\t(*<maxmin>v16qi3): Likewise.\n\t(<maxmin>v8hi3): Likewise.\n\t(*<maxmin>v8hi3): Likewise.\n\t(*sse4_1_<maxmin><mode>3): Likewise.\n\t(*sse4_1_<maxmin><mode>3): Likewise.\n\t(add<mode>3): Removed.\n\t(*add<mode>3): Likewise.\n\t(<sse>_vmadd<mode>3): Likewise.\n\t(sub<mode>3): Likewise.\n\t(*sub<mode>3): Likewise.\n\t(<sse>_vmsub<mode>3): Likewise.\n\t(smin<mode>3): Likewise.\n\t(*smin<mode>3_finite): Likewise.\n\t(*smin<mode>3): Likewise.\n\t(<sse>_vmsmin<mode>3): Likewise.\n\t(smax<mode>3): Likewise.\n\t(*smax<mode>3_finite): Likewise.\n\t(*smax<mode>3): Likewise.\n\t(<sse>_vmsmax<mode>3): Likewise.\n\t(sse3_haddv4sf3): Likewise.\n\t(sse3_haddv2df3): Likewise.\n\t(sse3_hsubv4sf3): Likewise.\n\t(sse3_hsubv2df3): Likewise.\n\t(umaxv16qi3): Likewise.\n\t(*umaxv16qi3): Likewise.\n\t(smaxv8hi3): Likewise.\n\t(*smaxv8hi3): Likewise.\n\t(*sse4_1_smax<mode>3): Likewise.\n\t(*sse4_1_umax<mode>3): Likewise.\n\t(uminv16qi3): Likewise.\n\t(*uminv16qi3): Likewise.\n\t(sminv8hi3): Likewise.\n\t(*sminv8hi3): Likewise.\n\t(*sse4_1_smin<mode>3): Likewise.\n\t(*sse4_1_umin<mode>3): Likewise.\n\nFrom-SVN: r133797", "tree": {"sha": "b33942c979b3badb171cbb60307444ac83657f24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b33942c979b3badb171cbb60307444ac83657f24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78e8956be7341fa4e60420e762b4c8e24cf58eef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78e8956be7341fa4e60420e762b4c8e24cf58eef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78e8956be7341fa4e60420e762b4c8e24cf58eef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78e8956be7341fa4e60420e762b4c8e24cf58eef/comments", "author": null, "committer": null, "parents": [{"sha": "220f1c2948aa9c6f9bdbec9706b63fb90ce9bce3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/220f1c2948aa9c6f9bdbec9706b63fb90ce9bce3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/220f1c2948aa9c6f9bdbec9706b63fb90ce9bce3"}], "stats": {"total": 454, "additions": 160, "deletions": 294}, "files": [{"sha": "a2118e950836cffe616953f0361a6e8f209b1b57", "filename": "gcc/ChangeLog", "status": "modified", "additions": 67, "deletions": 1, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78e8956be7341fa4e60420e762b4c8e24cf58eef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78e8956be7341fa4e60420e762b4c8e24cf58eef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78e8956be7341fa4e60420e762b4c8e24cf58eef", "patch": "@@ -1,7 +1,73 @@\n+2008-04-01  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/i386.md (smaxmin): New.\n+\t(umaxmin): Likewise.\n+\t(maxminiprefix): Likewise.\n+\t(maxminfprefix): Likewise.\n+\t(<code><mode>3): Likewise.\n+\t(smin<mode>3): Removed.\n+\t(smax<mode>3): Likewise.\n+\n+\t* config/i386/mmx.md (mmx_<code>v2sf3): New.\n+\t(mmx_<code>v4hi3): Likewise.\n+\t(mmx_<code>v8qi3): Likewise.\n+\t(mmx_smaxv2sf3): Removed.\n+\t(mmx_sminv2sf3): Likewise.\n+\t(mmx_umaxv8qi3): Likewise.\n+\t(mmx_smaxv4hi3): Likewise.\n+\t(mmx_uminv8qi3): Likewise.\n+\t(mmx_sminv4hi3): Likewise.\n+\n+\t* config/i386/sse.md (<addsub><mode>3): New.\n+\t(*<addsub><mode>3): Likewise.\n+\t(<sse>_vm<addsub><mode>3): Likewise.\n+\t(<maxmin><mode>3): Likewise.\n+\t(*<maxmin><mode>3_finite): Likewise.\n+\t(*<maxmin><mode>3): Likewise.\n+\t(<sse>_vm<maxmin><mode>3): Likewise.\n+\t(sse3_h<addsub>v4sf3): Likewise.\n+\t(sse3_h<addsub>v2df3): Likewise.\n+\t(<maxmin>v16qi3): Likewise.\n+\t(*<maxmin>v16qi3): Likewise.\n+\t(<maxmin>v8hi3): Likewise.\n+\t(*<maxmin>v8hi3): Likewise.\n+\t(*sse4_1_<maxmin><mode>3): Likewise.\n+\t(*sse4_1_<maxmin><mode>3): Likewise.\n+\t(add<mode>3): Removed.\n+\t(*add<mode>3): Likewise.\n+\t(<sse>_vmadd<mode>3): Likewise.\n+\t(sub<mode>3): Likewise.\n+\t(*sub<mode>3): Likewise.\n+\t(<sse>_vmsub<mode>3): Likewise.\n+\t(smin<mode>3): Likewise.\n+\t(*smin<mode>3_finite): Likewise.\n+\t(*smin<mode>3): Likewise.\n+\t(<sse>_vmsmin<mode>3): Likewise.\n+\t(smax<mode>3): Likewise.\n+\t(*smax<mode>3_finite): Likewise.\n+\t(*smax<mode>3): Likewise.\n+\t(<sse>_vmsmax<mode>3): Likewise.\n+\t(sse3_haddv4sf3): Likewise.\n+\t(sse3_haddv2df3): Likewise.\n+\t(sse3_hsubv4sf3): Likewise.\n+\t(sse3_hsubv2df3): Likewise.\n+\t(umaxv16qi3): Likewise.\n+\t(*umaxv16qi3): Likewise.\n+\t(smaxv8hi3): Likewise.\n+\t(*smaxv8hi3): Likewise.\n+\t(*sse4_1_smax<mode>3): Likewise.\n+\t(*sse4_1_umax<mode>3): Likewise.\n+\t(uminv16qi3): Likewise.\n+\t(*uminv16qi3): Likewise.\n+\t(sminv8hi3): Likewise.\n+\t(*sminv8hi3): Likewise.\n+\t(*sse4_1_smin<mode>3): Likewise.\n+\t(*sse4_1_umin<mode>3): Likewise.\n+\n 2008-04-01  Rafael Espindola  <espindola@google.com>\n \n \t* tree-cfg.c (verify_expr): remove in_phi.\n-        (verify_stmt): Don't call walk_tree with verify_expr. Use\n+\t(verify_stmt): Don't call walk_tree with verify_expr. Use\n \tis_gimple_min_invariant instead of is_gimple_val.\n \n 2008-04-01  Joseph Myers  <joseph@codesourcery.com>"}, {"sha": "8ccb0b2b9194bc49e6460a259524e0b056451ff4", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78e8956be7341fa4e60420e762b4c8e24cf58eef/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78e8956be7341fa4e60420e762b4c8e24cf58eef/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=78e8956be7341fa4e60420e762b4c8e24cf58eef", "patch": "@@ -530,6 +530,16 @@\n ;; Mark commutative operators as such in constraints.\n (define_code_attr comm [(plus \"%\") (minus \"\")])\n \n+;; Mapping of signed max and min\n+(define_code_iterator smaxmin [smax smin])\n+\n+;; Mapping of unsigned max and min\n+(define_code_iterator umaxmin [umax umin])\n+\n+;; Base name for integer and FP insn mnemonic\n+(define_code_attr maxminiprefix [(smax \"maxs\") (smin \"mins\") (umax \"maxu\") (umin \"minu\")])\n+(define_code_attr maxminfprefix [(smax \"max\") (smin \"min\")])\n+\n ;; All single word integer modes.\n (define_mode_iterator SWI [QI HI SI (DI \"TARGET_64BIT\")])\n \n@@ -19505,23 +19515,13 @@\n ;; Since both the tree-level MAX_EXPR and the rtl-level SMAX operator\n ;; are undefined in this condition, we're certain this is correct.\n \n-(define_insn \"smin<mode>3\"\n-  [(set (match_operand:MODEF 0 \"register_operand\" \"=x\")\n-\t(smin:MODEF\n-\t  (match_operand:MODEF 1 \"nonimmediate_operand\" \"%0\")\n-\t  (match_operand:MODEF 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\"\n-  \"mins<ssemodefsuffix>\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseadd\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_insn \"smax<mode>3\"\n+(define_insn \"<code><mode>3\"\n   [(set (match_operand:MODEF 0 \"register_operand\" \"=x\")\n-\t(smax:MODEF\n+\t(smaxmin:MODEF\n \t  (match_operand:MODEF 1 \"nonimmediate_operand\" \"%0\")\n \t  (match_operand:MODEF 2 \"nonimmediate_operand\" \"xm\")))]\n   \"SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\"\n-  \"maxs<ssemodefsuffix>\\t{%2, %0|%0, %2}\"\n+  \"<maxminfprefix>s<ssemodefsuffix>\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseadd\")\n    (set_attr \"mode\" \"<MODE>\")])\n "}, {"sha": "63e9025b4e32d3d34df11ab049c0df0d4b017eb0", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 15, "deletions": 41, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78e8956be7341fa4e60420e762b4c8e24cf58eef/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78e8956be7341fa4e60420e762b4c8e24cf58eef/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=78e8956be7341fa4e60420e762b4c8e24cf58eef", "patch": "@@ -248,21 +248,13 @@\n   [(set_attr \"type\" \"mmxmul\")\n    (set_attr \"mode\" \"V2SF\")])\n \n-(define_insn \"mmx_smaxv2sf3\"\n+(define_insn \"mmx_<code>v2sf3\"\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=y\")\n-        (smax:V2SF (match_operand:V2SF 1 \"nonimmediate_operand\" \"%0\")\n-                   (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\")))]\n+        (smaxmin:V2SF\n+\t  (match_operand:V2SF 1 \"nonimmediate_operand\" \"%0\")\n+\t  (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\")))]\n   \"TARGET_3DNOW && ix86_binary_operator_ok (SMAX, V2SFmode, operands)\"\n-  \"pfmax\\\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"mmxadd\")\n-   (set_attr \"mode\" \"V2SF\")])\n-\n-(define_insn \"mmx_sminv2sf3\"\n-  [(set (match_operand:V2SF 0 \"register_operand\" \"=y\")\n-        (smin:V2SF (match_operand:V2SF 1 \"nonimmediate_operand\" \"%0\")\n-                   (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\")))]\n-  \"TARGET_3DNOW && ix86_binary_operator_ok (SMIN, V2SFmode, operands)\"\n-  \"pfmin\\\\t{%2, %0|%0, %2}\"\n+  \"pf<maxminfprefix>\\\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxadd\")\n    (set_attr \"mode\" \"V2SF\")])\n \n@@ -715,43 +707,25 @@\n   [(set_attr \"type\" \"mmxmul\")\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"mmx_umaxv8qi3\"\n-  [(set (match_operand:V8QI 0 \"register_operand\" \"=y\")\n-        (umax:V8QI (match_operand:V8QI 1 \"nonimmediate_operand\" \"%0\")\n-\t\t   (match_operand:V8QI 2 \"nonimmediate_operand\" \"ym\")))]\n-  \"(TARGET_SSE || TARGET_3DNOW_A)\n-   && ix86_binary_operator_ok (UMAX, V8QImode, operands)\"\n-  \"pmaxub\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"mmxadd\")\n-   (set_attr \"mode\" \"DI\")])\n-\n-(define_insn \"mmx_smaxv4hi3\"\n+(define_insn \"mmx_<code>v4hi3\"\n   [(set (match_operand:V4HI 0 \"register_operand\" \"=y\")\n-        (smax:V4HI (match_operand:V4HI 1 \"nonimmediate_operand\" \"%0\")\n-\t\t   (match_operand:V4HI 2 \"nonimmediate_operand\" \"ym\")))]\n+        (smaxmin:V4HI\n+\t  (match_operand:V4HI 1 \"nonimmediate_operand\" \"%0\")\n+\t  (match_operand:V4HI 2 \"nonimmediate_operand\" \"ym\")))]\n   \"(TARGET_SSE || TARGET_3DNOW_A)\n    && ix86_binary_operator_ok (SMAX, V4HImode, operands)\"\n-  \"pmaxsw\\t{%2, %0|%0, %2}\"\n+  \"p<maxminiprefix>w\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxadd\")\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"mmx_uminv8qi3\"\n+(define_insn \"mmx_<code>v8qi3\"\n   [(set (match_operand:V8QI 0 \"register_operand\" \"=y\")\n-        (umin:V8QI (match_operand:V8QI 1 \"nonimmediate_operand\" \"%0\")\n-\t\t   (match_operand:V8QI 2 \"nonimmediate_operand\" \"ym\")))]\n+        (umaxmin:V8QI\n+\t  (match_operand:V8QI 1 \"nonimmediate_operand\" \"%0\")\n+\t  (match_operand:V8QI 2 \"nonimmediate_operand\" \"ym\")))]\n   \"(TARGET_SSE || TARGET_3DNOW_A)\n    && ix86_binary_operator_ok (UMIN, V8QImode, operands)\"\n-  \"pminub\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"mmxadd\")\n-   (set_attr \"mode\" \"DI\")])\n-\n-(define_insn \"mmx_sminv4hi3\"\n-  [(set (match_operand:V4HI 0 \"register_operand\" \"=y\")\n-        (smin:V4HI (match_operand:V4HI 1 \"nonimmediate_operand\" \"%0\")\n-\t\t   (match_operand:V4HI 2 \"nonimmediate_operand\" \"ym\")))]\n-  \"(TARGET_SSE || TARGET_3DNOW_A)\n-   && ix86_binary_operator_ok (SMIN, V4HImode, operands)\"\n-  \"pminsw\\t{%2, %0|%0, %2}\"\n+  \"p<maxminiprefix>b\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxadd\")\n    (set_attr \"mode\" \"DI\")])\n "}, {"sha": "e1f316b216d53b3737a1a30decc913b4b45ec458", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 65, "deletions": 239, "changes": 304, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78e8956be7341fa4e60420e762b4c8e24cf58eef/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78e8956be7341fa4e60420e762b4c8e24cf58eef/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=78e8956be7341fa4e60420e762b4c8e24cf58eef", "patch": "@@ -358,67 +358,36 @@\n   \"SSE_VEC_FLOAT_MODE_P (<MODE>mode)\"\n   \"ix86_expand_fp_absneg_operator (ABS, <MODE>mode, operands); DONE;\")\n \n-(define_expand \"add<mode>3\"\n+(define_expand \"<addsub><mode>3\"\n   [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"\")\n-\t(plus:SSEMODEF2P\n+\t(plusminus:SSEMODEF2P\n \t  (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"\")\n \t  (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"\")))]\n   \"SSE_VEC_FLOAT_MODE_P (<MODE>mode)\"\n-  \"ix86_fixup_binary_operands_no_copy (PLUS, <MODE>mode, operands);\")\n+  \"ix86_fixup_binary_operands_no_copy (<CODE>, <MODE>mode, operands);\")\n \n-(define_insn \"*add<mode>3\"\n+(define_insn \"*<addsub><mode>3\"\n   [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n-\t(plus:SSEMODEF2P\n-\t  (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"%0\")\n+\t(plusminus:SSEMODEF2P\n+\t  (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"<comm>0\")\n \t  (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"xm\")))]\n   \"SSE_VEC_FLOAT_MODE_P (<MODE>mode)\n-   && ix86_binary_operator_ok (PLUS, <MODE>mode, operands)\"\n-  \"addp<ssemodesuffixf2c>\\t{%2, %0|%0, %2}\"\n+   && ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)\"\n+  \"<addsub>p<ssemodesuffixf2c>\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseadd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"<sse>_vmadd<mode>3\"\n+(define_insn \"<sse>_vm<addsub><mode>3\"\n   [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n \t(vec_merge:SSEMODEF2P\n-\t  (plus:SSEMODEF2P\n+\t  (plusminus:SSEMODEF2P\n \t    (match_operand:SSEMODEF2P 1 \"register_operand\" \"0\")\n \t    (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"xm\"))\n \t  (match_dup 1)\n \t  (const_int 1)))]\n   \"SSE_VEC_FLOAT_MODE_P (<MODE>mode)\n-   && ix86_binary_operator_ok (PLUS, V4SFmode, operands)\"\n-  \"adds<ssemodesuffixf2c>\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseadd\")\n-   (set_attr \"mode\" \"<ssescalarmode>\")])\n-\n-(define_expand \"sub<mode>3\"\n-  [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"\")\n-\t(minus:SSEMODEF2P\n-\t  (match_operand:SSEMODEF2P 1 \"register_operand\" \"\")\n-\t  (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"\")))]\n-  \"SSE_VEC_FLOAT_MODE_P (<MODE>mode)\"\n-  \"ix86_fixup_binary_operands_no_copy (MINUS, <MODE>mode, operands);\")\n-\n-(define_insn \"*sub<mode>3\"\n-  [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n-\t(minus:SSEMODEF2P\n-\t  (match_operand:SSEMODEF2P 1 \"register_operand\" \"0\")\n-\t  (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"SSE_VEC_FLOAT_MODE_P (<MODE>mode)\"\n-  \"subp<ssemodesuffixf2c>\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseadd\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_insn \"<sse>_vmsub<mode>3\"\n-  [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n-\t(vec_merge:SSEMODEF2P\n-\t  (minus:SSEMODEF2P\n-\t    (match_operand:SSEMODEF2P 1 \"register_operand\" \"0\")\n-\t    (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"xm\"))\n-\t  (match_dup 1)\n-\t  (const_int 1)))]\n-  \"SSE_VEC_FLOAT_MODE_P (<MODE>mode)\"\n-  \"subs<ssemodesuffixf2c>\\t{%2, %0|%0, %2}\"\n+   && ix86_binary_operator_ok (<CODE>, V4SFmode, operands)\"\n+  \"<addsub>s<ssemodesuffixf2c>\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseadd\")\n    (set_attr \"mode\" \"<ssescalarmode>\")])\n \n@@ -601,98 +570,52 @@\n ;; isn't really correct, as those rtl operators aren't defined when\n ;; applied to NaNs.  Hopefully the optimizers won't get too smart on us.\n \n-(define_expand \"smin<mode>3\"\n+(define_expand \"<code><mode>3\"\n   [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"\")\n-\t(smin:SSEMODEF2P\n+\t(smaxmin:SSEMODEF2P\n \t  (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"\")\n \t  (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"\")))]\n   \"SSE_VEC_FLOAT_MODE_P (<MODE>mode)\"\n {\n   if (!flag_finite_math_only)\n     operands[1] = force_reg (<MODE>mode, operands[1]);\n-  ix86_fixup_binary_operands_no_copy (SMIN, <MODE>mode, operands);\n+  ix86_fixup_binary_operands_no_copy (<CODE>, <MODE>mode, operands);\n })\n \n-(define_insn \"*smin<mode>3_finite\"\n+(define_insn \"*<code><mode>3_finite\"\n   [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n-\t(smin:SSEMODEF2P\n+\t(smaxmin:SSEMODEF2P\n \t  (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"%0\")\n \t  (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"xm\")))]\n   \"SSE_VEC_FLOAT_MODE_P (<MODE>mode) && flag_finite_math_only\n-   && ix86_binary_operator_ok (SMIN, <MODE>mode, operands)\"\n-  \"minp<ssemodesuffixf2c>\\t{%2, %0|%0, %2}\"\n+   && ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)\"\n+  \"<maxminfprefix>p<ssemodesuffixf2c>\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseadd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"*smin<mode>3\"\n+(define_insn \"*<code><mode>3\"\n   [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n-\t(smin:SSEMODEF2P\n+\t(smaxmin:SSEMODEF2P\n \t  (match_operand:SSEMODEF2P 1 \"register_operand\" \"0\")\n \t  (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"xm\")))]\n   \"SSE_VEC_FLOAT_MODE_P (<MODE>mode)\"\n-  \"minp<ssemodesuffixf2c>\\t{%2, %0|%0, %2}\"\n+  \"<maxminfprefix>p<ssemodesuffixf2c>\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseadd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"<sse>_vmsmin<mode>3\"\n+(define_insn \"<sse>_vm<code><mode>3\"\n   [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n \t(vec_merge:SSEMODEF2P\n-\t  (smin:SSEMODEF2P\n+\t  (smaxmin:SSEMODEF2P\n \t    (match_operand:SSEMODEF2P 1 \"register_operand\" \"0\")\n \t    (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"xm\"))\n \t (match_dup 1)\n \t (const_int 1)))]\n   \"SSE_VEC_FLOAT_MODE_P (<MODE>mode)\"\n-  \"mins<ssemodesuffixf2c>\\t{%2, %0|%0, %2}\"\n+  \"<maxminfprefix>s<ssemodesuffixf2c>\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sse\")\n    (set_attr \"mode\" \"<ssescalarmode>\")])\n \n-(define_expand \"smax<mode>3\"\n-  [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"\")\n-\t(smax:SSEMODEF2P\n-\t  (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"\")\n-\t  (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"\")))]\n-  \"SSE_VEC_FLOAT_MODE_P (<MODE>mode)\"\n-{\n-  if (!flag_finite_math_only)\n-    operands[1] = force_reg (<MODE>mode, operands[1]);\n-  ix86_fixup_binary_operands_no_copy (SMAX, <MODE>mode, operands);\n-})\n-\n-(define_insn \"*smax<mode>3_finite\"\n-  [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n-\t(smax:SSEMODEF2P\n-\t  (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"%0\")\n-\t  (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"SSE_VEC_FLOAT_MODE_P (<MODE>mode) && flag_finite_math_only\n-   && ix86_binary_operator_ok (SMAX, <MODE>mode, operands)\"\n-  \"maxp<ssemodesuffixf2c>\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseadd\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_insn \"*smax<mode>3\"\n-  [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n-\t(smax:SSEMODEF2P\n-\t  (match_operand:SSEMODEF2P 1 \"register_operand\" \"0\")\n-\t  (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"SSE_VEC_FLOAT_MODE_P (<MODE>mode)\"\n-  \"maxp<ssemodesuffixf2c>\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseadd\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_insn \"<sse>_vmsmax<mode>3\"\n-  [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n-\t(vec_merge:SSEMODEF2P\n-\t  (smax:SSEMODEF2P\n-\t    (match_operand:SSEMODEF2P 1 \"register_operand\" \"0\")\n-\t    (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"xm\"))\n-\t  (match_dup 1)\n-\t  (const_int 1)))]\n-  \"SSE_VEC_FLOAT_MODE_P (<MODE>mode)\"\n-  \"maxs<ssemodesuffixf2c>\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseadd\")\n-   (set_attr \"mode\" \"<ssescalarmode>\")])\n-\n ;; These versions of the min/max patterns implement exactly the operations\n ;;   min = (op1 < op2 ? op1 : op2)\n ;;   max = (!(op1 < op2) ? op1 : op2)\n@@ -748,93 +671,48 @@\n   [(set_attr \"type\" \"sseadd\")\n    (set_attr \"mode\" \"V2DF\")])\n \n-(define_insn \"sse3_haddv4sf3\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n-\t(vec_concat:V4SF\n-\t  (vec_concat:V2SF\n-\t    (plus:SF\n-\t      (vec_select:SF\n-\t\t(match_operand:V4SF 1 \"register_operand\" \"0\")\n-\t\t(parallel [(const_int 0)]))\n-\t      (vec_select:SF (match_dup 1) (parallel [(const_int 1)])))\n-\t    (plus:SF\n-\t      (vec_select:SF (match_dup 1) (parallel [(const_int 2)]))\n-\t      (vec_select:SF (match_dup 1) (parallel [(const_int 3)]))))\n-\t  (vec_concat:V2SF\n-\t    (plus:SF\n-\t      (vec_select:SF\n-\t\t(match_operand:V4SF 2 \"nonimmediate_operand\" \"xm\")\n-\t\t(parallel [(const_int 0)]))\n-\t      (vec_select:SF (match_dup 2) (parallel [(const_int 1)])))\n-\t    (plus:SF\n-\t      (vec_select:SF (match_dup 2) (parallel [(const_int 2)]))\n-\t      (vec_select:SF (match_dup 2) (parallel [(const_int 3)]))))))]\n-  \"TARGET_SSE3\"\n-  \"haddps\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseadd\")\n-   (set_attr \"prefix_rep\" \"1\")\n-   (set_attr \"mode\" \"V4SF\")])\n-\n-(define_insn \"sse3_haddv2df3\"\n-  [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n-\t(vec_concat:V2DF\n-\t  (plus:DF\n-\t    (vec_select:DF\n-\t      (match_operand:V2DF 1 \"register_operand\" \"0\")\n-\t      (parallel [(const_int 0)]))\n-\t    (vec_select:DF (match_dup 1) (parallel [(const_int 1)])))\n-\t  (plus:DF\n-\t    (vec_select:DF\n-\t      (match_operand:V2DF 2 \"nonimmediate_operand\" \"xm\")\n-\t      (parallel [(const_int 0)]))\n-\t    (vec_select:DF (match_dup 2) (parallel [(const_int 1)])))))]\n-  \"TARGET_SSE3\"\n-  \"haddpd\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseadd\")\n-   (set_attr \"mode\" \"V2DF\")])\n-\n-(define_insn \"sse3_hsubv4sf3\"\n+(define_insn \"sse3_h<addsub>v4sf3\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n \t(vec_concat:V4SF\n \t  (vec_concat:V2SF\n-\t    (minus:SF\n+\t    (plusminus:SF\n \t      (vec_select:SF\n \t\t(match_operand:V4SF 1 \"register_operand\" \"0\")\n \t\t(parallel [(const_int 0)]))\n \t      (vec_select:SF (match_dup 1) (parallel [(const_int 1)])))\n-\t    (minus:SF\n+\t    (plusminus:SF\n \t      (vec_select:SF (match_dup 1) (parallel [(const_int 2)]))\n \t      (vec_select:SF (match_dup 1) (parallel [(const_int 3)]))))\n \t  (vec_concat:V2SF\n-\t    (minus:SF\n+\t    (plusminus:SF\n \t      (vec_select:SF\n \t\t(match_operand:V4SF 2 \"nonimmediate_operand\" \"xm\")\n \t\t(parallel [(const_int 0)]))\n \t      (vec_select:SF (match_dup 2) (parallel [(const_int 1)])))\n-\t    (minus:SF\n+\t    (plusminus:SF\n \t      (vec_select:SF (match_dup 2) (parallel [(const_int 2)]))\n \t      (vec_select:SF (match_dup 2) (parallel [(const_int 3)]))))))]\n   \"TARGET_SSE3\"\n-  \"hsubps\\t{%2, %0|%0, %2}\"\n+  \"h<addsub>ps\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseadd\")\n    (set_attr \"prefix_rep\" \"1\")\n    (set_attr \"mode\" \"V4SF\")])\n \n-(define_insn \"sse3_hsubv2df3\"\n+(define_insn \"sse3_h<addsub>v2df3\"\n   [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n \t(vec_concat:V2DF\n-\t  (minus:DF\n+\t  (plusminus:DF\n \t    (vec_select:DF\n \t      (match_operand:V2DF 1 \"register_operand\" \"0\")\n \t      (parallel [(const_int 0)]))\n \t    (vec_select:DF (match_dup 1) (parallel [(const_int 1)])))\n-\t  (minus:DF\n+\t  (plusminus:DF\n \t    (vec_select:DF\n \t      (match_operand:V2DF 2 \"nonimmediate_operand\" \"xm\")\n \t      (parallel [(const_int 0)]))\n \t    (vec_select:DF (match_dup 2) (parallel [(const_int 1)])))))]\n   \"TARGET_SSE3\"\n-  \"hsubpd\\t{%2, %0|%0, %2}\"\n+  \"h<addsub>pd\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseadd\")\n    (set_attr \"mode\" \"V2DF\")])\n \n@@ -3660,36 +3538,40 @@\n   operands[1] = gen_lowpart (TImode, operands[1]);\n })\n \n-(define_expand \"umaxv16qi3\"\n+(define_expand \"<code>v16qi3\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"\")\n-\t(umax:V16QI (match_operand:V16QI 1 \"nonimmediate_operand\" \"\")\n-\t\t    (match_operand:V16QI 2 \"nonimmediate_operand\" \"\")))]\n+\t(umaxmin:V16QI\n+\t  (match_operand:V16QI 1 \"nonimmediate_operand\" \"\")\n+\t  (match_operand:V16QI 2 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_SSE2\"\n-  \"ix86_fixup_binary_operands_no_copy (UMAX, V16QImode, operands);\")\n+  \"ix86_fixup_binary_operands_no_copy (<CODE>, V16QImode, operands);\")\n \n-(define_insn \"*umaxv16qi3\"\n+(define_insn \"*<code>v16qi3\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=x\")\n-\t(umax:V16QI (match_operand:V16QI 1 \"nonimmediate_operand\" \"%0\")\n-\t\t    (match_operand:V16QI 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_SSE2 && ix86_binary_operator_ok (UMAX, V16QImode, operands)\"\n-  \"pmaxub\\t{%2, %0|%0, %2}\"\n+\t(umaxmin:V16QI\n+\t  (match_operand:V16QI 1 \"nonimmediate_operand\" \"%0\")\n+\t  (match_operand:V16QI 2 \"nonimmediate_operand\" \"xm\")))]\n+  \"TARGET_SSE2 && ix86_binary_operator_ok (<CODE>, V16QImode, operands)\"\n+  \"p<maxminiprefix>b\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseiadd\")\n    (set_attr \"prefix_data16\" \"1\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_expand \"smaxv8hi3\"\n+(define_expand \"<code>v8hi3\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"\")\n-\t(smax:V8HI (match_operand:V8HI 1 \"nonimmediate_operand\" \"\")\n-\t\t   (match_operand:V8HI 2 \"nonimmediate_operand\" \"\")))]\n+\t(smaxmin:V8HI\n+\t  (match_operand:V8HI 1 \"nonimmediate_operand\" \"\")\n+\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_SSE2\"\n-  \"ix86_fixup_binary_operands_no_copy (SMAX, V8HImode, operands);\")\n+  \"ix86_fixup_binary_operands_no_copy (<CODE>, V8HImode, operands);\")\n \n-(define_insn \"*smaxv8hi3\"\n+(define_insn \"*<code>v8hi3\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n-\t(smax:V8HI (match_operand:V8HI 1 \"nonimmediate_operand\" \"%0\")\n-\t\t   (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_SSE2 && ix86_binary_operator_ok (SMAX, V8HImode, operands)\"\n-  \"pmaxsw\\t{%2, %0|%0, %2}\"\n+\t(smaxmin:V8HI\n+\t  (match_operand:V8HI 1 \"nonimmediate_operand\" \"%0\")\n+\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\")))]\n+  \"TARGET_SSE2 && ix86_binary_operator_ok (<CODE>, V8HImode, operands)\"\n+  \"p<maxminiprefix>w\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseiadd\")\n    (set_attr \"prefix_data16\" \"1\")\n    (set_attr \"mode\" \"TI\")])\n@@ -3738,13 +3620,13 @@\n   }\n })\n \n-(define_insn \"*sse4_1_smax<mode>3\"\n+(define_insn \"*sse4_1_<code><mode>3\"\n   [(set (match_operand:SSEMODE14 0 \"register_operand\" \"=x\")\n-\t(smax:SSEMODE14\n+\t(smaxmin:SSEMODE14\n \t  (match_operand:SSEMODE14 1 \"nonimmediate_operand\" \"%0\")\n \t  (match_operand:SSEMODE14 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_SSE4_1 && ix86_binary_operator_ok (SMAX, <MODE>mode, operands)\"\n-  \"pmaxs<ssevecsize>\\t{%2, %0|%0, %2}\"\n+  \"TARGET_SSE4_1 && ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)\"\n+  \"p<maxminiprefix><ssevecsize>\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseiadd\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"mode\" \"TI\")])\n@@ -3774,51 +3656,17 @@\n   }\n })\n \n-(define_insn \"*sse4_1_umax<mode>3\"\n+(define_insn \"*sse4_1_<code><mode>3\"\n   [(set (match_operand:SSEMODE24 0 \"register_operand\" \"=x\")\n-\t(umax:SSEMODE24\n+\t(umaxmin:SSEMODE24\n \t  (match_operand:SSEMODE24 1 \"nonimmediate_operand\" \"%0\")\n \t  (match_operand:SSEMODE24 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_SSE4_1 && ix86_binary_operator_ok (UMAX, <MODE>mode, operands)\"\n-  \"pmaxu<ssevecsize>\\t{%2, %0|%0, %2}\"\n+  \"TARGET_SSE4_1 && ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)\"\n+  \"p<maxminiprefix><ssevecsize>\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseiadd\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_expand \"uminv16qi3\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"\")\n-\t(umin:V16QI (match_operand:V16QI 1 \"nonimmediate_operand\" \"\")\n-\t\t    (match_operand:V16QI 2 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_SSE2\"\n-  \"ix86_fixup_binary_operands_no_copy (UMIN, V16QImode, operands);\")\n-\n-(define_insn \"*uminv16qi3\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=x\")\n-\t(umin:V16QI (match_operand:V16QI 1 \"nonimmediate_operand\" \"%0\")\n-\t\t    (match_operand:V16QI 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_SSE2 && ix86_binary_operator_ok (UMIN, V16QImode, operands)\"\n-  \"pminub\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"prefix_data16\" \"1\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_expand \"sminv8hi3\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"\")\n-\t(smin:V8HI (match_operand:V8HI 1 \"nonimmediate_operand\" \"\")\n-\t\t   (match_operand:V8HI 2 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_SSE2\"\n-  \"ix86_fixup_binary_operands_no_copy (SMIN, V8HImode, operands);\")\n-\n-(define_insn \"*sminv8hi3\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n-\t(smin:V8HI (match_operand:V8HI 1 \"nonimmediate_operand\" \"%0\")\n-\t\t   (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_SSE2 && ix86_binary_operator_ok (SMIN, V8HImode, operands)\"\n-  \"pminsw\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"prefix_data16\" \"1\")\n-   (set_attr \"mode\" \"TI\")])\n-\n (define_expand \"smin<mode>3\"\n   [(set (match_operand:SSEMODE14 0 \"register_operand\" \"\")\n \t(smin:SSEMODE14 (match_operand:SSEMODE14 1 \"register_operand\" \"\")\n@@ -3844,17 +3692,6 @@\n     }\n })\n \n-(define_insn \"*sse4_1_smin<mode>3\"\n-  [(set (match_operand:SSEMODE14 0 \"register_operand\" \"=x\")\n-\t(smin:SSEMODE14\n-\t  (match_operand:SSEMODE14 1 \"nonimmediate_operand\" \"%0\")\n-\t  (match_operand:SSEMODE14 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_SSE4_1 && ix86_binary_operator_ok (SMIN, <MODE>mode, operands)\"\n-  \"pmins<ssevecsize>\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"mode\" \"TI\")])\n-\n (define_expand \"umin<mode>3\"\n   [(set (match_operand:SSEMODE24 0 \"register_operand\" \"\")\n \t(umin:SSEMODE24 (match_operand:SSEMODE24 1 \"register_operand\" \"\")\n@@ -3880,17 +3717,6 @@\n     }\n })\n \n-(define_insn \"*sse4_1_umin<mode>3\"\n-  [(set (match_operand:SSEMODE24 0 \"register_operand\" \"=x\")\n-\t(umin:SSEMODE24\n-\t  (match_operand:SSEMODE24 1 \"nonimmediate_operand\" \"%0\")\n-\t  (match_operand:SSEMODE24 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_SSE4_1 && ix86_binary_operator_ok (UMIN, <MODE>mode, operands)\"\n-  \"pminu<ssevecsize>\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"mode\" \"TI\")])\n-\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;;\n ;; Parallel integral comparisons"}]}