{"sha": "cb7a89619d7ac8fcefaab6c20d09bb55b7dc5cee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I3YTg5NjE5ZDdhYzhmY2VmYWFiNmMyMGQwOWJiNTViN2RjNWNlZQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2009-06-20T18:07:10Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2009-06-20T18:07:10Z"}, "message": "re PR fortran/40452 (-fbounds-check: False positive due to ignoring storage association)\n\n2009-06-20  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/40452\n        * trans-decl.c (add_argument_checking): Disable bounds check\n        for allowed argument storage association.\n\n2009-06-20  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/40452\n        * gfortran.dg/bounds_check_strlen_9.f90: New test.\n\nFrom-SVN: r148750", "tree": {"sha": "cb60aa3a69ad7e7dd65814fc86a5f791a430a468", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb60aa3a69ad7e7dd65814fc86a5f791a430a468"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb7a89619d7ac8fcefaab6c20d09bb55b7dc5cee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb7a89619d7ac8fcefaab6c20d09bb55b7dc5cee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb7a89619d7ac8fcefaab6c20d09bb55b7dc5cee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb7a89619d7ac8fcefaab6c20d09bb55b7dc5cee/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "525b459f4d2fa0baba15f39973524cf75abaabf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/525b459f4d2fa0baba15f39973524cf75abaabf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/525b459f4d2fa0baba15f39973524cf75abaabf9"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "0d88c4b9fa9a7026344924a14f17b04fe8d7cad8", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb7a89619d7ac8fcefaab6c20d09bb55b7dc5cee/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb7a89619d7ac8fcefaab6c20d09bb55b7dc5cee/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=cb7a89619d7ac8fcefaab6c20d09bb55b7dc5cee", "patch": "@@ -1,3 +1,9 @@\n+2009-06-20  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/40452\n+\t* trans-decl.c (add_argument_checking): Disable bounds check\n+\tfor allowed argument storage association.\n+\n 2009-06-19  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/40440"}, {"sha": "091d3946852d01e7fb54c7f5ebb1a128ae5f7f03", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb7a89619d7ac8fcefaab6c20d09bb55b7dc5cee/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb7a89619d7ac8fcefaab6c20d09bb55b7dc5cee/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=cb7a89619d7ac8fcefaab6c20d09bb55b7dc5cee", "patch": "@@ -3835,14 +3835,20 @@ add_argument_checking (stmtblock_t *block, gfc_symbol *sym)\n \n \t/* For POINTER, ALLOCATABLE and assumed-shape dummy arguments, the\n \t   string lengths must match exactly.  Otherwise, it is only required\n-\t   that the actual string length is *at least* the expected one.  */\n+\t   that the actual string length is *at least* the expected one.\n+\t   Sequence association allows for a mismatch of the string length\n+\t   if the actual argument is (part of) an array, but only if the\n+\t   dummy argument is an array. (See \"Sequence association\" in\n+\t   Section 12.4.1.4 for F95 and 12.4.1.5 for F2003.)  */\n \tif (fsym->attr.pointer || fsym->attr.allocatable\n \t    || (fsym->as && fsym->as->type == AS_ASSUMED_SHAPE))\n \t  {\n \t    comparison = NE_EXPR;\n \t    message = _(\"Actual string length does not match the declared one\"\n \t\t\t\" for dummy argument '%s' (%ld/%ld)\");\n \t  }\n+\telse if (fsym->as && fsym->as->rank != 0)\n+\t  continue;\n \telse\n \t  {\n \t    comparison = LT_EXPR;"}, {"sha": "210d2112e53bc6b4a12f668046d1fb97595dfa95", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb7a89619d7ac8fcefaab6c20d09bb55b7dc5cee/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb7a89619d7ac8fcefaab6c20d09bb55b7dc5cee/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cb7a89619d7ac8fcefaab6c20d09bb55b7dc5cee", "patch": "@@ -1,3 +1,8 @@\n+2009-06-20  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/40452\n+\t* gfortran.dg/bounds_check_strlen_9.f90: New test.\n+\n 2009-06-19  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/40440"}, {"sha": "89622e2496744edd2d6cc45e54e2697883eeb189", "filename": "gcc/testsuite/gfortran.dg/bounds_check_strlen_9.f90", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb7a89619d7ac8fcefaab6c20d09bb55b7dc5cee/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_strlen_9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb7a89619d7ac8fcefaab6c20d09bb55b7dc5cee/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_strlen_9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_strlen_9.f90?ref=cb7a89619d7ac8fcefaab6c20d09bb55b7dc5cee", "patch": "@@ -0,0 +1,20 @@\n+! { dg-do run }\n+! { dg-options \"-fbounds-check\" }\n+!\n+! PR fortran/40452\n+! The following program is valid Fortran 90 and later.\n+! The storage-sequence association of the dummy argument\n+! allows that the actual argument [\"ab\", \"cd\"] is mapped\n+! to the dummy argument a(1) which perfectly fits.\n+! (The dummy needs to be an array, however.)\n+!\n+\n+program test\n+  implicit none\n+  call sub([\"ab\", \"cd\"])\n+contains\n+  subroutine sub(a)\n+   character(len=4) :: a(1)\n+   print *, a(1)\n+  end subroutine sub\n+end program test"}]}