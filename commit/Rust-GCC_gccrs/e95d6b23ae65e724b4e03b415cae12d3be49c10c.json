{"sha": "e95d6b23ae65e724b4e03b415cae12d3be49c10c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk1ZDZiMjNhZTY1ZTcyNGI0ZTAzYjQxNWNhZTEyZDNiZTQ5YzEwYw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-02-18T14:09:39Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-02-18T14:09:39Z"}, "message": "i386.c (classify_argument): Properly classify SSE/MMX modes and VOIDmode.\n\n\t* i386.c (classify_argument): Properly classify SSE/MMX modes and VOIDmode.\n\t(construct_container): Fix handling of SSE operands.\n\t(ix86_expand_builtin): Fix handling of 64bit pointers.\n\t(mmx_maskmovq_rex): New pattern.\n\nFrom-SVN: r49840", "tree": {"sha": "5e6c061310f2338e72556405442cd4ea0b799fc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e6c061310f2338e72556405442cd4ea0b799fc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e95d6b23ae65e724b4e03b415cae12d3be49c10c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e95d6b23ae65e724b4e03b415cae12d3be49c10c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e95d6b23ae65e724b4e03b415cae12d3be49c10c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e95d6b23ae65e724b4e03b415cae12d3be49c10c/comments", "author": null, "committer": null, "parents": [{"sha": "605e15f7914f6434612cd1cad0fe80b026d7b312", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/605e15f7914f6434612cd1cad0fe80b026d7b312", "html_url": "https://github.com/Rust-GCC/gccrs/commit/605e15f7914f6434612cd1cad0fe80b026d7b312"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "9ae406e97bb10c0935fd64281dc54c867e4a4700", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e95d6b23ae65e724b4e03b415cae12d3be49c10c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e95d6b23ae65e724b4e03b415cae12d3be49c10c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e95d6b23ae65e724b4e03b415cae12d3be49c10c", "patch": "@@ -1,3 +1,10 @@\n+Mon Feb 18 15:07:35 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (classify_argument): Properly classify SSE/MMX modes and VOIDmode.\n+\t(construct_container): Fix handling of SSE operands.\n+\t(ix86_expand_builtin): Fix handling of 64bit pointers.\n+\t(mmx_maskmovq_rex): New pattern.\n+\n Mon Feb 18 11:55:55 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* regrename.c (kill_set_value): Handle subregs properly."}, {"sha": "342321a7ec7d46c87c8e01f482094f737863329f", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e95d6b23ae65e724b4e03b415cae12d3be49c10c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e95d6b23ae65e724b4e03b415cae12d3be49c10c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=e95d6b23ae65e724b4e03b415cae12d3be49c10c", "patch": "@@ -1819,7 +1819,19 @@ classify_argument (mode, type, classes, bit_offset)\n     case SCmode:\n       classes[0] = X86_64_SSE_CLASS;\n       return 1;\n+    case V4SFmode:\n+    case V4SImode:\n+      classes[0] = X86_64_SSE_CLASS;\n+      classes[1] = X86_64_SSEUP_CLASS;\n+      return 2;\n+    case V2SFmode:\n+    case V2SImode:\n+    case V4HImode:\n+    case V8QImode:\n+      classes[0] = X86_64_SSE_CLASS;\n+      return 1;\n     case BLKmode:\n+    case VOIDmode:\n       return 0;\n     default:\n       abort ();\n@@ -1932,7 +1944,7 @@ construct_container (mode, type, in_return, nintregs, nsseregs, intreg, sse_regn\n \tabort ();\n       }\n   if (n == 2 && class[0] == X86_64_SSE_CLASS && class[1] == X86_64_SSEUP_CLASS)\n-    return gen_rtx_REG (TImode, SSE_REGNO (sse_regno));\n+    return gen_rtx_REG (mode, SSE_REGNO (sse_regno));\n   if (n == 2\n       && class[0] == X86_64_X87_CLASS && class[1] == X86_64_X87UP_CLASS)\n     return gen_rtx_REG (TFmode, FIRST_STACK_REG);\n@@ -11689,7 +11701,7 @@ ix86_expand_builtin (exp, target, subtarget, mode, ignore)\n       return target;\n \n     case IX86_BUILTIN_MASKMOVQ:\n-      icode = CODE_FOR_mmx_maskmovq;\n+      icode = TARGET_64BIT ? CODE_FOR_mmx_maskmovq_rex : CODE_FOR_mmx_maskmovq;\n       /* Note the arg order is different from the operand order.  */\n       arg1 = TREE_VALUE (arglist);\n       arg2 = TREE_VALUE (TREE_CHAIN (arglist));"}, {"sha": "b0ec9f21368dc4993f81f04545aa76c2a9cd8438", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e95d6b23ae65e724b4e03b415cae12d3be49c10c/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e95d6b23ae65e724b4e03b415cae12d3be49c10c/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=e95d6b23ae65e724b4e03b415cae12d3be49c10c", "patch": "@@ -18092,7 +18092,16 @@\n   [(set (mem:V8QI (match_operand:SI 0 \"register_operand\" \"D\"))\n \t(unspec:V8QI [(match_operand:V8QI 1 \"register_operand\" \"y\")\n \t\t      (match_operand:V8QI 2 \"register_operand\" \"y\")] 32))]\n-  \"TARGET_SSE || TARGET_3DNOW_A\"\n+  \"(TARGET_SSE || TARGET_3DNOW_A) && !TARGET_64BIT\"\n+  ;; @@@ check ordering of operands in intel/nonintel syntax\n+  \"maskmovq\\t{%2, %1|%1, %2}\"\n+  [(set_attr \"type\" \"sse\")])\n+\n+(define_insn \"mmx_maskmovq_rex\"\n+  [(set (mem:V8QI (match_operand:DI 0 \"register_operand\" \"D\"))\n+\t(unspec:V8QI [(match_operand:V8QI 1 \"register_operand\" \"y\")\n+\t\t      (match_operand:V8QI 2 \"register_operand\" \"y\")] 32))]\n+  \"(TARGET_SSE || TARGET_3DNOW_A) && TARGET_64BIT\"\n   ;; @@@ check ordering of operands in intel/nonintel syntax\n   \"maskmovq\\t{%2, %1|%1, %2}\"\n   [(set_attr \"type\" \"sse\")])"}]}