{"sha": "a0b67fe26f6f39705c0d34ac31c860c18095defa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBiNjdmZTI2ZjZmMzk3MDVjMGQzNGFjMzFjODYwYzE4MDk1ZGVmYQ==", "commit": {"author": {"name": "Tilo Schwarz", "email": "tilo@tilo-schwarz.de", "date": "2013-03-20T07:56:02Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-03-20T07:56:02Z"}, "message": "re PR fortran/51825 (Fortran runtime error: Cannot match namelist object name)\n\n2013-03-20  Tilo Schwarz  <tilo@tilo-schwarz.de>\n\n        PR libfortran/51825\n        * io/list_read.c (nml_read_obj): Don't end the component loop on\n        a nested derived type, but continue with the next loop iteration.\n        (nml_get_obj_data): Don't move the first_nl pointer further in\n        the list if a qualifier was found.\n\n2013-03-20  Tilo Schwarz  <tilo@tilo-schwarz.de>\n\n        PR libfortran/51825\n        * gcc/testsuite/gfortran.dg/namelist_77.f90: New.\n        * gcc/testsuite/gfortran.dg/namelist_78.f90: New.\n\nFrom-SVN: r196806", "tree": {"sha": "07020549d3f618a7a7b389436c1d33789630a6d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07020549d3f618a7a7b389436c1d33789630a6d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0b67fe26f6f39705c0d34ac31c860c18095defa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0b67fe26f6f39705c0d34ac31c860c18095defa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0b67fe26f6f39705c0d34ac31c860c18095defa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0b67fe26f6f39705c0d34ac31c860c18095defa/comments", "author": {"login": "tischwa", "id": 2934304, "node_id": "MDQ6VXNlcjI5MzQzMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2934304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tischwa", "html_url": "https://github.com/tischwa", "followers_url": "https://api.github.com/users/tischwa/followers", "following_url": "https://api.github.com/users/tischwa/following{/other_user}", "gists_url": "https://api.github.com/users/tischwa/gists{/gist_id}", "starred_url": "https://api.github.com/users/tischwa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tischwa/subscriptions", "organizations_url": "https://api.github.com/users/tischwa/orgs", "repos_url": "https://api.github.com/users/tischwa/repos", "events_url": "https://api.github.com/users/tischwa/events{/privacy}", "received_events_url": "https://api.github.com/users/tischwa/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "09c7dc636d0f407c4184b33e97928c3e2545130b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09c7dc636d0f407c4184b33e97928c3e2545130b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09c7dc636d0f407c4184b33e97928c3e2545130b"}], "stats": {"total": 112, "additions": 105, "deletions": 7}, "files": [{"sha": "72f436e78ae485c3cc98113eb8ce81898be9f88c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0b67fe26f6f39705c0d34ac31c860c18095defa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0b67fe26f6f39705c0d34ac31c860c18095defa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a0b67fe26f6f39705c0d34ac31c860c18095defa", "patch": "@@ -1,3 +1,9 @@\n+2013-03-20  Tilo Schwarz  <tilo@tilo-schwarz.de>\n+\n+\tPR libfortran/51825\n+\t* gfortran.dg/namelist_77.f90: New.\n+\t* gfortran.dg/namelist_78.f90: New.\n+\n 2013-03-20  Tilo Schwarz  <tilo@tilo-schwarz.de>\n \n \tPR libfortran/48618"}, {"sha": "5cbfe3aad65a6e16ac9105bfc6a679ae56bd8485", "filename": "gcc/testsuite/gfortran.dg/namelist_77.f90", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0b67fe26f6f39705c0d34ac31c860c18095defa/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_77.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0b67fe26f6f39705c0d34ac31c860c18095defa/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_77.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_77.f90?ref=a0b67fe26f6f39705c0d34ac31c860c18095defa", "patch": "@@ -0,0 +1,49 @@\n+! { dg-do run }\n+!\n+! PR libfortran/51825 - Fortran runtime error: Cannot match namelist object name\n+! Test case derived from PR.\n+\n+module local_mod\n+\n+    type mytype1\n+        integer :: int1\n+    end type\n+\n+    type mytype2\n+        integer :: n_x       \n+        integer :: n_px        \n+    end type\n+\n+    type beam_init_struct\n+        character(16) :: chars(1) = ''                                  \n+        type (mytype1) dummy\n+        type (mytype2) grid(1)      \n+    end type\n+\n+end module\n+\n+program error_namelist\n+\n+    use local_mod\n+\n+    implicit none\n+\n+    type (beam_init_struct) beam_init\n+\n+    namelist / error_params / beam_init\n+\n+    open (10, status='scratch')\n+    write (10, '(a)') \"&error_params\"\n+    write (10, '(a)') \"  beam_init%chars(1)='JUNK'\"\n+    write (10, '(a)') \"  beam_init%grid(1)%n_x=3\"\n+    write (10, '(a)') \"  beam_init%grid(1)%n_px=2\"\n+    write (10, '(a)') \"/\"\n+    rewind(10)\n+    read(10, nml=error_params)\n+    close (10)\n+\n+    if (beam_init%chars(1) /= 'JUNK') call abort\n+    if (beam_init%grid(1)%n_x /= 3) call abort\n+    if (beam_init%grid(1)%n_px /= 2) call abort\n+\n+end program"}, {"sha": "d4e29ab8228389804a69482ef7f854213b023882", "filename": "gcc/testsuite/gfortran.dg/namelist_78.f90", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0b67fe26f6f39705c0d34ac31c860c18095defa/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_78.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0b67fe26f6f39705c0d34ac31c860c18095defa/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_78.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_78.f90?ref=a0b67fe26f6f39705c0d34ac31c860c18095defa", "patch": "@@ -0,0 +1,34 @@\n+! { dg-do run }\n+!\n+! PR libfortran/51825\n+! Test case regarding namelist problems with derived types\n+\n+program namelist\n+\n+    type d1\n+        integer :: j = 0\n+    end type d1\n+\n+    type d2\n+        type(d1) k\n+    end type d2\n+\n+    type d3\n+        type(d2) d(2)\n+    end type d3\n+\n+    type(d3) der\n+    namelist /nmlst/ der\n+\n+    open (10, status='scratch')\n+    write (10, '(a)') \"&NMLST\"\n+    write (10, '(a)') \" DER%D(1)%K%J = 1,\"\n+    write (10, '(a)') \" DER%D(2)%K%J = 2,\"\n+    write (10, '(a)') \"/\"\n+    rewind(10)\n+    read(10, nml=nmlst)\n+    close (10)\n+\n+    if (der%d(1)%k%j /= 1) call abort\n+    if (der%d(2)%k%j /= 2) call abort\n+end program namelist"}, {"sha": "877d2d0c95965e622b8cc8f4e0bb43d472d1ebf0", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0b67fe26f6f39705c0d34ac31c860c18095defa/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0b67fe26f6f39705c0d34ac31c860c18095defa/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=a0b67fe26f6f39705c0d34ac31c860c18095defa", "patch": "@@ -1,3 +1,11 @@\n+2013-03-20  Tilo Schwarz  <tilo@tilo-schwarz.de>\n+\n+\tPR libfortran/51825\n+\t* io/list_read.c (nml_read_obj): Don't end the component loop on a\n+\tnested derived type, but continue with the next loop iteration.\n+\t(nml_get_obj_data): Don't move the first_nl pointer further in the\n+\tlist if a qualifier was found.\n+\n 2013-03-20  Tilo Schwarz  <tilo@tilo-schwarz.de>\n \n \tPR libfortran/48618"}, {"sha": "aa7c8c0d2c1c37cdbc07aff823c5c6bc61ccfe99", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0b67fe26f6f39705c0d34ac31c860c18095defa/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0b67fe26f6f39705c0d34ac31c860c18095defa/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=a0b67fe26f6f39705c0d34ac31c860c18095defa", "patch": "@@ -2578,17 +2578,17 @@ nml_read_obj (st_parameter_dt *dtp, namelist_info * nl, index_type offset,\n \t       since a single object can have multiple reads.  */\n \t    dtp->u.p.expanded_read = 0;\n \n-\t    /* Now loop over the components. Update the component pointer\n-\t       with the return value from nml_write_obj.  This loop jumps\n-\t       past nested derived types by testing if the potential\n-\t       component name contains '%'.  */\n+\t    /* Now loop over the components.  */\n \n \t    for (cmp = nl->next;\n \t\t cmp &&\n-\t\t   !strncmp (cmp->var_name, obj_name, obj_name_len) &&\n-\t\t   !strchr (cmp->var_name + obj_name_len, '%');\n+\t\t   !strncmp (cmp->var_name, obj_name, obj_name_len);\n \t\t cmp = cmp->next)\n \t      {\n+\t\t/* Jump over nested derived type by testing if the potential\n+\t\t   component name contains '%'.  */\n+\t\tif (strchr (cmp->var_name + obj_name_len, '%'))\n+\t\t    continue;\n \n \t\tif (!nml_read_obj (dtp, cmp, (index_type)(pdata - nl->mem_pos),\n \t\t\t\t  pprev_nl, nml_err_msg, nml_err_msg_size,\n@@ -2901,7 +2901,8 @@ nml_get_obj_data (st_parameter_dt *dtp, namelist_info **pprev_nl,\n \t  goto nml_err_ret;\n \t}\n \n-      if (*pprev_nl == NULL || !component_flag)\n+      /* Don't move first_nl further in the list if a qualifier was found.  */\n+      if ((*pprev_nl == NULL && !qualifier_flag) || !component_flag)\n \tfirst_nl = nl;\n \n       root_nl = nl;"}]}