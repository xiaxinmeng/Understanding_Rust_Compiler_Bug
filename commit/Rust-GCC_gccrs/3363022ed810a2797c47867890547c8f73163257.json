{"sha": "3363022ed810a2797c47867890547c8f73163257", "node_id": "C_kwDOANBUbNoAKDMzNjMwMjJlZDgxMGEyNzk3YzQ3ODY3ODkwNTQ3YzhmNzMxNjMyNTc", "commit": {"author": {"name": "Xi Ruoyao", "email": "xry111@mengyan1223.wang", "date": "2021-11-18T10:46:12Z"}, "committer": {"name": "Xi Ruoyao", "email": "xry111@mengyan1223.wang", "date": "2021-11-23T19:18:38Z"}, "message": "fixincludes: don't abort() on access failure [PR103306]\n\nSome distro may ship dangling symlinks in include directories, triggers\nthe access failure.  Skip it and continue to next header instead of\nbeing to panic.\n\nRestore to old behavior before r12-5234 but without resurrecting the\nproblematic getcwd() call, by using the environment variable \"INPUT\"\nexported by fixinc.sh.\n\nTested on x86_64-linux-gnu, with a dangling symlink intentionally\ninjected into /usr/include.\n\nfixincludes/\n\n\tPR bootstrap/103306\n\t* fixincl.c (process): Don't call abort().", "tree": {"sha": "966dffcf67066d7d2e3c6d37253c17ab34327dcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/966dffcf67066d7d2e3c6d37253c17ab34327dcf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3363022ed810a2797c47867890547c8f73163257", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEEunTLnZqV9wGnXaw2V5HFsy7NNwFAmGdPo4ACgkQ2V5HFsy7\nNNycWg//bJIsvHoSNzDsP2+ca8EW9//JH3kmIQKRqtxqb0SGJ5P/JCRLCPeLebce\np48u1F1GE62E7GpHmf0zBojuH6wskVZUUefDo93Zb4NQwDZI2PCTjMOBMXLtE9Ce\nz+nF5bQKovJYIpLwfoOC0Ek2aqKQNwkt81Ph1zmHIJQrSDcRZ7NBZtnVgYY6zVuP\nunGaxt3LwizqYgXv9XTq4N3mx46qkGnwaa88vHYiLtHziHldlFixA4YaEYvbw7+A\nUjw8hbm4erxP5oGq5+rTn1TCS6ZKZTWRo9To4JJxFYU5e2cVJvgvz/FOtv0/SE5J\n/UiGCPVVV6hHlZNLYgrqPv3A6Lrih4Vgsyrb+sz9Dl5/QH35VjiIpN/WPg9dEz6F\nDe4VDAnh0FJkPNVlV18p4dk0Mm4zBhLkJP0lXxxOaxt/iXiH1Hx3UejADHcmvLNR\nyQpkANQHHLB9999TuCzQwXOGtkHx34aioQ+ItjaBLu/hE382gooi6Ou/8if0iE3e\nmpJFFqRFMh8alEbKJxbHB8LDpRf6tbFk097v2HlTrS6zuGSYFTyq3o+P1bRKao9e\nbUsLvbE7AnZF7x/Jd4vStYZ4ykEWG47oQECds/jFYFmJB1Y/HthwD/ER3TRC5d+g\n8op5iZRBfAv4rLVEB8Xs2m6stPKqN0dAHmqpgkXx2Vxj0qBZzu4=\n=v35K\n-----END PGP SIGNATURE-----", "payload": "tree 966dffcf67066d7d2e3c6d37253c17ab34327dcf\nparent d6024c85a1ce568f874afa1d9431c43eccba2f59\nauthor Xi Ruoyao <xry111@mengyan1223.wang> 1637232372 +0800\ncommitter Xi Ruoyao <xry111@mengyan1223.wang> 1637695118 +0800\n\nfixincludes: don't abort() on access failure [PR103306]\n\nSome distro may ship dangling symlinks in include directories, triggers\nthe access failure.  Skip it and continue to next header instead of\nbeing to panic.\n\nRestore to old behavior before r12-5234 but without resurrecting the\nproblematic getcwd() call, by using the environment variable \"INPUT\"\nexported by fixinc.sh.\n\nTested on x86_64-linux-gnu, with a dangling symlink intentionally\ninjected into /usr/include.\n\nfixincludes/\n\n\tPR bootstrap/103306\n\t* fixincl.c (process): Don't call abort().\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3363022ed810a2797c47867890547c8f73163257", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3363022ed810a2797c47867890547c8f73163257", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3363022ed810a2797c47867890547c8f73163257/comments", "author": {"login": "xry111", "id": 8733039, "node_id": "MDQ6VXNlcjg3MzMwMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8733039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xry111", "html_url": "https://github.com/xry111", "followers_url": "https://api.github.com/users/xry111/followers", "following_url": "https://api.github.com/users/xry111/following{/other_user}", "gists_url": "https://api.github.com/users/xry111/gists{/gist_id}", "starred_url": "https://api.github.com/users/xry111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xry111/subscriptions", "organizations_url": "https://api.github.com/users/xry111/orgs", "repos_url": "https://api.github.com/users/xry111/repos", "events_url": "https://api.github.com/users/xry111/events{/privacy}", "received_events_url": "https://api.github.com/users/xry111/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xry111", "id": 8733039, "node_id": "MDQ6VXNlcjg3MzMwMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8733039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xry111", "html_url": "https://github.com/xry111", "followers_url": "https://api.github.com/users/xry111/followers", "following_url": "https://api.github.com/users/xry111/following{/other_user}", "gists_url": "https://api.github.com/users/xry111/gists{/gist_id}", "starred_url": "https://api.github.com/users/xry111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xry111/subscriptions", "organizations_url": "https://api.github.com/users/xry111/orgs", "repos_url": "https://api.github.com/users/xry111/repos", "events_url": "https://api.github.com/users/xry111/events{/privacy}", "received_events_url": "https://api.github.com/users/xry111/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6024c85a1ce568f874afa1d9431c43eccba2f59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6024c85a1ce568f874afa1d9431c43eccba2f59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6024c85a1ce568f874afa1d9431c43eccba2f59"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "92909baf85f6b865bb21619a930f7737c0df9b56", "filename": "fixincludes/fixincl.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3363022ed810a2797c47867890547c8f73163257/fixincludes%2Ffixincl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3363022ed810a2797c47867890547c8f73163257/fixincludes%2Ffixincl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.c?ref=3363022ed810a2797c47867890547c8f73163257", "patch": "@@ -1352,10 +1352,19 @@ process (void)\n \n   if (access (pz_curr_file, R_OK) != 0)\n     {\n-      /* Some really strange error happened.  */\n-      fprintf (stderr, \"Cannot access %s: %s\\n\", pz_curr_file,\n+      /* It may happens if for e. g. the distro ships some broken symlinks\n+\t in /usr/include.  */\n+\n+      /* \"INPUT\" is exported in fixinc.sh, which is the pwd where fixincl\n+\t runs.  It's used instead of getcwd to avoid allocating a buffer\n+\t with unknown length.  */\n+      const char *cwd = getenv (\"INPUT\");\n+      if (!cwd)\n+\tcwd = \"the working directory\";\n+\n+      fprintf (stderr, \"Cannot access %s from %s: %s\\n\", pz_curr_file, cwd,\n \t       xstrerror (errno));\n-      abort ();\n+      return;\n     }\n \n   pz_curr_data = load_file (pz_curr_file);"}]}