{"sha": "dba077902daf195da0e5bbac33a1f34bc6b20367", "node_id": "C_kwDOANBUbNoAKGRiYTA3NzkwMmRhZjE5NWRhMGU1YmJhYzMzYTFmMzRiYzZiMjAzNjc", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2022-06-06T17:22:39Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-07-05T08:28:19Z"}, "message": "[Ada] Misc cleanup related to finalization\n\nThis patch cleans up some code issues found while working on\nfinalization, and adds some debugging aids.\n\ngcc/ada/\n\n\t* exp_ch7.adb: Change two constants Is_Protected_Body and\n\tIs_Prot_Body to be Is_Protected_Subp_Body; these are not true\n\tfor protected bodies, but for protected subprogram bodies.\n\t(Expand_Cleanup_Actions): No need to search for\n\tActivation_Chain_Entity; just use Activation_Chain_Entity.\n\t* sem_ch8.adb (Find_Direct_Name): Use Entyp constant.\n\t* atree.adb, atree.ads, atree.h, nlists.adb, nlists.ads\n\t(Parent): Provide nonoverloaded versions of Parent, so that they\n\tcan be easily found in the debugger.\n\t* debug_a.adb, debug_a.ads: Clarify that we're talking about the\n\t-gnatda switch; switches are case sensitive.  Print out the\n\tChars field if appropriate, which makes it easier to find things\n\tin the output.\n\t(Debug_Output_Astring): Simplify. Also fix an off-by-one\n\tbug (\"for I in Vbars'Length ..\" should have been \"for I in\n\tVbars'Length + 1 ..\").  Before, it was printing Debug_A_Depth +\n\t1 '|' characters if Debug_A_Depth > Vbars'Length.", "tree": {"sha": "89a38c8a2d3df5e67746b459d5c94405150d8f7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89a38c8a2d3df5e67746b459d5c94405150d8f7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dba077902daf195da0e5bbac33a1f34bc6b20367", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dba077902daf195da0e5bbac33a1f34bc6b20367", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dba077902daf195da0e5bbac33a1f34bc6b20367", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dba077902daf195da0e5bbac33a1f34bc6b20367/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "824211e18b96dc56d3a530b31aa16cded2c941eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/824211e18b96dc56d3a530b31aa16cded2c941eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/824211e18b96dc56d3a530b31aa16cded2c941eb"}], "stats": {"total": 145, "additions": 75, "deletions": 70}, "files": [{"sha": "446c7960ada36850b6dea4553d7ab47630ae6333", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba077902daf195da0e5bbac33a1f34bc6b20367/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba077902daf195da0e5bbac33a1f34bc6b20367/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=dba077902daf195da0e5bbac33a1f34bc6b20367", "patch": "@@ -1966,7 +1966,7 @@ package body Atree is\n       end if;\n    end Paren_Count;\n \n-   function Parent (N : Node_Or_Entity_Id) return Node_Or_Entity_Id is\n+   function Node_Parent (N : Node_Or_Entity_Id) return Node_Or_Entity_Id is\n    begin\n       pragma Assert (Present (N));\n \n@@ -1975,7 +1975,7 @@ package body Atree is\n       else\n          return Node_Or_Entity_Id (Link (N));\n       end if;\n-   end Parent;\n+   end Node_Parent;\n \n    -------------\n    -- Present --\n@@ -2292,12 +2292,12 @@ package body Atree is\n    -- Set_Parent --\n    ----------------\n \n-   procedure Set_Parent (N : Node_Or_Entity_Id; Val : Node_Or_Entity_Id) is\n+   procedure Set_Node_Parent (N : Node_Or_Entity_Id; Val : Node_Or_Entity_Id) is\n    begin\n       pragma Assert (Present (N));\n       pragma Assert (not In_List (N));\n       Set_Link (N, Union_Id (Val));\n-   end Set_Parent;\n+   end Set_Node_Parent;\n \n    ------------------------\n    -- Set_Reporting_Proc --"}, {"sha": "0c809f56435b9e01fbc2d49d2559c5467e51646e", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba077902daf195da0e5bbac33a1f34bc6b20367/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba077902daf195da0e5bbac33a1f34bc6b20367/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=dba077902daf195da0e5bbac33a1f34bc6b20367", "patch": "@@ -446,10 +446,15 @@ package Atree is\n    --  Tests given Id for equality with the Empty node. This allows notations\n    --  like \"if No (Variant_Part)\" as opposed to \"if Variant_Part = Empty\".\n \n-   function Parent (N : Node_Or_Entity_Id) return Node_Or_Entity_Id;\n+   function Node_Parent (N : Node_Or_Entity_Id) return Node_Or_Entity_Id;\n+   pragma Inline (Node_Parent);\n+   function Parent (N : Node_Or_Entity_Id) return Node_Or_Entity_Id\n+     renames Node_Parent;\n    pragma Inline (Parent);\n    --  Returns the parent of a node if the node is not a list member, or else\n    --  the parent of the list containing the node if the node is a list member.\n+   --  Parent has the same name as the one in Nlists; Node_Parent can be used\n+   --  more easily in the debugger.\n \n    function Paren_Count (N : Node_Id) return Nat;\n    pragma Inline (Paren_Count);\n@@ -465,7 +470,10 @@ package Atree is\n    --  Note that this routine is used only in very peculiar cases. In normal\n    --  cases, the Original_Node link is set by calls to Rewrite.\n \n-   procedure Set_Parent (N : Node_Or_Entity_Id; Val : Node_Or_Entity_Id);\n+   procedure Set_Node_Parent (N : Node_Or_Entity_Id; Val : Node_Or_Entity_Id);\n+   pragma Inline (Set_Node_Parent);\n+   procedure Set_Parent (N : Node_Or_Entity_Id; Val : Node_Or_Entity_Id)\n+     renames Set_Node_Parent;\n    pragma Inline (Set_Parent);\n \n    procedure Set_Paren_Count (N : Node_Id; Val : Nat);"}, {"sha": "d35f0ad8b0894801234c2df136baa4238cf6c120", "filename": "gcc/ada/atree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba077902daf195da0e5bbac33a1f34bc6b20367/gcc%2Fada%2Fatree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba077902daf195da0e5bbac33a1f34bc6b20367/gcc%2Fada%2Fatree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.h?ref=dba077902daf195da0e5bbac33a1f34bc6b20367", "patch": "@@ -35,7 +35,7 @@\n extern \"C\" {\n #endif\n \n-#define Parent atree__parent\n+#define Parent atree__node_parent\n extern Node_Id Parent (Node_Id);\n \n #define Original_Node atree__original_node"}, {"sha": "bded8ab9a8339af60297833eec2415452288499a", "filename": "gcc/ada/debug_a.adb", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba077902daf195da0e5bbac33a1f34bc6b20367/gcc%2Fada%2Fdebug_a.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba077902daf195da0e5bbac33a1f34bc6b20367/gcc%2Fada%2Fdebug_a.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug_a.adb?ref=dba077902daf195da0e5bbac33a1f34bc6b20367", "patch": "@@ -25,6 +25,7 @@\n \n with Atree;          use Atree;\n with Debug;          use Debug;\n+with Namet;          use Namet;\n with Sinfo;          use Sinfo;\n with Sinfo.Nodes;    use Sinfo.Nodes;\n with Sinput;         use Sinput;\n@@ -33,7 +34,7 @@ with Output;         use Output;\n package body Debug_A is\n \n    Debug_A_Depth : Natural := 0;\n-   --  Output for the debug A flag is preceded by a sequence of vertical bar\n+   --  Output for the -gnatda switch is preceded by a sequence of vertical bar\n    --  characters corresponding to the recursion depth of the actions being\n    --  recorded (analysis, expansion, resolution and evaluation of nodes)\n    --  This variable records the depth.\n@@ -66,7 +67,7 @@ package body Debug_A is\n \n    procedure Debug_A_Entry (S : String; N : Node_Id) is\n    begin\n-      --  Output debugging information if -gnatda flag set\n+      --  Output debugging information if -gnatda switch set\n \n       if Debug_Flag_A then\n          Debug_Output_Astring;\n@@ -77,6 +78,19 @@ package body Debug_A is\n          Write_Location (Sloc (N));\n          Write_Str (\"  \");\n          Write_Str (Node_Kind'Image (Nkind (N)));\n+\n+         --  Print the Chars field, if appropriate\n+\n+         case Nkind (N) is\n+            when N_Has_Chars =>\n+               Write_Str (\" \"\"\");\n+               if Present (Chars (N)) then\n+                  Write_Str (Get_Name_String (Chars (N)));\n+               end if;\n+               Write_Str (\"\"\"\");\n+            when others => null;\n+         end case;\n+\n          Write_Eol;\n       end if;\n \n@@ -115,7 +129,7 @@ package body Debug_A is\n          end if;\n       end loop;\n \n-      --  Output debugging information if -gnatda flag set\n+      --  Output debugging information if -gnatda switch set\n \n       if Debug_Flag_A then\n          Debug_Output_Astring;\n@@ -132,18 +146,8 @@ package body Debug_A is\n    --------------------------\n \n    procedure Debug_Output_Astring is\n-      Vbars : constant String := \"|||||||||||||||||||||||||\";\n    begin\n-      if Debug_A_Depth > Vbars'Length then\n-         for I in Vbars'Length .. Debug_A_Depth loop\n-            Write_Char ('|');\n-         end loop;\n-\n-         Write_Str (Vbars);\n-\n-      else\n-         Write_Str (Vbars (1 .. Debug_A_Depth));\n-      end if;\n+      Write_Str ((1 .. Debug_A_Depth => '|'));\n    end Debug_Output_Astring;\n \n end Debug_A;"}, {"sha": "bcc1212a6d20023755268b39516ea68fd5b9e9bd", "filename": "gcc/ada/debug_a.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba077902daf195da0e5bbac33a1f34bc6b20367/gcc%2Fada%2Fdebug_a.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba077902daf195da0e5bbac33a1f34bc6b20367/gcc%2Fada%2Fdebug_a.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug_a.ads?ref=dba077902daf195da0e5bbac33a1f34bc6b20367", "patch": "@@ -23,7 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package contains data and subprograms to support the A debug switch\n+--  This package contains data and subprograms to support the -gnatda switch\n --  that is used to generate output showing what node is being analyzed,\n --  resolved, evaluated, or expanded.\n \n@@ -44,18 +44,18 @@ package Debug_A is\n    --  Generates a message prefixed by a sequence of bars showing the nesting\n    --  depth (depth increases by 1 for a Debug_A_Entry call and is decreased\n    --  by the corresponding Debug_A_Exit call). Then the string is output\n-   --  (analyzing, expanding etc), followed by the node number and its kind.\n-   --  This output is generated only if the debug A flag is set. If the debug\n-   --  A flag is not set, then no output is generated. This call also sets the\n-   --  Node_Id value in Atree.Current_Error_Node in case a bomb occurs. This\n-   --  is done unconditionally, whether or not the debug A flag is set.\n+   --  (analyzing, expanding etc), followed by information about the node.\n+   --  This output is generated only if the -gnatda switch is set. If that\n+   --  switch is not set, then no output is generated. This call also sets the\n+   --  Node_Id value in Atree.Current_Error_Node in case a bomb occurs. This is\n+   --  done unconditionally, whether or not the switch is set.\n \n    procedure Debug_A_Exit (S : String; N : Node_Id; Comment : String);\n    pragma Inline (Debug_A_Exit);\n    --  Generates the corresponding termination message. The message is preceded\n    --  by a sequence of bars, followed by the string S, the node number, and\n    --  a trailing comment (e.g. \" (already evaluated)\"). This output is\n-   --  generated only if the debug A flag is set. If the debug A flag is not\n+   --  generated only if the -gnatda switch is set. If that switch is not\n    --  set, then no output is generated. This call also resets the value in\n    --  Atree.Current_Error_Node to what it was before the corresponding call\n    --  to Debug_A_Entry."}, {"sha": "7ce39f4da98365952061446312bf895006fe70e0", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 20, "deletions": 35, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba077902daf195da0e5bbac33a1f34bc6b20367/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba077902daf195da0e5bbac33a1f34bc6b20367/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=dba077902daf195da0e5bbac33a1f34bc6b20367", "patch": "@@ -867,19 +867,16 @@ package body Exp_Ch7 is\n       Additional_Cleanup : List_Id) return List_Id\n    is\n       Is_Asynchronous_Call : constant Boolean :=\n-                               Nkind (N) = N_Block_Statement\n-                                 and then Is_Asynchronous_Call_Block (N);\n-      Is_Master            : constant Boolean :=\n-                               Nkind (N) /= N_Entry_Body\n-                                 and then Is_Task_Master (N);\n-      Is_Protected_Body    : constant Boolean :=\n-                               Nkind (N) = N_Subprogram_Body\n-                                 and then Is_Protected_Subprogram_Body (N);\n-      Is_Task_Allocation   : constant Boolean :=\n-                               Nkind (N) = N_Block_Statement\n-                                 and then Is_Task_Allocation_Block (N);\n-      Is_Task_Body         : constant Boolean :=\n-                               Nkind (Original_Node (N)) = N_Task_Body;\n+        Nkind (N) = N_Block_Statement and then Is_Asynchronous_Call_Block (N);\n+      Is_Master : constant Boolean :=\n+        Nkind (N) /= N_Entry_Body and then Is_Task_Master (N);\n+      Is_Protected_Subp_Body : constant Boolean :=\n+        Nkind (N) = N_Subprogram_Body\n+        and then Is_Protected_Subprogram_Body (N);\n+      Is_Task_Allocation : constant Boolean :=\n+        Nkind (N) = N_Block_Statement and then Is_Task_Allocation_Block (N);\n+      Is_Task_Body : constant Boolean :=\n+        Nkind (Original_Node (N)) = N_Task_Body;\n \n       Loc   : constant Source_Ptr := Sloc (N);\n       Stmts : constant List_Id    := New_List;\n@@ -905,7 +902,7 @@ package body Exp_Ch7 is\n       --  NOTE: The generated code references _object, a parameter to the\n       --  procedure.\n \n-      elsif Is_Protected_Body then\n+      elsif Is_Protected_Subp_Body then\n          declare\n             Spec      : constant Node_Id := Parent (Corresponding_Spec (N));\n             Conc_Typ  : Entity_Id := Empty;\n@@ -3695,9 +3692,9 @@ package body Exp_Ch7 is\n    --------------------------\n \n    procedure Build_Finalizer_Call (N : Node_Id; Fin_Id : Entity_Id) is\n-      Is_Prot_Body : constant Boolean :=\n-                       Nkind (N) = N_Subprogram_Body\n-                         and then Is_Protected_Subprogram_Body (N);\n+      Is_Protected_Subp_Body : constant Boolean :=\n+        Nkind (N) = N_Subprogram_Body\n+        and then Is_Protected_Subprogram_Body (N);\n       --  Determine whether N denotes the protected version of a subprogram\n       --  which belongs to a protected type.\n \n@@ -3733,7 +3730,7 @@ package body Exp_Ch7 is\n       --        end;\n       --     end Prot_SubpP;\n \n-      if Is_Prot_Body then\n+      if Is_Protected_Subp_Body then\n          HSS := Handled_Statement_Sequence (Last (Statements (HSS)));\n       end if;\n \n@@ -5745,24 +5742,12 @@ package body Exp_Ch7 is\n \n          if Is_Task_Allocation then\n             declare\n-               Chain : constant Entity_Id := Activation_Chain_Entity (N);\n-               Decl  : Node_Id;\n-\n+               Chain_Decl : constant N_Object_Declaration_Id :=\n+                 Parent (Activation_Chain_Entity (N));\n+               pragma Assert (List_Containing (Chain_Decl) = Decls);\n             begin\n-               Decl := First (Decls);\n-               while Nkind (Decl) /= N_Object_Declaration\n-                 or else Defining_Identifier (Decl) /= Chain\n-               loop\n-                  Next (Decl);\n-\n-                  --  A task allocation block should always include a _chain\n-                  --  declaration.\n-\n-                  pragma Assert (Present (Decl));\n-               end loop;\n-\n-               Remove (Decl);\n-               Prepend_To (New_Decls, Decl);\n+               Remove (Chain_Decl);\n+               Prepend_To (New_Decls, Chain_Decl);\n             end;\n          end if;\n "}, {"sha": "a3bd95b3b7951feef0d5e53e55169afbc555a958", "filename": "gcc/ada/nlists.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba077902daf195da0e5bbac33a1f34bc6b20367/gcc%2Fada%2Fnlists.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba077902daf195da0e5bbac33a1f34bc6b20367/gcc%2Fada%2Fnlists.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnlists.adb?ref=dba077902daf195da0e5bbac33a1f34bc6b20367", "patch": "@@ -1013,12 +1013,12 @@ package body Nlists is\n    -- Parent --\n    ------------\n \n-   function Parent (List : List_Id) return Node_Or_Entity_Id is\n+   function List_Parent (List : List_Id) return Node_Or_Entity_Id is\n    begin\n       pragma Assert (Present (List));\n       pragma Assert (List <= Lists.Last);\n       return Lists.Table (List).Parent;\n-   end Parent;\n+   end List_Parent;\n \n    ----------\n    -- Pick --\n@@ -1442,12 +1442,12 @@ package body Nlists is\n    -- Set_Parent --\n    ----------------\n \n-   procedure Set_Parent (List : List_Id; Node : Node_Or_Entity_Id) is\n+   procedure Set_List_Parent (List : List_Id; Node : Node_Or_Entity_Id) is\n    begin\n       pragma Assert (not Locked);\n       pragma Assert (List <= Lists.Last);\n       Lists.Table (List).Parent := Node;\n-   end Set_Parent;\n+   end Set_List_Parent;\n \n    --------------\n    -- Set_Prev --"}, {"sha": "3c3d6004ea54ec9b8c12f85db3356ab6487ad9c9", "filename": "gcc/ada/nlists.ads", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba077902daf195da0e5bbac33a1f34bc6b20367/gcc%2Fada%2Fnlists.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba077902daf195da0e5bbac33a1f34bc6b20367/gcc%2Fada%2Fnlists.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnlists.ads?ref=dba077902daf195da0e5bbac33a1f34bc6b20367", "patch": "@@ -348,13 +348,21 @@ package Nlists is\n    --  Called to unlock list contents when assertions are enabled; if\n    --  assertions are not enabled calling this subprogram has no effect.\n \n-   function Parent (List : List_Id) return Node_Or_Entity_Id;\n+   function List_Parent (List : List_Id) return Node_Or_Entity_Id;\n+   pragma Inline (List_Parent);\n+   function Parent (List : List_Id) return Node_Or_Entity_Id\n+     renames List_Parent;\n    pragma Inline (Parent);\n    --  Node lists may have a parent in the same way as a node. The function\n    --  accesses the Parent value, which is either Empty when a list header\n    --  is first created, or the value that has been set by Set_Parent.\n+   --  Parent has the same name as the one in Atree; List_Parent can be used\n+   --  more easily in the debugger.\n \n-   procedure Set_Parent (List : List_Id; Node : Node_Or_Entity_Id);\n+   procedure Set_List_Parent (List : List_Id; Node : Node_Or_Entity_Id);\n+   pragma Inline (Set_List_Parent);\n+   procedure Set_Parent (List : List_Id; Node : Node_Or_Entity_Id)\n+     renames Set_List_Parent;\n    pragma Inline (Set_Parent);\n    --  Sets the parent field of the given list to reference the given node\n "}, {"sha": "cda787063eb979d376d526849b0059655143769c", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba077902daf195da0e5bbac33a1f34bc6b20367/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba077902daf195da0e5bbac33a1f34bc6b20367/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=dba077902daf195da0e5bbac33a1f34bc6b20367", "patch": "@@ -6082,7 +6082,7 @@ package body Sem_Ch8 is\n                --  If not that special case, then just reset the Etype\n \n                else\n-                  Set_Etype (N, Etype (Entity (N)));\n+                  Set_Etype (N, Entyp);\n                end if;\n             end;\n          end if;"}]}