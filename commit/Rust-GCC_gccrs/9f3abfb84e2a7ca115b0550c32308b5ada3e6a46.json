{"sha": "9f3abfb84e2a7ca115b0550c32308b5ada3e6a46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWYzYWJmYjg0ZTJhN2NhMTE1YjA1NTBjMzIzMDhiNWFkYTNlNmE0Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-08-05T08:45:16Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-08-05T08:45:16Z"}, "message": "openmp: Handle even some combined non-rectangular loops\n\nThe number of loops computation and logical iteration -> actual iterator values\ncomputations can now be done separately even on composite constructs (though\nfor triangular loops it would still be more efficient to propagate a few values\nthrough, will handle that incrementally).\nsimd and taskloop are still unhandled.\n\n2020-08-05  Jakub Jelinek  <jakub@redhat.com>\n\n\t* omp-expand.c (expand_omp_for): Don't disallow combined non-rectangular\n\tloops.\n\n\t* testsuite/libgomp.c/loop-22.c: New test.\n\t* testsuite/libgomp.c/loop-23.c: New test.", "tree": {"sha": "be4f586769f553085f2c3b58255f50d73bbc0979", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be4f586769f553085f2c3b58255f50d73bbc0979"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f3abfb84e2a7ca115b0550c32308b5ada3e6a46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f3abfb84e2a7ca115b0550c32308b5ada3e6a46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f3abfb84e2a7ca115b0550c32308b5ada3e6a46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f3abfb84e2a7ca115b0550c32308b5ada3e6a46/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "916c7a201a9a1dc94f2c056a773826a26d1daca9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/916c7a201a9a1dc94f2c056a773826a26d1daca9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/916c7a201a9a1dc94f2c056a773826a26d1daca9"}], "stats": {"total": 383, "additions": 378, "deletions": 5}, "files": [{"sha": "ea4c77aff98188ecff6e77c651feefdc2b1dcd03", "filename": "gcc/omp-expand.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f3abfb84e2a7ca115b0550c32308b5ada3e6a46/gcc%2Fomp-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f3abfb84e2a7ca115b0550c32308b5ada3e6a46/gcc%2Fomp-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-expand.c?ref=9f3abfb84e2a7ca115b0550c32308b5ada3e6a46", "patch": "@@ -7640,11 +7640,6 @@ expand_omp_for (struct omp_region *region, gimple *inner_stmt)\n   else if (fd.sched_kind == OMP_CLAUSE_SCHEDULE_STATIC\n \t   && !fd.have_ordered)\n     {\n-      if (fd.non_rect\n-\t  && (gimple_omp_for_combined_into_p (fd.for_stmt)\n-\t      || gimple_omp_for_combined_p (fd.for_stmt)))\n-\tsorry_at (gimple_location (fd.for_stmt),\n-\t\t  \"non-rectangular OpenMP loops not supported yet\");\n       if (fd.chunk_size == NULL)\n \texpand_omp_for_static_nochunk (region, &fd, inner_stmt);\n       else"}, {"sha": "b07efee91f5e15b9bca9747ae752c132f27f5918", "filename": "libgomp/testsuite/libgomp.c/loop-22.c", "status": "added", "additions": 189, "deletions": 0, "changes": 189, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f3abfb84e2a7ca115b0550c32308b5ada3e6a46/libgomp%2Ftestsuite%2Flibgomp.c%2Floop-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f3abfb84e2a7ca115b0550c32308b5ada3e6a46/libgomp%2Ftestsuite%2Flibgomp.c%2Floop-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Floop-22.c?ref=9f3abfb84e2a7ca115b0550c32308b5ada3e6a46", "patch": "@@ -0,0 +1,189 @@\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+signed char v[5][7][9][21][4][42][3];\n+volatile int zero = 0, one = 1, two = 2, three = 3;\n+volatile int five = 5, seven = 7, nine = 9, eleven = 11;\n+\n+int\n+main ()\n+{\n+  for (int i = 0; i < 5; i++)\n+  for (int j = 0; j < 7; j++)\n+  for (int k = 0; k < 9; k++)\n+  for (int l = 2 * j; l < 3 * j; l++)\n+  for (int m = 7; m < 11; m++)\n+  for (int n = l; n < 2 * l; n++)\n+  for (int o = 0; o < 3; o++)\n+    v[i][j][k][l][m - 7][n][o] = 1;\n+\n+  int niters = 0;\n+  #pragma omp teams reduction(+:niters)\n+  #pragma omp distribute collapse(7)\n+  for (int i = 0; i < 5; i++)\n+  for (int j = 0; j < 7; j++)\n+  for (int k = 0; k < 9; k++)\n+  for (int l = 2 * j; l < 3 * j; l++)\n+  for (int m = 7; m < 11; m++)\n+  for (int n = l; n < 2 * l; n++)\n+  for (int o = 0; o < 3; o++)\n+    {\n+      niters++;\n+      if (i < 0 || i >= 5\n+\t  || j < 0 || j >= 7\n+\t  || k < 0 || k >= 9\n+\t  || l < 2 * j || l >= 3 * j\n+\t  || m < 7 || m >= 11\n+\t  || n < l || n >= 2 * l\n+\t  || o < 0 || o >= 3)\n+\tabort ();\n+      if (v[i][j][k][l][m - 7][n][o] != 1)\n+\tabort ();\n+      v[i][j][k][l][m - 7][n][o]++;\n+    }\n+\n+  if (niters != 117180)\n+    abort ();\n+\n+  int niters2 = 0;\n+  #pragma omp teams reduction(+:niters2)\n+  #pragma omp distribute collapse(7)\n+  for (int i = zero; i < five; i += one)\n+  for (int j = seven - one; j >= zero; j -= one)\n+  for (int k = nine - one; k >= zero; k += -one)\n+  for (int l = two * j + zero; l < three * j; l += one)\n+  for (int m = eleven - one; m >= seven; m -= one)\n+  for (int n = two * l - one; n > one * l - one; n -= one)\n+  for (int o = zero; o < three; o += one)\n+    {\n+      niters2++;\n+      if (i < 0 || i >= 5\n+\t  || j < 0 || j >= 7\n+\t  || k < 0 || k >= 9\n+\t  || l < 2 * j || l >= 3 * j\n+\t  || m < 7 || m >= 11\n+\t  || n < l || n >= 2 * l\n+\t  || o < 0 || o >= 3)\n+\tabort ();\n+      if (v[i][j][k][l][m - 7][n][o] != 2)\n+\tabort ();\n+      v[i][j][k][l][m - 7][n][o]++;\n+    }\n+\n+  if (niters2 != 117180)\n+    abort ();\n+\n+  for (int i = 0; i < 5; i++)\n+  for (int j = 0; j < 7; j++)\n+  for (int k = 0; k < 9; k++)\n+  for (int l = 2 * j; l < 3 * j; l++)\n+  for (int m = 7; m < 11; m++)\n+  for (int n = l; n < 2 * l; n++)\n+  for (int o = 0; o < 3; o++)\n+    if (v[i][j][k][l][m - 7][n][o] != 3)\n+      abort ();\n+\n+  int niters3 = 0;\n+  #pragma omp teams reduction(+:niters3)\n+  #pragma omp distribute collapse(5)\n+  for (int i = 4; i >= 0; i--)\n+  for (int j = 6; j >= 0; --j)\n+  for (int l = 3 * j - 1; l >= 2 * j; l--)\n+  for (int n = 2 * l + -1; n > l - 1; --n)\n+  for (int o = 2; o >= 0; o--)\n+    {\n+      niters3++;\n+      if (i < 0 || i >= 5\n+\t  || j < 0 || j >= 7\n+\t  || l < 2 * j || l >= 3 * j\n+\t  || n < l || n >= 2 * l\n+\t  || o < 0 || o >= 3)\n+\tabort ();\n+      if (v[i][j][0][l][0][n][o] != 3)\n+\tabort ();\n+      v[i][j][0][l][0][n][o]++;\n+    }\n+\n+  if (niters3 != 3255)\n+    abort ();\n+\n+  int niters4 = 0;\n+  #pragma omp teams reduction(+:niters4)\n+  #pragma omp distribute collapse(5)\n+  for (int i = zero; i < five; i += one)\n+  for (int j = zero; j <= seven - one; j += one)\n+  for (int l = j * two; l < three * j + zero; l += one)\n+  for (int n = one * l; n <= l * two - one; n += one)\n+  for (int o = zero; o < three; o += one)\n+    {\n+      niters4++;\n+      if (i < 0 || i >= 5\n+\t  || j < 0 || j >= 7\n+\t  || l < 2 * j || l >= 3 * j\n+\t  || n < l || n >= 2 * l\n+\t  || o < 0 || o >= 3)\n+\tabort ();\n+      if (v[i][j][0][l][0][n][o] != 4)\n+\tabort ();\n+      v[i][j][0][l][0][n][o]++;\n+    }\n+\n+  if (niters4 != 3255)\n+    abort ();\n+\n+  for (int i = 0; i < 5; i++)\n+  for (int j = 0; j < 7; j++)\n+  for (int l = 2 * j; l < 3 * j; l++)\n+  for (int n = l; n < 2 * l; n++)\n+  for (int o = 0; o < 3; o++)\n+    if (v[i][j][0][l][0][n][o] != 5)\n+      abort ();\n+\n+  int niters5 = 0;\n+  #pragma omp teams reduction(+:niters5)\n+  #pragma omp distribute collapse(3)\n+  for (int j = 6; j >= 0; --j)\n+  for (int l = 2 * j; l <= 3 * j - 1; l++)\n+  for (int n = 2 * l + -1; n > l - 1; --n)\n+    {\n+      niters5++;\n+      if (j < 0 || j >= 7\n+\t  || l < 2 * j || l >= 3 * j\n+\t  || n < l || n >= 2 * l)\n+\tabort ();\n+      if (v[0][j][0][l][0][n][0] != 5)\n+\tabort ();\n+      v[0][j][0][l][0][n][0]++;\n+    }\n+\n+  if (niters5 != 217)\n+    abort ();\n+\n+  int niters6 = 0;\n+  #pragma omp teams reduction(+:niters6)\n+  #pragma omp distribute collapse(3)\n+  for (int j = seven - one; j > - one; j -= one)\n+  for (int l = j * three - one; l >= j * two + zero; l += -one)\n+  for (int n = two * l - one; n > l - one; n -= one)\n+    {\n+      niters6++;\n+      if (j < 0 || j >= 7\n+\t  || l < 2 * j || l >= 3 * j\n+\t  || n < l || n >= 2 * l)\n+\tabort ();\n+      if (v[0][j][0][l][0][n][0] != 6)\n+\tabort ();\n+      v[0][j][0][l][0][n][0]++;\n+    }\n+\n+  if (niters6 != 217)\n+    abort ();\n+\n+  for (int j = 0; j < 7; j++)\n+  for (int l = 2 * j; l < 3 * j; l++)\n+  for (int n = l; n < 2 * l; n++)\n+    if (v[0][j][0][l][0][n][0] != 7)\n+      abort ();\n+  return 0;\n+}"}, {"sha": "30bb82c722fc7b311330c4c70d973111a8c77d3a", "filename": "libgomp/testsuite/libgomp.c/loop-23.c", "status": "added", "additions": 189, "deletions": 0, "changes": 189, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f3abfb84e2a7ca115b0550c32308b5ada3e6a46/libgomp%2Ftestsuite%2Flibgomp.c%2Floop-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f3abfb84e2a7ca115b0550c32308b5ada3e6a46/libgomp%2Ftestsuite%2Flibgomp.c%2Floop-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Floop-23.c?ref=9f3abfb84e2a7ca115b0550c32308b5ada3e6a46", "patch": "@@ -0,0 +1,189 @@\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+signed char v[5][7][9][21][4][42][3];\n+volatile int zero = 0, one = 1, two = 2, three = 3;\n+volatile int five = 5, seven = 7, nine = 9, eleven = 11;\n+\n+int\n+main ()\n+{\n+  for (int i = 0; i < 5; i++)\n+  for (int j = 0; j < 7; j++)\n+  for (int k = 0; k < 9; k++)\n+  for (int l = 2 * j; l < 3 * j; l++)\n+  for (int m = 7; m < 11; m++)\n+  for (int n = l; n < 2 * l; n++)\n+  for (int o = 0; o < 3; o++)\n+    v[i][j][k][l][m - 7][n][o] = 1;\n+\n+  int niters = 0;\n+  #pragma omp teams reduction(+:niters)\n+  #pragma omp distribute parallel for collapse(7) reduction(+:niters)\n+  for (int i = 0; i < 5; i++)\n+  for (int j = 0; j < 7; j++)\n+  for (int k = 0; k < 9; k++)\n+  for (int l = 2 * j; l < 3 * j; l++)\n+  for (int m = 7; m < 11; m++)\n+  for (int n = l; n < 2 * l; n++)\n+  for (int o = 0; o < 3; o++)\n+    {\n+      niters++;\n+      if (i < 0 || i >= 5\n+\t  || j < 0 || j >= 7\n+\t  || k < 0 || k >= 9\n+\t  || l < 2 * j || l >= 3 * j\n+\t  || m < 7 || m >= 11\n+\t  || n < l || n >= 2 * l\n+\t  || o < 0 || o >= 3)\n+\tabort ();\n+      if (v[i][j][k][l][m - 7][n][o] != 1)\n+\tabort ();\n+      v[i][j][k][l][m - 7][n][o]++;\n+    }\n+\n+  if (niters != 117180)\n+    abort ();\n+\n+  int niters2 = 0;\n+  #pragma omp teams reduction(+:niters2)\n+  #pragma omp distribute parallel for collapse(7) reduction(+:niters2)\n+  for (int i = zero; i < five; i += one)\n+  for (int j = seven - one; j >= zero; j -= one)\n+  for (int k = nine - one; k >= zero; k += -one)\n+  for (int l = two * j + zero; l < three * j; l += one)\n+  for (int m = eleven - one; m >= seven; m -= one)\n+  for (int n = two * l - one; n > one * l - one; n -= one)\n+  for (int o = zero; o < three; o += one)\n+    {\n+      niters2++;\n+      if (i < 0 || i >= 5\n+\t  || j < 0 || j >= 7\n+\t  || k < 0 || k >= 9\n+\t  || l < 2 * j || l >= 3 * j\n+\t  || m < 7 || m >= 11\n+\t  || n < l || n >= 2 * l\n+\t  || o < 0 || o >= 3)\n+\tabort ();\n+      if (v[i][j][k][l][m - 7][n][o] != 2)\n+\tabort ();\n+      v[i][j][k][l][m - 7][n][o]++;\n+    }\n+\n+  if (niters2 != 117180)\n+    abort ();\n+\n+  for (int i = 0; i < 5; i++)\n+  for (int j = 0; j < 7; j++)\n+  for (int k = 0; k < 9; k++)\n+  for (int l = 2 * j; l < 3 * j; l++)\n+  for (int m = 7; m < 11; m++)\n+  for (int n = l; n < 2 * l; n++)\n+  for (int o = 0; o < 3; o++)\n+    if (v[i][j][k][l][m - 7][n][o] != 3)\n+      abort ();\n+\n+  int niters3 = 0;\n+  #pragma omp teams reduction(+:niters3)\n+  #pragma omp distribute parallel for collapse(5) reduction(+:niters3)\n+  for (int i = 4; i >= 0; i--)\n+  for (int j = 6; j >= 0; --j)\n+  for (int l = 3 * j - 1; l >= 2 * j; l--)\n+  for (int n = 2 * l + -1; n > l - 1; --n)\n+  for (int o = 2; o >= 0; o--)\n+    {\n+      niters3++;\n+      if (i < 0 || i >= 5\n+\t  || j < 0 || j >= 7\n+\t  || l < 2 * j || l >= 3 * j\n+\t  || n < l || n >= 2 * l\n+\t  || o < 0 || o >= 3)\n+\tabort ();\n+      if (v[i][j][0][l][0][n][o] != 3)\n+\tabort ();\n+      v[i][j][0][l][0][n][o]++;\n+    }\n+\n+  if (niters3 != 3255)\n+    abort ();\n+\n+  int niters4 = 0;\n+  #pragma omp teams reduction(+:niters4)\n+  #pragma omp distribute parallel for collapse(5) reduction(+:niters4)\n+  for (int i = zero; i < five; i += one)\n+  for (int j = zero; j <= seven - one; j += one)\n+  for (int l = j * two; l < three * j + zero; l += one)\n+  for (int n = one * l; n <= l * two - one; n += one)\n+  for (int o = zero; o < three; o += one)\n+    {\n+      niters4++;\n+      if (i < 0 || i >= 5\n+\t  || j < 0 || j >= 7\n+\t  || l < 2 * j || l >= 3 * j\n+\t  || n < l || n >= 2 * l\n+\t  || o < 0 || o >= 3)\n+\tabort ();\n+      if (v[i][j][0][l][0][n][o] != 4)\n+\tabort ();\n+      v[i][j][0][l][0][n][o]++;\n+    }\n+\n+  if (niters4 != 3255)\n+    abort ();\n+\n+  for (int i = 0; i < 5; i++)\n+  for (int j = 0; j < 7; j++)\n+  for (int l = 2 * j; l < 3 * j; l++)\n+  for (int n = l; n < 2 * l; n++)\n+  for (int o = 0; o < 3; o++)\n+    if (v[i][j][0][l][0][n][o] != 5)\n+      abort ();\n+\n+  int niters5 = 0;\n+  #pragma omp teams reduction(+:niters5)\n+  #pragma omp distribute parallel for collapse(3) reduction(+:niters5)\n+  for (int j = 6; j >= 0; --j)\n+  for (int l = 2 * j; l <= 3 * j - 1; l++)\n+  for (int n = 2 * l + -1; n > l - 1; --n)\n+    {\n+      niters5++;\n+      if (j < 0 || j >= 7\n+\t  || l < 2 * j || l >= 3 * j\n+\t  || n < l || n >= 2 * l)\n+\tabort ();\n+      if (v[0][j][0][l][0][n][0] != 5)\n+\tabort ();\n+      v[0][j][0][l][0][n][0]++;\n+    }\n+\n+  if (niters5 != 217)\n+    abort ();\n+\n+  int niters6 = 0;\n+  #pragma omp teams reduction(+:niters6)\n+  #pragma omp distribute parallel for collapse(3) reduction(+:niters6)\n+  for (int j = seven - one; j > - one; j -= one)\n+  for (int l = j * three - one; l >= j * two + zero; l += -one)\n+  for (int n = two * l - one; n > l - one; n -= one)\n+    {\n+      niters6++;\n+      if (j < 0 || j >= 7\n+\t  || l < 2 * j || l >= 3 * j\n+\t  || n < l || n >= 2 * l)\n+\tabort ();\n+      if (v[0][j][0][l][0][n][0] != 6)\n+\tabort ();\n+      v[0][j][0][l][0][n][0]++;\n+    }\n+\n+  if (niters6 != 217)\n+    abort ();\n+\n+  for (int j = 0; j < 7; j++)\n+  for (int l = 2 * j; l < 3 * j; l++)\n+  for (int n = l; n < 2 * l; n++)\n+    if (v[0][j][0][l][0][n][0] != 7)\n+      abort ();\n+  return 0;\n+}"}]}