{"sha": "3eab78f4e61cc95bb25cab00010d52680ba578f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VhYjc4ZjRlNjFjYzk1YmIyNWNhYjAwMDEwZDUyNjgwYmE1NzhmMQ==", "commit": {"author": {"name": "Chao-ying Fu", "email": "fu@mips.com", "date": "2012-04-24T18:23:12Z"}, "committer": {"name": "Chao-ying Fu", "email": "chaoyingfu@gcc.gnu.org", "date": "2012-04-24T18:23:12Z"}, "message": "config.gcc (mips64*-*-linux*): Append mips/linux-common.h to tm_file.\n\n2012-04-24  Chao-ying Fu  <fu@mips.com>\n\n\t* config.gcc (mips64*-*-linux*): Append mips/linux-common.h to tm_file.\n\t(mips*-*-linux*): Append mips/linux-common.h to tm_file.\n\t* config/mips/gnu-user.h\n\t(SUBTARGET_CC1_SPEC): Use GNU_USER_TARGET_CC1_SPEC directly.\n\t(GNU_USER_TARGET_LINK_SPEC): New define.\n\t(LINK_SPEC): Use GNU_USER_TARGET_LINK_SPEC.\n\t(LIB_SPEC): Use GNU_USER_TARGET_LIB_SPEC directly.\n\t(GNU_USER_TARGET_MATHFILE_SPEC): New define.\n\t(ENDFILE_SPEC): Use GNU_USER_TARGET_MATHFILE_SPEC and\n\tGNU_USER_TARGET_ENDFILE_SPEC.\n\t* config/mips/gnu-user64.h (LIB_SPEC): Remove.\n\t(GNU_USER_TARGET_LINK_SPEC): New define.\n\t(LINK_SPEC): Use GNU_USER_TARGET_LINK_SPEC.\n\t* config/mips/linux-common.h: New file.\n\nFrom-SVN: r186777", "tree": {"sha": "4cd8ec9ac6be53676fd43c78648297349efb278c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cd8ec9ac6be53676fd43c78648297349efb278c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3eab78f4e61cc95bb25cab00010d52680ba578f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eab78f4e61cc95bb25cab00010d52680ba578f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3eab78f4e61cc95bb25cab00010d52680ba578f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eab78f4e61cc95bb25cab00010d52680ba578f1/comments", "author": null, "committer": null, "parents": [{"sha": "e900e6bd3072d0683c96c1ebfdaf214521f1e6db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e900e6bd3072d0683c96c1ebfdaf214521f1e6db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e900e6bd3072d0683c96c1ebfdaf214521f1e6db"}], "stats": {"total": 112, "additions": 92, "deletions": 20}, "files": [{"sha": "96e0fb9723af813ebb291bb47c1482041793c5a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eab78f4e61cc95bb25cab00010d52680ba578f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eab78f4e61cc95bb25cab00010d52680ba578f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3eab78f4e61cc95bb25cab00010d52680ba578f1", "patch": "@@ -1,3 +1,20 @@\n+2012-04-24  Chao-ying Fu  <fu@mips.com>\n+\n+\t* config.gcc (mips64*-*-linux*): Append mips/linux-common.h to tm_file.\n+\t(mips*-*-linux*): Append mips/linux-common.h to tm_file.\n+\t* config/mips/gnu-user.h\n+\t(SUBTARGET_CC1_SPEC): Use GNU_USER_TARGET_CC1_SPEC directly.\n+\t(GNU_USER_TARGET_LINK_SPEC): New define.\n+\t(LINK_SPEC): Use GNU_USER_TARGET_LINK_SPEC.\n+\t(LIB_SPEC): Use GNU_USER_TARGET_LIB_SPEC directly.\n+\t(GNU_USER_TARGET_MATHFILE_SPEC): New define.\n+\t(ENDFILE_SPEC): Use GNU_USER_TARGET_MATHFILE_SPEC and\n+\tGNU_USER_TARGET_ENDFILE_SPEC.\n+\t* config/mips/gnu-user64.h (LIB_SPEC): Remove.\n+\t(GNU_USER_TARGET_LINK_SPEC): New define.\n+\t(LINK_SPEC): Use GNU_USER_TARGET_LINK_SPEC.\n+\t* config/mips/linux-common.h: New file.\n+\n 2012-04-24  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR target/47197"}, {"sha": "6e4666ed7dc55c23c84e1483e124cb8c8714ef8a", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eab78f4e61cc95bb25cab00010d52680ba578f1/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eab78f4e61cc95bb25cab00010d52680ba578f1/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=3eab78f4e61cc95bb25cab00010d52680ba578f1", "patch": "@@ -1712,7 +1712,7 @@ mips*-*-netbsd*)\t\t\t# NetBSD/mips, either endian.\n \textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt\"\n \t;;\n mips64*-*-linux* | mipsisa64*-*-linux*)\n-\ttm_file=\"dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h ${tm_file} mips/gnu-user.h mips/gnu-user64.h mips/linux64.h\"\n+\ttm_file=\"dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h ${tm_file} mips/gnu-user.h mips/gnu-user64.h mips/linux64.h mips/linux-common.h\"\n \ttmake_file=\"${tmake_file} mips/t-linux64\"\n \ttm_defines=\"${tm_defines} MIPS_ABI_DEFAULT=ABI_N32\"\n \tcase ${target} in\n@@ -1738,6 +1738,7 @@ mips*-*-linux*)\t\t\t\t# Linux MIPS, either endian.\n \t\ttm_file=\"${tm_file} mips/gnu-user64.h mips/linux64.h\"\n \t\ttmake_file=\"${tmake_file} mips/t-linux64\"\n \tfi\n+\ttm_file=\"${tm_file} mips/linux-common.h\"\n \tcase ${target} in\n         mipsisa32r2*)\n \t\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=33\""}, {"sha": "d35ddac22a17f23bad1ea5cd00f8af51ecaaf658", "filename": "gcc/config/mips/gnu-user.h", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eab78f4e61cc95bb25cab00010d52680ba578f1/gcc%2Fconfig%2Fmips%2Fgnu-user.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eab78f4e61cc95bb25cab00010d52680ba578f1/gcc%2Fconfig%2Fmips%2Fgnu-user.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fgnu-user.h?ref=3eab78f4e61cc95bb25cab00010d52680ba578f1", "patch": "@@ -46,23 +46,25 @@ along with GCC; see the file COPYING3.  If not see\n    CC1_SPEC itself by config/linux.h, but mips.h overrides CC1_SPEC\n    and provides this hook instead.  */\n #undef SUBTARGET_CC1_SPEC\n-#define SUBTARGET_CC1_SPEC \"%{profile:-p}\"\n+#define SUBTARGET_CC1_SPEC GNU_USER_TARGET_CC1_SPEC\n \n /* -G is incompatible with -KPIC which is the default, so only allow objects\n    in the small data section if the user explicitly asks for it.  */\n #undef MIPS_DEFAULT_GVALUE\n #define MIPS_DEFAULT_GVALUE 0\n \n /* Borrowed from sparc/linux.h */\n-#undef LINK_SPEC\n-#define LINK_SPEC \\\n+#undef GNU_USER_TARGET_LINK_SPEC\n+#define GNU_USER_TARGET_LINK_SPEC \\\n  \"%(endian_spec) \\\n   %{shared:-shared} \\\n   %{!shared: \\\n     %{!static: \\\n       %{rdynamic:-export-dynamic} \\\n       -dynamic-linker \" GNU_USER_DYNAMIC_LINKER \"} \\\n       %{static:-static}}\"\n+#undef LINK_SPEC\n+#define LINK_SPEC GNU_USER_TARGET_LINK_SPEC\n \n #undef SUBTARGET_ASM_SPEC\n #define SUBTARGET_ASM_SPEC \\\n@@ -90,11 +92,7 @@ along with GCC; see the file COPYING3.  If not see\n #undef ASM_OUTPUT_REG_POP\n \n #undef LIB_SPEC\n-#define LIB_SPEC \"\\\n-%{pthread:-lpthread} \\\n-%{shared:-lc} \\\n-%{!shared: \\\n-  %{profile:-lc_p} %{!profile:-lc}}\"\n+#define LIB_SPEC GNU_USER_TARGET_LIB_SPEC\n \n #ifdef HAVE_AS_NO_SHARED\n /* Default to -mno-shared for non-PIC.  */\n@@ -133,7 +131,10 @@ extern const char *host_detect_local_cpu (int argc, const char **argv);\n   LINUX_DRIVER_SELF_SPECS\n \n /* Similar to standard Linux, but adding -ffast-math support.  */\n+#undef\tGNU_USER_TARGET_MATHFILE_SPEC\n+#define GNU_USER_TARGET_MATHFILE_SPEC \\\n+  \"%{Ofast|ffast-math|funsafe-math-optimizations:crtfastmath.o%s}\"\n #undef  ENDFILE_SPEC\n #define ENDFILE_SPEC \\\n-  \"%{Ofast|ffast-math|funsafe-math-optimizations:crtfastmath.o%s} \\\n-   %{shared|pie:crtendS.o%s;:crtend.o%s} crtn.o%s\"\n+  GNU_USER_TARGET_MATHFILE_SPEC \" \" \\\n+  GNU_USER_TARGET_ENDFILE_SPEC"}, {"sha": "ad59ba4c7520d568974ed47c39cf6b51bafc2184", "filename": "gcc/config/mips/gnu-user64.h", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eab78f4e61cc95bb25cab00010d52680ba578f1/gcc%2Fconfig%2Fmips%2Fgnu-user64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eab78f4e61cc95bb25cab00010d52680ba578f1/gcc%2Fconfig%2Fmips%2Fgnu-user64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fgnu-user64.h?ref=3eab78f4e61cc95bb25cab00010d52680ba578f1", "patch": "@@ -27,15 +27,8 @@ along with GCC; see the file COPYING3.  If not see\n   \" %{!EB:%{!EL:%(endian_spec)}}\" \\\n   \" %{!mabi=*: -\" MULTILIB_ABI_DEFAULT \"}\"\n \n-#undef LIB_SPEC\n-#define LIB_SPEC \"\\\n-%{pthread:-lpthread} \\\n-%{shared:-lc} \\\n-%{!shared: \\\n-  %{profile:-lc_p} %{!profile:-lc}}\"\n-\n-#undef LINK_SPEC\n-#define LINK_SPEC \"\\\n+#undef GNU_USER_TARGET_LINK_SPEC\n+#define GNU_USER_TARGET_LINK_SPEC \"\\\n %{G*} %{EB} %{EL} %{mips1} %{mips2} %{mips3} %{mips4} \\\n %{shared} \\\n  %(endian_spec) \\\n@@ -49,6 +42,8 @@ along with GCC; see the file COPYING3.  If not see\n %{mabi=n32:-m\" GNU_USER_LINK_EMULATIONN32 \"} \\\n %{mabi=64:-m\" GNU_USER_LINK_EMULATION64 \"} \\\n %{mabi=32:-m\" GNU_USER_LINK_EMULATION32 \"}\"\n+#undef LINK_SPEC\n+#define LINK_SPEC GNU_USER_TARGET_LINK_SPEC\n \n #undef LOCAL_LABEL_PREFIX\n #define LOCAL_LABEL_PREFIX (TARGET_OLDABI ? \"$\" : \".\")"}, {"sha": "b811b46eaf7979f42fd45c51ee0a06e5f2e1cf66", "filename": "gcc/config/mips/linux-common.h", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eab78f4e61cc95bb25cab00010d52680ba578f1/gcc%2Fconfig%2Fmips%2Flinux-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eab78f4e61cc95bb25cab00010d52680ba578f1/gcc%2Fconfig%2Fmips%2Flinux-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux-common.h?ref=3eab78f4e61cc95bb25cab00010d52680ba578f1", "patch": "@@ -0,0 +1,58 @@\n+/* Definitions for MIPS running Linux-based GNU systems with ELF format.\n+   Copyright (C) 2012 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#undef  TARGET_OS_CPP_BUILTINS\n+#define TARGET_OS_CPP_BUILTINS()\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\\\n+    GNU_USER_TARGET_OS_CPP_BUILTINS();\t\t\t\t\\\n+    /* The GNU C++ standard library requires this.  */\t\t\\\n+    if (c_dialect_cxx ())\t\t\t\t\t\\\n+      builtin_define (\"_GNU_SOURCE\");\t\t\t\t\\\n+    ANDROID_TARGET_OS_CPP_BUILTINS();\t\t\t\t\\\n+  } while (0)\n+\n+#undef  LINK_SPEC\n+#define LINK_SPEC\t\t\t\t\t\t\t\\\n+  LINUX_OR_ANDROID_LD (GNU_USER_TARGET_LINK_SPEC,\t\t\t\\\n+\t\t       GNU_USER_TARGET_LINK_SPEC \" \" ANDROID_LINK_SPEC)\n+\n+#undef  SUBTARGET_CC1_SPEC\n+#define SUBTARGET_CC1_SPEC\t\t\t\t\t\t\\\n+  LINUX_OR_ANDROID_CC (GNU_USER_TARGET_CC1_SPEC,\t\t\t\\\n+\t\t       GNU_USER_TARGET_CC1_SPEC \" \" ANDROID_CC1_SPEC)\n+\n+#undef  CC1PLUS_SPEC\n+#define CC1PLUS_SPEC\t\t\t\t\t\t\t\\\n+  LINUX_OR_ANDROID_CC (\"\", ANDROID_CC1PLUS_SPEC)\n+\n+#undef  LIB_SPEC\n+#define LIB_SPEC\t\t\t\t\t\t\t\\\n+  LINUX_OR_ANDROID_LD (GNU_USER_TARGET_LIB_SPEC,\t\t\t\\\n+\t\t       GNU_USER_TARGET_LIB_SPEC \" \" ANDROID_LIB_SPEC)\n+\n+#undef  STARTFILE_SPEC\n+#define STARTFILE_SPEC\t\t\t\t\t\t\t\\\n+  LINUX_OR_ANDROID_LD (GNU_USER_TARGET_STARTFILE_SPEC, ANDROID_STARTFILE_SPEC)\n+\n+#undef  ENDFILE_SPEC\n+#define ENDFILE_SPEC\t\t\t\t\t\t\t\\\n+  LINUX_OR_ANDROID_LD (GNU_USER_TARGET_MATHFILE_SPEC \" \"\t\t\\\n+\t\t       GNU_USER_TARGET_ENDFILE_SPEC,\t\t\t\\\n+\t\t       GNU_USER_TARGET_MATHFILE_SPEC \" \"\t\t\\\n+\t\t       ANDROID_ENDFILE_SPEC)"}]}