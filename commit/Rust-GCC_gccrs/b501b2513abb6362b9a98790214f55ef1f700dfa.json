{"sha": "b501b2513abb6362b9a98790214f55ef1f700dfa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjUwMWIyNTEzYWJiNjM2MmI5YTk4NzkwMjE0ZjU1ZWYxZjcwMGRmYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-03-26T07:46:50Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-03-26T07:46:50Z"}, "message": "Resync.\n\nFrom-SVN: r133589", "tree": {"sha": "bfa711f3749464729846eec23c7222a2802a642f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfa711f3749464729846eec23c7222a2802a642f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b501b2513abb6362b9a98790214f55ef1f700dfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b501b2513abb6362b9a98790214f55ef1f700dfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b501b2513abb6362b9a98790214f55ef1f700dfa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b501b2513abb6362b9a98790214f55ef1f700dfa/comments", "author": null, "committer": null, "parents": [{"sha": "da50876659b92539a199e1c1771c9ae107892894", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da50876659b92539a199e1c1771c9ae107892894", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da50876659b92539a199e1c1771c9ae107892894"}], "stats": {"total": 605, "additions": 605, "deletions": 0}, "files": [{"sha": "a0f5499ea1ee417aa104aaeee07dfebbc823377b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 605, "deletions": 0, "changes": 605, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b501b2513abb6362b9a98790214f55ef1f700dfa/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b501b2513abb6362b9a98790214f55ef1f700dfa/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b501b2513abb6362b9a98790214f55ef1f700dfa", "patch": "@@ -1,3 +1,608 @@\n+2008-03-26  Thomas Quinot  <quinot@adacore.com>\n+\n+PR ada/33688\n+\n+\t* g-socket.ads, g-socket.adb (Options, Set_Socket_Option,\n+\tGet_Socket_Option): Add support for Receive_Packet_Info.\n+\n+\t* g-soccon.ads, g-soccon-tru64.ads, g-soccon-aix.ads,\n+\tg-soccon-irix.ads, g-soccon-hpux.ads, g-soccon-solaris.ads,\n+\tg-soccon-vms.ads, g-soccon-mingw.ads, g-soccon-freebsd.ads,\n+\tg-soccon-hpux-ia64.ads, g-soccon-solaris-64.ads, g-soccon-darwin.ads,\n+\tg-soccon-lynxos.ads, g-soccon-linux-64.ads, g-soccon-linux-x86.ads: Add\n+\tnew constants SO_REUSEPORT and IP_PKTINFO\n+\n+2008-03-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-taster.adb, s-shasto.adb, s-soflin.adb, s-taasde.adb, s-taenca.adb,\n+\ta-sytaco.adb, a-sytaco.ads, a-tasatt.adb, a-taside.adb,\n+\ta-intnam-lynxos.ads, a-retide.adb, a-intnam-tru64.ads, a-intnam-aix.ads,\n+\ta-intnam-irix.ads, a-intnam-hpux.ads, a-intnam-linux.ads,\n+\ta-intnam-solaris.ads, a-caldel-vms.adb, a-intnam-vms.ads,\n+\ta-excpol-abort.adb, a-intnam-mingw.ads, s-interr.adb, s-interr.ads,\n+\ts-intman.ads, s-gloloc.adb, s-osinte-lynxos-3.ads,\n+\ts-interr-sigaction.adb, s-osinte-hpux.ads, s-osinte-solaris-posix.ads,\n+\ta-intnam-freebsd.ads, s-osinte-freebsd.ads, s-osinte-lynxos.ads,\n+\ts-taspri-lynxos.ads, s-osinte-tru64.ads, s-osinte-tru64.ads,\n+\ts-taspri-tru64.ads, s-osinte-aix.ads, s-osinte-irix.ads,\n+\ts-osinte-hpux-dce.ads, s-taprop-hpux-dce.adb, s-taspri-hpux-dce.ads,\n+\ts-osinte-linux.ads, s-osinte-dummy.ads, s-taprop-dummy.adb,\n+\ts-taspri-dummy.ads, s-interr-dummy.adb, s-osinte-solaris.ads,\n+\ts-osinte-mingw.ads, s-taprop-solaris.adb, s-taspri-solaris.ads,\n+\ts-inmaop-vms.adb, s-interr-vms.adb, s-intman-vms.ads, s-osinte-vms.ads,\n+\ts-osinte-vms.ads, s-taprop-vms.adb, s-taspri-vms.ads,\n+\ts-taspri-mingw.ads, s-interr-vxworks.adb, s-inmaop-posix.adb,\n+\ts-intman-vxworks.ads, s-osinte-vxworks.ads, s-osprim-vxworks.adb,\n+\ts-taspri-vxworks.ads, s-taspri-posix.ads, a-caldel.adb, a-calend.adb,\n+\ta-elchha.adb, a-dynpri.adb, a-except.adb, a-except.ads, a-interr.ads,\n+\ta-textio.adb, a-tigeau.ads, atree.adb, s-taprob.adb, s-taprop.ads,\n+\ts-tarest.adb, s-tarest.ads, s-tasini.adb, s-taskin.adb, s-taskin.ads,\n+\ts-tasque.adb, s-tasren.adb, s-tasren.ads, s-tassta.adb, s-tassta.ads,\n+\ts-tasuti.adb, s-tataat.adb, s-tataat.ads, s-tpoben.adb, s-tpoben.ads,\n+\ts-tpobop.adb, s-tpobop.ads, s-tposen.adb, s-tposen.ads, s-valrea.adb,\n+\ts-valuti.adb, a-intnam-darwin.ads, s-osinte-darwin.ads, s-solita.adb,\n+\ta-ztinau.ads, s-osinte-linux-hppa.ads, a-except-2005.adb,\n+\ta-except-2005.ads, a-rttiev.adb, s-osinte-vxworks6.ads, s-regexp.adb,\n+\ts-tasloc.adb: Minor reformatting.\n+\tUpdate comments.\n+\tRemove \"used for\" sections from comments.\n+\n+2008-03-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-tpopsp-posix.adb, s-tpopsp-solaris.adb, s-tpopsp-posix-foreign.adb,\n+\ts-tpopsp-lynxos.adb, s-tpopde-vms.ads, s-tpopde-vms.adb,\n+\ts-tpopsp-vxworks.adb, s-casi16.adb, s-caun16.adb, s-inmaop.ads,\n+\ts-tadeca.adb, s-tadeca.ads, s-tadert.adb, s-tadert.ads, s-tpinop.adb,\n+\ts-tpinop.ads, s-tporft.adb, a-rbtgso.adb, a-crbtgo.ads, a-crbtgo.adb,\n+\ta-crbtgk.ads, a-crbtgk.adb, a-ciorse.adb, a-cihama.ads, a-cihama.adb,\n+\ta-cidlli.ads, a-cidlli.adb, a-chtgop.ads, a-chtgop.adb, a-cgcaso.ads,\n+\ta-cgcaso.adb, a-cgaaso.adb, a-ciormu.adb, a-cihase.adb, a-swuwha.ads,\n+\ta-rbtgso.ads, a-cgaaso.ads, a-cgaaso.ads, a-ciorma.adb, a-chtgke.ads,\n+\ta-chtgke.adb, a-llfzti.ads, a-ztenau.adb, a-ztenau.ads, a-stzhas.ads,\n+\ta-szbzha.ads, a-szbzha.adb, a-crdlli.ads, a-crdlli.ads, a-crdlli.adb,\n+\ti-forbla-darwin.adb, i-forbla.ads, s-regexp.adb, a-nllrar.ads,\n+\ta-nlrear.ads, a-nucoar.ads, a-nurear.ads, i-forlap.ads, s-gearop.adb,\n+\ts-gearop.ads, s-gecobl.adb, s-gecobl.ads, s-gecola.adb, s-gecola.ads,\n+\ts-gerebl.adb, s-gerela.ads, a-swuwha.adb, i-forbla-unimplemented.ads,\n+\tdouble spaced if it fits on one line and otherwise single spaced.\n+\n+2008-03-26  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-taprop-irix.adb, s-taprop-tru64.adb, s-taprop-lynxos.adb, \n+\ts-taprop-linux.adb, s-taprop-mingw.adb, s-taprop-vxworks.adb, \n+\ts-taprop-posix.adb (Create_Task): Do not attempt to set task priority\n+\tor task info if the thread could not be created.\n+\n+2008-03-26  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gnatvsn.ads (Library_Version): Bump to 4.4.\n+\t(Current_Year): Bump to 2008.\n+\n+2008-03-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* ali.ads, ali.adb (Optimize_Alignment_Setting): New field in ALI record\n+\n+\t* bcheck.adb (Check_Consistent_Optimize_Alignment): New procedure\n+\n+\t* debug.adb: Add debug flags d.r and d.v\n+\tAdd debug flag .T (Optimize_Alignment (Time))\n+\tAdd debug flag .S (Optimize_Alignment (Space))\n+\n+\t* freeze.adb (Freeze_Record_Type): Set OK_To_Reorder_Components\n+\tdepending on setting of relevant debug flags.\n+\tReplace use of Warnings_Off by Has_Warnings_Off\n+\t(Freeze_Entity): In circuit for warning on suspicious convention\n+\tactuals, do not give warning if subprogram has same entity as formal\n+\ttype, or if subprogram does not come from source.\n+\t(Freeze_Entity): Don't reset Is_Packed for fully rep speced record\n+\tif Optimize_Alignment set to Space.\n+\n+\t* frontend.adb: Add call to Sem_Warn.Initialize\n+\tAdd call to Sem_Warn.Output_Unused_Warnings_Off_Warnings\n+\tReset Optimize_Alignment mode from debug switches .S and .T\n+\n+\t* layout.adb (Layout_Composite_Object): Rewritten for\n+\tOptimize_Aligment pragma.\n+\n+\t* lib-writ.ads, lib-writ.adb: New Ox parameter for Optimize_Alignment\n+\tmode.\n+\n+\t* opt.ads, opt.adb: (Optimize_Alignment): New global switch\n+\n+\t* par-prag.adb (N_Pragma): Chars field removed, use Chars\n+\t(Pragma_Identifier (..  instead, adjustments throughout to accomodate\n+\tthis change. Add entry for pragma Optimize_Alignment\n+\n+\t* sem_prag.adb (N_Pragma): Chars field removed, use Chars\n+\t(Pragma_Identifier (..\n+\tinstead, adjustments throughout to accomodate this change.\n+\t(Process_Compile_Time_Warning_Or_Error): Use !! for generated msg\n+\t(Favor_Top_Level): Use new function Is_Access_Subprogram_Type\n+\tAdd implementation of pragma Optimize_Alignment\n+\n+2008-03-26  Vincent Celier  <celier@adacore.com>\n+\n+\t* a-szuzti.adb, a-swuwti.adb, a-suteio.adb (functions Get_Line):\n+\tImprove memory usage to avoid use of stack.\n+\n+2008-03-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-teioed.ads: Correct value of Default_Fill\n+\n+\t* a-teioed.adb (Image): Use Fill_Character instead of '*' to fill\n+\n+2008-03-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-ztexio.adb, a-ztexio.ads, a-witeio.ads, a-witeio.adb: Fix problem\n+\twith Current_Output (introduce Self).\n+\n+2008-03-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* checks.adb (Ensure_Valid): Capture valid status if possible\n+\t(eliminate checks)\n+\n+2008-03-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* stand.ads: Deal with reordering of package standard declarations\n+\n+\t* cstand.adb: Put package Standard declarations in proper order\n+\n+2008-03-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* einfo.ads, einfo.adb (N_Pragma): Chars field removed, use Chars\n+\t(Pragma_Identifier (.. instead.\n+\t(OK_To_Reorder_Components): New flag\n+\t(Has_Entries): Code cleanup.\n+\t(Warnings_Off_Used): New flag\n+\t(Warnings_Off_Used_Unmodified): New flag\n+\t(Warnings_Off_Used_Unreferenced): New flag\n+\t(Has_Warnings_Off): New function\n+\t(Has_Unmodified): New function\n+\t(Has_Unreferenced): New function\n+\t(Is_Trivial_Subprogram): New flag\n+\t(Is_Static_Dispatch_Table_Entity): New attribute.\n+\tChange name Access_Subprogram_Type_Kind to Access_Subprogram_Kind\n+\t(more consistent with other similar names)\n+\t(Access_Subprogram_Type): New classification function\n+\n+2008-03-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* errout.ads: Document new !! insertion sequence\n+\n+\t* errout.adb (N_Pragma): Chars field removed, use Chars\n+\t(Pragma_Identifier (..  instead.\n+\tReplace use of Warnings_Off by Has_Warnings_Off\n+\t(Error_Msg_Internal): Don't delete warning ending in !!\n+\n+2008-03-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* par.adb (Check_No_Right_Paren): Removed no longer used\n+\n+\t* par-ch10.adb (N_Pragma): Chars field removed, use Chars\n+\t(Pragma_Identifier (..  instead.\n+\n+\t* par-ch10.adb (P_Subunit): Improvement in error recovery and message\n+\n+\t* par-tchk.adb, par-ch5.adb, par-ch6.adb, par-ch3.adb,\n+\tpar-ch4.adb: Minor improvements in error recovery and messages.\n+\n+\t* erroutc.adb (Test_Style_Warning_Serious_Msg): Treat style msgs as\n+\tnon-serious\n+\n+\t* par-ch9.adb: Minor improvements in error recovery and messages\n+\t(P_Protected): Better error recovery for \"protected type x;\"\n+\n+\t* par-util.adb: Minor improvements in error recovery and messages\n+\t(Check_No_Right_Paren): Removed no longer used\n+\n+2008-03-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_aggr.adb (Replace_Type): When checking for self-reference, verify\n+\tthat the prefix of an attribute is the type of the aggregate being\n+\texpanded.\n+\n+2008-03-26  Javier Miranda  <miranda@adacore.com>\n+\t    Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_attr.adb (N_Pragma): Chars field removed.\n+\t(Expand_N_Attribute_Reference): If the designated type associated with\n+\tattribute 'Unrestricted_Access is a subprogram entity then replace it\n+\tby an E_Subprogram_Type itype.\n+\tImplement attribute Old\n+\n+\t* sem_attr.ads (Attribute_Class_Array): Move to snames.ads\n+\n+\t* sem_attr.adb (Build_Access_Subprogram_Itype): Add documentation.\n+\tReplace call to\n+\tNew_Internal_Entity by call to Create_Itype to centralize calls\n+\tbuilding itypes, ad propagate the convention of the designated\n+\tsubprogram. In addition, disable the machinery cleaning constant\n+\tindications from all entities in current scope when 'Unrestricted_Access\n+\tcorresponds with a node initializing a dispatch table slot.\n+\t(Analyze_Attribute): Parameterless attributes returning a string or a\n+\ttype will not be called with improper arguments, so we can remove junk\n+\tcode that was dealing with this case.\n+\tImplement attribute Old\n+\n+\t* snames.ads, snames.h, snames.adb: Add entries for attribute Old\n+\tAdd entry for pragma Optimize_Alignment\n+\tNew standard names Sync and Synchronize\n+\n+2008-03-26  Robert Dewar  <dewar@adacore.com>\n+\t    Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* exp_ch11.adb (Expand_At_End_Handler): Set From_At_End flag on raise\n+\tstmt.\n+\t(No_Exception_Propagation_Active): New function.\n+\t(Expand_Exception_Handlers): Use No_Exception_Propagation_Active.\n+\tUpdate comments, and review all uses of No_Exception_Propagation, which\n+\tare now correct and in sync with what gigi expects.\n+\n+\t* restrict.ads, restrict.adb (No_Exception_Propagation_Active): New\n+\tfunction.\n+\t(Expand_Exception_Handlers): Use No_Exception_Propagation_Active.\n+\tUpdate comments, and review all uses of No_Exception_Propagation, which\n+\tare now correct and in sync with what gigi expects.\n+\n+2008-03-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Access_Definition): If the access type is the return\n+\tresult of a protected function, create an itype reference for it\n+\tbecause usage will be in an inner scope from the point of declaration.\n+\t(Build_Derived_Record_Type): Inherit Reverse_Bit_Order and\n+\tOK_To_Reorder_Components.\n+\t(Make_Index): If an overloaded range includes a universal integer\n+\tinterpretation, resolve to Standard.Integer.\n+\t(Analyze_Subtype_Indication): Copy Convention to subtype\n+\t(Check_Abstract_Interfaces): Complete semantic checks on the legality of\n+\tlimited an synchronized progenitors in type declaration and private\n+\textension declarations.\n+\n+\t* exp_ch13.adb (Expand_N_Freeze_Entity): If the scope of the entity is a\n+\tprotected subprogram body, determine proper scope from subprogram\n+\tdeclaration.\n+\n+2008-03-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Op_Concat): Remove special tests for\n+\tNo_Run_Time_Mode\n+\n+2008-03-26  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_ch5.adb (Expand_N_Extended_Return_Statement): Suppress generation\n+\tof a heap allocator for a limited unconstrained function return when\n+\tresstriction No_Allocators is active.\n+\t(Analyze_Allocator): The restriction No_Allocators is now only checked\n+\ton allocators that have Comes_From_Source set, as per RM-H.4(7).\n+\n+\t* sem_ch4.adb (Expand_N_Extended_Return_Statement): Suppress generation\n+\tof a heap allocator for a limited unconstrained function return when\n+\tresstriction No_Allocators is active.\n+\t(Analyze_Allocator): The restriction No_Allocators is now only checked\n+\ton allocators that have Comes_From_Source set, as per RM-H.4(7).\n+\t(Has_Fixed_Op):  If the name in a function call is Standard.\"*\" and the\n+\toperands are fixed-point types, the universal_fixed predefined operation\n+\tis used, regardless of whether the operand type (s) have a primitive\n+\toperation of the same name.\n+\n+2008-03-26  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_disp.adb (Make_DT, Make_Secondary_DT): Set attribute\n+\tIs_Static_Dispatch_Table\n+\t(Build_Dispatch_Tables): Replace calls to Exchange_Entities() by calls\n+\tto Exchange_Declarations to exchange the private and full-view. Bug\n+\tfound working in this issue.\n+\t(Expand_Dispatching_Call): Propagate the convention of the subprogram\n+\tto the subprogram pointer type.\n+\t(Make_Secondary_DT): Replace generation of Prim'Address by\n+\tAddress (Prim'Unrestricted_Access)\n+\t(Make_DT): Replace generation of Prim'Address by\n+\tAddress (Prim'Unrestricted_Access)\n+\t(Make_Disp_*_Bodies): When compiling for a restricted profile, use\n+\tsimple call form for single entry.\n+\t(Make_DT): Handle new contents of Access_Disp_Table (access to dispatch\n+\ttables of predefined primitives).\n+\t(Make_Secondary_DT): Add support to handle access to dispatch tables of\n+\tpredefined primitives.\n+\t(Make_Tags): Add entities to Access_Dispatch_Table associated with\n+\taccess to dispatch tables containing predefined primitives.\n+\n+\t* exp_ch6.adb (N_Pragma): Chars field removed, use Chars\n+\t(Pragma_Identifier (..  instead, adjustments throughout to accomodate\n+\tthis change.\n+\t(Register_Predefined_DT_Entry): Updated to handle the new contents\n+\tof attribute Access_Disp_Table (pointers to dispatch tables containing\n+\tpredefined primitives).\n+\n+\t* exp_util.ads, exp_util.adb (Corresponding_Runtime_Package): New\n+\tsubprogram.\n+\t(Find_Interface_ADT): Updated to skip the new contents of attribute\n+\tAccess_Dispatch_Table (pointers to dispatch tables containing predefined\n+\tprimitives).\n+\n+\t* sem_util.adb (Has_Abstract_Interfaces): Add missing support for\n+\tconcurrent types.\n+\t(Set_Convention): Use new function Is_Access_Subprogram_Type\n+\t(Collect_Interfaces_Info): Updated to skip the new contents of attribute\n+\tAccess_Dispatch_Table (pointers to dispatch tables containing predefined\n+\tprimitives).\n+\n+\t* exp_atag.ads, exp_atag.adb (Build_Inherit_Predefined_Prims): Improve\n+\texpanded code avoiding calls to Build_Predef_Prims.\n+\t(Build_Set_Predefined_Prim_Op_Address): Improve expanded code avoiding\n+\tcall to Build_Get_Predefined_Prim_Op_Address.\n+\n+2008-03-26  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch7.adb (Make_Clean): Code cleanup using the new centralized\n+\tsubprogram Corresponding_Runtime_Package to know the runtime package\n+\tthat will provide support to a given protected type.\n+\n+\t* exp_ch9.adb (Add_Private_Declarations,\n+\tBuild_Protected_Subprogram_Call,\n+\tBuild_Protected_Entry, Build_Simple_Entry_Call,\n+\tExpand_N_Protected_Body, Expand_N_Protected_Type_Declaration,\n+\tExpand_N_Timed_Entry_Call, Make_Initialize_Protection): Code\n+\tcleanup using the new centralized subprogram Corresponding_Runtime\n+\tPackage to know the runtime package that provides support to\n+\ta given protected type.\n+\n+2008-03-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_pakd.adb (Expand_Bit_Packed_Element_Set): If the component\n+\tassignment is within the initialization procedure for a packed array,\n+\tand Initialize_Scalars is enabled, compile right-hand side with checks\n+\toff, because the value is purposely out of range.\n+\n+2008-03-26  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatcmd.adb: Add processing for GNAT SYNC\n+\n+\t* vms_conv.ads: (Command_Type): Add command Sync\n+\n+\t* vms_conv.adb (Initialize): Add Command_List data for new command Sync\n+\n+\t* vms_data.ads: Add entries for -gnatw.w\n+\tAdd qualifier for gnatstub --header-file option\n+\tAdd switches for GNAT SYNC\n+\n+\t* prj-attr.ads, prj-attr.adb: Add new package Synchronize for GNAT SYNC\n+\t(Add_Package_Name): New procedure\n+\t(Package_Name_List): New function\n+\t(Initialize): Add known package names to the list\n+\t(Register_New_Package): Add the new package name to the list\n+\n+2008-03-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* g-pehage.adb, g-regist.adb, g-spipat.ads, g-spipat.adb,\n+\ts-asthan.adb, s-parint.adb, s-rpc.adb, s-stchop.adb: Replace\n+\tRaise_Exception by \"raise with\" construct.\n+\n+2008-03-26  Pascal Obry  <obry@adacore.com>\n+\n+\t* Makefile.in: Add proper GNAT.Serial_Communications implementation on\n+\tsupported platforms.\n+\t\n+\t* Makefile.rtl: Add g-sercom.o.\n+\t\n+\t* impunit.adb: Add g-sercom.adb.\n+\t\n+\t* s-crtl.ads (open): New routine.\n+\t(close): Likewise.\n+\t(write): Likewise.\n+\t\n+\t* s-osinte-mingw.ads (BYTE): New type.\n+\t(CHAR): Likewise.\n+\t(OVERLAPPED): Likewise.\n+\t(GENERIC_READ): New constant.\n+\t(GENERIC_WRITE): Likewise.\n+\t(OPEN_EXISTING): Likewise.\n+\t(PSECURITY_ATTRIBUTES): Removed this type, use anonymous access\n+\ttype instead.\n+\t(CreateFile): New routine.\n+\t(WriteFile): Likewise.\n+\t(ReadFile): Likewise.\n+\t(CloseHandle): Move next to the other file oriented routines.\n+\n+\t* g-sercom.ads: New unit.\n+\n+\t* g-sercom.adb: Default implementation, calls to this unit will raise\n+\ta program error exception.\n+\t\n+\t* g-sercom-mingw.adb, g-sercom-linux.adb: Windows and\n+\tGNU/Linux implementations.\n+\n+2008-03-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* itypes.adb (Create_Itype): Use new name Access_Subprogram_Kind\n+\n+\t* sem_ch13.adb (Validate_Unchecked_Conversion): Give warning for\n+\tunchecked conversion for different conventions only for subprogram\n+\tpointers or on VMS.\n+\n+2008-03-26  Vincent Celier  <celier@adacore.com>\n+\n+\t* osint-c.adb (Set_Library_Info_Name): Use canonical case file names\n+\tto check if the specified object file is correct.\n+\n+2008-03-26  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_cat.adb (Validate_RACW_Primitives): Do not rely on\n+\tComes_From_Source to exclude primitives from being checked. We want to\n+\texclude predefined primitives only, so use the appropriate specific\n+\tpredicate. Also, flag a formal parameter of an anonymous\n+\taccess-to-subprogram type as illegal for a primitive operation of a\n+\tremote access to class-wide type.\n+\n+2008-03-26  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-dect.adb (Parse_Package_Declaration): When a package name is not\n+\tknown, check if it may be a missspelling of a known package name. In\n+\tnot verbose, not mode, issue warnings only if the package name is a\n+\tpossible misspelling.\n+\tIn verbose mode, always issue a warning for a not known package name,\n+\tplus a warning if the name is a misspelling of a known package name.\n+\n+\t* prj-part.adb (Post_Parse_Context_Clause): Modify so that only non\n+\tlimited withs or limited withs are parse during one call.\n+\t(Parse_Single_Project): Post parse context clause in two passes: non\n+\tlimited withs before current project and limited withs after current\n+\tproject.\n+\n+\t* prj-proc.adb (Imported_Or_Extended_Project_From): Returns an extended\n+\tproject with the name With_Name, even if it is only extended indirectly.\n+\t(Recursive_Process): Process projects in order: first single withs, then\n+\tcurrent project, then limited withs.\n+\n+\t* prj-tree.adb (Imported_Or_Extended_Project_Of): Returns an extended\n+\tproject with the name With_Name, even if it is only extended indirectly.\n+\n+2008-03-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* scn.adb (Initialize_Scanner): Format messages belong on standard error\n+\n+2008-03-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch10.adb (Analyze_Compilation_Unit): if a unit in the context is\n+\ta generic subprogram that is imported, do not attempt to compile\n+\tnon-existent body.\n+\n+\t* sem_ch12.adb (Instantiate_Subprogram_Body): if the generic is\n+\timported, do not generate a raise_program_error for the non-existent\n+\tbody.\n+\t(Pre_Analyze_Actuals): If an error is detected during pre-analysis,\n+\tperform minimal name resolution on the generic to avoid spurious\n+\twarnings.\n+\t(Find_Actual_Type): the designated type of the actual in a child unit\n+\tmay be declared in a parent unit without being an actual.\n+\n+2008-03-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch11.adb: Fix No_Exception_Restriction violation for SJLJ\n+\t* sinfo.ads, sinfo.adb (From_At_End): New flag\n+\n+2008-03-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Subprogram_Body): Remove spurious check on\n+\toperations that have an interface parameter.\n+\t(Analyze_Subprogram_Body): Set Is_Trivial_Subprogram flag\n+\tDon't treat No_Return call as raise.\n+\n+\t* sem_disp.adb (Check_Dispatching_Operations): apply check for\n+\tnon-primitive interface primitives to access parameters, not to all\n+\tparameters of an access type.\n+\n+2008-03-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch7.adb (Install_Parent_Private_Declarations): If the private\n+\tdeclarations of a parent unit are made visible when compiling a child\n+\tinstance, the parent is not a hidden open scope, even though it may\n+\tcontain other pending instance.\n+\t\n+\t* sem_ch8.adb (Restore_Scope_Stack): If an entry on the stack is a\n+\thidden open scope for some child instance, it does affect the\n+\tvisibility status of other stach entries.\n+\t(Analyze_Object_Renaming): Check that a class-wide object cannot be\n+\trenamed as an object of a specific type.\n+\n+2008-03-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_res.adb (Check_Infinite_Recursion): Diagnose definite infinite\n+\trecursion and raise SE directly.\n+\t(Resolve_Actuals): Reset Never_Set_In_Source if warnings off is\n+\tset for formal type for IN mode parameter.\n+\n+2008-03-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_warn.ads, sem_warn.adb (Warnings_Off_Pragmas): New table\n+\t(Initialize): New procedure\n+\t(Output_Warnings_Off_Warnings): New procedure\n+\t(Check_References): Suppress certain msgs if Is_Trivial_Subprogram\n+\t(Output_Non_Modifed_In_Out_Warnings): Ditto\n+\t(Warn_On_Unreferenced_Entity): Ditto\n+\n+2008-03-26  Vincent Celier  <celier@adacore.com>\n+\n+\t* a-direct.adb (Start_Search): Raise Use_Error if the directory is not\n+\treadable.\n+\n+2008-03-26  Matthew Heaney  <heaney@adacore.com>\n+\n+\t* a-ciorse.ads, a-cidlli.ads, a-cdlili.ads, a-cihase.ads, a-cohase.ads, \n+\ta-ciorma.ads, a-coorma.ads, a-ciormu.ads, a-coormu.ads, a-coorse.ads:\n+\tMarked with clauses as private, and controlled operations as overriding\n+\n+2008-03-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* g-byorma.adb (Read_BOM): Reorder tests so that UTF_32 is recognized\n+\n+2008-03-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* back_end.adb, back_end.ads: Minor reformatting\n+\n+\t* bindgen.adb: Minor clarification of comments\n+\n+\t* fname.ads: Minor comment fixes\n+\n+\t* g-altive.ads, g-catiio.ads, g-trasym.ads, prj.ads,\n+\tprj-nmsc.adb, sem_aggr.adb: Minor reformatting\n+\n+\t* xeinfo.adb, xnmake.adb, xsinfo.adb, xtreeprs.adb,\n+\txsnames.adb: Remove warnings off pragma no longer needed\n+\n+\t* a-catizo.ads, a-calari.ads, a-calfor.adb,\n+\ta-calfor.ads: Fix header.\n+\n+2008-03-26  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* init.c: Do not adjust pc for HPARITH on alpha/vms.\n+\n+2008-03-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* lib-xref.adb: (OK_To_Set_Reference): New function\n+\t(Generate_Reference): Don't set referenced from occurrence in Warnings,\n+\tUnmodified, or Unreferenced pragma\n+\n+2008-03-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* alloc.ads: Add entries for Warnings_Off_Pragmas table\n+\n+2008-03-26  GNAT Script  <nobody@adacore.com>\n+\n+\t* Make-lang.in: Makefile automatically updated\n+\n+2008-03-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* tbuild.ads, tbuild.adb, trans.c, sprint.adb, exp_prag.adb, decl.c,\n+\tpar-ch2.adb, sem_elab.adb, sem_util.ads (N_Pragma): Chars field\n+\tremoved, use Chars (Pragma_Identifier (..  instead, adjustments\n+\tthroughout to accomodate this change.\n+\n+\t* s-pooglo.ads, s-pooloc.ads: Minor comment updates\n+\n+\t* exp_dbug.adb: Use Sem_Util.Set_Debug_Info_Needed (not\n+\tEinfo.Set_Needs_Debug_Info)\n+\n+2008-03-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_ugn.texi: Add documentation for -gnatw.w/-gnatw.W\n+\tAdd description for the new gnatstub option '--header-file'\n+\tclarification of -gnatwz/-gnatwZ\n+\tAdd a \"Irix-Specific Considerations\" section to document the need to\n+\tset LD_LIBRARY_PATH when using the default shared runtime library.\n+\tAdded documentation for both gcov and gprof.\n+\n+\t* gnat_rm.texi: Document that pragma Compile_Time_Warning generates\n+\tmessages that are not suppressed when clients are compiled.\n+\tAdd documentation of s-pooglo s-pooloc\n+\tDocument the new GNAT.Serial_Communications API.\n+\tAdd documentation for 'Old attribute\n+\tAdd description of pragma Optimize_Alignment\n+\n+\t* ug_words: Add entries for -gnatw.w -gnatw.W\n+\n+\t* usage.adb: Add line for -gnatw.w (warn on warnings off)\n+\n 2008-03-25  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tRevert"}]}