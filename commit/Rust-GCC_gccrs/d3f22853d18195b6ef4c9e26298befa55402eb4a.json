{"sha": "d3f22853d18195b6ef4c9e26298befa55402eb4a", "node_id": "C_kwDOANBUbNoAKGQzZjIyODUzZDE4MTk1YjZlZjRjOWUyNjI5OGJlZmE1NTQwMmViNGE", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-11-23T10:27:29Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-11-23T10:27:29Z"}, "message": "docs: Remove 2 more duplicite param descriptions.\n\ngcc/ChangeLog:\n\n\t* doc/invoke.texi: Remove 2 more duplicite param descriptions.", "tree": {"sha": "e8c25010d9acff2273a69baefad41e45bb6d56e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8c25010d9acff2273a69baefad41e45bb6d56e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3f22853d18195b6ef4c9e26298befa55402eb4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3f22853d18195b6ef4c9e26298befa55402eb4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3f22853d18195b6ef4c9e26298befa55402eb4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3f22853d18195b6ef4c9e26298befa55402eb4a/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cd440670078af89d82cbb67e01a5ecec8eec238", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cd440670078af89d82cbb67e01a5ecec8eec238", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cd440670078af89d82cbb67e01a5ecec8eec238"}], "stats": {"total": 8, "additions": 0, "deletions": 8}, "files": [{"sha": "57675a476e3c590a4b754a31282778dddb9e218a", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3f22853d18195b6ef4c9e26298befa55402eb4a/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3f22853d18195b6ef4c9e26298befa55402eb4a/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=d3f22853d18195b6ef4c9e26298befa55402eb4a", "patch": "@@ -14791,14 +14791,6 @@ Maximum number of arrays per scop.\n @item max-vartrack-reverse-op-size\n Max. size of loc list for which reverse ops should be added.\n \n-@item tracer-dynamic-coverage-feedback\n-The percentage of function, weighted by execution frequency,\n-that must be covered by trace formation.\n-Used when profile feedback is available.\n-\n-@item max-inline-recursive-depth-auto\n-The maximum depth of recursive inlining for non-inline functions.\n-\n @item fsm-scale-path-stmts\n Scale factor to apply to the number of statements in a threading path\n when comparing to the number of (scaled) blocks."}]}