{"sha": "08993ffb5277066fcdb082fdb9a03bdbabd766a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg5OTNmZmI1Mjc3MDY2ZmNkYjA4MmZkYjlhMDNiZGJhYmQ3NjZhNg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2018-10-05T17:07:17Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-10-05T17:07:17Z"}, "message": "i386.md (*cmpxf_i387): Change operand 2 predicate to reg_or_0_operand.\n\n\t* config/i386/i386.md (*cmpxf_i387): Change operand 2 predicate\n\tto reg_or_0_operand.  Add \"C\" constraint.\n\t(*cmpxf_cc_i387): Ditto.\n\t(*cmp<mode>_i387): Change operand 2 predicate\n\tto nonimm_or_0_operand.  Add \"C\" constraint.\n\t(*cmp<mode>_cc_i387): Ditto.\n\t(*cmp<mode>_0_i387): Remove insn pattern.\n\t(*cmp<mode>_0_cc_i387): Ditto.\n\nFrom-SVN: r264879", "tree": {"sha": "065fabf137b2930e863600763f060888d937e672", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/065fabf137b2930e863600763f060888d937e672"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08993ffb5277066fcdb082fdb9a03bdbabd766a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08993ffb5277066fcdb082fdb9a03bdbabd766a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08993ffb5277066fcdb082fdb9a03bdbabd766a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08993ffb5277066fcdb082fdb9a03bdbabd766a6/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "808d8de5a2325bc04709e953328c3377493b0557", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/808d8de5a2325bc04709e953328c3377493b0557", "html_url": "https://github.com/Rust-GCC/gccrs/commit/808d8de5a2325bc04709e953328c3377493b0557"}], "stats": {"total": 53, "additions": 15, "deletions": 38}, "files": [{"sha": "3451e7bae25c56c47c1c68575cfc136177504938", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08993ffb5277066fcdb082fdb9a03bdbabd766a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08993ffb5277066fcdb082fdb9a03bdbabd766a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=08993ffb5277066fcdb082fdb9a03bdbabd766a6", "patch": "@@ -1,3 +1,14 @@\n+2018-10-05  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*cmpxf_i387): Change operand 2 predicate\n+\tto reg_or_0_operand.  Add \"C\" constraint.\n+\t(*cmpxf_cc_i387): Ditto.\n+\t(*cmp<mode>_i387): Change operand 2 predicate\n+\tto nonimm_or_0_operand.  Add \"C\" constraint.\n+\t(*cmp<mode>_cc_i387): Ditto.\n+\t(*cmp<mode>_0_i387): Remove insn pattern.\n+\t(*cmp<mode>_0_cc_i387): Ditto.\n+\n 2018-10-05  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/constraints.md (\"C\"): Do not depend on TARGET_SSE."}, {"sha": "d7afb6a0bdaf63e26c91900849fb2fe466d7c496", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 4, "deletions": 38, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08993ffb5277066fcdb082fdb9a03bdbabd766a6/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08993ffb5277066fcdb082fdb9a03bdbabd766a6/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=08993ffb5277066fcdb082fdb9a03bdbabd766a6", "patch": "@@ -1461,52 +1461,18 @@\n   DONE;\n })\n \n-\n ;; FP compares, step 1:\n ;; Set the FP condition codes and move fpsr to ax.\n \n ;; We may not use \"#\" to split and emit these\n ;; due to reg-stack pops killing fpsr.\n \n-(define_insn \"*cmp<mode>_0_i387\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n-\t(unspec:HI\n-\t  [(compare:CCFP\n-\t     (match_operand:X87MODEF 1 \"register_operand\" \"f\")\n-\t     (match_operand:X87MODEF 2 \"const0_operand\"))]\n-\tUNSPEC_FNSTSW))]\n-  \"TARGET_80387\"\n-  \"* return output_fp_compare (insn, operands, false, false);\"\n-  [(set_attr \"type\" \"multi\")\n-   (set_attr \"unit\" \"i387\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_insn_and_split \"*cmp<mode>_0_cc_i387\"\n-  [(set (reg:CCFP FLAGS_REG)\n-\t(compare:CCFP\n-\t  (match_operand:X87MODEF 1 \"register_operand\" \"f\")\n-\t  (match_operand:X87MODEF 2 \"const0_operand\")))\n-   (clobber (match_operand:HI 0 \"register_operand\" \"=a\"))]\n-  \"TARGET_80387 && TARGET_SAHF && !TARGET_CMOVE\"\n-  \"#\"\n-  \"&& reload_completed\"\n-  [(set (match_dup 0)\n-\t(unspec:HI\n-\t  [(compare:CCFP (match_dup 1)(match_dup 2))]\n-\tUNSPEC_FNSTSW))\n-   (set (reg:CC FLAGS_REG)\n-\t(unspec:CC [(match_dup 0)] UNSPEC_SAHF))]\n-  \"\"\n-  [(set_attr \"type\" \"multi\")\n-   (set_attr \"unit\" \"i387\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n (define_insn \"*cmpxf_i387\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n \t(unspec:HI\n \t  [(compare:CCFP\n \t     (match_operand:XF 1 \"register_operand\" \"f\")\n-\t     (match_operand:XF 2 \"register_operand\" \"f\"))]\n+\t     (match_operand:XF 2 \"reg_or_0_operand\" \"fC\"))]\n \t  UNSPEC_FNSTSW))]\n   \"TARGET_80387\"\n   \"* return output_fp_compare (insn, operands, false, false);\"\n@@ -1518,7 +1484,7 @@\n   [(set (reg:CCFP FLAGS_REG)\n \t(compare:CCFP\n \t  (match_operand:XF 1 \"register_operand\" \"f\")\n-\t  (match_operand:XF 2 \"register_operand\" \"f\")))\n+\t  (match_operand:XF 2 \"reg_or_0_operand\" \"fC\")))\n    (clobber (match_operand:HI 0 \"register_operand\" \"=a\"))]\n   \"TARGET_80387 && TARGET_SAHF && !TARGET_CMOVE\"\n   \"#\"\n@@ -1539,7 +1505,7 @@\n \t(unspec:HI\n \t  [(compare:CCFP\n \t     (match_operand:MODEF 1 \"register_operand\" \"f\")\n-\t     (match_operand:MODEF 2 \"nonimmediate_operand\" \"fm\"))]\n+\t     (match_operand:MODEF 2 \"nonimm_or_0_operand\" \"fmC\"))]\n \t  UNSPEC_FNSTSW))]\n   \"TARGET_80387\"\n   \"* return output_fp_compare (insn, operands, false, false);\"\n@@ -1551,7 +1517,7 @@\n   [(set (reg:CCFP FLAGS_REG)\n \t(compare:CCFP\n \t  (match_operand:MODEF 1 \"register_operand\" \"f\")\n-\t  (match_operand:MODEF 2 \"nonimmediate_operand\" \"fm\")))\n+\t  (match_operand:MODEF 2 \"nonimm_or_0_operand\" \"fmC\")))\n    (clobber (match_operand:HI 0 \"register_operand\" \"=a\"))]\n   \"TARGET_80387 && TARGET_SAHF && !TARGET_CMOVE\"\n   \"#\""}]}