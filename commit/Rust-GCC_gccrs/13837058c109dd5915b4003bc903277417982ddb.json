{"sha": "13837058c109dd5915b4003bc903277417982ddb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM4MzcwNThjMTA5ZGQ1OTE1YjQwMDNiYzkwMzI3NzQxNzk4MmRkYg==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-04-22T10:20:05Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-04-22T10:20:05Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r815", "tree": {"sha": "8117994cf5875a1e923b3bb2611acdc320304328", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8117994cf5875a1e923b3bb2611acdc320304328"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13837058c109dd5915b4003bc903277417982ddb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13837058c109dd5915b4003bc903277417982ddb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13837058c109dd5915b4003bc903277417982ddb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13837058c109dd5915b4003bc903277417982ddb/comments", "author": null, "committer": null, "parents": [{"sha": "078fb2a455f6202658ca0b944fcd9e183ceedfd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/078fb2a455f6202658ca0b944fcd9e183ceedfd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/078fb2a455f6202658ca0b944fcd9e183ceedfd7"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "c620a220f831a8f311630b161e32862b90f92662", "filename": "gcc/fold-const.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13837058c109dd5915b4003bc903277417982ddb/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13837058c109dd5915b4003bc903277417982ddb/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=13837058c109dd5915b4003bc903277417982ddb", "patch": "@@ -3486,7 +3486,7 @@ fold (expr)\n \t\t    {\n \t\t    case 0:\n \t\t      /* Always false.  */\n-\t\t      return convert (type, integer_zero_node);\n+\t\t      return omit_one_operand (type, integer_zero_node, arg0);\n \t\t    case 1:\n \t\t      code = LT_EXPR;\n \t\t      break;\n@@ -3507,10 +3507,12 @@ fold (expr)\n \t\t      break;\n \t\t    case 7:\n \t\t      /* Always true.  */\n-\t\t      return convert (type, integer_one_node);\n+\t\t      return omit_one_operand (type, integer_one_node, arg0);\n \t\t    }\n \n-\t\t  return fold (build (code, type, cval1, cval2));\n+\t\t  return omit_one_operand (type, \n+\t\t\t\t\t   fold (build (code, type, cval1, cval2)),\n+\t\t\t\t\t   arg0);\n \t\t}\n \t    }\n \t}"}]}