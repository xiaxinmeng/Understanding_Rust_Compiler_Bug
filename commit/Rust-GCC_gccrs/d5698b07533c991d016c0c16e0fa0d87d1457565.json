{"sha": "d5698b07533c991d016c0c16e0fa0d87d1457565", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU2OThiMDc1MzNjOTkxZDAxNmMwYzE2ZTBmYTBkODdkMTQ1NzU2NQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-10-03T22:59:10Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-10-03T22:59:10Z"}, "message": "new\n\nFrom-SVN: r22801", "tree": {"sha": "fc41a33dd17f9a5a031afe0869bd25af73bbac1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc41a33dd17f9a5a031afe0869bd25af73bbac1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5698b07533c991d016c0c16e0fa0d87d1457565", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5698b07533c991d016c0c16e0fa0d87d1457565", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5698b07533c991d016c0c16e0fa0d87d1457565", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5698b07533c991d016c0c16e0fa0d87d1457565/comments", "author": null, "committer": null, "parents": [{"sha": "5eea678fdb01a450e7f4108527029ce1582ac823", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eea678fdb01a450e7f4108527029ce1582ac823", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5eea678fdb01a450e7f4108527029ce1582ac823"}], "stats": {"total": 127, "additions": 127, "deletions": 0}, "files": [{"sha": "2fd95e52bd7ab0f81a97ae91c4a61f2dc6dc763a", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p16146.C", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5698b07533c991d016c0c16e0fa0d87d1457565/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp16146.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5698b07533c991d016c0c16e0fa0d87d1457565/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp16146.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp16146.C?ref=d5698b07533c991d016c0c16e0fa0d87d1457565", "patch": "@@ -0,0 +1,89 @@\n+// prms-id: 16146\n+\n+extern \"C\" int printf (const char *, ...);\n+\n+class myFoundation {\n+protected:\n+  myFoundation () { count = 0; };\n+  virtual ~myFoundation () {};\n+\n+public:\n+  void addRef () { ++count; }\n+  void removeRef () { if (count > 0) --count; }\n+\n+private:\n+  long count;\n+};\n+\n+\n+class firstIntermediate :virtual public myFoundation {\n+public:\n+  firstIntermediate () {};\n+  ~firstIntermediate () {};\n+\n+  void bar () { printf (\"Bar\\n\"); }\n+};\n+\n+\n+class firstBase\t:  public firstIntermediate {\n+public:\n+  firstBase () {};\n+  ~firstBase () {};\n+\n+  virtual void g () {};\n+};\n+\n+\n+class secondIntermediate : virtual public myFoundation {\n+public:\n+  secondIntermediate () {};\n+  ~secondIntermediate () {};\n+\n+  virtual void h () {};\n+};\n+\n+\n+class secondBase : public secondIntermediate {\n+public:\n+  secondBase () {};\n+  ~secondBase () {};\n+\n+  virtual void h () {};\n+};\n+\n+\n+class typeInterface : virtual public firstBase {\n+public:\n+  typeInterface () {};\n+  ~typeInterface () {};\n+\n+  virtual void i () {};\n+};\n+\n+class classServices : virtual public firstBase,\n+\t\t      public secondBase {\n+public:\n+  classServices () {};\n+  ~classServices () {};\n+\n+  virtual void j () {};\n+};\n+\n+class classImplementation : public typeInterface,\n+\t\t\t    public classServices {\n+public:\n+  classImplementation () {};\n+  ~classImplementation () {};\n+\n+  void g () {};\n+  void h () {};\n+  void i () {};\n+  void j () {};\n+};\n+\n+main () {\n+  firstBase* fbp = new classImplementation;\n+  classImplementation* cip = dynamic_cast <classImplementation*> (fbp);\n+  cip->addRef();\n+  myFoundation* mfp = cip;\n+}"}, {"sha": "547ae3101fd88d53f74ac7be47baaf2ba25e3063", "filename": "gcc/testsuite/g++.old-deja/g++.ns/using9.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5698b07533c991d016c0c16e0fa0d87d1457565/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fusing9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5698b07533c991d016c0c16e0fa0d87d1457565/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fusing9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fusing9.C?ref=d5698b07533c991d016c0c16e0fa0d87d1457565", "patch": "@@ -0,0 +1,24 @@\n+// Test for proper merging of functions from multiple using directives.\n+\n+// Build don't link:\n+\n+namespace standard \n+{ void print(int) {};\n+  void dump(int)  {};\n+}\n+namespace A { using standard::print; }\n+namespace B { using namespace standard; }\n+namespace User\n+{ using namespace standard; \n+  using namespace A;\n+  void test()\n+  {  print(1); }\n+  // egcs-1.1: call of overloaded `print (int)' is ambiguous\n+}\n+namespace User2\n+{ using namespace standard;\n+  using namespace B;\n+  void test()\n+  { print(1); } // egcs has no problems here\n+}\n+"}, {"sha": "65a2848a2b1557e1b9b537d3f61679e3fc951f82", "filename": "gcc/testsuite/g++.old-deja/g++.other/linkage1.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5698b07533c991d016c0c16e0fa0d87d1457565/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flinkage1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5698b07533c991d016c0c16e0fa0d87d1457565/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flinkage1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flinkage1.C?ref=d5698b07533c991d016c0c16e0fa0d87d1457565", "patch": "@@ -0,0 +1,14 @@\n+typedef struct {\n+  int i;\n+} *p;\n+\n+void f (p) { }\t\t\t// ERROR - function uses anonymous type\n+p q;\n+\n+int main()\n+{\n+  extern p j;\n+  struct A { int j; };\n+  extern A a;\t\t\t// ERROR - extern uses local type\n+  extern void f (A);\t\t// ERROR - extern uses local type\n+}"}]}