{"sha": "01ea23f3d250c13a0097cd22e6d36390941c4c97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFlYTIzZjNkMjUwYzEzYTAwOTdjZDIyZTZkMzYzOTA5NDFjNGM5Nw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2006-02-15T20:41:03Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2006-02-15T20:41:03Z"}, "message": "re PR middle-end/26300 (ICE in trunc_int_for_mode)\n\n\tPR middle-end/26300\n\t* combine.c (make_extraction): Bail out if ORIG_POS is negative.\n\n\t* gcc.c-torture/compile/20060215-1.c: New test.\n\nFrom-SVN: r111116", "tree": {"sha": "f3b03f728a76b77ce4adaca3c4525a06bed79409", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3b03f728a76b77ce4adaca3c4525a06bed79409"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01ea23f3d250c13a0097cd22e6d36390941c4c97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01ea23f3d250c13a0097cd22e6d36390941c4c97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01ea23f3d250c13a0097cd22e6d36390941c4c97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01ea23f3d250c13a0097cd22e6d36390941c4c97/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fb57dc0bf0b060e936dbb376ceca3eca35c15787", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb57dc0bf0b060e936dbb376ceca3eca35c15787", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb57dc0bf0b060e936dbb376ceca3eca35c15787"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "9b388d6cf2b093a01a1e236250cada86b202673b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ea23f3d250c13a0097cd22e6d36390941c4c97/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ea23f3d250c13a0097cd22e6d36390941c4c97/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=01ea23f3d250c13a0097cd22e6d36390941c4c97", "patch": "@@ -1,5 +1,8 @@\n 2006-02-15  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/26300\n+\t* combine.c (make_extraction): Bail out if ORIG_POS is negative.\n+\n \t* tree.h (struct tree_omp_clause): Use OMP_CLAUSE_CODE rather\n \tthan TREE_CODE as index into omp_clause_num_ops array.\n "}, {"sha": "96ebd208a825730ae623a5acc1e7d167a46bd652", "filename": "gcc/combine.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ea23f3d250c13a0097cd22e6d36390941c4c97/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ea23f3d250c13a0097cd22e6d36390941c4c97/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=01ea23f3d250c13a0097cd22e6d36390941c4c97", "patch": "@@ -6249,6 +6249,9 @@ make_extraction (enum machine_mode mode, rtx inner, HOST_WIDE_INT pos,\n \t      || orig_pos + len > GET_MODE_BITSIZE (wanted_inner_mode)))\n \treturn 0;\n \n+      if (orig_pos < 0)\n+\treturn 0;\n+\n       inner = force_to_mode (inner, wanted_inner_mode,\n \t\t\t     pos_rtx\n \t\t\t     || len + orig_pos >= HOST_BITS_PER_WIDE_INT"}, {"sha": "d22edd340f29bc8e0876bd7a8b34a6e1dc91531c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ea23f3d250c13a0097cd22e6d36390941c4c97/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ea23f3d250c13a0097cd22e6d36390941c4c97/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=01ea23f3d250c13a0097cd22e6d36390941c4c97", "patch": "@@ -1,3 +1,8 @@\n+2006-02-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/26300\n+\t* gcc.c-torture/compile/20060215-1.c: New test.\n+\n 2006-02-14  Roger Sayle  <roger@eyesopen.com>\n \n \tPR middle-end/23670"}, {"sha": "7979561a3e6900ffdc920c7f767bbde3e15ecd4c", "filename": "gcc/testsuite/gcc.c-torture/compile/20060215-1.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ea23f3d250c13a0097cd22e6d36390941c4c97/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20060215-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ea23f3d250c13a0097cd22e6d36390941c4c97/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20060215-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20060215-1.c?ref=01ea23f3d250c13a0097cd22e6d36390941c4c97", "patch": "@@ -0,0 +1,42 @@\n+/* PR middle-end/26300 */\n+\n+struct S\n+{\n+  char c;\n+  struct S *d;\n+  struct S *e;\n+};\n+extern struct S *u, *v;\n+extern void fn1 (struct S *) __attribute__ ((noreturn));\n+void fn2 (struct S *);\n+\n+static inline struct S *\n+fn3 (struct S *x)\n+{\n+  if (x->c != 6)\n+    fn1 (0);\n+  return (struct S *) x;\n+}\n+\n+static inline int\n+fn4 (struct S *x)\n+{\n+  if (x != u)\n+    return 3;\n+  fn2 (x);\n+  return 0;\n+}\n+\n+int\n+test (struct S *x)\n+{\n+  struct S *r;\n+  int m = 0;\n+\n+  for (r = x; r != v; r = (fn3 (r)->d))\n+    if (r->c != 6)\n+      fn1 (x);\n+    else\n+      m |= 1 << (fn4 (fn3 (r)->e) - 1);\n+  return m;\n+}"}]}