{"sha": "9820b3897803c38f66f8515dc15cdb3e10c7ad20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTgyMGIzODk3ODAzYzM4ZjY2Zjg1MTVkYzE1Y2RiM2UxMGM3YWQyMA==", "commit": {"author": {"name": "Jerome Lambourg", "email": "lambourg@adacore.com", "date": "2018-05-22T13:26:49Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-22T13:26:49Z"}, "message": "[Ada] Fix retrieval of number of CPUs on QNX\n\nAlthough the sysconf SC_NPROCESSORS_ONLN is also defined by the API, the\nonly documented way to retrieve the number of CPUs is by using the syspage.\n\nThis also better organise the QNX-specific macros in adaint.c\n\n2018-05-22  Jerome Lambourg  <lambourg@adacore.com>\n\ngcc/ada/\n\n\t* adaint.c: Reorganize QNX-specific macros, use syspage to retreive the\n\tnumber of CPUs.\n\nFrom-SVN: r260531", "tree": {"sha": "5200ed8a157dd822e2fb3d68b2ae0a75efe2ef6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5200ed8a157dd822e2fb3d68b2ae0a75efe2ef6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9820b3897803c38f66f8515dc15cdb3e10c7ad20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9820b3897803c38f66f8515dc15cdb3e10c7ad20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9820b3897803c38f66f8515dc15cdb3e10c7ad20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9820b3897803c38f66f8515dc15cdb3e10c7ad20/comments", "author": {"login": "lambourg", "id": 480233, "node_id": "MDQ6VXNlcjQ4MDIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/480233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambourg", "html_url": "https://github.com/lambourg", "followers_url": "https://api.github.com/users/lambourg/followers", "following_url": "https://api.github.com/users/lambourg/following{/other_user}", "gists_url": "https://api.github.com/users/lambourg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambourg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambourg/subscriptions", "organizations_url": "https://api.github.com/users/lambourg/orgs", "repos_url": "https://api.github.com/users/lambourg/repos", "events_url": "https://api.github.com/users/lambourg/events{/privacy}", "received_events_url": "https://api.github.com/users/lambourg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "817659c5f32786062f09befbf7132723441556b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/817659c5f32786062f09befbf7132723441556b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/817659c5f32786062f09befbf7132723441556b6"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "3805c22cbeda95859a92d24111fbe202d480f62d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9820b3897803c38f66f8515dc15cdb3e10c7ad20/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9820b3897803c38f66f8515dc15cdb3e10c7ad20/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9820b3897803c38f66f8515dc15cdb3e10c7ad20", "patch": "@@ -1,3 +1,8 @@\n+2018-05-22  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* adaint.c: Reorganize QNX-specific macros, use syspage to retreive the\n+\tnumber of CPUs.\n+\n 2018-05-22  Jerome Lambourg  <lambourg@adacore.com>\n \n \t* sigtramp-qnx.c: Properly restore link register in signal trampoline."}, {"sha": "9e0919e5dfa86ec50f8c58c3ee12237d9d509080", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9820b3897803c38f66f8515dc15cdb3e10c7ad20/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9820b3897803c38f66f8515dc15cdb3e10c7ad20/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=9820b3897803c38f66f8515dc15cdb3e10c7ad20", "patch": "@@ -39,7 +39,9 @@\n #define _THREAD_SAFE\n \n /* Use 64 bit Large File API */\n-#ifndef _LARGEFILE_SOURCE\n+#if defined (__QNX__)\n+#define _LARGEFILE64_SOURCE 1\n+#elif !defined(_LARGEFILE_SOURCE)\n #define _LARGEFILE_SOURCE\n #endif\n #define _FILE_OFFSET_BITS 64\n@@ -81,8 +83,8 @@\n #define __BSD_VISIBLE 1\n #endif\n \n-#if defined (__QNX__)\n-#define _LARGEFILE64_SOURCE 1\n+#ifdef __QNX__\n+#include <sys/syspage.h>\n #endif\n \n #ifdef IN_RTS\n@@ -2350,9 +2352,12 @@ __gnat_number_of_cpus (void)\n \n #if defined (__linux__) || defined (__sun__) || defined (_AIX) \\\n   || defined (__APPLE__) || defined (__FreeBSD__) || defined (__OpenBSD__) \\\n-  || defined (__DragonFly__) || defined (__NetBSD__) || defined (__QNX__)\n+  || defined (__DragonFly__) || defined (__NetBSD__)\n   cores = (int) sysconf (_SC_NPROCESSORS_ONLN);\n \n+#elif defined (__QNX__)\n+  cores = (int) _syspage_ptr->num_cpu;\n+\n #elif defined (__hpux__)\n   struct pst_dynamic psd;\n   if (pstat_getdynamic (&psd, sizeof (psd), 1, 0) != -1)"}]}