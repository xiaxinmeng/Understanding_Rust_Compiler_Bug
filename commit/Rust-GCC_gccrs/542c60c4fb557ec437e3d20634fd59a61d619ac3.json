{"sha": "542c60c4fb557ec437e3d20634fd59a61d619ac3", "node_id": "C_kwDOANBUbNoAKDU0MmM2MGM0ZmI1NTdlYzQzN2UzZDIwNjM0ZmQ1OWE2MWQ2MTlhYzM", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-09-01T00:17:39Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-09-01T00:17:39Z"}, "message": "Daily bump.", "tree": {"sha": "90ff4fe643a502872e806d835effb25fc65c2e88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90ff4fe643a502872e806d835effb25fc65c2e88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/542c60c4fb557ec437e3d20634fd59a61d619ac3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/542c60c4fb557ec437e3d20634fd59a61d619ac3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/542c60c4fb557ec437e3d20634fd59a61d619ac3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/542c60c4fb557ec437e3d20634fd59a61d619ac3/comments", "author": null, "committer": null, "parents": [{"sha": "2eca4ff4e867eb994e5110f0637c8762b6cfddc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2eca4ff4e867eb994e5110f0637c8762b6cfddc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2eca4ff4e867eb994e5110f0637c8762b6cfddc6"}], "stats": {"total": 344, "additions": 343, "deletions": 1}, "files": [{"sha": "0ef444ccfd57fd6b08d4006cf0d8bae71b6c6c98", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/542c60c4fb557ec437e3d20634fd59a61d619ac3/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/542c60c4fb557ec437e3d20634fd59a61d619ac3/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=542c60c4fb557ec437e3d20634fd59a61d619ac3", "patch": "@@ -1,3 +1,8 @@\n+2022-08-31  Martin Liska  <mliska@suse.cz>\n+\n+\t* configure: Regenerate.\n+\t* configure.ac: Delete hpux9 and hpux10.\n+\n 2022-08-18  Sergei Trofimovich  <siarheit@google.com>\n \n \t* Makefile.def: Drop libelf module and gcc-configure dependency"}, {"sha": "b7fd4e7a0b4b52a66ccb5c3416415d6422ec581b", "filename": "config/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/542c60c4fb557ec437e3d20634fd59a61d619ac3/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/542c60c4fb557ec437e3d20634fd59a61d619ac3/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=542c60c4fb557ec437e3d20634fd59a61d619ac3", "patch": "@@ -1,3 +1,7 @@\n+2022-08-31  Martin Liska  <mliska@suse.cz>\n+\n+\t* mh-pa-hpux10: Removed.\n+\n 2022-08-01  Roger Sayle  <roger@nextmovesoftware.com>\n \t    Arnaud Charlet  <charlet@adacore.com>\n "}, {"sha": "d76b1b48885074103469e914c785099d3a2a4f23", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/542c60c4fb557ec437e3d20634fd59a61d619ac3/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/542c60c4fb557ec437e3d20634fd59a61d619ac3/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=542c60c4fb557ec437e3d20634fd59a61d619ac3", "patch": "@@ -1,3 +1,7 @@\n+2022-08-31  Martin Liska  <mliska@suse.cz>\n+\n+\t* config-list.mk: Remove deprecated ports.\n+\n 2022-08-30  Ulrich Drepper  <drepper@gmail.com>\n \n \t* gcc_update (files_and_dependencies): Add rule for"}, {"sha": "c8735e1d73e3faebfca4b5f9f866bfd40d8f2171", "filename": "contrib/header-tools/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/542c60c4fb557ec437e3d20634fd59a61d619ac3/contrib%2Fheader-tools%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/542c60c4fb557ec437e3d20634fd59a61d619ac3/contrib%2Fheader-tools%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fheader-tools%2FChangeLog?ref=542c60c4fb557ec437e3d20634fd59a61d619ac3", "patch": "@@ -1,3 +1,8 @@\n+2022-08-31  Martin Liska  <mliska@suse.cz>\n+\n+\t* README: Remove deprecated ports.\n+\t* reduce-headers: Likewise.\n+\n 2022-01-17  Martin Liska  <mliska@suse.cz>\n \n \t* README: Rename .c names to .cc."}, {"sha": "d67e572f310a20d8b80b41358c875a92747b049c", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/542c60c4fb557ec437e3d20634fd59a61d619ac3/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/542c60c4fb557ec437e3d20634fd59a61d619ac3/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=542c60c4fb557ec437e3d20634fd59a61d619ac3", "patch": "@@ -1,3 +1,11 @@\n+2022-08-31  Martin Liska  <mliska@suse.cz>\n+\n+\t* configure: Regenerate.\n+\n+2022-08-31  Martin Liska  <mliska@suse.cz>\n+\n+\t* configure: Regenerate.\n+\n 2022-08-25  Martin Liska  <mliska@suse.cz>\n \n \t* config.h.in: Regenerate."}, {"sha": "03f1073ccfae80dd0d062182942e0656132a7eae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/542c60c4fb557ec437e3d20634fd59a61d619ac3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/542c60c4fb557ec437e3d20634fd59a61d619ac3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=542c60c4fb557ec437e3d20634fd59a61d619ac3", "patch": "@@ -1,3 +1,96 @@\n+2022-08-31  Martin Liska  <mliska@suse.cz>\n+\n+\t* config.build: Remove deprecated ports.\n+\t* config.gcc: Likewise.\n+\t* config.host: Likewise.\n+\t* configure.ac: Likewise.\n+\t* configure: Regenerate.\n+\t* config/pa/pa-hpux10.h: Removed.\n+\t* config/pa/pa-hpux10.opt: Removed.\n+\t* config/pa/t-dce-thr: Removed.\n+\n+2022-08-31  Martin Liska  <mliska@suse.cz>\n+\n+\t* Makefile.in: Always install limits.h and syslimits.h to\n+\tinclude folder.\n+\t* configure.ac: Assign STMP_FIXINC blank if\n+\t--disable-fixincludes is used.\n+\t* configure: Regenerate.\n+\n+2022-08-31  Richard Biener  <rguenther@suse.de>\n+\n+\t* gimple-predicate-analysis.cc (predicate::init_from_control_deps):\n+\tAssert the guard_bb isn't empty and has more than one successor.\n+\tDrop appropriate parts of the predicate when an edge fails to\n+\tregister a predicate.\n+\t(predicate::dump): Dump empty predicate as TRUE.\n+\n+2022-08-31  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/90994\n+\t* gimple-predicate-analysis.cc (predicate::init_from_control_deps):\n+\tIgnore exceptional control flow and skip the edge for the purpose of\n+\tpredicate generation also for non-calls.\n+\n+2022-08-31  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* value-range-storage.cc (frange_storage_slot::set_frange): Save\n+\tendpoints.\n+\t(frange_storage_slot::get_frange): Restore endpoints.\n+\t* value-range-storage.h (class frange_storage_slot): Add endpoint\n+\tfields.\n+\n+2022-08-31  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/106789\n+\t* range-op-float.cc (default_frelop_fold_range): Remove the\n+\t  function.\n+\n+2022-08-31  Martin Liska  <mliska@suse.cz>\n+\n+\t* value-range.h: Add more override keywords.\n+\n+2022-08-31  Martin Liska  <mliska@suse.cz>\n+\n+\t* value-range.h: Add override.\n+\n+2022-08-31  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/65244\n+\t* gimple-predicate-analysis.h (predicate::init_from_control_deps):\n+\tAdd argument to specify whether the predicate is for the USE.\n+\t* gimple-predicate-analysis.cc (predicate::init_from_control_deps):\n+\tAlso include predicates effective fallthru control edges when\n+\tthe predicate is for the USE.\n+\n+2022-08-31  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/73550\n+\t* gimple-predicate-analysis.cc (predicate::init_from_control_deps):\n+\tSanitize debug dumping.  Handle case labels with a CASE_HIGH.\n+\t(predicate::dump): Adjust for better readability.\n+\n+2022-08-31  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* omp-simd-clone.cc (simd_clone_adjust_return_type,\n+\tsimd_clone_adjust_argument_types): Use known_eq (veclen, 0U)\n+\tinstead of known_eq (veclen, 0) to avoid -Wsign-compare warnings.\n+\n+2022-08-31  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-vect-slp.cc (vect_optimize_slp_pass::dump): Remove bogus\n+\targument.\n+\n+2022-08-31  zhongjuzhe  <juzhe.zhong@rivai.ai>\n+\n+\t* tree-vect-loop-manip.cc (vect_gen_vector_loop_niters): Simply\n+\tinitialize const_vf to 0.\n+\n+2022-08-31  Martin Liska  <mliska@suse.cz>\n+\n+\t* config.gcc: Remove cr16.\n+\n 2022-08-30  Martin Jambor  <mjambor@suse.cz>\n \n \t* vec.h (array_slice): Add constructors for non-const reference to"}, {"sha": "9ba0bbef7056169574fe247b55a4178d7d37aabc", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/542c60c4fb557ec437e3d20634fd59a61d619ac3/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/542c60c4fb557ec437e3d20634fd59a61d619ac3/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=542c60c4fb557ec437e3d20634fd59a61d619ac3", "patch": "@@ -1 +1 @@\n-20220831\n+20220901"}, {"sha": "b3ebec0f5dced739f593d1ac045fd5b53fc153cd", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/542c60c4fb557ec437e3d20634fd59a61d619ac3/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/542c60c4fb557ec437e3d20634fd59a61d619ac3/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=542c60c4fb557ec437e3d20634fd59a61d619ac3", "patch": "@@ -1,3 +1,13 @@\n+2022-08-31  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* c-attribs.cc (handle_deprecated_attribute): Check and pedwarn\n+\tfor LABEL_DECL.\n+\t* c-common.cc (c_add_case_label): Add argument ATTRS.  Call\n+\tdecl_attributes.\n+\t* c-common.h (do_case, c_add_case_label): Update declarations.\n+\t* c-lex.cc (c_common_has_attribute): For C, produce a result of\n+\t201910 for fallthrough and 202106 for maybe_unused.\n+\n 2022-08-26  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/81159"}, {"sha": "2dea2b713669354a4a9cd6c166564024de0238b1", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/542c60c4fb557ec437e3d20634fd59a61d619ac3/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/542c60c4fb557ec437e3d20634fd59a61d619ac3/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=542c60c4fb557ec437e3d20634fd59a61d619ac3", "patch": "@@ -1,3 +1,9 @@\n+2022-08-31  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* c-parser.cc (c_parser_label): Pass attributes to do_case.\n+\t* c-typeck.cc (do_case): Add argument ATTRS.  Pass it to\n+\tc_add_case_label.\n+\n 2022-08-26  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-typeck.cc (convert_arguments): Handle BUILT_IN_ISSIGNALING."}, {"sha": "2c36038743afd41685318ba466e985b331c846e3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/542c60c4fb557ec437e3d20634fd59a61d619ac3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/542c60c4fb557ec437e3d20634fd59a61d619ac3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=542c60c4fb557ec437e3d20634fd59a61d619ac3", "patch": "@@ -1,3 +1,46 @@\n+2022-08-31  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/c2x-attr-deprecated-2.c, gcc.dg/c2x-attr-fallthrough-2.c,\n+\tgcc.dg/c2x-attr-maybe_unused-1.c, gcc.dg/c2x-attr-nodiscard-2.c:\n+\tAdd tests of attributes on labels.\n+\t* gcc.dg/c2x-has-c-attribute-2.c: Update expected results for\n+\tmaybe_unused and fallthrough.\n+\n+2022-08-31  Martin Liska  <mliska@suse.cz>\n+\n+\t* g++.dg/cpp0x/lambda/lambda-conv.C: Remove useless test.\n+\t* gcc.c-torture/execute/ieee/hugeval.x: Likewise.\n+\t* gcc.dg/torture/pr47917.c: Likewise.\n+\t* lib/target-supports.exp: Likewise.\n+\n+2022-08-31  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR testsuite/106795\n+\t* g++.dg/tree-ssa/empty-loop.C: Use -Wno-unused-result.\n+\n+2022-08-31  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/aarch64/sve/acle/general-c/gnu_vectors_1.c: Update\n+\ttests for empty initializers.\n+\t* gcc.target/aarch64/sve/acle/general-c/gnu_vectors_2.c: Likewise.\n+\t* gcc.target/aarch64/sve/acle/general-c/sizeless-1.c: Likewise.\n+\t* gcc.target/aarch64/sve/acle/general-c/sizeless-2.c: Likewise.\n+\n+2022-08-31  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/90994\n+\t* g++.dg/torture/pr90994.C: New testcase.\n+\n+2022-08-31  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/65244\n+\t* gcc.dg/uninit-pr65244-2.c: New testcase.\n+\n+2022-08-31  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/65244\n+\t* gcc.dg/uninit-pr65244-1.c: New testcase.\n+\n 2022-08-30  Andrew Stubbs  <ams@codesourcery.com>\n \n \t* gcc.dg/vect/vect-simd-clone-1.c: Add dg-warning."}, {"sha": "67950648e82e434b1d621ba25843e3d19f9d31dd", "filename": "gnattools/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/542c60c4fb557ec437e3d20634fd59a61d619ac3/gnattools%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/542c60c4fb557ec437e3d20634fd59a61d619ac3/gnattools%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gnattools%2FChangeLog?ref=542c60c4fb557ec437e3d20634fd59a61d619ac3", "patch": "@@ -1,3 +1,8 @@\n+2022-08-31  Martin Liska  <mliska@suse.cz>\n+\n+\t* configure.ac: Remove deprecated ports.\n+\t* configure: Regenerate.\n+\n 2021-10-22  Eric Gallager  <egallager@gcc.gnu.org>\n \n \tPR other/102663"}, {"sha": "9d18b23ba0b6f5976e3e406d70caa36063c09e62", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/542c60c4fb557ec437e3d20634fd59a61d619ac3/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/542c60c4fb557ec437e3d20634fd59a61d619ac3/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=542c60c4fb557ec437e3d20634fd59a61d619ac3", "patch": "@@ -1,3 +1,9 @@\n+2022-08-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR preprocessor/106778\n+\t* makeuname2c.cc (write_nodes): Reverse order of && operands in\n+\tassert.\n+\n 2022-08-26  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/106647"}, {"sha": "e0deb15e33d273e252e009e4c8d5cb3d4c4e29ea", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/542c60c4fb557ec437e3d20634fd59a61d619ac3/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/542c60c4fb557ec437e3d20634fd59a61d619ac3/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=542c60c4fb557ec437e3d20634fd59a61d619ac3", "patch": "@@ -1,3 +1,7 @@\n+2022-08-31  Martin Liska  <mliska@suse.cz>\n+\n+\t* config.host: Remove hppa.\n+\n 2022-08-30  Martin Liska  <mliska@suse.cz>\n \n \t* config.host: Remove the port."}, {"sha": "01f6bfa041ee5f5bb075b838f6c0705ccb5b48d7", "filename": "libitm/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/542c60c4fb557ec437e3d20634fd59a61d619ac3/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/542c60c4fb557ec437e3d20634fd59a61d619ac3/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=542c60c4fb557ec437e3d20634fd59a61d619ac3", "patch": "@@ -1,3 +1,11 @@\n+2022-08-31  Martin Liska  <mliska@suse.cz>\n+\n+\t* configure: Regenerate.\n+\n+2022-08-31  Martin Liska  <mliska@suse.cz>\n+\n+\t* configure: Regenerate.\n+\n 2022-06-02  David Malcolm  <dmalcolm@redhat.com>\n \n \t* testsuite/lib/libitm.exp: Add load_gcc_lib of scansarif.exp."}, {"sha": "235d0ba17f3837a2039eba5e14e1936286361a0c", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/542c60c4fb557ec437e3d20634fd59a61d619ac3/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/542c60c4fb557ec437e3d20634fd59a61d619ac3/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=542c60c4fb557ec437e3d20634fd59a61d619ac3", "patch": "@@ -1,3 +1,7 @@\n+2022-08-31  Xi Ruoyao  <xry111@xry111.site>\n+\n+\t* configure.tgt: Allow loongarch64-*-linux*.\n+\n 2022-08-30  Martin Liska  <mliska@suse.cz>\n \n \t* LOCAL_PATCHES: Update."}, {"sha": "712ce1740b354c463f0282ec0ceab890a07af635", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 137, "deletions": 0, "changes": 137, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/542c60c4fb557ec437e3d20634fd59a61d619ac3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/542c60c4fb557ec437e3d20634fd59a61d619ac3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=542c60c4fb557ec437e3d20634fd59a61d619ac3", "patch": "@@ -1,3 +1,140 @@\n+2022-08-31  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* include/bits/ranges_base.h (__advance_fn::operator()): Add\n+\tparentheses in assert condition to avoid -Wparentheses warning.\n+\t* include/std/ranges: (take_view::take_view): Uglify 'base'.\n+\t(take_while_view::take_while_view): Likewise.\n+\t(elements_view::elements_view): Likewise.\n+\t(views::_Zip::operator()): Adjust position of [[nodiscard]] for\n+\tcompatibility with -fconcepts-ts.\n+\t(zip_transform_view::_Sentinel): Uglify 'OtherConst'.\n+\t(views::_ZipTransform::operator()): Adjust position of\n+\t[[nodiscard]] for compatibilty with -fconcepts-ts.\n+\n+2022-08-31  Martin Liska  <mliska@suse.cz>\n+\n+\t* configure: Regenerate.\n+\t* crossconfig.m4: Remove deprecated ports.\n+\n+2022-08-31  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\t* include/debug/debug.h: Use nullptr rather than '0' in checks in post-C++11.\n+\t* include/debug/string: Likewise.\n+\t* testsuite/21_strings/basic_string/operations/ends_with/char.cc: Use __gnu_test::string.\n+\t* testsuite/21_strings/basic_string/operations/ends_with/nonnull.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/operations/ends_with/wchar_t.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/operations/starts_with/wchar_t.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/operations/starts_with/nonnull.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/operations/starts_with/char.cc: Likewise..\n+\n+2022-08-31  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* include/std/ranges (adjacent_view): Define.\n+\t(enable_borrowed_range<adjacent_view>): Define.\n+\t(__detail::__repeated_tuple): Define.\n+\t(adjacent_view::_Iterator): Define.\n+\t(adjacent_view::_Sentinel): Define.\n+\t(views::__detail::__can_adjacent_view): Define.\n+\t(views::_Adjacent): Define.\n+\t(views::adjacent): Define.\n+\t(views::pairwise): Define.\n+\t* testsuite/std/ranges/adaptors/adjacent/1.cc: New test.\n+\n+2022-08-31  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\t* include/debug/formatter.h\n+\t[_GLIBCXX_HAVE_STACKTRACE](__glibcxx_backtrace_state): Declare.\n+\t[_GLIBCXX_HAVE_STACKTRACE](__glibcxx_backtrace_create_state): Declare.\n+\t[_GLIBCXX_HAVE_STACKTRACE](__glibcxx_backtrace_full_callback): Define.\n+\t[_GLIBCXX_HAVE_STACKTRACE](__glibcxx_backtrace_error_callback): Define.\n+\t[_GLIBCXX_HAVE_STACKTRACE](__glibcxx_backtrace_full_func): Define.\n+\t[_GLIBCXX_HAVE_STACKTRACE](__glibcxx_backtrace_full): Declare.\n+\t[_GLIBCXX_HAVE_STACKTRACE](_Error_formatter::_M_backtrace_state): New.\n+\t[_GLIBCXX_HAVE_STACKTRACE](_Error_formatter::_M_backtrace_full): New.\n+\t* src/c++11/debug.cc [_GLIBCXX_HAVE_STACKTRACE](print_backtrace): New.\n+\t(_Error_formatter::_M_error()): Adapt.\n+\t* src/libbacktrace/Makefile.am: Add backtrace.c.\n+\t* src/libbacktrace/Makefile.in: Regenerate.\n+\t* src/libbacktrace/backtrace-rename.h (backtrace_full): New.\n+\t* testsuite/23_containers/vector/debug/assign4_backtrace_neg.cc: New test.\n+\t* doc/xml/manual/debug_mode.xml: Document _GLIBCXX_DEBUG_BACKTRACE.\n+\t* doc/xml/manual/using.xml: Likewise.\n+\n+2022-08-31  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* testsuite/20_util/logical_traits/requirements/short_circuit.cc: New test.\n+\n+2022-08-31  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/refwrap.h (reference_wrapper::operator()): Add\n+\tnoexcept-specifier and use __invoke_result instead of result_of.\n+\t* testsuite/20_util/reference_wrapper/invoke-noexcept.cc: New test.\n+\n+2022-08-31  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/20_util/reference_wrapper/invoke-2.cc: Improve\n+\tcomments.\n+\t* testsuite/20_util/reference_wrapper/invoke-3.cc: Likewise.\n+\t* testsuite/20_util/reference_wrapper/invoke.cc: Likewise.\n+\n+2022-08-31  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/basic_string.h (basic_string): Add nodiscard\n+\tattribute to all relevant functions.\n+\t* include/std/string_view (basic_string_view): Likewise.\n+\t* testsuite/21_strings/basic_string/capacity/1.cc: Cast unused\n+\tresults to void.\n+\t* testsuite/21_strings/basic_string/capacity/char/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/capacity/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/cons/char/self_move.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/element_access/char/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/element_access/char/21674.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/element_access/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/element_access/wchar_t/21674.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/lwg2758.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/lwg2946.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/operations/contains/nonnull.cc:\n+\tAdd -Wno-unused-result to options.\n+\t* testsuite/21_strings/basic_string/operations/ends_with/nonnull.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/operations/starts_with/nonnull.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/operators/char/1.cc: Cast\n+\tunused results to void.\n+\t* testsuite/21_strings/basic_string/operators/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/capacity/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/element_access/char/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/element_access/char/2.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/element_access/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/element_access/wchar_t/2.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/contains/nonnull.cc:\n+\tLikewise.\n+\tAdd -Wno-unused-result to options.\n+\t* testsuite/21_strings/basic_string_view/operations/ends_with/nonnull.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/starts_with/nonnull.cc:\n+\tLikewise.\n+\t* testsuite/27_io/basic_stringbuf/sputbackc/char/1.cc: Cast\n+\tunused results to void.\n+\t* testsuite/27_io/basic_stringbuf/sputbackc/wchar_t/1.cc:\n+\tLikewise.\n+\t* testsuite/27_io/basic_stringbuf/sungetc/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/sungetc/wchar_t/1.cc:\n+\tLikewise.\n+\n 2022-08-27  Patrick Palka  <ppalka@redhat.com>\n \n \t* testsuite/20_util/logical_traits/requirements/base_classes.cc: New test."}]}