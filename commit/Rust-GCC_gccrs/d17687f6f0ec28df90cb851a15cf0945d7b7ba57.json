{"sha": "d17687f6f0ec28df90cb851a15cf0945d7b7ba57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE3Njg3ZjZmMGVjMjhkZjkwY2I4NTFhMTVjZjA5NDVkN2I3YmE1Nw==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2011-10-18T08:44:49Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2011-10-18T08:44:49Z"}, "message": "Fix bootstrap on !NO_IMPLICIT_EXTERN_C and ia32 targets\n\nlibcpp/\n\n\t* include/line-map.h (struct linemap_stats): Change the type of\n\tthe members from size_t to long.\n\t* macro.c (macro_arg_token_iter_init): Unconditionally initialize\n\titer->location_ptr.\n\ngcc/c-family/\n\n\t* c-lex.c (fe_file_change): Use LINEMAP_SYSP when\n\t!NO_IMPLICIT_EXTERN_C.\n\ngcc/\n\t* input.c (dump_line_table_statistics): Use long, not size_t.\n\nFrom-SVN: r180124", "tree": {"sha": "f0f196717a123734651cdeb6d17553bca251f465", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0f196717a123734651cdeb6d17553bca251f465"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d17687f6f0ec28df90cb851a15cf0945d7b7ba57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d17687f6f0ec28df90cb851a15cf0945d7b7ba57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d17687f6f0ec28df90cb851a15cf0945d7b7ba57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d17687f6f0ec28df90cb851a15cf0945d7b7ba57/comments", "author": null, "committer": null, "parents": [{"sha": "d5899fb5d3b3a45dc81f6a2e4cca8355f1a17a56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5899fb5d3b3a45dc81f6a2e4cca8355f1a17a56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5899fb5d3b3a45dc81f6a2e4cca8355f1a17a56"}], "stats": {"total": 79, "additions": 51, "deletions": 28}, "files": [{"sha": "dfe8d99f29cb807f8c3e30a3171568309ad2f44f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d17687f6f0ec28df90cb851a15cf0945d7b7ba57/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d17687f6f0ec28df90cb851a15cf0945d7b7ba57/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d17687f6f0ec28df90cb851a15cf0945d7b7ba57", "patch": "@@ -1,3 +1,8 @@\n+2011-10-18  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR bootstrap/50760\n+\t* input.c (dump_line_table_statistics): Use long, not size_t.\n+\n 2011-10-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/sparc/sparc.md (in_call_delay): Fix formatting issues."}, {"sha": "917f9572251920a99bbd585e399ae2dd299b594b", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d17687f6f0ec28df90cb851a15cf0945d7b7ba57/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d17687f6f0ec28df90cb851a15cf0945d7b7ba57/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=d17687f6f0ec28df90cb851a15cf0945d7b7ba57", "patch": "@@ -1,3 +1,9 @@\n+2011-10-18  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR bootstrap/50760\n+\t* c-lex.c (fe_file_change): Use LINEMAP_SYSP when\n+    \t!NO_IMPLICIT_EXTERN_C.\n+\n 2011-10-15  Tom Tromey  <tromey@redhat.com>\n \t    Dodji Seketeli  <dodji@redhat.com>\n "}, {"sha": "b151564000cf9e1bcbf68fedd21af0258bf28d2e", "filename": "gcc/c-family/c-lex.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d17687f6f0ec28df90cb851a15cf0945d7b7ba57/gcc%2Fc-family%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d17687f6f0ec28df90cb851a15cf0945d7b7ba57/gcc%2Fc-family%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-lex.c?ref=d17687f6f0ec28df90cb851a15cf0945d7b7ba57", "patch": "@@ -211,7 +211,7 @@ fe_file_change (const struct line_map *new_map)\n #ifndef NO_IMPLICIT_EXTERN_C\n \t  if (c_header_level)\n \t    ++c_header_level;\n-\t  else if (new_map->sysp == 2)\n+\t  else if (LINEMAP_SYSP (new_map) == 2)\n \t    {\n \t      c_header_level = 1;\n \t      ++pending_lang_change;\n@@ -224,7 +224,7 @@ fe_file_change (const struct line_map *new_map)\n #ifndef NO_IMPLICIT_EXTERN_C\n       if (c_header_level && --c_header_level == 0)\n \t{\n-\t  if (new_map->sysp == 2)\n+\t  if (LINEMAP_SYSP (new_map) == 2)\n \t    warning (0, \"badly nested C headers from preprocessor\");\n \t  --pending_lang_change;\n \t}"}, {"sha": "a780f5c7ee7b7958274be9132dbde728c87c8895", "filename": "gcc/input.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d17687f6f0ec28df90cb851a15cf0945d7b7ba57/gcc%2Finput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d17687f6f0ec28df90cb851a15cf0945d7b7ba57/gcc%2Finput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finput.c?ref=d17687f6f0ec28df90cb851a15cf0945d7b7ba57", "patch": "@@ -80,7 +80,7 @@ void\n dump_line_table_statistics (void)\n {\n   struct linemap_stats s;\n-  size_t total_used_map_size,\n+  long total_used_map_size,\n     macro_maps_size,\n     total_allocated_map_size;\n \n@@ -99,45 +99,45 @@ dump_line_table_statistics (void)\n     + s.macro_maps_used_size\n     + s.macro_maps_locations_size;\n \n-  fprintf (stderr, \"Number of expanded macros:                     %5lu\\n\",\n+  fprintf (stderr, \"Number of expanded macros:                     %5ld\\n\",\n            s.num_expanded_macros);\n   if (s.num_expanded_macros != 0)\n-    fprintf (stderr, \"Average number of tokens per macro expansion:  %5lu\\n\",\n+    fprintf (stderr, \"Average number of tokens per macro expansion:  %5ld\\n\",\n              s.num_macro_tokens / s.num_expanded_macros);\n   fprintf (stderr,\n            \"\\nLine Table allocations during the \"\n            \"compilation process\\n\");\n-  fprintf (stderr, \"Number of ordinary maps used:        %5lu%c\\n\",\n+  fprintf (stderr, \"Number of ordinary maps used:        %5ld%c\\n\",\n            SCALE (s.num_ordinary_maps_used),\n            STAT_LABEL (s.num_ordinary_maps_used));\n-  fprintf (stderr, \"Ordinary map used size:              %5lu%c\\n\",\n+  fprintf (stderr, \"Ordinary map used size:              %5ld%c\\n\",\n            SCALE (s.ordinary_maps_used_size),\n            STAT_LABEL (s.ordinary_maps_used_size));\n-  fprintf (stderr, \"Number of ordinary maps allocated:   %5lu%c\\n\",\n+  fprintf (stderr, \"Number of ordinary maps allocated:   %5ld%c\\n\",\n            SCALE (s.num_ordinary_maps_allocated),\n            STAT_LABEL (s.num_ordinary_maps_allocated));\n-  fprintf (stderr, \"Ordinary maps allocated size:        %5lu%c\\n\",\n+  fprintf (stderr, \"Ordinary maps allocated size:        %5ld%c\\n\",\n            SCALE (s.ordinary_maps_allocated_size),\n            STAT_LABEL (s.ordinary_maps_allocated_size));\n-  fprintf (stderr, \"Number of macro maps used:           %5lu%c\\n\",\n+  fprintf (stderr, \"Number of macro maps used:           %5ld%c\\n\",\n            SCALE (s.num_macro_maps_used),\n            STAT_LABEL (s.num_macro_maps_used));\n-  fprintf (stderr, \"Macro maps used size:                %5lu%c\\n\",\n+  fprintf (stderr, \"Macro maps used size:                %5ld%c\\n\",\n            SCALE (s.macro_maps_used_size),\n            STAT_LABEL (s.macro_maps_used_size));\n-  fprintf (stderr, \"Macro maps locations size:           %5lu%c\\n\",\n+  fprintf (stderr, \"Macro maps locations size:           %5ld%c\\n\",\n            SCALE (s.macro_maps_locations_size),\n            STAT_LABEL (s.macro_maps_locations_size));\n-  fprintf (stderr, \"Macro maps size:                     %5lu%c\\n\",\n+  fprintf (stderr, \"Macro maps size:                     %5ld%c\\n\",\n            SCALE (macro_maps_size),\n            STAT_LABEL (macro_maps_size));\n-  fprintf (stderr, \"Duplicated maps locations size:      %5lu%c\\n\",\n+  fprintf (stderr, \"Duplicated maps locations size:      %5ld%c\\n\",\n            SCALE (s.duplicated_macro_maps_locations_size),\n            STAT_LABEL (s.duplicated_macro_maps_locations_size));\n-  fprintf (stderr, \"Total allocated maps size:           %5lu%c\\n\",\n+  fprintf (stderr, \"Total allocated maps size:           %5ld%c\\n\",\n            SCALE (total_allocated_map_size),\n            STAT_LABEL (total_allocated_map_size));\n-  fprintf (stderr, \"Total used maps size:                %5lu%c\\n\",\n+  fprintf (stderr, \"Total used maps size:                %5ld%c\\n\",\n            SCALE (total_used_map_size),\n            STAT_LABEL (total_used_map_size));\n   fprintf (stderr, \"\\n\");"}, {"sha": "bbb4085f012ea5d713f42106bbd713e9bddfd4de", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d17687f6f0ec28df90cb851a15cf0945d7b7ba57/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d17687f6f0ec28df90cb851a15cf0945d7b7ba57/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=d17687f6f0ec28df90cb851a15cf0945d7b7ba57", "patch": "@@ -1,3 +1,11 @@\n+2011-10-18  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR bootstrap/50760\n+\t* include/line-map.h (struct linemap_stats): Change the type of\n+    \tthe members from size_t to long.\n+\t* macro.c (macro_arg_token_iter_init): Unconditionally initialize\n+    \titer->location_ptr.\n+\n 2011-10-17  Dodji Seketeli  <dodji@redhat.com>\n \n \t* line-map.c (linemap_macro_map_loc_to_exp_point): Avoid setting a"}, {"sha": "ef98f5935b323d4ae815274dda0cca66d9969523", "filename": "libcpp/include/line-map.h", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d17687f6f0ec28df90cb851a15cf0945d7b7ba57/libcpp%2Finclude%2Fline-map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d17687f6f0ec28df90cb851a15cf0945d7b7ba57/libcpp%2Finclude%2Fline-map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fline-map.h?ref=d17687f6f0ec28df90cb851a15cf0945d7b7ba57", "patch": "@@ -687,17 +687,17 @@ expanded_location linemap_expand_location_full (struct line_maps *,\n    linemap_get_statistics.  */\n struct linemap_stats\n {\n-  size_t num_ordinary_maps_allocated;\n-  size_t num_ordinary_maps_used;\n-  size_t ordinary_maps_allocated_size;\n-  size_t ordinary_maps_used_size;\n-  size_t num_expanded_macros;\n-  size_t num_macro_tokens;\n-  size_t num_macro_maps_used;\n-  size_t macro_maps_allocated_size;\n-  size_t macro_maps_used_size;\n-  size_t macro_maps_locations_size;\n-  size_t duplicated_macro_maps_locations_size;\n+  long num_ordinary_maps_allocated;\n+  long num_ordinary_maps_used;\n+  long ordinary_maps_allocated_size;\n+  long ordinary_maps_used_size;\n+  long num_expanded_macros;\n+  long num_macro_tokens;\n+  long num_macro_maps_used;\n+  long macro_maps_allocated_size;\n+  long macro_maps_used_size;\n+  long macro_maps_locations_size;\n+  long duplicated_macro_maps_locations_size;\n };\n \n /* Compute and return statistics about the memory consumption of some"}, {"sha": "fb3be3a5f60e44553a637a9610e4b54a17ffd95b", "filename": "libcpp/line-map.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d17687f6f0ec28df90cb851a15cf0945d7b7ba57/libcpp%2Fline-map.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d17687f6f0ec28df90cb851a15cf0945d7b7ba57/libcpp%2Fline-map.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fline-map.c?ref=d17687f6f0ec28df90cb851a15cf0945d7b7ba57", "patch": "@@ -1180,7 +1180,7 @@ void\n linemap_get_statistics (struct line_maps *set,\n \t\t\tstruct linemap_stats *s)\n {\n-  size_t ordinary_maps_allocated_size, ordinary_maps_used_size,\n+  long ordinary_maps_allocated_size, ordinary_maps_used_size,\n     macro_maps_allocated_size, macro_maps_used_size,\n     macro_maps_locations_size = 0, duplicated_macro_maps_locations_size = 0;\n "}, {"sha": "f3139590d5045b128709296d1abbb81753284f10", "filename": "libcpp/macro.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d17687f6f0ec28df90cb851a15cf0945d7b7ba57/libcpp%2Fmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d17687f6f0ec28df90cb851a15cf0945d7b7ba57/libcpp%2Fmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fmacro.c?ref=d17687f6f0ec28df90cb851a15cf0945d7b7ba57", "patch": "@@ -1278,6 +1278,10 @@ macro_arg_token_iter_init (macro_arg_token_iter *iter,\n   iter->track_macro_exp_p = track_macro_exp_p;\n   iter->kind = kind;\n   iter->token_ptr = token_ptr;\n+  /* Unconditionally initialize this so that the compiler doesn't warn\n+     about iter->location_ptr being possibly uninitialized later after\n+     this code has been inlined somewhere.  */\n+  iter->location_ptr = NULL;\n   if (track_macro_exp_p)\n     iter->location_ptr = get_arg_token_location (arg, kind);\n #ifdef ENABLE_CHECKING"}]}