{"sha": "a49cfba81bf9021a62ca111e7f7baea84213a19a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ5Y2ZiYTgxYmY5MDIxYTYyY2ExMTFlN2Y3YmFlYTg0MjEzYTE5YQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2002-04-25T00:13:45Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-04-25T00:13:45Z"}, "message": "typeck.c (build_modify_expr): The pedwarn for array assignment is now unconditional.\n\n        * typeck.c (build_modify_expr): The pedwarn for array assignment is\n        now unconditional.\n        * tree.c (build_cplus_array_type_1): Still process simple array types\n        normally in templates.\n\nFrom-SVN: r52746", "tree": {"sha": "df80a5e6a3e2b9311e58c1832f38a21203278e85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df80a5e6a3e2b9311e58c1832f38a21203278e85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a49cfba81bf9021a62ca111e7f7baea84213a19a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a49cfba81bf9021a62ca111e7f7baea84213a19a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a49cfba81bf9021a62ca111e7f7baea84213a19a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a49cfba81bf9021a62ca111e7f7baea84213a19a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fcae219ac449243231ebbe73eefddde824d7354b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcae219ac449243231ebbe73eefddde824d7354b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcae219ac449243231ebbe73eefddde824d7354b"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "ef5faf451b03ff78d028ae6fbb43dd2fab1d9136", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a49cfba81bf9021a62ca111e7f7baea84213a19a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a49cfba81bf9021a62ca111e7f7baea84213a19a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a49cfba81bf9021a62ca111e7f7baea84213a19a", "patch": "@@ -19,6 +19,9 @@\n \tPR c++/6331\n \t* method.c (do_build_copy_constructor): Use cp_build_qualified_type.\n \t* typeck.c (build_modify_expr): Allow arrays to differ in cv-quals.\n+\tThe pedwarn for array assignment is now unconditional.\n+\t* tree.c (build_cplus_array_type_1): Still process simple array types\n+\tnormally in templates.\n \n \tPR c++/6395\n \t* decl.c (make_rtl_for_nonlocal_decl): Don't mess with #pragma i/i"}, {"sha": "cdf9d7509baf2dbc5d34541f5d113a8a71d61ec8", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a49cfba81bf9021a62ca111e7f7baea84213a19a/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a49cfba81bf9021a62ca111e7f7baea84213a19a/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=a49cfba81bf9021a62ca111e7f7baea84213a19a", "patch": "@@ -463,7 +463,12 @@ build_cplus_array_type_1 (elt_type, index_type)\n   if (elt_type == error_mark_node || index_type == error_mark_node)\n     return error_mark_node;\n \n-  if (processing_template_decl \n+  /* Don't do the minimal thing just because processing_template_decl is\n+     set; we want to give string constants the right type immediately, so\n+     we don't have to fix them up at instantiation time.  */\n+  if ((processing_template_decl\n+       && index_type && TYPE_MAX_VALUE (index_type)\n+       && TREE_CODE (TYPE_MAX_VALUE (index_type)) != INTEGER_CST)\n       || uses_template_parms (elt_type) \n       || uses_template_parms (index_type))\n     {"}, {"sha": "a1050bb7596ecaea4374ce90693d2b4a62ae0721", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a49cfba81bf9021a62ca111e7f7baea84213a19a/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a49cfba81bf9021a62ca111e7f7baea84213a19a/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=a49cfba81bf9021a62ca111e7f7baea84213a19a", "patch": "@@ -5674,7 +5674,7 @@ build_modify_expr (lhs, modifycode, rhs)\n \t}\n \n       /* Allow array assignment in compiler-generated code.  */\n-      if (pedantic && ! DECL_ARTIFICIAL (current_function_decl))\n+      if (! DECL_ARTIFICIAL (current_function_decl))\n \tpedwarn (\"ISO C++ forbids assignment of arrays\");\n \n       from_array = TREE_CODE (TREE_TYPE (newrhs)) == ARRAY_TYPE"}, {"sha": "e3f2bfbe526ccaa200b25e68da51c13c3d4df139", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/14664-1.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a49cfba81bf9021a62ca111e7f7baea84213a19a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F14664-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a49cfba81bf9021a62ca111e7f7baea84213a19a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F14664-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F14664-1.C?ref=a49cfba81bf9021a62ca111e7f7baea84213a19a", "patch": "@@ -1,7 +1,6 @@\n // 981203 bkoz\n // g++/14664 - test\n // Build don't link: \n-// Special g++ Options: -fconst-strings\n \n char foo[26];\n "}, {"sha": "9c5dade4d84e4f7e54f9a5d51cce6942252d635a", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/14664-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a49cfba81bf9021a62ca111e7f7baea84213a19a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F14664-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a49cfba81bf9021a62ca111e7f7baea84213a19a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F14664-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F14664-2.C?ref=a49cfba81bf9021a62ca111e7f7baea84213a19a", "patch": "@@ -1,7 +1,7 @@\n // 981203 bkoz\n // g++/14664 + test\n // Build don't link: \n-// Special g++ Options: -fno-const-strings\n+// Special g++ Options: -fpermissive -w\n \n char foo[26];\n "}, {"sha": "3f547e598add968497419a369b558e2148388bff", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash51.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a49cfba81bf9021a62ca111e7f7baea84213a19a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash51.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a49cfba81bf9021a62ca111e7f7baea84213a19a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash51.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash51.C?ref=a49cfba81bf9021a62ca111e7f7baea84213a19a", "patch": "@@ -1,5 +1,5 @@\n // Build don't link:\n-// Special g++ Options: -fno-const-strings\n+// Special g++ Options: -fpermissive -w\n // Origin: Mark Mitchell <mark@codesourcery.com>\n \n char foo[26];"}]}