{"sha": "feab35499e52bc398fd267a48e76f14b579d89b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVhYjM1NDk5ZTUyYmMzOThmZDI2N2E0OGU3NmYxNGI1NzlkODliMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-07T13:26:02Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-07T13:26:02Z"}, "message": "[multiple changes]\n\n2010-10-07  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_prag.adb (Analyze_Attribute_Definition_Clause, case\n\tComponent_Size): Complete previous change.\n\n2010-10-07  Vincent Celier  <celier@adacore.com>\n\n\t* scng.adb (Scan): Call Accumulate_Token_Checksum for Tok_Identifier,\n\teven for keywords, to avoid having the checksum to depend on the Ada\n\tversion.\n\n2010-10-07  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_aggr.adb, sem_ch12.adb, sem_ch6.adb, par-ch5.adb,\n\texp_ch3.adb: Minor reformatting.\n\nFrom-SVN: r165106", "tree": {"sha": "6befc7286be463c0edb384e01b62a6c535d677de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6befc7286be463c0edb384e01b62a6c535d677de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/feab35499e52bc398fd267a48e76f14b579d89b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/feab35499e52bc398fd267a48e76f14b579d89b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/feab35499e52bc398fd267a48e76f14b579d89b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/feab35499e52bc398fd267a48e76f14b579d89b1/comments", "author": null, "committer": null, "parents": [{"sha": "ffdb3d3bfc5137dac557e64396856439784567b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffdb3d3bfc5137dac557e64396856439784567b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffdb3d3bfc5137dac557e64396856439784567b9"}], "stats": {"total": 62, "additions": 45, "deletions": 17}, "files": [{"sha": "d5bb9b19adc43981196ca9a2566ddfa4093b7ca8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feab35499e52bc398fd267a48e76f14b579d89b1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feab35499e52bc398fd267a48e76f14b579d89b1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=feab35499e52bc398fd267a48e76f14b579d89b1", "patch": "@@ -1,3 +1,19 @@\n+2010-10-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Attribute_Definition_Clause, case\n+\tComponent_Size): Complete previous change.\n+\n+2010-10-07  Vincent Celier  <celier@adacore.com>\n+\n+\t* scng.adb (Scan): Call Accumulate_Token_Checksum for Tok_Identifier,\n+\teven for keywords, to avoid having the checksum to depend on the Ada\n+\tversion.\n+\n+2010-10-07  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_aggr.adb, sem_ch12.adb, sem_ch6.adb, par-ch5.adb,\n+\texp_ch3.adb: Minor reformatting.\n+\n 2010-10-07  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch13.adb (Analyze_Attribute_Definition_Clause, case"}, {"sha": "7a00d39c3c392a5374fa9f83dd30df0e5840b8fb", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feab35499e52bc398fd267a48e76f14b579d89b1/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feab35499e52bc398fd267a48e76f14b579d89b1/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=feab35499e52bc398fd267a48e76f14b579d89b1", "patch": "@@ -230,7 +230,7 @@ package body Exp_Ch3 is\n      (Typ     : Entity_Id;\n       Eq_Name : Name_Id) return Node_Id;\n    --  Build the body of a primitive equality operation for a tagged record\n-   --  type, or in Ada2012 for any record type that has components with a\n+   --  type, or in Ada 2012 for any record type that has components with a\n    --  user-defined equality. Factored out of Predefined_Primitive_Bodies.\n \n    function Make_Eq_Case\n@@ -6174,7 +6174,7 @@ package body Exp_Ch3 is\n \n       --  In the non-tagged case, ever since Ada83 an equality function must\n       --  be  provided for variant records that are not unchecked unions.\n-      --  In Ada2012 the equality function composes, and thus must be built\n+      --  In Ada 2012 the equality function composes, and thus must be built\n       --  explicitly just as for tagged records.\n \n       elsif Has_Discriminants (Def_Id)"}, {"sha": "04e1005e593eaf9603840d4c0d2b0fa3b526225c", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feab35499e52bc398fd267a48e76f14b579d89b1/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feab35499e52bc398fd267a48e76f14b579d89b1/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=feab35499e52bc398fd267a48e76f14b579d89b1", "patch": "@@ -84,7 +84,7 @@ package body Ch5 is\n    ---------------------------------\n \n    --  SEQUENCE_OF_STATEMENTS ::= STATEMENT {STATEMENT} {LABEL}\n-   --  Note: the final label is an Ada2012 addition.\n+   --  Note: the final label is an Ada 2012 addition.\n \n    --  STATEMENT ::=\n    --    {LABEL} SIMPLE_STATEMENT | {LABEL} COMPOUND_STATEMENT\n@@ -150,12 +150,12 @@ package body Ch5 is\n       --  is required. It is initialized from the Sreq flag, and modified as\n       --  statements are scanned (a statement turns it off, and a label turns\n       --  it back on again since a statement must follow a label).\n-      --  Note : this final requirement is lifted in Ada2012.\n+      --  Note : this final requirement is lifted in Ada 2012.\n \n       Statement_Seen : Boolean;\n-      --  In Ada2012 a label can end a sequence of statements, but the sequence\n-      --  cannot contain only labels. This flag is set whenever a label is\n-      --  encountered, to enforce this rule at the end of a sequence.\n+      --  In Ada 2012, a label can end a sequence of statements, but the\n+      --  sequence cannot contain only labels. This flag is set whenever a\n+      --  label is encountered, to enforce this rule at the end of a sequence.\n \n       Declaration_Found : Boolean := False;\n       --  This flag is set True if a declaration is encountered, so that the\n@@ -773,7 +773,7 @@ package body Ch5 is\n                   Statement_Required := False;\n \n                --  Label starting with << which must precede real statement\n-               --  Note: in Ada2012, the label may end the sequence.\n+               --  Note: in Ada 2012, the label may end the sequence.\n \n                when Tok_Less_Less =>\n                   if Present (Last (Statement_List))"}, {"sha": "5599d83604f839df6119bedf1a4b126e5ef3b339", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feab35499e52bc398fd267a48e76f14b579d89b1/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feab35499e52bc398fd267a48e76f14b579d89b1/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=feab35499e52bc398fd267a48e76f14b579d89b1", "patch": "@@ -2409,6 +2409,12 @@ package body Scng is\n             end if;\n          end if;\n \n+         --  We will assume it is an identifier, not a keyword, so that the\n+         --  checksum is independent of the Ada version.\n+\n+         Token := Tok_Identifier;\n+         Accumulate_Token_Checksum;\n+\n          --  Here is where we check if it was a keyword\n \n          if Is_Keyword_Name (Token_Name) then\n@@ -2464,14 +2470,11 @@ package body Scng is\n             --  corresponding keyword.\n \n             Token_Name := No_Name;\n-            Accumulate_Token_Checksum;\n             return;\n \n          --  It is an identifier after all\n \n          else\n-            Token := Tok_Identifier;\n-            Accumulate_Token_Checksum;\n             Post_Scan;\n             return;\n          end if;"}, {"sha": "80774910f1efd32518a7a2c00631ea757b3efe23", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feab35499e52bc398fd267a48e76f14b579d89b1/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feab35499e52bc398fd267a48e76f14b579d89b1/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=feab35499e52bc398fd267a48e76f14b579d89b1", "patch": "@@ -3890,7 +3890,7 @@ package body Sem_Aggr is\n                elsif No (Typech) then\n                   Typech := Base_Type (Etype (Component));\n \n-               --  AI05-0199: In Ada2012, several components of anonymous\n+               --  AI05-0199: In Ada 2012, several components of anonymous\n                --  access types can appear in a choice list, as long as the\n                --  designated types match.\n "}, {"sha": "d8f3c98b7ecfc8aa2bfcdced108bdaff3460fba3", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feab35499e52bc398fd267a48e76f14b579d89b1/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feab35499e52bc398fd267a48e76f14b579d89b1/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=feab35499e52bc398fd267a48e76f14b579d89b1", "patch": "@@ -9969,8 +9969,9 @@ package body Sem_Ch12 is\n          --  interface then  the generic formal is not unless declared\n          --  explicitly so. If not declared limited, the actual cannot be\n          --  limited (see AI05-0087).\n+\n          --  Even though this AI is a binding interpretation, we enable the\n-         --  check only in Ada2012 mode, because this improper construct\n+         --  check only in Ada 2012 mode, because this improper construct\n          --  shows up in user code and in existing B-tests.\n \n          if Is_Limited_Type (Act_T)"}, {"sha": "38d5c2e34ff2bf5866fb162e8fe0dffb205e62a0", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feab35499e52bc398fd267a48e76f14b579d89b1/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feab35499e52bc398fd267a48e76f14b579d89b1/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=feab35499e52bc398fd267a48e76f14b579d89b1", "patch": "@@ -5864,7 +5864,7 @@ package body Sem_Ch6 is\n                      Obj_Decl, Typ);\n                   Error_Msg_N\n                     (\"\\an equality operator cannot be declared after this \"\n-                      & \"point ('R'M 4.5.2 (9.8)) (Ada2012))?\", Obj_Decl);\n+                      & \"point ('R'M 4.5.2 (9.8)) (Ada 2012))?\", Obj_Decl);\n                   exit;\n                end if;\n "}, {"sha": "e686f43dd104d930e49c22f62a6003cc23d3b5a9", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feab35499e52bc398fd267a48e76f14b579d89b1/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feab35499e52bc398fd267a48e76f14b579d89b1/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=feab35499e52bc398fd267a48e76f14b579d89b1", "patch": "@@ -5944,12 +5944,13 @@ package body Sem_Prag is\n                    and then Nkind (Object_Definition (D)) =\n                                        N_Constrained_Array_Definition)\n             then\n-               Ctyp := Component_Type (E);\n-\n                --  The flag is set on the object, or on the base type\n \n                if Nkind (D) /= N_Object_Declaration then\n                   E := Base_Type (E);\n+                  Ctyp := Component_Type (E);\n+               else\n+                  Ctyp := Component_Type (Base_Type (Etype (E)));\n                end if;\n \n                Set_Has_Volatile_Components (E);\n@@ -9918,7 +9919,7 @@ package body Sem_Prag is\n                  and then (Esize (Ctyp) = 8  or else\n                            Esize (Ctyp) = 16 or else\n                            Esize (Ctyp) = 32 or else\n-                           Esize (Ctyp) = 64)\n+                           Esize (Ctyp) >= 64)\n                then\n                   Ignore := True;\n \n@@ -9931,6 +9932,13 @@ package body Sem_Prag is\n                  or else Is_Atomic (Component_Type (Typ))\n                then\n                   Error_Pragma (\"cannot pack atomic components\");\n+\n+               --  Warn for cases of packing non-atomic components of atomic\n+\n+               elsif Is_Atomic (Typ) then\n+                  Error_Msg_NE\n+                    (\"non-atomic components of type& may not be accessible \"\n+                     & \"by separate tasks?\", N, Typ);\n                end if;\n \n                --  If we had an explicit component size given, then we do not"}]}