{"sha": "ade8fdbbfd98aafdc12585885dea60460fea0a26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRlOGZkYmJmZDk4YWFmZGMxMjU4NTg4NWRlYTYwNDYwZmVhMGEyNg==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-08-14T04:22:31Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-08-14T04:22:31Z"}, "message": "re PR fortran/87991 (ICE in gfc_constructor_append_expr, at fortran/constructor.c:135)\n\n2019-08-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/87991\n\t* resolve.c (check_data_variable): data-stmt-object with pointer\n\tattribute requires a data-stmt-value with the target attribute.\n \n2019-08-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/87991\n\t* gfortran.dg/pr87991.f90: New test.\n\nFrom-SVN: r274412", "tree": {"sha": "eeec6ca2229ce463b70f5e66aafebc5978143959", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eeec6ca2229ce463b70f5e66aafebc5978143959"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ade8fdbbfd98aafdc12585885dea60460fea0a26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ade8fdbbfd98aafdc12585885dea60460fea0a26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ade8fdbbfd98aafdc12585885dea60460fea0a26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ade8fdbbfd98aafdc12585885dea60460fea0a26/comments", "author": null, "committer": null, "parents": [{"sha": "5747e0c0e1bce0df39ab7ac342162ecdc6e1343d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5747e0c0e1bce0df39ab7ac342162ecdc6e1343d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5747e0c0e1bce0df39ab7ac342162ecdc6e1343d"}], "stats": {"total": 51, "additions": 41, "deletions": 10}, "files": [{"sha": "42cf2f579478f48a1b02edbfe606f1fececd19ae", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ade8fdbbfd98aafdc12585885dea60460fea0a26/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ade8fdbbfd98aafdc12585885dea60460fea0a26/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ade8fdbbfd98aafdc12585885dea60460fea0a26", "patch": "@@ -1,3 +1,9 @@\n+2019-08-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/87991\n+\t* resolve.c (check_data_variable): data-stmt-object with pointer\n+\tattribute requires a data-stmt-value with the target attribute.\n+\n 2019-08-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/88072"}, {"sha": "ac9192ae02ceda1253e3e04a5ac36ea8b2165345", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 19, "deletions": 10, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ade8fdbbfd98aafdc12585885dea60460fea0a26/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ade8fdbbfd98aafdc12585885dea60460fea0a26/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=ade8fdbbfd98aafdc12585885dea60460fea0a26", "patch": "@@ -15726,28 +15726,37 @@ check_data_variable (gfc_data_variable *var, locus *where)\n       return false;\n     }\n \n-  has_pointer = sym->attr.pointer;\n-\n   if (gfc_is_coindexed (e))\n     {\n       gfc_error (\"DATA element %qs at %L cannot have a coindex\", sym->name,\n \t\t where);\n       return false;\n     }\n \n+  has_pointer = sym->attr.pointer;\n+\n   for (ref = e->ref; ref; ref = ref->next)\n     {\n       if (ref->type == REF_COMPONENT && ref->u.c.component->attr.pointer)\n \thas_pointer = 1;\n \n-      if (has_pointer\n-\t    && ref->type == REF_ARRAY\n-\t    && ref->u.ar.type != AR_FULL)\n-\t  {\n-\t    gfc_error (\"DATA element %qs at %L is a pointer and so must \"\n-\t\t\t\"be a full array\", sym->name, where);\n-\t    return false;\n-\t  }\n+      if (has_pointer)\n+\t{\n+\t  if (ref->type == REF_ARRAY && ref->u.ar.type != AR_FULL)\n+\t    {\n+\t      gfc_error (\"DATA element %qs at %L is a pointer and so must \"\n+\t\t\t \"be a full array\", sym->name, where);\n+\t      return false;\n+\t    }\n+\n+\t  if (values.vnode->expr->expr_type == EXPR_CONSTANT)\n+\t    {\n+\t      gfc_error (\"DATA object near %L has the pointer attribute \"\n+\t\t\t \"and the corresponding DATA value is not a valid \"\n+\t\t\t \"initial-data-target\", where);\n+\t      return false;\n+\t    }\n+\t}\n     }\n \n   if (e->rank == 0 || has_pointer)"}, {"sha": "9f7f4e71c31c59d5b384123c52f05186dbcbd913", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ade8fdbbfd98aafdc12585885dea60460fea0a26/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ade8fdbbfd98aafdc12585885dea60460fea0a26/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ade8fdbbfd98aafdc12585885dea60460fea0a26", "patch": "@@ -1,3 +1,8 @@\n+2019-08-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/87991\n+\t* gfortran.dg/pr87991.f90: New test.\n+ \n 2019-08-13  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gcc.target/aarch64/sve/spill_2.c: Increase iteration counts"}, {"sha": "435871ec7799b24c9e2b40bd3323a4b32d33b900", "filename": "gcc/testsuite/gfortran.dg/pr87991.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ade8fdbbfd98aafdc12585885dea60460fea0a26/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr87991.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ade8fdbbfd98aafdc12585885dea60460fea0a26/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr87991.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr87991.f90?ref=ade8fdbbfd98aafdc12585885dea60460fea0a26", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do compile }\n+! { dg-options \"-w\" }\n+! PR fortran/87991\n+program p\n+   type t\n+      character(:), pointer :: c\n+   end type\n+   type(t) :: x\n+   allocate (character(3) :: x%c)\n+   data x%c /'abc'/   ! { dg-error \"has the pointer attribute\" }\n+end"}]}