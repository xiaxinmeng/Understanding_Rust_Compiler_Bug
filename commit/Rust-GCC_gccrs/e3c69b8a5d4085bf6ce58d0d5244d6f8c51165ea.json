{"sha": "e3c69b8a5d4085bf6ce58d0d5244d6f8c51165ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNjNjliOGE1ZDQwODViZjZjZTU4ZDBkNTI0NGQ2ZjhjNTExNjVlYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-06T21:51:42Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-06T21:51:42Z"}, "message": "(emit_reload_insns): Change from USE and CLOBBER insns to using\nCALL_INSN_FUNCTION_USAGE.\n\nFrom-SVN: r7246", "tree": {"sha": "c279c12aae4fd1b41b2ddfcbebb9df65262d7bd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c279c12aae4fd1b41b2ddfcbebb9df65262d7bd2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3c69b8a5d4085bf6ce58d0d5244d6f8c51165ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3c69b8a5d4085bf6ce58d0d5244d6f8c51165ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3c69b8a5d4085bf6ce58d0d5244d6f8c51165ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3c69b8a5d4085bf6ce58d0d5244d6f8c51165ea/comments", "author": null, "committer": null, "parents": [{"sha": "47b0bb9450e673280dfbf74444588f5bb561ef3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47b0bb9450e673280dfbf74444588f5bb561ef3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47b0bb9450e673280dfbf74444588f5bb561ef3d"}], "stats": {"total": 34, "additions": 15, "deletions": 19}, "files": [{"sha": "098eed908358d4bc6813b9d9dee778b3be233f33", "filename": "gcc/reload1.c", "status": "modified", "additions": 15, "deletions": 19, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3c69b8a5d4085bf6ce58d0d5244d6f8c51165ea/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3c69b8a5d4085bf6ce58d0d5244d6f8c51165ea/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=e3c69b8a5d4085bf6ce58d0d5244d6f8c51165ea", "patch": "@@ -4844,6 +4844,21 @@ choose_reload_regs (insn, avoid_return_reg)\n \t\t\t\treload_when_needed[j], reload_mode[j]);\n     }\n \n+  /* Ban all registers used for argument passing to the current\n+     function call.  */\n+  if (GET_CODE (insn) == CALL_INSN)\n+    {\n+      rtx link;\n+\n+      for (link = CALL_INSN_FUNCTION_USAGE (insn); link; link = XEXP (link, 1))\n+\tif (GET_CODE (XEXP (link, 0)) == USE)\n+          {\n+\t    register rtx reg = SET_DEST (XEXP (link, 0));\n+\t    mark_reload_reg_in_use (REGNO (reg), 0, RELOAD_FOR_INPUT,\n+\t\t\t\t    GET_MODE (reg));\n+          }\n+    }\n+\n   if (n_reloads > 1)\n     qsort (reload_order, n_reloads, sizeof (short), reload_reg_class_lower);\n \n@@ -5447,25 +5462,6 @@ emit_reload_insns (insn)\n     input_reload_insns[j] = input_address_reload_insns[j]\n       = output_reload_insns[j] = output_address_reload_insns[j] = 0;\n \n-  /* If this is a CALL_INSN preceded by USE insns, any reload insns\n-     must go in front of the first USE insn, not in front of INSN.  */\n-\n-  if (GET_CODE (insn) == CALL_INSN && GET_CODE (PREV_INSN (insn)) == INSN\n-      && GET_CODE (PATTERN (PREV_INSN (insn))) == USE)\n-    while (GET_CODE (PREV_INSN (before_insn)) == INSN\n-\t   && GET_CODE (PATTERN (PREV_INSN (before_insn))) == USE)\n-      before_insn = PREV_INSN (before_insn);\n-\n-  /* If INSN is followed by any CLOBBER insns made by find_reloads,\n-     put our reloads after them since they may otherwise be \n-     misinterpreted.  */\n-\n-  while (GET_CODE (following_insn) == INSN\n-\t && GET_MODE (following_insn) == DImode\n-\t && GET_CODE (PATTERN (following_insn)) == CLOBBER\n-\t && NEXT_INSN (following_insn) != 0)\n-    following_insn = NEXT_INSN (following_insn);\n-\n   /* Now output the instructions to copy the data into and out of the\n      reload registers.  Do these in the order that the reloads were reported,\n      since reloads of base and index registers precede reloads of operands"}]}