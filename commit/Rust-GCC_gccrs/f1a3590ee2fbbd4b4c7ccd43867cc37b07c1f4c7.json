{"sha": "f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFhMzU5MGVlMmZiYmQ0YjRjN2NjZDQzODY3Y2MzN2IwN2MxZjRjNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-24T17:01:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-24T17:01:19Z"}, "message": "[multiple changes]\n\n2014-02-24  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-os_lib.adb (Errno_Message): Do not depend on Integer'Image.\n\t* s-oscons-tmplt.c: On VxWorks, include adaint.h only after\n\tvxWorks.h has been included.  Also ensure that file attributes\n\trelated definitions are output even in cases where socket support\n\tis not enabled.\n\t* a-tags.adb: Code clean up.\n\t* Make-generated.in (OSCONS_CPP, OSCONS_EXTRACT): Use -iquote\n\tinstead of -I to add the main ada source directory to the header\n\tsearch path, in order to avoid conflict between our own \"types.h\"\n\tand VxWork's <types.h>.\n\n2014-02-24  Robert Dewar  <dewar@adacore.com>\n\n\t* atree.ads, atree.adb (Copy_Separate_Tree): Add Syntax_Only parameter.\n\t* debug.adb: Remove documentation of -gnatd.X, no longer used.\n\t* freeze.adb (Wrap_Imported_Subprogram): Fixed and activated.\n\n2014-02-24  Bob Duff  <duff@adacore.com>\n\n\t* gnat_ugn.texi: Improve documentation of gnatpp.\n\nFrom-SVN: r208083", "tree": {"sha": "a0ba866ce4e9b2ddf5a2203f29d444ceede22713", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0ba866ce4e9b2ddf5a2203f29d444ceede22713"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7/comments", "author": null, "committer": null, "parents": [{"sha": "47752af2e8442f1141f1025e58f9dcb76cdd7422", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47752af2e8442f1141f1025e58f9dcb76cdd7422", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47752af2e8442f1141f1025e58f9dcb76cdd7422"}], "stats": {"total": 958, "additions": 377, "deletions": 581}, "files": [{"sha": "26865cf251bcc2aca588738a8272c9b3f7aa86be", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7", "patch": "@@ -1,3 +1,26 @@\n+2014-02-24  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-os_lib.adb (Errno_Message): Do not depend on Integer'Image.\n+\t* s-oscons-tmplt.c: On VxWorks, include adaint.h only after\n+\tvxWorks.h has been included.  Also ensure that file attributes\n+\trelated definitions are output even in cases where socket support\n+\tis not enabled.\n+\t* a-tags.adb: Code clean up.\n+\t* Make-generated.in (OSCONS_CPP, OSCONS_EXTRACT): Use -iquote\n+\tinstead of -I to add the main ada source directory to the header\n+\tsearch path, in order to avoid conflict between our own \"types.h\"\n+\tand VxWork's <types.h>.\n+\n+2014-02-24  Robert Dewar  <dewar@adacore.com>\n+\n+\t* atree.ads, atree.adb (Copy_Separate_Tree): Add Syntax_Only parameter.\n+\t* debug.adb: Remove documentation of -gnatd.X, no longer used.\n+\t* freeze.adb (Wrap_Imported_Subprogram): Fixed and activated.\n+\n+2014-02-24  Bob Duff  <duff@adacore.com>\n+\n+\t* gnat_ugn.texi: Improve documentation of gnatpp.\n+\n 2014-02-24  Thomas Quinot  <quinot@adacore.com>\n \n \t* g-stheme.adb, g-socthi-vms.adb, g-socthi-vms.ads,"}, {"sha": "412e18b58c060cac9c94409f9d454bfd464c48a6", "filename": "gcc/ada/Make-generated.in", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7/gcc%2Fada%2FMake-generated.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7/gcc%2Fada%2FMake-generated.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-generated.in?ref=f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7", "patch": "@@ -67,12 +67,20 @@ $(ADA_GEN_SUBDIR)/stamp-nmake: $(ADA_GEN_SUBDIR)/sinfo.ads $(ADA_GEN_SUBDIR)/nma\n \ttouch $(ADA_GEN_SUBDIR)/stamp-nmake\n \n # GCC_FOR_TARGET has paths relative to the gcc directory, so we need to adjust\n-# for running it from $(ADA_GEN_SUBDIR)/bldtools/oscons\n+# for running it from $(ADA_GEN_SUBDIR)/bldtools/oscons.\n+\n OSCONS_CC=$(subst ./xgcc,../../../xgcc,$(subst -B./, -B../../../,$(GCC_FOR_TARGET)))\n+\n+# The main ada source directory must be on the include path for #include \"...\"\n+# because s-oscons-tmplt.c requires adaint.h, gsocket.h, and any file included\n+# by these headers. However note that we must use -iquote, not -I, so that\n+# ada/types.h does not conflict with a same-named system header (VxWorks\n+# has a <types.h> header).\n+\n OSCONS_SRCDIR=$${_oscons_srcdir}\n OSCONS_CPP=$(OSCONS_CC) $(GNATLIBCFLAGS) -E -C \\\n-  -DTARGET=\\\"$(target)\\\" -I$(OSCONS_SRCDIR) s-oscons-tmplt.c > s-oscons-tmplt.i\n-OSCONS_EXTRACT=$(OSCONS_CC) -I$(OSCONS_SRCDIR) -S s-oscons-tmplt.i\n+  -DTARGET=\\\"$(target)\\\" -iquote $(OSCONS_SRCDIR) s-oscons-tmplt.c > s-oscons-tmplt.i\n+OSCONS_EXTRACT=$(OSCONS_CC) -iquote $(OSCONS_SRCDIR) -S s-oscons-tmplt.i\n \n # Note: if you need to build with a non-GNU compiler, you could adapt the\n # following definitions (written for VMS DEC-C)"}, {"sha": "8e19d8378d424bfb8f2902d46d2a3e2d42ad51ee", "filename": "gcc/ada/a-tags.adb", "status": "modified", "additions": 34, "deletions": 13, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7/gcc%2Fada%2Fa-tags.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7/gcc%2Fada%2Fa-tags.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tags.adb?ref=f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7", "patch": "@@ -31,7 +31,6 @@\n \n with Ada.Exceptions;\n with Ada.Unchecked_Conversion;\n-with System.CRTL;             use System.CRTL;\n with System.HTable;\n with System.Storage_Elements; use System.Storage_Elements;\n with System.WCh_Con;          use System.WCh_Con;\n@@ -57,6 +56,10 @@ package body Ada.Tags is\n    --  table.  This is Inline_Always since it is called from other Inline_\n    --  Always subprograms where we want no out of line code to be generated.\n \n+   function Length (Str : Cstring_Ptr) return Natural;\n+   --  Length of string represented by the given pointer (treating the string\n+   --  as a C-style string, which is Nul terminated).\n+\n    function OSD (T : Tag) return Object_Specific_Data_Ptr;\n    --  Ada 2005 (AI-251): Given a pointer T to a secondary dispatch table,\n    --  retrieve the address of the record containing the Object Specific\n@@ -270,11 +273,10 @@ package body Ada.Tags is\n \n       function Hash (F : System.Address) return HTable_Headers is\n          function H is new System.HTable.Hash (HTable_Headers);\n-         Str : String (1 .. Integer (strlen (F)));\n-         for Str'Address use F;\n-         pragma Import (Ada, Str);\n+         Str : constant Cstring_Ptr    := To_Cstring_Ptr (F);\n+         Res : constant HTable_Headers := H (Str (1 .. Length (Str)));\n       begin\n-         return H (Str);\n+         return Res;\n       end Hash;\n \n       -----------------\n@@ -283,9 +285,9 @@ package body Ada.Tags is\n \n       procedure Set_HT_Link (T : Tag; Next : Tag) is\n          TSD_Ptr : constant Addr_Ptr :=\n-                     To_Addr_Ptr (To_Address (T) - DT_Typeinfo_Ptr_Size);\n+           To_Addr_Ptr (To_Address (T) - DT_Typeinfo_Ptr_Size);\n          TSD     : constant Type_Specific_Data_Ptr :=\n-                     To_Type_Specific_Data_Ptr (TSD_Ptr.all);\n+           To_Type_Specific_Data_Ptr (TSD_Ptr.all);\n       begin\n          TSD.HT_Link.all := Next;\n       end Set_HT_Link;\n@@ -308,10 +310,8 @@ package body Ada.Tags is\n    procedure Check_TSD (TSD : Type_Specific_Data_Ptr) is\n       T : Tag;\n \n-      E_Tag_Len : constant Integer :=\n-                    Integer (strlen (TSD.External_Tag.all'Address));\n-\n-      E_Tag : String (1 .. E_Tag_Len);\n+      E_Tag_Len : constant Integer := Length (TSD.External_Tag);\n+      E_Tag     : String (1 .. E_Tag_Len);\n       for E_Tag'Address use TSD.External_Tag.all'Address;\n       pragma Import (Ada, E_Tag);\n \n@@ -486,7 +486,7 @@ package body Ada.Tags is\n       TSD_Ptr := To_Addr_Ptr (To_Address (T) - DT_Typeinfo_Ptr_Size);\n       TSD     := To_Type_Specific_Data_Ptr (TSD_Ptr.all);\n       Result  := TSD.Expanded_Name;\n-      return Result (1 .. Integer (strlen  (Result.all'Address)));\n+      return Result (1 .. Length (Result));\n    end Expanded_Name;\n \n    ------------------\n@@ -506,7 +506,7 @@ package body Ada.Tags is\n       TSD_Ptr := To_Addr_Ptr (To_Address (T) - DT_Typeinfo_Ptr_Size);\n       TSD     := To_Type_Specific_Data_Ptr (TSD_Ptr.all);\n       Result  := TSD.External_Tag;\n-      return Result (1 .. Integer (strlen (Result.all'Address)));\n+      return Result (1 .. Length (Result));\n    end External_Tag;\n \n    ---------------------\n@@ -730,6 +730,27 @@ package body Ada.Tags is\n         and then D_TSD.Access_Level = A_TSD.Access_Level;\n    end Is_Descendant_At_Same_Level;\n \n+   ------------\n+   -- Length --\n+   ------------\n+\n+   --  Note: This unit is used in the Ravenscar runtime library, so it cannot\n+   --  depend on System.CTRL. Furthermore, this happens on CPUs where the GCC\n+   --  intrinsic strlen may not be available, so we need to recode our own Ada\n+   --  version here.\n+\n+   function Length (Str : Cstring_Ptr) return Natural is\n+      Len : Integer;\n+\n+   begin\n+      Len := 1;\n+      while Str (Len) /= ASCII.NUL loop\n+         Len := Len + 1;\n+      end loop;\n+\n+      return Len - 1;\n+   end Length;\n+\n    -------------------\n    -- Offset_To_Top --\n    -------------------"}, {"sha": "8b0ef2be83958a01f626675b27e2b586110035b6", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 52, "deletions": 3, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7", "patch": "@@ -772,7 +772,10 @@ package body Atree is\n    -- Copy_Separate_Tree --\n    ------------------------\n \n-   function Copy_Separate_Tree (Source : Node_Id) return Node_Id is\n+   function Copy_Separate_Tree\n+     (Source      : Node_Id;\n+      Syntax_Only : Boolean := False) return Node_Id\n+   is\n       New_Id  : Node_Id;\n \n       function Copy_Entity (E : Entity_Id) return Entity_Id;\n@@ -793,6 +796,10 @@ package body Atree is\n          New_Ent : Entity_Id;\n \n       begin\n+         --  Build appropriate node. Note that in this case, we do not need to\n+         --  do any special casing for Syntax_Only, since the new node has no\n+         --  Etype set, and is always unanalyzed.\n+\n          case N_Entity (Nkind (E)) is\n             when N_Defining_Identifier =>\n                New_Ent := New_Entity (N_Defining_Identifier, Sloc (E));\n@@ -828,7 +835,7 @@ package body Atree is\n                if Has_Extension (E) then\n                   Append (Copy_Entity (E), NL);\n                else\n-                  Append (Copy_Separate_Tree (E), NL);\n+                  Append (Copy_Separate_Tree (E, Syntax_Only), NL);\n                end if;\n \n                Next (E);\n@@ -847,7 +854,8 @@ package body Atree is\n \n       begin\n          if Field in Node_Range then\n-            New_N := Union_Id (Copy_Separate_Tree (Node_Id (Field)));\n+            New_N :=\n+              Union_Id (Copy_Separate_Tree (Node_Id (Field), Syntax_Only));\n \n             if Parent (Node_Id (Field)) = Source then\n                Set_Parent (Node_Id (New_N), New_Id);\n@@ -898,6 +906,47 @@ package body Atree is\n             Set_Entity (New_Id, Empty);\n          end if;\n \n+         --  This is the point at which we do the special processing for\n+         --  the Syntax_Only flag being set:\n+\n+         if Syntax_Only then\n+\n+            --  Reset all Etype fields and Analyzed flags\n+\n+            if Nkind (New_Id) in N_Has_Etype then\n+               Set_Etype (New_Id, Empty);\n+            end if;\n+\n+            Set_Analyzed (New_Id, False);\n+\n+            --  Rather special case, if we have an expanded name, then change\n+            --  it back into a selected component, so that the tree looks the\n+            --  way it did coming out of the parser. This will change back\n+            --  when we analyze the selected component node.\n+\n+            if Nkind (New_Id) = N_Expanded_Name then\n+\n+               --  The following code is a bit kludgy. It would be cleaner to\n+               --  Add an entry Change_Expanded_Name_To_Selected_Component to\n+               --  Sinfo.CN, but that's an earthquake, because it has the wrong\n+               --  license, and Atree is used outside the compiler, e.g. in the\n+               --  binder and in ASIS, so we don't want to add that dependency.\n+\n+               --  Consequently we have no choice but to hold our noses and do\n+               --  the change manually. At least we are Atree, so this odd use\n+               --  of Atree.Unchecked_Access is at least all in the family.\n+\n+               --  Change the node type\n+\n+               Atree.Unchecked_Access.Set_Nkind (New_Id, N_Selected_Component);\n+\n+               --  Clear the Chars field which is not present in a selected\n+               --  component node, so we don't want a junk value around.\n+\n+               Set_Node1 (New_Id, Empty);\n+            end if;\n+         end if;\n+\n          --  All done, return copied node\n \n          return New_Id;"}, {"sha": "1a369575d215ef42190d5c469380277189553e5d", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 30, "deletions": 1, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7", "patch": "@@ -494,7 +494,9 @@ package Atree is\n    --  is thus still attached to the tree. It is valid for Source to be Empty,\n    --  in which case Relocate_Node simply returns Empty as the result.\n \n-   function Copy_Separate_Tree (Source : Node_Id) return Node_Id;\n+   function Copy_Separate_Tree\n+     (Source      : Node_Id;\n+      Syntax_Only : Boolean := False) return Node_Id;\n    --  Given a node that is the root of a subtree, Copy_Separate_Tree copies\n    --  the entire syntactic subtree, including recursively any descendants\n    --  whose parent field references a copied node (descendants not linked to\n@@ -505,6 +507,33 @@ package Atree is\n    --  is called on an unanalyzed tree, and no semantic information is copied.\n    --  However, to ensure that no entities are shared between the two when the\n    --  source is already analyzed, entity fields in the copy are zeroed out.\n+   --\n+   --  In addition, if Syntax_Only is set True, then when Copy_Separate_Tree\n+   --  is applied Identical to Copy_Separate_Tree except that in the case of\n+   --  applying it to an already analyzed tree, all Etype fields are reset,\n+   --  and all Analyzed flags are set False. In addition, Expanded_Name\n+   --  nodes are converted back into the original parser form (where they are\n+   --  Selected_Components), so that renalysis does the right thing.\n+   --\n+   --  Note: it really seems like Copy_Separate_Tree could do these identical\n+   --  steps unconditionally, and that nearly works, except for this one known\n+   --  test case that fails:\n+   --\n+   --    1. procedure III is\n+   --    2.    procedure Proc2 is\n+   --    3.       pragma Inline_Always (Proc2);\n+   --                                   |\n+   --       >>> argument of \"INLINE_ALWAYS\" must be entity in\n+   --           current scope\n+   --\n+   --    4.    begin\n+   --    5.       null;\n+   --    6.    end Proc2;\n+   --    7. begin\n+   --    8.    null;\n+   --    9. end III;\n+   --\n+   --  To be investigated ???\n \n    function Copy_Separate_List (Source : List_Id) return List_Id;\n    --  Applies Copy_Separate_Tree to each element of the Source list, returning"}, {"sha": "11237e23dc9e5148b81cd016bd36bb36575f91b6", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7", "patch": "@@ -141,7 +141,7 @@ package body Debug is\n    --  d.U  Ignore indirect calls for static elaboration\n    --  d.V\n    --  d.W  Print out debugging information for Walk_Library_Items\n-   --  d.X  Activate wrapping of imported subprograms with pre/post conditions\n+   --  d.X\n    --  d.Y\n    --  d.Z\n \n@@ -664,9 +664,6 @@ package body Debug is\n    --       the order in which units are walked. This is primarily for use in\n    --       debugging CodePeer mode.\n \n-   --  d.X  Activates Wrap_Imported_Subprogram in Freeze (not yet working so\n-   --       this allows checkin of partial implementation).\n-\n    --  d1   Error messages have node numbers where possible. Normally error\n    --       messages have only source locations. This option is useful when\n    --       debugging errors caused by expanded code, where the source location"}, {"sha": "a10290fb73a503cf161c4783edadf7662b964244", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 31, "deletions": 28, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7", "patch": "@@ -3400,6 +3400,7 @@ package body Freeze is\n \n       procedure Wrap_Imported_Subprogram (E : Entity_Id) is\n          Loc   : constant Source_Ptr := Sloc (E);\n+         CE    : constant Name_Id    := Chars (E);\n          Spec  : Node_Id;\n          Parms : List_Id;\n          Stmt  : Node_Id;\n@@ -3412,29 +3413,30 @@ package body Freeze is\n \n          if not Is_Imported (E) then\n             return;\n-         end if;\n \n          --  Test enabling conditions for wrapping\n \n-         if Is_Subprogram (E)\n+         elsif Is_Subprogram (E)\n            and then Present (Contract (E))\n            and then Present (Pre_Post_Conditions (Contract (E)))\n            and then not GNATprove_Mode\n          then\n-            --  For now, activate this only if -gnatd.X is set, because there\n-            --  are problems with this procedure, it is not working yet, but\n-            --  we would like to be able to check it in ???\n+            --  Here we do the wrap\n \n-            if not Debug_Flag_Dot_XX then\n-               Error_Msg_NE\n-                 (\"pre/post conditions on imported subprogram are not \"\n-                  & \"enforced??\", E, Pre_Post_Conditions (Contract (E)));\n-               goto Not_Wrapped;\n-            end if;\n+            --  Note on calls to Copy_Separate_Tree. The trees we are copying\n+            --  here are fully analyzed, but we definitely want fully syntactic\n+            --  unanalyzed trees in the body we construct, so that the analysis\n+            --  generates the right visibility. So this is a case in which we\n+            --  set Syntax_Only. See spec of Copy_Separate_Tree for details on\n+            --  the use of this flag.\n+\n+            --  Acquire copy of Inline pragma\n+\n+            Iprag :=\n+              Copy_Separate_Tree (Import_Pragma (E), Syntax_Only => True);\n \n             --  Fix up spec to be not imported any more\n \n-            Iprag := Import_Pragma (E);\n             Set_Is_Imported    (E, False);\n             Set_Interface_Name (E, Empty);\n             Set_Has_Completion (E, False);\n@@ -3449,7 +3451,7 @@ package body Freeze is\n             Parms := New_List;\n             Forml := First_Formal (E);\n             while Present (Forml) loop\n-               Append_To (Parms, New_Occurrence_Of (Forml, Loc));\n+               Append_To (Parms, Make_Identifier (Loc, Chars (Forml)));\n                Next_Formal (Forml);\n             end loop;\n \n@@ -3460,47 +3462,48 @@ package body Freeze is\n                  Make_Simple_Return_Statement (Loc,\n                    Expression =>\n                      Make_Function_Call (Loc,\n-                       Name                   => New_Occurrence_Of (E, Loc),\n+                       Name                   => Make_Identifier (Loc, CE),\n                        Parameter_Associations => Parms));\n \n             else\n                Stmt :=\n                  Make_Procedure_Call_Statement (Loc,\n-                   Name                   => New_Occurrence_Of (E, Loc),\n+                   Name                   => Make_Identifier (Loc, CE),\n                    Parameter_Associations => Parms);\n             end if;\n \n             --  Now build the body\n \n             Bod :=\n               Make_Subprogram_Body (Loc,\n-                Specification              => Copy_Separate_Tree (Spec),\n+                Specification              =>\n+                  Copy_Separate_Tree (Spec, Syntax_Only => True),\n                 Declarations               => New_List (\n                   Make_Subprogram_Declaration (Loc,\n-                    Specification => Copy_Separate_Tree (Spec)),\n-                  Copy_Separate_Tree (Iprag)),\n+                    Specification =>\n+                      Copy_Separate_Tree (Spec, Syntax_Only => True)),\n+                    Iprag),\n                 Handled_Statement_Sequence =>\n                   Make_Handled_Sequence_Of_Statements (Loc,\n                     Statements             => New_List (Stmt),\n-                    End_Label              => New_Occurrence_Of (E, Loc)));\n+                    End_Label              => Make_Identifier (Loc, CE)));\n \n             --  Append the body to freeze result\n \n             Add_To_Result (Bod);\n             return;\n-         end if;\n \n          --  Case of imported subprogram that does not get wrapped\n \n-         <<Not_Wrapped>>\n-\n-         --  Set Is_Public. All imported entities need an external symbol\n-         --  created for them since they are always referenced from another\n-         --  object file. Note this used to be set when we set Is_Imported\n-         --  back in Sem_Prag, but now we delay it to this point, since we\n-         --  don't want to set this flag if we wrap an imported subprogram.\n+         else\n+            --  Set Is_Public. All imported entities need an external symbol\n+            --  created for them since they are always referenced from another\n+            --  object file. Note this used to be set when we set Is_Imported\n+            --  back in Sem_Prag, but now we delay it to this point, since we\n+            --  don't want to set this flag if we wrap an imported subprogram.\n \n-         Set_Is_Public (E);\n+            Set_Is_Public (E);\n+         end if;\n       end Wrap_Imported_Subprogram;\n \n    --  Start of processing for Freeze_Entity"}, {"sha": "6fc86ab524a8509440be7a84be65332a4abb23ea", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 131, "deletions": 502, "changes": 633, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7", "patch": "@@ -11319,7 +11319,7 @@ to be processed.\n @item -X@var{name}=@var{value}\n @cindex @option{-X} @command{gnatelim}\n Indicates that external variable @var{name} in the argument project\n-has the @var{value} value. Has no effect if no project is specified as\n+has the value @var{value}. Has no effect if no project is specified as\n tool argument.\n \n @item ^-files^/FILES^=@var{filename}\n@@ -14076,25 +14076,23 @@ is now available.\n To invoke the old formatting algorithms, use the @option{--pp-old} switch.\n Support for @option{--pp-old} will be removed in some future version.\n \n-To produce a reformatted file, @command{gnatpp} generates and uses the ASIS\n-tree for the input source and thus requires the input to be syntactically and\n-semantically legal.\n-If this condition is not met, @command{gnatpp} will terminate with an\n-error message; no output file will be generated.\n+To produce a reformatted file, @command{gnatpp} invokes the Ada\n+compiler and generates and uses the ASIS tree for the input source;\n+thus the input must be legal Ada code.\n \n @command{gnatpp} cannot process sources that contain\n preprocessing directives.\n \n-If the compilation unit\n-contained in the input source depends semantically upon units located\n-outside the current directory, you have to provide the source search path\n-when invoking @command{gnatpp}, if these units are contained in files with\n-names that do not follow the GNAT file naming rules, you have to provide\n-the configuration file describing the corresponding naming scheme;\n-see the description of the @command{gnatpp}\n-switches below. Another possibility is to use a project file and to\n-call @command{gnatpp} through the @command{gnat} driver\n-(see @ref{The GNAT Driver and Project Files}).\n+If the compilation unit contained in the input source depends\n+semantically upon units located outside the current directory, you\n+have to provide the source search path when invoking\n+@command{gnatpp}. If these units are contained in files with names\n+that do not follow the GNAT file naming rules, you have to provide a\n+configuration file describing the corresponding naming scheme; see the\n+description of the @command{gnatpp} switches below. Another\n+possibility is to use a project file and to call @command{gnatpp}\n+through the @command{gnat} driver (see @ref{The GNAT Driver and\n+Project Files}).\n \n The @command{gnatpp} command has the form\n \n@@ -14114,18 +14112,16 @@ output source file\n \n @item\n @var{filename} is the name (including the extension) of the source file to\n-reformat; ``wildcards'' or several file names on the same gnatpp command are\n-allowed.  The file name may contain path information; it does not have to\n+reformat; wildcards or several file names on the same gnatpp command are\n+allowed. The file name may contain path information; it does not have to\n follow the GNAT file naming rules\n \n @item\n @samp{@var{gcc_switches}} is a list of switches for\n @command{gcc}. They will be passed on to all compiler invocations made by\n-@command{gnatelim} to generate the ASIS trees. Here you can provide\n+@command{gnatpp} to generate the ASIS trees. Here you can provide\n @option{^-I^/INCLUDE_DIRS=^} switches to form the source search path,\n-use the @option{-gnatec} switch to set the configuration file,\n-use the @option{-gnat05} switch if sources should be compiled in\n-Ada 2005 mode  etc.\n+use the @option{-gnatec} switch to set the configuration file, etc.\n @end itemize\n \n @node Switches for gnatpp\n@@ -14149,10 +14145,6 @@ You may supply several such switches to @command{gnatpp}, but then\n each must be specified in full, with both the name and the value.\n Abbreviated forms (the name appearing once, followed by each value) are\n not permitted.\n-For example, to set\n-the alignment of the assignment delimiter both in declarations and in\n-assignment statements, you must write @option{-A2A3}\n-(or @option{-A2 -A3}), but not @option{-A23}.\n @end ifclear\n \n @ifset vms\n@@ -14162,21 +14154,11 @@ word may have exactly one option, which specifies either upper case, lower\n case, or mixed case), and thus exactly one such option can be in effect for\n an invocation of @command{gnatpp}.\n If more than one is supplied, the last one is used.\n-However, some qualifiers have options that are mutually compatible,\n-and then you may then supply several such options when invoking\n-@command{gnatpp}.\n @end ifset\n \n-In most cases, it is obvious whether or not the\n-^values for a switch with a given name^options for a given qualifier^\n-are compatible with each other.\n-When the semantics might not be evident, the summaries below explicitly\n-indicate the effect.\n-\n @menu\n * Alignment Control::\n * Casing Control::\n-* Construct Layout Control::\n * General Text Layout Control::\n * Other Formatting Options::\n * Setting the Source Search Path::\n@@ -14190,44 +14172,22 @@ indicate the effect.\n \n @noindent\n Programs can be easier to read if certain constructs are vertically aligned.\n-By default all alignments are set ON.\n-Through the @option{^-A0^/ALIGN=OFF^} switch you may reset the default to\n-OFF, and then use one or more of the other\n-^@option{-A@var{n}} switches^@option{/ALIGN} options^\n-to activate alignment for specific constructs.\n+By default alignment of the following constructs is set ON:\n+@code{:} in declarations, @code{:=} in initializations in declarations\n+@code{:=} in assignment statements, @code{=>} in associations, and\n+@code{at} keywords in the component clauses in record\n+representation clauses.\n \n @table @option\n @cindex @option{^-A@var{n}^/ALIGN^} (@command{gnatpp})\n \n-@ifset vms\n-@item /ALIGN=ON\n-Set all alignments to ON\n-@end ifset\n-\n @item ^-A0^/ALIGN=OFF^\n-Set all alignments to OFF\n-\n-@item ^-A1^/ALIGN=COLONS^\n-Align @code{:} in declarations\n-\n-@item ^-A2^/ALIGN=DECLARATIONS^\n-Align @code{:=} in initializations in declarations\n+Set alignment to OFF\n \n-@item ^-A3^/ALIGN=STATEMENTS^\n-Align @code{:=} in assignment statements\n-\n-@item ^-A4^/ALIGN=ARROWS^\n-Align @code{=>} in associations\n-\n-@item ^-A5^/ALIGN=COMPONENT_CLAUSES^\n-Align @code{at} keywords in the component clauses in record\n-representation clauses\n+@item ^-A1^/ALIGN=ON^\n+Set alignment to ON\n @end table\n \n-@noindent\n-The @option{^-A^/ALIGN^} switches are mutually compatible; any combination\n-is allowed.\n-\n @node Casing Control\n @subsection Casing Control\n @cindex Casing control in @command{gnatpp}\n@@ -14240,10 +14200,6 @@ general rule for name casing but also override this rule\n via a set of dictionary files.\n \n Three types of casing are supported: lower case, upper case, and mixed case.\n-Lower and upper case are self-explanatory (but since some letters in\n-Latin1 and other GNAT-supported character sets\n-exist only in lower-case form, an upper case conversion will have no\n-effect on them.)\n ``Mixed case'' means that the first letter, and also each letter immediately\n following an underscore, are converted to their uppercase forms;\n all the other letters are converted to their lowercase forms.\n@@ -14369,10 +14325,6 @@ The @option{^-D-^/SPECIFIC_CASING^} and\n @option{^-D@var{file}^/DICTIONARY=@var{file}^} switches are mutually\n compatible.\n \n-@node Construct Layout Control\n-@subsection Construct Layout Control\n-@cindex Layout control in @command{gnatpp}\n-\n @noindent\n This group of @command{gnatpp} switches controls the layout of comments and\n complex syntactic constructs.  See @ref{Formatting Comments} for details\n@@ -14381,53 +14333,31 @@ on their effect.\n @table @option\n @cindex @option{^-c@var{n}^/COMMENTS_LAYOUT^} (@command{gnatpp})\n @item ^-c0^/COMMENTS_LAYOUT=UNTOUCHED^\n-All the comments remain unchanged\n+All comments remain unchanged.\n \n @item ^-c1^/COMMENTS_LAYOUT=DEFAULT^\n-GNAT-style comment line indentation (this is the default).\n-\n-@item ^-c2^/COMMENTS_LAYOUT=STANDARD_INDENT^\n-Reference-manual comment line indentation.\n+GNAT-style comment line indentation.\n+This is the default.\n \n @item ^-c3^/COMMENTS_LAYOUT=GNAT_BEGINNING^\n-GNAT-style comment beginning\n+GNAT-style comment beginning.\n \n @item ^-c4^/COMMENTS_LAYOUT=REFORMAT^\n-Reformat comment blocks\n+Fill comment blocks.\n \n @item ^-c5^/COMMENTS_LAYOUT=KEEP_SPECIAL^\n-Keep unchanged special form comments\n+Keep unchanged special form comments.\n+This is the default.\n \n @item --comments-only\n @cindex @option{--comments-only} @command{gnatpp}\n Format just the comments.\n \n-@cindex @option{^-l@var{n}^/CONSTRUCT_LAYOUT^} (@command{gnatpp})\n-@item ^-l1^/CONSTRUCT_LAYOUT=GNAT^\n-GNAT-style layout (this is the default)\n-\n-@item ^-l2^/CONSTRUCT_LAYOUT=COMPACT^\n-Compact layout\n-\n-@item ^-l3^/CONSTRUCT_LAYOUT=UNCOMPACT^\n-Uncompact layout\n-\n-@cindex @option{^-N^/NOTABS^} (@command{gnatpp})\n-@item ^-N^/NOTABS^\n-All the VT characters are removed from the comment text. All the HT characters\n-are expanded with the sequences of space characters to get to the next tab\n-stops.\n-\n @cindex @option{^--no-separate-is^/NO_SEPARATE_IS^} (@command{gnatpp})\n @item ^--no-separate-is^/NO_SEPARATE_IS^\n Do not place the keyword @code{is} on a separate line in a subprogram body in\n case if the spec occupies more than one line.\n \n-@cindex @option{^--separate-label^/SEPARATE_LABEL^} (@command{gnatpp})\n-@item ^--separate-label^/SEPARATE_LABEL^\n-Place statement label(s) on a separate line, with the following statement\n-on the next line.\n-\n @cindex @option{^--separate-loop-then^/SEPARATE_LOOP_THEN^} (@command{gnatpp})\n @item ^--separate-loop-then^/SEPARATE_LOOP_THEN^\n Place the keyword @code{loop} in FOR and WHILE loop statements and the\n@@ -14443,11 +14373,6 @@ incompatible with @option{^--separate-loop-then^/SEPARATE_LOOP_THEN^} option.\n @item ^--use-on-new-line^/USE_ON_NEW_LINE^\n Start each USE clause in a context clause from a separate line.\n \n-@cindex @option{^--separate-stmt-name^/STMT_NAME_ON_NEW_LINE^} (@command{gnatpp})\n-@item ^--separate-stmt-name^/STMT_NAME_ON_NEW_LINE^\n-Use a separate line for a loop or block statement name, but do not use an extra\n-indentation level for the statement itself.\n-\n @cindex @option{^--insert-blank-lines^/INSERT_BLANK_LINES^} (@command{gnatpp})\n @item ^--insert-blank-lines^/INSERT_BLANK_LINES^\n Insert blank lines where appropriate (between bodies and other large\n@@ -14462,28 +14387,16 @@ multiple blank lines down to one.\n \n @ifclear vms\n @noindent\n-The @option{-c1} and @option{-c2} switches are incompatible.\n-The @option{-c3} and @option{-c4} switches are compatible with each other and\n-also with @option{-c1} and @option{-c2}. The @option{-c0} switch disables all\n-the other comment formatting switches.\n-\n-The @option{-l1}, @option{-l2}, and @option{-l3} switches are incompatible.\n+The @option{-c} switches are compatible with one another, except that\n+the @option{-c0} switch disables all other comment formatting\n+switches.\n @end ifclear\n \n @ifset vms\n @noindent\n-For the @option{/COMMENTS_LAYOUT} qualifier:\n-@itemize @bullet\n-@item\n-The @option{DEFAULT} and @option{STANDARD_INDENT} options are incompatible.\n-@item\n-The @option{GNAT_BEGINNING} and @option{REFORMAT} options are compatible with\n-each other and also with @option{DEFAULT} and @option{STANDARD_INDENT}.\n-@end itemize\n-\n-@noindent\n-The @option{GNAT}, @option{COMPACT}, and @option{UNCOMPACT} options for the\n-@option{/CONSTRUCT_LAYOUT} qualifier are incompatible.\n+For the @option{/COMMENTS_LAYOUT} qualifier,\n+The @option{GNAT_BEGINNING}, @option{REFORMAT}, and @option{DEFAULT}\n+options are compatible with one another.\n @end ifset\n \n @node General Text Layout Control\n@@ -14515,8 +14428,7 @@ line indentation is also 1)\n @subsection Other Formatting Options\n \n @noindent\n-These switches control the inclusion of missing end/exit labels, and\n-the indentation level in @b{case} statements, etc.\n+These switches control other formatting not listed above.\n \n @table @option\n @item --decimal-grouping=@var{n}\n@@ -14533,36 +14445,21 @@ Same as @code{--decimal-grouping}, but for based literals. For\n example, with @code{--based-grouping=4}, @code{16#0001FFFE#} will be\n changed to @code{16#0001_FFFE#}.\n \n-@item ^-e^/NO_MISSED_LABELS^\n-@cindex @option{^-e^/NO_MISSED_LABELS^} (@command{gnatpp})\n-Do not insert missing end/exit labels. An end label is the name of\n-a construct that may optionally be repeated at the end of the\n-construct's declaration;\n-e.g., the names of packages, subprograms, and tasks.\n-An exit label is the name of a loop that may appear as target\n-of an exit statement within the loop.\n-By default, @command{gnatpp} inserts these end/exit labels when\n-they are absent from the original source. This option suppresses such\n-insertion, so that the formatted source reflects the original.\n+@item ^--RM-style-spacing^/RM_STYLE_SPACING^\n+@cindex @option{^--RM-style-spacing^/RM_STYLE_SPACING^} (@command{gnatpp})\n+Do not insert an extra blank before various occurrences of\n+`(' and `:'. This also turns off alignment.\n \n @item ^-ff^/FORM_FEED_AFTER_PRAGMA_PAGE^\n @cindex @option{^-ff^/FORM_FEED_AFTER_PRAGMA_PAGE^} (@command{gnatpp})\n Insert a Form Feed character after a pragma Page.\n \n-@item ^-T@var{nnn}^/MAX_INDENT=@var{nnn}^\n-@cindex @option{^-T^/MAX_INDENT^} (@command{gnatpp})\n-Do not use an additional indentation level for @b{case} alternatives\n-and variants if there are @var{nnn} or more (the default\n-value is 10).\n-If @var{nnn} is 0, an additional indentation level is\n-used for @b{case} alternatives and variants regardless of their number.\n-\n @item ^--call_threshold=@var{nnn}^/MAX_ACT=@var{nnn}^\n @cindex @option{^--call_threshold^/MAX_ACT^} (@command{gnatpp})\n If the number of parameter associations is greater than @var{nnn} and if at\n least one association uses named notation, start each association from\n a new line. If @var{nnn} is 0, no check for the number of associations\n-is made, this is the default.\n+is made; this is the default.\n \n @item ^--par_threshold=@var{nnn}^/MAX_PAR=@var{nnn}^\n @cindex @option{^--par_threshold^/MAX_PAR^} (@command{gnatpp})\n@@ -14576,34 +14473,30 @@ a new line. The default for @var{nnn} is 3.\n \n @noindent\n To define the search path for the input source file, @command{gnatpp}\n-uses the same switches as the GNAT compiler, with the same effects.\n+uses the same switches as the GNAT compiler, with the same effects:\n \n @table @option\n @item ^-I^/SEARCH=^@var{dir}\n @cindex @option{^-I^/SEARCH^} (@command{gnatpp})\n-The same as the corresponding gcc switch\n \n @item ^-I-^/NOCURRENT_DIRECTORY^\n @cindex @option{^-I-^/NOCURRENT_DIRECTORY^} (@command{gnatpp})\n-The same as the corresponding gcc switch\n \n @item ^-gnatec^/CONFIGURATION_PRAGMAS_FILE^=@var{path}\n @cindex @option{^-gnatec^/CONFIGURATION_PRAGMAS_FILE^} (@command{gnatpp})\n-The same as the corresponding gcc switch\n \n @item ^--RTS^/RUNTIME_SYSTEM^=@var{path}\n @cindex @option{^--RTS^/RUNTIME_SYSTEM^} (@command{gnatpp})\n-The same as the corresponding gcc switch\n \n @end table\n \n @node Output File Control\n @subsection Output File Control\n \n @noindent\n-By default the output is sent to the file whose name is obtained by appending\n-the ^@file{.pp}^@file{$PP}^ suffix to the name of the input file\n-(if the file with this name already exists, it is unconditionally overwritten).\n+By default the output is sent to a file whose name is obtained by appending\n+the ^@file{.pp}^@file{$PP}^ suffix to the name of the input file.\n+If the file with this name already exists, it is overwritten.\n Thus if the input file is @file{^my_ada_proc.adb^MY_ADA_PROC.ADB^} then\n @command{gnatpp} will produce @file{^my_ada_proc.adb.pp^MY_ADA_PROC.ADB$PP^}\n as output file.\n@@ -14645,21 +14538,20 @@ creating any backup copy of the input source.\n \n @item ^--eol=@var{xxx}^/END_OF_LINE=@var{xxx}^\n @cindex @option{^--eol^/END_OF_LINE^} (@code{gnatpp})\n-Specifies the format of the reformatted output file. The @var{xxx}\n-^string specified with the switch^option^ may be either\n+Specifies the line-ending style of the reformatted output file. The @var{xxx}\n+^string specified with the switch^option^ may be:\n @itemize @bullet\n @item ``@option{^dos^DOS^}'' MS DOS style, lines end with CR LF characters\n @item ``@option{^crlf^CRLF^}''\n-the same as @option{^crlf^CRLF^}\n+the same as @option{^dos^DOS^}\n @item ``@option{^unix^UNIX^}'' UNIX style, lines end with LF character\n @item ``@option{^lf^LF^}''\n the same as @option{^unix^UNIX^}\n @end itemize\n \n @item ^-W^/RESULT_ENCODING=^@var{e}\n @cindex @option{^-W^/RESULT_ENCODING=^} (@command{gnatpp})\n-Specify the wide character encoding method used to write the code in the\n-result file\n+Specify the wide character encoding method for the input and output files.\n @var{e} is one of the following:\n \n @itemize @bullet\n@@ -14686,8 +14578,7 @@ Brackets encoding (default value)\n @end table\n \n @noindent\n-Options @option{^-pipe^/STANDARD_OUTPUT^},\n-@option{^-o^/OUTPUT^} and\n+Options @option{^-o^/OUTPUT^} and\n @option{^-of^/FORCED_OUTPUT^} are allowed only if the call to gnatpp\n contains only one file to reformat.\n Option\n@@ -14706,7 +14597,7 @@ The additional @command{gnatpp} switches are defined in this subsection.\n @table @option\n @item --version\n @cindex @option{--version} @command{gnatpp}\n-Display Copyright and version, then exit disregarding all other options.\n+Display copyright and version, then exit disregarding all other options.\n \n @item --help\n @cindex @option{--help} @command{gnatpp}\n@@ -14716,7 +14607,7 @@ Display usage, then exit disregarding all other options.\n @cindex @option{-P} @command{gnatpp}\n Indicates the name of the project file that describes the set of sources\n to be processed. The exact set of argument sources depends on other options\n-specified, see below.\n+specified; see below.\n \n @item -U\n @cindex @option{-U} @command{gnatpp}\n@@ -14734,7 +14625,7 @@ has no effect.\n @item -X@var{name}=@var{value}\n @cindex @option{-X} @command{gnatpp}\n Indicates that external variable @var{name} in the argument project\n-has the @var{value} value. Has no effect if no project is specified as\n+has the value @var{value}. Has no effect if no project is specified as\n tool argument.\n \n @item --pp-off=@var{xxx}\n@@ -14774,16 +14665,12 @@ This option cannot be used together with @option{^-r^/REPLACE^},\n Print out execution time.\n \n @item ^-v^/VERBOSE^\n-@cindex @option{^-v^/VERBOSE^} (@code{gnatpp})\n-Verbose mode;\n-@command{gnatpp} generates version information and then\n-a trace of the actions it takes to produce or obtain the ASIS tree.\n-\n-@item ^-w^/WARNINGS^\n-@cindex @option{^-w^/WARNINGS^} (@code{gnatpp})\n-Warning mode;\n-@command{gnatpp} generates a warning whenever it cannot provide\n-a required layout in the result source.\n+@cindex @option{^-v^/VERBOSE^} (@command{gnatpp})\n+Verbose mode\n+\n+@item ^-q^/QUIET^\n+@cindex @option{^-q^/QUIET^} (@command{gnatpp})\n+Quiet mode\n @end table\n \n @noindent\n@@ -14797,15 +14684,14 @@ all the immediate units of the argument project.\n @section Formatting Rules\n \n @noindent\n-The following subsections show how @command{gnatpp} treats ``white space'',\n+The following subsections show how @command{gnatpp} treats white space,\n comments, program layout, and name casing.\n-They provide the detailed descriptions of the switches shown above.\n+They provide detailed descriptions of the switches shown above.\n \n @menu\n * Disabling Pretty Printing::\n * White Space and Empty Lines::\n * Formatting Comments::\n-* Construct Layout::\n * Name Casing::\n @end menu\n \n@@ -14832,7 +14718,7 @@ be followed by arbitrary additional text. For example:\n @cartouche\n package Interrupts is\n    --!pp off -- turn off pretty printing so \"Interrupt_Kind\" lines up\n-   type Interrupt_Kind is\n+   type            Interrupt_Kind is\n      (Asynchronous_Interrupt_Kind,\n        Synchronous_Interrupt_Kind,\n              Green_Interrupt_Kind);\n@@ -14842,12 +14728,12 @@ package Interrupts is\n @end cartouche\n @end smallexample\n \n-You can specify different comment strings using the gnatpp\n-@code{--pp-off} and @code{--pp-on} switches. For example, if you say\n-@code{gnatpp --pp-off=' pp-' *.ad?} then gnatpp will recognize\n-comments of the form @code{-- pp-} instead of @code{--!pp off} for\n-disabling pretty printing. Note that the leading @code{--} of the\n-comment is not included in the argument to these switches.\n+You can specify different comment strings using the @code{--pp-off}\n+and @code{--pp-on} switches. For example, if you say @code{gnatpp\n+--pp-off=' pp-' *.ad?} then gnatpp will recognize comments of the form\n+@code{-- pp-} instead of @code{--!pp off} for disabling pretty\n+printing. Note that the leading @code{--} of the comment is not\n+included in the argument to these switches.\n \n @node White Space and Empty Lines\n @subsection White Space and Empty Lines\n@@ -14856,31 +14742,17 @@ comment is not included in the argument to these switches.\n @command{gnatpp} does not have an option to control space characters.\n It will add or remove spaces according to the style illustrated by the\n examples in the @cite{Ada Reference Manual}.\n-\n-The only format effectors\n-(see @cite{Ada Reference Manual}, paragraph 2.1(13))\n-that will appear in the output file are platform-specific line breaks,\n-and also format effectors within (but not at the end of) comments.\n-In particular, each horizontal tab character that is not inside\n-a comment will be treated as a space and thus will appear in the\n-output file as zero or more spaces depending on\n-the reformatting of the line in which it appears.\n-The only exception is a Form Feed character, which is inserted after a\n-pragma @code{Page} when @option{-ff} is set.\n-\n-The output file will contain no lines with trailing ``white space'' (spaces,\n-format effectors).\n-\n-Empty lines in the original source are preserved\n-only if they separate declarations or statements.\n-In such contexts, a\n-sequence of two or more empty lines is replaced by exactly one empty line.\n-Note that a blank line will be removed if it separates two ``comment blocks''\n-(a comment block is a sequence of whole-line comments).\n-In order to preserve a visual separation between comment blocks, use an\n-``empty comment'' (a line comprising only hyphens) rather than an empty line.\n-Likewise, if for some reason you wish to have a sequence of empty lines,\n-use a sequence of empty comments instead.\n+The output file will contain no lines with trailing white space.\n+\n+By default, a sequence of one or more blank lines in the input is\n+converted to a single blank line in the output; multiple blank lines\n+are squeezed down to one.\n+The @option{^--preserve-blank-lines^/PRESERVE_BLANK_LINES^} option\n+turns off the squeezing; each blank line in the input is copied\n+to the output.\n+The @option{^--insert-blank-lines^/INSERT_BLANK_LINES^} option\n+causes additional blank lines to be inserted if not already\n+present in the input (e.g. between bodies).\n \n @node Formatting Comments\n @subsection Formatting Comments\n@@ -14890,82 +14762,26 @@ Comments in Ada code are of two kinds:\n @itemize @bullet\n @item\n a @emph{whole-line comment}, which appears by itself (possibly preceded by\n-``white space'') on a line\n+white space) on a line\n \n @item\n-an @emph{end-of-line comment}, which follows some other Ada lexical element\n-on the same line.\n+an @emph{end-of-line comment}, which follows some other Ada code on\n+the same line.\n @end itemize\n \n @noindent\n-The indentation of a whole-line comment is that of either\n-the preceding or following line in\n-the formatted source, depending on switch settings as will be described below.\n-\n-For an end-of-line comment, @command{gnatpp} leaves the same number of spaces\n-between the end of the preceding Ada lexical element and the beginning\n-of the comment as appear in the original source,\n-unless either the comment has to be split to\n-satisfy the line length limitation, or else the next line contains a\n-whole line comment that is considered a continuation of this end-of-line\n-comment (because it starts at the same position).\n-In the latter two\n-cases, the start of the end-of-line comment is moved right to the nearest\n-multiple of the indentation level.\n-This may result in a ``line overflow'' (the right-shifted comment extending\n-beyond the maximum line length), in which case the comment is split as\n-described below.\n-\n-There is a difference between @option{^-c1^/COMMENTS_LAYOUT=DEFAULT^}\n-(GNAT-style comment line indentation)\n-and @option{^-c2^/COMMENTS_LAYOUT=STANDARD_INDENT^}\n-(reference-manual comment line indentation).\n-With reference-manual style, a whole-line comment is indented as if it\n-were a declaration or statement at the same place\n-(i.e., according to the indentation of the preceding line(s)).\n-With GNAT style, a whole-line comment that is immediately followed by an\n-@b{if} or @b{case} statement alternative, a record variant, or the reserved\n-word @b{begin}, is indented based on the construct that follows it.\n-\n-For example:\n-@smallexample @c ada\n-@cartouche\n-if A then\n-    null;\n-       -- some comment\n-else\n-   null;\n-end if;\n-@end cartouche\n-@end smallexample\n-\n-@noindent\n-Reference-manual indentation produces:\n-\n-@smallexample @c ada\n-@cartouche\n-if A then\n-   null;\n-   --  some comment\n-else\n-   null;\n-end if;\n-@end cartouche\n-@end smallexample\n-\n-@noindent\n-while GNAT-style indentation produces:\n+A whole-line comment is indented according to the surrounding code,\n+with some exceptions.\n+Comments that start in column 1 are kept there.\n+If possible, comments are not moved so far to the right that the maximum\n+line length is exceeded.\n+The @option{^-c0^/COMMENTS_LAYOUT=UNTOUCHED^} option\n+turns off comment formatting.\n+Special-form comments such as SPARK-style @code{--#...} are left alone.\n \n-@smallexample @c ada\n-@cartouche\n-if A then\n-   null;\n---  some comment\n-else\n-   null;\n-end if;\n-@end cartouche\n-@end smallexample\n+For an end-of-line comment, @command{gnatpp} tries to leave the same\n+number of spaces between the end of the preceding Ada code and the\n+beginning of the comment as appear in the original source.\n \n @noindent\n The @option{^-c3^/COMMENTS_LAYOUT=GNAT_BEGINNING^} switch\n@@ -14981,57 +14797,10 @@ first non-blank character of the comment.\n @end itemize\n \n @noindent\n-For an end-of-line comment, if in the original source the next line is a\n-whole-line comment that starts at the same position\n-as the end-of-line comment,\n-then the whole-line comment (and all whole-line comments\n-that follow it and that start at the same position)\n-will start at this position in the output file.\n-\n-@noindent\n-That is, if in the original source we have:\n-\n-@smallexample @c ada\n-@cartouche\n-begin\n-A := B + C;            --  B must be in the range Low1..High1\n-                       --  C must be in the range Low2..High2\n-             --B+C will be in the range Low1+Low2..High1+High2\n-X := X + 1;\n-@end cartouche\n-@end smallexample\n-\n-@noindent\n-Then in the formatted source we get\n-\n-@smallexample @c ada\n-@cartouche\n-begin\n-   A := B + C;            --  B must be in the range Low1..High1\n-                          --  C must be in the range Low2..High2\n-   --  B+C will be in the range Low1+Low2..High1+High2\n-   X := X + 1;\n-@end cartouche\n-@end smallexample\n-\n-@noindent\n-A comment that exceeds the line length limit will be split.\n-Unless switch\n-@option{^-c4^/COMMENTS_LAYOUT=REFORMAT^} (reformat comment blocks) is set and\n-the line belongs to a reformattable block, splitting the line generates a\n-@command{gnatpp} warning.\n-The @option{^-c4^/COMMENTS_LAYOUT=REFORMAT^} switch specifies that whole-line\n-comments may be reformatted in typical\n-word processor style (that is, moving words between lines and putting as\n-many words in a line as possible).\n-\n-@noindent\n-The @option{^-c5^/COMMENTS_LAYOUT=KEEP_SPECIAL^} switch specifies, that comments\n-that has a special format (that is, a character that is neither a letter nor digit\n-not white space nor line break immediately following the leading @code{--} of\n-the comment) should be without any change moved from the argument source\n-into reformatted source. This switch allows to preserve comments that are used\n-as a special marks in the code (e.g.@: SPARK annotation).\n+The @option{^-c4^/COMMENTS_LAYOUT=REFORMAT^} switch specifies that\n+whole-line comments that form a paragraph will be filled in typical\n+word processor style (that is, moving words between lines to make the\n+lines other than the last similar in length ).\n \n @noindent\n The @option{--comments-only} switch specifies that only the comments\n@@ -15044,157 +14813,6 @@ spaces after @code{--}, and @option{--comments-only -c3 -c4} does\n both. If @option{--comments-only} is given without @option{-c3} or\n @option{-c4}, then gnatpp doesn't format anything.\n \n-@node Construct Layout\n-@subsection Construct Layout\n-\n-@noindent\n-In several cases the suggested layout in the Ada Reference Manual includes\n-an extra level of indentation that many programmers prefer to avoid. The\n-affected cases include:\n-\n-@itemize @bullet\n-\n-@item Record type declaration (RM 3.8)\n-\n-@item Record representation clause (RM 13.5.1)\n-\n-@item Loop statement in case if a loop has a statement identifier (RM 5.6)\n-\n-@item Block statement in case if a block has a statement identifier (RM 5.6)\n-@end itemize\n-\n-@noindent\n-In compact mode (when GNAT style layout or compact layout is set),\n-the pretty printer uses one level of indentation instead\n-of two. This is achieved in the record definition and record representation\n-clause cases by putting the @code{record} keyword on the same line as the\n-start of the declaration or representation clause, and in the block and loop\n-case by putting the block or loop header on the same line as the statement\n-identifier.\n-\n-@noindent\n-The difference between GNAT style @option{^-l1^/CONSTRUCT_LAYOUT=GNAT^}\n-and compact @option{^-l2^/CONSTRUCT_LAYOUT=COMPACT^}\n-layout on the one hand, and uncompact layout\n-@option{^-l3^/CONSTRUCT_LAYOUT=UNCOMPACT^} on the other hand,\n-can be illustrated by the following examples:\n-\n-@iftex\n-@cartouche\n-@multitable @columnfractions .5 .5\n-@item @i{GNAT style, compact layout} @tab @i{Uncompact layout}\n-\n-@item\n-@smallexample @c ada\n-type q is record\n-   a : integer;\n-   b : integer;\n-end record;\n-@end smallexample\n-@tab\n-@smallexample @c ada\n-type q is\n-   record\n-      a : integer;\n-      b : integer;\n-   end record;\n-@end smallexample\n-\n-@item\n-@smallexample @c ada\n-for q use record\n-   a at 0 range  0 .. 31;\n-   b at 4 range  0 .. 31;\n-end record;\n-@end smallexample\n-@tab\n-@smallexample @c ada\n-for q use\n-   record\n-      a at 0 range  0 .. 31;\n-      b at 4 range  0 .. 31;\n-   end record;\n-@end smallexample\n-\n-@item\n-@smallexample @c ada\n-Block : declare\n-   A : Integer := 3;\n-begin\n-   Proc (A, A);\n-end Block;\n-@end smallexample\n-@tab\n-@smallexample @c ada\n-Block :\n-   declare\n-      A : Integer := 3;\n-   begin\n-      Proc (A, A);\n-   end Block;\n-@end smallexample\n-\n-@item\n-@smallexample @c ada\n-Clear : for J in 1 .. 10 loop\n-   A (J) := 0;\n-end loop Clear;\n-@end smallexample\n-@tab\n-@smallexample @c ada\n-Clear :\n-   for J in 1 .. 10 loop\n-      A (J) := 0;\n-   end loop Clear;\n-@end smallexample\n-@end multitable\n-@end cartouche\n-@end iftex\n-\n-@ifnottex\n-@smallexample\n-@cartouche\n-GNAT style, compact layout              Uncompact layout\n-\n-type q is record                        type q is\n-   a : integer;                            record\n-   b : integer;                               a : integer;\n-end record;                                   b : integer;\n-                                           end record;\n-\n-for q use record                        for q use\n-   a at 0 range  0 .. 31;                  record\n-   b at 4 range  0 .. 31;                     a at 0 range  0 .. 31;\n-end record;                                   b at 4 range  0 .. 31;\n-                                           end record;\n-\n-Block : declare                         Block :\n-   A : Integer := 3;                       declare\n-begin                                         A : Integer := 3;\n-   Proc (A, A);                            begin\n-end Block;                                    Proc (A, A);\n-                                           end Block;\n-\n-Clear : for J in 1 .. 10 loop           Clear :\n-   A (J) := 0;                             for J in 1 .. 10 loop\n-end loop Clear;                               A (J) := 0;\n-                                           end loop Clear;\n-@end cartouche\n-@end smallexample\n-@end ifnottex\n-\n-@noindent\n-A further difference between GNAT style layout and compact layout is that\n-GNAT style layout inserts empty lines as separation for\n-compound statements, return statements and bodies.\n-\n-Note that the layout specified by\n-@option{^--separate-stmt-name^/STMT_NAME_ON_NEW_LINE^}\n-for named block and loop statements overrides the layout defined by these\n-constructs by @option{^-l1^/CONSTRUCT_LAYOUT=GNAT^},\n-@option{^-l2^/CONSTRUCT_LAYOUT=COMPACT^} or\n-@option{^-l3^/CONSTRUCT_LAYOUT=UNCOMPACT^} option.\n-\n @node Name Casing\n @subsection Name Casing\n \n@@ -15230,6 +14848,19 @@ Thus @command{gnatpp} acts as though the @option{^-n^/NAME_CASING^} switch\n had affected the\n casing for the defining occurrence of the name.\n \n+The options\n+@option{^-a@var{x}^/ATTRIBUTE^},\n+@option{^-k@var{x}^/KEYWORD_CASING^},\n+@option{^-ne@var{x}^/ENUM_CASING^},\n+@option{^-nt@var{x}^/TYPE_CASING^},\n+@option{^-nn@var{x}^/NUMBER_CASING^}, and\n+@option{^-p@var{x}^/PRAGMA_CASING^}\n+allow finer-grained control over casing for\n+attributes, keywords, enumeration literals,\n+types, named numbers and pragmas, respectively.\n+@option{^-nt@var{x}^/TYPE_CASING^} covers subtypes and\n+task and protected bodies as well.\n+\n Some names may need to be spelled with casing conventions that are not\n covered by the upper-, lower-, and mixed-case transformations.\n You can arrange correct casing by placing such names in a\n@@ -15241,25 +14872,23 @@ any @option{^-n^/NAME_CASING^} switch.\n To handle the casing of Ada predefined names and the names from GNAT libraries,\n @command{gnatpp} assumes a default dictionary file.\n The name of each predefined entity is spelled with the same casing as is used\n-for the entity in the @cite{Ada Reference Manual}.\n+for the entity in the @cite{Ada Reference Manual} (usually mixed case).\n The name of each entity in the GNAT libraries is spelled with the same casing\n as is used in the declaration of that entity.\n \n-The @w{@option{^-D-^/SPECIFIC_CASING^}} switch suppresses the use of the\n-default dictionary file.\n-Instead, the casing for predefined and GNAT-defined names will be established\n-by the @option{^-n^/NAME_CASING^} switch or explicit dictionary files.\n-For example, by default the names @code{Ada.Text_IO} and @code{GNAT.OS_Lib}\n-will appear as just shown,\n-even in the presence of a @option{^-nU^/NAME_CASING=UPPER_CASE^} switch.\n-To ensure that even such names are rendered in uppercase,\n-additionally supply the @w{@option{^-D-^/SPECIFIC_CASING^}} switch\n-(or else, less conveniently, place these names in upper case in a dictionary\n-file).\n-\n-A dictionary file is\n-a plain text file; each line in this file can be either a blank line\n-(containing only space characters and ASCII.HT characters), an Ada comment\n+The @w{@option{^-D-^/SPECIFIC_CASING^}} switch suppresses the use of\n+the default dictionary file. Instead, the casing for predefined and\n+GNAT-defined names will be established by the\n+@option{^-n^/NAME_CASING^} switch or explicit dictionary files. For\n+example, by default the names @code{Ada.Text_IO} and\n+@code{GNAT.OS_Lib} will appear as just shown, even in the presence of\n+a @option{^-nU^/NAME_CASING=UPPER_CASE^} switch.  To ensure that even\n+such names are rendered in uppercase, additionally supply the\n+@w{@option{^-D-^/SPECIFIC_CASING^}} switch (or else place these names\n+in upper case in a dictionary file).\n+\n+A dictionary file is a plain text file; each line in this file can be\n+either a blank line (containing only space characters), an Ada comment\n line, or the specification of exactly one @emph{casing schema}.\n \n A casing schema is a string that has the following syntax:\n@@ -15435,7 +15064,7 @@ Options:\n       Otherwise this option has no effect.\n \n -X@var{name}=@var{value} -- indicates that external variable @var{name} in\n-      the argument project has the @var{value} value. Has no effect if no\n+      the argument project has the value @var{value}. Has no effect if no\n       project is specified as tool argument.\n \n -mdir -- generate one .xml file for each Ada source file, in directory\n@@ -16817,7 +16446,7 @@ has no effect.\n @item -X@var{name}=@var{value}\n @cindex @option{-X} @command{gnatmetric}\n Indicates that external variable @var{name} in the argument project\n-has the @var{value} value. Has no effect if no project is specified as\n+has the value @var{value}. Has no effect if no project is specified as\n tool argument.\n \n @item --subdirs=@var{dir}\n@@ -19712,7 +19341,7 @@ to be processed.\n @item -X@var{name}=@var{value}\n @cindex @option{-X} @command{gnatstub}\n Indicates that external variable @var{name} in the argument project\n-has the @var{value} value. Has no effect if no project is specified as\n+has the value @var{value}. Has no effect if no project is specified as\n tool argument.\n \n @item ^-f^/FULL^"}, {"sha": "0d0fba7955f77015b82871433f6cc3e51647cd64", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7", "patch": "@@ -924,8 +924,35 @@ package body System.OS_Lib is\n       if C_Msg = Null_Address then\n          if Default /= \"\" then\n             return Default;\n+\n          else\n-            return \"errno =\" & Err'Img;\n+            --  Note: for bootstrap reasons, it is impractical\n+            --  to use Integer'Image here.\n+\n+            declare\n+               Val   : Integer;\n+               First : Integer;\n+               Buf   : String (1 .. 20);\n+               --  Buffer large enough to hold image of largest Integer values\n+\n+            begin\n+               Val   := abs Err;\n+               First := Buf'Last;\n+               loop\n+                  Buf (First) :=\n+                    Character'Val (Character'Pos ('0') + Val mod 10);\n+                  Val := Val / 10;\n+                  exit when Val = 0;\n+                  First := First - 1;\n+               end loop;\n+\n+               if Err < 0 then\n+                  First := First - 1;\n+                  Buf (First) := '-';\n+               end if;\n+\n+               return \"errno = \" & Buf (First .. Buf'Last);\n+            end;\n          end if;\n \n       else"}, {"sha": "5a034d584576090bbc2a189827899b54c2de1872", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 36, "deletions": 26, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=f1a3590ee2fbbd4b4c7ccd43867cc37b07c1f4c7", "patch": "@@ -89,7 +89,6 @@ pragma Style_Checks (\"M32766\");\n /* Include gsocket.h before any system header so it can redefine FD_SETSIZE */\n \n #include \"gsocket.h\"\n-#include \"adaint.h\"\n \n #include <stdlib.h>\n #include <string.h>\n@@ -114,12 +113,15 @@ pragma Style_Checks (\"M32766\");\n \n /**\n  ** For VxWorks, always include vxWorks.h (gsocket.h provides it only for\n- ** the case of runtime libraries that support sockets).\n+ ** the case of runtime libraries that support sockets). Note: this must\n+ ** be done before including adaint.h.\n  **/\n \n # include <vxWorks.h>\n #endif\n \n+#include \"adaint.h\"\n+\n #ifdef DUMMY\n \n # if defined (TARGET)\n@@ -1344,30 +1346,6 @@ CND(SIZEOF_struct_servent, \"struct servent\")\n CND(SIZEOF_sigset, \"sigset\")\n #endif\n \n-/**\n- ** Note: this constant can be used in the GNAT runtime library. In compiler\n- ** units on the other hand, System.OS_Constants is not available, so we\n- ** declare an Ada constant (Osint.File_Attributes_Size) independently, which\n- ** is at least as large as sizeof (struct file_attributes), and we have an\n- ** assertion at initialization of Osint checking that the size is indeed at\n- ** least sufficient.\n- **/\n-#define SIZEOF_struct_file_attributes (sizeof (struct file_attributes))\n-CND(SIZEOF_struct_file_attributes, \"struct file_attributes\")\n-\n-/**\n- ** Maximal size of buffer for struct dirent. Note: Since POSIX.1 does not\n- ** specify the size of the d_name field, and other nonstandard fields may\n- ** precede that field within the dirent structure, we must make a conservative\n- ** computation.\n- **/\n-{\n-  struct dirent dent;\n-#define SIZEOF_struct_dirent_alloc \\\n-  ((char*) &dent.d_name - (char*) &dent) + NAME_MAX + 1\n-CND(SIZEOF_struct_dirent_alloc, \"struct dirent allocation\")\n-}\n-\n /*\n \n    --  Fields of struct msghdr\n@@ -1508,6 +1486,38 @@ CND(PTHREAD_ONCE_SIZE,       \"pthread_once_t\")\n \n #endif /* __APPLE__ || __linux__ */\n \n+/*\n+\n+   --------------------------------\n+   -- File and directory support --\n+   --------------------------------\n+\n+*/\n+\n+/**\n+ ** Note: this constant can be used in the GNAT runtime library. In compiler\n+ ** units on the other hand, System.OS_Constants is not available, so we\n+ ** declare an Ada constant (Osint.File_Attributes_Size) independently, which\n+ ** is at least as large as sizeof (struct file_attributes), and we have an\n+ ** assertion at initialization of Osint checking that the size is indeed at\n+ ** least sufficient.\n+ **/\n+#define SIZEOF_struct_file_attributes (sizeof (struct file_attributes))\n+CND(SIZEOF_struct_file_attributes, \"struct file_attributes\")\n+\n+/**\n+ ** Maximal size of buffer for struct dirent. Note: Since POSIX.1 does not\n+ ** specify the size of the d_name field, and other nonstandard fields may\n+ ** precede that field within the dirent structure, we must make a conservative\n+ ** computation.\n+ **/\n+{\n+  struct dirent dent;\n+#define SIZEOF_struct_dirent_alloc \\\n+  ((char*) &dent.d_name - (char*) &dent) + NAME_MAX + 1\n+CND(SIZEOF_struct_dirent_alloc, \"struct dirent allocation\")\n+}\n+\n /**\n  **  System-specific constants follow\n  **  Each section should be activated if compiling for the corresponding"}]}