{"sha": "c499d4d23ae57bc5705db8eb991fa938b6933298", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ5OWQ0ZDIzYWU1N2JjNTcwNWRiOGViOTkxZmE5MzhiNjkzMzI5OA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-01-25T00:16:42Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-01-25T00:16:42Z"}, "message": "New test.\n\nFrom-SVN: r39252", "tree": {"sha": "e77e3dd88e295204e82613bce74ff58818fa60e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e77e3dd88e295204e82613bce74ff58818fa60e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c499d4d23ae57bc5705db8eb991fa938b6933298", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c499d4d23ae57bc5705db8eb991fa938b6933298", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c499d4d23ae57bc5705db8eb991fa938b6933298", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c499d4d23ae57bc5705db8eb991fa938b6933298/comments", "author": null, "committer": null, "parents": [{"sha": "304a22ddf1f0ed3bae87d2e9e489eb449e763099", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/304a22ddf1f0ed3bae87d2e9e489eb449e763099", "html_url": "https://github.com/Rust-GCC/gccrs/commit/304a22ddf1f0ed3bae87d2e9e489eb449e763099"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "5db512b6f3e49d0d04d603c3613a774f74ddc350", "filename": "gcc/testsuite/gcc.c-torture/execute/20010124-1.c", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c499d4d23ae57bc5705db8eb991fa938b6933298/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010124-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c499d4d23ae57bc5705db8eb991fa938b6933298/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010124-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010124-1.c?ref=c499d4d23ae57bc5705db8eb991fa938b6933298", "patch": "@@ -0,0 +1,50 @@\n+/* Verify that structure return doesn't invoke memcpy on \n+   overlapping objects.  */\n+\n+extern void abort (void);\n+typedef __SIZE_TYPE__ size_t;\n+\n+struct S {\n+  char stuff[1024];\n+};\n+\n+union U {\n+  struct {\n+    int space;\n+    struct S s;\n+  } a;\n+  struct {\n+    struct S s;\n+    int space;\n+  } b;\n+};\n+\n+static struct S f(struct S *);\n+static void g(union U *);\n+\n+int main()\n+{\n+  union U u;\n+  u.b.s = f(&u.a.s);\n+  u.a.s = f(&u.b.s);\n+  g(&u);\n+  return 0;\n+}\n+  \n+static struct S f(struct S *p)\n+{\n+  return *p;\n+}\n+\n+static void g(union U *p)\n+{\n+}\n+\n+static void *memcpy(void *a, const void *b, size_t len)\n+{\n+  if (a < b && a+len > b)\n+    abort ();\n+  if (b < a && b+len > a)\n+    abort ();\n+  return a;\n+}"}]}