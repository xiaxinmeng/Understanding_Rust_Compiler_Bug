{"sha": "2010caea151958a73161a1373e97d65c6900e6ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAxMGNhZWExNTE5NThhNzMxNjFhMTM3M2U5N2Q2NWM2OTAwZTZmZg==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.ch", "date": "2004-09-04T22:41:53Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2004-09-04T22:41:53Z"}, "message": "many_win32.c: Remove whitespaces.\n\n2004-09-05  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* testsuite/libffi.call/many_win32.c: Remove whitespaces.\n\t* testsuite/libffi.call/promotion.c: Likewise.\n\t* testsuite/libffi.call/return_ll.c: Remove unused var. Cleanup\n\twhitespaces.\n\t* testsuite/libffi.call/return_sc.c: Likewise.\n\t* testsuite/libffi.call/return_uc.c: Likewise.\n\nFrom-SVN: r87091", "tree": {"sha": "0776021475466389fafdf76e6a227342cc967628", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0776021475466389fafdf76e6a227342cc967628"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2010caea151958a73161a1373e97d65c6900e6ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2010caea151958a73161a1373e97d65c6900e6ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2010caea151958a73161a1373e97d65c6900e6ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2010caea151958a73161a1373e97d65c6900e6ff/comments", "author": null, "committer": null, "parents": [{"sha": "894be816d4787630e1ff6a9e4c3d74ff24298611", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/894be816d4787630e1ff6a9e4c3d74ff24298611", "html_url": "https://github.com/Rust-GCC/gccrs/commit/894be816d4787630e1ff6a9e4c3d74ff24298611"}], "stats": {"total": 73, "additions": 37, "deletions": 36}, "files": [{"sha": "82cbd8cdaf9a93cb8efa3b325b2db904e83f929c", "filename": "libffi/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2010caea151958a73161a1373e97d65c6900e6ff/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2010caea151958a73161a1373e97d65c6900e6ff/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=2010caea151958a73161a1373e97d65c6900e6ff", "patch": "@@ -1,3 +1,12 @@\n+2004-09-05  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* testsuite/libffi.call/many_win32.c: Remove whitespaces.\n+\t* testsuite/libffi.call/promotion.c: Likewise.\n+\t* testsuite/libffi.call/return_ll.c: Remove unused var. Cleanup\n+\twhitespaces.\n+\t* testsuite/libffi.call/return_sc.c: Likewise.\n+\t* testsuite/libffi.call/return_uc.c: Likewise.\n+\n 2004-09-05  Andreas Tobler  <a.tobler@schweiz.ch>\n \n \t* src/powerpc/darwin.S: Fix comments and identation."}, {"sha": "1b2633227ad9e6dd159e4cc9f0aef01540b629aa", "filename": "libffi/testsuite/libffi.call/many_win32.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2010caea151958a73161a1373e97d65c6900e6ff/libffi%2Ftestsuite%2Flibffi.call%2Fmany_win32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2010caea151958a73161a1373e97d65c6900e6ff/libffi%2Ftestsuite%2Flibffi.call%2Fmany_win32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fmany_win32.c?ref=2010caea151958a73161a1373e97d65c6900e6ff", "patch": "@@ -26,38 +26,38 @@ static float __attribute__((stdcall)) stdcall_many(float f1,\n   return ((f1/f2+f3/f4+f5/f6+f7/f8+f9/f10+f11/f12) * f13);\n }\n \n-int main (void) \n+int main (void)\n {\n   ffi_cif cif;\n   ffi_type *args[13];\n   void *values[13];\n   float fa[13];\n   float f, ff;\n   unsigned long ul;\n-  \n+\n   for (ul = 0; ul < 13; ul++)\n     {\n       args[ul] = &ffi_type_float;\n       values[ul] = &fa[ul];\n \tfa[ul] = (float) ul;\n     }\n-  \n+\n   /* Initialize the cif */\n   CHECK(ffi_prep_cif(&cif, FFI_STDCALL, 13,\n \t\t     &ffi_type_float, args) == FFI_OK);\n-  \n-  ff =  stdcall_many(fa[0], fa[1],\t\n-\t\t     fa[2], fa[3],\t\n-\t\t     fa[4], fa[5],\t\n+\n+  ff =  stdcall_many(fa[0], fa[1],\n+\t\t     fa[2], fa[3],\n+\t\t     fa[4], fa[5],\n \t\t     fa[6], fa[7],\n-\t\t     fa[8], fa[9],\t\t\t\n+\t\t     fa[8], fa[9],\n \t\t     fa[10], fa[11], fa[12]);\n \n   ffi_call(&cif, FFI_FN(stdcall_many), &f, values);\n-  \n+\n   if (f - ff < FLT_EPSILON)\n     printf(\"stdcall many arg tests ok!\\n\");\n   else\n-    CHECK(0);\t\n-  exit(0);\t\n+    CHECK(0);\n+  exit(0);\n }"}, {"sha": "3fb0fe21036f3c6bd50e80d619a5709644e3a5ff", "filename": "libffi/testsuite/libffi.call/promotion.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2010caea151958a73161a1373e97d65c6900e6ff/libffi%2Ftestsuite%2Flibffi.call%2Fpromotion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2010caea151958a73161a1373e97d65c6900e6ff/libffi%2Ftestsuite%2Flibffi.call%2Fpromotion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fpromotion.c?ref=2010caea151958a73161a1373e97d65c6900e6ff", "patch": "@@ -6,7 +6,7 @@\n \n /* { dg-do run } */\n #include \"ffitest.h\"\n-static int promotion(signed char sc, signed short ss, \n+static int promotion(signed char sc, signed short ss,\n \t\t     unsigned char uc, unsigned short us)\n {\n   int r = (int) sc + (int) ss + (int) uc + (int) us;\n@@ -34,18 +34,18 @@ int main (void)\n   values[1] = &ss;\n   values[2] = &uc;\n   values[3] = &us;\n-  \n+\n   /* Initialize the cif */\n-  CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 4, \n+  CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 4,\n \t\t     &ffi_type_sint, args) == FFI_OK);\n-  \n+\n   us = 0;\n   ul = 0;\n-  \n-  for (sc = (signed char) -127; \n+\n+  for (sc = (signed char) -127;\n        sc <= (signed char) 120; /*@-type@*/ sc += 1 /*@=type@*/)\n     for (ss = -30000; ss <= 30000; ss += 10000)\n-      for (uc = (unsigned char) 0; \n+      for (uc = (unsigned char) 0;\n \t   uc <= (unsigned char) 200; /*@-type@*/ uc += 20 /*@=type@*/)\n \tfor (us = 0; us <= 60000; us += 10000)\n \t  {\n@@ -55,5 +55,5 @@ int main (void)\n \t\t  (unsigned char) uc + (unsigned short) us);\n \t  }\n   printf(\"%lu promotion tests run\\n\", ul);\n-  exit(0); \n+  exit(0);\n }"}, {"sha": "ea4a1e44780c09fe9d7df9a6f84c255700d6a2a0", "filename": "libffi/testsuite/libffi.call/return_ll.c", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2010caea151958a73161a1373e97d65c6900e6ff/libffi%2Ftestsuite%2Flibffi.call%2Freturn_ll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2010caea151958a73161a1373e97d65c6900e6ff/libffi%2Ftestsuite%2Flibffi.call%2Freturn_ll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Freturn_ll.c?ref=2010caea151958a73161a1373e97d65c6900e6ff", "patch": "@@ -18,26 +18,22 @@ int main (void)\n   void *values[MAX_ARGS];\n   long long rlonglong;\n   long long ll;\n-  unsigned long ul;\n-  \n- \n+\n   args[0] = &ffi_type_sint64;\n   values[0] = &ll;\n-  \n+\n   /* Initialize the cif */\n-  CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1, \n+  CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1,\n \t\t     &ffi_type_sint64, args) == FFI_OK);\n-  \n+\n   for (ll = 0LL; ll < 100LL; ll++)\n     {\n-      ul++;\n       ffi_call(&cif, FFI_FN(return_ll), &rlonglong, values);\n       CHECK(rlonglong == ll);\n     }\n-  \n+\n   for (ll = 55555555555000LL; ll < 55555555555100LL; ll++)\n     {\n-      ul++;\n       ffi_call(&cif, FFI_FN(return_ll), &rlonglong, values);\n       CHECK(rlonglong == ll);\n     }"}, {"sha": "19608ee7c8bbbe6cfcdd5bae95510f8ccddef0ef", "filename": "libffi/testsuite/libffi.call/return_sc.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2010caea151958a73161a1373e97d65c6900e6ff/libffi%2Ftestsuite%2Flibffi.call%2Freturn_sc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2010caea151958a73161a1373e97d65c6900e6ff/libffi%2Ftestsuite%2Flibffi.call%2Freturn_sc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Freturn_sc.c?ref=2010caea151958a73161a1373e97d65c6900e6ff", "patch": "@@ -18,7 +18,6 @@ int main (void)\n   void *values[MAX_ARGS];\n   ffi_arg rint;\n   signed char sc;\n-  unsigned long ul;\n \n   args[0] = &ffi_type_schar;\n   values[0] = &sc;\n@@ -30,7 +29,6 @@ int main (void)\n   for (sc = (signed char) -127;\n        sc < (signed char) 127; sc++)\n     {\n-      ul++;\n       ffi_call(&cif, FFI_FN(return_sc), &rint, values);\n       CHECK(rint == (ffi_arg) sc);\n     }"}, {"sha": "07c45de51101b295c68461975ad8942a8c282b59", "filename": "libffi/testsuite/libffi.call/return_uc.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2010caea151958a73161a1373e97d65c6900e6ff/libffi%2Ftestsuite%2Flibffi.call%2Freturn_uc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2010caea151958a73161a1373e97d65c6900e6ff/libffi%2Ftestsuite%2Flibffi.call%2Freturn_uc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Freturn_uc.c?ref=2010caea151958a73161a1373e97d65c6900e6ff", "patch": "@@ -20,19 +20,17 @@ int main (void)\n   ffi_arg rint;\n \n   unsigned char uc;\n-  unsigned long ul;\n \n   args[0] = &ffi_type_uchar;\n   values[0] = &uc;\n-  \n+\n   /* Initialize the cif */\n-  CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1, \n+  CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1,\n \t\t     &ffi_type_uchar, args) == FFI_OK);\n-  \n-  for (uc = (unsigned char) '\\x00'; \n+\n+  for (uc = (unsigned char) '\\x00';\n        uc < (unsigned char) '\\xff'; uc++)\n     {\n-      ul++;\n       ffi_call(&cif, FFI_FN(return_uc), &rint, values);\n       CHECK(rint == (signed int) uc);\n     }"}]}