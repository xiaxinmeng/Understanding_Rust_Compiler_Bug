{"sha": "ee24c8e14ec3473b066a460eb8eef38a3fa91e23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWUyNGM4ZTE0ZWMzNDczYjA2NmE0NjBlYjhlZWYzOGEzZmE5MWUyMw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2018-07-02T10:15:42Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2018-07-02T10:15:42Z"}, "message": "i386.c (ix86_finalize_stack_frame_flags): Do not overrule -fno-omit-frame-pointer when not optimizing.\n\n\t* config/i386/i386.c (ix86_finalize_stack_frame_flags): Do not overrule\n\t-fno-omit-frame-pointer when not optimizing.\n\nFrom-SVN: r262302", "tree": {"sha": "9934003eb3781af5efdc919cf7c4d874c4667ba7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9934003eb3781af5efdc919cf7c4d874c4667ba7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee24c8e14ec3473b066a460eb8eef38a3fa91e23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee24c8e14ec3473b066a460eb8eef38a3fa91e23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee24c8e14ec3473b066a460eb8eef38a3fa91e23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee24c8e14ec3473b066a460eb8eef38a3fa91e23/comments", "author": null, "committer": null, "parents": [{"sha": "5d4e9f7beed5ad5808cabc615b00316bd9dfe92c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d4e9f7beed5ad5808cabc615b00316bd9dfe92c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d4e9f7beed5ad5808cabc615b00316bd9dfe92c"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "5bf5ce244a5e6529fcddf0140f0a6a25bb2812d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee24c8e14ec3473b066a460eb8eef38a3fa91e23/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee24c8e14ec3473b066a460eb8eef38a3fa91e23/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ee24c8e14ec3473b066a460eb8eef38a3fa91e23", "patch": "@@ -1,3 +1,8 @@\n+2018-07-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/i386/i386.c (ix86_finalize_stack_frame_flags): Do not overrule\n+\t-fno-omit-frame-pointer when not optimizing.\n+\n 2018-07-02  Martin Liska  <mliska@suse.cz>\n \n         PR ipa/86279\n@@ -394,6 +399,8 @@\n \n 2018-06-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n+\t* tree-inline.h (struct copy_body_data): Move remapping_type_depth and\n+\tprevent_decl_creation_for_types fields up and add reset_location field.\n \t* tree-inline.c (remap_gimple_stmt): Force input_location on the new\n \tstatement if id->reset_location is true.\n \t(copy_edges_for_bb): Do not set goto_locus on the new edges if\n@@ -402,8 +409,6 @@\n \tid->reset_location is true.\n \t(expand_call_inline): Set id->reset_location if DECL_IGNORED_P\n \tis set on the function to be inlined.\n-\t* tree-inline.h (struct copy_body_data): Move remapping_type_depth and\n-\tprevent_decl_creation_for_types fields up and add reset_location field.\n \n 2018-06-27  Stephan Bergmann  <sbergman@redhat.com>\n "}, {"sha": "e6d17632142fb4d07d56700e2283ab23f224fa7e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee24c8e14ec3473b066a460eb8eef38a3fa91e23/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee24c8e14ec3473b066a460eb8eef38a3fa91e23/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=ee24c8e14ec3473b066a460eb8eef38a3fa91e23", "patch": "@@ -13145,7 +13145,7 @@ ix86_finalize_stack_frame_flags (void)\n      is used, but in the end nothing that needed the stack alignment had\n      been spilled nor stack access, clear frame_pointer_needed and say we\n      don't need stack realignment.  */\n-  if ((stack_realign || !flag_omit_frame_pointer)\n+  if ((stack_realign || (!flag_omit_frame_pointer && optimize))\n       && frame_pointer_needed\n       && crtl->is_leaf\n       && crtl->sp_is_unchanging"}]}