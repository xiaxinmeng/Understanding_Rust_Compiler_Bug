{"sha": "113522092bb252b2b5ee9e51ebd36d59677b1199", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTEzNTIyMDkyYmIyNTJiMmI1ZWU5ZTUxZWJkMzZkNTk2NzdiMTE5OQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-16T10:44:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-16T10:44:09Z"}, "message": "[multiple changes]\n\n2015-10-16  Javier Miranda  <miranda@adacore.com>\n\n\t* inline.adb (Add_Inlined_Body): Ensure that\n\tAnalyze_Inlined_Bodies will be invoked after completing the\n\tanalysis of the current unit.\n\n2015-10-16  Arnaud Charlet  <charlet@adacore.com>\n\n\t* sem_ch13.adb (Adjust_Record_For_Reverse_Bit_Order): Fix error\n\tmessage for bad last bit position.\n\t* sem_ch3.adb, sem_util.adb, sem_util.ads: Minor reformatting.\n\n2015-10-16  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch5.adb (Expand_N_Case_Statement): If expression is\n\tcompile-time known but does not obey a static predicate on\n\tits type, replace the case statement with a raise statement,\n\tas with other statically detected constraint violations.\n\n2015-10-16  Bob Duff  <duff@adacore.com>\n\n\t* s-traceb.adb, s-traceb.ads, s-traceb-hpux.adb, s-traceb-mastop.adb:\n\tReinstate code.\n\t* opt.ads: Minor typo.\n\nFrom-SVN: r228866", "tree": {"sha": "6ac32ae21b13bb0214d13325a3baed1d0935dfc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ac32ae21b13bb0214d13325a3baed1d0935dfc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/113522092bb252b2b5ee9e51ebd36d59677b1199", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/113522092bb252b2b5ee9e51ebd36d59677b1199", "html_url": "https://github.com/Rust-GCC/gccrs/commit/113522092bb252b2b5ee9e51ebd36d59677b1199", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/113522092bb252b2b5ee9e51ebd36d59677b1199/comments", "author": null, "committer": null, "parents": [{"sha": "251b6a477e97787533753da196dc6e9640359a5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/251b6a477e97787533753da196dc6e9640359a5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/251b6a477e97787533753da196dc6e9640359a5a"}], "stats": {"total": 148, "additions": 96, "deletions": 52}, "files": [{"sha": "746c8396661af04cffbe61e675cc41701912b7ce", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/113522092bb252b2b5ee9e51ebd36d59677b1199/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/113522092bb252b2b5ee9e51ebd36d59677b1199/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=113522092bb252b2b5ee9e51ebd36d59677b1199", "patch": "@@ -1,3 +1,28 @@\n+2015-10-16  Javier Miranda  <miranda@adacore.com>\n+\n+\t* inline.adb (Add_Inlined_Body): Ensure that\n+\tAnalyze_Inlined_Bodies will be invoked after completing the\n+\tanalysis of the current unit.\n+\n+2015-10-16  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_ch13.adb (Adjust_Record_For_Reverse_Bit_Order): Fix error\n+\tmessage for bad last bit position.\n+\t* sem_ch3.adb, sem_util.adb, sem_util.ads: Minor reformatting.\n+\n+2015-10-16  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch5.adb (Expand_N_Case_Statement): If expression is\n+\tcompile-time known but does not obey a static predicate on\n+\tits type, replace the case statement with a raise statement,\n+\tas with other statically detected constraint violations.\n+\n+2015-10-16  Bob Duff  <duff@adacore.com>\n+\n+\t* s-traceb.adb, s-traceb.ads, s-traceb-hpux.adb, s-traceb-mastop.adb:\n+\tReinstate code.\n+\t* opt.ads: Minor typo.\n+\n 2015-10-16  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_util.adb (Gather_Components): When gathering components"}, {"sha": "8cb77332636b5bfb5249790b59fd65f860d98842", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/113522092bb252b2b5ee9e51ebd36d59677b1199/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/113522092bb252b2b5ee9e51ebd36d59677b1199/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=113522092bb252b2b5ee9e51ebd36d59677b1199", "patch": "@@ -2590,9 +2590,20 @@ package body Exp_Ch5 is\n \n       --  If the value is static but its subtype is predicated and the value\n       --  does not obey the predicate, the value is marked non-static, and\n-      --  there can be no corresponding static alternative.\n+      --  there can be no corresponding static alternative. In that case we\n+      --  replace the case statement with an exception, regardless of whether\n+      --  assertions are enabled or not.\n \n       if Compile_Time_Known_Value (Expr)\n+        and then Has_Predicates (Etype (Expr))\n+        and then not Is_OK_Static_Expression (Expr)\n+      then\n+         Rewrite (N,\n+           Make_Raise_Constraint_Error (Loc, Reason => CE_Invalid_Data));\n+         Analyze (N);\n+         return;\n+\n+      elsif Compile_Time_Known_Value (Expr)\n         and then (not Has_Predicates (Etype (Expr))\n                    or else Is_Static_Expression (Expr))\n       then"}, {"sha": "398a466f1c2c787371f8e7a5628df83247b73136", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/113522092bb252b2b5ee9e51ebd36d59677b1199/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/113522092bb252b2b5ee9e51ebd36d59677b1199/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=113522092bb252b2b5ee9e51ebd36d59677b1199", "patch": "@@ -405,6 +405,11 @@ package body Inline is\n             Pack : constant Entity_Id := Get_Code_Unit_Entity (E);\n \n          begin\n+            --  Ensure that Analyze_Inlined_Bodies will be invoked after\n+            --  completing the analysis of the current unit.\n+\n+            Inline_Processing_Required := True;\n+\n             if Pack = E then\n \n                --  Library-level inlined function. Add function itself to"}, {"sha": "b768be4075dcbf6f2f834bd183868623f1d4cddd", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/113522092bb252b2b5ee9e51ebd36d59677b1199/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/113522092bb252b2b5ee9e51ebd36d59677b1199/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=113522092bb252b2b5ee9e51ebd36d59677b1199", "patch": "@@ -819,7 +819,7 @@ package Opt is\n    --  be inlined in GNATprove mode.\n \n    Init_Or_Norm_Scalars : Boolean := False;\n-   --  GNAT, GANTBIND\n+   --  GNAT, GNATBIND\n    --  Set True if a pragma Initialize_Scalars applies to the current unit.\n    --  Also set True if a pragma Restriction (Normalize_Scalars) applies.\n "}, {"sha": "dcd6ad0b64f86d7266a4a95f3fb48636d79909fb", "filename": "gcc/ada/s-traceb-hpux.adb", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/113522092bb252b2b5ee9e51ebd36d59677b1199/gcc%2Fada%2Fs-traceb-hpux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/113522092bb252b2b5ee9e51ebd36d59677b1199/gcc%2Fada%2Fs-traceb-hpux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-traceb-hpux.adb?ref=113522092bb252b2b5ee9e51ebd36d59677b1199", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 2009-2014, Free Software Foundation, Inc.        --\n+--           Copyright (C) 2009-2015, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -262,15 +262,14 @@ package body System.Traceback is\n    --  but it is not usable when frames with dynamically allocated space are\n    --  on the way.\n \n---   procedure Call_Chain\n---     (Traceback   : System.Address;\n---      Max_Len     : Natural;\n---      Len         : out Natural;\n---      Exclude_Min : System.Address := System.Null_Address;\n---      Exclude_Max : System.Address := System.Null_Address;\n---      Skip_Frames : Natural := 1);\n---   --  Same as the exported version, but takes Traceback as an Address\n---  ???See declaration in the spec for why this is temporarily commented out.\n+   procedure Call_Chain\n+     (Traceback   : System.Address;\n+      Max_Len     : Natural;\n+      Len         : out Natural;\n+      Exclude_Min : System.Address := System.Null_Address;\n+      Exclude_Max : System.Address := System.Null_Address;\n+      Skip_Frames : Natural := 1);\n+   --  Same as the exported version, but takes Traceback as an Address\n \n    ------------------\n    -- C_Call_Chain --"}, {"sha": "1a00d97f1e68288dd9e7c8bad035c65a05c8bb41", "filename": "gcc/ada/s-traceb-mastop.adb", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/113522092bb252b2b5ee9e51ebd36d59677b1199/gcc%2Fada%2Fs-traceb-mastop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/113522092bb252b2b5ee9e51ebd36d59677b1199/gcc%2Fada%2Fs-traceb-mastop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-traceb-mastop.adb?ref=113522092bb252b2b5ee9e51ebd36d59677b1199", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2014, AdaCore                     --\n+--                     Copyright (C) 1999-2015, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,15 +37,14 @@ package body System.Traceback is\n \n    use System.Machine_State_Operations;\n \n---   procedure Call_Chain\n---     (Traceback   : System.Address;\n---      Max_Len     : Natural;\n---      Len         : out Natural;\n---      Exclude_Min : System.Address := System.Null_Address;\n---      Exclude_Max : System.Address := System.Null_Address;\n---      Skip_Frames : Natural := 1);\n---   --  Same as the exported version, but takes Traceback as an Address\n---  ???See declaration in the spec for why this is temporarily commented out.\n+   procedure Call_Chain\n+     (Traceback   : System.Address;\n+      Max_Len     : Natural;\n+      Len         : out Natural;\n+      Exclude_Min : System.Address := System.Null_Address;\n+      Exclude_Max : System.Address := System.Null_Address;\n+      Skip_Frames : Natural := 1);\n+   --  Same as the exported version, but takes Traceback as an Address\n \n    ----------------\n    -- Call_Chain --"}, {"sha": "e4671135ade27556eb138a2f4f280833d5c3d6f5", "filename": "gcc/ada/s-traceb.adb", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/113522092bb252b2b5ee9e51ebd36d59677b1199/gcc%2Fada%2Fs-traceb.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/113522092bb252b2b5ee9e51ebd36d59677b1199/gcc%2Fada%2Fs-traceb.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-traceb.adb?ref=113522092bb252b2b5ee9e51ebd36d59677b1199", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1999-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,6 +38,15 @@ pragma Compiler_Unit_Warning;\n \n package body System.Traceback is\n \n+   procedure Call_Chain\n+     (Traceback   : System.Address;\n+      Max_Len     : Natural;\n+      Len         : out Natural;\n+      Exclude_Min : System.Address := System.Null_Address;\n+      Exclude_Max : System.Address := System.Null_Address;\n+      Skip_Frames : Natural := 1);\n+   --  Same as the exported version, but takes Traceback as an Address\n+\n    ------------------\n    -- C_Call_Chain --\n    ------------------"}, {"sha": "283bd5cd072ea1a79aa762e5c2574e270695965f", "filename": "gcc/ada/s-traceb.ads", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/113522092bb252b2b5ee9e51ebd36d59677b1199/gcc%2Fada%2Fs-traceb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/113522092bb252b2b5ee9e51ebd36d59677b1199/gcc%2Fada%2Fs-traceb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-traceb.ads?ref=113522092bb252b2b5ee9e51ebd36d59677b1199", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1999-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -78,19 +78,6 @@ package System.Traceback is\n    --  number of stored entries. The first entry is the most recent call,\n    --  and the last entry is the highest level call.\n \n-   procedure Call_Chain\n-     (Traceback   : System.Address;\n-      Max_Len     : Natural;\n-      Len         : out Natural;\n-      Exclude_Min : System.Address := System.Null_Address;\n-      Exclude_Max : System.Address := System.Null_Address;\n-      Skip_Frames : Natural := 1);\n-   --  Same as the previous version, but takes Traceback as an Address. The\n-   --  previous version is preferred. ???This version should be removed from\n-   --  this spec, and calls replaced with calls to the previous version. This\n-   --  declaration can be moved to the bodies (s-traceb.adb, s-traceb-hpux.adb,\n-   --  and s-traceb-mastop.adb), but it should not be visible to clients.\n-\n    function C_Call_Chain\n      (Traceback : System.Address;\n       Max_Len   : Natural) return Natural;"}, {"sha": "f532595075bda2d52a32a0a042f5773897ee785b", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/113522092bb252b2b5ee9e51ebd36d59677b1199/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/113522092bb252b2b5ee9e51ebd36d59677b1199/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=113522092bb252b2b5ee9e51ebd36d59677b1199", "patch": "@@ -471,18 +471,18 @@ package body Sem_Ch13 is\n                              (\"machine scalar rules not followed for&\",\n                               First_Bit (CC), Comp);\n \n-                           Error_Msg_Uint_1 := Lbit;\n+                           Error_Msg_Uint_1 := Lbit + 1;\n                            Error_Msg_Uint_2 := Max_Machine_Scalar_Size;\n                            Error_Msg_F\n-                             (\"\\last bit (^) exceeds maximum machine \"\n+                             (\"\\last bit + 1 (^) exceeds maximum machine \"\n                               & \"scalar size (^)\",\n                               First_Bit (CC));\n \n                            if (Lbit + 1) mod SSU /= 0 then\n                               Error_Msg_Uint_1 := SSU;\n                               Error_Msg_F\n                                 (\"\\and is not a multiple of Storage_Unit (^) \"\n-                                 & \"(RM 13.4.1(10))\",\n+                                 & \"(RM 13.5.1(10))\",\n                                  First_Bit (CC));\n \n                            else"}, {"sha": "62cc79105a148f546ab37a3e8f97ff00a4dbcbc3", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/113522092bb252b2b5ee9e51ebd36d59677b1199/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/113522092bb252b2b5ee9e51ebd36d59677b1199/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=113522092bb252b2b5ee9e51ebd36d59677b1199", "patch": "@@ -17945,9 +17945,9 @@ package body Sem_Ch3 is\n      (C : Entity_Id;\n       N : Node_Id := Empty) return Boolean\n    is\n-      Original_Comp  : Entity_Id := Empty;\n+      Original_Comp : Entity_Id := Empty;\n       Original_Type : Entity_Id;\n-      Type_Scope     : Entity_Id;\n+      Type_Scope    : Entity_Id;\n \n       function Is_Local_Type (Typ : Entity_Id) return Boolean;\n       --  Check whether parent type of inherited component is declared locally,\n@@ -18088,9 +18088,9 @@ package body Sem_Ch3 is\n                if Ancestor = Original_Type then\n                   return True;\n \n-               --  The ancestor may have a partial view of the original\n-               --  type, but if the full view is in scope, as in a child\n-               --  body, the component is visible.\n+               --  The ancestor may have a partial view of the original type,\n+               --  but if the full view is in scope, as in a child body, the\n+               --  component is visible.\n \n                elsif In_Private_Part (Scope (Original_Type))\n                  and then Full_View (Ancestor) = Original_Type\n@@ -18099,7 +18099,7 @@ package body Sem_Ch3 is\n \n                elsif Ancestor = Etype (Ancestor) then\n \n-                  --  No further ancestors to examine.\n+                  --  No further ancestors to examine\n \n                   return False;\n                end if;"}, {"sha": "4903d3f4dae3806f05b28f9c2bd086e321d21530", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/113522092bb252b2b5ee9e51ebd36d59677b1199/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/113522092bb252b2b5ee9e51ebd36d59677b1199/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=113522092bb252b2b5ee9e51ebd36d59677b1199", "patch": "@@ -17109,6 +17109,10 @@ package body Sem_Util is\n       --  This shouldn't be necessary, but without this check, we crash in\n       --  gimplify. ???\n \n+      ------------------------------\n+      -- Caller_Known_Size_Record --\n+      ------------------------------\n+\n       function Caller_Known_Size_Record (Typ : Entity_Id) return Boolean is\n          pragma Assert (Typ = Underlying_Type (Typ));\n \n@@ -17118,9 +17122,10 @@ package body Sem_Util is\n          end if;\n \n          declare\n-            Comp : Entity_Id := First_Entity (Typ);\n+            Comp : Entity_Id;\n \n          begin\n+            Comp := First_Entity (Typ);\n             while Present (Comp) loop\n \n                --  Only look at E_Component entities. No need to look at\n@@ -17156,6 +17161,10 @@ package body Sem_Util is\n          return True;\n       end Caller_Known_Size_Record;\n \n+      ---------------------------\n+      -- Has_Discrim_Dep_Array --\n+      ---------------------------\n+\n       function Has_Discrim_Dep_Array (Typ : Entity_Id) return Boolean is\n          pragma Assert (Typ = Underlying_Type (Typ));\n \n@@ -17165,13 +17174,14 @@ package body Sem_Util is\n          end if;\n \n          if Is_Record_Type (Typ)\n-           or else\n-           Is_Protected_Type (Typ)\n+              or else\n+            Is_Protected_Type (Typ)\n          then\n             declare\n-               Comp : Entity_Id := First_Entity (Typ);\n+               Comp : Entity_Id;\n \n             begin\n+               Comp := First_Entity (Typ);\n                while Present (Comp) loop\n \n                   --  Only look at E_Component entities. No need to look at\n@@ -17182,7 +17192,6 @@ package body Sem_Util is\n                      declare\n                         Comp_Type : constant Entity_Id :=\n                                       Underlying_Type (Etype (Comp));\n-\n                      begin\n                         if Has_Discrim_Dep_Array (Comp_Type) then\n                            return True;"}, {"sha": "28f0b34f2f6a76abbe52ce304593cd295f82383b", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/113522092bb252b2b5ee9e51ebd36d59677b1199/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/113522092bb252b2b5ee9e51ebd36d59677b1199/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=113522092bb252b2b5ee9e51ebd36d59677b1199", "patch": "@@ -823,7 +823,7 @@ package Sem_Util is\n    --  returned. Otherwise the Etype of the node is returned.\n \n    function Get_Body_From_Stub (N : Node_Id) return Node_Id;\n-   --  Return the body node for a stub.\n+   --  Return the body node for a stub\n \n    function Get_Cursor_Type\n      (Aspect : Node_Id;"}]}