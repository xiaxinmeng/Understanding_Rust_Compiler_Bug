{"sha": "f210a0077b30890040da85203e62be4222315b6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjIxMGEwMDc3YjMwODkwMDQwZGE4NTIwM2U2MmJlNDIyMjMxNWI2Yw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-01-26T07:39:29Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-01-26T07:39:29Z"}, "message": "sparc-ret.c: Run only in 32-bit mode.\n\n\t* gcc.dg/sparc-ret.c: Run only in 32-bit mode.  Don't scan\n\tthe assembly output if -m64 is passed.\n\nFrom-SVN: r76621", "tree": {"sha": "50cff58b1805e1c5350799a57621f0ef9b436f2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50cff58b1805e1c5350799a57621f0ef9b436f2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f210a0077b30890040da85203e62be4222315b6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f210a0077b30890040da85203e62be4222315b6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f210a0077b30890040da85203e62be4222315b6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f210a0077b30890040da85203e62be4222315b6c/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5254fd7b55d138710f935d258ca7b979d7581c7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5254fd7b55d138710f935d258ca7b979d7581c7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5254fd7b55d138710f935d258ca7b979d7581c7c"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "fa12a7ea55da79af9c0d110210d892e8a7ad5a1a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f210a0077b30890040da85203e62be4222315b6c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f210a0077b30890040da85203e62be4222315b6c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f210a0077b30890040da85203e62be4222315b6c", "patch": "@@ -1,3 +1,8 @@\n+2004-01-26  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.dg/sparc-ret.c: Run only in 32-bit mode.  Don't scan\n+\tthe assembly output if -m64 is passed.\n+\n 2004-01-25  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/13833\n@@ -20401,3 +20406,4 @@ rlsruhe.de>\n \n \t* New file.\n \n+"}, {"sha": "3a4ddea58ecea11ba5804c0975e406fffec3fc8d", "filename": "gcc/testsuite/gcc.dg/sparc-ret.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f210a0077b30890040da85203e62be4222315b6c/gcc%2Ftestsuite%2Fgcc.dg%2Fsparc-ret.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f210a0077b30890040da85203e62be4222315b6c/gcc%2Ftestsuite%2Fgcc.dg%2Fsparc-ret.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsparc-ret.c?ref=f210a0077b30890040da85203e62be4222315b6c", "patch": "@@ -3,8 +3,8 @@\n    Making sure that Ultrasparc return instructions do not read\n    below the stack.  */\n \n-/* { dg-do compile { target sparc*-*-* } } */\n-/* { dg-options \"-mcpu=ultrasparc -O -m32\" } */\n+/* { dg-do compile { target sparc-*-* } } */\n+/* { dg-options \"-mcpu=ultrasparc -O\" } */\n \n \n int bar (int a, int b, int c, int d, int e, int f, int g, int h)\n@@ -14,7 +14,7 @@ int bar (int a, int b, int c, int d, int e, int f, int g, int h)\n   toto (&res);\n   return h;\n }\n-/* { dg-final { scan-assembler \"return\\[ \\t\\]*%i7\\\\+8\\n\\[^\\n\\]*ld\\[ \\t\\]*\\\\\\[%sp\\\\+96\\\\\\]\" } } */\n+/* { dg-final { global compiler_flags; if ![string match \"*-m64 *\" $compiler_flags] { scan-assembler \"return\\[ \\t\\]*%i7\\\\+8\\n\\[^\\n\\]*ld\\[ \\t\\]*\\\\\\[%sp\\\\+96\\\\\\]\" } } } */\n \n int bar2 ()\n {\n@@ -23,5 +23,4 @@ int bar2 ()\n   toto (&res);\n   return res;\n }\n-/* { dg-final { scan-assembler \"return\\[ \\t\\]*%i7\\\\+8\\n\\[^\\n\\]*nop\" } } */\n-\n+/* { dg-final { global compiler_flags; if ![string match \"*-m64 *\" $compiler_flags] { scan-assembler \"return\\[ \\t\\]*%i7\\\\+8\\n\\[^\\n\\]*nop\" } } } */"}]}