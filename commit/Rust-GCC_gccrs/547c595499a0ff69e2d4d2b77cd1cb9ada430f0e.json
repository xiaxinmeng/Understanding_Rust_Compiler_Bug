{"sha": "547c595499a0ff69e2d4d2b77cd1cb9ada430f0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ3YzU5NTQ5OWEwZmY2OWUyZDRkMmI3N2NkMWNiOWFkYTQzMGYwZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-17T08:42:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-17T08:42:42Z"}, "message": "[multiple changes]\n\n2010-06-17  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_warn.adb (Test_Ref): Abandon scan if access subprogram parameter\n\tfound.\n\n2010-06-17  Vincent Celier  <celier@adacore.com>\n\n\t* back_end.adb: Minor comment updates\n\t* switch-c.adb: Remove dependencies on gcc C sources\n        * gcc-interface/Make-lang.in: Add a-comlin.o to the object file list\n\tfor the compiler.\n\nFrom-SVN: r160884", "tree": {"sha": "6f3cfdd61c30785d50933eb8efa6671f6bccafce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f3cfdd61c30785d50933eb8efa6671f6bccafce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/547c595499a0ff69e2d4d2b77cd1cb9ada430f0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/547c595499a0ff69e2d4d2b77cd1cb9ada430f0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/547c595499a0ff69e2d4d2b77cd1cb9ada430f0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/547c595499a0ff69e2d4d2b77cd1cb9ada430f0e/comments", "author": null, "committer": null, "parents": [{"sha": "cc86c05a5931f8758e048fa3fb8152ce635fa9ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc86c05a5931f8758e048fa3fb8152ce635fa9ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc86c05a5931f8758e048fa3fb8152ce635fa9ed"}], "stats": {"total": 88, "additions": 43, "deletions": 45}, "files": [{"sha": "a7f5008a3852308c44c84fe2e9db96de4563ca10", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/547c595499a0ff69e2d4d2b77cd1cb9ada430f0e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/547c595499a0ff69e2d4d2b77cd1cb9ada430f0e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=547c595499a0ff69e2d4d2b77cd1cb9ada430f0e", "patch": "@@ -1,3 +1,15 @@\n+2010-06-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_warn.adb (Test_Ref): Abandon scan if access subprogram parameter\n+\tfound.\n+\n+2010-06-17  Vincent Celier  <celier@adacore.com>\n+\n+\t* back_end.adb: Minor comment updates\n+\t* switch-c.adb: Remove dependencies on gcc C sources\n+        * gcc-interface/Make-lang.in: Add a-comlin.o to the object file list\n+\tfor the compiler.\n+\n 2010-06-17  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch12.adb: propagate Pragma_Enabled flag to generic."}, {"sha": "28ce1bd6c7e855799cbd3116f2fb435733b3f344", "filename": "gcc/ada/back_end.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/547c595499a0ff69e2d4d2b77cd1cb9ada430f0e/gcc%2Fada%2Fback_end.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/547c595499a0ff69e2d4d2b77cd1cb9ada430f0e/gcc%2Fada%2Fback_end.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fback_end.adb?ref=547c595499a0ff69e2d4d2b77cd1cb9ada430f0e", "patch": "@@ -48,15 +48,15 @@ package body Back_End is\n \n    flag_stack_check : Int;\n    pragma Import (C, flag_stack_check);\n-   --  Indicates if stack checking is enabled, imported from toplev.c\n+   --  Indicates if stack checking is enabled, imported from decl.c\n \n    save_argc : Nat;\n    pragma Import (C, save_argc);\n-   --  Saved value of argc (number of arguments), imported from toplev.c\n+   --  Saved value of argc (number of arguments), imported from misc.c\n \n    save_argv : Arg_Array_Ptr;\n    pragma Import (C, save_argv);\n-   --  Saved value of argv (argument pointers), imported from toplev.c\n+   --  Saved value of argv (argument pointers), imported from misc.c\n \n    function Len_Arg (Arg : Pos) return Nat;\n    --  Determine length of argument number Arg on original gnat1 command line\n@@ -284,7 +284,7 @@ package body Back_End is\n                Opt.No_Stdlib := True;\n \n             elsif Is_Front_End_Switch (Argv) then\n-               Scan_Front_End_Switches (Argv, Next_Arg);\n+               Scan_Front_End_Switches (Argv, Integer (Next_Arg));\n \n             --  All non-front-end switches are back-end switches\n "}, {"sha": "881213f0a1a6f6d4783f3d4e51cc546cc11c3f4e", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/547c595499a0ff69e2d4d2b77cd1cb9ada430f0e/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/547c595499a0ff69e2d4d2b77cd1cb9ada430f0e/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=547c595499a0ff69e2d4d2b77cd1cb9ada430f0e", "patch": "@@ -120,6 +120,7 @@ GNAT1_C_OBJS = ada/b_gnat1.o ada/adadecode.o ada/adaint.o ada/cstreams.o \\\n GNAT_ADA_OBJS =\t\\\n  ada/a-charac.o\t\\\n  ada/a-chlat1.o\t\\\n+ ada/a-comlin.o \\\n  ada/a-elchha.o\t\\\n  ada/a-except.o\t\\\n  ada/a-ioexce.o\t\\"}, {"sha": "39647813323981911a4a1d1c5c0e81c961b9a6f8", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/547c595499a0ff69e2d4d2b77cd1cb9ada430f0e/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/547c595499a0ff69e2d4d2b77cd1cb9ada430f0e/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=547c595499a0ff69e2d4d2b77cd1cb9ada430f0e", "patch": "@@ -539,6 +539,22 @@ package body Sem_Warn is\n                return Abandon;\n             end if;\n \n+            --  If any of the arguments are of type access to subprogram, then\n+            --  we may have funny side effects, so no warning in this case.\n+\n+            declare\n+               Actual : Node_Id;\n+            begin\n+               Actual := First_Actual (N);\n+               while Present (Actual) loop\n+                  if Is_Access_Subprogram_Type (Etype (Actual)) then\n+                     return Abandon;\n+                  else\n+                     Next_Actual (Actual);\n+                  end if;\n+               end loop;\n+            end;\n+\n          --  Declaration of the variable in question\n \n          elsif Nkind (N) = N_Object_Declaration"}, {"sha": "6238c5412a1725dff55db84bc8dacd3fc2f75c52", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 9, "deletions": 40, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/547c595499a0ff69e2d4d2b77cd1cb9ada430f0e/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/547c595499a0ff69e2d4d2b77cd1cb9ada430f0e/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=547c595499a0ff69e2d4d2b77cd1cb9ada430f0e", "patch": "@@ -23,6 +23,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Ada.Command_Line; use Ada.Command_Line;\n+\n with Debug;    use Debug;\n with Lib;      use Lib;\n with Osint;    use Osint;\n@@ -38,56 +40,26 @@ with System.WCh_Con; use System.WCh_Con;\n \n package body Switch.C is\n \n-   type Arg_Array is array (Nat) of Big_String_Ptr;\n-   type Arg_Array_Ptr is access Arg_Array;\n-   --  Types to access compiler arguments\n-\n-   save_argc : Nat;\n-   pragma Import (C, save_argc);\n-   --  Saved value of argc (number of arguments), imported from toplev.c\n-\n-   save_argv : Arg_Array_Ptr;\n-   pragma Import (C, save_argv);\n-   --  Saved value of argv (argument pointers), imported from toplev.c\n-\n    RTS_Specified : String_Access := null;\n    --  Used to detect multiple use of --RTS= flag\n \n-   function Len_Arg (Arg : Pos) return Nat;\n-   --  Determine length of argument number Arg on original gnat1 command line\n-\n    function Switch_Subsequently_Cancelled\n      (C        : String;\n-      Arg_Rank : Pos)\n+      Arg_Rank : Positive)\n       return Boolean;\n    --  This function is called from Scan_Front_End_Switches. It determines if\n    --  the switch currently being scanned is followed by a switch of the form\n    --  \"-gnat-\" & C, where C is the argument. If so, then True is returned,\n    --  and Scan_Front_End_Switches will cancel the effect of the switch. If\n    --  no such switch is found, False is returned.\n \n-   -------------\n-   -- Len_Arg --\n-   -------------\n-\n-   function Len_Arg (Arg : Pos) return Nat is\n-   begin\n-      for J in 1 .. Nat'Last loop\n-         if save_argv (Arg).all (Natural (J)) = ASCII.NUL then\n-            return J - 1;\n-         end if;\n-      end loop;\n-\n-      raise Program_Error;\n-   end Len_Arg;\n-\n    -----------------------------\n    -- Scan_Front_End_Switches --\n    -----------------------------\n \n    procedure Scan_Front_End_Switches\n      (Switch_Chars : String;\n-      Arg_Rank     : Pos)\n+      Arg_Rank     : Positive)\n    is\n       First_Switch : Boolean := True;\n       --  False for all but first switch\n@@ -1126,19 +1098,16 @@ package body Switch.C is\n \n    function Switch_Subsequently_Cancelled\n      (C        : String;\n-      Arg_Rank : Pos)\n+      Arg_Rank : Positive)\n       return Boolean\n    is\n-      Arg : Pos;\n-\n+      Arg : Positive;\n+      Max : constant Natural := Argument_Count;\n    begin\n       Arg := Arg_Rank + 1;\n-      while Arg < save_argc loop\n+      while Arg < Max loop\n          declare\n-            Argv_Ptr : constant Big_String_Ptr := save_argv (Arg);\n-            Argv_Len : constant Nat            := Len_Arg (Arg);\n-            Argv     : constant String         :=\n-                         Argv_Ptr (1 .. Natural (Argv_Len));\n+            Argv : constant String := Argument (Arg);\n          begin\n             if Argv = \"-gnat-\" & C then\n                return True;"}, {"sha": "84d8812ea47d8951dbf49dc2e656ebb7b66191d0", "filename": "gcc/ada/switch-c.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/547c595499a0ff69e2d4d2b77cd1cb9ada430f0e/gcc%2Fada%2Fswitch-c.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/547c595499a0ff69e2d4d2b77cd1cb9ada430f0e/gcc%2Fada%2Fswitch-c.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.ads?ref=547c595499a0ff69e2d4d2b77cd1cb9ada430f0e", "patch": "@@ -33,7 +33,7 @@ package Switch.C is\n \n    procedure Scan_Front_End_Switches\n      (Switch_Chars : String;\n-      Arg_Rank     : Pos);\n+      Arg_Rank     : Positive);\n    --  Procedures to scan out front end switches stored in the given string.\n    --  The first character is known to be a valid switch character, and there\n    --  are no blanks or other switch terminator characters in the string, so"}]}