{"sha": "43bad4beb5160e2e26186d69e8d57da8a6da0413", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNiYWQ0YmViNTE2MGUyZTI2MTg2ZDY5ZThkNTdkYThhNmRhMDQxMw==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargls@comcast.net", "date": "2006-02-02T19:11:58Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2006-02-02T19:11:58Z"}, "message": "re PR fortran/24958 (ICE on invalid nullify)\n\n2006-02-02  Steven G. Kargl  <kargls@comcast>\n\n\tPR fortran/24958\n\tmatch.c (gfc_match_nullify):  Free the list from head not tail.\n\n\tPR fortran/25072\n\t* match.c (match_forall_header): Fix internal error caused by bogus\n\tgfc_epxr pointers.\n\n\tgfortran.dg/nullify_2.f90: New test.\n\nFrom-SVN: r110517", "tree": {"sha": "7f6a1a29aeb5321de575fb75e1b447d73c135f9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f6a1a29aeb5321de575fb75e1b447d73c135f9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43bad4beb5160e2e26186d69e8d57da8a6da0413", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43bad4beb5160e2e26186d69e8d57da8a6da0413", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43bad4beb5160e2e26186d69e8d57da8a6da0413", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43bad4beb5160e2e26186d69e8d57da8a6da0413/comments", "author": null, "committer": null, "parents": [{"sha": "14b9dd558c58bc3b167274dfd01def2294594d11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14b9dd558c58bc3b167274dfd01def2294594d11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14b9dd558c58bc3b167274dfd01def2294594d11"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "80a453d1ad58870cea731d16140cf67fce4c5d9c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43bad4beb5160e2e26186d69e8d57da8a6da0413/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43bad4beb5160e2e26186d69e8d57da8a6da0413/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=43bad4beb5160e2e26186d69e8d57da8a6da0413", "patch": "@@ -1,3 +1,13 @@\n+2006-02-02  Steven G. Kargl  <kargls@comcast>\n+\n+\tPR fortran/24958\n+\tmatch.c (gfc_match_nullify):  Free the list from head not tail.\n+\n+\tPR fortran/25072\n+\t* match.c (match_forall_header): Fix internal error caused by bogus\n+\tgfc_epxr pointers.\n+\n+\n 2006-01-31  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \tPR fortran/26039"}, {"sha": "f726224a74b6829a48f3f510e444f2355bf57eb3", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43bad4beb5160e2e26186d69e8d57da8a6da0413/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43bad4beb5160e2e26186d69e8d57da8a6da0413/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=43bad4beb5160e2e26186d69e8d57da8a6da0413", "patch": "@@ -1890,7 +1890,7 @@ gfc_match_nullify (void)\n   gfc_syntax_error (ST_NULLIFY);\n \n cleanup:\n-  gfc_free_statements (tail);\n+  gfc_free_statements (new_st.next);\n   return MATCH_ERROR;\n }\n \n@@ -3367,12 +3367,13 @@ static match\n match_forall_header (gfc_forall_iterator ** phead, gfc_expr ** mask)\n {\n   gfc_forall_iterator *head, *tail, *new;\n+  gfc_expr *msk;\n   match m;\n \n   gfc_gobble_whitespace ();\n \n   head = tail = NULL;\n-  *mask = NULL;\n+  msk = NULL;\n \n   if (gfc_match_char ('(') != MATCH_YES)\n     return MATCH_NO;\n@@ -3393,6 +3394,7 @@ match_forall_header (gfc_forall_iterator ** phead, gfc_expr ** mask)\n       m = match_forall_iterator (&new);\n       if (m == MATCH_ERROR)\n \tgoto cleanup;\n+\n       if (m == MATCH_YES)\n \t{\n \t  tail->next = new;\n@@ -3402,7 +3404,7 @@ match_forall_header (gfc_forall_iterator ** phead, gfc_expr ** mask)\n \n       /* Have to have a mask expression */\n \n-      m = gfc_match_expr (mask);\n+      m = gfc_match_expr (&msk);\n       if (m == MATCH_NO)\n \tgoto syntax;\n       if (m == MATCH_ERROR)\n@@ -3415,13 +3417,14 @@ match_forall_header (gfc_forall_iterator ** phead, gfc_expr ** mask)\n     goto syntax;\n \n   *phead = head;\n+  *mask = msk;\n   return MATCH_YES;\n \n syntax:\n   gfc_syntax_error (ST_FORALL);\n \n cleanup:\n-  gfc_free_expr (*mask);\n+  gfc_free_expr (msk);\n   gfc_free_forall_iterator (head);\n \n   return MATCH_ERROR;"}, {"sha": "217aad8e8062d33eb0cf4c3ce2f1ec88778e7221", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43bad4beb5160e2e26186d69e8d57da8a6da0413/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43bad4beb5160e2e26186d69e8d57da8a6da0413/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=43bad4beb5160e2e26186d69e8d57da8a6da0413", "patch": "@@ -1,3 +1,8 @@\n+2006-02-02  Steven G. Kargl  <kargls@comcast>\n+\n+\tPR fortran/24958\n+        gfortran.dg/nullify_2.f90: New test.\n+\n 2006-02-02  Diego Novillo  <dnovillo@redhat.com>\n \n \tPR 25990"}, {"sha": "ebfcb374c9eb250fd47d3ebf928ad4e065ad340c", "filename": "gcc/testsuite/gfortran.dg/nullify_2.f90", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43bad4beb5160e2e26186d69e8d57da8a6da0413/gcc%2Ftestsuite%2Fgfortran.dg%2Fnullify_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43bad4beb5160e2e26186d69e8d57da8a6da0413/gcc%2Ftestsuite%2Fgfortran.dg%2Fnullify_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnullify_2.f90?ref=43bad4beb5160e2e26186d69e8d57da8a6da0413", "patch": "@@ -0,0 +1,7 @@\n+! { dg-do compile }\n+! PR fortran/25146\n+program i\n+   implicit none\n+   TYPE (a) t1     ! { dg-error \"is being used before\" }\n+   nullify(t1%x)   ! { dg-error \"error in NULLIFY\" }\n+end program"}]}