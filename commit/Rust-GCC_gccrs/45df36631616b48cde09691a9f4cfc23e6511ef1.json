{"sha": "45df36631616b48cde09691a9f4cfc23e6511ef1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDVkZjM2NjMxNjE2YjQ4Y2RlMDk2OTFhOWY0Y2ZjMjNlNjUxMWVmMQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@cygnus.com", "date": "1999-10-07T19:25:54Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1999-10-07T19:25:54Z"}, "message": "Comment out peepholes that generate buggy code\n\nFrom-SVN: r29858", "tree": {"sha": "63501f8b6661a6f72597444aeb019f97525e8329", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63501f8b6661a6f72597444aeb019f97525e8329"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45df36631616b48cde09691a9f4cfc23e6511ef1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45df36631616b48cde09691a9f4cfc23e6511ef1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45df36631616b48cde09691a9f4cfc23e6511ef1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45df36631616b48cde09691a9f4cfc23e6511ef1/comments", "author": null, "committer": null, "parents": [{"sha": "c2d9fa7b17356df57c4ba52d358a1b1d3500b976", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2d9fa7b17356df57c4ba52d358a1b1d3500b976", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2d9fa7b17356df57c4ba52d358a1b1d3500b976"}], "stats": {"total": 49, "additions": 27, "deletions": 22}, "files": [{"sha": "29f74543d3c0327427e212c3acdc98de561ad6ba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45df36631616b48cde09691a9f4cfc23e6511ef1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45df36631616b48cde09691a9f4cfc23e6511ef1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=45df36631616b48cde09691a9f4cfc23e6511ef1", "patch": "@@ -1,3 +1,8 @@\n+Thu Oct  7 15:23:28 1999  Michael Meissner  <meissner@cygnus.com>\n+\n+\t* alpha.md (peephole2's): Comment out peephole2's that generate\n+\tbuggy code.\n+\n Thu Oct  7 12:00:53 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* genrecog.c (add_to_sequence): Disable mode check for"}, {"sha": "4fe909df2bdc94b56ce4ff6793ad25b829e6b68a", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45df36631616b48cde09691a9f4cfc23e6511ef1/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45df36631616b48cde09691a9f4cfc23e6511ef1/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=45df36631616b48cde09691a9f4cfc23e6511ef1", "patch": "@@ -5407,25 +5407,25 @@\n ;; Optimize sign-extension of SImode loads.  This shows up in the wake of\n ;; reload when converting fp->int.\n \n-(define_peephole2\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-        (match_operand:SI 1 \"memory_operand\" \"m\"))\n-   (set (match_operand:DI 2 \"register_operand\" \"=r\")\n-        (sign_extend:DI (match_dup 0)))]\n-  \"rtx_equal_p (operands[0], operands[2])\n-   || reg_dead_p (insn, operands[0])\"\n-  [(set (match_dup 2)\n-\t(sign_extend:DI (match_dup 1)))]\n-  \"\")\n-\n-(define_peephole2\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-        (match_operand:SI 1 \"hard_fp_register_operand\" \"f\"))\n-   (set (match_operand:DI 2 \"register_operand\" \"=r\")\n-        (sign_extend:DI (match_dup 0)))]\n-  \"TARGET_FIX\n-   && (rtx_equal_p (operands[0], operands[2])\n-       || reg_dead_p (insn, operands[0]))\"\n-  [(set (match_dup 2)\n-\t(sign_extend:DI (match_dup 1)))]\n-  \"\")\n+;(define_peephole2\n+;  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+;        (match_operand:SI 1 \"memory_operand\" \"m\"))\n+;   (set (match_operand:DI 2 \"register_operand\" \"=r\")\n+;        (sign_extend:DI (match_dup 0)))]\n+;  \"rtx_equal_p (operands[0], operands[2])\n+;   || reg_dead_p (insn, operands[0])\"\n+;  [(set (match_dup 2)\n+;\t(sign_extend:DI (match_dup 1)))]\n+;  \"\")\n+;\n+;(define_peephole2\n+;  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+;        (match_operand:SI 1 \"hard_fp_register_operand\" \"f\"))\n+;   (set (match_operand:DI 2 \"register_operand\" \"=r\")\n+;        (sign_extend:DI (match_dup 0)))]\n+;  \"TARGET_FIX\n+;   && (rtx_equal_p (operands[0], operands[2])\n+;       || reg_dead_p (insn, operands[0]))\"\n+;  [(set (match_dup 2)\n+;\t(sign_extend:DI (match_dup 1)))]\n+;  \"\")"}]}