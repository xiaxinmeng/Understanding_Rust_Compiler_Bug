{"sha": "239cfd92e9ce5014a7616f692e0c6d4f337227b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM5Y2ZkOTJlOWNlNTAxNGE3NjE2ZjY5MmUwYzZkNGYzMzcyMjdiOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-23T12:43:18Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-23T12:43:18Z"}, "message": "rs6000: Small improvement to the C++17 ABI fix [PR94707]\n\nAnyway, based on IRC discussion with Richard Sandiford on IRC, we should\nprobably test type uids instead of type pointers because type uids aren't\nreused, but type pointers in a very bad luck case could be, and having the\nstatic var at filescope and GTY((deletable)) is an overkill (and with costs\nduring GC time).\n\n2020-04-23  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/94707\n\t* config/rs6000/rs6000-call.c (rs6000_discover_homogeneous_aggregate):\n\tUse TYPE_UID (TYPE_MAIN_VARIANT (type)) instead of type to check\n\tif the same type has been diagnosed most recently already.", "tree": {"sha": "02e7f6592dba678e4eebd3259f72d1b225c69f53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02e7f6592dba678e4eebd3259f72d1b225c69f53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/239cfd92e9ce5014a7616f692e0c6d4f337227b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/239cfd92e9ce5014a7616f692e0c6d4f337227b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/239cfd92e9ce5014a7616f692e0c6d4f337227b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/239cfd92e9ce5014a7616f692e0c6d4f337227b8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6ffc89f6ef90707ac44240718e258c81f32c7e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6ffc89f6ef90707ac44240718e258c81f32c7e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6ffc89f6ef90707ac44240718e258c81f32c7e4"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "69f07c4f663a8137778a50df6733757ac9a9d32c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/239cfd92e9ce5014a7616f692e0c6d4f337227b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/239cfd92e9ce5014a7616f692e0c6d4f337227b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=239cfd92e9ce5014a7616f692e0c6d4f337227b8", "patch": "@@ -1,3 +1,10 @@\n+2020-04-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/94707\n+\t* config/rs6000/rs6000-call.c (rs6000_discover_homogeneous_aggregate):\n+\tUse TYPE_UID (TYPE_MAIN_VARIANT (type)) instead of type to check\n+\tif the same type has been diagnosed most recently already.\n+\n 2020-04-23  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n \n \t* config/arm/arm_mve.h (__arm_vbicq_n_u16): Modify function parameter's"}, {"sha": "d4875ddeeb5c86d70fd3ba208633d796e69455ee", "filename": "gcc/config/rs6000/rs6000-call.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/239cfd92e9ce5014a7616f692e0c6d4f337227b8/gcc%2Fconfig%2Frs6000%2Frs6000-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/239cfd92e9ce5014a7616f692e0c6d4f337227b8/gcc%2Fconfig%2Frs6000%2Frs6000-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-call.c?ref=239cfd92e9ce5014a7616f692e0c6d4f337227b8", "patch": "@@ -5739,14 +5739,15 @@ rs6000_discover_homogeneous_aggregate (machine_mode mode, const_tree type,\n \t\t*n_elts = field_count;\n \t      if (cxx17_empty_base_seen && warn_psabi)\n \t\t{\n-\t\t  static const_tree last_reported_type;\n-\t\t  if (type != last_reported_type)\n+\t\t  static unsigned last_reported_type_uid;\n+\t\t  unsigned uid = TYPE_UID (TYPE_MAIN_VARIANT (type));\n+\t\t  if (uid != last_reported_type_uid)\n \t\t    {\n \t\t      inform (input_location,\n \t\t\t      \"parameter passing for argument of type %qT \"\n \t\t\t      \"when C++17 is enabled changed to match C++14 \"\n \t\t\t      \"in GCC 10.1\", type);\n-\t\t      last_reported_type = type;\n+\t\t      last_reported_type_uid = uid;\n \t\t    }\n \t\t}\n \t      return true;"}]}