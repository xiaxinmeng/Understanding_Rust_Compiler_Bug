{"sha": "e64c4f9e2e81206c40dab6de2054cfb265db1ac2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY0YzRmOWUyZTgxMjA2YzQwZGFiNmRlMjA1NGNmYjI2NWRiMWFjMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-09-19T16:48:55Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-09-19T16:48:55Z"}, "message": "(find_reloads): Reject an alternative if two operands match the same\noutput and we have to do a reload.\n\nFrom-SVN: r5363", "tree": {"sha": "e4d4f4a8b552b87020cbc174b5c2d8d496129852", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4d4f4a8b552b87020cbc174b5c2d8d496129852"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e64c4f9e2e81206c40dab6de2054cfb265db1ac2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e64c4f9e2e81206c40dab6de2054cfb265db1ac2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e64c4f9e2e81206c40dab6de2054cfb265db1ac2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e64c4f9e2e81206c40dab6de2054cfb265db1ac2/comments", "author": null, "committer": null, "parents": [{"sha": "2661cdd98dd00d1b820b00db6d6394e57b59ab24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2661cdd98dd00d1b820b00db6d6394e57b59ab24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2661cdd98dd00d1b820b00db6d6394e57b59ab24"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "27d017d8d67aea1b0f97c804969b7544df311350", "filename": "gcc/reload.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64c4f9e2e81206c40dab6de2054cfb265db1ac2/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64c4f9e2e81206c40dab6de2054cfb265db1ac2/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=e64c4f9e2e81206c40dab6de2054cfb265db1ac2", "patch": "@@ -2730,6 +2730,17 @@ find_reloads (insn, replace, ind_levels, live_known, reload_reg_p)\n \t\t   we are supposed to match can be fixed with reloads.  */\n \t\tbadop = 0;\n \t\tthis_alternative[i] = this_alternative[c];\n+\n+\t\t/* If we have to reload this operand and some previous\n+\t\t   operand also had to match the same thing as this\n+\t\t   operand, we don't know how to do that.  So reject this\n+\t\t   alternative.  */\n+\t\tif (! win || force_reload)\n+\t\t  for (j = 0; j < i; j++)\n+\t\t    if (this_alternative_matches[j]\n+\t\t\t== this_alternative_matches[i])\n+\t\t      badop = 1;\n+\n \t\tbreak;\n \n \t      case 'p':"}]}