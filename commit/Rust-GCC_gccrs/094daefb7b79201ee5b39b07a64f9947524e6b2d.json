{"sha": "094daefb7b79201ee5b39b07a64f9947524e6b2d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk0ZGFlZmI3Yjc5MjAxZWU1YjM5YjA3YTY0Zjk5NDc1MjRlNmIyZA==", "commit": {"author": {"name": "Sudakshina Das", "email": "sudi.das@arm.com", "date": "2018-03-20T10:54:42Z"}, "committer": {"name": "Sudakshina Das", "email": "sudi@gcc.gnu.org", "date": "2018-03-20T10:54:42Z"}, "message": "[ARM][PR82989] Fix unexpected use of NEON instructions for shifts\n\nThis patch fixes PR82989 so that we avoid NEON instructions when\n-mneon-for-64bits is not enabled. This is more of a short term fix\nfor the real deeper problem of making an early decision of choosing\nor rejecting NEON instructions. There is now a new ticket PR84467 to\ndeal with the longer term solution.\n(Please refer to the discussion in the bug report for more details).\n\nSudi\n\n*** gcc/ChangeLog ***\n\n2018-03-20  Sudakshina Das  <sudi.das@arm.com>\n\n\tPR target/82989\n\t* config/arm/neon.md (ashldi3_neon): Update ?s for constraints\n\tto favor GPR over NEON registers.\n\t(<shift>di3_neon): Likewise.\n\n*** gcc/testsuite/ChangeLog ***\n\n2018-03-20  Sudakshina Das  <sudi.das@arm.com>\n\n\tPR target/82989\n\t* gcc.target/arm/pr82989.c: New test.\n\nFrom-SVN: r258677", "tree": {"sha": "ad88df4dad7de2ec94ab8b527e66d64c52e57485", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad88df4dad7de2ec94ab8b527e66d64c52e57485"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/094daefb7b79201ee5b39b07a64f9947524e6b2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/094daefb7b79201ee5b39b07a64f9947524e6b2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/094daefb7b79201ee5b39b07a64f9947524e6b2d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/094daefb7b79201ee5b39b07a64f9947524e6b2d/comments", "author": {"login": "sudakshina-das-arm", "id": 28538945, "node_id": "MDQ6VXNlcjI4NTM4OTQ1", "avatar_url": "https://avatars.githubusercontent.com/u/28538945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sudakshina-das-arm", "html_url": "https://github.com/sudakshina-das-arm", "followers_url": "https://api.github.com/users/sudakshina-das-arm/followers", "following_url": "https://api.github.com/users/sudakshina-das-arm/following{/other_user}", "gists_url": "https://api.github.com/users/sudakshina-das-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/sudakshina-das-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sudakshina-das-arm/subscriptions", "organizations_url": "https://api.github.com/users/sudakshina-das-arm/orgs", "repos_url": "https://api.github.com/users/sudakshina-das-arm/repos", "events_url": "https://api.github.com/users/sudakshina-das-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/sudakshina-das-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "038012e2d9211e56a2d6710a85314373af9d4d44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/038012e2d9211e56a2d6710a85314373af9d4d44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/038012e2d9211e56a2d6710a85314373af9d4d44"}], "stats": {"total": 64, "additions": 57, "deletions": 7}, "files": [{"sha": "239c28ab33736f07a126ee346436a774c50d7284", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/094daefb7b79201ee5b39b07a64f9947524e6b2d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/094daefb7b79201ee5b39b07a64f9947524e6b2d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=094daefb7b79201ee5b39b07a64f9947524e6b2d", "patch": "@@ -1,3 +1,10 @@\n+2018-03-20  Sudakshina Das  <sudi.das@arm.com>\n+\n+\tPR target/82989\n+\t* config/arm/neon.md (ashldi3_neon): Update ?s for constraints\n+\tto favor GPR over NEON registers.\n+\t(<shift>di3_neon): Likewise.\n+\n 2018-03-20  Tom de Vries  <tom@codesourcery.com>\n \n \tPR target/84952"}, {"sha": "1646b2172970acaaf949ba8b77d43ec72b688d73", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/094daefb7b79201ee5b39b07a64f9947524e6b2d/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/094daefb7b79201ee5b39b07a64f9947524e6b2d/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=094daefb7b79201ee5b39b07a64f9947524e6b2d", "patch": "@@ -1180,12 +1180,12 @@\n )\n \n (define_insn_and_split \"ashldi3_neon\"\n-  [(set (match_operand:DI 0 \"s_register_operand\"\t    \"= w, w,?&r,?r,?&r, ?w,w\")\n-\t(ashift:DI (match_operand:DI 1 \"s_register_operand\" \" 0w, w, 0r, 0,  r, 0w,w\")\n-\t\t   (match_operand:SI 2 \"general_operand\"    \"rUm, i,  r, i,  i,rUm,i\")))\n-   (clobber (match_scratch:SI 3\t\t\t\t    \"= X, X,?&r, X,  X,  X,X\"))\n-   (clobber (match_scratch:SI 4\t\t\t\t    \"= X, X,?&r, X,  X,  X,X\"))\n-   (clobber (match_scratch:DI 5\t\t\t\t    \"=&w, X,  X, X,  X, &w,X\"))\n+  [(set (match_operand:DI 0 \"s_register_operand\"\t    \"= w, w, &r, r, &r, ?w,?w\")\n+\t(ashift:DI (match_operand:DI 1 \"s_register_operand\" \" 0w, w, 0r, 0,  r, 0w, w\")\n+\t\t   (match_operand:SI 2 \"general_operand\"    \"rUm, i,  r, i,  i,rUm, i\")))\n+   (clobber (match_scratch:SI 3\t\t\t\t    \"= X, X, &r, X,  X,  X, X\"))\n+   (clobber (match_scratch:SI 4\t\t\t\t    \"= X, X, &r, X,  X,  X, X\"))\n+   (clobber (match_scratch:DI 5\t\t\t\t    \"=&w, X,  X, X,  X, &w, X\"))\n    (clobber (reg:CC_C CC_REGNUM))]\n   \"TARGET_NEON\"\n   \"#\"\n@@ -1276,7 +1276,7 @@\n ;; ashrdi3_neon\n ;; lshrdi3_neon\n (define_insn_and_split \"<shift>di3_neon\"\n-  [(set (match_operand:DI 0 \"s_register_operand\"\t     \"= w, w,?&r,?r,?&r,?w,?w\")\n+  [(set (match_operand:DI 0 \"s_register_operand\"\t     \"= w, w, &r, r, &r,?w,?w\")\n \t(RSHIFTS:DI (match_operand:DI 1 \"s_register_operand\" \" 0w, w, 0r, 0,  r,0w, w\")\n \t\t    (match_operand:SI 2 \"reg_or_int_operand\" \"  r, i,  r, i,  i, r, i\")))\n    (clobber (match_scratch:SI 3\t\t\t\t     \"=2r, X, &r, X,  X,2r, X\"))"}, {"sha": "9fbaa3fab528b43ddeb96119d30933b77bfe56e9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/094daefb7b79201ee5b39b07a64f9947524e6b2d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/094daefb7b79201ee5b39b07a64f9947524e6b2d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=094daefb7b79201ee5b39b07a64f9947524e6b2d", "patch": "@@ -1,3 +1,8 @@\n+2018-03-20  Sudakshina Das  <sudi.das@arm.com>\n+\n+\tPR target/82989\n+\t* gcc.target/arm/pr82989.c: New test.\n+\n 2018-03-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/84945"}, {"sha": "6f74dba44dd6ae7aab23b048ccb1af1dae57d4a4", "filename": "gcc/testsuite/gcc.target/arm/pr82989.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/094daefb7b79201ee5b39b07a64f9947524e6b2d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr82989.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/094daefb7b79201ee5b39b07a64f9947524e6b2d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr82989.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr82989.c?ref=094daefb7b79201ee5b39b07a64f9947524e6b2d", "patch": "@@ -0,0 +1,38 @@\n+/* PR target/82989.  */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-skip-if \"avoid conflicts with multilib options\" { *-*-* } { \"-mcpu=*\" } { \"-mcpu=cortex-a8\" } } */\n+/* { dg-skip-if \"avoid conflicts with multilib options\" { *-*-* } { \"-mfpu=*\" } { \"-mfpu=neon\" } } */\n+/* { dg-skip-if \"avoid conflicts with multilib options\" { *-*-* } { \"-mfloat-abi=*\" } { \"-mfloat-abi=hard\" } } */\n+/* { dg-options \"-O2 -mcpu=cortex-a8 -mfpu=neon -mfloat-abi=hard\" } */\n+/* { dg-add-options arm_neon } */\n+\n+typedef unsigned long long uint64_t;\n+\n+void f_shr_imm (uint64_t *a)\n+{\n+  *a += *a >> 32;\n+}\n+/* { dg-final { scan-assembler-not \"vshr*\" } } */\n+\n+void f_shr_reg (uint64_t *a, uint64_t b)\n+{\n+  *a += *a >> b;\n+}\n+/* { dg-final { scan-assembler-not \"vshl*\" } } */\n+/* Only 2 times for f_shr_reg. f_shr_imm should not have any.  */\n+/* { dg-final { scan-assembler-times {lsr\\tr[0-9]+, r[0-9]+, r[0-9]} 2 } } */\n+\n+void f_shl_imm (uint64_t *a)\n+{\n+  *a += *a << 32;\n+}\n+/* { dg-final { scan-assembler-not \"vshl*\" } } */\n+\n+void f_shl_reg (uint64_t *a, uint64_t b)\n+{\n+  *a += *a << b;\n+}\n+/* { dg-final { scan-assembler-not \"vshl*\" } } */\n+/* Only 2 times for f_shl_reg. f_shl_imm should not have any.  */\n+/* { dg-final { scan-assembler-times {lsl\\tr[0-9]+, r[0-9]+, r[0-9]} 2 } } */"}]}