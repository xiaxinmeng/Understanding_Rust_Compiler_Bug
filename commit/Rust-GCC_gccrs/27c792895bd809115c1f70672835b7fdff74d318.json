{"sha": "27c792895bd809115c1f70672835b7fdff74d318", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdjNzkyODk1YmQ4MDkxMTVjMWY3MDY3MjgzNWI3ZmRmZjc0ZDMxOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-20T17:51:04Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-20T17:51:04Z"}, "message": "debug: Fix up DWARF 5 -g -flto -ffat-lto-objects [PR98765]\n\nAs mentioned in the PR, with -gdwarf-5 (or -g now) -flto -ffat-lto-objects,\nusers can't strip the LTO sections with\nstrip -p -R .gnu.lto_* -R .gnu.debuglto_* -N __gnu_lto_v1\nanymore when GCC is configured against recent binutils.\n\nThe problem is that in that case .gnu.debuglto_.debug_line_str section is\nthen used, which is fine for references to strings in .gnu.debuglto_.*\nsections, but not when those references are in .debug_info section too;\nthose should really reference separate strings in .debug_line_str section.\n\nFor .gnu.debuglto_.debug_str vs. .debug_str we handle it right, we\nreset_indirect_string the strings and thus force creation of new labels for\nthe second time.\nBut for DW_FORM_line_strp as the patch shows, there were multiple problems.\nFirst one was that reset_indirect_string, even when called through traverse\non debug_line_str_hash, didn't do anything at all (fixed by first hunk).\nThe second bug was that the DW_FORM_line_strp strings, which were supposed\nto be only visible through debug_line_str_hash, leaked into debug_str_hash\n(second hunk).\nAnd the third thing is that when we reset debug_line_str_hash, we should\nstill make those strings DW_FORM_line_strp if they are accessed.\nOne could do it by reinstantiating DW_FORM_line_strp right away in\nreset_indirect_string and not clear debug_line_str_hash, but that has the\ndisadvantage that we then force emitting .debug_line_str strings that aren't\nreally needed - we need those from the CU DIEs' DW_AT_name and\nDW_AT_comp_dir attributes, but when emitting .debug_line section through\nassembler, we don't need to emit the strings we only needed for\n.gnu.debuglto_.debug_line which is always emitted by the compiler.\n\n2021-01-20  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR debug/98765\n\t* dwarf2out.c (reset_indirect_string): Also reset indirect strings\n\twith DW_FORM_line_strp form.\n\t(prune_unused_types_update_strings): Don't add into debug_str_hash\n\tindirect strings with DW_FORM_line_strp form.\n\t(adjust_name_comp_dir): New function.\n\t(dwarf2out_finish): Call it on CU DIEs after resetting\n\tdebug_line_str_hash.", "tree": {"sha": "0c439950e4d1b271eecdf318125c5ca67ab07cc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c439950e4d1b271eecdf318125c5ca67ab07cc4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27c792895bd809115c1f70672835b7fdff74d318", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27c792895bd809115c1f70672835b7fdff74d318", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27c792895bd809115c1f70672835b7fdff74d318", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27c792895bd809115c1f70672835b7fdff74d318/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4334b524274203125193a08a8485250c41c2daa9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4334b524274203125193a08a8485250c41c2daa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4334b524274203125193a08a8485250c41c2daa9"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "77ea4948d5ea84d62dab52474f6800c83f89bc6e", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 39, "deletions": 3, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27c792895bd809115c1f70672835b7fdff74d318/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27c792895bd809115c1f70672835b7fdff74d318/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=27c792895bd809115c1f70672835b7fdff74d318", "patch": "@@ -4733,7 +4733,9 @@ int\n reset_indirect_string (indirect_string_node **h, void *)\n {\n   struct indirect_string_node *node = *h;\n-  if (node->form == DW_FORM_strp || node->form == dwarf_FORM (DW_FORM_strx))\n+  if (node->form == DW_FORM_strp\n+      || node->form == DW_FORM_line_strp\n+      || node->form == dwarf_FORM (DW_FORM_strx))\n     {\n       free (node->label);\n       node->label = NULL;\n@@ -29477,8 +29479,9 @@ prune_unused_types_update_strings (dw_die_ref die)\n \ts->refcount++;\n \t/* Avoid unnecessarily putting strings that are used less than\n \t   twice in the hash table.  */\n-\tif (s->refcount\n-\t    == ((DEBUG_STR_SECTION_FLAGS & SECTION_MERGE) ? 1 : 2))\n+\tif (s->form != DW_FORM_line_strp\n+\t    && (s->refcount\n+\t\t== ((DEBUG_STR_SECTION_FLAGS & SECTION_MERGE) ? 1 : 2)))\n \t  {\n \t    indirect_string_node **slot\n \t      = debug_str_hash->find_slot_with_hash (s->str,\n@@ -31325,6 +31328,33 @@ reset_dies (dw_die_ref die)\n   FOR_EACH_CHILD (die, c, reset_dies (c));\n }\n \n+/* reset_indirect_string removed the references coming from DW_AT_name\n+   and DW_AT_comp_dir attributes on compilation unit DIEs.  Readd them as\n+   .debug_line_str strings again.  */\n+\n+static void\n+adjust_name_comp_dir (dw_die_ref die)\n+{\n+  for (int i = 0; i < 2; i++)\n+    {\n+      dwarf_attribute attr_kind = i ? DW_AT_comp_dir : DW_AT_name;\n+      dw_attr_node *a = get_AT (die, attr_kind);\n+      if (a == NULL || a->dw_attr_val.val_class != dw_val_class_str)\n+\tcontinue;\n+\n+      if (!debug_line_str_hash)\n+\tdebug_line_str_hash\n+\t  = hash_table<indirect_string_hasher>::create_ggc (10);\n+\n+      struct indirect_string_node *node\n+\t= find_AT_string_in_table (a->dw_attr_val.v.val_str->str,\n+\t\t\t\t   debug_line_str_hash);\n+      set_indirect_string (node);\n+      node->form = DW_FORM_line_strp;\n+      a->dw_attr_val.v.val_str = node;\n+    }\n+}\n+\n /* Output stuff that dwarf requires at the end of every file,\n    and generate the DWARF-2 debugging info.  */\n \n@@ -31398,6 +31428,12 @@ dwarf2out_finish (const char *filename)\n \t{\n \t  debug_line_str_hash->traverse<void *, reset_indirect_string> (NULL);\n \t  debug_line_str_hash = NULL;\n+\t  if (asm_outputs_debug_line_str ())\n+\t    {\n+\t      adjust_name_comp_dir (comp_unit_die ());\n+\t      for (limbo_die_node *node = cu_die_list; node; node = node->next)\n+\t\tadjust_name_comp_dir (node->die);\n+\t    }\n \t}\n     }\n "}]}