{"sha": "09b526703562a475d28e7a490e56dddb1edbe961", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDliNTI2NzAzNTYyYTQ3NWQyOGU3YTQ5MGU1NmRkZGIxZWRiZTk2MQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2004-07-05T21:57:44Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2004-07-05T21:57:44Z"}, "message": "calls.c (load_register_parameters): Call expand_shift instead of expand_binop with ashl_optab (or other shift...\n\n\n\t* calls.c (load_register_parameters): Call expand_shift instead\n\tof expand_binop with ashl_optab (or other shift optab) directly.\n\t* expr.c (emit_group_load, emit_group_store): Likewise.\n\t* function.c (assign_parm_setup_block): Likewise.\n\t* stmt.c (shift_return_value): Likewise.\n\nFrom-SVN: r84134", "tree": {"sha": "da845a026c41cbba580457d2d2a1cfac7bb30c10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da845a026c41cbba580457d2d2a1cfac7bb30c10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09b526703562a475d28e7a490e56dddb1edbe961", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09b526703562a475d28e7a490e56dddb1edbe961", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09b526703562a475d28e7a490e56dddb1edbe961", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09b526703562a475d28e7a490e56dddb1edbe961/comments", "author": null, "committer": null, "parents": [{"sha": "7682ef833a7aadac91f2fd21d2c61b74f4d4c957", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7682ef833a7aadac91f2fd21d2c61b74f4d4c957", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7682ef833a7aadac91f2fd21d2c61b74f4d4c957"}], "stats": {"total": 35, "additions": 22, "deletions": 13}, "files": [{"sha": "758807b353b2cdbcc7b2b1e1c1e181f9dabec66e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09b526703562a475d28e7a490e56dddb1edbe961/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09b526703562a475d28e7a490e56dddb1edbe961/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=09b526703562a475d28e7a490e56dddb1edbe961", "patch": "@@ -1,3 +1,11 @@\n+2004-07-05  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* calls.c (load_register_parameters): Call expand_shift instead\n+\tof expand_binop with ashl_optab (or other shift optab) directly.\n+\t* expr.c (emit_group_load, emit_group_store): Likewise.\n+\t* function.c (assign_parm_setup_block): Likewise.\n+\t* stmt.c (shift_return_value): Likewise.\n+\n 2004-07-05  Jakub Jelinek  <jakub@redhat.com>\n \n \t* expr.c (expand_assignment): Disable the bitfield += optimizations."}, {"sha": "9f84199990e9956d8181f3c25ae5386f7ab9cd17", "filename": "gcc/calls.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09b526703562a475d28e7a490e56dddb1edbe961/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09b526703562a475d28e7a490e56dddb1edbe961/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=09b526703562a475d28e7a490e56dddb1edbe961", "patch": "@@ -1527,8 +1527,8 @@ load_register_parameters (struct arg_data *args, int num_actuals,\n \t\t     call only uses SIZE bytes at the msb end, but it doesn't\n \t\t     seem worth generating rtl to say that.  */\n \t\t  reg = gen_rtx_REG (word_mode, REGNO (reg));\n-\t\t  x = expand_binop (word_mode, ashl_optab, reg,\n-\t\t\t\t    GEN_INT (shift), reg, 1, OPTAB_WIDEN);\n+\t\t  x = expand_shift (LSHIFT_EXPR, word_mode, reg,\n+\t\t\t\t    build_int_2 (shift, 0), reg, 1);\n \t\t  if (x != reg)\n \t\t    emit_move_insn (reg, x);\n \t\t}\n@@ -1560,11 +1560,12 @@ load_register_parameters (struct arg_data *args, int num_actuals,\n \t\t  rtx ri = gen_rtx_REG (word_mode, REGNO (reg));\n \t\t  rtx x = gen_reg_rtx (word_mode);\n \t\t  int shift = (UNITS_PER_WORD - size) * BITS_PER_UNIT;\n-\t\t  optab dir = BYTES_BIG_ENDIAN ? lshr_optab : ashl_optab;\n+\t\t  enum tree_code dir = BYTES_BIG_ENDIAN ? RSHIFT_EXPR\n+\t\t\t\t\t\t\t: LSHIFT_EXPR;\n \n \t\t  emit_move_insn (x, tem);\n-\t\t  x = expand_binop (word_mode, dir, x, GEN_INT (shift),\n-\t\t\t\t    ri, 1, OPTAB_WIDEN);\n+\t\t  x = expand_shift (dir, word_mode, x,\n+\t\t\t\t    build_int_2 (shift, 0), ri, 1);\n \t\t  if (x != ri)\n \t\t    emit_move_insn (ri, x);\n \t\t}"}, {"sha": "e0404449e12e9f80b43cb707c2d0f201e6079c91", "filename": "gcc/expr.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09b526703562a475d28e7a490e56dddb1edbe961/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09b526703562a475d28e7a490e56dddb1edbe961/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=09b526703562a475d28e7a490e56dddb1edbe961", "patch": "@@ -1923,8 +1923,8 @@ emit_group_load (rtx dst, rtx orig_src, tree type ATTRIBUTE_UNUSED, int ssize)\n \t\t\t\t     mode, mode, ssize);\n \n       if (shift)\n-\texpand_binop (mode, ashl_optab, tmps[i], GEN_INT (shift),\n-\t\t      tmps[i], 0, OPTAB_WIDEN);\n+\ttmps[i] = expand_shift (LSHIFT_EXPR, mode, tmps[i],\n+\t\t\t\tbuild_int_2 (shift, 0), tmps[i], 0);\n     }\n \n   emit_queue ();\n@@ -2037,8 +2037,8 @@ emit_group_store (rtx orig_dst, rtx src, tree type ATTRIBUTE_UNUSED, int ssize)\n \t      )\n \t    {\n \t      int shift = (bytelen - (ssize - bytepos)) * BITS_PER_UNIT;\n-\t      expand_binop (mode, ashr_optab, tmps[i], GEN_INT (shift),\n-\t\t\t    tmps[i], 0, OPTAB_WIDEN);\n+\t      tmps[i] = expand_shift (RSHIFT_EXPR, mode, tmps[i],\n+\t\t\t\t      build_int_2 (shift, 0), tmps[i], 0);\n \t    }\n \t  bytelen = ssize - bytepos;\n \t}"}, {"sha": "0e736159bceca9394234b0bb3cded161298bf2ac", "filename": "gcc/function.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09b526703562a475d28e7a490e56dddb1edbe961/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09b526703562a475d28e7a490e56dddb1edbe961/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=09b526703562a475d28e7a490e56dddb1edbe961", "patch": "@@ -2702,8 +2702,8 @@ assign_parm_setup_block (tree parm, struct assign_parm_data_one *data)\n \t      int by = (UNITS_PER_WORD - size) * BITS_PER_UNIT;\n \t      rtx reg = gen_rtx_REG (word_mode, REGNO (data->entry_parm));\n \n-\t      x = expand_binop (word_mode, ashl_optab, reg,\n-\t\t\t\tGEN_INT (by), 0, 1, OPTAB_WIDEN);\n+\t      x = expand_shift (LSHIFT_EXPR, word_mode, reg,\n+\t\t\t\tbuild_int_2 (by, 0), NULL_RTX, 1);\n \t      tem = change_address (mem, word_mode, 0);\n \t      emit_move_insn (tem, x);\n \t    }"}, {"sha": "1a99e2318904b85adabdff1b1843fa5b13b5c26d", "filename": "gcc/stmt.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09b526703562a475d28e7a490e56dddb1edbe961/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09b526703562a475d28e7a490e56dddb1edbe961/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=09b526703562a475d28e7a490e56dddb1edbe961", "patch": "@@ -2376,9 +2376,9 @@ shift_return_value (rtx val)\n       shift = (GET_MODE_BITSIZE (GET_MODE (target))\n \t       - BITS_PER_UNIT * int_size_in_bytes (type));\n       if (shift > 0)\n-\tval = expand_binop (GET_MODE (target), ashl_optab,\n+\tval = expand_shift (LSHIFT_EXPR, GET_MODE (target),\n \t\t\t    gen_lowpart (GET_MODE (target), val),\n-\t\t\t    GEN_INT (shift), target, 1, OPTAB_WIDEN);\n+\t\t\t    build_int_2 (shift, 0), target, 1);\n     }\n   return val;\n }"}]}