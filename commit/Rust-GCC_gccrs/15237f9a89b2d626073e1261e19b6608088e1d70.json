{"sha": "15237f9a89b2d626073e1261e19b6608088e1d70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTUyMzdmOWE4OWIyZDYyNjA3M2UxMjYxZTE5YjY2MDgwODhlMWQ3MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-04-13T20:53:34Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-04-13T20:53:34Z"}, "message": "re PR c++/39480 (generated memcpy causes trouble in assignment)\n\n\tPR c++/39480\n\t* call.c (build_over_call): Don't call memcpy if the target is\n\tthe same as the source.\n\nFrom-SVN: r146011", "tree": {"sha": "dfce435461a53d08f59ec5e247223e0c5474d547", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfce435461a53d08f59ec5e247223e0c5474d547"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15237f9a89b2d626073e1261e19b6608088e1d70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15237f9a89b2d626073e1261e19b6608088e1d70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15237f9a89b2d626073e1261e19b6608088e1d70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15237f9a89b2d626073e1261e19b6608088e1d70/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1244a8b735508cea75ab03c7a72f221d31b2bb4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1244a8b735508cea75ab03c7a72f221d31b2bb4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1244a8b735508cea75ab03c7a72f221d31b2bb4f"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "d77634d32631661684c6187b911852b3258f3584", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15237f9a89b2d626073e1261e19b6608088e1d70/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15237f9a89b2d626073e1261e19b6608088e1d70/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=15237f9a89b2d626073e1261e19b6608088e1d70", "patch": "@@ -1,3 +1,9 @@\n+2009-04-09  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/39480\n+\t* call.c (build_over_call): Don't call memcpy if the target is\n+\tthe same as the source.\n+\n 2009-04-13  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/39750"}, {"sha": "ef7c045acab4af1629c4fbd27c16f4c457421a7b", "filename": "gcc/cp/call.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15237f9a89b2d626073e1261e19b6608088e1d70/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15237f9a89b2d626073e1261e19b6608088e1d70/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=15237f9a89b2d626073e1261e19b6608088e1d70", "patch": "@@ -5396,14 +5396,28 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n \t     instead of an explicit call to memcpy.  */\n \t\n \t  tree arg0, arg1, arg2, t;\n+\t  tree test = NULL_TREE;\n \n \t  arg2 = TYPE_SIZE_UNIT (as_base);\n \t  arg1 = arg;\n \t  arg0 = cp_build_unary_op (ADDR_EXPR, to, 0, complain);\n+\n+\t  if (!(optimize && flag_tree_ter))\n+\t    {\n+\t      /* When TER is off get_pointer_alignment returns 0, so a call\n+\t\t to __builtin_memcpy is expanded as a call to memcpy, which\n+\t\t is invalid with identical args.  When TER is on it is\n+\t\t expanded as a block move, which should be safe.  */\n+\t      arg0 = save_expr (arg0);\n+\t      arg1 = save_expr (arg1);\n+\t      test = build2 (EQ_EXPR, boolean_type_node, arg0, arg1);\n+\t    }\n \t  t = implicit_built_in_decls[BUILT_IN_MEMCPY];\n \t  t = build_call_n (t, 3, arg0, arg1, arg2);\n \n \t  t = convert (TREE_TYPE (arg0), t);\n+\t  if (test)\n+\t    t = build3 (COND_EXPR, TREE_TYPE (t), test, arg0, t);\n \t  val = cp_build_indirect_ref (t, 0, complain);\n \t}\n "}, {"sha": "457aee66bb2bb8b99727e5d4279760eaa4c40253", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15237f9a89b2d626073e1261e19b6608088e1d70/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15237f9a89b2d626073e1261e19b6608088e1d70/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=15237f9a89b2d626073e1261e19b6608088e1d70", "patch": "@@ -1,3 +1,8 @@\n+2009-04-09  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/39480\n+\t* g++.dg/init/copy7.C: New.\n+\n 2009-04-13  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR testsuite/39733"}, {"sha": "f4364f329e53ffef24096994978046d09de322b8", "filename": "gcc/testsuite/g++.dg/init/copy7.C", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15237f9a89b2d626073e1261e19b6608088e1d70/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fcopy7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15237f9a89b2d626073e1261e19b6608088e1d70/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fcopy7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fcopy7.C?ref=15237f9a89b2d626073e1261e19b6608088e1d70", "patch": "@@ -0,0 +1,32 @@\n+// PR c++/39480\n+// It isn't always safe to call memcpy with identical arguments.\n+// { dg-do run }\n+\n+extern \"C\" void abort();\n+extern \"C\" void *\n+memcpy(void *dest, void *src, __SIZE_TYPE__ n)\n+{\n+  abort();\n+}\n+\n+struct A\n+{\n+  double d[10];\n+};\n+\n+struct B: public A\n+{\n+  char bc;\n+};\n+\n+B b;\n+\n+void f(B *a1, B* a2)\n+{\n+  *a1 = *a2;\n+}\n+\n+int main()\n+{\n+  f(&b,&b);\n+}"}]}