{"sha": "b8fe3c1e06a23f89a66d280c157fb44c738edbf2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhmZTNjMWUwNmEyM2Y4OWE2NmQyODBjMTU3ZmI0NGM3MzhlZGJmMg==", "commit": {"author": {"name": "Adam Megacz", "email": "adam@xwt.org", "date": "2002-02-07T05:26:42Z"}, "committer": {"name": "Adam Megacz", "email": "megacz@gcc.gnu.org", "date": "2002-02-07T05:26:42Z"}, "message": "configure.in: Changed mingw) to *mingw*).\n\n2002-02-06  Adam Megacz <adam@xwt.org>\n\n        * configure.in: Changed mingw) to *mingw*).\n        * win32.cc: Created this file.\n        * win32.h: Created this file.\n        * win32.cc, prims.cc, win32.h (win32_exception_handler): Moved\n        win32_exception_handler from prims.cc to win32.cc, added\n        header in win32.h.\n        * prims.cc: removed some #ifdef-WIN32'd headers which are no\n        longer needed now that we have platform.h\n\nFrom-SVN: r49566", "tree": {"sha": "db9c18a5924f33eb9b557f63d50e0b0489bc296d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db9c18a5924f33eb9b557f63d50e0b0489bc296d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8fe3c1e06a23f89a66d280c157fb44c738edbf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8fe3c1e06a23f89a66d280c157fb44c738edbf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8fe3c1e06a23f89a66d280c157fb44c738edbf2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8fe3c1e06a23f89a66d280c157fb44c738edbf2/comments", "author": null, "committer": null, "parents": [{"sha": "df79080e5f5fb9339dbeaa8b51416b25a055d122", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df79080e5f5fb9339dbeaa8b51416b25a055d122", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df79080e5f5fb9339dbeaa8b51416b25a055d122"}], "stats": {"total": 96, "additions": 63, "deletions": 33}, "files": [{"sha": "203c773eb76e198d8600e8ea2f1d22ea35b4fa86", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8fe3c1e06a23f89a66d280c157fb44c738edbf2/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8fe3c1e06a23f89a66d280c157fb44c738edbf2/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=b8fe3c1e06a23f89a66d280c157fb44c738edbf2", "patch": "@@ -1,3 +1,14 @@\n+2002-02-06  Adam Megacz <adam@xwt.org>\n+\n+       * configure.in: Changed mingw) to *mingw*).\n+       * win32.cc: Created this file.\n+       * win32.h: Created this file.\n+       * win32.cc, prims.cc, win32.h (win32_exception_handler): Moved\n+       win32_exception_handler from prims.cc to win32.cc, added\n+       header in win32.h.\n+       * prims.cc: removed some #ifdef-WIN32'd headers which are no\n+       longer needed now that we have platform.h\n+\n 2002-02-06  Adam Megacz <adam@xwt.org>\n \n \t* shs.h, shs.cc, natSimpleSHSStream.cc: use uint<n>_t instead"}, {"sha": "68cb751719f38f687f82470844e444a4f15cc918", "filename": "libjava/configure", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8fe3c1e06a23f89a66d280c157fb44c738edbf2/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8fe3c1e06a23f89a66d280c157fb44c738edbf2/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=b8fe3c1e06a23f89a66d280c157fb44c738edbf2", "patch": "@@ -2864,7 +2864,7 @@ fi\n PLATFORMOBJS=\n case \"$TARGET_ECOS\" in\n    no) case \"$host\" in\n-      mingw)\n+      *mingw*)\n             PLATFORM=Win32\n             PLATFORMOBJS=win32.lo\n \t    PLATFORMH=win32.h\n@@ -3072,7 +3072,7 @@ test -d java/lang || mkdir java/lang\n \n \n case \"${host}\" in\n-    mingw)\n+    *mingw*)\n       SYSTEMSPEC=\"-lgdi32 -lwsock32 -lws2_32\"\n     ;;\n     *)\n@@ -6388,7 +6388,7 @@ case \"${host}\" in\n  alpha*-*-linux*)\n     SIGNAL_HANDLER=include/dwarf2-signal.h\n     ;;\n- mingw)\n+ *mingw*)\n     SIGNAL_HANDLER=include/win32-signal.h\n     ;;\n  *)"}, {"sha": "f082f62e2128063dcde6002792d1427668d8f2a6", "filename": "libjava/configure.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8fe3c1e06a23f89a66d280c157fb44c738edbf2/libjava%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8fe3c1e06a23f89a66d280c157fb44c738edbf2/libjava%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.in?ref=b8fe3c1e06a23f89a66d280c157fb44c738edbf2", "patch": "@@ -204,7 +204,7 @@ TARGET_ECOS=\"$with_ecos\"\n PLATFORMOBJS=\n case \"$TARGET_ECOS\" in\n    no) case \"$host\" in\n-      mingw)\n+      *mingw*)\n             PLATFORM=Win32\n             PLATFORMOBJS=win32.lo\n \t    PLATFORMH=win32.h\n@@ -250,7 +250,7 @@ AC_LINK_FILES(java/lang/${PLATFORM}Process.java, java/lang/ConcreteProcess.java)\n AC_LINK_FILES(java/lang/nat${PLATFORM}Process.cc, java/lang/natConcreteProcess.cc)\n \n case \"${host}\" in\n-    mingw)\n+    *mingw*)\n       SYSTEMSPEC=\"-lgdi32 -lwsock32 -lws2_32\"\n     ;;\n     *)\n@@ -852,7 +852,7 @@ case \"${host}\" in\n  alpha*-*-linux*)\n     SIGNAL_HANDLER=include/dwarf2-signal.h\n     ;;\n- mingw)\n+ *mingw*)\n     SIGNAL_HANDLER=include/win32-signal.h\n     ;;\n  *)"}, {"sha": "677f5d34529af8b77492b404fb77998b4ac75c9b", "filename": "libjava/include/win32.h", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8fe3c1e06a23f89a66d280c157fb44c738edbf2/libjava%2Finclude%2Fwin32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8fe3c1e06a23f89a66d280c157fb44c738edbf2/libjava%2Finclude%2Fwin32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fwin32.h?ref=b8fe3c1e06a23f89a66d280c157fb44c738edbf2", "patch": "@@ -0,0 +1,22 @@\n+// win32.h -- Helper functions for Microsoft-flavored OSs.\n+\n+/* Copyright (C) 2002  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+#ifndef __JV_WIN32_H__\n+#define __JV_WIN32_H__\n+\n+#include <windows.h>\n+#undef STRICT\n+\n+#undef __INSIDE_CYGWIN__\n+#include <winsock.h>\n+\n+LONG CALLBACK win32_exception_handler (LPEXCEPTION_POINTERS e);\n+\n+#endif /* __JV_WIN32_H__ */"}, {"sha": "995206cb16f246b6fcab67e15a73cd3f79431f8a", "filename": "libjava/prims.cc", "status": "modified", "additions": 1, "deletions": 27, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8fe3c1e06a23f89a66d280c157fb44c738edbf2/libjava%2Fprims.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8fe3c1e06a23f89a66d280c157fb44c738edbf2/libjava%2Fprims.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fprims.cc?ref=b8fe3c1e06a23f89a66d280c157fb44c738edbf2", "patch": "@@ -9,16 +9,7 @@ Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n #include <config.h>\n-\n-#ifdef WIN32\n-#include <windows.h>\n-#undef STRICT\n-#endif /* WIN32 */\n-\n-#ifdef WIN32\n-#undef __INSIDE_CYGWIN__\n-#include <winsock.h>\n-#endif /* WIN32 */\n+#include <platform.h>\n \n #include <stdlib.h>\n #include <stdarg.h>\n@@ -731,23 +722,6 @@ _Jv_ThisExecutable (const char *name)\n     }\n }\n \n-#ifdef WIN32\n-\n-extern \"C\" int* win32_get_restart_frame (void *);\n-\n-LONG CALLBACK\n-win32_exception_handler (LPEXCEPTION_POINTERS e)\n-{\n-  if (e->ExceptionRecord->ExceptionCode == EXCEPTION_ACCESS_VIOLATION)\n-    _Jv_ThrowNullPointerException();\n-  else if (e->ExceptionRecord->ExceptionCode == EXCEPTION_INT_DIVIDE_BY_ZERO)\n-    throw new java::lang::ArithmeticException;\n-  else\n-    return EXCEPTION_CONTINUE_SEARCH;\n-}\n-\n-#endif\n-\n #ifndef DISABLE_GETENV_PROPERTIES\n \n static char *"}, {"sha": "daccf0f94fb5c6c4e188dd51210707c1fc6f9dd9", "filename": "libjava/win32.cc", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8fe3c1e06a23f89a66d280c157fb44c738edbf2/libjava%2Fwin32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8fe3c1e06a23f89a66d280c157fb44c738edbf2/libjava%2Fwin32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fwin32.cc?ref=b8fe3c1e06a23f89a66d280c157fb44c738edbf2", "patch": "@@ -0,0 +1,23 @@\n+// win32.cc - Helper functions for Microsoft-flavored OSs.\n+\n+/* Copyright (C) 2002  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+#include <config.h>\n+#include <windows.h>\n+\n+LONG CALLBACK\n+win32_exception_handler (LPEXCEPTION_POINTERS e)\n+{\n+  if (e->ExceptionRecord->ExceptionCode == EXCEPTION_ACCESS_VIOLATION)\n+    _Jv_ThrowNullPointerException();\n+  else if (e->ExceptionRecord->ExceptionCode == EXCEPTION_INT_DIVIDE_BY_ZERO)\n+    throw new java::lang::ArithmeticException;\n+  else\n+    return EXCEPTION_CONTINUE_SEARCH;\n+}"}]}