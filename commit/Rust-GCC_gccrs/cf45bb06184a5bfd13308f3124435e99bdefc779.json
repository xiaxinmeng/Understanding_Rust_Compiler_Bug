{"sha": "cf45bb06184a5bfd13308f3124435e99bdefc779", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y0NWJiMDYxODRhNWJmZDEzMzA4ZjMxMjQ0MzVlOTliZGVmYzc3OQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-10-08T21:54:12Z"}, "committer": {"name": "Gavin Romig-Koch", "email": "gavin@gcc.gnu.org", "date": "1999-10-08T21:54:12Z"}, "message": "mips.md (movstrsi+[123]): Combine these into a single pattern.\n\n\t* config/mips/mips.md (movstrsi+[123]) : Combine these into\n\ta single pattern.  Scrap the 'd' versions as unnecessary.\n\n\t* config/mips/mips.md (tablejump_internal3,tablejump_mips161,\n\ttablejump_mips162,tablejump_internal4): The operands to a\n\tlabel_ref must be VOIDmode.\n\nFrom-SVN: r29874", "tree": {"sha": "a8ed57db19028ae28da04779c75dd219659e4b6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8ed57db19028ae28da04779c75dd219659e4b6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf45bb06184a5bfd13308f3124435e99bdefc779", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf45bb06184a5bfd13308f3124435e99bdefc779", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf45bb06184a5bfd13308f3124435e99bdefc779", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf45bb06184a5bfd13308f3124435e99bdefc779/comments", "author": null, "committer": null, "parents": [{"sha": "64fb023e4ee310f0e681e891b60b71ca2c8dbd26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64fb023e4ee310f0e681e891b60b71ca2c8dbd26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64fb023e4ee310f0e681e891b60b71ca2c8dbd26"}], "stats": {"total": 75, "additions": 18, "deletions": 57}, "files": [{"sha": "70880e927d3b581fae5eb194915ad97247899459", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf45bb06184a5bfd13308f3124435e99bdefc779/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf45bb06184a5bfd13308f3124435e99bdefc779/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cf45bb06184a5bfd13308f3124435e99bdefc779", "patch": "@@ -1,3 +1,12 @@\n+Fri Oct  8 17:49:08 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* config/mips/mips.md (movstrsi+[123]) : Combine these into\n+\ta single pattern.  Scrap the 'd' versions as unnecessary. \n+\n+\t* config/mips/mips.md (tablejump_internal3,tablejump_mips161,\n+\ttablejump_mips162,tablejump_internal4): The operands to a\n+\tlabel_ref must be VOIDmode.\n+\n Fri Oct  8 16:12:42 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* configure.in (c-mbchar): Append, don't overwrite, `extra_c_flags'."}, {"sha": "19431686ae364da48dff0eca0a15c66a0f16bbdb", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 9, "deletions": 57, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf45bb06184a5bfd13308f3124435e99bdefc779/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf45bb06184a5bfd13308f3124435e99bdefc779/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=cf45bb06184a5bfd13308f3124435e99bdefc779", "patch": "@@ -6160,41 +6160,9 @@ move\\\\t%0,%z4\\\\n\\\\\n ;; is not offsettable, since the stack pointer can only handle 4 and 8\n ;; byte loads.\n \n-(define_insn \"\"\n-  [(set (match_operand:BLK 0 \"memory_operand\" \"=d\")\t;; destination\n-\t(match_operand:BLK 1 \"memory_operand\" \"d\"))\t;; source\n-   (clobber (match_scratch:SI 4 \"=&d\"))\t\t\t;; temp 1\n-   (clobber (match_scratch:SI 5 \"=&d\"))\t\t\t;; temp 2\n-   (clobber (match_scratch:SI 6 \"=&d\"))\t\t\t;; temp 3\n-   (clobber (match_scratch:SI 7 \"=&d\"))\t\t\t;; temp 4\n-   (use (match_operand:SI 2 \"small_int\" \"I\"))\t\t;; # bytes to move\n-   (use (match_operand:SI 3 \"small_int\" \"I\"))\t\t;; alignment\n-   (use (const_int 0))]\t\t\t\t\t;; normal block move\n-  \"TARGET_MIPS16\"\n-  \"* return output_block_move (insn, operands, 4, BLOCK_MOVE_NORMAL);\"\n-  [(set_attr \"type\"\t\"multi\")\n-   (set_attr \"mode\"\t\"none\")\n-   (set_attr \"length\"\t\"80\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:BLK 0 \"memory_operand\" \"=d\")\t;; destination\n-\t(match_operand:BLK 1 \"memory_operand\" \"o\"))\t;; source\n-   (clobber (match_scratch:SI 4 \"=&d\"))\t\t\t;; temp 1\n-   (clobber (match_scratch:SI 5 \"=&d\"))\t\t\t;; temp 2\n-   (clobber (match_scratch:SI 6 \"=&d\"))\t\t\t;; temp 3\n-   (clobber (match_scratch:SI 7 \"=&d\"))\t\t\t;; temp 4\n-   (use (match_operand:SI 2 \"small_int\" \"I\"))\t\t;; # bytes to move\n-   (use (match_operand:SI 3 \"small_int\" \"I\"))\t\t;; alignment\n-   (use (const_int 0))]\t\t\t\t\t;; normal block move\n-  \"TARGET_MIPS16\"\n-  \"* return output_block_move (insn, operands, 4, BLOCK_MOVE_NORMAL);\"\n-  [(set_attr \"type\"\t\"multi\")\n-   (set_attr \"mode\"\t\"none\")\n-   (set_attr \"length\"\t\"80\")])\n-\n (define_insn \"\"\n   [(set (match_operand:BLK 0 \"memory_operand\" \"=o\")\t;; destination\n-\t(match_operand:BLK 1 \"memory_operand\" \"d\"))\t;; source\n+\t(match_operand:BLK 1 \"memory_operand\" \"o\"))\t;; source\n    (clobber (match_scratch:SI 4 \"=&d\"))\t\t\t;; temp 1\n    (clobber (match_scratch:SI 5 \"=&d\"))\t\t\t;; temp 2\n    (clobber (match_scratch:SI 6 \"=&d\"))\t\t\t;; temp 3\n@@ -6268,8 +6236,8 @@ move\\\\t%0,%z4\\\\n\\\\\n    (set_attr \"length\"\t\"80\")])\n \n (define_insn \"\"\n-  [(set (match_operand:BLK 0 \"memory_operand\" \"=d\")\t;; destination\n-\t(match_operand:BLK 1 \"memory_operand\" \"d\"))\t;; source\n+  [(set (match_operand:BLK 0 \"memory_operand\" \"=o\")\t;; destination\n+\t(match_operand:BLK 1 \"memory_operand\" \"o\"))\t;; source\n    (clobber (match_scratch:SI 4 \"=&d\"))\t\t\t;; temp 1\n    (clobber (match_scratch:SI 5 \"=&d\"))\t\t\t;; temp 2\n    (clobber (match_scratch:SI 6 \"=&d\"))\t\t\t;; temp 3\n@@ -6297,22 +6265,6 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"* return output_block_move (insn, operands, 4, BLOCK_MOVE_LAST);\"\n   [(set_attr \"type\"\t\"store\")\n    (set_attr \"mode\"\t\"none\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:BLK 0 \"memory_operand\" \"=d\")\t;; destination\n-\t(match_operand:BLK 1 \"memory_operand\" \"d\"))\t;; source\n-   (clobber (match_scratch:SI 4 \"=&d\"))\t\t\t;; temp 1\n-   (clobber (match_scratch:SI 5 \"=&d\"))\t\t\t;; temp 2\n-   (clobber (match_scratch:SI 6 \"=&d\"))\t\t\t;; temp 3\n-   (clobber (match_scratch:SI 7 \"=&d\"))\t\t\t;; temp 4\n-   (use (match_operand:SI 2 \"small_int\" \"I\"))\t\t;; # bytes to move\n-   (use (match_operand:SI 3 \"small_int\" \"I\"))\t\t;; alignment\n-   (use (const_int 2))]\t\t\t\t\t;; just last store of block move\n-  \"TARGET_MIPS16\"\n-  \"* return output_block_move (insn, operands, 4, BLOCK_MOVE_LAST);\"\n-  [(set_attr \"type\"\t\"store\")\n-   (set_attr \"mode\"\t\"none\")])\n-\n \f\n ;;\n ;;  ....................\n@@ -9141,15 +9093,15 @@ move\\\\t%0,%z4\\\\n\\\\\n (define_expand \"tablejump_internal3\"\n   [(parallel [(set (pc)\n \t\t   (plus:SI (match_operand:SI 0 \"register_operand\" \"d\")\n-\t\t\t    (label_ref:SI (match_operand:SI 1 \"\" \"\"))))\n+\t\t\t    (label_ref:SI (match_operand 1 \"\" \"\"))))\n \t      (use (label_ref:SI (match_dup 1)))])]\n   \"\"\n   \"\")\n \n (define_expand \"tablejump_mips161\"\n   [(set (pc) (plus:SI (sign_extend:SI\n \t\t       (match_operand:HI 0 \"register_operand\" \"d\"))\n-\t\t      (label_ref:SI (match_operand:SI 1 \"\" \"\"))))]\n+\t\t      (label_ref:SI (match_operand 1 \"\" \"\"))))]\n   \"TARGET_MIPS16 && !(Pmode == DImode)\"\n   \"\n {\n@@ -9171,7 +9123,7 @@ move\\\\t%0,%z4\\\\n\\\\\n (define_expand \"tablejump_mips162\"\n   [(set (pc) (plus:DI (sign_extend:DI\n \t\t       (match_operand:HI 0 \"register_operand\" \"d\"))\n-\t\t      (label_ref:DI (match_operand:SI 1 \"\" \"\"))))]\n+\t\t      (label_ref:DI (match_operand 1 \"\" \"\"))))]\n   \"TARGET_MIPS16 && Pmode == DImode\"\n   \"\n {\n@@ -9200,7 +9152,7 @@ move\\\\t%0,%z4\\\\n\\\\\n (define_insn \"\"\n   [(set (pc)\n \t(plus:SI (match_operand:SI 0 \"register_operand\" \"d\")\n-\t\t (label_ref:SI (match_operand:SI 1 \"\" \"\"))))\n+\t\t (label_ref:SI (match_operand 1 \"\" \"\"))))\n    (use (label_ref:SI (match_dup 1)))]\n   \"!(Pmode == DImode) && next_active_insn (insn) != 0\n    && GET_CODE (PATTERN (next_active_insn (insn))) == ADDR_DIFF_VEC\n@@ -9219,7 +9171,7 @@ move\\\\t%0,%z4\\\\n\\\\\n (define_expand \"tablejump_internal4\"\n   [(parallel [(set (pc)\n \t\t   (plus:DI (match_operand:DI 0 \"se_register_operand\" \"d\")\n-\t\t\t    (label_ref:DI (match_operand:SI 1 \"\" \"\"))))\n+\t\t\t    (label_ref:DI (match_operand 1 \"\" \"\"))))\n \t      (use (label_ref:DI (match_dup 1)))])]\n   \"\"\n   \"\")\n@@ -9231,7 +9183,7 @@ move\\\\t%0,%z4\\\\n\\\\\n (define_insn \"\"\n   [(set (pc)\n \t(plus:DI (match_operand:DI 0 \"se_register_operand\" \"d\")\n-\t\t (label_ref:DI (match_operand:SI 1 \"\" \"\"))))\n+\t\t (label_ref:DI (match_operand 1 \"\" \"\"))))\n    (use (label_ref:DI (match_dup 1)))]\n   \"Pmode == DImode && next_active_insn (insn) != 0\n    && GET_CODE (PATTERN (next_active_insn (insn))) == ADDR_DIFF_VEC"}]}