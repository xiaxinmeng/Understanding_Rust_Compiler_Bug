{"sha": "4cf88f570ac6363d5f9bfb1591bb37319410e2c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNmODhmNTcwYWM2MzYzZDVmOWJmYjE1OTFiYjM3MzE5NDEwZTJjMw==", "commit": {"author": {"name": "Benjamin Chelf", "email": "chelf@codesourcery.com", "date": "2000-07-03T03:55:23Z"}, "committer": {"name": "Ben Chelf", "email": "chelf@gcc.gnu.org", "date": "2000-07-03T03:55:23Z"}, "message": "c-common.h (genrtl_begin_compound_stmt): Remove declaration.\n\n2000-07-02  Benjamin Chelf  <chelf@codesourcery.com>\n\n\t* c-common.h (genrtl_begin_compound_stmt): Remove declaration.\n\t(genrtl_finish_compound_stmt): Likewise.\n\t(genrtl_compound_stmt): Change to return void.\n\n\t* c-semantics.c (genrtl_begin_compound_stmt): Remove function and\n\tmove code from here to ...\n\t(genrtl_compound_stmt): ... here.\n\t(genrtl_finish_compound_stmt): Remove.\n\t(expand_stmt): Add comment.\n\n\t* cp/cp-tree.h (genrtl_goto_stmt): Remove declaration.\n\t(genrtl_expr_stmt): Likewise.\n\t(genrtl_decl_stmt): Likewise.\n\t(genrtl_if_stmt): Likewise.\n\t(genrtl_while_stmt): Likewise.\n\t(genrtl_do_stmt): Likewise.\n\t(genrtl_return_stmt): Likewise.\n\t(genrtl_for_stmt): Likewise.\n\t(genrtl_break_stmt): Likewise.\n\t(genrtl_continue_stmt): Likewise.\n\t(genrtl_scope_stmt): Likewise.\n\t(genrtl_switch_stmt): Likewise.\n\t(genrtl_case_label): Likewise.\n\t(genrtl_begin_compound_stmt): Likewise.\n\t(genrtl_finish_compound_stmt): Likewise.\n\t(genrtl_compound_stmt): Likewise.\n\t(genrtl_asm_stmt): Likewise.\n\n\t* cp/init.c (begin_init_stmts): Remove call to\n\tgenrtl_begin_compound_stmt.\n\t(finish_init_stmts): Remove call to genrtl_finish_compound_stmt.\n\n\t* cp/semantics.c (lang_expand_stmt): Changed call to\n\tgenrtl_compound_stmt to ignore return value.\n\nFrom-SVN: r34837", "tree": {"sha": "47371dbd06d575e7cedfa0ed02f5879a4322631f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47371dbd06d575e7cedfa0ed02f5879a4322631f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cf88f570ac6363d5f9bfb1591bb37319410e2c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cf88f570ac6363d5f9bfb1591bb37319410e2c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cf88f570ac6363d5f9bfb1591bb37319410e2c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cf88f570ac6363d5f9bfb1591bb37319410e2c3/comments", "author": null, "committer": null, "parents": [{"sha": "cd9bedad01a83a93dfec0d493c2a7db490a4dbe4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd9bedad01a83a93dfec0d493c2a7db490a4dbe4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd9bedad01a83a93dfec0d493c2a7db490a4dbe4"}], "stats": {"total": 105, "additions": 53, "deletions": 52}, "files": [{"sha": "5649951a0365426b784fcb1a5b2404ae29411844", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cf88f570ac6363d5f9bfb1591bb37319410e2c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cf88f570ac6363d5f9bfb1591bb37319410e2c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4cf88f570ac6363d5f9bfb1591bb37319410e2c3", "patch": "@@ -1,3 +1,15 @@\n+2000-07-02  Benjamin Chelf  <chelf@codesourcery.com>\n+\n+\t* c-common.h (genrtl_begin_compound_stmt): Remove declaration.\n+\t(genrtl_finish_compound_stmt): Likewise.\n+\t(genrtl_compound_stmt): Change to return void.\n+\n+\t* c-semantics.c (genrtl_begin_compound_stmt): Remove function and \n+\tmove code from here to ...\n+\t(genrtl_compound_stmt): ... here.\n+\t(genrtl_finish_compound_stmt): Remove.\n+\t(expand_stmt): Add comment.\n+\n 2000-07-02  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* c-typeck.c (build_indirect_ref): Use COMPLETE_OR_VOID_TYPE_P"}, {"sha": "79770305aecf71016152c3ccc640a6ed3fa7f51c", "filename": "gcc/c-common.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cf88f570ac6363d5f9bfb1591bb37319410e2c3/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cf88f570ac6363d5f9bfb1591bb37319410e2c3/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=4cf88f570ac6363d5f9bfb1591bb37319410e2c3", "patch": "@@ -435,9 +435,7 @@ extern void genrtl_continue_stmt                PARAMS ((void));\n extern void genrtl_scope_stmt                   PARAMS ((tree));\n extern void genrtl_switch_stmt                  PARAMS ((tree));\n extern void genrtl_case_label                   PARAMS ((tree, tree));\n-extern tree genrtl_begin_compound_stmt          PARAMS ((int));\n-extern tree genrtl_finish_compound_stmt         PARAMS ((int));\n-extern tree genrtl_compound_stmt                PARAMS ((tree));\n+extern void genrtl_compound_stmt                PARAMS ((tree));\n extern void genrtl_asm_stmt                     PARAMS ((tree, tree,\n \t\t\t\t\t\t\t tree, tree,\n \t\t\t\t\t\t\t tree));"}, {"sha": "4e5e3ffe8dca912a0fe2feb0f35c45ad4856a625", "filename": "gcc/c-semantics.c", "status": "modified", "additions": 10, "deletions": 25, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cf88f570ac6363d5f9bfb1591bb37319410e2c3/gcc%2Fc-semantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cf88f570ac6363d5f9bfb1591bb37319410e2c3/gcc%2Fc-semantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-semantics.c?ref=4cf88f570ac6363d5f9bfb1591bb37319410e2c3", "patch": "@@ -398,42 +398,23 @@ genrtl_case_label (low_value, high_value)\n   do_case (low_value, high_value);\n }\n \n-/* Generate the RTL for the start of a COMPOUND_STMT. */\n+/* Generate the RTL for T, which is a COMPOUND_STMT. */\n \n-tree \n-genrtl_begin_compound_stmt (has_no_scope)\n-     int has_no_scope;\n+void\n+genrtl_compound_stmt (t)\n+    tree t;\n {\n   /* If this is the outermost block of the function, declare the\n      variables __FUNCTION__, __PRETTY_FUNCTION__, and so forth.  */\n   if (cfun\n       && !current_function_name_declared () \n-      && !has_no_scope)\n+      && !COMPOUND_STMT_NO_SCOPE (t))\n     {\n       set_current_function_name_declared (1);\n       declare_function_name ();\n-    }\n-\n-  return NULL_TREE;\n-}\n-\n-/* Generate the RTL for the end of a COMPOUND_STMT. */\n-\n-tree genrtl_finish_compound_stmt (has_no_scope)\n-     int has_no_scope;\n-{\n-  return NULL_TREE;\n-}\n+    } \n \n-/* Generate the RTL for T, which is a COMPOUND_STMT. */\n-\n-tree \n-genrtl_compound_stmt (t)\n-    tree t;\n-{\n-  genrtl_begin_compound_stmt (COMPOUND_STMT_NO_SCOPE (t));\n   expand_stmt (COMPOUND_BODY (t));\n-  return (genrtl_finish_compound_stmt (COMPOUND_STMT_NO_SCOPE (t)));\n }\n \n /* Generate the RTL for an ASM_STMT. */\n@@ -481,6 +462,9 @@ genrtl_decl_cleanup (decl, cleanup)\n     expand_decl_cleanup (decl, cleanup);\n }\n \n+/* Generate the RTL for the statement T, its substatements, and any\n+   other statements at its nesting level. */\n+\n tree\n expand_stmt (t)\n      tree t;\n@@ -489,3 +473,4 @@ expand_stmt (t)\n   rval = lang_expand_stmt (t);\n   return rval;\n }\n+"}, {"sha": "96cd52ae49af47b366e21dbd459a0dab5251c58d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cf88f570ac6363d5f9bfb1591bb37319410e2c3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cf88f570ac6363d5f9bfb1591bb37319410e2c3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4cf88f570ac6363d5f9bfb1591bb37319410e2c3", "patch": "@@ -1,3 +1,30 @@\n+2000-07-02  Benjamin Chelf  <chelf@codesourcery.com>\n+\n+\t* cp-tree.h (genrtl_goto_stmt): Remove declaration.\n+\t(genrtl_expr_stmt): Likewise.\n+\t(genrtl_decl_stmt): Likewise.\n+\t(genrtl_if_stmt): Likewise.\n+\t(genrtl_while_stmt): Likewise.\n+\t(genrtl_do_stmt): Likewise.\n+\t(genrtl_return_stmt): Likewise.\n+\t(genrtl_for_stmt): Likewise.\n+\t(genrtl_break_stmt): Likewise.\n+\t(genrtl_continue_stmt): Likewise.\n+\t(genrtl_scope_stmt): Likewise.\n+\t(genrtl_switch_stmt): Likewise.\n+\t(genrtl_case_label): Likewise.\n+\t(genrtl_begin_compound_stmt): Likewise.\n+\t(genrtl_finish_compound_stmt): Likewise.\n+\t(genrtl_compound_stmt): Likewise.\n+\t(genrtl_asm_stmt): Likewise.\n+\n+\t* init.c (begin_init_stmts): Remove call to\n+\tgenrtl_begin_compound_stmt.\n+\t(finish_init_stmts): Remove call to genrtl_finish_compound_stmt.\n+\n+\t* semantics.c (lang_expand_stmt): Changed call to\n+\tgenrtl_compound_stmt to ignore return value.\n+\t\n 2000-07-02  Mark Mitchell  <mark@codesourcery.com>\n \n \t* mangle.c (canonicalize_for_substitution): Return the canonical"}, {"sha": "a5fea5083aa710abcf8ba71f46d75fa991f9740d", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cf88f570ac6363d5f9bfb1591bb37319410e2c3/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cf88f570ac6363d5f9bfb1591bb37319410e2c3/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=4cf88f570ac6363d5f9bfb1591bb37319410e2c3", "patch": "@@ -4464,25 +4464,6 @@ extern void genrtl_ctor_stmt                    PARAMS ((tree));\n extern void genrtl_subobject                    PARAMS ((tree));\n extern tree genrtl_do_poplevel                  PARAMS ((void));\n extern void clear_out_block                     PARAMS ((void));\n-extern void genrtl_goto_stmt                    PARAMS ((tree));\n-extern void genrtl_expr_stmt                    PARAMS ((tree));\n-extern void genrtl_decl_stmt                    PARAMS ((tree));\n-extern void genrtl_if_stmt                      PARAMS ((tree));\n-extern void genrtl_while_stmt                   PARAMS ((tree));\n-extern void genrtl_do_stmt                      PARAMS ((tree));\n-extern void genrtl_return_stmt                  PARAMS ((tree));\n-extern void genrtl_for_stmt                     PARAMS ((tree));\n-extern void genrtl_break_stmt                   PARAMS ((void));\n-extern void genrtl_continue_stmt                PARAMS ((void));\n-extern void genrtl_scope_stmt                   PARAMS ((tree));\n-extern void genrtl_switch_stmt                  PARAMS ((tree));\n-extern void genrtl_case_label                   PARAMS ((tree, tree));\n-extern tree genrtl_begin_compound_stmt          PARAMS ((int));\n-extern tree genrtl_finish_compound_stmt         PARAMS ((int));\n-extern tree genrtl_compound_stmt                PARAMS ((tree));\n-extern void genrtl_asm_stmt                     PARAMS ((tree, tree,\n-\t\t\t\t\t\t\t tree, tree,\n-\t\t\t\t\t\t\t tree));\n extern void genrtl_named_return_value           PARAMS ((tree,\n \t\t\t\t\t\t\t tree));\n extern tree begin_global_stmt_expr              PARAMS ((void));"}, {"sha": "ba067287b4bbca30f745205f0778f7c267dd4826", "filename": "gcc/cp/init.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cf88f570ac6363d5f9bfb1591bb37319410e2c3/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cf88f570ac6363d5f9bfb1591bb37319410e2c3/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=4cf88f570ac6363d5f9bfb1591bb37319410e2c3", "patch": "@@ -98,8 +98,8 @@ begin_init_stmts (stmt_expr_p, compound_stmt_p)\n   \n   if (building_stmt_tree ())\n     *compound_stmt_p = begin_compound_stmt (/*has_no_scope=*/1);\n-  else\n-    *compound_stmt_p = genrtl_begin_compound_stmt (/*has_no_scope=*/1);\n+  //  else\n+  //    *compound_stmt_p = genrtl_begin_compound_stmt (has_no_scope=1);\n }\n \n /* Finish out the statement-expression begun by the previous call to\n@@ -113,8 +113,6 @@ finish_init_stmts (stmt_expr, compound_stmt)\n {  \n   if (building_stmt_tree ())\n     finish_compound_stmt (/*has_no_scope=*/1, compound_stmt);\n-  else\n-    genrtl_finish_compound_stmt (/*has_no_scope=*/1);\n   \n   if (building_stmt_tree ())\n     stmt_expr = finish_stmt_expr (stmt_expr);"}, {"sha": "485cc593003540c5428e36c3c56c8b36f8c327b9", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cf88f570ac6363d5f9bfb1591bb37319410e2c3/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cf88f570ac6363d5f9bfb1591bb37319410e2c3/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=4cf88f570ac6363d5f9bfb1591bb37319410e2c3", "patch": "@@ -2362,7 +2362,7 @@ lang_expand_stmt (t)\n \t  break;\n \n \tcase COMPOUND_STMT:\n-\t  rval = genrtl_compound_stmt (t);\n+\t  genrtl_compound_stmt (t);\n \t  break;\n \n \tcase BREAK_STMT:"}]}