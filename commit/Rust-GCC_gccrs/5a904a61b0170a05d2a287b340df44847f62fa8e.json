{"sha": "5a904a61b0170a05d2a287b340df44847f62fa8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE5MDRhNjFiMDE3MGEwNWQyYTI4N2IzNDBkZjQ0ODQ3ZjYyZmE4ZQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "1999-02-24T17:48:42Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1999-02-24T17:48:42Z"}, "message": "Fix dwarf2 debug error found by gdb testsuite: add big-endian correction.\n\n\t* dwarf2out.c (add_location_or_const_value_attribute):  Add big\n\tendian correction for parms passed in regs but living on the stack.\n\nFrom-SVN: r25412", "tree": {"sha": "46d6959f35e3370804815de6e46fac7749e856c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46d6959f35e3370804815de6e46fac7749e856c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a904a61b0170a05d2a287b340df44847f62fa8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a904a61b0170a05d2a287b340df44847f62fa8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a904a61b0170a05d2a287b340df44847f62fa8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a904a61b0170a05d2a287b340df44847f62fa8e/comments", "author": null, "committer": null, "parents": [{"sha": "599f37b6d3945ce70d5c75ca42ab156b3f3c5e65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/599f37b6d3945ce70d5c75ca42ab156b3f3c5e65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/599f37b6d3945ce70d5c75ca42ab156b3f3c5e65"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "1ef11200c1b70a83d51b335ecc8d263d2e499569", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a904a61b0170a05d2a287b340df44847f62fa8e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a904a61b0170a05d2a287b340df44847f62fa8e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a904a61b0170a05d2a287b340df44847f62fa8e", "patch": "@@ -1,3 +1,8 @@\n+Wed Feb 24 17:47:28 1999  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* dwarf2out.c (add_location_or_const_value_attribute):  Add big\n+\tendian correction for parms passed in regs but living on the stack.\n+\n Wed Feb 24 14:03:54 1999  Jeffrey A Law  (law@cygnus.com)\n \n \t* calls.c (compute_argument_block_size): New function, extracted from"}, {"sha": "48331b9e789e47edee1d5124eb5d27b452388c44", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a904a61b0170a05d2a287b340df44847f62fa8e/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a904a61b0170a05d2a287b340df44847f62fa8e/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=5a904a61b0170a05d2a287b340df44847f62fa8e", "patch": "@@ -7084,6 +7084,38 @@ add_location_or_const_value_attribute (die, decl)\n \t\t   && TYPE_SIZE (declared_type) <= TYPE_SIZE (passed_type))\n \t\trtl = DECL_INCOMING_RTL (decl);\n \t}\n+\n+      /* If the parm was passed in registers, but lives on the stack, then\n+\t make a big endian correction if the mode of the type of the\n+\t parameter is not the same as the mode of the rtl.  */\n+      /* ??? This is the same series of checks that are made in dbxout.c before\n+\t we reach the big endian correction code there.  It isn't clear if all\n+\t of these checks are necessary here, but keeping them all is the safe\n+\t thing to do.  */\n+      else if (GET_CODE (rtl) == MEM\n+\t       && XEXP (rtl, 0) != const0_rtx\n+\t       && ! CONSTANT_P (XEXP (rtl, 0))\n+\t       /* Not passed in memory.  */\n+\t       && GET_CODE (DECL_INCOMING_RTL (decl)) != MEM\n+\t       /* Not passed by invisible reference.  */\n+\t       && (GET_CODE (XEXP (rtl, 0)) != REG\n+\t\t   || REGNO (XEXP (rtl, 0)) == HARD_FRAME_POINTER_REGNUM\n+\t\t   || REGNO (XEXP (rtl, 0)) == STACK_POINTER_REGNUM\n+#if ARG_POINTER_REGNUM != HARD_FRAME_POINTER_REGNUM\n+\t\t   || REGNO (XEXP (rtl, 0)) == ARG_POINTER_REGNUM\n+#endif\n+\t\t     )\n+\t       /* Big endian correction check.  */\n+\t       && BYTES_BIG_ENDIAN\n+\t       && TYPE_MODE (TREE_TYPE (decl)) != GET_MODE (rtl)\n+\t       && (GET_MODE_SIZE (TYPE_MODE (TREE_TYPE (decl)))\n+\t\t   < UNITS_PER_WORD))\n+\t{\n+\t  int offset = (UNITS_PER_WORD\n+\t\t\t- GET_MODE_SIZE (TYPE_MODE (TREE_TYPE (decl))));\n+\t  rtl = gen_rtx_MEM (TYPE_MODE (TREE_TYPE (decl)),\n+\t\t\t     plus_constant (XEXP (rtl, 0), offset));\n+\t}\n     }\n \n   if (rtl == NULL_RTX)"}]}