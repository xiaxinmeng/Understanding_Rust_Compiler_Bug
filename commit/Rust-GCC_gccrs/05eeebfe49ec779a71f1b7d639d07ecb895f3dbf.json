{"sha": "05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDVlZWViZmU0OWVjNzc5YTcxZjFiN2Q2MzlkMDdlY2I4OTVmM2RiZg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-02-16T19:19:55Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-02-16T19:19:55Z"}, "message": "random.h (linear_congruential_engine(_Sseq&), [...]): Do not enable for the type itself.\n\n2010-02-16  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/bits/random.h (linear_congruential_engine(_Sseq&),\n\tmersenne_twister_engine(_Sseq&), subtract_with_carry_engine(_Sseq&)):\n\tDo not enable for the type itself.\n\t(discard_block_engine(_Sseq&), independent_bits_engine(_Sseq&),\n\tshuffle_order_engine(_Sseq&)): Do not enable for the type itself too.\n\t(linear_congruential_engine<>::seed(_Sseq&),\n\tmersenne_twister_engine<>::seed(_Sseq&),\n\tsubtract_with_carry_engine<>::seed(_Sseq&)): Use enable_if on the\n\treturn type.\n\t(discard_block_engine<>::seed(_Sseq&),\n\tindependent_bits_engine<>::seed(_Sseq&),\n\tshuffle_order_engine<>::seed(_Sseq&)): Do not use enable_if.\n\t* include/bits/random.tcc: Adjust definitions.\n\t* testsuite/26_numerics/random/independent_bits_engine/cons/copy.cc:\n\tNew.\n\t* testsuite/26_numerics/random/subtract_with_carry_engine/cons/\n\tcopy.cc: Likewise.\n\t* testsuite/26_numerics/random/discard_block_engine/cons/\n\tcopy.cc: Likewise.\n\t* testsuite/26_numerics/random/mersenne_twister_engine/cons/\n\tcopy.cc: Likewise.\n\t* testsuite/26_numerics/random/linear_congruential_engine/cons/\n\tcopy.cc: Likewise.\n\t* testsuite/26_numerics/random/shuffle_order_engine/cons/\n\tcopy.cc: Likewise.\n\n\t* testsuite/26_numerics/random/independent_bits_engine/cons/\n\tbase_move.cc: Minor tweaks.\n\t* testsuite/26_numerics/random/independent_bits_engine/cons/seed1.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/independent_bits_engine/cons/seed2.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/independent_bits_engine/cons/\n\tbase_copy.cc: Likewise.\n\t* testsuite/26_numerics/random/independent_bits_engine/cons/\n\tdefault.cc: Likewise.\n\t* testsuite/26_numerics/random/independent_bits_engine/cons/\n\tseed_seq.cc: Likewise.\n\t* testsuite/26_numerics/random/subtract_with_carry_engine/cons/\n\tseed1.cc: Likewise.\n\t* testsuite/26_numerics/random/subtract_with_carry_engine/cons/\n\tseed2.cc: Likewise.\n\t* testsuite/26_numerics/random/subtract_with_carry_engine/cons/\n\tdefault.cc: Likewise.\n\t* testsuite/26_numerics/random/subtract_with_carry_engine/cons/\n\tseed_seq.cc: Likewise.\n\t* testsuite/26_numerics/random/discard_block_engine/cons/base_move.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/discard_block_engine/cons/seed1.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/discard_block_engine/cons/seed2.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/discard_block_engine/cons/base_copy.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/discard_block_engine/cons/default.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/discard_block_engine/cons/seed_seq.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/mersenne_twister_engine/cons/seed1.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/mersenne_twister_engine/cons/seed2.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/mersenne_twister_engine/cons/\n\tdefault.cc: Likewise.\n\t* testsuite/26_numerics/random/mersenne_twister_engine/cons/\n\tseed_seq.cc: Likewise.\n\t* testsuite/26_numerics/random/linear_congruential_engine/cons/\n\tseed1.cc: Likewise.\n\t* testsuite/26_numerics/random/linear_congruential_engine/cons/\n\tseed2.cc: Likewise.\n\t* testsuite/26_numerics/random/linear_congruential_engine/cons/\n\tseed_seq.cc: Likewise.\n\t* testsuite/26_numerics/random/shuffle_order_engine/cons/base_move.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/shuffle_order_engine/cons/seed1.cc:\n\tLikewise.\n \t* testsuite/26_numerics/random/shuffle_order_engine/cons/seed2.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/shuffle_order_engine/cons/base_copy.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/shuffle_order_engine/cons/default.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/shuffle_order_engine/cons/seed_seq.cc:\n\tLikewise.\n\nFrom-SVN: r156815", "tree": {"sha": "9dab7a1bf7d07f16cf1ec05d7a119e0d0fcc88b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9dab7a1bf7d07f16cf1ec05d7a119e0d0fcc88b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/comments", "author": null, "committer": null, "parents": [{"sha": "5498b6d2bf9a195307c77ce6b79a0d5b4ba16307", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5498b6d2bf9a195307c77ce6b79a0d5b4ba16307", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5498b6d2bf9a195307c77ce6b79a0d5b4ba16307"}], "stats": {"total": 615, "additions": 403, "deletions": 212}, "files": [{"sha": "7ea3348e9f93c2c7e1d2ad778338c3fbea5754b6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -1,3 +1,90 @@\n+2010-02-16  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/bits/random.h (linear_congruential_engine(_Sseq&),\n+\tmersenne_twister_engine(_Sseq&), subtract_with_carry_engine(_Sseq&)):\n+\tDo not enable for the type itself.\n+\t(discard_block_engine(_Sseq&), independent_bits_engine(_Sseq&),\n+\tshuffle_order_engine(_Sseq&)): Do not enable for the type itself too.\n+\t(linear_congruential_engine<>::seed(_Sseq&),\n+\tmersenne_twister_engine<>::seed(_Sseq&),\n+\tsubtract_with_carry_engine<>::seed(_Sseq&)): Use enable_if on the\n+\treturn type.\n+\t(discard_block_engine<>::seed(_Sseq&),\n+\tindependent_bits_engine<>::seed(_Sseq&),\n+\tshuffle_order_engine<>::seed(_Sseq&)): Do not use enable_if.\n+\t* include/bits/random.tcc: Adjust definitions.\n+\t* testsuite/26_numerics/random/independent_bits_engine/cons/copy.cc:\n+\tNew.\n+\t* testsuite/26_numerics/random/subtract_with_carry_engine/cons/\n+\tcopy.cc: Likewise.\n+\t* testsuite/26_numerics/random/discard_block_engine/cons/\n+\tcopy.cc: Likewise.\n+\t* testsuite/26_numerics/random/mersenne_twister_engine/cons/\n+\tcopy.cc: Likewise.\n+\t* testsuite/26_numerics/random/linear_congruential_engine/cons/\n+\tcopy.cc: Likewise.\n+\t* testsuite/26_numerics/random/shuffle_order_engine/cons/\n+\tcopy.cc: Likewise.\n+\n+\t* testsuite/26_numerics/random/independent_bits_engine/cons/\n+\tbase_move.cc: Minor tweaks.\n+\t* testsuite/26_numerics/random/independent_bits_engine/cons/seed1.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/independent_bits_engine/cons/seed2.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/independent_bits_engine/cons/\n+\tbase_copy.cc: Likewise.\n+\t* testsuite/26_numerics/random/independent_bits_engine/cons/\n+\tdefault.cc: Likewise.\n+\t* testsuite/26_numerics/random/independent_bits_engine/cons/\n+\tseed_seq.cc: Likewise.\n+\t* testsuite/26_numerics/random/subtract_with_carry_engine/cons/\n+\tseed1.cc: Likewise.\n+\t* testsuite/26_numerics/random/subtract_with_carry_engine/cons/\n+\tseed2.cc: Likewise.\n+\t* testsuite/26_numerics/random/subtract_with_carry_engine/cons/\n+\tdefault.cc: Likewise.\n+\t* testsuite/26_numerics/random/subtract_with_carry_engine/cons/\n+\tseed_seq.cc: Likewise.\n+\t* testsuite/26_numerics/random/discard_block_engine/cons/base_move.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/discard_block_engine/cons/seed1.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/discard_block_engine/cons/seed2.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/discard_block_engine/cons/base_copy.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/discard_block_engine/cons/default.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/discard_block_engine/cons/seed_seq.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/mersenne_twister_engine/cons/seed1.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/mersenne_twister_engine/cons/seed2.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/mersenne_twister_engine/cons/\n+\tdefault.cc: Likewise.\n+\t* testsuite/26_numerics/random/mersenne_twister_engine/cons/\n+\tseed_seq.cc: Likewise.\n+\t* testsuite/26_numerics/random/linear_congruential_engine/cons/\n+\tseed1.cc: Likewise.\n+\t* testsuite/26_numerics/random/linear_congruential_engine/cons/\n+\tseed2.cc: Likewise.\n+\t* testsuite/26_numerics/random/linear_congruential_engine/cons/\n+\tseed_seq.cc: Likewise.\n+\t* testsuite/26_numerics/random/shuffle_order_engine/cons/base_move.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/shuffle_order_engine/cons/seed1.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/shuffle_order_engine/cons/seed2.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/shuffle_order_engine/cons/base_copy.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/shuffle_order_engine/cons/default.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/shuffle_order_engine/cons/seed_seq.cc:\n+\tLikewise.\n+\n 2010-02-16  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/bits/unique_ptr.h: (unique_ptr<>::"}, {"sha": "648185dfe0f3db069fd7f4676b6ccbaf40c2df13", "filename": "libstdc++-v3/include/bits/random.h", "status": "modified", "additions": 36, "deletions": 39, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -188,11 +188,12 @@ namespace std\n        *\n        * @param __q the seed sequence.\n        */\n-      template<typename _Sseq, typename\n-\t       = typename std::enable_if<std::is_class<_Sseq>::value>::type>\n+      template<typename _Sseq, typename = typename\n+\tstd::enable_if<!std::is_same<_Sseq, linear_congruential_engine>::value>\n+\t       ::type>\n         explicit\n         linear_congruential_engine(_Sseq& __q)\n-        { seed<_Sseq>(__q); }\n+        { seed(__q); }\n \n       /**\n        * @brief Reseeds the %linear_congruential_engine random number generator\n@@ -210,9 +211,8 @@ namespace std\n        *\n        * @param __q the seed sequence.\n        */\n-      template<typename _Sseq, typename\n-\t       = typename std::enable_if<std::is_class<_Sseq>::value>::type>\n-        void\n+      template<typename _Sseq>\n+        typename std::enable_if<std::is_class<_Sseq>::value>::type\n         seed(_Sseq& __q);\n \n       /**\n@@ -403,18 +403,18 @@ namespace std\n        *\n        * @param __q the seed sequence.\n        */\n-      template<typename _Sseq, typename\n-\t       = typename std::enable_if<std::is_class<_Sseq>::value>::type>\n+      template<typename _Sseq, typename = typename\n+        std::enable_if<!std::is_same<_Sseq, mersenne_twister_engine>::value>\n+\t       ::type>\n         explicit\n         mersenne_twister_engine(_Sseq& __q)\n-        { seed<_Sseq>(__q); }\n+        { seed(__q); }\n \n       void\n       seed(result_type __sd = default_seed);\n \n-      template<typename _Sseq, typename\n-\t       = typename std::enable_if<std::is_class<_Sseq>::value>::type>\n-        void\n+      template<typename _Sseq>\n+\ttypename std::enable_if<std::is_class<_Sseq>::value>::type\n         seed(_Sseq& __q);\n \n       /**\n@@ -576,11 +576,12 @@ namespace std\n        *\n        * @param __q the seed sequence.\n        */\n-      template<typename _Sseq, typename\n-\t       = typename std::enable_if<std::is_class<_Sseq>::value>::type>\n+      template<typename _Sseq, typename = typename\n+        std::enable_if<!std::is_same<_Sseq, subtract_with_carry_engine>::value>\n+\t       ::type>\n         explicit\n         subtract_with_carry_engine(_Sseq& __q)\n-        { seed<_Sseq>(__q); }\n+        { seed(__q); }\n \n       /**\n        * @brief Seeds the initial state @f$x_0@f$ of the random number\n@@ -601,9 +602,8 @@ namespace std\n        * @brief Seeds the initial state @f$x_0@f$ of the\n        * % subtract_with_carry_engine random number generator.\n        */\n-      template<typename _Sseq, typename\n-\t       = typename std::enable_if<std::is_class<_Sseq>::value>::type>\n-        void\n+      template<typename _Sseq>\n+\ttypename std::enable_if<std::is_class<_Sseq>::value>::type\n         seed(_Sseq& __q);\n \n       /**\n@@ -767,10 +767,10 @@ namespace std\n        *\n        * @param __q A seed sequence.\n        */\n-      template<typename _Sseq, typename\n-        = typename std::enable_if<std::is_class<_Sseq>::value\n-\t\t\t\t  && !std::is_same<_Sseq, _RandomNumberEngine>\n-\t\t\t\t  ::value>::type>\n+      template<typename _Sseq, typename = typename\n+\tstd::enable_if<!std::is_same<_Sseq, discard_block_engine>::value\n+\t\t       && !std::is_same<_Sseq, _RandomNumberEngine>::value>\n+\t       ::type>\n         explicit\n         discard_block_engine(_Sseq& __q)\n \t: _M_b(__q), _M_n(0)\n@@ -803,12 +803,11 @@ namespace std\n        *        sequence.\n        * @param __q A seed generator function.\n        */\n-      template<typename _Sseq, typename\n-\t       = typename std::enable_if<std::is_class<_Sseq>::value>::type>\n+      template<typename _Sseq>\n         void\n         seed(_Sseq& __q)\n         {\n-\t  _M_b.seed<_Sseq>(__q);\n+\t  _M_b.seed(__q);\n \t  _M_n = 0;\n \t}\n \n@@ -971,10 +970,10 @@ namespace std\n        *\n        * @param __q A seed sequence.\n        */\n-      template<typename _Sseq, typename\n-        = typename std::enable_if<std::is_class<_Sseq>::value\n-\t\t\t\t  && !std::is_same<_Sseq, _RandomNumberEngine>\n-\t\t\t\t  ::value>::type>\n+      template<typename _Sseq, typename = typename\n+\tstd::enable_if<!std::is_same<_Sseq, independent_bits_engine>::value\n+\t\t       && !std::is_same<_Sseq, _RandomNumberEngine>::value>\n+               ::type>\n         explicit\n         independent_bits_engine(_Sseq& __q)\n         : _M_b(__q)\n@@ -1001,11 +1000,10 @@ namespace std\n        *        seed sequence.\n        * @param __q A seed generator function.\n        */\n-      template<typename _Sseq, typename\n-\t       = typename std::enable_if<std::is_class<_Sseq>::value>::type>\n+      template<typename _Sseq>\n         void\n         seed(_Sseq& __q)\n-        { _M_b.seed<_Sseq>(__q); }\n+        { _M_b.seed(__q); }\n \n       /**\n        * @brief Gets a const reference to the underlying generator engine\n@@ -1178,10 +1176,10 @@ namespace std\n        *\n        * @param __q A seed sequence.\n        */\n-      template<typename _Sseq, typename\n-        = typename std::enable_if<std::is_class<_Sseq>::value\n-\t\t\t\t  && !std::is_same<_Sseq, _RandomNumberEngine>\n-\t\t\t\t  ::value>::type>\n+      template<typename _Sseq, typename = typename\n+\tstd::enable_if<!std::is_same<_Sseq, shuffle_order_engine>::value\n+\t\t       && !std::is_same<_Sseq, _RandomNumberEngine>::value>\n+\t       ::type>\n         explicit\n         shuffle_order_engine(_Sseq& __q)\n         : _M_b(__q)\n@@ -1214,12 +1212,11 @@ namespace std\n        *        sequence.\n        * @param __q A seed generator function.\n        */\n-      template<typename _Sseq, typename\n-\t       = typename std::enable_if<std::is_class<_Sseq>::value>::type>\n+      template<typename _Sseq>\n         void\n         seed(_Sseq& __q)\n         {\n-\t  _M_b.seed<_Sseq>(__q);\n+\t  _M_b.seed(__q);\n \t  _M_initialize();\n \t}\n "}, {"sha": "0a39c71e9510b3b00cbf1afd9c6f69e6e65ab536", "filename": "libstdc++-v3/include/bits/random.tcc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -126,8 +126,8 @@ namespace std\n    * Seeds the LCR engine with a value generated by @p __q.\n    */\n   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>\n-    template<typename _Sseq, typename>\n-      void\n+    template<typename _Sseq>\n+      typename std::enable_if<std::is_class<_Sseq>::value>::type\n       linear_congruential_engine<_UIntType, __a, __c, __m>::\n       seed(_Sseq& __q)\n       {\n@@ -344,8 +344,8 @@ namespace std\n \t   _UIntType __a, size_t __u, _UIntType __d, size_t __s,\n \t   _UIntType __b, size_t __t, _UIntType __c, size_t __l,\n \t   _UIntType __f>\n-    template<typename _Sseq, typename>\n-      void\n+    template<typename _Sseq>\n+      typename std::enable_if<std::is_class<_Sseq>::value>::type\n       mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,\n \t\t\t      __s, __b, __t, __c, __l, __f>::\n       seed(_Sseq& __q)\n@@ -531,8 +531,8 @@ namespace std\n     }\n \n   template<typename _UIntType, size_t __w, size_t __s, size_t __r>\n-    template<typename _Sseq, typename>\n-      void\n+    template<typename _Sseq>\n+      typename std::enable_if<std::is_class<_Sseq>::value>::type\n       subtract_with_carry_engine<_UIntType, __w, __s, __r>::\n       seed(_Sseq& __q)\n       {"}, {"sha": "ded2205b125c95a07669229249891319d44e6c8c", "filename": "libstdc++-v3/testsuite/26_numerics/random/discard_block_engine/cons/base_copy.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2Fbase_copy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2Fbase_copy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2Fbase_copy.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-12-07  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,17 +20,11 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.4.1 class template discard_block_engine [rand.adapt.disc]\n-// 26.4.2.3 concept RandomNumberEngineAdaptor [rand.concept.adapt]\n-\n #include <random>\n-#include <testsuite_hooks.h>\n \n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::subtract_with_carry_engine<unsigned long, 24, 10, 24>\n     base_engine;\n "}, {"sha": "4f903e53052ad434ecf03d30b6cff3c209328cb1", "filename": "libstdc++-v3/testsuite/26_numerics/random/discard_block_engine/cons/base_move.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2Fbase_move.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2Fbase_move.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2Fbase_move.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-12-07  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,17 +20,11 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.4.1 class template discard_block_engine [rand.adapt.disc]\n-// 26.4.2.3 concept RandomNumberEngineAdaptor [rand.concept.adapt]\n-\n #include <random>\n-#include <testsuite_hooks.h>\n \n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::subtract_with_carry_engine<unsigned long, 24, 10, 24>\n     base_engine;\n "}, {"sha": "d244c769162111a2be491b65872efac20ff89030", "filename": "libstdc++-v3/testsuite/26_numerics/random/discard_block_engine/cons/copy.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2Fcopy.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -0,0 +1,42 @@\n+// { dg-options \"-std=c++0x\" }\n+// { dg-require-cstdint \"\" }\n+//\n+// 2010-02-16  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <random>\n+\n+void\n+test01()\n+{\n+  std::discard_block_engine\n+    <\n+      std::subtract_with_carry_engine<unsigned long, 24, 10, 24>,\n+      389, 24\n+    > e(1);\n+\n+  const auto f(e);\n+  auto g(f);\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "0868f8f4a66190df98becf6b1b2d514e8cdcb439", "filename": "libstdc++-v3/testsuite/26_numerics/random/discard_block_engine/cons/default.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2Fdefault.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-12-07  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,17 +20,11 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.4.1 class template discard_block_engine [rand.adapt.disc]\n-// 26.4.2.3 concept RandomNumberEngineAdaptor [rand.concept.adapt]\n-\n #include <random>\n-#include <testsuite_hooks.h>\n \n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::discard_block_engine\n     <\n       std::subtract_with_carry_engine<unsigned long, 24, 10, 24>,"}, {"sha": "ae9f2b4ce15ae73f6c0eafbc14e5551c0cd8fd23", "filename": "libstdc++-v3/testsuite/26_numerics/random/discard_block_engine/cons/seed1.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2Fseed1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2Fseed1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2Fseed1.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-12-07  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,17 +20,11 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.4.1 class template discard_block_engine [rand.adapt.disc]\n-// 26.4.2.3 concept RandomNumberEngineAdaptor [rand.concept.adapt]\n-\n #include <random>\n-#include <testsuite_hooks.h>\n \n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   unsigned long seed = 2;\n \n   std::discard_block_engine"}, {"sha": "edf40b08c6dffa7cfa094008af1e42350dbf411f", "filename": "libstdc++-v3/testsuite/26_numerics/random/discard_block_engine/cons/seed2.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2Fseed2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2Fseed2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2Fseed2.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-12-07  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,17 +20,11 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.4.1 class template discard_block_engine [rand.adapt.disc]\n-// 26.4.2.3 concept RandomNumberEngineAdaptor [rand.concept.adapt]\n-\n #include <random>\n-#include <testsuite_hooks.h>\n \n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   double seed = 2.0;\n \n   std::discard_block_engine"}, {"sha": "c1f841a463099b65a2ce47157b9808bb2aad89ad", "filename": "libstdc++-v3/testsuite/26_numerics/random/discard_block_engine/cons/seed_seq.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2Fseed_seq.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2Fseed_seq.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2Fseed_seq.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-12-07  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,17 +20,11 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.4.1 class template discard_block_engine [rand.adapt.disc]\n-// 26.4.2.3 concept RandomNumberEngineAdaptor [rand.concept.adapt]\n-\n #include <random>\n-#include <testsuite_hooks.h>\n \n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::seed_seq seq;\n \n   std::discard_block_engine"}, {"sha": "81d5d8f184119d5da010695c6444d6d63db32785", "filename": "libstdc++-v3/testsuite/26_numerics/random/independent_bits_engine/cons/base_copy.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2Fbase_copy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2Fbase_copy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2Fbase_copy.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-12-07  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,17 +20,11 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.4.2 class template independent_bits_engine [rand.adapt.ibits]\n-// 26.4.2.3 concept RandomNumberEngineAdaptor [rand.concept.adapt]\n-\n #include <random>\n-#include <testsuite_hooks.h>\n \n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::subtract_with_carry_engine<uint_fast64_t, 48, 5, 12>\n     base_engine;\n "}, {"sha": "c5747b306d59d89b726d20ae7521bf78c01c1fc7", "filename": "libstdc++-v3/testsuite/26_numerics/random/independent_bits_engine/cons/base_move.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2Fbase_move.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2Fbase_move.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2Fbase_move.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-12-07  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,17 +20,11 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.4.2 class template independent_bits_engine [rand.adapt.ibits]\n-// 26.4.2.3 concept RandomNumberEngineAdaptor [rand.concept.adapt]\n-\n #include <random>\n-#include <testsuite_hooks.h>\n \n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::subtract_with_carry_engine<uint_fast64_t, 48, 5, 12>\n     base_engine;\n "}, {"sha": "1e88b89efe801be4af99381a7b33e573e938ee34", "filename": "libstdc++-v3/testsuite/26_numerics/random/independent_bits_engine/cons/copy.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2Fcopy.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -0,0 +1,43 @@\n+// { dg-options \"-std=c++0x\" }\n+// { dg-require-cstdint \"\" }\n+//\n+// 2010-02-16  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <random>\n+\n+void\n+test01()\n+{\n+  std::independent_bits_engine\n+    <\n+      std::subtract_with_carry_engine<uint_fast64_t, 48, 5, 12>,\n+      48,\n+      uint_fast64_t\n+    > e(1);\n+\n+  const auto f(e);\n+  auto g(f);\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "781e7a9e206df60c97325cec70da4f2de30b5bbd", "filename": "libstdc++-v3/testsuite/26_numerics/random/independent_bits_engine/cons/default.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2Fdefault.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-12-07  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,17 +20,11 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.4.2 class template independent_bits_engine [rand.adapt.ibits]\n-// 26.4.2.3 concept RandomNumberEngineAdaptor [rand.concept.adapt]\n-\n #include <random>\n-#include <testsuite_hooks.h>\n \n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::independent_bits_engine\n     <\n       std::subtract_with_carry_engine<uint_fast64_t, 48, 5, 12>,"}, {"sha": "890045d8692de7817498fdd4139eb28ac0817548", "filename": "libstdc++-v3/testsuite/26_numerics/random/independent_bits_engine/cons/seed1.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2Fseed1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2Fseed1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2Fseed1.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-12-07  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,17 +20,11 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.4.2 class template independent_bits_engine [rand.adapt.ibits]\n-// 26.4.2.3 concept RandomNumberEngineAdaptor [rand.concept.adapt]\n-\n #include <random>\n-#include <testsuite_hooks.h>\n \n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   unsigned long seed = 2;\n \n   std::independent_bits_engine"}, {"sha": "973ddd4dc6a0d622fafa87b3f8658efc1878a553", "filename": "libstdc++-v3/testsuite/26_numerics/random/independent_bits_engine/cons/seed2.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2Fseed2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2Fseed2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2Fseed2.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-12-07  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,17 +20,11 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.4.2 class template independent_bits_engine [rand.adapt.ibits]\n-// 26.4.2.3 concept RandomNumberEngineAdaptor [rand.concept.adapt]\n-\n #include <random>\n-#include <testsuite_hooks.h>\n \n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   double seed = 2.0;\n \n   std::independent_bits_engine"}, {"sha": "dcaed2d75b3bd769cdc1be5db70e9080d765120f", "filename": "libstdc++-v3/testsuite/26_numerics/random/independent_bits_engine/cons/seed_seq.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2Fseed_seq.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2Fseed_seq.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2Fseed_seq.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-12-07  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,17 +20,11 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.4.2 class template independent_bits_engine [rand.adapt.ibits]\n-// 26.4.2.3 concept RandomNumberEngineAdaptor [rand.concept.adapt]\n-\n #include <random>\n-#include <testsuite_hooks.h>\n \n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::seed_seq seq;\n \n   std::independent_bits_engine"}, {"sha": "06360aa0678eaa478eee48cfbe5b118971d768a4", "filename": "libstdc++-v3/testsuite/26_numerics/random/linear_congruential_engine/cons/copy.cc", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Fcons%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Fcons%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Fcons%2Fcopy.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -0,0 +1,38 @@\n+// { dg-options \"-std=c++0x\" }\n+// { dg-require-cstdint \"\" }\n+//\n+// 2010-02-16  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <random>\n+\n+void\n+test01()\n+{\n+  std::linear_congruential_engine<unsigned long, 48271, 0, 2147483647> e(1);\n+\n+  const auto f(e);\n+  auto g(f);  \n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "06d04775b8d80361b4f09bcb9a18aa26c563575b", "filename": "libstdc++-v3/testsuite/26_numerics/random/linear_congruential_engine/cons/seed1.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Fcons%2Fseed1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Fcons%2Fseed1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Fcons%2Fseed1.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-11-24  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,11 +20,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.3.1 class template linear_congruential_engine [rand.eng.lcong]\n-// 26.4.2.2 Concept RandomNumberEngine [rand.concept.eng]\n-\n #include <random>\n-#include <testsuite_hooks.h>\n \n void\n test01()"}, {"sha": "1fa23dff2b08abf4061666ae794e20eba5c69a43", "filename": "libstdc++-v3/testsuite/26_numerics/random/linear_congruential_engine/cons/seed2.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Fcons%2Fseed2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Fcons%2Fseed2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Fcons%2Fseed2.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-11-24  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,11 +20,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.3.1 class template linear_congruential_engine [rand.eng.lcong]\n-// 26.4.2.2 Concept RandomNumberEngine [rand.concept.eng]\n-\n #include <random>\n-#include <testsuite_hooks.h>\n \n void\n test01()"}, {"sha": "d09d838247d8157497b1905ec269cc7e52e68843", "filename": "libstdc++-v3/testsuite/26_numerics/random/linear_congruential_engine/cons/seed_seq.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Fcons%2Fseed_seq.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Fcons%2Fseed_seq.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Fcons%2Fseed_seq.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -20,9 +20,6 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.3.1 class template linear_congruential_engine [rand.eng.lcong]\n-// 26.4.2.2 Concept RandomNumberEngine [rand.concept.eng]\n-\n #include <random>\n \n void"}, {"sha": "3da72cbf5fd7698fe91b8d0e741cb4be9ef346c5", "filename": "libstdc++-v3/testsuite/26_numerics/random/mersenne_twister_engine/cons/copy.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2Fcopy.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -0,0 +1,45 @@\n+// { dg-options \"-std=c++0x\" }\n+// { dg-require-cstdint \"\" }\n+//\n+// 2010-02-16  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <random>\n+\n+void\n+test01()\n+{\n+  typedef unsigned long value_type;\n+\n+  std::mersenne_twister_engine<\n+    value_type, 32, 624, 397, 31,\n+    0x9908b0dful, 11,\n+    0xfffffffful, 7,\n+    0x9d2c5680ul, 15,\n+      0xefc60000ul, 18, 1812433253ul> e(1);\n+\n+  const auto f(e);\n+  auto g(f);\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "be5716080cab7b115c07bc7ab07719465fa635a0", "filename": "libstdc++-v3/testsuite/26_numerics/random/mersenne_twister_engine/cons/default.cc", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2Fdefault.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-11-24  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,9 +20,6 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.3.2 Class template mersenne_twister_engine [rand.eng.mers]\n-// 26.4.2.2 Concept RandomNumberEngine [rand.concept.eng]\n-\n #include <random>\n #include <testsuite_hooks.h>\n "}, {"sha": "cf24ffe13f6073ef55a877aca36a36a82ba2ca32", "filename": "libstdc++-v3/testsuite/26_numerics/random/mersenne_twister_engine/cons/seed1.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2Fseed1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2Fseed1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2Fseed1.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-11-24  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,11 +20,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.3.2 Class template mersenne_twister_engine [rand.eng.mers]\n-// 26.4.2.2 Concept RandomNumberEngine [rand.concept.eng]\n-\n #include <random>\n-#include <testsuite_hooks.h>\n \n void\n test01()"}, {"sha": "425e5be7dca2fc9b02be767d53f711a0b76954ad", "filename": "libstdc++-v3/testsuite/26_numerics/random/mersenne_twister_engine/cons/seed2.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2Fseed2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2Fseed2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2Fseed2.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-11-24  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,11 +20,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.3.2 Class template mersenne_twister_engine [rand.eng.mers]\n-// 26.4.2.2 Concept RandomNumberEngine [rand.concept.eng]\n-\n #include <random>\n-#include <testsuite_hooks.h>\n \n void\n test01()"}, {"sha": "aa98c9b9309c802cdfecab568fdad48bbf0b01e1", "filename": "libstdc++-v3/testsuite/26_numerics/random/mersenne_twister_engine/cons/seed_seq.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2Fseed_seq.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2Fseed_seq.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2Fseed_seq.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -20,9 +20,6 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.3.2 Class template mersenne_twister_engine [rand.eng.mers]\n-// 26.4.2.2 Concept RandomNumberEngine [rand.concept.eng]\n-\n #include <random>\n \n void"}, {"sha": "197f5f0de9ea48e156b03d7f701844fadfb384de", "filename": "libstdc++-v3/testsuite/26_numerics/random/shuffle_order_engine/cons/base_copy.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2Fbase_copy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2Fbase_copy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2Fbase_copy.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-12-07  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,17 +20,11 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.4.3 class template shuffle_order_engine [rand.adapt.shuf]\n-// 26.4.2.3 concept RandomNumberEngineAdaptor [rand.concept.adapt]\n-\n #include <random>\n-#include <testsuite_hooks.h>\n \n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::linear_congruential_engine\n             <uint_fast32_t, 16807UL, 0UL, 2147483647UL> base_engine;\n "}, {"sha": "c05bc19659db27dc905ac17740a285c797e13190", "filename": "libstdc++-v3/testsuite/26_numerics/random/shuffle_order_engine/cons/base_move.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2Fbase_move.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2Fbase_move.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2Fbase_move.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-12-07  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,17 +20,11 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.4.3 class template shuffle_order_engine [rand.adapt.shuf]\n-// 26.4.2.3 concept RandomNumberEngineAdaptor [rand.concept.adapt]\n-\n #include <random>\n-#include <testsuite_hooks.h>\n \n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::linear_congruential_engine\n             <uint_fast32_t, 16807UL, 0UL, 2147483647UL> base_engine;\n "}, {"sha": "c589a4edc8acf477de8123eaad89811124961d6a", "filename": "libstdc++-v3/testsuite/26_numerics/random/shuffle_order_engine/cons/copy.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2Fcopy.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -0,0 +1,42 @@\n+// { dg-options \"-std=c++0x\" }\n+// { dg-require-cstdint \"\" }\n+//\n+// 2010-02-16  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <random>\n+\n+void\n+test01()\n+{\n+  std::shuffle_order_engine\n+    <\n+      std::linear_congruential_engine<uint_fast32_t,16807UL, 0UL, 2147483647UL>,\n+      256\n+    > e(1);\n+\n+  const auto f(e);\n+  auto g(f);\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "15a5c2d8fbdffdfbbdf3d9c9428b45f39c2150c9", "filename": "libstdc++-v3/testsuite/26_numerics/random/shuffle_order_engine/cons/default.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2Fdefault.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-12-07  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,17 +20,11 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.4.3 class template shuffle_order_engine [rand.adapt.shuf]\n-// 26.4.2.3 concept RandomNumberEngineAdaptor [rand.concept.adapt]\n-\n #include <random>\n-#include <testsuite_hooks.h>\n \n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::shuffle_order_engine\n     <\n       std::linear_congruential_engine<uint_fast32_t,16807UL, 0UL, 2147483647UL>,"}, {"sha": "b39d45a396a001a66a683b6bc585b2504214460a", "filename": "libstdc++-v3/testsuite/26_numerics/random/shuffle_order_engine/cons/seed1.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2Fseed1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2Fseed1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2Fseed1.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-12-07  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,17 +20,11 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.4.3 class template shuffle_order_engine [rand.adapt.shuf]\n-// 26.4.2.3 concept RandomNumberEngineAdaptor [rand.concept.adapt]\n-\n #include <random>\n-#include <testsuite_hooks.h>\n \n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   unsigned long seed = 2;\n \n   std::shuffle_order_engine"}, {"sha": "c979e32b87176837edd1b65edb9c34f000e28cb2", "filename": "libstdc++-v3/testsuite/26_numerics/random/shuffle_order_engine/cons/seed2.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2Fseed2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2Fseed2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2Fseed2.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-12-07  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,17 +20,11 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.4.3 class template shuffle_order_engine [rand.adapt.shuf]\n-// 26.4.2.3 concept RandomNumberEngineAdaptor [rand.concept.adapt]\n-\n #include <random>\n-#include <testsuite_hooks.h>\n \n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   double seed = 2.0;\n \n   std::shuffle_order_engine"}, {"sha": "01ea91f1e8ecb03ae38c48953c439159949a91ff", "filename": "libstdc++-v3/testsuite/26_numerics/random/shuffle_order_engine/cons/seed_seq.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2Fseed_seq.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2Fseed_seq.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2Fseed_seq.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-12-07  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,17 +20,11 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.4.3 class template shuffle_order_engine [rand.adapt.shuf]\n-// 26.4.2.3 concept RandomNumberEngineAdaptor [rand.concept.adapt]\n-\n #include <random>\n-#include <testsuite_hooks.h>\n \n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::seed_seq seq;\n \n   std::shuffle_order_engine"}, {"sha": "21df0a07e3c69ea8962485db9db33450e51dedb4", "filename": "libstdc++-v3/testsuite/26_numerics/random/subtract_with_carry_engine/cons/copy.cc", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2Fcopy.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -0,0 +1,38 @@\n+// { dg-options \"-std=c++0x\" }\n+// { dg-require-cstdint \"\" }\n+//\n+// 2010-02-16  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <random>\n+\n+void\n+test01()\n+{\n+  std::subtract_with_carry_engine<unsigned long, 24, 10, 24> e(1);\n+\n+  const auto f(e);\n+  auto g(f);\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "1297747a536a59587876be3fd25fa0eb4c731c1d", "filename": "libstdc++-v3/testsuite/26_numerics/random/subtract_with_carry_engine/cons/default.cc", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2Fdefault.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-11-24  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,9 +20,6 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.3.3 Class template subtract_with_carry_engine [rand.eng.sub]\n-// 26.4.2.2 Concept RandomNumberEngine [rand.concept.eng]\n-\n #include <random>\n #include <testsuite_hooks.h>\n "}, {"sha": "95db25f4dd85897759d55471906c88a6165d33d7", "filename": "libstdc++-v3/testsuite/26_numerics/random/subtract_with_carry_engine/cons/seed1.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2Fseed1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2Fseed1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2Fseed1.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-11-24  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -24,7 +24,6 @@\n // 26.4.2.2 Concept RandomNumberEngine [rand.concept.eng]\n \n #include <random>\n-#include <testsuite_hooks.h>\n \n void\n test01()"}, {"sha": "73f9cbe0fffc4ff99c69bbeb1fef7112f82b6f57", "filename": "libstdc++-v3/testsuite/26_numerics/random/subtract_with_carry_engine/cons/seed2.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2Fseed2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2Fseed2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2Fseed2.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -3,7 +3,7 @@\n //\n // 2008-11-24  Edward M. Smith-Rowland <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -24,7 +24,6 @@\n // 26.4.2.2 Concept RandomNumberEngine [rand.concept.eng]\n \n #include <random>\n-#include <testsuite_hooks.h>\n \n void\n test01()"}, {"sha": "3fc9991d7fe275f78a68d95bf6cd65206f3a745e", "filename": "libstdc++-v3/testsuite/26_numerics/random/subtract_with_carry_engine/cons/seed_seq.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2Fseed_seq.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05eeebfe49ec779a71f1b7d639d07ecb895f3dbf/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2Fseed_seq.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2Fseed_seq.cc?ref=05eeebfe49ec779a71f1b7d639d07ecb895f3dbf", "patch": "@@ -20,9 +20,6 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// 26.4.3.3 Class template subtract_with_carry_engine [rand.eng.sub]\n-// 26.4.2.2 Concept RandomNumberEngine [rand.concept.eng]\n-\n #include <random>\n \n void"}]}