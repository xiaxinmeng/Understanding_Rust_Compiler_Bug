{"sha": "15f0523424fcb7eac1c6219947f74d843714aea8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVmMDUyMzQyNGZjYjdlYWMxYzYyMTk5NDdmNzRkODQzNzE0YWVhOA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2019-07-01T18:39:52Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-07-01T18:39:52Z"}, "message": "rs6000.md (eh_set_lr_<mode>): Make this a parameterized name.\n\n@eh_set_lr_<mode>\n\n\n\t* config/rs6000/rs6000.md (eh_set_lr_<mode>): Make this a parameterized\n\tname.\n\t(eh_return): Use that name.  Simplify.\n\nFrom-SVN: r272900", "tree": {"sha": "885903596cd76d0afe3d98adb9e53f1dc2fcc013", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/885903596cd76d0afe3d98adb9e53f1dc2fcc013"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15f0523424fcb7eac1c6219947f74d843714aea8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15f0523424fcb7eac1c6219947f74d843714aea8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15f0523424fcb7eac1c6219947f74d843714aea8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15f0523424fcb7eac1c6219947f74d843714aea8/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f98342adf9330522067172f2d9da5b82278d9a70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f98342adf9330522067172f2d9da5b82278d9a70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f98342adf9330522067172f2d9da5b82278d9a70"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "63af1c86f89e8aff7de2a572480b22fcdda9a7b8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15f0523424fcb7eac1c6219947f74d843714aea8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15f0523424fcb7eac1c6219947f74d843714aea8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=15f0523424fcb7eac1c6219947f74d843714aea8", "patch": "@@ -1,3 +1,9 @@\n+2019-07-01  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (eh_set_lr_<mode>): Make this a parameterized\n+\tname.\n+\t(eh_return): Use that name.  Simplify.\n+\n 2019-07-01  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md (ctr<mode>): Make this a parameterized name."}, {"sha": "6470d95f1918176cf396a26b9cee428515c5e150", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15f0523424fcb7eac1c6219947f74d843714aea8/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15f0523424fcb7eac1c6219947f74d843714aea8/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=15f0523424fcb7eac1c6219947f74d843714aea8", "patch": "@@ -13190,15 +13190,12 @@\n   [(use (match_operand 0 \"general_operand\"))]\n   \"\"\n {\n-  if (TARGET_32BIT)\n-    emit_insn (gen_eh_set_lr_si (operands[0]));\n-  else\n-    emit_insn (gen_eh_set_lr_di (operands[0]));\n+  emit_insn (gen_eh_set_lr (Pmode, operands[0]));\n   DONE;\n })\n \n ; We can't expand this before we know where the link register is stored.\n-(define_insn_and_split \"eh_set_lr_<mode>\"\n+(define_insn_and_split \"@eh_set_lr_<mode>\"\n   [(unspec_volatile [(match_operand:P 0 \"register_operand\" \"r\")] UNSPECV_EH_RR)\n    (clobber (match_scratch:P 1 \"=&b\"))]\n   \"\""}]}