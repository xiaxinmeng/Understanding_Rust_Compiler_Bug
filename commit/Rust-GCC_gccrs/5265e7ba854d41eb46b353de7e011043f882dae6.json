{"sha": "5265e7ba854d41eb46b353de7e011043f882dae6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI2NWU3YmE4NTRkNDFlYjQ2YjM1M2RlN2UwMTEwNDNmODgyZGFlNg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-06-26T16:50:19Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-06-26T16:50:19Z"}, "message": "hash-map.h (hash_map::traverse): Use the definition of the Key typedef rather than the typedef itself.\n\ngcc/\n\t* hash-map.h (hash_map::traverse): Use the definition of the\n\tKey typedef rather than the typedef itself.\n\nFrom-SVN: r225021", "tree": {"sha": "f426c28505b01f663bce8b306854f819549bd41e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f426c28505b01f663bce8b306854f819549bd41e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5265e7ba854d41eb46b353de7e011043f882dae6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5265e7ba854d41eb46b353de7e011043f882dae6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5265e7ba854d41eb46b353de7e011043f882dae6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5265e7ba854d41eb46b353de7e011043f882dae6/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1218f76f22135757dee9f062fdec04b57b3ce6bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1218f76f22135757dee9f062fdec04b57b3ce6bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1218f76f22135757dee9f062fdec04b57b3ce6bb"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "6f54c22927a9cd585ec66234c3910839ca087a90", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5265e7ba854d41eb46b353de7e011043f882dae6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5265e7ba854d41eb46b353de7e011043f882dae6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5265e7ba854d41eb46b353de7e011043f882dae6", "patch": "@@ -1,3 +1,8 @@\n+2015-06-26  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* hash-map.h (hash_map::traverse): Use the definition of the\n+\tKey typedef rather than the typedef itself.\n+\n 2015-06-26  Martin Jambor  <mjambor@suse.cz>\n \n \tPR debug/66301"}, {"sha": "59794eb10428abdfa81cc80144e9251bda635c6e", "filename": "gcc/hash-map.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5265e7ba854d41eb46b353de7e011043f882dae6/gcc%2Fhash-map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5265e7ba854d41eb46b353de7e011043f882dae6/gcc%2Fhash-map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash-map.h?ref=5265e7ba854d41eb46b353de7e011043f882dae6", "patch": "@@ -169,15 +169,17 @@ class GTY((user)) hash_map\n   /* Call the call back on each pair of key and value with the passed in\n      arg.  */\n \n-  template<typename Arg, bool (*f)(const Key &, const Value &, Arg)>\n+  template<typename Arg, bool (*f)(const typename Traits::key_type &,\n+\t\t\t\t   const Value &, Arg)>\n   void traverse (Arg a) const\n     {\n       for (typename hash_table<hash_entry>::iterator iter = m_table.begin ();\n \t   iter != m_table.end (); ++iter)\n \tf ((*iter).m_key, (*iter).m_value, a);\n     }\n \n-  template<typename Arg, bool (*f)(const Key &, Value *, Arg)>\n+  template<typename Arg, bool (*f)(const typename Traits::key_type &,\n+\t\t\t\t   Value *, Arg)>\n   void traverse (Arg a) const\n     {\n       for (typename hash_table<hash_entry>::iterator iter = m_table.begin ();"}]}