{"sha": "a132dad65cb865aba22f2fae83a357977a19452f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTEzMmRhZDY1Y2I4NjVhYmEyMmYyZmFlODNhMzU3OTc3YTE5NDUyZg==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2005-08-19T09:20:31Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2005-08-19T09:20:31Z"}, "message": "re PR target/23436 (Insn does not satisfy its constraints (reload_cse_simplify_operands))\n\n\tPR target/23436\n\t* arm.c (thumb_legitimize_reload_address): New function.\n\t* arm-protos.h (thumb_legitimize_reload_address): Add prototype.\n\t* arm.h (THUMB_LEGITIMIZE_RELOAD_ADDRESS): Call it.\n\nFrom-SVN: r103273", "tree": {"sha": "1deaece4e80d19b36f21964548d94d696f9f88c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1deaece4e80d19b36f21964548d94d696f9f88c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a132dad65cb865aba22f2fae83a357977a19452f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a132dad65cb865aba22f2fae83a357977a19452f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a132dad65cb865aba22f2fae83a357977a19452f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a132dad65cb865aba22f2fae83a357977a19452f/comments", "author": null, "committer": null, "parents": [{"sha": "156afe1308665239eb583eb9d65a5eaad8c35d8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/156afe1308665239eb583eb9d65a5eaad8c35d8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/156afe1308665239eb583eb9d65a5eaad8c35d8b"}], "stats": {"total": 78, "additions": 61, "deletions": 17}, "files": [{"sha": "991beeed8563de135556dcb5c3335fc85566fbcb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a132dad65cb865aba22f2fae83a357977a19452f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a132dad65cb865aba22f2fae83a357977a19452f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a132dad65cb865aba22f2fae83a357977a19452f", "patch": "@@ -1,3 +1,10 @@\n+2005-08-19  Richard Earnshaw  <richard.earnshaw@arm.com>\n+\n+\tPR target/23436\n+\t* arm.c (thumb_legitimize_reload_address): New function.\n+\t* arm-protos.h (thumb_legitimize_reload_address): Add prototype.\n+\t* arm.h (THUMB_LEGITIMIZE_RELOAD_ADDRESS): Call it.\n+\n 2005-08-19  Paul Woegerer  <paul.woegerer@nsc.com>\n \n \t* config/crx/crx.c: Implement crx_decompose_address. Reject"}, {"sha": "cb34f3bb1018f0d295ff07c424b2f43cfdc449cb", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a132dad65cb865aba22f2fae83a357977a19452f/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a132dad65cb865aba22f2fae83a357977a19452f/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=a132dad65cb865aba22f2fae83a357977a19452f", "patch": "@@ -61,6 +61,8 @@ extern int thumb_legitimate_address_p (enum machine_mode, rtx, int);\n extern int thumb_legitimate_offset_p (enum machine_mode, HOST_WIDE_INT);\n extern rtx arm_legitimize_address (rtx, rtx, enum machine_mode);\n extern rtx thumb_legitimize_address (rtx, rtx, enum machine_mode);\n+extern rtx thumb_legitimize_reload_address (rtx *, enum machine_mode, int, int,\n+\t\t\t\t\t    int);\n extern int arm_const_double_rtx (rtx);\n extern int neg_const_double_rtx_ok_for_fpa (rtx);\n extern enum reg_class vfp_secondary_reload_class (enum machine_mode, rtx);"}, {"sha": "9534a914f3c852c0186d490f16a32baa730244ce", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a132dad65cb865aba22f2fae83a357977a19452f/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a132dad65cb865aba22f2fae83a357977a19452f/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=a132dad65cb865aba22f2fae83a357977a19452f", "patch": "@@ -3839,6 +3839,49 @@ thumb_legitimize_address (rtx x, rtx orig_x, enum machine_mode mode)\n   return x;\n }\n \n+rtx\n+thumb_legitimize_reload_address(rtx *x_p,\n+\t\t\t\tenum machine_mode mode,\n+\t\t\t\tint opnum, int type,\n+\t\t\t\tint ind_levels ATTRIBUTE_UNUSED)\n+{\n+  rtx x = *x_p;\n+  \n+  if (GET_CODE (x) == PLUS\n+      && GET_MODE_SIZE (mode) < 4\n+      && REG_P (XEXP (x, 0))\n+      && XEXP (x, 0) == stack_pointer_rtx\n+      && GET_CODE (XEXP (x, 1)) == CONST_INT\n+      && !thumb_legitimate_offset_p (mode, INTVAL (XEXP (x, 1))))\n+    {\n+      rtx orig_x = x;\n+\n+      x = copy_rtx (x);\n+      push_reload (orig_x, NULL_RTX, x_p, NULL, MODE_BASE_REG_CLASS (mode),\n+\t\t   Pmode, VOIDmode, 0, 0, opnum, type);\n+      return x;\n+    }\n+\n+  /* If both registers are hi-regs, then it's better to reload the\n+     entire expression rather than each register individually.  That\n+     only requires one reload register rather than two.  */\n+  if (GET_CODE (x) == PLUS\n+      && REG_P (XEXP (x, 0))\n+      && REG_P (XEXP (x, 1))\n+      && !REG_MODE_OK_FOR_REG_BASE_P (XEXP (x, 0), mode)\n+      && !REG_MODE_OK_FOR_REG_BASE_P (XEXP (x, 1), mode))\n+    {\n+      rtx orig_x = x;\n+\n+      x = copy_rtx (x);\n+      push_reload (orig_x, NULL_RTX, x_p, NULL, MODE_BASE_REG_CLASS (mode),\n+\t\t   Pmode, VOIDmode, 0, 0, opnum, type);\n+      return x;\n+    }\n+\n+  return NULL;\n+}\n+\n \f\n \n #define REG_OR_SUBREG_REG(X)\t\t\t\t\t\t\\"}, {"sha": "a434d4f6f55a61e39ca29390c897da33cc9184b0", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 9, "deletions": 17, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a132dad65cb865aba22f2fae83a357977a19452f/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a132dad65cb865aba22f2fae83a357977a19452f/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=a132dad65cb865aba22f2fae83a357977a19452f", "patch": "@@ -1282,23 +1282,15 @@ enum reg_class\n /* We could probably achieve better results by defining PROMOTE_MODE to help\n    cope with the variances between the Thumb's signed and unsigned byte and\n    halfword load instructions.  */\n-#define THUMB_LEGITIMIZE_RELOAD_ADDRESS(X, MODE, OPNUM, TYPE, IND_LEVELS, WIN)\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (GET_CODE (X) == PLUS\t\t\t\t\t\t\\\n-      && GET_MODE_SIZE (MODE) < 4\t\t\t\t\t\\\n-      && GET_CODE (XEXP (X, 0)) == REG\t\t\t\t\t\\\n-      && XEXP (X, 0) == stack_pointer_rtx\t\t\t\t\\\n-      && GET_CODE (XEXP (X, 1)) == CONST_INT\t\t\t\t\\\n-      && ! thumb_legitimate_offset_p (MODE, INTVAL (XEXP (X, 1))))\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      rtx orig_X = X;\t\t\t\t\t\t\t\\\n-      X = copy_rtx (X);\t\t\t\t\t\t\t\\\n-      push_reload (orig_X, NULL_RTX, &X, NULL,\t\t\t\t\\\n-\t\t   MODE_BASE_REG_CLASS (MODE),\t\t\t\t\\\n-\t\t   Pmode, VOIDmode, 0, 0, OPNUM, TYPE);\t\t\t\\\n-      goto WIN;\t\t\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-}\n+#define THUMB_LEGITIMIZE_RELOAD_ADDRESS(X, MODE, OPNUM, TYPE, IND_L, WIN)     \\\n+do {\t\t\t\t\t\t\t\t\t      \\\n+  rtx new_x = thumb_legitimize_reload_address (&X, MODE, OPNUM, TYPE, IND_L); \\\n+  if (new_x)\t\t\t\t\t\t\t\t      \\\n+    {\t\t\t\t\t\t\t\t\t      \\\n+      X = new_x;\t\t\t\t\t\t\t      \\\n+      goto WIN;\t\t\t\t\t\t\t\t      \\\n+    }\t\t\t\t\t\t\t\t\t      \\\n+} while (0)\n \n #define LEGITIMIZE_RELOAD_ADDRESS(X, MODE, OPNUM, TYPE, IND_LEVELS, WIN)   \\\n   if (TARGET_ARM)\t\t\t\t\t\t\t   \\"}]}