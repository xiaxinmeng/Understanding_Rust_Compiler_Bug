{"sha": "5483085748cbc51b965464e81aa81a818894327c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ4MzA4NTc0OGNiYzUxYjk2NTQ2NGU4MWFhODFhODE4ODk0MzI3Yw==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-03-04T22:46:30Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-03-04T22:46:30Z"}, "message": "Remove a Cygnus FSF difference, so the tree will build.\n\nFrom-SVN: r11420", "tree": {"sha": "c65371c95df9b91a6372735412c98a98f743a34f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c65371c95df9b91a6372735412c98a98f743a34f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5483085748cbc51b965464e81aa81a818894327c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5483085748cbc51b965464e81aa81a818894327c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5483085748cbc51b965464e81aa81a818894327c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5483085748cbc51b965464e81aa81a818894327c/comments", "author": null, "committer": null, "parents": [{"sha": "c1e8e6bd23a05d7508d5669b386b625ca957a508", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1e8e6bd23a05d7508d5669b386b625ca957a508", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1e8e6bd23a05d7508d5669b386b625ca957a508"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "31f86139d42d9dd212b1b6f4376fe5a38fad082c", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5483085748cbc51b965464e81aa81a818894327c/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5483085748cbc51b965464e81aa81a818894327c/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=5483085748cbc51b965464e81aa81a818894327c", "patch": "@@ -7424,10 +7424,8 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, raises, attrli\n   int funcdef_flag = 0;\n   enum tree_code innermost_code = ERROR_MARK;\n   int bitfield = 0;\n-#if 0\n-  /* See the code below that used this.  */\n   tree decl_machine_attr = NULL_TREE;\n-#endif\n+\n   /* Set this to error_mark_node for FIELD_DECLs we could not handle properly.\n      All FIELD_DECLs we build here have `init' put into their DECL_INITIAL.  */\n   tree init = NULL_TREE;\n@@ -7828,10 +7826,7 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, raises, attrli\n \t  else\n \t    {\n \t      type = TREE_TYPE (t);\n-#if 0\n-\t      /* See the code below that used this.  */\n \t      decl_machine_attr = DECL_MACHINE_ATTRIBUTES (id);\n-#endif\n \t      typedef_decl = t;\n \t    }\n \t}\n@@ -9277,9 +9272,11 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, raises, attrli\n \t\t       || ! (funcdef_flag < 0 || inlinep));\n \t    decl = grokfndecl (ctype, type, declarator,\n \t\t\t       virtualp, flags, quals, raises, attrlist,\n-\t\t\t       friendp ? -1 : 0, publicp, inlinep);\n+\t\t\t       friendp ? -1 : 0, publicp, inlinep,\n+\t\t\t       funcdef_flag);\n \t    if (decl == NULL_TREE)\n \t      return NULL_TREE;\n+\n \t    decl = build_decl_attribute_variant (decl, decl_machine_attr);\n \n \t    if (explicitp == 2)"}]}