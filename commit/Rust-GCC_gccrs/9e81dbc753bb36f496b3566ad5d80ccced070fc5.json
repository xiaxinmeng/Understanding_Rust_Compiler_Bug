{"sha": "9e81dbc753bb36f496b3566ad5d80ccced070fc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU4MWRiYzc1M2JiMzZmNDk2YjM1NjZhZDVkODBjY2NlZDA3MGZjNQ==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2008-10-01T08:33:54Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2008-10-01T08:33:54Z"}, "message": "system-linux-ppc64.ads: New file.\n\n* system-linux-ppc64.ads: New file.\n* gcc-interface/Makefile.in: Add multilib handling for\npowerpc-linux.\n\nFrom-SVN: r140808", "tree": {"sha": "32b4ff2ba1479c3c192f032378df444dd34ec15c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32b4ff2ba1479c3c192f032378df444dd34ec15c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e81dbc753bb36f496b3566ad5d80ccced070fc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e81dbc753bb36f496b3566ad5d80ccced070fc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e81dbc753bb36f496b3566ad5d80ccced070fc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e81dbc753bb36f496b3566ad5d80ccced070fc5/comments", "author": null, "committer": null, "parents": [{"sha": "7ec594452610102891d3a8e01c6b4b2440adffd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ec594452610102891d3a8e01c6b4b2440adffd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ec594452610102891d3a8e01c6b4b2440adffd6"}], "stats": {"total": 1028, "additions": 601, "deletions": 427}, "files": [{"sha": "7d06122ccaa2aeeb829642c61578431222184020", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 431, "deletions": 425, "changes": 856, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e81dbc753bb36f496b3566ad5d80ccced070fc5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e81dbc753bb36f496b3566ad5d80ccced070fc5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9e81dbc753bb36f496b3566ad5d80ccced070fc5", "patch": "@@ -1,3 +1,9 @@\n+2008-10-01  Andreas Schwab  <schwab@suse.de>\n+\n+\t* system-linux-ppc64.ads: New file.\n+\t* gcc-interface/Makefile.in: Add multilib handling for\n+\tpowerpc-linux.\n+\n 2008-09-26  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* decl.c (gnat_to_gnu_entity) <object>: Cap the alignment promotion\n@@ -22,11 +28,11 @@\n \n 2008-09-21  Laurent Guerby  <laurent@guerby.net>\n \n-        PR ada/5911\n+\tPR ada/5911\n \t* gcc-interface/Makefile.in: Add multilib handling for x86_64\n \tand sparc.\n \t* system-linux-sparcv9.ads: New file.\n-\t\n+\n 2008-09-20  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* exp_dbug.ads: Document new convention for the XVZ variable.\n@@ -601,7 +607,7 @@\n 2008-08-20  Robert Dewar  <dewar@adacore.com>\n \n \t* freeze.adb (Freeze_Record_Type): Improve msg for non-contiguous field\n-\t\n+\n \t* sem_ch13.adb:\n \t(Adjust_Record_For_Reverse_Bit_Order): Messages about layout are\n \tnow labeled as info msgs, not warnings.\n@@ -657,7 +663,7 @@\n \tand full views are available for the context type.\n \n 2008-08-18  Samuel Tardieu  <sam@rfc1149.net>\n-            Robert Dewar  <dewar@adacore.com>\n+\t    Robert Dewar  <dewar@adacore.com>\n \n \tPR ada/30827\n \t* bindgen.adb (Gen_Output_File_Ada): Zero-terminate the\n@@ -726,7 +732,7 @@\n \t* gcc-interface/Make-lang.in: Include CFLAGS_FOR_TARGET when cross.\n \n 2008-08-10  Samuel Tardieu  <sam@rfc1149.net>\n-            Robert Dewar <dewar@adacore.com>\n+\t    Robert Dewar <dewar@adacore.com>\n \n \t* exp_ch4.adb (Expand_N_Op_Expon): Force evaluation of\n \tleft argument even when right argument is 0.\n@@ -738,7 +744,7 @@\n \n \t* gcc-interface/misc.c (gnat_handle_option): Replace set_Wunused\n \tby warn_unused.\n-\t\n+\n 2008-08-08  Ed Schonberg  <schonberg@adacore.com>\n \n \t* freeze.adb (Generate_Prim_Op_References): New procedure, abstracted\n@@ -788,7 +794,7 @@\n \tbegining of the command line.\n \t(Append, Add): Renaming of Append to Add as this now allows addition\n \tat the begining of the list.\n-\t\n+\n \t* g-comlin.ads (Add_Switch): Handle addition of switches at the\n \tbegining of the command line.\n \n@@ -1012,7 +1018,7 @@\n \n \t* freeze.adb:\n \t(Freeze_Entity): A deferred constant does not violate the restriction\n-\tNo_Default_Initialization, \n+\tNo_Default_Initialization,\n \n \t* sem_ch3.adb (Process_Subtype): An allocator is a valid construct that\n \tcan carry a null exclusion indicator, and on which an error may be\n@@ -1070,7 +1076,7 @@\n \n \t* a-wtdeio.adb (Put (Current_Output)): Use Fore in the call to Put\n \t(File).\n-\t\n+\n \t* a-ztdeio.adb: Ditto.\n \n 2008-08-05  Pascal Obry  <obry@adacore.com>\n@@ -1084,7 +1090,7 @@\n \t(Wide_String_To_String): Returns a String with the same 'First as its\n \tparameter S.\n \t(Wide_Wide_String_To_String): Ditto\n-\t\n+\n \t* s-wchwts.ads:\n \t(Wide_String_To_String): Document that the lowest index of the returned\n \tString is equal to S'First.\n@@ -1099,16 +1105,16 @@\n 2008-08-05  Robert Dewar  <dewar@adacore.com>\n \n \t* opt.ads (Warn_On_Biased_Representation): New flag\n-\t\n+\n \t* sem_ch13.adb:\n \t(Analyze_Attribute_Definition_Clause): Issue warning when biased\n \trepresentation is required.\n \t(Minimum_Size): Don't allow biasing if enum rep clause case\n-\t\n+\n \t* sem_warn.adb:\n \t(Set_Dot_Warning_Switch): Add handling of -gnatw.b/B switches\n \t(Set_Warning_Switch): Include -gnatw.b in -gnatwa, -gnatw.B in gnatws\n-\t\n+\n \t* usage.adb: Add lines for -gnatw.b/B switches\n \n 2008-08-05  Pascal Obry  <obry@adacore.com>\n@@ -1200,7 +1206,7 @@\n \t* prj-attr.ads:\n \t(Others_Allowed_For): New Boolean function\n \t(Attribute_Record): New Boolean component Others_Allowed\n-\t\n+\n \t* prj-dect.adb:\n \t(Parse_Attribute_Declaration): For associative array attribute where\n \tothers is allowed as the index, allow others as an index.\n@@ -1273,7 +1279,7 @@\n \tstring.\n \t(Start): Sort the switches by sections before iterating the command line\n \telements.\n-\t\n+\n \t* g-comlin.ads (Define_Section, Add_Switch, Remove_Switch,\n \tIs_New_Section, Current_Section): New methods or methods modified to\n \thandle building command lines with sections.\n@@ -1515,28 +1521,28 @@\n \t* gprep.adb (Process_One_File): Call Prep.Preprocess with a Boolean\n \tvariable, but don't check the resulting value as it has no impact on\n \tthe processing.\n-\t\n+\n \t* opt.ads:\n \t(Generate_Processed_File): New Boolean flag, set to True in the compiler\n \twhen switch -gnateG is used.\n-\t\n+\n \t* prep.adb:\n \t(Preprocess): new Boolean out parameter Source_Modified. Set it to True\n \twhen the source is modified by the preprocessor and there is no\n \tpreprocessing errors.\n-\t\n+\n \t* prep.ads (Preprocess): new Boolean out parameter Source_Modified\n-\t\n+\n \t* sinput-l.adb:\n \t(Load_File): Output the result of preprocessing if the source text was\n \tmodified.\n-\t\n+\n \t* switch-c.adb (Scan_Front_End_Switches): Recognize switch -gnateG\n-\t\n+\n \t* switch-m.adb (Normalize_Compiler_Switches): Normalize switch -gnateG\n-\t\n+\n \t* ug_words: Add VMS equivalent for -gnateG\n-\t\n+\n \t* vms_data.ads:\n \tAdd VMS option /GENERATE_PROCESSED_SOURCE, equivalent to switch -gnateG\n \n@@ -1561,9 +1567,9 @@\n 2008-08-04  Vincent Celier  <celier@adacore.com>\n \n \t* prj-attr.adb: New Builder attribute Global_Compilation_Switches\n-\t\n+\n \t* snames.adb: New standard name Global_Compilation_Switches\n-\t\n+\n \t* snames.ads: New standard name Global_Compilation_Switches\n \n \t* make.adb: Correct spelling error in comment\n@@ -1639,13 +1645,13 @@\n 2008-08-01  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* rtsfind.ads: Add block IO versions of stream routines for Strings.\n-\t\n+\n \t* bindgen.adb, gnat_rm.texi, gnat_ugn.texi, opt.ads,\n \tsem_prag.adb, snames.adb, snames.ads, snames.h,\n \tpar-prag.adb: Undo previous stream related changes.\n-\t\n+\n \t* s-rident.ads: Add new restriction No_Stream_Optimizations.\n-\t\n+\n \t* s-ststop.ads, s-ststop.adb: Comment reformatting.\n \tDefine enumeration type to designate different IO mechanisms.\n \tEnchance generic package Stream_Ops_Internal to include an\n@@ -1657,7 +1663,7 @@\n \tOtherwise use the corresponding block IO version.\n \n 2008-08-01  Olivier Hainque  <hainque@adacore.com>\n-\t\n+\n \t* gcc-interface/decl.c (gnat_to_gnu_entity) <case E_Function>: Do not\n \tturn Ada Pure into GCC const, now implicitely implying nothrow as well.\n \n@@ -1726,9 +1732,9 @@\n 2008-08-01  Vincent Celier  <celier@adacore.com>\n \n \t* prj-attr.adb: New attribute Compiler'Name_Syntax (<lang>)\n-\t\n+\n \t* prj-nmsc.adb (Process_Compiler): Recognize attribute Name_Syntax\n-\t\n+\n \t* prj.adb (Object_Exist_For): Use Object_Generated, not\n \tObjects_Generated that is removed and was never modified anyway.\n \n@@ -1739,7 +1745,7 @@\n \tused.\n \n \t* snames.adb: New standard name Path_Syntax\n-\t\n+\n \t* snames.ads: New standard name Path_Syntax\n \n 2008-08-01  Vincent Celier  <celier@adacore.com>\n@@ -1749,7 +1755,7 @@\n \twhen procedure Specify_Adalib_Dir is called.\n \t(Lib_Directory): If Adalib_Path is not null, return its value\n \t(Specify_Adalib_Dir): New procedure\n-\t\n+\n \t* mlib-utl.ads (Specify_Adalib_Dir): New procedure\n \n 2008-08-01  Ed Schonberg  <schonberg@adacore.com>\n@@ -1815,7 +1821,7 @@\n 2008-08-01  Doug Rupp  <rupp@adacore.com>\n \n \t* gnat_rm.texi: Document new mechanism Short_Descriptor.\n-\t\n+\n \t* types.ads (Mechanism_Type): Modify range for new Short_Descriptor\n \tmechanism values.\n \n@@ -1850,7 +1856,7 @@\n \n \t* gcc-interface/utils.c (build_vms_descriptor32): Renamed from\n \tbuild_vms_descriptor and enhanced to hande Short_Descriptor mechanism.\n-\t(build_vms_descriptor): Renamed from build_vms_descriptor64. \n+\t(build_vms_descriptor): Renamed from build_vms_descriptor64.\n \t(convert_vms_descriptor32): New function.\n \t(convert_vms_descriptor64): New function.\n \t(convert_vms_descriptor): Rewrite to handle both 32bit and 64bit\n@@ -1906,7 +1912,7 @@\n \n \t* mlib-tgt-specific-vms-alpha.adb (Build_Dynamic_Library): Output a\n \tdummy transfer address for debugging.\n-\t\n+\n \t* mlib-tgt-specific-vms-ia64.adb (Build_Dynamic_Library): Likewise.\n \n \t* vms_data.ads: vms_data.ads: New qualfier /MACHINE_CODE_LISTING\n@@ -1924,7 +1930,7 @@\n \n \t* system-rtx-rtss.ads\n \tChange the default stack size. It is important to set the commit part.\n-\t\n+\n \t* s-taprop-rtx.adb\n \t(Initialize): Get the clock resolution.\n \t(RT_Resolution): Return the clock resolution that is indicated by the\n@@ -1987,32 +1993,32 @@\n \tconfiguration flag Canonical_Streams.\n \t(Gen_Adainit_C): Add the declaration and initial value of external\n \tsymbol __gl_canonical_streams.\n-\t\n+\n \t* init.c: Update the list of global values computed by the binder.\n-\t\n+\n \t* opt.ads: Add flag Canonical_Streams.\n-\t\n+\n \t* par-prag.adb (Prag): Include Pragma_Canonical_Streams to the list of\n \tsemantically handled pragmas.\n-\t\n+\n \t* sem_prag.adb: Add an entry into enumeration type Sig_Flags.\n \t(Analyze_Pragma): Add case for pragma Canonical_Streams.\n-\t\n+\n \t* snames.adb: Add character value for name Canonical_Streams.\n-\t\n+\n \t* snames.ads:\n \tAdd Name_Canonical_Streams to the list of configuration pragmas.\n \tAdd Pragma_Canonical_Streams to enumeration type Pragma_Id.\n-\t\n+\n \t* snames.h: Add a definition for Pragma_Canonical_Streams.\n-\t\n+\n \t* s-ststop.adb:\n \tAdd a flag and import to seize the value of external symbol\n \t__gl_canonical_streams. Update comment and initial value of constant\n \tUse_Block_IO.\n-\t\n+\n \t* gnat_rm.texi: Add section of pragma Canonical_Streams.\n-\t\n+\n \t* gnat_ugn.texi:\n \tAdd pragma Canonical_Streams to the list of configuration pragmas.\n \n@@ -2030,17 +2036,17 @@\n 2008-07-31  Gary Dismukes  <dismukes@adacore.com>\n \n \t* checks.ads (Apply_Accessibility_Check): Add parameter Insert_Node.\n-\t\n+\n \t* checks.adb (Apply_Accessibility_Check): Insert the check on\n \tInsert_Node.\n-\t\n+\n \t* exp_attr.adb:\n \t(Expand_N_Attribute_Refernce, Attribute_Access): Pass attribute node\n \tto new parameter Insert_Node on call to Apply_Accessibility_Check.\n \tNecessary to distinguish the insertion node because the dereferenced\n \tformal may come from a rename, but the check must be inserted in\n \tfront of the attribute.\n-\t\n+\n \t* exp_ch4.adb:\n \t(Expand_N_Allocator): Pass actual for new Insert_Node parameter on\n \tcall to Apply_Accessibility_Check.\n@@ -2052,15 +2058,15 @@\n \n \t* sem_type.adb (Has_Compatible_Type): Complete support for synchronized\n \ttypes when the candidate type is a synchronized type.\n-\t\n+\n \t* sem_res.adb (Resolve_Actuals): Reorganize code handling synchronized\n \ttypes, and complete management of synchronized types adding missing\n \tcode to handle formal that is a synchronized type.\n-\t\n+\n \t* sem_ch4.adb (Try_Primitive_Operation): Avoid testing attributes that\n \tare not available and cause the compiler to blowup. Found compiling\n \ttest with switch -gnatc\n-\t\n+\n \t* sem_ch6.adb (Check_Synchronized_Overriding): Remove local subprogram\n \tHas_Correct_Formal_Mode plus code cleanup.\n \n@@ -2128,7 +2134,7 @@\n \t* exp_attr.adb (Find_Stream_Subprogram): Check the base type instead\n \tof the type when looking for stream subprograms for type String,\n \tWide_String and Wide_Wide_String.\n-\t\n+\n \t* s-ststop.adb: Change the initialization expression of constant\n \tUse_Block_IO.\n \n@@ -2173,9 +2179,9 @@\n 2008-07-31  Robert Dewar  <dewar@adacore.com>\n \n \t* einfo.adb (Spec_PPC): Now defined for generic subprograms\n-\t\n+\n \t* einfo.ads (Spec_PPC): Now defined for generic subprograms\n-\t\n+\n \t* sem_prag.adb (Check_Precondition_Postcondition): Handle generic\n \tsubprogram case\n \n@@ -2190,7 +2196,7 @@\n \tthey will appear in each instance.\n \t(Process_PPCs): Do not transform postconditions into a procedure in a\n \tgeneric context, to prevent double expansion of check pragmas.\n-\t\n+\n \t* sem_attr.adb: In an instance, the prefix of the 'result attribute\n \tcan be the renaming of the\n \tcurrent instance, so check validity of the name accordingly.\n@@ -2205,7 +2211,7 @@\n \tfrom context. This attribute must be usable in Ada95 mode.\n \tThe attribute can appear in the body of a function marked\n \tInline_Always, but in this case the postocondition is not enforced.\n-\t\n+\n \tsem_prag.adb (Check_Precondition_Postcondition): within the expansion\n \tof an inlined call pre- and postconditions are legal\n \n@@ -2231,7 +2237,7 @@\n \n 2008-07-30  Aaron W. LaFramboise  <aaronavay62@aaronwl.com>\n \n-\t* gcc-interface/Makefile.in (EXTRA_GNATRTL_NONTASKING_OBJS) \n+\t* gcc-interface/Makefile.in (EXTRA_GNATRTL_NONTASKING_OBJS)\n \t[WINDOWS]: Add s-winext.o.\n \n 2008-07-30  Eric Botcazou  <ebotcazou@adacore.com>\n@@ -2290,7 +2296,7 @@\n \t* sem_ch8.adb (Analyze_Subprogram_Renaming): When renaming an attribute\n \tas a actual in an instance, check for a missing attribute to prevent\n \tprogram_error on an illegal program.\n-\t\n+\n \t* exp_util.adb (Find_Prim_Op): Rather than Assert (False), raise program\n \terror if primitive is not found, so that exception can be handled\n \telsewhere on illegal programs.\n@@ -2341,7 +2347,7 @@\n \t(Process_Full_View): Build wrapper specs for all primitives\n \tthat belong to a private view completed by a concurrent type\n \timplementing an interface.\n-\t\n+\n \t* sem_ch6.adb (Analyze_Subprogram_Body): When the current subprogram\n \tis a primitive of a\n \tconcurrent type with a private view that implements an interface, try to\n@@ -2395,18 +2401,18 @@\n \t* cio.c\n \t(put_int, put_int_stderr, put_char, put_char_stderr): For RTX we call\n \tthe function RtPrintf for console output.\n-\t\n+\n \t* argv.c Do not use the environ variable for RTX.\n-\t\n+\n \t* gnatlink.adb (gnatlink): The part that handles the --RTS option has\n \tbeen moved before the call to Osint.Add_Default_Search_Dirs in order\n \tto take into account the flags in system.ads (RTX_RTSS_Kernel_Module)\n \tfrom the appropriate run time.\n-\t\n+\n \t* targparm.ads\n \t(RTX_RTSS_Kernel_Module_On_Target): Add this flag that is set to True if\n \ttarget is a RTSS module for RTX.\n-\t\n+\n \t* targparm.adb (Targparm_Tags, RTX_Str, Targparm_Str): Add tag RTX for\n \tRTX_RTSS_Kernel_Module\n \t(Get_Target_Parameters): Add processing of RTX_RTSS_Kernel_Module flag.\n@@ -2433,13 +2439,13 @@\n \n 2008-07-30  Laurent Guerby  <laurent@guerby.net>\n \n-        PR ada/5911\n-        * gcc-interface/Makefile.in (MULTISUBDIR, RTSDIR): New variables.\n-        Pass MULTISUBDIR to recursive make. Use $(RTSDIR) instead of rts.\n-        Replace stamp-gnatlib* by stamp-gnatlib*-rts.\n-        * gcc-interface/Make-lang.in: Replace stamp-gnatlib2\n-        by stamp-gnatlib2-rts.\n-\t\n+\tPR ada/5911\n+\t* gcc-interface/Makefile.in (MULTISUBDIR, RTSDIR): New variables.\n+\tPass MULTISUBDIR to recursive make. Use $(RTSDIR) instead of rts.\n+\tReplace stamp-gnatlib* by stamp-gnatlib*-rts.\n+\t* gcc-interface/Make-lang.in: Replace stamp-gnatlib2\n+\tby stamp-gnatlib2-rts.\n+\n 2008-07-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \tPR documentation/15479\n@@ -2531,7 +2537,7 @@\n \n \t* adaint.c (__MINGW32__ section): Include ctype.h and define\n \ta fallback ISALPHA if IN_RTS.\n-\t(__gnat_is_absolute_path): Use ISALPHA instead of isalpha. \n+\t(__gnat_is_absolute_path): Use ISALPHA instead of isalpha.\n \n 2008-07-17  Olivier Hainque  <hainque@adacore.com>\n \n@@ -2604,7 +2610,7 @@\n \t(gnat_to_gnu_entity) <case E_Function/Procedure>: Request stack\n \trealignment with force_align_arg_pointer attribute on foreign\n \tconvention subprograms if FORCE_PREFERRED_STACK_BOUNDARY_IN_MAIN.\n-\t\n+\n 2008-06-13  Olivier Hainque  <hainque@adacore.com>\n \n \t* utils.c (rest_of_record_type_compilation): When computing\n@@ -2667,7 +2673,7 @@\n \t(gnat_handle_option) <OPT_gdwarf_>: Increment gnat_dwarf_extensions.\n \t(gnat_post_options): Map gnat_dwarf_extensions to the\n \tcommonuse_gnu_debug_info_extensions for later processing.\n-\t\n+\n 2008-06-04  Samuel Tardieu  <sam@rfc1149.net>\n \n \t* einfo.ads, einfo.adb: Remove unused flag Function_Returns_With_DSP.\n@@ -2701,9 +2707,9 @@\n \tPR ada/864\n \t* osint.ads, osint.adb (Program_Name): New parameter \"Prog\" to\n \tallow recognition of program suffix in addition to prefix.\n-\t\n+\n \t* gnatchop.adb (Locate_Executable): Add support for prefix.\n-\t\n+\n \t* make.adb, gnatcmd.adb, gnatlink.adb, prj-makr.adb,\n \tmlib-utl.adb: Adjust calls to Program_Name.\n \n@@ -2750,7 +2756,7 @@\n \n \t* sinput-p.adb (Source_File_Is_Subunit): Allow special character used\n \tfor preprocessing\n-\t\n+\n \t* sinput-p.ads: Minor comment update and reformatting\n \n 2008-05-28  Ed Schonberg  <schonberg@adacore.com>\n@@ -2780,18 +2786,18 @@\n \n \t* restrict.ads:\n \tAdd missing restrictions, and properly label all GNAT defined ones\n-\t\n+\n \t* rtsfind.ads:\n \tAdd entry for Ada_Real_Time.Timing_Events.Timing_Event\n \tAdd entry for Ada.Task_Termination.Set_Specific_Handler\n \tAdd entry for Ada.Task_Termination.Specific_Handler\n-\t\n+\n \t* s-rident.ads:\n \tAdd missing restrictions and properly mark all gnat defined ones\n-\t\n+\n \t* sem_ch3.adb:\n \t(Analyze_Object_Declaration): Check No_Local_Timing_Events restriction\n-\t\n+\n \t* sem_res.adb:\n \t(Resolve_Call): Check violation of No_Specific_Termination_Handlers\n \n@@ -2841,7 +2847,7 @@\n \n \t* sem_ch3.adb (Derive_Progenitor_Primitives): Add missing support\n \tfor user-defined predefined primitives.\n-\t\n+\n \t* sem_util.adb (Matches_Prefixed_View_Profile): Ditto.\n \t(Find_Overridden_Synchronized_Primitive): Ditto.\n \n@@ -2930,7 +2936,7 @@\n 2008-05-27  Arnaud Charlet  <charlet@adacore.com>\n \n \t* bindgen.adb: Update comments.\n-\t\n+\n \t* s-tasinf-mingw.adb: Add \"with\" of System.OS_Interface\n \n 2008-05-27  Vincent Celier  <celier@adacore.com>\n@@ -2974,14 +2980,14 @@\n \tMeasure and Overflow_Guard.\n \t(Report_Result): Fixed computation of the result using new fields of\n \tStack_Analyzer.\n-\t\n+\n \t* s-stausa.ads (Initialize_Analyzer): Replaced Size / Overflow_Guard\n \tparams by more explicit Stack_Size / Max_Pattern_Size params.\n \t(Stack_Analyzer): Added distinct Stack_Size & Pattern_Size fields.\n \tAdded Stack_Used_When_Filling field.\n \t(Task_Result): Replaced Measure / Overflow_Guard by more explicit\n \tMin_Measure and Max_Measure fields.\n-\t\n+\n \t* s-tassta.adb (Task_Wrapper): Updated call to Initialize_Analyzer.\n \n 2008-05-27  Vincent Celier  <celier@adacore.com>\n@@ -3001,7 +3007,7 @@\n \n \t(System.File_IO.{Close, Delete, Reset}):\n \tChange File parameter from \"in out AFCB_Ptr\" to \"access AFCB_Ptr\".\n-\t\n+\n \t(Ada.*_IO.{Close, Delete, Reset, Set_Mode}):\n \tPass File parameter by reference.\n \n@@ -3053,7 +3059,7 @@\n \t* system-solaris-sparc.ads (Always_Compatible_Rep): Likewise.\n \t* system-solaris-sparcv9.ads (Always_Compatible_Rep): Likewise.\n \t* system-solaris-x86.ads (Always_Compatible_Rep): Likewise.\n-\t\n+\n 2008-05-27  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_attr.adb: add guard to previous patch.\n@@ -3080,14 +3086,14 @@\n 2008-05-27  Vincent Celier  <celier@adacore.com>\n \n \t* prj-attr.adb: Add new project level attribute Map_File_Option\n-\t\n+\n \t* prj-nmsc.adb (Process_Linker): Process new attribute Map_File_Option\n-\t\n+\n \t* prj.ads: Minor reformatting and comment update\n \t(Project_Configuration): New component Map_File_Option\n-\t\n+\n \t* snames.adb: New standard name Map_File_Option\n-\t\n+\n \t* snames.ads: New standard name Map_File_Option\n \n 2008-05-27  Vincent Celier  <celier@adacore.com>\n@@ -3111,7 +3117,7 @@\n \t* exp_ch3.adb (Expand_N_Object_Declaration): Remove checks for\n \tNo_Default_Initialization, which is now delayed until the freeze point\n \tof the object. Add a comment about deferral of the check.\n-\t\n+\n \t* freeze.adb (Freeze_Entity): The check for No_Default_Initialization\n \ton objects is moved here.\n \n@@ -3129,7 +3135,7 @@\n \t(Compare_Array_U32): Likewise.\n \t* s-caun64.adb (Uword): Likewise.\n \t(Compare_Array_U64): Likewise.\n-\t\n+\n 2008-05-26  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch6.adb: Add ??? comment for previous change\n@@ -3198,7 +3204,7 @@\n \t* rtsfind.ads, rtsfind.adb:\n \t(RE_Get_RACW): New runtime library entity provided by PolyORB s-parint.\n \t(Check_RPC): Support per-PCS-kind API versioning.\n-\t\n+\n \texp_dist.ads, exp_dist.adb:\n \t(Build_Stub_Tag, Get_Stub_Elements): New utility subprograms.\n \t(PolyORB_Support.Add_RACW_From_Any): Offload common code to new runtime\n@@ -3209,7 +3215,7 @@\n \tthrough an intermediate Any.\n \t(PolyORB_Support.Add_RACW_Write_Attribute): Use Get_Reference instead of\n \tgoing through an intermediate Any.\n-\t\n+\n \t* sem_dist.adb: Minor reformatting.\n \n 2008-05-26  Javier Miranda  <miranda@adacore.com>\n@@ -3480,15 +3486,15 @@\n \trespectively.\n \tHence, the priority must be set in this case to the one selected by the\n \tuser.\n-\t\n+\n 2008-05-26  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch12.adb:\n \t(Remove_Parent): If the enclosing scope is an instance whose generic\n \tparent is declared within some parent scope of the just completed\n \tinstance, make full views of the entities in that parent visible, when\n \tapplicable.\n-\t\n+\n 2008-05-26  Kai Tietz  <kai.tietz@onevision.com>\n \n \t* mingw32.h (STD_MINGW): Set to true for target w64.\n@@ -3580,12 +3586,12 @@\n \t* g-sttsne-vxworks.adb: Add missing dependency on Sockets.Constants.\n \tAdd missing \"with\" of Ada.Unchecked_Conversion\n \n-\t* g-soccon-linux-ppc.ads, g-soccon-linux-64.ads, g-soccon-lynxos.ads, \n-\tg-soccon-linux-x86.ads, g-soccon-hpux-ia64.ads, \n-\tg-soccon-solaris-64.ads, g-soccon-tru64.ads, g-soccon-aix.ads, \n-\tg-soccon-irix.ads, g-soccon-hpux.ads, g-soccon-solaris.ads, \n-\tg-soccon-vms.ads, g-soccon-mingw.ads, g-soccon-vxworks.ads, \n-\tg-socthi-vxworks.adb, g-soccon-freebsd.ads, g-soccon.ads: \n+\t* g-soccon-linux-ppc.ads, g-soccon-linux-64.ads, g-soccon-lynxos.ads,\n+\tg-soccon-linux-x86.ads, g-soccon-hpux-ia64.ads,\n+\tg-soccon-solaris-64.ads, g-soccon-tru64.ads, g-soccon-aix.ads,\n+\tg-soccon-irix.ads, g-soccon-hpux.ads, g-soccon-solaris.ads,\n+\tg-soccon-vms.ads, g-soccon-mingw.ads, g-soccon-vxworks.ads,\n+\tg-socthi-vxworks.adb, g-soccon-freebsd.ads, g-soccon.ads:\n \tMove common code out of GNAT.Sockets.Thin implementations and into\n \tThin_Common.\n \tNew constant SIZEOF_fd_set\n@@ -3596,13 +3602,13 @@\n \t(Create): Remove call to Set_Length; use Set_Family to set the family\n \tand (on appropriate platforms) length fields in struct sockaddr.\n \n-\t* g-socthi.adb, g-socthi.ads, g-socthi-vms.ads, g-socthi-vms.adb, \n-\tg-socthi-mingw.adb, g-socthi-mingw.ads, g-socthi-vxworks.adb, \n+\t* g-socthi.adb, g-socthi.ads, g-socthi-vms.ads, g-socthi-vms.adb,\n+\tg-socthi-mingw.adb, g-socthi-mingw.ads, g-socthi-vxworks.adb,\n \tg-soccon-darwin.ads, g-soccon-darwin.ads: New constant SIZEOF_fd_set\n \tMove common code out of GNAT.Sockets.Thin implementations and into\n \tThin_Common.\n \n-\t* g-socket.ads, g-socket.adb: \n+\t* g-socket.ads, g-socket.adb:\n \tMove common code out of GNAT.Sockets.Thin implementations and into\n \tThin_Common.\n \t(Connect_Socket, Accept_Socket): Provide new versions of these two\n@@ -3611,7 +3617,7 @@\n \tthis is now handled automatically by Set_Family on platforms that\n \trequire it.\n \n-\t* gen-soccon.c: \n+\t* gen-soccon.c:\n \tMove common code out of GNAT.Sockets.Thin implementations and into\n \tThin_Common.\n \t(SIZEOF_sockaddr_in6): On platforms where IPv6 is not supported, define\n@@ -3722,7 +3728,7 @@\n \tDeclared_In_Interfaces.\n \t(Project_Data): New Boolean component Interfaces_Defined\n \n-\t* prj-attr.adb: \n+\t* prj-attr.adb:\n \tNew project level attribute Object_Generated and Objects_Linked\n \tAdd new project level attribute Interfaces\n \n@@ -3731,13 +3737,13 @@\n \tname and is not found in the current project, look for it also in the\n \tancestors of the project.\n \n-\t* prj-makr.adb: \n+\t* prj-makr.adb:\n \tReplace procedure Make with procedures Initialize, Process and Finalize\n \tto implement H414-023: process different directories with different\n \tpatterns.\n \tUse functions Present and No throughout\n \n-\t* prj-makr.ads: \n+\t* prj-makr.ads:\n \tReplace procedure Make with procedures Initialize, Process and Finalize\n \n \t* prj-nmsc.adb\n@@ -3795,7 +3801,7 @@\n \t(Parent_Project_Of): New function\n \t(Set_Parent_Project_Of): New procedure\n \n-\t* snames.ads, snames.adb: \n+\t* snames.ads, snames.adb:\n \tAdd new standard names Object_Generated and Objects_Linked\n \n 2008-05-20  Hristian Kirtchev  <kirtchev@adacore.com>\n@@ -3839,7 +3845,7 @@\n \tCalls to access and assign routines have been replaced by calls to\n \tRead/Write routines of System.Shared_Storage.Shared_Var_Procs\n \tinstantiated package.\n-\t\n+\n \t* rtsfind.ads: RE_Shared_Var_Procs entry has been added in RE_Unit_Table\n \tIt identifies the new generic package added in s-shasto.\n \n@@ -4070,7 +4076,7 @@\n \n \t* s-osinte-irix.ads: (Alternate_Stack_Size): Add dummy declaration.\n \n-\t* adaint.c: \n+\t* adaint.c:\n \tDon't define dummy implementation of convert_addresses on ppc-linux.\n \n 2008-05-20  Ed Schonberg  <schonberg@adacore.com>\n@@ -4112,7 +4118,7 @@\n \t(gnat_to_gnu) <N_Validate_Unchecked_Conversion>: Fix formatting.\n \n 2008-05-14  Samuel Tardieu  <sam@rfc1149.net>\n-            Robert Dewar <dewar@adacore.com>\n+\t    Robert Dewar <dewar@adacore.com>\n \n \t* sem_attr.adb (Analyze_Attribute, Attribute_Old case): Add\n \trestrictions to the prefix of 'Old.\n@@ -4129,7 +4135,7 @@\n \tdirectly in a couple of special cases.\n \n 2008-05-12  Samuel Tardieu  <sam@rfc1149.net>\n-            Ed Schonberg <schonberg@adacore.com>\n+\t    Ed Schonberg <schonberg@adacore.com>\n \n \t* sem_ch3.adb (Build_Derived_Record_Type): Accept statically matching\n \tconstraint expressions.\n@@ -4189,7 +4195,7 @@\n \ttagged type by an untagged protected or task type.\n \n 2008-04-28  Eric Botcazou  <ebotcazou@adacore.com>\n-            Tristan Gingold  <gingold@adacore.com>\n+\t    Tristan Gingold  <gingold@adacore.com>\n \n \tPR ada/36007\n \t* decl.c (gnat_to_gnu_entity) <object>: Do not promote alignment\n@@ -4316,7 +4322,7 @@\n \tthe parent using the corresponding discriminant.\n \n 2008-04-15  Samuel Tardieu  <sam@rfc1149.net>\n-            Gary Dismukes  <dismukes@adacore.com>\n+\t    Gary Dismukes  <dismukes@adacore.com>\n \n \tPR ada/28733\n \t* sem_ch8.adb (Analyze_Use_Package): Do not allow \"use\" of something\n@@ -4413,7 +4419,7 @@\n \t* xref_lib.adb (Parse_Identifier_Info): Correctly parse and ignore the\n \trenaming information.\n \n-2008-04-13  Samuel Tardieu  <sam@rfc1149.net> \n+2008-04-13  Samuel Tardieu  <sam@rfc1149.net>\n \n \tPR ada/17985\n \t* sem_aggr.adb (Valid_Ancestor_Type): A type is not an ancestor of\n@@ -4581,7 +4587,7 @@\n \t* utils.c (gnat_genericize): Likewise.\n \n 2008-04-08  Eric Botcazou  <ebotcazou@adacore.com>\n-            Richard Kenner  <kenner@adacore.com>\n+\t    Richard Kenner  <kenner@adacore.com>\n \n \t* ada-tree.h (TYPE_PACKED_ARRAY_TYPE_P): Only set it when bit-packed.\n \t* decl.c (gnat_to_gnu_entity): Adjust for above change.\n@@ -4640,7 +4646,7 @@\n \t* g-sercom-linux.adb:\n \tImplement the stop bits and parity support for GNU/Linux.\n \tFix handling of timeout, it must be given in tenth of seconds.\n-\t\n+\n \t* g-sercom-mingw.adb:\n \tImplement the stop bits and parity support for Windows.\n \tUse new s-win32.ads unit instead of declaring Win32 services\n@@ -4696,7 +4702,7 @@\n \n \t* system-linux-x86.ads: (Stack_Check_Probes): Set to True.\n \n-\t* s-intman-posix.adb: \n+\t* s-intman-posix.adb:\n \t(Initialize): Set SA_ONSTACK for SIGSEGV if the platform makes use of an\n \talternate signal stack for stack overflows.\n \n@@ -4738,7 +4744,7 @@\n \t(s-vxwext.ads, s-vxwext-kernel.ads, s-vxwext-rtp.ads,\n \ts-vxwext-rtp.adb): New files.\n \n-\t* s-taprop-vxworks.adb, s-osinte-vxworks.ads, s-osinte-vxworks.adb: \n+\t* s-taprop-vxworks.adb, s-osinte-vxworks.ads, s-osinte-vxworks.adb:\n \tMinor updates to accomodate changes above.\n \n 2008-04-08  Pascal Obry  <obry@adacore.com>\n@@ -4747,10 +4753,10 @@\n \ts-tasinf-mingw.ad{s,b}, s-taspri-mingw.ads:\n \tUse new s-win32.ads unit instead of declaration\n \tfrom s-osinte-mingw.ads.\n-\t\n+\n \t* s-osinte-mingw.ads:\n \tMove all non tasking based interface to s-win32.ads.\n-\t\n+\n \t* s-osprim-mingw.adb:\n \tRemove duplicated declarations and use s-win32.ads\n \tunit instead.\n@@ -4773,7 +4779,7 @@\n \tmlib-tgt-specific-vxworks.adb, mlib-tgt-specific-xi.adb,\n \tmlib-tgt-specific-mingw.adb: New names.\n \n-\t* Makefile.in: \n+\t* Makefile.in:\n \tOn VxWorks platforms use s-stchop-limit.ads for s-stchop.ads\n \tGet rid of gnatbl.\n \t(EXTRA_GNATRTL_NONTASKING_OBJS): Add s-win32.o\n@@ -4797,7 +4803,7 @@\n \t* a-cgcaso.adb, a-convec.adb: (Swap, Sift): Avoid use of complex\n \trenaming.\n \n-\t* a-cgaaso.ads, a-secain.ads, a-slcain.ads, a-shcain.ads,  \n+\t* a-cgaaso.ads, a-secain.ads, a-slcain.ads, a-shcain.ads,\n \ta-crdlli.ads, a-coormu.ads, a-ciormu.ads: modified header to conform\n \tto convention for non-RM specs.\n \tAdd descriptive header, and documented each operation\n@@ -5315,7 +5321,7 @@ PR ada/10768\n \t* fname-sf.adb: Remove Big_String declarations (now in Types)\n \n \t* s-strcom.adb, g-dyntab.ads, g-table.ads, s-carsi8.adb,\n-        s-stalib.ads, s-carun8.adb: Add zero size Storage_Size clauses for\n+\ts-stalib.ads, s-carun8.adb: Add zero size Storage_Size clauses for\n \tbig pointer types\n \n \t* table.ads: Add for Table_Ptr'Storage_Size use 0\n@@ -5342,7 +5348,7 @@ PR ada/10768\n \n \t* makeusg.adb: Add line for switch --subdirs=\n \n-\t* prj.ads: \n+\t* prj.ads:\n \t(Source_Data): New Boolean component Compiled, defaulted to True\n \t(Empty_File_Name: New global variable in private part, initialized in\n \tprocedure Initialize.\n@@ -5415,7 +5421,7 @@ PR ada/10768\n \t* prj-proc.adb (Process_Declarative_Items): Link new elements of copied\n \tfull associative array together.\n \t(Recursive_Process): Put the project qualifier in the project data\n-\t\n+\n \t* prj-tree.ads, prj-tree.adb: (Project_Qualifier_Of): New function\n \t(Set_Project_Qualifier_Of): New procedure\n \n@@ -5583,7 +5589,7 @@ PR ada/10768\n \n \t* s-rident.ads: Add No_Default_Initialization restriction\n \n-\t* exp_tss.adb: \n+\t* exp_tss.adb:\n \t(Has_Non_Null_Base_Init_Proc): Handle No_Default_Initialization case\n \t(Set_TSS): Handle No_Default_Initialization case\n \n@@ -6083,15 +6089,15 @@ PR ada/10768\n \tilasm.\n \n 2008-04-07  Aurelien Jarno  <aurelien@aurel32.net>\n-            Xavier Grave  <grave@ipno.in2p3.fr>\n+\t    Xavier Grave  <grave@ipno.in2p3.fr>\n \n \t* Makefile.in: Add make ifeq define for mips/mipsel support.\n-\t* g-soccon-linux-mips.ads, system-linux-mipsel.ads, \n+\t* g-soccon-linux-mips.ads, system-linux-mipsel.ads,\n \tsystem-linux-mips.ads: New files.\n \n 2008-04-07  Aurelien Jarno  <aurelien@aurel32.net>\n \n-        * sysdep.c: add __GLIBC__ to the #ifdef preprocessor macros to\n+\t* sysdep.c: add __GLIBC__ to the #ifdef preprocessor macros to\n \tdetect systems using GNU libc.\n \t* gsocket.h: ditto.\n \t* socket.c: ditto.\n@@ -6100,7 +6106,7 @@ PR ada/10768\n \n 2008-04-07  Aurelien Jarno  <aurelien@aurel32.net>\n \n-\t* s-osinte-linux-kfreebsd.ads (SC_NPROCESSORS_ONLN): New \n+\t* s-osinte-linux-kfreebsd.ads (SC_NPROCESSORS_ONLN): New\n \tconstant constant for sysconf call.\n \t(bit_field): New packed boolean type used by cpu_set_t.\n \t(cpu_set_t): New type corresponding to the C type with\n@@ -6196,7 +6202,7 @@ PR ada/10768\n \tsize if it has overflowed.\n \n 2008-03-31  Olivier Hainque  <hainque@adacore.com>\n-            Eric Botcazou  <ebotcazou@adacore.com>\n+\t    Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* utils2.c (find_common_type): Document assumption on t1/t2 vs\n \tlhs/rhs. Force use of lhs type if smaller, whatever the modes.\n@@ -6334,8 +6340,8 @@ PR ada/10768\n \n 2008-03-26  Arnaud Charlet  <charlet@adacore.com>\n \n-\t* s-taprop-irix.adb, s-taprop-tru64.adb, s-taprop-lynxos.adb, \n-\ts-taprop-linux.adb, s-taprop-mingw.adb, s-taprop-vxworks.adb, \n+\t* s-taprop-irix.adb, s-taprop-tru64.adb, s-taprop-lynxos.adb,\n+\ts-taprop-linux.adb, s-taprop-mingw.adb, s-taprop-vxworks.adb,\n \ts-taprop-posix.adb (Create_Task): Do not attempt to set task priority\n \tor task info if the thread could not be created.\n \n@@ -6648,15 +6654,15 @@ PR ada/10768\n \n \t* Makefile.in: Add proper GNAT.Serial_Communications implementation on\n \tsupported platforms.\n-\t\n+\n \t* Makefile.rtl: Add g-sercom.o.\n-\t\n+\n \t* impunit.adb: Add g-sercom.adb.\n-\t\n+\n \t* s-crtl.ads (open): New routine.\n \t(close): Likewise.\n \t(write): Likewise.\n-\t\n+\n \t* s-osinte-mingw.ads (BYTE): New type.\n \t(CHAR): Likewise.\n \t(OVERLAPPED): Likewise.\n@@ -6674,7 +6680,7 @@ PR ada/10768\n \n \t* g-sercom.adb: Default implementation, calls to this unit will raise\n \ta program error exception.\n-\t\n+\n \t* g-sercom-mingw.adb, g-sercom-linux.adb: Windows and\n \tGNU/Linux implementations.\n \n@@ -6764,7 +6770,7 @@ PR ada/10768\n \tdeclarations of a parent unit are made visible when compiling a child\n \tinstance, the parent is not a hidden open scope, even though it may\n \tcontain other pending instance.\n-\t\n+\n \t* sem_ch8.adb (Restore_Scope_Stack): If an entry on the stack is a\n \thidden open scope for some child instance, it does affect the\n \tvisibility status of other stach entries.\n@@ -6794,7 +6800,7 @@ PR ada/10768\n \n 2008-03-26  Matthew Heaney  <heaney@adacore.com>\n \n-\t* a-ciorse.ads, a-cidlli.ads, a-cdlili.ads, a-cihase.ads, a-cohase.ads, \n+\t* a-ciorse.ads, a-cidlli.ads, a-cdlili.ads, a-cihase.ads, a-cohase.ads,\n \ta-ciorma.ads, a-coorma.ads, a-ciormu.ads, a-coormu.ads, a-coorse.ads:\n \tMarked with clauses as private, and controlled operations as overriding\n \n@@ -6951,7 +6957,7 @@ PR ada/10768\n \t* trans.c (addressable_p): Add notes on addressability issues.\n \n 2008-03-21  Olivier Hainque  <hainque@adacore.com>\n-            Ed Schonberg  <schonberg@adacore.com>\n+\t    Ed Schonberg  <schonberg@adacore.com>\n \n \t* trans.c (addressable_p): Accept COND_EXPR when both arms\n \tare addressable.\n@@ -7272,7 +7278,7 @@ PR ada/10768\n \n 2007-12-19  Robert Dewar  <dewar@adacore.com>\n \n-\t* g-expect-vms.adb, g-expect.adb, s-poosiz.adb: \n+\t* g-expect-vms.adb, g-expect.adb, s-poosiz.adb:\n \tAdd pragma Warnings (Off) for unassigned IN OUT arguments\n \n \t* sem_warn.adb (Output_Reference): Suppress messages for internal names\n@@ -7341,7 +7347,7 @@ PR ada/10768\n \t* errout.adb (First_Node): Use Traverse_Proc instead of Traverse_Func,\n \tbecause the former already takes care of discarding the result.\n \t(Remove_Warning_Messages): Use appropriate subtype for Status and\n-\tDiscard \n+\tDiscard\n \n 2007-12-19  Ed Schonberg  <schonberg@adacore.com>\n \n@@ -7501,7 +7507,7 @@ PR ada/10768\n \t* adaint.c (__gnat_pthread_setaffinity_np): New routine. A dummy\n \t version is provided for older GNU/Linux distribution not\n \t supporting thread affinity sets.\n-\t\n+\n \t* s-osinte-linux.ads (SC_NPROCESSORS_ONLN): New constant for sysconf\n \tcall.\n \t(bit_field): New packed boolean type used by cpu_set_t.\n@@ -7510,23 +7516,23 @@ PR ada/10768\n \tfield array for the affinity mask. There is not need\n \tfor the C macro for setting individual bit.\n \t(pthread_setaffinity_np): New imported routine.\n-\t\n+\n \t* s-taprop-linux.adb (Enter_Task): Check that the CPU affinity mask is\n \tno null.\n \t(Create_Task): Set the processor affinity mask if information\n \tis present.\n-\t\n+\n \t* s-tasinf-linux.ads, s-tasinf-linux.adb: New files.\n-\t\n+\n 2007-12-13  Robert Dewar  <dewar@adacore.com>\n \n-\t* s-osinte-lynxos-3.ads, s-osinte-hpux.ads, s-osinte-solaris-posix.ads, \n-\ts-osinte-freebsd.ads, s-osinte-lynxos.ads, s-osinte-tru64.ads, \n-\ts-osinte-mingw.ads, s-osinte-aix.ads, s-osinte-hpux-dce.ads, \n+\t* s-osinte-lynxos-3.ads, s-osinte-hpux.ads, s-osinte-solaris-posix.ads,\n+\ts-osinte-freebsd.ads, s-osinte-lynxos.ads, s-osinte-tru64.ads,\n+\ts-osinte-mingw.ads, s-osinte-aix.ads, s-osinte-hpux-dce.ads,\n \ts-osinte-irix.ads, s-osinte-solaris.ads, s-intman-vms.adb,\n \ts-osinte-vms.ads, s-osinte-vxworks6.ads, s-osinte-vxworks.ads,\n-\ts-auxdec.ads, s-auxdec-vms_64.ads, s-osinte-darwin.ads, \n-\ts-taprop-vms.adb, s-interr-sigaction.adb, s-osinte-linux-hppa.ads, \n+\ts-auxdec.ads, s-auxdec-vms_64.ads, s-osinte-darwin.ads,\n+\ts-taprop-vms.adb, s-interr-sigaction.adb, s-osinte-linux-hppa.ads,\n \ti-vxwork-x86.ads, s-tpopde-vms.ads: Add missing pragma Convention C\n \tfor subprogram pointers.\n \n@@ -7550,15 +7556,15 @@ PR ada/10768\n \t    Bob Duff  <duff@adacore.com>\n \t    Tristan Gingold  <gingold@adacore.com>\n \n-\t* system-linux-ia64.ads, system-freebsd-x86.ads, system-lynxos-ppc.ads, \n-\tsystem-lynxos-x86.ads, system-linux-x86_64.ads, system-tru64.ads, \n-\tsystem-aix.ads, system-vxworks-sparcv9.ads, system-solaris-x86.ads, \n-\tsystem-irix-o32.ads, system-irix-n32.ads, system-hpux.ads, \n-\tsystem-vxworks-m68k.ads, system-linux-x86.ads, system-vxworks-mips.ads, \n-\tsystem-solaris-sparc.ads, system-solaris-sparcv9.ads, system-vms.ads, \n-\tsystem-mingw.ads, system-vms-zcx.ads, system-vxworks-ppc.ads, \n+\t* system-linux-ia64.ads, system-freebsd-x86.ads, system-lynxos-ppc.ads,\n+\tsystem-lynxos-x86.ads, system-linux-x86_64.ads, system-tru64.ads,\n+\tsystem-aix.ads, system-vxworks-sparcv9.ads, system-solaris-x86.ads,\n+\tsystem-irix-o32.ads, system-irix-n32.ads, system-hpux.ads,\n+\tsystem-vxworks-m68k.ads, system-linux-x86.ads, system-vxworks-mips.ads,\n+\tsystem-solaris-sparc.ads, system-solaris-sparcv9.ads, system-vms.ads,\n+\tsystem-mingw.ads, system-vms-zcx.ads, system-vxworks-ppc.ads,\n \tsystem-vxworks-arm.ads, system-darwin-x86.ads, system.ads,\n-\tsystem-vms_64.ads, system-darwin-ppc.ads, system-vxworks-x86.ads, \n+\tsystem-vms_64.ads, system-darwin-ppc.ads, system-vxworks-x86.ads,\n \tsystem-linux-ppc.ads, system-linux-hppa.ads, system-hpux-ia64.ads,\n \tsystem-vms-ia64.ads (Stack_Check_Limits): New target parameter.\n \t(Always_Compatible_Rep): New flag to control trampolines globally.\n@@ -7569,7 +7575,7 @@ PR ada/10768\n \t* s-taprop-vxworks.adb: Use stack limit method of stack checking.\n \tSimply indirectly call s-stchop when a task is created.\n \n-\t* ali.ads: \n+\t* ali.ads:\n \tNew flag added: Stack_Check_Switch_Set which is set when '-fstack-check'\n \tappears as an argument (entries A) in an ALI file.\n \n@@ -7594,8 +7600,8 @@ PR ada/10768\n \n 2007-12-13  Robert Dewar  <dewar@adacore.com>\n \n-\t* sem_ch5.adb, s-taskin.adb, a-ciorma.adb, a-coorma.adb, a-cohama.adb, \n-\ta-cihama.adb, g-awk.adb, \n+\t* sem_ch5.adb, s-taskin.adb, a-ciorma.adb, a-coorma.adb, a-cohama.adb,\n+\ta-cihama.adb, g-awk.adb,\n \ts-inmaop-posix.adb: Update handling of assigned value/unreferenced\n \twarnings\n \n@@ -7607,7 +7613,7 @@ PR ada/10768\n \n \t* lib-xref.ads: Improve documentation for k xref type\n \n-\t* lib-xref.adb: \n+\t* lib-xref.adb:\n \tUpdate handling of assigned value/unreferenced warnings\n \t(Generate_Reference): Warning for reference to entity for which a\n \tpragma Unreferenced has been given should be unconditional.\n@@ -7637,7 +7643,7 @@ PR ada/10768\n \tEXTRA_GNATRTL_NONTASKING_OBJS, EXTRA_GNATRTL_TASKING_OBJS,\n \tGNATLIB_SHARED for RTX run time): Use the versions required by RTX.\n \n-\t* mingw32.h: \n+\t* mingw32.h:\n \tDo not define GNAT_UNICODE_SUPPORT for RTX since it is not supported.\n \n \t* sysdep.c (winflush_function for RTX): Procedure that does nothing\n@@ -7648,7 +7654,7 @@ PR ada/10768\n \n 2007-12-13  Robert Dewar  <dewar@adacore.com>\n \n-\t* a-textio.adb, a-textio.ads: \n+\t* a-textio.adb, a-textio.ads:\n \tExtensive changes to private part for wide character encoding\n \n \t* a-witeio.adb, a-witeio.ads, a-ztexio.ads, a-ztexio.adb\n@@ -7691,7 +7697,7 @@ PR ada/10768\n \n \t* opt.adb: New pragma Fast_Math\n \n-\t* par-prag.adb: \n+\t* par-prag.adb:\n \tAdd Implemented_By_Entry to the list of pragmas which do not require any\n \tspecial processing.\n \t(Favor_Top_Level): New pragma.\n@@ -7732,7 +7738,7 @@ PR ada/10768\n \tNew pragma Fast_Math\n \t(Analyze_Pragma, case No_Return): Handle generic instance\n \n-\t* snames.h, snames.ads, snames.adb: \n+\t* snames.h, snames.ads, snames.adb:\n \tAdd new predefined name for interface primitive _Disp_Requeue.\n \tNew pragma Fast_Math\n \n@@ -7772,7 +7778,7 @@ PR ada/10768\n \n 2007-12-13  Geert Bosch  <bosch@adacore.com>\n \n-\t* a-tifiio.adb: \n+\t* a-tifiio.adb:\n \t(Put_Int64): Use Put_Digit to advance Pos. This fixes a case where\n \tthe second or later Scaled_Divide would omit leading zeroes,\n \tresulting in too few digits produced and a Layout_Error as result.\n@@ -7800,7 +7806,7 @@ PR ada/10768\n \t(Find_Interface_ADT): Modified to fulfill the new specification.\n \tRemove Atree.Delete_Tree/Delete_Node and Nlist.Delete_List\n \n-\t* par-ch4.adb, nlists.ads, nlists.adb: \n+\t* par-ch4.adb, nlists.ads, nlists.adb:\n \tRemove Atree.Delete_Tree/Delete_Node and Nlist.Delete_List\n \n \t* sinfo.ads, sinfo.adb: (Nkind_In): New functions\n@@ -7810,7 +7816,7 @@ PR ada/10768\n \n 2007-12-13  Vincent Celier  <celier@adacore.com>\n \n-\t* opt.ads: \n+\t* opt.ads:\n \tIndicate what flags are used by the Project Manager, gprbuild and\n \tgprclean.\n \t(Opt.Follow_Links_For_Dirs): New flag\n@@ -7842,7 +7848,7 @@ PR ada/10768\n \tpassing a pointer to a procedure. This is to eliminate trampolines\n \t(since the Callback procedure is usually nested).\n \n-\t* gnatfind.adb, switch.adb, switch.ads, gnatlink.adb, gnatls.adb, \n+\t* gnatfind.adb, switch.adb, switch.ads, gnatlink.adb, gnatls.adb,\n \tgnatname.adb, gnatxref.adb, gnatchop.adb, gprep.adb, gnatbind.adb\n \t(Check_Version_And_Help): Change Check_Version_And_Help to be generic.\n \n@@ -8090,7 +8096,7 @@ PR ada/10768\n \n \t* g-speche.adb: Use generic routine in g-spchge\n \n-\t* s-wchcnv.ads, s-wchcnv.adb: \n+\t* s-wchcnv.ads, s-wchcnv.adb:\n \tMinor code cleanup (make formal type consistent with spec)\n \n \t* namet.adb: Update comments.\n@@ -8221,7 +8227,7 @@ PR ada/10768\n \n \t* prj-pars.adb: new parameter Current_Dir\n \n-\t* prj-part.ads, prj-part.adb: \n+\t* prj-part.ads, prj-part.adb:\n \tChange Opt.Follow_Links to Opt.Follow_Links_For_Files.\n \t(Opt.Follow_Links_For_Dirs): New flag\n \t(Project_Path_Name_Of): Cache information returned by this routine as\n@@ -8294,10 +8300,10 @@ PR ada/10768\n \n \t* s-imenne.adb, s-imenne.ads: New files.\n \n-\t* s-imgboo.adb, s-imgboo.ads, s-imgcha.adb, s-imgcha.ads, s-imgdec.adb, \n-\ts-imgdec.ads, s-imgenu.ads, s-imgint.adb, s-imgint.ads, s-imglld.adb, \n-\ts-imglld.ads, s-imglli.adb, s-imglli.ads, s-imgllu.adb, s-imgllu.ads, \n-\ts-imgrea.adb, s-imgrea.ads, s-imguns.adb, s-imguns.ads, s-imgwch.adb, \n+\t* s-imgboo.adb, s-imgboo.ads, s-imgcha.adb, s-imgcha.ads, s-imgdec.adb,\n+\ts-imgdec.ads, s-imgenu.ads, s-imgint.adb, s-imgint.ads, s-imglld.adb,\n+\ts-imglld.ads, s-imglli.adb, s-imglli.ads, s-imgllu.adb, s-imgllu.ads,\n+\ts-imgrea.adb, s-imgrea.ads, s-imguns.adb, s-imguns.ads, s-imgwch.adb,\n \ts-imgwch.ads: New calling sequence for Image routines to avoid sec\n \tstack usage.\n \n@@ -8462,7 +8468,7 @@ PR ada/10768\n \n 2007-12-13  Arnaud Charlet  <charlet@adacore.com>\n \n-\t* s-tassta.adb: \n+\t* s-tassta.adb:\n \t(Create_Task): Take into account tasks created by foreign threads.\n \tCode clean up: use constants instead of hard coded values.\n \n@@ -8488,7 +8494,7 @@ PR ada/10768\n \n 2007-12-13  Robert Dewar  <dewar@adacore.com>\n \n-\t* tbuild.ads, tbuild.adb: \n+\t* tbuild.ads, tbuild.adb:\n \tFix location of flag for unrecognized pragma message\n \n 2007-12-13  Robert Dewar  <dewar@adacore.com>\n@@ -8531,7 +8537,7 @@ PR ada/10768\n \t* sem_case.adb: Minor reformatting\n \t* s-fileio.adb: Minor reformattinng\n \t* s-vmexta.ads: Minor typo\n-\t* vxaddr2line.adb: \n+\t* vxaddr2line.adb:\n \tTake into account 'Success' value as per new GNAT warning.\n \n 2007-12-13  Vincent Celier  <celier@adacore.com>\n@@ -8620,7 +8626,7 @@ PR ada/10768\n \n 2007-12-13  Geert Bosch  <bosch@adacore.com>\n \n-\t* s-parame-vxworks.adb: \n+\t* s-parame-vxworks.adb:\n \tUpdate comments to reflect usage of this package by Nucleus.\n \n 2007-12-13  Arnaud Charlet  <charlet@adacore.com>\n@@ -8658,7 +8664,7 @@ PR ada/10768\n \t* decl.c (gnat_to_gnu_entity) <case E_Access_Type>: When computing\n \tthe designated full view, only follow a second level Full_View link\n \tfor Non_Limited_Views of from_limited_with references.\n-\t\n+\n 2007-12-07  Samuel Tardieu  <sam@rfc1149.net>\n \n \tPR ada/15805\n@@ -8705,12 +8711,12 @@ PR ada/10768\n \tparameters of an entry call.\n \n 2007-12-03  Robert Dewar  <dewar@adacore.com>\n-            Samuel Tardieu  <sam@rfc1149.net>\n+\t    Samuel Tardieu  <sam@rfc1149.net>\n \n     \tPR ada/34287\n     \t* sem_util.adb (Safe_To_Capture_Value): Do not capture values\n     \tof variables declared in a library-level package.\n-    \n+\n 2007-12-02  Samuel Tardieu  <sam@rfc1149.net>\n \n \t* clean.adb (Clean_Library_Directory): Use Empty_String'Access intead\n@@ -8764,10 +8770,10 @@ PR ada/10768\n \n 2007-11-26  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n-        PR 34081/C++\n-        * trans.c (Subprogram_Body_to_gnu, Compilation_Unit_to_gnu):\n-        Pass 'false' for the new allocate_struct_function parameter.\n-        * utils.c (build_function_stub): Likewise.\n+\tPR 34081/C++\n+\t* trans.c (Subprogram_Body_to_gnu, Compilation_Unit_to_gnu):\n+\tPass 'false' for the new allocate_struct_function parameter.\n+\t* utils.c (build_function_stub): Likewise.\n \n 2007-11-25  Richard Guenther  <rguenther@suse.de>\n \n@@ -8830,7 +8836,7 @@ PR ada/10768\n \there to ...\n \t* trans.c (gnat_to_gnu) <case N_Free_Statement>: ... here, and don't\n \texpect a super-aligned address for a fat or thin pointer.\n-\t\n+\n 2007-11-14  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* trans.c (call_to_gnu): Always set the source location on the call\n@@ -8932,29 +8938,29 @@ PR ada/10768\n \n 2007-10-15  Robert Dewar  <dewar@adacore.com>\n \n-\t* s-taprop-solaris.adb, s-taprop-vms.adb, s-taprop-mingw.adb, \n+\t* s-taprop-solaris.adb, s-taprop-vms.adb, s-taprop-mingw.adb,\n \ts-taprop-vxworks.adb, s-taprop-posix.adb, a-calend-vms.adb,\n-\ta-calend.adb, a-nuflra.adb, a-tigeau.adb, a-wtgeau.adb, \n-\tchecks.adb, bindgen.adb, eval_fat.adb, exp_fixd.adb, fmap.adb, \n-\tfreeze.adb, g-awk.adb, g-calend.adb, g-diopit.adb, g-expect.adb, \n-\tgnatchop.adb, gnatlink.adb, g-spipat.adb, g-thread.adb, make.adb, \n-\tmdll.adb, mlib.adb, mlib-prj.adb, osint.adb, par-ch3.adb, prj.adb, \n-\tprj-makr.adb, sem_prag.adb, sem_type.adb, s-fatgen.adb, s-fileio.adb, \n-\tsinfo.ads, sinput-d.adb, s-taasde.adb, s-tasdeb.ads, s-tasren.adb, \n+\ta-calend.adb, a-nuflra.adb, a-tigeau.adb, a-wtgeau.adb,\n+\tchecks.adb, bindgen.adb, eval_fat.adb, exp_fixd.adb, fmap.adb,\n+\tfreeze.adb, g-awk.adb, g-calend.adb, g-diopit.adb, g-expect.adb,\n+\tgnatchop.adb, gnatlink.adb, g-spipat.adb, g-thread.adb, make.adb,\n+\tmdll.adb, mlib.adb, mlib-prj.adb, osint.adb, par-ch3.adb, prj.adb,\n+\tprj-makr.adb, sem_prag.adb, sem_type.adb, s-fatgen.adb, s-fileio.adb,\n+\tsinfo.ads, sinput-d.adb, s-taasde.adb, s-tasdeb.ads, s-tasren.adb,\n \ts-tassta.adb, s-tpobop.adb, s-tposen.adb, stylesw.adb, types.ads,\n-\tuintp.adb, validsw.adb, makegpr.adb, a-rbtgso.adb, a-crbtgo.adb, \n-\ta-coorse.adb, a-convec.adb, a-coinve.adb, a-cohama.adb, a-ciorse.adb, \n-\ta-cihama.adb, a-cidlli.adb, a-chtgop.adb, a-cdlili.adb, a-cdlili.adb, \n-\ta-coormu.adb, a-ciormu.adb, a-cihase.adb, a-cohase.adb, a-ciorma.adb, \n-\ta-coorma.adb, a-ztgeau.adb, symbols-vms.adb, a-crdlli.adb, \n+\tuintp.adb, validsw.adb, makegpr.adb, a-rbtgso.adb, a-crbtgo.adb,\n+\ta-coorse.adb, a-convec.adb, a-coinve.adb, a-cohama.adb, a-ciorse.adb,\n+\ta-cihama.adb, a-cidlli.adb, a-chtgop.adb, a-cdlili.adb, a-cdlili.adb,\n+\ta-coormu.adb, a-ciormu.adb, a-cihase.adb, a-cohase.adb, a-ciorma.adb,\n+\ta-coorma.adb, a-ztgeau.adb, symbols-vms.adb, a-crdlli.adb,\n \ta-calari.adb, a-calfor.adb, s-os_lib.adb, s-regpat.adb, a-ngrear.adb:\n \tMinor reformatting.\n \tAdd Unreferenced and Warnings (Off) pragmas for cases of\n \tvariables modified calls where they are IN OUT or OUT parameters and\n \tthe resulting values are not subsequently referenced. In a few cases,\n \twe also remove redundant code found by the new warnings.\n \n-\t* ug_words, vms_data.ads, usage.adb, sem_util.adb, sem_util.ads, \n+\t* ug_words, vms_data.ads, usage.adb, sem_util.adb, sem_util.ads,\n \tsem_warn.adb, sem_warn.ads, sem_res.adb, sem_ch7.adb, sem_ch8.adb,\n \tsem_ch5.adb, opt.ads, lib-xref.adb, lib-xref.ads, exp_smem.adb,\n \tsem_ch11.adb, exp_ch6.adb, einfo.ads, einfo.adb: implement a new\n@@ -9189,7 +9195,7 @@ PR ada/10768\n \n \t* g-soccon-vms.ads: Fix value of MSG_WAITALL.\n \n-\t* gen-soccon.c: \n+\t* gen-soccon.c:\n \tUpdate documentation to note that OpenVMS 8.3 or later must be used\n \tto generate g-soccon-vms.ads.\n \n@@ -9280,13 +9286,13 @@ PR ada/10768\n \n 2007-09-26  Hristian Kirtchev  <kirtchev@adacore.com>\n \n-\t* a-calend-vms.adb, a-calend.adb: \n+\t* a-calend-vms.adb, a-calend.adb:\n \tAdd a section on leap seconds control along with two entities used to\n \tenable and disable leap seconds support. The array Leap_Second_Times is\n \tnow constant and contains hard time values pre-generated. Remove\n \tall elaboration code used to populate the table of leap seconds.\n \n-\t* bindgen.adb: \n+\t* bindgen.adb:\n \tAdd entity Leap_Seconds_Support to the list of global run-time variables\n \talong with a comment on its usage and values.\n \t(Gen_Adainit_Ada): Add code to generate the declaration and import of\n@@ -9347,12 +9353,12 @@ PR ada/10768\n 2007-09-26  Javier Miranda  <miranda@adacore.com>\n \t    Eric Botcazou  <ebotcazou@adacore.com>\n \n-\t* a-tags.adb: \n+\t* a-tags.adb:\n \t(Get_HT_Link/Set_HT_Link): Updated to handle the additional level of\n \t indirection added to the HT_Link component of the TSD. This is required\n \t to statically allocate the TSD.\n \n-\t* a-tags.ads: \n+\t* a-tags.ads:\n \tMinor reordering of the declarations in the private part. Required to\n \tadd a level of indirection to the contents of the TSD component HT_Link.\n \tThis is required to statically allocate the TSD.\n@@ -9425,7 +9431,7 @@ PR ada/10768\n \tof each extra formal of a protected operation to reference the\n \tcorresponding extra formal of the subprogram denoted by the\n \toperation's Protected_Body_Subprogram.\n-\t\n+\n \t* sinfo.ads, sinfo.adb (Is_Expanded_Build_In_Place_Call): New flag on\n \tN_Function_Call nodes.\n \n@@ -9689,14 +9695,14 @@ PR ada/10768\n \ts-stoele.adb, s-strcom.adb, s-strops.adb, s-traceb.adb, s-traent.adb,\n \ts-wchcnv.adb, s-wchcon.adb, s-wchjis.adb, s-addope.adb, s-except.adb,\n \ts-os_lib.adb, s-string.adb, s-utf_32.adb, a-elchha.adb,\n-\ta-chlat1.ads, a-elchha.ads, a-except.ads, g-hesora.ads, g-htable.ads, \n-\tg-speche.ads, par-prag.adb, restrict.adb, restrict.ads, s-assert.ads, \n-\ts-carun8.ads, s-casuti.ads, s-crc32.ads, sem_ch11.adb, sem_prag.adb, \n-\ts-exctab.ads, s-htable.ads, s-imgenu.ads, s-mastop.ads, snames.adb, \n-\tsnames.ads, snames.h, s-purexc.ads, s-secsta.ads, s-soflin.ads, \n-\ts-sopco3.ads, s-sopco4.ads, s-sopco5.ads, s-stache.ads, s-stalib.ads, \n-\ts-stoele.ads, s-strcom.ads, s-strops.ads, s-traceb.ads, s-traent.ads, \n-\ts-unstyp.ads, s-wchcnv.ads, s-wchcon.ads, s-wchjis.ads, s-addope.ads, \n+\ta-chlat1.ads, a-elchha.ads, a-except.ads, g-hesora.ads, g-htable.ads,\n+\tg-speche.ads, par-prag.adb, restrict.adb, restrict.ads, s-assert.ads,\n+\ts-carun8.ads, s-casuti.ads, s-crc32.ads, sem_ch11.adb, sem_prag.adb,\n+\ts-exctab.ads, s-htable.ads, s-imgenu.ads, s-mastop.ads, snames.adb,\n+\tsnames.ads, snames.h, s-purexc.ads, s-secsta.ads, s-soflin.ads,\n+\ts-sopco3.ads, s-sopco4.ads, s-sopco5.ads, s-stache.ads, s-stalib.ads,\n+\ts-stoele.ads, s-strcom.ads, s-strops.ads, s-traceb.ads, s-traent.ads,\n+\ts-unstyp.ads, s-wchcnv.ads, s-wchcon.ads, s-wchjis.ads, s-addope.ads,\n \ts-except.ads, s-os_lib.ads, s-string.ads, s-utf_32.ads: Implement\n \tpragma Compiler_Unit and adds it to relevant library units.\n \n@@ -9743,7 +9749,7 @@ PR ada/10768\n \n 2007-09-12  Thomas Quinot  <quinot@adacore.com>\n \n-\t* g-soccon-solaris-64.ads, g-soccon-hpux-ia64.ads: \n+\t* g-soccon-solaris-64.ads, g-soccon-hpux-ia64.ads:\n \tAdd new constant Thread_Blocking_IO, always True by default, set False\n \ton a per-runtime basis.\n \t(Need_Netdb_Buffer): New constant.\n@@ -9994,7 +10000,7 @@ PR ada/10768\n \t2007-02-07  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* raise-gcc.c (get_region_description_for, get_call_site_action_for,\n-\tget_action_description_for): Replace _Unwind_Word with _uleb128_t \n+\tget_action_description_for): Replace _Unwind_Word with _uleb128_t\n \tand _Unwind_SWord with _sleb128_t.\n \n 2007-09-06  Eric Botcazou  <ebotcazou@adacore.com>\n@@ -10021,7 +10027,7 @@ PR ada/10768\n \n \tPR ada/4720\n \n-\t* gnatchop.adb, gnatfind.adb, gnatlink.adb, gnatls.adb, \n+\t* gnatchop.adb, gnatfind.adb, gnatlink.adb, gnatls.adb,\n \tgnatname.adb, gnatxref.adb, gprep.adb, clean.adb gnatbind.adb\n \t(Check_Version_And_Help): New procedure in package Switch to process\n \tswitches --version and --help.\n@@ -10104,7 +10110,7 @@ PR ada/10768\n \n 2007-08-31  Hristian Kirtchev  <kirtchev@adacore.com>\n \n-        * restrict.adb, namet.adb, par-util.adb: Remove redundant type\n+\t* restrict.adb, namet.adb, par-util.adb: Remove redundant type\n \tconversion.\n \n \t* sem_res.adb (Resolve_Qualified_Expression): Add machinery to detect\n@@ -10423,7 +10429,7 @@ PR ada/10768\n \n 2007-08-14  Thomas Quinot  <quinot@adacore.com>\n \n-\t* g-soccon-interix.ads, a-excpol-interix.adb, a-intnam-interix.ads, \n+\t* g-soccon-interix.ads, a-excpol-interix.adb, a-intnam-interix.ads,\n \ts-osinte-interix.ads, system-interix.ads: Removed.\n \n 2007-08-14  Hristian Kirtchev  <kirtchev@adacore.com>\n@@ -10446,7 +10452,7 @@ PR ada/10768\n 2007-08-14  Robert Dewar  <dewar@adacore.com>\n \t    Ed Schonberg  <schonberg@adacore.com>\n \n-\t* inline.adb, types.ads, inline.ads, frontend.adb, alloc.ads: \n+\t* inline.adb, types.ads, inline.ads, frontend.adb, alloc.ads:\n \tSuppress unmodified in-out parameter warning in some cases\n \tThis patch is a also fairly significant change to the way suppressible\n \tchecks are handled.\n@@ -10467,7 +10473,7 @@ PR ada/10768\n \t    Ed Schonberg  <schonberg@adacore.com>\n \t    Thomas Quinot  <quinot@adacore.com>\n \n-\t* a-stzsup.adb, nlists.adb, lib-util.adb, treepr.adb, \n+\t* a-stzsup.adb, nlists.adb, lib-util.adb, treepr.adb,\n \ta-stwisu.adb, a-strsup.adb: Fix warnings for range\n \ttests optimized out.\n \n@@ -10542,19 +10548,19 @@ PR ada/10768\n \n \t* comperr.adb: Fix problem with suppressing warning messages from gigi\n \n-\t* erroutc.ads, erroutc.adb, errout.ads, \n+\t* erroutc.ads, erroutc.adb, errout.ads,\n \terrout.adb (Write_Eol): Remove trailing spaces before writing the line\n \t(Write_Eol_Keep_Blanks): New procedure to write a line, including\n \tpossible trailing spaces.\n \t(Output_Source_Line): Call Write_Eol_Keep_Blanks to output a source line\n \tFix problem with suppressing warning messages from back end\n \tImprove handling of deleted warnings\n \n-\t* gnat1drv.adb: \n+\t* gnat1drv.adb:\n \tFix problem with suppressing warning messages from back end\n \tHandle setting of Static_Dispatch_Tables flag.\n \n-\t* prepcomp.adb: \n+\t* prepcomp.adb:\n \tFix problem with suppressing warning messages from back end\n \n \t* exp_intr.adb: Improve handling of deleted warnings\n@@ -10754,7 +10760,7 @@ PR ada/10768\n \t    Ed Schonberg  <schonberg@adacore.com>\n \t    Javier Miranda  <miranda@adacore.com>\n \n-\t* exp_util.ads, exp_util.adb: \n+\t* exp_util.ads, exp_util.adb:\n \tThis patch replaces a number of occurrences of explicit tests for N_Null\n \twith calls to Known_Null. This improves tracking of null values, since\n \tKnown_Null also catches null constants, and variables currently known to\n@@ -10805,7 +10811,7 @@ PR ada/10768\n \tincluding gprmake, so that the same sources in the GNAT repository\n \tcan be used by gprbuild.\n \n-\t* prj-com.ads: \n+\t* prj-com.ads:\n \tMajor update of the Project Manager and of the project aware tools,\n \tincluding gprmake, so that the same sources in the GNAT repository\n \tcan be used by gprbuild.\n@@ -10820,7 +10826,7 @@ PR ada/10768\n \tincluding gprmake, so that the same sources in the GNAT repository\n \tcan be used by gprbuild.\n \n-\t* prj-env.ads, prj-env.adb: \n+\t* prj-env.ads, prj-env.adb:\n \tMajor update of the Project Manager and of the project aware tools,\n \tincluding gprmake, so that the same sources in the GNAT repository\n \tcan be used by gprbuild.\n@@ -10836,7 +10842,7 @@ PR ada/10768\n \tincluding gprmake, so that the same sources in the GNAT repository\n \tcan be used by gprbuild.\n \n-\t* prj-nmsc.ads, prj-nmsc.adb: \n+\t* prj-nmsc.ads, prj-nmsc.adb:\n \tUpdate Project Manager to new attribute names for ghprbuild\n \tAllow all valid declarations in configuration project files\n \t(Search_Directories): Detect subunits that are specified with an\n@@ -10855,7 +10861,7 @@ PR ada/10768\n \t(Locate_Directory): Make sure that on Windows '/' is converted to '\\',\n \totherwise creating missing directories will fail.\n \n-\t* prj-attr-pm.adb, prj-tree.ads, prj-proc.ads, prj-proc.adb, \n+\t* prj-attr-pm.adb, prj-tree.ads, prj-proc.ads, prj-proc.adb,\n \tprj-part.ads, prj-part.adb:\n \tMajor update of the Project Manager and of the project aware tools,\n \tincluding gprmake, so that the same sources in the GNAT repository\n@@ -10873,7 +10879,7 @@ PR ada/10768\n \tdefaulted to False. When True, always check against indexes in lower\n \tcase.\n \n-\t* snames.ads, snames.h, snames.adb: \n+\t* snames.ads, snames.h, snames.adb:\n \tUpdate Project Manager to new attribute names for gprbuild\n \tAllow all valid declarations in configuration project files\n \n@@ -10885,7 +10891,7 @@ PR ada/10768\n \tNew switch -gnatI to disable representation clauses\n \tImplement new pragma Implicit_Packing\n \n-\t* usage.adb: \n+\t* usage.adb:\n \tWarning for non-local exception propagation now off by default\n \tAdd warning for unchecked conversion of pointers wi different\n \tconventions.\n@@ -10902,7 +10908,7 @@ PR ada/10768\n \tAdd documentation for new -gnatyS style check\n \tUpdate documentation about SAL and auto-init on Windows.\n \n-\t* gnat_rm.texi: \n+\t* gnat_rm.texi:\n \tAdd documentation for pragma Check_Name and 'Enabled attribute\n \tDocument that Eliminate on dispatching operation is ignored\n \tDocument IDE attributes VCS_Repository_Root and VCS_Patch_Root.\n@@ -11002,7 +11008,7 @@ PR ada/10768\n \t* misc.c (gnat_init_gcc_eh): Use __gnat_eh_personality_sj for the name\n \tof the personality function with SJLJ exceptions.\n \n-        * raise-gcc.c (PERSONALITY_FUNCTION): Use __gnat_eh_personality_sj for\n+\t* raise-gcc.c (PERSONALITY_FUNCTION): Use __gnat_eh_personality_sj for\n \tthe name of the personality function with SJLJ exceptions.\n \n 2007-08-14  Robert Dewar  <dewar@adacore.com>\n@@ -11097,7 +11103,7 @@ PR ada/10768\n 2007-08-14  Ed Schonberg  <schonberg@adacore.com>\n \t    Gary Dismukes  <dismukes@adacore.com>\n \n-\t* exp_aggr.ads, \n+\t* exp_aggr.ads,\n \texp_aggr.adb (Convert_Aggr_In_Allocator): Use Insert_Actions to place\n \texpanded aggregate code before allocator, and ahead of declaration for\n \ttemporary, to prevent access before elaboration when the allocator is\n@@ -11124,8 +11130,8 @@ PR ada/10768\n \n 2007-08-14  Jerome Guitton  <guitton@adacore.com>\n \n-\t* s-taprop-lynxos.adb, s-taprop-tru64.adb, s-taprop-irix.adb, \n-\ts-taprop-hpux-dce.adb, s-taprop-dummy.adb, s-taprop-solaris.adb, \n+\t* s-taprop-lynxos.adb, s-taprop-tru64.adb, s-taprop-irix.adb,\n+\ts-taprop-hpux-dce.adb, s-taprop-dummy.adb, s-taprop-solaris.adb,\n \ts-taprop-vms.adb, s-taprop-posix.adb (Continue_Task, Stop_All_Tasks):\n \tNew functions; dummy implementations.\n \n@@ -11149,11 +11155,11 @@ PR ada/10768\n \n 2007-08-14  Vincent Celier  <celier@adacore.com>\n \n-\t* clean.adb, fmap.adb, sinput-p.adb, sinput-p.ads, gnatcmd.adb, \n+\t* clean.adb, fmap.adb, sinput-p.adb, sinput-p.ads, gnatcmd.adb,\n \tgnatname.adb, makeutl.ads, makeutl.adb, makegpr.adb, mlib-tgt-vms.adb\n-\tmlib-tgt-darwin.adb, mlib-tgt-lynxos.adb, mlib-prj.adb, mlib-tgt.adb, \n-\tmlib-tgt.ads, mlib-tgt-irix.adb mlib-tgt-hpux.adb, mlib-tgt-linux.adb, \n-\tmlib-tgt-solaris.adb, mlib-tgt-vms-alpha.adb, mlib-tgt-vms-ia64.adb, \n+\tmlib-tgt-darwin.adb, mlib-tgt-lynxos.adb, mlib-prj.adb, mlib-tgt.adb,\n+\tmlib-tgt.ads, mlib-tgt-irix.adb mlib-tgt-hpux.adb, mlib-tgt-linux.adb,\n+\tmlib-tgt-solaris.adb, mlib-tgt-vms-alpha.adb, mlib-tgt-vms-ia64.adb,\n \tmlib-tgt-mingw.adb, mlib-tgt-vxworks.adb, mlib-tgt-aix.adb,\n \tmlib-tgt-tru64.adb, mlib.ads, mlib.adb (Create_Sym_Links): New\n \tprocedure.\n@@ -11175,18 +11181,18 @@ PR ada/10768\n \n \t* system-solaris-x86.ads (ZCX_By_Default): Switch to True.\n \t(GCC_ZCX_Support): Switch to True.\n-\t\n+\n \t* s-intman-solaris.adb (Notify_Exception): Call\n \tAdjust_Context_For_Raise before raising, as expected for signal\n \thandlers in general.\n-\t\n+\n \t* s-intman-posix.adb (Notify_Exception): Remove declaration of\n \tAdjust_Context_For_Raise, moved to the spec of this unit to be visible\n \tto other implementation bodies.\n-\t\n+\n \t* s-intman.ads (Adjust_Context_For_Raise): Declare and import here, to\n \tbe visible by multiple implementation bodies.\n-\t\n+\n \t* init.c [VMS section] (__gnat_handle_vms_condition): Adjust context\n \tonly for conditions coming from hardware.\n \t[alpha-tru64 section] (__gnat_adjust_context_for_raise): Implement,\n@@ -11266,7 +11272,7 @@ PR ada/10768\n \n 2007-08-14  Javier Miranda  <miranda@adacore.com>\n \n-\t* a-tags.ads, \n+\t* a-tags.ads,\n \ta-tags.adb (Displace): Associate a message with the raised CE\n \texception.\n \t(To_Addr_Ptr, To_Address, To_Dispatch_Table_Ptr,\n@@ -11303,7 +11309,7 @@ PR ada/10768\n \twon't be an associated Afile).\n \t(Elab_All_Links): Fail if a referenced unit cannot be found\n \n-\t* bindgen.adb: \n+\t* bindgen.adb:\n \tFix comments in bindgen regarding consistency checks done in Bcheck:\n \tthe checks are made across units within a partition, not across several\n \tpartitions.\n@@ -11397,9 +11403,9 @@ PR ada/10768\n \n 2007-08-14  Bob Duff  <duff@adacore.com>\n \n-\t* a-cihama.ads, a-cidlli.ads, a-chtgop.ads, a-chtgop.adb, a-cdlili.ads, \n-\ta-cihase.adb, a-cihase.ads, a-cohase.adb, a-cohase.ads, a-ciorma.ads, \n-\ta-coorma.ads, a-ciormu.ads, a-coormu.ads, a-ciorse.ads, a-cohama.ads, \n+\t* a-cihama.ads, a-cidlli.ads, a-chtgop.ads, a-chtgop.adb, a-cdlili.ads,\n+\ta-cihase.adb, a-cihase.ads, a-cohase.adb, a-cohase.ads, a-ciorma.ads,\n+\ta-coorma.ads, a-ciormu.ads, a-coormu.ads, a-ciorse.ads, a-cohama.ads,\n \ta-cohata.ads, a-convec.adb, a-coinve.ads, a-coinve.adb, a-convec.ads,\n \ta-coorse.ads (Next): Applied pragma Inline.\n \tMake all Containers packages Remote_Types (unless they are already\n@@ -11844,14 +11850,14 @@ PR ada/10768\n \n 2007-07-27  Aurelien Jarno  <aurelien@aurel32.net>\n \n-\t* s-osinte-kfreebsd-gnu.ads ((sigset_t_ptr): Removed, replaced by \n+\t* s-osinte-kfreebsd-gnu.ads ((sigset_t_ptr): Removed, replaced by\n \tanonymous access type.\n \t(pthread_sigmask): Now take an access sigset_t.\n \n 2007-07-05  Joel Sherrill  <joel.sherrill@oarcorp.com>\n \n-        * s-osinte-rtems.ads: Correct prototype of pthread_sigmask.\n-\t\n+\t* s-osinte-rtems.ads: Correct prototype of pthread_sigmask.\n+\n 2007-06-21  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR tree-optimization/25737\n@@ -11879,7 +11885,7 @@ PR ada/10768\n \t* misc.c (LANG_HOOKS_SIGNED_TYPE): Remove.\n \n 2007-06-11  Bob Duff  <duff@adacore.com>\n-            Thomas Quinot  <quinot@adacore.com>\n+\t    Thomas Quinot  <quinot@adacore.com>\n \n \t* g-stsifd-sockets.adb (Create): Work around strange behavior of\n \t'bind' on windows that causes 'connect' to fail intermittently, by\n@@ -11899,8 +11905,8 @@ PR ada/10768\n 2007-06-06  Thomas Quinot  <quinot@adacore.com>\n \t    Bob Duff  <duff@adacore.com>\n \n-        * g-soccon-freebsd.ads, g-soccon-vxworks.ads:,\n-\tg-soccon-aix.ads, g-soccon-irix.ads, g-soccon-hpux.ads, \n+\t* g-soccon-freebsd.ads, g-soccon-vxworks.ads:,\n+\tg-soccon-aix.ads, g-soccon-irix.ads, g-soccon-hpux.ads,\n \tg-soccon-solaris.ads, g-soccon-vms.ads, g-soccon-tru64.ads:  Add new\n \tconstant Thread_Blocking_IO, always True by default, set False\n \ton a per-runtime basis.\n@@ -11976,7 +11982,7 @@ PR ada/10768\n \n 2007-06-06  Bob Duff  <duff@adacore.com>\n \n-\t* g-expect-vms.adb: \n+\t* g-expect-vms.adb:\n \t(Send_Signal, Close): Raise Invalid_Process if the process id is invalid.\n \t* g-expect.ads, g-expect.adb (Send): Avoid useless copy of the string.\n \t(Send_Signal, Close): Raise Invalid_Process if the process id is\n@@ -12031,17 +12037,17 @@ PR ada/10768\n \n 2007-06-06  Arnaud Charlet  <charlet@adacore.com>\n \n-\t* s-taprop-vms.adb, s-taprop-hpux-dce.adb, s-taprop-vxworks.adb, \n-\ts-osprim-posix.adb, s-taprop-posix.adb, s-osprim-vxworks.adb, \n-\ts-taprop-solaris.adb, s-osprim-solaris.adb, s-taprop-dummy.adb, \n-\ts-osprim-unix.adb, s-osinte-freebsd.adb, s-osinte-freebsd.ads, \n-\ts-osinte-lynxos.adb, s-osinte-lynxos.ads, s-taprop-tru64.adb, \n-\ts-taprop-lynxos.adb, s-taprop-irix.adb, s-osinte-tru64.adb, \n-\ts-osinte-tru64.ads, s-taprop-linux.adb, s-parame.ads, \n-\ts-parame-vms-alpha.ads, s-parame-vms-ia64.ads, s-parame-hpux.ads, \n-\ts-parame-vms-restrict.ads, s-parame-ae653.ads, s-parame-vxworks.ads, \n+\t* s-taprop-vms.adb, s-taprop-hpux-dce.adb, s-taprop-vxworks.adb,\n+\ts-osprim-posix.adb, s-taprop-posix.adb, s-osprim-vxworks.adb,\n+\ts-taprop-solaris.adb, s-osprim-solaris.adb, s-taprop-dummy.adb,\n+\ts-osprim-unix.adb, s-osinte-freebsd.adb, s-osinte-freebsd.ads,\n+\ts-osinte-lynxos.adb, s-osinte-lynxos.ads, s-taprop-tru64.adb,\n+\ts-taprop-lynxos.adb, s-taprop-irix.adb, s-osinte-tru64.adb,\n+\ts-osinte-tru64.ads, s-taprop-linux.adb, s-parame.ads,\n+\ts-parame-vms-alpha.ads, s-parame-vms-ia64.ads, s-parame-hpux.ads,\n+\ts-parame-vms-restrict.ads, s-parame-ae653.ads, s-parame-vxworks.ads,\n \ts-taprop-mingw.adb, s-osinte-lynxos-3.ads, s-osinte-lynxos-3.adb,\n-        s-osprim-mingw.adb (Timed_Delay, Timed_Sleep): Register the base\n+\ts-osprim-mingw.adb (Timed_Delay, Timed_Sleep): Register the base\n \ttime when entering this routine to detect a backward clock setting\n \t(manual setting or DST adjustment), to avoid waiting for a longer delay\n \tthan needed.\n@@ -12087,14 +12093,14 @@ PR ada/10768\n \n 2007-06-06  Arnaud Charlet  <charlet@adacore.com>\n \n-\t* system-vxworks-sparcv9.ads, system-solaris-x86.ads, \n-\tsystem-irix-o32.ads, system-freebsd-x86.ads, system-lynxos-ppc.ads, \n-\tsystem-lynxos-x86.ads, system-vxworks-m68k.ads, system-linux-x86.ads, \n-\tsystem-vxworks-mips.ads, system-vxworks-alpha.ads, \n-\tsystem-vxworks-x86.ads, system-linux-ppc.ads, system-mingw.ads, \n-\tsystem-vms-zcx.ads, system-darwin-ppc.ads, system-vxworks-ppc.ads, \n-\tsystem-interix.ads, system-linux-hppa.ads, system-tru64.ads, \n-\tsystem-hpux.ads, system-irix-n32.ads, system-solaris-sparc.ads, \n+\t* system-vxworks-sparcv9.ads, system-solaris-x86.ads,\n+\tsystem-irix-o32.ads, system-freebsd-x86.ads, system-lynxos-ppc.ads,\n+\tsystem-lynxos-x86.ads, system-vxworks-m68k.ads, system-linux-x86.ads,\n+\tsystem-vxworks-mips.ads, system-vxworks-alpha.ads,\n+\tsystem-vxworks-x86.ads, system-linux-ppc.ads, system-mingw.ads,\n+\tsystem-vms-zcx.ads, system-darwin-ppc.ads, system-vxworks-ppc.ads,\n+\tsystem-interix.ads, system-linux-hppa.ads, system-tru64.ads,\n+\tsystem-hpux.ads, system-irix-n32.ads, system-solaris-sparc.ads,\n \tsystem-solaris-sparcv9.ads, system-vms.ads, system.ads,\n \tsystem-vms_64.ads, system-hpux-ia64.ads, system-linux-x86_64.ads,\n \tsystem-linux-ia64.ads: Document mapping between Ada and OS priorities.\n@@ -12117,10 +12123,10 @@ PR ada/10768\n \t* mlib-tgt-specific.adb, mlib-tgt-specific.ads,\n \tmlib-tgt-vms.adb, mlib-tgt-vms.ads: New files.\n \n-\t* mlib-tgt.adb, mlib-tgt.ads, mlib-tgt-darwin.adb, \n-\tmlib-tgt-vxworks.adb, mlib-tgt-mingw.adb, mlib-tgt-lynxos.adb, \n-\tmlib-tgt-linux.adb, mlib-tgt-solaris.adb, mlib-tgt-vms-alpha.adb, \n-\tmlib-tgt-vms-ia64.adb, mlib-tgt-aix.adb, mlib-tgt-irix.adb, \n+\t* mlib-tgt.adb, mlib-tgt.ads, mlib-tgt-darwin.adb,\n+\tmlib-tgt-vxworks.adb, mlib-tgt-mingw.adb, mlib-tgt-lynxos.adb,\n+\tmlib-tgt-linux.adb, mlib-tgt-solaris.adb, mlib-tgt-vms-alpha.adb,\n+\tmlib-tgt-vms-ia64.adb, mlib-tgt-aix.adb, mlib-tgt-irix.adb,\n \tmlib-tgt-hpux.adb, mlib-tgt-tru64.adb: Make a common body for package\n \tMLib.Tgt, containing the default versions of the exported subprograms.\n \tFor each platform, create a specific version of the body of new child\n@@ -12138,7 +12144,7 @@ PR ada/10768\n \t* s-osinte-linux.ads (sigset_t): Bump alignment to match more closely\n \tits C counterpart.\n \tRemove references to Unchecked_Conversion, and use Ada.xxx instead.\n-\tReplace Unchecked_Conversion by Ada.Unchecked_Conversion. \n+\tReplace Unchecked_Conversion by Ada.Unchecked_Conversion.\n \n 2007-06-06  Vasiliy Fofanov  <fofanov@adacore.com>\n \n@@ -12305,23 +12311,23 @@ PR ada/10768\n \t(build_unc_object_type): Likewise.\n \t(declare_debug_type): New function.\n \n-        * ada-tree.def: USE_STMT: removed (not emitted anymore).\n+\t* ada-tree.def: USE_STMT: removed (not emitted anymore).\n \n-        * misc.c (gnat_expand_expr): Call to gnat_expand_stmt removed because\n-        no statement is expandable anymore.\n-        (gnat_init_gcc_eh): Do not initialize the DWARF-2 CFI machinery twice.\n-        (gnat_handle_option): Only allow flag_eliminate_debug_types to be set\n-        when the user requested it explicitely.\n-        (gnat_post_options): By default, set flag_eliminate_unused_debug_types\n-        to 0 for Ada.\n-        (get_alias_set): Return alias set 0 for a type if\n-        TYPE_UNIVERSAL_ALIASING_P is set on its main variant.\n+\t* misc.c (gnat_expand_expr): Call to gnat_expand_stmt removed because\n+\tno statement is expandable anymore.\n+\t(gnat_init_gcc_eh): Do not initialize the DWARF-2 CFI machinery twice.\n+\t(gnat_handle_option): Only allow flag_eliminate_debug_types to be set\n+\twhen the user requested it explicitely.\n+\t(gnat_post_options): By default, set flag_eliminate_unused_debug_types\n+\tto 0 for Ada.\n+\t(get_alias_set): Return alias set 0 for a type if\n+\tTYPE_UNIVERSAL_ALIASING_P is set on its main variant.\n \n-        * ada-tree.h: (TYPE_UNIVERSAL_ALIASING_P): New macro.\n-        (DECL_FUNCTION_STUB): New accessor macro.\n-        (SET_DECL_FUNCTION_STUB): New setter macro.\n+\t* ada-tree.h: (TYPE_UNIVERSAL_ALIASING_P): New macro.\n+\t(DECL_FUNCTION_STUB): New accessor macro.\n+\t(SET_DECL_FUNCTION_STUB): New setter macro.\n \n-        * lang.opt (feliminate-unused-debug-types): Intercept this flag for Ada.\n+\t* lang.opt (feliminate-unused-debug-types): Intercept this flag for Ada.\n \n \t* fe.h (Get_Local_Raise_Call_Entity, Get_RT_Exception_Entity): New\n \tdeclarations.\n@@ -12413,18 +12419,18 @@ PR ada/10768\n 2007-06-06  Vincent Celier  <celier@adacore.com>\n \t    Robert Dewar  <dewar@adacore.com>\n \n-\t* bcheck.adb, binde.adb, binderr.adb, binderr.ads, butil.adb, \n-\tbutil.ads, erroutc.adb, erroutc.ads, errutil.adb, errutil.ads, \n-\terr_vars.ads, exp_tss.adb, exp_tss.ads, fmap.adb, fmap.ads, \n-\tfname.adb, fname.ads, fname-sf.adb, fname-uf.adb, fname-uf.ads, \n-\tlib-sort.adb, lib-util.adb, lib-util.ads, lib-xref.adb, makeutl.ads, \n-\tmakeutl.adb, nmake.adt, osint.adb, osint.ads, osint-b.adb, \n-\tpar-load.adb, prj-attr.adb, prj-dect.adb, prj-err.adb, prj-makr.adb, \n-\tprj-part.adb, prj-pp.adb, prj-proc.adb, prj-tree.adb, prj-tree.ads, \n-\tprj-util.adb, prj-util.ads, scans.adb, scans.ads, sem_ch2.adb, \n-\tsinput-c.adb, styleg-c.adb, tempdir.adb, tempdir.ads, uname.adb, \n+\t* bcheck.adb, binde.adb, binderr.adb, binderr.ads, butil.adb,\n+\tbutil.ads, erroutc.adb, erroutc.ads, errutil.adb, errutil.ads,\n+\terr_vars.ads, exp_tss.adb, exp_tss.ads, fmap.adb, fmap.ads,\n+\tfname.adb, fname.ads, fname-sf.adb, fname-uf.adb, fname-uf.ads,\n+\tlib-sort.adb, lib-util.adb, lib-util.ads, lib-xref.adb, makeutl.ads,\n+\tmakeutl.adb, nmake.adt, osint.adb, osint.ads, osint-b.adb,\n+\tpar-load.adb, prj-attr.adb, prj-dect.adb, prj-err.adb, prj-makr.adb,\n+\tprj-part.adb, prj-pp.adb, prj-proc.adb, prj-tree.adb, prj-tree.ads,\n+\tprj-util.adb, prj-util.ads, scans.adb, scans.ads, sem_ch2.adb,\n+\tsinput-c.adb, styleg-c.adb, tempdir.adb, tempdir.ads, uname.adb,\n \tuname.ads, atree.h, atree.ads, atree.adb, ali-util.ads, ali-util.adb,\n-\tali.ads, ali.adb: \n+\tali.ads, ali.adb:\n \tMove Name_Id, File_Name_Type and Unit_Name_Type from package Types to\n \tpackage Namet. Make File_Name_Type and Unit_Name_Type types derived from\n \tMame_Id. Add new type Path_Name_Type, also derived from Name_Id.\n@@ -12647,7 +12653,7 @@ PR ada/10768\n \tsome use of System.Restrictions in the partition.\n \t(Check_System_Restrictions_Used): New procedure\n \n-        * s-stalib.adb: Remove with of System.Restrictions. No longer needed\n+\t* s-stalib.adb: Remove with of System.Restrictions. No longer needed\n \tsince we only with this unit in the binder file if it is used elsewhere\n \tin the partition.\n \n@@ -12838,7 +12844,7 @@ PR ada/10768\n \t    Bob Duff  <duff@adacore.com>\n \t    Hristian Kirtchev  <kirtchev@adacore.com>\n \n-\t* exp_aggr.ads, exp_aggr.adb: \n+\t* exp_aggr.ads, exp_aggr.adb:\n \t(Build_Record_Aggr_Code): Add missing initialization of secondary tags\n \tin extension aggregates.\n \t(Flatten): Other conditions being met, an aggregate is static if the\n@@ -13377,7 +13383,7 @@ PR ada/10768\n \tobjects.\n \tRemove all handling of with_type clauses.\n \n-        * par-ch10.adb: Remove all handling of with_type clauses.\n+\t* par-ch10.adb: Remove all handling of with_type clauses.\n \n \t* lib-load.ads, lib-load.adb (Load_Main_Source): Do not get the\n \tchecksum if the main source could not be parsed.\n@@ -13420,7 +13426,7 @@ PR ada/10768\n 2007-06-06  Robert Dewar  <dewar@adacore.com>\n \t    Ed Schonberg  <schonberg@adacore.com>\n \n-\t* g-comlin.ads, g-comlin.adb: \n+\t* g-comlin.ads, g-comlin.adb:\n \tAdd new warning for renaming of function return objects\n \n \t* opt.adb (Tree_Write, Tree_Read): Use proper expressions for size\n@@ -13513,7 +13519,7 @@ PR ada/10768\n \n 2007-06-06  Vincent Celier  <celier@adacore.com>\n \n-\t* gnatls.adb: \n+\t* gnatls.adb:\n \tAdd 3 spaces before the default project directory when displaying\n \tthe project search path.\n \tAdd new command line switch '-l' to display license information.\n@@ -13793,7 +13799,7 @@ PR ada/10768\n \t(Copy_ALI_Files): Make sure that an already existing ALI file in the\n \tALI copy dir is writable, before doing the copy.\n \n-\t* mlib-utl.ads, mlib-utl.adb: \n+\t* mlib-utl.ads, mlib-utl.adb:\n \t(Gcc): If length of command line is too long, put the list of object\n \tfiles in a response file, if this is supported by the platform.\n \t(Ar): If invocation of the archive builder is allowed to be done in\n@@ -14494,7 +14500,7 @@ PR ada/10768\n \n 2007-06-06  Javier Miranda  <miranda@adacore.com>\n \n-\t* a-cidlli.ads, a-cdlili.ads, a-cohama.ads, a-coinve.ads, \n+\t* a-cidlli.ads, a-cdlili.ads, a-cohama.ads, a-coinve.ads,\n \ta-convec.ads (Empty_Vector, Empty_Map, Empty_List): Move this object\n \tdeclaration after freezing point of all its associated tagged types;\n \totherwise such types are frozen too early.\n@@ -14612,22 +14618,22 @@ PR ada/10768\n \ts-taprop-hpux-dce.adb, s-traceb-hpux.adb,\n \ts-taprop-linux.adb, s-taprop-dummy.adb, s-osprim-unix.adb,\n \ts-osprim-solaris.adb, s-taprop-solaris.adb, s-taprop-vms.adb,\n-\ts-osprim-mingw.adb, s-taprop-mingw.adb, s-osprim-posix.adb, \n-\ts-taprop-posix.adb, a-exexpr-gcc.adb, a-ststio.adb, a-ststio.ads, \n-\ta-textio.adb, a-textio.ads, a-tideau.adb, a-tideau.ads, a-witeio.adb, \n-\ta-witeio.ads, a-wtdeau.adb, a-wtdeau.ads, g-calend.adb, g-calend.ads, \n-\tg-dirope.adb, g-expect.ads, gnatchop.adb, g-spipat.adb, g-spipat.ads, \n-\ts-direio.adb, s-direio.ads, s-fatgen.adb, s-fatgen.ads, s-parint.adb, \n-\ts-sequio.adb, s-sequio.ads, s-taprop.ads, s-valdec.adb, s-valdec.ads, \n-\ts-valint.adb, s-valint.ads, s-vallld.adb, s-vallld.ads, s-vallli.adb, \n-\ts-vallli.ads, s-valllu.adb, s-valllu.ads, s-valrea.adb, s-valrea.ads, \n-\ts-valuns.adb, s-valuns.ads, s-valuti.adb, s-valuti.ads, xref_lib.adb, \n-\ts-stchop.adb, i-vxwork-x86.ads, a-crbtgo.ads, a-crbtgo.adb, \n-\ta-coorse.ads, a-coorse.adb, a-cohama.ads, a-cohama.adb, a-ciorse.ads, \n-\ta-ciorse.adb, a-cihama.ads, a-cihama.adb, a-chtgop.ads, a-chtgop.ads, \n-\ta-coormu.adb, a-ciormu.adb, a-cihase.adb, a-cihase.ads, a-cohase.adb, \n+\ts-osprim-mingw.adb, s-taprop-mingw.adb, s-osprim-posix.adb,\n+\ts-taprop-posix.adb, a-exexpr-gcc.adb, a-ststio.adb, a-ststio.ads,\n+\ta-textio.adb, a-textio.ads, a-tideau.adb, a-tideau.ads, a-witeio.adb,\n+\ta-witeio.ads, a-wtdeau.adb, a-wtdeau.ads, g-calend.adb, g-calend.ads,\n+\tg-dirope.adb, g-expect.ads, gnatchop.adb, g-spipat.adb, g-spipat.ads,\n+\ts-direio.adb, s-direio.ads, s-fatgen.adb, s-fatgen.ads, s-parint.adb,\n+\ts-sequio.adb, s-sequio.ads, s-taprop.ads, s-valdec.adb, s-valdec.ads,\n+\ts-valint.adb, s-valint.ads, s-vallld.adb, s-vallld.ads, s-vallli.adb,\n+\ts-vallli.ads, s-valllu.adb, s-valllu.ads, s-valrea.adb, s-valrea.ads,\n+\ts-valuns.adb, s-valuns.ads, s-valuti.adb, s-valuti.ads, xref_lib.adb,\n+\ts-stchop.adb, i-vxwork-x86.ads, a-crbtgo.ads, a-crbtgo.adb,\n+\ta-coorse.ads, a-coorse.adb, a-cohama.ads, a-cohama.adb, a-ciorse.ads,\n+\ta-ciorse.adb, a-cihama.ads, a-cihama.adb, a-chtgop.ads, a-chtgop.ads,\n+\ta-coormu.adb, a-ciormu.adb, a-cihase.adb, a-cihase.ads, a-cohase.adb,\n \ta-cohase.ads, a-swuwha.ads, a-ciormu.ads, a-coormu.ads, a-rbtgso.ads,\n-\ta-stunha.ads, a-ciorma.adb, a-coorma.adb, a-ztdeau.adb, a-ztdeau.ads, \n+\ta-stunha.ads, a-ciorma.adb, a-coorma.adb, a-ztdeau.adb, a-ztdeau.ads,\n \ta-ztexio.adb, a-ztexio.ads: Addition of null-exclusion to anonymous\n \taccess types.\n \tUpdate documentation.\n@@ -14644,7 +14650,7 @@ PR ada/10768\n \tsystem-mingw.ads, system-vms-zcx.ads, system-vxworks-ppc.ads,\n \tsystem-vxworks-alpha.ads, system-vms_64.ads, system-darwin-ppc.ads,\n \tsystem-vxworks-x86.ads, system-linux-ppc.ads, system-linux-hppa.ads,\n-        system-hpux-ia64.ads, targparm.adb,\n+\tsystem-hpux-ia64.ads, targparm.adb,\n \ttargparm.ads (Functions_Return_By_DSP_On_Target): Removed\n \n \t* system.ads: Move Functions_Return_By_DSP to obsolete section,\n@@ -14801,7 +14807,7 @@ PR ada/10768\n \t* a-calari.ads, a-calari.adb (\"+\", \"-\", Difference): Add calls to\n \ttarget independent routines in Ada.Calendar.\n \n-\t* a-calfor.ads, a-calfor.adb: \n+\t* a-calfor.ads, a-calfor.adb:\n \tCode cleanup and addition of validity checks in various routines.\n \t(Day_Of_Week, Split, Time_Of): Add call to target independent routine in\n \tAda.Calendar.\n@@ -14811,7 +14817,7 @@ PR ada/10768\n \n 2007-04-06  Olivier Hainque  <hainque@adacore.com>\n \n-\t* adaint.c: \n+\t* adaint.c:\n \t(convert_addresses): Adjust prototype and dummy definition to expect an\n \t extra file_name argument.\n \n@@ -15830,7 +15836,7 @@ PR ada/10768\n 2007-04-06  Ed Schonberg  <schonberg@adacore.com>\n \t    Javier Miranda  <miranda@adacore.com>\n \n-\t* lib-xref.ads, lib-xref.adb: \n+\t* lib-xref.ads, lib-xref.adb:\n \tModify the loop that collects type references, to include interface\n \ttypes that the type implements. List each of these interfaces when\n \tbuilding the entry for the type.\n@@ -16156,15 +16162,15 @@ PR ada/10768\n \t(Preserve_Full_Attributes): The full entity list is not an attribute\n \tthat must be preserved from full to partial view.\n \n-        * sem_dist.adb (Add_RAS_Dereference_TSS):\n-        Change primitive name to _Call so it cannot clash with any legal\n-        identifier, and be special-cased in Check_Completion.\n-        Mark the full view of the designated type for the RACW associated with\n-        a RAS as Comes_From_Source to get proper view switching when installing\n-        private declarations.\n-        Provite a placeholder nested package body along with the nested spec\n-        to have a place for Append_RACW_Bodies to generate the calling stubs\n-        and stream attributes.\n+\t* sem_dist.adb (Add_RAS_Dereference_TSS):\n+\tChange primitive name to _Call so it cannot clash with any legal\n+\tidentifier, and be special-cased in Check_Completion.\n+\tMark the full view of the designated type for the RACW associated with\n+\ta RAS as Comes_From_Source to get proper view switching when installing\n+\tprivate declarations.\n+\tProvite a placeholder nested package body along with the nested spec\n+\tto have a place for Append_RACW_Bodies to generate the calling stubs\n+\tand stream attributes.\n \n 2007-04-06  Ed Schonberg  <schonberg@adacore.com>\n \t    Robert Dewar  <dewar@adacore.com>\n@@ -16321,7 +16327,7 @@ PR ada/10768\n \n 2007-04-06  Eric Botcazou  <botcazou@adacore.com>\n \n-\t* s-stchop-vxworks.adb: \n+\t* s-stchop-vxworks.adb:\n \t(Stack_Check): Raise Storage_Error if the argument has wrapped around.\n \n 2007-04-06  Robert Dewar  <dewar@adacore.com>\n@@ -16435,7 +16441,7 @@ PR ada/10768\n 2007-02-07  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* raise-gcc.c (get_region_description_for, get_call_site_action_for,\n-\tget_action_description_for): Replace _Unwind_Word with _uleb128_t \n+\tget_action_description_for): Replace _Unwind_Word with _uleb128_t\n \tand _Unwind_SWord with _sleb128_t.\n \n 2007-02-06  Paolo Bonzini  <bonzini@gnu.org>\n@@ -16589,7 +16595,7 @@ PR ada/10768\n \tpart of Ada.Calendar: all subprogram raise Unimplemented.\n \t(Split_W_Offset): Temp function body, raising Unimplemented\n \n-\t* a-calend.ads, a-calend-vms.ads: \n+\t* a-calend.ads, a-calend-vms.ads:\n \tAdd imported variable Invalid_TZ_Offset used to designate targets unable\n \tto support time zones.\n \t(Unimplemented): Temporary function raised by the body of new\n@@ -16627,13 +16633,13 @@ PR ada/10768\n 2006-10-31  Arnaud Charlet  <charlet@adacore.com>\n \t    Jose Ruiz  <ruiz@adacore.com>\n \n-\t* s-osinte-posix.adb, s-osinte-linux.ads, s-osinte-freebsd.adb, \n-\ts-osinte-freebsd.ads, s-osinte-solaris-posix.ads, s-osinte-hpux.ads, \n+\t* s-osinte-posix.adb, s-osinte-linux.ads, s-osinte-freebsd.adb,\n+\ts-osinte-freebsd.ads, s-osinte-solaris-posix.ads, s-osinte-hpux.ads,\n \ts-osinte-darwin.adb, s-osinte-darwin.ads, s-osinte-lynxos-3.ads,\n \ts-osinte-lynxos-3.adb (To_Target_Priority): New function maps from\n \tSystem.Any_Priority to a POSIX priority on the target.\n \n-\t* system-linux-ia64.ads: \n+\t* system-linux-ia64.ads:\n \tExtend range of Priority types on Linux to use the whole range made\n \tavailable by the system.\n \n@@ -16654,12 +16660,12 @@ PR ada/10768\n \tPriority_Specific_Dispatching pragmas when determining if Round Robin\n \tmust be used for scheduling the task.\n \n-\t* system-linux-x86_64.ads, system-linux-x86.ads, \n+\t* system-linux-x86_64.ads, system-linux-x86.ads,\n \tsystem-linux-ppc.ads: Extend range of Priority types on Linux to use\n \tthe whole range made available by the system.\n \n-\t* s-taprop-vms.adb, s-taprop-mingw.adb, s-taprop-irix.adb, \n-\ts-taprop-tru64.adb, s-taprop-linux.adb, s-taprop-hpux-dce.adb, \n+\t* s-taprop-vms.adb, s-taprop-mingw.adb, s-taprop-irix.adb,\n+\ts-taprop-tru64.adb, s-taprop-linux.adb, s-taprop-hpux-dce.adb,\n \ts-taprop-lynxos.adb (Finalize_TCB): invalidate the stack-check cache\n \twhen deallocating the TCB in order to avoid potential references to\n \tdeallocated data.\n@@ -16678,14 +16684,14 @@ PR ada/10768\n \n 2006-10-31  Robert Dewar  <dewar@adacore.com>\n \n-\t* system-vms_64.ads, system-darwin-ppc.ads, system-vxworks-x86.ads, \n-\tsystem-linux-hppa.ads, system-hpux-ia64.ads, \n-\tsystem-lynxos-ppc.ads, system-lynxos-x86.ads, system-tru64.ads, \n-\tsystem-vxworks-sparcv9.ads, system-solaris-x86.ads, \n-\tsystem-irix-o32.ads, system-irix-n32.ads, system-hpux.ads, \n-\tsystem-vxworks-m68k.ads, system-vxworks-mips.ads, system-interix.ads, \n-\tsystem-solaris-sparc.ads, system-solaris-sparcv9.ads, system-vms.ads, \n-\tsystem-mingw.ads, system-vms-zcx.ads, system-vxworks-ppc.ads, \n+\t* system-vms_64.ads, system-darwin-ppc.ads, system-vxworks-x86.ads,\n+\tsystem-linux-hppa.ads, system-hpux-ia64.ads,\n+\tsystem-lynxos-ppc.ads, system-lynxos-x86.ads, system-tru64.ads,\n+\tsystem-vxworks-sparcv9.ads, system-solaris-x86.ads,\n+\tsystem-irix-o32.ads, system-irix-n32.ads, system-hpux.ads,\n+\tsystem-vxworks-m68k.ads, system-vxworks-mips.ads, system-interix.ads,\n+\tsystem-solaris-sparc.ads, system-solaris-sparcv9.ads, system-vms.ads,\n+\tsystem-mingw.ads, system-vms-zcx.ads, system-vxworks-ppc.ads,\n \tsystem-vxworks-alpha.ads, system.ads: Add pragma Warnings(Off,\n \tDefault_Bit_Order) to kill constant condition warnings for references\n \tto this switch.\n@@ -16703,7 +16709,7 @@ PR ada/10768\n \n \t* mlib-fil.ads, mlib-fil.adb: (Append_To): New function\n \n-\t* mlib-tgt-darwin.adb: \n+\t* mlib-tgt-darwin.adb:\n \tUse Append_To, instead of Ext_To, when building the library file name\n \t(Flat_Namespace): New global variable.\n \t(No_Shared_Libgcc_Switch): Rename to No_Shared_Libgcc_Options.\n@@ -16720,7 +16726,7 @@ PR ada/10768\n \n 2006-10-31  Jose Ruiz  <ruiz@adacore.com>\n \n-\t* s-osinte-vxworks.ads, s-osinte-vxworks.adb: \n+\t* s-osinte-vxworks.ads, s-osinte-vxworks.adb:\n \t(getpid): New body for this function that uses the underlying taskIdSelf\n \tfunction for VxWorks 5 and VxWorks 6 in kernel mode.\n \t(unsigned_int): New type, modular to allow logical bit operations.\n@@ -16953,11 +16959,11 @@ PR ada/10768\n \n \t* lib.adb, lib.ads: (In_Predefined_Unit): New functions\n \n-\t* a-finali.ads, a-ngcoty.ads, a-strbou.ads, a-stream.ads, a-strmap.ads, \n-\ta-strunb.ads, a-stwibo.ads, a-stwima.ads, a-stwiun.ads, a-taside.ads, \n-\ta-coorse.ads, a-convec.ads, a-coinve.ads, a-cohama.ads, a-ciorse.ads, \n-\ta-cihama.ads, a-cihase.ads, a-cohase.ads, a-ciorma.ads, a-coorma.ads, \n-\ta-ciormu.ads, a-coormu.ads, a-stzbou.ads, a-stzmap.ads, a-stzunb.ads, \n+\t* a-finali.ads, a-ngcoty.ads, a-strbou.ads, a-stream.ads, a-strmap.ads,\n+\ta-strunb.ads, a-stwibo.ads, a-stwima.ads, a-stwiun.ads, a-taside.ads,\n+\ta-coorse.ads, a-convec.ads, a-coinve.ads, a-cohama.ads, a-ciorse.ads,\n+\ta-cihama.ads, a-cihase.ads, a-cohase.ads, a-ciorma.ads, a-coorma.ads,\n+\ta-ciormu.ads, a-coormu.ads, a-stzbou.ads, a-stzmap.ads, a-stzunb.ads,\n \ta-except-2005.ads: Add pragma Preelaborable_Warning\n \n 2006-10-31  Robert Dewar  <dewar@adacore.com>\n@@ -17057,7 +17063,7 @@ PR ada/10768\n \n 2006-10-31  Javier Miranda  <miranda@adacore.com>\n \n-\t* a-tags.ads, a-tags.adb: \n+\t* a-tags.ads, a-tags.adb:\n \t(Predefined_DT): New function that improves readability of the code.\n \t(Get_Predefined_Prim_Op_Address, Set_Predefined_Prim_Op_Address,\n \tInherit_DT): Use the new function Predefined_DT to improve code\n@@ -17215,10 +17221,10 @@ PR ada/10768\n \tImplement insertion character ~ (insert string)\n \t(First_Node): Minor adjustments to get better placement.\n \n-\t* frontend.adb: \n+\t* frontend.adb:\n \tImplement new -gnatl=xxx switch to output listing to file\n \n-\t* gnat1drv.adb: \n+\t* gnat1drv.adb:\n \tImplement new -gnatl=xxx switch to output listing to file\n \n \t* opt.ads: (Warn_On_Questionable_Missing_Paren): New switch\n@@ -17239,12 +17245,12 @@ PR ada/10768\n \tinvoked with a relative path.\n \t(Executable_Name): New function taking string parameters.\n \n-\t* osint-c.ads, osint-c.adb: \n+\t* osint-c.ads, osint-c.adb:\n \tImplement new -gnatl=xxx switch to output listing to file\n \n \t* sinput-d.adb: Change name Creat_Debug_File to Create_Debug_File\n \n-\t* switch-c.adb: \n+\t* switch-c.adb:\n \tImplement new -gnatl=xxx switch to output listing to file\n \tRecognize new -gnatL switch\n \t(no longer keep in old warning about old style usage)\n@@ -17295,7 +17301,7 @@ PR ada/10768\n \t    Javier Miranda  <miranda@adacore.com>\n \t    Robert Dewar  <dewar@adacore.com>\n \n-\t* exp_attr.adb: \n+\t* exp_attr.adb:\n \t(Expand_Access_To_Protected_Op): If the context indicates that an access\n \tto a local operation may be transfered outside of the object, create an\n \taccess to the wrapper operation that must be used in an external call.\n@@ -18141,7 +18147,7 @@ PR ada/10768\n \n \t* rtsfind.adb: Remove s-polint from comment as it exists no more.\n \n-\t* rtsfind.ads: \n+\t* rtsfind.ads:\n \tMove entity RE_Get_Active_Partition_Id to package System.DSA_Services.\n \tMove all the entities in obsolete package System.PolyORB_Interface to\n \tSystem.Partition_Interface.\n@@ -18593,7 +18599,7 @@ PR ada/10768\n \n 2006-10-31  Robert Dewar  <dewar@adacore.com>\n \n-\t* s-osinte-tru64.adb: \n+\t* s-osinte-tru64.adb:\n \tMark Asm statements Volatile to prevent warnings (seems a\n \treasonable change anyway)\n \tFixes new warnings\n@@ -18681,7 +18687,7 @@ PR ada/10768\n \t(No_Restrictions): New constant used to clean up code and follow\n \tpreelaborate constraints.\n \n-\t* s-stalib.adb: \n+\t* s-stalib.adb:\n \tAdd System.Restrictions dependence, referenced directly from the\n \tbinder generated file.\n \n@@ -18812,7 +18818,7 @@ PR ada/10768\n \n 2006-10-31  Pat Rogers  <rogers@adacore.com>\n \n-\t* a-rttiev.ads, a-rttiev.adb: \n+\t* a-rttiev.ads, a-rttiev.adb:\n \tThis is a significant redesign primarily for the sake of automatic\n \ttimer task termination but also to fix a design flaw.\n \tTherefore we are now using an RTS lock, instead of a protected\n@@ -18845,7 +18851,7 @@ PR ada/10768\n \tClarify that inlining is not always possible\n \tUpdate documentation on pragma Unchecked_Union.\n \n-\t* gnat_rm.texi: \n+\t* gnat_rm.texi:\n \tAdd documentation for new extended version of pragma Obsolescent\n \tAdd documentation for implementation defined attribute 'Stub_Type.\n \tAdd note on use of Volatile in asm statements\n@@ -18859,7 +18865,7 @@ PR ada/10768\n \tClarify difference between No_Dispatching_Calls & No_Dispatch.\n \tAdd documentation for pragma Restrictions (No_Elaboration_Code)\n \n-\t* gnat-style.texi: \n+\t* gnat-style.texi:\n \tAdd comments on layout of subprogram local variables in the\n \tpresence of nested subprograms.\n \n@@ -18876,7 +18882,7 @@ PR ada/10768\n \n \t* usage.adb: Update documentation.\n \n-\t* validsw.ads, validsw.adb: \n+\t* validsw.ads, validsw.adb:\n \tAdd definition of Validity_Check_Components and implement -gnatVe/E\n \n \t* vms_data.ads: Add missing VMS qualifiers.\n@@ -18917,10 +18923,10 @@ PR ada/10768\n \n \t* s-soflin.adb: Minor reformatting\n \n-\t* s-stoele.ads: \n+\t* s-stoele.ads:\n \tAdd comment about odd qualification in Storage_Offset declaration\n \n-\t* s-strxdr.adb: \n+\t* s-strxdr.adb:\n \tRemove unnecessary 'in' keywords for formal parameters.\n \n \t* treeprs.adt: Minor reformatting\n@@ -18948,7 +18954,7 @@ PR ada/10768\n \n \t* lang.opt: Woverlength-strings: New option.\n \n-\t* nmake.adt: \n+\t* nmake.adt:\n \tUpdate copyright, since nmake.ads and nmake.adb have changed.\n \n \t* osint-b.ads, osint-b.adb (Time_From_Last_Bind): removed function .\n@@ -19232,9 +19238,9 @@ PR ada/10768\n \n 2006-02-17  Jose Ruiz  <ruiz@adacore.com>\n \n-\t* s-taprop-irix.adb, s-taprop-hpux-dce.adb, s-taprop-linux.adb, \n-\ts-taprop-solaris.adb, s-taprop-vms.adb, s-taprop-mingw.adb, \n-\ts-taprop-posix.adb, s-taprop-vxworks.adb, s-taprop-lynxos.adb, \n+\t* s-taprop-irix.adb, s-taprop-hpux-dce.adb, s-taprop-linux.adb,\n+\ts-taprop-solaris.adb, s-taprop-vms.adb, s-taprop-mingw.adb,\n+\ts-taprop-posix.adb, s-taprop-vxworks.adb, s-taprop-lynxos.adb,\n \ts-taprop-tru64.adb (Set_False, Set_True, Suspend_Until_True): Add\n \tAbort_Defer/Undefer pairs to avoid the possibility of a task being\n \taborted while owning a lock.\n@@ -19344,7 +19350,7 @@ PR ada/10768\n \n 2006-02-17  Matthew Heaney  <heaney@adacore.com>\n \n-\t* a-convec.ads, a-convec.adb: \n+\t* a-convec.ads, a-convec.adb:\n \t(operator \"&\"): handle potential overflow for large index types\n \t(Insert): removed Contraint_Error when using large index types\n \t(Insert_Space): removed Constraint_Error for large index types\n@@ -19363,7 +19369,7 @@ PR ada/10768\n \t* s-wchcnv.adb: Document handling of [ on output (we do not change\n \tthis to [\"5B\"] and the new comments say why not.\n \n-\t* gnat_ugn.texi: \n+\t* gnat_ugn.texi:\n \tAdd note for -gnatVo that this now includes the cases of type\n \tconversions and qualified expressions.\n \tAdd comments on handling of brackets encoding for Text_IO\n@@ -19483,11 +19489,11 @@ PR ada/10768\n \n 2006-02-13  Arnaud Charlet  <charlet@adacore.com>\n \n-\t* s-osinte-darwin.adb, s-osinte-darwin.ads, s-osinte-vxworks.ads, \n-\ts-osinte-solaris.ads, s-osinte-linux.ads, s-osinte-freebsd.ads, \n-\ts-osinte-solaris-posix.ads, s-osinte-lynxos-3.ads, s-osinte-lynxos.ads, \n-\ts-osinte-tru64.ads, s-osinte-aix.ads, s-osinte-irix.ads, \n-\ts-osinte-hpux-dce.ads, s-osinte-linux-hppa.ads, \n+\t* s-osinte-darwin.adb, s-osinte-darwin.ads, s-osinte-vxworks.ads,\n+\ts-osinte-solaris.ads, s-osinte-linux.ads, s-osinte-freebsd.ads,\n+\ts-osinte-solaris-posix.ads, s-osinte-lynxos-3.ads, s-osinte-lynxos.ads,\n+\ts-osinte-tru64.ads, s-osinte-aix.ads, s-osinte-irix.ads,\n+\ts-osinte-hpux-dce.ads, s-osinte-linux-hppa.ads,\n \ts-osinte-linux-alpha.ads, s-inmaop-posix.adb (sigset_t_ptr): Removed,\n \treplaced by anonymous access type.\n \t(pthread_sigmask): Now take an access sigset_t\n@@ -19498,8 +19504,8 @@ PR ada/10768\n \n 2006-02-13  Pascal Obry  <obry@adacore.com>\n \n-\t* s-taprop-posix.adb, s-taprop-vxworks.adb, s-taprop-tru64.adb, \n-\ts-taprop-lynxos.adb, s-taprop-irix.adb, s-taprop-hpux-dce.adb, \n+\t* s-taprop-posix.adb, s-taprop-vxworks.adb, s-taprop-tru64.adb,\n+\ts-taprop-lynxos.adb, s-taprop-irix.adb, s-taprop-hpux-dce.adb,\n \ts-taprop-linux.adb, s-taprop-solaris.adb,\n \ts-taprop-vms.adb (Create_Task): Remove task adjustment code. This\n \tadjustement is already done when calling this routine.\n@@ -19588,7 +19594,7 @@ PR ada/10768\n \t    Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* ada-tree.h: (TYPE_UNCHECKED_UNION_P): Deleted.\n-\t\n+\n \t* gigi.h (value_factor_p): Add prototype and description, now public.\n \n \t* decl.c (gnat_to_gnu_field): Don't attempt BLKmode to integral type\n@@ -19814,8 +19820,8 @@ PR ada/10768\n \n 2006-02-13  Matthew Heaney  <heaney@adacore.com>\n \n-\t* a-rbtgso.adb, a-crbtgo.adb, a-crbtgk.adb, a-coorse.adb, \n-\ta-cohama.adb, a-ciorse.adb, a-cihama.adb, a-cihase.adb, \n+\t* a-rbtgso.adb, a-crbtgo.adb, a-crbtgk.adb, a-coorse.adb,\n+\ta-cohama.adb, a-ciorse.adb, a-cihama.adb, a-cihase.adb,\n \ta-cohase.adb: All explicit raise statements now include an exception\n \tmessage.\n \n@@ -19872,7 +19878,7 @@ PR ada/10768\n \n 2006-02-13  Robert Dewar  <dewar@adacore.com>\n \n-\t* rtsfind.adb, exp_prag.adb, lib-writ.adb, par-labl.adb, \n+\t* rtsfind.adb, exp_prag.adb, lib-writ.adb, par-labl.adb,\n \tsem_case.adb: Minor code reorganization (not Present should be No)\n \n 2006-02-13  Geert Bosch  <bosch@adacore.com>\n@@ -20011,7 +20017,7 @@ PR ada/10768\n \tDefine Tree_Version_String as a dynamic string.\n \t(Default_Stack_Size): new variable, used to handle switch -d.\n \n-\t* par-prag.adb: \n+\t* par-prag.adb:\n \tFor pragma Ada_2005, remove stuff about setting Ada_Version_Explicit\n \tonly for main unit.\n \tAdd pragma Ada_2005 (synonym for Ada_05)\n@@ -21023,7 +21029,7 @@ PR ada/10768\n \tMulti_Unit_Index_Character after OpenVMS_On_Target gets its definitive\n \tvalue.\n \t(Get_Target_Parameters): Set OpenVMS_On_Target if openvms.\n-\t\n+\n \t* targparm.ads: Add special exception to license.\n \n \t* g-os_lib.ads, g-os_lib.adb (Get_Target_Debuggable_Suffix): New\n@@ -21144,11 +21150,11 @@ PR ada/10768\n \t(Set_Output): new subprogram\n \t(Put): now uses the value of Current_Out to know if the output has to be\n \tsend to stderr or stdout.\n-\t\n+\n \t* s-stausa.ads: Complete implementation.\n \n \t* switch-b.adb: Added handling of -u switch for dynamic stack analysis.\n-\t\n+\n \t* impunit.adb (Non_Imp_File_Names_05): Add Ada.Task_Termination to the\n \tlist of Ada 05 files.\n \t(GNAT Library Units): Add AltiVec files.\n@@ -21320,7 +21326,7 @@ PR ada/10768\n \t* namet.ads (Name_Buffer): Adjust size to reflect increase on max line\n \tlength.\n \n-\t* scn.adb, scng.adb: \n+\t* scn.adb, scng.adb:\n \tAlways check line length against the absolute supported maximum,\n \tHostparm.Max_Line_Length.\n \n@@ -21432,7 +21438,7 @@ PR ada/10768\n \t* par-ch12.adb (P_Formal_Derived_Type_Definition): In Ada 2005, handle\n \tuse of \"limited\" in declaration.\n \n-\t* sinfo.ads, sinfo.adb: \n+\t* sinfo.ads, sinfo.adb:\n \tFormal derived types can carry an explicit \"limited\" indication.\n \n \t* sem_ch3.adb: Add with and use of Targparm.\n@@ -21657,7 +21663,7 @@ PR ada/10768\n \n 2005-12-09  Robert Dewar  <dewar@adacore.com>\n \n-\t* g-soccon.ads: \n+\t* g-soccon.ads:\n \tFurther comment fixes to make the status of the default file clear\n \n \t* s-bitops.adb: Clarify comment for Bits_Array\n@@ -21732,7 +21738,7 @@ PR ada/10768\n \n \tPR ada/24855\n \t* raise-gcc.c: Add missing stdarg.h include.\n- \n+\n 2005-11-16  Richard Guenther  <rguenther@suse.de>\n \n \t* Make-lang.in (ada/decl.o): Add $(EXPR_H) dependency.\n@@ -21760,7 +21766,7 @@ PR ada/10768\n \tg-soccon-solaris-64.ads, g-soccon-linux-64.ads,\n \tg-soccon-linux-x86.ads: New files.\n \n-\t* g-socthi-mingw.adb: \n+\t* g-socthi-mingw.adb:\n \t(Socket_Error_Message): Remove redundant use of GNAT.Sockets.Constants\n \n \t* g-socthi-vxworks.ads, g-socthi-vms.ads, g-socthi-mingw.ads\n@@ -21849,10 +21855,10 @@ PR ada/10768\n \t* s-mastop-tru64.adb (Pop_Frame): Remove redundant parentheses in if\n \tstatement.\n \n-\t* s-taprop-solaris.adb: \n+\t* s-taprop-solaris.adb:\n \tChange some <= to =, to avoid new warning\n \n-\t* a-exexda.adb, prj-proc.adb: \n+\t* a-exexda.adb, prj-proc.adb:\n \tFix obvious typo (Num_Tracebacks compared <= 0 instead of < 0)\n \tFix obvious typo (Total_Errors_Detected <= 0 should be = 0)\n \n@@ -21866,7 +21872,7 @@ PR ada/10768\n \n 2005-11-14  Matthew Gingell  <gingell@adacore.com>\n \n-\t* system-lynxos-ppc.ads, system-lynxos-x86.ads: \n+\t* system-lynxos-ppc.ads, system-lynxos-x86.ads:\n \tIncrease default priority on Lynx from 15 to 17, and meet the Ada\n \trequirement that Default_Priority be ((Priority'First +\n \tPriority'Last) / 2) by increasing the range of Interrupt_Priority.\n@@ -22075,12 +22081,12 @@ PR ada/10768\n \n 2005-11-14  Matthew Heaney  <heaney@adacore.com>\n \n-\t* a-crbtgo.ads, a-crbtgo.adb, a-coorse.ads, a-coorse.adb, a-convec.ads, \n-\ta-convec.adb, a-coinve.ads, a-coinve.adb, a-cohama.ads, a-cohama.adb, \n-\ta-ciorse.ads, a-ciorse.adb, a-cihama.ads, a-cihama.adb, a-cidlli.ads, \n-\ta-cidlli.adb, a-cdlili.ads, a-cdlili.adb, a-coormu.adb, a-ciormu.adb, \n-\ta-cihase.adb, a-cihase.ads, a-cohase.adb, a-cohase.ads, a-ciorma.ads, \n-\ta-coorma.ads, a-ciormu.ads, a-coormu.ads, a-ciorma.adb, a-coorma.adb: \n+\t* a-crbtgo.ads, a-crbtgo.adb, a-coorse.ads, a-coorse.adb, a-convec.ads,\n+\ta-convec.adb, a-coinve.ads, a-coinve.adb, a-cohama.ads, a-cohama.adb,\n+\ta-ciorse.ads, a-ciorse.adb, a-cihama.ads, a-cihama.adb, a-cidlli.ads,\n+\ta-cidlli.adb, a-cdlili.ads, a-cdlili.adb, a-coormu.adb, a-ciormu.adb,\n+\ta-cihase.adb, a-cihase.ads, a-cohase.adb, a-cohase.ads, a-ciorma.ads,\n+\ta-coorma.ads, a-ciormu.ads, a-coormu.ads, a-ciorma.adb, a-coorma.adb:\n \tCompiles against the spec for ordered maps described in sections\n \tA.18.6 of the most recent (August 2005) AI-302 draft.\n \n@@ -22186,7 +22192,7 @@ PR ada/10768\n \t* binde.adb: Implement new AD/ED for Elaborate_All/Elaborate desirable\n \t(Elab_Error_Msg): Use -da to include internal unit links, not -de.\n \n-\t* lib-writ.ads, lib-writ.adb: \n+\t* lib-writ.ads, lib-writ.adb:\n \tImplement new AD/ED for Elaborate_All/Elaborate desirable\n \tUse new Elaborate_All_Desirable flag in N_With_Clause node\n \n@@ -22264,7 +22270,7 @@ PR ada/10768\n \n \t* Makefile.rtl: Add new instantiations of system.fat_gen\n \n-\t* s-fatflt.ads, s-fatlfl.ads, s-fatllf.ads, s-fatsfl.ads: \n+\t* s-fatflt.ads, s-fatlfl.ads, s-fatllf.ads, s-fatsfl.ads:\n \tChange name of instantiated package for better consistency\n \twith newly added system.fat_gen instantiations.\n \n@@ -22855,7 +22861,7 @@ PR ada/10768\n \t    Jose Ruiz  <ruiz@adacore.com>\n \t    Pascal Obry  <obry@adacore.com>\n \n-\t* gnat_ugn.texi: \n+\t* gnat_ugn.texi:\n \tDocument that -fstack-check is needed for strict compliance with the\n \tAda 95 Reference Manual.\n \tCorrect reference to VAX systems to meet HP guidelines"}, {"sha": "f0211dc8f2eb13ab8a56e5c57c8272d85722042f", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e81dbc753bb36f496b3566ad5d80ccced070fc5/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e81dbc753bb36f496b3566ad5d80ccced070fc5/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=9e81dbc753bb36f496b3566ad5d80ccced070fc5", "patch": "@@ -1457,7 +1457,7 @@ ifeq ($(strip $(filter-out mipsel linux%,$(arch) $(osys))),)\n endif\n \n ifeq ($(strip $(filter-out powerpc% linux%,$(arch) $(osys))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n+  LIBGNAT_TARGET_PAIRS_COMMON = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n@@ -1470,9 +1470,22 @@ ifeq ($(strip $(filter-out powerpc% linux%,$(arch) $(osys))),)\n   s-tasinf.adb<s-tasinf-linux.adb \\\n   s-taspri.ads<s-taspri-posix-noaltstack.ads \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n-  g-sercom.adb<g-sercom-linux.adb \\\n+  g-sercom.adb<g-sercom-linux.adb\n+\n+  LIBGNAT_TARGET_PAIRS_32 = \\\n   system.ads<system-linux-ppc.ads\n \n+  LIBGNAT_TARGET_PAIRS_64 = \\\n+  system.ads<system-linux-ppc64.ads\n+\n+  ifeq ($(strip $(MULTISUBDIR)),/64)\n+    LIBGNAT_TARGET_PAIRS = \\\n+    $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_64)\n+  else\n+    LIBGNAT_TARGET_PAIRS = \\\n+    $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_32)\n+  endif\n+\n   TOOLS_TARGET_PAIRS =  \\\n     mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n     indepsw.adb<indepsw-gnu.adb"}, {"sha": "5f591bb7dc2d2b418f29e5d7ce148f10e1a78728", "filename": "gcc/ada/system-linux-ppc64.ads", "status": "added", "additions": 155, "deletions": 0, "changes": 155, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e81dbc753bb36f496b3566ad5d80ccced070fc5/gcc%2Fada%2Fsystem-linux-ppc64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e81dbc753bb36f496b3566ad5d80ccced070fc5/gcc%2Fada%2Fsystem-linux-ppc64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-ppc64.ads?ref=9e81dbc753bb36f496b3566ad5d80ccced070fc5", "patch": "@@ -0,0 +1,155 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                        (GNU-Linux/PPC64 Version)                         --\n+--                                                                          --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package System is\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 0.000_001;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   pragma Preelaborable_Initialization (Address);\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := 64;\n+   Memory_Size  : constant := 2 ** 64;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := High_Order_First;\n+   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   --  0 .. 98 corresponds to the system priority range 1 .. 99.\n+   --\n+   --  If the scheduling policy is SCHED_FIFO or SCHED_RR the runtime makes use\n+   --  of the entire range provided by the system.\n+   --\n+   --  If the scheduling policy is SCHED_OTHER the only valid system priority\n+   --  is 1 and other values are simply ignored.\n+\n+   Max_Priority           : constant Positive := 97;\n+   Max_Interrupt_Priority : constant Positive := 98;\n+\n+   subtype Any_Priority       is Integer      range  0 .. 98;\n+   subtype Priority           is Any_Priority range  0 .. 97;\n+   subtype Interrupt_Priority is Any_Priority range 98 .. 98;\n+\n+   Default_Priority : constant Priority := 48;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := False;\n+   Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   Preallocated_Stacks       : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := True;\n+   Stack_Check_Limits        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Always_Compatible_Rep     : constant Boolean := False;\n+   Suppress_Standard_Library : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := True;\n+   GCC_ZCX_Support           : constant Boolean := True;\n+\n+end System;"}]}