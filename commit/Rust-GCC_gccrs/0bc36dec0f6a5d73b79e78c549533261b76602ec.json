{"sha": "0bc36dec0f6a5d73b79e78c549533261b76602ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJjMzZkZWMwZjZhNWQ3M2I3OWU3OGM1NDk1MzMyNjFiNzY2MDJlYw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2016-11-03T21:25:12Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2016-11-03T21:25:12Z"}, "message": "re PR bootstrap/77993 (bootstrap failure on PowerPC/Linux)\n\n2016-11-03  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\tPR target/77993\n\t* config/rs6000/rs6000.h (FLOAT128_IBM_P): Do not allow IFmode or\n\tICmode unless we have standard PowerPC floating point.\n\t* config/rs6000/rs6000.md (FP iterator): Likewise.\n\t(FMOVE128 iterator): Likewise.\n\nFrom-SVN: r241833", "tree": {"sha": "a2a81bdd66df0b4f4256b74868d3b1cba0712dc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2a81bdd66df0b4f4256b74868d3b1cba0712dc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0bc36dec0f6a5d73b79e78c549533261b76602ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bc36dec0f6a5d73b79e78c549533261b76602ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bc36dec0f6a5d73b79e78c549533261b76602ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bc36dec0f6a5d73b79e78c549533261b76602ec/comments", "author": null, "committer": null, "parents": [{"sha": "6905c577d1c41317205f16ea137844f825a9af71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6905c577d1c41317205f16ea137844f825a9af71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6905c577d1c41317205f16ea137844f825a9af71"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "b45b91ddfdba5e5de2c247baac69c62c23930ed6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bc36dec0f6a5d73b79e78c549533261b76602ec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bc36dec0f6a5d73b79e78c549533261b76602ec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0bc36dec0f6a5d73b79e78c549533261b76602ec", "patch": "@@ -1,3 +1,11 @@\n+2016-11-03  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR target/77993\n+\t* config/rs6000/rs6000.h (FLOAT128_IBM_P): Do not allow IFmode or\n+\tICmode unless we have standard PowerPC floating point.\n+\t* config/rs6000/rs6000.md (FP iterator): Likewise.\n+\t(FMOVE128 iterator): Likewise.\n+\n 2016-11-03  Jakub Jelinek  <jakub@redhat.com>\n \t    Alexandre Oliva  <aoliva@redhat.com>\n \t    Jason Merrill  <jason@redhat.com>"}, {"sha": "2d0dd62a3cf807742b1e65dea9f5303ee2714548", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bc36dec0f6a5d73b79e78c549533261b76602ec/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bc36dec0f6a5d73b79e78c549533261b76602ec/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=0bc36dec0f6a5d73b79e78c549533261b76602ec", "patch": "@@ -442,14 +442,15 @@ extern const char *host_detect_local_cpu (int argc, const char **argv);\n    point.  KFmode was added as a way to represent IEEE 128-bit floating point,\n    even if the default for long double is the IBM long double format.\n    Similarly IFmode is the IBM long double format even if the default is IEEE\n-   128-bit.  */\n+   128-bit.  Don't allow IFmode if -msoft-float.  */\n #define FLOAT128_IEEE_P(MODE)\t\t\t\t\t\t\\\n   ((TARGET_IEEEQUAD && ((MODE) == TFmode || (MODE) == TCmode))\t\t\\\n    || ((MODE) == KFmode) || ((MODE) == KCmode))\n \n #define FLOAT128_IBM_P(MODE)\t\t\t\t\t\t\\\n   ((!TARGET_IEEEQUAD && ((MODE) == TFmode || (MODE) == TCmode))\t\t\\\n-   || ((MODE) == IFmode) || ((MODE) == ICmode))\n+   || (TARGET_HARD_FLOAT && TARGET_FPRS\t\t\t\t\t\\\n+       && ((MODE) == IFmode) || ((MODE) == ICmode)))\n \n /* Helper macros to say whether a 128-bit floating point type can go in a\n    single vector register, or whether it needs paired scalar values.  */"}, {"sha": "43270f82fb422d352a147ccf917ef07a43ee9cb7", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bc36dec0f6a5d73b79e78c549533261b76602ec/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bc36dec0f6a5d73b79e78c549533261b76602ec/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=0bc36dec0f6a5d73b79e78c549533261b76602ec", "patch": "@@ -376,7 +376,7 @@\n   (TF \"TARGET_HARD_FLOAT\n    && (TARGET_FPRS || TARGET_E500_DOUBLE)\n    && TARGET_LONG_DOUBLE_128\")\n-  (IF \"TARGET_LONG_DOUBLE_128\")\n+  (IF \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_LONG_DOUBLE_128\")\n   (KF \"TARGET_FLOAT128_TYPE\")\n   (DD \"TARGET_DFP\")\n   (TD \"TARGET_DFP\")])\n@@ -398,7 +398,7 @@\n (define_mode_iterator FMOVE64 [DF DD])\n (define_mode_iterator FMOVE64X [DI DF DD])\n (define_mode_iterator FMOVE128 [(TF \"TARGET_LONG_DOUBLE_128\")\n-\t\t\t\t(IF \"TARGET_LONG_DOUBLE_128\")\n+\t\t\t\t(IF \"FLOAT128_IBM_P (IFmode)\")\n \t\t\t\t(TD \"TARGET_HARD_FLOAT && TARGET_FPRS\")])\n \n (define_mode_iterator FMOVE128_FPR [(TF \"FLOAT128_2REG_P (TFmode)\")"}]}