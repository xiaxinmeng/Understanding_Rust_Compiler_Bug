{"sha": "61e1d511e100823268b33f4311e67d2c6911ec3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFlMWQ1MTFlMTAwODIzMjY4YjMzZjQzMTFlNjdkMmM2OTExZWMzYw==", "commit": {"author": {"name": "Loren J. Rittle", "email": "ljrittle@acm.org", "date": "2009-09-11T15:37:40Z"}, "committer": {"name": "Loren J. Rittle", "email": "ljrittle@gcc.gnu.org", "date": "2009-09-11T15:37:40Z"}, "message": "configure.ac (*-*-freebsd*): Enable check for __stack_chk_fail.\n\n2009-09-11  Loren J. Rittle  <ljrittle@acm.org>\n\n\t* configure.ac (*-*-freebsd*): Enable check for __stack_chk_fail.\n\t* configure: Regenerate.\n\nFrom-SVN: r151638", "tree": {"sha": "a3789c0e2e4e07856555b69c309d7e76debbec3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3789c0e2e4e07856555b69c309d7e76debbec3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61e1d511e100823268b33f4311e67d2c6911ec3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61e1d511e100823268b33f4311e67d2c6911ec3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61e1d511e100823268b33f4311e67d2c6911ec3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61e1d511e100823268b33f4311e67d2c6911ec3c/comments", "author": null, "committer": null, "parents": [{"sha": "8a47c6c41fed4fda85ec2dceaa34863686109f94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a47c6c41fed4fda85ec2dceaa34863686109f94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a47c6c41fed4fda85ec2dceaa34863686109f94"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "82f22add50af65be03826840704d51a2802614b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61e1d511e100823268b33f4311e67d2c6911ec3c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61e1d511e100823268b33f4311e67d2c6911ec3c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61e1d511e100823268b33f4311e67d2c6911ec3c", "patch": "@@ -4,6 +4,9 @@\n \tto match the system compiler's configuration at inflection point.\n \tAdd comment to remark a remaining difference with system compiler.\n \n+\t* configure.ac (*-*-freebsd*): Enable check for __stack_chk_fail.\n+\t* configure: Regenerate.\n+\n 2009-09-11  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n \tFrom Jie Zhang <jie.zhang@analog.com>:"}, {"sha": "2e9385e17561ab664b7219b9bc2004c0105f4dbe", "filename": "gcc/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61e1d511e100823268b33f4311e67d2c6911ec3c/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61e1d511e100823268b33f4311e67d2c6911ec3c/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=61e1d511e100823268b33f4311e67d2c6911ec3c", "patch": "@@ -24388,7 +24388,7 @@ else\n \t # simply assert that glibc does provide this, which is true for all\n \t # realistically usable GNU/Hurd configurations.\n \t gcc_cv_libc_provides_ssp=yes;;\n-       *-*-darwin*)\n+       *-*-darwin* | *-*-freebsd*)\n \t ac_fn_c_check_func \"$LINENO\" \"__stack_chk_fail\" \"ac_cv_func___stack_chk_fail\"\n if test \"x$ac_cv_func___stack_chk_fail\" = x\"\"yes; then :\n   gcc_cv_libc_provides_ssp=yes"}, {"sha": "ca6e3c2ac51d097d95778c77978aac2d6bd4cc05", "filename": "gcc/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61e1d511e100823268b33f4311e67d2c6911ec3c/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61e1d511e100823268b33f4311e67d2c6911ec3c/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=61e1d511e100823268b33f4311e67d2c6911ec3c", "patch": "@@ -3720,7 +3720,7 @@ AC_CACHE_CHECK(__stack_chk_fail in target C library,\n \t # simply assert that glibc does provide this, which is true for all\n \t # realistically usable GNU/Hurd configurations.\n \t gcc_cv_libc_provides_ssp=yes;;\n-       *-*-darwin*)\n+       *-*-darwin* | *-*-freebsd*)\n \t AC_CHECK_FUNC(__stack_chk_fail,[gcc_cv_libc_provides_ssp=yes],\n            [echo \"no __stack_chk_fail on this target\"])\n         ;;"}]}