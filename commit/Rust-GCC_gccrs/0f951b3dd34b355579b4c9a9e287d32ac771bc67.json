{"sha": "0f951b3dd34b355579b4c9a9e287d32ac771bc67", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY5NTFiM2RkMzRiMzU1NTc5YjRjOWE5ZTI4N2QzMmFjNzcxYmM2Nw==", "commit": {"author": {"name": "Sebastian Huber", "email": "sebastian.huber@embedded-brains.de", "date": "2021-01-18T06:23:46Z"}, "committer": {"name": "Sebastian Huber", "email": "sebastian.huber@embedded-brains.de", "date": "2021-01-18T06:24:56Z"}, "message": "RTEMS: Fix libgomp build\n\nlibgomp/\n\n\t* config/rtems/sem.h (gomp_sem_getcount): New function.", "tree": {"sha": "117066a63309f86891b0384d512dda7670e718e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/117066a63309f86891b0384d512dda7670e718e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f951b3dd34b355579b4c9a9e287d32ac771bc67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f951b3dd34b355579b4c9a9e287d32ac771bc67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f951b3dd34b355579b4c9a9e287d32ac771bc67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f951b3dd34b355579b4c9a9e287d32ac771bc67/comments", "author": {"login": "sebhub", "id": 932056, "node_id": "MDQ6VXNlcjkzMjA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhub", "html_url": "https://github.com/sebhub", "followers_url": "https://api.github.com/users/sebhub/followers", "following_url": "https://api.github.com/users/sebhub/following{/other_user}", "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions", "organizations_url": "https://api.github.com/users/sebhub/orgs", "repos_url": "https://api.github.com/users/sebhub/repos", "events_url": "https://api.github.com/users/sebhub/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhub/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sebhub", "id": 932056, "node_id": "MDQ6VXNlcjkzMjA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhub", "html_url": "https://github.com/sebhub", "followers_url": "https://api.github.com/users/sebhub/followers", "following_url": "https://api.github.com/users/sebhub/following{/other_user}", "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions", "organizations_url": "https://api.github.com/users/sebhub/orgs", "repos_url": "https://api.github.com/users/sebhub/repos", "events_url": "https://api.github.com/users/sebhub/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhub/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3b41bde961713ff4af7e18011126434c497edba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3b41bde961713ff4af7e18011126434c497edba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3b41bde961713ff4af7e18011126434c497edba"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "0cd74153b053b9817bae5583f324993d61f8bc1b", "filename": "libgomp/config/rtems/sem.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f951b3dd34b355579b4c9a9e287d32ac771bc67/libgomp%2Fconfig%2Frtems%2Fsem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f951b3dd34b355579b4c9a9e287d32ac771bc67/libgomp%2Fconfig%2Frtems%2Fsem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Frtems%2Fsem.h?ref=0f951b3dd34b355579b4c9a9e287d32ac771bc67", "patch": "@@ -47,6 +47,11 @@ static inline void gomp_sem_post (gomp_sem_t *sem)\n   _Semaphore_Post (sem);\n }\n \n+static inline int gomp_sem_getcount (gomp_sem_t *sem)\n+{\n+  return (int) __atomic_load_n (&sem->_count, MEMMODEL_RELAXED);\n+}\n+\n static inline void gomp_sem_destroy (gomp_sem_t *sem)\n {\n   _Semaphore_Destroy (sem);"}]}