{"sha": "03e0a65f6e0a4bd3e292e1e6a8328a591ec86f58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNlMGE2NWY2ZTBhNGJkM2UyOTJlMWU2YTgzMjhhNTkxZWM4NmY1OA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-10-14T08:54:16Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-10-14T08:54:16Z"}, "message": "* fold-const.c (fold): Detect rotates built from BIT_XOR_EXPRs.\n\nFrom-SVN: r29966", "tree": {"sha": "9dd5fa34a653eaeb4a14a807b4d0914591d2c07b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9dd5fa34a653eaeb4a14a807b4d0914591d2c07b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03e0a65f6e0a4bd3e292e1e6a8328a591ec86f58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03e0a65f6e0a4bd3e292e1e6a8328a591ec86f58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03e0a65f6e0a4bd3e292e1e6a8328a591ec86f58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03e0a65f6e0a4bd3e292e1e6a8328a591ec86f58/comments", "author": null, "committer": null, "parents": [{"sha": "0918eca0642ecac8d0617d4db57ec90d79eeda42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0918eca0642ecac8d0617d4db57ec90d79eeda42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0918eca0642ecac8d0617d4db57ec90d79eeda42"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "04652a70b289028a36b38e98bf86bc9a78e01108", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03e0a65f6e0a4bd3e292e1e6a8328a591ec86f58/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03e0a65f6e0a4bd3e292e1e6a8328a591ec86f58/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=03e0a65f6e0a4bd3e292e1e6a8328a591ec86f58", "patch": "@@ -1,3 +1,7 @@\n+Thu Oct 14 02:54:13 1999  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* fold-const.c (fold): Detect rotates built from BIT_XOR_EXPRs.\n+\n Thu Oct 14 02:18:19 1999  Marc Espie <espie@cvs.openbsd.org>\n \n \t* combine.c (simplify_logical): Recognize xor pattern that encodes"}, {"sha": "8327419ffe25b2cf9af8263182cdd7be7574602e", "filename": "gcc/fold-const.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03e0a65f6e0a4bd3e292e1e6a8328a591ec86f58/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03e0a65f6e0a4bd3e292e1e6a8328a591ec86f58/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=03e0a65f6e0a4bd3e292e1e6a8328a591ec86f58", "patch": "@@ -5097,11 +5097,15 @@ fold (expr)\n       if (t1 != NULL_TREE)\n \treturn t1;\n \n+     bit_rotate:\n       /* (A << C1) | (A >> C2) if A is unsigned and C1+C2 is the size of A\n \t is a rotate of A by C1 bits.  */\n       /* (A << B) | (A >> (Z - B)) if A is unsigned and Z is the size of A\n \t is a rotate of A by B bits.  */\n \n+      /* Both transformations noted above also apply to when the inner\n+\t operation is an XOR.  */\n+\n       code0 = TREE_CODE (arg0);\n       code1 = TREE_CODE (arg1);\n       if (((code0 == RSHIFT_EXPR && code1 == LSHIFT_EXPR)\n@@ -5170,7 +5174,9 @@ fold (expr)\n \treturn non_lvalue (convert (type, arg0));\n       if (integer_all_onesp (arg1))\n \treturn fold (build1 (BIT_NOT_EXPR, type, arg0));\n-      goto associate;\n+      /* See if this can be simplified into a rotate first.  If that\n+\t is unsuccessful we will jump to the association code.  */\n+      goto bit_rotate;\n \n     case BIT_AND_EXPR:\n     bit_and:"}]}