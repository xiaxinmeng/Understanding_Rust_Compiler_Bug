{"sha": "f6ddf131f0afe5a45af7ae248dcb3f1d38da5aaf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZkZGYxMzFmMGFmZTVhNDVhZjdhZTI0OGRjYjNmMWQzOGRhNWFhZg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-08-07T20:32:30Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-08-07T20:32:30Z"}, "message": "re PR target/45213 (\"suffix or operands invalid for `push'\" triggered by optimisations on x86_64)\n\n\tPR target/45213\n\t* config/i386/i386.c (ix86_print_operand): Handle 'q' operand modifier\n\tto output 32bit SFmode immediate as 8 byte sign extended value.\n\ntestsuite/ChangeLog:\n\n\tPR target/45213\n\t* gcc.target/i386/pr45213.c: New test.\n\nFrom-SVN: r162983", "tree": {"sha": "e72deaa2acf169265ab3484a1e149be5b0fe2908", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e72deaa2acf169265ab3484a1e149be5b0fe2908"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6ddf131f0afe5a45af7ae248dcb3f1d38da5aaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6ddf131f0afe5a45af7ae248dcb3f1d38da5aaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6ddf131f0afe5a45af7ae248dcb3f1d38da5aaf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6ddf131f0afe5a45af7ae248dcb3f1d38da5aaf/comments", "author": null, "committer": null, "parents": [{"sha": "a4ed58ce81720f6d94a3149fd3b664a59357f9eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4ed58ce81720f6d94a3149fd3b664a59357f9eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4ed58ce81720f6d94a3149fd3b664a59357f9eb"}], "stats": {"total": 53, "additions": 39, "deletions": 14}, "files": [{"sha": "6516544f8d592d7f8caf86771b1632e83fd50dcd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6ddf131f0afe5a45af7ae248dcb3f1d38da5aaf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6ddf131f0afe5a45af7ae248dcb3f1d38da5aaf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6ddf131f0afe5a45af7ae248dcb3f1d38da5aaf", "patch": "@@ -1,3 +1,10 @@\n+2010-08-07  Uros Bizjak  <ubizjak@gmail.com>\n+\t    H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/45213\n+\t* config/i386/i386.c (ix86_print_operand): Handle 'q' operand modifier\n+\tto output 32bit SFmode immediate as 8 byte sign extended value.\n+\n 2010-08-07  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n \n \t* config/arm/linux-atomic.c (SUBWORD_VAL_CAS): Instantiate with\n@@ -11,16 +18,16 @@\n \n 2010-08-07  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n-        * config/arm/cortex-a9.md: Rewrite VFP Pipeline description.\n-        * config/arm/arm.c (arm_xscale_tune): Initialize sched_adjust_cost.\n-         (arm_fastmul_tune,arm_slowmul_tune, arm_9e_tune): Likewise.\n-         (arm_adjust_cost): Split into xscale_sched_adjust_cost and a\n-         generic part.\n-         (cortex_a9_sched_adjust_cost): New function.\n-         (xscale_sched_adjust_cost): New function.\n-        * config/arm/arm-protos.h (struct tune_params): New field\n-        sched_adjust_cost.\n-        * config/arm/arm-cores.def: Adjust costs for cortex-a9.\n+\t* config/arm/cortex-a9.md: Rewrite VFP Pipeline description.\n+\t* config/arm/arm.c (arm_xscale_tune): Initialize sched_adjust_cost.\n+\t(arm_fastmul_tune,arm_slowmul_tune, arm_9e_tune): Likewise.\n+\t(arm_adjust_cost): Split into xscale_sched_adjust_cost and a\n+\tgeneric part.\n+\t(cortex_a9_sched_adjust_cost): New function.\n+\t(xscale_sched_adjust_cost): New function.\n+\t* config/arm/arm-protos.h (struct tune_params): New field\n+\tsched_adjust_cost.\n+\t* config/arm/arm-cores.def: Adjust costs for cortex-a9.\n \n 2010-08-06  Eric Botcazou  <ebotcazou@adacore.com>\n "}, {"sha": "1877730bc03da6c90de7b134adc0563a21e86f10", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6ddf131f0afe5a45af7ae248dcb3f1d38da5aaf/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6ddf131f0afe5a45af7ae248dcb3f1d38da5aaf/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=f6ddf131f0afe5a45af7ae248dcb3f1d38da5aaf", "patch": "@@ -12921,7 +12921,11 @@ ix86_print_operand (FILE *file, rtx x, int code)\n \n       if (ASSEMBLER_DIALECT == ASM_ATT)\n \tputc ('$', file);\n-      fprintf (file, \"0x%08lx\", (long unsigned int) l);\n+      /* Sign extend 32bit SFmode immediate to 8 bytes.  */\n+      if (code == 'q')\n+\tfprintf (file, \"0x%08llx\", (unsigned long long) (int) l);\n+      else\n+\tfprintf (file, \"0x%08x\", (unsigned int) l);\n     }\n \n   /* These float cases don't actually occur as immediate operands.  */"}, {"sha": "18f42a43fbf5c9566f1b03fd4595c7ef359841b4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6ddf131f0afe5a45af7ae248dcb3f1d38da5aaf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6ddf131f0afe5a45af7ae248dcb3f1d38da5aaf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f6ddf131f0afe5a45af7ae248dcb3f1d38da5aaf", "patch": "@@ -1,13 +1,18 @@\n+2010-08-07  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/45213\n+\t* gcc.target/i386/pr45213.c: New test.\n+\n 2010-08-07  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/45143\n \t* gfortran.dg/fmt_error_11.f03: New test.\n \n 2010-08-07  Marcus Shawcroft <marcus.shawcroft@arm.com>\n \n-        * lib/target-supports.exp: (check_effective_target_sync_int_long):\n-        Add arm*-*-linux-gnueabi.\n-        (check_effective_target_sync_char_short): Likewise.\n+\t* lib/target-supports.exp (check_effective_target_sync_int_long):\n+\tAdd arm*-*-linux-gnueabi.\n+\t(check_effective_target_sync_char_short): Likewise.\n \n 2010-08-06  Thomas Koenig  <tkoenig@gcc.gnu.org>\n "}, {"sha": "c575fb55052166f2e102325c3a36e1c3181bdd13", "filename": "gcc/testsuite/gcc.target/i386/pr45213.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6ddf131f0afe5a45af7ae248dcb3f1d38da5aaf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45213.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6ddf131f0afe5a45af7ae248dcb3f1d38da5aaf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45213.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45213.c?ref=f6ddf131f0afe5a45af7ae248dcb3f1d38da5aaf", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-Os -fno-omit-frame-pointer\" } */\n+\n+void f (float, float, float, float, float, float, float, float, float, float);\n+\n+void g (void)\n+{\n+  f (0, 0, 0, 0, 0, 0, 0, 0, -1, 1);\n+}"}]}