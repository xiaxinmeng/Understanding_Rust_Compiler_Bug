{"sha": "eb11134d0c4e4db623aefe433c9613632ef8618e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIxMTEzNGQwYzRlNGRiNjIzYWVmZTQzM2M5NjEzNjMyZWY4NjE4ZQ==", "commit": {"author": {"name": "Paul Keir", "email": "paul.keir@uws.ac.uk", "date": "2020-06-15T13:31:26Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-06-15T13:31:26Z"}, "message": "libstdc++: Fix char_traits move with overlap\n\nUpon constexpr evaluation, char_traits move uses copy_backward, but its\nlast argument should be to the range end rather than its beginning.\n\n2020-06-12  Paul Keir  <paul.keir@uws.ac.uk>\n\n\t* include/bits/char_traits.h (char_traits::move): constexpr move with\n\toverlap was using copy_backward incorrectly.\n\t* testsuite/21_strings/char_traits/requirements/constexpr_functions_c++20.cc:\n\tNew test.", "tree": {"sha": "c1ea1f74218954d572521a5203bcda7f7a741dce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1ea1f74218954d572521a5203bcda7f7a741dce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb11134d0c4e4db623aefe433c9613632ef8618e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb11134d0c4e4db623aefe433c9613632ef8618e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb11134d0c4e4db623aefe433c9613632ef8618e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb11134d0c4e4db623aefe433c9613632ef8618e/comments", "author": {"login": "pkeir", "id": 1690875, "node_id": "MDQ6VXNlcjE2OTA4NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1690875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pkeir", "html_url": "https://github.com/pkeir", "followers_url": "https://api.github.com/users/pkeir/followers", "following_url": "https://api.github.com/users/pkeir/following{/other_user}", "gists_url": "https://api.github.com/users/pkeir/gists{/gist_id}", "starred_url": "https://api.github.com/users/pkeir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pkeir/subscriptions", "organizations_url": "https://api.github.com/users/pkeir/orgs", "repos_url": "https://api.github.com/users/pkeir/repos", "events_url": "https://api.github.com/users/pkeir/events{/privacy}", "received_events_url": "https://api.github.com/users/pkeir/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e46dad5d8f09cd344911e2df428a9d38981c2351", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e46dad5d8f09cd344911e2df428a9d38981c2351", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e46dad5d8f09cd344911e2df428a9d38981c2351"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "c623a6713f62d43c56b54c277e421594de604a3c", "filename": "libstdc++-v3/include/bits/char_traits.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb11134d0c4e4db623aefe433c9613632ef8618e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb11134d0c4e4db623aefe433c9613632ef8618e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h?ref=eb11134d0c4e4db623aefe433c9613632ef8618e", "patch": "@@ -196,7 +196,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       if (std::is_constant_evaluated())\n \t{\n \t  if (__s1 > __s2 && __s1 < __s2 + __n)\n-\t    std::copy_backward(__s2, __s2 + __n, __s1);\n+\t    std::copy_backward(__s2, __s2 + __n, __s1 + __n);\n \t  else\n \t    std::copy(__s2, __s2 + __n, __s1);\n \t  return __s1;"}, {"sha": "6358640c1cb7a0f573b79f487c66c527e2bad6c2", "filename": "libstdc++-v3/testsuite/21_strings/char_traits/requirements/constexpr_functions_c++20.cc", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb11134d0c4e4db623aefe433c9613632ef8618e/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fconstexpr_functions_c%2B%2B20.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb11134d0c4e4db623aefe433c9613632ef8618e/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fconstexpr_functions_c%2B%2B20.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fconstexpr_functions_c%2B%2B20.cc?ref=eb11134d0c4e4db623aefe433c9613632ef8618e", "patch": "@@ -0,0 +1,52 @@\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+// Copyright (C) 2017-2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <string>\n+\n+template<typename CT>\n+  constexpr bool\n+  test_move()\n+  {\n+    using char_type = typename CT::char_type;\n+    char_type s1[3] = {1, 2, 3};\n+    CT::move(s1+1, s1, 2);\n+    return s1[0]==char_type{1} && s1[1]==char_type{1} && s1[2]==char_type{2};\n+  }\n+\n+#ifndef __cpp_lib_constexpr_char_traits\n+# error Feature-test macro for constexpr char_traits is missing\n+#elif __cpp_lib_constexpr_char_traits != 201611\n+# error Feature-test macro for constexpr char_traits has the wrong value\n+#endif\n+\n+static_assert( test_move<std::char_traits<char>>() );\n+#ifdef _GLIBCXX_USE_WCHAR_T\n+static_assert( test_move<std::char_traits<wchar_t>>() );\n+#endif\n+#ifdef _GLIBCXX_USE_CHAR8_T\n+static_assert( test_move<std::char_traits<char8_t>>() );\n+#endif\n+static_assert( test_move<std::char_traits<char16_t>>() );\n+static_assert( test_move<std::char_traits<char32_t>>() );\n+\n+struct C { unsigned char c; };\n+constexpr bool operator==(const C& c1, const C& c2) { return c1.c == c2.c; }\n+constexpr bool operator<(const C& c1, const C& c2) { return c1.c < c2.c; }\n+static_assert( test_move<std::char_traits<C>>() );"}]}