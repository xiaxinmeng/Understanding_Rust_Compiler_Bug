{"sha": "e6d926d7d35a8675134b34e02a2932451d81bf1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZkOTI2ZDdkMzVhODY3NTEzNGIzNGUwMmEyOTMyNDUxZDgxYmYxZA==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2011-02-07T10:26:48Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2011-02-07T10:26:48Z"}, "message": "revert r169877 patch for PR47225\n\nFrom-SVN: r169878", "tree": {"sha": "9b73d9351bcf9dcbf700c433166d3c55fd04af80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b73d9351bcf9dcbf700c433166d3c55fd04af80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6d926d7d35a8675134b34e02a2932451d81bf1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6d926d7d35a8675134b34e02a2932451d81bf1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6d926d7d35a8675134b34e02a2932451d81bf1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6d926d7d35a8675134b34e02a2932451d81bf1d/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c7b5125d1f05df0ac9b545e0edf7127e8eae4f29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7b5125d1f05df0ac9b545e0edf7127e8eae4f29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7b5125d1f05df0ac9b545e0edf7127e8eae4f29"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "014634520aeb8c85890f52f20e3067ef0c64e141", "filename": "lto-plugin/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6d926d7d35a8675134b34e02a2932451d81bf1d/lto-plugin%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6d926d7d35a8675134b34e02a2932451d81bf1d/lto-plugin%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FChangeLog?ref=e6d926d7d35a8675134b34e02a2932451d81bf1d", "patch": "@@ -1,3 +1,14 @@\n+2011-02-07  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tRevert:\n+\n+\t2011-02-07  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\tPR lto/47225\n+\t* Makefile.am (Wl): New helper for encoding -Wl,.\n+\t(liblto_plugin_la_LIBADD): Use -Wl for libiberty library.\n+\t* Makefile.in: Regenerated.\n+\n 2011-02-07  Kai Tietz  <kai.tietz@onevision.com>\n \n \tPR lto/47225"}, {"sha": "a51bc4a9739edcfdfecb7143a1a68812c68e5a72", "filename": "lto-plugin/Makefile.am", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6d926d7d35a8675134b34e02a2932451d81bf1d/lto-plugin%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6d926d7d35a8675134b34e02a2932451d81bf1d/lto-plugin%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FMakefile.am?ref=e6d926d7d35a8675134b34e02a2932451d81bf1d", "patch": "@@ -11,13 +11,11 @@ AM_CPPFLAGS = -I$(top_srcdir)/../include $(DEFS)\n AM_CFLAGS = -Wall -Werror\n AM_LIBTOOLFLAGS = --tag=disable-static\n \n-# This can go away when libiberty becomes a normal convenience library\n-Wl=-Wl,\n libexecsub_LTLIBRARIES = liblto_plugin.la\n \n liblto_plugin_la_SOURCES = lto-plugin.c\n liblto_plugin_la_LIBADD = \\\n-\t$(if $(wildcard ../libiberty/pic/libiberty.a),$(Wl)../libiberty/pic/libiberty.a,)\n+\t$(if $(wildcard ../libiberty/pic/libiberty.a),../libiberty/pic/libiberty.a,)\n # Note that we intentionally override the bindir supplied by ACX_LT_HOST_FLAGS\n liblto_plugin_la_LDFLAGS = $(lt_host_flags) -bindir $(libexecsubdir) \\\n \t$(if $(wildcard ../libiberty/pic/libiberty.a),,-Wc,../libiberty/libiberty.a)"}, {"sha": "2e283f7a0ebfeeb88a011eb01792deeab222f4c6", "filename": "lto-plugin/Makefile.in", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6d926d7d35a8675134b34e02a2932451d81bf1d/lto-plugin%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6d926d7d35a8675134b34e02a2932451d81bf1d/lto-plugin%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FMakefile.in?ref=e6d926d7d35a8675134b34e02a2932451d81bf1d", "patch": "@@ -82,7 +82,7 @@ am__base_list = \\\n am__installdirs = \"$(DESTDIR)$(libexecsubdir)\"\n LTLIBRARIES = $(libexecsub_LTLIBRARIES)\n liblto_plugin_la_DEPENDENCIES = $(if $(wildcard \\\n-\t../libiberty/pic/libiberty.a),$(Wl)../libiberty/pic/libiberty.a,)\n+\t../libiberty/pic/libiberty.a),../libiberty/pic/libiberty.a,)\n am_liblto_plugin_la_OBJECTS = lto-plugin.lo\n liblto_plugin_la_OBJECTS = $(am_liblto_plugin_la_OBJECTS)\n liblto_plugin_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \\\n@@ -231,13 +231,10 @@ libexecsubdir := $(libexecdir)/gcc/$(target_noncanonical)/$(gcc_version)\n AM_CPPFLAGS = -I$(top_srcdir)/../include $(DEFS)\n AM_CFLAGS = -Wall -Werror\n AM_LIBTOOLFLAGS = --tag=disable-static\n-\n-# This can go away when libiberty becomes a normal convenience library\n-Wl = -Wl,\n libexecsub_LTLIBRARIES = liblto_plugin.la\n liblto_plugin_la_SOURCES = lto-plugin.c\n liblto_plugin_la_LIBADD = \\\n-\t$(if $(wildcard ../libiberty/pic/libiberty.a),$(Wl)../libiberty/pic/libiberty.a,)\n+\t$(if $(wildcard ../libiberty/pic/libiberty.a),../libiberty/pic/libiberty.a,)\n \n # Note that we intentionally override the bindir supplied by ACX_LT_HOST_FLAGS\n liblto_plugin_la_LDFLAGS = $(lt_host_flags) -bindir $(libexecsubdir) \\"}]}