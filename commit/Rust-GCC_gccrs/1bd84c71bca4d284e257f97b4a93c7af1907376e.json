{"sha": "1bd84c71bca4d284e257f97b4a93c7af1907376e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJkODRjNzFiY2E0ZDI4NGUyNTdmOTdiNGE5M2M3YWYxOTA3Mzc2ZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-08-06T07:43:45Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-08-06T07:43:45Z"}, "message": "[multiple changes]\n\n2012-08-06  Robert Dewar  <dewar@adacore.com>\n\n\t* s-htable.adb: Minor reformatting.\n\n2012-08-06  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-oscons-tmplt.c, g-socket.adb (System.OS_Constants.Target_OS):\n\tSuppress warnings so that we don't have to do it at each usage.\n\nFrom-SVN: r190157", "tree": {"sha": "30a99f9deb518a84c7ea1adc58a359038b3d8b43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30a99f9deb518a84c7ea1adc58a359038b3d8b43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bd84c71bca4d284e257f97b4a93c7af1907376e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bd84c71bca4d284e257f97b4a93c7af1907376e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bd84c71bca4d284e257f97b4a93c7af1907376e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bd84c71bca4d284e257f97b4a93c7af1907376e/comments", "author": null, "committer": null, "parents": [{"sha": "b3f96dc15b1e7c05252f15dddaabd8e02a4aa90a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3f96dc15b1e7c05252f15dddaabd8e02a4aa90a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3f96dc15b1e7c05252f15dddaabd8e02a4aa90a"}], "stats": {"total": 46, "additions": 22, "deletions": 24}, "files": [{"sha": "df4334b1ef13712f0c2d795c221ba39c8250e7e3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd84c71bca4d284e257f97b4a93c7af1907376e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd84c71bca4d284e257f97b4a93c7af1907376e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1bd84c71bca4d284e257f97b4a93c7af1907376e", "patch": "@@ -1,3 +1,12 @@\n+2012-08-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-htable.adb: Minor reformatting.\n+\n+2012-08-06  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-oscons-tmplt.c, g-socket.adb (System.OS_Constants.Target_OS):\n+\tSuppress warnings so that we don't have to do it at each usage.\n+\n 2012-08-06  Vincent Pucci  <pucci@adacore.com>\n \n \t* exp_ch9.adb (Build_Lock_Free_Unprotected_Subprogram_Body):"}, {"sha": "ac03f42165ee1f3cd9c62101a71b6f1924ffa558", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd84c71bca4d284e257f97b4a93c7af1907376e/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd84c71bca4d284e257f97b4a93c7af1907376e/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=1bd84c71bca4d284e257f97b4a93c7af1907376e", "patch": "@@ -480,9 +480,7 @@ package body GNAT.Sockets is\n       --  no check required. Warnings suppressed because condition\n       --  is known at compile time.\n \n-      pragma Warnings (Off);\n       if Target_OS = Windows then\n-         pragma Warnings (On);\n \n          return;\n \n@@ -1150,10 +1148,7 @@ package body GNAT.Sockets is\n             --  struct timeval, but on Windows it is a milliseconds count in\n             --  a DWORD.\n \n-            pragma Warnings (Off);\n             if Target_OS = Windows then\n-               pragma Warnings (On);\n-\n                Len := V4'Size / 8;\n                Add := V4'Address;\n \n@@ -1217,9 +1212,7 @@ package body GNAT.Sockets is\n          when Send_Timeout    |\n               Receive_Timeout =>\n \n-            pragma Warnings (Off);\n             if Target_OS = Windows then\n-               pragma Warnings (On);\n \n                --  Timeout is in milliseconds, actual value is 500 ms +\n                --  returned value (unless it is 0).\n@@ -1736,8 +1729,6 @@ package body GNAT.Sockets is\n       Item   : out Ada.Streams.Stream_Element_Array;\n       Last   : out Ada.Streams.Stream_Element_Offset)\n    is\n-      pragma Warnings (Off, Stream);\n-\n       First : Ada.Streams.Stream_Element_Offset          := Item'First;\n       Index : Ada.Streams.Stream_Element_Offset          := First - 1;\n       Max   : constant Ada.Streams.Stream_Element_Offset := Item'Last;\n@@ -2270,9 +2261,7 @@ package body GNAT.Sockets is\n          when Send_Timeout    |\n               Receive_Timeout =>\n \n-            pragma Warnings (Off);\n             if Target_OS = Windows then\n-               pragma Warnings (On);\n \n                --  On Windows, the timeout is a DWORD in milliseconds, and\n                --  the actual timeout is 500 ms + the given value (unless it\n@@ -2317,17 +2306,12 @@ package body GNAT.Sockets is\n       use type C.unsigned_short;\n \n    begin\n-      --  Big-endian case. No conversion needed. On these platforms,\n-      --  htons() defaults to a null procedure.\n-\n-      pragma Warnings (Off);\n-      --  Since the test can generate \"always True/False\" warning\n+      --  Big-endian case. No conversion needed. On these platforms, htons()\n+      --  defaults to a null procedure.\n \n       if Default_Bit_Order = High_Order_First then\n          return S;\n \n-         pragma Warnings (On);\n-\n       --  Little-endian case. We must swap the high and low bytes of this\n       --  short to make the port number network compliant.\n "}, {"sha": "b8116f9437d4f8a4edd5d27246ac66479800de55", "filename": "gcc/ada/s-htable.adb", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd84c71bca4d284e257f97b4a93c7af1907376e/gcc%2Fada%2Fs-htable.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd84c71bca4d284e257f97b4a93c7af1907376e/gcc%2Fada%2Fs-htable.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-htable.adb?ref=1bd84c71bca4d284e257f97b4a93c7af1907376e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                    Copyright (C) 1995-2011, AdaCore                      --\n+--                    Copyright (C) 1995-2012, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -62,7 +62,6 @@ package body System.HTable is\n \n       begin\n          Elmt := Table (Hash (K));\n-\n          loop\n             if Elmt = Null_Ptr then\n                return Null_Ptr;\n@@ -96,10 +95,10 @@ package body System.HTable is\n       begin\n          if not Iterator_Started then\n             return Null_Ptr;\n+         else\n+            Iterator_Ptr := Next (Iterator_Ptr);\n+            return Get_Non_Null;\n          end if;\n-\n-         Iterator_Ptr := Next (Iterator_Ptr);\n-         return Get_Non_Null;\n       end Get_Next;\n \n       ------------------\n@@ -183,7 +182,6 @@ package body System.HTable is\n \n       procedure Set (E : Elmt_Ptr) is\n          Index : Header_Num;\n-\n       begin\n          Index := Hash (Get_Key (E));\n          Set_Next (E, Table (Index));"}, {"sha": "dbfab4ec804cff40b5b21fb01c286c81fa9285f7", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd84c71bca4d284e257f97b4a93c7af1907376e/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd84c71bca4d284e257f97b4a93c7af1907376e/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=1bd84c71bca4d284e257f97b4a93c7af1907376e", "patch": "@@ -264,6 +264,13 @@ package System.OS_Constants is\n # define TARGET_OS \"Other_OS\"\n #endif\n C(\"Target_OS\", OS_Type, TARGET_OS, \"\")\n+/*\n+   pragma Warnings (Off, Target_OS);\n+   --  Suppress warnings on Target_OS since it is in general tested for\n+   --  equality with a constant valueto implement conditional compilation,\n+   --  which normally generates a constant condition warning.\n+\n+*/\n #define Target_Name TARGET\n CST(Target_Name, \"\")\n /*"}]}