{"sha": "0bb1600af12451af5f158fc058c35ea02ecd80fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJiMTYwMGFmMTI0NTFhZjVmMTU4ZmMwNThjMzVlYTAyZWNkODBmYg==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2004-03-15T14:15:09Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2004-03-15T14:15:09Z"}, "message": "re PR java/14551 (Switch w sign-extended byte and >16 labels causes error in tree.c)\n\n2004-03-12  Andrew Haley  <aph@redhat.com>\n\n        PR java/14551\n        * typeck.c (convert): Clear TREE_OVERFLOW after an integer\n        conversion.\n\nFrom-SVN: r79493", "tree": {"sha": "2e3e9a7701b78ac4926ee8312dbc2db3b3db8c7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e3e9a7701b78ac4926ee8312dbc2db3b3db8c7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0bb1600af12451af5f158fc058c35ea02ecd80fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bb1600af12451af5f158fc058c35ea02ecd80fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bb1600af12451af5f158fc058c35ea02ecd80fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bb1600af12451af5f158fc058c35ea02ecd80fb/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5c3c69f4bab9c68ab7f70ab590c0ff12673fb6be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c3c69f4bab9c68ab7f70ab590c0ff12673fb6be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c3c69f4bab9c68ab7f70ab590c0ff12673fb6be"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "f080725a1e293be719944e1b16363b043f691af7", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bb1600af12451af5f158fc058c35ea02ecd80fb/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bb1600af12451af5f158fc058c35ea02ecd80fb/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=0bb1600af12451af5f158fc058c35ea02ecd80fb", "patch": "@@ -1,3 +1,9 @@\n+2004-03-12  Andrew Haley  <aph@redhat.com>\n+\n+\tPR java/14551\n+\t* typeck.c (convert): Clear TREE_OVERFLOW after an integer\n+\tconversion.\n+\n 2004-02-29  Roger Sayle  <roger@eyesopen.com>\n \n \t* jcf-parse.c (java_parse_file): Handle the case that input_filename"}, {"sha": "d52afd2356288b7c8fef24fbb223c5a441a7e6c0", "filename": "gcc/java/typeck.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bb1600af12451af5f158fc058c35ea02ecd80fb/gcc%2Fjava%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bb1600af12451af5f158fc058c35ea02ecd80fb/gcc%2Fjava%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Ftypeck.c?ref=0bb1600af12451af5f158fc058c35ea02ecd80fb", "patch": "@@ -137,7 +137,14 @@ convert (tree type, tree expr)\n \t  && TARGET_FLOAT_FORMAT == IEEE_FLOAT_FORMAT)\n \treturn fold (convert_ieee_real_to_integer (type, expr));\n       else\n-\treturn fold (convert_to_integer (type, expr));\n+\t{\n+\t  /* fold very helpfully sets the overflow status if a type\n+\t     overflows in a narrowing integer conversion, but Java\n+\t     doesn't care.  */\n+\t  tree tmp = fold (convert_to_integer (type, expr));\n+\t  TREE_OVERFLOW (tmp) = 0;\n+\t  return tmp;\n+\t}\n     }\t  \n   if (code == REAL_TYPE)\n     return fold (convert_to_real (type, expr));"}]}