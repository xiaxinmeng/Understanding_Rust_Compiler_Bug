{"sha": "f7fdebfbf63d6f9627ae2cfeeb9bb00766664b2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdmZGViZmJmNjNkNmY5NjI3YWUyY2ZlZWI5YmIwMDc2NjY2NGIyYQ==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2004-11-26T00:18:02Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2004-11-26T00:18:02Z"}, "message": "libjava.exp (libjava_arguments): Add new global variable libjava_ld_library_path.\n\n\t* testsuite/lib/libjava.exp (libjava_arguments): Add new global\n\tvariable libjava_ld_library_path.\n\t(gcj_invoke, libjava_invoke): Use it to set ld_library_path.\n\nFrom-SVN: r91314", "tree": {"sha": "07bf8ddafe79c50ab3104e98fd6f5a29361bf3aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07bf8ddafe79c50ab3104e98fd6f5a29361bf3aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7fdebfbf63d6f9627ae2cfeeb9bb00766664b2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7fdebfbf63d6f9627ae2cfeeb9bb00766664b2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7fdebfbf63d6f9627ae2cfeeb9bb00766664b2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7fdebfbf63d6f9627ae2cfeeb9bb00766664b2a/comments", "author": null, "committer": null, "parents": [{"sha": "3a4e7e8f5d6751684fbe94e145b58391e1e182c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a4e7e8f5d6751684fbe94e145b58391e1e182c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a4e7e8f5d6751684fbe94e145b58391e1e182c1"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "acbdf3a5ce8ec8d47d927dea8a1ab693cc8b46d6", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7fdebfbf63d6f9627ae2cfeeb9bb00766664b2a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7fdebfbf63d6f9627ae2cfeeb9bb00766664b2a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=f7fdebfbf63d6f9627ae2cfeeb9bb00766664b2a", "patch": "@@ -1,3 +1,9 @@\n+2004-11-25  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* testsuite/lib/libjava.exp (libjava_arguments): Add new global\n+\tvariable libjava_ld_library_path.\n+\t(gcj_invoke, libjava_invoke): Use it to set ld_library_path.\n+\n 2004-11-25  Bryce McKinlay  <mckinlay@redhat.com>\n \n \t* java/util/ResourceBundle.java (BundleKey): Don't implement"}, {"sha": "62b1f46949ad33294872001ec3451550f313ea0d", "filename": "libjava/testsuite/lib/libjava.exp", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7fdebfbf63d6f9627ae2cfeeb9bb00766664b2a/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7fdebfbf63d6f9627ae2cfeeb9bb00766664b2a/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flib%2Flibjava.exp?ref=f7fdebfbf63d6f9627ae2cfeeb9bb00766664b2a", "patch": "@@ -323,6 +323,7 @@ proc libjava_arguments {{mode compile}} {\n     global tool_root_dir\n     global libgcj_jar\n     global libjava_libgcc_s_path\n+    global libjava_ld_library_path\n     global ld_library_path\n     global target_triplet\n \n@@ -338,7 +339,7 @@ proc libjava_arguments {{mode compile}} {\n     # Basically we want to build up a colon separated path list from\n     # the value of $libjava.\n \n-    set lpath {}\n+    set lpath \".\"\n     foreach dir [list $libjava] {\n \tforeach item [split $dir \" \"] {\n \t    switch -glob -- $item {\n@@ -352,6 +353,7 @@ proc libjava_arguments {{mode compile}} {\n     set lpath [concat $lpath $libjava_libgcc_s_path]\n     verbose \"lpath = $lpath ; libgcc_s_path = $libjava_libgcc_s_path\"\n     set ld_library_path [join $lpath :]\n+    set libjava_ld_library_path \"$ld_library_path\"\n \n     # That's enough to make things work for the normal case.\n     # If we wanted to handle an arbitrary value of libjava,\n@@ -453,9 +455,10 @@ proc gcj_link {program main files {options {}}} {\n # Invoke the program and see what happens.  Return 0 on failure.\n proc gcj_invoke {program expectFile ld_library_additions} {\n   global env\n+  global libjava_ld_library_path\n   global ld_library_path\n \n-  set ld_library_path .\n+  set ld_library_path \"$libjava_ld_library_path\"\n   if {[llength $ld_library_additions] > 0} {\n     append ld_library_path :[join $ld_library_additions :]\n   }\n@@ -498,9 +501,10 @@ proc gcj_invoke {program expectFile ld_library_additions} {\n proc libjava_invoke {errname testName optName executable inpfile resultfile\n \t\t      ld_library_additions args} {\n     global env\n+    global libjava_ld_library_path\n     global ld_library_path\n \n-    set ld_library_path .\n+    set ld_library_path \"$libjava_ld_library_path\"\n     if {[llength $ld_library_additions] > 0} {\n \tappend ld_library_path :[join $ld_library_additions :]\n     }"}]}