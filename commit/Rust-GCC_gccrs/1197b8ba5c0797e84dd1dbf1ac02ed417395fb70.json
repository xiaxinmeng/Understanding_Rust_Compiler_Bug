{"sha": "1197b8ba5c0797e84dd1dbf1ac02ed417395fb70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE5N2I4YmE1YzA3OTdlODRkZDFkYmYxYWMwMmVkNDE3Mzk1ZmI3MA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2005-03-29T16:23:29Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-03-29T16:23:29Z"}, "message": "decl.c (gnat_to_gnu_entity): Rework comment.\n\n2005-03-29  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* decl.c (gnat_to_gnu_entity) <E_Variable>: Rework comment.\n\t* trans.c (tree_transform) <N_Identifier>: Use correct predicates.\n\nFrom-SVN: r97191", "tree": {"sha": "93e5e9f76c3588cd8bcd99f82d98fcbce1ff485f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93e5e9f76c3588cd8bcd99f82d98fcbce1ff485f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1197b8ba5c0797e84dd1dbf1ac02ed417395fb70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1197b8ba5c0797e84dd1dbf1ac02ed417395fb70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1197b8ba5c0797e84dd1dbf1ac02ed417395fb70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1197b8ba5c0797e84dd1dbf1ac02ed417395fb70/comments", "author": null, "committer": null, "parents": [{"sha": "bf7c85c928d23b624c4c55ddc35e18d900e6527c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf7c85c928d23b624c4c55ddc35e18d900e6527c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf7c85c928d23b624c4c55ddc35e18d900e6527c"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "9d2e8fe871de8a75f4dd0100847698b991009f14", "filename": "gcc/ada/decl.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1197b8ba5c0797e84dd1dbf1ac02ed417395fb70/gcc%2Fada%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1197b8ba5c0797e84dd1dbf1ac02ed417395fb70/gcc%2Fada%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdecl.c?ref=1197b8ba5c0797e84dd1dbf1ac02ed417395fb70", "patch": "@@ -776,13 +776,12 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t      }\n \n \t    /* Otherwise, make this into a constant pointer to the object we\n-\t       are to rename.\n-\n-\t       Stabilize it since in this case the renaming evaluation may\n-\t       directly dereference the initial value we make here instead\n-\t       of the pointer we will assign it to.  We don't want variables\n-\t       in the expression to be evaluated every time the renaming is\n-\t       used, since their value may change in between.  */\n+\t       are to rename and attach the object to the pointer.  We need\n+\t       to stabilize too since the renaming evaluation may directly\n+\t       reference the renamed object instead of the pointer we will\n+\t       attach it to.  We don't want variables in the expression to\n+\t       be evaluated every time the renaming is used, since their\n+\t       value may change in between.  */\n \t    else\n \t      {\n \t\tbool has_side_effects = TREE_SIDE_EFFECTS (gnu_expr);"}, {"sha": "fd42e837a2bdb3190dc87b7481d9d414c37cb57a", "filename": "gcc/ada/trans.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1197b8ba5c0797e84dd1dbf1ac02ed417395fb70/gcc%2Fada%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1197b8ba5c0797e84dd1dbf1ac02ed417395fb70/gcc%2Fada%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftrans.c?ref=1197b8ba5c0797e84dd1dbf1ac02ed417395fb70", "patch": "@@ -410,8 +410,7 @@ Identifier_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p)\n \t       && (! DECL_RENAMING_GLOBAL_P (gnu_result)\n \t\t   || global_bindings_p ())\n \t       /* Make sure it's an lvalue like INDIRECT_REF.  */\n-\t       && (TREE_CODE_CLASS (TREE_CODE (renamed_obj)) == 'd'\n-\t\t   || TREE_CODE_CLASS (TREE_CODE (renamed_obj)) == 'r'))\n+\t       && (DECL_P (renamed_obj) || REFERENCE_CLASS_P (renamed_obj)))\n \tgnu_result = renamed_obj;\n       else\n \tgnu_result = build_unary_op (INDIRECT_REF, NULL_TREE,"}]}