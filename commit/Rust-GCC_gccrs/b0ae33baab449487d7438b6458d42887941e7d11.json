{"sha": "b0ae33baab449487d7438b6458d42887941e7d11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBhZTMzYmFhYjQ0OTQ4N2Q3NDM4YjY0NThkNDI4ODc5NDFlN2QxMQ==", "commit": {"author": {"name": "Andre Vehreschild", "email": "vehre@gcc.gnu.org", "date": "2015-10-07T10:58:46Z"}, "committer": {"name": "Andre Vehreschild", "email": "vehre@gcc.gnu.org", "date": "2015-10-07T10:58:46Z"}, "message": "re PR fortran/65889 ([6 Regressions] [OOP] ICE with sizeof a polymorphic variable.)\n\ngcc/fortran/ChangeLog:\n\n2015-10-07  Andre Vehreschild  <vehre@gcc.gnu.org>\n\n\tPR fortran/65889\n\t* trans-intrinsic.c (gfc_conv_intrinsic_sizeof): Handle pointer to and\n\ton stack class objects as sizeof parameter.\n\ngcc/testsuite/ChangeLog:\n\n2015-10-07  Andre Vehreschild  <vehre@gcc.gnu.org>\n\n\tPR fortran/65889\n\t* gfortran.dg/sizeof_5.f90: New test.\n\nFrom-SVN: r228566", "tree": {"sha": "7ba26ec840e54efa14fcbb0d612f3825a8ddaa14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ba26ec840e54efa14fcbb0d612f3825a8ddaa14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0ae33baab449487d7438b6458d42887941e7d11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0ae33baab449487d7438b6458d42887941e7d11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0ae33baab449487d7438b6458d42887941e7d11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0ae33baab449487d7438b6458d42887941e7d11/comments", "author": null, "committer": null, "parents": [{"sha": "735e9641080601b1af22c2077075ca3144ee799b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/735e9641080601b1af22c2077075ca3144ee799b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/735e9641080601b1af22c2077075ca3144ee799b"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "8d21be5b64e13775febabf96721dff3148115938", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ae33baab449487d7438b6458d42887941e7d11/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ae33baab449487d7438b6458d42887941e7d11/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=b0ae33baab449487d7438b6458d42887941e7d11", "patch": "@@ -1,3 +1,9 @@\n+2015-10-07  Andre Vehreschild  <vehre@gcc.gnu.org>\n+\n+\tPR fortran/65889\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_sizeof): Handle pointer to and\n+\ton stack class objects as sizeof parameter.\n+\n 2015-10-06  Louis Krupp <louis.krupp@zoho.com>\n \tPR fortran/65766\n \t* resolve.c (gfc_resolve_substring_charlen): For derived type,"}, {"sha": "ac61c096a99e064d90bd3a5009e5502e701e4d3e", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ae33baab449487d7438b6458d42887941e7d11/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ae33baab449487d7438b6458d42887941e7d11/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=b0ae33baab449487d7438b6458d42887941e7d11", "patch": "@@ -5937,11 +5937,16 @@ gfc_conv_intrinsic_sizeof (gfc_se *se, gfc_expr *expr)\n     }\n   else if (arg->ts.type == BT_CLASS)\n     {\n-      /* For deferred length arrays, conv_expr_descriptor returns an\n-\t indirect_ref to the component.  */\n+      /* Conv_expr_descriptor returns a component_ref to _data component of the\n+\t class object.  The class object may be a non-pointer object, e.g.\n+\t located on the stack, or a memory location pointed to, e.g. a\n+\t parameter, i.e., an indirect_ref.  */\n       if (arg->rank < 0\n \t  || (arg->rank > 0 && !VAR_P (argse.expr)\n-\t      && GFC_DECL_CLASS (TREE_OPERAND (argse.expr, 0))))\n+\t      && ((INDIRECT_REF_P (TREE_OPERAND (argse.expr, 0))\n+\t\t   && GFC_DECL_CLASS (TREE_OPERAND (\n+\t\t\t\t\tTREE_OPERAND (argse.expr, 0), 0)))\n+\t\t  || GFC_DECL_CLASS (TREE_OPERAND (argse.expr, 0)))))\n \tbyte_size = gfc_class_vtab_size_get (TREE_OPERAND (argse.expr, 0));\n       else if (arg->rank > 0)\n \t/* The scalarizer added an additional temp.  To get the class' vptr"}, {"sha": "2b7094692cd93b6937d2f0292a0021bae334b4b9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ae33baab449487d7438b6458d42887941e7d11/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ae33baab449487d7438b6458d42887941e7d11/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b0ae33baab449487d7438b6458d42887941e7d11", "patch": "@@ -1,3 +1,8 @@\n+2015-10-07  Andre Vehreschild  <vehre@gcc.gnu.org>\n+\n+\tPR fortran/65889\n+\t* gfortran.dg/sizeof_5.f90: New test.\n+\n 2015-10-06  Jeff Law  <law@redhat.com>\n \n \t* gcc.c-torture/compile/pr67816.c: New test."}, {"sha": "0e1496a2f732a6ed1402db6b96a36c993effe24f", "filename": "gcc/testsuite/gfortran.dg/sizeof_5.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ae33baab449487d7438b6458d42887941e7d11/gcc%2Ftestsuite%2Fgfortran.dg%2Fsizeof_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ae33baab449487d7438b6458d42887941e7d11/gcc%2Ftestsuite%2Fgfortran.dg%2Fsizeof_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsizeof_5.f90?ref=b0ae33baab449487d7438b6458d42887941e7d11", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do compile }\n+!\n+! PR fortran/65889\n+!\n+!\n+module m\n+  type n\n+  end type n\n+contains\n+  subroutine g(ns)\n+    class(n), intent(out), allocatable, dimension(:) :: ns\n+    class(n), allocatable, dimension(:) :: tmp\n+    write (0,*) sizeof(ns), sizeof(tmp)\n+  end subroutine g\n+end module m"}]}