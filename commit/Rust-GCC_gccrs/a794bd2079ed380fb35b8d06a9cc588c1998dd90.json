{"sha": "a794bd2079ed380fb35b8d06a9cc588c1998dd90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc5NGJkMjA3OWVkMzgwZmIzNWI4ZDA2YTljYzU4OGMxOTk4ZGQ5MA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2015-11-20T14:23:18Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2015-11-20T14:23:18Z"}, "message": "nvptx.c (nvptx_use_anchors_for_symbol_p): New.\n\n\t* config/nvptx/nvptx.c (nvptx_use_anchors_for_symbol_p): New.\n\t(TARGET_USE_ANCHORS_FOR_SYMBOL_P): Override.\n\nCo-Authored-By: James Norris <jnorris@codesourcery.com>\n\nFrom-SVN: r230659", "tree": {"sha": "64b48e2871b61cc14642d758d7a604d43a92a67c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64b48e2871b61cc14642d758d7a604d43a92a67c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a794bd2079ed380fb35b8d06a9cc588c1998dd90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a794bd2079ed380fb35b8d06a9cc588c1998dd90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a794bd2079ed380fb35b8d06a9cc588c1998dd90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a794bd2079ed380fb35b8d06a9cc588c1998dd90/comments", "author": null, "committer": null, "parents": [{"sha": "b09d93475d8e4f86e3b2bce19ef05dbb669e55fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b09d93475d8e4f86e3b2bce19ef05dbb669e55fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b09d93475d8e4f86e3b2bce19ef05dbb669e55fb"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "03e6993ac0be783c52536bcec58155b5f7606bc1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a794bd2079ed380fb35b8d06a9cc588c1998dd90/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a794bd2079ed380fb35b8d06a9cc588c1998dd90/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a794bd2079ed380fb35b8d06a9cc588c1998dd90", "patch": "@@ -1,3 +1,9 @@\n+2015-11-20  Nathan Sidwell  <nathan@codesourcery.com>\n+\t    James Norris  <jnorris@codesourcery.com>\n+\n+\t* config/nvptx/nvptx.c (nvptx_use_anchors_for_symbol_p): New.\n+\t(TARGET_USE_ANCHORS_FOR_SYMBOL_P): Override.\n+\n 2015-11-20  Alan Hayward <alan.hayward@arm.com>\n \n \tPR tree-optimization/68413"}, {"sha": "fdeb78af140244441ea5e462899f1c0d8b9fca9f", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a794bd2079ed380fb35b8d06a9cc588c1998dd90/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a794bd2079ed380fb35b8d06a9cc588c1998dd90/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=a794bd2079ed380fb35b8d06a9cc588c1998dd90", "patch": "@@ -3895,6 +3895,19 @@ nvptx_cannot_copy_insn_p (rtx_insn *insn)\n       return false;\n     }\n }\n+\n+/* Section anchors do not work.  Initialization for flag_section_anchor\n+   probes the existence of the anchoring target hooks and prevents\n+   anchoring if they don't exist.  However, we may be being used with\n+   a host-side compiler that does support anchoring, and hence see\n+   the anchor flag set (as it's not recalculated).  So provide an\n+   implementation denying anchoring.  */\n+\n+static bool\n+nvptx_use_anchors_for_symbol_p (const_rtx ARG_UNUSED (a))\n+{\n+  return false;\n+}\n \f\n /* Record a symbol for mkoffload to enter into the mapping table.  */\n \n@@ -4914,6 +4927,9 @@ nvptx_goacc_reduction (gcall *call)\n #undef TARGET_CANNOT_COPY_INSN_P\n #define TARGET_CANNOT_COPY_INSN_P nvptx_cannot_copy_insn_p\n \n+#undef TARGET_USE_ANCHORS_FOR_SYMBOL_P\n+#define TARGET_USE_ANCHORS_FOR_SYMBOL_P nvptx_use_anchors_for_symbol_p\n+\n #undef TARGET_INIT_BUILTINS\n #define TARGET_INIT_BUILTINS nvptx_init_builtins\n #undef TARGET_EXPAND_BUILTIN"}]}