{"sha": "2831adb5623797825234bf006b9f2fc8f027c36d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjgzMWFkYjU2MjM3OTc4MjUyMzRiZjAwNmI5ZjJmYzhmMDI3YzM2ZA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-11-29T17:17:39Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-11-29T17:17:39Z"}, "message": "Fix thinko in transition to memop_ret type (PR middle-end/88246).\n\n2018-11-29  Martin Liska  <mliska@suse.cz>\n\n\tPR middle-end/88246\n\t* builtins.c (expand_movstr): Fix thinko introduced\n\twhen switching to the new enum.\n\nFrom-SVN: r266631", "tree": {"sha": "adb0c637ba3b9c483b0f0d16e10323da25494218", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adb0c637ba3b9c483b0f0d16e10323da25494218"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2831adb5623797825234bf006b9f2fc8f027c36d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2831adb5623797825234bf006b9f2fc8f027c36d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2831adb5623797825234bf006b9f2fc8f027c36d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2831adb5623797825234bf006b9f2fc8f027c36d/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6fd6a2ffee4bc790123d95fc7e638612aa0d7334", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fd6a2ffee4bc790123d95fc7e638612aa0d7334", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fd6a2ffee4bc790123d95fc7e638612aa0d7334"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "02c2403baf8e21db42af550f20d99bb8b295b541", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2831adb5623797825234bf006b9f2fc8f027c36d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2831adb5623797825234bf006b9f2fc8f027c36d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2831adb5623797825234bf006b9f2fc8f027c36d", "patch": "@@ -1,3 +1,9 @@\n+2018-11-29  Martin Liska  <mliska@suse.cz>\n+\n+\tPR middle-end/88246\n+\t* builtins.c (expand_movstr): Fix thinko introduced\n+\twhen switching to the new enum.\n+\n 2018-11-29  qing zhao  <qing.zhao@oracle.com>\n \n \t* cif-code.def (EXTERN_LIVE_ONLY_STATIC): New CIF code."}, {"sha": "537228cf3bed0c58b5f21ae43eeb82c1adea6f16", "filename": "gcc/builtins.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2831adb5623797825234bf006b9f2fc8f027c36d/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2831adb5623797825234bf006b9f2fc8f027c36d/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=2831adb5623797825234bf006b9f2fc8f027c36d", "patch": "@@ -3931,7 +3931,7 @@ expand_movstr (tree dest, tree src, rtx target, memop_ret retmode)\n \n   dest_mem = get_memory_rtx (dest, NULL);\n   src_mem = get_memory_rtx (src, NULL);\n-  if (retmode != RETURN_BEGIN)\n+  if (retmode == RETURN_BEGIN)\n     {\n       target = force_reg (Pmode, XEXP (dest_mem, 0));\n       dest_mem = replace_equiv_address (dest_mem, target);"}]}