{"sha": "4180f273c59cf9d01b675830bce1fe6825b1008c", "node_id": "C_kwDOANBUbNoAKDQxODBmMjczYzU5Y2Y5ZDAxYjY3NTgzMGJjZTFmZTY4MjViMTAwOGM", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-12-30T17:05:48Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-01-11T13:24:44Z"}, "message": "[Ada] Use atomic builtins for atomic counters on x86 (32bit)\n\ngcc/ada/\n\n\t* Makefile.rtl (X86_TARGET_PAIRS): Use __builtin variant of\n\tSystem.Atomic_Counters.\n\t* libgnat/s-atocou__x86.adb: Remove.", "tree": {"sha": "655cf60eb93c2681bb848534f03e99ed4acbf699", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/655cf60eb93c2681bb848534f03e99ed4acbf699"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4180f273c59cf9d01b675830bce1fe6825b1008c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4180f273c59cf9d01b675830bce1fe6825b1008c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4180f273c59cf9d01b675830bce1fe6825b1008c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4180f273c59cf9d01b675830bce1fe6825b1008c/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b417b35824fb5c15e3ee958cb86436b3409ebea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b417b35824fb5c15e3ee958cb86436b3409ebea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b417b35824fb5c15e3ee958cb86436b3409ebea"}], "stats": {"total": 114, "additions": 1, "deletions": 113}, "files": [{"sha": "1b066ad6b1448e2ebcb179d4d115eadb1127a0b4", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4180f273c59cf9d01b675830bce1fe6825b1008c/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4180f273c59cf9d01b675830bce1fe6825b1008c/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=4180f273c59cf9d01b675830bce1fe6825b1008c", "patch": "@@ -898,7 +898,7 @@ ATOMICS_BUILTINS_TARGET_PAIRS = \\\n \n X86_TARGET_PAIRS = \\\n   a-nuauco.ads<libgnat/a-nuauco__x86.ads \\\n-  s-atocou.adb<libgnat/s-atocou__x86.adb\n+  s-atocou.adb<libgnat/s-atocou__builtin.adb\n \n X86_64_TARGET_PAIRS = \\\n   a-nuauco.ads<libgnat/a-nuauco__x86.ads \\"}, {"sha": "8704d9df3e0aa22b8528acc220f280a99e4be188", "filename": "gcc/ada/libgnat/s-atocou__x86.adb", "status": "removed", "additions": 0, "deletions": 112, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b417b35824fb5c15e3ee958cb86436b3409ebea/gcc%2Fada%2Flibgnat%2Fs-atocou__x86.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b417b35824fb5c15e3ee958cb86436b3409ebea/gcc%2Fada%2Flibgnat%2Fs-atocou__x86.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-atocou__x86.adb?ref=5b417b35824fb5c15e3ee958cb86436b3409ebea", "patch": "@@ -1,112 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT RUN-TIME COMPONENTS                         --\n---                                                                          --\n---               S Y S T E M . A T O M I C _ C O U N T E R S                --\n---                                                                          --\n---                                 B o d y                                  --\n---                                                                          --\n---          Copyright (C) 2011-2021, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This implementation of the package for x86 processor. GCC can't generate\n---  code for atomic builtins for 386 CPU. Only increment/decrement instructions\n---  are supported, thus this implementaton uses machine code insertions to\n---  access the necessary instructions.\n-\n-with System.Machine_Code;\n-\n-package body System.Atomic_Counters is\n-\n-   --  Add comments showing in normal asm language what we generate???\n-\n-   ---------------\n-   -- Decrement --\n-   ---------------\n-\n-   function Decrement (Item : aliased in out Atomic_Unsigned) return Boolean is\n-      Aux : Boolean;\n-\n-   begin\n-      System.Machine_Code.Asm\n-        (Template =>\n-           \"lock%; decl\" & ASCII.HT & \"%0\" & ASCII.LF & ASCII.HT\n-             & \"sete %1\",\n-         Outputs  =>\n-           (Atomic_Unsigned'Asm_Output (\"=m\", Item),\n-            Boolean'Asm_Output (\"=qm\", Aux)),\n-         Inputs   => Atomic_Unsigned'Asm_Input (\"m\", Item),\n-         Volatile => True);\n-\n-      return Aux;\n-   end Decrement;\n-\n-   procedure Decrement (Item : aliased in out Atomic_Unsigned) is\n-   begin\n-      if Decrement (Item) then\n-         null;\n-      end if;\n-   end Decrement;\n-\n-   function Decrement (Item : in out Atomic_Counter) return Boolean is\n-   begin\n-      return Decrement (Item.Value);\n-   end Decrement;\n-\n-   ---------------\n-   -- Increment --\n-   ---------------\n-\n-   procedure Increment (Item : aliased in out Atomic_Unsigned) is\n-   begin\n-      System.Machine_Code.Asm\n-        (Template => \"lock%; incl\" & ASCII.HT & \"%0\",\n-         Outputs  => Atomic_Unsigned'Asm_Output (\"=m\", Item),\n-         Inputs   => Atomic_Unsigned'Asm_Input (\"m\", Item),\n-         Volatile => True);\n-   end Increment;\n-\n-   procedure Increment (Item : in out Atomic_Counter) is\n-   begin\n-      Increment (Item.Value);\n-   end Increment;\n-\n-   ----------------\n-   -- Initialize --\n-   ----------------\n-\n-   procedure Initialize (Item : out Atomic_Counter) is\n-   begin\n-      Item.Value := 1;\n-   end Initialize;\n-\n-   ------------\n-   -- Is_One --\n-   ------------\n-\n-   function Is_One (Item : Atomic_Counter) return Boolean is\n-   begin\n-      return Item.Value = 1;\n-   end Is_One;\n-\n-end System.Atomic_Counters;"}]}