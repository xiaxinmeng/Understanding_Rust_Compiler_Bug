{"sha": "3d71881d2d0380a58370694a053cedf721c3e05f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q3MTg4MWQyZDAzODBhNTgzNzA2OTRhMDUzY2VkZjcyMWMzZTA1Zg==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2011-10-18T19:57:15Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@gcc.gnu.org", "date": "2011-10-18T19:57:15Z"}, "message": "re PR tree-optimization/50717 (Silent code gen fault with incorrect widening of multiply)\n\n2011-10-18  Andrew Stubbs  <ams@codesourcery.com>\n\n\tPR tree-optimization/50717\n\n\tgcc/\n\t* tree-ssa-math-opts.c (is_widening_mult_p): Remove the 'type'\n\tparameter.  Calculate 'type' from stmt.\n\t(convert_mult_to_widen): Update call the is_widening_mult_p.\n\t(convert_plusminus_to_widen): Likewise.\n\n\tgcc/testsuite/\n\t* gcc.dg/pr50717-1.c: New file.\n\t* gcc.target/arm/wmul-12.c: Correct types.\n\t* gcc.target/arm/wmul-8.c: Correct types.\n\nFrom-SVN: r180164", "tree": {"sha": "84009255cba96a417776d629d3d13ce283453d15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84009255cba96a417776d629d3d13ce283453d15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d71881d2d0380a58370694a053cedf721c3e05f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d71881d2d0380a58370694a053cedf721c3e05f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d71881d2d0380a58370694a053cedf721c3e05f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d71881d2d0380a58370694a053cedf721c3e05f/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "15e0646fde23f549c224be5ba3ee9bd11eb748de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15e0646fde23f549c224be5ba3ee9bd11eb748de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15e0646fde23f549c224be5ba3ee9bd11eb748de"}], "stats": {"total": 59, "additions": 52, "deletions": 7}, "files": [{"sha": "365eb94f0311012335b137da3365c21db6f04d79", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d71881d2d0380a58370694a053cedf721c3e05f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d71881d2d0380a58370694a053cedf721c3e05f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d71881d2d0380a58370694a053cedf721c3e05f", "patch": "@@ -1,3 +1,12 @@\n+2011-10-18  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\tPR tree-optimization/50717\n+\n+\t* tree-ssa-math-opts.c (is_widening_mult_p): Remove the 'type'\n+\tparameter.  Calculate 'type' from stmt.\n+\t(convert_mult_to_widen): Update call the is_widening_mult_p.\n+\t(convert_plusminus_to_widen): Likewise.\n+\n 2011-10-18  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \t* config/spu/spu.c (struct machine_function): New data structure."}, {"sha": "2ed54293ab43873748908b916fdadd3c810643e3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d71881d2d0380a58370694a053cedf721c3e05f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d71881d2d0380a58370694a053cedf721c3e05f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3d71881d2d0380a58370694a053cedf721c3e05f", "patch": "@@ -1,3 +1,11 @@\n+2011-10-18  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\tPR tree-optimization/50717\n+\n+\t* gcc.dg/pr50717-1.c: New file.\n+\t* gcc.target/arm/wmul-12.c: Correct types.\n+\t* gcc.target/arm/wmul-8.c: Correct types.\n+\n 2011-10-18  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/50531"}, {"sha": "afbe542a2be3ea19304f59a2bf8251b83b418de0", "filename": "gcc/testsuite/gcc.dg/pr50717-1.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d71881d2d0380a58370694a053cedf721c3e05f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr50717-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d71881d2d0380a58370694a053cedf721c3e05f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr50717-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr50717-1.c?ref=3d71881d2d0380a58370694a053cedf721c3e05f", "patch": "@@ -0,0 +1,26 @@\n+/* PR tree-optimization/50717  */\n+/* Ensure that widening multiply-and-accumulate is not used where integer\n+   type promotion or users' casts should prevent it.  */\n+\n+/* { dg-options \"-O2 -fdump-tree-widening_mul\" } */\n+\n+long long\n+f (unsigned int a, char b, long long c)\n+{\n+  return (a * b) + c;\n+}\n+\n+int\n+g (short a, short b, int c)\n+{\n+  return (short)(a * b) + c;\n+}\n+\n+int\n+h (char a, char b, int c)\n+{\n+  return (char)(a * b) + c;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"WIDEN_MULT_PLUS_EXPR\" 0 \"widening_mul\" } } */\n+/* { dg-final { cleanup-tree-dump \"widening_mul\" } } */"}, {"sha": "5c6b5b9882cbf8be933c3ccc692964f47d31e297", "filename": "gcc/testsuite/gcc.target/arm/wmul-12.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d71881d2d0380a58370694a053cedf721c3e05f/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d71881d2d0380a58370694a053cedf721c3e05f/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-12.c?ref=3d71881d2d0380a58370694a053cedf721c3e05f", "patch": "@@ -5,8 +5,8 @@\n long long\n foo (int *b, int *c)\n {\n-  int tmp = *b * *c;\n-  return 10 + (long long)tmp;\n+  long long tmp = (long long)*b * *c;\n+  return 10 + tmp;\n }\n \n /* { dg-final { scan-assembler \"smlal\" } } */"}, {"sha": "5ae110d3c49143c0b36bbc265f19b634cbf52a08", "filename": "gcc/testsuite/gcc.target/arm/wmul-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d71881d2d0380a58370694a053cedf721c3e05f/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d71881d2d0380a58370694a053cedf721c3e05f/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-8.c?ref=3d71881d2d0380a58370694a053cedf721c3e05f", "patch": "@@ -5,7 +5,7 @@\n long long\n foo (long long a, int *b, int *c)\n {\n-  return a + *b * *c;\n+  return a + (long long)*b * *c;\n }\n \n /* { dg-final { scan-assembler \"smlal\" } } */"}, {"sha": "75abb3369a1e397d4baa28f33cc9fe549f7db5e9", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d71881d2d0380a58370694a053cedf721c3e05f/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d71881d2d0380a58370694a053cedf721c3e05f/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=3d71881d2d0380a58370694a053cedf721c3e05f", "patch": "@@ -2039,10 +2039,12 @@ is_widening_mult_rhs_p (tree type, tree rhs, tree *type_out,\n    and *TYPE2_OUT would give the operands of the multiplication.  */\n \n static bool\n-is_widening_mult_p (tree type, gimple stmt,\n+is_widening_mult_p (gimple stmt,\n \t\t    tree *type1_out, tree *rhs1_out,\n \t\t    tree *type2_out, tree *rhs2_out)\n {\n+  tree type = TREE_TYPE (gimple_assign_lhs (stmt));\n+\n   if (TREE_CODE (type) != INTEGER_TYPE\n       && TREE_CODE (type) != FIXED_POINT_TYPE)\n     return false;\n@@ -2104,7 +2106,7 @@ convert_mult_to_widen (gimple stmt, gimple_stmt_iterator *gsi)\n   if (TREE_CODE (type) != INTEGER_TYPE)\n     return false;\n \n-  if (!is_widening_mult_p (type, stmt, &type1, &rhs1, &type2, &rhs2))\n+  if (!is_widening_mult_p (stmt, &type1, &rhs1, &type2, &rhs2))\n     return false;\n \n   to_mode = TYPE_MODE (type);\n@@ -2281,15 +2283,15 @@ convert_plusminus_to_widen (gimple_stmt_iterator *gsi, gimple stmt,\n   if (code == PLUS_EXPR\n       && (rhs1_code == MULT_EXPR || rhs1_code == WIDEN_MULT_EXPR))\n     {\n-      if (!is_widening_mult_p (type, rhs1_stmt, &type1, &mult_rhs1,\n+      if (!is_widening_mult_p (rhs1_stmt, &type1, &mult_rhs1,\n \t\t\t       &type2, &mult_rhs2))\n \treturn false;\n       add_rhs = rhs2;\n       conv_stmt = conv1_stmt;\n     }\n   else if (rhs2_code == MULT_EXPR || rhs2_code == WIDEN_MULT_EXPR)\n     {\n-      if (!is_widening_mult_p (type, rhs2_stmt, &type1, &mult_rhs1,\n+      if (!is_widening_mult_p (rhs2_stmt, &type1, &mult_rhs1,\n \t\t\t       &type2, &mult_rhs2))\n \treturn false;\n       add_rhs = rhs1;"}]}