{"sha": "97976c0757ad3173ac00d1e32e335f3f960b0b9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc5NzZjMDc1N2FkMzE3M2FjMDBkMWUzMmUzMzVmM2Y5NjBiMGI5Zg==", "commit": {"author": {"name": "Nelson Chu", "email": "nelson.chu@sifive.com", "date": "2020-11-11T03:33:38Z"}, "committer": {"name": "Jim Wilson", "email": "jimw@sifive.com", "date": "2020-11-12T21:47:16Z"}, "message": "RISC-V: Enable ifunc if it was supported in the binutils for linux toolchain.\n\n\tgcc/\n\t* configure: Regenerated.\n\t* configure.ac: If ifunc was supported in the binutils for\n\tlinux toolchain, then set enable_gnu_indirect_function to yes.", "tree": {"sha": "7829c7ae7ed64fbc246da5cb20fe4f768ab56394", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7829c7ae7ed64fbc246da5cb20fe4f768ab56394"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97976c0757ad3173ac00d1e32e335f3f960b0b9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97976c0757ad3173ac00d1e32e335f3f960b0b9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97976c0757ad3173ac00d1e32e335f3f960b0b9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97976c0757ad3173ac00d1e32e335f3f960b0b9f/comments", "author": null, "committer": null, "parents": [{"sha": "1d00f8c86324c40ab2ba7933366d380e32c0a94a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d00f8c86324c40ab2ba7933366d380e32c0a94a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d00f8c86324c40ab2ba7933366d380e32c0a94a"}], "stats": {"total": 72, "additions": 72, "deletions": 0}, "files": [{"sha": "dbda4415a1714d66112cda19e75468f1e34d0c4a", "filename": "gcc/configure", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97976c0757ad3173ac00d1e32e335f3f960b0b9f/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97976c0757ad3173ac00d1e32e335f3f960b0b9f/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=97976c0757ad3173ac00d1e32e335f3f960b0b9f", "patch": "@@ -23407,6 +23407,43 @@ else\n fi\n \n \n+case \"${target}\" in\n+  riscv*-*-linux*)\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking linker ifunc IRELATIVE support\" >&5\n+$as_echo_n \"checking linker ifunc IRELATIVE support... \" >&6; }\n+    cat > conftest.s <<EOF\n+\t.text\n+\t.type\tfoo_resolver, @function\n+foo_resolver:\n+\tret\n+\t.size\tfoo_resolver, .-foo_resolver\n+\n+\t.globl\tfoo\n+\t.type\tfoo, %gnu_indirect_function\n+\t.set\tfoo, foo_resolver\n+\n+\t.globl\tbar\n+\t.type\tbar, @function\n+bar:\n+\tcall\tfoo\n+\tret\n+\t.size\tbar, .-bar\n+EOF\n+    if test x$gcc_cv_as != x \\\n+       && test x$gcc_cv_ld != x \\\n+       && test x$gcc_cv_readelf != x \\\n+       && $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1 \\\n+       && $gcc_cv_ld -o conftest conftest.o > /dev/null 2>&1 \\\n+       && $gcc_cv_readelf --relocs --wide conftest \\\n+\t  | grep R_RISCV_IRELATIVE > /dev/null 2>&1; then\n+      enable_gnu_indirect_function=yes\n+    fi\n+    rm -f conftest conftest.o conftest.s\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $enable_gnu_indirect_function\" >&5\n+$as_echo \"$enable_gnu_indirect_function\" >&6; }\n+    ;;\n+esac\n+\n gif=`if test x$enable_gnu_indirect_function = xyes; then echo 1; else echo 0; fi`\n \n cat >>confdefs.h <<_ACEOF"}, {"sha": "08f3034986ec5fa4eab0c98ee9e7c18052881156", "filename": "gcc/configure.ac", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97976c0757ad3173ac00d1e32e335f3f960b0b9f/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97976c0757ad3173ac00d1e32e335f3f960b0b9f/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=97976c0757ad3173ac00d1e32e335f3f960b0b9f", "patch": "@@ -2807,6 +2807,41 @@ Valid choices are 'yes' and 'no'.]) ;;\n   esac],\n  [enable_gnu_indirect_function=\"$default_gnu_indirect_function\"])\n \n+case \"${target}\" in\n+  riscv*-*-linux*)\n+    AC_MSG_CHECKING(linker ifunc IRELATIVE support)\n+    cat > conftest.s <<EOF\n+\t.text\n+\t.type\tfoo_resolver, @function\n+foo_resolver:\n+\tret\n+\t.size\tfoo_resolver, .-foo_resolver\n+\n+\t.globl\tfoo\n+\t.type\tfoo, %gnu_indirect_function\n+\t.set\tfoo, foo_resolver\n+\n+\t.globl\tbar\n+\t.type\tbar, @function\n+bar:\n+\tcall\tfoo\n+\tret\n+\t.size\tbar, .-bar\n+EOF\n+    if test x$gcc_cv_as != x \\\n+       && test x$gcc_cv_ld != x \\\n+       && test x$gcc_cv_readelf != x \\\n+       && $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1 \\\n+       && $gcc_cv_ld -o conftest conftest.o > /dev/null 2>&1 \\\n+       && $gcc_cv_readelf --relocs --wide conftest \\\n+\t  | grep R_RISCV_IRELATIVE > /dev/null 2>&1; then\n+      enable_gnu_indirect_function=yes\n+    fi\n+    rm -f conftest conftest.o conftest.s\n+    AC_MSG_RESULT($enable_gnu_indirect_function)\n+    ;;\n+esac\n+\n gif=`if test x$enable_gnu_indirect_function = xyes; then echo 1; else echo 0; fi`\n AC_DEFINE_UNQUOTED(HAVE_GNU_INDIRECT_FUNCTION, $gif,\n [Define if your system supports gnu indirect functions.])"}]}