{"sha": "fd1c9a07d46aeece59c452105e3f2ece665bd7b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQxYzlhMDdkNDZhZWVjZTU5YzQ1MjEwNWUzZjJlY2U2NjViZDdiOA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2016-12-07T01:28:13Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2016-12-07T01:28:13Z"}, "message": "Fix x86_64-ism in selftest (PR bootstrap/78705)\n\nIn r243317 I accidentally introduced an assumption in a selftest\nin i386.c that Pmode == DImode.  This patch conditionalizes the\noverzealous string comparison to avoid breaking the build on\n32-bit i386.c targets.\n\ngcc/ChangeLog:\n\tPR bootstrap/78705\n\t* config/i386/i386.c (selftest::ix86_test_dumping_memory_blockage):\n\tConditionalize the string comparison on Pmode == DImode.\n\nFrom-SVN: r243332", "tree": {"sha": "2dffcbe3702e6e8fe78b4b8b4267e2659c87abdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2dffcbe3702e6e8fe78b4b8b4267e2659c87abdc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd1c9a07d46aeece59c452105e3f2ece665bd7b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd1c9a07d46aeece59c452105e3f2ece665bd7b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd1c9a07d46aeece59c452105e3f2ece665bd7b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd1c9a07d46aeece59c452105e3f2ece665bd7b8/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b9e8329d65e1779dcb15412a8048c4ad54ec6cb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9e8329d65e1779dcb15412a8048c4ad54ec6cb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9e8329d65e1779dcb15412a8048c4ad54ec6cb7"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "d30345f36005f5d3c617c3ffe0eff21779333ee4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd1c9a07d46aeece59c452105e3f2ece665bd7b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd1c9a07d46aeece59c452105e3f2ece665bd7b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fd1c9a07d46aeece59c452105e3f2ece665bd7b8", "patch": "@@ -1,3 +1,9 @@\n+2016-12-06  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR bootstrap/78705\n+\t* config/i386/i386.c (ix86_test_dumping_memory_blockage):\n+\tConditionalize the string comparison on Pmode == DImode.\n+\n 2016-12-06  Tom de Vries  <tom@codesourcery.com>\n \n \tPR tree-optimization/67955"}, {"sha": "1cd1cd87477d573937f3974d5eb1a43434192637", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd1c9a07d46aeece59c452105e3f2ece665bd7b8/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd1c9a07d46aeece59c452105e3f2ece665bd7b8/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=fd1c9a07d46aeece59c452105e3f2ece665bd7b8", "patch": "@@ -51190,12 +51190,14 @@ ix86_test_dumping_memory_blockage ()\n \n   /* Verify that the repeated references to the SCRATCH show use\n      reuse IDS.  The first should be prefixed with a reuse ID,\n-     and the second should be dumped as a \"reuse_rtx\" of that ID.  */\n-  ASSERT_RTL_DUMP_EQ_WITH_REUSE\n-    (\"(cinsn 1 (set (mem/v:BLK (0|scratch:DI) [0  A8])\\n\"\n-     \"        (unspec:BLK [\\n\"\n-     \"                (mem/v:BLK (reuse_rtx 0) [0  A8])\\n\"\n-     \"            ] UNSPEC_MEMORY_BLOCKAGE)))\\n\", pat, &r);\n+     and the second should be dumped as a \"reuse_rtx\" of that ID.\n+     The expected string assumes Pmode == DImode.  */\n+  if (Pmode == DImode)\n+    ASSERT_RTL_DUMP_EQ_WITH_REUSE\n+      (\"(cinsn 1 (set (mem/v:BLK (0|scratch:DI) [0  A8])\\n\"\n+       \"        (unspec:BLK [\\n\"\n+       \"                (mem/v:BLK (reuse_rtx 0) [0  A8])\\n\"\n+       \"            ] UNSPEC_MEMORY_BLOCKAGE)))\\n\", pat, &r);\n }\n \n /* Run all target-specific selftests.  */"}]}