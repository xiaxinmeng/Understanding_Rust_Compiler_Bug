{"sha": "1c248308f49a5410b9e69330a924f264707625d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWMyNDgzMDhmNDlhNTQxMGI5ZTY5MzMwYTkyNGYyNjQ3MDc2MjVkNw==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2000-12-07T07:52:20Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2000-12-07T07:52:20Z"}, "message": "c-common.c (check_format_info): Warn for non-constant format strings with strftime formats if -Wformat-nonliteral.\n\n\t* c-common.c (check_format_info): Warn for non-constant format\n\tstrings with strftime formats if -Wformat-nonliteral.  Where the\n\tformat can convert arguments, if the format is not a string\n\tliteral and there are no arguments to the format, give a different\n\twarning message from the general non-string-literal case.\n\ntestsuite:\n\t* gcc.dg/format-nonlit-3.c: New test.\n\nFrom-SVN: r38105", "tree": {"sha": "c1e3c842a16f18e46f1ed159b69069f9fbf87597", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1e3c842a16f18e46f1ed159b69069f9fbf87597"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c248308f49a5410b9e69330a924f264707625d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c248308f49a5410b9e69330a924f264707625d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c248308f49a5410b9e69330a924f264707625d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c248308f49a5410b9e69330a924f264707625d7/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "014e7f1d30678868964dcfbeaef278736ff932f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/014e7f1d30678868964dcfbeaef278736ff932f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/014e7f1d30678868964dcfbeaef278736ff932f5"}], "stats": {"total": 53, "additions": 51, "deletions": 2}, "files": [{"sha": "ab777ca90b2aea52994975a229db227a4a405fb4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c248308f49a5410b9e69330a924f264707625d7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c248308f49a5410b9e69330a924f264707625d7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c248308f49a5410b9e69330a924f264707625d7", "patch": "@@ -1,3 +1,11 @@\n+2000-12-07  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* c-common.c (check_format_info): Warn for non-constant format\n+\tstrings with strftime formats if -Wformat-nonliteral.  Where the\n+\tformat can convert arguments, if the format is not a string\n+\tliteral and there are no arguments to the format, give a different\n+\twarning message from the general non-string-literal case.\n+\n 2000-12-07  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* c-common.c (format_wanted_type): Add reading_from_flag."}, {"sha": "5e7666a08b3939534eb2e39e7de0730d2ac6b40d", "filename": "gcc/c-common.c", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c248308f49a5410b9e69330a924f264707625d7/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c248308f49a5410b9e69330a924f264707625d7/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=1c248308f49a5410b9e69330a924f264707625d7", "patch": "@@ -2345,8 +2345,29 @@ check_format_info (status, info, params)\n       /* Functions taking a va_list normally pass a non-literal format\n \t string.  These functions typically are declared with\n \t first_arg_num == 0, so avoid warning in those cases.  */\n-      if (info->first_arg_num != 0 && warn_format_nonliteral)\n-\tstatus_warning (status, \"format not a string literal, argument types not checked\");\n+      if (!(format_types[info->format_type].flags & FMT_FLAG_ARG_CONVERT))\n+\t{\n+\t  /* For strftime-like formats, warn for not checking the format\n+\t     string; but there are no arguments to check.  */\n+\t  if (warn_format_nonliteral)\n+\t    status_warning (status, \"format not a string literal, format string not checked\");\n+\t}\n+      else if (info->first_arg_num != 0)\n+\t{\n+\t  /* If there are no arguments for the format at all, we may have\n+\t     printf (foo) which is likely to be a security hole.  */\n+\t  while (arg_num + 1 < info->first_arg_num)\n+\t    {\n+\t      if (params == 0)\n+\t\tbreak;\n+\t      params = TREE_CHAIN (params);\n+\t      ++arg_num;\n+\t    }\n+\t  if (params == 0 && warn_format_nonliteral)\n+\t    status_warning (status, \"format not a string literal and no format arguments\");\n+\t  else if (warn_format_nonliteral)\n+\t    status_warning (status, \"format not a string literal, argument types not checked\");\n+\t}\n     }\n \n   /* If there were extra arguments to the format, normally warn.  However,"}, {"sha": "d5974942aaaad4d5d197b89cfd977708e9c4d1b2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c248308f49a5410b9e69330a924f264707625d7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c248308f49a5410b9e69330a924f264707625d7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1c248308f49a5410b9e69330a924f264707625d7", "patch": "@@ -1,3 +1,7 @@\n+2000-12-07  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* gcc.dg/format-nonlit-3.c: New test.\n+\n 2000-12-07  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* gcc.dg/c90-printf-1.c: Add test for printf formats reading"}, {"sha": "4423151b4c136bb33fd1fc92d823daa45aa9f4f0", "filename": "gcc/testsuite/gcc.dg/format-nonlit-3.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c248308f49a5410b9e69330a924f264707625d7/gcc%2Ftestsuite%2Fgcc.dg%2Fformat-nonlit-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c248308f49a5410b9e69330a924f264707625d7/gcc%2Ftestsuite%2Fgcc.dg%2Fformat-nonlit-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fformat-nonlit-3.c?ref=1c248308f49a5410b9e69330a924f264707625d7", "patch": "@@ -0,0 +1,16 @@\n+/* Test for warnings for non-string-literal formats.  Test for strftime formats.  */\n+/* Origin: Joseph Myers <jsm28@cam.ac.uk> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99 -Wformat -Wformat-nonliteral\" } */\n+\n+typedef __SIZE_TYPE__ size_t;\n+\n+struct tm;\n+\n+extern size_t strftime (char *, size_t, const char *, const struct tm *);\n+\n+void\n+foo (char *s, size_t m, const struct tm *tp, char *fmt)\n+{\n+  strftime (s, m, fmt, tp); /* { dg-warning \"format string\" \"non-literal\" } */\n+}"}]}