{"sha": "881ef7be466c6ff0a88bd2a7be3bb91008388795", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODgxZWY3YmU0NjZjNmZmMGE4OGJkMmE3YmUzYmI5MTAwODM4ODc5NQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-10-23T20:15:04Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-10-23T20:15:04Z"}, "message": "re PR rtl-optimization/33846 (ICE in trunc_int_for_mode, at explow.c:55)\n\n        PR rtl-optimization/33846\n        * combine.c (simplify_shift_const_1) [NOT]: Skip vector modes.\n\ntestsuite/ChangeLog:\n\n        PR rtl-optimization/33846\n        * gcc.dg/vect/pr33846.c: New testcase.\n\nFrom-SVN: r129589", "tree": {"sha": "c8de088b6563dbffb0a24a9e77ae009ab5aa7612", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8de088b6563dbffb0a24a9e77ae009ab5aa7612"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/881ef7be466c6ff0a88bd2a7be3bb91008388795", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/881ef7be466c6ff0a88bd2a7be3bb91008388795", "html_url": "https://github.com/Rust-GCC/gccrs/commit/881ef7be466c6ff0a88bd2a7be3bb91008388795", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/881ef7be466c6ff0a88bd2a7be3bb91008388795/comments", "author": null, "committer": null, "parents": [{"sha": "68cba9eee7fe480459a7277a38ab61f1b5fa2af6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68cba9eee7fe480459a7277a38ab61f1b5fa2af6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68cba9eee7fe480459a7277a38ab61f1b5fa2af6"}], "stats": {"total": 48, "additions": 42, "deletions": 6}, "files": [{"sha": "3fb2fef9ccd062064f3097ec280fa01544742a4d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/881ef7be466c6ff0a88bd2a7be3bb91008388795/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/881ef7be466c6ff0a88bd2a7be3bb91008388795/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=881ef7be466c6ff0a88bd2a7be3bb91008388795", "patch": "@@ -1,3 +1,8 @@\n+2007-10-23  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR rtl-optimization/33846\n+\t* combine.c (simplify_shift_const_1) [NOT]: Skip vector modes.\n+\n 2007-10-23  Dorit Nuzman  <dorit@il.ibm.com>\n \n \tPR tree-optimization/33860\n@@ -32,8 +37,8 @@\n \n \tPR tree-optimization/33834\n \tPR tree-optimization/33835\n-\t* tree-vect-analyze.c (vect_analyze_operations): RELEVANT and LIVE stmts\n-\tneed to be checked for success seperately.\n+\t* tree-vect-analyze.c (vect_analyze_operations): RELEVANT and LIVE\n+\tstmts need to be checked for success seperately.\n \t* tree-vect-transform.c (vectorizable_call, vectorizable_conversion):\n \tRemove the check that stmt is not LIVE.\n \t(vectorizable_assignment, vectorizable_induction): Likewise.\n@@ -899,7 +904,7 @@\n \tIX86_BUILTIN_PSRADI128, IX86_BUILTIN_PSRLWI128,\n \tIX86_BUILTIN_PSRLDI128, IX86_BUILTIN_PSRLQI128]: Do not require\n \timmediate shift value.\n-\tconfig/i386/emmintrin.h (_mm_slli_epi16, _mm_slli_epi32,\n+\t* config/i386/emmintrin.h (_mm_slli_epi16, _mm_slli_epi32,\n \t_mm_slli_epi64, _mm_srai_epi16, _mm_srai_epi32, _mm_srli_epi16,\n \t_mm_srli_epi32, _mm_srli_epi64): Remove 'const' from count argument.\n \tRemove macros for !__OPTIMIZE__ case."}, {"sha": "cfd0ed1a4047f8ae6ca05c33e9f77c166ba9448b", "filename": "gcc/combine.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/881ef7be466c6ff0a88bd2a7be3bb91008388795/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/881ef7be466c6ff0a88bd2a7be3bb91008388795/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=881ef7be466c6ff0a88bd2a7be3bb91008388795", "patch": "@@ -9343,6 +9343,9 @@ simplify_shift_const_1 (enum rtx_code code, enum machine_mode result_mode,\n \t  break;\n \n \tcase NOT:\n+\t  if (VECTOR_MODE_P (mode))\n+\t    break;\n+\n \t  /* Make this fit the case below.  */\n \t  varop = gen_rtx_XOR (mode, XEXP (varop, 0),\n \t\t\t       GEN_INT (GET_MODE_MASK (mode)));"}, {"sha": "c68d6c23f7d2b7932e054f57e1ab9acbb7d1e821", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/881ef7be466c6ff0a88bd2a7be3bb91008388795/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/881ef7be466c6ff0a88bd2a7be3bb91008388795/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=881ef7be466c6ff0a88bd2a7be3bb91008388795", "patch": "@@ -1,4 +1,10 @@\n-2007-10-23  Martin Michlmayr <tbm@cyrius.com>\t\n+2007-10-23  Martin Michlmayr <tbm@cyrius.com>\n+\t    Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR rtl-optimization/33846\n+\t* gcc.dg/vect/pr33846.c: New testcase.\n+\n+2007-10-23  Martin Michlmayr <tbm@cyrius.com>\n \t    Dorit Nuzman  <dorit@il.ibm.com>\n \n \tPR tree-optimization/33860\n@@ -8,13 +14,13 @@\n 2007-10-23  Tehila Meyzels  <tehila@il.ibm.com>\n \t    Revital Eres  <eres@il.ibm.com>\t \n \n-\t*  testsuite/gcc.dg/sms-2.c: New testcase.\n+\t* testsuite/gcc.dg/sms-2.c: New testcase.\n \n 2007-10-22  David S. Miller  <davem@davemloft.net>\n \n \t* gcc.dg/globalreg-1.c: New test.\n \n-2007-10-22  Martin Michlmayr <tbm@cyrius.com>\t\n+2007-10-22  Martin Michlmayr <tbm@cyrius.com>\n \t    Dorit Nuzman  <dorit@il.ibm.com>\n \n \tPR tree-optimization/33834"}, {"sha": "f31e207bdef8d73aa073a6313c4f5e331f5ec1b2", "filename": "gcc/testsuite/gcc.dg/vect/pr33846.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/881ef7be466c6ff0a88bd2a7be3bb91008388795/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr33846.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/881ef7be466c6ff0a88bd2a7be3bb91008388795/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr33846.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr33846.c?ref=881ef7be466c6ff0a88bd2a7be3bb91008388795", "patch": "@@ -0,0 +1,22 @@\n+/* Testcase by Martin Michlmayr <tbm@cyrius.com> */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_shift } */\n+\n+int clamp_val (int i)\n+{\n+  return ~i >> 31;\n+}\n+\n+void _mix_some_samples (long buf, int *mix_buffer, int mix_size)\n+{\n+  int i;\n+  signed int *p = mix_buffer;\n+  for (i = mix_size ; i > 0; i--)\n+  {\n+    *((short *) buf) = clamp_val ((*p) + 0x800000);\n+    buf += 2;\n+    p++;\n+  }\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}]}