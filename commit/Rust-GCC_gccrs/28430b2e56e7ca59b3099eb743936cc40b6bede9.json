{"sha": "28430b2e56e7ca59b3099eb743936cc40b6bede9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg0MzBiMmU1NmU3Y2E1OWIzMDk5ZWI3NDM5MzZjYzQwYjZiZWRlOQ==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2012-11-02T14:44:12Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2012-11-02T14:44:12Z"}, "message": "re PR middle-end/55130 (ICE in insn_rhs_dead_pseudo_p, at lra-constraints.c:3224)\n\n2012-11-02  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR middle-end/55130\n\t* lra-constraints.c (debug_loc_equivalence_change_p): Rename to\n\tloc_equivalence_change_p.\n\t(lra_constraints): Check equiv_insn_bitmap for debug insn.  Call\n\tloc_equivalence_change_p for non-transformed insn.\n\n2012-11-02  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR middle-end/55150\n\t* gcc.target/i386/pr55130.c: New test.\n\nFrom-SVN: r193096", "tree": {"sha": "89ec994ba4f7f80eb189e062cee8aeaf73ca80cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89ec994ba4f7f80eb189e062cee8aeaf73ca80cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28430b2e56e7ca59b3099eb743936cc40b6bede9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28430b2e56e7ca59b3099eb743936cc40b6bede9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28430b2e56e7ca59b3099eb743936cc40b6bede9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28430b2e56e7ca59b3099eb743936cc40b6bede9/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "73edb27727ca3df30404e36295e5ead26a52bc56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73edb27727ca3df30404e36295e5ead26a52bc56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73edb27727ca3df30404e36295e5ead26a52bc56"}], "stats": {"total": 52, "additions": 45, "deletions": 7}, "files": [{"sha": "1d672944981732fce743cc9b1c3485b26dab41cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28430b2e56e7ca59b3099eb743936cc40b6bede9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28430b2e56e7ca59b3099eb743936cc40b6bede9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=28430b2e56e7ca59b3099eb743936cc40b6bede9", "patch": "@@ -1,3 +1,11 @@\n+2012-11-02  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR middle-end/55130\n+\t* lra-constraints.c (debug_loc_equivalence_change_p): Rename to\n+\tloc_equivalence_change_p.\n+\t(lra_constraints): Check equiv_insn_bitmap for debug insn.  Call\n+\tloc_equivalence_change_p for non-transformed insn.\n+\n 2012-11-02  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* cfg-flags.def (ABNORMAL_CALL): Fix comment."}, {"sha": "affdc5f5788ab317f51a070e71bd93335b997f16", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28430b2e56e7ca59b3099eb743936cc40b6bede9/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28430b2e56e7ca59b3099eb743936cc40b6bede9/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=28430b2e56e7ca59b3099eb743936cc40b6bede9", "patch": "@@ -3095,10 +3095,10 @@ contains_reg_p (rtx x, bool hard_reg_p, bool spilled_p)\n   return false;\n }\n \n-/* Process all regs in debug location *LOC and change them on\n-   equivalent substitution.  Return true if any change was done.  */\n+/* Process all regs in location *LOC and change them on equivalent\n+   substitution.  Return true if any change was done.  */\n static bool\n-debug_loc_equivalence_change_p (rtx *loc)\n+loc_equivalence_change_p (rtx *loc)\n {\n   rtx subst, reg, x = *loc;\n   bool result = false;\n@@ -3130,11 +3130,11 @@ debug_loc_equivalence_change_p (rtx *loc)\n   for (i = GET_RTX_LENGTH (code) - 1; i >= 0; i--)\n     {\n       if (fmt[i] == 'e')\n-\tresult = debug_loc_equivalence_change_p (&XEXP (x, i)) || result;\n+\tresult = loc_equivalence_change_p (&XEXP (x, i)) || result;\n       else if (fmt[i] == 'E')\n \tfor (j = XVECLEN (x, i) - 1; j >= 0; j--)\n \t  result\n-\t    = debug_loc_equivalence_change_p (&XVECEXP (x, i, j)) || result;\n+\t    = loc_equivalence_change_p (&XVECEXP (x, i, j)) || result;\n     }\n   return result;\n }\n@@ -3322,7 +3322,6 @@ lra_constraints (bool first_p)\n      substituted by their equivalences.  */\n   EXECUTE_IF_SET_IN_BITMAP (&equiv_insn_bitmap, 0, uid, bi)\n     lra_push_insn_by_uid (uid);\n-  bitmap_clear (&equiv_insn_bitmap);\n   lra_eliminate (false);\n   min_len = lra_insn_stack_length ();\n   new_insns_num = 0;\n@@ -3353,7 +3352,8 @@ lra_constraints (bool first_p)\n \t  /* We need to check equivalence in debug insn and change\n \t     pseudo to the equivalent value if necessary.  */\n \t  curr_id = lra_get_insn_recog_data (curr_insn);\n-\t  if (debug_loc_equivalence_change_p (curr_id->operand_loc[0]))\n+\t  if (bitmap_bit_p (&equiv_insn_bitmap, INSN_UID (curr_insn))\n+\t      && loc_equivalence_change_p (curr_id->operand_loc[0]))\n \t    {\n \t      lra_update_insn_regno_info (curr_insn);\n \t      changed_p = true;\n@@ -3417,8 +3417,18 @@ lra_constraints (bool first_p)\n \t  init_curr_operand_mode ();\n \t  if (curr_insn_transform ())\n \t    changed_p = true;\n+\t  /* Check non-transformed insns too for equiv change as USE\n+\t     or CLOBBER don't need reloads but can contain pseudos\n+\t     being changed on their equivalences.  */\n+\t  else if (bitmap_bit_p (&equiv_insn_bitmap, INSN_UID (curr_insn))\n+\t\t   && loc_equivalence_change_p (&PATTERN (curr_insn)))\n+\t    {\n+\t      lra_update_insn_regno_info (curr_insn);\n+\t      changed_p = true;\n+\t    }\n \t}\n     }\n+  bitmap_clear (&equiv_insn_bitmap);\n   /* If we used a new hard regno, changed_p should be true because the\n      hard reg is assigned to a new pseudo.  */\n #ifdef ENABLE_CHECKING"}, {"sha": "9ebf52999ad20da5281e34a5b703841c989cc5a4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28430b2e56e7ca59b3099eb743936cc40b6bede9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28430b2e56e7ca59b3099eb743936cc40b6bede9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=28430b2e56e7ca59b3099eb743936cc40b6bede9", "patch": "@@ -1,3 +1,8 @@\n+2012-11-02  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR middle-end/55150\n+\t* gcc.target/i386/pr55130.c: New test.\n+\n 2012-11-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/55147"}, {"sha": "61b98dc934cfd3ae1f465628cfc81b6bd9872e11", "filename": "gcc/testsuite/gcc.target/i386/pr55130.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28430b2e56e7ca59b3099eb743936cc40b6bede9/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr55130.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28430b2e56e7ca59b3099eb743936cc40b6bede9/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr55130.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr55130.c?ref=28430b2e56e7ca59b3099eb743936cc40b6bede9", "patch": "@@ -0,0 +1,15 @@\n+/* PR middle-end/55130 */\n+/* { dg-do compile { target ia32 } } */\n+/* { dg-options \"-O1 -mregparm=3 -mpreferred-stack-boundary=2\" } */\n+\n+extern void bar(long long);\n+\n+int foo(long long a, char b, long long c, long long d)\n+{\n+  if (c == 0)\n+    c = d;\n+\n+  bar(b + c);\n+\n+  return a == d;\n+}"}]}