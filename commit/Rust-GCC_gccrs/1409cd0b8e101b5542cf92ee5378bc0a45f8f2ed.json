{"sha": "1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQwOWNkMGI4ZTEwMWI1NTQyY2Y5MmVlNTM3OGJjMGE0NWY4ZjJlZA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2005-09-25T21:39:58Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2005-09-25T21:39:58Z"}, "message": "c99_protos.h: Add prototypes for C99 complex functions.\n\n\t* c99_protos.h: Add prototypes for C99 complex functions.\n\t* libgfortran.h: Include complex.h before c99_protos.h.\n\t* intrinsics/c99_functions.c: Define HAVE_ macros for the\n\tfallback functions we provide.\n\t(cabsf, cabs, cabsl, cargf, carg, cargl, cexpf, cexp, cexpl,\n\tclogf, clog, clogl, clog10f, clog10, clog10l, cpowf, cpow, cpowl,\n\tcqsrtf, csqrt, csqrtl, csinhf, csinh, csinhl, ccoshf, ccosh,\n\tccoshl, ctanhf, ctanh, ctanhl, csinf, csin, csinl, ccosf, ccos,\n\tccosl, ctanf, ctan, ctanl): New fallback functions.\n\t* Makefile.am (gfor_math_trig_c, gfor_math_trig_obj,\n\tgfor_specific_c, gfor_cmath_src, gfor_cmath_obj): Remove.\n\t* Makefile.in: Regenerate.\n\t* configure.ac: Remove checks for csin. Add checks for all C99\n\tcomplex functions.\n\t* config.h.in: Regenerate.\n\t* configure: Regenerate.\n\t* aclocal.m4: Regenerate.\n\nFrom-SVN: r104626", "tree": {"sha": "03f679a4e6e5541f1f29cf7b38a296b55f8061f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03f679a4e6e5541f1f29cf7b38a296b55f8061f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86ab632081cc94593ab6c22842d084fce5cf54d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86ab632081cc94593ab6c22842d084fce5cf54d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86ab632081cc94593ab6c22842d084fce5cf54d4"}], "stats": {"total": 11720, "additions": 9699, "deletions": 2021}, "files": [{"sha": "08d3e861497d4c466a83f9d29ca69d8b51fe1122", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed", "patch": "@@ -1,3 +1,23 @@\n+2005-09-25  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* c99_protos.h: Add prototypes for C99 complex functions.\n+\t* libgfortran.h: Include complex.h before c99_protos.h.\n+\t* intrinsics/c99_functions.c: Define HAVE_ macros for the\n+\tfallback functions we provide.\n+\t(cabsf, cabs, cabsl, cargf, carg, cargl, cexpf, cexp, cexpl,\n+\tclogf, clog, clogl, clog10f, clog10, clog10l, cpowf, cpow, cpowl,\n+\tcqsrtf, csqrt, csqrtl, csinhf, csinh, csinhl, ccoshf, ccosh,\n+\tccoshl, ctanhf, ctanh, ctanhl, csinf, csin, csinl, ccosf, ccos,\n+\tccosl, ctanf, ctan, ctanl): New fallback functions.\n+\t* Makefile.am (gfor_math_trig_c, gfor_math_trig_obj,\n+\tgfor_specific_c, gfor_cmath_src, gfor_cmath_obj): Remove.\n+\t* Makefile.in: Regenerate.\n+\t* configure.ac: Remove checks for csin. Add checks for all C99\n+\tcomplex functions.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\n 2005-09-25  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \t    Danny Smith  <dannysmith@users.sourceforge.net>\n "}, {"sha": "831ad76d9e53985586b6313f25da2449767d8602", "filename": "libgfortran/Makefile.am", "status": "modified", "additions": 1, "deletions": 46, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed/libgfortran%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed/libgfortran%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.am?ref=1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed", "patch": "@@ -302,28 +302,6 @@ gfor_built_src= $(i_all_c) $(i_any_c) $(i_count_c) $(i_maxloc0_c) \\\n     $(i_pow_c) \\\n     selected_int_kind.inc selected_real_kind.inc kinds.h\n \n-# We only use these if libm doesn't contain complex math functions.\n-\n-gfor_math_trig_c= \\\n-generated/trig_c4.c \\\n-generated/trig_c8.c\n-gfor_math_exp_c= \\\n-generated/exp_c4.c \\\n-generated/exp_c8.c\n-gfor_math_hyp_c= \\\n-generated/hyp_c4.c \\\n-generated/hyp_c8.c\n-\n-gfor_math_trig_obj= \\\n-trig_c4.lo \\\n-trig_c8.lo\n-gfor_math_exp_obj= \\\n-exp_c4.lo \\\n-exp_c8.lo\n-gfor_math_hyp_obj= \\\n-hyp_c4.lo \\\n-hyp_c8.lo\n-\n # Machine generated specifics\n gfor_built_specific_src= \\\n generated/_abs_c4.f90 \\\n@@ -390,32 +368,18 @@ generated/_mod_i4.f90 \\\n generated/_mod_i8.f90 \\\n generated/_mod_r4.f90 \\\n generated/_mod_r8.f90\n-#specific intrinsics requiring manal code\n-#gfor_specific_c= \\\n-intrinsics/_aimag.c \\\n-intrinsics/_cabs.c \\\n-foo\n \n gfor_specific_src= \\\n $(gfor_built_specific_src) \\\n $(gfor_built_specific2_src) \\\n intrinsics/dprod_r8.f90 \\\n intrinsics/f2c_specifics.F90\n \n-gfor_cmath_src= $(gfor_math_trig_c) $(gfor_math_exp_c) $(gfor_math_hyp_c)\n-gfor_cmath_obj= $(gfor_math_trig_obj) $(gfor_math_exp_obj) \\\n-    $(gfor_math_hyp_obj)\n-\n-BUILT_SOURCES=$(gfor_built_src) $(gfor_cmath_src) $(gfor_built_specific_src) \\\n+BUILT_SOURCES=$(gfor_built_src) $(gfor_built_specific_src) \\\n     $(gfor_built_specific2_src)\n libgfortran_la_SOURCES = $(gfor_src) $(gfor_built_src) $(gfor_io_src) \\\n     $(gfor_helper_src) $(gfor_io_headers) $(gfor_specific_src)\n \n-EXTRA_libgfortran_la_SOURCES = $(gfor_cmath_src)\n-\n-libgfortran_la_LIBADD = @MATH_OBJ@\n-libgfortran_la_DEPENDENCIES = @MATH_OBJ@\n-\n I_M4_DEPS=m4/iparm.m4\n I_M4_DEPS0=$(I_M4_DEPS) m4/iforeach.m4\n I_M4_DEPS1=$(I_M4_DEPS) m4/ifunction.m4\n@@ -520,15 +484,6 @@ $(i_set_exponent_c): m4/set_exponent.m4 m4/mtype.m4\n $(i_pow_c): m4/pow.m4 $(I_M4_DEPS)\n \tm4 -Dfile=$@ -I$(srcdir)/m4 pow.m4 > $(srcdir)/$@\n \n-$(gfor_math_trig_c): m4/ctrig.m4 m4/mtype.m4\n-\tm4 -Dfile=$@ -I$(srcdir)/m4 ctrig.m4 > $(srcdir)/$@\n-\n-$(gfor_math_exp_c): m4/cexp.m4 m4/mtype.m4\n-\tm4 -Dfile=$@ -I$(srcdir)/m4 cexp.m4 > $(srcdir)/$@\n-\n-$(gfor_math_hyp_c): m4/chyp.m4 m4/mtype.m4\n-\tm4 -Dfile=$@ -I$(srcdir)/m4 chyp.m4 > $(srcdir)/$@\n-\n $(gfor_built_specific_src): m4/specific.m4 m4/head.m4\n \tm4 -Dfile=$@ -I$(srcdir)/m4 specific.m4 > $(srcdir)/$@\n "}, {"sha": "06b90ce9f15fb134b95b26ebdd9f0b3e37dfd8f1", "filename": "libgfortran/Makefile.in", "status": "modified", "additions": 7, "deletions": 75, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed/libgfortran%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed/libgfortran%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.in?ref=1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed", "patch": "@@ -1,8 +1,8 @@\n-# Makefile.in generated by automake 1.9.4 from Makefile.am.\n+# Makefile.in generated by automake 1.9.6 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004  Free Software Foundation, Inc.\n+# 2003, 2004, 2005  Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -14,8 +14,6 @@\n \n @SET_MAKE@\n \n-SOURCES = $(libgfortran_la_SOURCES) $(EXTRA_libgfortran_la_SOURCES) $(libgfortranbegin_la_SOURCES)\n-\n srcdir = @srcdir@\n top_srcdir = @top_srcdir@\n VPATH = @srcdir@\n@@ -67,6 +65,7 @@ am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;\n am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\"\n toolexeclibLTLIBRARIES_INSTALL = $(INSTALL)\n LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n+libgfortran_la_LIBADD =\n am__objects_1 = compile_options.lo environ.lo error.lo main.lo \\\n \tmemory.lo pause.lo stop.lo string.lo select.lo\n am__objects_2 = all_l4.lo all_l8.lo\n@@ -174,7 +173,7 @@ LTPPFCCOMPILE = $(LIBTOOL) --mode=compile $(FC) $(DEFS) \\\n \t$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \\\n \t$(AM_FCFLAGS) $(FCFLAGS)\n FCLD = $(FC)\n-FCLINK = $(LIBTOOL) --mode=link $(FCLD) $(AM_FFLAGS) $(FCFLAGS) \\\n+FCLINK = $(LIBTOOL) --mode=link $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) \\\n \t$(AM_LDFLAGS) $(LDFLAGS) -o $@\n COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n \t$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n@@ -186,10 +185,9 @@ LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\\n \t$(AM_LDFLAGS) $(LDFLAGS) -o $@\n FCCOMPILE = $(FC) $(AM_FCFLAGS) $(FCFLAGS)\n LTFCCOMPILE = $(LIBTOOL) --mode=compile $(FC) $(AM_FCFLAGS) $(FCFLAGS)\n-SOURCES = $(libgfortran_la_SOURCES) $(EXTRA_libgfortran_la_SOURCES) \\\n-\t$(libgfortranbegin_la_SOURCES)\n+SOURCES = $(libgfortran_la_SOURCES) $(libgfortranbegin_la_SOURCES)\n DIST_SOURCES = $(libgfortran_la_SOURCES) \\\n-\t$(EXTRA_libgfortran_la_SOURCES) $(libgfortranbegin_la_SOURCES)\n+\t$(libgfortranbegin_la_SOURCES)\n MULTISRCTOP = \n MULTIBUILDTOP = \n MULTIDIRS = \n@@ -245,7 +243,6 @@ MAINT = @MAINT@\n MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@\n MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@\n MAKEINFO = @MAKEINFO@\n-MATH_OBJ = @MATH_OBJ@\n OBJEXT = @OBJEXT@\n PACKAGE = @PACKAGE@\n PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n@@ -597,32 +594,6 @@ gfor_built_src = $(i_all_c) $(i_any_c) $(i_count_c) $(i_maxloc0_c) \\\n     selected_int_kind.inc selected_real_kind.inc kinds.h\n \n \n-# We only use these if libm doesn't contain complex math functions.\n-gfor_math_trig_c = \\\n-generated/trig_c4.c \\\n-generated/trig_c8.c\n-\n-gfor_math_exp_c = \\\n-generated/exp_c4.c \\\n-generated/exp_c8.c\n-\n-gfor_math_hyp_c = \\\n-generated/hyp_c4.c \\\n-generated/hyp_c8.c\n-\n-gfor_math_trig_obj = \\\n-trig_c4.lo \\\n-trig_c8.lo\n-\n-gfor_math_exp_obj = \\\n-exp_c4.lo \\\n-exp_c8.lo\n-\n-gfor_math_hyp_obj = \\\n-hyp_c4.lo \\\n-hyp_c8.lo\n-\n-\n # Machine generated specifics\n gfor_built_specific_src = \\\n generated/_abs_c4.f90 \\\n@@ -690,30 +661,18 @@ generated/_mod_i8.f90 \\\n generated/_mod_r4.f90 \\\n generated/_mod_r8.f90\n \n-#specific intrinsics requiring manal code\n-#gfor_specific_c= \\\n-#intrinsics/_aimag.c \\\n-#intrinsics/_cabs.c \\\n-#foo\n gfor_specific_src = \\\n $(gfor_built_specific_src) \\\n $(gfor_built_specific2_src) \\\n intrinsics/dprod_r8.f90 \\\n intrinsics/f2c_specifics.F90\n \n-gfor_cmath_src = $(gfor_math_trig_c) $(gfor_math_exp_c) $(gfor_math_hyp_c)\n-gfor_cmath_obj = $(gfor_math_trig_obj) $(gfor_math_exp_obj) \\\n-    $(gfor_math_hyp_obj)\n-\n-BUILT_SOURCES = $(gfor_built_src) $(gfor_cmath_src) $(gfor_built_specific_src) \\\n+BUILT_SOURCES = $(gfor_built_src) $(gfor_built_specific_src) \\\n     $(gfor_built_specific2_src)\n \n libgfortran_la_SOURCES = $(gfor_src) $(gfor_built_src) $(gfor_io_src) \\\n     $(gfor_helper_src) $(gfor_io_headers) $(gfor_specific_src)\n \n-EXTRA_libgfortran_la_SOURCES = $(gfor_cmath_src)\n-libgfortran_la_LIBADD = @MATH_OBJ@\n-libgfortran_la_DEPENDENCIES = @MATH_OBJ@\n I_M4_DEPS = m4/iparm.m4\n I_M4_DEPS0 = $(I_M4_DEPS) m4/iforeach.m4\n I_M4_DEPS1 = $(I_M4_DEPS) m4/ifunction.m4\n@@ -1411,24 +1370,6 @@ in_unpack_generic.lo: runtime/in_unpack_generic.c\n normalize.lo: runtime/normalize.c\n \t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o normalize.lo `test -f 'runtime/normalize.c' || echo '$(srcdir)/'`runtime/normalize.c\n \n-trig_c4.lo: generated/trig_c4.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o trig_c4.lo `test -f 'generated/trig_c4.c' || echo '$(srcdir)/'`generated/trig_c4.c\n-\n-trig_c8.lo: generated/trig_c8.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o trig_c8.lo `test -f 'generated/trig_c8.c' || echo '$(srcdir)/'`generated/trig_c8.c\n-\n-exp_c4.lo: generated/exp_c4.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exp_c4.lo `test -f 'generated/exp_c4.c' || echo '$(srcdir)/'`generated/exp_c4.c\n-\n-exp_c8.lo: generated/exp_c8.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exp_c8.lo `test -f 'generated/exp_c8.c' || echo '$(srcdir)/'`generated/exp_c8.c\n-\n-hyp_c4.lo: generated/hyp_c4.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hyp_c4.lo `test -f 'generated/hyp_c4.c' || echo '$(srcdir)/'`generated/hyp_c4.c\n-\n-hyp_c8.lo: generated/hyp_c8.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hyp_c8.lo `test -f 'generated/hyp_c8.c' || echo '$(srcdir)/'`generated/hyp_c8.c\n-\n .f90.o:\n \t$(FCCOMPILE) -c -o $@ $<\n \n@@ -2035,15 +1976,6 @@ selected_real_kind.inc: $(srcdir)/mk-srk-inc.sh\n @MAINTAINER_MODE_TRUE@$(i_pow_c): m4/pow.m4 $(I_M4_DEPS)\n @MAINTAINER_MODE_TRUE@\tm4 -Dfile=$@ -I$(srcdir)/m4 pow.m4 > $(srcdir)/$@\n \n-@MAINTAINER_MODE_TRUE@$(gfor_math_trig_c): m4/ctrig.m4 m4/mtype.m4\n-@MAINTAINER_MODE_TRUE@\tm4 -Dfile=$@ -I$(srcdir)/m4 ctrig.m4 > $(srcdir)/$@\n-\n-@MAINTAINER_MODE_TRUE@$(gfor_math_exp_c): m4/cexp.m4 m4/mtype.m4\n-@MAINTAINER_MODE_TRUE@\tm4 -Dfile=$@ -I$(srcdir)/m4 cexp.m4 > $(srcdir)/$@\n-\n-@MAINTAINER_MODE_TRUE@$(gfor_math_hyp_c): m4/chyp.m4 m4/mtype.m4\n-@MAINTAINER_MODE_TRUE@\tm4 -Dfile=$@ -I$(srcdir)/m4 chyp.m4 > $(srcdir)/$@\n-\n @MAINTAINER_MODE_TRUE@$(gfor_built_specific_src): m4/specific.m4 m4/head.m4\n @MAINTAINER_MODE_TRUE@\tm4 -Dfile=$@ -I$(srcdir)/m4 specific.m4 > $(srcdir)/$@\n "}, {"sha": "c52207135253a6812af7633a97ea5c0a60b35b2b", "filename": "libgfortran/aclocal.m4", "status": "modified", "additions": 94, "deletions": 240, "changes": 334, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed/libgfortran%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed/libgfortran%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Faclocal.m4?ref=1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed", "patch": "@@ -1,7 +1,7 @@\n-# generated automatically by aclocal 1.9.4 -*- Autoconf -*-\n+# generated automatically by aclocal 1.9.6 -*- Autoconf -*-\n \n-# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n-# Free Software Foundation, Inc.\n+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n+# 2005  Free Software Foundation, Inc.\n # This file is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -11,23 +11,11 @@\n # even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n # PARTICULAR PURPOSE.\n \n-#                                                        -*- Autoconf -*-\n-# Copyright (C) 2002, 2003  Free Software Foundation, Inc.\n-# Generated from amversion.in; do not edit by hand.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n+# Copyright (C) 2002, 2003, 2005  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n # AM_AUTOMAKE_VERSION(VERSION)\n # ----------------------------\n@@ -40,26 +28,15 @@ AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version=\"1.9\"])\n # Call AM_AUTOMAKE_VERSION so it can be traced.\n # This function is AC_REQUIREd by AC_INIT_AUTOMAKE.\n AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],\n-\t [AM_AUTOMAKE_VERSION([1.9.4])])\n+\t [AM_AUTOMAKE_VERSION([1.9.6])])\n \n-# AM_AUX_DIR_EXPAND\n+# AM_AUX_DIR_EXPAND                                         -*- Autoconf -*-\n \n-# Copyright (C) 2001, 2003 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n+# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n # For projects using AC_CONFIG_AUX_DIR([foo]), Autoconf sets\n # $ac_aux_dir to `$srcdir/foo'.  In other projects, it is set to\n@@ -106,26 +83,16 @@ AC_PREREQ([2.50])dnl\n am_aux_dir=`cd $ac_aux_dir && pwd`\n ])\n \n-# AM_CONDITIONAL                                              -*- Autoconf -*-\n+# AM_CONDITIONAL                                            -*- Autoconf -*-\n \n-# Copyright (C) 1997, 2000, 2001, 2003, 2004 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n+# Copyright (C) 1997, 2000, 2001, 2003, 2004, 2005\n+# Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n-# serial 6\n+# serial 7\n \n # AM_CONDITIONAL(NAME, SHELL-CONDITION)\n # -------------------------------------\n@@ -149,30 +116,19 @@ AC_CONFIG_COMMANDS_PRE(\n Usually this means the macro was only invoked conditionally.]])\n fi])])\n \n-# Do all the work for Automake.                            -*- Autoconf -*-\n+# Do all the work for Automake.                             -*- Autoconf -*-\n \n-# This macro actually does too much some checks are only needed if\n-# your package does certain things.  But this isn't really a big deal.\n-\n-# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n # Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n+# serial 12\n \n-# serial 11\n+# This macro actually does too much.  Some checks are only needed if\n+# your package does certain things.  But this isn't really a big deal.\n \n # AM_INIT_AUTOMAKE(PACKAGE, VERSION, [NO-DEFINE])\n # AM_INIT_AUTOMAKE([OPTIONS])\n@@ -274,54 +230,31 @@ for _am_header in $config_headers :; do\n done\n echo \"timestamp for $1\" >`AS_DIRNAME([$1])`/stamp-h[]$_am_stamp_count])\n \n+# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n # AM_PROG_INSTALL_SH\n # ------------------\n # Define $install_sh.\n-\n-# Copyright (C) 2001, 2003 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n-\n AC_DEFUN([AM_PROG_INSTALL_SH],\n [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl\n install_sh=${install_sh-\"$am_aux_dir/install-sh\"}\n AC_SUBST(install_sh)])\n \n-# Add --enable-maintainer-mode option to configure.\n+# Add --enable-maintainer-mode option to configure.         -*- Autoconf -*-\n # From Jim Meyering\n \n-# Copyright (C) 1996, 1998, 2000, 2001, 2002, 2003, 2004\n+# Copyright (C) 1996, 1998, 2000, 2001, 2002, 2003, 2004, 2005\n # Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n-\n-# serial 3\n+# serial 4\n \n AC_DEFUN([AM_MAINTAINER_MODE],\n [AC_MSG_CHECKING([whether to enable maintainer-specific portions of Makefiles])\n@@ -340,27 +273,16 @@ AC_DEFUN([AM_MAINTAINER_MODE],\n \n AU_DEFUN([jm_MAINTAINER_MODE], [AM_MAINTAINER_MODE])\n \n-#  -*- Autoconf -*-\n-\n-\n-# Copyright (C) 1997, 1999, 2000, 2001, 2003 Free Software Foundation, Inc.\n+# Fake the existence of programs that GNU maintainers use.  -*- Autoconf -*-\n \n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n+# Copyright (C) 1997, 1999, 2000, 2001, 2003, 2005\n+# Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n-# serial 3\n+# serial 4\n \n # AM_MISSING_PROG(NAME, PROGRAM)\n # ------------------------------\n@@ -386,27 +308,16 @@ else\n fi\n ])\n \n+# Copyright (C) 2003, 2004, 2005  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n # AM_PROG_MKDIR_P\n # ---------------\n # Check whether `mkdir -p' is supported, fallback to mkinstalldirs otherwise.\n-\n-# Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n-\n+#\n # Automake 1.8 used `mkdir -m 0755 -p --' to ensure that directories\n # created by `make install' are always world readable, even if the\n # installer happens to have an overly restrictive umask (e.g. 077).\n@@ -460,25 +371,14 @@ else\n fi\n AC_SUBST([mkdir_p])])\n \n-# Copyright (C) 1998, 1999, 2000, 2001, 2003, 2004\n+# Copyright (C) 1998, 1999, 2000, 2001, 2003, 2004, 2005\n # Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n-\n-# serial 4\n+# serial 5\n \n # AM_ENABLE_MULTILIB([MAKEFILE], [REL-TO-TOP-SRCDIR])\n # ---------------------------------------------------\n@@ -529,26 +429,15 @@ multi_basedir=\"$multi_basedir\"\n CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}\n CC=\"$CC\"])])dnl\n \n-# Helper functions for option handling.                    -*- Autoconf -*-\n-\n-# Copyright (C) 2001, 2002, 2003  Free Software Foundation, Inc.\n+# Helper functions for option handling.                     -*- Autoconf -*-\n \n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n+# Copyright (C) 2001, 2002, 2003, 2005  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n-# serial 2\n+# serial 3\n \n # _AM_MANGLE_OPTION(NAME)\n # -----------------------\n@@ -573,28 +462,16 @@ AC_DEFUN([_AM_SET_OPTIONS],\n AC_DEFUN([_AM_IF_OPTION],\n [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])\n \n-#\n-# Check to make sure that the build environment is sane.\n-#\n-\n-# Copyright (C) 1996, 1997, 2000, 2001, 2003 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n+# Check to make sure that the build environment is sane.    -*- Autoconf -*-\n \n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n+# Copyright (C) 1996, 1997, 2000, 2001, 2003, 2005\n+# Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n-# serial 3\n+# serial 4\n \n # AM_SANITY_CHECK\n # ---------------\n@@ -637,25 +514,14 @@ Check your system clock])\n fi\n AC_MSG_RESULT(yes)])\n \n-# AM_PROG_INSTALL_STRIP\n-\n-# Copyright (C) 2001, 2003 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n+# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n+# AM_PROG_INSTALL_STRIP\n+# ---------------------\n # One issue with vendor `install' (even GNU) is that you can't\n # specify the program used to strip binaries.  This is especially\n # annoying in cross-compiling environments, where the build's strip\n@@ -678,25 +544,13 @@ AC_SUBST([INSTALL_STRIP_PROGRAM])])\n \n # Check how to create a tarball.                            -*- Autoconf -*-\n \n-# Copyright (C) 2004  Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n-\n-# serial 1\n+# Copyright (C) 2004, 2005  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n+# serial 2\n \n # _AM_PROG_TAR(FORMAT)\n # --------------------"}, {"sha": "8b330b3ecdc8b74dda9e3f7e3e446d7b22bb5716", "filename": "libgfortran/c99_protos.h", "status": "modified", "additions": 217, "deletions": 2, "changes": 219, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed/libgfortran%2Fc99_protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed/libgfortran%2Fc99_protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fc99_protos.h?ref=1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed", "patch": "@@ -29,6 +29,7 @@ Boston, MA 02110-1301, USA.  */\n #ifndef C99_PROTOS_H\n #define C99_PROTOS_H\n \n+/* float variants of libm functions */\n #ifndef HAVE_ACOSF\n extern float acosf(float);\n #endif\n@@ -130,11 +131,11 @@ extern float tanhf(float);\n #endif\n \n #ifndef HAVE_TRUNC\n-extern double trunc(double x);\n+extern double trunc(double);\n #endif\n \n #ifndef HAVE_TRUNCF\n-extern float truncf(float x);\n+extern float truncf(float);\n #endif\n \n #ifndef HAVE_NEXTAFTERF\n@@ -153,9 +154,223 @@ extern double round(double);\n extern float roundf(float);\n #endif\n \n+\n+/* log10l is needed on all platforms for decimal I/O */\n #ifndef HAVE_LOG10L\n+#define HAVE_LOG10L\n extern long double log10l(long double);\n #endif\n \n+\n+/* complex math functions */\n+\n+#if !defined(HAVE_CABSF)\n+#define HAVE_CABSF\n+extern float cabsf (float complex);\n+#endif\n+\n+#if !defined(HAVE_CABS)\n+#define HAVE_CABS\n+extern double cabs (double complex);\n+#endif\n+\n+#if !defined(HAVE_CABSL) && defined(HAVE_HYPOTL)\n+#define HAVE_CABSL\n+extern long double cabsl (long double complex);\n+#endif\n+\n+\n+#if !defined(HAVE_CARGF)\n+#define HAVE_CARGF\n+extern float cargf (float complex);\n+#endif\n+\n+#if !defined(HAVE_CARG)\n+#define HAVE_CARG\n+extern double carg (double complex);\n+#endif\n+\n+#if !defined(HAVE_CARGL) && defined(HAVE_ATAN2L)\n+#define HAVE_CARGL\n+extern long double cargl (long double complex);\n+#endif\n+\n+\n+#if !defined(HAVE_CEXPF)\n+#define HAVE_CEXPF\n+extern float complex cexpf (float complex);\n+#endif\n+\n+#if !defined(HAVE_CEXP)\n+#define HAVE_CEXP\n+extern double complex cexp (double complex);\n+#endif\n+\n+#if !defined(HAVE_CEXPL) && defined(HAVE_COSL) && defined(HAVE_SINL) && defined(EXPL)\n+#define HAVE_CEXPL\n+extern long double complex cexpl (long double complex);\n+#endif\n+\n+\n+#if !defined(HAVE_CLOGF)\n+#define HAVE_CLOGF\n+extern float complex clogf (float complex);\n+#endif\n+\n+#if !defined(HAVE_CLOG)\n+#define HAVE_CLOG\n+extern double complex clog (double complex);\n+#endif\n+\n+#if !defined(HAVE_CLOGL) && defined(HAVE_LOGL) && defined(HAVE_CABSL) && defined(HAVE_CARGL)\n+#define HAVE_CLOGL\n+extern long double complex clogl (long double complex);\n+#endif\n+\n+\n+#if !defined(HAVE_CLOG10F)\n+#define HAVE_CLOG10F\n+extern float complex clog10f (float complex);\n+#endif\n+\n+#if !defined(HAVE_CLOG10)\n+#define HAVE_CLOG10\n+extern double complex clog10 (double complex);\n+#endif\n+\n+#if !defined(HAVE_CLOG10L) && defined(HAVE_LOG10L) && defined(HAVE_CABSL) && defined(HAVE_CARGL)\n+#define HAVE_CLOG10L\n+extern long double complex clog10l (long double complex);\n+#endif\n+\n+\n+#if !defined(HAVE_CPOWF)\n+#define HAVE_CPOWF\n+extern float complex cpowf (float complex, float complex);\n+#endif\n+\n+#if !defined(HAVE_CPOW)\n+#define HAVE_CPOW\n+extern double complex cpow (double complex, double complex);\n+#endif\n+\n+#if !defined(HAVE_CPOWL) && defined(HAVE_CEXPL) && defined(HAVE_CLOGL)\n+#define HAVE_CPOWL\n+extern long double complex cpowl (long double complex, long double complex);\n+#endif\n+\n+\n+#if !defined(HAVE_CSQRTF)\n+#define HAVE_CSQRTF\n+extern float complex csqrtf (float complex);\n+#endif\n+\n+#if !defined(HAVE_CSQRT)\n+#define HAVE_CSQRT\n+extern double complex csqrt (double complex);\n+#endif\n+\n+#if !defined(HAVE_CSQRTL) && defined(HAVE_COPYSIGNL) && defined(HAVE_SQRTL) && defined(HAVE_FABSL) && defined(HAVE_HYPOTL)\n+#define HAVE_CSQRTL\n+extern long double complex csqrtl (long double complex);\n+#endif\n+\n+\n+#if !defined(HAVE_CSINHF)\n+#define HAVE_CSINHF\n+extern float complex csinhf (float complex);\n+#endif\n+\n+#if !defined(HAVE_CSINH)\n+#define HAVE_CSINH\n+extern double complex csinh (double complex);\n+#endif\n+\n+#if !defined(HAVE_CSINHL) && defined(HAVE_COSL) && defined(HAVE_COSHL) && defined(HAVE_SINL) && defined(HAVE_SINHL)\n+#define HAVE_CSINHL\n+extern long double complex csinhl (long double complex);\n+#endif\n+\n+\n+#if !defined(HAVE_CCOSHF)\n+#define HAVE_CCOSHF\n+extern float complex ccoshf (float complex);\n+#endif\n+\n+#if !defined(HAVE_CCOSH)\n+#define HAVE_CCOSH\n+extern double complex ccosh (double complex);\n+#endif\n+\n+#if !defined(HAVE_CCOSHL) && defined(HAVE_COSL) && defined(HAVE_COSHL) && defined(HAVE_SINL) && defined(HAVE_SINHL)\n+#define HAVE_CCOSHL\n+extern long double complex ccoshl (long double complex);\n+#endif\n+\n+\n+#if !defined(HAVE_CTANHF)\n+#define HAVE_CTANHF\n+extern float complex ctanhf (float complex);\n+#endif\n+\n+#if !defined(HAVE_CTANH)\n+#define HAVE_CTANH\n+extern double complex ctanh (double complex);\n+#endif\n+\n+#if !defined(HAVE_CTANHL) && defined(HAVE_TANL) && defined(HAVE_TANHL)\n+#define HAVE_CTANHL\n+extern long double complex ctanhl (long double complex);\n+#endif\n+\n+\n+#if !defined(HAVE_CSINF)\n+#define HAVE_CSINF\n+extern float complex csinf (float complex);\n+#endif\n+\n+#if !defined(HAVE_CSIN)\n+#define HAVE_CSIN\n+extern double complex csin (double complex);\n+#endif\n+\n+#if !defined(HAVE_CSINL) && defined(HAVE_COSL) && defined(HAVE_COSHL) && defined(HAVE_SINL) && defined(HAVE_SINHL)\n+#define HAVE_CSINL\n+extern long double complex csinl (long double complex);\n+#endif\n+\n+\n+#if !defined(HAVE_CCOSF)\n+#define HAVE_CCOSF\n+extern float complex ccosf (float complex);\n+#endif\n+\n+#if !defined(HAVE_CCOS)\n+#define HAVE_CCOS\n+extern double complex ccos (double complex);\n+#endif\n+\n+#if !defined(HAVE_CCOSL) && defined(HAVE_COSL) && defined(HAVE_COSHL) && defined(HAVE_SINL) && defined(HAVE_SINHL)\n+#define HAVE_CCOSL\n+extern long double complex ccosl (long double complex);\n+#endif\n+\n+\n+#if !defined(HAVE_CTANF)\n+#define HAVE_CTANF\n+extern float complex ctanf (float complex);\n+#endif\n+\n+#if !defined(HAVE_CTAN)\n+#define HAVE_CTAN\n+extern double complex ctan (double complex);\n+#endif\n+\n+#if !defined(HAVE_CTANL) && defined(HAVE_TANL) && defined(HAVE_TANHL)\n+#define HAVE_CTANL\n+extern long double complex ctanl (long double complex);\n+#endif\n+\n+\n #endif  /* C99_PROTOS_H  */\n "}, {"sha": "47f7c2f76c827daaa740937d8b8534a1bcbb36b2", "filename": "libgfortran/config.h.in", "status": "modified", "additions": 294, "deletions": 0, "changes": 294, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed/libgfortran%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed/libgfortran%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig.h.in?ref=1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed", "patch": "@@ -3,27 +3,69 @@\n /* Does gettimeofday take a single argument */\n #undef GETTIMEOFDAY_ONE_ARGUMENT\n \n+/* libm includes acos */\n+#undef HAVE_ACOS\n+\n /* libm includes acosf */\n #undef HAVE_ACOSF\n \n+/* libm includes acosh */\n+#undef HAVE_ACOSH\n+\n /* libm includes acoshf */\n #undef HAVE_ACOSHF\n \n+/* libm includes acoshl */\n+#undef HAVE_ACOSHL\n+\n+/* libm includes acosl */\n+#undef HAVE_ACOSL\n+\n+/* libm includes asin */\n+#undef HAVE_ASIN\n+\n /* libm includes asinf */\n #undef HAVE_ASINF\n \n+/* libm includes asinh */\n+#undef HAVE_ASINH\n+\n /* libm includes asinhf */\n #undef HAVE_ASINHF\n \n+/* libm includes asinhl */\n+#undef HAVE_ASINHL\n+\n+/* libm includes asinl */\n+#undef HAVE_ASINL\n+\n+/* libm includes atan */\n+#undef HAVE_ATAN\n+\n+/* libm includes atan2 */\n+#undef HAVE_ATAN2\n+\n /* libm includes atan2f */\n #undef HAVE_ATAN2F\n \n+/* libm includes atan2l */\n+#undef HAVE_ATAN2L\n+\n /* libm includes atanf */\n #undef HAVE_ATANF\n \n+/* libm includes atanh */\n+#undef HAVE_ATANH\n+\n /* libm includes atanhf */\n #undef HAVE_ATANHF\n \n+/* libm includes atanhl */\n+#undef HAVE_ATANHL\n+\n+/* libm includes atanl */\n+#undef HAVE_ATANL\n+\n /* Define to 1 if the target supports __attribute__((alias(...))). */\n #undef HAVE_ATTRIBUTE_ALIAS\n \n@@ -33,30 +75,171 @@\n /* Define to 1 if the target supports __attribute__((visibility(...))). */\n #undef HAVE_ATTRIBUTE_VISIBILITY\n \n+/* libm includes cabs */\n+#undef HAVE_CABS\n+\n+/* libm includes cabsf */\n+#undef HAVE_CABSF\n+\n+/* libm includes cabsl */\n+#undef HAVE_CABSL\n+\n+/* libm includes carg */\n+#undef HAVE_CARG\n+\n+/* libm includes cargf */\n+#undef HAVE_CARGF\n+\n+/* libm includes cargl */\n+#undef HAVE_CARGL\n+\n+/* libm includes ccos */\n+#undef HAVE_CCOS\n+\n+/* libm includes ccosf */\n+#undef HAVE_CCOSF\n+\n+/* libm includes ccosh */\n+#undef HAVE_CCOSH\n+\n+/* libm includes ccoshf */\n+#undef HAVE_CCOSHF\n+\n+/* libm includes ccoshl */\n+#undef HAVE_CCOSHL\n+\n+/* libm includes ccosl */\n+#undef HAVE_CCOSL\n+\n+/* libm includes ceil */\n+#undef HAVE_CEIL\n+\n /* libm includes ceilf */\n #undef HAVE_CEILF\n \n+/* libm includes ceill */\n+#undef HAVE_CEILL\n+\n+/* libm includes cexp */\n+#undef HAVE_CEXP\n+\n+/* libm includes cexpf */\n+#undef HAVE_CEXPF\n+\n+/* libm includes cexpl */\n+#undef HAVE_CEXPL\n+\n /* Define to 1 if you have the `chdir' function. */\n #undef HAVE_CHDIR\n \n /* Define to 1 if you have the `chsize' function. */\n #undef HAVE_CHSIZE\n \n+/* libm includes clog */\n+#undef HAVE_CLOG\n+\n+/* libm includes clog10 */\n+#undef HAVE_CLOG10\n+\n+/* libm includes clog10f */\n+#undef HAVE_CLOG10F\n+\n+/* libm includes clog10l */\n+#undef HAVE_CLOG10L\n+\n+/* libm includes clogf */\n+#undef HAVE_CLOGF\n+\n+/* libm includes clogl */\n+#undef HAVE_CLOGL\n+\n /* complex.h exists */\n #undef HAVE_COMPLEX_H\n \n+/* libm includes copysign */\n+#undef HAVE_COPYSIGN\n+\n /* libm includes copysignf */\n #undef HAVE_COPYSIGNF\n \n+/* libm includes copysignl */\n+#undef HAVE_COPYSIGNL\n+\n+/* libm includes cos */\n+#undef HAVE_COS\n+\n /* libm includes cosf */\n #undef HAVE_COSF\n \n+/* libm includes cosh */\n+#undef HAVE_COSH\n+\n /* libm includes coshf */\n #undef HAVE_COSHF\n \n+/* libm includes coshl */\n+#undef HAVE_COSHL\n+\n+/* libm includes cosl */\n+#undef HAVE_COSL\n+\n+/* libm includes cpow */\n+#undef HAVE_CPOW\n+\n+/* libm includes cpowf */\n+#undef HAVE_CPOWF\n+\n+/* libm includes cpowl */\n+#undef HAVE_CPOWL\n+\n /* Define if CRLF is line terminator. */\n #undef HAVE_CRLF\n \n+/* libm includes csin */\n+#undef HAVE_CSIN\n+\n+/* libm includes csinf */\n+#undef HAVE_CSINF\n+\n+/* libm includes csinh */\n+#undef HAVE_CSINH\n+\n+/* libm includes csinhf */\n+#undef HAVE_CSINHF\n+\n+/* libm includes csinhl */\n+#undef HAVE_CSINHL\n+\n+/* libm includes csinl */\n+#undef HAVE_CSINL\n+\n+/* libm includes csqrt */\n+#undef HAVE_CSQRT\n+\n+/* libm includes csqrtf */\n+#undef HAVE_CSQRTF\n+\n+/* libm includes csqrtl */\n+#undef HAVE_CSQRTL\n+\n+/* libm includes ctan */\n+#undef HAVE_CTAN\n+\n+/* libm includes ctanf */\n+#undef HAVE_CTANF\n+\n+/* libm includes ctanh */\n+#undef HAVE_CTANH\n+\n+/* libm includes ctanhf */\n+#undef HAVE_CTANHF\n+\n+/* libm includes ctanhl */\n+#undef HAVE_CTANHL\n+\n+/* libm includes ctanl */\n+#undef HAVE_CTANL\n+\n /* libm includes erf */\n #undef HAVE_ERF\n \n@@ -66,24 +249,54 @@\n /* libm includes erfcf */\n #undef HAVE_ERFCF\n \n+/* libm includes erfcl */\n+#undef HAVE_ERFCL\n+\n /* libm includes erff */\n #undef HAVE_ERFF\n \n+/* libm includes erfl */\n+#undef HAVE_ERFL\n+\n+/* libm includes exp */\n+#undef HAVE_EXP\n+\n /* libm includes expf */\n #undef HAVE_EXPF\n \n+/* libm includes expl */\n+#undef HAVE_EXPL\n+\n+/* libm includes fabs */\n+#undef HAVE_FABS\n+\n /* libm includes fabsf */\n #undef HAVE_FABSF\n \n+/* libm includes fabsl */\n+#undef HAVE_FABSL\n+\n /* libm includes finite */\n #undef HAVE_FINITE\n \n+/* libm includes floor */\n+#undef HAVE_FLOOR\n+\n /* libm includes floorf */\n #undef HAVE_FLOORF\n \n+/* libm includes floorl */\n+#undef HAVE_FLOORL\n+\n+/* libm includes frexp */\n+#undef HAVE_FREXP\n+\n /* libm includes frexpf */\n #undef HAVE_FREXPF\n \n+/* libm includes frexpl */\n+#undef HAVE_FREXPL\n+\n /* Define to 1 if you have the `ftruncate' function. */\n #undef HAVE_FTRUNCATE\n \n@@ -111,9 +324,15 @@\n /* libc includes getuid */\n #undef HAVE_GETUID\n \n+/* libm includes hypot */\n+#undef HAVE_HYPOT\n+\n /* libm includes hypotf */\n #undef HAVE_HYPOTF\n \n+/* libm includes hypotl */\n+#undef HAVE_HYPOTL\n+\n /* Define to 1 if you have the <ieeefp.h> header file. */\n #undef HAVE_IEEEFP_H\n \n@@ -126,24 +345,39 @@\n /* libm includes j0f */\n #undef HAVE_J0F\n \n+/* libm includes j0l */\n+#undef HAVE_J0L\n+\n /* libm includes j1 */\n #undef HAVE_J1\n \n /* libm includes j1f */\n #undef HAVE_J1F\n \n+/* libm includes j1l */\n+#undef HAVE_J1L\n+\n /* libm includes jn */\n #undef HAVE_JN\n \n /* libm includes jnf */\n #undef HAVE_JNF\n \n+/* libm includes jnl */\n+#undef HAVE_JNL\n+\n /* Define to 1 if you have the `kill' function. */\n #undef HAVE_KILL\n \n /* Define to 1 if you have the `link' function. */\n #undef HAVE_LINK\n \n+/* libm includes log */\n+#undef HAVE_LOG\n+\n+/* libm includes log10 */\n+#undef HAVE_LOG10\n+\n /* libm includes log10f */\n #undef HAVE_LOG10F\n \n@@ -153,6 +387,9 @@\n /* libm includes logf */\n #undef HAVE_LOGF\n \n+/* libm includes logl */\n+#undef HAVE_LOGL\n+\n /* Define to 1 if you have the <math.h> header file. */\n #undef HAVE_MATH_H\n \n@@ -171,42 +408,75 @@\n /* libm includes nextafterf */\n #undef HAVE_NEXTAFTERF\n \n+/* libm includes nextafterl */\n+#undef HAVE_NEXTAFTERL\n+\n /* Define to 1 if you have the `perror' function. */\n #undef HAVE_PERROR\n \n+/* libm includes pow */\n+#undef HAVE_POW\n+\n /* libm includes powf */\n #undef HAVE_POWF\n \n+/* libm includes powl */\n+#undef HAVE_POWL\n+\n /* libm includes round */\n #undef HAVE_ROUND\n \n /* libm includes roundf */\n #undef HAVE_ROUNDF\n \n+/* libm includes roundl */\n+#undef HAVE_ROUNDL\n+\n /* libm includes scalbn */\n #undef HAVE_SCALBN\n \n /* libm includes scalbnf */\n #undef HAVE_SCALBNF\n \n+/* libm includes scalbnl */\n+#undef HAVE_SCALBNL\n+\n /* Define to 1 if you have the <signal.h> header file. */\n #undef HAVE_SIGNAL_H\n \n+/* libm includes sin */\n+#undef HAVE_SIN\n+\n /* libm includes sinf */\n #undef HAVE_SINF\n \n+/* libm includes sinh */\n+#undef HAVE_SINH\n+\n /* libm includes sinhf */\n #undef HAVE_SINHF\n \n+/* libm includes sinhl */\n+#undef HAVE_SINHL\n+\n+/* libm includes sinl */\n+#undef HAVE_SINL\n+\n /* Define to 1 if you have the `sleep' function. */\n #undef HAVE_SLEEP\n \n /* Define to 1 if you have the `snprintf' function. */\n #undef HAVE_SNPRINTF\n \n+/* libm includes sqrt */\n+#undef HAVE_SQRT\n+\n /* libm includes sqrtf */\n #undef HAVE_SQRTF\n \n+/* libm includes sqrtl */\n+#undef HAVE_SQRTL\n+\n /* Define to 1 if you have the <stddef.h> header file. */\n #undef HAVE_STDDEF_H\n \n@@ -267,12 +537,24 @@\n /* Define to 1 if you have the <sys/types.h> header file. */\n #undef HAVE_SYS_TYPES_H\n \n+/* libm includes tan */\n+#undef HAVE_TAN\n+\n /* libm includes tanf */\n #undef HAVE_TANF\n \n+/* libm includes tanh */\n+#undef HAVE_TANH\n+\n /* libm includes tanhf */\n #undef HAVE_TANHF\n \n+/* libm includes tanhl */\n+#undef HAVE_TANHL\n+\n+/* libm includes tanl */\n+#undef HAVE_TANL\n+\n /* Define to 1 if you have the `time' function. */\n #undef HAVE_TIME\n \n@@ -291,6 +573,9 @@\n /* libm includes truncf */\n #undef HAVE_TRUNCF\n \n+/* libm includes truncl */\n+#undef HAVE_TRUNCL\n+\n /* Define to 1 if you have the `ttyname' function. */\n #undef HAVE_TTYNAME\n \n@@ -306,18 +591,27 @@\n /* libm includes y0f */\n #undef HAVE_Y0F\n \n+/* libm includes y0l */\n+#undef HAVE_Y0L\n+\n /* libm includes y1 */\n #undef HAVE_Y1\n \n /* libm includes y1f */\n #undef HAVE_Y1F\n \n+/* libm includes y1l */\n+#undef HAVE_Y1L\n+\n /* libm includes yn */\n #undef HAVE_YN\n \n /* libm includes ynf */\n #undef HAVE_YNF\n \n+/* libm includes ynl */\n+#undef HAVE_YNL\n+\n /* Define to the address where bug reports for this package should be sent. */\n #undef PACKAGE_BUGREPORT\n "}, {"sha": "7def2508e098e5d6063b9aab82db7084c3341104", "filename": "libgfortran/configure", "status": "modified", "additions": 8259, "deletions": 712, "changes": 8971, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed"}, {"sha": "5c5fe5f983a1fa1e00765186fb710c1441f078f0", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 109, "deletions": 25, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed", "patch": "@@ -165,9 +165,6 @@ AC_CHECK_MEMBERS([struct stat.st_blksize])\n AC_CHECK_MEMBERS([struct stat.st_blocks])\n AC_CHECK_MEMBERS([struct stat.st_rdev])\n \n-# Check for complex math functions\n-AC_CHECK_LIB([m],[csin],[need_math=\"no\"],[need_math=\"yes\"])\n-\n # Check for library functions.\n AC_CHECK_FUNCS(getrusage times mkstemp strtof strtold snprintf ftruncate chsize)\n AC_CHECK_FUNCS(chdir strerror getlogin gethostname kill link symlink perror)\n@@ -181,69 +178,156 @@ AC_CHECK_LIB([c],[getuid],[AC_DEFINE([HAVE_GETUID],[1],[libc includes getuid])])\n # Check for C99 (and other IEEE) math functions\n # ??? This list seems awful long. Is there a better way to test for these?\n AC_CHECK_LIB([m],[acosf],[AC_DEFINE([HAVE_ACOSF],[1],[libm includes acosf])])\n+AC_CHECK_LIB([m],[acos],[AC_DEFINE([HAVE_ACOS],[1],[libm includes acos])])\n+AC_CHECK_LIB([m],[acosl],[AC_DEFINE([HAVE_ACOSL],[1],[libm includes acosl])])\n AC_CHECK_LIB([m],[acoshf],[AC_DEFINE([HAVE_ACOSHF],[1],[libm includes acoshf])])\n+AC_CHECK_LIB([m],[acosh],[AC_DEFINE([HAVE_ACOSH],[1],[libm includes acosh])])\n+AC_CHECK_LIB([m],[acoshl],[AC_DEFINE([HAVE_ACOSHL],[1],[libm includes acoshl])])\n AC_CHECK_LIB([m],[asinf],[AC_DEFINE([HAVE_ASINF],[1],[libm includes asinf])])\n+AC_CHECK_LIB([m],[asin],[AC_DEFINE([HAVE_ASIN],[1],[libm includes asin])])\n+AC_CHECK_LIB([m],[asinl],[AC_DEFINE([HAVE_ASINL],[1],[libm includes asinl])])\n AC_CHECK_LIB([m],[asinhf],[AC_DEFINE([HAVE_ASINHF],[1],[libm includes asinhf])])\n+AC_CHECK_LIB([m],[asinh],[AC_DEFINE([HAVE_ASINH],[1],[libm includes asinh])])\n+AC_CHECK_LIB([m],[asinhl],[AC_DEFINE([HAVE_ASINHL],[1],[libm includes asinhl])])\n AC_CHECK_LIB([m],[atan2f],[AC_DEFINE([HAVE_ATAN2F],[1],[libm includes atan2f])])\n+AC_CHECK_LIB([m],[atan2],[AC_DEFINE([HAVE_ATAN2],[1],[libm includes atan2])])\n+AC_CHECK_LIB([m],[atan2l],[AC_DEFINE([HAVE_ATAN2L],[1],[libm includes atan2l])])\n AC_CHECK_LIB([m],[atanf],[AC_DEFINE([HAVE_ATANF],[1],[libm includes atanf])])\n+AC_CHECK_LIB([m],[atan],[AC_DEFINE([HAVE_ATAN],[1],[libm includes atan])])\n+AC_CHECK_LIB([m],[atanl],[AC_DEFINE([HAVE_ATANL],[1],[libm includes atanl])])\n AC_CHECK_LIB([m],[atanhf],[AC_DEFINE([HAVE_ATANHF],[1],[libm includes atanhf])])\n+AC_CHECK_LIB([m],[atanh],[AC_DEFINE([HAVE_ATANH],[1],[libm includes atanh])])\n+AC_CHECK_LIB([m],[atanhl],[AC_DEFINE([HAVE_ATANHL],[1],[libm includes atanhl])])\n+AC_CHECK_LIB([m],[cargf],[AC_DEFINE([HAVE_CARGF],[1],[libm includes cargf])])\n+AC_CHECK_LIB([m],[carg],[AC_DEFINE([HAVE_CARG],[1],[libm includes carg])])\n+AC_CHECK_LIB([m],[cargl],[AC_DEFINE([HAVE_CARGL],[1],[libm includes cargl])])\n AC_CHECK_LIB([m],[ceilf],[AC_DEFINE([HAVE_CEILF],[1],[libm includes ceilf])])\n+AC_CHECK_LIB([m],[ceil],[AC_DEFINE([HAVE_CEIL],[1],[libm includes ceil])])\n+AC_CHECK_LIB([m],[ceill],[AC_DEFINE([HAVE_CEILL],[1],[libm includes ceill])])\n AC_CHECK_LIB([m],[copysignf],[AC_DEFINE([HAVE_COPYSIGNF],[1],[libm includes copysignf])])\n+AC_CHECK_LIB([m],[copysign],[AC_DEFINE([HAVE_COPYSIGN],[1],[libm includes copysign])])\n+AC_CHECK_LIB([m],[copysignl],[AC_DEFINE([HAVE_COPYSIGNL],[1],[libm includes copysignl])])\n AC_CHECK_LIB([m],[cosf],[AC_DEFINE([HAVE_COSF],[1],[libm includes cosf])])\n+AC_CHECK_LIB([m],[cos],[AC_DEFINE([HAVE_COS],[1],[libm includes cos])])\n+AC_CHECK_LIB([m],[cosl],[AC_DEFINE([HAVE_COSL],[1],[libm includes cosl])])\n+AC_CHECK_LIB([m],[ccosf],[AC_DEFINE([HAVE_CCOSF],[1],[libm includes ccosf])])\n+AC_CHECK_LIB([m],[ccos],[AC_DEFINE([HAVE_CCOS],[1],[libm includes ccos])])\n+AC_CHECK_LIB([m],[ccosl],[AC_DEFINE([HAVE_CCOSL],[1],[libm includes ccosl])])\n AC_CHECK_LIB([m],[coshf],[AC_DEFINE([HAVE_COSHF],[1],[libm includes coshf])])\n+AC_CHECK_LIB([m],[cosh],[AC_DEFINE([HAVE_COSH],[1],[libm includes cosh])])\n+AC_CHECK_LIB([m],[coshl],[AC_DEFINE([HAVE_COSHL],[1],[libm includes coshl])])\n+AC_CHECK_LIB([m],[ccoshf],[AC_DEFINE([HAVE_CCOSHF],[1],[libm includes ccoshf])])\n+AC_CHECK_LIB([m],[ccosh],[AC_DEFINE([HAVE_CCOSH],[1],[libm includes ccosh])])\n+AC_CHECK_LIB([m],[ccoshl],[AC_DEFINE([HAVE_CCOSHL],[1],[libm includes ccoshl])])\n AC_CHECK_LIB([m],[expf],[AC_DEFINE([HAVE_EXPF],[1],[libm includes expf])])\n+AC_CHECK_LIB([m],[exp],[AC_DEFINE([HAVE_EXP],[1],[libm includes exp])])\n+AC_CHECK_LIB([m],[expl],[AC_DEFINE([HAVE_EXPL],[1],[libm includes expl])])\n+AC_CHECK_LIB([m],[cexpf],[AC_DEFINE([HAVE_CEXPF],[1],[libm includes cexpf])])\n+AC_CHECK_LIB([m],[cexp],[AC_DEFINE([HAVE_CEXP],[1],[libm includes cexp])])\n+AC_CHECK_LIB([m],[cexpl],[AC_DEFINE([HAVE_CEXPL],[1],[libm includes cexpl])])\n AC_CHECK_LIB([m],[fabsf],[AC_DEFINE([HAVE_FABSF],[1],[libm includes fabsf])])\n+AC_CHECK_LIB([m],[fabs],[AC_DEFINE([HAVE_FABS],[1],[libm includes fabs])])\n+AC_CHECK_LIB([m],[fabsl],[AC_DEFINE([HAVE_FABSL],[1],[libm includes fabsl])])\n+AC_CHECK_LIB([m],[cabsf],[AC_DEFINE([HAVE_CABSF],[1],[libm includes cabsf])])\n+AC_CHECK_LIB([m],[cabs],[AC_DEFINE([HAVE_CABS],[1],[libm includes cabs])])\n+AC_CHECK_LIB([m],[cabsl],[AC_DEFINE([HAVE_CABSL],[1],[libm includes cabsl])])\n AC_CHECK_LIB([m],[floorf],[AC_DEFINE([HAVE_FLOORF],[1],[libm includes floorf])])\n+AC_CHECK_LIB([m],[floor],[AC_DEFINE([HAVE_FLOOR],[1],[libm includes floor])])\n+AC_CHECK_LIB([m],[floorl],[AC_DEFINE([HAVE_FLOORL],[1],[libm includes floorl])])\n AC_CHECK_LIB([m],[frexpf],[AC_DEFINE([HAVE_FREXPF],[1],[libm includes frexpf])])\n+AC_CHECK_LIB([m],[frexp],[AC_DEFINE([HAVE_FREXP],[1],[libm includes frexp])])\n+AC_CHECK_LIB([m],[frexpl],[AC_DEFINE([HAVE_FREXPL],[1],[libm includes frexpl])])\n AC_CHECK_LIB([m],[hypotf],[AC_DEFINE([HAVE_HYPOTF],[1],[libm includes hypotf])])\n+AC_CHECK_LIB([m],[hypot],[AC_DEFINE([HAVE_HYPOT],[1],[libm includes hypot])])\n+AC_CHECK_LIB([m],[hypotl],[AC_DEFINE([HAVE_HYPOTL],[1],[libm includes hypotl])])\n AC_CHECK_LIB([m],[logf],[AC_DEFINE([HAVE_LOGF],[1],[libm includes logf])])\n+AC_CHECK_LIB([m],[log],[AC_DEFINE([HAVE_LOG],[1],[libm includes log])])\n+AC_CHECK_LIB([m],[logl],[AC_DEFINE([HAVE_LOGL],[1],[libm includes logl])])\n+AC_CHECK_LIB([m],[clogf],[AC_DEFINE([HAVE_CLOGF],[1],[libm includes clogf])])\n+AC_CHECK_LIB([m],[clog],[AC_DEFINE([HAVE_CLOG],[1],[libm includes clog])])\n+AC_CHECK_LIB([m],[clogl],[AC_DEFINE([HAVE_CLOGL],[1],[libm includes clogl])])\n AC_CHECK_LIB([m],[log10f],[AC_DEFINE([HAVE_LOG10F],[1],[libm includes log10f])])\n+AC_CHECK_LIB([m],[log10],[AC_DEFINE([HAVE_LOG10],[1],[libm includes log10])])\n AC_CHECK_LIB([m],[log10l],[AC_DEFINE([HAVE_LOG10L],[1],[libm includes log10l])])\n-AC_CHECK_LIB([m],[nextafter],[AC_DEFINE([HAVE_NEXTAFTER],[1],[libm includes nextafter])])\n+AC_CHECK_LIB([m],[clog10f],[AC_DEFINE([HAVE_CLOG10F],[1],[libm includes clog10f])])\n+AC_CHECK_LIB([m],[clog10],[AC_DEFINE([HAVE_CLOG10],[1],[libm includes clog10])])\n+AC_CHECK_LIB([m],[clog10l],[AC_DEFINE([HAVE_CLOG10L],[1],[libm includes clog10l])])\n AC_CHECK_LIB([m],[nextafterf],[AC_DEFINE([HAVE_NEXTAFTERF],[1],[libm includes nextafterf])])\n+AC_CHECK_LIB([m],[nextafter],[AC_DEFINE([HAVE_NEXTAFTER],[1],[libm includes nextafter])])\n+AC_CHECK_LIB([m],[nextafterl],[AC_DEFINE([HAVE_NEXTAFTERL],[1],[libm includes nextafterl])])\n AC_CHECK_LIB([m],[powf],[AC_DEFINE([HAVE_POWF],[1],[libm includes powf])])\n-AC_CHECK_LIB([m],[round],[AC_DEFINE([HAVE_ROUND],[1],[libm includes round])])\n+AC_CHECK_LIB([m],[pow],[AC_DEFINE([HAVE_POW],[1],[libm includes pow])])\n+AC_CHECK_LIB([m],[powl],[AC_DEFINE([HAVE_POWL],[1],[libm includes powl])])\n+AC_CHECK_LIB([m],[cpowf],[AC_DEFINE([HAVE_CPOWF],[1],[libm includes cpowf])])\n+AC_CHECK_LIB([m],[cpow],[AC_DEFINE([HAVE_CPOW],[1],[libm includes cpow])])\n+AC_CHECK_LIB([m],[cpowl],[AC_DEFINE([HAVE_CPOWL],[1],[libm includes cpowl])])\n AC_CHECK_LIB([m],[roundf],[AC_DEFINE([HAVE_ROUNDF],[1],[libm includes roundf])])\n+AC_CHECK_LIB([m],[round],[AC_DEFINE([HAVE_ROUND],[1],[libm includes round])])\n+AC_CHECK_LIB([m],[roundl],[AC_DEFINE([HAVE_ROUNDL],[1],[libm includes roundl])])\n AC_CHECK_LIB([m],[scalbnf],[AC_DEFINE([HAVE_SCALBNF],[1],[libm includes scalbnf])])\n AC_CHECK_LIB([m],[scalbn],[AC_DEFINE([HAVE_SCALBN],[1],[libm includes scalbn])])\n+AC_CHECK_LIB([m],[scalbnl],[AC_DEFINE([HAVE_SCALBNL],[1],[libm includes scalbnl])])\n AC_CHECK_LIB([m],[sinf],[AC_DEFINE([HAVE_SINF],[1],[libm includes sinf])])\n+AC_CHECK_LIB([m],[sin],[AC_DEFINE([HAVE_SIN],[1],[libm includes sin])])\n+AC_CHECK_LIB([m],[sinl],[AC_DEFINE([HAVE_SINL],[1],[libm includes sinl])])\n+AC_CHECK_LIB([m],[csinf],[AC_DEFINE([HAVE_CSINF],[1],[libm includes csinf])])\n+AC_CHECK_LIB([m],[csin],[AC_DEFINE([HAVE_CSIN],[1],[libm includes csin])])\n+AC_CHECK_LIB([m],[csinl],[AC_DEFINE([HAVE_CSINL],[1],[libm includes csinl])])\n AC_CHECK_LIB([m],[sinhf],[AC_DEFINE([HAVE_SINHF],[1],[libm includes sinhf])])\n+AC_CHECK_LIB([m],[sinh],[AC_DEFINE([HAVE_SINH],[1],[libm includes sinh])])\n+AC_CHECK_LIB([m],[sinhl],[AC_DEFINE([HAVE_SINHL],[1],[libm includes sinhl])])\n+AC_CHECK_LIB([m],[csinhf],[AC_DEFINE([HAVE_CSINHF],[1],[libm includes csinhf])])\n+AC_CHECK_LIB([m],[csinh],[AC_DEFINE([HAVE_CSINH],[1],[libm includes csinh])])\n+AC_CHECK_LIB([m],[csinhl],[AC_DEFINE([HAVE_CSINHL],[1],[libm includes csinhl])])\n AC_CHECK_LIB([m],[sqrtf],[AC_DEFINE([HAVE_SQRTF],[1],[libm includes sqrtf])])\n+AC_CHECK_LIB([m],[sqrt],[AC_DEFINE([HAVE_SQRT],[1],[libm includes sqrt])])\n+AC_CHECK_LIB([m],[sqrtl],[AC_DEFINE([HAVE_SQRTL],[1],[libm includes sqrtl])])\n+AC_CHECK_LIB([m],[csqrtf],[AC_DEFINE([HAVE_CSQRTF],[1],[libm includes csqrtf])])\n+AC_CHECK_LIB([m],[csqrt],[AC_DEFINE([HAVE_CSQRT],[1],[libm includes csqrt])])\n+AC_CHECK_LIB([m],[csqrtl],[AC_DEFINE([HAVE_CSQRTL],[1],[libm includes csqrtl])])\n AC_CHECK_LIB([m],[tanf],[AC_DEFINE([HAVE_TANF],[1],[libm includes tanf])])\n+AC_CHECK_LIB([m],[tan],[AC_DEFINE([HAVE_TAN],[1],[libm includes tan])])\n+AC_CHECK_LIB([m],[tanl],[AC_DEFINE([HAVE_TANL],[1],[libm includes tanl])])\n+AC_CHECK_LIB([m],[ctanf],[AC_DEFINE([HAVE_CTANF],[1],[libm includes ctanf])])\n+AC_CHECK_LIB([m],[ctan],[AC_DEFINE([HAVE_CTAN],[1],[libm includes ctan])])\n+AC_CHECK_LIB([m],[ctanl],[AC_DEFINE([HAVE_CTANL],[1],[libm includes ctanl])])\n AC_CHECK_LIB([m],[tanhf],[AC_DEFINE([HAVE_TANHF],[1],[libm includes tanhf])])\n-AC_CHECK_LIB([m],[trunc],[AC_DEFINE([HAVE_TRUNC],[1],[libm includes trunc])])\n+AC_CHECK_LIB([m],[tanh],[AC_DEFINE([HAVE_TANH],[1],[libm includes tanh])])\n+AC_CHECK_LIB([m],[tanhl],[AC_DEFINE([HAVE_TANHL],[1],[libm includes tanhl])])\n+AC_CHECK_LIB([m],[ctanhf],[AC_DEFINE([HAVE_CTANHF],[1],[libm includes ctanhf])])\n+AC_CHECK_LIB([m],[ctanh],[AC_DEFINE([HAVE_CTANH],[1],[libm includes ctanh])])\n+AC_CHECK_LIB([m],[ctanhl],[AC_DEFINE([HAVE_CTANHL],[1],[libm includes ctanhl])])\n AC_CHECK_LIB([m],[truncf],[AC_DEFINE([HAVE_TRUNCF],[1],[libm includes truncf])])\n+AC_CHECK_LIB([m],[trunc],[AC_DEFINE([HAVE_TRUNC],[1],[libm includes trunc])])\n+AC_CHECK_LIB([m],[truncl],[AC_DEFINE([HAVE_TRUNCL],[1],[libm includes truncl])])\n+AC_CHECK_LIB([m],[erff],[AC_DEFINE([HAVE_ERFF],[1],[libm includes erff])])\n AC_CHECK_LIB([m],[erf],[AC_DEFINE([HAVE_ERF],[1],[libm includes erf])])\n-AC_CHECK_LIB([m],[erfc],[AC_DEFINE([HAVE_ERFC],[1],[libm includes erfc])])\n+AC_CHECK_LIB([m],[erfl],[AC_DEFINE([HAVE_ERFL],[1],[libm includes erfl])])\n AC_CHECK_LIB([m],[erfcf],[AC_DEFINE([HAVE_ERFCF],[1],[libm includes erfcf])])\n-AC_CHECK_LIB([m],[erff],[AC_DEFINE([HAVE_ERFF],[1],[libm includes erff])])\n-AC_CHECK_LIB([m],[j0],[AC_DEFINE([HAVE_J0],[1],[libm includes j0])])\n+AC_CHECK_LIB([m],[erfc],[AC_DEFINE([HAVE_ERFC],[1],[libm includes erfc])])\n+AC_CHECK_LIB([m],[erfcl],[AC_DEFINE([HAVE_ERFCL],[1],[libm includes erfcl])])\n AC_CHECK_LIB([m],[j0f],[AC_DEFINE([HAVE_J0F],[1],[libm includes j0f])])\n-AC_CHECK_LIB([m],[j1],[AC_DEFINE([HAVE_J1],[1],[libm includes j1])])\n+AC_CHECK_LIB([m],[j0],[AC_DEFINE([HAVE_J0],[1],[libm includes j0])])\n+AC_CHECK_LIB([m],[j0l],[AC_DEFINE([HAVE_J0L],[1],[libm includes j0l])])\n AC_CHECK_LIB([m],[j1f],[AC_DEFINE([HAVE_J1F],[1],[libm includes j1f])])\n-AC_CHECK_LIB([m],[jn],[AC_DEFINE([HAVE_JN],[1],[libm includes jn])])\n+AC_CHECK_LIB([m],[j1],[AC_DEFINE([HAVE_J1],[1],[libm includes j1])])\n+AC_CHECK_LIB([m],[j1l],[AC_DEFINE([HAVE_J1L],[1],[libm includes j1l])])\n AC_CHECK_LIB([m],[jnf],[AC_DEFINE([HAVE_JNF],[1],[libm includes jnf])])\n-AC_CHECK_LIB([m],[y0],[AC_DEFINE([HAVE_Y0],[1],[libm includes y0])])\n+AC_CHECK_LIB([m],[jn],[AC_DEFINE([HAVE_JN],[1],[libm includes jn])])\n+AC_CHECK_LIB([m],[jnl],[AC_DEFINE([HAVE_JNL],[1],[libm includes jnl])])\n AC_CHECK_LIB([m],[y0f],[AC_DEFINE([HAVE_Y0F],[1],[libm includes y0f])])\n-AC_CHECK_LIB([m],[y1],[AC_DEFINE([HAVE_Y1],[1],[libm includes y1])])\n+AC_CHECK_LIB([m],[y0],[AC_DEFINE([HAVE_Y0],[1],[libm includes y0])])\n+AC_CHECK_LIB([m],[y0l],[AC_DEFINE([HAVE_Y0L],[1],[libm includes y0l])])\n AC_CHECK_LIB([m],[y1f],[AC_DEFINE([HAVE_Y1F],[1],[libm includes y1f])])\n-AC_CHECK_LIB([m],[yn],[AC_DEFINE([HAVE_YN],[1],[libm includes yn])])\n+AC_CHECK_LIB([m],[y1],[AC_DEFINE([HAVE_Y1],[1],[libm includes y1])])\n+AC_CHECK_LIB([m],[y1l],[AC_DEFINE([HAVE_Y1L],[1],[libm includes y1l])])\n AC_CHECK_LIB([m],[ynf],[AC_DEFINE([HAVE_YNF],[1],[libm includes ynf])])\n+AC_CHECK_LIB([m],[yn],[AC_DEFINE([HAVE_YN],[1],[libm includes yn])])\n+AC_CHECK_LIB([m],[ynl],[AC_DEFINE([HAVE_YNL],[1],[libm includes ynl])])\n \n # Fallback in case isfinite is not available.\n AC_CHECK_LIB([m],[finite],[AC_DEFINE([HAVE_FINITE],[1],[libm includes finite])])\n \n-# Let the user override this\n-AC_ARG_ENABLE(cmath,\n-\tAC_HELP_STRING([--enable-cmath],[Include complex math functions]),\n-\t[need_math=$enableval])\n-if test \"$need_math\" = \"yes\"; then\n-\tAC_MSG_NOTICE([Including complex math functions in libgfor]);\n-  extra_math_obj='$(gfor_cmath_obj)'\n-fi\n-\n-AC_SUBST([MATH_OBJ],[\"$extra_math_obj\"])\n-\n # The standard autoconf HAVE_STRUCT_TIMEZONE doesn't actually check\n # for struct timezone, as you might think.  We also need to check how\n # to call gettimeofday if we have it."}, {"sha": "0e4999275dcb377ccd8ec34e771150d71d312131", "filename": "libgfortran/generated/exp_c4.c", "status": "removed", "additions": 0, "deletions": 145, "changes": 145, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2Fgenerated%2Fexp_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2Fgenerated%2Fexp_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fexp_c4.c?ref=86ab632081cc94593ab6c22842d084fce5cf54d4", "patch": "@@ -1,145 +0,0 @@\n-/* Complex exponential functions\n-   Copyright 2002, 2004 Free Software Foundation, Inc.\n-   Contributed by Paul Brook <paul@nowt.org>\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 2 of the License, or (at your option) any later version.\n-\n-In addition to the permissions in the GNU General Public License, the\n-Free Software Foundation gives you unlimited permission to link the\n-compiled version of this file into combinations with other programs,\n-and to distribute those combinations without any restriction coming\n-from the use of this file.  (The General Public License restrictions\n-do apply in other respects; for example, they cover modification of\n-the file, and distribution when not linked into a combine\n-executable.)\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public\n-License along with libgfortran; see the file COPYING.  If not,\n-write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-#include <math.h>\n-#include \"libgfortran.h\"\n-\n-\n-/* z = a + ib  */\n-/* Absolute value.  */\n-GFC_REAL_4\n-cabsf (GFC_COMPLEX_4 z)\n-{\n-  return hypotf (REALPART (z), IMAGPART (z));\n-}\n-\n-/* Complex argument.  The angle made with the +ve real axis.\n-   Range -pi-pi.  */\n-GFC_REAL_4\n-cargf (GFC_COMPLEX_4 z)\n-{\n-  GFC_REAL_4 arg;\n-\n-  return atan2f (IMAGPART (z), REALPART (z));\n-}\n-\n-/* exp(z) = exp(a)*(cos(b) + isin(b))  */\n-GFC_COMPLEX_4\n-cexpf (GFC_COMPLEX_4 z)\n-{\n-  GFC_REAL_4 a;\n-  GFC_REAL_4 b;\n-  GFC_COMPLEX_4 v;\n-\n-  a = REALPART (z);\n-  b = IMAGPART (z);\n-  COMPLEX_ASSIGN (v, cosf (b), sinf (b));\n-  return expf (a) * v;\n-}\n-\n-/* log(z) = log (cabs(z)) + i*carg(z)  */\n-GFC_COMPLEX_4\n-clogf (GFC_COMPLEX_4 z)\n-{\n-  GFC_COMPLEX_4 v;\n-\n-  COMPLEX_ASSIGN (v, logf (cabsf (z)), cargf (z));\n-  return v;\n-}\n-\n-/* log10(z) = log10 (cabs(z)) + i*carg(z)  */\n-GFC_COMPLEX_4\n-clog10f (GFC_COMPLEX_4 z)\n-{\n-  GFC_COMPLEX_4 v;\n-\n-  COMPLEX_ASSIGN (v, log10f (cabsf (z)), cargf (z));\n-  return v;\n-}\n-\n-/* pow(base, power) = cexp (power * clog (base))  */\n-GFC_COMPLEX_4\n-cpowf (GFC_COMPLEX_4 base, GFC_COMPLEX_4 power)\n-{\n-  return cexpf (power * clogf (base));\n-}\n-\n-/* sqrt(z).  Algorithm pulled from glibc.  */\n-GFC_COMPLEX_4\n-csqrtf (GFC_COMPLEX_4 z)\n-{\n-  GFC_REAL_4 re;\n-  GFC_REAL_4 im;\n-  GFC_COMPLEX_4 v;\n-\n-  re = REALPART (z);\n-  im = IMAGPART (z);\n-  if (im == 0.0)\n-    {\n-      if (re < 0.0)\n-        {\n-          COMPLEX_ASSIGN (v, 0.0, copysignf (sqrtf (-re), im));\n-        }\n-      else\n-        {\n-          COMPLEX_ASSIGN (v, fabsf (sqrtf (re)),\n-                          copysignf (0.0, im));\n-        }\n-    }\n-  else if (re == 0.0)\n-    {\n-      GFC_REAL_4 r;\n-\n-      r = sqrtf (0.5 * fabsf (im));\n-\n-      COMPLEX_ASSIGN (v, copysignf (r, im), r);\n-    }\n-  else\n-    {\n-      GFC_REAL_4 d, r, s;\n-\n-      d = hypotf (re, im);\n-      /* Use the identity   2  Re res  Im res = Im x\n-         to avoid cancellation error in  d +/- Re x.  */\n-      if (re > 0)\n-        {\n-          r = sqrtf (0.5 * d + 0.5 * re);\n-          s = (0.5 * im) / r;\n-        }\n-      else\n-        {\n-          s = sqrtf (0.5 * d - 0.5 * re);\n-          r = fabsf ((0.5 * im) / s);\n-        }\n-\n-      COMPLEX_ASSIGN (v, r, copysignf (s, im));\n-    }\n-  return v;\n-}\n-"}, {"sha": "a12285680436057658c5ee56823efd4684dce86b", "filename": "libgfortran/generated/exp_c8.c", "status": "removed", "additions": 0, "deletions": 145, "changes": 145, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2Fgenerated%2Fexp_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2Fgenerated%2Fexp_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fexp_c8.c?ref=86ab632081cc94593ab6c22842d084fce5cf54d4", "patch": "@@ -1,145 +0,0 @@\n-/* Complex exponential functions\n-   Copyright 2002, 2004 Free Software Foundation, Inc.\n-   Contributed by Paul Brook <paul@nowt.org>\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 2 of the License, or (at your option) any later version.\n-\n-In addition to the permissions in the GNU General Public License, the\n-Free Software Foundation gives you unlimited permission to link the\n-compiled version of this file into combinations with other programs,\n-and to distribute those combinations without any restriction coming\n-from the use of this file.  (The General Public License restrictions\n-do apply in other respects; for example, they cover modification of\n-the file, and distribution when not linked into a combine\n-executable.)\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public\n-License along with libgfortran; see the file COPYING.  If not,\n-write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-#include <math.h>\n-#include \"libgfortran.h\"\n-\n-\n-/* z = a + ib  */\n-/* Absolute value.  */\n-GFC_REAL_8\n-cabs (GFC_COMPLEX_8 z)\n-{\n-  return hypot (REALPART (z), IMAGPART (z));\n-}\n-\n-/* Complex argument.  The angle made with the +ve real axis.\n-   Range -pi-pi.  */\n-GFC_REAL_8\n-carg (GFC_COMPLEX_8 z)\n-{\n-  GFC_REAL_8 arg;\n-\n-  return atan2 (IMAGPART (z), REALPART (z));\n-}\n-\n-/* exp(z) = exp(a)*(cos(b) + isin(b))  */\n-GFC_COMPLEX_8\n-cexp (GFC_COMPLEX_8 z)\n-{\n-  GFC_REAL_8 a;\n-  GFC_REAL_8 b;\n-  GFC_COMPLEX_8 v;\n-\n-  a = REALPART (z);\n-  b = IMAGPART (z);\n-  COMPLEX_ASSIGN (v, cos (b), sin (b));\n-  return exp (a) * v;\n-}\n-\n-/* log(z) = log (cabs(z)) + i*carg(z)  */\n-GFC_COMPLEX_8\n-clog (GFC_COMPLEX_8 z)\n-{\n-  GFC_COMPLEX_8 v;\n-\n-  COMPLEX_ASSIGN (v, log (cabs (z)), carg (z));\n-  return v;\n-}\n-\n-/* log10(z) = log10 (cabs(z)) + i*carg(z)  */\n-GFC_COMPLEX_8\n-clog10 (GFC_COMPLEX_8 z)\n-{\n-  GFC_COMPLEX_8 v;\n-\n-  COMPLEX_ASSIGN (v, log10 (cabs (z)), carg (z));\n-  return v;\n-}\n-\n-/* pow(base, power) = cexp (power * clog (base))  */\n-GFC_COMPLEX_8\n-cpow (GFC_COMPLEX_8 base, GFC_COMPLEX_8 power)\n-{\n-  return cexp (power * clog (base));\n-}\n-\n-/* sqrt(z).  Algorithm pulled from glibc.  */\n-GFC_COMPLEX_8\n-csqrt (GFC_COMPLEX_8 z)\n-{\n-  GFC_REAL_8 re;\n-  GFC_REAL_8 im;\n-  GFC_COMPLEX_8 v;\n-\n-  re = REALPART (z);\n-  im = IMAGPART (z);\n-  if (im == 0.0)\n-    {\n-      if (re < 0.0)\n-        {\n-          COMPLEX_ASSIGN (v, 0.0, copysign (sqrt (-re), im));\n-        }\n-      else\n-        {\n-          COMPLEX_ASSIGN (v, fabs (sqrt (re)),\n-                          copysign (0.0, im));\n-        }\n-    }\n-  else if (re == 0.0)\n-    {\n-      GFC_REAL_8 r;\n-\n-      r = sqrt (0.5 * fabs (im));\n-\n-      COMPLEX_ASSIGN (v, copysign (r, im), r);\n-    }\n-  else\n-    {\n-      GFC_REAL_8 d, r, s;\n-\n-      d = hypot (re, im);\n-      /* Use the identity   2  Re res  Im res = Im x\n-         to avoid cancellation error in  d +/- Re x.  */\n-      if (re > 0)\n-        {\n-          r = sqrt (0.5 * d + 0.5 * re);\n-          s = (0.5 * im) / r;\n-        }\n-      else\n-        {\n-          s = sqrt (0.5 * d - 0.5 * re);\n-          r = fabs ((0.5 * im) / s);\n-        }\n-\n-      COMPLEX_ASSIGN (v, r, copysign (s, im));\n-    }\n-  return v;\n-}\n-"}, {"sha": "5fdff7b62e7cdbb096a07a447e02b71fc54ad011", "filename": "libgfortran/generated/hyp_c4.c", "status": "removed", "additions": 0, "deletions": 80, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2Fgenerated%2Fhyp_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2Fgenerated%2Fhyp_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fhyp_c4.c?ref=86ab632081cc94593ab6c22842d084fce5cf54d4", "patch": "@@ -1,80 +0,0 @@\n-/* Complex hyperbolic functions\n-   Copyright 2002 Free Software Foundation, Inc.\n-   Contributed by Paul Brook <paul@nowt.org>\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 2 of the License, or (at your option) any later version.\n-\n-In addition to the permissions in the GNU General Public License, the\n-Free Software Foundation gives you unlimited permission to link the\n-compiled version of this file into combinations with other programs,\n-and to distribute those combinations without any restriction coming\n-from the use of this file.  (The General Public License restrictions\n-do apply in other respects; for example, they cover modification of\n-the file, and distribution when not linked into a combine\n-executable.)\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public\n-License along with libgfortran; see the file COPYING.  If not,\n-write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-#include <math.h>\n-#include \"libgfortran.h\"\n-\n-\n-/* Complex number z = a + ib.  */\n-\n-/* sinh(z) = sinh(a)cos(b) + icosh(a)sin(b)  */\n-GFC_COMPLEX_4\n-csinhf (GFC_COMPLEX_4 a)\n-{\n-  GFC_REAL_4 r;\n-  GFC_REAL_4 i;\n-  GFC_COMPLEX_4 v;\n-\n-  r = REALPART (a);\n-  i = IMAGPART (a);\n-  COMPLEX_ASSIGN (v, sinhf (r) * cosf (i), coshf (r) * sinf (i));\n-  return v;\n-}\n-\n-/* cosh(z) = cosh(a)cos(b) - isinh(a)sin(b)  */\n-GFC_COMPLEX_4\n-ccoshf (GFC_COMPLEX_4 a)\n-{\n-  GFC_REAL_4 r;\n-  GFC_REAL_4 i;\n-  GFC_COMPLEX_4 v;\n-\n-  r = REALPART (a);\n-  i = IMAGPART (a);\n-  COMPLEX_ASSIGN (v, coshf (r) * cosf (i), - (sinhf (r) * sinf (i)));\n-  return v;\n-}\n-\n-/* tanh(z) = (tanh(a) + itan(b)) / (1 - itanh(a)tan(b))  */\n-GFC_COMPLEX_4\n-ctanhf (GFC_COMPLEX_4 a)\n-{\n-  GFC_REAL_4 rt;\n-  GFC_REAL_4 it;\n-  GFC_COMPLEX_4 n;\n-  GFC_COMPLEX_4 d;\n-\n-  rt = tanhf (REALPART (a));\n-  it = tanf (IMAGPART (a));\n-  COMPLEX_ASSIGN (n, rt, it);\n-  COMPLEX_ASSIGN (d, 1, - (rt * it));\n-\n-  return n / d;\n-}\n-"}, {"sha": "436a6a6974118a2053c0af7fe2eb77a84a71f7ec", "filename": "libgfortran/generated/hyp_c8.c", "status": "removed", "additions": 0, "deletions": 80, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2Fgenerated%2Fhyp_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2Fgenerated%2Fhyp_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fhyp_c8.c?ref=86ab632081cc94593ab6c22842d084fce5cf54d4", "patch": "@@ -1,80 +0,0 @@\n-/* Complex hyperbolic functions\n-   Copyright 2002 Free Software Foundation, Inc.\n-   Contributed by Paul Brook <paul@nowt.org>\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 2 of the License, or (at your option) any later version.\n-\n-In addition to the permissions in the GNU General Public License, the\n-Free Software Foundation gives you unlimited permission to link the\n-compiled version of this file into combinations with other programs,\n-and to distribute those combinations without any restriction coming\n-from the use of this file.  (The General Public License restrictions\n-do apply in other respects; for example, they cover modification of\n-the file, and distribution when not linked into a combine\n-executable.)\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public\n-License along with libgfortran; see the file COPYING.  If not,\n-write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-#include <math.h>\n-#include \"libgfortran.h\"\n-\n-\n-/* Complex number z = a + ib.  */\n-\n-/* sinh(z) = sinh(a)cos(b) + icosh(a)sin(b)  */\n-GFC_COMPLEX_8\n-csinh (GFC_COMPLEX_8 a)\n-{\n-  GFC_REAL_8 r;\n-  GFC_REAL_8 i;\n-  GFC_COMPLEX_8 v;\n-\n-  r = REALPART (a);\n-  i = IMAGPART (a);\n-  COMPLEX_ASSIGN (v, sinh (r) * cos (i), cosh (r) * sin (i));\n-  return v;\n-}\n-\n-/* cosh(z) = cosh(a)cos(b) - isinh(a)sin(b)  */\n-GFC_COMPLEX_8\n-ccosh (GFC_COMPLEX_8 a)\n-{\n-  GFC_REAL_8 r;\n-  GFC_REAL_8 i;\n-  GFC_COMPLEX_8 v;\n-\n-  r = REALPART (a);\n-  i = IMAGPART (a);\n-  COMPLEX_ASSIGN (v, cosh (r) * cos (i), - (sinh (r) * sin (i)));\n-  return v;\n-}\n-\n-/* tanh(z) = (tanh(a) + itan(b)) / (1 - itanh(a)tan(b))  */\n-GFC_COMPLEX_8\n-ctanh (GFC_COMPLEX_8 a)\n-{\n-  GFC_REAL_8 rt;\n-  GFC_REAL_8 it;\n-  GFC_COMPLEX_8 n;\n-  GFC_COMPLEX_8 d;\n-\n-  rt = tanh (REALPART (a));\n-  it = tan (IMAGPART (a));\n-  COMPLEX_ASSIGN (n, rt, it);\n-  COMPLEX_ASSIGN (d, 1, - (rt * it));\n-\n-  return n / d;\n-}\n-"}, {"sha": "30f7999cd872118006169e2b1186f670431d52cd", "filename": "libgfortran/generated/trig_c4.c", "status": "removed", "additions": 0, "deletions": 80, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2Fgenerated%2Ftrig_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2Fgenerated%2Ftrig_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftrig_c4.c?ref=86ab632081cc94593ab6c22842d084fce5cf54d4", "patch": "@@ -1,80 +0,0 @@\n-/* Complex trig functions\n-   Copyright 2002 Free Software Foundation, Inc.\n-   Contributed by Paul Brook <paul@nowt.org>\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 2 of the License, or (at your option) any later version.\n-\n-In addition to the permissions in the GNU General Public License, the\n-Free Software Foundation gives you unlimited permission to link the\n-compiled version of this file into combinations with other programs,\n-and to distribute those combinations without any restriction coming\n-from the use of this file.  (The General Public License restrictions\n-do apply in other respects; for example, they cover modification of\n-the file, and distribution when not linked into a combine\n-executable.)\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public\n-License along with libgfortran; see the file COPYING.  If not,\n-write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-#include <math.h>\n-#include \"libgfortran.h\"\n-\n-\n-/* Complex number z = a + ib.  */\n-\n-/* sin(z) = sin(a)cosh(b) + icos(a)sinh(b)  */\n-GFC_COMPLEX_4\n-csinf (GFC_COMPLEX_4 a)\n-{\n-  GFC_REAL_4 r;\n-  GFC_REAL_4 i;\n-  GFC_COMPLEX_4 v;\n-\n-  r = REALPART (a);\n-  i = IMAGPART (a);\n-  COMPLEX_ASSIGN (v, sinf (r) * coshf (i), cosf (r) * sinhf (i));\n-  return v;\n-}\n-\n-/* cos(z) = cos(a)cosh(b) - isin(a)sinh(b)  */\n-GFC_COMPLEX_4\n-ccosf (GFC_COMPLEX_4 a)\n-{\n-  GFC_REAL_4 r;\n-  GFC_REAL_4 i;\n-  GFC_COMPLEX_4 v;\n-\n-  r = REALPART (a);\n-  i = IMAGPART (a);\n-  COMPLEX_ASSIGN (v, cosf (r) * coshf (i), - (sinf (r) * sinhf (i)));\n-  return v;\n-}\n-\n-/* tan(z) = (tan(a) + itanh(b)) / (1 - itan(a)tanh(b))  */\n-GFC_COMPLEX_4\n-ctanf (GFC_COMPLEX_4 a)\n-{\n-  GFC_REAL_4 rt;\n-  GFC_REAL_4 it;\n-  GFC_COMPLEX_4 n;\n-  GFC_COMPLEX_4 d;\n-\n-  rt = tanf (REALPART (a));\n-  it = tanhf (IMAGPART (a));\n-  COMPLEX_ASSIGN (n, rt, it);\n-  COMPLEX_ASSIGN (d , 1, - (rt * it));\n-\n-  return n / d;\n-}\n-"}, {"sha": "9734e99d9401a66322aebff6beee671ad9fbe849", "filename": "libgfortran/generated/trig_c8.c", "status": "removed", "additions": 0, "deletions": 80, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2Fgenerated%2Ftrig_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2Fgenerated%2Ftrig_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftrig_c8.c?ref=86ab632081cc94593ab6c22842d084fce5cf54d4", "patch": "@@ -1,80 +0,0 @@\n-/* Complex trig functions\n-   Copyright 2002 Free Software Foundation, Inc.\n-   Contributed by Paul Brook <paul@nowt.org>\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 2 of the License, or (at your option) any later version.\n-\n-In addition to the permissions in the GNU General Public License, the\n-Free Software Foundation gives you unlimited permission to link the\n-compiled version of this file into combinations with other programs,\n-and to distribute those combinations without any restriction coming\n-from the use of this file.  (The General Public License restrictions\n-do apply in other respects; for example, they cover modification of\n-the file, and distribution when not linked into a combine\n-executable.)\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public\n-License along with libgfortran; see the file COPYING.  If not,\n-write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-#include <math.h>\n-#include \"libgfortran.h\"\n-\n-\n-/* Complex number z = a + ib.  */\n-\n-/* sin(z) = sin(a)cosh(b) + icos(a)sinh(b)  */\n-GFC_COMPLEX_8\n-csin (GFC_COMPLEX_8 a)\n-{\n-  GFC_REAL_8 r;\n-  GFC_REAL_8 i;\n-  GFC_COMPLEX_8 v;\n-\n-  r = REALPART (a);\n-  i = IMAGPART (a);\n-  COMPLEX_ASSIGN (v, sin (r) * cosh (i), cos (r) * sinh (i));\n-  return v;\n-}\n-\n-/* cos(z) = cos(a)cosh(b) - isin(a)sinh(b)  */\n-GFC_COMPLEX_8\n-ccos (GFC_COMPLEX_8 a)\n-{\n-  GFC_REAL_8 r;\n-  GFC_REAL_8 i;\n-  GFC_COMPLEX_8 v;\n-\n-  r = REALPART (a);\n-  i = IMAGPART (a);\n-  COMPLEX_ASSIGN (v, cos (r) * cosh (i), - (sin (r) * sinh (i)));\n-  return v;\n-}\n-\n-/* tan(z) = (tan(a) + itanh(b)) / (1 - itan(a)tanh(b))  */\n-GFC_COMPLEX_8\n-ctan (GFC_COMPLEX_8 a)\n-{\n-  GFC_REAL_8 rt;\n-  GFC_REAL_8 it;\n-  GFC_COMPLEX_8 n;\n-  GFC_COMPLEX_8 d;\n-\n-  rt = tan (REALPART (a));\n-  it = tanh (IMAGPART (a));\n-  COMPLEX_ASSIGN (n, rt, it);\n-  COMPLEX_ASSIGN (d , 1, - (rt * it));\n-\n-  return n / d;\n-}\n-"}, {"sha": "8083f776df54d782ba9c4b4465996a2eac26790d", "filename": "libgfortran/intrinsics/c99_functions.c", "status": "modified", "additions": 695, "deletions": 0, "changes": 695, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed/libgfortran%2Fintrinsics%2Fc99_functions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed/libgfortran%2Fintrinsics%2Fc99_functions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fc99_functions.c?ref=1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed", "patch": "@@ -31,10 +31,13 @@ Boston, MA 02110-1301, USA.  */\n #include <sys/types.h>\n #include <float.h>\n #include <math.h>\n+\n+#define C99_PROTOS_H WE_DONT_WANT_PROTOS_NOW\n #include \"libgfortran.h\"\n \n \n #ifndef HAVE_ACOSF\n+#define HAVE_ACOSF\n float\n acosf(float x)\n {\n@@ -43,6 +46,7 @@ acosf(float x)\n #endif\n \n #ifndef HAVE_ASINF\n+#define HAVE_ASINF\n float\n asinf(float x)\n {\n@@ -51,6 +55,7 @@ asinf(float x)\n #endif\n \n #ifndef HAVE_ATAN2F\n+#define HAVE_ATAN2F\n float\n atan2f(float y, float x)\n {\n@@ -59,6 +64,7 @@ atan2f(float y, float x)\n #endif\n \n #ifndef HAVE_ATANF\n+#define HAVE_ATANF\n float\n atanf(float x)\n {\n@@ -67,6 +73,7 @@ atanf(float x)\n #endif\n \n #ifndef HAVE_CEILF\n+#define HAVE_CEILF\n float\n ceilf(float x)\n {\n@@ -75,6 +82,7 @@ ceilf(float x)\n #endif\n \n #ifndef HAVE_COPYSIGNF\n+#define HAVE_COPYSIGNF\n float\n copysignf(float x, float y)\n {\n@@ -83,6 +91,7 @@ copysignf(float x, float y)\n #endif\n \n #ifndef HAVE_COSF\n+#define HAVE_COSF\n float\n cosf(float x)\n {\n@@ -91,6 +100,7 @@ cosf(float x)\n #endif\n \n #ifndef HAVE_COSHF\n+#define HAVE_COSHF\n float\n coshf(float x)\n {\n@@ -99,6 +109,7 @@ coshf(float x)\n #endif\n \n #ifndef HAVE_EXPF\n+#define HAVE_EXPF\n float\n expf(float x)\n {\n@@ -107,6 +118,7 @@ expf(float x)\n #endif\n \n #ifndef HAVE_FABSF\n+#define HAVE_FABSF\n float\n fabsf(float x)\n {\n@@ -115,6 +127,7 @@ fabsf(float x)\n #endif\n \n #ifndef HAVE_FLOORF\n+#define HAVE_FLOORF\n float\n floorf(float x)\n {\n@@ -123,6 +136,7 @@ floorf(float x)\n #endif\n \n #ifndef HAVE_FREXPF\n+#define HAVE_FREXPF\n float\n frexpf(float x, int *exp)\n {\n@@ -131,6 +145,7 @@ frexpf(float x, int *exp)\n #endif\n \n #ifndef HAVE_HYPOTF\n+#define HAVE_HYPOTF\n float\n hypotf(float x, float y)\n {\n@@ -139,6 +154,7 @@ hypotf(float x, float y)\n #endif\n \n #ifndef HAVE_LOGF\n+#define HAVE_LOGF\n float\n logf(float x)\n {\n@@ -147,6 +163,7 @@ logf(float x)\n #endif\n \n #ifndef HAVE_LOG10F\n+#define HAVE_LOG10F\n float\n log10f(float x)\n {\n@@ -155,6 +172,7 @@ log10f(float x)\n #endif\n \n #ifndef HAVE_SCALBN\n+#define HAVE_SCALBN\n double\n scalbn(double x, int y)\n {\n@@ -163,6 +181,7 @@ scalbn(double x, int y)\n #endif\n \n #ifndef HAVE_SCALBNF\n+#define HAVE_SCALBNF\n float\n scalbnf(float x, int y)\n {\n@@ -171,6 +190,7 @@ scalbnf(float x, int y)\n #endif\n \n #ifndef HAVE_SINF\n+#define HAVE_SINF\n float\n sinf(float x)\n {\n@@ -179,6 +199,7 @@ sinf(float x)\n #endif\n \n #ifndef HAVE_SINHF\n+#define HAVE_SINHF\n float\n sinhf(float x)\n {\n@@ -187,6 +208,7 @@ sinhf(float x)\n #endif\n \n #ifndef HAVE_SQRTF\n+#define HAVE_SQRTF\n float\n sqrtf(float x)\n {\n@@ -195,6 +217,7 @@ sqrtf(float x)\n #endif\n \n #ifndef HAVE_TANF\n+#define HAVE_TANF\n float\n tanf(float x)\n {\n@@ -203,6 +226,7 @@ tanf(float x)\n #endif\n \n #ifndef HAVE_TANHF\n+#define HAVE_TANHF\n float\n tanhf(float x)\n {\n@@ -211,6 +235,7 @@ tanhf(float x)\n #endif\n \n #ifndef HAVE_TRUNC\n+#define HAVE_TRUNC\n double\n trunc(double x)\n {\n@@ -225,6 +250,7 @@ trunc(double x)\n #endif\n \n #ifndef HAVE_TRUNCF\n+#define HAVE_TRUNCF\n float\n truncf(float x)\n {\n@@ -233,6 +259,7 @@ truncf(float x)\n #endif\n \n #ifndef HAVE_NEXTAFTERF\n+#define HAVE_NEXTAFTERF\n /* This is a portable implementation of nextafterf that is intended to be\n    independent of the floating point format or its in memory representation.\n    This implementation works correctly with denormalized values.  */\n@@ -296,6 +323,7 @@ nextafterf(float x, float y)\n \n \n #ifndef HAVE_POWF\n+#define HAVE_POWF\n float\n powf(float x, float y)\n {\n@@ -308,6 +336,7 @@ powf(float x, float y)\n /* Algorithm by Steven G. Kargl.  */\n \n #ifndef HAVE_ROUND\n+#define HAVE_ROUND\n /* Round to nearest integral value.  If the argument is halfway between two\n    integral values then round away from zero.  */\n \n@@ -340,6 +369,7 @@ round(double x)\n #endif\n \n #ifndef HAVE_ROUNDF\n+#define HAVE_ROUNDF\n /* Round to nearest integral value.  If the argument is halfway between two\n    integral values then round away from zero.  */\n \n@@ -373,6 +403,7 @@ roundf(float x)\n #endif\n \n #ifndef HAVE_LOG10L\n+#define HAVE_LOG10L\n /* log10 function for long double variables. The version provided here\n    reduces the argument until it fits into a double, then use log10.  */\n long double\n@@ -409,3 +440,667 @@ log10l(long double x)\n     return log10 (x);\n }\n #endif\n+\n+\n+#if !defined(HAVE_CABSF)\n+#define HAVE_CABSF\n+float\n+cabsf (float complex z)\n+{\n+  return hypotf (REALPART (z), IMAGPART (z));\n+}\n+#endif\n+\n+#if !defined(HAVE_CABS)\n+#define HAVE_CABS\n+double\n+cabs (double complex z)\n+{\n+  return hypot (REALPART (z), IMAGPART (z));\n+}\n+#endif\n+\n+#if !defined(HAVE_CABSL) && defined(HAVE_HYPOTL)\n+#define HAVE_CABSL\n+long double\n+cabsl (long double complex z)\n+{\n+  return hypotl (REALPART (z), IMAGPART (z));\n+}\n+#endif\n+\n+\n+#if !defined(HAVE_CARGF)\n+#define HAVE_CARGF\n+float\n+cargf (float complex z)\n+{\n+  return atan2f (IMAGPART (z), REALPART (z));\n+}\n+#endif\n+\n+#if !defined(HAVE_CARG)\n+#define HAVE_CARG\n+double\n+carg (double complex z)\n+{\n+  return atan2 (IMAGPART (z), REALPART (z));\n+}\n+#endif\n+\n+#if !defined(HAVE_CARGL) && defined(HAVE_ATAN2L)\n+#define HAVE_CARGL\n+long double\n+cargl (long double complex z)\n+{\n+  return atan2l (IMAGPART (z), REALPART (z));\n+}\n+#endif\n+\n+\n+/* exp(z) = exp(a)*(cos(b) + i sin(b))  */\n+#if !defined(HAVE_CEXPF)\n+#define HAVE_CEXPF\n+float complex\n+cexpf (float complex z)\n+{\n+  float a, b;\n+  float complex v;\n+\n+  a = REALPART (z);\n+  b = IMAGPART (z);\n+  COMPLEX_ASSIGN (v, cosf (b), sinf (b));\n+  return expf (a) * v;\n+}\n+#endif\n+\n+#if !defined(HAVE_CEXP)\n+#define HAVE_CEXP\n+double complex\n+cexp (double complex z)\n+{\n+  double a, b;\n+  double complex v;\n+\n+  a = REALPART (z);\n+  b = IMAGPART (z);\n+  COMPLEX_ASSIGN (v, cos (b), sin (b));\n+  return exp (a) * v;\n+}\n+#endif\n+\n+#if !defined(HAVE_CEXPL) && defined(HAVE_COSL) && defined(HAVE_SINL) && defined(EXPL)\n+#define HAVE_CEXPL\n+long double complex\n+cexpl (long double complex z)\n+{\n+  long double a, b;\n+  long double complex v;\n+\n+  a = REALPART (z);\n+  b = IMAGPART (z);\n+  COMPLEX_ASSIGN (v, cosl (b), sinl (b));\n+  return expl (a) * v;\n+}\n+#endif\n+\n+\n+/* log(z) = log (cabs(z)) + i*carg(z)  */\n+#if !defined(HAVE_CLOGF)\n+#define HAVE_CLOGF\n+float complex\n+clogf (float complex z)\n+{\n+  float complex v;\n+\n+  COMPLEX_ASSIGN (v, logf (cabsf (z)), cargf (z));\n+  return v;\n+}\n+#endif\n+\n+#if !defined(HAVE_CLOG)\n+#define HAVE_CLOG\n+double complex\n+clog (double complex z)\n+{\n+  double complex v;\n+\n+  COMPLEX_ASSIGN (v, log (cabs (z)), carg (z));\n+  return v;\n+}\n+#endif\n+\n+#if !defined(HAVE_CLOGL) && defined(HAVE_LOGL) && defined(HAVE_CABSL) && defined(HAVE_CARGL)\n+#define HAVE_CLOGL\n+long double complex\n+clogl (long double complex z)\n+{\n+  long double complex v;\n+\n+  COMPLEX_ASSIGN (v, logl (cabsl (z)), cargl (z));\n+  return v;\n+}\n+#endif\n+\n+\n+/* log10(z) = log10 (cabs(z)) + i*carg(z)  */\n+#if !defined(HAVE_CLOG10F)\n+#define HAVE_CLOG10F\n+float complex\n+clog10f (float complex z)\n+{\n+  float complex v;\n+\n+  COMPLEX_ASSIGN (v, log10f (cabsf (z)), cargf (z));\n+  return v;\n+}\n+#endif\n+\n+#if !defined(HAVE_CLOG10)\n+#define HAVE_CLOG10\n+double complex\n+clog10 (double complex z)\n+{\n+  double complex v;\n+\n+  COMPLEX_ASSIGN (v, log10 (cabs (z)), carg (z));\n+  return v;\n+}\n+#endif\n+\n+#if !defined(HAVE_CLOG10L) && defined(HAVE_LOG10L) && defined(HAVE_CABSL) && defined(HAVE_CARGL)\n+#define HAVE_CLOG10L\n+long double complex\n+clog10l (long double complex z)\n+{\n+  long double complex v;\n+\n+  COMPLEX_ASSIGN (v, log10l (cabsl (z)), cargl (z));\n+  return v;\n+}\n+#endif\n+\n+\n+/* pow(base, power) = cexp (power * clog (base))  */\n+#if !defined(HAVE_CPOWF)\n+#define HAVE_CPOWF\n+float complex\n+cpowf (float complex base, float complex power)\n+{\n+  return cexpf (power * clogf (base));\n+}\n+#endif\n+\n+#if !defined(HAVE_CPOW)\n+#define HAVE_CPOW\n+double complex\n+cpow (double complex base, double complex power)\n+{\n+  return cexp (power * clog (base));\n+}\n+#endif\n+\n+#if !defined(HAVE_CPOWL) && defined(HAVE_CEXPL) && defined(HAVE_CLOGL)\n+#define HAVE_CPOWL\n+long double complex\n+cpowl (long double complex base, long double complex power)\n+{\n+  return cexpl (power * clogl (base));\n+}\n+#endif\n+\n+\n+/* sqrt(z).  Algorithm pulled from glibc.  */\n+#if !defined(HAVE_CSQRTF)\n+#define HAVE_CSQRTF\n+float complex\n+csqrtf (float complex z)\n+{\n+  float re, im;\n+  float complex v;\n+\n+  re = REALPART (z);\n+  im = IMAGPART (z);\n+  if (im == 0)\n+    {\n+      if (re < 0)\n+        {\n+          COMPLEX_ASSIGN (v, 0, copysignf (sqrtf (-re), im));\n+        }\n+      else\n+        {\n+          COMPLEX_ASSIGN (v, fabsf (sqrtf (re)), copysignf (0, im));\n+        }\n+    }\n+  else if (re == 0)\n+    {\n+      float r;\n+\n+      r = sqrtf (0.5 * fabsf (im));\n+\n+      COMPLEX_ASSIGN (v, copysignf (r, im), r);\n+    }\n+  else\n+    {\n+      float d, r, s;\n+\n+      d = hypotf (re, im);\n+      /* Use the identity   2  Re res  Im res = Im x\n+         to avoid cancellation error in  d +/- Re x.  */\n+      if (re > 0)\n+        {\n+          r = sqrtf (0.5 * d + 0.5 * re);\n+          s = (0.5 * im) / r;\n+        }\n+      else\n+        {\n+          s = sqrtf (0.5 * d - 0.5 * re);\n+          r = fabsf ((0.5 * im) / s);\n+        }\n+\n+      COMPLEX_ASSIGN (v, r, copysignf (s, im));\n+    }\n+  return v;\n+}\n+#endif\n+\n+#if !defined(HAVE_CSQRT)\n+#define HAVE_CSQRT\n+double complex\n+csqrt (double complex z)\n+{\n+  double re, im;\n+  double complex v;\n+\n+  re = REALPART (z);\n+  im = IMAGPART (z);\n+  if (im == 0)\n+    {\n+      if (re < 0)\n+        {\n+          COMPLEX_ASSIGN (v, 0, copysign (sqrt (-re), im));\n+        }\n+      else\n+        {\n+          COMPLEX_ASSIGN (v, fabs (sqrt (re)), copysign (0, im));\n+        }\n+    }\n+  else if (re == 0)\n+    {\n+      double r;\n+\n+      r = sqrt (0.5 * fabs (im));\n+\n+      COMPLEX_ASSIGN (v, copysign (r, im), r);\n+    }\n+  else\n+    {\n+      double d, r, s;\n+\n+      d = hypot (re, im);\n+      /* Use the identity   2  Re res  Im res = Im x\n+         to avoid cancellation error in  d +/- Re x.  */\n+      if (re > 0)\n+        {\n+          r = sqrt (0.5 * d + 0.5 * re);\n+          s = (0.5 * im) / r;\n+        }\n+      else\n+        {\n+          s = sqrt (0.5 * d - 0.5 * re);\n+          r = fabs ((0.5 * im) / s);\n+        }\n+\n+      COMPLEX_ASSIGN (v, r, copysign (s, im));\n+    }\n+  return v;\n+}\n+#endif\n+\n+#if !defined(HAVE_CSQRTL) && defined(HAVE_COPYSIGNL) && defined(HAVE_SQRTL) && defined(HAVE_FABSL) && defined(HAVE_HYPOTL)\n+#define HAVE_CSQRTL\n+long double complex\n+csqrtl (long double complex z)\n+{\n+  long double re, im;\n+  long double complex v;\n+\n+  re = REALPART (z);\n+  im = IMAGPART (z);\n+  if (im == 0)\n+    {\n+      if (re < 0)\n+        {\n+          COMPLEX_ASSIGN (v, 0, copysignl (sqrtl (-re), im));\n+        }\n+      else\n+        {\n+          COMPLEX_ASSIGN (v, fabsl (sqrtl (re)), copysignl (0, im));\n+        }\n+    }\n+  else if (re == 0)\n+    {\n+      long double r;\n+\n+      r = sqrtl (0.5 * fabsl (im));\n+\n+      COMPLEX_ASSIGN (v, copysignl (r, im), r);\n+    }\n+  else\n+    {\n+      long double d, r, s;\n+\n+      d = hypotl (re, im);\n+      /* Use the identity   2  Re res  Im res = Im x\n+         to avoid cancellation error in  d +/- Re x.  */\n+      if (re > 0)\n+        {\n+          r = sqrtl (0.5 * d + 0.5 * re);\n+          s = (0.5 * im) / r;\n+        }\n+      else\n+        {\n+          s = sqrtl (0.5 * d - 0.5 * re);\n+          r = fabsl ((0.5 * im) / s);\n+        }\n+\n+      COMPLEX_ASSIGN (v, r, copysignl (s, im));\n+    }\n+  return v;\n+}\n+#endif\n+\n+\n+/* sinh(a + i b) = sinh(a) cos(b) + i cosh(a) sin(b)  */\n+#if !defined(HAVE_CSINHF)\n+#define HAVE_CSINHF\n+float complex\n+csinhf (float complex a)\n+{\n+  float r, i;\n+  float complex v;\n+\n+  r = REALPART (a);\n+  i = IMAGPART (a);\n+  COMPLEX_ASSIGN (v, sinhf (r) * cosf (i), coshf (r) * sinf (i));\n+  return v;\n+}\n+#endif\n+\n+#if !defined(HAVE_CSINH)\n+#define HAVE_CSINH\n+double complex\n+csinh (double complex a)\n+{\n+  double r, i;\n+  double complex v;\n+\n+  r = REALPART (a);\n+  i = IMAGPART (a);\n+  COMPLEX_ASSIGN (v, sinh (r) * cos (i), cosh (r) * sin (i));\n+  return v;\n+}\n+#endif\n+\n+#if !defined(HAVE_CSINHL) && defined(HAVE_COSL) && defined(HAVE_COSHL) && defined(HAVE_SINL) && defined(HAVE_SINHL)\n+#define HAVE_CSINHL\n+long double complex\n+csinhl (long double complex a)\n+{\n+  long double r, i;\n+  long double complex v;\n+\n+  r = REALPART (a);\n+  i = IMAGPART (a);\n+  COMPLEX_ASSIGN (v, sinhl (r) * cosl (i), coshl (r) * sinl (i));\n+  return v;\n+}\n+#endif\n+\n+\n+/* cosh(a + i b) = cosh(a) cos(b) - i sinh(a) sin(b)  */\n+#if !defined(HAVE_CCOSHF)\n+#define HAVE_CCOSHF\n+float complex\n+ccoshf (float complex a)\n+{\n+  float r, i;\n+  float complex v;\n+\n+  r = REALPART (a);\n+  i = IMAGPART (a);\n+  COMPLEX_ASSIGN (v, coshf (r) * cosf (i), - (sinhf (r) * sinf (i)));\n+  return v;\n+}\n+#endif\n+\n+#if !defined(HAVE_CCOSH)\n+#define HAVE_CCOSH\n+double complex\n+ccosh (double complex a)\n+{\n+  double r, i;\n+  double complex v;\n+\n+  r = REALPART (a);\n+  i = IMAGPART (a);\n+  COMPLEX_ASSIGN (v, cosh (r) * cos (i), - (sinh (r) * sin (i)));\n+  return v;\n+}\n+#endif\n+\n+#if !defined(HAVE_CCOSHL) && defined(HAVE_COSL) && defined(HAVE_COSHL) && defined(HAVE_SINL) && defined(HAVE_SINHL)\n+#define HAVE_CCOSHL\n+long double complex\n+ccoshl (long double complex a)\n+{\n+  long double r, i;\n+  long double complex v;\n+\n+  r = REALPART (a);\n+  i = IMAGPART (a);\n+  COMPLEX_ASSIGN (v, coshl (r) * cosl (i), - (sinhl (r) * sinl (i)));\n+  return v;\n+}\n+#endif\n+\n+\n+/* tanh(a + i b) = (tanh(a) + i tan(b)) / (1 - i tanh(a) tan(b))  */\n+#if !defined(HAVE_CTANHF)\n+#define HAVE_CTANHF\n+float complex\n+ctanhf (float complex a)\n+{\n+  float rt, it;\n+  float complex n, d;\n+\n+  rt = tanhf (REALPART (a));\n+  it = tanf (IMAGPART (a));\n+  COMPLEX_ASSIGN (n, rt, it);\n+  COMPLEX_ASSIGN (d, 1, - (rt * it));\n+\n+  return n / d;\n+}\n+#endif\n+\n+#if !defined(HAVE_CTANH)\n+#define HAVE_CTANH\n+double complex\n+ctanh (double complex a)\n+{\n+  double rt, it;\n+  double complex n, d;\n+\n+  rt = tanh (REALPART (a));\n+  it = tan (IMAGPART (a));\n+  COMPLEX_ASSIGN (n, rt, it);\n+  COMPLEX_ASSIGN (d, 1, - (rt * it));\n+\n+  return n / d;\n+}\n+#endif\n+\n+#if !defined(HAVE_CTANHL) && defined(HAVE_TANL) && defined(HAVE_TANHL)\n+#define HAVE_CTANHL\n+long double complex\n+ctanhl (long double complex a)\n+{\n+  long double rt, it;\n+  long double complex n, d;\n+\n+  rt = tanhl (REALPART (a));\n+  it = tanl (IMAGPART (a));\n+  COMPLEX_ASSIGN (n, rt, it);\n+  COMPLEX_ASSIGN (d, 1, - (rt * it));\n+\n+  return n / d;\n+}\n+#endif\n+\n+\n+/* sin(a + i b) = sin(a) cosh(b) + i cos(a) sinh(b)  */\n+#if !defined(HAVE_CSINF)\n+#define HAVE_CSINF\n+float complex\n+csinf (float complex a)\n+{\n+  float r, i;\n+  float complex v;\n+\n+  r = REALPART (a);\n+  i = IMAGPART (a);\n+  COMPLEX_ASSIGN (v, sinf (r) * coshf (i), cosf (r) * sinhf (i));\n+  return v;\n+}\n+#endif\n+\n+#if !defined(HAVE_CSIN)\n+#define HAVE_CSIN\n+double complex\n+csin (double complex a)\n+{\n+  double r, i;\n+  double complex v;\n+\n+  r = REALPART (a);\n+  i = IMAGPART (a);\n+  COMPLEX_ASSIGN (v, sin (r) * cosh (i), cos (r) * sinh (i));\n+  return v;\n+}\n+#endif\n+\n+#if !defined(HAVE_CSINL) && defined(HAVE_COSL) && defined(HAVE_COSHL) && defined(HAVE_SINL) && defined(HAVE_SINHL)\n+#define HAVE_CSINL\n+long double complex\n+csinl (long double complex a)\n+{\n+  long double r, i;\n+  long double complex v;\n+\n+  r = REALPART (a);\n+  i = IMAGPART (a);\n+  COMPLEX_ASSIGN (v, sinl (r) * coshl (i), cosl (r) * sinhl (i));\n+  return v;\n+}\n+#endif\n+\n+\n+/* cos(a + i b) = cos(a) cosh(b) - i sin(a) sinh(b)  */\n+#if !defined(HAVE_CCOSF)\n+#define HAVE_CCOSF\n+float complex\n+ccosf (float complex a)\n+{\n+  float r, i;\n+  float complex v;\n+\n+  r = REALPART (a);\n+  i = IMAGPART (a);\n+  COMPLEX_ASSIGN (v, cosf (r) * coshf (i), - (sinf (r) * sinhf (i)));\n+  return v;\n+}\n+#endif\n+\n+#if !defined(HAVE_CCOS)\n+#define HAVE_CCOS\n+double complex\n+ccos (double complex a)\n+{\n+  double r, i;\n+  double complex v;\n+\n+  r = REALPART (a);\n+  i = IMAGPART (a);\n+  COMPLEX_ASSIGN (v, cos (r) * cosh (i), - (sin (r) * sinh (i)));\n+  return v;\n+}\n+#endif\n+\n+#if !defined(HAVE_CCOSL) && defined(HAVE_COSL) && defined(HAVE_COSHL) && defined(HAVE_SINL) && defined(HAVE_SINHL)\n+#define HAVE_CCOSL\n+long double complex\n+ccosl (long double complex a)\n+{\n+  long double r, i;\n+  long double complex v;\n+\n+  r = REALPART (a);\n+  i = IMAGPART (a);\n+  COMPLEX_ASSIGN (v, cosl (r) * coshl (i), - (sinl (r) * sinhl (i)));\n+  return v;\n+}\n+#endif\n+\n+\n+/* tan(a + i b) = (tan(a) + i tanh(b)) / (1 - i tan(a) tanh(b))  */\n+#if !defined(HAVE_CTANF)\n+#define HAVE_CTANF\n+float complex\n+ctanf (float complex a)\n+{\n+  float rt, it;\n+  float complex n, d;\n+\n+  rt = tanf (REALPART (a));\n+  it = tanhf (IMAGPART (a));\n+  COMPLEX_ASSIGN (n, rt, it);\n+  COMPLEX_ASSIGN (d, 1, - (rt * it));\n+\n+  return n / d;\n+}\n+#endif\n+\n+#if !defined(HAVE_CTAN)\n+#define HAVE_CTAN\n+double complex\n+ctan (double complex a)\n+{\n+  double rt, it;\n+  double complex n, d;\n+\n+  rt = tan (REALPART (a));\n+  it = tanh (IMAGPART (a));\n+  COMPLEX_ASSIGN (n, rt, it);\n+  COMPLEX_ASSIGN (d, 1, - (rt * it));\n+\n+  return n / d;\n+}\n+#endif\n+\n+#if !defined(HAVE_CTANL) && defined(HAVE_TANL) && defined(HAVE_TANHL)\n+#define HAVE_CTANL\n+long double complex\n+ctanl (long double complex a)\n+{\n+  long double rt, it;\n+  long double complex n, d;\n+\n+  rt = tanl (REALPART (a));\n+  it = tanhl (IMAGPART (a));\n+  COMPLEX_ASSIGN (n, rt, it);\n+  COMPLEX_ASSIGN (d, 1, - (rt * it));\n+\n+  return n / d;\n+}\n+#endif\n+"}, {"sha": "54aca7e66bc86f3dd5f4d80467c780236d406fd5", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=1409cd0b8e101b5542cf92ee5378bc0a45f8f2ed", "patch": "@@ -38,15 +38,15 @@ Boston, MA 02110-1301, USA.  */\n #define M_PI 3.14159265358979323846264338327\n #endif\n \n-#include \"config.h\"\n-#include \"c99_protos.h\"\n-\n #if HAVE_COMPLEX_H\n # include <complex.h>\n #else\n #define complex __complex__\n #endif\n \n+#include \"config.h\"\n+#include \"c99_protos.h\"\n+\n #if HAVE_IEEEFP_H\n #include <ieeefp.h>\n #endif"}, {"sha": "eda0a2560776ee38e828ec51293f6f0316fe29fb", "filename": "libgfortran/m4/cexp.m4", "status": "removed", "additions": 0, "deletions": 146, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2Fm4%2Fcexp.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2Fm4%2Fcexp.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fcexp.m4?ref=86ab632081cc94593ab6c22842d084fce5cf54d4", "patch": "@@ -1,146 +0,0 @@\n-`/* Complex exponential functions\n-   Copyright 2002, 2004 Free Software Foundation, Inc.\n-   Contributed by Paul Brook <paul@nowt.org>\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 2 of the License, or (at your option) any later version.\n-\n-In addition to the permissions in the GNU General Public License, the\n-Free Software Foundation gives you unlimited permission to link the\n-compiled version of this file into combinations with other programs,\n-and to distribute those combinations without any restriction coming\n-from the use of this file.  (The General Public License restrictions\n-do apply in other respects; for example, they cover modification of\n-the file, and distribution when not linked into a combine\n-executable.)\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public\n-License along with libgfortran; see the file COPYING.  If not,\n-write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-#include <math.h>\n-#include \"libgfortran.h\"'\n-\n-include(`mtype.m4')dnl\n-\n-/* z = a + ib  */\n-/* Absolute value.  */\n-real_type\n-cabs`'q (complex_type z)\n-{\n-  return hypot`'q (REALPART (z), IMAGPART (z));\n-}\n-\n-/* Complex argument.  The angle made with the +ve real axis.\n-   Range -pi-pi.  */\n-real_type\n-carg`'q (complex_type z)\n-{\n-  real_type arg;\n-\n-  return atan2`'q (IMAGPART (z), REALPART (z));\n-}\n-\n-/* exp(z) = exp(a)*(cos(b) + isin(b))  */\n-complex_type\n-cexp`'q (complex_type z)\n-{\n-  real_type a;\n-  real_type b;\n-  complex_type v;\n-\n-  a = REALPART (z);\n-  b = IMAGPART (z);\n-  COMPLEX_ASSIGN (v, cos`'q (b), sin`'q (b));\n-  return exp`'q (a) * v;\n-}\n-\n-/* log(z) = log (cabs(z)) + i*carg(z)  */\n-complex_type\n-clog`'q (complex_type z)\n-{\n-  complex_type v;\n-\n-  COMPLEX_ASSIGN (v, log`'q (cabs`'q (z)), carg`'q (z));\n-  return v;\n-}\n-\n-/* log10(z) = log10 (cabs(z)) + i*carg(z)  */\n-complex_type\n-clog10`'q (complex_type z)\n-{\n-  complex_type v;\n-\n-  COMPLEX_ASSIGN (v, log10`'q (cabs`'q (z)), carg`'q (z));\n-  return v;\n-}\n-\n-/* pow(base, power) = cexp (power * clog (base))  */\n-complex_type\n-cpow`'q (complex_type base, complex_type power)\n-{\n-  return cexp`'q (power * clog`'q (base));\n-}\n-\n-/* sqrt(z).  Algorithm pulled from glibc.  */\n-complex_type\n-csqrt`'q (complex_type z)\n-{\n-  real_type re;\n-  real_type im;\n-  complex_type v;\n-\n-  re = REALPART (z);\n-  im = IMAGPART (z);\n-  if (im == 0.0)\n-    {\n-      if (re < 0.0)\n-        {\n-          COMPLEX_ASSIGN (v, 0.0, copysign`'q (sqrt`'q (-re), im));\n-        }\n-      else\n-        {\n-          COMPLEX_ASSIGN (v, fabs`'q (sqrt`'q (re)),\n-                          copysign`'q (0.0, im));\n-        }\n-    }\n-  else if (re == 0.0)\n-    {\n-      real_type r;\n-\n-      r = sqrt`'q (0.5 * fabs`'q (im));\n-\n-      COMPLEX_ASSIGN (v, copysign`'q (r, im), r);\n-    }\n-  else\n-    {\n-      real_type d, r, s;\n-\n-      d = hypot`'q (re, im);\n-      /* Use the identity   2  Re res  Im res = Im x\n-         to avoid cancellation error in  d +/- Re x.  */\n-      if (re > 0)\n-        {\n-          r = sqrt`'q (0.5 * d + 0.5 * re);\n-          s = (0.5 * im) / r;\n-        }\n-      else\n-        {\n-          s = sqrt`'q (0.5 * d - 0.5 * re);\n-          r = fabs`'q ((0.5 * im) / s);\n-        }\n-\n-      COMPLEX_ASSIGN (v, r, copysign`'q (s, im));\n-    }\n-  return v;\n-}\n-"}, {"sha": "f520fa40987ed1eeaa75a9d2ba12a4af34898183", "filename": "libgfortran/m4/chyp.m4", "status": "removed", "additions": 0, "deletions": 81, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2Fm4%2Fchyp.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2Fm4%2Fchyp.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fchyp.m4?ref=86ab632081cc94593ab6c22842d084fce5cf54d4", "patch": "@@ -1,81 +0,0 @@\n-`/* Complex hyperbolic functions\n-   Copyright 2002 Free Software Foundation, Inc.\n-   Contributed by Paul Brook <paul@nowt.org>\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 2 of the License, or (at your option) any later version.\n-\n-In addition to the permissions in the GNU General Public License, the\n-Free Software Foundation gives you unlimited permission to link the\n-compiled version of this file into combinations with other programs,\n-and to distribute those combinations without any restriction coming\n-from the use of this file.  (The General Public License restrictions\n-do apply in other respects; for example, they cover modification of\n-the file, and distribution when not linked into a combine\n-executable.)\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public\n-License along with libgfortran; see the file COPYING.  If not,\n-write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-#include <math.h>\n-#include \"libgfortran.h\"'\n-\n-include(`mtype.m4')dnl\n-\n-/* Complex number z = a + ib.  */\n-\n-/* sinh(z) = sinh(a)cos(b) + icosh(a)sin(b)  */\n-complex_type\n-csinh`'q (complex_type a)\n-{\n-  real_type r;\n-  real_type i;\n-  complex_type v;\n-\n-  r = REALPART (a);\n-  i = IMAGPART (a);\n-  COMPLEX_ASSIGN (v, sinh`'q (r) * cos`'q (i), cosh`'q (r) * sin`'q (i));\n-  return v;\n-}\n-\n-/* cosh(z) = cosh(a)cos(b) - isinh(a)sin(b)  */\n-complex_type\n-ccosh`'q (complex_type a)\n-{\n-  real_type r;\n-  real_type i;\n-  complex_type v;\n-\n-  r = REALPART (a);\n-  i = IMAGPART (a);\n-  COMPLEX_ASSIGN (v, cosh`'q (r) * cos`'q (i), - (sinh`'q (r) * sin`'q (i)));\n-  return v;\n-}\n-\n-/* tanh(z) = (tanh(a) + itan(b)) / (1 - itanh(a)tan(b))  */\n-complex_type\n-ctanh`'q (complex_type a)\n-{\n-  real_type rt;\n-  real_type it;\n-  complex_type n;\n-  complex_type d;\n-\n-  rt = tanh`'q (REALPART (a));\n-  it = tan`'q (IMAGPART (a));\n-  COMPLEX_ASSIGN (n, rt, it);\n-  COMPLEX_ASSIGN (d, 1, - (rt * it));\n-\n-  return n / d;\n-}\n-"}, {"sha": "9b2429c7f263b54a20c26769a73ef37bd1dbe468", "filename": "libgfortran/m4/ctrig.m4", "status": "removed", "additions": 0, "deletions": 81, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2Fm4%2Fctrig.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2Fm4%2Fctrig.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fctrig.m4?ref=86ab632081cc94593ab6c22842d084fce5cf54d4", "patch": "@@ -1,81 +0,0 @@\n-`/* Complex trig functions\n-   Copyright 2002 Free Software Foundation, Inc.\n-   Contributed by Paul Brook <paul@nowt.org>\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 2 of the License, or (at your option) any later version.\n-\n-In addition to the permissions in the GNU General Public License, the\n-Free Software Foundation gives you unlimited permission to link the\n-compiled version of this file into combinations with other programs,\n-and to distribute those combinations without any restriction coming\n-from the use of this file.  (The General Public License restrictions\n-do apply in other respects; for example, they cover modification of\n-the file, and distribution when not linked into a combine\n-executable.)\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public\n-License along with libgfortran; see the file COPYING.  If not,\n-write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-#include <math.h>\n-#include \"libgfortran.h\"'\n-\n-include(`mtype.m4')dnl\n-\n-/* Complex number z = a + ib.  */\n-\n-/* sin(z) = sin(a)cosh(b) + icos(a)sinh(b)  */\n-complex_type\n-csin`'q (complex_type a)\n-{\n-  real_type r;\n-  real_type i;\n-  complex_type v;\n-\n-  r = REALPART (a);\n-  i = IMAGPART (a);\n-  COMPLEX_ASSIGN (v, sin`'q (r) * cosh`'q (i), cos`'q (r) * sinh`'q (i));\n-  return v;\n-}\n-\n-/* cos(z) = cos(a)cosh(b) - isin(a)sinh(b)  */\n-complex_type\n-ccos`'q (complex_type a)\n-{\n-  real_type r;\n-  real_type i;\n-  complex_type v;\n-\n-  r = REALPART (a);\n-  i = IMAGPART (a);\n-  COMPLEX_ASSIGN (v, cos`'q (r) * cosh`'q (i), - (sin`'q (r) * sinh`'q (i)));\n-  return v;\n-}\n-\n-/* tan(z) = (tan(a) + itanh(b)) / (1 - itan(a)tanh(b))  */\n-complex_type\n-ctan`'q (complex_type a)\n-{\n-  real_type rt;\n-  real_type it;\n-  complex_type n;\n-  complex_type d;\n-\n-  rt = tan`'q (REALPART (a));\n-  it = tanh`'q (IMAGPART (a));\n-  COMPLEX_ASSIGN (n, rt, it);\n-  COMPLEX_ASSIGN (d , 1, - (rt * it));\n-\n-  return n / d;\n-}\n-"}]}