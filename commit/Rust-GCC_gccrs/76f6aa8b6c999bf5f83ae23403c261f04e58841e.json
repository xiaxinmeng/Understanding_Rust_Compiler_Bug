{"sha": "76f6aa8b6c999bf5f83ae23403c261f04e58841e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZmNmFhOGI2Yzk5OWJmNWY4M2FlMjM0MDNjMjYxZjA0ZTU4ODQxZQ==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-04-01T21:56:42Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-04-01T21:56:42Z"}, "message": "linker-map.gnu: Export __verbose_terminate_handler.\n\n2002-04-01  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* config/linker-map.gnu:  Export __verbose_terminate_handler.\n\t* libsupc++/Makefile.am (sources):  Add cxa_demangle.c, dyn-string.c.\n\tMake new LTCOMPILE variable, use it in new special build rules.\n\t* libsupc++/Makefile.in:  Rebuild.\n\t* src/vterminate.cc (__verbose_terminate_handler):  Enable use of\n\truntime __cxa_demangle.\n\n\t* docs/html/install.html:  Update prereqs and instructions.\n\t* docs/html/19_diagnostics/howto.html:  Bring naming for\n\tverbose_terminate_handler into line with reality.\n\nFrom-SVN: r51709", "tree": {"sha": "f085c59e0aeb3f090619e56d9f5c650f7e998c9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f085c59e0aeb3f090619e56d9f5c650f7e998c9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76f6aa8b6c999bf5f83ae23403c261f04e58841e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76f6aa8b6c999bf5f83ae23403c261f04e58841e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76f6aa8b6c999bf5f83ae23403c261f04e58841e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76f6aa8b6c999bf5f83ae23403c261f04e58841e/comments", "author": null, "committer": null, "parents": [{"sha": "bd7e6f2d207b371f0699d092f0e5a3efd31eb5e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd7e6f2d207b371f0699d092f0e5a3efd31eb5e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd7e6f2d207b371f0699d092f0e5a3efd31eb5e0"}], "stats": {"total": 121, "additions": 100, "deletions": 21}, "files": [{"sha": "ec0c5887b19947db4dd739c0bdd467c7ac974068", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f6aa8b6c999bf5f83ae23403c261f04e58841e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f6aa8b6c999bf5f83ae23403c261f04e58841e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=76f6aa8b6c999bf5f83ae23403c261f04e58841e", "patch": "@@ -1,3 +1,16 @@\n+2002-04-01  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\t* config/linker-map.gnu:  Export __verbose_terminate_handler.\n+\t* libsupc++/Makefile.am (sources):  Add cxa_demangle.c, dyn-string.c.\n+\tMake new LTCOMPILE variable, use it in new special build rules.\n+\t* libsupc++/Makefile.in:  Rebuild.\n+\t* src/vterminate.cc (__verbose_terminate_handler):  Enable use of\n+\truntime __cxa_demangle.\n+\n+\t* docs/html/install.html:  Update prereqs and instructions.\n+\t* docs/html/19_diagnostics/howto.html:  Bring naming for\n+\tverbose_terminate_handler into line with reality.\n+\n 2002-04-01  Benjamin Kosnik  <bkoz@redhat.com>\n \t\n \tlibstdc++/3129"}, {"sha": "7e0c8679e14f4655ea6b19786ab8bb15a0a071c2", "filename": "libstdc++-v3/config/linker-map.gnu", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f6aa8b6c999bf5f83ae23403c261f04e58841e/libstdc%2B%2B-v3%2Fconfig%2Flinker-map.gnu", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f6aa8b6c999bf5f83ae23403c261f04e58841e/libstdc%2B%2B-v3%2Fconfig%2Flinker-map.gnu", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flinker-map.gnu?ref=76f6aa8b6c999bf5f83ae23403c261f04e58841e", "patch": "@@ -100,6 +100,9 @@ CXXABI_1 {\n     __gxx_personality_v0;\n     __dynamic_cast;\n \n+    # __gnu_cxx::_verbose_terminate_handler()\n+    _ZN9__gnu_cxx27__verbose_terminate_handlerEv;\n+\n   local:\n     *;\n };"}, {"sha": "3d8bf6f8bbc002840006b3833342157fa995f1fb", "filename": "libstdc++-v3/docs/html/19_diagnostics/howto.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f6aa8b6c999bf5f83ae23403c261f04e58841e/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F19_diagnostics%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f6aa8b6c999bf5f83ae23403c261f04e58841e/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F19_diagnostics%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F19_diagnostics%2Fhowto.html?ref=76f6aa8b6c999bf5f83ae23403c261f04e58841e", "patch": "@@ -119,12 +119,12 @@ <h2><a name=\"4\">Verbose <code>terminate</code></a></h2>\n \n    int main()\n    {\n-       std::set_terminate (__gnu_cxx::verbose_terminate_handler);\n+       std::set_terminate (__gnu_cxx::__verbose_terminate_handler);\n        ...\n        throw <em>anything</em>;\n    }</pre>\n    </p>\n-   <p>The <code> verbose_terminate_handler </code> function obtains the name\n+   <p>The <code> __verbose_terminate_handler </code> function obtains the name\n       of the current exception, attempts to demangle it, and prints it to\n       stderr.  If the exception is derived from <code> std::exception </code>\n       then the output from <code>what()</code> will be included.\n@@ -145,7 +145,7 @@ <h2><a name=\"4\">Verbose <code>terminate</code></a></h2>\n \n    int main (int argc)\n    {\n-       std::set_terminate (__gnu_cxx::verbose_terminate_handler);\n+       std::set_terminate (__gnu_cxx::__verbose_terminate_handler);\n        if (argc &gt; 5)\n            throw BLARGH(&quot;argc is greater than 5!&quot;);\n        else"}, {"sha": "dce85f02d69784c321a2555e7b583b8c4ba9a478", "filename": "libstdc++-v3/docs/html/install.html", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f6aa8b6c999bf5f83ae23403c261f04e58841e/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Finstall.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f6aa8b6c999bf5f83ae23403c261f04e58841e/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Finstall.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Finstall.html?ref=76f6aa8b6c999bf5f83ae23403c261f04e58841e", "patch": "@@ -75,6 +75,13 @@ <h2><a name=\"prereqs\">Tools you will need beforehand</a></h2>\n       well as releases) of binutils\n       <a href=\"ftp://sources.redhat.com/pub/binutils\">here</a>.\n    </p>\n+\n+   <p>If you are using a 3.1-series libstdc++ snapshot, then the\n+      requirements are slightly more stringent:  the compiler sources must\n+      also be 3.1 or later (for both technical and licensing reasons), and\n+      your binutils must be 2.11.95 or later if you want to use symbol\n+      versioning in shared libraries.\n+   </p>\n  \n  <!-- Commented until some system-specific requirements appear.\n    <p>Finally, a few system-specific requirements:\n@@ -145,7 +152,8 @@ <h2><a name=\"srcsetup\">Setting up the source directories</a></h2>\n <h2><a name=\"config\">Configuring</a></h2>\n    <p>If you have never done this before, you should read the basic\n       <a href=\"http://gcc.gnu.org/install/\">GCC Installation\n-      Instructions</a> first.  Read <em>all of them</em>.  Twice.\n+      Instructions</a> first.  Read <em>all of them</em>.\n+      <strong>Twice.</strong>\n    </p>\n    <p>When building libstdc++-v3 you'll have to configure\n       the entire <em>gccsrcdir</em> directory.  The full list of libstdc++-v3\n@@ -214,6 +222,10 @@ <h2><a name=\"postinstall\">Post-installation</a></h2>\n       <em>cpu-vendor-os</em>/bits/\n       ext/</pre>\n    </p>\n+   <p>If you used the version-specific-libs configure option, then most of\n+      the headers and library files will be moved under\n+      <code>lib/gcc-lib/</code> instead.\n+   </p>\n    <p>You can check the status of the build without installing it using\n       <pre>\n    make check</pre>\n@@ -254,7 +266,7 @@ <h2><a name=\"usage\">Using the library</a></h2>\n   <li>GNU ld (default on Linux):<code>  -Wl,--rpath,<em>destdir</em>/lib</code>\n   <li>IRIX ld:<code>  -Wl,-rpath,<em>destdir</em>/lib</code>\n   <li>Solaris ld:<code>  -Wl,-R<em>destdir</em>/lib</code>\n-  <li>More...?\n+  <li>More...?  Let us know!\n               </ul>\n           </ul>\n        </p>"}, {"sha": "e37613f1e8fd6c2de9c1109c5923dc9773817356", "filename": "libstdc++-v3/libsupc++/Makefile.am", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f6aa8b6c999bf5f83ae23403c261f04e58841e/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f6aa8b6c999bf5f83ae23403c261f04e58841e/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am?ref=76f6aa8b6c999bf5f83ae23403c261f04e58841e", "patch": "@@ -1,6 +1,6 @@\n ## Makefile for the GNU C++ Support library.\n ##\n-## Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n+## Copyright (C) 2000, 2001, 2002 Free Software Foundation, Inc.\n ##\n ## Process this file with automake to produce Makefile.in.\n ##\n@@ -27,6 +27,7 @@ MAINT_CHARSET = latin1\n mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n \n # Cross compiler and multilib support.\n+CC = @CC@\n CXX = @glibcpp_CXX@\n toolexecdir = @glibcpp_toolexecdir@\n toolexeclibdir = @glibcpp_toolexeclibdir@\n@@ -66,10 +67,12 @@ headers = \\\n \texception new typeinfo cxxabi.h exception_defines.h \n \n sources = \\\n+\tcxa_demangle.c \\\n \tdel_op.cc \\\n \tdel_opnt.cc \\\n \tdel_opv.cc \\\n \tdel_opvnt.cc \\\n+\tdyn-string.c \\\n \teh_alloc.cc \\\n \teh_aux_runtime.cc \\\n \teh_catch.cc \\\n@@ -97,6 +100,28 @@ glibcppinstall_HEADERS = $(headers)\n \n LIBSUPCXX_CXXFLAGS = $(LIBSUPCXX_PICFLAGS)\n \n+# Use special rules for pulling things out of libiberty.\n+cxa_demangle.c:\n+\trm -f $@\n+\t$(LN_S) $(toplevel_srcdir)/libiberty/cp-demangle.c $@\n+cxa_demangle.lo: cxa_demangle.c\n+\t$(LTCOMPILE) -DIN_GLIBCPP_V3 -Wno-error -c $<\n+cxa_demangle.o: cxa_demangle.c\n+\t$(COMPILE) -DIN_GLIBCPP_V3 -Wno-error -c $<\n+dyn-string.c:\n+\trm -f $@\n+\t$(LN_S) $(toplevel_srcdir)/libiberty/dyn-string.c $@\n+dyn-string.lo: dyn-string.c\n+\t$(LTCOMPILE) -DIN_GLIBCPP_V3 -Wno-error -c $<\n+dyn-string.o: dyn-string.c\n+\t$(COMPILE) -DIN_GLIBCPP_V3 -Wno-error -c $<\n+\n+# LTCOMPILE is copied from LTCXXCOMPILE below.\n+LTCOMPILE = $(LIBTOOL) --tag CC --tag disable-shared \\\n+               --mode=compile $(CC) $(INCLUDES) \\\n+               $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS) \n+\n+\n # AM_CXXFLAGS needs to be in each subdirectory so that it can be\n # modified in a per-library or per-sub-library way.  Need to manually\n # set this option because CONFIG_CXXFLAGS has to be after"}, {"sha": "e407bf10324d9fb819ca60000b1ad95662f040c4", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 41, "deletions": 13, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f6aa8b6c999bf5f83ae23403c261f04e58841e/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f6aa8b6c999bf5f83ae23403c261f04e58841e/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=76f6aa8b6c999bf5f83ae23403c261f04e58841e", "patch": "@@ -1,6 +1,6 @@\n-# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am\n+# Makefile.in generated automatically by automake 1.4 from Makefile.am\n \n-# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.\n+# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -71,7 +71,6 @@ BASIC_FILE_H = @BASIC_FILE_H@\n BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@\n CATALOGS = @CATALOGS@\n CATOBJEXT = @CATOBJEXT@\n-CC = @CC@\n CCODECVT_C = @CCODECVT_C@\n CCODECVT_H = @CCODECVT_H@\n CLOCALE_H = @CLOCALE_H@\n@@ -154,6 +153,7 @@ MAINT_CHARSET = latin1\n mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n \n # Cross compiler and multilib support.\n+CC = @CC@\n CXX = @glibcpp_CXX@\n toolexecdir = @glibcpp_toolexecdir@\n toolexeclibdir = @glibcpp_toolexeclibdir@\n@@ -195,10 +195,12 @@ headers = \\\n \n \n sources = \\\n+\tcxa_demangle.c \\\n \tdel_op.cc \\\n \tdel_opnt.cc \\\n \tdel_opv.cc \\\n \tdel_opvnt.cc \\\n+\tdyn-string.c \\\n \teh_alloc.cc \\\n \teh_aux_runtime.cc \\\n \teh_catch.cc \\\n@@ -227,6 +229,12 @@ glibcppinstall_HEADERS = $(headers)\n \n LIBSUPCXX_CXXFLAGS = $(LIBSUPCXX_PICFLAGS)\n \n+# LTCOMPILE is copied from LTCXXCOMPILE below.\n+LTCOMPILE = $(LIBTOOL) --tag CC --tag disable-shared \\\n+               --mode=compile $(CC) $(INCLUDES) \\\n+               $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS) \n+\n+\n # AM_CXXFLAGS needs to be in each subdirectory so that it can be\n # modified in a per-library or per-sub-library way.  Need to manually\n # set this option because CONFIG_CXXFLAGS has to be after\n@@ -287,21 +295,25 @@ LDFLAGS = @LDFLAGS@\n LIBS = @LIBS@\n libsupc__convenience_la_LDFLAGS = \n libsupc__convenience_la_LIBADD = \n-libsupc__convenience_la_OBJECTS =  del_op.lo del_opnt.lo del_opv.lo \\\n-del_opvnt.lo eh_alloc.lo eh_aux_runtime.lo eh_catch.lo eh_exception.lo \\\n-eh_globals.lo eh_personality.lo eh_terminate.lo eh_throw.lo eh_type.lo \\\n-new_handler.lo new_op.lo new_opnt.lo new_opv.lo new_opvnt.lo pure.lo \\\n-tinfo.lo tinfo2.lo vec.lo\n+libsupc__convenience_la_OBJECTS =  cxa_demangle.lo del_op.lo del_opnt.lo \\\n+del_opv.lo del_opvnt.lo dyn-string.lo eh_alloc.lo eh_aux_runtime.lo \\\n+eh_catch.lo eh_exception.lo eh_globals.lo eh_personality.lo \\\n+eh_terminate.lo eh_throw.lo eh_type.lo new_handler.lo new_op.lo \\\n+new_opnt.lo new_opv.lo new_opvnt.lo pure.lo tinfo.lo tinfo2.lo vec.lo\n libsupc___la_LDFLAGS = \n libsupc___la_LIBADD = \n-libsupc___la_OBJECTS =  del_op.lo del_opnt.lo del_opv.lo del_opvnt.lo \\\n-eh_alloc.lo eh_aux_runtime.lo eh_catch.lo eh_exception.lo eh_globals.lo \\\n-eh_personality.lo eh_terminate.lo eh_throw.lo eh_type.lo new_handler.lo \\\n-new_op.lo new_opnt.lo new_opv.lo new_opvnt.lo pure.lo tinfo.lo \\\n-tinfo2.lo vec.lo\n+libsupc___la_OBJECTS =  cxa_demangle.lo del_op.lo del_opnt.lo del_opv.lo \\\n+del_opvnt.lo dyn-string.lo eh_alloc.lo eh_aux_runtime.lo eh_catch.lo \\\n+eh_exception.lo eh_globals.lo eh_personality.lo eh_terminate.lo \\\n+eh_throw.lo eh_type.lo new_handler.lo new_op.lo new_opnt.lo new_opv.lo \\\n+new_opvnt.lo pure.lo tinfo.lo tinfo2.lo vec.lo\n CXXFLAGS = @CXXFLAGS@\n CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)\n CXXLD = $(CXX)\n+CFLAGS = @CFLAGS@\n+COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n+CCLD = $(CC)\n+LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@\n HEADERS =  $(glibcppinstall_HEADERS)\n \n DIST_COMMON =  Makefile.am Makefile.in\n@@ -547,6 +559,22 @@ mostlyclean-generic distclean-generic clean-generic \\\n maintainer-clean-generic clean mostlyclean distclean maintainer-clean\n \n \n+# Use special rules for pulling things out of libiberty.\n+cxa_demangle.c:\n+\trm -f $@\n+\t$(LN_S) $(toplevel_srcdir)/libiberty/cp-demangle.c $@\n+cxa_demangle.lo: cxa_demangle.c\n+\t$(LTCOMPILE) -DIN_GLIBCPP_V3 -Wno-error -c $<\n+cxa_demangle.o: cxa_demangle.c\n+\t$(COMPILE) -DIN_GLIBCPP_V3 -Wno-error -c $<\n+dyn-string.c:\n+\trm -f $@\n+\t$(LN_S) $(toplevel_srcdir)/libiberty/dyn-string.c $@\n+dyn-string.lo: dyn-string.c\n+\t$(LTCOMPILE) -DIN_GLIBCPP_V3 -Wno-error -c $<\n+dyn-string.o: dyn-string.c\n+\t$(COMPILE) -DIN_GLIBCPP_V3 -Wno-error -c $<\n+\n # We have to have rules modified from the default to counteract SUN make\n # prepending each of $(glibcppinstall_HEADERS) with VPATH below.\n install-glibcppinstallHEADERS: $(glibcppinstall_HEADERS)"}, {"sha": "a3543c903c65f07bea9649389d3c8736e8856561", "filename": "libstdc++-v3/src/vterminate.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f6aa8b6c999bf5f83ae23403c261f04e58841e/libstdc%2B%2B-v3%2Fsrc%2Fvterminate.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f6aa8b6c999bf5f83ae23403c261f04e58841e/libstdc%2B%2B-v3%2Fsrc%2Fvterminate.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fvterminate.cc?ref=76f6aa8b6c999bf5f83ae23403c261f04e58841e", "patch": "@@ -56,10 +56,8 @@ namespace __gnu_cxx\n \t  int status = -1;\n \t  char *dem = 0;\n \t  \n-#if 0\n \t  // Disabled until __cxa_demangle gets the runtime GPL exception.\n \t  dem = __cxa_demangle(name, 0, 0, &status);\n-#endif\n \n \t  printf(\"terminate called after throwing a `%s'\\n\", \n \t\t status == 0 ? dem : name);"}]}