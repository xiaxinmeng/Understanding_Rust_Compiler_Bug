{"sha": "63f2a6a5aaf319329c33a7cfd342f3aaa763b883", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNmMmE2YTVhYWYzMTkzMjljMzNhN2NmZDM0MmYzYWFhNzYzYjg4Mw==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2012-10-08T00:10:20Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2012-10-08T00:10:20Z"}, "message": "mmix.c (mmix_output_octa): Don't assume HOST_WIDEST_INT_PRINT_HEX starts with \"0x\".\n\n\t* config/mmix/mmix.c (mmix_output_octa): Don't assume\n\tHOST_WIDEST_INT_PRINT_HEX starts with \"0x\".  Instead use\n\tHOST_WIDE_INT_PRINT_HEX_PURE, falling back to\n\tHOST_WIDEST_INT_PRINT_UNSIGNED.\n\nFrom-SVN: r192189", "tree": {"sha": "a42da8cdcabebec6b9766fdf32191dc22c43dded", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a42da8cdcabebec6b9766fdf32191dc22c43dded"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63f2a6a5aaf319329c33a7cfd342f3aaa763b883", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63f2a6a5aaf319329c33a7cfd342f3aaa763b883", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63f2a6a5aaf319329c33a7cfd342f3aaa763b883", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63f2a6a5aaf319329c33a7cfd342f3aaa763b883/comments", "author": null, "committer": null, "parents": [{"sha": "81bd268ceb57db1d3996b63b66054b4dce8dbb06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81bd268ceb57db1d3996b63b66054b4dce8dbb06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81bd268ceb57db1d3996b63b66054b4dce8dbb06"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "8f944d7fd58167b9274c785dfecb3e9ae14a6355", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63f2a6a5aaf319329c33a7cfd342f3aaa763b883/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63f2a6a5aaf319329c33a7cfd342f3aaa763b883/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=63f2a6a5aaf319329c33a7cfd342f3aaa763b883", "patch": "@@ -1,3 +1,10 @@\n+2012-10-08  Hans-Peter Nilsson  <hp@bitrange.com>\n+\n+\t* config/mmix/mmix.c (mmix_output_octa): Don't assume\n+\tHOST_WIDEST_INT_PRINT_HEX starts with \"0x\".  Instead use\n+\tHOST_WIDE_INT_PRINT_HEX_PURE, falling back to\n+\tHOST_WIDEST_INT_PRINT_UNSIGNED.\n+\n 2012-10-07  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* machmode.h (GET_MODE_UNIT_PRECISION): New macro."}, {"sha": "26668e76da8fa07bb393181e92d36a3f8c4a6593", "filename": "gcc/config/mmix/mmix.c", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63f2a6a5aaf319329c33a7cfd342f3aaa763b883/gcc%2Fconfig%2Fmmix%2Fmmix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63f2a6a5aaf319329c33a7cfd342f3aaa763b883/gcc%2Fconfig%2Fmmix%2Fmmix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.c?ref=63f2a6a5aaf319329c33a7cfd342f3aaa763b883", "patch": "@@ -2499,19 +2499,9 @@ mmix_output_shiftvalue_op_from_str (FILE *stream,\n static void\n mmix_output_octa (FILE *stream, HOST_WIDEST_INT value, int do_begin_end)\n {\n-  /* Snipped from final.c:output_addr_const.  We need to avoid the\n-     presumed universal \"0x\" prefix.  We can do it by replacing \"0x\" with\n-     \"#0\" here; we must avoid a space in the operands and no, the zero\n-     won't cause the number to be assumed in octal format.  */\n-  char hex_format[sizeof (HOST_WIDEST_INT_PRINT_HEX)];\n-\n   if (do_begin_end)\n     fprintf (stream, \"\\tOCTA \");\n \n-  strcpy (hex_format, HOST_WIDEST_INT_PRINT_HEX);\n-  hex_format[0] = '#';\n-  hex_format[1] = '0';\n-\n   /* Provide a few alternative output formats depending on the number, to\n      improve legibility of assembler output.  */\n   if ((value < (HOST_WIDEST_INT) 0 && value > (HOST_WIDEST_INT) -10000)\n@@ -2520,8 +2510,13 @@ mmix_output_octa (FILE *stream, HOST_WIDEST_INT value, int do_begin_end)\n   else if (value > (HOST_WIDEST_INT) 0\n \t   && value < ((HOST_WIDEST_INT) 1 << 31) * 2)\n     fprintf (stream, \"#%x\", (unsigned int) value);\n-  else\n-    fprintf (stream, hex_format, value);\n+  else if (sizeof (HOST_WIDE_INT) == sizeof (HOST_WIDEST_INT))\n+    /* We need to avoid the not-so-universal \"0x\" prefix; we need the\n+       pure hex-digits together with the mmixal \"#\" hex prefix.  */\n+    fprintf (stream, \"#\" HOST_WIDE_INT_PRINT_HEX_PURE,\n+\t     (HOST_WIDE_INT) value);\n+  else /* Need to avoid the hex output; there's no ...WIDEST...HEX_PURE.  */\n+    fprintf (stream, HOST_WIDEST_INT_PRINT_UNSIGNED, value);\n \n   if (do_begin_end)\n     fprintf (stream, \"\\n\");"}]}