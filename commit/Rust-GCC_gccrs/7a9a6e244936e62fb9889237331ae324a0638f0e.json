{"sha": "7a9a6e244936e62fb9889237331ae324a0638f0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E5YTZlMjQ0OTM2ZTYyZmI5ODg5MjM3MzMxYWUzMjRhMDYzOGYwZQ==", "commit": {"author": {"name": "Adam Butcher", "email": "adam@jessamine.co.uk", "date": "2013-09-23T22:43:34Z"}, "committer": {"name": "Adam Butcher", "email": "abutcher@gcc.gnu.org", "date": "2013-09-23T22:43:34Z"}, "message": "Fix instantiation of implicit function template forward declarations.\n\n\t* parser.c (cp_parser_init_declarator): Defer calling\n\tfinish_fully_implicit_template for forward declarations until after\n\tother decl processing is complete.  Cleanup for clarity: Extract 'else'\n\tcase after 'if' containing unconditional return.\n\nFrom-SVN: r202850", "tree": {"sha": "f06174c362e3cdbe00ad92584ca3495046955167", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f06174c362e3cdbe00ad92584ca3495046955167"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a9a6e244936e62fb9889237331ae324a0638f0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a9a6e244936e62fb9889237331ae324a0638f0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a9a6e244936e62fb9889237331ae324a0638f0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a9a6e244936e62fb9889237331ae324a0638f0e/comments", "author": {"login": "abutcher-gh", "id": 10379705, "node_id": "MDQ6VXNlcjEwMzc5NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/10379705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abutcher-gh", "html_url": "https://github.com/abutcher-gh", "followers_url": "https://api.github.com/users/abutcher-gh/followers", "following_url": "https://api.github.com/users/abutcher-gh/following{/other_user}", "gists_url": "https://api.github.com/users/abutcher-gh/gists{/gist_id}", "starred_url": "https://api.github.com/users/abutcher-gh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abutcher-gh/subscriptions", "organizations_url": "https://api.github.com/users/abutcher-gh/orgs", "repos_url": "https://api.github.com/users/abutcher-gh/repos", "events_url": "https://api.github.com/users/abutcher-gh/events{/privacy}", "received_events_url": "https://api.github.com/users/abutcher-gh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1a4109b68586ceb6c852cb6c405967ff084b7800", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a4109b68586ceb6c852cb6c405967ff084b7800", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a4109b68586ceb6c852cb6c405967ff084b7800"}], "stats": {"total": 86, "additions": 49, "deletions": 37}, "files": [{"sha": "380fae9db428ac43fdf3384210f7c0e42c9a45c6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a9a6e244936e62fb9889237331ae324a0638f0e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a9a6e244936e62fb9889237331ae324a0638f0e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7a9a6e244936e62fb9889237331ae324a0638f0e", "patch": "@@ -1,3 +1,10 @@\n+2013-09-23  Adam Butcher  <adam@jessamine.co.uk>\n+\n+\t* parser.c (cp_parser_init_declarator): Defer calling\n+\tfinish_fully_implicit_template for forward declarations until after\n+\tother decl processing is complete.  Cleanup for clarity: Extract 'else'\n+\tcase after 'if' containing unconditional return.\n+\n 2013-09-23  Adam Butcher  <adam@jessamine.co.uk>\n \n \t* parser.c (make_generic_type_name): Spell generic type names '<autoN>'"}, {"sha": "f3133f393018f87e06f8ebccf54f1b189491ec12", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 42, "deletions": 37, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a9a6e244936e62fb9889237331ae324a0638f0e/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a9a6e244936e62fb9889237331ae324a0638f0e/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=7a9a6e244936e62fb9889237331ae324a0638f0e", "patch": "@@ -16318,47 +16318,43 @@ cp_parser_init_declarator (cp_parser* parser,\n \t\t\t       \"a function-definition is not allowed here\");\n \t      return error_mark_node;\n \t    }\n-\t  else\n-\t    {\n-\t      location_t func_brace_location\n-\t\t= cp_lexer_peek_token (parser->lexer)->location;\n-\n-\t      /* Neither attributes nor an asm-specification are allowed\n-\t\t on a function-definition.  */\n-\t      if (asm_specification)\n-\t\terror_at (asm_spec_start_token->location,\n-\t\t\t  \"an asm-specification is not allowed \"\n-\t\t\t  \"on a function-definition\");\n-\t      if (attributes)\n-\t\terror_at (attributes_start_token->location,\n-\t\t\t  \"attributes are not allowed \"\n-\t\t\t  \"on a function-definition\");\n-\t      /* This is a function-definition.  */\n-\t      *function_definition_p = true;\n-\n-\t      /* Parse the function definition.  */\n-\t      if (member_p)\n-\t\tdecl = cp_parser_save_member_function_body (parser,\n-\t\t\t\t\t\t\t    decl_specifiers,\n-\t\t\t\t\t\t\t    declarator,\n-\t\t\t\t\t\t\t    prefix_attributes);\n-\t      else\n-\t\tdecl =\n-\t\t  (cp_parser_function_definition_from_specifiers_and_declarator\n-\t\t   (parser, decl_specifiers, prefix_attributes, declarator));\n \n-\t      if (decl != error_mark_node && DECL_STRUCT_FUNCTION (decl))\n-\t\t{\n-\t\t  /* This is where the prologue starts...  */\n-\t\t  DECL_STRUCT_FUNCTION (decl)->function_start_locus\n-\t\t    = func_brace_location;\n-\t\t}\n+\t  location_t func_brace_location\n+\t    = cp_lexer_peek_token (parser->lexer)->location;\n \n-\t      return decl;\n+\t  /* Neither attributes nor an asm-specification are allowed\n+\t     on a function-definition.  */\n+\t  if (asm_specification)\n+\t    error_at (asm_spec_start_token->location,\n+\t\t      \"an asm-specification is not allowed \"\n+\t\t      \"on a function-definition\");\n+\t  if (attributes)\n+\t    error_at (attributes_start_token->location,\n+\t\t      \"attributes are not allowed \"\n+\t\t      \"on a function-definition\");\n+\t  /* This is a function-definition.  */\n+\t  *function_definition_p = true;\n+\n+\t  /* Parse the function definition.  */\n+\t  if (member_p)\n+\t    decl = cp_parser_save_member_function_body (parser,\n+\t\t\t\t\t\t\tdecl_specifiers,\n+\t\t\t\t\t\t\tdeclarator,\n+\t\t\t\t\t\t\tprefix_attributes);\n+\t  else\n+\t    decl =\n+\t      (cp_parser_function_definition_from_specifiers_and_declarator\n+\t       (parser, decl_specifiers, prefix_attributes, declarator));\n+\n+\t  if (decl != error_mark_node && DECL_STRUCT_FUNCTION (decl))\n+\t    {\n+\t      /* This is where the prologue starts...  */\n+\t      DECL_STRUCT_FUNCTION (decl)->function_start_locus\n+\t\t= func_brace_location;\n \t    }\n+\n+\t  return decl;\n \t}\n-      else if (parser->fully_implicit_function_template_p)\n-\tdecl = finish_fully_implicit_template (parser, decl);\n     }\n \n   /* [dcl.dcl]\n@@ -16581,6 +16577,15 @@ cp_parser_init_declarator (cp_parser* parser,\n   if (!friend_p && pushed_scope)\n     pop_scope (pushed_scope);\n \n+  if (function_declarator_p (declarator)\n+      && parser->fully_implicit_function_template_p)\n+    {\n+      if (member_p)\n+\tdecl = finish_fully_implicit_template (parser, decl);\n+      else\n+\tfinish_fully_implicit_template (parser, /*member_decl_opt=*/0);\n+    }\n+\n   return decl;\n }\n "}]}