{"sha": "7957fde4e8d6657c68541f099803762795575cda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk1N2ZkZTRlOGQ2NjU3YzY4NTQxZjA5OTgwMzc2Mjc5NTU3NWNkYQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2002-11-28T18:02:46Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-11-28T18:02:46Z"}, "message": "* config/h8300/h8300.md (6 new peephole2 patterns): New.\n\nFrom-SVN: r59611", "tree": {"sha": "da7995218d0ef3c983fd57bb9f7dd38b07bd7d95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da7995218d0ef3c983fd57bb9f7dd38b07bd7d95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7957fde4e8d6657c68541f099803762795575cda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7957fde4e8d6657c68541f099803762795575cda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7957fde4e8d6657c68541f099803762795575cda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7957fde4e8d6657c68541f099803762795575cda/comments", "author": null, "committer": null, "parents": [{"sha": "e7c79ef9c9beb9ca38c4890c26b24bfdb0fdb5e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7c79ef9c9beb9ca38c4890c26b24bfdb0fdb5e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7c79ef9c9beb9ca38c4890c26b24bfdb0fdb5e2"}], "stats": {"total": 128, "additions": 128, "deletions": 0}, "files": [{"sha": "7b0603f81106fdf20875b19533ed286b97205c7d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7957fde4e8d6657c68541f099803762795575cda/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7957fde4e8d6657c68541f099803762795575cda/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7957fde4e8d6657c68541f099803762795575cda", "patch": "@@ -1,3 +1,7 @@\n+2002-11-28  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.md (6 new peephole2 patterns): New.\n+\n 2002-11-28  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config.gcc (x86_64-*-linux*) [tmake_file]: Remove i386/t-crtstuff."}, {"sha": "182e9f1a1fa9acb5c14f77fad4e2aece5e89dd64", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 124, "deletions": 0, "changes": 124, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7957fde4e8d6657c68541f099803762795575cda/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7957fde4e8d6657c68541f099803762795575cda/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=7957fde4e8d6657c68541f099803762795575cda", "patch": "@@ -2330,3 +2330,127 @@\n \t\t      (label_ref (match_dup 1))\n \t\t      (pc)))]\n   \"\")\n+\f\n+;; -----------------------------------------------------------------\n+;; PEEPHOLE PATTERNS\n+;; -----------------------------------------------------------------\n+\n+(define_peephole2\n+  [(parallel\n+     [(set (match_operand:HI 0 \"register_operand\" \"\")\n+\t   (lshiftrt:HI (match_dup 0)\n+\t\t\t(match_operand:HI 1 \"const_int_operand\" \"\")))\n+      (clobber (match_operand:HI 2 \"\" \"\"))])\n+   (set (match_dup 0)\n+\t(and:HI (match_dup 0)\n+\t\t(match_operand:HI 3 \"const_int_operand\" \"\")))]\n+  \"INTVAL (operands[3]) == (255 >> INTVAL (operands[1]))\"\n+  [(set (match_dup 0)\n+\t(and:HI (match_dup 0)\n+\t\t(const_int 255)))\n+   (parallel\n+     [(set (match_dup 0)\n+\t   (lshiftrt:HI (match_dup 0)\n+\t\t\t(match_dup 1)))\n+      (clobber (match_dup 2))])]\n+  \"\")\n+\n+(define_peephole2\n+  [(parallel\n+     [(set (match_operand:HI 0 \"register_operand\" \"\")\n+\t   (ashift:HI (match_dup 0)\n+\t\t      (match_operand:HI 1 \"const_int_operand\" \"\")))\n+      (clobber (match_operand:HI 2 \"\" \"\"))])\n+   (set (match_dup 0)\n+\t(and:HI (match_dup 0)\n+\t\t(match_operand:HI 3 \"const_int_operand\" \"\")))]\n+  \"INTVAL (operands[3]) == (255 << INTVAL (operands[1]))\"\n+  [(set (match_dup 0)\n+\t(and:HI (match_dup 0)\n+\t\t(const_int 255)))\n+   (parallel\n+     [(set (match_dup 0)\n+\t   (ashift:HI (match_dup 0)\n+\t\t      (match_dup 1)))\n+      (clobber (match_dup 2))])]\n+  \"\")\n+\n+(define_peephole2\n+  [(parallel\n+     [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t   (lshiftrt:SI (match_dup 0)\n+\t\t\t(match_operand:SI 1 \"const_int_operand\" \"\")))\n+      (clobber (match_operand:SI 2 \"\" \"\"))])\n+   (set (match_dup 0)\n+\t(and:SI (match_dup 0)\n+\t\t(match_operand:SI 3 \"const_int_operand\" \"\")))]\n+  \"INTVAL (operands[3]) == (255 >> INTVAL (operands[1]))\"\n+  [(set (match_dup 0)\n+\t(and:SI (match_dup 0)\n+\t\t(const_int 255)))\n+   (parallel\n+     [(set (match_dup 0)\n+\t   (lshiftrt:SI (match_dup 0)\n+\t\t\t(match_dup 1)))\n+      (clobber (match_dup 2))])]\n+  \"\")\n+\n+(define_peephole2\n+  [(parallel\n+     [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t   (ashift:SI (match_dup 0)\n+\t\t      (match_operand:SI 1 \"const_int_operand\" \"\")))\n+      (clobber (match_operand:SI 2 \"\" \"\"))])\n+   (set (match_dup 0)\n+\t(and:SI (match_dup 0)\n+\t\t(match_operand:SI 3 \"const_int_operand\" \"\")))]\n+  \"INTVAL (operands[3]) == (255 << INTVAL (operands[1]))\"\n+  [(set (match_dup 0)\n+\t(and:SI (match_dup 0)\n+\t\t(const_int 255)))\n+   (parallel\n+     [(set (match_dup 0)\n+\t   (ashift:SI (match_dup 0)\n+\t\t      (match_dup 1)))\n+      (clobber (match_dup 2))])]\n+  \"\")\n+\n+(define_peephole2\n+  [(parallel\n+     [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t   (lshiftrt:SI (match_dup 0)\n+\t\t\t(match_operand:SI 1 \"const_int_operand\" \"\")))\n+      (clobber (match_operand:SI 2 \"\" \"\"))])\n+   (set (match_dup 0)\n+\t(and:SI (match_dup 0)\n+\t\t(match_operand:SI 3 \"const_int_operand\" \"\")))]\n+  \"INTVAL (operands[3]) == (65535 >> INTVAL (operands[1]))\"\n+  [(set (match_dup 0)\n+\t(and:SI (match_dup 0)\n+\t\t(const_int 65535)))\n+   (parallel\n+     [(set (match_dup 0)\n+\t   (lshiftrt:SI (match_dup 0)\n+\t\t\t(match_dup 1)))\n+      (clobber (match_dup 2))])]\n+  \"\")\n+\n+(define_peephole2\n+  [(parallel\n+     [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t   (ashift:SI (match_dup 0)\n+\t\t      (match_operand:SI 1 \"const_int_operand\" \"\")))\n+      (clobber (match_operand:SI 2 \"\" \"\"))])\n+   (set (match_dup 0)\n+\t(and:SI (match_dup 0)\n+\t\t(match_operand:SI 3 \"const_int_operand\" \"\")))]\n+  \"INTVAL (operands[3]) == (65535 << INTVAL (operands[1]))\"\n+  [(set (match_dup 0)\n+\t(and:SI (match_dup 0)\n+\t\t(const_int 65535)))\n+   (parallel\n+     [(set (match_dup 0)\n+\t   (ashift:SI (match_dup 0)\n+\t\t      (match_dup 1)))\n+      (clobber (match_dup 2))])]\n+  \"\")"}]}