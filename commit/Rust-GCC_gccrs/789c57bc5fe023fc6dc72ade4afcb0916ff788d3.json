{"sha": "789c57bc5fe023fc6dc72ade4afcb0916ff788d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg5YzU3YmM1ZmUwMjNmYzZkYzcyYWRlNGFmY2IwOTE2ZmY3ODhkMw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-05-04T14:49:38Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-05-04T21:45:02Z"}, "message": "libstdc++: Fix undefined behaviour in std::string\n\nThis fixes a ubsan error when constructing a string with a null pointer:\n\nbits/basic_string.h:534:21: runtime error: applying non-zero offset 18446744073709551615 to null pointer\n\nThe _M_construct function only cares whether the second pointer is\nnon-null, so create a non-null value without undefined arithmetic.\n\nWe can also pass the random_access_iterator_tag directly to the\n_M_construct function, to avoid going via the tag dispatching\n_M_construct_aux, because we know we have pointers not integers here.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/basic_string.h (basic_string(const CharT*, const A&)):\n\tDo not do arithmetic on null pointer.", "tree": {"sha": "691d1b22ff0b4b052833490eb4e1d2bcd687e60c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/691d1b22ff0b4b052833490eb4e1d2bcd687e60c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/789c57bc5fe023fc6dc72ade4afcb0916ff788d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/789c57bc5fe023fc6dc72ade4afcb0916ff788d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/789c57bc5fe023fc6dc72ade4afcb0916ff788d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/789c57bc5fe023fc6dc72ade4afcb0916ff788d3/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca871701c2822c3c4537745d4aa44a7b8f408337", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca871701c2822c3c4537745d4aa44a7b8f408337", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca871701c2822c3c4537745d4aa44a7b8f408337"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "84356adc7ae5ffe167d0fb52052a5dfcfe9e7e87", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/789c57bc5fe023fc6dc72ade4afcb0916ff788d3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/789c57bc5fe023fc6dc72ade4afcb0916ff788d3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=789c57bc5fe023fc6dc72ade4afcb0916ff788d3", "patch": "@@ -531,7 +531,12 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n #endif\n       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())\n       : _M_dataplus(_M_local_data(), __a)\n-      { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }\n+      {\n+\tconst _CharT* __end = __s ? __s + traits_type::length(__s)\n+\t  // We just need a non-null pointer here to get an exception:\n+\t  : reinterpret_cast<const _CharT*>(__alignof__(_CharT));\n+\t_M_construct(__s, __end, random_access_iterator_tag());\n+      }\n \n       /**\n        *  @brief  Construct string as multiple characters."}]}