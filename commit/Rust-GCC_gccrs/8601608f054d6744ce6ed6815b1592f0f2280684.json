{"sha": "8601608f054d6744ce6ed6815b1592f0f2280684", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYwMTYwOGYwNTRkNjc0NGNlNmVkNjgxNWIxNTkyZjBmMjI4MDY4NA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2002-12-24T18:44:00Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2002-12-24T18:44:00Z"}, "message": "configure.in (enable-coverage): Add SELF_COVERAGE.\n\n\t* configure.in (enable-coverage): Add SELF_COVERAGE.\n\t* profile.c (end_branch_prob): Use SELF_COVERAGE.\n\nFrom-SVN: r60476", "tree": {"sha": "7cdad046b41fedb412d7f53b90b2d0ed1c3dc3ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7cdad046b41fedb412d7f53b90b2d0ed1c3dc3ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8601608f054d6744ce6ed6815b1592f0f2280684", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8601608f054d6744ce6ed6815b1592f0f2280684", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8601608f054d6744ce6ed6815b1592f0f2280684", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8601608f054d6744ce6ed6815b1592f0f2280684/comments", "author": null, "committer": null, "parents": [{"sha": "45aff44f044de397c378451b679c4716a7edc81d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45aff44f044de397c378451b679c4716a7edc81d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45aff44f044de397c378451b679c4716a7edc81d"}], "stats": {"total": 28, "additions": 13, "deletions": 15}, "files": [{"sha": "0648c6f260c2aea986dddaec78c79a8092c96a09", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8601608f054d6744ce6ed6815b1592f0f2280684/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8601608f054d6744ce6ed6815b1592f0f2280684/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8601608f054d6744ce6ed6815b1592f0f2280684", "patch": "@@ -1,3 +1,8 @@\n+2002-12-24  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* configure.in (enable-coverage): Add SELF_COVERAGE.\n+\t* profile.c (end_branch_prob): Use SELF_COVERAGE.\n+\n 2002-12-24  Jim Wilson  <wilson@redhat.com>\n \n \t* alias.c (record_set): Handle multi-reg hard registers."}, {"sha": "4a9e463da24ae49a797888cb61cca53fc1651eb4", "filename": "gcc/configure.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8601608f054d6744ce6ed6815b1592f0f2280684/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8601608f054d6744ce6ed6815b1592f0f2280684/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=8601608f054d6744ce6ed6815b1592f0f2280684", "patch": "@@ -364,15 +364,15 @@ AC_ARG_ENABLE(coverage,\n [  --enable-coverage[=LEVEL]\n \t\t\t  enable compiler\\'s code coverage collection.\n \t\t\t  Use to measure compiler performance and locate\n-\t\t\t  unused parts of the compiler. With LEVEL, specificy\n+\t\t\t  unused parts of the compiler. With LEVEL, specify\n \t\t\t  optimization. Values are opt, noopt,\n \t\t\t  default is noopt],\n [case \"${enableval}\" in\n yes|noopt)\n-\tcoverage_flags=\"-fprofile-arcs -ftest-coverage -O0\"\n+\tcoverage_flags=\"-fprofile-arcs -ftest-coverage -O0 -DSELF_COVERAGE=1\"\n \t;;\n opt)\n-\tcoverage_flags=\"-fprofile-arcs -ftest-coverage -O2\"\n+\tcoverage_flags=\"-fprofile-arcs -ftest-coverage -O2 -DSELF_COVERAGE=2\"\n \t;;\n *)\n \tAC_MSG_ERROR(unknown coverage setting $enableval)"}, {"sha": "2e705980f12a9a36e548d3e2233295656e908c7e", "filename": "gcc/profile.c", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8601608f054d6744ce6ed6815b1592f0f2280684/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8601608f054d6744ce6ed6815b1592f0f2280684/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=8601608f054d6744ce6ed6815b1592f0f2280684", "patch": "@@ -1428,18 +1428,11 @@ end_branch_prob ()\n     {\n       if (bbg_file)\n \t{\n-#if __GNUC__ && !CROSS_COMPILE && SUPPORTS_WEAK\n-\t  /* If __gcov_init has a value in the compiler, it means we\n-\t     are instrumenting ourselves. We should not remove the\n-\t     counts file, because we might be recompiling\n-\t     ourselves. The .da files are all removed during copying\n-\t     the stage1 files.  */\n-\t  extern void __gcov_init (void *)\n-\t    __attribute__ ((weak));\n-\t  \n-\t  if (!__gcov_init)\n-\t    unlink (da_file_name);\n-#else\n+#if !SELF_COVERAGE\n+\t  /* If the compiler is instrumented, we should not remove the\n+             counts file, because we might be recompiling\n+             ourselves. The .da files are all removed during copying\n+             the stage1 files.  */\n \t  unlink (da_file_name);\n #endif\n \t  fclose (bbg_file);"}]}