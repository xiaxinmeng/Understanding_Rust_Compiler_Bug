{"sha": "e1e835dcbb12e0d0dc889c38be204597f6fe9301", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFlODM1ZGNiYjEyZTBkMGRjODg5YzM4YmUyMDQ1OTdmNmZlOTMwMQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2006-02-16T21:41:23Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2006-02-16T21:41:23Z"}, "message": "sparc.md (setjmp): Rewrite.\n\n\t* config/sparc/sparc.md (setjmp): Rewrite.\n\t(setjmp_32): Delete.\n\t(setjmp_64): Likewise.\n\nFrom-SVN: r111154", "tree": {"sha": "c02653a0622668cb1790884e9c2cad275447cfa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c02653a0622668cb1790884e9c2cad275447cfa3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1e835dcbb12e0d0dc889c38be204597f6fe9301", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1e835dcbb12e0d0dc889c38be204597f6fe9301", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1e835dcbb12e0d0dc889c38be204597f6fe9301", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1e835dcbb12e0d0dc889c38be204597f6fe9301/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6b9ac6fcad7db28ce5337b232883e8dbca673f42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b9ac6fcad7db28ce5337b232883e8dbca673f42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b9ac6fcad7db28ce5337b232883e8dbca673f42"}], "stats": {"total": 33, "additions": 17, "deletions": 16}, "files": [{"sha": "127e35ccadfa6a9968ec65acd10ad7bc1ee163ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e835dcbb12e0d0dc889c38be204597f6fe9301/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e835dcbb12e0d0dc889c38be204597f6fe9301/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e1e835dcbb12e0d0dc889c38be204597f6fe9301", "patch": "@@ -1,3 +1,9 @@\n+2006-02-16  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* config/sparc/sparc.md (setjmp): Rewrite.\n+\t(setjmp_32): Delete.\n+\t(setjmp_64): Likewise.\n+\n 2006-02-16  Daniel Berlin <dberlin@dberlin.org>\n \n \t* tree-ssa-operands.c (access_can_touch_variable): Fix typo in"}, {"sha": "0adb300c33827dded8c728894e621d1276c9bd62", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e835dcbb12e0d0dc889c38be204597f6fe9301/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e835dcbb12e0d0dc889c38be204597f6fe9301/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=e1e835dcbb12e0d0dc889c38be204597f6fe9301", "patch": "@@ -7244,25 +7244,20 @@\n   [(const_int 0)]\n   \"\"\n {\n-  if (TARGET_ARCH64)\n-    emit_insn (gen_setjmp_64 ());\n-  else\n-    emit_insn (gen_setjmp_32 ());\n+  rtx mem;\n+  \n+  mem = gen_rtx_MEM (Pmode,\n+\t\t     plus_constant (stack_pointer_rtx,\n+\t\t\t\t    SPARC_STACK_BIAS + 14 * UNITS_PER_WORD));\n+  emit_insn (gen_rtx_SET (VOIDmode, mem, frame_pointer_rtx));\n+\n+  mem = gen_rtx_MEM (Pmode,\n+\t\t     plus_constant (stack_pointer_rtx,\n+\t\t\t\t    SPARC_STACK_BIAS + 15 * UNITS_PER_WORD));\n+  emit_insn (gen_rtx_SET (VOIDmode, mem, gen_rtx_REG (Pmode, 31)));\n   DONE;\n })\n \n-(define_expand \"setjmp_32\"\n-  [(set (mem:SI (plus:SI (reg:SI 14) (const_int 56))) (match_dup 0))\n-   (set (mem:SI (plus:SI (reg:SI 14) (const_int 60))) (reg:SI 31))]\n-  \"\"\n-  { operands[0] = frame_pointer_rtx; })\n-\n-(define_expand \"setjmp_64\"\n-  [(set (mem:DI (plus:DI (reg:DI 14) (const_int 112))) (match_dup 0))\n-   (set (mem:DI (plus:DI (reg:DI 14) (const_int 120))) (reg:DI 31))]\n-  \"\"\n-  { operands[0] = frame_pointer_rtx; })\n-\n ;; Special pattern for the FLUSH instruction.\n \n ; We do SImode and DImode versions of this to quiet down genrecog's complaints"}]}