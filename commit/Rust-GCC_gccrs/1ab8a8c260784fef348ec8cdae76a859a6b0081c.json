{"sha": "1ab8a8c260784fef348ec8cdae76a859a6b0081c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFiOGE4YzI2MDc4NGZlZjM0OGVjOGNkYWU3NmE4NTlhNmIwMDgxYw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2009-05-16T16:22:24Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2009-05-16T16:22:24Z"}, "message": "config.gcc (mips*-*-*): Support arch_32, arch_64, tune_32 and tune_64.\n\n\t* config.gcc (mips*-*-*): Support arch_32, arch_64, tune_32 and\n\ttune_64.\n\t* config/mips/mips.h (MIPS_ABI_DEFAULT, MULTILIB_ABI_DEFAULT):\n\tMove definitions earlier.\n\t(OPT_ARCH64, OPT_ARCH32): Define.\n\t(OPTION_DEFAULT_SPECS): Add entries for arch_32, arch_64, tune_32\n\tand tune_64.\n\nFrom-SVN: r147617", "tree": {"sha": "d4a661ea81f0a6ee0a3d6736cfc35e5af8c8913a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4a661ea81f0a6ee0a3d6736cfc35e5af8c8913a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ab8a8c260784fef348ec8cdae76a859a6b0081c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ab8a8c260784fef348ec8cdae76a859a6b0081c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ab8a8c260784fef348ec8cdae76a859a6b0081c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ab8a8c260784fef348ec8cdae76a859a6b0081c/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24264cbb64b09ee1ad70965c6893e56f41c85a06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24264cbb64b09ee1ad70965c6893e56f41c85a06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24264cbb64b09ee1ad70965c6893e56f41c85a06"}], "stats": {"total": 83, "additions": 54, "deletions": 29}, "files": [{"sha": "2d4bd9724a6e6538c1c05f2ad280959fc4686ea0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ab8a8c260784fef348ec8cdae76a859a6b0081c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ab8a8c260784fef348ec8cdae76a859a6b0081c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1ab8a8c260784fef348ec8cdae76a859a6b0081c", "patch": "@@ -1,3 +1,13 @@\n+2009-05-16  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config.gcc (mips*-*-*): Support arch_32, arch_64, tune_32 and\n+\ttune_64.\n+\t* config/mips/mips.h (MIPS_ABI_DEFAULT, MULTILIB_ABI_DEFAULT):\n+\tMove definitions earlier.\n+\t(OPT_ARCH64, OPT_ARCH32): Define.\n+\t(OPTION_DEFAULT_SPECS): Add entries for arch_32, arch_64, tune_32\n+\tand tune_64.\n+\n 2009-05-16  Richard Earnshaw  <rearnsha@arm.com>\n \n \tPR target/40153"}, {"sha": "341265f19f119a0994fb5d2ac635c724649fc7f7", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ab8a8c260784fef348ec8cdae76a859a6b0081c/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ab8a8c260784fef348ec8cdae76a859a6b0081c/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=1ab8a8c260784fef348ec8cdae76a859a6b0081c", "patch": "@@ -2869,7 +2869,7 @@ case \"${target}\" in\n \t\t;;\n \n \tmips*-*-*)\n-\t\tsupported_defaults=\"abi arch float tune divide llsc mips-plt\"\n+\t\tsupported_defaults=\"abi arch arch_32 arch_64 float tune tune_32 tune_64 divide llsc mips-plt\"\n \n \t\tcase ${with_float} in\n \t\t\"\" | soft | hard)"}, {"sha": "3d2fcac45f5859f9851eda1351ae70c30563f686", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 43, "deletions": 28, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ab8a8c260784fef348ec8cdae76a859a6b0081c/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ab8a8c260784fef348ec8cdae76a859a6b0081c/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=1ab8a8c260784fef348ec8cdae76a859a6b0081c", "patch": "@@ -668,6 +668,32 @@ enum mips_code_readable_setting {\n #  endif\n #endif\n \n+#ifndef MIPS_ABI_DEFAULT\n+#define MIPS_ABI_DEFAULT ABI_32\n+#endif\n+\n+/* Use the most portable ABI flag for the ASM specs.  */\n+\n+#if MIPS_ABI_DEFAULT == ABI_32\n+#define MULTILIB_ABI_DEFAULT \"mabi=32\"\n+#endif\n+\n+#if MIPS_ABI_DEFAULT == ABI_O64\n+#define MULTILIB_ABI_DEFAULT \"mabi=o64\"\n+#endif\n+\n+#if MIPS_ABI_DEFAULT == ABI_N32\n+#define MULTILIB_ABI_DEFAULT \"mabi=n32\"\n+#endif\n+\n+#if MIPS_ABI_DEFAULT == ABI_64\n+#define MULTILIB_ABI_DEFAULT \"mabi=64\"\n+#endif\n+\n+#if MIPS_ABI_DEFAULT == ABI_EABI\n+#define MULTILIB_ABI_DEFAULT \"mabi=eabi\"\n+#endif\n+\n #ifndef MULTILIB_DEFAULTS\n #define MULTILIB_DEFAULTS \\\n     { MULTILIB_ENDIAN_DEFAULT, MULTILIB_ISA_DEFAULT, MULTILIB_ABI_DEFAULT }\n@@ -730,18 +756,33 @@ enum mips_code_readable_setting {\n #define MIPS_32BIT_OPTION_SPEC \\\n   \"mips1|mips2|mips32*|mgp32\"\n \n+#if MIPS_ABI_DEFAULT == ABI_O64 \\\n+  || MIPS_ABI_DEFAULT == ABI_N32 \\\n+  || MIPS_ABI_DEFAULT == ABI_64\n+#define OPT_ARCH64 \"mabi=32|mgp32:;\"\n+#define OPT_ARCH32 \"mabi=32|mgp32\"\n+#else\n+#define OPT_ARCH64 \"mabi=o64|mabi=n32|mabi=64|mgp64\"\n+#define OPT_ARCH32 \"mabi=o64|mabi=n32|mabi=64|mgp64:;\"\n+#endif\n+\n /* Support for a compile-time default CPU, et cetera.  The rules are:\n    --with-arch is ignored if -march is specified or a -mips is specified\n-     (other than -mips16).\n-   --with-tune is ignored if -mtune is specified.\n+     (other than -mips16); likewise --with-arch-32 and --with-arch-64.\n+   --with-tune is ignored if -mtune is specified; likewise\n+     --with-tune-32 and --with-tune-64.\n    --with-abi is ignored if -mabi is specified.\n    --with-float is ignored if -mhard-float or -msoft-float are\n      specified.\n    --with-divide is ignored if -mdivide-traps or -mdivide-breaks are\n      specified. */\n #define OPTION_DEFAULT_SPECS \\\n   {\"arch\", \"%{\" MIPS_ARCH_OPTION_SPEC \":;: -march=%(VALUE)}\" }, \\\n+  {\"arch_32\", \"%{\" OPT_ARCH32 \":%{\" MIPS_ARCH_OPTION_SPEC \":;: -march=%(VALUE)}}\" }, \\\n+  {\"arch_64\", \"%{\" OPT_ARCH64 \":%{\" MIPS_ARCH_OPTION_SPEC \":;: -march=%(VALUE)}}\" }, \\\n   {\"tune\", \"%{!mtune=*:-mtune=%(VALUE)}\" }, \\\n+  {\"tune_32\", \"%{\" OPT_ARCH32 \":%{!mtune=*:-mtune=%(VALUE)}}\" }, \\\n+  {\"tune_64\", \"%{\" OPT_ARCH64 \":%{!mtune=*:-mtune=%(VALUE)}}\" }, \\\n   {\"abi\", \"%{!mabi=*:-mabi=%(VALUE)}\" }, \\\n   {\"float\", \"%{!msoft-float:%{!mhard-float:-m%(VALUE)-float}}\" }, \\\n   {\"divide\", \"%{!mdivide-traps:%{!mdivide-breaks:-mdivide-%(VALUE)}}\" }, \\\n@@ -1076,32 +1117,6 @@ enum mips_code_readable_setting {\n #endif\n \n \f\n-#ifndef MIPS_ABI_DEFAULT\n-#define MIPS_ABI_DEFAULT ABI_32\n-#endif\n-\n-/* Use the most portable ABI flag for the ASM specs.  */\n-\n-#if MIPS_ABI_DEFAULT == ABI_32\n-#define MULTILIB_ABI_DEFAULT \"mabi=32\"\n-#endif\n-\n-#if MIPS_ABI_DEFAULT == ABI_O64\n-#define MULTILIB_ABI_DEFAULT \"mabi=o64\"\n-#endif\n-\n-#if MIPS_ABI_DEFAULT == ABI_N32\n-#define MULTILIB_ABI_DEFAULT \"mabi=n32\"\n-#endif\n-\n-#if MIPS_ABI_DEFAULT == ABI_64\n-#define MULTILIB_ABI_DEFAULT \"mabi=64\"\n-#endif\n-\n-#if MIPS_ABI_DEFAULT == ABI_EABI\n-#define MULTILIB_ABI_DEFAULT \"mabi=eabi\"\n-#endif\n-\n /* SUBTARGET_ASM_OPTIMIZING_SPEC handles passing optimization options\n    to the assembler.  It may be overridden by subtargets.  */\n #ifndef SUBTARGET_ASM_OPTIMIZING_SPEC"}]}