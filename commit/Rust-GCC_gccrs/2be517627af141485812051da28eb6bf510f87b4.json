{"sha": "2be517627af141485812051da28eb6bf510f87b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJlNTE3NjI3YWYxNDE0ODU4MTIwNTFkYTI4ZWI2YmY1MTBmODdiNA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2009-05-12T22:42:45Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2009-05-12T22:42:45Z"}, "message": "re PR fortran/40110 (Bind(C): gfortran rejects the questionable but formally correct INTEGER(C_CHAR))\n\n2009-05-12  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/40110\n        * decl.c (gfc_match_kind_spec): Turn C kind error into a\n        * warning.\n\n2009-05-12  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/40110\n        * gfortran.dg/bind_c_usage_18.f90: Change dg-error into\n        dg-warning.\n        * gfortran.dg/c_kind_tests_2.f03: Ditto.\n        * gfortran.dg/interop_params.f03: Ditto.\n\nFrom-SVN: r147452", "tree": {"sha": "4dcf401487c82926ae1e272965c0e247c96f8b37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4dcf401487c82926ae1e272965c0e247c96f8b37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2be517627af141485812051da28eb6bf510f87b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2be517627af141485812051da28eb6bf510f87b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2be517627af141485812051da28eb6bf510f87b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2be517627af141485812051da28eb6bf510f87b4/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cdeed45ae6332ad98f220653878c11e6208a267f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdeed45ae6332ad98f220653878c11e6208a267f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdeed45ae6332ad98f220653878c11e6208a267f"}], "stats": {"total": 35, "additions": 24, "deletions": 11}, "files": [{"sha": "2994acf21891448f46c6435289eaef01d748c5b6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2be517627af141485812051da28eb6bf510f87b4/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2be517627af141485812051da28eb6bf510f87b4/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2be517627af141485812051da28eb6bf510f87b4", "patch": "@@ -1,3 +1,8 @@\n+2009-05-12  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/40110\n+\t* decl.c (gfc_match_kind_spec): Turn C kind error into a warning.\n+\n 2009-05-11  Steve Ellcey  <sje@cup.hp.com>\n \n \t* resolve.c (check_host_association): Initialize tail."}, {"sha": "7aa550ebd8e771372e00c4417b22cf4d8585cf62", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2be517627af141485812051da28eb6bf510f87b4/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2be517627af141485812051da28eb6bf510f87b4/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=2be517627af141485812051da28eb6bf510f87b4", "patch": "@@ -2000,9 +2000,9 @@ gfc_match_kind_spec (gfc_typespec *ts, bool kind_expr_only)\n   if (ts->f90_type != BT_UNKNOWN && ts->f90_type != ts->type\n       && !((ts->f90_type == BT_REAL && ts->type == BT_COMPLEX)\n \t   || (ts->f90_type == BT_COMPLEX && ts->type == BT_REAL)))\n-    gfc_error_now (\"C kind type parameter is for type %s but type at %L \"\n-\t\t   \"is %s\", gfc_basic_typename (ts->f90_type), &where,\n-\t\t   gfc_basic_typename (ts->type));\n+    gfc_warning_now (\"C kind type parameter is for type %s but type at %L \"\n+\t\t     \"is %s\", gfc_basic_typename (ts->f90_type), &where,\n+\t\t     gfc_basic_typename (ts->type));\n \n   gfc_gobble_whitespace ();\n   if ((c = gfc_next_ascii_char ()) != ')'"}, {"sha": "6d432cd89c5478cf41d30a5fcf448f54319ebddf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2be517627af141485812051da28eb6bf510f87b4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2be517627af141485812051da28eb6bf510f87b4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2be517627af141485812051da28eb6bf510f87b4", "patch": "@@ -1,3 +1,11 @@\n+2009-05-12  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/40110\n+\t* gfortran.dg/bind_c_usage_18.f90: Change dg-error into dg-warning.\n+\t* gfortran.dg/c_kind_tests_2.f03: Ditto.\n+\t* gfortran.dg/interop_params.f03: Ditto.\n+\n+\n 2009-05-12  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.dg/tree-ssa/loop-36.c: Reduce amount of iterations to 2 so unrolling"}, {"sha": "2bce215af1946d7772ab4a11b49caccb18bcfc1c", "filename": "gcc/testsuite/gfortran.dg/bind_c_usage_18.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2be517627af141485812051da28eb6bf510f87b4/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_18.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2be517627af141485812051da28eb6bf510f87b4/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_18.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_18.f90?ref=2be517627af141485812051da28eb6bf510f87b4", "patch": "@@ -7,7 +7,7 @@ subroutine foo(x,y,z,a) bind(c) ! { dg-warning \"but may not be C interoperable\"\n   use iso_c_binding\n   implicit none\n   integer(4) :: x\n-  integer(c_float) :: y ! { dg-error \"C kind type parameter is for type REAL\" }\n+  integer(c_float) :: y ! { dg-warning \"C kind type parameter is for type REAL\" }\n   complex(c_float) :: z ! OK, c_float == c_float_complex\n   real(c_float_complex) :: a ! OK, c_float == c_float_complex\n end subroutine foo\n@@ -16,8 +16,8 @@ end subroutine foo\n implicit none\n integer, parameter :: it = c_int\n integer, parameter :: dt = c_double\n-complex(c_int), target    :: z1  ! { dg-error \"C kind type parameter is for type INTEGER\" }\n-complex(it), target       :: z2  ! { dg-error \"C kind type parameter is for type INTEGER\" }\n+complex(c_int), target    :: z1  ! { dg-warning \"C kind type parameter is for type INTEGER\" }\n+complex(it), target       :: z2  ! { dg-warning \"C kind type parameter is for type INTEGER\" }\n complex(c_double), target :: z3  ! OK\n complex(dt), target       :: z4  ! OK\n type(c_ptr) :: ptr"}, {"sha": "aaaee978adc8f8ace59a991d2038d9f857c1fb3a", "filename": "gcc/testsuite/gfortran.dg/c_kind_tests_2.f03", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2be517627af141485812051da28eb6bf510f87b4/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_kind_tests_2.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2be517627af141485812051da28eb6bf510f87b4/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_kind_tests_2.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_kind_tests_2.f03?ref=2be517627af141485812051da28eb6bf510f87b4", "patch": "@@ -4,11 +4,11 @@ module c_kind_tests_2\n \n   integer, parameter :: myF = c_float\n   real(myF), bind(c) :: myCFloat\n-  integer(myF), bind(c) :: myCInt       ! { dg-error \"is for type REAL\" }\n-  integer(c_double), bind(c) :: myCInt2 ! { dg-error \"is for type REAL\" }\n+  integer(myF), bind(c) :: myCInt       ! { dg-warning \"is for type REAL\" }\n+  integer(c_double), bind(c) :: myCInt2 ! { dg-warning \"is for type REAL\" }\n \n   integer, parameter :: myI = c_int\n-  real(myI) :: myReal             ! { dg-error \"is for type INTEGER\" }\n-  real(myI), bind(c) :: myCFloat2 ! { dg-error \"is for type INTEGER\" }\n+  real(myI) :: myReal             ! { dg-warning \"is for type INTEGER\" }\n+  real(myI), bind(c) :: myCFloat2 ! { dg-warning \"is for type INTEGER\" }\n   real(4), bind(c) :: myFloat     ! { dg-warning \"may not be a C interoperable\" }\n end module c_kind_tests_2"}, {"sha": "ea3dadac040ac998b9d4cb6400aa5c15722b005e", "filename": "gcc/testsuite/gfortran.dg/interop_params.f03", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2be517627af141485812051da28eb6bf510f87b4/gcc%2Ftestsuite%2Fgfortran.dg%2Finterop_params.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2be517627af141485812051da28eb6bf510f87b4/gcc%2Ftestsuite%2Fgfortran.dg%2Finterop_params.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterop_params.f03?ref=2be517627af141485812051da28eb6bf510f87b4", "patch": "@@ -14,7 +14,7 @@ subroutine test_0(my_f90_int) bind(c) ! { dg-warning \"may not be C interoperable\n   end subroutine test_0\n \n   subroutine test_1(my_f90_real) bind(c)\n-    real(c_int), value :: my_f90_real    ! { dg-error \"is for type INTEGER\" }\n+    real(c_int), value :: my_f90_real    ! { dg-warning \"is for type INTEGER\" }\n   end subroutine test_1\n \n   subroutine test_2(my_type) bind(c) ! { dg-error \"is not C interoperable\" }"}]}