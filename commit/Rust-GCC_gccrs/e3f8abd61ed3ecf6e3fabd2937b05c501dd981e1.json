{"sha": "e3f8abd61ed3ecf6e3fabd2937b05c501dd981e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNmOGFiZDYxZWQzZWNmNmUzZmFiZDI5MzdiMDVjNTAxZGQ5ODFlMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-11-19T22:29:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-11-19T22:29:08Z"}, "message": "re PR c++/68422 (compile-time cost of sizeof... is quadratic)\n\n\tPR c++/68422\n\n\t* cp-tree.h (PACK_EXPANSION_SIZEOF_P): New.\n\t* parser.c (cp_parser_sizeof_pack): Set it.\n\t* pt.c \t(tsubst_copy) [SIZEOF_EXPR]: Likewise.\n\t(tsubst_pack_expansion): Improve T... shortcut for expression packs.\n\nFrom-SVN: r230629", "tree": {"sha": "15bc86c5ea964297c911b3096e4a921624dfebab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15bc86c5ea964297c911b3096e4a921624dfebab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3f8abd61ed3ecf6e3fabd2937b05c501dd981e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3f8abd61ed3ecf6e3fabd2937b05c501dd981e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3f8abd61ed3ecf6e3fabd2937b05c501dd981e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3f8abd61ed3ecf6e3fabd2937b05c501dd981e1/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0766660bf94087754e89959cb4b1f27660f30afe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0766660bf94087754e89959cb4b1f27660f30afe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0766660bf94087754e89959cb4b1f27660f30afe"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "c4b76147f7a2e69c56effb7a27d340275d15ef30", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f8abd61ed3ecf6e3fabd2937b05c501dd981e1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f8abd61ed3ecf6e3fabd2937b05c501dd981e1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e3f8abd61ed3ecf6e3fabd2937b05c501dd981e1", "patch": "@@ -1,3 +1,11 @@\n+2015-11-19  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/68422\n+\t* cp-tree.h (PACK_EXPANSION_SIZEOF_P): New.\n+\t* parser.c (cp_parser_sizeof_pack): Set it.\n+\t* pt.c \t(tsubst_copy) [SIZEOF_EXPR]: Likewise.\n+\t(tsubst_pack_expansion): Improve T... shortcut for expression packs.\n+\n 2015-11-19  Ryan Burn  <contact@rnburn.com>\n \n \tPR c++/68396"}, {"sha": "14ea1194113b8f42d23b708fd0a1930933bbf161", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f8abd61ed3ecf6e3fabd2937b05c501dd981e1/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f8abd61ed3ecf6e3fabd2937b05c501dd981e1/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=e3f8abd61ed3ecf6e3fabd2937b05c501dd981e1", "patch": "@@ -98,6 +98,7 @@ c-common.h, not after.\n       DECLTYPE_FOR_INIT_CAPTURE (in DECLTYPE_TYPE)\n       CONSTRUCTOR_NO_IMPLICIT_ZERO (in CONSTRUCTOR)\n       TINFO_USED_TEMPLATE_ID (in TEMPLATE_INFO)\n+      PACK_EXPANSION_SIZEOF_P (in *_PACK_EXPANSION)\n    2: IDENTIFIER_OPNAME_P (in IDENTIFIER_NODE)\n       ICS_THIS_FLAG (in _CONV)\n       DECL_INITIALIZED_BY_CONSTANT_EXPRESSION_P (in VAR_DECL)\n@@ -3200,6 +3201,9 @@ extern void decl_shadowed_for_var_insert (tree, tree);\n /* True iff this pack expansion is within a function context.  */\n #define PACK_EXPANSION_LOCAL_P(NODE) TREE_LANG_FLAG_0 (NODE)\n \n+/* True iff this pack expansion is for sizeof....  */\n+#define PACK_EXPANSION_SIZEOF_P(NODE) TREE_LANG_FLAG_1 (NODE)\n+\n /* True iff the wildcard can match a template parameter pack.  */\n #define WILDCARD_PACK_P(NODE) TREE_LANG_FLAG_0 (NODE)\n "}, {"sha": "24ed404adafcabf3a7bba61821741cd3d7a6f00b", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f8abd61ed3ecf6e3fabd2937b05c501dd981e1/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f8abd61ed3ecf6e3fabd2937b05c501dd981e1/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=e3f8abd61ed3ecf6e3fabd2937b05c501dd981e1", "patch": "@@ -25868,6 +25868,7 @@ cp_parser_sizeof_pack (cp_parser *parser)\n   else if (TREE_CODE (expr) == CONST_DECL)\n     expr = DECL_INITIAL (expr);\n   expr = make_pack_expansion (expr);\n+  PACK_EXPANSION_SIZEOF_P (expr) = true;\n \n   if (paren)\n     cp_parser_require (parser, CPP_CLOSE_PAREN, RT_CLOSE_PAREN);"}, {"sha": "5868be2e7f257975d3c8f8fdf6783f0112518de7", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f8abd61ed3ecf6e3fabd2937b05c501dd981e1/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f8abd61ed3ecf6e3fabd2937b05c501dd981e1/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=e3f8abd61ed3ecf6e3fabd2937b05c501dd981e1", "patch": "@@ -10868,14 +10868,26 @@ tsubst_pack_expansion (tree t, tree args, tsubst_flags_t complain,\n \t}\n     }\n \n-  /* If the expansion is just T..., return the matching argument pack.  */\n+  /* If the expansion is just T..., return the matching argument pack, unless\n+     we need to call convert_from_reference on all the elements.  This is an\n+     important optimization; see c++/68422.  */\n   if (!unsubstituted_packs\n       && TREE_PURPOSE (packs) == pattern)\n     {\n       tree args = ARGUMENT_PACK_ARGS (TREE_VALUE (packs));\n+      /* Types need no adjustment, nor does sizeof..., and if we still have\n+\t some pack expansion args we won't do anything yet.  */\n       if (TREE_CODE (t) == TYPE_PACK_EXPANSION\n+\t  || PACK_EXPANSION_SIZEOF_P (t)\n \t  || pack_expansion_args_count (args))\n \treturn args;\n+      /* Also optimize expression pack expansions if we can tell that the\n+\t elements won't have reference type.  */\n+      tree type = TREE_TYPE (pattern);\n+      if (type && TREE_CODE (type) != REFERENCE_TYPE\n+\t  && !PACK_EXPANSION_P (type)\n+\t  && !WILDCARD_TYPE_P (type))\n+\treturn args;\n       /* Otherwise use the normal path so we get convert_from_reference.  */\n     }\n \n@@ -13940,7 +13952,6 @@ tsubst_copy (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n     case SIZEOF_EXPR:\n       if (PACK_EXPANSION_P (TREE_OPERAND (t, 0)))\n         {\n-\n           tree expanded, op = TREE_OPERAND (t, 0);\n \t  int len = 0;\n \n@@ -13966,6 +13977,8 @@ tsubst_copy (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \t    {\n \t      if (TREE_CODE (expanded) == TREE_VEC)\n \t\texpanded = TREE_VEC_ELT (expanded, len - 1);\n+\t      else\n+\t\tPACK_EXPANSION_SIZEOF_P (expanded) = true;\n \n \t      if (TYPE_P (expanded))\n \t\treturn cxx_sizeof_or_alignof_type (expanded, SIZEOF_EXPR, "}]}