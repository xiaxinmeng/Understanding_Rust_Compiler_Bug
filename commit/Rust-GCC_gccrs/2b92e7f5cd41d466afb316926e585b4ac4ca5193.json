{"sha": "2b92e7f5cd41d466afb316926e585b4ac4ca5193", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI5MmU3ZjVjZDQxZDQ2NmFmYjMxNjkyNmU1ODViNGFjNGNhNTE5Mw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2004-04-26T18:11:32Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2004-04-26T18:11:32Z"}, "message": "builtins.c (expand_builtin_update_setjmp_buf): New function.\n\n\t* builtins.c (expand_builtin_update_setjmp_buf): New function.\n\t(expand_builtin, case BUILT_IN_UPDATE_SETJMP_BUF): New case.\n\t* builtins.def (BUILT_IN_UPDATE_SETJMP_BUF): New code.\n\nFrom-SVN: r81198", "tree": {"sha": "351f7dbe0bf373918422a5db8d9fd9a05de845db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/351f7dbe0bf373918422a5db8d9fd9a05de845db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b92e7f5cd41d466afb316926e585b4ac4ca5193", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b92e7f5cd41d466afb316926e585b4ac4ca5193", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b92e7f5cd41d466afb316926e585b4ac4ca5193", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b92e7f5cd41d466afb316926e585b4ac4ca5193/comments", "author": null, "committer": null, "parents": [{"sha": "479864fe8016dd4c1ec19e93fd50f61b31056e42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/479864fe8016dd4c1ec19e93fd50f61b31056e42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/479864fe8016dd4c1ec19e93fd50f61b31056e42"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "c105919c3cb94698485609977e48e391debc356e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b92e7f5cd41d466afb316926e585b4ac4ca5193/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b92e7f5cd41d466afb316926e585b4ac4ca5193/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2b92e7f5cd41d466afb316926e585b4ac4ca5193", "patch": "@@ -1,3 +1,9 @@\n+2004-04-26  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* builtins.c (expand_builtin_update_setjmp_buf): New function.\n+\t(expand_builtin, case BUILT_IN_UPDATE_SETJMP_BUF): New case.\n+\t* builtins.def (BUILT_IN_UPDATE_SETJMP_BUF): New code.\n+\n 2004-04-26  Paul Brook  <paul@codesourcery.com>\n \n \t* config/arm/arm.c (arm_legitimate_index_p): Correct iwmmxt offsets."}, {"sha": "e2d393444d1a4d1cf9a357ea90e414205d405184", "filename": "gcc/builtins.c", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b92e7f5cd41d466afb316926e585b4ac4ca5193/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b92e7f5cd41d466afb316926e585b4ac4ca5193/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=2b92e7f5cd41d466afb316926e585b4ac4ca5193", "patch": "@@ -84,6 +84,7 @@ static int apply_result_size (void);\n static rtx result_vector (int, rtx);\n #endif\n static rtx expand_builtin_setjmp (tree, rtx);\n+static void expand_builtin_update_setjmp_buf (rtx);\n static void expand_builtin_prefetch (tree);\n static rtx expand_builtin_apply_args (void);\n static rtx expand_builtin_apply_args_1 (void);\n@@ -738,6 +739,40 @@ expand_builtin_longjmp (rtx buf_addr, rtx value)\n     }\n }\n \n+/* __builtin_update_setjmp_buf is passed a pointer to an array of five words\n+   (not all will be used on all machines) that was passed to __builtin_setjmp.\n+   It updates the stack pointer in that block to correspond to the current\n+   stack pointer.  */\n+\n+static void\n+expand_builtin_update_setjmp_buf (rtx buf_addr)\n+{\n+  enum machine_mode sa_mode = Pmode;\n+  rtx stack_save;\n+\n+\n+#ifdef HAVE_save_stack_nonlocal\n+  if (HAVE_save_stack_nonlocal)\n+    sa_mode = insn_data[(int) CODE_FOR_save_stack_nonlocal].operand[0].mode;\n+#endif\n+#ifdef STACK_SAVEAREA_MODE\n+  sa_mode = STACK_SAVEAREA_MODE (SAVE_NONLOCAL);\n+#endif\n+\n+  stack_save\n+    = gen_rtx_MEM (sa_mode,\n+\t\t   memory_address\n+\t\t   (sa_mode,\n+\t\t    plus_constant (buf_addr, 2 * GET_MODE_SIZE (Pmode))));\n+\n+#ifdef HAVE_setjmp\n+  if (HAVE_setjmp)\n+    emit_insn (gen_setjmp ());\n+#endif\n+\n+  emit_stack_save (SAVE_NONLOCAL, &stack_save, NULL_RTX);\n+}\n+\n /* Expand a call to __builtin_prefetch.  For a target that does not support\n    data prefetch, evaluate the memory address argument in case it has side\n    effects.  */\n@@ -5621,6 +5656,19 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n \t  return const0_rtx;\n \t}\n \n+      /* This updates the setjmp buffer that is its argument with the value\n+\t of the current stack pointer.  */\n+    case BUILT_IN_UPDATE_SETJMP_BUF:\n+      if (validate_arglist (arglist, POINTER_TYPE, VOID_TYPE))\n+\t{\n+\t  rtx buf_addr\n+\t    = expand_expr (TREE_VALUE (arglist), NULL_RTX, VOIDmode, 0);\n+\n+\t  expand_builtin_update_setjmp_buf (buf_addr);\n+\t  return const0_rtx;\n+\t}\n+      break;\n+\n     case BUILT_IN_TRAP:\n       expand_builtin_trap ();\n       return const0_rtx;"}, {"sha": "297d9eed738f2b7c6d265da4d9ee64776c8edf5e", "filename": "gcc/builtins.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b92e7f5cd41d466afb316926e585b4ac4ca5193/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b92e7f5cd41d466afb316926e585b4ac4ca5193/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=2b92e7f5cd41d466afb316926e585b4ac4ca5193", "patch": "@@ -598,6 +598,7 @@ DEF_EXT_LIB_BUILTIN    (BUILT_IN_STRFMON, \"strfmon\", BT_FN_SSIZE_STRING_SIZE_CON\n DEF_LIB_BUILTIN        (BUILT_IN_STRFTIME, \"strftime\", BT_FN_SIZE_STRING_SIZE_CONST_STRING_CONST_PTR, ATTR_FORMAT_STRFTIME_3_0)\n DEF_GCC_BUILTIN        (BUILT_IN_TRAP, \"trap\", BT_FN_VOID, ATTR_NORETURN_NOTHROW_LIST)\n DEF_GCC_BUILTIN        (BUILT_IN_UNWIND_INIT, \"unwind_init\", BT_FN_VOID, ATTR_NULL)\n+DEF_GCC_BUILTIN        (BUILT_IN_UPDATE_SETJMP_BUF, \"update_setjmp_buf\", BT_FN_VOID_PTR_INT, ATTR_NULL)\n DEF_GCC_BUILTIN        (BUILT_IN_VA_COPY, \"va_copy\", BT_FN_VOID_VALIST_REF_VALIST_ARG, ATTR_NULL)\n DEF_GCC_BUILTIN        (BUILT_IN_VA_END, \"va_end\", BT_FN_VOID_VALIST_REF, ATTR_NULL)\n DEF_GCC_BUILTIN        (BUILT_IN_VA_START, \"va_start\", BT_FN_VOID_VALIST_REF_VAR, ATTR_NULL)"}]}