{"sha": "ffd5f2761323eea74743302bfdbff644eceae83b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZkNWYyNzYxMzIzZWVhNzQ3NDMzMDJiZmRiZmY2NDRlY2VhZTgzYg==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2007-05-20T00:45:58Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2007-05-20T00:45:58Z"}, "message": "re PR middle-end/7651 (Define -Wextra strictly in terms of other warning flags)\n\n2006-05-20  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n\n\tPR middle-end/7651\n\t* doc/invoke.texi (Wreturn-type): Complete description.\n\t(Wextra): Delete item about return-type warning.\n\t* c-decl.c: Delete redundant Wextra warning.\n\ntestsuite/\n\t* gcc.dg/20030906-1.c: Replace Wextra with Wreturn-type.\n\t* gcc.dg/20030906-2.c: Likewise.\n\t* objc.dg/method-17.m: Add -Wreturn-type.\n\t* obj-c++.dg/method-21.mm: Likewise.\n\nFrom-SVN: r124866", "tree": {"sha": "bbcc1e2ae00d84751fb6d9e0d94ad59c5dd5ae75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbcc1e2ae00d84751fb6d9e0d94ad59c5dd5ae75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffd5f2761323eea74743302bfdbff644eceae83b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffd5f2761323eea74743302bfdbff644eceae83b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffd5f2761323eea74743302bfdbff644eceae83b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffd5f2761323eea74743302bfdbff644eceae83b/comments", "author": null, "committer": null, "parents": [{"sha": "05ce201275137ae82ced2edc32c43acf9fea37d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05ce201275137ae82ced2edc32c43acf9fea37d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05ce201275137ae82ced2edc32c43acf9fea37d7"}], "stats": {"total": 72, "additions": 34, "deletions": 38}, "files": [{"sha": "d92211944a283381918727b083f73af95be567cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffd5f2761323eea74743302bfdbff644eceae83b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffd5f2761323eea74743302bfdbff644eceae83b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ffd5f2761323eea74743302bfdbff644eceae83b", "patch": "@@ -1,3 +1,10 @@\n+2006-05-20  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\tPR middle-end/7651\n+\t* doc/invoke.texi (Wreturn-type): Complete description.\n+\t(Wextra): Delete item about return-type warning.\n+\t* c-decl.c: Delete redundant Wextra warning.\n+\t\n 2006-05-20  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/31585"}, {"sha": "1f8943f05a7bb8023d2fe554b1199a8fdf20c965", "filename": "gcc/c-decl.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffd5f2761323eea74743302bfdbff644eceae83b/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffd5f2761323eea74743302bfdbff644eceae83b/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=ffd5f2761323eea74743302bfdbff644eceae83b", "patch": "@@ -6788,13 +6788,6 @@ finish_function (void)\n       TREE_NO_WARNING (fndecl) = 1;\n     }\n \n-  /* With just -Wextra, complain only if function returns both with\n-     and without a value.  */\n-  if (extra_warnings\n-      && current_function_returns_value\n-      && current_function_returns_null)\n-    warning (OPT_Wextra, \"this function may return with or without a value\");\n-\n   /* Store the end of the function, so that we get good line number\n      info for the epilogue.  */\n   cfun->function_end_locus = input_location;"}, {"sha": "7be81671b1339c43b8c1f394ca2161442e4b881a", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 19, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffd5f2761323eea74743302bfdbff644eceae83b/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffd5f2761323eea74743302bfdbff644eceae83b/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=ffd5f2761323eea74743302bfdbff644eceae83b", "patch": "@@ -2807,9 +2807,13 @@ This warning is enabled by @option{-Wall} for C and C++.\n \n @item -Wreturn-type\n @opindex Wreturn-type\n-Warn whenever a function is defined with a return-type that defaults to\n-@code{int}.  Also warn about any @code{return} statement with no\n-return-value in a function whose return-type is not @code{void}.\n+@opindex Wno-return-type\n+Warn whenever a function is defined with a return-type that defaults\n+to @code{int}.  Also warn about any @code{return} statement with no\n+return-value in a function whose return-type is not @code{void}\n+(falling off the end of the function body is considered returning\n+without a value), and about a @code{return} statement with a\n+expression in a function whose return-type is @code{void}.\n \n Also warn if the return type of a function has a type qualifier\n such as @code{const}.  For ISO C such a type qualifier has no effect,\n@@ -3129,22 +3133,6 @@ supported, but the newer name is more descriptive.)  Print extra warning\n messages for these events:\n \n @itemize @bullet\n-@item\n-A function can return either with or without a value.  (Falling\n-off the end of the function body is considered returning without\n-a value.)  For example, this function would evoke such a\n-warning:\n-\n-@smallexample\n-@group\n-foo (a)\n-@{\n-  if (a > 0)\n-    return a;\n-@}\n-@end group\n-@end smallexample\n-\n @item\n An unsigned value is compared against zero with @samp{<} or @samp{>=}.\n "}, {"sha": "20d58c7818efef5976524231c855fb0bcd16c124", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffd5f2761323eea74743302bfdbff644eceae83b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffd5f2761323eea74743302bfdbff644eceae83b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ffd5f2761323eea74743302bfdbff644eceae83b", "patch": "@@ -1,3 +1,11 @@\n+2006-05-20  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\tPR middle-end/7651\n+\t* gcc.dg/20030906-1.c: Replace Wextra with Wreturn-type.\n+\t* gcc.dg/20030906-2.c: Likewise.\n+\t* objc.dg/method-17.m: Add -Wreturn-type.\n+\t* obj-c++.dg/method-21.mm: Likewise.\n+\t\n 2006-05-20  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/31585"}, {"sha": "c416f55ee75bbcde27f58295ae069b4ef0a94e9b", "filename": "gcc/testsuite/gcc.dg/20030906-1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffd5f2761323eea74743302bfdbff644eceae83b/gcc%2Ftestsuite%2Fgcc.dg%2F20030906-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffd5f2761323eea74743302bfdbff644eceae83b/gcc%2Ftestsuite%2Fgcc.dg%2F20030906-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20030906-1.c?ref=ffd5f2761323eea74743302bfdbff644eceae83b", "patch": "@@ -2,7 +2,7 @@\n    Copyright (C) 2003 Free Software Foundation Inc.  */\n \n /* { dg-do compile } */\n-/* { dg-options \"-O -finline-functions -Wextra\" } */\n+/* { dg-options \"-O -finline-functions -Wreturn-type\" } */\n \n extern int i;\n extern int foo (void);\n@@ -12,10 +12,10 @@ int foo (void)\n {\n   if( i ) return 0;\n   else    return 1;\n-}\t\t/* { dg-bogus \"may return with or without a value\" } */\n+}\n \n int bar (void)\n {\n-  if( i ) return;\n+  if( i ) return; /* { dg-warning \"'return' with no value, in function returning non-void\" } */\n   else    return 1;\n-}\t\t/* { dg-warning \"may return with or without a value\" } */\n+}\t\t"}, {"sha": "1191133e6a06d9563d5e8f7dc2d09134f5725195", "filename": "gcc/testsuite/gcc.dg/20030906-2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffd5f2761323eea74743302bfdbff644eceae83b/gcc%2Ftestsuite%2Fgcc.dg%2F20030906-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffd5f2761323eea74743302bfdbff644eceae83b/gcc%2Ftestsuite%2Fgcc.dg%2F20030906-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20030906-2.c?ref=ffd5f2761323eea74743302bfdbff644eceae83b", "patch": "@@ -2,17 +2,17 @@\n    Copyright (C) 2003 Free Software Foundation Inc.  */\n \n /* { dg-do compile } */\n-/* { dg-options \"-O -finline-functions -Wextra\" } */\n+/* { dg-options \"-O -finline-functions -Wreturn-type\" } */\n \n extern int i;\n extern int foo (void);\n extern int bar (void);\n \n int foo (void)\n {\n-  if( i ) return;\n+  if( i ) return; /* { dg-warning \"'return' with no value, in function returning non-void\" } */\n   else    return 1;\n-}\t\t/* { dg-warning \"may return with or without a value\" } */\n+}\n \n int bar (void)\n {"}, {"sha": "0c8051c2cc14ea325b0b9a46b9fba69609cd0978", "filename": "gcc/testsuite/obj-c++.dg/method-21.mm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffd5f2761323eea74743302bfdbff644eceae83b/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-21.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffd5f2761323eea74743302bfdbff644eceae83b/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-21.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-21.mm?ref=ffd5f2761323eea74743302bfdbff644eceae83b", "patch": "@@ -1,6 +1,6 @@\n /* Test for spurious \"may or may not return a value\" warnings.  */\n /* { dg-do compile } */\n-/* { dg-options \"-Wextra\" } */\n+/* { dg-options \"-Wreturn-type -Wextra\" } */\n \n #include <objc/Object.h>\n "}, {"sha": "501c2decf958a08b5c88b822551f7de288e5d302", "filename": "gcc/testsuite/objc.dg/method-17.m", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffd5f2761323eea74743302bfdbff644eceae83b/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-17.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffd5f2761323eea74743302bfdbff644eceae83b/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-17.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-17.m?ref=ffd5f2761323eea74743302bfdbff644eceae83b", "patch": "@@ -1,7 +1,7 @@\n /* Test for spurious \"may or may not return a value\" warnings.  */\n \n /* { dg-do compile } */\n-/* { dg-options \"-Wextra\" } */\n+/* { dg-options \"-Wreturn-type -Wextra\" } */\n \n #include <objc/Object.h>\n \n@@ -16,11 +16,11 @@ @implementation Foo\n - (id) meth1 {\n   if (bar)\n     return [Object new];\n-  return;\n-} /* { dg-warning \"this function may return with or without a value\" } */\n+  return; /* { dg-warning \"'return' with no value, in function returning non-void\" } */\n+} \n - (void) meth2 {\n   if (!bar)\n     return;\n   bar = 0;\n-} /* { dg-bogus \"this function may return with or without a value\" } */\n+} /* { dg-bogus \"'return' with no value, in function returning non-void\" } */\n @end"}]}