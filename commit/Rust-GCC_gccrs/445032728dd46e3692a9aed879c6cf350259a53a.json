{"sha": "445032728dd46e3692a9aed879c6cf350259a53a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ1MDMyNzI4ZGQ0NmUzNjkyYTlhZWQ4NzljNmNmMzUwMjU5YTUzYQ==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-12-01T14:18:34Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-12-17T10:49:24Z"}, "message": "[Ada] Reduce scopes of local variables for case and if statements\n\ngcc/ada/\n\n\t* sem_ch5.adb (Analyze_Case_Statement): Change local variable\n\tExp to constant; remove unreferenced Last_Choice variable;\n\treduce scope of other variables.\n\t(Analyze_If_Statement): Reduce scope of a local variable; add\n\tcomment.", "tree": {"sha": "dd8295c90c06c0e12fac6921babc3b50e5690e84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd8295c90c06c0e12fac6921babc3b50e5690e84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/445032728dd46e3692a9aed879c6cf350259a53a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/445032728dd46e3692a9aed879c6cf350259a53a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/445032728dd46e3692a9aed879c6cf350259a53a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/445032728dd46e3692a9aed879c6cf350259a53a/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7948214670c90dfdb656b7c71779745776f74f41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7948214670c90dfdb656b7c71779745776f74f41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7948214670c90dfdb656b7c71779745776f74f41"}], "stats": {"total": 33, "additions": 17, "deletions": 16}, "files": [{"sha": "380d6017414d33b1e2be45bb91bc47138ec48b62", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/445032728dd46e3692a9aed879c6cf350259a53a/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/445032728dd46e3692a9aed879c6cf350259a53a/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=445032728dd46e3692a9aed879c6cf350259a53a", "patch": "@@ -1389,26 +1389,14 @@ package body Sem_Ch5 is\n    ----------------------------\n \n    procedure Analyze_Case_Statement (N : Node_Id) is\n-      Exp            : Node_Id;\n-      Exp_Type       : Entity_Id;\n-      Exp_Btype      : Entity_Id;\n-      Last_Choice    : Nat;\n-\n-      Others_Present : Boolean;\n-      --  Indicates if Others was present\n-\n-      pragma Warnings (Off, Last_Choice);\n-      --  Don't care about assigned value\n+      Exp : constant Node_Id := Expression (N);\n \n       Statements_Analyzed : Boolean := False;\n       --  Set True if at least some statement sequences get analyzed. If False\n       --  on exit, means we had a serious error that prevented full analysis of\n       --  the case statement, and as a result it is not a good idea to output\n       --  warning messages about unreachable code.\n \n-      Save_Unblocked_Exit_Count : constant Nat := Unblocked_Exit_Count;\n-      --  Recursively save value of this global, will be restored on exit\n-\n       procedure Non_Static_Choice_Error (Choice : Node_Id);\n       --  Error routine invoked by the generic instantiation below when the\n       --  case statement has a non static choice.\n@@ -1492,11 +1480,21 @@ package body Sem_Ch5 is\n          Analyze_Statements (Statements (Alternative));\n       end Process_Statements;\n \n+      --  Local variables\n+\n+      Exp_Type  : Entity_Id;\n+      Exp_Btype : Entity_Id;\n+\n+      Others_Present : Boolean;\n+      --  Indicates if Others was present\n+\n+      Save_Unblocked_Exit_Count : constant Nat := Unblocked_Exit_Count;\n+      --  Recursively save value of this global, will be restored on exit\n+\n    --  Start of processing for Analyze_Case_Statement\n \n    begin\n       Unblocked_Exit_Count := 0;\n-      Exp := Expression (N);\n       Analyze (Exp);\n \n       --  The expression must be of any discrete type. In rare cases, the\n@@ -1775,8 +1773,6 @@ package body Sem_Ch5 is\n    --  on which they depend will not be available at the freeze point.\n \n    procedure Analyze_If_Statement (N : Node_Id) is\n-      E : Node_Id;\n-\n       Save_Unblocked_Exit_Count : constant Nat := Unblocked_Exit_Count;\n       --  Recursively save value of this global, will be restored on exit\n \n@@ -1841,6 +1837,11 @@ package body Sem_Ch5 is\n          end if;\n       end Analyze_Cond_Then;\n \n+      --  Local variables\n+\n+      E : Node_Id;\n+      --  For iterating over elsif parts\n+\n    --  Start of processing for Analyze_If_Statement\n \n    begin"}]}