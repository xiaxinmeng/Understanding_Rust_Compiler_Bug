{"sha": "f64eb636677d714781b4543f111b1c9239328db6", "node_id": "C_kwDOANBUbNoAKGY2NGViNjM2Njc3ZDcxNDc4MWI0NTQzZjExMWIxYzkyMzkzMjhkYjY", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-07-28T10:42:14Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-07-28T10:43:13Z"}, "message": "gimple, internal-fn: Add IFN_TRAP and use it for __builtin_unreachable [PR106099]\n\n__builtin_unreachable and __ubsan_handle_builtin_unreachable don't\nuse vops, they are marked const/leaf/noreturn/nothrow/cold.\nBut __builtin_trap uses vops, isn't const, just leaf/noreturn/nothrow/cold.\nThis is I believe so that when users explicitly use __builtin_trap in their\nsources they get stores visible at the trap side.\n-fsanitize=unreachable -fsanitize-undefined-trap-on-error used to transform\n__builtin_unreachable to __builtin_trap even in the past, but the sanopt pass\nhas TODO_update_ssa, so it worked fine.\n\nNow that gimple_build_builtin_unreachable can build a __builtin_trap call\nright away, we can run into problems that whenever we need it we would need\nto either manually or through TODO_update* ensure the vops being updated.\n\nThough, as it is originally __builtin_unreachable which is just implemented\nas trap, I think for this case it is fine to avoid vops.  For this the\npatch introduces IFN_TRAP, which has ECF_* flags like __builtin_unreachable\nand is expanded as __builtin_trap.\n\n2022-07-28  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/106099\n\t* internal-fn.def (TRAP): New internal fn.\n\t* internal-fn.h (expand_TRAP): Declare.\n\t* internal-fn.cc (expand_TRAP): Define.\n\t* gimple.cc (gimple_build_builtin_unreachable): For BUILT_IN_TRAP,\n\tuse internal fn rather than builtin.\n\n\t* gcc.dg/ubsan/pr106099.c: New test.", "tree": {"sha": "b365d582214c402540c809b66b405d97cdd05d28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b365d582214c402540c809b66b405d97cdd05d28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f64eb636677d714781b4543f111b1c9239328db6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f64eb636677d714781b4543f111b1c9239328db6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f64eb636677d714781b4543f111b1c9239328db6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f64eb636677d714781b4543f111b1c9239328db6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0652087375e7813f06140f1bb5e18375f45d28ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0652087375e7813f06140f1bb5e18375f45d28ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0652087375e7813f06140f1bb5e18375f45d28ff"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "cd5ad0c718ba91f7d992b57e266fd7b76b838001", "filename": "gcc/gimple.cc", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f64eb636677d714781b4543f111b1c9239328db6/gcc%2Fgimple.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f64eb636677d714781b4543f111b1c9239328db6/gcc%2Fgimple.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.cc?ref=f64eb636677d714781b4543f111b1c9239328db6", "patch": "@@ -430,7 +430,16 @@ gimple_build_builtin_unreachable (location_t loc)\n {\n   tree data = NULL_TREE;\n   tree fn = sanitize_unreachable_fn (&data, loc);\n-  gcall *g = gimple_build_call (fn, data != NULL_TREE, data);\n+  gcall *g;\n+  if (DECL_FUNCTION_CODE (fn) != BUILT_IN_TRAP)\n+    g = gimple_build_call (fn, data != NULL_TREE, data);\n+  else\n+    {\n+      /* Instead of __builtin_trap use .TRAP, so that it doesn't\n+\t need vops.  */\n+      gcc_checking_assert (data == NULL_TREE);\n+      g = gimple_build_call_internal (IFN_TRAP, 0);\n+    }\n   gimple_set_location (g, loc);\n   return g;\n }"}, {"sha": "aa7c482e968fa5eaacb6d4d73c45afb1f421e948", "filename": "gcc/internal-fn.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f64eb636677d714781b4543f111b1c9239328db6/gcc%2Finternal-fn.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f64eb636677d714781b4543f111b1c9239328db6/gcc%2Finternal-fn.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finternal-fn.cc?ref=f64eb636677d714781b4543f111b1c9239328db6", "patch": "@@ -4494,3 +4494,9 @@ expand_SPACESHIP (internal_fn, gcall *stmt)\n   if (!rtx_equal_p (target, ops[0].value))\n     emit_move_insn (target, ops[0].value);\n }\n+\n+void\n+expand_TRAP (internal_fn, gcall *)\n+{\n+  expand_builtin_trap ();\n+}"}, {"sha": "7bf661ca376e3dbe5fbc3dec69e46206de9859e4", "filename": "gcc/internal-fn.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f64eb636677d714781b4543f111b1c9239328db6/gcc%2Finternal-fn.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f64eb636677d714781b4543f111b1c9239328db6/gcc%2Finternal-fn.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finternal-fn.def?ref=f64eb636677d714781b4543f111b1c9239328db6", "patch": "@@ -456,6 +456,10 @@ DEF_INTERNAL_FN (SHUFFLEVECTOR, ECF_CONST | ECF_LEAF | ECF_NOTHROW, NULL)\n /* <=> optimization.  */\n DEF_INTERNAL_FN (SPACESHIP, ECF_CONST | ECF_LEAF | ECF_NOTHROW, NULL)\n \n+/* __builtin_trap created from/for __builtin_unreachable.  */\n+DEF_INTERNAL_FN (TRAP, ECF_CONST | ECF_LEAF | ECF_NORETURN\n+\t\t       | ECF_NOTHROW | ECF_COLD, NULL)\n+\n #undef DEF_INTERNAL_INT_FN\n #undef DEF_INTERNAL_FLT_FN\n #undef DEF_INTERNAL_FLT_FLOATN_FN"}, {"sha": "c4c94f80d515c97b835640f8fde7892f4053ac57", "filename": "gcc/internal-fn.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f64eb636677d714781b4543f111b1c9239328db6/gcc%2Finternal-fn.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f64eb636677d714781b4543f111b1c9239328db6/gcc%2Finternal-fn.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finternal-fn.h?ref=f64eb636677d714781b4543f111b1c9239328db6", "patch": "@@ -242,6 +242,7 @@ extern void expand_internal_call (internal_fn, gcall *);\n extern void expand_PHI (internal_fn, gcall *);\n extern void expand_SHUFFLEVECTOR (internal_fn, gcall *);\n extern void expand_SPACESHIP (internal_fn, gcall *);\n+extern void expand_TRAP (internal_fn, gcall *);\n \n extern bool vectorized_internal_fn_supported_p (internal_fn, tree);\n "}, {"sha": "e3f17b34681ad0fa19f64f1bc47543b35abfe166", "filename": "gcc/testsuite/gcc.dg/ubsan/pr106099.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f64eb636677d714781b4543f111b1c9239328db6/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Fpr106099.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f64eb636677d714781b4543f111b1c9239328db6/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Fpr106099.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Fpr106099.c?ref=f64eb636677d714781b4543f111b1c9239328db6", "patch": "@@ -0,0 +1,10 @@\n+/* PR tree-optimization/106099 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fsanitize=unreachable -fsanitize-undefined-trap-on-error -fno-tree-ccp -fno-tree-dominator-opts\" } */\n+\n+void\n+foo (void)\n+{\n+  for (unsigned i = 0; i == 0; i++)\n+    ;\n+}"}]}