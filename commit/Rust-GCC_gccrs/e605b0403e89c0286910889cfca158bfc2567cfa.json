{"sha": "e605b0403e89c0286910889cfca158bfc2567cfa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTYwNWIwNDAzZTg5YzAyODY5MTA4ODljZmNhMTU4YmZjMjU2N2NmYQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@wolery.cumb.org", "date": "2000-06-21T23:08:17Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-06-21T23:08:17Z"}, "message": "cppfiles.c (cpp_make_system_header): New function.\n\n\t* cppfiles.c (cpp_make_system_header): New function.\n\t* cpplib.h: Prototype it.\n\t* cpplib.c (do_line, do_pragma_system_header): Use it.\n\t* fix-header.c (read_scan_file): Use it.\n\n\t* fix-header.c (check_macro_names): Cast second arg of\n\tcpp_defined to const unsigned char *.\n\t(read_scan_file): Make getchar_call const unsigned char.\n\nFrom-SVN: r34641", "tree": {"sha": "6e4efa3389b627b15921c495d03be0193553df87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e4efa3389b627b15921c495d03be0193553df87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e605b0403e89c0286910889cfca158bfc2567cfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e605b0403e89c0286910889cfca158bfc2567cfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e605b0403e89c0286910889cfca158bfc2567cfa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e605b0403e89c0286910889cfca158bfc2567cfa/comments", "author": null, "committer": null, "parents": [{"sha": "229e1e4c03db3866f442610e2694dc6f97335ca7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/229e1e4c03db3866f442610e2694dc6f97335ca7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/229e1e4c03db3866f442610e2694dc6f97335ca7"}], "stats": {"total": 46, "additions": 38, "deletions": 8}, "files": [{"sha": "f5099262a9c3d4d8ffcf08a799c1398e2432b802", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e605b0403e89c0286910889cfca158bfc2567cfa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e605b0403e89c0286910889cfca158bfc2567cfa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e605b0403e89c0286910889cfca158bfc2567cfa", "patch": "@@ -1,3 +1,14 @@\n+2000-06-21  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* cppfiles.c (cpp_make_system_header): New function.\n+\t* cpplib.h: Prototype it.\n+\t* cpplib.c (do_line, do_pragma_system_header): Use it.\n+\t* fix-header.c (read_scan_file): Use it.\n+\n+\t* fix-header.c (check_macro_names): Cast second arg of\n+\tcpp_defined to const unsigned char *.\n+\t(read_scan_file): Make getchar_call const unsigned char.\n+\n 2000-06-21  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* cppfiles.c: Include splay-tree.h, not hashtab.h."}, {"sha": "1598a3ee88351a983aa9a6230ec6a452f7f08e00", "filename": "gcc/cppfiles.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e605b0403e89c0286910889cfca158bfc2567cfa/gcc%2Fcppfiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e605b0403e89c0286910889cfca158bfc2567cfa/gcc%2Fcppfiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppfiles.c?ref=e605b0403e89c0286910889cfca158bfc2567cfa", "patch": "@@ -308,6 +308,23 @@ _cpp_fake_include (pfile, fname)\n   return (const char *)name;\n }\n \n+/* Not everyone who wants to set system-header-ness on a buffer can\n+   see the details of struct include_file.  This is an exported interface\n+   because fix-header needs it.  */\n+void\n+cpp_make_system_header (pfile, pbuf, flag)\n+     cpp_reader *pfile;\n+     cpp_buffer *pbuf;\n+     int flag;\n+{\n+  if (flag < 0 || flag > 2)\n+    cpp_ice (pfile, \"cpp_make_system_header: bad flag %d\\n\", flag);\n+  else if (!pbuf->inc)\n+    cpp_ice (pfile, \"cpp_make_system_header called on non-file buffer\");\n+  else\n+    pbuf->inc->sysp = flag;\n+}\n+\n #define PRINT_THIS_DEP(p, b) (CPP_PRINT_DEPS(p) > (b||p->system_include_depth))\n void\n _cpp_execute_include (pfile, f, len, no_reinclude, search_start)"}, {"sha": "93798fac36faaf607096a8dbd8d9732d326199ba", "filename": "gcc/cpplib.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e605b0403e89c0286910889cfca158bfc2567cfa/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e605b0403e89c0286910889cfca158bfc2567cfa/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=e605b0403e89c0286910889cfca158bfc2567cfa", "patch": "@@ -603,23 +603,23 @@ do_line (pfile)\n \t  if (action_number == 1)\n \t    {\n \t      pfile->buffer_stack_depth++;\n-\t      ip->inc->sysp = 0;\n+\t      cpp_make_system_header (pfile, ip, 0);\n \t      read_line_number (pfile, &action_number);\n \t    }\n \t  else if (action_number == 2)\n \t    {\n \t      pfile->buffer_stack_depth--;\n-\t      ip->inc->sysp = 0;\n+\t      cpp_make_system_header (pfile, ip, 0);\n \t      read_line_number (pfile, &action_number);\n \t    }\n \t  if (action_number == 3)\n \t    {\n-\t      ip->inc->sysp = 1;\n+\t      cpp_make_system_header (pfile, ip, 1);\n \t      read_line_number (pfile, &action_number);\n \t    }\n \t  if (action_number == 4)\n \t    {\n-\t      ip->inc->sysp = 2;\n+\t      cpp_make_system_header (pfile, ip, 2);\n \t      read_line_number (pfile, &action_number);\n \t    }\n \t}\n@@ -978,7 +978,7 @@ do_pragma_system_header (pfile)\n   if (CPP_PREV_BUFFER (ip) == NULL)\n     cpp_warning (pfile, \"#pragma system_header outside include file\");\n   else\n-    ip->inc->sysp = 1;\n+    cpp_make_system_header (pfile, ip, 1);\n \n   return 1;\n }"}, {"sha": "88efdf789bb896da7bc3ec7a816c4cbc90083776", "filename": "gcc/cpplib.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e605b0403e89c0286910889cfca158bfc2567cfa/gcc%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e605b0403e89c0286910889cfca158bfc2567cfa/gcc%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.h?ref=e605b0403e89c0286910889cfca158bfc2567cfa", "patch": "@@ -714,6 +714,8 @@ extern cpp_hashnode *cpp_lookup\t\tPARAMS ((cpp_reader *,\n /* In cppfiles.c */\n extern int cpp_included\t\t\tPARAMS ((cpp_reader *, const char *));\n extern int cpp_read_file\t\tPARAMS ((cpp_reader *, const char *));\n+extern void cpp_make_system_header\tPARAMS ((cpp_reader *,\n+\t\t\t\t\t\t cpp_buffer *, int));\n \n #ifdef __cplusplus\n }"}, {"sha": "473ef7aee99911f984f135daeadccf8eb8a4de50", "filename": "gcc/fix-header.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e605b0403e89c0286910889cfca158bfc2567cfa/gcc%2Ffix-header.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e605b0403e89c0286910889cfca158bfc2567cfa/gcc%2Ffix-header.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffix-header.c?ref=e605b0403e89c0286910889cfca158bfc2567cfa", "patch": "@@ -606,7 +606,7 @@ check_macro_names (pfile, names)\n   while (*names)\n     {\n       len = strlen (names);\n-      if (cpp_defined (pfile, names, len))\n+      if (cpp_defined (pfile, (const unsigned char *)names, len))\n \trecognized_macro (names);\n       names += len + 1;\n     }\n@@ -640,7 +640,7 @@ read_scan_file (in_fname, argc, argv)\n     exit (FATAL_EXIT_CODE);\n \n   /* We are scanning a system header, so mark it as such.  */\n-  CPP_BUFFER (&scan_in)->system_header_p = 1;\n+  cpp_make_system_header (&scan_in, CPP_BUFFER (&scan_in), 1);\n \n   scan_decls (&scan_in, argc, argv);\n   for (cur_symbols = &symbol_table[0]; cur_symbols->names; cur_symbols++)\n@@ -657,7 +657,7 @@ read_scan_file (in_fname, argc, argv)\n   if (special_file_handling == stdio_h\n       && (fn = lookup_std_proto (\"_filbuf\", 7)) != NULL)\n     {\n-      static char getchar_call[] = \"getchar();\";\n+      static const unsigned char getchar_call[] = \"getchar();\";\n       int old_written = CPP_WRITTEN (&scan_in);\n       int seen_filbuf = 0;\n       cpp_buffer *buf = CPP_BUFFER (&scan_in);"}]}