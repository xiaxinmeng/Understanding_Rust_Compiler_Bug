{"sha": "4464b9772d6f2fe927a47f3a3e120ce5938fbfdf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ2NGI5NzcyZDZmMmZlOTI3YTQ3ZjNhM2UxMjBjZTU5MzhmYmZkZg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-11-13T09:05:55Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-11-13T09:05:55Z"}, "message": "GCOV: introduce vector for function_info::counts.\n\n2017-11-13  Martin Liska  <mliska@suse.cz>\n\n\t* gcov.c (function_info::function_info): Remove num_counts\n\tand add vector<gcov_type>.\n\t(function_info::~function_info): Use the vector.\n\t(process_file): Likewise.\n\t(read_graph_file): Likewise.\n\t(read_count_file): Likewise.\n\t(solve_flow_graph): Likewise.\n\nFrom-SVN: r254674", "tree": {"sha": "f876ea768acf1c06dad716e919c26a23c9366774", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f876ea768acf1c06dad716e919c26a23c9366774"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4464b9772d6f2fe927a47f3a3e120ce5938fbfdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4464b9772d6f2fe927a47f3a3e120ce5938fbfdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4464b9772d6f2fe927a47f3a3e120ce5938fbfdf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4464b9772d6f2fe927a47f3a3e120ce5938fbfdf/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1e81a283a22723f943643002376fc73427001ba0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e81a283a22723f943643002376fc73427001ba0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e81a283a22723f943643002376fc73427001ba0"}], "stats": {"total": 31, "additions": 18, "deletions": 13}, "files": [{"sha": "d8790a3732fb0fa6830466848ca0fb331857f2da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4464b9772d6f2fe927a47f3a3e120ce5938fbfdf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4464b9772d6f2fe927a47f3a3e120ce5938fbfdf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4464b9772d6f2fe927a47f3a3e120ce5938fbfdf", "patch": "@@ -1,3 +1,13 @@\n+2017-11-13  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcov.c (function_info::function_info): Remove num_counts\n+\tand add vector<gcov_type>.\n+\t(function_info::~function_info): Use the vector.\n+\t(process_file): Likewise.\n+\t(read_graph_file): Likewise.\n+\t(read_count_file): Likewise.\n+\t(solve_flow_graph): Likewise.\n+\n 2017-11-13  Martin Liska  <mliska@suse.cz>\n \n \t* gcov.c (function_info::is_artificial): New function."}, {"sha": "fa1ada6d37f67efa9ac025ffeb055634ecaa46e8", "filename": "gcc/gcov.c", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4464b9772d6f2fe927a47f3a3e120ce5938fbfdf/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4464b9772d6f2fe927a47f3a3e120ce5938fbfdf/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=4464b9772d6f2fe927a47f3a3e120ce5938fbfdf", "patch": "@@ -265,8 +265,7 @@ typedef struct function_info\n   unsigned blocks_executed;\n \n   /* Raw arc coverage counts.  */\n-  gcov_type *counts;\n-  unsigned num_counts;\n+  vector<gcov_type> counts;\n \n   /* First line number.  */\n   unsigned start_line;\n@@ -562,8 +561,8 @@ extern int main (int, char **);\n function_info::function_info (): name (NULL), demangled_name (NULL),\n   ident (0), lineno_checksum (0), cfg_checksum (0), has_catch (0),\n   artificial (0), is_group (0),\n-  blocks (), blocks_executed (0), counts (NULL), num_counts (0),\n-  start_line (0), start_column (0), end_line (0), src (0), lines (), next (NULL)\n+  blocks (), blocks_executed (0), counts (),\n+  start_line (0), start_column (), end_line (0), src (0), lines (), next (NULL)\n {\n }\n \n@@ -579,7 +578,6 @@ function_info::~function_info ()\n \t  free (arc);\n \t}\n     }\n-  free (counts);\n   if (flag_demangled_names && demangled_name != name)\n     free (demangled_name);\n   free (name);\n@@ -1170,7 +1168,7 @@ process_file (const char *file_name)\n       function_t *fn = *it;\n       unsigned src = fn->src;\n \n-      if (fn->counts || no_data_file)\n+      if (!fn->counts.empty () || no_data_file)\n \t{\n \t  source_info *s = &sources[src];\n \t  s->functions.push_back (fn);\n@@ -1662,7 +1660,7 @@ read_graph_file (void)\n \t\t}\n \n \t      if (!arc->on_tree)\n-\t\tfn->num_counts++;\n+\t\tfn->counts.push_back (0);\n \t    }\n \n \t  if (mark_catches)\n@@ -1813,13 +1811,10 @@ read_count_file (void)\n \t}\n       else if (tag == GCOV_TAG_FOR_COUNTER (GCOV_COUNTER_ARCS) && fn)\n \t{\n-\t  if (length != GCOV_TAG_COUNTER_LENGTH (fn->num_counts))\n+\t  if (length != GCOV_TAG_COUNTER_LENGTH (fn->counts.size ()))\n \t    goto mismatch;\n \n-\t  if (!fn->counts)\n-\t    fn->counts = XCNEWVEC (gcov_type, fn->num_counts);\n-\n-\t  for (ix = 0; ix != fn->num_counts; ix++)\n+\t  for (ix = 0; ix != fn->counts.size (); ix++)\n \t    fn->counts[ix] += gcov_read_counter ();\n \t}\n       gcov_sync (base, length);\n@@ -1846,7 +1841,7 @@ solve_flow_graph (function_t *fn)\n {\n   unsigned ix;\n   arc_t *arc;\n-  gcov_type *count_ptr = fn->counts;\n+  gcov_type *count_ptr = &fn->counts.front ();\n   block_t *blk;\n   block_t *valid_blocks = NULL;    /* valid, but unpropagated blocks.  */\n   block_t *invalid_blocks = NULL;  /* invalid, but inferable blocks.  */"}]}