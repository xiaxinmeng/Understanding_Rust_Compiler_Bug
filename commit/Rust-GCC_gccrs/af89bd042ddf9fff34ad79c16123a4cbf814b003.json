{"sha": "af89bd042ddf9fff34ad79c16123a4cbf814b003", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY4OWJkMDQyZGRmOWZmZjM0YWQ3OWMxNjEyM2E0Y2JmODE0YjAwMw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2012-10-19T16:53:39Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2012-10-19T16:53:39Z"}, "message": "re PR middle-end/54945 (Too strong non-aliasing analysis?)\n\nPR54945\n\nFrom-SVN: r192617", "tree": {"sha": "fedc0eb01fed59fdb431827502037cab4085b813", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fedc0eb01fed59fdb431827502037cab4085b813"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af89bd042ddf9fff34ad79c16123a4cbf814b003", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af89bd042ddf9fff34ad79c16123a4cbf814b003", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af89bd042ddf9fff34ad79c16123a4cbf814b003", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af89bd042ddf9fff34ad79c16123a4cbf814b003/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "db2415a9a10916b530b6325c5aa6fa39cfe4f246", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db2415a9a10916b530b6325c5aa6fa39cfe4f246", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db2415a9a10916b530b6325c5aa6fa39cfe4f246"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "6e87fadae853f642349d731d5651068c7d2c6d53", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af89bd042ddf9fff34ad79c16123a4cbf814b003/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af89bd042ddf9fff34ad79c16123a4cbf814b003/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=af89bd042ddf9fff34ad79c16123a4cbf814b003", "patch": "@@ -1,3 +1,9 @@\n+2012-10-19  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR middle-end/54945\n+\t* fold-const.c (fold_sign_changed_comparison):  Punt if folding\n+\tpointer/non-pointer comparison.\n+\n 2012-10-19  Greta Yorsh  <Greta.Yorsh@arm.com>\n \n \t* doc/sourcebuild.texi (Effective-Target Keywords): Document"}, {"sha": "053b3f524c5779ef331e046de748b6a47ce17d69", "filename": "gcc/fold-const.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af89bd042ddf9fff34ad79c16123a4cbf814b003/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af89bd042ddf9fff34ad79c16123a4cbf814b003/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=af89bd042ddf9fff34ad79c16123a4cbf814b003", "patch": "@@ -6731,12 +6731,14 @@ fold_sign_changed_comparison (location_t loc, enum tree_code code, tree type,\n \t   && TREE_TYPE (TREE_OPERAND (arg1, 0)) == inner_type))\n     return NULL_TREE;\n \n-  if ((TYPE_UNSIGNED (inner_type) != TYPE_UNSIGNED (outer_type)\n-       || POINTER_TYPE_P (inner_type) != POINTER_TYPE_P (outer_type))\n+  if (TYPE_UNSIGNED (inner_type) != TYPE_UNSIGNED (outer_type)\n       && code != NE_EXPR\n       && code != EQ_EXPR)\n     return NULL_TREE;\n \n+  if (POINTER_TYPE_P (inner_type) != POINTER_TYPE_P (outer_type))\n+    return NULL_TREE;\n+\n   if (TREE_CODE (arg1) == INTEGER_CST)\n     arg1 = force_fit_type_double (inner_type, tree_to_double_int (arg1),\n \t\t\t\t  0, TREE_OVERFLOW (arg1));"}]}