{"sha": "ba45a61315a195eccfe337f87e3f03cffff8430d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE0NWE2MTMxNWExOTVlY2NmZTMzN2Y4N2UzZjAzY2ZmZmY4NDMwZA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2012-09-26T05:18:43Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2012-09-26T05:18:43Z"}, "message": "re PR target/51274 (Starting with GCC 4.5, powerpc generated different code for x != 0.)\n\ngcc/\n\tPR target/51274\n\tPR target/53087\n\t* config/rs6000/rs6000.md (ne0si): Remove unnecessary\n\tearlyclobber.  Merge with...\n\t(ne0di): ... to...\n\t(ne0_<mode>): New.\n\t(plus_ne0si): Merge with...\n\t(plus_ne0di): ... to...\n\t(plus_ne0_<mode>): New.\n\t(compare_plus_ne0si): Merge with...\n\t(compare_plus_ne0di)... to...\n\t(compare_plus_ne0_<mode>): New.\n\t(compare_plus_ne0_<mode>_1): New.\n\t(plus_ne0si_compare): Merge with...\n\t(plus_ne0di_compare)... to...\n\t(plus_ne0_<mode>_compare): New.\n\ngcc/testsuite/\n\tPR target/51274\n\tPR target/53087\n\t* gcc.target/powerpc/ppc-ne0-1.c: New.\n\nFrom-SVN: r191752", "tree": {"sha": "f8acd7f6df344c15ae9d047a7ff13562c745aa4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8acd7f6df344c15ae9d047a7ff13562c745aa4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba45a61315a195eccfe337f87e3f03cffff8430d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba45a61315a195eccfe337f87e3f03cffff8430d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba45a61315a195eccfe337f87e3f03cffff8430d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba45a61315a195eccfe337f87e3f03cffff8430d/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eecd08500a7c969be6ea1b3b4c39e4b1908bc91c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eecd08500a7c969be6ea1b3b4c39e4b1908bc91c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eecd08500a7c969be6ea1b3b4c39e4b1908bc91c"}], "stats": {"total": 281, "additions": 133, "deletions": 148}, "files": [{"sha": "9941f62612d5c225222e30c61ee23463bb434539", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba45a61315a195eccfe337f87e3f03cffff8430d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba45a61315a195eccfe337f87e3f03cffff8430d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ba45a61315a195eccfe337f87e3f03cffff8430d", "patch": "@@ -1,3 +1,22 @@\n+2012-09-25  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/51274\n+\tPR target/53087\n+\t* config/rs6000/rs6000.md (ne0si): Remove unnecessary\n+\tearlyclobber.  Merge with...\n+\t(ne0di): ... to...\n+\t(ne0_<mode>): New.\n+\t(plus_ne0si): Merge with...\n+\t(plus_ne0di): ... to...\n+\t(plus_ne0_<mode>): New.\n+\t(compare_plus_ne0si): Merge with...\n+\t(compare_plus_ne0di)... to...\n+\t(compare_plus_ne0_<mode>): New.\n+\t(compare_plus_ne0_<mode>_1): New.\n+\t(plus_ne0si_compare): Merge with...\n+\t(plus_ne0di_compare)... to...\n+\t(plus_ne0_<mode>_compare): New.\n+\n 2012-09-25  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/54089"}, {"sha": "4265cb67b0f3b82b1e38b19c4f492142bac0e4d6", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 75, "deletions": 148, "changes": 223, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba45a61315a195eccfe337f87e3f03cffff8430d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba45a61315a195eccfe337f87e3f03cffff8430d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=ba45a61315a195eccfe337f87e3f03cffff8430d", "patch": "@@ -11970,180 +11970,106 @@\n       operands[3] = operands[1];\n   })\n \n-;; Simplify (ne X (const_int 0)) on the PowerPC.  No need to on the Power,\n-;; since it nabs/sr is just as fast.\n-(define_insn \"*ne0si\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r\")\n-\t(lshiftrt:SI (neg:SI (abs:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")))\n-\t\t     (const_int 31)))\n-   (clobber (match_scratch:SI 2 \"=&r\"))]\n-  \"TARGET_32BIT && !TARGET_ISEL\"\n-  \"addic %2,%1,-1\\;subfe %0,%2,%1\"\n-  [(set_attr \"type\" \"two\")\n-   (set_attr \"length\" \"8\")])\n-\n-(define_insn \"*ne0di\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n-\t(lshiftrt:DI (neg:DI (abs:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")))\n-\t\t     (const_int 63)))\n-   (clobber (match_scratch:DI 2 \"=&r\"))]\n-  \"TARGET_64BIT\"\n+(define_insn \"*ne0_<mode>\"\n+  [(set (match_operand:P 0 \"gpc_reg_operand\" \"=r\")\n+\t(ne:P (match_operand:P 1 \"gpc_reg_operand\" \"r\")\n+\t      (const_int 0)))\n+   (clobber (match_scratch:P 2 \"=&r\"))]\n+  \"!(TARGET_32BIT && TARGET_ISEL)\"\n   \"addic %2,%1,-1\\;subfe %0,%2,%1\"\n   [(set_attr \"type\" \"two\")\n    (set_attr \"length\" \"8\")])\n \n-;; This is what (plus (ne X (const_int 0)) Y) looks like.\n-(define_insn \"*plus_ne0si\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n-\t(plus:SI (lshiftrt:SI\n-\t\t  (neg:SI (abs:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")))\n-\t\t  (const_int 31))\n-\t\t (match_operand:SI 2 \"gpc_reg_operand\" \"r\")))\n-   (clobber (match_scratch:SI 3 \"=&r\"))]\n-  \"TARGET_32BIT\"\n-  \"addic %3,%1,-1\\;addze %0,%2\"\n-  [(set_attr \"type\" \"two\")\n-   (set_attr \"length\" \"8\")])\n-\n-(define_insn \"*plus_ne0di\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n-\t(plus:DI (lshiftrt:DI\n-\t\t  (neg:DI (abs:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")))\n-\t\t  (const_int 63))\n-\t\t (match_operand:DI 2 \"gpc_reg_operand\" \"r\")))\n-   (clobber (match_scratch:DI 3 \"=&r\"))]\n-  \"TARGET_64BIT\"\n+(define_insn \"*plus_ne0_<mode>\"\n+  [(set (match_operand:P 0 \"gpc_reg_operand\" \"=r\")\n+\t(plus:P (ne:P (match_operand:P 1 \"gpc_reg_operand\" \"r\")\n+\t\t      (const_int 0))\n+\t\t(match_operand:P 2 \"gpc_reg_operand\" \"r\")))\n+   (clobber (match_scratch:P 3 \"=&r\"))]\n+  \"\"\n   \"addic %3,%1,-1\\;addze %0,%2\"\n   [(set_attr \"type\" \"two\")\n    (set_attr \"length\" \"8\")])\n \n-(define_insn \"*compare_plus_ne0si\"\n+(define_insn \"*compare_plus_ne0_<mode>\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC\n-\t (plus:SI (lshiftrt:SI\n-\t\t   (neg:SI (abs:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")))\n-\t\t   (const_int 31))\n-\t\t  (match_operand:SI 2 \"gpc_reg_operand\" \"r,r\"))\n-\t (const_int 0)))\n-   (clobber (match_scratch:SI 3 \"=&r,&r\"))\n-   (clobber (match_scratch:SI 4 \"=X,&r\"))]\n-  \"TARGET_32BIT\"\n+\t(compare:CC (plus:P (ne:P (match_operand:P 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t  (const_int 0))\n+\t\t\t    (match_operand:P 2 \"gpc_reg_operand\" \"r,r\"))\n+\t\t    (const_int 0)))\n+   (clobber (match_scratch:P 3 \"=&r,&r\"))\n+   (clobber (match_scratch:P 4 \"=X,&r\"))]\n+  \"\"\n   \"@\n    addic %3,%1,-1\\;addze. %3,%2\n    #\"\n   [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"8,12\")])\n \n (define_split\n-  [(set (match_operand:CC 0 \"cc_reg_not_cr0_operand\" \"\")\n-\t(compare:CC\n-\t (plus:SI (lshiftrt:SI\n-\t\t   (neg:SI (abs:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")))\n-\t\t   (const_int 31))\n-\t\t  (match_operand:SI 2 \"gpc_reg_operand\" \"\"))\n-\t (const_int 0)))\n-   (clobber (match_scratch:SI 3 \"\"))\n-   (clobber (match_scratch:SI 4 \"\"))]\n-  \"TARGET_32BIT && reload_completed\"\n+  [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n+\t(compare:CC (ne:P (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t  (const_int 0))\n+\t\t    (neg:P (match_operand:P 2 \"gpc_reg_operand\" \"r,r\"))))\n+   (clobber (match_scratch:P 3 \"\"))\n+   (clobber (match_scratch:P 4 \"\"))]\n+  \"reload_completed\"\n   [(parallel [(set (match_dup 3)\n-\t\t   (plus:SI (lshiftrt:SI (neg:SI (abs:SI (match_dup 1)))\n-\t\t\t\t\t (const_int 31))\n-\t\t\t    (match_dup 2)))\n+\t\t   (plus:P (ne:P (match_dup 1)\n+\t\t\t\t (const_int 0))\n+\t\t\t   (match_dup 2)))\n               (clobber (match_dup 4))])\n    (set (match_dup 0)\n \t(compare:CC (match_dup 3)\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"*compare_plus_ne0di\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC\n-\t (plus:DI (lshiftrt:DI\n-\t\t   (neg:DI (abs:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")))\n-\t\t   (const_int 63))\n-\t\t  (match_operand:DI 2 \"gpc_reg_operand\" \"r,r\"))\n-\t (const_int 0)))\n-   (clobber (match_scratch:DI 3 \"=&r,&r\"))]\n-  \"TARGET_64BIT\"\n+; For combine.\n+(define_insn \"*compare_plus_ne0_<mode>_1\"\n+  [(set (match_operand:CCEQ 0 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CCEQ (ne:P (match_operand:P 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t    (const_int 0))\n+\t\t      (neg:P (match_operand:P 2 \"gpc_reg_operand\" \"r,r\"))))\n+   (clobber (match_scratch:P 3 \"=&r,&r\"))\n+   (clobber (match_scratch:P 4 \"=X,&r\"))]\n+  \"\"\n   \"@\n    addic %3,%1,-1\\;addze. %3,%2\n    #\"\n   [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"8,12\")])\n \n (define_split\n-  [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC\n-\t (plus:DI (lshiftrt:DI\n-\t\t   (neg:DI (abs:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\")))\n-\t\t   (const_int 63))\n-\t\t  (match_operand:DI 2 \"gpc_reg_operand\" \"\"))\n-\t (const_int 0)))\n-   (clobber (match_scratch:DI 3 \"\"))]\n-  \"TARGET_64BIT && reload_completed\"\n-  [(set (match_dup 3)\n-\t(plus:DI (lshiftrt:DI (neg:DI (abs:DI (match_dup 1)))\n-\t\t   (const_int 63))\n-\t\t  (match_dup 2)))\n+  [(set (match_operand:CCEQ 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n+\t(compare:CCEQ (ne:P (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t    (const_int 0))\n+\t\t      (neg:P (match_operand:P 2 \"gpc_reg_operand\" \"r,r\"))))\n+   (clobber (match_scratch:P 3 \"\"))\n+   (clobber (match_scratch:P 4 \"\"))]\n+  \"reload_completed\"\n+  [(parallel [(set (match_dup 3)\n+\t\t   (plus:P (ne:P (match_dup 1)\n+\t\t\t\t (const_int 0))\n+\t\t\t   (match_dup 2)))\n+              (clobber (match_dup 4))])\n    (set (match_dup 0)\n \t(compare:CC (match_dup 3)\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"*plus_ne0si_compare\"\n+(define_insn \"*plus_ne0_<mode>_compare\"\n   [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC\n-\t (plus:SI (lshiftrt:SI\n-\t\t   (neg:SI (abs:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")))\n-\t\t   (const_int 31))\n-\t\t  (match_operand:SI 2 \"gpc_reg_operand\" \"r,r\"))\n+\t (plus:P (ne:P (match_operand:P 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t       (const_int 0))\n+\t\t (match_operand:P 2 \"gpc_reg_operand\" \"r,r\"))\n \t (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(plus:SI (lshiftrt:SI (neg:SI (abs:SI (match_dup 1))) (const_int 31))\n-\t\t (match_dup 2)))\n-   (clobber (match_scratch:SI 3 \"=&r,&r\"))]\n-  \"TARGET_32BIT\"\n-  \"@\n-   addic %3,%1,-1\\;addze. %0,%2\n-   #\"\n-  [(set_attr \"type\" \"compare\")\n-   (set_attr \"length\" \"8,12\")])\n-\n-(define_split\n-  [(set (match_operand:CC 4 \"cc_reg_not_cr0_operand\" \"\")\n-\t(compare:CC\n-\t (plus:SI (lshiftrt:SI\n-\t\t   (neg:SI (abs:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")))\n-\t\t   (const_int 31))\n-\t\t  (match_operand:SI 2 \"gpc_reg_operand\" \"\"))\n-\t (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(plus:SI (lshiftrt:SI (neg:SI (abs:SI (match_dup 1))) (const_int 31))\n-\t\t (match_dup 2)))\n-   (clobber (match_scratch:SI 3 \"\"))]\n-  \"TARGET_32BIT && reload_completed\"\n-  [(parallel [(set (match_dup 0)\n-\t(plus:SI (lshiftrt:SI (neg:SI (abs:SI (match_dup 1))) (const_int 31))\n-\t\t (match_dup 2)))\n-   (clobber (match_dup 3))])\n-   (set (match_dup 4)\n-\t(compare:CC (match_dup 0)\n-\t\t    (const_int 0)))]\n-  \"\")\n-\n-(define_insn \"*plus_ne0di_compare\"\n-  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC\n-\t (plus:DI (lshiftrt:DI\n-\t\t   (neg:DI (abs:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")))\n-\t\t   (const_int 63))\n-\t\t  (match_operand:DI 2 \"gpc_reg_operand\" \"r,r\"))\n-\t (const_int 0)))\n-   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(plus:DI (lshiftrt:DI (neg:DI (abs:DI (match_dup 1))) (const_int 63))\n-\t\t (match_dup 2)))\n-   (clobber (match_scratch:DI 3 \"=&r,&r\"))]\n-  \"TARGET_64BIT\"\n+   (set (match_operand:P 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(plus:P (ne:P (match_dup 1)\n+\t\t      (const_int 0))\n+\t\t(match_dup 2)))\n+   (clobber (match_scratch:P 3 \"=&r,&r\"))]\n+  \"\"\n   \"@\n    addic %3,%1,-1\\;addze. %0,%2\n    #\"\n@@ -12153,20 +12079,21 @@\n (define_split\n   [(set (match_operand:CC 4 \"cc_reg_not_micro_cr0_operand\" \"\")\n \t(compare:CC\n-\t (plus:DI (lshiftrt:DI\n-\t\t   (neg:DI (abs:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\")))\n-\t\t   (const_int 63))\n-\t\t  (match_operand:DI 2 \"gpc_reg_operand\" \"\"))\n+\t (plus:P (ne:P (match_operand:P 1 \"gpc_reg_operand\" \"\")\n+\t\t       (const_int 0))\n+\t\t (match_operand:P 2 \"gpc_reg_operand\" \"\"))\n \t (const_int 0)))\n-   (set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n-\t(plus:DI (lshiftrt:DI (neg:DI (abs:DI (match_dup 1))) (const_int 63))\n-\t\t (match_dup 2)))\n-   (clobber (match_scratch:DI 3 \"\"))]\n-  \"TARGET_64BIT && reload_completed\"\n+   (set (match_operand:P 0 \"gpc_reg_operand\" \"\")\n+\t(plus:P (ne:P (match_dup 1)\n+\t\t      (const_int 0))\n+\t\t(match_dup 2)))\n+   (clobber (match_scratch:P 3 \"\"))]\n+  \"reload_completed\"\n   [(parallel [(set (match_dup 0)\n-\t(plus:DI (lshiftrt:DI (neg:DI (abs:DI (match_dup 1))) (const_int 63))\n-\t\t (match_dup 2)))\n-   (clobber (match_dup 3))])\n+\t\t   (plus:P (ne:P (match_dup 1)\n+\t\t\t\t (const_int 0))\n+\t\t\t   (match_dup 2)))\n+\t      (clobber (match_dup 3))])\n    (set (match_dup 4)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]"}, {"sha": "3aad84134bf22a8e91302d7ce711186316d6e913", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba45a61315a195eccfe337f87e3f03cffff8430d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba45a61315a195eccfe337f87e3f03cffff8430d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ba45a61315a195eccfe337f87e3f03cffff8430d", "patch": "@@ -1,3 +1,9 @@\n+2012-09-25  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/51274\n+\tPR target/53087\n+\t* gcc.target/powerpc/ppc-ne0-1.c: New.\n+\n 2012-09-25  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/54089"}, {"sha": "63c4b6087df1f20cb170fcb30e6a46a15d1b96fb", "filename": "gcc/testsuite/gcc.target/powerpc/ppc-ne0-1.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba45a61315a195eccfe337f87e3f03cffff8430d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-ne0-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba45a61315a195eccfe337f87e3f03cffff8430d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-ne0-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-ne0-1.c?ref=ba45a61315a195eccfe337f87e3f03cffff8430d", "patch": "@@ -0,0 +1,33 @@\n+/* PR target/51274 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-isel\" } */\n+\n+/* { dg-final { scan-assembler-times \"addic\" 4 } } */\n+/* { dg-final { scan-assembler-times \"subfe\" 1 } } */\n+/* { dg-final { scan-assembler-times \"addze\" 3 } } */\n+\n+long ne0(long a)\n+{\n+  return a != 0;\n+}\n+\n+long plus_ne0(long a, long b)\n+{\n+  return (a != 0) + b;\n+}\n+\n+void dummy(void);\n+\n+void cmp_plus_ne0(long a, long b)\n+{\n+  if ((a != 0) + b)\n+    dummy();\n+}\n+\n+long plus_ne0_cmp(long a, long b)\n+{\n+  a = (a != 0) + b;\n+  if (a)\n+    dummy();\n+  return a;\n+}"}]}