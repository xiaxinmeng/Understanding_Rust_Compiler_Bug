{"sha": "450eb6b3b5b544d26da2535228ce03f9656a13a5", "node_id": "C_kwDOANBUbNoAKDQ1MGViNmIzYjViNTQ0ZDI2ZGEyNTM1MjI4Y2UwM2Y5NjU2YTEzYTU", "commit": {"author": {"name": "Arsen Arsenovi\u0107", "email": "arsen@aarsen.me", "date": "2023-01-10T10:03:05Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-01-13T13:34:21Z"}, "message": "libstdc++: Fix a few !HOSTED test regressions\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/20_util/to_chars/version.cc: Mark hosted-only.\n\t* testsuite/20_util/uses_allocator/lwg3677.cc: Ditto.\n\t* testsuite/20_util/weak_ptr/cons/self_move.cc: Ditto.\n\t* testsuite/std/ranges/adaptors/as_rvalue/1.cc: Replace usage of\n\tstd::make_unique with a freestanding-compatible wrapper around\n\tunique_ptr.\n\t* testsuite/21_strings/basic_string_view/operations/contains/char.cc:\n\tDon't test for presence of __cpp_lib_string_contains on !HOSTED.\n\t* testsuite/21_strings/basic_string_view/operations/contains/char/2.cc:\n\tDitto.\n\t* testsuite/std/ranges/version_c++23.cc: Don't test for presence\n\tof __cpp_lib_ranges in !HOSTED.", "tree": {"sha": "37a9d34055bbbb98e9f590f9e6d4fc91f087e881", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37a9d34055bbbb98e9f590f9e6d4fc91f087e881"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/450eb6b3b5b544d26da2535228ce03f9656a13a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/450eb6b3b5b544d26da2535228ce03f9656a13a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/450eb6b3b5b544d26da2535228ce03f9656a13a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/450eb6b3b5b544d26da2535228ce03f9656a13a5/comments", "author": {"login": "ArsenArsen", "id": 7805050, "node_id": "MDQ6VXNlcjc4MDUwNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7805050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArsenArsen", "html_url": "https://github.com/ArsenArsen", "followers_url": "https://api.github.com/users/ArsenArsen/followers", "following_url": "https://api.github.com/users/ArsenArsen/following{/other_user}", "gists_url": "https://api.github.com/users/ArsenArsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArsenArsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArsenArsen/subscriptions", "organizations_url": "https://api.github.com/users/ArsenArsen/orgs", "repos_url": "https://api.github.com/users/ArsenArsen/repos", "events_url": "https://api.github.com/users/ArsenArsen/events{/privacy}", "received_events_url": "https://api.github.com/users/ArsenArsen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42d3f74323800d2ce5853dfb9180a5be1ff28d04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42d3f74323800d2ce5853dfb9180a5be1ff28d04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42d3f74323800d2ce5853dfb9180a5be1ff28d04"}], "stats": {"total": 52, "additions": 37, "deletions": 15}, "files": [{"sha": "2789afa28efb3d17770fb618577831962d61f16e", "filename": "libstdc++-v3/testsuite/20_util/to_chars/version.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/450eb6b3b5b544d26da2535228ce03f9656a13a5/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fto_chars%2Fversion.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/450eb6b3b5b544d26da2535228ce03f9656a13a5/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fto_chars%2Fversion.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fto_chars%2Fversion.cc?ref=450eb6b3b5b544d26da2535228ce03f9656a13a5", "patch": "@@ -1,5 +1,6 @@\n // { dg-options \"-std=gnu++23\" }\n // { dg-do preprocess { target c++23 } }\n+// { dg-require-effective-target hosted }\n \n #include <version>\n "}, {"sha": "b2595d0eb2270c1562f83703c164fe7ebe38fcd8", "filename": "libstdc++-v3/testsuite/20_util/uses_allocator/lwg3677.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/450eb6b3b5b544d26da2535228ce03f9656a13a5/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fuses_allocator%2Flwg3677.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/450eb6b3b5b544d26da2535228ce03f9656a13a5/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fuses_allocator%2Flwg3677.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fuses_allocator%2Flwg3677.cc?ref=450eb6b3b5b544d26da2535228ce03f9656a13a5", "patch": "@@ -1,5 +1,6 @@\n // { dg-options \"-std=gnu++23\" }\n // { dg-do run { target c++20 } }\n+// { dg-require-effective-target hosted }\n \n #include <memory>\n #include <testsuite_hooks.h>"}, {"sha": "7e38765eb2b59d56f7534b43775b0439865e02d4", "filename": "libstdc++-v3/testsuite/20_util/weak_ptr/cons/self_move.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/450eb6b3b5b544d26da2535228ce03f9656a13a5/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fweak_ptr%2Fcons%2Fself_move.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/450eb6b3b5b544d26da2535228ce03f9656a13a5/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fweak_ptr%2Fcons%2Fself_move.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fweak_ptr%2Fcons%2Fself_move.cc?ref=450eb6b3b5b544d26da2535228ce03f9656a13a5", "patch": "@@ -1,4 +1,5 @@\n // { dg-do run { target c++11 } }\n+// { dg-require-effective-target hosted }\n \n #include <memory>\n #include <testsuite_hooks.h>"}, {"sha": "8ae56757fe808752657dc7a08c0bea6f8ad597d4", "filename": "libstdc++-v3/testsuite/21_strings/basic_string_view/operations/contains/char.cc", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/450eb6b3b5b544d26da2535228ce03f9656a13a5/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Fcontains%2Fchar.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/450eb6b3b5b544d26da2535228ce03f9656a13a5/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Fcontains%2Fchar.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Fcontains%2Fchar.cc?ref=450eb6b3b5b544d26da2535228ce03f9656a13a5", "patch": "@@ -22,11 +22,14 @@\n \n #include <string_view>\n \n-#ifndef __cpp_lib_string_contains\n-# error \"Feature-test macro for contains missing in <string_view>\"\n-#elif __cpp_lib_string_contains != 202011L\n-# error \"Feature-test macro for contains has wrong value in <string_view>\"\n-#endif\n+#if __STDC_HOSTED__\n+// This FTM is omitted since <string> is not freestanding.\n+# ifndef __cpp_lib_string_contains\n+#  error \"Feature-test macro for contains missing in <string_view>\"\n+# elif __cpp_lib_string_contains != 202011L\n+#  error \"Feature-test macro for contains has wrong value in <string_view>\"\n+# endif\n+#endif // HOSTED\n \n void\n test01()"}, {"sha": "d8c85e232490bcc7d2e31df1a4bf39fd9d09ef2e", "filename": "libstdc++-v3/testsuite/21_strings/basic_string_view/operations/contains/char/2.cc", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/450eb6b3b5b544d26da2535228ce03f9656a13a5/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Fcontains%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/450eb6b3b5b544d26da2535228ce03f9656a13a5/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Fcontains%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Fcontains%2Fchar%2F2.cc?ref=450eb6b3b5b544d26da2535228ce03f9656a13a5", "patch": "@@ -20,8 +20,11 @@\n \n #include <version>\n \n-#ifndef __cpp_lib_string_contains\n-# error \"Feature-test macro for contains missing in <string_view>\"\n-#elif __cpp_lib_string_contains != 202011L\n-# error \"Feature-test macro for contains has wrong value in <string_view>\"\n+#if __STDC_HOSTED__\n+// This FTM is omitted since <string> is not freestanding.\n+# ifndef __cpp_lib_string_contains\n+#  error \"Feature-test macro for contains missing in <string_view>\"\n+# elif __cpp_lib_string_contains != 202011L\n+#  error \"Feature-test macro for contains has wrong value in <string_view>\"\n+# endif\n #endif"}, {"sha": "da829606e06b97f1adca5f43b067548473eaec17", "filename": "libstdc++-v3/testsuite/std/ranges/adaptors/as_rvalue/1.cc", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/450eb6b3b5b544d26da2535228ce03f9656a13a5/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Fas_rvalue%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/450eb6b3b5b544d26da2535228ce03f9656a13a5/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Fas_rvalue%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Fas_rvalue%2F1.cc?ref=450eb6b3b5b544d26da2535228ce03f9656a13a5", "patch": "@@ -14,13 +14,24 @@\n namespace ranges = std::ranges;\n namespace views = std::views;\n \n+\n+/* Replacement for the standard version, as it's not available in freestanding\n+   environments.  */\n+template<typename T, typename... Args>\n+requires (!std::is_array_v<T>)\n+constexpr auto\n+make_unique (Args &&...args)\n+{\n+  return std::unique_ptr<T> { new T (std::forward<Args>(args)...) };\n+}\n+\n constexpr bool\n test01()\n {\n \n-  std::unique_ptr<int> a[3] = { std::make_unique<int>(1),\n-\t\t\t\tstd::make_unique<int>(2),\n-\t\t\t\tstd::make_unique<int>(3) };\n+  std::unique_ptr<int> a[3] = { make_unique<int>(1),\n+\t\t\t\tmake_unique<int>(2),\n+\t\t\t\tmake_unique<int>(3) };\n   std::unique_ptr<int> b[3];\n   auto v = a | views::as_rvalue;\n   ranges::copy(v, b);\n@@ -33,7 +44,7 @@ test01()\n void\n test02()\n {\n-  std::unique_ptr<int> x = std::make_unique<int>(42);\n+  std::unique_ptr<int> x = make_unique<int>(42);\n   std::unique_ptr<int> y;\n   __gnu_test::test_input_range rx(&x, &x+1);\n   auto v = rx | views::as_rvalue;"}, {"sha": "9970301cb5ff91d5aadc722e86dd5cdef47f7d64", "filename": "libstdc++-v3/testsuite/std/ranges/version_c++23.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/450eb6b3b5b544d26da2535228ce03f9656a13a5/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fversion_c%2B%2B23.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/450eb6b3b5b544d26da2535228ce03f9656a13a5/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fversion_c%2B%2B23.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fversion_c%2B%2B23.cc?ref=450eb6b3b5b544d26da2535228ce03f9656a13a5", "patch": "@@ -3,8 +3,10 @@\n \n #include <version>\n \n-#if __cpp_lib_ranges != 202110L\n-# error \"Feature-test macro __cpp_lib_ranges has wrong value in <version>\"\n+#if __STDC_HOSTED__\n+# if __cpp_lib_ranges != 202110L\n+#  error \"Feature-test macro __cpp_lib_ranges has wrong value in <version>\"\n+# endif\n #endif\n \n #if __cpp_lib_ranges_zip != 202110L"}]}