{"sha": "67ca0b229bc378fe7b434b1a25c493f9562c9b2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdjYTBiMjI5YmMzNzhmZTdiNDM0YjFhMjVjNDkzZjk1NjJjOWIyYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-11-09T16:04:44Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-11-09T16:04:44Z"}, "message": "(REG_ALLOC_ORDER): Define.\n\n(REGNO_OK_FOR_BASE_P): Include stack pointer in test against\nreg_renumber[REGNO].\n(ASM_OUTPUT_DESTRUCTOR): Remove bogus assembler comment.\n\nFrom-SVN: r10574", "tree": {"sha": "7ba714c2b0ce65b122cc422467e18aa89c97fae9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ba714c2b0ce65b122cc422467e18aa89c97fae9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67ca0b229bc378fe7b434b1a25c493f9562c9b2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67ca0b229bc378fe7b434b1a25c493f9562c9b2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67ca0b229bc378fe7b434b1a25c493f9562c9b2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67ca0b229bc378fe7b434b1a25c493f9562c9b2c/comments", "author": null, "committer": null, "parents": [{"sha": "2ae342f72c43bc0092015de765be3dd164a3ab24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ae342f72c43bc0092015de765be3dd164a3ab24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ae342f72c43bc0092015de765be3dd164a3ab24"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "6fb892e9129f9ec369cd9330ec782c7678f0e69a", "filename": "gcc/config/1750a/1750a.h", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ca0b229bc378fe7b434b1a25c493f9562c9b2c/gcc%2Fconfig%2F1750a%2F1750a.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ca0b229bc378fe7b434b1a25c493f9562c9b2c/gcc%2Fconfig%2F1750a%2F1750a.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2F1750a%2F1750a.h?ref=67ca0b229bc378fe7b434b1a25c493f9562c9b2c", "patch": "@@ -200,6 +200,13 @@ extern char *strdup(), *float_label();\n  { 1, 1, 1, 1, 1, 1, 1, 1, \\\n    1, 1, 1, 1, 1, 1, 1, 1 }\n \n+/* Order in which to allocate registers.  Each register must be\n+   listed once, even those in FIXED_REGISTERS.  List frame pointer\n+   late and fixed registers last.  Note that, in general, we prefer\n+   registers listed in CALL_USED_REGISTERS, keeping the others\n+   available for storage of persistent values.  */\n+#define REG_ALLOC_ORDER \\\n+   { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }\n /* Return number of consecutive hard regs needed starting at reg REGNO\n    to hold something of mode MODE.\n    This is ordinarily the length in words of a value of mode MODE\n@@ -682,7 +689,7 @@ enum reg_class { NO_REGS, R2, R0_1, INDEX_REGS, BASE_REGS, ALL_REGS, LIM_REG_CLA\n \n #define REGNO_OK_FOR_BASE_P(REGNO)  \\\n  ((REGNO) > 0 && (REGNO) <= 15 ||   \\\n-  reg_renumber[REGNO] > 0 && reg_renumber[REGNO] < 15)\n+  reg_renumber[REGNO] > 0 && reg_renumber[REGNO] <= 15)\n #define REGNO_OK_FOR_INDEX_P(REGNO) \\\n  ((REGNO) >= 12 && (REGNO) <= 15 || \\\n   reg_renumber[REGNO] >= 12 && reg_renumber[REGNO] <= 15)\n@@ -1264,8 +1271,8 @@ enum reg_class { NO_REGS, R2, R0_1, INDEX_REGS, BASE_REGS, ALL_REGS, LIM_REG_CLA\n \tfprintf(FILE,\"  ;constructor\\n\"); } while (0)\n \n #define ASM_OUTPUT_DESTRUCTOR(FILE, NAME)  do {\t\\\n-\tfprintf(FILE, \"\\t; ASM_OUTPUT_DESTRUCTOR called for \"); \\\n-\tassemble_name(FILE, NAME); } while (0)\n+\tfprintf(FILE, \"\\tinit\\n\\t\"); assemble_name(FILE, NAME); \\\n+        fprintf(FILE,\"  ;destructor\"); } while (0)\n \n /* Define the parentheses used to group arithmetic operations\n    in assembler code.  */"}]}