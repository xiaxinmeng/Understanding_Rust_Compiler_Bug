{"sha": "6d409ca872d76ffce2b945153486992787e74250", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ0MDljYTg3MmQ3NmZmY2UyYjk0NTE1MzQ4Njk5Mjc4N2U3NDI1MA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2005-06-18T11:56:42Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2005-06-18T11:56:42Z"}, "message": "ia64.c (ia64_function_arg): Set up a PARALLEL for a big-endian unnamed __float80 value.\n\n\t* config/ia64/ia64.c (ia64_function_arg): Set up a PARALLEL for a\n\tbig-endian unnamed __float80 value.\n\ntestsuite:\n\t* gcc.target/ia64/float80-varargs-1.c: New test.\n\nFrom-SVN: r101153", "tree": {"sha": "f05c8531caa36a1bfb5ac10864d6e0c8e637dd7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f05c8531caa36a1bfb5ac10864d6e0c8e637dd7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d409ca872d76ffce2b945153486992787e74250", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d409ca872d76ffce2b945153486992787e74250", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d409ca872d76ffce2b945153486992787e74250", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d409ca872d76ffce2b945153486992787e74250/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "189ed82c09bb8bfc5243bd0f60f6bdca4b4daf9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/189ed82c09bb8bfc5243bd0f60f6bdca4b4daf9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/189ed82c09bb8bfc5243bd0f60f6bdca4b4daf9a"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "8ebd80048453414b76bb58a9bc71cbeee3369748", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d409ca872d76ffce2b945153486992787e74250/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d409ca872d76ffce2b945153486992787e74250/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d409ca872d76ffce2b945153486992787e74250", "patch": "@@ -1,3 +1,8 @@\n+2005-06-18  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* config/ia64/ia64.c (ia64_function_arg): Set up a PARALLEL for a\n+\tbig-endian unnamed __float80 value.\n+\n 2005-06-18  Richard Henderson  <rth@redhat.com>\n \n \tPR tree-opt/22103"}, {"sha": "0475c943bc71b3c31133f99f86f52bcdadc6499d", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d409ca872d76ffce2b945153486992787e74250/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d409ca872d76ffce2b945153486992787e74250/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=6d409ca872d76ffce2b945153486992787e74250", "patch": "@@ -3822,6 +3822,19 @@ ia64_function_arg (CUMULATIVE_ARGS *cum, enum machine_mode mode, tree type,\n                    gen_rtx_EXPR_LIST (VOIDmode,\n \t\t     gen_rtx_REG (DImode, basereg + cum->words + offset),\n \t\t\t\t      const0_rtx)));\n+      /* Similarly, an anonymous XFmode value must be split into two\n+\t registers and padded appropriately.  */\n+      else if (BYTES_BIG_ENDIAN && mode == XFmode)\n+\t{\n+\t  rtx loc[2];\n+\t  loc[0] = gen_rtx_EXPR_LIST (VOIDmode,\n+\t\t     gen_rtx_REG (DImode, basereg + cum->words + offset),\n+\t\t\t\t      const0_rtx);\n+\t  loc[1] = gen_rtx_EXPR_LIST (VOIDmode,\n+\t\t     gen_rtx_REG (DImode, basereg + cum->words + offset + 1),\n+\t\t\t\t      GEN_INT (UNITS_PER_WORD));\n+\t  return gen_rtx_PARALLEL (mode, gen_rtvec_v (2, loc));\n+\t}\n       else\n \treturn gen_rtx_REG (mode, basereg + cum->words + offset);\n     }"}, {"sha": "992b1760e1429efbfa80db201f0eb99debb179a7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d409ca872d76ffce2b945153486992787e74250/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d409ca872d76ffce2b945153486992787e74250/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6d409ca872d76ffce2b945153486992787e74250", "patch": "@@ -1,3 +1,7 @@\n+2005-06-18  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.target/ia64/float80-varargs-1.c: New test.\n+\n 2005-06-18  Tobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \tPR tree-opt/22035"}, {"sha": "96524be6b1f503225f8ac23c8bc5412c19f9b122", "filename": "gcc/testsuite/gcc.target/ia64/float80-varargs-1.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d409ca872d76ffce2b945153486992787e74250/gcc%2Ftestsuite%2Fgcc.target%2Fia64%2Ffloat80-varargs-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d409ca872d76ffce2b945153486992787e74250/gcc%2Ftestsuite%2Fgcc.target%2Fia64%2Ffloat80-varargs-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fia64%2Ffloat80-varargs-1.c?ref=6d409ca872d76ffce2b945153486992787e74250", "patch": "@@ -0,0 +1,33 @@\n+/* Test for a bug with passing __float80 in varargs.  The __float80\n+   value was wrongly passed, leading to an abort.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do run } */\n+/* { dg-options \"\" } */\n+\n+#include <stdarg.h>\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+__float80 s = 1.234L;\n+__float80 d;\n+\n+void vf (int a0, ...);\n+\n+int\n+main (void)\n+{\n+  vf (0, s);\n+  if (d != s)\n+    abort ();\n+  exit (0);\n+}\n+\n+void\n+vf (int a0, ...)\n+{\n+  va_list ap;\n+  va_start (ap, a0);\n+  d = va_arg (ap, __float80);\n+  va_end (ap);\n+}"}]}