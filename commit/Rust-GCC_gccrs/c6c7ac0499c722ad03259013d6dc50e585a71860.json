{"sha": "c6c7ac0499c722ad03259013d6dc50e585a71860", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZjN2FjMDQ5OWM3MjJhZDAzMjU5MDEzZDZkYzUwZTU4NWE3MTg2MA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-06-22T06:43:15Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-06-25T06:48:52Z"}, "message": "add -ltrans-objects lto-plugin debug option\n\nThis adds a -ltrans-objects option to lto-plugin that by-passes\nlto-wrapper invocation and instead feeds LD the final LTRANS objects\ndirectly from the response file given as argument to the option.\nThis allows LD issues involving the linker-plugin path to be\ndebugged in an easier way with just the IR objects (their symtab)\nand the LTRANS objects as testcase.\n\nI've tested the path re-building stage2 build/genmatch from an\nLTO bootstrap and got a bit-identical executable by adding\n-plugin-opt=-ltrans-objects=y to the original collect2 invocation,\nseeding y with the final objects as printed by building genmatch\nwith -save-temps -v.\n\n2021-06-22  Richard Biener  <rguenther@suse.de>\n\nlto-plugin/\n\t* lto-plugin.c (ltrans_objects): New global.\n\t(all_symbols_read_handler): If -ltrans-objects was specified,\n\tadd the output files from the specified file directly.\n\t(process_option): Handle -ltrans-objects.", "tree": {"sha": "bf89dc9925462e9eb0ab94e058075969483aca8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf89dc9925462e9eb0ab94e058075969483aca8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6c7ac0499c722ad03259013d6dc50e585a71860", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6c7ac0499c722ad03259013d6dc50e585a71860", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6c7ac0499c722ad03259013d6dc50e585a71860", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6c7ac0499c722ad03259013d6dc50e585a71860/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "607c558804f70af2b8f0c39d4d349b349d56cc84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/607c558804f70af2b8f0c39d4d349b349d56cc84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/607c558804f70af2b8f0c39d4d349b349d56cc84"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "6ab9822f36910bea1ca5ecc2330e6bc9a5f3ae10", "filename": "lto-plugin/lto-plugin.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6c7ac0499c722ad03259013d6dc50e585a71860/lto-plugin%2Flto-plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6c7ac0499c722ad03259013d6dc50e585a71860/lto-plugin%2Flto-plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Flto-plugin.c?ref=c6c7ac0499c722ad03259013d6dc50e585a71860", "patch": "@@ -190,6 +190,8 @@ static int lto_wrapper_num_args;\n static char **pass_through_items = NULL;\n static unsigned int num_pass_through_items;\n \n+static char *ltrans_objects = NULL;\n+\n static bool debug;\n static bool save_temps;\n static bool verbose;\n@@ -739,6 +741,14 @@ all_symbols_read_handler (void)\n       return LDPS_OK;\n     }\n \n+  if (ltrans_objects)\n+    {\n+      FILE *objs = fopen (ltrans_objects, \"r\");\n+      add_output_files (objs);\n+      fclose (objs);\n+      return LDPS_OK;\n+    }\n+\n   lto_argv = (char **) xcalloc (sizeof (char *), num_lto_args);\n   lto_arg_ptr = (const char **) lto_argv;\n   assert (lto_wrapper_argv);\n@@ -1345,6 +1355,8 @@ process_option (const char *option)\n \t  break;\n \t}\n     }\n+  else if (startswith (option, \"-ltrans-objects=\"))\n+    ltrans_objects = xstrdup (option + strlen (\"-ltrans-objects=\"));\n   else\n     {\n       int size;"}]}