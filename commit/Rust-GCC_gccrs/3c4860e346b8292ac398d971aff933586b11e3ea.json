{"sha": "3c4860e346b8292ac398d971aff933586b11e3ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M0ODYwZTM0NmI4MjkyYWMzOThkOTcxYWZmOTMzNTg2YjExZTNlYQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2019-02-11T17:07:41Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2019-02-11T17:07:41Z"}, "message": "inliner-1.c: Correct comments.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/tree-prof/inliner-1.c: Correct comments.\n\nFrom-SVN: r268773", "tree": {"sha": "5a040d5efe9ad037dd414e59004849f9846bb2e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a040d5efe9ad037dd414e59004849f9846bb2e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c4860e346b8292ac398d971aff933586b11e3ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c4860e346b8292ac398d971aff933586b11e3ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c4860e346b8292ac398d971aff933586b11e3ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c4860e346b8292ac398d971aff933586b11e3ea/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e43a01394ca5146824a6a896328b3999c4faf927", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e43a01394ca5146824a6a896328b3999c4faf927", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e43a01394ca5146824a6a896328b3999c4faf927"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "011959ab81822e1f448296458b7b810266dbc4cc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c4860e346b8292ac398d971aff933586b11e3ea/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c4860e346b8292ac398d971aff933586b11e3ea/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3c4860e346b8292ac398d971aff933586b11e3ea", "patch": "@@ -1,3 +1,7 @@\n+2019-02-11  Martin Sebor  <msebor@redhat.com>\n+\n+\t* gcc.dg/tree-prof/inliner-1.c: Correct comments.\n+\n 2019-02-11  Tamar Christina  <tamar.christina@arm.com>\n \n \tPR middle-end/88560"}, {"sha": "78f73e0fcfd930af57ab054b54dedecd8bde77c3", "filename": "gcc/testsuite/gcc.dg/tree-prof/inliner-1.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c4860e346b8292ac398d971aff933586b11e3ea/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Finliner-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c4860e346b8292ac398d971aff933586b11e3ea/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Finliner-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Finliner-1.c?ref=3c4860e346b8292ac398d971aff933586b11e3ea", "patch": "@@ -28,15 +28,15 @@ main ()\n   for (i = 0; i < 1000000; i++)\n     {\n       if (a)\n-        cold_function ();\n+        cold_function ();   /* Should not be inlined.  */\n       else\n-        hot_function ();\n+        hot_function ();    /* Should be inlined.  */\n     }\n   return 0;\n }\n \n-/* cold function should be inlined, while hot function should not.  \n-   Look for \"cold_function () [tail call];\" call statement not for the\n-   declaration or other appearances of the string in dump.  */\n+/* The call to hot_function should be inlined, while cold_function should\n+   not be.  Look for the \"cold_function ();\" call statement and not for\n+   its declaration or other occurrences of the string in the dump.  */\n /* { dg-final-use { scan-tree-dump \"cold_function ..;\" \"optimized\"} } */\n /* { dg-final-use { scan-tree-dump-not \"hot_function ..;\" \"optimized\"} } */"}]}