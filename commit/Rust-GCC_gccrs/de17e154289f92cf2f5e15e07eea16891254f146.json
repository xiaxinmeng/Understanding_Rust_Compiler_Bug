{"sha": "de17e154289f92cf2f5e15e07eea16891254f146", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUxN2UxNTQyODlmOTJjZjJmNWUxNWUwN2VlYTE2ODkxMjU0ZjE0Ng==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-07-31T19:34:08Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-07-31T19:34:08Z"}, "message": "[multiple changes]\n\n\n2002-07-31  Simon Whomsley  <whomsley@avacadcam.com>\n\n\t* docs/html/22_locale/howto.html: Fix.\n\n2002-07-31  Alex Kompel  <shurik@sequoiap.com>\n\n\tPR libstdc++/7445\n\t* src/locale.cc (locale::classic): Move locks inside !_S_classic\n\tblock.\n\n2002-07-31  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* docs/html/abi.txt: Update.\n\nFrom-SVN: r55908", "tree": {"sha": "f10b1f504c2b36a4e1b8077cd4e3c1d5e2c62458", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f10b1f504c2b36a4e1b8077cd4e3c1d5e2c62458"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de17e154289f92cf2f5e15e07eea16891254f146", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de17e154289f92cf2f5e15e07eea16891254f146", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de17e154289f92cf2f5e15e07eea16891254f146", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de17e154289f92cf2f5e15e07eea16891254f146/comments", "author": null, "committer": null, "parents": [{"sha": "17655a67d81dd80c3f0f211319f0752d5d0f2d84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17655a67d81dd80c3f0f211319f0752d5d0f2d84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17655a67d81dd80c3f0f211319f0752d5d0f2d84"}], "stats": {"total": 167, "additions": 139, "deletions": 28}, "files": [{"sha": "3a42f178b408d9aa8cfc8b22313b2b366ccfa740", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de17e154289f92cf2f5e15e07eea16891254f146/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de17e154289f92cf2f5e15e07eea16891254f146/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=de17e154289f92cf2f5e15e07eea16891254f146", "patch": "@@ -1,3 +1,17 @@\n+2002-07-31  Simon Whomsley  <whomsley@avacadcam.com>\n+\n+\t* docs/html/22_locale/howto.html: Fix.\n+\n+2002-07-31  Alex Kompel  <shurik@sequoiap.com>\n+\n+\tPR libstdc++/7445\n+\t* src/locale.cc (locale::classic): Move locks inside !_S_classic\n+\tblock.\n+\n+2002-07-31  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* docs/html/abi.txt: Update.\n+\n 2002-07-30  Benjamin Kosnik  <bkoz@redhat.com>\n             Gabriel Dos Reis  <gdr@nerim.net>\n "}, {"sha": "e1e580566044fee490e4398167bd1203e69e4e44", "filename": "libstdc++-v3/docs/html/22_locale/howto.html", "status": "modified", "additions": 12, "deletions": 17, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de17e154289f92cf2f5e15e07eea16891254f146/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de17e154289f92cf2f5e15e07eea16891254f146/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fhowto.html?ref=de17e154289f92cf2f5e15e07eea16891254f146", "patch": "@@ -163,42 +163,37 @@ <h2><a name=\"7\">Correct Transformations</a></h2>\n \n    struct Toupper\n    {\n-       Toupper (std::locale const&amp; l) : loc(l) {;}\n+       Toupper(std::locale const&amp; l) : loc(l) {;}\n        char operator() (char c)  { return std::toupper(c,loc); }\n    private:\n        std::locale const&amp; loc;\n    };\n    \n    struct Tolower\n    {\n-       Tolower (std::locale const&amp; l) : loc(l) {;}\n+       Tolower(std::locale const&amp; l) : loc(l) {;}\n        char operator() (char c)  { return std::tolower(c,loc); }\n    private:\n        std::locale const&amp; loc;\n    };\n    \n    int main ()\n    {\n-      std::string  s (\"Some Kind Of Initial Input Goes Here\");\n-      Toupper      up   ( std::locale(\"C\") );\n-      Tolower      down ( std::locale(\"C\") );\n+      std::string  s(\"Some Kind Of Initial Input Goes Here\");\n+      std::locale loc_c(\"C\");\n+      Toupper      up(loc_c);\n+      Tolower      down(loc_c);\n    \n-      // Change everything into upper case\n-      std::transform (s.begin(), s.end(), s.begin(),\n-                      up\n-                     );\n+      // Change everything into upper case.\n+      std::transform(s.begin(), s.end(), s.begin(), up);\n    \n-      // Change everything into lower case\n-      std::transform (s.begin(), s.end(), s.begin(),\n-                      down\n-                     );\n+      // Change everything into lower case.\n+      std::transform(s.begin(), s.end(), s.begin(), down);\n    \n       // Change everything back into upper case, but store the\n-      // result in a different string\n+      // result in a different string.\n       std::string  capital_s;\n-      std::transform (s.begin(), s.end(), std::back_inserter(capital_s),\n-                      up\n-                     );\n+      std::transform(s.begin(), s.end(), std::back_inserter(capital_s), up);\n    }</pre>\n    </p>\n    <p>The final version of the code uses <code>bind2nd</code> to eliminate"}, {"sha": "70ec6605a75a379416328b1b8569a766be19774e", "filename": "libstdc++-v3/docs/html/abi.txt", "status": "modified", "additions": 110, "deletions": 8, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de17e154289f92cf2f5e15e07eea16891254f146/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fabi.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de17e154289f92cf2f5e15e07eea16891254f146/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fabi.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fabi.txt?ref=de17e154289f92cf2f5e15e07eea16891254f146", "patch": "@@ -6,20 +6,24 @@ document exists, why it's incomplete, and what needs to be done still.\n \n ===========================\n \n-2002-07-23 Benjamin Kosnik\n+2002-07-30 Benjamin Kosnik\n \n Description of the libstdc++ ABI.\n \n I. What is an ABI? What's covered? What's not?\n \n+- scope of document, of use to system integrators.\n+\n - What's the deal with C++? Why can't different compiler's object\n   files link with each other? Bug? Feature?\n \n-- scope of document, of use to system integrators.\n-\n - compilation includes and linked library binary must match up..\n \n-- library ABI, compiler ABI different (but effects)\n+- shared library only, static is immutable.\n+\n+- What's an ABI?\n+\n+- library ABI, compiler ABI different issues, (but related)\n \n - GNU C++ does not have a compiler command line option to switch\n   between various different C++ ABIs. For instance, there is no way to\n@@ -29,7 +33,99 @@ I. What is an ABI? What's covered? What's not?\n   the complete list), but there is no version switch. Sorry. The GNU\n   Project recommends that\n \n-- shared library only, static is immutable.\n+- How can this complexity be managed? What does C++ versioning mean?\n+  Because library and compiler changes often make binaries compiled\n+  with one version of the GNU tools incompatible with binaries\n+  compiled with other (either newer or older) versions of the same GNU\n+  tools, specific techniques are used to make managing this complexity\n+  easier.\n+\n+  The following techniques are used:\n+  - Release versioning on the libgcc_s.so binary.\n+\n+  - Release versioning on the libstdc++.so binary.\n+\n+  - Symbol versioning on the libgcc_s.so binary.\n+  \n+  - Symbol versioning on the libstdc++.so binary.\n+\n+  - Incremental bumping of a compiler pre-defined macro,\n+    __GXX_ABI_VERSION. This macro will be automatically defined\n+    whenever g++ is used (the curious can test this by invoking g++\n+    with the '-v' flag. \n+    \n+    This macro is defined in the file \"lang-specs.h\" in the gcc/cp directory.\n+    \n+    It is versioned as follows:\n+    gcc-3.0.x: 100\n+    gcc-3.1.x: 100\n+    gcc-3.2.x: 101\n+\n+    Ask the compiler people why this makes sense, or what this macro means.\n+\n+  - Incremental bumping of a library pre-defined macro,\n+    __GLIBCPP__. This macro is defined as the date the library was\n+    released, in compressed ISO date format, as an unsigned long.\n+\n+    This macro is defined in the file \"c++config\" in the\n+    \"libstdc++-v3/include/bits\" directory and is changed every night\n+    by an automated script.\n+\n+    It is versioned as follows:\n+    gcc-3.0.0: 20010615\n+    gcc-3.0.1: 20010819\n+    gcc-3.0.2: 20011023\n+    gcc-3.0.3: 20011220\n+    gcc-3.0.4: 20020220\n+    gcc-3.1.0: 20020514\n+    gcc-3.1.1: 20020725\n+    gcc-3.2.0: (20020731)\n+\n+  - Incremental bumping of a library pre-defined macro,\n+    _GLIBCPP_VERSION. This macro is defined as the released version of\n+    the library, as a string literal. This is only implemented in\n+    gcc-3.1.0 releases and higher.\n+\n+    This macro is defined in the file \"c++config\" in the\n+    \"libstdc++-v3/include/bits\" directory and is generated\n+    automatically by autoconf as part of the configure-time generation\n+    of config.h.\n+\n+    It is versioned as follows:\n+    gcc-3.0.0: \"3.0.0\"\n+    gcc-3.0.1: \"3.0.0\"\n+    gcc-3.0.2: \"3.0.0\"\n+    gcc-3.0.3: \"3.0.0\"\n+    gcc-3.0.4: \"3.0.0\"\n+    gcc-3.1.0: \"3.1.0\"\n+    gcc-3.1.1: \"3.1.1\"\n+    gcc-3.2.0: (\"3.2.0\")\n+\n+  - Matching each specific C++ compiler release to a specific set of\n+    C++ include files. This is only implemented in gcc-3.1.1 releases\n+    and higher.\n+\n+    All C++ includes are installed in include/c++, then nest in a\n+    directory heirarchy corresponding to the C++ compiler's released\n+    version. This version corresponds to the variable \"gcc_version\" in\n+    \"libstdc++-v3/acinclude.m4,\" and more details can be found in that\n+    file's macro GLIBCPP_CONFIGURE.\n+\n+    C++ includes are versioned as follows:\n+    gcc-3.0.0: include/g++-v3\n+    gcc-3.0.1: include/g++-v3\n+    gcc-3.0.2: include/g++-v3\n+    gcc-3.0.3: include/g++-v3\n+    gcc-3.0.4: include/g++-v3\n+    gcc-3.1.0: include/g++-v3\n+    gcc-3.1.1: include/c++/3.1.1\n+    gcc-3.2.0: include/c++/3.2\n+\n+  Taken together, these techniques can accurately specify interface\n+  and implementation changes in the GNU C++ tools themselves. Used\n+  properly, they allow both the GNU C++ tools implementation, and\n+  programs using them, an evolving yet controlled development that\n+  maintains backward compatibility.\n \n - Minimum environment that supports a versioned ABI: what's needed?  A\n   supported dynamic linker, a GNU linker of sufficient vintage to\n@@ -81,11 +177,12 @@ of the name, then the executable is versioned. Here's an example:\n          U _ZNSt8ios_base4InitC1Ev@@GLIBCPP_3.1\n \n \n+II. Library ABI changes\n \n+The following will cause the library major version number to\n+increase, say from \"libstdc++.so.3.0.4\" to \"libstdc++.so.4.0.0\".\n \n-\n-\n-II. ABI changes\n+- any g++ compiler ABI changes\n \n - (anything) changing size of an exported symbol\n \n@@ -97,6 +194,11 @@ II. ABI changes\n \n - (anything) adding or deleting an exported symbol\n \n+The following will cause the library revision version number to\n+increase, say from \"libstdc++.so.5.0.0\" to \"libstdc++.so.5.0.1\".\n+\n+- any release of the gcc toolchain.\n+\n \n III. Versioning\n "}, {"sha": "3c755bbcba4dbdd5eba3618798e33a7389782841", "filename": "libstdc++-v3/src/locale.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de17e154289f92cf2f5e15e07eea16891254f146/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de17e154289f92cf2f5e15e07eea16891254f146/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc?ref=de17e154289f92cf2f5e15e07eea16891254f146", "patch": "@@ -284,11 +284,11 @@ namespace std\n   const locale&\n   locale::classic()\n   {\n-    static _STL_mutex_lock __lock __STL_MUTEX_INITIALIZER;\n-    _STL_auto_lock __auto(__lock);\n-\n     if (!_S_classic)\n       {\n+\tstatic _STL_mutex_lock __lock __STL_MUTEX_INITIALIZER;\n+\t_STL_auto_lock __auto(__lock);\n+\n \ttry \n \t  {\n \t    // 26 Standard facets, 2 references."}]}