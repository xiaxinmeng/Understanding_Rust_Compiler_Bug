{"sha": "919e06d3f59f9770be5e3968159a46f6c077c9f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE5ZTA2ZDNmNTlmOTc3MGJlNWUzOTY4MTU5YTQ2ZjZjMDc3YzlmOA==", "commit": {"author": {"name": "James Norris", "email": "jnorris@codesourcery.com", "date": "2015-10-07T17:09:46Z"}, "committer": {"name": "James Norris", "email": "jnorris@gcc.gnu.org", "date": "2015-10-07T17:09:46Z"}, "message": "atomic-dg.exp (atomic_link_flags): Move flag setting to atomic_init.\n\n\t* testsuite/lib/atomic-dg.exp (atomic_link_flags): Move flag setting\n\tto atomic_init. (atomic_init): Restrict flags usage.\n\nFrom-SVN: r228575", "tree": {"sha": "cae9e7c10ad7848db8dd183293d66ecbf2e47cf5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cae9e7c10ad7848db8dd183293d66ecbf2e47cf5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/919e06d3f59f9770be5e3968159a46f6c077c9f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/919e06d3f59f9770be5e3968159a46f6c077c9f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/919e06d3f59f9770be5e3968159a46f6c077c9f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/919e06d3f59f9770be5e3968159a46f6c077c9f8/comments", "author": null, "committer": null, "parents": [{"sha": "91bf00a903438a1f5937791c2c10460d248eb74a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91bf00a903438a1f5937791c2c10460d248eb74a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91bf00a903438a1f5937791c2c10460d248eb74a"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "d06a25f01aba4eebf19a21e9f13159fb597be8b0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/919e06d3f59f9770be5e3968159a46f6c077c9f8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/919e06d3f59f9770be5e3968159a46f6c077c9f8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=919e06d3f59f9770be5e3968159a46f6c077c9f8", "patch": "@@ -1,3 +1,8 @@\n+2015-10-07  James Norris  <jnorris@codesourcery.com>\n+\n+\t* testsuite/lib/atomic-dg.exp (atomic_link_flags): Move flag setting\n+\tto atomic_init. (atomic_init): Restrict flags usage.\n+\n 2015-10-07  Andre Vehreschild  <vehre@gcc.gnu.org>\n \n \tPR fortran/65889"}, {"sha": "0640f3c38b7fa21893ef83c71c208968d5e1778d", "filename": "gcc/testsuite/lib/atomic-dg.exp", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/919e06d3f59f9770be5e3968159a46f6c077c9f8/gcc%2Ftestsuite%2Flib%2Fatomic-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/919e06d3f59f9770be5e3968159a46f6c077c9f8/gcc%2Ftestsuite%2Flib%2Fatomic-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fatomic-dg.exp?ref=919e06d3f59f9770be5e3968159a46f6c077c9f8", "patch": "@@ -48,7 +48,6 @@ proc atomic_link_flags { paths } {\n \n     set_ld_library_path_env_vars\n \n-    append flags \" -latomic \"\n     return \"$flags\"\n }\n \n@@ -61,6 +60,7 @@ proc atomic_init { args } {\n     global ALWAYS_CXXFLAGS\n     global TOOL_OPTIONS\n     global atomic_saved_TEST_ALWAYS_FLAGS\n+    global atomic_saved_ALWAYS_CXXFLAGS\n \n     set link_flags \"\"\n     if ![is_remote host] {\n@@ -71,10 +71,13 @@ proc atomic_init { args } {\n \t}\n     }\n \n+    append link_flags \" -latomic \"\n+\n     if [info exists TEST_ALWAYS_FLAGS] {\n \tset atomic_saved_TEST_ALWAYS_FLAGS $TEST_ALWAYS_FLAGS\n     }\n     if [info exists ALWAYS_CXXFLAGS] {\n+\tset atomic_saved_ALWAYS_CXXFLAGS $ALWAYS_CXXFLAGS\n \tset ALWAYS_CXXFLAGS [concat \"{ldflags=$link_flags}\" $ALWAYS_CXXFLAGS]\n     } else {\n \tif [info exists TEST_ALWAYS_FLAGS] {\n@@ -95,11 +98,16 @@ proc atomic_init { args } {\n proc atomic_finish { args } {\n     global TEST_ALWAYS_FLAGS\n     global atomic_saved_TEST_ALWAYS_FLAGS\n+    global atomic_saved_ALWAYS_CXXFLAGS\n \n-    if [info exists atomic_saved_TEST_ALWAYS_FLAGS] {\n-\tset TEST_ALWAYS_FLAGS $atomic_saved_TEST_ALWAYS_FLAGS\n+    if [info exists atomic_saved_ALWAYS_CXXFLAGS] {\n+\tset ALWAYS_CXXFLAGS $atomic_saved_ALWAYS_CXXFLAGS\n     } else {\n-\tunset TEST_ALWAYS_FLAGS\n+\tif [info exists atomic_saved_TEST_ALWAYS_FLAGS] {\n+\t  set TEST_ALWAYS_FLAGS $atomic_saved_TEST_ALWAYS_FLAGS\n+\t} else {\n+\t  unset TEST_ALWAYS_FLAGS\n+\t}\n     }\n     clear_effective_target_cache\n }"}]}