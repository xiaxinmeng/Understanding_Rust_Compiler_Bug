{"sha": "5bbca03966e06a79f5dd06166f6998369256efa9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJiY2EwMzk2NmUwNmE3OWY1ZGQwNjE2NmY2OTk4MzY5MjU2ZWZhOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-05-05T06:37:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-05-05T06:37:05Z"}, "message": "re PR c++/40013 (ICE when creating a local array with size from the return value of a member function of an object in a nested class in a template class)\n\n\tPR c++/40013\n\t* pt.c (tsubst): If magic NOP_EXPR with side-effects has no type,\n\tset it from its operand's type after tsubst_expr.\n\n\t* g++.dg/ext/vla7.C: New test.\n\nFrom-SVN: r147119", "tree": {"sha": "72b24ae5789cf19e7d30d4fbc03c4a8a4c874f11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72b24ae5789cf19e7d30d4fbc03c4a8a4c874f11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bbca03966e06a79f5dd06166f6998369256efa9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bbca03966e06a79f5dd06166f6998369256efa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bbca03966e06a79f5dd06166f6998369256efa9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bbca03966e06a79f5dd06166f6998369256efa9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4fbe73ec8080aad23ad62972d7a05565ecadd0bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fbe73ec8080aad23ad62972d7a05565ecadd0bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fbe73ec8080aad23ad62972d7a05565ecadd0bc"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "808f0b01433dfc7efabb0fac4f650e51522c5b98", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bbca03966e06a79f5dd06166f6998369256efa9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bbca03966e06a79f5dd06166f6998369256efa9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5bbca03966e06a79f5dd06166f6998369256efa9", "patch": "@@ -1,3 +1,9 @@\n+2009-05-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/40013\n+\t* pt.c (tsubst): If magic NOP_EXPR with side-effects has no type,\n+\tset it from its operand's type after tsubst_expr.\n+\n 2009-05-04  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n \tPR c++/28152"}, {"sha": "adea7eb46ef3ee6ed1eb55f722872db9d3d1894d", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bbca03966e06a79f5dd06166f6998369256efa9/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bbca03966e06a79f5dd06166f6998369256efa9/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=5bbca03966e06a79f5dd06166f6998369256efa9", "patch": "@@ -9182,6 +9182,14 @@ tsubst (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \n \tmax = tsubst_expr (omax, args, complain, in_decl,\n \t\t\t   /*integral_constant_expression_p=*/false);\n+\n+\t/* Fix up type of the magic NOP_EXPR with TREE_SIDE_EFFECTS if\n+\t   needed.  */\n+\tif (TREE_CODE (max) == NOP_EXPR\n+\t    && TREE_SIDE_EFFECTS (omax)\n+\t    && !TREE_TYPE (max))\n+\t  TREE_TYPE (max) = TREE_TYPE (TREE_OPERAND (max, 0));\n+\n \tmax = fold_decl_constant_value (max);\n \n \t/* If we're in a partial instantiation, preserve the magic NOP_EXPR"}, {"sha": "bf5888a1f705cffa7a4d3dc76259decbe8e31417", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bbca03966e06a79f5dd06166f6998369256efa9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bbca03966e06a79f5dd06166f6998369256efa9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5bbca03966e06a79f5dd06166f6998369256efa9", "patch": "@@ -1,3 +1,8 @@\n+2009-05-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/40013\n+\t* g++.dg/ext/vla7.C: New test.\n+\n 2009-05-04  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/ucnid-11.c, gcc.dg/ucnid-12.c, gcc.dg/ucnid-13.c: New"}, {"sha": "5246f9c8c3887a45bdb775808473aaf50455d47f", "filename": "gcc/testsuite/g++.dg/ext/vla7.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bbca03966e06a79f5dd06166f6998369256efa9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvla7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bbca03966e06a79f5dd06166f6998369256efa9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvla7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvla7.C?ref=5bbca03966e06a79f5dd06166f6998369256efa9", "patch": "@@ -0,0 +1,30 @@\n+// PR c++/40013\n+// { dg-options \"\" }\n+\n+template <class T>\n+struct A\n+{\n+  struct B\n+  {\n+    struct\n+    {\n+      int fn () { return 0; }\n+    } b;\n+  };\n+  void test ();\n+};\n+\n+template <class T>\n+void\n+A <T>::test ()\n+{\n+  B a;\n+  int vla[a.b.fn ()];\n+}\n+\n+int\n+main ()\n+{\n+  A <char> a;\n+  a.test ();\n+}"}]}