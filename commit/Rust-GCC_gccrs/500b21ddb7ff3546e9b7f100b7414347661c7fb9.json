{"sha": "500b21ddb7ff3546e9b7f100b7414347661c7fb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTAwYjIxZGRiN2ZmMzU0NmU5YjdmMTAwYjc0MTQzNDc2NjFjN2ZiOQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-05-28T08:53:06Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-28T08:53:06Z"}, "message": "[Ada] Warning on recursive call within postcondition\n\nThis patch adds a warning to a function call that appears within a\npostcondition for said function. This may mean an omission of an attribute\nreference 'Result, and may lead to an infinite loop on a call to that function.\n\nCompiling post_error.ads must yield:\n\npost_error.ads:3:11:\n        warning: postcondition does not mention function result\npost_error.ads:3:19:\n       warning: call to \"Foo\" within its postcondition will lead\n         to infinite recursion\n----\npackage Post_Error is\n   function Foo (A : out Integer) return Integer\n     with Post => Foo (A)  /= 0;\n   pragma Import (C, Foo);\nend Post_Error;\n\n2018-05-28  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_util.adb (Is_Function_Result): Add a warning if a postcondition\n\tincludes a call to function to which it applies. This may mean an\n\tomission of an attribute reference 'Result, in particular if the\n\tfunction is pqrameterless.\n\nFrom-SVN: r260818", "tree": {"sha": "5f9b0020fa63bc8617650dcc88d3028160ca9795", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f9b0020fa63bc8617650dcc88d3028160ca9795"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/500b21ddb7ff3546e9b7f100b7414347661c7fb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/500b21ddb7ff3546e9b7f100b7414347661c7fb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/500b21ddb7ff3546e9b7f100b7414347661c7fb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/500b21ddb7ff3546e9b7f100b7414347661c7fb9/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aa76fac75101cd8694cedce1bee6a79f1f465130", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa76fac75101cd8694cedce1bee6a79f1f465130", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa76fac75101cd8694cedce1bee6a79f1f465130"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "6f08ad2efff0ee57a5ef2d3414f06808bb9c886b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/500b21ddb7ff3546e9b7f100b7414347661c7fb9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/500b21ddb7ff3546e9b7f100b7414347661c7fb9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=500b21ddb7ff3546e9b7f100b7414347661c7fb9", "patch": "@@ -1,3 +1,10 @@\n+2018-05-28  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_util.adb (Is_Function_Result): Add a warning if a postcondition\n+\tincludes a call to function to which it applies. This may mean an\n+\tomission of an attribute reference 'Result, in particular if the\n+\tfunction is pqrameterless.\n+\n 2018-05-28  Justin Squirek  <squirek@adacore.com>\n \n \t* sem_ch8.adb (Find_Expanded_Name): Add extra guard to make sure the"}, {"sha": "facacbea21353cee3da9ccc76419e481539e836c", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/500b21ddb7ff3546e9b7f100b7414347661c7fb9/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/500b21ddb7ff3546e9b7f100b7414347661c7fb9/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=500b21ddb7ff3546e9b7f100b7414347661c7fb9", "patch": "@@ -3880,6 +3880,17 @@ package body Sem_Util is\n                Result_Seen := True;\n                return Abandon;\n \n+            --  Warn on infinite recursion if call is to current function.\n+\n+            elsif Nkind (N) = N_Function_Call\n+              and then Is_Entity_Name (Name (N))\n+              and then Entity (Name (N)) = Subp_Id\n+              and then not Is_Potentially_Unevaluated (N)\n+            then\n+               Error_Msg_NE (\"call to & within its postcondition \"\n+                 & \"will lead to infinite recursion?\", N, Subp_Id);\n+               return OK;\n+\n             --  Continue the traversal\n \n             else"}]}