{"sha": "83d9978859a871cd0b3bd1d06ba01942afc88d5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNkOTk3ODg1OWE4NzFjZDBiM2JkMWQwNmJhMDE5NDJhZmM4OGQ1ZA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2001-12-21T19:47:50Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-12-21T19:47:50Z"}, "message": "re PR libgcj/2428 (Classloader is not set)\n\n\tFix for PR libgcj/2428:\n\t* java/lang/natClass.cc: Include RuntimePermission.h.\n\t(getClassLoader): Define.\n\t* java/lang/Class.h (Class.getClassLoader): Only declare.\n\nFrom-SVN: r48253", "tree": {"sha": "dea4b140529432913a02af57d2d96cd0b4b0c3b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dea4b140529432913a02af57d2d96cd0b4b0c3b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83d9978859a871cd0b3bd1d06ba01942afc88d5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83d9978859a871cd0b3bd1d06ba01942afc88d5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83d9978859a871cd0b3bd1d06ba01942afc88d5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83d9978859a871cd0b3bd1d06ba01942afc88d5d/comments", "author": null, "committer": null, "parents": [{"sha": "ef969525677f86bc8e7e188328939c5941f95b96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef969525677f86bc8e7e188328939c5941f95b96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef969525677f86bc8e7e188328939c5941f95b96"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "a9ce3528f8ce0ae0e1c0035c4e20e294a88e4cb1", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83d9978859a871cd0b3bd1d06ba01942afc88d5d/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83d9978859a871cd0b3bd1d06ba01942afc88d5d/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=83d9978859a871cd0b3bd1d06ba01942afc88d5d", "patch": "@@ -1,3 +1,10 @@\n+2001-12-21  Tom Tromey  <tromey@redhat.com>\n+\n+\tFix for PR libgcj/2428:\n+\t* java/lang/natClass.cc: Include RuntimePermission.h.\n+\t(getClassLoader): Define.\n+\t* java/lang/Class.h (Class.getClassLoader): Only declare.\n+\n 2001-12-19  Tom Tromey  <tromey@redhat.com>\n \n \t* java/awt/FlowLayout.java (FlowLayout(), FlowLayout(int)): Set"}, {"sha": "0f36f25eacf2640b1296381ed0bc32eeecabc571", "filename": "libjava/java/lang/Class.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83d9978859a871cd0b3bd1d06ba01942afc88d5d/libjava%2Fjava%2Flang%2FClass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83d9978859a871cd0b3bd1d06ba01942afc88d5d/libjava%2Fjava%2Flang%2FClass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClass.h?ref=83d9978859a871cd0b3bd1d06ba01942afc88d5d", "patch": "@@ -134,10 +134,7 @@ class java::lang::Class : public java::lang::Object\n   static jclass forName (jstring className);\n   JArray<jclass> *getClasses (void);\n \n-  java::lang::ClassLoader *getClassLoader (void)\n-    {\n-      return loader;\n-    }\n+  java::lang::ClassLoader *getClassLoader (void);\n \n   java::lang::reflect::Constructor *getConstructor (JArray<jclass> *);\n   JArray<java::lang::reflect::Constructor *> *getConstructors (void);"}, {"sha": "0e34f323eb44dc7f3af68f332fefa15a930d3e73", "filename": "libjava/java/lang/natClass.cc", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83d9978859a871cd0b3bd1d06ba01942afc88d5d/libjava%2Fjava%2Flang%2FnatClass.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83d9978859a871cd0b3bd1d06ba01942afc88d5d/libjava%2Fjava%2Flang%2FnatClass.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatClass.cc?ref=83d9978859a871cd0b3bd1d06ba01942afc88d5d", "patch": "@@ -43,6 +43,7 @@ details.  */\n #include <java/lang/NoSuchMethodException.h>\n #include <java/lang/Thread.h>\n #include <java/lang/NullPointerException.h>\n+#include <java/lang/RuntimePermission.h>\n #include <java/lang/System.h>\n #include <java/lang/SecurityManager.h>\n #include <java/lang/StringBuffer.h>\n@@ -102,6 +103,29 @@ java::lang::Class::forName (jstring className)\n   return forName (className, true, NULL);\n }\n \n+java::lang::ClassLoader *\n+java::lang::Class::getClassLoader (void)\n+{\n+#if 0\n+  // FIXME: the checks we need to do are more complex.  See the spec.\n+  // Currently we can't implement them.\n+  java::lang::SecurityManager *s = java::lang::System::getSecurityManager();\n+  if (s != NULL)\n+    s->checkPermission (new RuntimePermission (JvNewStringLatin1 (\"getClassLoader\")));\n+#endif\n+\n+  // The spec requires us to return `null' for primitive classes.  In\n+  // other cases we have the option of returning `null' for classes\n+  // loaded with the bootstrap loader.  All gcj-compiled classes which\n+  // are linked into the application used to return `null' here, but\n+  // that confuses some poorly-written applications.  It is a useful\n+  // and apparently harmless compatibility hack to simply never return\n+  // `null' instead.\n+  if (isPrimitive ())\n+    return NULL;\n+  return loader ? loader : ClassLoader::getSystemClassLoader ();\n+}\n+\n java::lang::reflect::Constructor *\n java::lang::Class::getConstructor (JArray<jclass> *param_types)\n {\n@@ -373,6 +397,8 @@ java::lang::Class::getName (void)\n JArray<jclass> *\n java::lang::Class::getClasses (void)\n {\n+  // FIXME: security checking.\n+\n   // Until we have inner classes, it always makes sense to return an\n   // empty array.\n   JArray<jclass> *result\n@@ -440,6 +466,8 @@ java::lang::Class::_getFields (JArray<java::lang::reflect::Field *> *result,\n JArray<java::lang::reflect::Field *> *\n java::lang::Class::getFields (void)\n {\n+  // FIXME: security checking.\n+\n   using namespace java::lang::reflect;\n \n   int count = _getFields (NULL, 0);"}]}