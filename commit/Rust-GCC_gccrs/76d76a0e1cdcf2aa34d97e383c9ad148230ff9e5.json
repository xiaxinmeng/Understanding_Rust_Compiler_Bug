{"sha": "76d76a0e1cdcf2aa34d97e383c9ad148230ff9e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZkNzZhMGUxY2RjZjJhYTM0ZDk3ZTM4M2M5YWQxNDgyMzBmZjllNQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-09-25T05:39:45Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-09-25T05:39:45Z"}, "message": "(movdi...\n\n(movdi, movti, movdf, movtf): Make store zero to memory\na separate case, only accept offsettable memory addresses, and call\nadj_offsettable_operand to calculate subword addresses.\n\nFrom-SVN: r2238", "tree": {"sha": "1f40bfc48b1c7dcb30c971acaeada39ec1db0e6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f40bfc48b1c7dcb30c971acaeada39ec1db0e6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76d76a0e1cdcf2aa34d97e383c9ad148230ff9e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76d76a0e1cdcf2aa34d97e383c9ad148230ff9e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76d76a0e1cdcf2aa34d97e383c9ad148230ff9e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76d76a0e1cdcf2aa34d97e383c9ad148230ff9e5/comments", "author": null, "committer": null, "parents": [{"sha": "518dd8661d71f594f65aaef3e1fdafdb921c5f8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/518dd8661d71f594f65aaef3e1fdafdb921c5f8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/518dd8661d71f594f65aaef3e1fdafdb921c5f8e"}], "stats": {"total": 48, "additions": 28, "deletions": 20}, "files": [{"sha": "4ead2cd001e4e73855cae019f6a1fee22f5f156c", "filename": "gcc/config/i960/i960.md", "status": "modified", "additions": 28, "deletions": 20, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76d76a0e1cdcf2aa34d97e383c9ad148230ff9e5/gcc%2Fconfig%2Fi960%2Fi960.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76d76a0e1cdcf2aa34d97e383c9ad148230ff9e5/gcc%2Fconfig%2Fi960%2Fi960.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fi960.md?ref=76d76a0e1cdcf2aa34d97e383c9ad148230ff9e5", "patch": "@@ -773,8 +773,8 @@\n \n ;; The store case can not be separate.  See comment above.\n (define_insn \"\"\n-  [(set (match_operand:DI 0 \"general_operand\" \"=d,d,d,m\")\n-\t(match_operand:DI 1 \"general_operand\" \"dI,i,m,dJ\"))]\n+  [(set (match_operand:DI 0 \"general_operand\" \"=d,d,d,m,o\")\n+\t(match_operand:DI 1 \"general_operand\" \"dI,i,m,d,J\"))]\n   \"current_function_args_size == 0\n    && (register_operand (operands[0], DImode)\n        || register_operand (operands[1], DImode)\n@@ -790,12 +790,13 @@\n     case 2:\n       return \\\"ldl\t%1,%0\\\";\n     case 3:\n-      if (operands[1] == const0_rtx)\n-\treturn \\\"st\tg14,%0\\;st\tg14,4(%0)\\\";\n       return \\\"stl\t%1,%0\\\";\n+    case 4:\n+      operands[1] = adj_offsettable_operand (operands[0], 4);\n+      return \\\"st\tg14,%0\\;st\tg14,%1\\\";\n     }\n }\"\n-  [(set_attr \"type\" \"move,load,load,store\")])\n+  [(set_attr \"type\" \"move,load,load,store,store\")])\n \n ;; The store case can not be separate.  See comment above.\n (define_insn \"\"\n@@ -832,8 +833,8 @@\n \n ;; The store case can not be separate.  See comment above.\n (define_insn \"\"\n-  [(set (match_operand:TI 0 \"general_operand\" \"=d,d,d,m\")\n-\t(match_operand:TI 1 \"general_operand\" \"dI,i,m,dJ\"))]\n+  [(set (match_operand:TI 0 \"general_operand\" \"=d,d,d,m,o\")\n+\t(match_operand:TI 1 \"general_operand\" \"dI,i,m,d,J\"))]\n   \"current_function_args_size == 0\n    && (register_operand (operands[0], TImode)\n        || register_operand (operands[1], TImode)\n@@ -849,12 +850,15 @@\n     case 2:\n       return \\\"ldq\t%1,%0\\\";\n     case 3:\n-      if (operands[1] == const0_rtx)\n-\treturn \\\"st\tg14,%0\\;st\tg14,4(%0)\\;st\tg14,8(%0)\\;st\tg14,12(%0)\\\";\n       return \\\"stq\t%1,%0\\\";\n+    case 4:\n+      operands[1] = adj_offsettable_operand (operands[0], 4);\n+      operands[2] = adj_offsettable_operand (operands[0], 8);\n+      operands[3] = adj_offsettable_operand (operands[0], 12);\n+      return \\\"st\tg14,%0\\;st\tg14,%1\\;st\tg14,%2\\;st\tg14,%3\\\";\n     }\n }\"\n-  [(set_attr \"type\" \"move,load,load,store\")])\n+  [(set_attr \"type\" \"move,load,load,store,store\")])\n \n ;; The store case can not be separate.  See comment above.\n (define_insn \"\"\n@@ -945,8 +949,8 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"general_operand\" \"=r,f,d,d,m\")\n-\t(match_operand:DF 1 \"fpmove_src_operand\" \"r,GH,F,m,dG\"))]\n+  [(set (match_operand:DF 0 \"general_operand\" \"=r,f,d,d,m,o\")\n+\t(match_operand:DF 1 \"fpmove_src_operand\" \"r,GH,F,m,d,G\"))]\n   \"current_function_args_size == 0\n    && (register_operand (operands[0], DFmode)\n        || register_operand (operands[1], DFmode)\n@@ -967,12 +971,13 @@\n     case 3:\n       return \\\"ldl\t%1,%0\\\";\n     case 4:\n-      if (operands[1] == CONST0_RTX (DFmode))\n-\treturn \\\"st\tg14,%0\\;st\tg14,4(%0)\\\";\n       return \\\"stl\t%1,%0\\\";\n+    case 5:\n+      operands[1] = adj_offsettable_operand (operands[0], 4);\n+      return \\\"st\tg14,%0\\;st\tg14,%1\\\";\n     }\n }\"\n-  [(set_attr \"type\" \"move,move,load,fpload,fpstore\")])\n+  [(set_attr \"type\" \"move,move,load,fpload,fpstore,fpstore\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"general_operand\" \"=r,f,d,d,m\")\n@@ -1856,8 +1861,8 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:TF 0 \"general_operand\" \"=r,f,d,d,m\")\n-\t(match_operand:TF 1 \"fpmove_src_operand\" \"r,GH,F,m,dG\"))]\n+  [(set (match_operand:TF 0 \"general_operand\" \"=r,f,d,d,m,o\")\n+\t(match_operand:TF 1 \"fpmove_src_operand\" \"r,GH,F,m,d,G\"))]\n   \"current_function_args_size == 0\n    && (register_operand (operands[0], TFmode)\n        || register_operand (operands[1], TFmode)\n@@ -1878,12 +1883,15 @@\n     case 3:\n       return \\\"ldq\t%1,%0\\\";\n     case 4:\n-      if (operands[1] == CONST0_RTX (TFmode))\n-\treturn \\\"st\tg14,%0\\;st\tg14,4(%0)\\;st\tg14,8(%0)\\;st\tg14,12(%0)\\\";\n       return \\\"stq\t%1,%0\\\";\n+    case 5:\n+      operands[1] = adj_offsettable_operand (operands[0], 4);\n+      operands[2] = adj_offsettable_operand (operands[0], 8);\n+      operands[3] = adj_offsettable_operand (operands[0], 12);\n+      return \\\"st\tg14,%0\\;st\tg14,%1\\;st\tg14,%2\\;st\tg14,%3\\\";\n     }\n }\"\n-  [(set_attr \"type\" \"move,move,load,fpload,fpstore\")])\n+  [(set_attr \"type\" \"move,move,load,fpload,fpstore,fpstore\")])\n \n (define_insn \"\"\n   [(set (match_operand:TF 0 \"general_operand\" \"=r,f,d,d,m\")"}]}