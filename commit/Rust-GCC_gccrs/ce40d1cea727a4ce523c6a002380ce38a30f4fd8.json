{"sha": "ce40d1cea727a4ce523c6a002380ce38a30f4fd8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U0MGQxY2VhNzI3YTRjZTUyM2M2YTAwMjM4MGNlMzhhMzBmNGZkOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2012-03-20T10:00:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-03-20T10:00:00Z"}, "message": "hlo.ads, hlo.adb: Removed, no longer used.\n\n2012-03-20  Arnaud Charlet  <charlet@adacore.com>\n\n\t* hlo.ads, hlo.adb: Removed, no longer used.\n\t* gcc-interface/Make-lang.in: Remove hlo.o. Update dependencies.\n\t* gcc-interface/Makefile.in: Remove EXTRA_LIBGNAT_SRCS (temporarly)\n\tand compute it from EXTRA_LIBGNAT_OBJS.\n\tClean up comments, reorder LIBGNAT_SRCS and LIBGNAT_OBJS.\n\nFrom-SVN: r185565", "tree": {"sha": "1d4ab5ba8dd02ebf3ed30e2759216d2983b3232f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d4ab5ba8dd02ebf3ed30e2759216d2983b3232f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce40d1cea727a4ce523c6a002380ce38a30f4fd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce40d1cea727a4ce523c6a002380ce38a30f4fd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce40d1cea727a4ce523c6a002380ce38a30f4fd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce40d1cea727a4ce523c6a002380ce38a30f4fd8/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dac1fbf86ef1fa930f1edda9a19d1fb5242572a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dac1fbf86ef1fa930f1edda9a19d1fb5242572a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dac1fbf86ef1fa930f1edda9a19d1fb5242572a0"}], "stats": {"total": 2230, "additions": 1097, "deletions": 1133}, "files": [{"sha": "7281c08eac961d9e39e5de532a2565b8fa59058f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce40d1cea727a4ce523c6a002380ce38a30f4fd8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce40d1cea727a4ce523c6a002380ce38a30f4fd8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ce40d1cea727a4ce523c6a002380ce38a30f4fd8", "patch": "@@ -1,3 +1,11 @@\n+2012-03-20  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* hlo.ads, hlo.adb: Removed, no longer used.\n+\t* gcc-interface/Make-lang.in: Remove hlo.o. Update dependencies.\n+\t* gcc-interface/Makefile.in: Remove EXTRA_LIBGNAT_SRCS (temporarly)\n+\tand compute it from EXTRA_LIBGNAT_OBJS.\n+\tClean up comments, reorder LIBGNAT_SRCS and LIBGNAT_OBJS.\n+\n 2012-03-20  Yannick Moy  <moy@adacore.com>\n \n \t* gnat_rm.texi, sem_attr.ads: Update documentation."}, {"sha": "0ce3f98bec758e384b4bb79125bb205f8598bc7b", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 977, "deletions": 1003, "changes": 1980, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce40d1cea727a4ce523c6a002380ce38a30f4fd8/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce40d1cea727a4ce523c6a002380ce38a30f4fd8/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=ce40d1cea727a4ce523c6a002380ce38a30f4fd8"}, {"sha": "9991405e3cce02cc8ac1ea17058d066e9ad7a556", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 112, "deletions": 51, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce40d1cea727a4ce523c6a002380ce38a30f4fd8/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce40d1cea727a4ce523c6a002380ce38a30f4fd8/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=ce40d1cea727a4ce523c6a002380ce38a30f4fd8", "patch": "@@ -443,10 +443,17 @@ X86_64_TARGET_PAIRS = \\\n \n LIB_VERSION = $(strip $(shell grep ' Library_Version :' $(fsrcpfx)ada/gnatvsn.ads | sed -e 's/.*\"\\(.*\\)\".*/\\1/'))\n \n+# Additionnal object files from C source to be added to libgnat.\n+EXTRA_LIBGNAT_OBJS=\n+# Additionnal C source file to be added to libgnat without corresponding object\n+# file (included files).\n+EXTRA_LIBGNAT_SRCS=\n+\n # $(filter-out PATTERN...,TEXT) removes all PATTERN words from TEXT.\n # $(strip STRING) removes leading and trailing spaces from STRING.\n # If what's left is null then it's a match.\n \n+# m68k VxWorks\n ifeq ($(strip $(filter-out m68k% wrs vx%,$(targ))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n@@ -477,7 +484,6 @@ ifeq ($(strip $(filter-out m68k% wrs vx%,$(targ))),)\n   EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o s-vxwext.o\n \n-  EXTRA_LIBGNAT_SRCS+=vx_stack_info.c\n   EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n \n   ifeq ($(strip $(filter-out yes,$(TRACE))),)\n@@ -490,6 +496,7 @@ ifeq ($(strip $(filter-out m68k% wrs vx%,$(targ))),)\n   endif\n endif\n \n+# PowerPC and e500v2 VxWorks\n ifeq ($(strip $(filter-out e500% powerpc% wrs vxworks,$(targ))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n@@ -546,7 +553,6 @@ ifeq ($(strip $(filter-out e500% powerpc% wrs vxworks,$(targ))),)\n \n       EXTRA_GNATRTL_NONTASKING_OBJS=s-vxwexc.o\n       EXTRA_LIBGNAT_OBJS+=affinity.o\n-      EXTRA_LIBGNAT_SRCS+=affinity.c\n     else\n       ifeq ($(strip $(filter-out kernel-smp,$(THREAD_KIND))),)\n         LIBGNAT_TARGET_PAIRS += \\\n@@ -559,7 +565,6 @@ ifeq ($(strip $(filter-out e500% powerpc% wrs vxworks,$(targ))),)\n \n         EH_MECHANISM=-gcc\n         EXTRA_LIBGNAT_OBJS+=affinity.o\n-        EXTRA_LIBGNAT_SRCS+=affinity.c\n       else\n         LIBGNAT_TARGET_PAIRS += \\\n         s-interr.adb<s-interr-hwint.adb \\\n@@ -578,17 +583,15 @@ ifeq ($(strip $(filter-out e500% powerpc% wrs vxworks,$(targ))),)\n       endif\n       EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o s-vxwexc.o\n       EXTRA_LIBGNAT_OBJS+=sigtramp-ppcvxw.o\n-      EXTRA_LIBGNAT_SRCS+=sigtramp-ppcvxw.c\n     endif\n   endif\n \n   EXTRA_GNATRTL_TASKING_OBJS += s-vxwork.o s-vxwext.o\n \n-  EXTRA_LIBGNAT_SRCS+=vx_stack_info.c\n   EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n endif\n \n-# vxworks 653\n+# PowerPC and e500v2 VxWorks 653\n ifeq ($(strip $(filter-out powerpc% e500v2 wrs vxworksae,$(targ))),)\n   # target pairs for vthreads runtime\n   LIBGNAT_TARGET_PAIRS = \\\n@@ -623,7 +626,6 @@ ifeq ($(strip $(filter-out powerpc% e500v2 wrs vxworksae,$(targ))),)\n   EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o s-vxwexc.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o s-vxwext.o\n \n-  EXTRA_LIBGNAT_SRCS+=sigtramp-ppcvxw.c\n   EXTRA_LIBGNAT_OBJS+=sigtramp-ppcvxw.o\n \n   # Extra pairs for the vthreads runtime\n@@ -651,7 +653,7 @@ ifeq ($(strip $(filter-out powerpc% e500v2 wrs vxworksae,$(targ))),)\n   endif\n endif\n \n-# vxworks MILS\n+# PowerPC and e500v2 VxWorks MILS\n ifeq ($(strip $(filter-out e500% powerpc% wrs vxworksmils,$(targ))),)\n   # target pairs for vthreads runtime\n   LIBGNAT_TARGET_PAIRS = \\\n@@ -688,7 +690,6 @@ ifeq ($(strip $(filter-out e500% powerpc% wrs vxworksmils,$(targ))),)\n   EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o s-thread.o s-vxwexc.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o s-vxwext.o\n \n-  EXTRA_LIBGNAT_SRCS+=vx_stack_info.c sigtramp-ppcvxw.c\n   EXTRA_LIBGNAT_OBJS+=vx_stack_info.o sigtramp-ppcvxw.o\n   GNATRTL_SOCKETS_OBJS =\n \n@@ -702,7 +703,7 @@ ifeq ($(strip $(filter-out e500% powerpc% wrs vxworksmils,$(targ))),)\n   endif\n endif\n \n-# vxworksae / vxworks 653 for x86 (vxsim) - ?? vxworksmils not implemented\n+# VxWorksae / VxWorks 653 for x86 (vxsim) - ?? VxWorks mils not implemented\n ifeq ($(strip $(filter-out %86 wrs vxworksae vxworksmils,$(targ))),)\n   # target pairs for kernel + vthreads runtime\n   LIBGNAT_TARGET_PAIRS = \\\n@@ -762,6 +763,7 @@ ifeq ($(strip $(filter-out %86 wrs vxworksae vxworksmils,$(targ))),)\n   endif\n endif\n \n+# Sparc VxWorks\n ifeq ($(strip $(filter-out sparc% wrs vx%,$(targ))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n@@ -794,10 +796,10 @@ ifeq ($(strip $(filter-out sparc% wrs vx%,$(targ))),)\n   EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o s-vxwext.o\n \n-  EXTRA_LIBGNAT_SRCS+=vx_stack_info.c\n   EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n endif\n \n+# x86 VxWorks\n ifeq ($(strip $(filter-out %86 wrs vxworks,$(targ))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n@@ -854,7 +856,6 @@ ifeq ($(strip $(filter-out %86 wrs vxworks,$(targ))),)\n \n       EXTRA_GNATRTL_NONTASKING_OBJS=s-vxwexc.o\n       EXTRA_LIBGNAT_OBJS+=affinity.o\n-      EXTRA_LIBGNAT_SRCS+=affinity.c\n     else\n       ifeq ($(strip $(filter-out kernel-smp, $(THREAD_KIND))),)\n         LIBGNAT_TARGET_PAIRS += \\\n@@ -865,7 +866,6 @@ ifeq ($(strip $(filter-out %86 wrs vxworks,$(targ))),)\n         s-vxwext.adb<s-vxwext-kernel-smp.adb \\\n         system.ads<system-vxworks-x86-kernel.ads\n         EXTRA_LIBGNAT_OBJS+=affinity.o\n-        EXTRA_LIBGNAT_SRCS+=affinity.c\n       else\n         LIBGNAT_TARGET_PAIRS += \\\n         s-interr.adb<s-interr-hwint.adb \\\n@@ -887,10 +887,10 @@ ifeq ($(strip $(filter-out %86 wrs vxworks,$(targ))),)\n   endif\n   EXTRA_GNATRTL_TASKING_OBJS += s-vxwork.o s-vxwext.o\n \n-  EXTRA_LIBGNAT_SRCS+=vx_stack_info.c\n   EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n endif\n \n+# ARM VxWorks\n ifeq ($(strip $(filter-out arm% coff wrs vx%,$(targ))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n@@ -923,10 +923,10 @@ ifeq ($(strip $(filter-out arm% coff wrs vx%,$(targ))),)\n   EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o s-vxwext.o\n \n-  EXTRA_LIBGNAT_SRCS+=vx_stack_info.c\n   EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n endif\n \n+# MIPS VxWorks\n ifeq ($(strip $(filter-out mips% wrs vx%,$(targ))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n@@ -959,10 +959,10 @@ ifeq ($(strip $(filter-out mips% wrs vx%,$(targ))),)\n   EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o s-vxwext.o\n \n-  EXTRA_LIBGNAT_SRCS+=vx_stack_info.c\n   EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n endif\n \n+# Sparc Solaris\n ifeq ($(strip $(filter-out sparc% sun solaris%,$(targ))),)\n   LIBGNAT_TARGET_PAIRS_COMMON = \\\n   a-intnam.ads<a-intnam-solaris.ads \\\n@@ -1037,6 +1037,7 @@ ifeq ($(strip $(filter-out sparc% sun solaris%,$(targ))),)\n   endif\n endif\n \n+# x86 and x86-64 solaris\n ifeq ($(strip $(filter-out %86 %x86_64 solaris2%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS_COMMON = \\\n   a-intnam.ads<a-intnam-solaris.ads \\\n@@ -1091,6 +1092,7 @@ ifeq ($(strip $(filter-out %86 %x86_64 solaris2%,$(arch) $(osys))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n+# x86 Linux\n ifeq ($(strip $(filter-out %86 linux%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n@@ -1151,6 +1153,7 @@ ifeq ($(strip $(filter-out %86 linux%,$(arch) $(osys))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n+# x86 kfreebsd\n ifeq ($(strip $(filter-out %86 kfreebsd%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-freebsd.ads \\\n@@ -1208,6 +1211,7 @@ ifeq ($(strip $(filter-out x86_64 kfreebsd%,$(arch) $(osys))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n+# x86 FreeBSD\n ifeq ($(strip $(filter-out %86 freebsd%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-freebsd.ads \\\n@@ -1234,6 +1238,7 @@ ifeq ($(strip $(filter-out %86 freebsd%,$(arch) $(osys))),)\n   MISCLIB = -lutil\n endif\n \n+# x86-64 FreeBSD\n ifeq ($(strip $(filter-out %86_64 freebsd%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-freebsd.ads \\\n@@ -1261,6 +1266,7 @@ ifeq ($(strip $(filter-out %86_64 freebsd%,$(arch) $(osys))),)\n   MISCLIB = -lutil\n endif\n \n+# S390 Linux\n ifeq ($(strip $(filter-out s390% linux%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS_COMMON = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n@@ -1306,6 +1312,7 @@ ifeq ($(strip $(filter-out s390% linux%,$(arch) $(osys))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n+# HP/PA HP-UX 10\n ifeq ($(strip $(filter-out hppa% hp hpux10%,$(targ))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-excpol.adb<a-excpol-abort.adb \\\n@@ -1325,6 +1332,7 @@ ifeq ($(strip $(filter-out hppa% hp hpux10%,$(targ))),)\n   EH_MECHANISM=-gcc\n endif\n \n+# HP/PA HP-UX 11\n ifeq ($(strip $(filter-out hppa% hp hpux11%,$(targ))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-hpux.ads \\\n@@ -1351,6 +1359,7 @@ ifeq ($(strip $(filter-out hppa% hp hpux11%,$(targ))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n+# IBM AIX\n ifeq ($(strip $(filter-out ibm aix%,$(manu) $(osys))),)\n   LIBGNAT_TARGET_PAIRS_COMMON = \\\n   a-intnam.ads<a-intnam-aix.ads \\\n@@ -1394,6 +1403,7 @@ ifeq ($(strip $(filter-out ibm aix%,$(manu) $(osys))),)\n   GMEM_LIB = gmemlib\n endif\n \n+# RTEMS\n ifeq ($(strip $(filter-out rtems%,$(osys))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   system.ads<system-rtems.ads \\\n@@ -1411,6 +1421,7 @@ ifeq ($(strip $(filter-out rtems%,$(osys))),)\n   s-interr.adb<s-interr-hwint.adb\n endif\n \n+# OpenVMS (host)\n ifeq ($(strip $(filter-out alpha64 ia64 dec hp vms% openvms% alphavms%,$(host))),)\n \n soext  = .exe\n@@ -1420,6 +1431,7 @@ LN_S = cp -p\n \n endif\n \n+# OpenVMS (target)\n ifeq ($(strip $(filter-out alpha64 ia64 dec hp vms% openvms% alphavms%,$(targ))),)\n   LIBGNAT_TARGET_PAIRS = \\\n     a-caldel.adb<a-caldel-vms.adb \\\n@@ -1466,6 +1478,8 @@ ifeq ($(strip $(filter-out alpha64 ia64 dec hp vms% openvms% alphavms%,$(targ)))\n       $(ATOMICS_TARGET_PAIRS) \\\n       $(ATOMICS_BUILTINS_TARGET_PAIRS)\n \n+    EXTRA_LIBGNAT_SRCS+=tb-ivms.c\n+\n     TOOLS_TARGET_PAIRS= \\\n       mlib-tgt-specific.adb<mlib-tgt-specific-vms-ia64.adb \\\n       symbols.adb<symbols-vms.adb \\\n@@ -1485,6 +1499,8 @@ ifeq ($(strip $(filter-out alpha64 ia64 dec hp vms% openvms% alphavms%,$(targ)))\n         $(ATOMICS_TARGET_PAIRS) \\\n         $(ATOMICS_BUILTINS_TARGET_PAIRS)\n \n+    EXTRA_LIBGNAT_SRCS+=tb-alvms.c\n+\n     TOOLS_TARGET_PAIRS= \\\n       mlib-tgt-specific.adb<mlib-tgt-specific-vms-alpha.adb \\\n       symbols.adb<symbols-vms.adb \\\n@@ -1507,12 +1523,14 @@ ifeq ($(strip $(filter-out alpha64 ia64 dec hp vms% openvms% alphavms%,$(targ)))\n   LIBRARY_VERSION := $(subst .,_,$(LIB_VERSION))\n endif\n \n+# *-elf\n ifeq ($(strip $(filter-out avr none powerpc% eabispe leon% erc32% unknown elf,$(targ))),)\n   TOOLS_TARGET_PAIRS=\\\n   mlib-tgt-specific.adb<mlib-tgt-specific-xi.adb \\\n   indepsw.adb<indepsw-gnu.adb\n endif\n \n+# Cygwin/Mingw32\n ifeq ($(strip $(filter-out cygwin% mingw32% pe,$(osys))),)\n   # Cygwin provides a full Posix environment, and so we use the default\n   # versions of s-memory and g-socthi rather than the Windows-specific\n@@ -1631,6 +1649,7 @@ ifeq ($(strip $(filter-out cygwin% mingw32% pe,$(osys))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n+# Mips Linux\n ifeq ($(strip $(filter-out mips linux%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n@@ -1654,6 +1673,7 @@ ifeq ($(strip $(filter-out mips linux%,$(arch) $(osys))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n+# Mips/el Linux\n ifeq ($(strip $(filter-out mipsel linux%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS_COMMON = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n@@ -1696,6 +1716,7 @@ ifeq ($(strip $(filter-out mipsel linux%,$(arch) $(osys))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n+# Mips64/el Linux\n ifeq ($(strip $(filter-out mips64el linux%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS_COMMON = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n@@ -1738,7 +1759,8 @@ ifeq ($(strip $(filter-out mips64el linux%,$(arch) $(osys))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n-ifeq ($(strip $(filter-out powerpc% linux%,$(arch) $(osys))),)\n+# PowerPC and e500v2 Linux\n+ifeq ($(strip $(filter-out powerpc% e500% linux%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS_COMMON = \\\n   a-exetim.adb<a-exetim-posix.adb \\\n   a-exetim.ads<a-exetim-default.ads \\\n@@ -1836,6 +1858,7 @@ ifeq ($(strip $(filter-out arm% linux-gnueabi,$(arch) $(osys)-$(word 4,$(targ)))\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n+# Sparc Linux\n ifeq ($(strip $(filter-out sparc% linux%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS_COMMON = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n@@ -1877,6 +1900,7 @@ ifeq ($(strip $(filter-out sparc% linux%,$(arch) $(osys))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n+# HP/PA Linux\n ifeq ($(strip $(filter-out hppa% linux%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n@@ -1905,6 +1929,7 @@ ifeq ($(strip $(filter-out hppa% linux%,$(arch) $(osys))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n+# SH4 Linux\n ifeq ($(strip $(filter-out sh4% linux%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n@@ -1934,6 +1959,7 @@ ifeq ($(strip $(filter-out sh4% linux%,$(arch) $(osys))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n+# IA64 Linux\n ifeq ($(strip $(filter-out %ia64 linux%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-exetim.adb<a-exetim-posix.adb \\\n@@ -1972,6 +1998,7 @@ ifeq ($(strip $(filter-out %ia64 linux%,$(arch) $(osys))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n+# IA64 HP-UX\n ifeq ($(strip $(filter-out ia64% hp hpux%,$(targ))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-hpux.ads \\\n@@ -1999,6 +2026,7 @@ ifeq ($(strip $(filter-out ia64% hp hpux%,$(targ))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n+# Alpha Linux\n ifeq ($(strip $(filter-out alpha% linux%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n@@ -2029,6 +2057,7 @@ ifeq ($(strip $(filter-out alpha% linux%,$(arch) $(osys))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n+# x86-64 Linux\n ifeq ($(strip $(filter-out %x86_64 linux%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-exetim.adb<a-exetim-posix.adb \\\n@@ -2103,6 +2132,7 @@ ifeq ($(strip $(filter-out %x32 linux%,$(arch) $(osys))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n+# Darwin (Mac OS X)\n ifeq ($(strip $(filter-out darwin%,$(osys))),)\n   SO_OPTS = -shared-libgcc\n   LIBGNAT_TARGET_PAIRS = \\\n@@ -2179,9 +2209,29 @@ ifeq ($(strip $(filter-out darwin%,$(osys))),)\n   GCC_LINK_FLAGS=\n endif\n \n+# ARM Nucleus\n+ifeq ($(strip $(filter-out arm nucleus%,$(arch) $(osys))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  system.ads<system-nucleus-arm.ads \\\n+  a-numaux.ads<a-numaux-vxworks.ads \\\n+  a-intnam.ads<a-intnam-nucleus.ads \\\n+  s-inmaop.adb<s-inmaop-posix.adb \\\n+  s-intman.adb<s-intman-posix.adb \\\n+  s-osinte.ads<s-osinte-nucleus.ads \\\n+  s-osinte.adb<s-osinte-nucleus.adb \\\n+  s-osprim.adb<s-osprim-nucleus.adb \\\n+  s-parame.adb<s-parame-vxworks.adb \\\n+  s-taprop.adb<s-taprop-posix.adb \\\n+  s-taspri.ads<s-taspri-posix.ads \\\n+  s-tpopsp.adb<s-tpopsp-posix.adb \\\n+  $(DUMMY_SOCKETS_TARGET_PAIRS)\n+\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+  GNATRTL_SOCKETS_OBJS =\n+endif\n+\n ifneq ($(EH_MECHANISM),)\n   LIBGNAT_TARGET_PAIRS += a-exexpr.adb<a-exexpr$(EH_MECHANISM).adb\n-  EXTRA_LIBGNAT_SRCS+=raise$(EH_MECHANISM).c\n   EXTRA_LIBGNAT_OBJS+=raise$(EH_MECHANISM).o\n endif\n \n@@ -2197,49 +2247,66 @@ ifeq ($(filter a-except%,$(LIBGNAT_TARGET_PAIRS)),)\n     a-except.adb<a-except-2005.adb\n endif\n \n-# The runtime library for gnat comprises two directories.  One contains the\n-# Ada source files that the compiler (gnat1) needs -- these files are listed\n-# by ADA_INCLUDE_SRCS -- and the other contains the object files and their\n-# corresponding .ali files for the parts written in Ada, libgnat.a for\n-# the parts of the runtime written in C, and libgthreads.a for the pthreads\n-# emulation library.  LIBGNAT_OBJS lists the objects that go into libgnat.a,\n-# while GNATRTL_OBJS lists the object files compiled from Ada sources that\n-# go into the directory.  The pthreads emulation is built in the threads\n-# subdirectory and copied.\n-LIBGNAT_SRCS = adadecode.c adadecode.h adaint.c adaint.h\t\\\n-  argv.c cio.c cstreams.c errno.c exit.c cal.c ctrl_c.c env.c env.h\t\\\n-  arit64.c raise.h raise.c sysdep.c aux-io.c init.c initialize.c\t\\\n-  locales.c seh_init.c final.c tracebak.c tb-alvms.c tb-alvxw.c         \\\n-  tb-gcc.c expect.c mkdir.c socket.c gsocket.h targext.c terminals.c\t\\\n-  thread.c $(EXTRA_LIBGNAT_SRCS)\n-\n-LIBGNAT_OBJS = adadecode.o adaint.o argv.o cio.o cstreams.o ctrl_c.o\t\\\n-  errno.o exit.o env.o raise.o sysdep.o aux-io.o init.o initialize.o\t\\\n-  locales.o seh_init.o cal.o arit64.o final.o tracebak.o expect.o       \\\n-  mkdir.o socket.o targext.o terminals.o $(EXTRA_LIBGNAT_OBJS)\n+# LIBGNAT_SRCS is the list of all C files (including headers) of the runtime\n+# library.  LIBGNAT_OBJS is the list of object files for libgnat.\n+# thread.c is special as put into GNATRTL_TASKING_OBJS by Makefile.rtl\n+LIBGNAT_OBJS = adadecode.o adaint.o argv.o arit64.o aux-io.o \t\t\\\n+  cal.o cio.o cstreams.o ctrl_c.o\t\t\t\t\t\\\n+  env.o errno.o exit.o expect.o final.o \t\t\t\t\\\n+  init.o initialize.o locales.o mkdir.o\t\t\t\t\t\\\n+  raise.o seh_init.o socket.o sysdep.o\t\t\t\t\t\\\n+  targext.o terminals.o tracebak.o \t\t\t\t\t\\\n+  $(EXTRA_LIBGNAT_OBJS)\n \n # NOTE ??? - when the -I option for compiling Ada code is made to work,\n #  the library installation will change and there will be a\n #  GNAT_RTL_SRCS.  Right now we count on being able to build GNATRTL_OBJS\n #  from ADA_INCLUDE_SRCS.\n \n+LIBGNAT_SRCS = $(patsubst %.o,%.c,$(LIBGNAT_OBJS))\t\t\t\\\n+  adadecode.h adaint.h env.h gsocket.h raise.h\t\t\t\t\\\n+  tb-gcc.c thread.c $(EXTRA_LIBGNAT_SRCS)\n+\n # GNATRTL_NONTASKING_OBJS and GNATRTL_TASKING_OBJS can be found in\n # the following include file:\n \n include $(fsrcdir)/ada/Makefile.rtl\n \n+# memtrack.o is special as not put into libgnat.\n GNATRTL_OBJS = $(GNATRTL_NONTASKING_OBJS) $(GNATRTL_TASKING_OBJS) \\\n   memtrack.o\n \n-# Default run time files\n-\n+# Run time source files\n ADA_INCLUDE_SRCS =\\\n  ada.ads calendar.ads directio.ads gnat.ads interfac.ads ioexcept.ads \\\n  machcode.ads text_io.ads unchconv.ads unchdeal.ads \\\n  sequenio.ads system.ads memtrack.adb \\\n  a-[a-o]*.adb a-[p-z]*.adb a-[a-o]*.ads a-[p-z]*.ads g-*.ad? i-*.ad? \\\n  s-[a-o]*.adb s-[p-z]*.adb s-[a-o]*.ads s-[p-z]*.ads\n \n+# Files that are in ADA_INCLUDE_SRCS but not in all configurations.\n+# They will be removed from the run time if not used.\n+ADA_EXCLUDE_SRCS =\\\n+  s-bb.ads \\\n+  s-bbbosu.ads s-bbcaco.ads s-bbcppr.ads s-bbexti.adb s-bbexti.ads \\\n+  s-bbinte.adb s-bbinte.ads s-bbprot.adb s-bbprot.ads s-bbsle3.ads \\\n+  s-bbsuer.ads s-bbsule.ads s-bbthqu.adb s-bbthqu.ads s-bbthre.adb \\\n+  s-bbthre.ads s-bbtiev.adb s-bbtiev.ads s-bbtime.adb s-bbtime.ads \\\n+  s-bcprmu.adb s-bcprmu.ads s-btstch.adb s-btstch.ads \\\n+  s-po32gl.adb s-po32gl.ads \\\n+  s-stache.adb s-stache.ads \\\n+  s-thread.ads \\\n+  s-vxwexc.adb s-vxwexc.ads s-vxwext.adb s-vxwext.ads \\\n+  s-win32.ads  s-winext.ads \\\n+  g-regist.adb g-regist.ads g-sse.ads    g-ssvety.ads \\\n+  i-vxwoio.adb i-vxwoio.ads i-vxwork.ads\n+\n+# ADA_EXCLUDE_SRCS without the sources used by the target\n+ADA_EXCLUDE_FILES=$(filter-out \\\n+  $(patsubst %$(objext),%.ads,$(GNATRTL_OBJS)) \\\n+  $(patsubst %$(objext),%.adb,$(GNATRTL_OBJS)), \\\n+  $(ADA_EXCLUDE_SRCS))\n+\n LIBGNAT=../$(RTSDIR)/libgnat.a\n \n TOOLS_FLAGS_TO_PASS=\t\t\\\n@@ -2462,22 +2529,15 @@ install-gnatlib: ../stamp-gnatlib-$(RTSDIR)\n \ttouch ../stamp-gnatlib2-$(RTSDIR)\n \t$(RM) ../stamp-gnatlib-$(RTSDIR)\n \n-# NOTE: The $(foreach ...) commands assume \";\" is the valid separator between\n-#       successive target commands. Although the Gnu make documentation\n-#       implies this is true on all systems, I suspect it may not be, So care\n-#       has been taken to allow a sed script to look for \";)\" and substitue\n-#       for \";\" the appropriate character in the range of lines below\n-#       beginning with \"GNULLI Begin\" and ending with \"GNULLI End\"\n-\n-# GNULLI Begin ###########################################################\n-\n ../stamp-gnatlib1-$(RTSDIR): Makefile ../stamp-gnatlib2-$(RTSDIR)\n \t$(RMDIR) $(RTSDIR)\n \t$(MKDIR) $(RTSDIR)\n \t$(CHMOD) u+w $(RTSDIR)\n # Copy target independent sources\n \t$(foreach f,$(ADA_INCLUDE_SRCS) $(LIBGNAT_SRCS), \\\n \t  $(LN_S) $(fsrcpfx)ada/$(f) $(RTSDIR) ;) true\n+# Remove files not used\n+\t$(RM) $(patsubst %,$(RTSDIR)/%,$(ADA_EXCLUDE_FILES))\n # Remove files to be replaced by target dependent sources\n \t$(RM) $(foreach PAIR,$(LIBGNAT_TARGET_PAIRS), \\\n \t                $(RTSDIR)/$(word 1,$(subst <, ,$(PAIR))))\n@@ -2537,6 +2597,7 @@ $(RTSDIR)/s-oscons.ads: ../stamp-gnatlib1-$(RTSDIR) s-oscons-tmplt.c gsocket.h .\n # is guaranteed to overflow the buffer.\n \n gnatlib: ../stamp-gnatlib1-$(RTSDIR) ../stamp-gnatlib2-$(RTSDIR) $(RTSDIR)/s-oscons.ads\n+# C files\n \t$(MAKE) -C $(RTSDIR) \\\n \t\tCC=\"`echo \\\"$(GCC_FOR_TARGET)\\\" \\\n \t\t| sed -e 's,\\./xgcc,../../xgcc,' -e 's,-B\\./,-B../../,'`\" \\\n@@ -2545,6 +2606,7 @@ gnatlib: ../stamp-gnatlib1-$(RTSDIR) ../stamp-gnatlib2-$(RTSDIR) $(RTSDIR)/s-osc\n \t        FORCE_DEBUG_ADAFLAGS=\"$(FORCE_DEBUG_ADAFLAGS)\" \\\n \t\tsrcdir=$(fsrcdir) \\\n \t        -f ../Makefile $(LIBGNAT_OBJS)\n+# Ada files\n \t$(MAKE) -C $(RTSDIR) \\\n \t\tCC=\"`echo \\\"$(GCC_FOR_TARGET)\\\" \\\n \t\t| sed -e 's,\\./xgcc,../../xgcc,' -e 's,-B\\./,-B../../,'`\" \\\n@@ -2553,8 +2615,7 @@ gnatlib: ../stamp-gnatlib1-$(RTSDIR) ../stamp-gnatlib2-$(RTSDIR) $(RTSDIR)/s-osc\n \t        ADAFLAGS=\"$(GNATLIBFLAGS)\" \\\n \t        FORCE_DEBUG_ADAFLAGS=\"$(FORCE_DEBUG_ADAFLAGS)\" \\\n \t\tsrcdir=$(fsrcdir) \\\n-\t        -f ../Makefile \\\n-\t        $(GNATRTL_OBJS)\n+\t        -f ../Makefile $(GNATRTL_OBJS)\n \t$(RM) $(RTSDIR)/libgnat$(arext) $(RTSDIR)/libgnarl$(arext)\n \t$(AR_FOR_TARGET) $(AR_FLAGS) $(RTSDIR)/libgnat$(arext) \\\n \t   $(addprefix $(RTSDIR)/,$(GNATRTL_NONTASKING_OBJS) $(LIBGNAT_OBJS))"}, {"sha": "edbc4dae9682bc989e958366261342a610c6f5ea", "filename": "gcc/ada/hlo.adb", "status": "removed", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dac1fbf86ef1fa930f1edda9a19d1fb5242572a0/gcc%2Fada%2Fhlo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dac1fbf86ef1fa930f1edda9a19d1fb5242572a0/gcc%2Fada%2Fhlo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fhlo.adb?ref=dac1fbf86ef1fa930f1edda9a19d1fb5242572a0", "patch": "@@ -1,43 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---                                  H L O                                   --\n---                                                                          --\n---                                 B o d y                                  --\n---                                                                          --\n---          Copyright (C) 1998-2007, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT; see file COPYING3.  If not, go to --\n--- http://www.gnu.org/licenses for a complete copy of the license.          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-with Output; use Output;\n-\n-package body HLO is\n-\n-   -------------------------\n-   -- High_Level_Optimize --\n-   -------------------------\n-\n-   procedure High_Level_Optimize (N : Node_Id) is\n-      pragma Warnings (Off, N);\n-   begin\n-      Write_Str (\"High level optimizer activated\");\n-      Write_Eol;\n-      Write_Str (\"High level optimizer completed\");\n-      Write_Eol;\n-   end High_Level_Optimize;\n-\n-end HLO;"}, {"sha": "b3dc3b522a646eca3d844e1bcebd3834f4556fcb", "filename": "gcc/ada/hlo.ads", "status": "removed", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dac1fbf86ef1fa930f1edda9a19d1fb5242572a0/gcc%2Fada%2Fhlo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dac1fbf86ef1fa930f1edda9a19d1fb5242572a0/gcc%2Fada%2Fhlo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fhlo.ads?ref=dac1fbf86ef1fa930f1edda9a19d1fb5242572a0", "patch": "@@ -1,36 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---                                  H L O                                   --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---          Copyright (C) 1998-2007, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT; see file COPYING3.  If not, go to --\n--- http://www.gnu.org/licenses for a complete copy of the license.          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-with Types; use Types;\n-\n-package HLO is\n-\n-   procedure High_Level_Optimize (N : Node_Id);\n-   --  This procedure activates the high level optimizer. At the time it is\n-   --  called, the tree for compilation unit N has been fully analyzed, but\n-   --  not expanded, but the Analyzed flags have been reset. On return, the\n-   --  tree may be modified (and will be reanalyzed and expanded as required).\n-\n-end HLO;"}]}