{"sha": "24f8db991baf42e6e5b0a3f76e5425e72e9fb41f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRmOGRiOTkxYmFmNDJlNmU1YjBhM2Y3NmU1NDI1ZTcyZTlmYjQxZg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-09T06:45:00Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-09T06:45:00Z"}, "message": "Declare gen_highpart.\n\nFrom-SVN: r2085", "tree": {"sha": "36c72bb891f882984cc130833cbaa97e116e43e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36c72bb891f882984cc130833cbaa97e116e43e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24f8db991baf42e6e5b0a3f76e5425e72e9fb41f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24f8db991baf42e6e5b0a3f76e5425e72e9fb41f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24f8db991baf42e6e5b0a3f76e5425e72e9fb41f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24f8db991baf42e6e5b0a3f76e5425e72e9fb41f/comments", "author": null, "committer": null, "parents": [{"sha": "ccba022bcbcc0c36a02c9176fb7517731848aff0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccba022bcbcc0c36a02c9176fb7517731848aff0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccba022bcbcc0c36a02c9176fb7517731848aff0"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "3c33410b0b6c12269af264f9b990931593c390c0", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24f8db991baf42e6e5b0a3f76e5425e72e9fb41f/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24f8db991baf42e6e5b0a3f76e5425e72e9fb41f/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=24f8db991baf42e6e5b0a3f76e5425e72e9fb41f", "patch": "@@ -651,6 +651,7 @@ extern rtx gen_inline_header_rtx\tPROTO((rtx, rtx, int, int, int, int, int, int,\n extern rtx gen_lowpart_common\t\tPROTO((enum machine_mode, rtx));\n extern rtx gen_lowpart\t\t\tPROTO((enum machine_mode, rtx));\n extern rtx gen_lowpart_if_possible\tPROTO((enum machine_mode, rtx));\n+extern rtx gen_highpart\t\t\tPROTO((enum machine_mode, rtx));\n extern rtx operand_subword\t\tPROTO((rtx, int, int, enum machine_mode));\n extern rtx operand_subword_force\tPROTO((rtx, int, enum machine_mode));\n extern int subreg_lowpart_p\t\tPROTO((rtx));"}]}