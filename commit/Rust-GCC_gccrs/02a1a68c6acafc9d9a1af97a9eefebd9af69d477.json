{"sha": "02a1a68c6acafc9d9a1af97a9eefebd9af69d477", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJhMWE2OGM2YWNhZmM5ZDlhMWFmOTdhOWVlZmViZDlhZjY5ZDQ3Nw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-04-27T12:47:22Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-04-27T12:47:22Z"}, "message": "optimize.c (maybe_clone_body): Copy parameter names and locations.\n\ncp:\n\t* optimize.c (maybe_clone_body): Copy parameter names and locations.\ntestsuite:\n\t* g++.old-deja/g++.other/warn7.C: New test.\n\nFrom-SVN: r41627", "tree": {"sha": "3ecd1e3881ee02b7bc81981fbffbe159cf82615e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ecd1e3881ee02b7bc81981fbffbe159cf82615e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02a1a68c6acafc9d9a1af97a9eefebd9af69d477", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02a1a68c6acafc9d9a1af97a9eefebd9af69d477", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02a1a68c6acafc9d9a1af97a9eefebd9af69d477", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02a1a68c6acafc9d9a1af97a9eefebd9af69d477/comments", "author": null, "committer": null, "parents": [{"sha": "5f6eeeb3625bd5121465d8a50c89f47b25af0a69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f6eeeb3625bd5121465d8a50c89f47b25af0a69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f6eeeb3625bd5121465d8a50c89f47b25af0a69"}], "stats": {"total": 81, "additions": 79, "deletions": 2}, "files": [{"sha": "7e49e694c43ee61fa0020aa46fa4e8d909c476ba", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02a1a68c6acafc9d9a1af97a9eefebd9af69d477/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02a1a68c6acafc9d9a1af97a9eefebd9af69d477/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=02a1a68c6acafc9d9a1af97a9eefebd9af69d477", "patch": "@@ -1,3 +1,7 @@\n+2001-04-27  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* optimize.c (maybe_clone_body): Copy parameter names and locations.\n+\n 2001-04-27  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* cp-tree.h (adjust_clone_args): Prototype new function."}, {"sha": "ae5a1ff3c403a7f3264cb466054eec3c2d995097", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02a1a68c6acafc9d9a1af97a9eefebd9af69d477/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02a1a68c6acafc9d9a1af97a9eefebd9af69d477/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=02a1a68c6acafc9d9a1af97a9eefebd9af69d477", "patch": "@@ -1019,6 +1019,7 @@ maybe_clone_body (fn)\n {\n   inline_data id;\n   tree clone;\n+  int first = 1;\n \n   /* We only clone constructors and destructors.  */\n   if (!DECL_MAYBE_IN_CHARGE_CONSTRUCTOR_P (fn)\n@@ -1032,7 +1033,7 @@ maybe_clone_body (fn)\n      list.  */\n   for (clone = TREE_CHAIN (fn);\n        clone && DECL_CLONED_FUNCTION_P (clone);\n-       clone = TREE_CHAIN (clone))\n+       clone = TREE_CHAIN (clone), first = 0)\n     {\n       tree parm;\n       tree clone_parm;\n@@ -1053,6 +1054,30 @@ maybe_clone_body (fn)\n       DECL_NOT_REALLY_EXTERN (clone) = DECL_NOT_REALLY_EXTERN (fn);\n       TREE_PUBLIC (clone) = TREE_PUBLIC (fn);\n \n+      /* Adjust the parameter names and locations. */\n+      parm = DECL_ARGUMENTS (fn);\n+      clone_parm = DECL_ARGUMENTS (clone);\n+      if (DECL_HAS_IN_CHARGE_PARM_P (fn))\n+\tparm = TREE_CHAIN (parm);\n+      if (DECL_HAS_VTT_PARM_P (fn))\n+\tparm = TREE_CHAIN (parm);\n+      if (DECL_HAS_VTT_PARM_P (clone))\n+\tclone_parm = TREE_CHAIN (clone_parm);\n+      for (; parm;\n+\t   parm = TREE_CHAIN (parm), clone_parm = TREE_CHAIN (clone_parm))\n+\t{\n+\t  DECL_ABSTRACT_ORIGIN (clone_parm) = parm;\n+\n+\t  /* The name may have changed from the declaration. */\n+\t  DECL_NAME (clone_parm) = DECL_NAME (parm);\n+\t  DECL_SOURCE_FILE (clone_parm) = DECL_SOURCE_FILE (parm);\n+\t  DECL_SOURCE_LINE (clone_parm) = DECL_SOURCE_LINE (parm);\n+ \n+\t  /* We should only give unused information for one clone. */\n+\t  if (!first)\n+\t    TREE_USED (clone_parm) = 1;\n+\t}\n+\n       /* Start processing the function.  */\n       push_to_top_level ();\n       start_function (NULL_TREE, clone, NULL_TREE, SF_PRE_PARSED);\n@@ -1115,7 +1140,6 @@ maybe_clone_body (fn)\n \t     function.  */\n \t  else\n \t    {\n-\t      DECL_ABSTRACT_ORIGIN (clone_parm) = parm;\n \t      splay_tree_insert (id.decl_map,\n \t\t\t\t (splay_tree_key) parm,\n \t\t\t\t (splay_tree_value) clone_parm);"}, {"sha": "d04c26cb506ea380fdd70d3e6e68167514fd728e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02a1a68c6acafc9d9a1af97a9eefebd9af69d477/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02a1a68c6acafc9d9a1af97a9eefebd9af69d477/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=02a1a68c6acafc9d9a1af97a9eefebd9af69d477", "patch": "@@ -1,3 +1,7 @@\n+2001-04-27  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old-deja/g++.other/warn7.C: New test.\n+\n 2001-04-27  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.old-deja/g++.other/defarg9.C: New test."}, {"sha": "a27756a1a9ab02a011c89a466f5639740e3b7de5", "filename": "gcc/testsuite/g++.old-deja/g++.other/warn7.C", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02a1a68c6acafc9d9a1af97a9eefebd9af69d477/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fwarn7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02a1a68c6acafc9d9a1af97a9eefebd9af69d477/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fwarn7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fwarn7.C?ref=02a1a68c6acafc9d9a1af97a9eefebd9af69d477", "patch": "@@ -0,0 +1,45 @@\n+// Build don't link:\n+// Special g++ Options: -W -Wall\n+// \n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 26 April 2001 <nathan@codesourcery.com>\n+\n+// Bug 2356. Unused parameter information introduced in a ctor\n+// definition was not propagated to clones, leading to missed or\n+// unwarranted unused parameter warnings, possibly given twice.\n+\n+struct X\n+{\n+  X(int i);\n+  void foo (int i);\n+  \n+};\n+void foo (int i);\n+\n+X::X(int)\n+{\n+}\n+void X::foo (int) \n+{\n+}\n+void foo (int)\n+{\n+}\n+\n+struct Y\n+{\n+  Y(int);\n+  void bar (int);\n+  \n+};\n+void bar (int);\n+\n+Y::Y(int i)\n+{ // WARNING - unused parameter\n+}\n+void Y::bar (int i) \n+{ // WARNING - unused parameter\n+}\n+void bar (int i)\n+{ // WARNING - unused parameter\n+}"}]}