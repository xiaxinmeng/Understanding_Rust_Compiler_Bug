{"sha": "c4551b28a74c661f07943831640d2378c2f1277e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ1NTFiMjhhNzRjNjYxZjA3OTQzODMxNjQwZDIzNzhjMmYxMjc3ZQ==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2009-04-20T11:26:18Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2009-04-20T11:26:18Z"}, "message": "re PR tree-optimization/39675 (ICE in vect_get_vec_def_for_operand, at tree-vect-transform.c:1999)\n\n\tPR tree-optimization/39675\n\t* tree-vect-loop.c (vect_transform_loop): Remove currently redundant \n\tcheck of the return code of vect_schedule_slp. Check that stmt_vec_info\n\tstill exists for the statement, before checking its vectorization type.\n\nFrom-SVN: r146399", "tree": {"sha": "255ffce85d7e7ebbe01b2d25d96680caf2b7a014", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/255ffce85d7e7ebbe01b2d25d96680caf2b7a014"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4551b28a74c661f07943831640d2378c2f1277e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4551b28a74c661f07943831640d2378c2f1277e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4551b28a74c661f07943831640d2378c2f1277e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4551b28a74c661f07943831640d2378c2f1277e/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ecc3905a2df096b31501be93eb527c826fbe1219", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecc3905a2df096b31501be93eb527c826fbe1219", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecc3905a2df096b31501be93eb527c826fbe1219"}], "stats": {"total": 57, "additions": 46, "deletions": 11}, "files": [{"sha": "7d962a689f91088859f0aed85790987b488ba46f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4551b28a74c661f07943831640d2378c2f1277e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4551b28a74c661f07943831640d2378c2f1277e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c4551b28a74c661f07943831640d2378c2f1277e", "patch": "@@ -1,3 +1,10 @@\n+2009-04-20  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/39675\n+\t* tree-vect-loop.c (vect_transform_loop): Remove currently redundant \n+\tcheck of the return code of vect_schedule_slp. Check that stmt_vec_info\n+\tstill exists for the statement, before checking its vectorization type.\n+\n 2009-04-20  Michael Matz  <matz@suse.de>\n \n \t* Makefile.in (generated_files): Take out $(simple_generated_c)."}, {"sha": "96442c58904df604877fbaddf90890df4f66118e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4551b28a74c661f07943831640d2378c2f1277e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4551b28a74c661f07943831640d2378c2f1277e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c4551b28a74c661f07943831640d2378c2f1277e", "patch": "@@ -1,3 +1,8 @@\n+2009-04-20  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/39675\n+\t* gcc.dg/vect/O3-pr39675-2.c: New test.\n+\n 2009-04-20  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/rep_clause3.adb: New test."}, {"sha": "7d6af7b82f3b48827ff3fb3761a0cc27348f7eb4", "filename": "gcc/testsuite/gcc.dg/vect/O3-pr39675-2.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4551b28a74c661f07943831640d2378c2f1277e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2FO3-pr39675-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4551b28a74c661f07943831640d2378c2f1277e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2FO3-pr39675-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2FO3-pr39675-2.c?ref=c4551b28a74c661f07943831640d2378c2f1277e", "patch": "@@ -0,0 +1,32 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_int } */\n+\n+#define N 128\n+\n+int out[N*4], out2[N], in[N*4];\n+\n+void\n+foo ()\n+{\n+  int i, a0, a1, a2, a3;\n+\n+  for (i = 0; i < N; i++) \n+    { \n+      a0 = in[i*4];\n+      a1 = in[i*4 + 1];\n+      a2 = in[i*4 + 2];\n+      a3 = in[i*4 + 3];\n+\n+      out[i*4] = a0;\n+      out[i*4 + 1] = a1;\n+      out[i*4 + 2] = a2;\n+      out[i*4 + 3] = a3;\n+\n+      out2[i] = a0;\n+    }\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  { target vect_strided_wide } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\" { target vect_strided_wide } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */\n+  "}, {"sha": "ee54cacf55108f469ec316bc2c38d5a3155d118b", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4551b28a74c661f07943831640d2378c2f1277e/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4551b28a74c661f07943831640d2378c2f1277e/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=c4551b28a74c661f07943831640d2378c2f1277e", "patch": "@@ -3528,20 +3528,11 @@ vect_transform_loop (loop_vec_info loop_vinfo)\n \t\t  if (vect_print_dump_info (REPORT_DETAILS))\n \t\t    fprintf (vect_dump, \"=== scheduling SLP instances ===\");\n \n-\t\t  is_store = vect_schedule_slp (loop_vinfo);\n-\n-\t\t  /* IS_STORE is true if STMT is a store. Stores cannot be of\n-\t\t     hybrid SLP type. They are removed in\n-\t\t     vect_schedule_slp_instance and their vinfo is destroyed. */\n-\t\t  if (is_store)\n-\t\t    {\n-\t\t      gsi_next (&si);\n-\t\t      continue;\n-\t\t    }\n+\t\t  vect_schedule_slp (loop_vinfo);\n \t\t}\n \n \t      /* Hybrid SLP stmts must be vectorized in addition to SLP.  */\n-\t      if (PURE_SLP_STMT (stmt_info))\n+\t      if (!vinfo_for_stmt (stmt) || PURE_SLP_STMT (stmt_info))\n \t\t{\n \t\t  gsi_next (&si);\n \t\t  continue;"}]}