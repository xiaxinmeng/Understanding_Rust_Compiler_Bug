{"sha": "50652ae91a0a3dd03af17d3d8c1fed92aeb33a29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA2NTJhZTkxYTBhM2RkMDNhZjE3ZDNkOGMxZmVkOTJhZWIzM2EyOQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2004-08-19T11:17:01Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-08-19T11:17:01Z"}, "message": "cp-tree.h (build_shared_int_cst): Remove.\n\n\t* cp-tree.h (build_shared_int_cst): Remove.\n\t* tree.c (shared_int_cache): Remove.\n\t(build_shared_int_cst): Remove.\n\t* class.c (finish_struct_1): Use build_int_cst.\n\nFrom-SVN: r86249", "tree": {"sha": "ad4155c71e19a7d7b83ab0da21f83a27f8b56962", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad4155c71e19a7d7b83ab0da21f83a27f8b56962"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50652ae91a0a3dd03af17d3d8c1fed92aeb33a29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50652ae91a0a3dd03af17d3d8c1fed92aeb33a29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50652ae91a0a3dd03af17d3d8c1fed92aeb33a29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50652ae91a0a3dd03af17d3d8c1fed92aeb33a29/comments", "author": null, "committer": null, "parents": [{"sha": "31ebd7c88765448f74b92bb506b8bf81c3a3ea0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31ebd7c88765448f74b92bb506b8bf81c3a3ea0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31ebd7c88765448f74b92bb506b8bf81c3a3ea0e"}], "stats": {"total": 29, "additions": 8, "deletions": 21}, "files": [{"sha": "85d5038ae54d85d8c09b3a2a2690591ae11adb58", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50652ae91a0a3dd03af17d3d8c1fed92aeb33a29/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50652ae91a0a3dd03af17d3d8c1fed92aeb33a29/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=50652ae91a0a3dd03af17d3d8c1fed92aeb33a29", "patch": "@@ -1,3 +1,10 @@\n+2004-08-19  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* cp-tree.h (build_shared_int_cst): Remove.\n+\t* tree.c (shared_int_cache): Remove.\n+\t(build_shared_int_cst): Remove.\n+\t* class.c (finish_struct_1): Use build_int_cst.\n+\n 2004-08-19  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* decl.c (finish_enum): Do not copy value node early, copy"}, {"sha": "1989dca91af04dd4ef9d98cd372928c28e7d3909", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50652ae91a0a3dd03af17d3d8c1fed92aeb33a29/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50652ae91a0a3dd03af17d3d8c1fed92aeb33a29/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=50652ae91a0a3dd03af17d3d8c1fed92aeb33a29", "patch": "@@ -5085,7 +5085,7 @@ finish_struct_1 (tree t)\n \t       thunk base function.  */\n \t    DECL_VINDEX (fndecl) = NULL_TREE;\n \t  else if (TREE_CODE (DECL_VINDEX (fndecl)) != INTEGER_CST)\n-\t    DECL_VINDEX (fndecl) = build_shared_int_cst (vindex);\n+\t    DECL_VINDEX (fndecl) = build_int_cst (NULL_TREE, vindex, 0);\n \t}\n     }\n "}, {"sha": "b0f2697d781b6adeaf6b491d47be9ce5657466c7", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50652ae91a0a3dd03af17d3d8c1fed92aeb33a29/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50652ae91a0a3dd03af17d3d8c1fed92aeb33a29/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=50652ae91a0a3dd03af17d3d8c1fed92aeb33a29", "patch": "@@ -4246,7 +4246,6 @@ extern tree cp_build_type_attribute_variant     (tree, tree);\n extern tree cp_build_qualified_type_real        (tree, int, tsubst_flags_t);\n #define cp_build_qualified_type(TYPE, QUALS) \\\n   cp_build_qualified_type_real ((TYPE), (QUALS), tf_error | tf_warning)\n-extern tree build_shared_int_cst                (int);\n extern special_function_kind special_function_p (tree);\n extern bool name_p                              (tree);\n extern int count_trees                          (tree);"}, {"sha": "a7309dd0b80f3c7b0f737b13af882b464ebaede0", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50652ae91a0a3dd03af17d3d8c1fed92aeb33a29/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50652ae91a0a3dd03af17d3d8c1fed92aeb33a29/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=50652ae91a0a3dd03af17d3d8c1fed92aeb33a29", "patch": "@@ -1366,25 +1366,6 @@ build_min_non_dep (enum tree_code code, tree non_dep, ...)\n   return t;\n }\n \n-/* Returns an INTEGER_CST (of type `int') corresponding to I.\n-   Multiple calls with the same value of I may or may not yield the\n-   same node; therefore, callers should never modify the node\n-   returned.  */\n-\n-static GTY(()) tree shared_int_cache[256];\n-\n-tree\n-build_shared_int_cst (int i)\n-{\n-  if (i >= 256)\n-    return build_int_cst (NULL_TREE, i, 0);\n-\n-  if (!shared_int_cache[i])\n-    shared_int_cache[i] = build_int_cst (NULL_TREE, i, 0);\n-\n-  return shared_int_cache[i];\n-}\n-\n tree\n get_type_decl (tree t)\n {"}]}