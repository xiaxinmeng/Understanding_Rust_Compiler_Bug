{"sha": "18407bfb2c2a34648ac7a1a8ebaa9a72a04126c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg0MDdiZmIyYzJhMzQ2NDhhYzdhMWE4ZWJhYTlhNzJhMDQxMjZjNg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-07-20T18:21:48Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-07-20T18:21:48Z"}, "message": "Use static pointer to member when catching nullptr\n\nlibstdc++-v3:\n\n\t* libsupc++/pbase_type_info.cc (__pbase_type_info::__do_catch): Use\n\tstatic objects for catching nullptr as pointer to member types.\n\ngcc/testsuite:\n\n\t* g++.dg/cpp0x/nullptr35.C: Change expected result for catching as\n\tpointer to member function and also test catching by reference.\n\nFrom-SVN: r238532", "tree": {"sha": "c098d81960006323e6c0be48ab05026e6e2544ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c098d81960006323e6c0be48ab05026e6e2544ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18407bfb2c2a34648ac7a1a8ebaa9a72a04126c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18407bfb2c2a34648ac7a1a8ebaa9a72a04126c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18407bfb2c2a34648ac7a1a8ebaa9a72a04126c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18407bfb2c2a34648ac7a1a8ebaa9a72a04126c6/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c07fd98b80242f8d4fd30e6264150826c21cee6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c07fd98b80242f8d4fd30e6264150826c21cee6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c07fd98b80242f8d4fd30e6264150826c21cee6"}], "stats": {"total": 55, "additions": 48, "deletions": 7}, "files": [{"sha": "1fbf173ff469f90ed35d4076f40b52f8962d98ac", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18407bfb2c2a34648ac7a1a8ebaa9a72a04126c6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18407bfb2c2a34648ac7a1a8ebaa9a72a04126c6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=18407bfb2c2a34648ac7a1a8ebaa9a72a04126c6", "patch": "@@ -1,3 +1,8 @@\n+2016-07-20  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* g++.dg/cpp0x/nullptr35.C: Change expected result for catching as\n+\tpointer to member function and also test catching by reference.\n+\n 2016-07-20  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n \t* gcc.target/s390/pr67443.c: Fix test case."}, {"sha": "d9321145e9a3c3d307c17a250fecfe11a45a42ca", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr35.C", "status": "modified", "additions": 31, "deletions": 2, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18407bfb2c2a34648ac7a1a8ebaa9a72a04126c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr35.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18407bfb2c2a34648ac7a1a8ebaa9a72a04126c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr35.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr35.C?ref=18407bfb2c2a34648ac7a1a8ebaa9a72a04126c6", "patch": "@@ -39,14 +39,43 @@ int main()\n           caught(4);\n         throw;\n       }\n-    } catch (int (A::*pmf)()) {  // FIXME: currently unsupported\n+    } catch (int (A::*pmf)()) {\n       if (pmf == nullptr)\n         caught(8);\n       throw;\n     }\n   } catch (nullptr_t) {\n   }\n \n-  if (result != 7) // should be 15\n+  try {\n+    try {\n+      try {\n+        try {\n+          try {\n+            throw nullptr;\n+          } catch (void* const& p) {\n+            if (p == nullptr)\n+              caught(16);\n+            throw;\n+          }\n+        } catch (void(* const& pf)()) {\n+          if (pf == nullptr)\n+            caught(32);\n+          throw;\n+        }\n+      } catch (int A::* const& pm) {\n+        if (pm == nullptr)\n+          caught(64);\n+        throw;\n+      }\n+    } catch (int (A::* const& pmf)()) {\n+      if (pmf == nullptr)\n+        caught(128);\n+      throw;\n+    }\n+  } catch (nullptr_t) {\n+  }\n+\n+  if (result != 255)\n     abort ();\n }"}, {"sha": "40caba1244845de36cee12ce7947fd4f849db17a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18407bfb2c2a34648ac7a1a8ebaa9a72a04126c6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18407bfb2c2a34648ac7a1a8ebaa9a72a04126c6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=18407bfb2c2a34648ac7a1a8ebaa9a72a04126c6", "patch": "@@ -1,3 +1,8 @@\n+2016-07-20  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* libsupc++/pbase_type_info.cc (__pbase_type_info::__do_catch): Use\n+\tstatic objects for catching nullptr as pointer to member types.\n+\n 2016-07-18  Ville Voutilainen  <ville.voutilainen@gmail.com>\n \n \tClean up optional's comments."}, {"sha": "ff6b756519b696c910bbbdad91733958dc506899", "filename": "libstdc++-v3/libsupc++/pbase_type_info.cc", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18407bfb2c2a34648ac7a1a8ebaa9a72a04126c6/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fpbase_type_info.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18407bfb2c2a34648ac7a1a8ebaa9a72a04126c6/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fpbase_type_info.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fpbase_type_info.cc?ref=18407bfb2c2a34648ac7a1a8ebaa9a72a04126c6", "patch": "@@ -50,14 +50,16 @@ __do_catch (const type_info *thr_type,\n         {\n           if (__pointee->__is_function_p ())\n             {\n-              // A pointer-to-member-function is two words <ptr,adj> but the\n-              // nullptr_t exception object at *(nullptr_t*)*thr_obj is only\n-              // one word, so we can't safely return it as a PMF. FIXME.\n-              return false;\n+              using pmf_type = void (__pbase_type_info::*)();\n+              static const pmf_type pmf = nullptr;\n+              *thr_obj = const_cast<pmf_type*>(&pmf);\n+              return true;\n             }\n           else\n             {\n-              *(ptrdiff_t*)*thr_obj = -1; // null pointer to data member\n+              using pm_type = int __pbase_type_info::*;\n+              static const pm_type pm = nullptr;\n+              *thr_obj = const_cast<pm_type*>(&pm);\n               return true;\n             }\n         }"}]}