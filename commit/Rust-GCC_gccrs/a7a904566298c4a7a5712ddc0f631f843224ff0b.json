{"sha": "a7a904566298c4a7a5712ddc0f631f843224ff0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdhOTA0NTY2Mjk4YzRhN2E1NzEyZGRjMGY2MzFmODQzMjI0ZmYwYg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-09-22T06:02:35Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-09-22T06:02:35Z"}, "message": "compiler: Fix determining types for builtin complex function.\n\nFrom-SVN: r191630", "tree": {"sha": "c437ce5b33bcfc720a29cdafb32fc6daa0b00a86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c437ce5b33bcfc720a29cdafb32fc6daa0b00a86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7a904566298c4a7a5712ddc0f631f843224ff0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7a904566298c4a7a5712ddc0f631f843224ff0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7a904566298c4a7a5712ddc0f631f843224ff0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7a904566298c4a7a5712ddc0f631f843224ff0b/comments", "author": null, "committer": null, "parents": [{"sha": "a90df91ef10b17abd7edf0c0794ef40ece82591c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a90df91ef10b17abd7edf0c0794ef40ece82591c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a90df91ef10b17abd7edf0c0794ef40ece82591c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b99dc5ce58e1b3ae51d9e438b7eb469757f41c75", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7a904566298c4a7a5712ddc0f631f843224ff0b/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7a904566298c4a7a5712ddc0f631f843224ff0b/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=a7a904566298c4a7a5712ddc0f631f843224ff0b", "patch": "@@ -7476,7 +7476,7 @@ Builtin_call_expression::do_determine_type(const Type_context* context)\n \tif (args != NULL && args->size() == 2)\n \t  {\n \t    Type* t1 = args->front()->type();\n-\t    Type* t2 = args->front()->type();\n+\t    Type* t2 = args->back()->type();\n \t    if (!t1->is_abstract())\n \t      arg_type = t1;\n \t    else if (!t2->is_abstract())"}]}