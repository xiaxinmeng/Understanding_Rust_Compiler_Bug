{"sha": "c09e64987db14029d96c1a2fb0d05a74535f864b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA5ZTY0OTg3ZGIxNDAyOWQ5NmMxYTJmYjBkMDVhNzQ1MzVmODY0Yg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-18T17:38:13Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-18T17:38:13Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1207", "tree": {"sha": "c44cc579dc50f803d5e4bdad12f47f315543dce0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c44cc579dc50f803d5e4bdad12f47f315543dce0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c09e64987db14029d96c1a2fb0d05a74535f864b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c09e64987db14029d96c1a2fb0d05a74535f864b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c09e64987db14029d96c1a2fb0d05a74535f864b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c09e64987db14029d96c1a2fb0d05a74535f864b/comments", "author": null, "committer": null, "parents": [{"sha": "c1f7c223102198c1a344fcbc9d854044993ece90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1f7c223102198c1a344fcbc9d854044993ece90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1f7c223102198c1a344fcbc9d854044993ece90"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "11c122b2b349fbd0dc00eb8b1d03e7f487b4cb8a", "filename": "gcc/stmt.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c09e64987db14029d96c1a2fb0d05a74535f864b/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c09e64987db14029d96c1a2fb0d05a74535f864b/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=c09e64987db14029d96c1a2fb0d05a74535f864b", "patch": "@@ -1012,7 +1012,8 @@ expand_asm_operands (string, outputs, inputs, clobbers, vol, filename, line)\n   for (tail = clobbers; tail; tail = TREE_CHAIN (tail))\n     {\n       char *regname = TREE_STRING_POINTER (TREE_VALUE (tail));\n-      if (decode_reg_name (regname) >= 0)\n+      i = decode_reg_name (regname);\n+      if (i >= 0 || i == -4)\n \t++nclobbers;\n     }\n \n@@ -1183,9 +1184,15 @@ expand_asm_operands (string, outputs, inputs, clobbers, vol, filename, line)\n \n \t  if (j < 0)\n \t    {\n-\t      if (j == -3)\n+\t      if (j == -3)\t/* `cc', which is not a register */\n \t\tcontinue;\n \n+\t      if (j == -4)\t/* `memory', don't cache memory across asm */\n+\t\t{\n+\t\t  XVECEXP (body, 0, i++) = gen_rtx (CLOBBER, VOIDmode, const0_rtx);\n+\t\t  continue;\n+\t\t}\n+\n \t      error (\"unknown register name `%s' in `asm'\", regname);\n \t      return;\n \t    }"}, {"sha": "be250f4b13fc4e711c072387575d32993e4bfbf2", "filename": "gcc/varasm.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c09e64987db14029d96c1a2fb0d05a74535f864b/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c09e64987db14029d96c1a2fb0d05a74535f864b/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=c09e64987db14029d96c1a2fb0d05a74535f864b", "patch": "@@ -212,8 +212,9 @@ strip_reg_name (name)\n \f\n /* Decode an `asm' spec for a declaration as a register name.\n    Return the register number, or -1 if nothing specified,\n-   or -2 if the ASMSPEC is not `cc' and is not recognized,\n-   or -3 if ASMSPEC is `cc' and is not recognized.\n+   or -2 if the ASMSPEC is not `cc' or `memory' and is not recognized,\n+   or -3 if ASMSPEC is `cc' and is not recognized,\n+   or -4 if ASMSPEC is `memory' and is not recognized.\n    Accept an exact spelling or a decimal number.\n    Prefixes such as % are optional.  */\n \n@@ -257,6 +258,9 @@ decode_reg_name (asmspec)\n       }\n #endif /* ADDITIONAL_REGISTER_NAMES */\n \n+      if (!strcmp (asmspec, \"memory\"))\n+\treturn -4;\n+\n       if (!strcmp (asmspec, \"cc\"))\n \treturn -3;\n "}]}