{"sha": "05fb1639060fc8db1c2512a819e35bd2b25dc5e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDVmYjE2MzkwNjBmYzhkYjFjMjUxMmE4MTllMzViZDJiMjVkYzVlNg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2001-12-15T01:16:28Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2001-12-15T01:16:28Z"}, "message": "h8300.md (udivqi3): Remove.\n\n\t* config/h8300/h8300.md (udivqi3): Remove.\n\t(divqi3): Likewise.\n\t(udivhi3): Likewise.\n\t(divhi3): Likewise.\n\t(umodqi3): Likewise.\n\t(modqi3): Likewise.\n\t(umodhi3): Likewise.\n\t(modhi3): Likewise.\n\t(udivmodqi3): New.\n\t(divmodqi3): Likewise.\n\t(udivmodhi3): Likewise.\n\t(divmodhi3): Likewise.\n\nFrom-SVN: r48023", "tree": {"sha": "88335c0519902139e5c2657de0cc1b0901ebe81c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88335c0519902139e5c2657de0cc1b0901ebe81c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05fb1639060fc8db1c2512a819e35bd2b25dc5e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05fb1639060fc8db1c2512a819e35bd2b25dc5e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05fb1639060fc8db1c2512a819e35bd2b25dc5e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05fb1639060fc8db1c2512a819e35bd2b25dc5e6/comments", "author": null, "committer": null, "parents": [{"sha": "08f7f057cc47625a6005912eca9f752f18a67167", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08f7f057cc47625a6005912eca9f752f18a67167", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08f7f057cc47625a6005912eca9f752f18a67167"}], "stats": {"total": 135, "additions": 72, "deletions": 63}, "files": [{"sha": "3dba7c75231c10f51d447e5ab82f086dfa5901c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05fb1639060fc8db1c2512a819e35bd2b25dc5e6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05fb1639060fc8db1c2512a819e35bd2b25dc5e6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=05fb1639060fc8db1c2512a819e35bd2b25dc5e6", "patch": "@@ -1,3 +1,18 @@\n+2001-12-14  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300.md (udivqi3): Remove.\n+\t(divqi3): Likewise.\n+\t(udivhi3): Likewise.\n+\t(divhi3): Likewise.\n+\t(umodqi3): Likewise.\n+\t(modqi3): Likewise.\n+\t(umodhi3): Likewise.\n+\t(modhi3): Likewise.\n+\t(udivmodqi3): New.\n+\t(divmodqi3): Likewise.\n+\t(udivmodhi3): Likewise.\n+\t(divmodhi3): Likewise.\n+\n Sat Dec 15 01:39:12 CET 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* cfgcleanup.c (flow_find_cross_jump): Replace tests for note"}, {"sha": "285d9adad881ef4a3e5a7c23726a62dfcb82facc", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 57, "deletions": 63, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05fb1639060fc8db1c2512a819e35bd2b25dc5e6/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05fb1639060fc8db1c2512a819e35bd2b25dc5e6/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=05fb1639060fc8db1c2512a819e35bd2b25dc5e6", "patch": "@@ -921,100 +921,94 @@\n    (set_attr \"cc\" \"none_0hit\")])\n \n ;; ----------------------------------------------------------------------\n-;; DIVIDE INSTRUCTIONS\n+;; DIVIDE/MOD INSTRUCTIONS\n ;; ----------------------------------------------------------------------\n \n-(define_insn \"udivqi3\"\n+(define_insn \"udivmodqi4\"\n   [(set (match_operand:QI 0 \"register_operand\" \"=r\")\n \t(truncate:QI\n \t  (udiv:HI\n \t    (match_operand:HI 1 \"general_operand\" \"0\")\n-\t    (zero_extend:HI (match_operand:QI 2 \"register_operand\" \"r\")))))]\n-  \"\"\n-  \"divxu\t%X2,%T0\"\n-  [(set_attr \"length\" \"2\")\n-   (set_attr \"cc\" \"clobber\")])\n-\n-;; ??? Will divxu always work here?\n-\n-(define_insn \"divqi3\"\n-  [(set (match_operand:QI 0 \"register_operand\" \"=r\")\n+\t    (zero_extend:HI (match_operand:QI 2 \"register_operand\" \"r\")))))\n+   (set (match_operand:QI 3 \"register_operand\" \"=r\")\n \t(truncate:QI\n-\t  (div:HI\n-\t    (match_operand:HI 1 \"general_operand\" \"0\")\n-\t    (sign_extend:HI (match_operand:QI 2 \"register_operand\" \"r\")))))]\n-  \"\"\n-  \"divxu\t%X2,%T0\"\n-  [(set_attr \"length\" \"2\")\n-   (set_attr \"cc\" \"clobber\")])\n-\n-(define_insn \"udivhi3\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n-\t(truncate:HI\n-\t  (udiv:SI\n-\t    (match_operand:SI 1 \"general_operand\" \"0\")\n-\t    (zero_extend:SI (match_operand:HI 2 \"register_operand\" \"r\")))))]\n-  \"TARGET_H8300H || TARGET_H8300S\"\n-  \"divxu.w\t%T2,%S0\"\n-  [(set_attr \"length\" \"2\")\n-   (set_attr \"cc\" \"clobber\")])\n-\n-(define_insn \"divhi3\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n-\t(truncate:HI\n-\t  (div:SI\n-\t    (match_operand:SI 1 \"general_operand\" \"0\")\n-\t    (sign_extend:SI (match_operand:HI 2 \"register_operand\" \"r\")))))]\n+\t  (umod:HI\n+\t    (match_dup 1)\n+\t    (zero_extend:HI (match_dup 2)))))]\n   \"TARGET_H8300H || TARGET_H8300S\"\n-  \"divxs.w\t%T2,%S0\"\n+  \"*\n+{\n+  if (find_reg_note (insn, REG_UNUSED, operands[3]))\n+    return \\\"divxu.b\\\\t%X2,%T0\\\";\n+  else\n+    return \\\"divxu.b\\\\t%X2,%T0\\;mov.b\\\\t%t0,%s3\\\";\n+}\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"clobber\")])\n \n-;; ----------------------------------------------------------------------\n-;; MOD INSTRUCTIONS\n-;; ----------------------------------------------------------------------\n-\n-(define_insn \"umodqi3\"\n+(define_insn \"divmodqi4\"\n   [(set (match_operand:QI 0 \"register_operand\" \"=r\")\n \t(truncate:QI\n-\t  (umod:HI\n+\t  (div:HI\n \t    (match_operand:HI 1 \"general_operand\" \"0\")\n-\t    (zero_extend:HI (match_operand:QI 2 \"register_operand\" \"r\")))))]\n-  \"\"\n-  \"divxu\t%X2,%T0\\;mov\t%t0,%s0\"\n-  [(set_attr \"length\" \"4\")\n-   (set_attr \"cc\" \"clobber\")])\n-\n-(define_insn \"modqi3\"\n-  [(set (match_operand:QI 0 \"register_operand\" \"=r\")\n+\t    (sign_extend:HI (match_operand:QI 2 \"register_operand\" \"r\")))))\n+   (set (match_operand:QI 3 \"register_operand\" \"=r\")\n \t(truncate:QI\n \t  (mod:HI\n-\t    (match_operand:HI 1 \"general_operand\" \"0\")\n-\t    (sign_extend:HI (match_operand:QI 2 \"register_operand\" \"r\")))))]\n+\t    (match_dup 1)\n+\t    (sign_extend:HI (match_dup 2)))))]\n   \"TARGET_H8300H || TARGET_H8300S\"\n-  \"divxs.b\t%X2,%T0\\;mov\t%t0,%s0\"\n+  \"*\n+{\n+  if (find_reg_note (insn, REG_UNUSED, operands[3]))\n+    return \\\"divxs.b\\\\t%X2,%T0\\\";\n+  else\n+    return \\\"divxs.b\\\\t%X2,%T0\\;mov.b\\\\t%t0,%s3\\\";\n+}\"\n   [(set_attr \"length\" \"6\")\n    (set_attr \"cc\" \"clobber\")])\n \n-(define_insn \"umodhi3\"\n+(define_insn \"udivmodhi4\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n \t(truncate:HI\n-\t  (umod:SI\n+\t  (udiv:SI\n \t    (match_operand:SI 1 \"general_operand\" \"0\")\n-\t    (zero_extend:SI (match_operand:HI 2 \"register_operand\" \"r\")))))]\n+\t    (zero_extend:SI (match_operand:HI 2 \"register_operand\" \"r\")))))\n+   (set (match_operand:HI 3 \"register_operand\" \"=r\")\n+\t(truncate:HI\n+\t  (umod:SI\n+\t    (match_dup 1)\n+\t    (zero_extend:SI (match_dup 2)))))]\n   \"TARGET_H8300H || TARGET_H8300S\"\n-  \"divxu.w\t%T2,%S0\\;mov\t%e0,%f0\"\n+  \"*\n+{\n+  if (find_reg_note (insn, REG_UNUSED, operands[3]))\n+    return \\\"divxu.w\\\\t%T2,%S0\\\";\n+  else\n+    return \\\"divxu.w\\\\t%T2,%S0\\;mov.w\\\\t%e0,%f3\\\";\n+}\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"clobber\")])\n \n-(define_insn \"modhi3\"\n+(define_insn \"divmodhi4\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n \t(truncate:HI\n-\t  (mod:SI\n+\t  (div:SI\n \t    (match_operand:SI 1 \"general_operand\" \"0\")\n-\t    (sign_extend:SI (match_operand:HI 2 \"register_operand\" \"r\")))))]\n+\t    (sign_extend:SI (match_operand:HI 2 \"register_operand\" \"r\")))))\n+   (set (match_operand:HI 3 \"register_operand\" \"=r\")\n+\t(truncate:HI\n+\t  (mod:SI\n+\t    (match_dup 1)\n+\t    (sign_extend:SI (match_dup 2)))))]\n   \"TARGET_H8300H || TARGET_H8300S\"\n-  \"divxs.w\t%T2,%S0\\;mov\t%e0,%f0\"\n+  \"*\n+{\n+  if (find_reg_note (insn, REG_UNUSED, operands[3]))\n+    return \\\"divxs.w\\\\t%T2,%S0\\\";\n+  else\n+    return \\\"divxs.w\\\\t%T2,%S0\\;mov.w\\\\t%e0,%f3\\\";\n+}\"\n   [(set_attr \"length\" \"6\")\n    (set_attr \"cc\" \"clobber\")])\n \f"}]}