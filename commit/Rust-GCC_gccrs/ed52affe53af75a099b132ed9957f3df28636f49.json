{"sha": "ed52affe53af75a099b132ed9957f3df28636f49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ1MmFmZmU1M2FmNzVhMDk5YjEzMmVkOTk1N2YzZGYyODYzNmY0OQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-05-07T13:07:22Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-05-07T13:07:22Z"}, "message": "re PR middle-end/27136 (Compile failure with -O -ffast-math)\n\n2006-05-07  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/27136\n\t* tree-ssa-loop-niter.c (get_val_for): Correct function\n\tcomment, assert requirements.\n\t(loop_niter_by_eval): Stop processing if the iterated\n\tvalue did not simplify.\n\n\t* gcc.dg/torture/pr27136.c: New testcase.\n\nFrom-SVN: r113601", "tree": {"sha": "3dd46ae043a71d836aae430f74c237ff07adf664", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3dd46ae043a71d836aae430f74c237ff07adf664"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed52affe53af75a099b132ed9957f3df28636f49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed52affe53af75a099b132ed9957f3df28636f49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed52affe53af75a099b132ed9957f3df28636f49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed52affe53af75a099b132ed9957f3df28636f49/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ef5d0a896e8a7efb1a51a628c9fe7eea4f4e99a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef5d0a896e8a7efb1a51a628c9fe7eea4f4e99a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef5d0a896e8a7efb1a51a628c9fe7eea4f4e99a6"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "bc2117483c5f890ff441b6eb481cfec8e852a670", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed52affe53af75a099b132ed9957f3df28636f49/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed52affe53af75a099b132ed9957f3df28636f49/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed52affe53af75a099b132ed9957f3df28636f49", "patch": "@@ -1,3 +1,11 @@\n+2006-05-07  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/27136\n+\t* tree-ssa-loop-niter.c (get_val_for): Correct function\n+\tcomment, assert requirements.\n+\t(loop_niter_by_eval): Stop processing if the iterated\n+\tvalue did not simplify.\n+\n 2006-05-07  Mircea Namolaru  <namolaru@il.ibm.com>\n \n         * opts.c (flag_see): remove its setting at -O3."}, {"sha": "7ddd103f14c8d0cf2451c3f618eb6f432426be71", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed52affe53af75a099b132ed9957f3df28636f49/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed52affe53af75a099b132ed9957f3df28636f49/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ed52affe53af75a099b132ed9957f3df28636f49", "patch": "@@ -1,3 +1,8 @@\n+2006-05-07  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/27136\n+\t* gcc.dg/torture/pr27136.c: New testcase.\n+\n 2006-05-07  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/24813"}, {"sha": "32b7bf123ef7d3dbfbe82ea5929735c4ba9abc01", "filename": "gcc/testsuite/gcc.dg/torture/pr27136.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed52affe53af75a099b132ed9957f3df28636f49/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr27136.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed52affe53af75a099b132ed9957f3df28636f49/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr27136.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr27136.c?ref=ed52affe53af75a099b132ed9957f3df28636f49", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-ffast-math\" } */\n+\n+void foo()\n+{\n+  double x;\n+\n+  for (x = 2; x < 10; x *= x)\n+    ;\n+}"}, {"sha": "a3c5791208fe7ca1d08e4b5767a0a2fb333c6b2a", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed52affe53af75a099b132ed9957f3df28636f49/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed52affe53af75a099b132ed9957f3df28636f49/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=ed52affe53af75a099b132ed9957f3df28636f49", "patch": "@@ -1301,7 +1301,7 @@ get_base_for (struct loop *loop, tree x)\n \n /* Given an expression X, then \n  \n-   * if BASE is NULL_TREE, X must be a constant and we return X.\n+   * if X is NULL_TREE, we return the constant BASE.\n    * otherwise X is a SSA name, whose value in the considered loop is derived\n      by a chain of operations with constant from a result of a phi node in\n      the header of the loop.  Then we return value of X when the value of the\n@@ -1314,6 +1314,8 @@ get_val_for (tree x, tree base)\n   use_operand_p op;\n   ssa_op_iter iter;\n \n+  gcc_assert (is_gimple_min_invariant (base));\n+\n   if (!x)\n     return base;\n \n@@ -1414,7 +1416,11 @@ loop_niter_by_eval (struct loop *loop, edge exit)\n \t}\n \n       for (j = 0; j < 2; j++)\n-\tval[j] = get_val_for (next[j], val[j]);\n+\t{\n+\t  val[j] = get_val_for (next[j], val[j]);\n+\t  if (!is_gimple_min_invariant (val[j]))\n+\t    return chrec_dont_know;\n+\t}\n     }\n \n   return chrec_dont_know;"}]}