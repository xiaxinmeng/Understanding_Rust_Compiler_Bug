{"sha": "a362f023e538bc30dd9f2107f71c2435f62b9289", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM2MmYwMjNlNTM4YmMzMGRkOWYyMTA3ZjcxYzI0MzVmNjJiOTI4OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-03-29T18:49:00Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-03-29T18:49:00Z"}, "message": "re PR rtl-optimization/70429 (Wrong code with -O1.)\n\n\tPR rtl-optimization/70429\n\t* combine.c (simplify_shift_const_1): For ASHIFTRT don't optimize\n\t(cst1 >> count) >> cst2 into (cst1 >> cst2) >> count if\n\tmode != result_mode.\n\n\t* gcc.c-torture/execute/pr70429.c: New test.\n\nFrom-SVN: r234531", "tree": {"sha": "403c3e385daa0141fced2cc170fd23bc95606ee5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/403c3e385daa0141fced2cc170fd23bc95606ee5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a362f023e538bc30dd9f2107f71c2435f62b9289", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a362f023e538bc30dd9f2107f71c2435f62b9289", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a362f023e538bc30dd9f2107f71c2435f62b9289", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a362f023e538bc30dd9f2107f71c2435f62b9289/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e0bffbbb5936be8b6a35d868db4226ca1b2365fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0bffbbb5936be8b6a35d868db4226ca1b2365fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0bffbbb5936be8b6a35d868db4226ca1b2365fa"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "042757895d66db6cc888d97b16184372536566c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a362f023e538bc30dd9f2107f71c2435f62b9289/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a362f023e538bc30dd9f2107f71c2435f62b9289/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a362f023e538bc30dd9f2107f71c2435f62b9289", "patch": "@@ -1,5 +1,10 @@\n 2016-03-29  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/70429\n+\t* combine.c (simplify_shift_const_1): For ASHIFTRT don't optimize\n+\t(cst1 >> count) >> cst2 into (cst1 >> cst2) >> count if\n+\tmode != result_mode.\n+\n \tPR c++/70353\n \t* tree-inline.c (remap_decls): Don't add_local_decl if\n \tcfun is null."}, {"sha": "1d0e8beeb2c07b50443b6a22103802cba075b088", "filename": "gcc/combine.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a362f023e538bc30dd9f2107f71c2435f62b9289/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a362f023e538bc30dd9f2107f71c2435f62b9289/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=a362f023e538bc30dd9f2107f71c2435f62b9289", "patch": "@@ -10533,6 +10533,11 @@ simplify_shift_const_1 (enum rtx_code code, machine_mode result_mode,\n \t\t\t\t       >> orig_count, result_mode,\n \t\t\t\t       &complement_p))\n \t\tbreak;\n+\t      /* For ((int) (cstLL >> count)) >> cst2 just give up.  Queuing\n+\t\t up outer sign extension (often left and right shift) is\n+\t\t hardly more efficient than the original.  See PR70429.  */\n+\t      if (code == ASHIFTRT && mode != result_mode)\n+\t\tbreak;\n \n \t      rtx new_rtx = simplify_const_binary_operation (code, mode,\n \t\t\t\t\t\t\t     XEXP (varop, 0),"}, {"sha": "2459a2aa489a2f7de901c62e3f66c86849b70801", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a362f023e538bc30dd9f2107f71c2435f62b9289/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a362f023e538bc30dd9f2107f71c2435f62b9289/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a362f023e538bc30dd9f2107f71c2435f62b9289", "patch": "@@ -1,5 +1,8 @@\n 2016-03-29  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/70429\n+\t* gcc.c-torture/execute/pr70429.c: New test.\n+\n \tPR tree-optimization/70405\n \t* gcc.dg/pr70405.c: New test.\n "}, {"sha": "6b08c8ead08492c3f3e767bddd31c0d1eeda6e8e", "filename": "gcc/testsuite/gcc.c-torture/execute/pr70429.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a362f023e538bc30dd9f2107f71c2435f62b9289/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr70429.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a362f023e538bc30dd9f2107f71c2435f62b9289/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr70429.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr70429.c?ref=a362f023e538bc30dd9f2107f71c2435f62b9289", "patch": "@@ -0,0 +1,17 @@\n+/* PR rtl-optimization/70429 */\n+\n+__attribute__((noinline, noclone)) int\n+foo (int a)\n+{\n+  return (int) (0x14ff6e2207db5d1fLL >> a) >> 4;\n+}\n+\n+int\n+main ()\n+{\n+  if (sizeof (int) != 4 || sizeof (long long) != 8 || __CHAR_BIT__ != 8)\n+    return 0;\n+  if (foo (1) != 0x3edae8 || foo (2) != -132158092)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}