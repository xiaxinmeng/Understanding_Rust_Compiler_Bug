{"sha": "f5ceeec84f7ef85b96400b54d0e2276a0c0a2ef7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVjZWVlYzg0ZjdlZjg1Yjk2NDAwYjU0ZDBlMjI3NmEwYzBhMmVmNw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-01-18T14:25:03Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-01-18T14:25:03Z"}, "message": "typeck.c (build_modify_expr): Say `initialization' for INIT_EXPRs.\n\ncp:\n\t* typeck.c (build_modify_expr): Say `initialization' for\n\tINIT_EXPRs.\n\t* init.c (build_default_init): Convert to enumeral type, if\n\tneeded.\ntestsuite:\n\t* g++.old-deja/g++.other/init17.C: New test.\n\nFrom-SVN: r39121", "tree": {"sha": "f1e99bdfd621ac1e5fd7a7984d124b3f0e8f76e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1e99bdfd621ac1e5fd7a7984d124b3f0e8f76e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5ceeec84f7ef85b96400b54d0e2276a0c0a2ef7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5ceeec84f7ef85b96400b54d0e2276a0c0a2ef7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5ceeec84f7ef85b96400b54d0e2276a0c0a2ef7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5ceeec84f7ef85b96400b54d0e2276a0c0a2ef7/comments", "author": null, "committer": null, "parents": [{"sha": "2d6dc19dfa98f8852cf648198fe32b918754864f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d6dc19dfa98f8852cf648198fe32b918754864f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d6dc19dfa98f8852cf648198fe32b918754864f"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "fce2a4dc8341720ed1c36eb4ffab1928d7607ead", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ceeec84f7ef85b96400b54d0e2276a0c0a2ef7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ceeec84f7ef85b96400b54d0e2276a0c0a2ef7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f5ceeec84f7ef85b96400b54d0e2276a0c0a2ef7", "patch": "@@ -1,3 +1,10 @@\n+2001-01-18  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* typeck.c (build_modify_expr): Say `initialization' for\n+\tINIT_EXPRs.\n+\t* init.c (build_default_init): Convert to enumeral type, if\n+\tneeded.\n+\n 2001-01-18  Jakub Jelinek  <jakub@redhat.com>\n \n \t* parse.y (nomods_initdcl0): Properly set things up for"}, {"sha": "1516d69103e8c4f05d5ab17350e0cc27fa9673c9", "filename": "gcc/cp/init.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ceeec84f7ef85b96400b54d0e2276a0c0a2ef7/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ceeec84f7ef85b96400b54d0e2276a0c0a2ef7/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=f5ceeec84f7ef85b96400b54d0e2276a0c0a2ef7", "patch": "@@ -232,7 +232,13 @@ build_default_init (type)\n     /*   --if T is a reference type, no initialization is performed.  */\n     return NULL_TREE;\n   else\n-    init = integer_zero_node;\n+    {\n+      init = integer_zero_node;\n+      \n+      if (TREE_CODE (type) == ENUMERAL_TYPE)\n+        /* We must make enumeral types the right type. */\n+        init = fold (build1 (NOP_EXPR, type, init));\n+    }\n \n   init = digest_init (type, init, 0);\n   return init;"}, {"sha": "7a61dec352aeca0c86629dd195353c6b8232b1f5", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ceeec84f7ef85b96400b54d0e2276a0c0a2ef7/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ceeec84f7ef85b96400b54d0e2276a0c0a2ef7/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=f5ceeec84f7ef85b96400b54d0e2276a0c0a2ef7", "patch": "@@ -5822,7 +5822,7 @@ build_modify_expr (lhs, modifycode, rhs)\n   if (modifycode == INIT_EXPR)\n     {\n       newrhs = convert_for_initialization (lhs, lhstype, newrhs, LOOKUP_NORMAL,\n-\t\t\t\t\t   \"assignment\", NULL_TREE, 0);\n+\t\t\t\t\t   \"initialization\", NULL_TREE, 0);\n       if (current_function_decl && \n \t  lhs == DECL_RESULT (current_function_decl))\n \t{"}, {"sha": "2bb910f6c1a05d8fcba2400ce6e1510ede1ef077", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ceeec84f7ef85b96400b54d0e2276a0c0a2ef7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ceeec84f7ef85b96400b54d0e2276a0c0a2ef7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f5ceeec84f7ef85b96400b54d0e2276a0c0a2ef7", "patch": "@@ -1,3 +1,7 @@\n+2001-01-18  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old-deja/g++.other/init17.C: New test.\n+\n 2001-01-18  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* gcc.dg/cpp/if-2.c: Adjust for signed wchar_t."}, {"sha": "4a6e582dc83bbee3e7895d3aae24741e19088b53", "filename": "gcc/testsuite/g++.old-deja/g++.other/init17.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ceeec84f7ef85b96400b54d0e2276a0c0a2ef7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finit17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ceeec84f7ef85b96400b54d0e2276a0c0a2ef7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finit17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finit17.C?ref=f5ceeec84f7ef85b96400b54d0e2276a0c0a2ef7", "patch": "@@ -0,0 +1,18 @@\n+// Build don't link:\n+\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 17 Jan 2001 <nathan@codesourcery.com>\n+\n+// Bug 1631. Default initialization of enumeral types did not convert to the\n+// enumeral type.\n+\n+enum X { alpha, beta };\n+\n+void f(void *ptr)\n+{\n+  X y = X ();\n+  X y1 (0);                   // ERROR - cannot convert\n+  X y2 = X (0);\n+  X *x = new X ();\n+  X *x2 = new X (0);          // ERROR - cannot convert\n+}"}]}