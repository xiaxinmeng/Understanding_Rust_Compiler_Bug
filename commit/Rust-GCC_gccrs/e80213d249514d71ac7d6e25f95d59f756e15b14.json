{"sha": "e80213d249514d71ac7d6e25f95d59f756e15b14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTgwMjEzZDI0OTUxNGQ3MWFjN2Q2ZTI1Zjk1ZDU5Zjc1NmUxNWIxNA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2003-12-07T03:46:14Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-12-07T03:46:14Z"}, "message": "re PR libstdc++/11691 (stdio_filebuf leaks FILE buffer when \"no close\" is requested)\n\n\n2003-12-06  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/11691\n\t* include/ext/stdio_filebuf.h (stdio_filebuf::stdio_filebuf):\n\tRemove __del argument to file descriptor constructor.\n\t* config/io/basic_file_stdio.h (__basic_file::sys_open): Remove\n\tbool argument.\n\t* config/io/basic_file_stdio.cc: Same.\n\nFrom-SVN: r74379", "tree": {"sha": "3e9447244fb1264b12702e0d0b0e77a7a6819ecc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e9447244fb1264b12702e0d0b0e77a7a6819ecc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e80213d249514d71ac7d6e25f95d59f756e15b14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e80213d249514d71ac7d6e25f95d59f756e15b14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e80213d249514d71ac7d6e25f95d59f756e15b14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e80213d249514d71ac7d6e25f95d59f756e15b14/comments", "author": null, "committer": null, "parents": [{"sha": "f7efd730c042fba7abc49461d077d1edd16a014c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7efd730c042fba7abc49461d077d1edd16a014c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7efd730c042fba7abc49461d077d1edd16a014c"}], "stats": {"total": 38, "additions": 20, "deletions": 18}, "files": [{"sha": "788500a7916ab38de16d8ed564385d92ff08ee72", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e80213d249514d71ac7d6e25f95d59f756e15b14/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e80213d249514d71ac7d6e25f95d59f756e15b14/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e80213d249514d71ac7d6e25f95d59f756e15b14", "patch": "@@ -1,3 +1,12 @@\n+2003-12-06  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/11691 \n+\t* include/ext/stdio_filebuf.h (stdio_filebuf::stdio_filebuf):\n+\tRemove __del argument to file descriptor constructor.\n+\t* config/io/basic_file_stdio.h (__basic_file::sys_open): Remove\n+\tbool argument.\n+\t* config/io/basic_file_stdio.cc: Same.\n+\n 2003-12-05  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/13189"}, {"sha": "e03e869d89049cdda935c83f56e560a4e1c98661", "filename": "libstdc++-v3/config/io/basic_file_stdio.cc", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e80213d249514d71ac7d6e25f95d59f756e15b14/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e80213d249514d71ac7d6e25f95d59f756e15b14/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc?ref=e80213d249514d71ac7d6e25f95d59f756e15b14", "patch": "@@ -140,8 +140,7 @@ namespace std\n   }\n   \n   __basic_file<char>*\n-  __basic_file<char>::sys_open(int __fd, ios_base::openmode __mode, \n-\t\t\t       bool __del) \n+  __basic_file<char>::sys_open(int __fd, ios_base::openmode __mode)\n   {\n     __basic_file* __ret = NULL;\n     int __p_mode = 0;\n@@ -151,12 +150,9 @@ namespace std\n     _M_open_mode(__mode, __p_mode, __rw_mode, __c_mode);\n     if (!this->is_open() && (_M_cfile = fdopen(__fd, __c_mode)))\n       {\n-\t// Iff __del is true, then close will fclose the fd.\n-\t_M_cfile_created = __del;\n-\n+\t_M_cfile_created = true;\n \tif (__fd == 0)\n \t  setvbuf(_M_cfile, reinterpret_cast<char*>(NULL), _IONBF, 0);\n-\n \t__ret = this;\n       }\n     return __ret;\n@@ -199,17 +195,17 @@ namespace std\n   __basic_file<char>* \n   __basic_file<char>::close()\n   { \n-    __basic_file* __retval = static_cast<__basic_file*>(NULL);\n+    __basic_file* __ret = static_cast<__basic_file*>(NULL);\n     if (this->is_open())\n       {\n \tif (_M_cfile_created)\n \t  fclose(_M_cfile);\n \telse\n \t  fflush(_M_cfile);\n \t_M_cfile = 0;\n-\t__retval = this;\n+\t__ret = this;\n       }\n-    return __retval;\n+    return __ret;\n   }\n  \n   streamsize "}, {"sha": "d6a06ead739adb07bcd95867d7db58d6a60d3d85", "filename": "libstdc++-v3/config/io/basic_file_stdio.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e80213d249514d71ac7d6e25f95d59f756e15b14/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e80213d249514d71ac7d6e25f95d59f756e15b14/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.h?ref=e80213d249514d71ac7d6e25f95d59f756e15b14", "patch": "@@ -1,6 +1,6 @@\n // Wrapper of C-language FILE struct -*- C++ -*-\n \n-// Copyright (C) 2000, 2001, 2002 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -74,7 +74,7 @@ namespace std\n       sys_open(__c_file* __file, ios_base::openmode);\n \n       __basic_file*\n-      sys_open(int __fd, ios_base::openmode __mode, bool __del);\n+      sys_open(int __fd, ios_base::openmode __mode);\n \n       __basic_file* \n       close(); "}, {"sha": "142af37e6764886018fb81015094a8fd5c72f3b9", "filename": "libstdc++-v3/include/ext/stdio_filebuf.h", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e80213d249514d71ac7d6e25f95d59f756e15b14/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstdio_filebuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e80213d249514d71ac7d6e25f95d59f756e15b14/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstdio_filebuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstdio_filebuf.h?ref=e80213d249514d71ac7d6e25f95d59f756e15b14", "patch": "@@ -65,14 +65,12 @@ namespace __gnu_cxx\n       /**\n        *  @param  fd  An open file descriptor.\n        *  @param  mode  Same meaning as in a standard filebuf.\n-       *  @param  del  Whether to close the file on destruction.\n        *  @param  size  Optimal or preferred size of internal buffer, in chars.\n        *\n        *  This constructor associates a file stream buffer with an open\n-       *  POSIX file descriptor.  Iff @a del is true, then the associated\n-       *  file will be closed when the stdio_filebuf is closed/destroyed.\n+       *  POSIX file descriptor.\n       */\n-      stdio_filebuf(int __fd, std::ios_base::openmode __mode, bool __del, \n+      stdio_filebuf(int __fd, std::ios_base::openmode __mode, \n \t\t    size_t __size = static_cast<size_t>(BUFSIZ));\n \n       /**\n@@ -114,10 +112,9 @@ namespace __gnu_cxx\n \n   template<typename _CharT, typename _Traits>\n     stdio_filebuf<_CharT, _Traits>::\n-    stdio_filebuf(int __fd, std::ios_base::openmode __mode, bool __del, \n-\t\t  size_t __size)\n+    stdio_filebuf(int __fd, std::ios_base::openmode __mode, size_t __size)\n     {\n-      this->_M_file.sys_open(__fd, __mode, __del);\n+      this->_M_file.sys_open(__fd, __mode);\n       if (this->is_open())\n \t{\n \t  this->_M_mode = __mode;"}]}