{"sha": "50025f916d5c996973bcc0af1b020f1857c4e7ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTAwMjVmOTE2ZDVjOTk2OTczYmNjMGFmMWIwMjBmMTg1N2M0ZTdlZA==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2011-09-14T14:32:07Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2011-09-14T14:32:07Z"}, "message": "re PR middle-end/50251 (Revision 178353 caused many test failures)\n\n2011-09-14  Tom de Vries  <tom@codesourcery.com>\n\n\tPR middle-end/50251\n\t* explow.c (emit_stack_restore): Set crtl->need_drap if\n\tstack_restore is emitted.\n\nFrom-SVN: r178853", "tree": {"sha": "0dd6b799e735c86bdc57385a044aa7fb04685930", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dd6b799e735c86bdc57385a044aa7fb04685930"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50025f916d5c996973bcc0af1b020f1857c4e7ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50025f916d5c996973bcc0af1b020f1857c4e7ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50025f916d5c996973bcc0af1b020f1857c4e7ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50025f916d5c996973bcc0af1b020f1857c4e7ed/comments", "author": null, "committer": null, "parents": [{"sha": "86b601168af25ef6881ebd5364235abc788731ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86b601168af25ef6881ebd5364235abc788731ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86b601168af25ef6881ebd5364235abc788731ca"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "384245996248fde5317544b04e223edf940336d6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50025f916d5c996973bcc0af1b020f1857c4e7ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50025f916d5c996973bcc0af1b020f1857c4e7ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=50025f916d5c996973bcc0af1b020f1857c4e7ed", "patch": "@@ -1,3 +1,9 @@\n+2011-09-14  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR middle-end/50251\n+\t* explow.c (emit_stack_restore): Set crtl->need_drap if\n+\tstack_restore is emitted.\n+\n 2011-09-14  Julian Brown  <julian@codesourcery.com>\n \n \t* config/arm/arm.c (arm_override_options): Add unaligned_access"}, {"sha": "11dffedd4b0f88fd92cb921967b3cab6b8d0124e", "filename": "gcc/explow.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50025f916d5c996973bcc0af1b020f1857c4e7ed/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50025f916d5c996973bcc0af1b020f1857c4e7ed/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=50025f916d5c996973bcc0af1b020f1857c4e7ed", "patch": "@@ -1062,6 +1062,20 @@ emit_stack_restore (enum save_level save_level, rtx sa)\n   /* The default is that we use a move insn.  */\n   rtx (*fcn) (rtx, rtx) = gen_move_insn;\n \n+  /* If stack_realign_drap, the x86 backend emits a prologue that aligns both\n+     STACK_POINTER and HARD_FRAME_POINTER.\n+     If stack_realign_fp, the x86 backend emits a prologue that aligns only\n+     STACK_POINTER. This renders the HARD_FRAME_POINTER unusable for accessing\n+     aligned variables, which is reflected in ix86_can_eliminate.\n+     We normally still have the realigned STACK_POINTER that we can use.\n+     But if there is a stack restore still present at reload, it can trigger \n+     mark_not_eliminable for the STACK_POINTER, leaving no way to eliminate\n+     FRAME_POINTER into a hard reg.\n+     To prevent this situation, we force need_drap if we emit a stack\n+     restore.  */\n+  if (SUPPORTS_STACK_ALIGNMENT)\n+    crtl->need_drap = true;\n+\n   /* See if this machine has anything special to do for this kind of save.  */\n   switch (save_level)\n     {"}]}