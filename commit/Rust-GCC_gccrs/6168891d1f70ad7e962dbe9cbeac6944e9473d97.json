{"sha": "6168891d1f70ad7e962dbe9cbeac6944e9473d97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE2ODg5MWQxZjcwYWQ3ZTk2MmRiZTljYmVhYzY5NDRlOTQ3M2Q5Nw==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-11-04T19:41:07Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-11-04T19:41:07Z"}, "message": "[multiple changes]\n\n2009-11-04  Tobias Burnus <burnus@gcc.gnu.org>\n\t    Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/41556\n\tPR fortran/41937\n\t* interface.c (gfc_check_operator_interface): Handle CLASS arguments.\n\t* resolve.c (resolve_allocate_expr): Handle allocatable components of\n\tCLASS variables.\n\n\n2009-11-04  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/41556\n\tPR fortran/41937\n\t* gfortran.dg/class_11.f03: New test.\n\nFrom-SVN: r153911", "tree": {"sha": "8dc5a48e269a6f25b2b8af7908706f9eea0cf161", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8dc5a48e269a6f25b2b8af7908706f9eea0cf161"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6168891d1f70ad7e962dbe9cbeac6944e9473d97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6168891d1f70ad7e962dbe9cbeac6944e9473d97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6168891d1f70ad7e962dbe9cbeac6944e9473d97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6168891d1f70ad7e962dbe9cbeac6944e9473d97/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bc044b8b38aea3f6bd35a8e572fbf5595c5e085", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bc044b8b38aea3f6bd35a8e572fbf5595c5e085", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bc044b8b38aea3f6bd35a8e572fbf5595c5e085"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "5bf0ccc7aaac2097b1a98cc48e4b4f326fc73a30", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6168891d1f70ad7e962dbe9cbeac6944e9473d97/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6168891d1f70ad7e962dbe9cbeac6944e9473d97/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6168891d1f70ad7e962dbe9cbeac6944e9473d97", "patch": "@@ -1,3 +1,12 @@\n+2009-11-04  Tobias Burnus <burnus@gcc.gnu.org>\n+\t    Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/41556\n+\tPR fortran/41937\n+\t* interface.c (gfc_check_operator_interface): Handle CLASS arguments.\n+\t* resolve.c (resolve_allocate_expr): Handle allocatable components of\n+\tCLASS variables.\n+\n 2009-11-04  Richard Guenther  <rguenther@suse.de>\n \n \t* options.c (gfc_post_options): Rely on common code processing"}, {"sha": "05e5d2d8a1f2dfc366974f044c3d8a92072f7a30", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6168891d1f70ad7e962dbe9cbeac6944e9473d97/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6168891d1f70ad7e962dbe9cbeac6944e9473d97/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=6168891d1f70ad7e962dbe9cbeac6944e9473d97", "patch": "@@ -626,6 +626,7 @@ gfc_check_operator_interface (gfc_symbol *sym, gfc_intrinsic_op op,\n \t - Types and kinds do not conform, and\n \t - First argument is of derived type.  */\n       if (sym->formal->sym->ts.type != BT_DERIVED\n+\t  && sym->formal->sym->ts.type != BT_CLASS\n \t  && (r1 == 0 || r1 == r2)\n \t  && (sym->formal->sym->ts.type == sym->formal->next->sym->ts.type\n \t      || (gfc_numeric_ts (&sym->formal->sym->ts)"}, {"sha": "4a83f22dfd45b65945e2ca0b7003160af6080c6e", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6168891d1f70ad7e962dbe9cbeac6944e9473d97/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6168891d1f70ad7e962dbe9cbeac6944e9473d97/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=6168891d1f70ad7e962dbe9cbeac6944e9473d97", "patch": "@@ -6198,7 +6198,7 @@ resolve_allocate_expr (gfc_expr *e, gfc_code *code)\n \t  sym = a->expr->symtree->n.sym;\n \n \t  /* TODO - check derived type components.  */\n-\t  if (sym->ts.type == BT_DERIVED)\n+\t  if (sym->ts.type == BT_DERIVED || sym->ts.type == BT_CLASS)\n \t    continue;\n \n \t  if ((ar->start[i] != NULL"}, {"sha": "3066e3d17ff47aab9d034abacbdc9c2b42b1fbcf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6168891d1f70ad7e962dbe9cbeac6944e9473d97/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6168891d1f70ad7e962dbe9cbeac6944e9473d97/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6168891d1f70ad7e962dbe9cbeac6944e9473d97", "patch": "@@ -1,3 +1,9 @@\n+2009-11-04  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/41556\n+\tPR fortran/41937\n+\t* gfortran.dg/class_11.f03: New test.\n+\n 2009-11-04  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/35067"}, {"sha": "bf80c4e00e61fb66abd1495e8d32feeace784de1", "filename": "gcc/testsuite/gfortran.dg/class_11.f03", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6168891d1f70ad7e962dbe9cbeac6944e9473d97/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_11.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6168891d1f70ad7e962dbe9cbeac6944e9473d97/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_11.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_11.f03?ref=6168891d1f70ad7e962dbe9cbeac6944e9473d97", "patch": "@@ -0,0 +1,37 @@\n+! { dg-do compile }\n+!\n+! PR 41556\n+! Contributed by Damian Rouson <damian@rouson.net>\n+\n+  implicit none\n+\n+  type ,abstract :: object\n+  contains\n+    procedure(assign_interface) ,deferred :: assign   \n+    generic  :: assignment(=) => assign\n+  end type \n+\n+  abstract interface\n+    subroutine assign_interface(lhs,rhs) \n+      import :: object \n+      class(object) ,intent(inout) :: lhs\n+      class(object) ,intent(in)    :: rhs\n+    end subroutine \n+  end interface\n+\n+! PR 41937\n+! Contributed by Juergen Reuter <reuter@physik.uni-freiburg.de>\n+\n+  type, abstract :: cuba_abstract_type\n+     integer :: dim_f = 1\n+     real, dimension(:), allocatable :: integral\n+  end type cuba_abstract_type\n+\n+contains\n+\n+    subroutine cuba_abstract_alloc_dim_f(this)\n+      class(cuba_abstract_type) :: this\n+      allocate(this%integral(this%dim_f))\n+    end subroutine cuba_abstract_alloc_dim_f\n+\n+end"}]}