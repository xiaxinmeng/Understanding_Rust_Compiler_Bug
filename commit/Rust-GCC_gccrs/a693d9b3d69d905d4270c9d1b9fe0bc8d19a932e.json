{"sha": "a693d9b3d69d905d4270c9d1b9fe0bc8d19a932e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY5M2Q5YjNkNjlkOTA1ZDQyNzBjOWQxYjlmZTBiYzhkMTlhOTMyZQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-02-04T13:28:34Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-02-04T13:28:34Z"}, "message": "Do not dereference NULL pointer in resolve_ref (PR fortran/89185).\n\n2019-02-04  Martin Liska  <mliska@suse.cz>\n\n\tPR fortran/89185\n\t* resolve.c (resolve_ref): Remove breakout variable as\n\twe need to prevent prev = &(*prev)->next to happen\n\twith *prev == NULL.\n\nFrom-SVN: r268521", "tree": {"sha": "c59536ff8a607ab1e7f6f754632f6eae79992284", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c59536ff8a607ab1e7f6f754632f6eae79992284"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a693d9b3d69d905d4270c9d1b9fe0bc8d19a932e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a693d9b3d69d905d4270c9d1b9fe0bc8d19a932e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a693d9b3d69d905d4270c9d1b9fe0bc8d19a932e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a693d9b3d69d905d4270c9d1b9fe0bc8d19a932e/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "13157c1056407bc8c7d0d28772981bdd7cbc82c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13157c1056407bc8c7d0d28772981bdd7cbc82c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13157c1056407bc8c7d0d28772981bdd7cbc82c4"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "1bd851a4b0e1adf53951b193e25d782052b0641e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a693d9b3d69d905d4270c9d1b9fe0bc8d19a932e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a693d9b3d69d905d4270c9d1b9fe0bc8d19a932e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a693d9b3d69d905d4270c9d1b9fe0bc8d19a932e", "patch": "@@ -1,3 +1,10 @@\n+2019-02-04  Martin Liska  <mliska@suse.cz>\n+\n+\tPR fortran/89185\n+\t* resolve.c (resolve_ref): Remove breakout variable as\n+\twe need to prevent prev = &(*prev)->next to happen\n+\twith *prev == NULL.\n+\n 2019-02-04  Martin Liska  <mliska@suse.cz>\n \n \tPR fortran/88912"}, {"sha": "92d27fc7632a580a85aa58b6b5f1fc94de587e29", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a693d9b3d69d905d4270c9d1b9fe0bc8d19a932e/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a693d9b3d69d905d4270c9d1b9fe0bc8d19a932e/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=a693d9b3d69d905d4270c9d1b9fe0bc8d19a932e", "patch": "@@ -5046,7 +5046,6 @@ resolve_ref (gfc_expr *expr)\n   int current_part_dimension, n_components, seen_part_dimension;\n   gfc_ref *ref, **prev;\n   bool equal_length;\n-  bool breakout;\n \n   for (ref = expr->ref; ref; ref = ref->next)\n     if (ref->type == REF_ARRAY && ref->u.ar.as == NULL)\n@@ -5055,8 +5054,8 @@ resolve_ref (gfc_expr *expr)\n \tbreak;\n       }\n \n-  breakout = false;\n-  for (prev = &expr->ref; !breakout && *prev != NULL; prev = &(*prev)->next)\n+  for (prev = &expr->ref; *prev != NULL;\n+       prev = *prev == NULL ? prev : &(*prev)->next)\n     switch ((*prev)->type)\n       {\n       case REF_ARRAY:\n@@ -5082,8 +5081,6 @@ resolve_ref (gfc_expr *expr)\n \t    expr->ts.u.cl = ref->u.ss.length;\n \t    ref->u.ss.length = NULL;\n \t    gfc_free_ref_list (ref);\n-\t    if (*prev == NULL)\n-\t      breakout = true;\n \t  }\n \tbreak;\n       }"}]}