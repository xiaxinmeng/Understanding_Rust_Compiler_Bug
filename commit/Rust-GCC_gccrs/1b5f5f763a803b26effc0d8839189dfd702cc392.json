{"sha": "1b5f5f763a803b26effc0d8839189dfd702cc392", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI1ZjVmNzYzYTgwM2IyNmVmZmMwZDg4MzkxODlkZmQ3MDJjYzM5Mg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-06-16T17:48:05Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-06-16T17:48:05Z"}, "message": "decl2.c (import_export_decl): Use same_type_p, rather than relying on pointer-equality for types.\n\n\t* decl2.c (import_export_decl): Use same_type_p, rather than\n\trelying on pointer-equality for types.\n\t* method.c (do_build_copy_constructor): Simplify.\n\nFrom-SVN: r27555", "tree": {"sha": "e804560654f45478defb7ef6556ef0b17b4593c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e804560654f45478defb7ef6556ef0b17b4593c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b5f5f763a803b26effc0d8839189dfd702cc392", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b5f5f763a803b26effc0d8839189dfd702cc392", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b5f5f763a803b26effc0d8839189dfd702cc392", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b5f5f763a803b26effc0d8839189dfd702cc392/comments", "author": null, "committer": null, "parents": [{"sha": "78d114ef2d4ab348ab5446b9fc29da04c65de7ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78d114ef2d4ab348ab5446b9fc29da04c65de7ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78d114ef2d4ab348ab5446b9fc29da04c65de7ac"}], "stats": {"total": 79, "additions": 48, "deletions": 31}, "files": [{"sha": "1037548b7a2b56073abde2773ca785b568789b1e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b5f5f763a803b26effc0d8839189dfd702cc392/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b5f5f763a803b26effc0d8839189dfd702cc392/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1b5f5f763a803b26effc0d8839189dfd702cc392", "patch": "@@ -1,5 +1,10 @@\n 1999-06-16  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* decl2.c (import_export_decl): Use same_type_p, rather than\n+\trelying on pointer-equality for types.\n+\n+\t* method.c (do_build_copy_constructor): Simplify.\n+\n \t* call.c (build_method_call): Remove bogus code for two-argument\n \tdelete.\n \t* init.c (build_new_1): Expand on comment, and remove dead code."}, {"sha": "3b099930fac30e013dfe423253e0f1cd7604926c", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b5f5f763a803b26effc0d8839189dfd702cc392/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b5f5f763a803b26effc0d8839189dfd702cc392/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=1b5f5f763a803b26effc0d8839189dfd702cc392", "patch": "@@ -2807,7 +2807,7 @@ import_export_decl (decl)\n \t     since it will not be emitted when the vtable for the type\n \t     is output (which is when the unqualified version is\n \t     generated).  */\n-\t  && ctype == TYPE_MAIN_VARIANT (ctype))\n+\t  && same_type_p (ctype, TYPE_MAIN_VARIANT (ctype)))\n \t{\n \t  DECL_NOT_REALLY_EXTERN (decl)\n \t    = ! (CLASSTYPE_INTERFACE_ONLY (ctype)\n@@ -2818,7 +2818,8 @@ import_export_decl (decl)\n \t  if (flag_weak)\n \t    comdat_linkage (decl);\n \t}\n-      else if (TYPE_BUILT_IN (ctype) && ctype == TYPE_MAIN_VARIANT (ctype))\n+      else if (TYPE_BUILT_IN (ctype) \n+\t       && same_type_p (ctype, TYPE_MAIN_VARIANT (ctype)))\n \tDECL_NOT_REALLY_EXTERN (decl) = 0;\n       else\n \tcomdat_linkage (decl);"}, {"sha": "caa3eb597a2ca08d740f1f279997a505a79cedc7", "filename": "gcc/cp/method.c", "status": "modified", "additions": 8, "deletions": 29, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b5f5f763a803b26effc0d8839189dfd702cc392/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b5f5f763a803b26effc0d8839189dfd702cc392/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=1b5f5f763a803b26effc0d8839189dfd702cc392", "patch": "@@ -2231,42 +2231,21 @@ do_build_copy_constructor (fndecl)\n       tree binfos = TYPE_BINFO_BASETYPES (current_class_type);\n       int i;\n \n+      /* Initialize all the base-classes.  */\n       for (t = CLASSTYPE_VBASECLASSES (current_class_type); t;\n \t   t = TREE_CHAIN (t))\n-\t{\n-\t  tree basetype = BINFO_TYPE (t);\n-\t  tree p = convert_to_reference\n-\t    (build_reference_type (basetype), parm,\n-\t     CONV_IMPLICIT|CONV_CONST, LOOKUP_COMPLAIN, NULL_TREE);\n-\t  p = convert_from_reference (p);\n-\n-\t  if (p == error_mark_node)\n-\t    cp_error (\"in default copy constructor\");\n-\t  else \n-\t    current_base_init_list = tree_cons (basetype,\n-\t\t\t\t\t\tp, current_base_init_list);\n-\t}\n-\t\n+\tcurrent_base_init_list \n+\t  = tree_cons (BINFO_TYPE (t), parm, current_base_init_list);\n       for (i = 0; i < n_bases; ++i)\n \t{\n-\t  tree p, basetype = TREE_VEC_ELT (binfos, i);\n-\t  if (TREE_VIA_VIRTUAL (basetype))\n+\t  t = TREE_VEC_ELT (binfos, i);\n+\t  if (TREE_VIA_VIRTUAL (t))\n \t    continue; \n \n-\t  basetype = BINFO_TYPE (basetype);\n-\t  p = convert_to_reference\n-\t    (build_reference_type (basetype), parm,\n-\t     CONV_IMPLICIT|CONV_CONST, LOOKUP_COMPLAIN, NULL_TREE);\n-\n-\t  if (p == error_mark_node) \n-\t    cp_error (\"in default copy constructor\");\n-\t  else \n-\t    {\n-\t      p = convert_from_reference (p);\n-\t      current_base_init_list = tree_cons (basetype,\n-\t\t\t\t\t\t  p, current_base_init_list);\n-\t    }\n+\t  current_base_init_list \n+\t    = tree_cons (BINFO_TYPE (t), parm, current_base_init_list);\n \t}\n+\n       for (; fields; fields = TREE_CHAIN (fields))\n \t{\n \t  tree init, t;"}, {"sha": "66c607a04c4370a34161d863b62f49b5b11af4a1", "filename": "gcc/testsuite/g++.old-deja/g++.eh/catch2.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b5f5f763a803b26effc0d8839189dfd702cc392/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fcatch2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b5f5f763a803b26effc0d8839189dfd702cc392/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fcatch2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fcatch2.C?ref=1b5f5f763a803b26effc0d8839189dfd702cc392", "patch": "@@ -0,0 +1,11 @@\n+// Build don't link:\n+// Origin: Mike Danylchuk <miked@mpath.com>\n+\n+typedef char TCHAR;\n+\n+int main()\n+{\n+  try {}\n+  catch( TCHAR* Err ) {}\n+}\n+"}, {"sha": "2fb52a1ece2b4d86e570d78d5a8c40d4f48d9282", "filename": "gcc/testsuite/g++.old-deja/g++.other/copy2.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b5f5f763a803b26effc0d8839189dfd702cc392/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcopy2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b5f5f763a803b26effc0d8839189dfd702cc392/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcopy2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcopy2.C?ref=1b5f5f763a803b26effc0d8839189dfd702cc392", "patch": "@@ -0,0 +1,21 @@\n+// Origin: Mark Mitchell <mark@codesourcery.com>\n+\n+int i;\n+\n+struct B {\n+  B () {}\n+  B (B&) { i = 1; }\n+  B (const B&) { i = 2; }\n+};\n+\n+struct D : public B {\n+  D () {}\n+};\n+\n+int main ()\n+{\n+  D d;\n+  D d2 (d);\n+  if (i != 2)\n+    return 1;\n+}"}]}