{"sha": "eb1aef53088ad4689576e1216dad167974d7d8b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIxYWVmNTMwODhhZDQ2ODk1NzZlMTIxNmRhZDE2Nzk3NGQ3ZDhiNA==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2004-09-04T12:43:27Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2004-09-04T12:43:27Z"}, "message": "decl.c (grok_declarator): Remove a redundant semicolon.\n\n\t* decl.c (grok_declarator): Remove a redundant semicolon.\n\n\t* parser.c (cp_parser_decl_specifier_seq, cp_parser_type_specifier):\n\tCorrect comments describing function parameters.\n\nFrom-SVN: r87085", "tree": {"sha": "b36476aaa1c3e9a5e096e1b115dd9e49e4a632d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b36476aaa1c3e9a5e096e1b115dd9e49e4a632d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb1aef53088ad4689576e1216dad167974d7d8b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb1aef53088ad4689576e1216dad167974d7d8b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb1aef53088ad4689576e1216dad167974d7d8b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb1aef53088ad4689576e1216dad167974d7d8b4/comments", "author": null, "committer": null, "parents": [{"sha": "69fbfdd8c6f44d244d7caef4e58967054272a9d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69fbfdd8c6f44d244d7caef4e58967054272a9d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69fbfdd8c6f44d244d7caef4e58967054272a9d1"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "32a1b7eb372fde31b9efddfdf3cbbee547f96c17", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1aef53088ad4689576e1216dad167974d7d8b4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1aef53088ad4689576e1216dad167974d7d8b4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=eb1aef53088ad4689576e1216dad167974d7d8b4", "patch": "@@ -1,4 +1,11 @@\n-2004-0903  Matt Austern  <austern@apple.com>\n+2004-09-04  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\t* decl.c (grok_declarator): Remove a redundant semicolon.\n+\n+\t* parser.c (cp_parser_decl_specifier_seq, cp_parser_type_specifier):\n+\tCorrect comments describing function parameters.\n+\n+2004-09-03  Matt Austern  <austern@apple.com>\n \tCompile speed improvement.\n \t* parser.c (cp_lexer_print_token): Only define if ENABLE_CHECKING set.\n \tOtherwise define a stub macro that expands to nothing."}, {"sha": "607b907078d8c914c862a9da5a7602df2f1cca43", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1aef53088ad4689576e1216dad167974d7d8b4/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1aef53088ad4689576e1216dad167974d7d8b4/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=eb1aef53088ad4689576e1216dad167974d7d8b4", "patch": "@@ -6420,7 +6420,7 @@ grokdeclarator (const cp_declarator *declarator,\n \t    if (TREE_CODE (decl) == SCOPE_REF)\n \t      {\n \t\ttree qualifying_scope = TREE_OPERAND (decl, 0);\n-;\n+\n \t\t/* It is valid to write:\n \n \t\t   class C { void f(); };"}, {"sha": "45eb20aa4659d4b8365cf0e7c7776e01dc244046", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1aef53088ad4689576e1216dad167974d7d8b4/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1aef53088ad4689576e1216dad167974d7d8b4/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=eb1aef53088ad4689576e1216dad167974d7d8b4", "patch": "@@ -7126,11 +7126,7 @@ cp_parser_simple_declaration (cp_parser* parser,\n \n    Set *DECL_SPECS to a representation of the decl-specifier-seq.\n \n-   If FRIEND_IS_NOT_CLASS_P is non-NULL, and the `friend' specifier\n-   appears, and the entity that will be a friend is not going to be a\n-   class, then *FRIEND_IS_NOT_CLASS_P will be set to TRUE.  Note that\n-   even if *FRIEND_IS_NOT_CLASS_P is FALSE, the entity to which\n-   friendship is granted might not be a class.\n+   The parser flags FLAGS is used to control type-specifier parsing.\n \n    *DECLARES_CLASS_OR_ENUM is set to the bitwise or of the following\n    flags:\n@@ -9227,9 +9223,10 @@ cp_parser_explicit_specialization (cp_parser* parser)\n    class-specifier, enum-specifier, or elaborated-type-specifier, a\n    TREE_TYPE is returned; otherwise, a TYPE_DECL is returned.\n \n-   If IS_FRIEND is TRUE then this type-specifier is being declared a\n-   `friend'.  If IS_DECLARATION is TRUE, then this type-specifier is\n-   appearing in a decl-specifier-seq.\n+   The parser flags FLAGS is used to control type-specifier parsing.\n+\n+   If IS_DECLARATION is TRUE, then this type-specifier is appearing\n+   in a decl-specifier-seq.\n \n    If DECLARES_CLASS_OR_ENUM is non-NULL, and the type-specifier is a\n    class-specifier, enum-specifier, or elaborated-type-specifier, then"}]}