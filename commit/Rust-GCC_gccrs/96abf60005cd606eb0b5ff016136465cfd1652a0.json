{"sha": "96abf60005cd606eb0b5ff016136465cfd1652a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZhYmY2MDAwNWNkNjA2ZWIwYjVmZjAxNjEzNjQ2NWNmZDE2NTJhMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-02-20T11:13:44Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-02-20T11:13:44Z"}, "message": "ropeimpl.h: Check __STL_PTHREADS instead of _PTHREADS.\n\n\t* ropeimpl.h: Check __STL_PTHREADS instead of _PTHREADS.\n\t* stl_alloc.h: Ditto.\n\t* stl_config.h: Ditto.\n\t* stl_rope.h: Ditto.\n\t* stl_config.h: include <_G_config.h> if __GNUG__ is defined.\n\t(__STL_PTHREADS): Defined if _PTHREADS is defined or\n\t__GLIBC__ >= 2.\n\nFrom-SVN: r18138", "tree": {"sha": "5618686f3e5e0f08b6e3cfd21b3e18330132e4f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5618686f3e5e0f08b6e3cfd21b3e18330132e4f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96abf60005cd606eb0b5ff016136465cfd1652a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96abf60005cd606eb0b5ff016136465cfd1652a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96abf60005cd606eb0b5ff016136465cfd1652a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96abf60005cd606eb0b5ff016136465cfd1652a0/comments", "author": null, "committer": null, "parents": [{"sha": "9766dbcffc40a93a0f458c4888bbd5e33470bdfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9766dbcffc40a93a0f458c4888bbd5e33470bdfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9766dbcffc40a93a0f458c4888bbd5e33470bdfb"}], "stats": {"total": 44, "additions": 34, "deletions": 10}, "files": [{"sha": "5605d7c323e466fdaa3b37f73255b5d7b752f765", "filename": "libstdc++/stl/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96abf60005cd606eb0b5ff016136465cfd1652a0/libstdc%2B%2B%2Fstl%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96abf60005cd606eb0b5ff016136465cfd1652a0/libstdc%2B%2B%2Fstl%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2FChangeLog?ref=96abf60005cd606eb0b5ff016136465cfd1652a0", "patch": "@@ -1,3 +1,19 @@\n+Fri Feb 20 16:15:05 1998  H.J. Lu  (hjl@gnu.org)\n+\t\t\t  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* ropeimpl.h: Check __STL_PTHREADS instead of _PTHREADS.\n+\t* stl_alloc.h: Ditto.\n+\t* stl_config.h: Ditto.\n+\t* stl_rope.h: Ditto.\n+\n+\t* stl_config.h: include <_G_config.h> if __GNUG__ is defined.\n+\t(__STL_PTHREADS): Defined if _PTHREADS is defined or\n+\t__GLIBC__ >= 2.\n+\n+Tue Jan 27 12:01:25 1998  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* stl_algo.h (__lg): Fix for n == 0.\n+\n Sat Nov  8 00:45:17 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* stl_hash_set.h (swap): Fix typo."}, {"sha": "d652c815b45db4b0e0e610ae82bced514c67a298", "filename": "libstdc++/stl/ropeimpl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96abf60005cd606eb0b5ff016136465cfd1652a0/libstdc%2B%2B%2Fstl%2Fropeimpl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96abf60005cd606eb0b5ff016136465cfd1652a0/libstdc%2B%2B%2Fstl%2Fropeimpl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fropeimpl.h?ref=96abf60005cd606eb0b5ff016136465cfd1652a0", "patch": "@@ -1429,7 +1429,7 @@ rope<charT, Alloc>::rope(size_t n, charT c)\n \n template<class charT, class Alloc> charT rope<charT,Alloc>::empty_c_str[1];\n \n-# ifdef _PTHREADS\n+# ifdef __STL_PTHREADS\n     template<class charT, class Alloc>\n     pthread_mutex_t rope<charT,Alloc>::swap_lock = PTHREAD_MUTEX_INITIALIZER;\n # endif"}, {"sha": "5cde42c1cd29fb9b2beb32b8b0003ef2ec71eceb", "filename": "libstdc++/stl/stl_algo.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96abf60005cd606eb0b5ff016136465cfd1652a0/libstdc%2B%2B%2Fstl%2Fstl_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96abf60005cd606eb0b5ff016136465cfd1652a0/libstdc%2B%2B%2Fstl%2Fstl_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_algo.h?ref=96abf60005cd606eb0b5ff016136465cfd1652a0", "patch": "@@ -1004,7 +1004,7 @@ void __final_insertion_sort(RandomAccessIterator first,\n template <class Size>\n inline Size __lg(Size n) {\n   Size k;\n-  for (k = 0; n != 1; n >>= 1) ++k;\n+  for (k = 0; n > 1; n >>= 1) ++k;\n   return k;\n }\n "}, {"sha": "0f2ba28bb98e4b77eb74957679484f2d0389682d", "filename": "libstdc++/stl/stl_alloc.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96abf60005cd606eb0b5ff016136465cfd1652a0/libstdc%2B%2B%2Fstl%2Fstl_alloc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96abf60005cd606eb0b5ff016136465cfd1652a0/libstdc%2B%2B%2Fstl%2Fstl_alloc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_alloc.h?ref=96abf60005cd606eb0b5ff016136465cfd1652a0", "patch": "@@ -61,12 +61,12 @@\n #  define __RESTRICT\n #endif\n \n-#if !defined(_PTHREADS) && !defined(_NOTHREADS) \\\n+#if !defined(__STL_PTHREADS) && !defined(_NOTHREADS) \\\n  && !defined(__STL_SGI_THREADS) && !defined(__STL_WIN32THREADS)\n #   define _NOTHREADS\n #endif\n \n-# ifdef _PTHREADS\n+# ifdef __STL_PTHREADS\n     // POSIX Threads\n     // This is dubious, since this is likely to be a high contention\n     // lock.   Performance may not be adequate.\n@@ -357,7 +357,7 @@ class __default_alloc_template {\n     static inline void __unlock(volatile unsigned long *);\n # endif\n \n-# ifdef _PTHREADS\n+# ifdef __STL_PTHREADS\n     static pthread_mutex_t __node_allocator_lock;\n # endif\n \n@@ -558,7 +558,7 @@ __default_alloc_template<threads, inst>::reallocate(void *p,\n     return(result);\n }\n \n-#ifdef _PTHREADS\n+#ifdef __STL_PTHREADS\n     template <bool threads, int inst>\n     pthread_mutex_t\n     __default_alloc_template<threads, inst>::__node_allocator_lock"}, {"sha": "ff73028989748c5f35ecf0a3f865e43ad1b2fdd5", "filename": "libstdc++/stl/stl_config.h", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96abf60005cd606eb0b5ff016136465cfd1652a0/libstdc%2B%2B%2Fstl%2Fstl_config.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96abf60005cd606eb0b5ff016136465cfd1652a0/libstdc%2B%2B%2Fstl%2Fstl_config.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_config.h?ref=96abf60005cd606eb0b5ff016136465cfd1652a0", "patch": "@@ -71,6 +71,10 @@\n //  (19) Defines __stl_assert either as a test or as a null macro,\n //       depending on whether or not __STL_ASSERTIONS is defined.\n \n+#ifdef _PTHREADS\n+#   define __STL_PTHREADS\n+#endif\n+\n # if defined(__sgi) && !defined(__GNUC__)\n #   if !defined(_BOOL)\n #     define __STL_NEED_BOOL\n@@ -93,13 +97,14 @@\n #   if (_COMPILER_VERSION >= 721) && defined(_NAMESPACES)\n #     define __STL_USE_NAMESPACES\n #   endif \n-#   if !defined(_NOTHREADS) && !defined(_PTHREADS)\n+#   if !defined(_NOTHREADS) && !defined(__STL_PTHREADS)\n #     define __STL_SGI_THREADS\n #   endif\n # endif\n \n # ifdef __GNUC__\n-#   if 0 && (__GNUC__ < 2 || (__GNUC__ == 2 && __GNUC_MINOR__ < 8))\n+#   include <_G_config.h>\n+#   if __GNUC__ < 2 || (__GNUC__ == 2 && __GNUC_MINOR__ < 8)\n #     define __STL_STATIC_TEMPLATE_MEMBER_BUG\n #     define __STL_NEED_TYPENAME\n #     define __STL_NEED_EXPLICIT\n@@ -109,6 +114,9 @@\n #     define __STL_EXPLICIT_FUNCTION_TMPL_ARGS\n #     define __STL_MEMBER_TEMPLATES\n #   endif\n+#   if !defined(_NOTHREADS) && __GLIBC__ >= 2\n+#     define __STL_PTHREADS\n+#   endif\n #   ifdef __EXCEPTIONS\n #     define __STL_USE_EXCEPTIONS\n #   endif"}, {"sha": "d37c679ba288dc948f9fb1ab2e065192410d350c", "filename": "libstdc++/stl/stl_rope.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96abf60005cd606eb0b5ff016136465cfd1652a0/libstdc%2B%2B%2Fstl%2Fstl_rope.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96abf60005cd606eb0b5ff016136465cfd1652a0/libstdc%2B%2B%2Fstl%2Fstl_rope.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_rope.h?ref=96abf60005cd606eb0b5ff016136465cfd1652a0", "patch": "@@ -306,7 +306,7 @@ struct __rope_RopeBase {\n             {\n                 return InterlockedDecrement(&refcount);\n             }\n-#\telif defined(_PTHREADS)\n+#\telif defined(__STL_PTHREADS)\n \t    // This should be portable, but performance is expected\n \t    // to be quite awful.  This really needs platform specific\n \t    // code.\n@@ -939,7 +939,7 @@ class rope {\n \t    static cstrptr atomic_swap(cstrptr *p, cstrptr q) {\n \t\treturn (cstrptr) InterlockedExchange((LPLONG)p, (LONG)q);\n \t    }\n-#\telif defined(_PTHREADS)\n+#\telif defined(__STL_PTHREADS)\n \t    // This should be portable, but performance is expected\n \t    // to be quite awful.  This really needs platform specific\n \t    // code."}]}