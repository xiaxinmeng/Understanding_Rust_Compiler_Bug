{"sha": "28a19afce3adc9b0ad44346c8de63577e0e670f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhhMTlhZmNlM2FkYzliMGFkNDQzNDZjOGRlNjM1NzdlMGU2NzBmMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-08-31T22:38:14Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-08-31T22:38:14Z"}, "message": "(ends_in_label): New %union member.\n\n(stmts, stmt_or_label): Use new member to avoid lexical lookahead hack.\n(lineno_stmt_or_labels): New rule.\n(lineno_stmt_or_label, stmt_or_label): Yield nonzero if it ends in a label.\n\nFrom-SVN: r10302", "tree": {"sha": "04b371574536768984255faffbc0604fdd0af694", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04b371574536768984255faffbc0604fdd0af694"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28a19afce3adc9b0ad44346c8de63577e0e670f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28a19afce3adc9b0ad44346c8de63577e0e670f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28a19afce3adc9b0ad44346c8de63577e0e670f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28a19afce3adc9b0ad44346c8de63577e0e670f2/comments", "author": null, "committer": null, "parents": [{"sha": "f4eed9e2c57990dedd7b1b6f912cfc3175cbf917", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4eed9e2c57990dedd7b1b6f912cfc3175cbf917", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4eed9e2c57990dedd7b1b6f912cfc3175cbf917"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "4d63f615609814c7475ec9dcaccd553e814bd9b1", "filename": "gcc/c-parse.in", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28a19afce3adc9b0ad44346c8de63577e0e670f2/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28a19afce3adc9b0ad44346c8de63577e0e670f2/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=28a19afce3adc9b0ad44346c8de63577e0e670f2", "patch": "@@ -103,7 +103,7 @@ void yyerror ();\n %start program\n \n %union {long itype; tree ttype; enum tree_code code;\n-\tchar *filename; int lineno; }\n+\tchar *filename; int lineno; int ends_in_label; }\n \n /* All identifiers that are not reserved words\n    and are not declared typedefs in the current block */\n@@ -210,6 +210,8 @@ void yyerror ();\n \n %type <itype> setspecs\n \n+%type <ends_in_label> lineno_stmt_or_label lineno_stmt_or_labels stmt_or_label\n+\n %type <filename> save_filename\n %type <lineno> save_lineno\n \f\n@@ -1557,9 +1559,19 @@ absdcl1:  /* a nonempty absolute declarator */\n    is actually regarded as an invalid decl and part of the decls.  */\n \n stmts:\n+\tlineno_stmt_or_labels\n+\t\t{\n+\t\t  if (pedantic && $1)\n+\t\t    pedwarn (\"ANSI C forbids label at end of compound statement\");\n+\t\t}\n+\t;\n+\n+lineno_stmt_or_labels:\n \t  lineno_stmt_or_label\n-\t| stmts lineno_stmt_or_label\n-\t| stmts errstmt\n+\t| lineno_stmt_or_labels lineno_stmt_or_label\n+\t\t{ $$ = $2; }\n+\t| lineno_stmt_or_labels errstmt\n+\t\t{ $$ = 0; }\n \t;\n \n xstmts:\n@@ -1699,19 +1711,14 @@ lineno_labeled_stmt:\n \n lineno_stmt_or_label:\n \t  save_filename save_lineno stmt_or_label\n-\t\t{ }\n+\t\t{ $$ = $3; }\n \t;\n \n stmt_or_label:\n \t  stmt\n+\t\t{ $$ = 0; }\n \t| label\n-\t\t{ int next;\n-\t\t  position_after_white_space ();\n-\t\t  next = getc (finput);\n-\t\t  ungetc (next, finput);\n-\t\t  if (pedantic && next == '}')\n-\t\t    pedwarn (\"ANSI C forbids label at end of compound statement\");\n-\t\t}\n+\t\t{ $$ = 1; }\n \t;\n \n /* Parse a single real statement, not including any labels.  */"}]}