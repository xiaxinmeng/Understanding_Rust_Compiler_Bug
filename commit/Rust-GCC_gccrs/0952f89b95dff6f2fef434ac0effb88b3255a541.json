{"sha": "0952f89b95dff6f2fef434ac0effb88b3255a541", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk1MmY4OWI5NWRmZjZmMmZlZjQzNGFjMGVmZmI4OGIzMjU1YTU0MQ==", "commit": {"author": {"name": "Rodney Brown", "email": "RodneyBrown@mynd.com", "date": "2000-10-16T16:20:23Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-10-16T16:20:23Z"}, "message": "pa-protos.h (output_64bit_and, [...]): Constify char * return value.\n\n        * config/pa/pa/pa-protos.h (output_64bit_and, output_64bit_ior):\n        Constify char * return value.\n        * config/pa/pa/pa.c\n        (output_64bit_and, output_64bit_ior): Constify char * return value.\n        (pa_can_combine_p): Make static.\n        (function_arg): Decorate unused `named' argument. Fix comment typo.\n        (function_arg_partial_nregs): Decorate unused `named' argument.\n\nFrom-SVN: r36884", "tree": {"sha": "358fa61e5f32c4752a0de3dd56d71308830687e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/358fa61e5f32c4752a0de3dd56d71308830687e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0952f89b95dff6f2fef434ac0effb88b3255a541", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0952f89b95dff6f2fef434ac0effb88b3255a541", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0952f89b95dff6f2fef434ac0effb88b3255a541", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0952f89b95dff6f2fef434ac0effb88b3255a541/comments", "author": null, "committer": null, "parents": [{"sha": "6d2e14543b118bc359e02b717ac3cd3bfe848e65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d2e14543b118bc359e02b717ac3cd3bfe848e65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d2e14543b118bc359e02b717ac3cd3bfe848e65"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "7ae43801844ddd34f5285cae81db3c1abacadd83", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0952f89b95dff6f2fef434ac0effb88b3255a541/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0952f89b95dff6f2fef434ac0effb88b3255a541/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0952f89b95dff6f2fef434ac0effb88b3255a541", "patch": "@@ -1,3 +1,13 @@\n+2000-10-16  Rodney Brown  <RodneyBrown@mynd.com>\n+\n+\t* config/pa/pa/pa-protos.h (output_64bit_and, output_64bit_ior):\n+\tConstify char * return value.\n+\t* config/pa/pa/pa.c\n+\t(output_64bit_and, output_64bit_ior): Constify char * return value.\n+\t(pa_can_combine_p): Make static.\n+\t(function_arg): Decorate unused `named' argument. Fix comment typo.\n+\t(function_arg_partial_nregs): Decorate unused `named' argument.\n+\n 2000-10-16  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* c-common.c (format_check_results): New structure."}, {"sha": "6fd697bc15799f97f5b6df10d70a35556dfd15a6", "filename": "gcc/config/pa/pa-protos.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0952f89b95dff6f2fef434ac0effb88b3255a541/gcc%2Fconfig%2Fpa%2Fpa-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0952f89b95dff6f2fef434ac0effb88b3255a541/gcc%2Fconfig%2Fpa%2Fpa-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-protos.h?ref=0952f89b95dff6f2fef434ac0effb88b3255a541", "patch": "@@ -144,8 +144,8 @@ extern int ior_mask_p PARAMS ((unsigned HOST_WIDE_INT));\n extern void compute_zdepdi_operands PARAMS ((unsigned HOST_WIDE_INT,\n \t\t\t\t\t     unsigned *));\n #ifdef RTX_CODE\n-extern char * output_64bit_and PARAMS ((rtx *));\n-extern char * output_64bit_ior PARAMS ((rtx *));\n+extern const char * output_64bit_and PARAMS ((rtx *));\n+extern const char * output_64bit_ior PARAMS ((rtx *));\n extern int cmpib_comparison_operator PARAMS ((rtx, enum machine_mode));\n #endif\n "}, {"sha": "9013ac0143d1170b4ce552ce3714b29d39737174", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0952f89b95dff6f2fef434ac0effb88b3255a541/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0952f89b95dff6f2fef434ac0effb88b3255a541/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=0952f89b95dff6f2fef434ac0effb88b3255a541", "patch": "@@ -2340,7 +2340,7 @@ output_and (operands)\n \n /* Return a string to perform a bitwise-and of operands[1] with operands[2]\n    storing the result in operands[0].  */\n-char *\n+const char *\n output_64bit_and (operands)\n      rtx *operands;\n {\n@@ -2422,7 +2422,7 @@ output_ior (operands)\n \n /* Return a string to perform a bitwise-and of operands[1] with operands[2]\n    storing the result in operands[0].  */\n-char *\n+const char *\n output_64bit_ior (operands)\n      rtx *operands;\n {\n@@ -6840,7 +6840,7 @@ pa_combine_instructions (insns)\n     }\n }\n \n-int\n+static int\n pa_can_combine_p (new, anchor, floater, reversed, dest, src1, src2)\n      rtx new, anchor, floater;\n      int reversed;\n@@ -6936,7 +6936,7 @@ function_arg (cum, mode, type, named, incoming)\n      CUMULATIVE_ARGS *cum;\n      enum machine_mode mode;\n      tree type;\n-     int named;\n+     int named ATTRIBUTE_UNUSED;\n      int incoming;\n {\n   int max_arg_words = (TARGET_64BIT ? 8 : 4);\n@@ -6967,7 +6967,7 @@ function_arg (cum, mode, type, named, incoming)\n   /* The 32bit ABIs and the 64bit ABIs are rather different,\n      particularly in their handling of FP registers.  We might\n      be able to cleverly share code between them, but I'm not\n-     going to bother in the hope that spltting them up results\n+     going to bother in the hope that splitting them up results\n      in code that is more easily understood. \n \n      The 64bit code probably is very wrong for structure passing.  */\n@@ -7122,7 +7122,7 @@ function_arg_partial_nregs (cum, mode, type, named)\n      CUMULATIVE_ARGS *cum;\n      enum machine_mode mode;\n      tree type;\n-     int named;\n+     int named ATTRIBUTE_UNUSED;\n {\n   int max_arg_words = 8;\n   int offset = 0;"}]}