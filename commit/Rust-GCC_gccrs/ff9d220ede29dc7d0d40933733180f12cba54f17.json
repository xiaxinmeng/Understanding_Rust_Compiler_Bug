{"sha": "ff9d220ede29dc7d0d40933733180f12cba54f17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY5ZDIyMGVkZTI5ZGM3ZDBkNDA5MzM3MzMxODBmMTJjYmE1NGYxNw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-07-22T13:57:31Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-22T13:57:31Z"}, "message": "[Ada] Remove obsolete Is_For_Access_Subtype machinery\n\nThis change removes the Is_For_Access_Subtype machinery from the\ncompiler.  This machinery was devised a long time ago to deal with a\npeculiarity of the freezing for access-to-record subtypes but has been\ndegenerate for quite some time now and does not seem to serve any useful\npurpose at this point.\n\nMorever it has an annoying side effect whereby it causes Underlying_Type\nto return the (unconstrained) base record type when invoked on the\ndesignated record subtype, which is very problematic for GNATprove.\n\nThere should be no functional changes.\n\n2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* einfo.ads (Is_For_Access_Subtype): Delete.\n\t(Set_Is_For_Access_Subtype): Likewise.\n\t* einfo.adb (Is_For_Access_Subtype): Likewise.\n\t(Set_Is_For_Access_Subtype): Likewise.\n\t(Write_Entity_Flags): Do not write Is_For_Access_Subtype.\n\t* exp_ch4.adb (Expand_N_Selected_Component): Do not deal with\n\tit.\n\t* exp_spark.adb (Expand_SPARK_N_Selected_Component): Likewise.\n\t* sem_ch4.adb (Analyze_Explicit_Dereference): Likewise.\n\t* sem_ch3.adb (Build_Discriminated_Subtype): Do not build a\n\tspecial private subtype for access-to-record subtypes.\n\nFrom-SVN: r273682", "tree": {"sha": "3ec00f65614d971bf36399e4d7f7e854943b7a91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ec00f65614d971bf36399e4d7f7e854943b7a91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff9d220ede29dc7d0d40933733180f12cba54f17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff9d220ede29dc7d0d40933733180f12cba54f17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff9d220ede29dc7d0d40933733180f12cba54f17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff9d220ede29dc7d0d40933733180f12cba54f17/comments", "author": null, "committer": null, "parents": [{"sha": "78e92e11d4a96e0cd2ee9d9b1af9382133cd11b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78e92e11d4a96e0cd2ee9d9b1af9382133cd11b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78e92e11d4a96e0cd2ee9d9b1af9382133cd11b5"}], "stats": {"total": 77, "additions": 19, "deletions": 58}, "files": [{"sha": "ace56e3bd82f8f45a86d8ec90eda92ad0f1f0675", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff9d220ede29dc7d0d40933733180f12cba54f17/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff9d220ede29dc7d0d40933733180f12cba54f17/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ff9d220ede29dc7d0d40933733180f12cba54f17", "patch": "@@ -1,3 +1,17 @@\n+2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* einfo.ads (Is_For_Access_Subtype): Delete.\n+\t(Set_Is_For_Access_Subtype): Likewise.\n+\t* einfo.adb (Is_For_Access_Subtype): Likewise.\n+\t(Set_Is_For_Access_Subtype): Likewise.\n+\t(Write_Entity_Flags): Do not write Is_For_Access_Subtype.\n+\t* exp_ch4.adb (Expand_N_Selected_Component): Do not deal with\n+\tit.\n+\t* exp_spark.adb (Expand_SPARK_N_Selected_Component): Likewise.\n+\t* sem_ch4.adb (Analyze_Explicit_Dereference): Likewise.\n+\t* sem_ch3.adb (Build_Discriminated_Subtype): Do not build a\n+\tspecial private subtype for access-to-record subtypes.\n+\n 2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* sem_ch3.adb (Complete_Private_Subtype): Rework the setting of"}, {"sha": "8ff9ec664748d125ef37c767a55b6fae8def7619", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff9d220ede29dc7d0d40933733180f12cba54f17/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff9d220ede29dc7d0d40933733180f12cba54f17/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=ff9d220ede29dc7d0d40933733180f12cba54f17", "patch": "@@ -421,7 +421,6 @@ package body Einfo is\n    --    Never_Set_In_Source             Flag115\n    --    Is_Visible_Lib_Unit             Flag116\n    --    Is_Unchecked_Union              Flag117\n-   --    Is_For_Access_Subtype           Flag118\n    --    Has_Convention_Pragma           Flag119\n    --    Has_Primitive_Operations        Flag120\n \n@@ -2303,12 +2302,6 @@ package body Einfo is\n       return Flag70 (Id);\n    end Is_First_Subtype;\n \n-   function Is_For_Access_Subtype (Id : E) return B is\n-   begin\n-      pragma Assert (Ekind_In (Id, E_Record_Subtype, E_Private_Subtype));\n-      return Flag118 (Id);\n-   end Is_For_Access_Subtype;\n-\n    function Is_Formal_Subprogram (Id : E) return B is\n    begin\n       return Flag111 (Id);\n@@ -5526,12 +5519,6 @@ package body Einfo is\n       Set_Flag70 (Id, V);\n    end Set_Is_First_Subtype;\n \n-   procedure Set_Is_For_Access_Subtype (Id : E; V : B := True) is\n-   begin\n-      pragma Assert (Ekind_In (Id, E_Record_Subtype, E_Private_Subtype));\n-      Set_Flag118 (Id, V);\n-   end Set_Is_For_Access_Subtype;\n-\n    procedure Set_Is_Formal_Subprogram (Id : E; V : B := True) is\n    begin\n       Set_Flag111 (Id, V);\n@@ -9826,7 +9813,6 @@ package body Einfo is\n       W (\"Is_Exported\",                     Flag99  (Id));\n       W (\"Is_Finalized_Transient\",          Flag252 (Id));\n       W (\"Is_First_Subtype\",                Flag70  (Id));\n-      W (\"Is_For_Access_Subtype\",           Flag118 (Id));\n       W (\"Is_Formal_Subprogram\",            Flag111 (Id));\n       W (\"Is_Frozen\",                       Flag4   (Id));\n       W (\"Is_Generic_Actual_Subprogram\",    Flag274 (Id));"}, {"sha": "78208a1f312f80841c28355e52c0af0bb8937298", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff9d220ede29dc7d0d40933733180f12cba54f17/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff9d220ede29dc7d0d40933733180f12cba54f17/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=ff9d220ede29dc7d0d40933733180f12cba54f17", "patch": "@@ -2608,12 +2608,6 @@ package Einfo is\n --    Is_Formal_Subprogram (Flag111)\n --       Defined in all entities. Set for generic formal subprograms.\n \n---    Is_For_Access_Subtype (Flag118)\n---       Defined in E_Private_Subtype and E_Record_Subtype entities. Means the\n---       sole purpose of the type is to be designated by an Access_Subtype and\n---       hence should not be expanded into components because the type may not\n---       have been found or frozen yet.\n-\n --    Is_Frozen (Flag4)\n --       Defined in all type and subtype entities. Set if type or subtype has\n --       been frozen.\n@@ -6458,7 +6452,6 @@ package Einfo is\n    --    Stored_Constraint                   (Elist23)\n    --    Has_Completion                      (Flag26)\n    --    Is_Controlled_Active                (Flag42)   (base type only)\n-   --    Is_For_Access_Subtype               (Flag118)  (subtype only)\n    --    (plus type attributes)\n \n    --  E_Procedure\n@@ -7311,7 +7304,6 @@ package Einfo is\n    function Is_Exported                         (Id : E) return B;\n    function Is_Finalized_Transient              (Id : E) return B;\n    function Is_First_Subtype                    (Id : E) return B;\n-   function Is_For_Access_Subtype               (Id : E) return B;\n    function Is_Frozen                           (Id : E) return B;\n    function Is_Generic_Instance                 (Id : E) return B;\n    function Is_Hidden                           (Id : E) return B;\n@@ -8012,7 +8004,6 @@ package Einfo is\n    procedure Set_Is_Exported                     (Id : E; V : B := True);\n    procedure Set_Is_Finalized_Transient          (Id : E; V : B := True);\n    procedure Set_Is_First_Subtype                (Id : E; V : B := True);\n-   procedure Set_Is_For_Access_Subtype           (Id : E; V : B := True);\n    procedure Set_Is_Formal_Subprogram            (Id : E; V : B := True);\n    procedure Set_Is_Frozen                       (Id : E; V : B := True);\n    procedure Set_Is_Generic_Actual_Subprogram    (Id : E; V : B := True);\n@@ -8859,7 +8850,6 @@ package Einfo is\n    pragma Inline (Is_First_Subtype);\n    pragma Inline (Is_Fixed_Point_Type);\n    pragma Inline (Is_Floating_Point_Type);\n-   pragma Inline (Is_For_Access_Subtype);\n    pragma Inline (Is_Formal);\n    pragma Inline (Is_Formal_Object);\n    pragma Inline (Is_Formal_Subprogram);\n@@ -9376,7 +9366,6 @@ package Einfo is\n    pragma Inline (Set_Is_Exported);\n    pragma Inline (Set_Is_Finalized_Transient);\n    pragma Inline (Set_Is_First_Subtype);\n-   pragma Inline (Set_Is_For_Access_Subtype);\n    pragma Inline (Set_Is_Formal_Subprogram);\n    pragma Inline (Set_Is_Frozen);\n    pragma Inline (Set_Is_Generic_Actual_Subprogram);"}, {"sha": "7ea96de1aaab0c7b51a7acec5ea006b41d29569c", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff9d220ede29dc7d0d40933733180f12cba54f17/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff9d220ede29dc7d0d40933733180f12cba54f17/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=ff9d220ede29dc7d0d40933733180f12cba54f17", "patch": "@@ -10330,12 +10330,6 @@ package body Exp_Ch4 is\n          Insert_Explicit_Dereference (P);\n          Analyze_And_Resolve (P, Designated_Type (Ptyp));\n \n-         if Ekind (Etype (P)) = E_Private_Subtype\n-           and then Is_For_Access_Subtype (Etype (P))\n-         then\n-            Set_Etype (P, Base_Type (Etype (P)));\n-         end if;\n-\n          Ptyp := Etype (P);\n       end if;\n "}, {"sha": "63f2dad209a9e31022ea99f61d5d70ca588a7e2d", "filename": "gcc/ada/exp_spark.adb", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff9d220ede29dc7d0d40933733180f12cba54f17/gcc%2Fada%2Fexp_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff9d220ede29dc7d0d40933733180f12cba54f17/gcc%2Fada%2Fexp_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_spark.adb?ref=ff9d220ede29dc7d0d40933733180f12cba54f17", "patch": "@@ -522,12 +522,6 @@ package body Exp_SPARK is\n \n          Insert_Explicit_Dereference (Pref);\n          Analyze_And_Resolve (Pref, Designated_Type (Typ));\n-\n-         if Ekind (Etype (Pref)) = E_Private_Subtype\n-           and then Is_For_Access_Subtype (Etype (Pref))\n-         then\n-            Set_Etype (Pref, Base_Type (Etype (Pref)));\n-         end if;\n       end if;\n    end Expand_SPARK_N_Selected_Component;\n "}, {"sha": "d8cd34850879eff50be620959577b68dc6e5cf04", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff9d220ede29dc7d0d40933733180f12cba54f17/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff9d220ede29dc7d0d40933733180f12cba54f17/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=ff9d220ede29dc7d0d40933733180f12cba54f17", "patch": "@@ -221,9 +221,7 @@ package body Sem_Ch3 is\n    --  T has discriminants but there are no discriminant constraints). The\n    --  Related_Nod is the same as Decl_Node in Create_Constrained_Components.\n    --  The For_Access says whether or not this subtype is really constraining\n-   --  an access type. That is its sole purpose is the designated type of an\n-   --  access type -- in which case a Private_Subtype Is_For_Access_Subtype\n-   --  is built to avoid freezing T when the access subtype is frozen.\n+   --  an access type.\n \n    function Build_Scalar_Bound\n      (Bound : Node_Id;\n@@ -10236,12 +10234,7 @@ package body Sem_Ch3 is\n \n    begin\n       if Ekind (T) = E_Record_Type then\n-         if For_Access then\n-            Set_Ekind (Def_Id, E_Private_Subtype);\n-            Set_Is_For_Access_Subtype (Def_Id, True);\n-         else\n-            Set_Ekind (Def_Id, E_Record_Subtype);\n-         end if;\n+         Set_Ekind (Def_Id, E_Record_Subtype);\n \n          --  Inherit preelaboration flag from base, for types for which it\n          --  may have been set: records, private types, protected types.\n@@ -10372,7 +10365,7 @@ package body Sem_Ch3 is\n          then\n             Create_Constrained_Components (Def_Id, Related_Nod, T, Elist);\n \n-         elsif not For_Access then\n+         else\n             Set_Cloned_Subtype (Def_Id, T);\n          end if;\n       end if;"}, {"sha": "f7b99d4d939363f9829b9a2d61cf6070b90e8a41", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff9d220ede29dc7d0d40933733180f12cba54f17/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff9d220ede29dc7d0d40933733180f12cba54f17/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=ff9d220ede29dc7d0d40933733180f12cba54f17", "patch": "@@ -2101,21 +2101,12 @@ package body Sem_Ch4 is\n       if not Is_Overloaded (P) then\n          if Is_Access_Type (Etype (P)) then\n \n-            --  Set the Etype. We need to go through Is_For_Access_Subtypes to\n-            --  avoid other problems caused by the Private_Subtype and it is\n-            --  safe to go to the Base_Type because this is the same as\n-            --  converting the access value to its Base_Type.\n+            --  Set the Etype\n \n             declare\n-               DT : Entity_Id := Designated_Type (Etype (P));\n+               DT : constant Entity_Id := Designated_Type (Etype (P));\n \n             begin\n-               if Ekind (DT) = E_Private_Subtype\n-                 and then Is_For_Access_Subtype (DT)\n-               then\n-                  DT := Base_Type (DT);\n-               end if;\n-\n                --  An explicit dereference is a legal occurrence of an\n                --  incomplete type imported through a limited_with clause, if\n                --  the full view is visible, or if we are within an instance"}]}