{"sha": "e064939e4ae577d3e44eca84fc1e16f7f7657817", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA2NDkzOWU0YWU1NzdkM2U0NGVjYTg0ZmMxZTE2ZjdmNzY1NzgxNw==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2006-11-27T16:34:19Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2006-11-27T16:34:19Z"}, "message": "re PR target/29319 (ICE unrecognizable insn: offset too large for larl (breaks glibc))\n\n2006-11-27  Michael Matz  <matz@suse.de>\n            Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\tPR target/29319\n\t* config/s390/predicates.md (larl_operand): Check addend of larl\n\toperand to be in range of -/+2GB.\n\t* config/s390/s390.c (legitimize_pic_address): Likewise.  \n\tChanged type of variable even to HOST_WIDE_INT.\n\n2006-11-27  Michael Matz  <matz@suse.de>\n            Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\tPR target/29319\n\t* gcc.dg/20061127-1.c: New testcase.\n\n\nCo-Authored-By: Andreas Krebbel <krebbel1@de.ibm.com>\n\nFrom-SVN: r119256", "tree": {"sha": "3732caa784c5d755960587bdc14c4e9c30c6ba44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3732caa784c5d755960587bdc14c4e9c30c6ba44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e064939e4ae577d3e44eca84fc1e16f7f7657817", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e064939e4ae577d3e44eca84fc1e16f7f7657817", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e064939e4ae577d3e44eca84fc1e16f7f7657817", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e064939e4ae577d3e44eca84fc1e16f7f7657817/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9409c2f5a4d1431e9f0722434c25947ed80c5a5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9409c2f5a4d1431e9f0722434c25947ed80c5a5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9409c2f5a4d1431e9f0722434c25947ed80c5a5b"}], "stats": {"total": 54, "additions": 50, "deletions": 4}, "files": [{"sha": "fcfffec4eddb61fe2c3b6c3077df938fcde7c2ec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e064939e4ae577d3e44eca84fc1e16f7f7657817/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e064939e4ae577d3e44eca84fc1e16f7f7657817/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e064939e4ae577d3e44eca84fc1e16f7f7657817", "patch": "@@ -1,3 +1,12 @@\n+2006-11-27  Michael Matz  <matz@suse.de>\n+            Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\tPR target/29319\n+\t* config/s390/predicates.md (larl_operand): Check addend of larl\n+\toperand to be in range of -/+2GB.\n+\t* config/s390/s390.c (legitimize_pic_address): Likewise.  \n+\tChanged type of variable even to HOST_WIDE_INT.\n+\n 2006-11-27  Jan Hubicka  <jh@suse.cz>\n \n \t* expr.c (emit_block_move_via_libcall): Export."}, {"sha": "9f7ea360f6e8fabb6f5f25c8b35f40e3e1e8bb2a", "filename": "gcc/config/s390/predicates.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e064939e4ae577d3e44eca84fc1e16f7f7657817/gcc%2Fconfig%2Fs390%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e064939e4ae577d3e44eca84fc1e16f7f7657817/gcc%2Fconfig%2Fs390%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fpredicates.md?ref=e064939e4ae577d3e44eca84fc1e16f7f7657817", "patch": "@@ -126,8 +126,8 @@\n       if (GET_CODE (XEXP (op, 1)) != CONST_INT\n           || (INTVAL (XEXP (op, 1)) & 1) != 0)\n         return false;\n-      if (INTVAL (XEXP (op, 1)) >= (HOST_WIDE_INT)1 << 32\n-\t  || INTVAL (XEXP (op, 1)) < -((HOST_WIDE_INT)1 << 32))\n+      if (INTVAL (XEXP (op, 1)) >= (HOST_WIDE_INT)1 << 31\n+\t  || INTVAL (XEXP (op, 1)) < -((HOST_WIDE_INT)1 << 31))\n         return false;\n       op = XEXP (op, 0);\n     }"}, {"sha": "f7a1902ade38a53a6baff4d6ec806321b71a3641", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e064939e4ae577d3e44eca84fc1e16f7f7657817/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e064939e4ae577d3e44eca84fc1e16f7f7657817/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=e064939e4ae577d3e44eca84fc1e16f7f7657817", "patch": "@@ -3020,7 +3020,10 @@ legitimize_pic_address (rtx orig, rtx reg)\n \t\t|| (GET_CODE (op0) == SYMBOL_REF && SYMBOL_REF_LOCAL_P (op0)))\n \t      && GET_CODE (op1) == CONST_INT)\n \t    {\n-              if (TARGET_CPU_ZARCH && larl_operand (op0, VOIDmode))\n+              if (TARGET_CPU_ZARCH\n+\t\t  && larl_operand (op0, VOIDmode)\n+\t\t  && INTVAL (op1) < (HOST_WIDE_INT)1 << 31\n+\t\t  && INTVAL (op1) >= -((HOST_WIDE_INT)1 << 31))\n                 {\n                   if (INTVAL (op1) & 1)\n                     {\n@@ -3030,7 +3033,7 @@ legitimize_pic_address (rtx orig, rtx reg)\n \n                       if (!DISP_IN_RANGE (INTVAL (op1)))\n                         {\n-                          int even = INTVAL (op1) - 1;\n+                          HOST_WIDE_INT even = INTVAL (op1) - 1;\n                           op0 = gen_rtx_PLUS (Pmode, op0, GEN_INT (even));\n \t\t\t  op0 = gen_rtx_CONST (Pmode, op0);\n                           op1 = const1_rtx;"}, {"sha": "d2b7adfe62d4abf16113234745a24d9118399aee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e064939e4ae577d3e44eca84fc1e16f7f7657817/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e064939e4ae577d3e44eca84fc1e16f7f7657817/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e064939e4ae577d3e44eca84fc1e16f7f7657817", "patch": "@@ -1,3 +1,9 @@\n+2006-11-27  Michael Matz  <matz@suse.de>\n+            Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\tPR target/29319\n+\t* gcc.dg/20061127-1.c: New testcase.\n+\n 2006-11-27  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.dg/20061124-1.c: Add exit() function prototype."}, {"sha": "ec94dc8c3f8508aa03cfd9fcff0c25a3cde03a2e", "filename": "gcc/testsuite/gcc.dg/20061127-1.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e064939e4ae577d3e44eca84fc1e16f7f7657817/gcc%2Ftestsuite%2Fgcc.dg%2F20061127-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e064939e4ae577d3e44eca84fc1e16f7f7657817/gcc%2Ftestsuite%2Fgcc.dg%2F20061127-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20061127-1.c?ref=e064939e4ae577d3e44eca84fc1e16f7f7657817", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do compile { target lp64 } } */\n+/* { dg-options \"-O1 -fPIC\" } */\n+\n+/* PR target/29319 */\n+\n+extern void abort(void);\n+static char l_info[100];\n+\n+void\n+bug1 (unsigned long tag)\n+{\n+  char *info = l_info;\n+  info[tag - 0x100000000 + 1] = 1;\n+}\n+\n+void\n+bug2 (unsigned long tag)\n+{\n+  char *info = l_info;\n+  info[tag - 0x700000000 + 2] = 2;\n+}\n+\n+void\n+bug3 (unsigned long tag)\n+{\n+  char *info = l_info;\n+  info[tag - 0x100000000 + 1] = 3;\n+}"}]}