{"sha": "c1d9cb022bb143ff62a667ce8a504d326eda42a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFkOWNiMDIyYmIxNDNmZjYyYTY2N2NlOGE1MDRkMzI2ZWRhNDJhNg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-03-01T12:26:20Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-03-01T12:26:20Z"}, "message": "re PR other/52443 (ICE: verify_gimple failed: invalid types in nop conversion)\n\n2012-03-01  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/52443\n\t* tree-cfg.c (verify_gimple_assign_unary): Allow any\n\tconversions from integral types to pointer types.\n\nFrom-SVN: r184739", "tree": {"sha": "8927504f6ed5897b3fc5e015bb2abdb29559eb0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8927504f6ed5897b3fc5e015bb2abdb29559eb0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1d9cb022bb143ff62a667ce8a504d326eda42a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1d9cb022bb143ff62a667ce8a504d326eda42a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1d9cb022bb143ff62a667ce8a504d326eda42a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1d9cb022bb143ff62a667ce8a504d326eda42a6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b2ef48efce78b78099a0f2162fab0b01fba7ba8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2ef48efce78b78099a0f2162fab0b01fba7ba8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2ef48efce78b78099a0f2162fab0b01fba7ba8d"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "b4477dc0e82c70831456662654f3333c8319833f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1d9cb022bb143ff62a667ce8a504d326eda42a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1d9cb022bb143ff62a667ce8a504d326eda42a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1d9cb022bb143ff62a667ce8a504d326eda42a6", "patch": "@@ -1,3 +1,9 @@\n+2012-03-01  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/52443\n+\t* tree-cfg.c (verify_gimple_assign_unary): Allow any\n+\tconversions from integral types to pointer types.\n+\n 2012-03-01  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* config/avr/avr-c.c (avr_cpu_cpp_builtins): Restore built-in"}, {"sha": "9f75650d7a798bb516dcc7e35c5d8fc4424278fb", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1d9cb022bb143ff62a667ce8a504d326eda42a6/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1d9cb022bb143ff62a667ce8a504d326eda42a6/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=c1d9cb022bb143ff62a667ce8a504d326eda42a6", "patch": "@@ -3340,15 +3340,12 @@ verify_gimple_assign_unary (gimple stmt)\n     {\n     CASE_CONVERT:\n       {\n-\t/* Allow conversions between integral types and pointers only if\n+\t/* Allow conversions from pointer type to integral type only if\n \t   there is no sign or zero extension involved.\n \t   For targets were the precision of ptrofftype doesn't match that\n-\t   of pointers we need to allow arbitrary conversions from and\n-\t   to ptrofftype.  */\n+\t   of pointers we need to allow arbitrary conversions to ptrofftype.  */\n \tif ((POINTER_TYPE_P (lhs_type)\n-\t     && INTEGRAL_TYPE_P (rhs1_type)\n-\t     && (TYPE_PRECISION (lhs_type) >= TYPE_PRECISION (rhs1_type)\n-\t\t || ptrofftype_p (rhs1_type)))\n+\t     && INTEGRAL_TYPE_P (rhs1_type))\n \t    || (POINTER_TYPE_P (rhs1_type)\n \t\t&& INTEGRAL_TYPE_P (lhs_type)\n \t\t&& (TYPE_PRECISION (rhs1_type) >= TYPE_PRECISION (lhs_type)"}]}