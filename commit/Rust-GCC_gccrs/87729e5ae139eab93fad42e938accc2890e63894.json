{"sha": "87729e5ae139eab93fad42e938accc2890e63894", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc3MjllNWFlMTM5ZWFiOTNmYWQ0MmU5MzhhY2NjMjg5MGU2Mzg5NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T13:13:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T13:13:59Z"}, "message": "[multiple changes]\n\n2011-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* a-tags.ads, a-tags.adb (Unregister_Tag): New routine.\n\tRemove the external tag of a tagged type from the internal hash table.\n\t* exp_ch7.adb (Build_Cleanup_Statements): Update the comment on the\n\texpanded usage of the routine. Strenghten the check for Is_Master. Add\n\tprocessing for tagged types.\n\t(Build_Finalizer): Create all the necessary lists used in finalizer\n\tcreation when the processed context is a package that may contain\n\ttagged types.\n\t(Expand_Cleanup_Actions): Rename the call to Has_Controlled_Objects to\n\tRequires_Cleanup_Actions.\n\t(Expand_N_Package_Body): Package bodies may need clean up code\n\tdepending on whether they contain tagged types.\n\t(Expand_N_Package_Declaration): Package declarations may need clean up\n\tcode depending on whether they contain tagged types.\n\t(Unregister_Tagged_Types): New routine. Search through a list of\n\tdeclarations or statements, looking for non-abstract Ada tagged types.\n\tFor each such type, generate code to unregister the external tag.\n\t* exp_util.adb (Has_Controlled_Objects (Node_Id)): Renamed to\n\tRequires_Cleanup_Actions.\n\t(Requires_Cleanup_Actions (List_Id, Boolean)): New routine. Search\n\tthrough a list of declarations or statements looking for non-abstract\n\tAda tagged types or controlled objects.\n\t* exp_util.ads (Has_Controlled_Objects (Node_Id)): Renamed to\n\tRequires_Cleanup_Actions.\n\t(Has_Controlled_Objects (List_Id, Boolean)): Removed.\n\t* rtsfind.ads: Add entry RE_Unregister_Tag to tables RE_Id and\n\tRE_Unit_Table.\n\n2011-08-04  Vincent Celier  <celier@adacore.com>\n\n\t* prj-env.adb (For_All_Source_Dirs.For_Project): Check if project Prj\n\thas Ada sources, not project Project, because if the root project\n\tProject has no sources of its own, all projects will be deemed without\n\tsources.\n\n2011-08-04  Gary Dismukes  <dismukes@adacore.com>\n\n\t* bindgen.adb (Gen_Adainit_Ada): Move the generation of the declaration\n\tof the No_Param_Proc acc-to-subp type used for initialization of\n\t__gnat_finalize_library_objects so that it's declared at library level\n\trather than nested inside of the adainit routine.\n\n2011-08-04  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_disp.adb (Make_DT): Generate code to check the external tag ONLY\n\tif the tagged type has a representation clause which specifies its\n\texternal tag.\n\n2011-08-04  Ed Schonberg  <schonberg@adacore.com>\n\n\t* einfo.ads, einfo.adb (Has_Private_Ancestor): now a flag on types.\n\tRemove previous procedure with that name.\n\t* sem_ch3.adb (Build_Derived_Record_Type): set Has_Private_Ancestor\n\twhen appropriate.\n\t* sem_aggr.adb (Resolve_Extension_Aggregate): if the ancestor part is a\n\tsubtype mark, the ancestor cannot have unknown discriminants.\n\t(Resolve_Record_Aggregate): if the type has invisible components\n\tbecause of a private ancestor, the aggregate is illegal.\n\n2011-08-04  Vincent Celier  <celier@adacore.com>\n\n\t* switch-m.adb (Normalize_Compiler_Switches): Recognize and take into\n\taccount switches -gnat2005, -gnat12 and -gnat2012.\n\n2011-08-04  Bob Duff  <duff@adacore.com>\n\n\t* s-tasdeb.ads: Minor comment fix.\n\n2011-08-04  Arnaud Charlet  <charlet@adacore.com>\n\n\t* gnatlink.adb (Gnatlink): Pass -gnat83/95/05/12 switch to gcc in\n\tCodePeer mode.\n\t* switch.ads, switch.adb (Is_Language_Switch): New function.\n\n2011-08-04  Vincent Celier  <celier@adacore.com>\n\n\t* switch-c.adb: Minor comment addition.\n\n2011-08-04  Vincent Celier  <celier@adacore.com>\n\n\t* vms_conv.adb (Process_Argument): Fail graciously when qualifier\n\tending with '=' is followed by a space (missing file name).\n\n2011-08-04  Pascal Obry  <obry@adacore.com>\n\n\t* g-regist.ads: Fix size of HKEY on x86_64-windows.\n\n2011-08-04  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Analyze_Associations): New routine\n\tCheck_Overloaded_Formal_Subprogram to reject a formal package when\n\tthere is a named association or a box initialisation for an overloaded\n\tformal subprogram of the corresponding generic.\n\n2011-08-04  Yannick Moy  <moy@adacore.com>\n\n\t* alfa.ads (ALFA_Xref_Record): add component for type of entity\n\t* get_alfa.adb, put_alfa.adb: Read and write new component of\n\tcross-reference.\n\t* lib-xref-alfa.adb (Collect_ALFA): generate new component.\n\nFrom-SVN: r177378", "tree": {"sha": "eebd9dc812e5d2083834dcc4dc232956690041f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eebd9dc812e5d2083834dcc4dc232956690041f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87729e5ae139eab93fad42e938accc2890e63894", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87729e5ae139eab93fad42e938accc2890e63894", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87729e5ae139eab93fad42e938accc2890e63894", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87729e5ae139eab93fad42e938accc2890e63894/comments", "author": null, "committer": null, "parents": [{"sha": "88f47280999b57fce68aeee692d1820f12fc8264", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88f47280999b57fce68aeee692d1820f12fc8264", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88f47280999b57fce68aeee692d1820f12fc8264"}], "stats": {"total": 1157, "additions": 828, "deletions": 329}, "files": [{"sha": "0321d69127a9f2b72e2247c72c619c93828bd967", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -1,3 +1,106 @@\n+2011-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* a-tags.ads, a-tags.adb (Unregister_Tag): New routine.\n+\tRemove the external tag of a tagged type from the internal hash table.\n+\t* exp_ch7.adb (Build_Cleanup_Statements): Update the comment on the\n+\texpanded usage of the routine. Strenghten the check for Is_Master. Add\n+\tprocessing for tagged types.\n+\t(Build_Finalizer): Create all the necessary lists used in finalizer\n+\tcreation when the processed context is a package that may contain\n+\ttagged types.\n+\t(Expand_Cleanup_Actions): Rename the call to Has_Controlled_Objects to\n+\tRequires_Cleanup_Actions.\n+\t(Expand_N_Package_Body): Package bodies may need clean up code\n+\tdepending on whether they contain tagged types.\n+\t(Expand_N_Package_Declaration): Package declarations may need clean up\n+\tcode depending on whether they contain tagged types.\n+\t(Unregister_Tagged_Types): New routine. Search through a list of\n+\tdeclarations or statements, looking for non-abstract Ada tagged types.\n+\tFor each such type, generate code to unregister the external tag.\n+\t* exp_util.adb (Has_Controlled_Objects (Node_Id)): Renamed to\n+\tRequires_Cleanup_Actions.\n+\t(Requires_Cleanup_Actions (List_Id, Boolean)): New routine. Search\n+\tthrough a list of declarations or statements looking for non-abstract\n+\tAda tagged types or controlled objects.\n+\t* exp_util.ads (Has_Controlled_Objects (Node_Id)): Renamed to\n+\tRequires_Cleanup_Actions.\n+\t(Has_Controlled_Objects (List_Id, Boolean)): Removed.\n+\t* rtsfind.ads: Add entry RE_Unregister_Tag to tables RE_Id and\n+\tRE_Unit_Table.\n+\n+2011-08-04  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-env.adb (For_All_Source_Dirs.For_Project): Check if project Prj\n+\thas Ada sources, not project Project, because if the root project\n+\tProject has no sources of its own, all projects will be deemed without\n+\tsources.\n+\n+2011-08-04  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* bindgen.adb (Gen_Adainit_Ada): Move the generation of the declaration\n+\tof the No_Param_Proc acc-to-subp type used for initialization of\n+\t__gnat_finalize_library_objects so that it's declared at library level\n+\trather than nested inside of the adainit routine.\n+\n+2011-08-04  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_disp.adb (Make_DT): Generate code to check the external tag ONLY\n+\tif the tagged type has a representation clause which specifies its\n+\texternal tag.\n+\n+2011-08-04  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* einfo.ads, einfo.adb (Has_Private_Ancestor): now a flag on types.\n+\tRemove previous procedure with that name.\n+\t* sem_ch3.adb (Build_Derived_Record_Type): set Has_Private_Ancestor\n+\twhen appropriate.\n+\t* sem_aggr.adb (Resolve_Extension_Aggregate): if the ancestor part is a\n+\tsubtype mark, the ancestor cannot have unknown discriminants.\n+\t(Resolve_Record_Aggregate): if the type has invisible components\n+\tbecause of a private ancestor, the aggregate is illegal.\n+\n+2011-08-04  Vincent Celier  <celier@adacore.com>\n+\n+\t* switch-m.adb (Normalize_Compiler_Switches): Recognize and take into\n+\taccount switches -gnat2005, -gnat12 and -gnat2012.\n+\n+2011-08-04  Bob Duff  <duff@adacore.com>\n+\n+\t* s-tasdeb.ads: Minor comment fix.\n+\n+2011-08-04  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gnatlink.adb (Gnatlink): Pass -gnat83/95/05/12 switch to gcc in\n+\tCodePeer mode.\n+\t* switch.ads, switch.adb (Is_Language_Switch): New function.\n+\n+2011-08-04  Vincent Celier  <celier@adacore.com>\n+\n+\t* switch-c.adb: Minor comment addition.\n+\n+2011-08-04  Vincent Celier  <celier@adacore.com>\n+\n+\t* vms_conv.adb (Process_Argument): Fail graciously when qualifier\n+\tending with '=' is followed by a space (missing file name).\n+\n+2011-08-04  Pascal Obry  <obry@adacore.com>\n+\n+\t* g-regist.ads: Fix size of HKEY on x86_64-windows.\n+\n+2011-08-04  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Analyze_Associations): New routine\n+\tCheck_Overloaded_Formal_Subprogram to reject a formal package when\n+\tthere is a named association or a box initialisation for an overloaded\n+\tformal subprogram of the corresponding generic.\n+\n+2011-08-04  Yannick Moy  <moy@adacore.com>\n+\n+\t* alfa.ads (ALFA_Xref_Record): add component for type of entity\n+\t* get_alfa.adb, put_alfa.adb: Read and write new component of\n+\tcross-reference.\n+\t* lib-xref-alfa.adb (Collect_ALFA): generate new component.\n+\n 2011-08-04  Pascal Obry  <obry@adacore.com>\n \n \t* urealp.adb: Minor reformatting."}, {"sha": "b9f1491dacf30769a674353bfed8859f8bef8c87", "filename": "gcc/ada/a-tags.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fa-tags.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fa-tags.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tags.adb?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -1005,6 +1005,19 @@ package body Ada.Tags is\n       return TSD.Type_Is_Abstract;\n    end Type_Is_Abstract;\n \n+   --------------------\n+   -- Unregister_Tag --\n+   --------------------\n+\n+   procedure Unregister_Tag (T : Tag) is\n+      TSD_Ptr : constant Addr_Ptr :=\n+                  To_Addr_Ptr (To_Address (T) - DT_Typeinfo_Ptr_Size);\n+      TSD     : constant Type_Specific_Data_Ptr :=\n+                  To_Type_Specific_Data_Ptr (TSD_Ptr.all);\n+   begin\n+      External_Tag_HTable.Remove (To_Address (TSD.External_Tag));\n+   end Unregister_Tag;\n+\n    ------------------------\n    -- Wide_Expanded_Name --\n    ------------------------"}, {"sha": "5170793f981536d01b123d586adc455b2488cfa5", "filename": "gcc/ada/a-tags.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fa-tags.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fa-tags.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tags.ads?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -542,6 +542,9 @@ private\n    --  Ada 2005 (AI-251): Set the kind of a primitive operation in T's TSD\n    --  table indexed by Position.\n \n+   procedure Unregister_Tag (T : Tag);\n+   --  Remove a particular tag from the external tag hash table\n+\n    Max_Predef_Prims : constant Positive := 16;\n    --  Number of reserved slots for the following predefined ada primitives:\n    --"}, {"sha": "39bddabf29d7f282ca9de4f8ef1d72ac50d55b60", "filename": "gcc/ada/alfa.ads", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Falfa.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Falfa.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Falfa.ads?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -133,10 +133,18 @@ package ALFA is\n    --      entity-number and identity identify a scope entity in FS lines for\n    --      the file previously identified.\n \n-   --    line col entity ref*\n+   --    line typ col entity ref*\n \n    --      line is the line number of the referenced entity\n \n+   --      typ is the type of the referenced entity, using a code similar to\n+   --      the one used for cross-references:\n+\n+   --        > = IN parameter\n+   --        < = OUT parameter\n+   --        = = IN OUT parameter\n+   --        * = all other cases\n+\n    --      col is the column number of the referenced entity\n \n    --      entity is the name of the referenced entity as written in the source\n@@ -186,6 +194,13 @@ package ALFA is\n       Entity_Line : Nat;\n       --  Line number for the entity referenced\n \n+      Etype : Character;\n+      --  Indicates type of entity, using code used in ALI file:\n+      --    > = IN parameter\n+      --    < = OUT parameter\n+      --    = = IN OUT parameter\n+      --    * = all other cases\n+\n       Entity_Col : Nat;\n       --  Column number for the entity referenced\n "}, {"sha": "3f88f66f9ab49c97a14dec3d377ce0a2fd0b8753", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -499,6 +499,22 @@ package body Bindgen is\n       Main_CPU      : Int renames ALIs.Table (ALIs.First).Main_CPU;\n \n    begin\n+      --  Declare the access-to-subprogram type used for initialization of\n+      --  of __gnat_finalize_library_objects. This is declared at library\n+      --  level for compatibility with the type used in System.Soft_Links.\n+      --  The import of the soft link which performs library-level object\n+      --  finalization is not needed for VM targets; regular Ada is used in\n+      --  that case. For restricted run-time libraries (ZFP and Ravenscar)\n+      --  tasks are non-terminating, so we do not want finalization.\n+\n+      if not Suppress_Standard_Library_On_Target\n+        and then VM_Target = No_VM\n+        and then not Configurable_Run_Time_On_Target\n+      then\n+         WBI (\"   type No_Param_Proc is access procedure;\");\n+         WBI (\"\");\n+      end if;\n+\n       WBI (\"   procedure \" & Ada_Init_Name.all & \" is\");\n \n       --  If the standard library is suppressed, then the only global variables\n@@ -621,7 +637,6 @@ package body Bindgen is\n \n          if VM_Target = No_VM and then not Configurable_Run_Time_On_Target then\n             WBI (\"\");\n-            WBI (\"      type No_Param_Proc is access procedure;\");\n             WBI (\"      Finalize_Library_Objects : No_Param_Proc;\");\n             WBI (\"      pragma Import (C, Finalize_Library_Objects, \" &\n                  \"\"\"__gnat_finalize_library_objects\"\");\");"}, {"sha": "383ec9cdd137b8184f26f38135e3cb40503c536f", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 16, "deletions": 20, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -409,6 +409,7 @@ package body Einfo is\n    --    Is_Compilation_Unit             Flag149\n    --    Has_Pragma_Elaborate_Body       Flag150\n \n+   --    Has_Private_Ancestor            Flag151\n    --    Entry_Accepted                  Flag152\n    --    Is_Obsolescent                  Flag153\n    --    Has_Per_Object_Constraint       Flag154\n@@ -1312,7 +1313,9 @@ package body Einfo is\n \n    function Has_Invariants (Id : E) return B is\n    begin\n-      pragma Assert (Is_Type (Id) or else Ekind (Id) = E_Procedure);\n+      pragma Assert (Is_Type (Id)\n+        or else Ekind (Id) = E_Procedure\n+        or else Ekind (Id) = E_Generic_Procedure);\n       return Flag232 (Id);\n    end Has_Invariants;\n \n@@ -1445,6 +1448,11 @@ package body Einfo is\n       return Flag120 (Base_Type (Id));\n    end Has_Primitive_Operations;\n \n+   function Has_Private_Ancestor (Id : E) return B is\n+   begin\n+      return Flag151 (Id);\n+   end Has_Private_Ancestor;\n+\n    function Has_Private_Declaration (Id : E) return B is\n    begin\n       return Flag155 (Id);\n@@ -3936,6 +3944,12 @@ package body Einfo is\n       Set_Flag120 (Id, V);\n    end Set_Has_Primitive_Operations;\n \n+   procedure Set_Has_Private_Ancestor (Id : E; V : B := True) is\n+   begin\n+      pragma Assert (Is_Type (Id));\n+      Set_Flag151 (Id, V);\n+   end Set_Has_Private_Ancestor;\n+\n    procedure Set_Has_Private_Declaration (Id : E; V : B := True) is\n    begin\n       Set_Flag155 (Id, V);\n@@ -6100,25 +6114,6 @@ package body Einfo is\n       return False;\n    end Has_Interrupt_Handler;\n \n-   --------------------------\n-   -- Has_Private_Ancestor --\n-   --------------------------\n-\n-   function Has_Private_Ancestor (Id : E) return B is\n-      R  : constant Entity_Id := Root_Type (Id);\n-      T1 : Entity_Id := Id;\n-   begin\n-      loop\n-         if Is_Private_Type (T1) then\n-            return True;\n-         elsif T1 = R then\n-            return False;\n-         else\n-            T1 := Etype (T1);\n-         end if;\n-      end loop;\n-   end Has_Private_Ancestor;\n-\n    --------------------\n    -- Has_Rep_Pragma --\n    --------------------\n@@ -7461,6 +7456,7 @@ package body Einfo is\n       W (\"Has_Pragma_Unreferenced_Objects\", Flag212 (Id));\n       W (\"Has_Predicates\",                  Flag250 (Id));\n       W (\"Has_Primitive_Operations\",        Flag120 (Id));\n+      W (\"Has_Private_Ancestor\",            Flag151 (Id));\n       W (\"Has_Private_Declaration\",         Flag155 (Id));\n       W (\"Has_Qualified_Name\",              Flag161 (Id));\n       W (\"Has_RACW\",                        Flag214 (Id));"}, {"sha": "3fb2e41b93b7d7d083b0731fa01cfd38a617420e", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -1690,10 +1690,13 @@ package Einfo is\n --       Present in all type entities. Set if at least one primitive operation\n --       is defined for the type.\n \n---    Has_Private_Ancestor (synthesized)\n---       Applies to all type and subtype entities. Returns True if at least\n---       one ancestor is private, and otherwise False if there are no private\n---       ancestors.\n+--    Has_Private_Ancestor (Flag151)\n+--       Applies to type extensions. True if some ancestor is derived from a\n+--       private type, making some components invisible and aggregates illegal.\n+--       This flag is set at the point of derivation. The legality of the\n+--       aggregate must be rechecked because it also depends on the visibility\n+--       at the point the aggregate is resolved. See sem_aggr.adb.\n+--       This is part of AI05-0115.\n \n --    Has_Private_Declaration (Flag155)\n --       Present in all entities. Returns True if it is the defining entity\n@@ -4909,7 +4912,6 @@ package Einfo is\n \n    --    Alignment_Clause                    (synth)\n    --    Base_Type                           (synth)\n-   --    Has_Private_Ancestor                (synth)\n    --    Implementation_Base_Type            (synth)\n    --    Invariant_Procedure                 (synth)\n    --    Is_Access_Protected_Subprogram_Type (synth)\n@@ -5581,6 +5583,7 @@ package Einfo is\n    --    Has_Dispatch_Table                  (Flag220)  (base tagged type only)\n    --    Has_External_Tag_Rep_Clause         (Flag110)\n    --    Has_Pragma_Pack                     (Flag121)  (impl base type only)\n+   --    Has_Private_Ancestor                (Flag151)\n    --    Has_Record_Rep_Clause               (Flag65)   (base type only)\n    --    Has_Static_Discriminants            (Flag211)  (subtype only)\n    --    Is_Class_Wide_Equivalent_Type       (Flag35)\n@@ -5607,6 +5610,7 @@ package Einfo is\n    --    Stored_Constraint                   (Elist23)\n    --    Interfaces                          (Elist25)\n    --    Has_Completion                      (Flag26)\n+   --    Has_Private_Ancestor                (Flag151)\n    --    Has_Record_Rep_Clause               (Flag65)   (base type only)\n    --    Has_External_Tag_Rep_Clause         (Flag110)\n    --    Is_Concurrent_Record_Type           (Flag20)\n@@ -6119,6 +6123,7 @@ package Einfo is\n    function Has_Pragma_Unreferenced_Objects     (Id : E) return B;\n    function Has_Predicates                      (Id : E) return B;\n    function Has_Primitive_Operations            (Id : E) return B;\n+   function Has_Private_Ancestor                (Id : E) return B;\n    function Has_Qualified_Name                  (Id : E) return B;\n    function Has_RACW                            (Id : E) return B;\n    function Has_Record_Rep_Clause               (Id : E) return B;\n@@ -6436,7 +6441,6 @@ package Einfo is\n    function Has_Attach_Handler                  (Id : E) return B;\n    function Has_Entries                         (Id : E) return B;\n    function Has_Foreign_Convention              (Id : E) return B;\n-   function Has_Private_Ancestor                (Id : E) return B;\n    function Has_Private_Declaration             (Id : E) return B;\n    function Implementation_Base_Type            (Id : E) return E;\n    function Is_Base_Type                        (Id : E) return B;\n@@ -6705,6 +6709,7 @@ package Einfo is\n    procedure Set_Has_Pragma_Unreferenced_Objects (Id : E; V : B := True);\n    procedure Set_Has_Predicates                  (Id : E; V : B := True);\n    procedure Set_Has_Primitive_Operations        (Id : E; V : B := True);\n+   procedure Set_Has_Private_Ancestor            (Id : E; V : B := True);\n    procedure Set_Has_Private_Declaration         (Id : E; V : B := True);\n    procedure Set_Has_Qualified_Name              (Id : E; V : B := True);\n    procedure Set_Has_RACW                        (Id : E; V : B := True);\n@@ -7400,6 +7405,7 @@ package Einfo is\n    pragma Inline (Has_Pragma_Unreferenced_Objects);\n    pragma Inline (Has_Predicates);\n    pragma Inline (Has_Primitive_Operations);\n+   pragma Inline (Has_Private_Ancestor);\n    pragma Inline (Has_Private_Declaration);\n    pragma Inline (Has_Qualified_Name);\n    pragma Inline (Has_RACW);\n@@ -7842,6 +7848,7 @@ package Einfo is\n    pragma Inline (Set_Has_Pragma_Unreferenced_Objects);\n    pragma Inline (Set_Has_Predicates);\n    pragma Inline (Set_Has_Primitive_Operations);\n+   pragma Inline (Set_Has_Private_Ancestor);\n    pragma Inline (Set_Has_Private_Declaration);\n    pragma Inline (Set_Has_Qualified_Name);\n    pragma Inline (Set_Has_RACW);"}, {"sha": "678948ad879b015ee8512ab00c6b81bc2248b8cd", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 102, "deletions": 16, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -297,8 +297,11 @@ package body Exp_Ch7 is\n \n    function Build_Cleanup_Statements (N : Node_Id) return List_Id;\n    --  Create the clean up calls for an asynchronous call block, task master,\n-   --  protected subprogram body, task allocation block or task body. If N is\n-   --  neither of these constructs, the routine returns a new list.\n+   --  protected subprogram body, task allocation block or task body. Generate\n+   --  code to unregister the external tags of all library-level tagged types\n+   --  found in the declarations and/or statements of N. If the context does\n+   --  not contain the above constructs or types, the routine returns an empty\n+   --  list.\n \n    function Build_Exception_Handler\n      (Loc         : Source_Ptr;\n@@ -486,8 +489,11 @@ package body Exp_Ch7 is\n       Is_Asynchronous_Call : constant Boolean :=\n                                Nkind (N) = N_Block_Statement\n                                  and then Is_Asynchronous_Call_Block (N);\n+\n       Is_Master            : constant Boolean :=\n-                               Nkind (N) /= N_Entry_Body\n+                               not Nkind_In (N, N_Entry_Body,\n+                                                N_Package_Body,\n+                                                N_Package_Declaration)\n                                  and then Is_Task_Master (N);\n       Is_Protected_Body    : constant Boolean :=\n                                Nkind (N) = N_Subprogram_Body\n@@ -501,6 +507,59 @@ package body Exp_Ch7 is\n       Loc   : constant Source_Ptr := Sloc (N);\n       Stmts : constant List_Id    := New_List;\n \n+      procedure Unregister_Tagged_Types (Decls : List_Id);\n+      --  Unregister the external tag of each tagged type found in the list\n+      --  Decls. The generated statements are added to list Stmts.\n+\n+      -----------------------------\n+      -- Unregister_Tagged_Types --\n+      -----------------------------\n+\n+      procedure Unregister_Tagged_Types (Decls : List_Id) is\n+         Decl   : Node_Id;\n+         DT_Ptr : Entity_Id;\n+         Typ    : Entity_Id;\n+\n+      begin\n+         if No (Decls) or else Is_Empty_List (Decls) then\n+            return;\n+         end if;\n+\n+         --  Process all declarations or statements in reverse order\n+\n+         Decl := Last_Non_Pragma (Decls);\n+         while Present (Decl) loop\n+            if Nkind (Decl) = N_Full_Type_Declaration then\n+               Typ := Defining_Identifier (Decl);\n+\n+               if Is_Tagged_Type (Typ)\n+                 and then Is_Library_Level_Entity (Typ)\n+                 and then Convention (Typ) = Convention_Ada\n+                 and then Present (Access_Disp_Table (Typ))\n+                 and then RTE_Available (RE_Unregister_Tag)\n+                 and then not No_Run_Time_Mode\n+                 and then not Is_Abstract_Type (Typ)\n+               then\n+                  DT_Ptr := Node (First_Elmt (Access_Disp_Table (Typ)));\n+\n+                  --  Generate:\n+                  --    Ada.Tags.Unregister_Tag (<Typ>P);\n+\n+                  Append_To (Stmts,\n+                    Make_Procedure_Call_Statement (Loc,\n+                      Name =>\n+                        New_Reference_To (RTE (RE_Unregister_Tag), Loc),\n+                      Parameter_Associations => New_List (\n+                        New_Reference_To (DT_Ptr, Loc))));\n+               end if;\n+            end if;\n+\n+            Prev_Non_Pragma (Decl);\n+         end loop;\n+      end Unregister_Tagged_Types;\n+\n+   --  Start of processing for Build_Cleanup_Statements\n+\n    begin\n       if Is_Task_Body then\n          if Restricted_Profile then\n@@ -711,6 +770,26 @@ package body Exp_Ch7 is\n          end;\n       end if;\n \n+      --  Inspect all declaration and/or statement lists of N for library-level\n+      --  tagged types. Generate code to unregister the external tag of such a\n+      --  type.\n+\n+      if Nkind (N) = N_Package_Declaration then\n+         Unregister_Tagged_Types (Private_Declarations (Specification (N)));\n+         Unregister_Tagged_Types (Visible_Declarations (Specification (N)));\n+\n+      --  Accept statement, block, entry body, package body, protected body,\n+      --  subprogram body or task body.\n+\n+      else\n+         if Present (Handled_Statement_Sequence (N)) then\n+            Unregister_Tagged_Types\n+              (Statements (Handled_Statement_Sequence (N)));\n+         end if;\n+\n+         Unregister_Tagged_Types (Declarations (N));\n+      end if;\n+\n       return Stmts;\n    end Build_Cleanup_Statements;\n \n@@ -2686,22 +2765,29 @@ package body Exp_Ch7 is\n          if For_Package_Spec then\n             Process_Declarations\n               (Priv_Decls, Preprocess => True, Top_Level => True);\n+         end if;\n \n-            --  The preprocessing has determined that the context has objects\n-            --  that need finalization actions. Private declarations are\n-            --  processed first in order to preserve possible dependencies\n-            --  between public and private objects.\n+         --  The current context may lack controlled objects, but require some\n+         --  other form of completion (task termination for instance). In such\n+         --  cases, the finalizer must be created and carry the additional\n+         --  statements.\n \n-            if Has_Ctrl_Objs then\n-               Build_Components;\n-               Process_Declarations (Priv_Decls);\n-            end if;\n+         if Acts_As_Clean or else Has_Ctrl_Objs then\n+            Build_Components;\n          end if;\n \n-         --  Process the public declarations\n+         --  The preprocessing has determined that the context has objects that\n+         --  need finalization actions.\n \n          if Has_Ctrl_Objs then\n-            Build_Components;\n+\n+            --  Private declarations are processed first in order to preserve\n+            --  possible dependencies between public and private objects.\n+\n+            if For_Package_Spec then\n+               Process_Declarations (Priv_Decls);\n+            end if;\n+\n             Process_Declarations (Decls);\n          end if;\n \n@@ -3495,7 +3581,7 @@ package body Exp_Ch7 is\n                                  and then VM_Target = No_VM;\n \n       Actions_Required     : constant Boolean :=\n-                               Has_Controlled_Objects (N)\n+                               Requires_Cleanup_Actions (N)\n                                  or else Is_Asynchronous_Call\n                                  or else Is_Master\n                                  or else Is_Protected_Body\n@@ -3770,7 +3856,7 @@ package body Exp_Ch7 is\n       if Ekind (Spec_Ent) /= E_Generic_Package then\n          Build_Finalizer\n            (N           => N,\n-            Clean_Stmts => No_List,\n+            Clean_Stmts => Build_Cleanup_Statements (N),\n             Mark_Id     => Empty,\n             Top_Decls   => No_List,\n             Defer_Abort => False,\n@@ -3924,7 +4010,7 @@ package body Exp_Ch7 is\n       if Ekind (Id) /= E_Generic_Package then\n          Build_Finalizer\n            (N           => N,\n-            Clean_Stmts => No_List,\n+            Clean_Stmts => Build_Cleanup_Statements (N),\n             Mark_Id     => Empty,\n             Top_Decls   => No_List,\n             Defer_Abort => False,"}, {"sha": "4df6eff602163e6266c7860d4771d6f6f110f675", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -6172,8 +6172,9 @@ package body Exp_Disp is\n          end if;\n       end if;\n \n-      --  Generate code to check if the external tag of this type is the same\n-      --  as the external tag of some other declaration.\n+      --  If the type has a representation clause which specifies its external\n+      --  tag then generate code to check if the external tag of this type is\n+      --  the same as the external tag of some other declaration.\n \n       --     Check_TSD (TSD'Unrestricted_Access);\n \n@@ -6188,6 +6189,7 @@ package body Exp_Disp is\n \n       if not No_Run_Time_Mode\n         and then Ada_Version >= Ada_2005\n+        and then Has_External_Tag_Rep_Clause (Typ)\n         and then RTE_Available (RE_Check_TSD)\n         and then not Debug_Flag_QQ\n       then"}, {"sha": "83fed95a675a8310c86df6a2cc4214ba52bdad88", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 257, "deletions": 232, "changes": 489, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -147,6 +147,17 @@ package body Exp_Util is\n       N      : Node_Id) return Entity_Id;\n    --  Create an implicit subtype of CW_Typ attached to node N\n \n+   function Requires_Cleanup_Actions\n+     (L           : List_Id;\n+      For_Package : Boolean) return Boolean;\n+   --  Given a list L, determine whether it contains one of the following:\n+   --\n+   --    1) controlled objects\n+   --    2) library-level tagged types\n+   --\n+   --  Flag For_Package should be set when the list comes from a package spec\n+   --  or body.\n+\n    ----------------------\n    -- Adjust_Condition --\n    ----------------------\n@@ -2579,238 +2590,6 @@ package body Exp_Util is\n       end if;\n    end Has_Access_Constraint;\n \n-   ----------------------------\n-   -- Has_Controlled_Objects --\n-   ----------------------------\n-\n-   function Has_Controlled_Objects (N : Node_Id) return Boolean is\n-      For_Pkg : constant Boolean :=\n-                  Nkind_In (N, N_Package_Body, N_Package_Specification);\n-\n-   begin\n-      case Nkind (N) is\n-         when N_Accept_Statement      |\n-              N_Block_Statement       |\n-              N_Entry_Body            |\n-              N_Package_Body          |\n-              N_Protected_Body        |\n-              N_Subprogram_Body       |\n-              N_Task_Body             =>\n-            return Has_Controlled_Objects (Declarations (N), For_Pkg)\n-                     or else\n-\n-                  --  An expanded sequence of statements may introduce\n-                  --  controlled objects.\n-\n-                  (Present (Handled_Statement_Sequence (N))\n-                     and then\n-                   Has_Controlled_Objects\n-                     (Statements (Handled_Statement_Sequence (N)), For_Pkg));\n-\n-         when N_Package_Specification =>\n-            return Has_Controlled_Objects (Visible_Declarations (N), For_Pkg)\n-                     or else\n-                   Has_Controlled_Objects (Private_Declarations (N), For_Pkg);\n-\n-         when others                  =>\n-            return False;\n-      end case;\n-   end Has_Controlled_Objects;\n-\n-   ----------------------------\n-   -- Has_Controlled_Objects --\n-   ----------------------------\n-\n-   function Has_Controlled_Objects\n-     (L           : List_Id;\n-      For_Package : Boolean) return Boolean\n-   is\n-      Decl    : Node_Id;\n-      Expr    : Node_Id;\n-      Obj_Id  : Entity_Id;\n-      Obj_Typ : Entity_Id;\n-      Pack_Id : Entity_Id;\n-      Typ     : Entity_Id;\n-\n-   begin\n-      if No (L)\n-        or else Is_Empty_List (L)\n-      then\n-         return False;\n-      end if;\n-\n-      Decl := First (L);\n-      while Present (Decl) loop\n-\n-         --  Regular object declarations\n-\n-         if Nkind (Decl) = N_Object_Declaration then\n-            Obj_Id  := Defining_Identifier (Decl);\n-            Obj_Typ := Base_Type (Etype (Obj_Id));\n-            Expr    := Expression (Decl);\n-\n-            --  Bypass any form of processing for objects which have their\n-            --  finalization disabled. This applies only to objects at the\n-            --  library level.\n-\n-            if For_Package\n-              and then Finalize_Storage_Only (Obj_Typ)\n-            then\n-               null;\n-\n-            --  Transient variables are treated separately in order to minimize\n-            --  the size of the generated code. See Exp_Ch7.Process_Transient_\n-            --  Objects.\n-\n-            elsif Is_Processed_Transient (Obj_Id) then\n-               null;\n-\n-            --  The object is of the form:\n-            --    Obj : Typ [:= Expr];\n-            --\n-            --  Do not process the incomplete view of a deferred constant. Do\n-            --  not consider tag-to-class-wide conversions.\n-\n-            elsif not Is_Imported (Obj_Id)\n-              and then Needs_Finalization (Obj_Typ)\n-              and then not (Ekind (Obj_Id) = E_Constant\n-                              and then not Has_Completion (Obj_Id))\n-              and then not Is_Tag_To_CW_Conversion (Obj_Id)\n-            then\n-               return True;\n-\n-            --  The object is of the form:\n-            --    Obj : Access_Typ := Non_BIP_Function_Call'reference;\n-            --\n-            --    Obj : Access_Typ :=\n-            --            BIP_Function_Call\n-            --              (..., BIPaccess => null, ...)'reference;\n-\n-            elsif Is_Access_Type (Obj_Typ)\n-              and then Needs_Finalization\n-                         (Available_View (Designated_Type (Obj_Typ)))\n-              and then Present (Expr)\n-              and then\n-                (Is_Null_Access_BIP_Func_Call (Expr)\n-                   or else\n-                (Is_Non_BIP_Func_Call (Expr)\n-                   and then not Is_Related_To_Func_Return (Obj_Id)))\n-            then\n-               return True;\n-\n-            --  Processing for \"hook\" objects generated for controlled\n-            --  transients declared inside an Expression_With_Actions.\n-\n-            elsif Is_Access_Type (Obj_Typ)\n-              and then Present (Return_Flag_Or_Transient_Decl (Obj_Id))\n-              and then Nkind (Return_Flag_Or_Transient_Decl (Obj_Id)) =\n-                         N_Object_Declaration\n-              and then Is_Finalizable_Transient\n-                         (Return_Flag_Or_Transient_Decl (Obj_Id), Decl)\n-            then\n-               return True;\n-\n-            --  Simple protected objects which use type System.Tasking.\n-            --  Protected_Objects.Protection to manage their locks should be\n-            --  treated as controlled since they require manual cleanup.\n-\n-            elsif Ekind (Obj_Id) = E_Variable\n-              and then\n-                (Is_Simple_Protected_Type (Obj_Typ)\n-                  or else Has_Simple_Protected_Object (Obj_Typ))\n-            then\n-               return True;\n-            end if;\n-\n-         --  Specific cases of object renamings\n-\n-         elsif Nkind (Decl) = N_Object_Renaming_Declaration\n-           and then Nkind (Name (Decl)) = N_Explicit_Dereference\n-           and then Nkind (Prefix (Name (Decl))) = N_Identifier\n-         then\n-            Obj_Id  := Defining_Identifier (Decl);\n-            Obj_Typ := Base_Type (Etype (Obj_Id));\n-\n-            --  Bypass any form of processing for objects which have their\n-            --  finalization disabled. This applies only to objects at the\n-            --  library level.\n-\n-            if For_Package\n-              and then Finalize_Storage_Only (Obj_Typ)\n-            then\n-               null;\n-\n-            --  Return object of a build-in-place function. This case is\n-            --  recognized and marked by the expansion of an extended return\n-            --  statement (see Expand_N_Extended_Return_Statement).\n-\n-            elsif Needs_Finalization (Obj_Typ)\n-              and then Is_Return_Object (Obj_Id)\n-              and then Present (Return_Flag_Or_Transient_Decl (Obj_Id))\n-            then\n-               return True;\n-            end if;\n-\n-         --  Inspect the freeze node of an access-to-controlled type and\n-         --  look for a delayed finalization collection. This case arises\n-         --  when the freeze actions are inserted at a later time than the\n-         --  expansion of the context. Since Build_Finalizer is never called\n-         --  on a single construct twice, the collection will be ultimately\n-         --  left out and never finalized. This is also needed for freeze\n-         --  actions of designated types themselves, since in some cases the\n-         --  finalization collection is associated with a designated type's\n-         --  freeze node rather than that of the access type (see handling\n-         --  for freeze actions in Build_Finalization_Collection).\n-\n-         elsif Nkind (Decl) = N_Freeze_Entity\n-           and then Present (Actions (Decl))\n-         then\n-            Typ := Entity (Decl);\n-\n-            if (Is_Access_Type (Typ)\n-                  and then not Is_Access_Subprogram_Type (Typ)\n-                  and then Needs_Finalization\n-                             (Available_View (Designated_Type (Typ))))\n-              or else\n-               (Is_Type (Typ)\n-                  and then Needs_Finalization (Typ))\n-            then\n-               return True;\n-            end if;\n-\n-         --  Nested package declarations\n-\n-         elsif Nkind (Decl) = N_Package_Declaration then\n-            Pack_Id := Defining_Unit_Name (Specification (Decl));\n-\n-            if Nkind (Pack_Id) = N_Defining_Program_Unit_Name then\n-               Pack_Id := Defining_Identifier (Pack_Id);\n-            end if;\n-\n-            if Ekind (Pack_Id) /= E_Generic_Package\n-              and then Has_Controlled_Objects (Specification (Decl))\n-            then\n-               return True;\n-            end if;\n-\n-         --  Nested package bodies\n-\n-         elsif Nkind (Decl) = N_Package_Body then\n-            Pack_Id := Corresponding_Spec (Decl);\n-\n-            if Ekind (Pack_Id) /= E_Generic_Package\n-              and then Has_Controlled_Objects (Decl)\n-            then\n-               return True;\n-            end if;\n-         end if;\n-\n-         Next (Decl);\n-      end loop;\n-\n-      return False;\n-   end Has_Controlled_Objects;\n-\n    ----------------------------------\n    -- Has_Following_Address_Clause --\n    ----------------------------------\n@@ -6346,6 +6125,252 @@ package body Exp_Util is\n                    and then Is_Scalar_Type (Packed_Array_Type (UT)));\n    end Represented_As_Scalar;\n \n+   ------------------------------\n+   -- Requires_Cleanup_Actions --\n+   ------------------------------\n+\n+   function Requires_Cleanup_Actions (N : Node_Id) return Boolean is\n+      For_Pkg : constant Boolean :=\n+                  Nkind_In (N, N_Package_Body, N_Package_Specification);\n+\n+   begin\n+      case Nkind (N) is\n+         when N_Accept_Statement      |\n+              N_Block_Statement       |\n+              N_Entry_Body            |\n+              N_Package_Body          |\n+              N_Protected_Body        |\n+              N_Subprogram_Body       |\n+              N_Task_Body             =>\n+            return\n+              Requires_Cleanup_Actions (Declarations (N), For_Pkg)\n+                or else\n+              (Present (Handled_Statement_Sequence (N))\n+                and then\n+              Requires_Cleanup_Actions\n+                (Statements (Handled_Statement_Sequence (N)), For_Pkg));\n+\n+         when N_Package_Specification =>\n+            return\n+              Requires_Cleanup_Actions (Visible_Declarations (N), For_Pkg)\n+                or else\n+              Requires_Cleanup_Actions (Private_Declarations (N), For_Pkg);\n+\n+         when others                  =>\n+            return False;\n+      end case;\n+   end Requires_Cleanup_Actions;\n+\n+   ------------------------------\n+   -- Requires_Cleanup_Actions --\n+   ------------------------------\n+\n+   function Requires_Cleanup_Actions\n+     (L           : List_Id;\n+      For_Package : Boolean) return Boolean\n+   is\n+      Decl    : Node_Id;\n+      Expr    : Node_Id;\n+      Obj_Id  : Entity_Id;\n+      Obj_Typ : Entity_Id;\n+      Pack_Id : Entity_Id;\n+      Typ     : Entity_Id;\n+\n+   begin\n+      if No (L)\n+        or else Is_Empty_List (L)\n+      then\n+         return False;\n+      end if;\n+\n+      Decl := First (L);\n+      while Present (Decl) loop\n+\n+         --  Library-level tagged types\n+\n+         if Nkind (Decl) = N_Full_Type_Declaration then\n+            Typ := Defining_Identifier (Decl);\n+\n+            if Is_Tagged_Type (Typ)\n+              and then Is_Library_Level_Entity (Typ)\n+              and then Convention (Typ) = Convention_Ada\n+              and then Present (Access_Disp_Table (Typ))\n+              and then RTE_Available (RE_Unregister_Tag)\n+              and then not No_Run_Time_Mode\n+              and then not Is_Abstract_Type (Typ)\n+            then\n+               return True;\n+            end if;\n+\n+         --  Regular object declarations\n+\n+         elsif Nkind (Decl) = N_Object_Declaration then\n+            Obj_Id  := Defining_Identifier (Decl);\n+            Obj_Typ := Base_Type (Etype (Obj_Id));\n+            Expr    := Expression (Decl);\n+\n+            --  Bypass any form of processing for objects which have their\n+            --  finalization disabled. This applies only to objects at the\n+            --  library level.\n+\n+            if For_Package\n+              and then Finalize_Storage_Only (Obj_Typ)\n+            then\n+               null;\n+\n+            --  Transient variables are treated separately in order to minimize\n+            --  the size of the generated code. See Exp_Ch7.Process_Transient_\n+            --  Objects.\n+\n+            elsif Is_Processed_Transient (Obj_Id) then\n+               null;\n+\n+            --  The object is of the form:\n+            --    Obj : Typ [:= Expr];\n+            --\n+            --  Do not process the incomplete view of a deferred constant. Do\n+            --  not consider tag-to-class-wide conversions.\n+\n+            elsif not Is_Imported (Obj_Id)\n+              and then Needs_Finalization (Obj_Typ)\n+              and then not (Ekind (Obj_Id) = E_Constant\n+                              and then not Has_Completion (Obj_Id))\n+              and then not Is_Tag_To_CW_Conversion (Obj_Id)\n+            then\n+               return True;\n+\n+            --  The object is of the form:\n+            --    Obj : Access_Typ := Non_BIP_Function_Call'reference;\n+            --\n+            --    Obj : Access_Typ :=\n+            --            BIP_Function_Call\n+            --              (..., BIPaccess => null, ...)'reference;\n+\n+            elsif Is_Access_Type (Obj_Typ)\n+              and then Needs_Finalization\n+                         (Available_View (Designated_Type (Obj_Typ)))\n+              and then Present (Expr)\n+              and then\n+                (Is_Null_Access_BIP_Func_Call (Expr)\n+                   or else\n+                (Is_Non_BIP_Func_Call (Expr)\n+                   and then not Is_Related_To_Func_Return (Obj_Id)))\n+            then\n+               return True;\n+\n+            --  Processing for \"hook\" objects generated for controlled\n+            --  transients declared inside an Expression_With_Actions.\n+\n+            elsif Is_Access_Type (Obj_Typ)\n+              and then Present (Return_Flag_Or_Transient_Decl (Obj_Id))\n+              and then Nkind (Return_Flag_Or_Transient_Decl (Obj_Id)) =\n+                         N_Object_Declaration\n+              and then Is_Finalizable_Transient\n+                         (Return_Flag_Or_Transient_Decl (Obj_Id), Decl)\n+            then\n+               return True;\n+\n+            --  Simple protected objects which use type System.Tasking.\n+            --  Protected_Objects.Protection to manage their locks should be\n+            --  treated as controlled since they require manual cleanup.\n+\n+            elsif Ekind (Obj_Id) = E_Variable\n+              and then\n+                (Is_Simple_Protected_Type (Obj_Typ)\n+                  or else Has_Simple_Protected_Object (Obj_Typ))\n+            then\n+               return True;\n+            end if;\n+\n+         --  Specific cases of object renamings\n+\n+         elsif Nkind (Decl) = N_Object_Renaming_Declaration\n+           and then Nkind (Name (Decl)) = N_Explicit_Dereference\n+           and then Nkind (Prefix (Name (Decl))) = N_Identifier\n+         then\n+            Obj_Id  := Defining_Identifier (Decl);\n+            Obj_Typ := Base_Type (Etype (Obj_Id));\n+\n+            --  Bypass any form of processing for objects which have their\n+            --  finalization disabled. This applies only to objects at the\n+            --  library level.\n+\n+            if For_Package\n+              and then Finalize_Storage_Only (Obj_Typ)\n+            then\n+               null;\n+\n+            --  Return object of a build-in-place function. This case is\n+            --  recognized and marked by the expansion of an extended return\n+            --  statement (see Expand_N_Extended_Return_Statement).\n+\n+            elsif Needs_Finalization (Obj_Typ)\n+              and then Is_Return_Object (Obj_Id)\n+              and then Present (Return_Flag_Or_Transient_Decl (Obj_Id))\n+            then\n+               return True;\n+            end if;\n+\n+         --  Inspect the freeze node of an access-to-controlled type and\n+         --  look for a delayed finalization collection. This case arises\n+         --  when the freeze actions are inserted at a later time than the\n+         --  expansion of the context. Since Build_Finalizer is never called\n+         --  on a single construct twice, the collection will be ultimately\n+         --  left out and never finalized. This is also needed for freeze\n+         --  actions of designated types themselves, since in some cases the\n+         --  finalization collection is associated with a designated type's\n+         --  freeze node rather than that of the access type (see handling\n+         --  for freeze actions in Build_Finalization_Collection).\n+\n+         elsif Nkind (Decl) = N_Freeze_Entity\n+           and then Present (Actions (Decl))\n+         then\n+            Typ := Entity (Decl);\n+\n+            if (Is_Access_Type (Typ)\n+                  and then not Is_Access_Subprogram_Type (Typ)\n+                  and then Needs_Finalization\n+                             (Available_View (Designated_Type (Typ))))\n+              or else\n+               (Is_Type (Typ)\n+                  and then Needs_Finalization (Typ))\n+            then\n+               return True;\n+            end if;\n+\n+         --  Nested package declarations\n+\n+         elsif Nkind (Decl) = N_Package_Declaration then\n+            Pack_Id := Defining_Unit_Name (Specification (Decl));\n+\n+            if Nkind (Pack_Id) = N_Defining_Program_Unit_Name then\n+               Pack_Id := Defining_Identifier (Pack_Id);\n+            end if;\n+\n+            if Ekind (Pack_Id) /= E_Generic_Package\n+              and then Requires_Cleanup_Actions (Specification (Decl))\n+            then\n+               return True;\n+            end if;\n+\n+         --  Nested package bodies\n+\n+         elsif Nkind (Decl) = N_Package_Body then\n+            Pack_Id := Corresponding_Spec (Decl);\n+\n+            if Ekind (Pack_Id) /= E_Generic_Package\n+              and then Requires_Cleanup_Actions (Decl)\n+            then\n+               return True;\n+            end if;\n+         end if;\n+\n+         Next (Decl);\n+      end loop;\n+\n+      return False;\n+   end Requires_Cleanup_Actions;\n+\n    ------------------------------------\n    -- Safe_Unchecked_Type_Conversion --\n    ------------------------------------"}, {"sha": "a60f40ffd3297ff2e3055a225474cfe4eee97c4e", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -486,17 +486,6 @@ package Exp_Util is\n    function Has_Access_Constraint (E : Entity_Id) return Boolean;\n    --  Given object or type E, determine if a discriminant is of an access type\n \n-   function Has_Controlled_Objects (N : Node_Id) return Boolean;\n-   --  Given a node N, determine if it has a declarative or a statement part\n-   --  and whether those lists contain at least one controlled object.\n-\n-   function Has_Controlled_Objects\n-     (L           : List_Id;\n-      For_Package : Boolean) return Boolean;\n-   --  Given a list, determine whether L contains at least one controlled\n-   --  object. Flag For_Package should be set when the list comes from a\n-   --  package spec or body.\n-\n    function Has_Following_Address_Clause (D : Node_Id) return Boolean;\n    --  D is the node for an object declaration. This function searches the\n    --  current declarative part to look for an address clause for the object\n@@ -738,6 +727,15 @@ package Exp_Util is\n    --  terms is scalar. This is true for scalars in the Ada sense, and for\n    --  packed arrays which are represented by a scalar (modular) type.\n \n+   function Requires_Cleanup_Actions (N : Node_Id) return Boolean;\n+   --  Given a node N, determine whether its declarative and/or statement list\n+   --  contains one of the following:\n+   --\n+   --    1) controlled objects\n+   --    2) library-level tagged types\n+   --\n+   --  The above cases require special actions on scope exit.\n+\n    function Safe_Unchecked_Type_Conversion (Exp : Node_Id) return Boolean;\n    --  Given the node for an N_Unchecked_Type_Conversion, return True if this\n    --  is an unchecked conversion that Gigi can handle directly. Otherwise"}, {"sha": "c7ad4dcfe117bdc86f08d35b72a3c3ae9c5a2f41", "filename": "gcc/ada/g-regist.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fg-regist.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fg-regist.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-regist.ads?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -145,7 +145,7 @@ package GNAT.Registry is\n \n private\n \n-   type HKEY is mod 2 ** Integer'Size;\n+   type HKEY is mod 2 ** Standard'Address_Size;\n \n    HKEY_CLASSES_ROOT     : constant HKEY := 16#80000000#;\n    HKEY_CURRENT_USER     : constant HKEY := 16#80000001#;"}, {"sha": "6c2391ec9d17cf1ef4d1f20c2a7ab480a9ead92f", "filename": "gcc/ada/get_alfa.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fget_alfa.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fget_alfa.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fget_alfa.adb?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -371,6 +371,7 @@ begin\n                XR_Entity      : String_Ptr;\n                XR_Entity_Line : Nat;\n                XR_Entity_Col  : Nat;\n+               XR_Entity_Typ  : Character;\n \n                XR_File : Nat;\n                --  Keeps track of the current file (changed by nn|)\n@@ -383,7 +384,7 @@ begin\n                XR_Scope := Cur_Scope;\n \n                XR_Entity_Line := Get_Nat;\n-               Check (' ');\n+               XR_Entity_Typ  := Getc;\n                XR_Entity_Col  := Get_Nat;\n \n                Skip_Spaces;\n@@ -439,6 +440,7 @@ begin\n                            ALFA_Xref_Table.Append (\n                              (Entity_Name => XR_Entity,\n                               Entity_Line => XR_Entity_Line,\n+                              Etype       => XR_Entity_Typ,\n                               Entity_Col  => XR_Entity_Col,\n                               File_Num    => XR_File,\n                               Scope_Num   => XR_Scope,"}, {"sha": "c2e2de74f49d1ea82b0dfb4b0326acbe4992a86e", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -1594,11 +1594,16 @@ begin\n                --  is to be dealt with specially because it needs to be passed\n                --  if the binder-generated file is in Ada and may also be used\n                --  to drive the linker.\n+               --  Also in CodePeer mode, we need to pass the -gnat05 or\n+               --  -gnat12 switches to be able to compile the binder file.\n \n                declare\n                   Arg : String_Ptr renames Args.Table (Index);\n                begin\n-                  if not Is_Front_End_Switch (Arg.all) then\n+                  if not Is_Front_End_Switch (Arg.all)\n+                    or else (Opt.CodePeer_Mode\n+                             and then Is_Language_Switch (Arg.all))\n+                  then\n                      Binder_Options_From_ALI.Increment_Last;\n                      Binder_Options_From_ALI.Table\n                        (Binder_Options_From_ALI.Last) := String_Access (Arg);"}, {"sha": "4f52676474f4972dc927f6fa8b55aaa2d80d263e", "filename": "gcc/ada/lib-xref-alfa.adb", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Flib-xref-alfa.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Flib-xref-alfa.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-alfa.adb?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -635,6 +635,9 @@ package body ALFA is\n             --  Return scope entity which corresponds to index Cur_Scope_Idx in\n             --  table ALFA_Scope_Table.\n \n+            function Get_Entity_Type (E : Entity_Id) return Character;\n+            --  Return a character representing the type of entity\n+\n             function Is_Future_Scope_Entity (E : Entity_Id) return Boolean;\n             --  Check whether entity E is in ALFA_Scope_Table at index\n             --  Cur_Scope_Idx or higher.\n@@ -652,6 +655,22 @@ package body ALFA is\n                return ALFA_Scope_Table.Table (Cur_Scope_Idx).Scope_Entity;\n             end Cur_Scope;\n \n+            ---------------------\n+            -- Get_Entity_Type --\n+            ---------------------\n+\n+            function Get_Entity_Type (E : Entity_Id) return Character is\n+               C : Character;\n+            begin\n+               case Ekind (E) is\n+                  when E_Out_Parameter    => C := '<';\n+                  when E_In_Out_Parameter => C := '=';\n+                  when E_In_Parameter     => C := '>';\n+                  when others             => C := '*';\n+               end case;\n+               return C;\n+            end Get_Entity_Type;\n+\n             ----------------------------\n             -- Is_Future_Scope_Entity --\n             ----------------------------\n@@ -729,6 +748,7 @@ package body ALFA is\n             ALFA_Xref_Table.Append (\n               (Entity_Name => Cur_Entity_Name,\n                Entity_Line => Int (Get_Logical_Line_Number (XE.Def)),\n+               Etype       => Get_Entity_Type (XE.Ent),\n                Entity_Col  => Int (Get_Column_Number (XE.Def)),\n                File_Num    => Dependency_Num (XE.Lun),\n                Scope_Num   => Get_Scope_Num (XE.Ref_Scope),"}, {"sha": "f2c8500f9ee1735f7aa9fe9262508dd7cfbcafd5", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -1281,7 +1281,7 @@ package body Prj.Env is\n          --  If there are Ada sources, call action with the name of every\n          --  source directory.\n \n-         if Has_Ada_Sources (Project) then\n+         if Has_Ada_Sources (Prj) then\n             while Current /= Nil_String loop\n                The_String := In_Tree.Shared.String_Elements.Table (Current);\n                Action (Get_Name_String (The_String.Display_Value));"}, {"sha": "dad65b914602780f33d6d8ab48031ad5e022e5b6", "filename": "gcc/ada/put_alfa.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fput_alfa.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fput_alfa.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fput_alfa.adb?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -173,7 +173,7 @@ begin\n                         Write_Info_Initiate ('F');\n                         Write_Info_Char (' ');\n                         Write_Info_Nat (R.Entity_Line);\n-                        Write_Info_Char (' ');\n+                        Write_Info_Char (R.Etype);\n                         Write_Info_Nat (R.Entity_Col);\n                         Write_Info_Char (' ');\n "}, {"sha": "1d545dfe596b3fd1b6c4761c52928e54ef32b906", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -642,6 +642,7 @@ package Rtsfind is\n      RE_TK_Protected,                    -- Ada.Tags\n      RE_TK_Tagged,                       -- Ada.Tags\n      RE_TK_Task,                         -- Ada.Tags\n+     RE_Unregister_Tag,                  -- Ada.Tags\n \n      RE_Set_Specific_Handler,            -- Ada.Task_Termination\n      RE_Specific_Handler,                -- Ada.Task_Termination\n@@ -1823,6 +1824,7 @@ package Rtsfind is\n      RE_TK_Protected                     => Ada_Tags,\n      RE_TK_Tagged                        => Ada_Tags,\n      RE_TK_Task                          => Ada_Tags,\n+     RE_Unregister_Tag                   => Ada_Tags,\n \n      RE_Set_Specific_Handler             => Ada_Task_Termination,\n      RE_Specific_Handler                 => Ada_Task_Termination,"}, {"sha": "0d0df436ad6ce6017006ad1c5e347001d9a563ee", "filename": "gcc/ada/s-tasdeb.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fs-tasdeb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fs-tasdeb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasdeb.ads?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1997-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1997-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -83,7 +83,7 @@ package System.Tasking.Debug is\n \n    subtype Event_Kind_Type is Positive range 1 .. 11;\n    --  Event kinds currently defined for debugging, used globally\n-   --  below and on a per taak basis.\n+   --  below and on a per task basis.\n \n    procedure Signal_Debug_Event\n      (Event_Kind : Event_Kind_Type;"}, {"sha": "a226c4810e75a1f8e8f985c8fac347560ef45dd4", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 88, "deletions": 8, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -45,6 +45,7 @@ with Sem;      use Sem;\n with Sem_Aux;  use Sem_Aux;\n with Sem_Cat;  use Sem_Cat;\n with Sem_Ch3;  use Sem_Ch3;\n+with Sem_Ch8;  use Sem_Ch8;\n with Sem_Ch13; use Sem_Ch13;\n with Sem_Eval; use Sem_Eval;\n with Sem_Res;  use Sem_Res;\n@@ -2573,6 +2574,15 @@ package body Sem_Aggr is\n         and then Is_Type (Entity (A))\n       then\n          Check_SPARK_Restriction (\"ancestor part cannot be a type mark\", A);\n+\n+         --  AI05-0115: if the ancestor part is a subtype mark, the ancestor\n+         --  must not have unknown discriminants.\n+\n+         if Has_Unknown_Discriminants (Root_Type (Typ)) then\n+            Error_Msg_NE\n+              (\"aggregate not available for type& whose ancestor \"\n+                 & \"has unknown discriminants\", N, Typ);\n+         end if;\n       end if;\n \n       if not Is_Tagged_Type (Typ) then\n@@ -3405,6 +3415,18 @@ package body Sem_Aggr is\n             Positional_Expr := Empty;\n          end if;\n \n+         --  AI05-0115: if the ancestor part is a subtype mark, the ancestor\n+         --  must npt have unknown discriminants.\n+\n+         if Is_Derived_Type (Typ)\n+           and then Has_Unknown_Discriminants (Root_Type (Typ))\n+           and then Nkind (N) /= N_Extension_Aggregate\n+         then\n+            Error_Msg_NE\n+              (\"aggregate not available for type& whose ancestor \"\n+                 & \"has unknown discriminants \", N, Typ);\n+         end if;\n+\n          if Has_Unknown_Discriminants (Typ)\n            and then Present (Underlying_Record_View (Typ))\n          then\n@@ -3558,6 +3580,35 @@ package body Sem_Aggr is\n          Errors_Found    : Boolean := False;\n          Dnode           : Node_Id;\n \n+         function Find_Private_Ancestor return Entity_Id;\n+         --  AI05-0115: Find earlier ancestor in the derivation chain that is\n+         --  derived from a private view. Whether the aggregate is legal\n+         --  depends on the current visibility of the type as well as that\n+         --  of the parent of the ancestor.\n+\n+         ---------------------------\n+         -- Find_Private_Ancestor --\n+         ---------------------------\n+\n+         function Find_Private_Ancestor return Entity_Id is\n+            Par : Entity_Id;\n+         begin\n+            Par := Typ;\n+            loop\n+               if Has_Private_Ancestor (Par)\n+                 and then not Has_Private_Ancestor (Etype (Base_Type (Par)))\n+               then\n+                  return Par;\n+\n+               elsif not Is_Derived_Type (Par) then\n+                  return Empty;\n+\n+               else\n+                  Par := Etype (Base_Type (Par));\n+               end if;\n+            end loop;\n+         end Find_Private_Ancestor;\n+\n       begin\n          if Is_Derived_Type (Typ) and then Is_Tagged_Type (Typ) then\n             Parent_Typ_List := New_Elmt_List;\n@@ -3571,16 +3622,45 @@ package body Sem_Aggr is\n                Root_Typ := Base_Type (Etype (Ancestor_Part (N)));\n \n             else\n+               --  AI05-0115:  check legality of aggregate for type with\n+               --  aa private ancestor.\n+\n                Root_Typ := Root_Type (Typ);\n+               if Has_Private_Ancestor (Typ) then\n+                  declare\n+                     Ancestor      : constant Entity_Id :=\n+                       Find_Private_Ancestor;\n+                     Ancestor_Unit : constant Entity_Id :=\n+                       Cunit_Entity (Get_Source_Unit (Ancestor));\n+                     Parent_Unit   : constant Entity_Id :=\n+                       Cunit_Entity\n+                         (Get_Source_Unit (Base_Type (Etype (Ancestor))));\n+                  begin\n \n-               if Nkind (Parent (Base_Type (Root_Typ))) =\n-                                               N_Private_Type_Declaration\n-               then\n-                  Error_Msg_NE\n-                    (\"type of aggregate has private ancestor&!\",\n-                     N, Root_Typ);\n-                  Error_Msg_N (\"must use extension aggregate!\", N);\n-                  return;\n+                     --  check whether we are in a scope that has full view\n+                     --  over the private ancestor and its parent. This can\n+                     --  only happen if the derivation takes place in a child\n+                     --  unit of the unit that declares the parent, and we are\n+                     --  in the private part or body of that child unit, else\n+                     --  the aggregate is illegal.\n+\n+                     if Is_Child_Unit (Ancestor_Unit)\n+                       and then Scope (Ancestor_Unit) = Parent_Unit\n+                       and then In_Open_Scopes (Scope (Ancestor))\n+                       and then\n+                        (In_Private_Part (Scope (Ancestor))\n+                           or else In_Package_Body (Scope (Ancestor)))\n+                     then\n+                        null;\n+\n+                     else\n+                        Error_Msg_NE\n+                          (\"type of aggregate has private ancestor&!\",\n+                              N, Root_Typ);\n+                        Error_Msg_N (\"must use extension aggregate!\", N);\n+                        return;\n+                     end if;\n+                  end;\n                end if;\n \n                Dnode := Declaration_Node (Base_Type (Root_Typ));"}, {"sha": "f2d8a35ea46ba986d36f305534694384068656f1", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 47, "deletions": 19, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -888,7 +888,6 @@ package body Sem_Ch12 is\n       Actual          : Node_Id;\n       Formal          : Node_Id;\n       Next_Formal     : Node_Id;\n-      Temp_Formal     : Node_Id;\n       Analyzed_Formal : Node_Id;\n       Match           : Node_Id;\n       Named           : Node_Id;\n@@ -910,9 +909,16 @@ package body Sem_Ch12 is\n       Num_Actuals    : Int := 0;\n \n       Others_Present : Boolean := False;\n+      Others_Choice  : Node_Id := Empty;\n       --  In Ada 2005, indicates partial parametrization of a formal\n       --  package. As usual an other association must be last in the list.\n \n+      procedure Check_Overloaded_Formal_Subprogram (Formal : Entity_Id);\n+      --  Apply RM 12.3 (9): if a formal subprogram is overloaded, the instance\n+      --  cannot have a named association for it. AI05-0025 extends this rule\n+      --  to formals of formal packages by AI05-0025, and it also applies to\n+      --  box-initialized formals.\n+\n       function Matching_Actual\n         (F   : Entity_Id;\n          A_F : Entity_Id) return Node_Id;\n@@ -946,6 +952,40 @@ package body Sem_Ch12 is\n       --  anonymous types, the presence a formal equality will introduce an\n       --  implicit declaration for the corresponding inequality.\n \n+      ----------------------------------------\n+      -- Check_Overloaded_Formal_Subprogram --\n+      ----------------------------------------\n+\n+      procedure Check_Overloaded_Formal_Subprogram (Formal : Entity_Id) is\n+         Temp_Formal : Entity_Id;\n+\n+      begin\n+         Temp_Formal := First (Formals);\n+         while Present (Temp_Formal) loop\n+            if Nkind (Temp_Formal) in N_Formal_Subprogram_Declaration\n+              and then Temp_Formal /= Formal\n+              and then\n+                Chars (Defining_Unit_Name (Specification (Formal))) =\n+                Chars (Defining_Unit_Name (Specification (Temp_Formal)))\n+            then\n+               if Present (Found_Assoc) then\n+                  Error_Msg_N\n+                    (\"named association not allowed for overloaded formal\",\n+                     Found_Assoc);\n+\n+               else\n+                  Error_Msg_N\n+                    (\"named association not allowed for overloaded formal\",\n+                     Others_Choice);\n+               end if;\n+\n+               Abandon_Instantiation (Instantiation_Node);\n+            end if;\n+\n+            Next (Temp_Formal);\n+         end loop;\n+      end Check_Overloaded_Formal_Subprogram;\n+\n       ---------------------\n       -- Matching_Actual --\n       ---------------------\n@@ -1131,6 +1171,7 @@ package body Sem_Ch12 is\n          while Present (Actual) loop\n             if Nkind (Actual) = N_Others_Choice then\n                Others_Present := True;\n+               Others_Choice  := Actual;\n \n                if Present (Next (Actual)) then\n                   Error_Msg_N (\"others must be last association\", Actual);\n@@ -1293,24 +1334,7 @@ package body Sem_Ch12 is\n                     and then Is_Named_Assoc\n                     and then Comes_From_Source (Found_Assoc)\n                   then\n-                     Temp_Formal := First (Formals);\n-                     while Present (Temp_Formal) loop\n-                        if Nkind (Temp_Formal) in\n-                             N_Formal_Subprogram_Declaration\n-                          and then Temp_Formal /= Formal\n-                          and then\n-                            Chars (Selector_Name (Found_Assoc)) =\n-                              Chars (Defining_Unit_Name\n-                                       (Specification (Temp_Formal)))\n-                        then\n-                           Error_Msg_N\n-                             (\"name not allowed for overloaded formal\",\n-                              Found_Assoc);\n-                           Abandon_Instantiation (Instantiation_Node);\n-                        end if;\n-\n-                        Next (Temp_Formal);\n-                     end loop;\n+                     Check_Overloaded_Formal_Subprogram (Formal);\n                   end if;\n \n                   --  If there is no corresponding actual, this may be case of\n@@ -1321,6 +1345,10 @@ package body Sem_Ch12 is\n                     and then  Partial_Parametrization\n                   then\n                      Process_Default (Formal);\n+                     if Nkind (I_Node) = N_Formal_Package_Declaration then\n+                        Check_Overloaded_Formal_Subprogram (Formal);\n+                     end if;\n+\n                   else\n                      Append_To (Assoc,\n                        Instantiate_Formal_Subprogram"}, {"sha": "721ded18548ac205b6ae4337c5ab439ab4393718", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -7006,6 +7006,28 @@ package body Sem_Ch3 is\n          Parent_Base := Base_Type (Parent_Type);\n       end if;\n \n+      --  AI05-0115 : if this is a derivation from a private type in some\n+      --  other scope that may lead to invisible components for the derived\n+      --  type, mark it accordingly.\n+\n+      if Is_Private_Type (Parent_Type) then\n+         if Scope (Parent_Type) = Scope (Derived_Type) then\n+            null;\n+\n+         elsif In_Open_Scopes (Scope (Parent_Type))\n+           and then In_Private_Part (Scope (Parent_Type))\n+         then\n+            null;\n+\n+         else\n+            Set_Has_Private_Ancestor (Derived_Type);\n+         end if;\n+\n+      else\n+         Set_Has_Private_Ancestor\n+           (Derived_Type, Has_Private_Ancestor (Parent_Type));\n+      end if;\n+\n       --  Before we start the previously documented transformations, here is\n       --  little fix for size and alignment of tagged types. Normally when we\n       --  derive type D from type P, we copy the size and alignment of P as the"}, {"sha": "b0be8908b90a435f1f3a3ee48df1c3b2acf55021", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1058,6 +1058,10 @@ package body Switch.C is\n                Osint.Fail\n                  (\"-gnatZ is no longer supported: consider using --RTS=zcx\");\n \n+            --  Note on language version switches: whenever a new language\n+            --  version switch is added, function Switch.Is_Language_Switch and\n+            --  procedure Switch.M.Normalize_Compiler_Switches must be updated.\n+\n             --  Processing for 83 switch\n \n             when '8' =>"}, {"sha": "93583f0ada7b70e5aae6a13003a912a6bc65f137", "filename": "gcc/ada/switch-m.adb", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fswitch-m.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fswitch-m.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-m.adb?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -548,6 +548,58 @@ package body Switch.M is\n                         Ptr := Ptr + 1;\n                      end if;\n \n+                     --  -gnat12\n+\n+                  when '1' =>\n+                     Last_Stored := First_Stored;\n+                     Storing (Last_Stored) := C;\n+                     Ptr := Ptr + 1;\n+\n+                     if Ptr /= Max or else Switch_Chars (Ptr) /= '2' then\n+\n+                        --  Invalid switch\n+\n+                        Last := 0;\n+                        return;\n+\n+                     else\n+                        Last_Stored := Last_Stored + 1;\n+                        Storing (Last_Stored) := '2';\n+                        Add_Switch_Component\n+                          (Storing (Storing'First .. Last_Stored));\n+                        Ptr := Ptr + 1;\n+                     end if;\n+\n+                     --  -gnat2005 -gnat2012\n+\n+                  when '2' =>\n+                     if Ptr + 3 /= Max then\n+                        Last := 0;\n+                        return;\n+\n+                     elsif Switch_Chars (Ptr + 1 .. Ptr + 3) = \"005\" then\n+                        Last_Stored := First_Stored + 3;\n+                        Storing (First_Stored .. Last_Stored) := \"2005\";\n+                        Add_Switch_Component\n+                          (Storing (Storing'First .. Last_Stored));\n+                        Ptr := Max + 1;\n+\n+                     elsif Switch_Chars (Ptr + 1 .. Ptr + 3) = \"012\" then\n+                        Last_Stored := First_Stored + 3;\n+                        Storing (First_Stored .. Last_Stored) := \"2012\";\n+                        Add_Switch_Component\n+                          (Storing (Storing'First .. Last_Stored));\n+                        Ptr := Max + 1;\n+\n+                     else\n+\n+                        --  Invalid switch\n+\n+                        Last := 0;\n+                        return;\n+\n+                     end if;\n+\n                   --  -gnat83\n \n                   when '8' =>"}, {"sha": "e2987060858a1696bcfb0770cf891e8c8ebbd938", "filename": "gcc/ada/switch.adb", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fswitch.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fswitch.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch.adb?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -138,6 +138,23 @@ package body Switch is\n                       and then Switch_Chars (Ptr + 2 .. Ptr + 4) = \"RTS\"));\n    end Is_Front_End_Switch;\n \n+   -------------------------\n+   -- Is_Language_Switch --\n+   -------------------------\n+\n+   function Is_Language_Switch (Switch_Chars : String) return Boolean is\n+      Ptr : constant Positive := Switch_Chars'First;\n+   begin\n+      return Is_Switch (Switch_Chars)\n+        and then\n+          (Switch_Chars (Ptr + 1 .. Switch_Chars'Last) = \"gnat83\"\n+           or else Switch_Chars (Ptr + 1 .. Switch_Chars'Last) = \"gnat95\"\n+           or else Switch_Chars (Ptr + 1 .. Switch_Chars'Last) = \"gnat05\"\n+           or else Switch_Chars (Ptr + 1 .. Switch_Chars'Last) = \"gnat2005\"\n+           or else Switch_Chars (Ptr + 1 .. Switch_Chars'Last) = \"gnat12\"\n+           or else Switch_Chars (Ptr + 1 .. Switch_Chars'Last) = \"gnat2012\");\n+   end Is_Language_Switch;\n+\n    ----------------------------\n    -- Is_Internal_GCC_Switch --\n    ----------------------------"}, {"sha": "d7afa9aa44ae5bd6b0689a66de895a04cf7dd03f", "filename": "gcc/ada/switch.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fswitch.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fswitch.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch.ads?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -72,6 +72,10 @@ package Switch is\n    --  Returns True iff Switch_Chars represents a front-end switch, i.e. it\n    --  starts with -I, -gnat or -?RTS.\n \n+   function Is_Language_Switch (Switch_Chars : String) return Boolean;\n+   --  Returns True iff Switch_Chars represents a language switch, i.e. it\n+   --  specifies -gnat83/95/2005/2012.\n+\n    function Is_Internal_GCC_Switch (Switch_Chars : String) return Boolean;\n    --  Returns True iff Switch_Chars represents an internal GCC switch to be\n    --  followed by a single argument, such as -dumpbase, --param or -auxbase."}, {"sha": "3f5421ee4d70ae85871a6dd614527f20fd5ca663", "filename": "gcc/ada/vms_conv.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fvms_conv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87729e5ae139eab93fad42e938accc2890e63894/gcc%2Fada%2Fvms_conv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_conv.adb?ref=87729e5ae139eab93fad42e938accc2890e63894", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1962,7 +1962,7 @@ package body VMS_Conv is\n                            end if;\n \n                         when T_File | T_No_Space_File =>\n-                           if SwP + 1 > Arg'Last then\n+                           if SwP + 2 > Arg'Last then\n                               Put (Standard_Error,\n                                    \"missing file for: \");\n                               Put_Line (Standard_Error, Arg.all);"}]}