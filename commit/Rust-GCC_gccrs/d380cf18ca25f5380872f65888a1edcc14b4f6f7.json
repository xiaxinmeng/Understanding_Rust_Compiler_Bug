{"sha": "d380cf18ca25f5380872f65888a1edcc14b4f6f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM4MGNmMThjYTI1ZjUzODA4NzJmNjU4ODhhMWVkY2MxNGI0ZjZmNw==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2005-04-02T21:03:33Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2005-04-02T21:03:33Z"}, "message": "BasicAttributes.java (equals): Compare to any Attributes and attribute order doesn't matter.\n\n2005-04-02  Mark Wielaard  <mark@klomp.org>\n\n\t* javax/naming/directory/BasicAttributes.java (equals): Compare to any\n\tAttributes and attribute order doesn't matter.\n\t(BasicAttributesEnumeration.where): Initialize to zero.\n\t(BasicAttributesEnumeration.nextElement): Update and compare where\n\tappropriately (zero based).\n\nFrom-SVN: r97461", "tree": {"sha": "8e3a5971db0738aaca3407db3306275981f32ca6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e3a5971db0738aaca3407db3306275981f32ca6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d380cf18ca25f5380872f65888a1edcc14b4f6f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d380cf18ca25f5380872f65888a1edcc14b4f6f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d380cf18ca25f5380872f65888a1edcc14b4f6f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d380cf18ca25f5380872f65888a1edcc14b4f6f7/comments", "author": null, "committer": null, "parents": [{"sha": "43849cfae4f0f56053d01ac639b39b6ad727300b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43849cfae4f0f56053d01ac639b39b6ad727300b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43849cfae4f0f56053d01ac639b39b6ad727300b"}], "stats": {"total": 38, "additions": 27, "deletions": 11}, "files": [{"sha": "291f2546aba27bcb9dda3ce650b9b0f0c2d5b520", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d380cf18ca25f5380872f65888a1edcc14b4f6f7/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d380cf18ca25f5380872f65888a1edcc14b4f6f7/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d380cf18ca25f5380872f65888a1edcc14b4f6f7", "patch": "@@ -1,3 +1,11 @@\n+2005-04-02  Mark Wielaard  <mark@klomp.org>\n+\n+\t* javax/naming/directory/BasicAttributes.java (equals): Compare to any\n+\tAttributes and attribute order doesn't matter.\n+\t(BasicAttributesEnumeration.where): Initialize to zero.\n+\t(BasicAttributesEnumeration.nextElement): Update and compare where\n+\tappropriately (zero based).\n+\n 2005-04-01  Thomas Fitzsimmons  <fitzsim@redhat.com>\n \n \tPR libgcj/20090, PR libgcj/20526"}, {"sha": "b20072424bc7216dc6f70aecc08e3752d4ce5160", "filename": "libjava/javax/naming/directory/BasicAttributes.java", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d380cf18ca25f5380872f65888a1edcc14b4f6f7/libjava%2Fjavax%2Fnaming%2Fdirectory%2FBasicAttributes.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d380cf18ca25f5380872f65888a1edcc14b4f6f7/libjava%2Fjavax%2Fnaming%2Fdirectory%2FBasicAttributes.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fnaming%2Fdirectory%2FBasicAttributes.java?ref=d380cf18ca25f5380872f65888a1edcc14b4f6f7", "patch": "@@ -1,5 +1,5 @@\n /* BasicAttributes.java --\n-   Copyright (C) 2000, 2001, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2001, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -83,19 +83,27 @@ public Object clone ()\n     return ba;\n   }\n \n+  /**\n+   * Returns true if and only if the given Object is an instance of\n+   * Attributes, the given attributes both do or don't ignore case for\n+   * IDs and the collection of attributes is the same.\n+   */\n   public boolean equals (Object obj)\n   {\n-    if (! (obj instanceof BasicAttributes))\n+    if (! (obj instanceof Attributes))\n       return false;\n-    BasicAttributes b = (BasicAttributes) obj;\n-    if (ignoreCase != b.ignoreCase\n-\t|| attributes.size () != b.attributes.size ())\n+\n+    Attributes bs = (Attributes) obj;\n+    if (ignoreCase != bs.isCaseIgnored()\n+\t|| attributes.size () != bs.size ())\n       return false;\n \n-    // Does order matter?\n-    for (int i = 0; i < attributes.size (); ++i)\n+    NamingEnumeration bas = bs.getAll();\n+    while (bas.hasMoreElements())\n       {\n-\tif (! attributes.get (i).equals (b.attributes.get (i)))\n+\tAttribute a = (Attribute) bas.nextElement();\n+\tAttribute b = get(a.getID ());\n+\tif (! a.equals(b))\n \t  return false;\n       }\n \n@@ -191,7 +199,7 @@ public String toString ()\n   // Used when enumerating.\n   private class BasicAttributesEnumeration implements NamingEnumeration\n   {\n-    int where = -1;\n+    int where = 0;\n     boolean id;\n \n     public BasicAttributesEnumeration (boolean id)\n@@ -220,10 +228,10 @@ public boolean hasMoreElements ()\n \n     public Object nextElement () throws NoSuchElementException\n     {\n-      if (where + 1 >= attributes.size ())\n+      if (where >= attributes.size ())\n \tthrow new NoSuchElementException (\"no more elements\");\n-      ++where;\n       Attribute at = (Attribute) attributes.get (where);\n+      ++where;\n       return id ? (Object) at.getID () : (Object) at;\n     }\n   }"}]}