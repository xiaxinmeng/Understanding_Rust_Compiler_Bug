{"sha": "c171af0e0080310967bdebd27933488ff6c93038", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE3MWFmMGUwMDgwMzEwOTY3YmRlYmQyNzkzMzQ4OGZmNmM5MzAzOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-12-13T17:36:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-12-13T17:36:26Z"}, "message": "re PR debug/46867 (ICE: in emit_note_insn_var_location, at var-tracking.c:7325 with -O -g)\n\n\tPR debug/46867\n\t* var-tracking.c (emitted_notes, string_pointer_flags): Removed.\n\t(emit_note_insn_var_location): Remove ENABLE_RTL_CHECKING verification.\n\t(vt_emit_notes): Don't initialize and destroy emitted_notes.\n\n\t* gcc.dg/pr46867.c: New test.\n\nFrom-SVN: r167754", "tree": {"sha": "7dc4903a775c8a5ba3bc4a5e923ecfe21bed623e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7dc4903a775c8a5ba3bc4a5e923ecfe21bed623e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c171af0e0080310967bdebd27933488ff6c93038", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c171af0e0080310967bdebd27933488ff6c93038", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c171af0e0080310967bdebd27933488ff6c93038", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c171af0e0080310967bdebd27933488ff6c93038/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e953c7545fed9d5db6b6b722c91f0b471511f3b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e953c7545fed9d5db6b6b722c91f0b471511f3b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e953c7545fed9d5db6b6b722c91f0b471511f3b6"}], "stats": {"total": 100, "additions": 44, "deletions": 56}, "files": [{"sha": "9a539a9420f602aa529c71bd11df169a70dd40b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c171af0e0080310967bdebd27933488ff6c93038/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c171af0e0080310967bdebd27933488ff6c93038/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c171af0e0080310967bdebd27933488ff6c93038", "patch": "@@ -1,3 +1,10 @@\n+2010-12-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/46867\n+\t* var-tracking.c (emitted_notes, string_pointer_flags): Removed.\n+\t(emit_note_insn_var_location): Remove ENABLE_RTL_CHECKING verification.\n+\t(vt_emit_notes): Don't initialize and destroy emitted_notes.\n+\n 2010-12-13  Jan Hubicka  <jh@suse.cz>\n \n \tPR middle-end/45388"}, {"sha": "05882fac31907c4c2bab790f4535a043123e61d8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c171af0e0080310967bdebd27933488ff6c93038/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c171af0e0080310967bdebd27933488ff6c93038/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c171af0e0080310967bdebd27933488ff6c93038", "patch": "@@ -1,3 +1,8 @@\n+2010-12-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/46867\n+\t* gcc.dg/pr46867.c: New test.\n+\n 2010-12-13  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/46841"}, {"sha": "9225bce42e4e482958e1ddaeaa82baa3619dea80", "filename": "gcc/testsuite/gcc.dg/pr46867.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c171af0e0080310967bdebd27933488ff6c93038/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46867.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c171af0e0080310967bdebd27933488ff6c93038/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46867.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46867.c?ref=c171af0e0080310967bdebd27933488ff6c93038", "patch": "@@ -0,0 +1,32 @@\n+/* PR debug/46867 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -g\" } */\n+\n+typedef __PTRDIFF_TYPE__ ptrdiff_t;\n+\n+extern void *bar (void);\n+\n+void\n+foo (int x, char *r1, char *r2, __INTPTR_TYPE__ *rp, char *t)\n+{\n+  char *tx = tx;\n+  char **cc = bar ();\n+  ptrdiff_t rx = r1 - r2;\n+  for (;;)\n+    {\n+      char *cp1 = (char *) *rp;\n+      char *cp2 = t;\n+      char *s;\n+      ptrdiff_t len = cp1 - tx + rx * (cp2 - cp1);\n+      while (len)\n+\t;\n+      for (s = tx; s; s++)\n+\t;\n+      while (s)\n+\tif (s == cc[s - r1])\n+\t  if (x)\n+\t    bar ();\n+      if (cp1)\n+\ttx = cp2;\n+    }\n+}"}, {"sha": "44701be12e8a27d41c20fa5def6203e7fb5f0e43", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 0, "deletions": 56, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c171af0e0080310967bdebd27933488ff6c93038/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c171af0e0080310967bdebd27933488ff6c93038/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=c171af0e0080310967bdebd27933488ff6c93038", "patch": "@@ -7095,24 +7095,6 @@ vt_expand_loc_dummy (rtx loc, htab_t vars, bool *pcur_loc_changed)\n   return ret;\n }\n \n-#ifdef ENABLE_RTL_CHECKING\n-/* Used to verify that cur_loc_changed updating is safe.  */\n-static struct pointer_map_t *emitted_notes;\n-\n-/* Strip REG_POINTER from REGs and MEM_POINTER from MEMs in order to\n-   avoid differences in commutative operand simplification.  */\n-static rtx\n-strip_pointer_flags (rtx x, const_rtx old_rtx ATTRIBUTE_UNUSED,\n-\t\t     void *data ATTRIBUTE_UNUSED)\n-{\n-  if (REG_P (x) && REG_POINTER (x))\n-    return gen_rtx_REG (GET_MODE (x), REGNO (x));\n-  if (MEM_P (x) && MEM_POINTER (x))\n-    return gen_rtx_MEM (GET_MODE (x), XEXP (x, 0));\n-  return NULL_RTX;\n-}\n-#endif\n-\n /* Emit the NOTE_INSN_VAR_LOCATION for variable *VARP.  DATA contains\n    additional parameters: WHERE specifies whether the note shall be emitted\n    before or after instruction INSN.  */\n@@ -7157,10 +7139,8 @@ emit_note_insn_var_location (void **varp, void *data)\n       if (var->n_var_parts == 0)\n \tvar->cur_loc_changed = true;\n     }\n-#ifndef ENABLE_RTL_CHECKING\n   if (!var->cur_loc_changed)\n     goto clear;\n-#endif\n   for (i = 0; i < var->n_var_parts; i++)\n     {\n       enum machine_mode mode, wider_mode;\n@@ -7302,36 +7282,6 @@ emit_note_insn_var_location (void **varp, void *data)\n \t\t\t\t      parallel, (int) initialized);\n     }\n \n-#ifdef ENABLE_RTL_CHECKING\n-  if (note_vl)\n-    {\n-      void **note_slot = pointer_map_insert (emitted_notes, decl);\n-      rtx pnote = (rtx) *note_slot;\n-      if (!var->cur_loc_changed && (pnote || PAT_VAR_LOCATION_LOC (note_vl)))\n-\t{\n-\t  rtx old_vl, new_vl;\n-\t  gcc_assert (pnote);\n-\t  old_vl = PAT_VAR_LOCATION_LOC (pnote);\n-\t  new_vl = PAT_VAR_LOCATION_LOC (note_vl);\n-\t  if (!rtx_equal_p (old_vl, new_vl))\n-\t    {\n-\t      /* There might be differences caused by REG_POINTER\n-\t\t differences.  REG_POINTER affects\n-\t\t swap_commutative_operands_p.  */\n-\t      old_vl = simplify_replace_fn_rtx (old_vl, NULL_RTX,\n-\t\t\t\t\t\tstrip_pointer_flags, NULL);\n-\t      new_vl = simplify_replace_fn_rtx (new_vl, NULL_RTX,\n-\t\t\t\t\t\tstrip_pointer_flags, NULL);\n-\t      gcc_assert (rtx_equal_p (old_vl, new_vl));\n-\t      PAT_VAR_LOCATION_LOC (note_vl) = new_vl;\n-\t    }\n-\t}\n-      *note_slot = (void *) note_vl;\n-    }\n-  if (!var->cur_loc_changed)\n-    goto clear;\n-#endif\n-\n   if (where != EMIT_NOTE_BEFORE_INSN)\n     {\n       note = emit_note_after (NOTE_INSN_VAR_LOCATION, insn);\n@@ -7960,9 +7910,6 @@ vt_emit_notes (void)\n   basic_block bb;\n   dataflow_set cur;\n \n-#ifdef ENABLE_RTL_CHECKING\n-  emitted_notes = pointer_map_create ();\n-#endif\n   gcc_assert (!htab_elements (changed_variables));\n \n   /* Free memory occupied by the out hash tables, as they aren't used\n@@ -8022,9 +7969,6 @@ vt_emit_notes (void)\n       VEC_free (rtx, heap, changed_values_stack);\n     }\n \n-#ifdef ENABLE_RTL_CHECKING\n-  pointer_map_destroy (emitted_notes);\n-#endif\n   emit_notes = false;\n }\n "}]}