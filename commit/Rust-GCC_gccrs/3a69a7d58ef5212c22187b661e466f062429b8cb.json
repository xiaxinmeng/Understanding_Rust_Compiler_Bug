{"sha": "3a69a7d58ef5212c22187b661e466f062429b8cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E2OWE3ZDU4ZWY1MjEyYzIyMTg3YjY2MWU0NjZmMDYyNDI5YjhjYg==", "commit": {"author": {"name": "Marek Michalkiewicz", "email": "marekm@linux.org.pl", "date": "2000-12-01T17:49:05Z"}, "committer": {"name": "Denis Chertykov", "email": "denisc@gcc.gnu.org", "date": "2000-12-01T17:49:05Z"}, "message": "install.texi (avr): Replace incomplete list of supported MCU types with a link to the current one ...\n\n\t* install.texi (avr): Replace incomplete list of supported MCU\n\ttypes with a link to the current one ...\n\t* invoke.texi (AVR Options): ... here.  Update -mmcu= to list\n\tall supported MCU types.  Document -minit-stack= default.\n\tDocument new options -mno-tablejump, -mtiny-stack.\n\t* md.texi (AVR family):  Fix typo in 'w' constraint letter\n\tdescription.  Document 'q'.  Update 'O'.\n\nFrom-SVN: r37917", "tree": {"sha": "ca6c4887cca1326317ce6d14049b068bf2da03e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca6c4887cca1326317ce6d14049b068bf2da03e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a69a7d58ef5212c22187b661e466f062429b8cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a69a7d58ef5212c22187b661e466f062429b8cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a69a7d58ef5212c22187b661e466f062429b8cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a69a7d58ef5212c22187b661e466f062429b8cb/comments", "author": null, "committer": null, "parents": [{"sha": "c02cad8fb915c1c3354775e51768aae4780a17d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c02cad8fb915c1c3354775e51768aae4780a17d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c02cad8fb915c1c3354775e51768aae4780a17d7"}], "stats": {"total": 59, "additions": 45, "deletions": 14}, "files": [{"sha": "86643d0cff4a84ff68bee8891dad38784381ae31", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a69a7d58ef5212c22187b661e466f062429b8cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a69a7d58ef5212c22187b661e466f062429b8cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a69a7d58ef5212c22187b661e466f062429b8cb", "patch": "@@ -1,3 +1,13 @@\n+2000-11-30  Marek Michalkiewicz  <marekm@linux.org.pl>\n+\n+\t* install.texi (avr): Replace incomplete list of supported MCU\n+\ttypes with a link to the current one ...\n+\t* invoke.texi (AVR Options): ... here.  Update -mmcu= to list\n+\tall supported MCU types.  Document -minit-stack= default.\n+\tDocument new options -mno-tablejump, -mtiny-stack.\n+\t* md.texi (AVR family):  Fix typo in 'w' constraint letter\n+\tdescription.  Document 'q'.  Update 'O'.\n+\n 2000-12-01  Bernd Schmidt  <bernds@redhat.co.uk>\n \n \t* combine.c (cant_combine_insn_p): Only disallow insns involving"}, {"sha": "db4f226daffea37b406a00799dd1edfacfeff65f", "filename": "gcc/install.texi", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a69a7d58ef5212c22187b661e466f062429b8cb/gcc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a69a7d58ef5212c22187b661e466f062429b8cb/gcc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finstall.texi?ref=3a69a7d58ef5212c22187b661e466f062429b8cb", "patch": "@@ -992,13 +992,7 @@ AMD Am29050 used in a system running a variant of BSD Unix.\n @item avr\n ATMEL AVR-family micro controllers.  These are used in embedded\n applications.  There are no standard Unix configurations.\n-Supports following MCU's:\n- - AT90S23xx\n- - ATtiny22\n- - AT90S44xx\n- - AT90S85xx\n- - ATmega603/603L\n- - ATmega103/103L\n+See @xref{AVR Options} for the list of supported MCU types.\n \n @item decstation-*\n MIPS-based DECstations can support three different personalities:"}, {"sha": "b71580cb81627c4ee6a747550d4e44121109832e", "filename": "gcc/invoke.texi", "status": "modified", "additions": 29, "deletions": 5, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a69a7d58ef5212c22187b661e466f062429b8cb/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a69a7d58ef5212c22187b661e466f062429b8cb/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=3a69a7d58ef5212c22187b661e466f062429b8cb", "patch": "@@ -474,7 +474,7 @@ in the following sections.\n \n @emph{AVR Options}\n -mmcu=@var{mcu} -msize -minit-stack=@var{n} -mno-interrupts\n--mcall-prologues\n+-mcall-prologues -mno-tablejump -mtiny-stack\n \n @emph{MCore Options}\n -mhardlit, -mno-hardlit -mdiv -mno-div -mrelax-immediates \n@@ -7312,14 +7312,32 @@ These options are defined for AVR implementations:\n \n @table @code\n @item -mmcu=@var{mcu}\n-Specify ATMEL AVR mcu (at90s23xx,attiny22,at90s44xx,at90s85xx,atmega603,\n-atmega103).\n+Specify ATMEL AVR instruction set or MCU type.\n+\n+Instruction set avr1 is for the minimal AVR core, not supported by the C\n+compiler, only for assembler programs (MCU types: at90s1200, attiny10,\n+attiny11, attiny12, attiny15, attiny28).\n+\n+Instruction set avr2 (default) is for the classic AVR core with up to\n+8K program memory space (MCU types: at90s2313, at90s2323, attiny22,\n+at90s2333, at90s2343, at90s4414, at90s4433, at90s4434, at90s8515,\n+at90c8534, at90s8535).\n+\n+Instruction set avr3 is for the classic AVR core with up to 128K program\n+memory space (MCU types: atmega103, atmega603).\n+\n+Instruction set avr4 is for the enhanced AVR core with up to 8K program\n+memory space (MCU types: atmega83, atmega85).\n+\n+Instruction set avr5 is for the enhanced AVR core with up to 128K program\n+memory space (MCU types: atmega161, atmega163, atmega32, at94k).\n \n @item -msize\n-Output instruction size's to the asm file\n+Output instruction sizes to the asm file.\n \n @item -minit-stack=@var{N}\n-Specify the initial stack address\n+Specify the initial stack address, which may be a symbol or numeric value,\n+__stack is the default.\n \n @item -mno-interrupts\n Generated code is not compatible with hardware interrupts.\n@@ -7328,6 +7346,12 @@ Code size will be smaller.\n @item -mcall-prologues\n Functions prologues/epilogues expanded as call to appropriate\n subroutines. Code size will be smaller.\n+\n+@item -mno-tablejump\n+Do not generate tablejump insns which sometimes increase code size.\n+\n+@item -mtiny-stack\n+Change only the low 8 bits of the stack pointer.\n @end table\n \n @node MCore Options"}, {"sha": "6e184f6a81024f5767a1d6552c4dfea4f6de8e9d", "filename": "gcc/md.texi", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a69a7d58ef5212c22187b661e466f062429b8cb/gcc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a69a7d58ef5212c22187b661e466f062429b8cb/gcc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmd.texi?ref=3a69a7d58ef5212c22187b661e466f062429b8cb", "patch": "@@ -1349,14 +1349,17 @@ Registers from r16 to r23\n Registers from r16 to r31\n \n @item w\n-Register from r24 to r31. This registers can be used in @samp{addw} command\n+Registers from r24 to r31.  These registers can be used in @samp{adiw} command\n \n @item e\n Pointer register (r26 - r31)\n \n @item b\n Base pointer register (r28 - r31)\n \n+@item q\n+Stack pointer register (SPH:SPL)\n+\n @item t\n Temporary register r0\n \n@@ -1388,7 +1391,7 @@ Constant that fits in 8 bits\n Constant integer -1\n \n @item O\n-Constant integer 8\n+Constant integer 8, 16, or 24\n \n @item P\n Constant integer 1"}]}