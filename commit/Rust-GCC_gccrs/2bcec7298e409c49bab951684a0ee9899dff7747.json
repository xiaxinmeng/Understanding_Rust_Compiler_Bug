{"sha": "2bcec7298e409c49bab951684a0ee9899dff7747", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJjZWM3Mjk4ZTQwOWM0OWJhYjk1MTY4NGEwZWU5ODk5ZGZmNzc0Nw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2005-09-12T09:42:34Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2005-09-12T09:42:34Z"}, "message": "re PR libstdc++/23767 (std::vector iterator implementation wrong)\n\n2005-09-12  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/23767\n\t* include/bits/stl_iterator.h (__normal_iterator::\n\t__normal_iterator<>(const __normal_iterator<_Iter, _Container>&)):\n\tEnable only when _Iter is equal to _Container::pointer.\n\t* testsuite/21_strings/basic_string/types/23767.cc: New.\n\t* testsuite/23_containers/vector/types/23767.cc: Likewise.\n\t* testsuite/ext/vstring/types/23767.cc: Likewise.\n\nFrom-SVN: r104167", "tree": {"sha": "26acbb4b1ce64e98a68ffc4665a869726c88df2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26acbb4b1ce64e98a68ffc4665a869726c88df2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bcec7298e409c49bab951684a0ee9899dff7747", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bcec7298e409c49bab951684a0ee9899dff7747", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bcec7298e409c49bab951684a0ee9899dff7747", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bcec7298e409c49bab951684a0ee9899dff7747/comments", "author": null, "committer": null, "parents": [{"sha": "7928df2e04f6c28d9f29fdb74c2147f055321dda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7928df2e04f6c28d9f29fdb74c2147f055321dda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7928df2e04f6c28d9f29fdb74c2147f055321dda"}], "stats": {"total": 179, "additions": 175, "deletions": 4}, "files": [{"sha": "eff6539893074953bac446870686ba64dbd1c6ca", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bcec7298e409c49bab951684a0ee9899dff7747/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bcec7298e409c49bab951684a0ee9899dff7747/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2bcec7298e409c49bab951684a0ee9899dff7747", "patch": "@@ -1,3 +1,13 @@\n+2005-09-12  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/23767\n+\t* include/bits/stl_iterator.h (__normal_iterator::\n+\t__normal_iterator<>(const __normal_iterator<_Iter, _Container>&)):\n+\tEnable only when _Iter is equal to _Container::pointer.\n+\t* testsuite/21_strings/basic_string/types/23767.cc: New.\n+\t* testsuite/23_containers/vector/types/23767.cc: Likewise.\n+\t* testsuite/ext/vstring/types/23767.cc: Likewise.\n+\n 2005-09-11  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/19265"}, {"sha": "5b8cf65e6d85fef4e590964e4d27d10a3c5189a1", "filename": "libstdc++-v3/include/bits/stl_iterator.h", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bcec7298e409c49bab951684a0ee9899dff7747/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bcec7298e409c49bab951684a0ee9899dff7747/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h?ref=2bcec7298e409c49bab951684a0ee9899dff7747", "patch": "@@ -1,6 +1,6 @@\n // Iterators -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -65,6 +65,8 @@\n #ifndef _ITERATOR_H\n #define _ITERATOR_H 1\n \n+#include <bits/cpp_type_traits.h>\n+\n namespace std\n {\n   // 24.4.1 Reverse iterators\n@@ -604,9 +606,12 @@ namespace __gnu_cxx\n \n       // Allow iterator to const_iterator conversion\n       template<typename _Iter>\n-        inline __normal_iterator(const __normal_iterator<_Iter,\n-\t\t\t\t _Container>& __i)\n-\t: _M_current(__i.base()) { }\n+        __normal_iterator(const __normal_iterator<_Iter,\n+\t\t\t  typename std::__enable_if<_Container,\n+\t\t\t  (std::__are_same<_Iter,\n+\t\t\t   typename _Container::pointer>::__value)\n+\t\t\t  >::__type>& __i)\n+        : _M_current(__i.base()) { }\n \n       // Forward iterator requirements\n       reference"}, {"sha": "ecf813d3630864bd23873df405ddc1525f2994cb", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/types/23767.cc", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bcec7298e409c49bab951684a0ee9899dff7747/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ftypes%2F23767.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bcec7298e409c49bab951684a0ee9899dff7747/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ftypes%2F23767.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ftypes%2F23767.cc?ref=2bcec7298e409c49bab951684a0ee9899dff7747", "patch": "@@ -0,0 +1,52 @@\n+// 2005-09-12  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2005 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+//\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// { dg-do compile }\n+\n+#include <string>\n+\n+struct T\n+{\n+  typedef std::string String;\n+  typedef String::iterator iterator;\n+  typedef String::const_iterator const_iterator;\n+\n+  char t(iterator f)             { return *f; }\n+  char t(const_iterator f) const { return *f; }\n+};\n+\n+// libstdc++/23767\n+void f()\n+{\n+  std::string s;\n+  T t;\n+  T::const_iterator i = s.begin();\n+  \n+  t.t(i);\n+}"}, {"sha": "26abe243717b9988ceffe6d06028530f102a8a6e", "filename": "libstdc++-v3/testsuite/23_containers/vector/types/23767.cc", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bcec7298e409c49bab951684a0ee9899dff7747/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Ftypes%2F23767.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bcec7298e409c49bab951684a0ee9899dff7747/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Ftypes%2F23767.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Ftypes%2F23767.cc?ref=2bcec7298e409c49bab951684a0ee9899dff7747", "patch": "@@ -0,0 +1,52 @@\n+// 2005-09-12  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2005 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+//\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// { dg-do compile }\n+\n+#include <vector>\n+\n+struct T\n+{\n+  typedef std::vector<int> Vector;\n+  typedef Vector::iterator iterator;\n+  typedef Vector::const_iterator const_iterator;\n+\n+  int t(iterator f)             { return *f; }\n+  int t(const_iterator f) const { return *f; }\n+};\n+\n+// libstdc++/23767\n+void f()\n+{\n+  std::vector<int> v;\n+  T t;\n+  T::const_iterator i = v.begin();\n+  \n+  t.t(i);\n+}"}, {"sha": "9b2d49a0ab2147a974aa1ebf1be7f1d2d5e628db", "filename": "libstdc++-v3/testsuite/ext/vstring/types/23767.cc", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bcec7298e409c49bab951684a0ee9899dff7747/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Ftypes%2F23767.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bcec7298e409c49bab951684a0ee9899dff7747/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Ftypes%2F23767.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Ftypes%2F23767.cc?ref=2bcec7298e409c49bab951684a0ee9899dff7747", "patch": "@@ -0,0 +1,52 @@\n+// 2005-09-12  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2005 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+//\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// { dg-do compile }\n+\n+#include <ext/vstring.h>\n+\n+struct T\n+{\n+  typedef __gnu_cxx::__vstring Vstring;\n+  typedef Vstring::iterator iterator;\n+  typedef Vstring::const_iterator const_iterator;\n+\n+  char t(iterator f)             { return *f; }\n+  char t(const_iterator f) const { return *f; }\n+};\n+\n+// libstdc++/23767\n+void f()\n+{\n+  __gnu_cxx::__vstring vs;\n+  T t;\n+  T::const_iterator i = vs.begin();\n+  \n+  t.t(i);\n+}"}]}