{"sha": "cd928652255d6203f3223a589fff3eed02995850", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q5Mjg2NTIyNTVkNjIwM2YzMjIzYTU4OWZmZjNlZWQwMjk5NTg1MA==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "dvorakz@suse.cz", "date": "2005-03-25T09:23:47Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2005-03-25T09:23:47Z"}, "message": "re PR rtl-optimization/20249 (ICE with -fprofile-arcs on ppc)\n\n\tPR rtl-optimization/20249\n\t* cse.c (insert_regs): Do not record equivalence of registers in\n\tdifferent modes.\n\n\t* gcc.dg/20050325-1.c: New test.\n\nFrom-SVN: r97039", "tree": {"sha": "5709052f755bd164f42d4e1e895f136f0fb36fb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5709052f755bd164f42d4e1e895f136f0fb36fb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd928652255d6203f3223a589fff3eed02995850", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd928652255d6203f3223a589fff3eed02995850", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd928652255d6203f3223a589fff3eed02995850", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd928652255d6203f3223a589fff3eed02995850/comments", "author": null, "committer": null, "parents": [{"sha": "256f7136ca968b087047f92cee1c90b72adb0120", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/256f7136ca968b087047f92cee1c90b72adb0120", "html_url": "https://github.com/Rust-GCC/gccrs/commit/256f7136ca968b087047f92cee1c90b72adb0120"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "3f3252f989738854932c2dbb2ea17130baa98f27", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd928652255d6203f3223a589fff3eed02995850/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd928652255d6203f3223a589fff3eed02995850/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd928652255d6203f3223a589fff3eed02995850", "patch": "@@ -1,3 +1,9 @@\n+2005-03-25  Zdenek Dvorak  <dvorakz@suse.cz>\n+\n+\tPR rtl-optimization/20249\n+\t* cse.c (insert_regs): Do not record equivalence of registers in\n+\tdifferent modes.\n+\n 2005-03-24  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* emit-rtl.c (reverse_comparison): Remove."}, {"sha": "4d6f76d93288ba56a39fe155dde8459c5f0ea74e", "filename": "gcc/cse.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd928652255d6203f3223a589fff3eed02995850/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd928652255d6203f3223a589fff3eed02995850/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=cd928652255d6203f3223a589fff3eed02995850", "patch": "@@ -1234,7 +1234,24 @@ insert_regs (rtx x, struct table_elt *classp, int modified)\n \t      if (REG_P (classp->exp)\n \t\t  && GET_MODE (classp->exp) == GET_MODE (x))\n \t\t{\n-\t\t  make_regs_eqv (regno, REGNO (classp->exp));\n+\t\t  unsigned c_regno = REGNO (classp->exp);\n+\n+\t\t  gcc_assert (REGNO_QTY_VALID_P (c_regno));\n+\n+\t\t  /* Suppose that 5 is hard reg and 100 and 101 are\n+\t\t     pseudos.  Consider\n+\n+\t\t     (set (reg:si 100) (reg:si 5))\n+\t\t     (set (reg:si 5) (reg:si 100))\n+\t\t     (set (reg:di 101) (reg:di 5))\n+\n+\t\t     We would now set REG_QTY (101) = REG_QTY (5), but the\n+\t\t     entry for 5 is in SImode.  When we use this later in\n+\t\t     copy propagation, we get the register in wrong mode.  */\n+\t\t  if (qty_table[REG_QTY (c_regno)].mode != GET_MODE (x))\n+\t\t    continue;\n+\n+\t\t  make_regs_eqv (regno, c_regno);\n \t\t  return 1;\n \t\t}\n "}, {"sha": "ce9e6236fbb99112a8df2c3b291ce0b8e1d0b5c1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd928652255d6203f3223a589fff3eed02995850/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd928652255d6203f3223a589fff3eed02995850/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cd928652255d6203f3223a589fff3eed02995850", "patch": "@@ -1,3 +1,8 @@\n+2005-03-25  Zdenek Dvorak  <dvorakz@suse.cz>\n+\n+\tPR rtl-optimization/20249\n+\t* gcc.dg/20050325-1.c: New test.\n+\n 2005-03-25  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR libfortran/15332"}, {"sha": "524f9d195c18544605988d2cf294732ba505f397", "filename": "gcc/testsuite/gcc.dg/20050325-1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd928652255d6203f3223a589fff3eed02995850/gcc%2Ftestsuite%2Fgcc.dg%2F20050325-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd928652255d6203f3223a589fff3eed02995850/gcc%2Ftestsuite%2Fgcc.dg%2F20050325-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20050325-1.c?ref=cd928652255d6203f3223a589fff3eed02995850", "patch": "@@ -0,0 +1,19 @@\n+/* PR 20249 */\n+\n+/* { dg-do compile } */\n+/* dg-options \"-O2 -fprofile-arcs\" } */\n+\n+extern int *g (int x, void* y);\n+extern void fg (long long x, int y);\n+\n+static void\n+ff (int y, long long z)\n+{\n+  fg (z, 1);\n+}\n+\n+void\n+f ()\n+{\n+  g (42, ff);\n+}"}]}