{"sha": "d413e3cc11c3b1d746ed9d187b4a7e695355219a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQxM2UzY2MxMWMzYjFkNzQ2ZWQ5ZDE4N2I0YTdlNjk1MzU1MjE5YQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2004-06-24T17:54:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2004-06-24T17:54:13Z"}, "message": "i386.md (ffsdi2, clzdi2): New expanders.\n\n\t* config/i386/i386.md (ffsdi2, clzdi2): New expanders.\n\t(ffs_rex64): New splitter.\n\t(ffsdi_1, ctzdi2, bsr_rex64): New instructions.\n\nFrom-SVN: r83604", "tree": {"sha": "ddac68326a5340d687fafc34eca1acc9157db4c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddac68326a5340d687fafc34eca1acc9157db4c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d413e3cc11c3b1d746ed9d187b4a7e695355219a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d413e3cc11c3b1d746ed9d187b4a7e695355219a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d413e3cc11c3b1d746ed9d187b4a7e695355219a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d413e3cc11c3b1d746ed9d187b4a7e695355219a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d42093a1dbfe8be8a96829b8783da5efe8c3d7c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d42093a1dbfe8be8a96829b8783da5efe8c3d7c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d42093a1dbfe8be8a96829b8783da5efe8c3d7c8"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "7799244f09cf60e6f0df683c4b9da5d029051ba8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d413e3cc11c3b1d746ed9d187b4a7e695355219a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d413e3cc11c3b1d746ed9d187b4a7e695355219a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d413e3cc11c3b1d746ed9d187b4a7e695355219a", "patch": "@@ -1,3 +1,9 @@\n+2004-06-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/i386.md (ffsdi2, clzdi2): New expanders.\n+\t(ffs_rex64): New splitter.\n+\t(ffsdi_1, ctzdi2, bsr_rex64): New instructions.\n+\n 2004-06-24  Andrew Pinski  <apinski@apple.com>\n \n \t* config/darwin7.h (MATH_LIBRARY): Remove."}, {"sha": "13d32eb11ad1f9639be4cb451fe2c4ff5864266a", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d413e3cc11c3b1d746ed9d187b4a7e695355219a/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d413e3cc11c3b1d746ed9d187b4a7e695355219a/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=d413e3cc11c3b1d746ed9d187b4a7e695355219a", "patch": "@@ -14005,6 +14005,44 @@\n   \"bsf{l}\\t{%1, %0|%0, %1}\"\n   [(set_attr \"prefix_0f\" \"1\")])\n \n+(define_expand \"ffsdi2\"\n+  [(parallel\n+     [(set (match_operand:DI 0 \"register_operand\" \"\") \n+\t   (ffs:DI (match_operand:DI 1 \"nonimmediate_operand\" \"\")))\n+      (clobber (match_scratch:DI 2 \"\"))\n+      (clobber (reg:CC 17))])]\n+  \"TARGET_64BIT && TARGET_CMOVE\"\n+  \"\")\n+\n+(define_insn_and_split \"*ffs_rex64\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\") \n+\t(ffs:DI (match_operand:DI 1 \"nonimmediate_operand\" \"rm\")))\n+   (clobber (match_scratch:DI 2 \"=&r\"))\n+   (clobber (reg:CC 17))]\n+  \"TARGET_64BIT && TARGET_CMOVE\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(set (match_dup 2) (const_int -1))\n+   (parallel [(set (reg:CCZ 17) (compare:CCZ (match_dup 1) (const_int 0)))\n+\t      (set (match_dup 0) (ctz:DI (match_dup 1)))])\n+   (set (match_dup 0) (if_then_else:DI\n+\t\t\t(eq (reg:CCZ 17) (const_int 0))\n+\t\t\t(match_dup 2)\n+\t\t\t(match_dup 0)))\n+   (parallel [(set (match_dup 0) (plus:DI (match_dup 0) (const_int 1)))\n+\t      (clobber (reg:CC 17))])]\n+  \"\")\n+\n+(define_insn \"*ffsdi_1\"\n+  [(set (reg:CCZ 17)\n+\t(compare:CCZ (match_operand:DI 1 \"nonimmediate_operand\" \"rm\")\n+\t\t     (const_int 0)))\n+   (set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(ctz:DI (match_dup 1)))]\n+  \"TARGET_64BIT\"\n+  \"bsf{q}\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"prefix_0f\" \"1\")])\n+\n (define_insn \"ctzsi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(ctz:SI (match_operand:SI 1 \"nonimmediate_operand\" \"rm\")))\n@@ -14013,6 +14051,14 @@\n   \"bsf{l}\\t{%1, %0|%0, %1}\"\n   [(set_attr \"prefix_0f\" \"1\")])\n \n+(define_insn \"ctzdi2\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(ctz:DI (match_operand:DI 1 \"nonimmediate_operand\" \"rm\")))\n+   (clobber (reg:CC 17))]\n+  \"TARGET_64BIT\"\n+  \"bsf{q}\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"prefix_0f\" \"1\")])\n+\n (define_expand \"clzsi2\"\n   [(parallel\n      [(set (match_operand:SI 0 \"register_operand\" \"\")\n@@ -14033,6 +14079,27 @@\n   \"\"\n   \"bsr{l}\\t{%1, %0|%0, %1}\"\n   [(set_attr \"prefix_0f\" \"1\")])\n+\n+(define_expand \"clzdi2\"\n+  [(parallel\n+     [(set (match_operand:DI 0 \"register_operand\" \"\")\n+\t   (minus:DI (const_int 63)\n+\t\t     (clz:DI (match_operand:DI 1 \"nonimmediate_operand\" \"\"))))\n+      (clobber (reg:CC 17))])\n+   (parallel\n+     [(set (match_dup 0) (xor:DI (match_dup 0) (const_int 63)))\n+      (clobber (reg:CC 17))])]\n+  \"TARGET_64BIT\"\n+  \"\")\n+\n+(define_insn \"*bsr_rex64\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(minus:DI (const_int 63)\n+\t\t  (clz:DI (match_operand:DI 1 \"nonimmediate_operand\" \"rm\"))))\n+   (clobber (reg:CC 17))]\n+  \"TARGET_64BIT\"\n+  \"bsr{q}\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"prefix_0f\" \"1\")])\n \f\n ;; Thread-local storage patterns for ELF.\n ;;"}]}