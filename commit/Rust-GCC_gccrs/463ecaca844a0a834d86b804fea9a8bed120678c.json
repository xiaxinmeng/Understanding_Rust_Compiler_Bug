{"sha": "463ecaca844a0a834d86b804fea9a8bed120678c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDYzZWNhY2E4NDRhMGE4MzRkODZiODA0ZmVhOWE4YmVkMTIwNjc4Yw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-04-06T20:55:04Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-04-06T20:55:04Z"}, "message": "re PR c++/35146 (weird error in template function specialization)\n\n\tPR c++/35146\n\t* pt.c (fn_type_unification): For DEDUCE_EXACT check that\n\tthe deduced template arguments give us the parameter types\n\twe're looking for.\n\nFrom-SVN: r145625", "tree": {"sha": "288125d2703e3ee1ec38844d785486bf035c7f63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/288125d2703e3ee1ec38844d785486bf035c7f63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/463ecaca844a0a834d86b804fea9a8bed120678c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/463ecaca844a0a834d86b804fea9a8bed120678c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/463ecaca844a0a834d86b804fea9a8bed120678c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/463ecaca844a0a834d86b804fea9a8bed120678c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b6837b94d9916498b79b854728187361dde113a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6837b94d9916498b79b854728187361dde113a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6837b94d9916498b79b854728187361dde113a0"}], "stats": {"total": 52, "additions": 49, "deletions": 3}, "files": [{"sha": "02440e516e04b77bf9d12e67856023da00ece9dd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463ecaca844a0a834d86b804fea9a8bed120678c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463ecaca844a0a834d86b804fea9a8bed120678c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=463ecaca844a0a834d86b804fea9a8bed120678c", "patch": "@@ -1,3 +1,10 @@\n+2009-04-06  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/35146\n+\t* pt.c (fn_type_unification): For DEDUCE_EXACT check that\n+\tthe deduced template arguments give us the parameter types\n+\twe're looking for.\n+\n 2009-04-05  Giovanni Bajo <giovannibajo@libero.it>\n \t    Jason Merrill  <jason@redhat.com>\n "}, {"sha": "92815c08267b67b16cae06d9f5b76c7c18829461", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463ecaca844a0a834d86b804fea9a8bed120678c/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463ecaca844a0a834d86b804fea9a8bed120678c/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=463ecaca844a0a834d86b804fea9a8bed120678c", "patch": "@@ -12301,9 +12301,27 @@ fn_type_unification (tree fn,\n        the corresponding deduced argument values.  If the\n        substitution results in an invalid type, as described above,\n        type deduction fails.  */\n-    if (tsubst (TREE_TYPE (fn), targs, tf_none, NULL_TREE)\n-\t== error_mark_node)\n-      return 1;\n+    {\n+      tree substed = tsubst (TREE_TYPE (fn), targs, tf_none, NULL_TREE);\n+      if (substed == error_mark_node)\n+\treturn 1;\n+\n+      /* If we're looking for an exact match, check that what we got\n+\t is indeed an exact match.  It might not be if some template\n+\t parameters are used in non-deduced contexts.  */\n+      if (strict == DEDUCE_EXACT)\n+\t{\n+\t  tree sarg\n+\t    = skip_artificial_parms_for (fn, TYPE_ARG_TYPES (substed));\n+\t  tree arg = args;\n+\t  if (return_type)\n+\t    sarg = tree_cons (NULL_TREE, TREE_TYPE (substed), sarg);\n+\t  for (; arg && sarg;\n+\t       arg = TREE_CHAIN (arg), sarg = TREE_CHAIN (sarg))\n+\t    if (!same_type_p (TREE_VALUE (arg), TREE_VALUE (sarg)))\n+\t      return 1;\n+\t}\n+    }\n \n   return result;\n }"}, {"sha": "b4864a20dbb0888e5d728cd8f07d25a0876a8933", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463ecaca844a0a834d86b804fea9a8bed120678c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463ecaca844a0a834d86b804fea9a8bed120678c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=463ecaca844a0a834d86b804fea9a8bed120678c", "patch": "@@ -1,3 +1,8 @@\n+2009-04-06  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/35146\n+\t* g++.dg/template/fnspec1.C: New.\n+\n 2009-04-06  Laurent GUERBY  <laurent@guerby.net>\n \n         * lib/gnat.exp: Handle multilib."}, {"sha": "5d5324475a4dcd3b32c1c8c7e7ad78922509e1ba", "filename": "gcc/testsuite/g++.dg/template/fnspec1.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/463ecaca844a0a834d86b804fea9a8bed120678c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffnspec1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/463ecaca844a0a834d86b804fea9a8bed120678c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffnspec1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffnspec1.C?ref=463ecaca844a0a834d86b804fea9a8bed120678c", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/35146\n+\n+template <typename T> struct S {};\n+\n+template <typename R> struct ref;\n+template <>           struct ref<double> { typedef double result; };\n+\n+template <typename T>\n+void foo(typename ref<T>::result, S<T>*);\n+template <>\n+void foo(S<double>,               S<double>*); // { dg-error \"does not match\" }\n+template <>\n+void foo(double alpha,            S<double>* x)\n+{\n+  alpha; x;\n+}"}]}