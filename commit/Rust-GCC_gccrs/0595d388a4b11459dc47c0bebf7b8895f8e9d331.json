{"sha": "0595d388a4b11459dc47c0bebf7b8895f8e9d331", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU5NWQzODhhNGIxMTQ1OWRjNDdjMGJlYmY3Yjg4OTVmOGU5ZDMzMQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2003-07-18T18:23:30Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2003-07-18T18:23:30Z"}, "message": "combine.c (combinable_i3pat): Don't forbid occurrences of i2dest or i1dest in inner_dest if inner_dest is a mem.\n\n* combine.c (combinable_i3pat): Don't forbid occurrences of\ni2dest or i1dest in inner_dest if inner_dest is a mem.\n\nFrom-SVN: r69566", "tree": {"sha": "feec71e702f270e1b94e01a67abece176fd46c1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/feec71e702f270e1b94e01a67abece176fd46c1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0595d388a4b11459dc47c0bebf7b8895f8e9d331", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0595d388a4b11459dc47c0bebf7b8895f8e9d331", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0595d388a4b11459dc47c0bebf7b8895f8e9d331", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0595d388a4b11459dc47c0bebf7b8895f8e9d331/comments", "author": null, "committer": null, "parents": [{"sha": "d54b59573446dc2a9fab992eeea664c76bb735ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d54b59573446dc2a9fab992eeea664c76bb735ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d54b59573446dc2a9fab992eeea664c76bb735ce"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "644da7bf32381311ce627162670222a0a4e23f81", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0595d388a4b11459dc47c0bebf7b8895f8e9d331/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0595d388a4b11459dc47c0bebf7b8895f8e9d331/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0595d388a4b11459dc47c0bebf7b8895f8e9d331", "patch": "@@ -1,3 +1,8 @@\n+Fri Jul 18 15:22:28 2003  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* combine.c (combinable_i3pat): Don't forbid occurrences of\n+\ti2dest or i1dest in inner_dest if inner_dest is a mem.\n+\n Fri Jul 18 17:05:57 CEST 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* cgraph.c (cgraph_remove_node): Clear the hash table slot."}, {"sha": "883f504a50b882d63a3d0caf4b02b195f9b4a3ce", "filename": "gcc/combine.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0595d388a4b11459dc47c0bebf7b8895f8e9d331/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0595d388a4b11459dc47c0bebf7b8895f8e9d331/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=0595d388a4b11459dc47c0bebf7b8895f8e9d331", "patch": "@@ -1301,9 +1301,14 @@ combinable_i3pat (rtx i3, rtx *loc, rtx i2dest, rtx i1dest,\n \t     || GET_CODE (inner_dest) == ZERO_EXTRACT)\n \tinner_dest = XEXP (inner_dest, 0);\n \n-      /* Check for the case where I3 modifies its output, as\n-\t discussed above.  */\n-      if ((inner_dest != dest\n+      /* Check for the case where I3 modifies its output, as discussed\n+\t above.  We don't want to prevent pseudos from being combined\n+\t into the address of a MEM, so only prevent the combination if\n+\t i1 or i2 set the same MEM.  */\n+      if ((inner_dest != dest &&\n+\t   (GET_CODE (inner_dest) != MEM\n+\t    || rtx_equal_p (i2dest, inner_dest)\n+\t    || (i1dest && rtx_equal_p (i1dest, inner_dest)))\n \t   && (reg_overlap_mentioned_p (i2dest, inner_dest)\n \t       || (i1dest && reg_overlap_mentioned_p (i1dest, inner_dest))))\n "}]}