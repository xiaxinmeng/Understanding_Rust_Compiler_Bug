{"sha": "1a6dd8a2b8b9817d852588708a90d30618c02903", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE2ZGQ4YTJiOGI5ODE3ZDg1MjU4ODcwOGE5MGQzMDYxOGMwMjkwMw==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2004-02-06T18:31:33Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2004-02-06T18:31:33Z"}, "message": "* cfganal.c (flow_call_edges_add): Never split a libcall block.\n\nFrom-SVN: r77410", "tree": {"sha": "0a45d5a5c934f17bee1657e72f74c8d4cdc93901", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a45d5a5c934f17bee1657e72f74c8d4cdc93901"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a6dd8a2b8b9817d852588708a90d30618c02903", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a6dd8a2b8b9817d852588708a90d30618c02903", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a6dd8a2b8b9817d852588708a90d30618c02903", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a6dd8a2b8b9817d852588708a90d30618c02903/comments", "author": null, "committer": null, "parents": [{"sha": "1711adc261965d9e88dc92fb3b16829a90145d01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1711adc261965d9e88dc92fb3b16829a90145d01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1711adc261965d9e88dc92fb3b16829a90145d01"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "19454ac442e9a42af108717ac01308da76af78f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a6dd8a2b8b9817d852588708a90d30618c02903/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a6dd8a2b8b9817d852588708a90d30618c02903/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a6dd8a2b8b9817d852588708a90d30618c02903", "patch": "@@ -1,3 +1,7 @@\n+2004-02-06  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* cfganal.c (flow_call_edges_add): Never split a libcall block.\n+\n 2004-02-06  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* dwarf2out.c (output_loc_list): Don't use deltas if we have"}, {"sha": "aa3965cac07cdcd618219ced46ffde3e75b3628d", "filename": "gcc/cfganal.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a6dd8a2b8b9817d852588708a90d30618c02903/gcc%2Fcfganal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a6dd8a2b8b9817d852588708a90d30618c02903/gcc%2Fcfganal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfganal.c?ref=1a6dd8a2b8b9817d852588708a90d30618c02903", "patch": "@@ -333,6 +333,7 @@ flow_call_edges_add (sbitmap blocks)\n   for (i = 0; i < last_bb; i++)\n     {\n       basic_block bb = BASIC_BLOCK (i);\n+      rtx libcall_end = NULL_RTX;\n       rtx insn;\n       rtx prev_insn;\n \n@@ -350,9 +351,13 @@ flow_call_edges_add (sbitmap blocks)\n \t      edge e;\n \t      rtx split_at_insn = insn;\n \n+\t      /* Don't split libcalls.  */\n+\t      if (libcall_end)\n+\t\tsplit_at_insn = libcall_end;\n+\n \t      /* Don't split the block between a call and an insn that should\n \t         remain in the same block as the call.  */\n-\t      if (GET_CODE (insn) == CALL_INSN)\n+\t      else if (GET_CODE (insn) == CALL_INSN)\n \t\twhile (split_at_insn != BB_END (bb)\n \t\t       && keep_with_call_p (NEXT_INSN (split_at_insn)))\n \t\t  split_at_insn = NEXT_INSN (split_at_insn);\n@@ -381,6 +386,14 @@ flow_call_edges_add (sbitmap blocks)\n \t      make_edge (bb, EXIT_BLOCK_PTR, EDGE_FAKE);\n \t    }\n \n+\t  /* Watch out for REG_LIBCALL/REG_RETVAL notes so that we know\n+\t     whether we are currently in a libcall or not.  Remember that\n+\t     we are scanning backwards!  */\n+\t  if (find_reg_note (insn, REG_RETVAL, NULL_RTX))\n+\t    libcall_end = insn;\n+\t  if (find_reg_note (insn, REG_LIBCALL, NULL_RTX))\n+\t    libcall_end = NULL_RTX;\n+\n \t  if (insn == BB_HEAD (bb))\n \t    break;\n \t}"}]}