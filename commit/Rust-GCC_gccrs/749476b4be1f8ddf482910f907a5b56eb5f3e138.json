{"sha": "749476b4be1f8ddf482910f907a5b56eb5f3e138", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ5NDc2YjRiZTFmOGRkZjQ4MjkxMGY5MDdhNWI1NmViNWYzZTEzOA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-09-09T19:29:05Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-09-09T19:37:21Z"}, "message": "c++: omp reduction cleanups\n\nomp reductions are modeled as nested functions, which is a thing C++\ndoesn't have.  Leading to much confusion until I figured out what was\nhappening.  Not helped by some duplicate code and inconsistencies in\nthe dependent and non-dependent paths.  This patch removes the parser\nduplication and fixes up some bookkeeping.  Added some asserts and\ncomments too.\n\n\tgcc/cp/\n\t* parser.c (cp_parser_omp_declare_reduction): Refactor to avoid\n\tcode duplication.  Update DECL_TI_TEMPLATE's context.\n\t* pt.c (tsubst_expr): For OMP reduction function, set context to\n\tglobal_namespace before pushing.\n\t(tsubst_omp_udr): Assert current_function_decl, add comment about\n\tdecl context.", "tree": {"sha": "971fc51a9c76424446a0db3066a7fafcc6643c0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/971fc51a9c76424446a0db3066a7fafcc6643c0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/749476b4be1f8ddf482910f907a5b56eb5f3e138", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/749476b4be1f8ddf482910f907a5b56eb5f3e138", "html_url": "https://github.com/Rust-GCC/gccrs/commit/749476b4be1f8ddf482910f907a5b56eb5f3e138", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/749476b4be1f8ddf482910f907a5b56eb5f3e138/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "782d3ea603c9ad26176136ffb39481a720246be1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/782d3ea603c9ad26176136ffb39481a720246be1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/782d3ea603c9ad26176136ffb39481a720246be1"}], "stats": {"total": 31, "additions": 19, "deletions": 12}, "files": [{"sha": "0da383937c216b263c577cceb3132ab1be27eda2", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/749476b4be1f8ddf482910f907a5b56eb5f3e138/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/749476b4be1f8ddf482910f907a5b56eb5f3e138/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=749476b4be1f8ddf482910f907a5b56eb5f3e138", "patch": "@@ -42616,23 +42616,24 @@ cp_parser_omp_declare_reduction (cp_parser *parser, cp_token *pragma_tok,\n \t  cp_parser_push_lexer_for_tokens (parser, cp);\n \t  parser->lexer->in_pragma = true;\n \t}\n-      if (!cp_parser_omp_declare_reduction_exprs (fndecl, parser))\n-\t{\n-\t  if (!block_scope)\n-\t    finish_function (/*inline_p=*/false);\n-\t  else\n-\t    DECL_CONTEXT (fndecl) = current_function_decl;\n-\t  if (cp)\n-\t    cp_parser_pop_lexer (parser);\n-\t  goto fail;\n-\t}\n+\n+      bool ok = cp_parser_omp_declare_reduction_exprs (fndecl, parser);\n+\n       if (cp)\n \tcp_parser_pop_lexer (parser);\n       if (!block_scope)\n \tfinish_function (/*inline_p=*/false);\n       else\n \t{\n \t  DECL_CONTEXT (fndecl) = current_function_decl;\n+\t  if (DECL_TEMPLATE_INFO (fndecl))\n+\t    DECL_CONTEXT (DECL_TI_TEMPLATE (fndecl)) = current_function_decl;\n+\t}\n+      if (!ok)\n+\tgoto fail;\n+\n+      if (block_scope)\n+\t{\n \t  block = finish_omp_structured_block (block);\n \t  if (TREE_CODE (block) == BIND_EXPR)\n \t    DECL_SAVED_TREE (fndecl) = BIND_EXPR_BODY (block);\n@@ -42641,6 +42642,7 @@ cp_parser_omp_declare_reduction (cp_parser *parser, cp_token *pragma_tok,\n \t  if (processing_template_decl)\n \t    add_decl_expr (fndecl);\n \t}\n+\n       cp_check_omp_declare_reduction (fndecl);\n       if (cp == NULL && types.length () > 1)\n \tcp = cp_token_cache_new (first_token,"}, {"sha": "4e212620eaf061087383c2551329d0cca9c8e06d", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/749476b4be1f8ddf482910f907a5b56eb5f3e138/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/749476b4be1f8ddf482910f907a5b56eb5f3e138/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=749476b4be1f8ddf482910f907a5b56eb5f3e138", "patch": "@@ -18077,7 +18077,10 @@ tsubst_expr (tree t, tree args, tsubst_flags_t complain, tree in_decl,\n \t\t\t && DECL_OMP_DECLARE_REDUCTION_P (decl)\n \t\t\t && DECL_FUNCTION_SCOPE_P (pattern_decl))\n \t\t  {\n-\t\t    DECL_CONTEXT (decl) = NULL_TREE;\n+\t\t    /* We pretend this is regular local extern decl of\n+\t\t       a namespace-scope fn.  Then we make it really\n+\t\t       local, it is a nested function.  */\n+\t\t    DECL_CONTEXT (decl) = global_namespace;\n \t\t    pushdecl (decl);\n \t\t    DECL_CONTEXT (decl) = current_function_decl;\n \t\t    cp_check_omp_declare_reduction (decl);\n@@ -18899,7 +18902,7 @@ tsubst_omp_udr (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n   if (t == NULL_TREE || t == error_mark_node)\n     return;\n \n-  gcc_assert (TREE_CODE (t) == STATEMENT_LIST);\n+  gcc_assert (TREE_CODE (t) == STATEMENT_LIST && current_function_decl);\n \n   tree_stmt_iterator tsi;\n   int i;\n@@ -18919,6 +18922,8 @@ tsubst_omp_udr (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \t\t\t     args, complain, in_decl);\n       tree omp_in = tsubst (DECL_EXPR_DECL (stmts[1]),\n \t\t\t    args, complain, in_decl);\n+      /* tsubsting a local var_decl leaves DECL_CONTEXT null, as we\n+\t expect to be pushing it.  */\n       DECL_CONTEXT (omp_out) = current_function_decl;\n       DECL_CONTEXT (omp_in) = current_function_decl;\n       keep_next_level (true);"}]}