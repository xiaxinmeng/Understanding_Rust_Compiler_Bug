{"sha": "d2148424165849ac9fe413b7a8d7cd198959bebf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDIxNDg0MjQxNjU4NDlhYzlmZTQxM2I3YThkN2NkMTk4OTU5YmViZg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-04-15T06:49:45Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-05T14:01:36Z"}, "message": "Merge dg-options and dg-additional-options if len <= 120 chars.\n\ngcc/testsuite/ChangeLog:\n\n2020-04-15  Martin Liska  <mliska@suse.cz>\n\n\t* g++.dg/concepts/diagnostic1.C: Merge dg-options and\n\tdg-additional-options if len <= 120 chars.\n\t* g++.dg/cpp1y/new1.C: Likewise.\n\t* g++.dg/cpp1y/new2.C: Likewise.\n\t* g++.dg/debug/dwarf2/pr61433.C: Likewise.\n\t* g++.dg/init/new18.C: Likewise.\n\t* g++.dg/ipa/devirt-19.C: Likewise.\n\t* g++.dg/ipa/devirt-52.C: Likewise.\n\t* g++.dg/ipa/pr44372.C: Likewise.\n\t* g++.dg/ipa/pr58371.C: Likewise.\n\t* g++.dg/ipa/pr63587-2.C: Likewise.\n\t* g++.dg/ipa/pr78211.C: Likewise.\n\t* g++.dg/opt/dump1.C: Likewise.\n\t* g++.dg/opt/pr44919.C: Likewise.\n\t* g++.dg/opt/pr47615.C: Likewise.\n\t* g++.dg/opt/pr82159-2.C: Likewise.\n\t* g++.dg/other/pr52048.C: Likewise.\n\t* g++.dg/pr57662.C: Likewise.\n\t* g++.dg/pr59510.C: Likewise.\n\t* g++.dg/pr67989.C: Likewise.\n\t* g++.dg/pr81194.C: Likewise.\n\t* g++.dg/template/canon-type-8.C: Likewise.\n\t* g++.dg/template/crash107.C: Likewise.\n\t* g++.dg/template/show-template-tree-3.C: Likewise.\n\t* g++.dg/tm/cgraph_edge.C: Likewise.\n\t* g++.dg/torture/20141013.C: Likewise.\n\t* g++.dg/torture/pr34641.C: Likewise.\n\t* g++.dg/torture/pr34850.C: Likewise.\n\t* g++.dg/torture/pr36745.C: Likewise.\n\t* g++.dg/torture/pr40991.C: Likewise.\n\t* g++.dg/torture/pr48271.C: Likewise.\n\t* g++.dg/torture/pr53602.C: Likewise.\n\t* g++.dg/torture/pr53752.C: Likewise.\n\t* g++.dg/torture/pr54838.C: Likewise.\n\t* g++.dg/torture/pr58252.C: Likewise.\n\t* g++.dg/tree-ssa/pr22444.C: Likewise.\n\t* g++.dg/tree-ssa/pr24351-3.C: Likewise.\n\t* g++.dg/tree-ssa/pr27283.C: Likewise.\n\t* g++.dg/tree-ssa/pr27291.C: Likewise.\n\t* g++.dg/tree-ssa/pr27548.C: Likewise.\n\t* g++.dg/tree-ssa/pr42337.C: Likewise.\n\t* g++.dg/ubsan/pr65583.C: Likewise.\n\t* g++.old-deja/g++.robertl/eb27.C: Likewise.\n\t* gcc.dg/tree-ssa/dse-points-to.c: Likewise.\n\t* gcc.target/arm/simd/vmmla_1.c: Likewise.\n\t* gcc.target/i386/vect-pr67800.c: Likewise.\n\t* gcc.target/mips/cfgcleanup-jalr2.c: Likewise.\n\t* gcc.target/mips/cfgcleanup-jalr3.c: Likewise.", "tree": {"sha": "ea7affa8e710e7b67375d100091f5a421b1a844a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea7affa8e710e7b67375d100091f5a421b1a844a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2148424165849ac9fe413b7a8d7cd198959bebf", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl6xccAACgkQTcGC3A+n\nN4U1pggAmQ1brso8+ljm6tG/gh4EKx8OSlww1ABmY8PNgvH5BAdHyUaBClGJB0X2\n6B8VtKZRmhTIAlZqxfOsAbC/wndcIdL2nXPsWs64OKBjw5Sl0AMVZ2Vrqka8tY/C\nhuvwrJVLQ0peTI1fqFL9PVq/xqzHtQdoD+FuuGZP0WmiyqelXlDc8GfYONX8tr0s\npvCsfepzpi4bmo0q4IM6LW9pp1WLwKG0TwE4wFp3WC0zGNx1c9+P51UC5HgUS0m5\nOMjBH10GcaukSLSXWwThb4CNj1CustZpHcepq8TJ1hT1sbHhdDZefzVdkYRpozH4\nRIGP4i3q0VNI7ppLScYFuekhA5fUBg==\n=63v+\n-----END PGP SIGNATURE-----", "payload": "tree ea7affa8e710e7b67375d100091f5a421b1a844a\nparent 03f9754665b889e0988d0392db1eb35e91b97693\nauthor Martin Liska <mliska@suse.cz> 1586933385 +0200\ncommitter Martin Liska <mliska@suse.cz> 1588687296 +0200\n\nMerge dg-options and dg-additional-options if len <= 120 chars.\n\ngcc/testsuite/ChangeLog:\n\n2020-04-15  Martin Liska  <mliska@suse.cz>\n\n\t* g++.dg/concepts/diagnostic1.C: Merge dg-options and\n\tdg-additional-options if len <= 120 chars.\n\t* g++.dg/cpp1y/new1.C: Likewise.\n\t* g++.dg/cpp1y/new2.C: Likewise.\n\t* g++.dg/debug/dwarf2/pr61433.C: Likewise.\n\t* g++.dg/init/new18.C: Likewise.\n\t* g++.dg/ipa/devirt-19.C: Likewise.\n\t* g++.dg/ipa/devirt-52.C: Likewise.\n\t* g++.dg/ipa/pr44372.C: Likewise.\n\t* g++.dg/ipa/pr58371.C: Likewise.\n\t* g++.dg/ipa/pr63587-2.C: Likewise.\n\t* g++.dg/ipa/pr78211.C: Likewise.\n\t* g++.dg/opt/dump1.C: Likewise.\n\t* g++.dg/opt/pr44919.C: Likewise.\n\t* g++.dg/opt/pr47615.C: Likewise.\n\t* g++.dg/opt/pr82159-2.C: Likewise.\n\t* g++.dg/other/pr52048.C: Likewise.\n\t* g++.dg/pr57662.C: Likewise.\n\t* g++.dg/pr59510.C: Likewise.\n\t* g++.dg/pr67989.C: Likewise.\n\t* g++.dg/pr81194.C: Likewise.\n\t* g++.dg/template/canon-type-8.C: Likewise.\n\t* g++.dg/template/crash107.C: Likewise.\n\t* g++.dg/template/show-template-tree-3.C: Likewise.\n\t* g++.dg/tm/cgraph_edge.C: Likewise.\n\t* g++.dg/torture/20141013.C: Likewise.\n\t* g++.dg/torture/pr34641.C: Likewise.\n\t* g++.dg/torture/pr34850.C: Likewise.\n\t* g++.dg/torture/pr36745.C: Likewise.\n\t* g++.dg/torture/pr40991.C: Likewise.\n\t* g++.dg/torture/pr48271.C: Likewise.\n\t* g++.dg/torture/pr53602.C: Likewise.\n\t* g++.dg/torture/pr53752.C: Likewise.\n\t* g++.dg/torture/pr54838.C: Likewise.\n\t* g++.dg/torture/pr58252.C: Likewise.\n\t* g++.dg/tree-ssa/pr22444.C: Likewise.\n\t* g++.dg/tree-ssa/pr24351-3.C: Likewise.\n\t* g++.dg/tree-ssa/pr27283.C: Likewise.\n\t* g++.dg/tree-ssa/pr27291.C: Likewise.\n\t* g++.dg/tree-ssa/pr27548.C: Likewise.\n\t* g++.dg/tree-ssa/pr42337.C: Likewise.\n\t* g++.dg/ubsan/pr65583.C: Likewise.\n\t* g++.old-deja/g++.robertl/eb27.C: Likewise.\n\t* gcc.dg/tree-ssa/dse-points-to.c: Likewise.\n\t* gcc.target/arm/simd/vmmla_1.c: Likewise.\n\t* gcc.target/i386/vect-pr67800.c: Likewise.\n\t* gcc.target/mips/cfgcleanup-jalr2.c: Likewise.\n\t* gcc.target/mips/cfgcleanup-jalr3.c: Likewise.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2148424165849ac9fe413b7a8d7cd198959bebf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2148424165849ac9fe413b7a8d7cd198959bebf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2148424165849ac9fe413b7a8d7cd198959bebf/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03f9754665b889e0988d0392db1eb35e91b97693", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03f9754665b889e0988d0392db1eb35e91b97693", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03f9754665b889e0988d0392db1eb35e91b97693"}], "stats": {"total": 141, "additions": 47, "deletions": 94}, "files": [{"sha": "29c78c4c730fb10e44c3c399a9f6006b675651e6", "filename": "gcc/testsuite/g++.dg/concepts/diagnostic1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdiagnostic1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdiagnostic1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdiagnostic1.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,7 +1,6 @@\n // PR c++/67159\n // { dg-do compile { target c++17_only } }\n-// { dg-options \"-fconcepts\" }\n-// { dg-additional-options \"-fconcepts-diagnostics-depth=2\" }\n+// { dg-options \"-fconcepts -fconcepts-diagnostics-depth=2\" }\n \n template <class T, class U>\n concept bool SameAs = __is_same_as(T, U);"}, {"sha": "aa5f647d535cf0c3e7de61167c9fb62048217ad3", "filename": "gcc/testsuite/g++.dg/cpp1y/new1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fnew1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fnew1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fnew1.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-cddce-details\" } */\n-// { dg-additional-options \"-fdelete-null-pointer-checks\" }\n+/* { dg-options \"-O2 -fdump-tree-cddce-details -fdelete-null-pointer-checks\" } */\n \n #include <stdlib.h>\n "}, {"sha": "cdcbd7daf2b9c179d0f38bc58ae4c3978bfc7ef0", "filename": "gcc/testsuite/g++.dg/cpp1y/new2.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fnew2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fnew2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fnew2.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -std=c++17 -fdump-tree-cddce-details\" } */\n-/* { dg-additional-options \"-fdelete-null-pointer-checks\" } */\n+/* { dg-options \"-O2 -std=c++17 -fdump-tree-cddce-details -fdelete-null-pointer-checks\" } */\n \n #include <cstdio>\n #include <cstdlib>"}, {"sha": "8b25475d25bc1d582cec19164d544e0279816c02", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/pr61433.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr61433.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr61433.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr61433.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,7 +1,6 @@\n // PR c++/61433\n // { dg-do compile { target c++11 } }\n-// { dg-options \"-O -fcompare-debug -fno-inline -fno-ipa-pure-const -fipa-sra\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \"-O -fcompare-debug -fno-inline -fno-ipa-pure-const -fipa-sra -Wno-return-type\" }\n \n template <class T>\n struct A"}, {"sha": "afe3da9b53e640a6fc23295db7b2701378b6da6d", "filename": "gcc/testsuite/g++.dg/init/new18.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew18.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,6 +1,5 @@\n // { dg-do compile }\n-// { dg-options \"-O2 -fstrict-aliasing\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \"-O2 -fstrict-aliasing -Wno-return-type\" }\n \n // This caused an ICE during placement new.\n "}, {"sha": "c14b969a26f39c8335c7b2d6770bae29f85ec110", "filename": "gcc/testsuite/g++.dg/ipa/devirt-19.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-19.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -2,8 +2,7 @@\n    Previously we were failing by considering CLOBBER statement to be\n    a type change.  */\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-ipa-cp -fipa-cp-clone\"  } */\n-/* { dg-additional-options \"-Wno-return-type\"  } */\n+/* { dg-options \"-O2 -fdump-ipa-cp -fipa-cp-clone -Wno-return-type\"  } */\n \n struct A {\n   void operator==(const A &);"}, {"sha": "1c6aa3e789ba078bae26b612d9fc2eeb95e63854", "filename": "gcc/testsuite/g++.dg/ipa/devirt-52.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-52.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-52.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-52.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,7 +1,6 @@\n // PR middle-end/77259\n // { dg-do compile { target c++11 } }\n-// { dg-options \"-O2\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \"-O2 -Wno-return-type\" }\n \n template <typename, typename = int> class A;\n template <typename, typename> struct A"}, {"sha": "539f32ba7a3d972b45a7e2d46bcee65e180fe493", "filename": "gcc/testsuite/g++.dg/ipa/pr44372.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr44372.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr44372.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr44372.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fipa-cp -fipa-cp-clone\" } */\n-/* { dg-additional-options \"-Wno-return-type\" } */\n+/* { dg-options \"-O -fipa-cp -fipa-cp-clone -Wno-return-type\" } */\n \n template < typename > class S3;\n "}, {"sha": "02c14fa6fe668d3c966e94ac304da4062422e011", "filename": "gcc/testsuite/g++.dg/ipa/pr58371.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr58371.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr58371.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr58371.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2\" } */\n-/* { dg-additional-options \"-Wno-return-type\" } */\n+/* { dg-options \"-O2 -Wno-return-type\" } */\n \n \n typedef int size_t;"}, {"sha": "559a94a5438abab86c632ee1adda7c85a5e75d15", "filename": "gcc/testsuite/g++.dg/ipa/pr63587-2.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr63587-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr63587-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr63587-2.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,7 +1,6 @@\n // PR ipa/63587\n // { dg-do compile { target c++11 } }\n-// { dg-options \"-O2\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \"-O2 -Wno-return-type\" }\n \n namespace boost {\n class basic_cstring"}, {"sha": "ac8c893334e12c1b9b648dc2194c449852a37920", "filename": "gcc/testsuite/g++.dg/ipa/pr78211.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr78211.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr78211.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr78211.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,7 +1,6 @@\n // PR lto/78211\n // { dg-do compile { target { lto && c++11 } } }\n-// { dg-options \"-fcompare-debug -fno-printf-return-value -flto -fno-use-linker-plugin -O3\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \"-fcompare-debug -fno-printf-return-value -flto -fno-use-linker-plugin -O3 -Wno-return-type\" }\n \n namespace std {\n   typedef __SIZE_TYPE__ size_t;"}, {"sha": "75d71110022667a9bf5b78963f24bdcd09bb1f7c", "filename": "gcc/testsuite/g++.dg/opt/dump1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fdump1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fdump1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fdump1.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,8 +1,7 @@\n // PR c++/57102\n-// { dg-options \"-O2 -fno-inline -fdump-final-insns\" }\n+// { dg-options \"-O2 -fno-inline -fdump-final-insns -Wno-return-type\" }\n // { dg-do compile { target c++11 } }\n // { dg-final cleanup-final-insns-dump }\n-// { dg-additional-options \"-Wno-return-type\" }\n \n namespace std\n {"}, {"sha": "b76bb546735c428bd6abc5e1868f0980c72f2778", "filename": "gcc/testsuite/g++.dg/opt/pr44919.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr44919.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr44919.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr44919.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,6 +1,5 @@\n // { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } }\n-// { dg-options \"-O3 -fselective-scheduling2\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \"-O3 -fselective-scheduling2 -Wno-return-type\" }\n \n namespace std {\n "}, {"sha": "f502e397fe4752246e39b8925186e275c4b23cbe", "filename": "gcc/testsuite/g++.dg/opt/pr47615.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr47615.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr47615.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr47615.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,6 +1,5 @@\n // { dg-do compile }\n-// { dg-options \"-O -fstrict-aliasing -ftree-pre -fno-tree-fre -fno-tree-sra\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \"-O -fstrict-aliasing -ftree-pre -fno-tree-fre -fno-tree-sra -Wno-return-type\" }\n \n typedef __SIZE_TYPE__ size_t;\n namespace std "}, {"sha": "28a3e80aabd087d5ca97a442dc6b48aa482c4329", "filename": "gcc/testsuite/g++.dg/opt/pr82159-2.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr82159-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr82159-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr82159-2.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,7 +1,6 @@\n // PR c++/82159\n // { dg-do compile }\n-// { dg-options \"\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \" -Wno-return-type\" }\n \n template <typename T> struct D { T e; };\n struct F : D<int[0]> {"}, {"sha": "7edd283cbd2533faa23b7578097a265d512b91d6", "filename": "gcc/testsuite/g++.dg/other/pr52048.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr52048.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr52048.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr52048.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,7 +1,6 @@\n // PR debug/52048\n // { dg-do compile }\n-// { dg-options \"-fcompare-debug -fnon-call-exceptions -fno-tree-dominator-opts -O2\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \"-fcompare-debug -fnon-call-exceptions -fno-tree-dominator-opts -O2 -Wno-return-type\" }\n \n template <typename T> struct A;\n template <typename T>"}, {"sha": "a23bfc9f2fb90490315e658129b38e5c02b5642d", "filename": "gcc/testsuite/g++.dg/pr57662.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr57662.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr57662.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr57662.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -fselective-scheduling2 -fsel-sched-pipelining\" } */\n-/* { dg-additional-options \"-Wno-return-type\" } */\n+/* { dg-options \"-O2 -fselective-scheduling2 -fsel-sched-pipelining -Wno-return-type\" } */\n \n extern \"C\" {\n \ttypedef struct _IO_FILE FILE;"}, {"sha": "14a6af331838dcd2ae42bee4c627e3d1de5b8c38", "filename": "gcc/testsuite/g++.dg/pr59510.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr59510.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr59510.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr59510.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,7 +1,6 @@\n // PR debug/59510\n // { dg-do compile }\n-// { dg-options \"-O2 -g --param=large-stack-frame-growth=1\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \"-O2 -g --param=large-stack-frame-growth=1 -Wno-return-type\" }\n \n template <typename _Iterator>\n struct _Iter_base"}, {"sha": "7967f692b03843ff663ed03324829a1aae518efd", "filename": "gcc/testsuite/g++.dg/pr67989.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr67989.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr67989.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr67989.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-std=c++11 -O2\" } */\n-/* { dg-additional-options \"-Wno-return-type\" } */\n+/* { dg-options \"-std=c++11 -O2 -Wno-return-type\" } */\n \n __extension__ typedef unsigned long long int uint64_t;\n namespace std __attribute__ ((__visibility__ (\"default\")))"}, {"sha": "b3019170d1ecfc95cb6bd66cd1e4613bea828469", "filename": "gcc/testsuite/g++.dg/pr81194.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr81194.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr81194.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr81194.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,6 +1,5 @@\n // { dg-do compile { target c++17 } }\n-// { dg-options \"-O2 -fno-exceptions\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \"-O2 -fno-exceptions -Wno-return-type\" }\n \n template <class a> struct b { typedef a *c; };\n class e {};"}, {"sha": "dde7d20f84cfe70ff569f4b9a58e61a46e395267", "filename": "gcc/testsuite/g++.dg/template/canon-type-8.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcanon-type-8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcanon-type-8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcanon-type-8.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,8 +1,7 @@\n // PR c++/45984\n // We were getting different canonical types for matching types because\n // TYPE_ALIGN wasn't propagated to all the variants fast enough.\n-// { dg-options \"\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \"-Wno-return-type\" }\n \n typedef __SIZE_TYPE__ size_t;\n enum { chunk_size = 16 };"}, {"sha": "932a3a680592e9780e884be59efd3c9a86d39f17", "filename": "gcc/testsuite/g++.dg/template/crash107.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash107.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash107.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash107.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,7 +1,6 @@\n // PR c++/44625\n // { dg-do compile }\n-// { dg-options \"\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \"-Wno-return-type\" }\n \n template<typename FP_> struct Vec { // { dg-message \"note\" \"\" { target c++17_down } }\n     Vec& operator^=(Vec& rhs)     {"}, {"sha": "ef3113711aee57fec5c3f48ac84b953ee49e7e74", "filename": "gcc/testsuite/g++.dg/template/show-template-tree-3.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fshow-template-tree-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fshow-template-tree-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fshow-template-tree-3.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -8,8 +8,7 @@\n    (again, with the \"double\" and \"float\" highlighted, though we can't test\n    for that in this case).  */\n \n-// { dg-options \"-fdiagnostics-show-template-tree\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \"-fdiagnostics-show-template-tree -Wno-return-type\" }\n \n #include <map>\n #include <vector>"}, {"sha": "1a6138bd449a9ec00c0ed88ac3083cbbcee73c37", "filename": "gcc/testsuite/g++.dg/tm/cgraph_edge.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftm%2Fcgraph_edge.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftm%2Fcgraph_edge.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftm%2Fcgraph_edge.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,6 +1,5 @@\n // { dg-do compile }\n-// { dg-options \"-fgnu-tm -O3\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \"-fgnu-tm -O3 -Wno-return-type\" }\n \n template<typename _InputIterator, typename _Distance>  inline void advance(_InputIterator& __i, _Distance __n)\n   {"}, {"sha": "fea70ec7ea54ae5267280d9dc18f589eefc9e90d", "filename": "gcc/testsuite/g++.dg/torture/20141013.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2F20141013.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2F20141013.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2F20141013.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-options \"-fno-short-enums\" } */\n-/* { dg-additional-options \"-Wno-return-type\" } */\n+/* { dg-options \"-fno-short-enums -Wno-return-type\" } */\n enum\n {\n   _sch_isdigit = 0x0004,"}, {"sha": "44f2d5c58ee6de5737f7525568f855b6aea5542e", "filename": "gcc/testsuite/g++.dg/torture/pr34641.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr34641.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr34641.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr34641.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,8 +1,7 @@\n // { dg-do compile }\n // { dg-require-effective-target fpic }\n // { dg-require-visibility \"\" }\n-// { dg-options \"-fPIC\" }\n-/* { dg-additional-options \"-Wno-return-type\" } */\n+// { dg-options \"-fPIC -Wno-return-type\" }\n \n \n typedef __SIZE_TYPE__ size_t;"}, {"sha": "c4d808c5a0d0451b84fc9da55140acaab74ade9e", "filename": "gcc/testsuite/g++.dg/torture/pr34850.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr34850.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr34850.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr34850.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,7 +1,6 @@\n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n-/* { dg-options \"-ffat-lto-objects\" } */\n-/* { dg-additional-options \"-Wno-return-type\" } */\n+/* { dg-options \"-ffat-lto-objects -Wno-return-type\" } */\n \n typedef unsigned char uint8_t;\n typedef unsigned int uint32_t;"}, {"sha": "b1ff2995db924e3e37cb83085ef5b4776a9a7ca7", "filename": "gcc/testsuite/g++.dg/torture/pr36745.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr36745.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr36745.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr36745.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,7 +1,6 @@\n /* PR target/36745 */\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fPIC\" } */\n-/* { dg-additional-options \"-Wno-return-type\" } */\n+/* { dg-options \"-O2 -fPIC -Wno-return-type\" } */\n /* { dg-require-effective-target fpic } */\n \n typedef __SIZE_TYPE__ size_t;"}, {"sha": "f314ebc58211516168db12568b84d0fb1526af3b", "filename": "gcc/testsuite/g++.dg/torture/pr40991.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr40991.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr40991.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr40991.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-options \"-std=gnu++0x\" } */\n-/* { dg-additional-options \"-Wno-return-type\" } */\n+/* { dg-options \"-std=gnu++0x -Wno-return-type\" } */\n \n typedef __SIZE_TYPE__ size_t;\n namespace std __attribute__ ((__visibility__ (\"default\"))) {"}, {"sha": "917814eedbc332b5e8074c137d1574597ab40273", "filename": "gcc/testsuite/g++.dg/torture/pr48271.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr48271.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr48271.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr48271.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,6 +1,5 @@\n // { dg-do compile }\n-// { dg-options \"-ftree-vrp -fno-guess-branch-probability -fnon-call-exceptions\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \"-ftree-vrp -fno-guess-branch-probability -fnon-call-exceptions -Wno-return-type\" }\n \n void *xalloc ();\n void xfree (void *);"}, {"sha": "d84a940ccc5d36887ecf3354ac1dcdb2e6f539e0", "filename": "gcc/testsuite/g++.dg/torture/pr53602.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr53602.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr53602.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr53602.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,6 +1,5 @@\n // { dg-do compile }\n-// { dg-options \"-std=c++11\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \"-std=c++11 -Wno-return-type\" }\n \n namespace std\n {"}, {"sha": "fe0459e3839164a5a10e18f97b0b0db913eec2cd", "filename": "gcc/testsuite/g++.dg/torture/pr53752.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr53752.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr53752.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr53752.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,6 +1,5 @@\n // { dg-do compile }\n-// { dg-options \"-g\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \"-g -Wno-return-type\" }\n \n typedef unsigned int uint32_t;\n typedef unsigned long int uint64_t;"}, {"sha": "63804ba8cbdc1db75fe2e065909629bb070cd0de", "filename": "gcc/testsuite/g++.dg/torture/pr54838.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr54838.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr54838.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr54838.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,6 +1,5 @@\n // { dg-do compile }\n-// { dg-options \"-ftracer -fno-tree-dce -fno-tree-sra\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \"-ftracer -fno-tree-dce -fno-tree-sra -Wno-return-type\" }\n \n struct bidirectional_iterator_tag\n {};"}, {"sha": "0e5529d5b37fcadab9244356e88d5bec1953f37f", "filename": "gcc/testsuite/g++.dg/torture/pr58252.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr58252.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr58252.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr58252.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,6 +1,5 @@\n // { dg-do compile }\n-// { dg-options \"-fpermissive\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \"-fpermissive -Wno-return-type\" }\n typedef long unsigned int size_t;\n        typedef bool _CORBA_Boolean;\n          typedef unsigned int _CORBA_ULong;"}, {"sha": "ca081ca1af87c166123ffb63d301368ed658ba63", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr22444.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr22444.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr22444.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr22444.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -3,8 +3,7 @@\n // to the addressable vars list, because this may cause false aliasing\n // with the subvars leading to the subvars not being renamed when they should\n // { dg-do compile }\n-// { dg-options \"-O2\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \"-O2 -Wno-return-type\" }\n __extension__ typedef __PTRDIFF_TYPE__ ptrdiff_t;\n __extension__ typedef __SIZE_TYPE__ size_t;\n namespace std"}, {"sha": "af8576f7584aff53f7e2011aa747f0d04dce17c8", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr24351-3.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr24351-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr24351-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr24351-3.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2\" } */\n-// { dg-additional-options \"-Wno-return-type\" }\n+/* { dg-options \"-O2 -Wno-return-type\" } */\n namespace sigc {\n     template <class T_type>     struct type_trait     {\n     \ttypedef T_type& pass;"}, {"sha": "78b77f05adf782da2ad411e96e7e74a726d1e11a", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr27283.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr27283.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr27283.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr27283.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2\" } */\n-/* { dg-additional-options \"-Wno-return-type\" } */\n+/* { dg-options \"-O2 -Wno-return-type\" } */\n \n namespace Gambit\n {"}, {"sha": "c5407c5bff6952dadc65264728a9c61f6bac0b4b", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr27291.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr27291.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr27291.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr27291.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2\" } */\n-/* { dg-additional-options \"-Wno-return-type\" } */\n+/* { dg-options \"-O2 -Wno-return-type\" } */\n \n namespace std\n {"}, {"sha": "c5a6fe184d63048f05a8bef876293c4e28a13633", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr27548.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr27548.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr27548.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr27548.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,7 +1,6 @@\n // PR tree-optimization/27548\n // { dg-do compile }\n-// { dg-options \"-O1\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \"-O1 -Wno-return-type\" }\n \n namespace Gambit\n {"}, {"sha": "a05ba4f8d751ac1ba5e792ba261b31e604ab43f5", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr42337.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr42337.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr42337.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr42337.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,7 +1,6 @@\n // PR tree-optimize/42337\n // { dg-do compile }\n-// { dg-options \"-O2\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \"-O2 -Wno-return-type\" }\n \n template<class _T1, class _T2> struct pair {\n   _T2 second;"}, {"sha": "1aae6f4a10649ba479337b496f01299c564ef2b9", "filename": "gcc/testsuite/g++.dg/ubsan/pr65583.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr65583.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr65583.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr65583.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,7 +1,6 @@\n // PR sanitizer/65583\n // { dg-do compile }\n-// { dg-options \"-std=c++11 -fsanitize=undefined\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \"-std=c++11 -fsanitize=undefined -Wno-return-type\" }\n \n namespace std\n {"}, {"sha": "0df2e10ae793a3af2945127291efde3e9859e992", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb27.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb27.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb27.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb27.C?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,6 +1,5 @@\n // { dg-do assemble  }\n-// { dg-options \"-Wno-deprecated\" }\n-// { dg-additional-options \"-Wno-return-type\" }\n+// { dg-options \"-Wno-deprecated -Wno-return-type\" }\n /* bug.cc */\n /* simple program to demonstrate the bug with named return values in gcc\n */"}, {"sha": "762d672014338ab8d3ff95f5e4aa5734965828be", "filename": "gcc/testsuite/gcc.dg/tree-ssa/dse-points-to.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fdse-points-to.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fdse-points-to.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fdse-points-to.c?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fno-tree-ccp -fno-tree-forwprop -fno-tree-fre -fno-tree-vrp\" } */\n-/* { dg-additional-options \"-fdump-tree-dse1-details\" } */\n+/* { dg-options \"-O2 -fno-tree-ccp -fno-tree-forwprop -fno-tree-fre -fno-tree-vrp -fdump-tree-dse1-details\" } */\n \n int\n f ()"}, {"sha": "fa512d905e2d473f596c67cef09fc1791fa30d25", "filename": "gcc/testsuite/gcc.target/arm/simd/vmmla_1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvmmla_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvmmla_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvmmla_1.c?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,7 +1,6 @@\n /* { dg-do assemble } */\n /* { dg-require-effective-target arm_v8_2a_i8mm_ok } */\n-/* { dg-options \"-save-temps -O2\" } */\n-/* { dg-additional-options \"-march=armv8.2-a+i8mm\" } */\n+/* { dg-options \"-save-temps -O2 -march=armv8.2-a+i8mm\" } */\n \n #include \"arm_neon.h\"\n "}, {"sha": "8bd308c83f698aa8b018704ab33617bd8d224623", "filename": "gcc/testsuite/gcc.target/i386/vect-pr67800.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-pr67800.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-pr67800.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-pr67800.c?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-details\" } */\n-/* { dg-additional-options \"-msse4.2\" } */\n+/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-details -msse4.2\" } */\n \n #define ubyte unsigned char\n #define byte char"}, {"sha": "bf22f064288899a6441f85abea574cacb7f31ec7", "filename": "gcc/testsuite/gcc.target/mips/cfgcleanup-jalr2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcfgcleanup-jalr2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcfgcleanup-jalr2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcfgcleanup-jalr2.c?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-mabicalls -fpic -mno-mips16 -mno-micromips\" } */\n-/* { dg-additional-options \"-fno-inline -fipa-ra -mcompact-branches=never\" } */\n+/* { dg-options \"-mabicalls -fpic -mno-mips16 -mno-micromips -fno-inline -fipa-ra -mcompact-branches=never\" } */\n /* { dg-skip-if \"needs codesize optimization\" { *-*-* } { \"-O0\" \"-O1\" \"-O2\" \"-O3\" } { \"\" } } */\n \n static int foo (void* p) { __asm__ (\"\"::\"r\"(p):\"$t0\"); return 0; }"}, {"sha": "805b31af9f085ca83de0d1abd4386620689d068c", "filename": "gcc/testsuite/gcc.target/mips/cfgcleanup-jalr3.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcfgcleanup-jalr3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2148424165849ac9fe413b7a8d7cd198959bebf/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcfgcleanup-jalr3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcfgcleanup-jalr3.c?ref=d2148424165849ac9fe413b7a8d7cd198959bebf", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-mabicalls -fpic -mno-mips16 -mno-micromips\" } */\n-/* { dg-additional-options \"-fno-inline -fipa-ra -mcompact-branches=never\" } */\n+/* { dg-options \"-mabicalls -fpic -mno-mips16 -mno-micromips -fno-inline -fipa-ra -mcompact-branches=never\" } */\n /* { dg-skip-if \"needs codesize optimization\" { *-*-* } { \"-O0\" \"-O1\" \"-O2\" \"-O3\" } { \"\" } } */\n \n static int foo (void* p) { return 0; }"}]}