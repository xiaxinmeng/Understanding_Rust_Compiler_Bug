{"sha": "73fe2f3229f1e1be902ffd09c42b444e5af9e7f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNmZTJmMzIyOWYxZTFiZTkwMmZmZDA5YzQyYjQ0NGU1YWY5ZTdmNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-09-20T07:33:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-09-20T07:33:58Z"}, "message": "re PR tree-optimization/81373 (Graphite ICE in ssa_default_def at gcc/tree-dfa.c:305)\n\n2017-09-20  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/81373\n\t* graphite-scop-detection.c (build_cross_bb_scalars_def):\n\tForce SESE live-out defs to be handled even if they are\n\tscev_analyzable_p.\n\n\t* gcc.dg/graphite/pr81373.c: New testcase.\n\nFrom-SVN: r253000", "tree": {"sha": "d035963e8f29c9b4a3386adeb437f06df9421361", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d035963e8f29c9b4a3386adeb437f06df9421361"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73fe2f3229f1e1be902ffd09c42b444e5af9e7f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73fe2f3229f1e1be902ffd09c42b444e5af9e7f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73fe2f3229f1e1be902ffd09c42b444e5af9e7f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73fe2f3229f1e1be902ffd09c42b444e5af9e7f5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ac9c032e4d7e6350c529707cedda7250b77190cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac9c032e4d7e6350c529707cedda7250b77190cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac9c032e4d7e6350c529707cedda7250b77190cc"}], "stats": {"total": 69, "additions": 62, "deletions": 7}, "files": [{"sha": "a5522e945c701500df46d8911da46a2bf98f4c72", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73fe2f3229f1e1be902ffd09c42b444e5af9e7f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73fe2f3229f1e1be902ffd09c42b444e5af9e7f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=73fe2f3229f1e1be902ffd09c42b444e5af9e7f5", "patch": "@@ -1,3 +1,10 @@\n+2017-09-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/81373\n+\t* graphite-scop-detection.c (build_cross_bb_scalars_def):\n+\tForce SESE live-out defs to be handled even if they are\n+\tscev_analyzable_p.\n+\n 2017-09-19  Jeff Law  <law@redhat.com>\n \n \t* combine-stack-adj.c (combine_stack_adjustments_for_block): Do"}, {"sha": "6fe375e76356977747553e68bc02be1edb8fcacd", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73fe2f3229f1e1be902ffd09c42b444e5af9e7f5/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73fe2f3229f1e1be902ffd09c42b444e5af9e7f5/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=73fe2f3229f1e1be902ffd09c42b444e5af9e7f5", "patch": "@@ -1717,17 +1717,20 @@ build_cross_bb_scalars_def (scop_p scop, tree def, basic_block def_bb,\n   if (!def || !is_gimple_reg (def))\n     return;\n \n-  /* Do not gather scalar variables that can be analyzed by SCEV as they can be\n-     generated out of the induction variables.  */\n-  if (scev_analyzable_p (def, scop->scop_info->region))\n-    return;\n+  bool scev_analyzable = scev_analyzable_p (def, scop->scop_info->region);\n \n   gimple *use_stmt;\n   imm_use_iterator imm_iter;\n   FOR_EACH_IMM_USE_STMT (use_stmt, imm_iter, def)\n-    if ((def_bb != gimple_bb (use_stmt) && !is_gimple_debug (use_stmt))\n-\t/* PHIs have their effect at \"BBs\" on the edges.  See PR79622.  */\n-\t|| gimple_code (SSA_NAME_DEF_STMT (def)) == GIMPLE_PHI)\n+    /* Do not gather scalar variables that can be analyzed by SCEV as they can\n+       be generated out of the induction variables.  */\n+    if ((! scev_analyzable\n+\t /* But gather SESE liveouts as we otherwise fail to rewrite their\n+\t    exit PHIs.  */\n+\t || ! bb_in_sese_p (gimple_bb (use_stmt), scop->scop_info->region))\n+\t&& ((def_bb != gimple_bb (use_stmt) && !is_gimple_debug (use_stmt))\n+\t    /* PHIs have their effect at \"BBs\" on the edges.  See PR79622.  */\n+\t    || gimple_code (SSA_NAME_DEF_STMT (def)) == GIMPLE_PHI))\n       {\n \twrites->safe_push (def);\n \tDEBUG_PRINT (dp << \"Adding scalar write: \";"}, {"sha": "43d0ab30171253dddb16a8b987f0a65c4f79d51e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73fe2f3229f1e1be902ffd09c42b444e5af9e7f5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73fe2f3229f1e1be902ffd09c42b444e5af9e7f5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=73fe2f3229f1e1be902ffd09c42b444e5af9e7f5", "patch": "@@ -1,3 +1,8 @@\n+2017-09-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/81373\n+\t* gcc.dg/graphite/pr81373.c: New testcase.\n+\n 2017-09-19  Jeff Law  <law@redhat.com>\n \n \t* gcc.target/i386/stack-check-11.c: New test."}, {"sha": "588b9d007326f37463512dc1e11234d213660909", "filename": "gcc/testsuite/gcc.dg/graphite/pr81373.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73fe2f3229f1e1be902ffd09c42b444e5af9e7f5/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr81373.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73fe2f3229f1e1be902ffd09c42b444e5af9e7f5/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr81373.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr81373.c?ref=73fe2f3229f1e1be902ffd09c42b444e5af9e7f5", "patch": "@@ -0,0 +1,40 @@\n+/* { dg-options \"-fno-tree-scev-cprop -fgraphite-identity -O -fdump-tree-graphite-all\" } */\n+\n+void bar (void);\n+\n+int toto()\n+{\n+  int i, j, k;\n+  int a[101][100];\n+  int b[100];\n+\n+  for (i = 1; i < 100; i++)\n+    {\n+      for (j = 1; j < 100; j++)\n+\tfor (k = 1; k < 100; k++)\n+\t  a[j][k] = a[j+1][i-1] + 2;\n+\n+      b[i] = b[i-1] + 2;\n+\n+      bar ();\n+\n+      for (j = 1; j < 100; j++)\n+\ta[j][i] = a[j+1][i-1] + 2;\n+\n+      b[i] = b[i-1] + 2;\n+\n+      bar ();\n+\n+      for (j = 1; j < 100; j++)\n+\ta[j][i] = a[j+1][i-1] + 2;\n+\n+      b[i] = a[i-1][i] + 2;\n+\n+      for (j = 1; j < 100; j++)\n+\ta[j][i] = a[j+1][i-1] + 2;\n+    }\n+\n+  return a[3][5] + b[1];\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"number of SCoPs: 2\" 1 \"graphite\"} } */"}]}