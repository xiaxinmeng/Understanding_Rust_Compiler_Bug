{"sha": "82ee0cf2f7e46ef7ebc67fb770587c9a2bbafd3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJlZTBjZjJmN2U0NmVmN2ViYzY3ZmI3NzA1ODdjOWEyYmJhZmQzYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-03-02T20:30:48Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-03-02T20:30:48Z"}, "message": "Minor ChangeLog formatting fixes.\n\nFrom-SVN: r233915", "tree": {"sha": "0f60879e51d33475096c58e0da26867ac4ee932a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f60879e51d33475096c58e0da26867ac4ee932a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82ee0cf2f7e46ef7ebc67fb770587c9a2bbafd3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82ee0cf2f7e46ef7ebc67fb770587c9a2bbafd3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82ee0cf2f7e46ef7ebc67fb770587c9a2bbafd3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82ee0cf2f7e46ef7ebc67fb770587c9a2bbafd3b/comments", "author": null, "committer": null, "parents": [{"sha": "bdfbd086376d3d037f729582e4f0516b39e1c1ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdfbd086376d3d037f729582e4f0516b39e1c1ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdfbd086376d3d037f729582e4f0516b39e1c1ef"}], "stats": {"total": 228, "additions": 114, "deletions": 114}, "files": [{"sha": "a37ecbd97f8d2a732796c6e61a3556c057bd603e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82ee0cf2f7e46ef7ebc67fb770587c9a2bbafd3b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82ee0cf2f7e46ef7ebc67fb770587c9a2bbafd3b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=82ee0cf2f7e46ef7ebc67fb770587c9a2bbafd3b", "patch": "@@ -1,6 +1,6 @@\n-2016-03-02  Manuel Lopez-Ibanez <manu@gcc.gnu.org>\n+2016-03-02  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n-\t* target.def(lra_p): Specify that new ports should use LRA.\n+\t* target.def (lra_p): Specify that new ports should use LRA.\n \n 2016-03-02  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -402,12 +402,12 @@\n \tcomplain about -mallow-movmisalign without -mvsx if\n \tTARGET_ALLOW_MOVMISALIGN was not set explicitly.\n \n-2016-02-26  Joel Sherrill <joel@rtems.org>\n+2016-02-26  Joel Sherrill  <joel@rtems.org>\n \n \t* config.gcc: Add x86_64-*-rtems*.\n \t* gcc/config/i386/rtems-64.h: New file.\n \n-2016-02-26  Joel Sherrill <joel@rtems.org>\n+2016-02-26  Joel Sherrill  <joel@rtems.org>\n \n \t* config.gcc: Add aarch64-*-rtems*.\n \t* gcc/config/aarch64/rtems.h: New file.\n@@ -1743,7 +1743,7 @@\n \t* lto-wrapper.c (append_diag_options): New function.\n \t(compile_offload_image): Call append_diag_options.\n \n-2016-02-08  Sandra Loosemore <sandra@codesourcery.com>\n+2016-02-08  Sandra Loosemore  <sandra@codesourcery.com>\n \n \tPR other/69722\n \t* doc/extend.texi (Flag Output Operands): Correct sectioning.\n@@ -3529,12 +3529,12 @@\n \t(pdr_add_memory_accesses): Same.\n \t(pdr_add_data_dimensions): Same.\n \n-2016-01-20  Sandra Loosemore <sandra@codesourcery.com>\n+2016-01-20  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* doc/invoke.texi (Instrumentation Options): Clarify -mmpx linking\n \trequirements.\n \n-2016-01-20  Sandra Loosemore <sandra@codesourcery.com>\n+2016-01-20  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* common.opt (feliminate-dwarf2-dups): Replace references to\n \t\"DWARF 2\" with just \"DWARF\".\n@@ -3679,7 +3679,7 @@\n \t(gen_typedef_die): Likewise.\n \t(force_type_die): Adjust call to modified_type_die.\n \n-2016-01-19  Sandra Loosemore <sandra@codesourcery.com>\n+2016-01-19  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* doc/standards.texi: Copy-editing for grammar, markup, and sentence\n \tflow throughout the file.  Fix broken link to Objective-C 2.0\n@@ -3843,7 +3843,7 @@\n \n 2016-01-19  Martin Jambor  <mjambor@suse.cz>\n \t    Martin Liska  <mliska@suse.cz>\n-\t    Michael Matz <matz@suse.de>\n+\t    Michael Matz  <matz@suse.de>\n \n \t* Makefile.in (OBJS): Add new source files.\n \t(GTFILES): Add hsa.c.\n@@ -3984,7 +3984,7 @@\n \t* tree-ssanames.c (ssa_name_has_boolean_range): Remove unnecessary\n \ttest.\n \n-2016-01-18  Sandra Loosemore <sandra@codesourcery.com>\n+2016-01-18  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* doc/invoke.texi (Invoking GCC): Add new section to menu.\n \t(Option Summary): Update to reflect new section and moved options.\n@@ -4520,14 +4520,14 @@\n \tuse block_ultimate_origin\n \t(noncall-stmt_may_be_vtbl_ptr_store): Likewise.\n \n-2016-01-13  Sandra Loosemore <sandra@codesourcery.com>\n+2016-01-13  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* doc/invoke.texi (Submodel Options): Rename section to\n \t\"Machine-Dependent Options\" to better reflect its content.\n \tRewrite introductory text to remove archaic CPU names.\n \tUpdate references.\n \n-2016-01-13  Sandra Loosemore <sandra@codesourcery.com>\n+2016-01-13  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* doc/invoke.texi (Code Gen Options): Move section up in file,\n \tbefore target-specific options.  Update menu and option summary"}, {"sha": "32f3efc988bfff818ede40e9fc293a9ae0c7a69e", "filename": "gcc/ChangeLog-2015", "status": "modified", "additions": 56, "deletions": 56, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82ee0cf2f7e46ef7ebc67fb770587c9a2bbafd3b/gcc%2FChangeLog-2015", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82ee0cf2f7e46ef7ebc67fb770587c9a2bbafd3b/gcc%2FChangeLog-2015", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog-2015?ref=82ee0cf2f7e46ef7ebc67fb770587c9a2bbafd3b", "patch": "@@ -324,7 +324,7 @@\n \t* tree-ssa-dom.c: Include dbgcnt.h\n \t(dom_opt_dom_walker::before_dom_children): Handle the new counter.\n \n-2015-12-21  Andrew Pinski <apinski@cavium.com>\n+2015-12-21  Andrew Pinski  <apinski@cavium.com>\n \n \t* config/aarch64/aarch64-option-extensions.def (LSE): Change\n \tFEAT_STRING to \"atomics\".\n@@ -574,7 +574,7 @@\n \t* config/aarch64/aarch64-protos.h (aarch64_mask_from_zextract_ops):\n \tNew prototype.\n \n-2015-12-18 Robin Dapp <rdapp@linux.vnet.ibm.com>\n+2015-12-18  Robin Dapp  <rdapp@linux.vnet.ibm.com>\n \n \t* config/s390/predicates.md: Change and rename\n \tconstm1_operand to all_ones_operand\n@@ -601,7 +601,7 @@\n \t* config/s390/s390.h: Default to z900 in the driver.\n \t* doc/invoke.texi: Document the deprecation of g5 and g6.\n \n-2015-12-18  Andris Pavenis <andris.pavenis@iki.fi>\n+2015-12-18  Andris Pavenis  <andris.pavenis@iki.fi>\n \n \t* config/i386/djgpp-stdint.h: update typedefs for integer types\n \n@@ -1414,7 +1414,7 @@\n \tPR rtl-optimization/68730\n \t* cfgrtl.c (cfg_layout_finalize): Free dominators.\n \n-2015-12-13  Alexandre Oliva <aoliva@redhat.com>\n+2015-12-13  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/67355\n \t* var-tracking.c (reverse_op): Don't add dummy zero to reverse\n@@ -3754,7 +3754,7 @@\n \t* tree-vect-slp.c (vect_get_mask_element): Remove.\n \t(vect_transform_slp_perm_load): Implement in a simpler way.\n \n-2015-11-26  Alexandre Oliva <aoliva@redhat.com>\n+2015-11-26  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR rtl-optimization/67753\n \tPR rtl-optimization/64164\n@@ -3919,7 +3919,7 @@\n \tTREE_READONLY, don't call use_pointer_for_field with non-NULL\n \tsecond argument until we are sure we are keeping OMP_CLAUSE_SHARED.\n \n-2015-11-26  Paolo Bonzini <bonzini@gnu.org>\n+2015-11-26  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* doc/implement-c.texi (Integers Implementation): Make GCC's promises\n \tabout signed left shift stronger and clarify the cases when they're\n@@ -4373,7 +4373,7 @@\n \t(gimple_fold_builtin_memory_op): Don't fold call if we\n \tare going to instrument it and it may copy pointers.\n \n-2015-11-24  Bernd Schmidt <bschmidt@redhat.com>\n+2015-11-24  Bernd Schmidt  <bschmidt@redhat.com>\n \t    Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR rtl-optimization/68194\n@@ -4697,7 +4697,7 @@\n \t* config/nvptx/nvptx.c (nvptx_use_anchors_for_symbol_p): New.\n \t(TARGET_USE_ANCHORS_FOR_SYMBOL_P): Override.\n \n-2015-11-20  Alan Hayward <alan.hayward@arm.com>\n+2015-11-20  Alan Hayward  <alan.hayward@arm.com>\n \n \tPR tree-optimization/68413\n \t* tree-vect-loop.c (vect_analyze_scalar_cycles_1): Cache\n@@ -5575,7 +5575,7 @@\n \t(if_convertible_loop_p_1):  Initialize hash maps and predicates\n \tbefore hashing data references and delete hashmaps at the end.\n \n-2015-11-16  Thomas Preud'homme <thomas.preudhomme@arm.com>\n+2015-11-16  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \tPR 56036\n \t* doc/invoke.texi (Optimize Options): Move @end table to the right\n@@ -5599,7 +5599,7 @@\n \tin the user documentation.\n \t(define_peephole2, define_split): Similarly.\n \n-2015-11-16 Andris Pavenis <andris.pavenis@iki.fi>\n+2015-11-16  Andris Pavenis  <andris.pavenis@iki.fi>\n \n \t* lto-streamer-out.c (write_global_references): Adjust integer type.\n \t(lto_output_decl_state_refs): Likewise.\n@@ -5881,7 +5881,7 @@\n \targument is 1, replace it with GOMP_ordered_* call instead of removing\n \tit.\n \n-2015-11-13  Rich Felker <dalias@libc.org>\n+2015-11-13  Rich Felker  <dalias@libc.org>\n \n \t* config/sh/sh.md (symGOT_load): Suppress __stack_chk_guard\n \taddress loading hack for FDPIC targets.\n@@ -6183,7 +6183,7 @@\n \t* tree-vect-stmts.c (vectorizable_comparison): Provide vectype\n \tfor loop invariants.\n \n-2015-11-13  Alan Hayward <alan.hayward@arm.com>\n+2015-11-13  Alan Hayward  <alan.hayward@arm.com>\n \n \tPR tree-optimization/66558\n \t* tree-vect-loop.c (is_integer_induction):Add.\n@@ -8067,7 +8067,7 @@\n \tthe dominance info; free it if we can't.\n \t(pass_call_cdce::execute): Don't free the dominance info here.\n \n-2015-11-06  Jeff Law <law@redhat.com>\n+2015-11-06  Jeff Law  <law@redhat.com>\n \n \t* tree-ssa-threadedge.c (dummy_simplify): Remove.\n \t(thread_around_empty_blocks): Remove backedge_seen_p argument.\n@@ -8100,7 +8100,7 @@\n \t(build_scop_scattering): Call build_pbb_minimal_scattering_polyhedrons.\n \t(build_poly_scop): Call build_scop_minimal_scattering.\n \n-2015-11-06  Jeff Law <law@redhat.com>\n+2015-11-06  Jeff Law  <law@redhat.com>\n \n \t* cfg-flags.def (IGNORE): New edge flag.\n \t* tree-vrp.c (identify_jump_threads): Mark and clear edges\n@@ -8426,7 +8426,7 @@\n \t* config/i386/i386.c: Include gimple-iterator.h.\n \t* config/aarch64/aarch64.c: Likewise.\n \n-2015-11-06  Alexandre Oliva <aoliva@redhat.com>\n+2015-11-06  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR rtl-optimization/67753\n \tPR rtl-optimization/64164\n@@ -8840,7 +8840,7 @@\n \t* config/aarch64/aarch64.md (*movhf_aarch64): Use\n \taarch64_reg_or_fp_zero for second operand.\n \n-2015-11-03  Alexandre Oliva <aoliva@redhat.com>\n+2015-11-03  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* gimple-expr.c: Include hash-set.h and rtl.h.\n \t(mark_addressable_queue): New var.\n@@ -8852,7 +8852,7 @@\n \t* cfgexpand.c: Include gimple-expr.h.\n \t(pass_expand::execute): Flush mark_addressable queue.\n \n-2015-11-02  Alexandre Oliva <aoliva@redhat.com>\n+2015-11-02  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* tree-ssa-ifcombine.c (tree_ssa_ifcombine_bb_1): Factor out\n \tbb_no_side_effects_p tests...\n@@ -8864,7 +8864,7 @@\n \t* tree-ssa.c (gimple_uses_undefined_value_p): New.\n \t* tree-ssa.h (gimple_uses_undefined_value_p): Declare.\n \n-2015-11-02  Jeff Law <law@redhat.com>\n+2015-11-02  Jeff Law  <law@redhat.com>\n \n \t* tree-ssa-threadupdate.c (valid_jump_thread_path): Also detect\n \tcases where the loop latch edge is in the middle of an FSM path.\n@@ -8928,7 +8928,7 @@\n \tPR middle-end/68166\n \t* fold-const.c: Include \"md5.h\".\n \n-2015-11-01  Jeff Law <law@redhat.com>\n+2015-11-01  Jeff Law  <law@redhat.com>\n \n \t* vmsdbgout.c: Revert unused header file reduction patch.\n \n@@ -8977,7 +8977,7 @@\n \n \t* tree-ssa-structalias.c (ipa_pta_execute): Use make_copy_constraint.\n \n-2015-10-30  Jeff Law <law@redhat.com>\n+2015-10-30  Jeff Law  <law@redhat.com>\n \t    Nathan Sidwell  <nathan@acm.org>\n \n \t* config/nvptx/nvptx.h (HARD_REGNO_NREGS): Avoid warning on unused\n@@ -10523,7 +10523,7 @@\n \t    Joseph Myers  <joseph@codesourcery.com>\n \t    Mark Shinwell  <shinwell@codesourcery.com>\n \t    Andrew Stubbs  <ams@codesourcery.com>\n-\t    Rich Felker <dalias@libc.org>\n+\t    Rich Felker  <dalias@libc.org>\n \n \t* config.gcc: Handle --enable-fdpic.\n \t* config/sh/constraints.md (Ccl): New constraint.\n@@ -10848,7 +10848,7 @@\n \t* match.pd ((A & ~B) - (A & B) -> (A ^ B) - B): Add missing :c.\n \t( (X & ~Y) | (~X & Y) -> X ^ Y): Remove redundant :c.\n \n-2015-10-26  Alan Hayward <alan.hayward@arm.com>\n+2015-10-26  Alan Hayward  <alan.hayward@arm.com>\n \n \t* tree-vect-loop.c (vect_create_epilog_for_reduction): Fix\n \tVEC_COND_EXPR types.\n@@ -11043,7 +11043,7 @@\n \t* tree.c (build_truth_vector_type): Support BLK mode\n \treturned for boolean vector.\n \n-2015-10-23  Alan Hayward <alan.hayward@arm.com>\n+2015-10-23  Alan Hayward  <alan.hayward@arm.com>\n \n \tPR tree-optimization/65947\n \t* tree-vect-loop.c\n@@ -12082,7 +12082,7 @@\n \tempty constructors.\n \n 2015-10-16  Michael Collison  <michael.collison@linaro.org>\n-\t    Andrew Pinski <andrew.pinski@caviumnetworks.com>\n+\t    Andrew Pinski  <andrew.pinski@caviumnetworks.com>\n \n \t* match.pd ((x < y) && (x < z) -> x < min (y,z),\n \t(x > y) and (x > z) -> x > max (y,z))\n@@ -12641,7 +12641,7 @@\n \t(ix86_set_reg_reg_cost): Ditto.\n \t* config/i386/i386.h (HARD_REGNO_NREGS): Ditto.\n \n-2015-10-13  Alexandre Oliva <aoliva@redhat.com>\n+2015-10-13  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR middle-end/67912\n \t* expmed.c (store_bit_field_1): Adjust mode of BLKmode inputs.\n@@ -13037,7 +13037,7 @@\n \t* config/rs6000/rs6000.c (rs6000_offload_options): New.\n \t(TARGET_OFFLOAD_OPTIONS): New.\n \n-2015-10-09  Alexandre Oliva <aoliva@redhat.com>\n+2015-10-09  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR middle-end/67891\n \t* cfgexpand.c (set_parm_rtl): Drop is_gimple_reg test.\n@@ -13927,8 +13927,8 @@\n \t(fold_builtin_hypot, fold_builtin_pow): Likewise.\n \t* match.pd: Likewise.\n \n-2015-10-05 James Greenhalgh <james.greenhalgh@arm.com>\n-\t   Jiong Wang  <jiong.wang@arm.com>\n+2015-10-05  James Greenhalgh  <james.greenhalgh@arm.com>\n+\t    Jiong Wang  <jiong.wang@arm.com>\n \n \t* config/aarch64/aarch64.md (tlsie_tiny_sidi): Replace \"<w>\" with \"w\".\n \n@@ -15087,7 +15087,7 @@\n \tarith_reg_operand for operands[1].  Allow it only when LRA is enabled.\n \t(addsi3_scr, *addsi3): New insn_and_split patterns.\n \n-2015-09-27  Alexandre Oliva <aoliva@redhat.com>\n+2015-09-27  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR rtl-optimization/64164\n \tPR tree-optimization/67312\n@@ -15563,7 +15563,7 @@\n \t'reg + reloc' cases, allow first operand to be non-REG, and use\n \tforce_reg() to enforce address pattern.\n \n-2015-09-22  Alexander Fomin <alexander.fomin@intel.com>\n+2015-09-22  Alexander Fomin  <alexander.fomin@intel.com>\n \n \tPR target/67480\n \t* config/i386/sse.md (define_mode_iterator VI48_AVX_AVX512F): New.\n@@ -17063,7 +17063,7 @@\n \t* config/arc/arc.opt, config/arc/constraints.md: Likewise.\n \t* config/arc/t-arc-newlib: Likewise.\n \n-2015-09-10  Claudiu Zissulescu <claziss@synopsys.com>\n+2015-09-10  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* config/arc/arc.md (length): Fix attribute length for conditional\n \texecuted instructions with long immediate.\n@@ -17750,7 +17750,7 @@\n \n \t* genmodes.c: Add CONST_MODE_UNIT_SIZE modifier.\n \n-2015-09-01  Kyrylo Tkachov <kyrylo.tkachov@arm.com>\n+2015-09-01  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* ifcvt.c (struct noce_if_info): Add then_simple, else_simple,\n \tthen_cost, else_cost fields.  Change branch_cost field to unsigned int.\n@@ -17886,7 +17886,7 @@\n \tadjust_concat.\n \t(dump_swap_insn_table): Handle SH_XXPERMDI and SH_CONCAT.\n \n-2015-08-30  Rich Felker <dalias@libc.org>\n+2015-08-30  Rich Felker  <dalias@libc.org>\n \n \t* config.gcc (supported_defaults): Handle sh[123456ble]*-*-*\n \tcase instead of sh[123456ble]-*-*.\n@@ -18736,7 +18736,7 @@\n \t* config/aarch64/aarch64.c: Remove the last argument to\n \tAARCH64_FUSION_PAIR.\n \n-2015-08-22  Mikhail Maltsev <maltsevm@gmail.com>\n+2015-08-22  Mikhail Maltsev  <maltsevm@gmail.com>\n \n \t* dominance.c (new_zero_array): Define.\n \t(dom_info): Redefine as class with proper encapsulation.\n@@ -20353,7 +20353,7 @@\n \t* toplev.h (toplev::toplev): Replace \"use_TV_TOTAL\" bool param\n \twith \"external_timer\" timer *.\n \n-2015-08-03  Alexander Basov <coohpt@gmail.com>\n+2015-08-03  Alexander Basov  <coohpt@gmail.com>\n \n \tPR middle-end/64744\n \tPR middle-end/48470\n@@ -23087,19 +23087,19 @@\n \titerator to use_stmt.\n \n 2015-07-15  Aditya Kumar  <aditya.k7@samsung.com>\n-\t    Sebastian Pop <s.pop@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n \n \t* graphite-scop-detection.c (build_scops_1): Discard scops for\n \twhich entry==exit.\n \n 2015-07-15  Aditya Kumar  <aditya.k7@samsung.com>\n-\t    Sebastian Pop <s.pop@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n \n \t* graphite-scop-detection.c (stmt_simple_for_scop_p): Bail out in\n \tcase of a return statement in scop.\n \n 2015-07-15  Aditya Kumar  <aditya.k7@samsung.com>\n-\t    Sebastian Pop <s.pop@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n \n \t* graphite-sese-to-poly.c (parameter_index_in_region): Only handle\n \tINTEGER_TYPE parameters.\n@@ -25255,7 +25255,7 @@\n \t* match.pd: Add missing condition to ~X ^ C -> X ^ ~C.\n \n 2015-07-05  Chung-Lin Tang  <cltang@codesourcery.com>\n-\t    Sandra Loosemore <sandra@codesourcery.com>\n+\t    Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* config/nios2/nios2-protos.h (nios2_symbol_ref_in_small_data_p):\n \tDelete extern declaration.\n@@ -25633,13 +25633,13 @@\n \t(X & Y) ^ Y -> ~X & Y transforms to ...\n \t* match.pd: ... here.\n \n-2015-07-01  Richard Biener <rguenther@suse.de>\n+2015-07-01  Richard Biener  <rguenther@suse.de>\n \n \t* genmatch.c (expr::gen_transform): Shortcut re-simplifying\n \tof converts to avoid uninteresting noise from the conversion\n \tsimplifying patterns.\n \n-2015-06-30  Sandra Loosemore <sandra@codesourcery.com>\n+2015-06-30  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* config/c6x/c6x.c (try_rename_operands): Do not depend on\n \tgcc_assert evaluating its argument for side-effect.\n@@ -25982,8 +25982,8 @@\n \tdivision, compute max and min when value ranges for dividend and\n \tdivisor are available.\n \n-2015-06-28  Chung-Lin Tang <cltang@codesourcery.com>\n-\t    Sandra Loosemore <sandra@codesourcery.com>\n+2015-06-28  Chung-Lin Tang  <cltang@codesourcery.com>\n+\t    Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* regrename.h (regrename_do_replace): Change to return bool.\n \t* regrename.c (rename_chains): Check return value of\n@@ -26937,7 +26937,7 @@\n \n \t* tree-vect-slp.c (vect_build_slp_tree_1): Init vectype.\n \n-2015-06-24  Renlin Li <renlin.li@arm.com>\n+2015-06-24  Renlin Li  <renlin.li@arm.com>\n \n \t* config/aarch64/aarch64.h(TARGET_CPU_CPP_BUILTINS): Add\n \t__ARM_ALIGN_MAX_PWR, __ARM_ALIGN_MAX_STACK_PWR.\n@@ -33263,7 +33263,7 @@\n \t\"break\".\n \n 2015-05-12  Chung-Lin Tang  <cltang@codesourcery.com>\n-\t    Sandra Loosemore <sandra@codesourcery.com>\n+\t    Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* config/nios2/nios2.h (enum reg_class): Add IJMP_REGS enum\n \tvalue.\n@@ -34934,7 +34934,7 @@\n \t* configure: Regenerate.\n \t* config.in: Regenerate.\n \n-2015-04-27  Yoshinori Sato <ysato@users.sourceforge.jp>\n+2015-04-27  Yoshinori Sato  <ysato@users.sourceforge.jp>\n \n \t* config.gcc: Add h8300-*-linux.\n \t* config/h8300/linux.h: New.\n@@ -35223,7 +35223,7 @@\n \t(<mask_codefor>avx512f_unpckhpd512<mask_name>): Ditto.\n \n 2015-04-24  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n-\t    Steven Bosscher <steven@gcc.gnu.org>\n+\t    Steven Bosscher  <steven@gcc.gnu.org>\n \n \tPR rtl-optimization/34503\n \t* cprop.c (cprop_reg_p): New.\n@@ -36073,7 +36073,7 @@\n \tRelease symbol_compare_collection.\n \t* ipa-reference.c: Add TODO that a vector should be released.\n \n-2015-04-17  Sivanupandi Pitchumani <Pitchumani.Sivanupandi@atmel.com>\n+2015-04-17  Sivanupandi Pitchumani  <Pitchumani.Sivanupandi@atmel.com>\n \n \tPR target/65296\n \t* config/avr/gen-avr-mmcu-specs.c (*avrlibc_startfile): Adjust\n@@ -39425,7 +39425,7 @@\n \t* omp-low.c (create_omp_child_function): Tag entrypoint\n \tfunctions with a special attribute.\n \n-2015-02-24  Michael Haubenwallner <michael.haubenwallner@ssi-schaefer.com>\n+2015-02-24  Michael Haubenwallner  <michael.haubenwallner@ssi-schaefer.com>\n \n \tPR target/65058\n \t* config/rs6000/xcoff.h (ASM_OUTPUT_EXTERNAL): Drop unused variable.\n@@ -40614,7 +40614,7 @@\n \t* config/rs6000/rs6000.c (chain_already_loaded): New function.\n \t(rs6000_call_aix): Use it.\n \n-2015-02-05  Jan Hubicka <hubicka@ucw.cz>\n+2015-02-05  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-cp.c (ipa_value_from_jfunc, ipa_context_from_jfunc): Add bounds\n \tcheck.\n@@ -40763,7 +40763,7 @@\n \tof manual swapping implementation.\n \t(aarch64_expand_vec_perm_const_1): Likewise.\n \n-2015-02-04  James Greenhalgh <james.greenhalgh@arm.com>\n+2015-02-04  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/aarch64/aarch64.c (NAMED_PARAM): Delete it.\n \t(generic_addrcost_table): Remove NAMED_PARAM.\n@@ -41933,15 +41933,15 @@\n \tdecl attribute.\n \n 2015-01-21  David Sherwood  <david.sherwood@arm.com>\n-\t    Tejas Belagod <Tejas.Belagod@arm.com>\n+\t    Tejas Belagod  <Tejas.Belagod@arm.com>\n \n \t* config/aarch64/aarch64.h (CANNOT_CHANGE_MODE_CLASS): Removed.\n \t* config/aarch64/aarch64.c (aarch64_cannot_change_mode_class): Removed.\n \t* config/aarch64/aarch64-protos.h (aarch64_cannot_change_mode_class):\n \tRemoved.\n \n 2015-01-21  David Sherwood  <david.sherwood@arm.com>\n-\t    Tejas Belagod <Tejas.Belagod@arm.com>\n+\t    Tejas Belagod  <Tejas.Belagod@arm.com>\n \n \t* config/aarch64/aarch64-protos.h (aarch64_simd_attr_length_rglist)\n \t(aarch64_reverse_mask): New decls.\n@@ -42592,7 +42592,7 @@\n \tintroduced in revision 219724.\n \n 2015-01-16  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n-\t    Ramana Radhakrishnan <ramana.radhakrishnan@arm.com>\n+\t    Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n \tPR target/64263\n \t* config/aarch64/aarch64.md (*movsi_aarch64): Don't split if the\n@@ -43555,7 +43555,7 @@\n \tfor MEM_REF access functions with the same base can never partially\n \toverlap.\n \n-2015-01-14  Marcos Diaz <marcos.diaz@tallertechnologies.com>\n+2015-01-14  Marcos Diaz  <marcos.diaz@tallertechnologies.com>\n \n \t* common.opt: New option -fstack-protector-explicit.\n \t* cfgexpand.c (SPCT_FLAG_EXPLICIT): New enum.\n@@ -43741,7 +43741,7 @@\n \tDo not save lr in case of tail call.\n \t* config/arm/thumb2.md (*thumb2_pop_single): New pattern.\n \n-2015-01-14  Martin Uecker <uecker@eecs.berkeley.edu>\n+2015-01-14  Martin Uecker  <uecker@eecs.berkeley.edu>\n \n \t* tree-vrp.c (check_array_ref): Emit more warnings\n \tfor warn_array_bounds >= 2."}, {"sha": "cbfbae2f63e8f3be25193f5b0191183ce9da3831", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82ee0cf2f7e46ef7ebc67fb770587c9a2bbafd3b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82ee0cf2f7e46ef7ebc67fb770587c9a2bbafd3b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=82ee0cf2f7e46ef7ebc67fb770587c9a2bbafd3b", "patch": "@@ -200,7 +200,7 @@\n \tPR fortran/47674\n \t* gfortran.dg/realloc_on_assign_26.f90:  New test case.\n \n-2016-02-28  Harald Anlauf <anlauf@gmx.de>\n+2016-02-28  Harald Anlauf  <anlauf@gmx.de>\n \t    Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/56007\n@@ -2422,7 +2422,7 @@\n \tPR tree-optimization/69170\n \t* gcc.dg/torture/pr69170.c: New testcase.\n \n-2016-01-17 John David Anglin  <danglin@gcc.gnu.org>\n+2016-01-17  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* gcc.dg/torture/builtin-integral-1.c: Require c99_runtime.\n \n@@ -2555,11 +2555,11 @@\n \n \t* gcc.target/i386/pr65105-5.c: New test.\n \n-2016-01-15  Jan Hubicka <hubicka@ucw.cz>\n+2016-01-15  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* gcc.c-torture/execute/alias-4.c: New testcase.\n \n-2016-01-15  Jan Hubicka <hubicka@ucw.cz>\n+2016-01-15  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR ipa/68148\n \t* g++.dg/ipa/devirt-49.C: New testcase."}, {"sha": "17609b92d9ef878fcac4b1d802e67563924c9b13", "filename": "gcc/testsuite/ChangeLog-2015", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82ee0cf2f7e46ef7ebc67fb770587c9a2bbafd3b/gcc%2Ftestsuite%2FChangeLog-2015", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82ee0cf2f7e46ef7ebc67fb770587c9a2bbafd3b/gcc%2Ftestsuite%2FChangeLog-2015", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog-2015?ref=82ee0cf2f7e46ef7ebc67fb770587c9a2bbafd3b", "patch": "@@ -514,7 +514,7 @@\n \t* g++.dg/lookup/pr21802.C: New test.\n \t* g++.dg/lookup/two-stage4.C: Remove XFAIL.\n \n-2015-12-14 Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+2015-12-14  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \t* gfortran.dg/quad_2.f90: Update test.\n \n@@ -785,7 +785,7 @@\n \t* gcc.c-torture/execute/alias-2.c: New testcase.\n \n 2015-12-09  Tobias Burnus  <burnus@net-b.de>\n-\t    Alessandro Fanfarillo <fanfarillo.gcc@gmail.com>\n+\t    Alessandro Fanfarillo  <fanfarillo.gcc@gmail.com>\n \n \t* gfortran.dg/coarray_40.f90: New.\n \n@@ -1347,7 +1347,7 @@\n \t* lib/g++-dg.exp (g++-dg-runtest): Use it.\n \n 2015-12-02  Tobias Burnus  <burnus@net-b.de>\n-\t    Alessandro Fanfarillo <fanfarillo.gcc@gmail.com>\n+\t    Alessandro Fanfarillo  <fanfarillo.gcc@gmail.com>\n \n \t* gfortran.dg/coarray/event_1.f90: New.\n \t* gfortran.dg/coarray/event_2.f90: New.\n@@ -2083,7 +2083,7 @@\n \tPR c++/68087\n \t* g++.dg/cpp0x/constexpr-array13.C: New.\n \n-2015-11-25  Ilmir Usmanov <me@ilmir.us>\n+2015-11-25  Ilmir Usmanov  <me@ilmir.us>\n \t    Cesar Philippidis  <cesar@codesourcery.com>\n \n \tPR fortran/63858\n@@ -2596,7 +2596,7 @@\n \tPR c++/68308\n \t* g++.dg/init/new46.C: New test.\n \n-2015-11-17  Dominique d'Humieres <dominiq@lps.ens.fr>\n+2015-11-17  Dominique d'Humieres  <dominiq@lps.ens.fr>\n \n \tPR fortran/65751\n \t* gfortran.dg/unlimited_polymorphic_2.f03: Update test.\n@@ -2786,12 +2786,12 @@\n \t* g++.dg/vect/simd-bool-comparison-1.cc: New test.\n \t* g++.dg/vect/simd-bool-comparison-2.cc: New test.\n \n-2015-11-13  Dominique d'Humieres <dominiq@lps.ens.fr>\n+2015-11-13  Dominique d'Humieres  <dominiq@lps.ens.fr>\n \n \tPR fortran/47266\n \t* gfortran.dg/module_private_2.f90: New test.\n \n-2015-11-13  Dominique d'Humieres <dominiq@lps.ens.fr>\n+2015-11-13  Dominique d'Humieres  <dominiq@lps.ens.fr>\n \n \tPR fortran/47266\n \t* gfortran.dg/warn_unused_function_2.f90: New test.\n@@ -7096,7 +7096,7 @@\n \n \t* g++.dg/lto/pr68057_0.C: Fix testcase.\n \n-2015-11-08  Joost VandeVondele <vondele@gcc.gnu.org>\n+2015-11-08  Joost VandeVondele  <vondele@gcc.gnu.org>\n \n \t* gfortran.dg/PR67518.f90: move from here...\n \t* gfortran.dg/graphite/PR67518.f90: to here.\n@@ -7179,7 +7179,7 @@\n \n \t* gcc.target/arm/mincmp.c: New test.\n \n-2015-11-06  Dominique d'Humieres <dominiq@lps.ens.fr>\n+2015-11-06  Dominique d'Humieres  <dominiq@lps.ens.fr>\n \n \tPR fortran/54224\n \t* gfortran.dg/warn_unused_function_2.f90: Add two new\n@@ -7440,7 +7440,7 @@\n \tPR c++-common/67882\n \t* c-c++-common/builtin-offsetof-2.c: New test.\n \n-2015-11-03  Dominique d'Humieres <dominiq@lps.ens.fr>\n+2015-11-03  Dominique d'Humieres  <dominiq@lps.ens.fr>\n \n \tPR fortran/67982\n \t* gfortran.dg/warn_unused_function_3.f90: New test.\n@@ -7495,7 +7495,7 @@\n \n \t* g++.dg/ext/mvc1.C: Require ifunc.\n \n-2015-11-02  Alexandre Oliva <aoliva@redhat.com>\n+2015-11-02  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR tree-optimization/68083\n \t* gcc.dg/torture/pr68083.c: New.  From Zhendong Su.\n@@ -7704,7 +7704,7 @@\n \n \t* c-c++-common/goacc/loop-shape.c: New test.\n \n-2015-10-27  Nathan Sidwell <nathan@codesourcery.com>\n+2015-10-27  Nathan Sidwell  <nathan@codesourcery.com>\n \t    Cesar Philippidis  <cesar@codesourcery.com>\n \n \t* g++.dg/gomp/pr33372-1.C: Adjust diagnostic.\n@@ -7953,7 +7953,7 @@\n \t* gcc.dg/torture/pr67736.c: New test.\n \t* gcc.dg/combine-subregs.c: New test.\n \n-2015-10-23  Alan Hayward <alan.hayward@arm.com>\n+2015-10-23  Alan Hayward  <alan.hayward@arm.com>\n \n \tPR tree-optimization/65947\n \t* lib/target-supports.exp\n@@ -8306,7 +8306,7 @@\n \t* g++.dg/cpp1z/fold-ice1.C: New.\n \n 2015-10-16  Michael Collison  <michael.collison@linaro.org>\n-\t    Andrew Pinski <andrew.pinski@caviumnetworks.com>\n+\t    Andrew Pinski  <andrew.pinski@caviumnetworks.com>\n \n \t* gcc.dg/tree-ssa/minmax-loopend.c: New test.\n \n@@ -8521,7 +8521,7 @@\n \t* gcc.dg/ipa/ipa-sra-10.c: New test.\n \t* gcc.dg/torture/pr67794.c: Likewise.\n \n-2015-10-09  Alexandre Oliva <aoliva@redhat.com>\n+2015-10-09  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR rtl-optimization/67828\n \t* gcc.dg/torture/pr67828.c: New.\n@@ -8594,7 +8594,7 @@\n \t* c-c++-common/Wtautological-compare-4.c: New test.\n \n 2015-10-05  Michael Meissner  <meissner@linux.vnet.ibm.com>\n-\t    Peter Bergner <bergner@vnet.ibm.com>\n+\t    Peter Bergner  <bergner@vnet.ibm.com>\n \n \tPR target/67808\n \t* gcc.target/powerpc/pr67808.c: New test.\n@@ -9032,7 +9032,7 @@\n \t* g++.dg/debug/dwarf2/pr44641.C: Revert line number change. Remove\n \tskip on AIX.  XFAIL individual line tests.\n \n-2015-09-27  Alexandre Oliva <aoliva@redhat.com>\n+2015-09-27  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR rtl-optimization/64164\n \tPR tree-optimization/67312\n@@ -9146,7 +9146,7 @@\n \tPR libgcc/67624\n \t* gcc.target/arm/fp16-inf.c: New test.\n \n-2015-09-24  Kirill Yukhin <kirill.yukhin@intel.com>\n+2015-09-24  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n \t* gcc.target/i386/avx512vbmi-check.h (main): Fix register\n \tname while checking for AVX-512VBMI presence.\n@@ -9206,12 +9206,12 @@\n \tPR tree-optimization/67671\n \t* g++.dg/pr67671.C: New test.\n \n-2015-09-22  Alexander Fomin <alexander.fomin@intel.com>\n+2015-09-22  Alexander Fomin  <alexander.fomin@intel.com>\n \n \tPR target/67480\n \t* gcc.target/i386/pr67480.c: New test.\n \n-2015-09-22  Kirill Yukhin <kirill.yukhin@intel.com>\n+2015-09-22  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n \t* gcc.target/i386/funcspec-5.c: Test avx512vl, avx512bw,\n \tavx512dq, avx512cd, avx512er, avx512pf and skylake-avx512.\n@@ -9903,7 +9903,7 @@\n \n 2015-09-04  Andrey Turetskiy  <andrey.turetskiy@intel.com>\n \t    Petr Murzin  <petr.murzin@intel.com>\n-\t    Kirill Yukhin <kirill.yukhin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n \n \t* gcc.target/i386/avx512f-scatter-1.c: New.\n \t* gcc.target/i386/avx512f-scatter-2.c: Ditto.\n@@ -9977,7 +9977,7 @@\n \t* lib/tsan-dg.exp: Likewise.\n \t* lib/ubsan-dg.exp: Likewise.\n \n-2015-09-01  Kenneth Zadeck <zadeck@naturalbridge.com>\n+2015-09-01  Kenneth Zadeck  <zadeck@naturalbridge.com>\n \n \t* gcc.c-torture/execute/ieee/20000320-1.c Fixed misplaced test case.\n \n@@ -10034,7 +10034,7 @@\n \n \t* gcc.dg/vect/no-scevccp-outer-11.c: Don't xfail scan-tree-dump-times.\n \n-2015-09-01  Kyrylo Tkachov <kyrylo.tkachov@arm.com>\n+2015-09-01  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.dg/ifcvt-1.c: New test.\n \t* gcc.dg/ifcvt-2.c: Likewise.\n@@ -10257,7 +10257,7 @@\n \tPR target/67211\n \t* g++.dg/pr67211.C: New test.\n \n-2015-08-24  Louis Krupp <louis.krupp@zoho.com>\n+2015-08-24  Louis Krupp  <louis.krupp@zoho.com>\n \n \tPR fortran/62536\n \tPR fortran/66175\n@@ -11069,7 +11069,7 @@\n \t* jit.dg/test-error-gcc_jit_timer_pop-mismatch.c: New test case.\n \t* jit.dg/test-error-gcc_jit_timer_pop-too-many.c: New test case.\n \n-2015-08-03  Alexander Basov <coohpt@gmail.com>\n+2015-08-03  Alexander Basov  <coohpt@gmail.com>\n \n \tPR middle-end/64744\n \tPR middle-end/48470\n@@ -12424,7 +12424,7 @@\n \t* gcc.dg/vect/pr48052.c: Use dg-require-effective-target vect_int_mult.\n \n 2015-07-05  Chung-Lin Tang  <cltang@codesourcery.com>\n-\t    Sandra Loosemore <sandra@codesourcery.com>\n+\t    Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* gcc.target/nios2/gprel-offset.c: New test.\n \n@@ -14580,7 +14580,7 @@\n \t* lib/target-supports.exp (check_effective_target_pie): Add *-*-freebsd*\n \tto the family of pie capable targets.\n \n-2015-05-18  Alex Velenko <Alex.Velenko@arm.com>\n+2015-05-18  Alex Velenko  <Alex.Velenko@arm.com>\n \n \t* gcc.target/arm/bics_1.c : New testcase.\n \t* gcc.target/arm/bics_2.c : New testcase.\n@@ -14765,7 +14765,7 @@\n \t* c-c++-common/Wmisleading-indentation-2.c: New testcase.\n \t* c-c++-common/Wmisleading-indentation-2.md: New file.\n \n-2015-05-12 Sandra Loosemore <sandra@codesourcery.com>\n+2015-05-12  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* gcc.target/nios2/nios2-trap-insn.c: Expect \"trap\" instead of\n \t\"break\".\n@@ -15332,7 +15332,7 @@\n \tPR tree-optimization/65851\n \t* g++.dg/torture/pr65851.C: New testcase.\n \n-2015-04-27  Jeff Law <law@redhat.com>\n+2015-04-27  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/65217\n \t* gcc.target/i386/pr65217.c: Remove XFAIL.\n@@ -15419,7 +15419,7 @@\n \t* c-c++-common/pr61534-1.c: New test.\n \n 2015-04-24  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n-\t    Steven Bosscher <steven@gcc.gnu.org>\n+\t    Steven Bosscher  <steven@gcc.gnu.org>\n \n \tPR rtl-optimization/34503\n \t* gcc.target/arm/pr64616.c: New file.\n@@ -15583,15 +15583,15 @@\n \tPR rtl-optimization/64818\n \t* gcc.target/arm/pr64818.c: New test.\n \n-2015-04-21 Jan Hubicka  <hubicka@ucw.cz>\n+2015-04-21  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR ipa/65076\n \t* g++.dg/tree-ssa/pr61034.C: Update template.\n \t* g++.dg/warn/Warray-bounds.C: Harden for DSE.\n \t* gcc.dg/Warray-bounds-11.c: Likewise.\n \t* gcc.dg/Warray-bounds.c: Likewise.\n \n-2015-04-21 Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+2015-04-21  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/65234\n \t* gfortran.dg/fmt_unlimited.f90: New test.\n@@ -15608,7 +15608,7 @@\n \t* gcc.target/i386/avx512vbmi-vpermi2b-2.c: Likewise.\n \t* gcc.target/i386/avx512vbmi-vpermt2b-2.c: Likewise.\n \n-2015-04-21 Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+2015-04-21  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/56743\n \t* gfortran.dg/namelist_87.f90: New test.\n@@ -16241,7 +16241,7 @@\n \tPR libgfortran/65563\n \t* gfortran.dg/open_errors_2.f90:  New test.\n \n-2015-03-28 Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+2015-03-28  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/65596\n \t* gfortran.dg/namelist_86.f90: New test.\n@@ -16670,7 +16670,7 @@\n \tPR c++/65340\n \t* g++.dg/cpp1y/pr65340.C: New.\n \n-2015-03-17 Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+2015-03-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/64432\n \t* gfortran.dg/system_clock_3.f08: Adjust test.\n@@ -16681,7 +16681,7 @@\n \t* gfortran.dg/proc_ptr_comp_44.f90: New test.\n \t* gfortran.dg/proc_ptr_comp_45.f90: New test.\n \n-2015-03-16 Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+2015-03-16  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/64432\n \t* gfortran.dg/system_clock_3.f08: New test.\n@@ -17450,7 +17450,7 @@\n \tPR ipa/65236\n \t* g++.dg/ipa/ipa-icf-6.C: New testcase.\n \n-2015-02-27  Pat Haugen <pthaugen@us.ibm.com>\n+2015-02-27  Pat Haugen  <pthaugen@us.ibm.com>\n \n \t* gcc.dg/vect/pr59354.c: Move vector producing code to\n \tseparate function.\n@@ -19523,7 +19523,7 @@\n \t* gcc.dg/tree-ssa/pr61743-1.c: Add -fno-tree-vectorize.\n \t* gcc.dg/tree-ssa/pr61743-2.c: Likewise.\n \n-2015-01-16  Zhenqiang Chen <zhenqiang.chen@arm.com>\n+2015-01-16  Zhenqiang Chen  <zhenqiang.chen@arm.com>\n \n \t* gcc.dg/pr64015.c: New test.\n \n@@ -19761,7 +19761,7 @@\n \t* gcc.dg/tree-ssa/pr61743-1.c: New testcase.\n \t* gcc.dg/tree-ssa/pr61743-2.c: Likewise.\n \n-2015-01-15 Renlin Li <renlin.li@arm.com>\n+2015-01-15  Renlin Li  <renlin.li@arm.com>\n \n \t* gcc.target/aarch64/volatileloadpair-1.c: Correct dg-options.\n \t* gcc.target/aarch64/volatileloadpair-2.c: Likewise.\n@@ -19833,7 +19833,7 @@\n \tPR middle-end/64365\n \t* gcc.dg/torture/pr64365.c: New testcase.\n \n-2015-01-14  Marcos Diaz <marcos.diaz@tallertechnologies.com>\n+2015-01-14  Marcos Diaz  <marcos.diaz@tallertechnologies.com>\n \n \t* gcc.dg/stackprotectexplicit1.c: New test.\n \t* g++.dg/stackprotectexplicit2.c: New test.\n@@ -19942,7 +19942,7 @@\n \t* gcc.dg/vect/pr64493.c: New testcase.\n \t* gcc.dg/vect/pr64495.c: Likewise.\n \n-2015-01-13  Martin Uecker <uecker@eecs.berkeley.edu>\n+2015-01-13  Martin Uecker  <uecker@eecs.berkeley.edu>\n \n \t* gcc.dg/Warray-bounds-11.c: New test-case.\n \n@@ -20417,7 +20417,7 @@\n \t* gcc.dg/tree-ssa/loop-1.c: Likewise.\n \t* gcc.dg/weak/typeof-2.c: Likewise.\n \n-2015-01-05  Radovan Obradovic <radovan.obradovic@imgtec.com>\n+2015-01-05  Radovan Obradovic  <radovan.obradovic@imgtec.com>\n \n \tPR rtl-optimization/64287\n \t* gcc.dg/aru-2.c: New test."}]}