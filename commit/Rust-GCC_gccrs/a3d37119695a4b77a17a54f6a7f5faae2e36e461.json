{"sha": "a3d37119695a4b77a17a54f6a7f5faae2e36e461", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNkMzcxMTk2OTVhNGI3N2ExN2E1NGY2YTdmNWZhYWUyZTM2ZTQ2MQ==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2009-09-08T17:30:31Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2009-09-08T17:30:31Z"}, "message": "sed portability fixes in fixincludes\n\nfixincludes/:\n\tPR testsuite/29737\n\tPR bootstrap/35938\n\tPR testsuite/39655\n\t* check.tpl: Fix typos.\n\t* README: Likewise.  Also, document that 'select' uses ERE.\n\t* mkheaders.in: Update copyright years in --version output.\n\t* inclhack.def (sco_math): Add missing final newline in sed\n\tscript 'a', 'c', or 'i' commands, for BSD sed.\n\t(sco_math): In the text of 'a', 'c', or 'i' sed\n\tcommands, prepend leading white space with a backslash to avoid\n\tthe whitespace to be removed by BSD sed.\n\t(sco_math): Match plain 'C++' instead of 'C\\+\\+' in sed regex.\n\t(x11_new): Fix sed expression, for BSD sed.\n\t(glibc_mutex_init): Fix newlines in sed 's' command replacement\n\tpart, for GNU sed 3.02 and Solaris sed.\n\t(glibc_mutex_init): Replace unportable \\+ sed regex operator\n\twith \\{1,\\}.\n\t(glibc_c99_inline_2, glibc_mutex_init): Avoid unportable sed\n\talternation \\| regex operator.\n\t(solaris_complex): Remove superfluous backslashes from\n\treplacement string.  Replace \\+ operator with \\{1,\\}.\n\t* tests/base/Xm/Traversal.h: This is fixed for BSD sed now.\n\t* fixincl.x: Regenerate.\n\nFrom-SVN: r151518", "tree": {"sha": "4eb6c0e5cef9f80cd8dc2be0ad8ff00541a7fe2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4eb6c0e5cef9f80cd8dc2be0ad8ff00541a7fe2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3d37119695a4b77a17a54f6a7f5faae2e36e461", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3d37119695a4b77a17a54f6a7f5faae2e36e461", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3d37119695a4b77a17a54f6a7f5faae2e36e461", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3d37119695a4b77a17a54f6a7f5faae2e36e461/comments", "author": null, "committer": null, "parents": [{"sha": "fa8023742a963773b871d56836dfbff5df08ae1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa8023742a963773b871d56836dfbff5df08ae1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa8023742a963773b871d56836dfbff5df08ae1c"}], "stats": {"total": 176, "additions": 121, "deletions": 55}, "files": [{"sha": "43c1e7cacb3c254b6d93bfd5369d613a5c3ea179", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3d37119695a4b77a17a54f6a7f5faae2e36e461/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3d37119695a4b77a17a54f6a7f5faae2e36e461/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=a3d37119695a4b77a17a54f6a7f5faae2e36e461", "patch": "@@ -1,3 +1,29 @@\n+2009-09-08  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\tPR testsuite/29737\n+\tPR bootstrap/35938\n+\tPR testsuite/39655\n+\t* check.tpl: Fix typos.\n+\t* README: Likewise.  Also, document that 'select' uses ERE.\n+\t* mkheaders.in: Update copyright years in --version output.\n+\t* inclhack.def (sco_math): Add missing final newline in sed\n+\tscript 'a', 'c', or 'i' commands, for BSD sed.\n+\t(sco_math): In the text of 'a', 'c', or 'i' sed\n+\tcommands, prepend leading white space with a backslash to avoid\n+\tthe whitespace to be removed by BSD sed.\n+\t(sco_math): Match plain 'C++' instead of 'C\\+\\+' in sed regex.\n+\t(x11_new): Fix sed expression, for BSD sed.\n+\t(glibc_mutex_init): Fix newlines in sed 's' command replacement\n+\tpart, for GNU sed 3.02 and Solaris sed.\n+\t(glibc_mutex_init): Replace unportable \\+ sed regex operator\n+\twith \\{1,\\}.\n+\t(glibc_c99_inline_2, glibc_mutex_init): Avoid unportable sed\n+\talternation \\| regex operator.\n+\t(solaris_complex): Remove superfluous backslashes from\n+\treplacement string.  Replace \\+ operator with \\{1,\\}.\n+\t* tests/base/Xm/Traversal.h: This is fixed for BSD sed now.\n+\t* fixincl.x: Regenerate.\n+\n 2009-09-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR libfortran/41169"}, {"sha": "5536a34ec9855720092532c5f8daa7338be47498", "filename": "fixincludes/README", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3d37119695a4b77a17a54f6a7f5faae2e36e461/fixincludes%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3d37119695a4b77a17a54f6a7f5faae2e36e461/fixincludes%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FREADME?ref=a3d37119695a4b77a17a54f6a7f5faae2e36e461", "patch": "@@ -51,7 +51,7 @@ To make your fix, you will need to do several things:\n     the proper functioning of a different fix.  Make sure your\n     fix is properly tested and it does what it is supposed to do.\n \n-6.  Now that you have the right things happening, syncronize the\n+6.  Now that you have the right things happening, synchronize the\n     $(srcdir)/tests/base directory with the $(builddir)/tests/res\n     directory.  The output of \"make check\" will be some diffs that\n     should give you some hints about what to do.\n@@ -82,22 +82,23 @@ MAKING CHANGES TO INCLHACK.DEF\n     and \"c-test\" because they are performed internally:\n \n     * select - Run a regex on the contents of the file being considered.\n-               All such regex-es must match.\n+               All such regex-es must match.  Matching is done with\n+               extended regular expressions.\n \n     * bypass - Run a regex on the contents of the file being considered.\n                No such regex may match.\n \n-    * c-test - call a function in fixtests.c.  See that file.\n+    * c_test - call a function in fixtests.c.  See that file.\n \n     * files  - the \"fnmatch\" pattern of the file(s) to examine for\n                the issue.  There may be several copies of this attribute.\n                If the header lives in a /usr/include subdirectory, be\n                sure to include that subdirectory in the name. e.g. net/if.h\n \n-    * mach   - Match the output of config.conf against a series of fnmatch\n+    * mach   - Match the output of config.guess against a series of fnmatch\n                patterns.  It must match at least one of the patterns, unless\n                \"not-machine\" has also been specified.  In that case, the\n-               config.conf output must not match any of the patterns.\n+               config.guess output must not match any of the patterns.\n \n     The next test is relatively slow because it must be handled in a\n     separate shell process.  Some platforms do not support server shells,\n@@ -113,7 +114,7 @@ MAKING CHANGES TO INCLHACK.DEF\n \n     1.  Be positive for all header files that require the fix.\n \n-    It is desireable to:\n+    It is desirable to:\n \n     2.  Be negative as often as possible whenever the fix is not\n         required, avoiding the process overhead."}, {"sha": "b239d8b5598a4139b91c3af240229456beee8adb", "filename": "fixincludes/check.tpl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3d37119695a4b77a17a54f6a7f5faae2e36e461/fixincludes%2Fcheck.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3d37119695a4b77a17a54f6a7f5faae2e36e461/fixincludes%2Fcheck.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Fcheck.tpl?ref=a3d37119695a4b77a17a54f6a7f5faae2e36e461", "patch": "@@ -1,7 +1,7 @@\n [= autogen5 template sh=check.sh =]\n [=\n #\n-#  This file contanes the shell template to run tests on the fixes\n+#  This file contains the shell template to run tests on the fixes\n #\n =]#!/bin/sh\n "}, {"sha": "21a6ef18b4ea9f074a9a52f5528e8d8ea937a42d", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 42, "deletions": 20, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3d37119695a4b77a17a54f6a7f5faae2e36e461/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3d37119695a4b77a17a54f6a7f5faae2e36e461/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=a3d37119695a4b77a17a54f6a7f5faae2e36e461", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Wednesday September  2, 2009 at 04:57:56 PM MEST\n+ * It has been AutoGen-ed  Tuesday September  8, 2009 at 07:26:10 PM CEST\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Wed Sep  2 16:57:56 MEST 2009\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Di 8. Sep 19:26:11 CEST 2009\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -2644,11 +2644,23 @@ static tTestDesc aGlibc_C99_Inline_2Tests[] = {\n  *  Fix Command Arguments for Glibc_C99_Inline_2\n  */\n static const char* apzGlibc_C99_Inline_2Patch[] = { sed_cmd_z,\n-    \"-e\", \"s/extern int \\\\(stat\\\\|lstat\\\\|fstat\\\\|mknod\\\\)/#ifdef __GNUC_GNU_INLINE__\\\\\\n\\\n+    \"-e\", \"s/extern int \\\\(stat\\\\)/#ifdef __GNUC_GNU_INLINE__\\\\\\n\\\n extern\\\\\\n\\\n #endif\\\\\\n\\\n __inline__ int \\\\1/\",\n-    \"-e\", \"s/extern int __REDIRECT\\\\(_NTH\\\\|\\\\) (\\\\(stat\\\\|lstat\\\\|fstat\\\\)/#ifdef __GNUC_GNU_INLINE__\\\\\\n\\\n+    \"-e\", \"s/extern int \\\\([lf]stat\\\\)/#ifdef __GNUC_GNU_INLINE__\\\\\\n\\\n+extern\\\\\\n\\\n+#endif\\\\\\n\\\n+__inline__ int \\\\1/\",\n+    \"-e\", \"s/extern int \\\\(mknod\\\\)/#ifdef __GNUC_GNU_INLINE__\\\\\\n\\\n+extern\\\\\\n\\\n+#endif\\\\\\n\\\n+__inline__ int \\\\1/\",\n+    \"-e\", \"s/extern int __REDIRECT\\\\(_NTH\\\\)\\\\{0,1\\\\} (\\\\(stat\\\\)/#ifdef __GNUC_GNU_INLINE__\\\\\\n\\\n+extern\\\\\\n\\\n+#endif\\\\\\n\\\n+__inline__ int __REDIRECT\\\\1 (\\\\2/\",\n+    \"-e\", \"s/extern int __REDIRECT\\\\(_NTH\\\\)\\\\{0,1\\\\} (\\\\([lf]stat\\\\)/#ifdef __GNUC_GNU_INLINE__\\\\\\n\\\n extern\\\\\\n\\\n #endif\\\\\\n\\\n __inline__ int __REDIRECT\\\\1 (\\\\2/\",\n@@ -2774,15 +2786,25 @@ static tTestDesc aGlibc_Mutex_InitTests[] = {\n  *  Fix Command Arguments for Glibc_Mutex_Init\n  */\n static const char* apzGlibc_Mutex_InitPatch[] = { sed_cmd_z,\n-    \"-e\", \"/define[ \\t]\\\\+PTHREAD_MUTEX_INITIALIZER[ \\t]*\\\\\\\\/{\\n\\\n+    \"-e\", \"/define[ \\t]\\\\{1,\\\\}PTHREAD_MUTEX_INITIALIZER[ \\t]*\\\\\\\\/{\\n\\\n N\\n\\\n s/{ { 0, } }/{ { 0, 0, 0, 0, 0, 0 } }/\\n\\\n }\",\n-    \"-e\", \"s/{ \\\\(0, 0, 0, 0, PTHREAD_MUTEX_\\\\(RECURSIVE\\\\|ERRORCHECK\\\\|ADAPTIVE\\\\)_NP\\\\) }/{ \\\\1, 0 }/\",\n-    \"-e\", \"s/{ \\\\(0, 0, 0, PTHREAD_MUTEX_\\\\(RECURSIVE\\\\|ERRORCHECK\\\\|ADAPTIVE\\\\)_NP\\\\) }/{ \\\\1, 0, 0 }/\",\n-    \"-e\", \"/define[ \\t]\\\\+PTHREAD_RWLOCK_INITIALIZER[ \\t]*\\\\\\\\/N;s/^[ \\t]*#[ \\t]*\\\\(define[ \\t]\\\\+PTHREAD_RWLOCK_INITIALIZER[ \\t]*\\\\\\\\\\\\)\\\\n[ \\t]*{ { 0, } }/# if __WORDSIZE == 64\\\\n#  \\\\1\\\\n  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }\\\\n# else\\\\n#  \\\\1\\\\n  { { 0, 0, 0, 0, 0, 0, 0, 0 } }\\\\n# endif/\",\n+    \"-e\", \"s/{ \\\\(0, 0, 0, 0, PTHREAD_MUTEX_\\\\(RECURSIVE\\\\)_NP\\\\) }/{ \\\\1, 0 }/\",\n+    \"-e\", \"s/{ \\\\(0, 0, 0, 0, PTHREAD_MUTEX_\\\\(ERRORCHECK\\\\)_NP\\\\) }/{ \\\\1, 0 }/\",\n+    \"-e\", \"s/{ \\\\(0, 0, 0, 0, PTHREAD_MUTEX_\\\\(ADAPTIVE\\\\)_NP\\\\) }/{ \\\\1, 0 }/\",\n+    \"-e\", \"s/{ \\\\(0, 0, 0, PTHREAD_MUTEX_\\\\(RECURSIVE\\\\)_NP\\\\) }/{ \\\\1, 0, 0 }/\",\n+    \"-e\", \"s/{ \\\\(0, 0, 0, PTHREAD_MUTEX_\\\\(ERRORCHECK\\\\)_NP\\\\) }/{ \\\\1, 0, 0 }/\",\n+    \"-e\", \"s/{ \\\\(0, 0, 0, PTHREAD_MUTEX_\\\\(ADAPTIVE\\\\)_NP\\\\) }/{ \\\\1, 0, 0 }/\",\n+    \"-e\", \"/define[ \\t]\\\\{1,\\\\}PTHREAD_RWLOCK_INITIALIZER[ \\t]*\\\\\\\\/N;s/^[ \\t]*#[ \\t]*\\\\(define[ \\t]\\\\{1,\\\\}PTHREAD_RWLOCK_INITIALIZER[ \\t]*\\\\\\\\\\\\)\\\\n[ \\t]*{ { 0, } }/# if __WORDSIZE == 64\\\\\\n\\\n+#  \\\\1\\\\\\n\\\n+  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }\\\\\\n\\\n+# else\\\\\\n\\\n+#  \\\\1\\\\\\n\\\n+  { { 0, 0, 0, 0, 0, 0, 0, 0 } }\\\\\\n\\\n+# endif/\",\n     \"-e\", \"s/{ \\\\(0, 0, 0, 0, 0, 0, PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP\\\\) }/{ \\\\1, 0 }/\",\n-    \"-e\", \"/define[ \\t]\\\\+PTHREAD_COND_INITIALIZER/s/{ { 0, } }/{ { 0, 0, 0, 0, 0, (void *) 0, 0, 0 } }/\",\n+    \"-e\", \"/define[ \\t]\\\\{1,\\\\}PTHREAD_COND_INITIALIZER/s/{ { 0, } }/{ { 0, 0, 0, 0, 0, (void *) 0, 0, 0 } }/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -6165,15 +6187,15 @@ static const char* apzSco_MathPatch[] = { sed_cmd_z,\n     \"-e\", \"/.*__builtin_generic/a\\\\\\n\\\n #else\\\\\\n\\\n #define __fp_class(a) \\\\\\\\\\\\\\n\\\n-  __builtin_choose_expr(__builtin_types_compatible_p(typeof(a),long double),\\\\\\\\\\\\\\n\\\n-   __fpclassifyl(a), \\\\\\\\\\\\\\n\\\n-    __builtin_choose_expr(__builtin_types_compatible_p(typeof(a), float), \\\\\\\\\\\\\\n\\\n-      __fpclassifyf(a),__fpclassify(a)))\\\\\\n\\\n-#endif\",\n-    \"-e\", \"/extern \\\"C\\\\+\\\\+\\\"/N;/inline double abs/i\\\\\\n\\\n+\\\\  __builtin_choose_expr(__builtin_types_compatible_p(typeof(a),long double),\\\\\\\\\\\\\\n\\\n+\\\\   __fpclassifyl(a), \\\\\\\\\\\\\\n\\\n+\\\\    __builtin_choose_expr(__builtin_types_compatible_p(typeof(a), float), \\\\\\\\\\\\\\n\\\n+\\\\      __fpclassifyf(a),__fpclassify(a)))\\\\\\n\\\n+#endif\\n\",\n+    \"-e\", \"/extern \\\"C++\\\"/N;/inline double abs/i\\\\\\n\\\n #ifndef __GNUC__\\n\",\n-    \"-e\", \"/inline long double trunc/N;/inline long double trunc.*}.*extern \\\"C\\\\+\\\\+\\\"/a\\\\\\n\\\n-#endif /* ! __GNUC__ */\",\n+    \"-e\", \"/inline long double trunc/N;/inline long double trunc.*}.*extern \\\"C++\\\"/a\\\\\\n\\\n+#endif /* ! __GNUC__ */\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -6209,10 +6231,10 @@ static tTestDesc aSolaris_ComplexTests[] = {\n  *  Fix Command Arguments for Solaris_Complex\n  */\n static const char* apzSolaris_ComplexPatch[] = { sed_cmd_z,\n-    \"-e\", \"s/#define[ \\t]_Complex_I[ \\t]_Complex_I/#define\\t_Complex_I\\t\\\\(__extension__ 1.0iF\\\\)/\",\n+    \"-e\", \"s/#define[ \\t]_Complex_I[ \\t]_Complex_I/#define\\t_Complex_I\\t(__extension__ 1.0iF)/\",\n     \"-e\", \"/#define[ \\t]_Imaginary_I[ \\t]_Imaginary_I/d\",\n     \"-e\", \"/#define[ \\t]imaginary[ \\t]_Imaginary/d\",\n-    \"-e\", \"s/#define[ \\t]I[ \\t]\\\\+_Imaginary_I/#define\\tI\\t\\t_Complex_I/\",\n+    \"-e\", \"s/#define[ \\t]I[ \\t]\\\\{1,\\\\}_Imaginary_I/#define\\tI\\t\\t_Complex_I/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -8331,7 +8353,7 @@ static tTestDesc aX11_NewTests[] = {\n static const char* apzX11_NewPatch[] = { sed_cmd_z,\n     \"-e\", \"/Widget\\told, new;/i\\\\\\n\\\n #ifdef __cplusplus\\\\\\n\\\n-\\tWidget\\told, c_new;\\\\\\n\\\n+\\\\\\tWidget\\told, c_new;\\\\\\n\\\n #else\\n\",\n     \"-e\", \"/Widget\\told, new;/a\\\\\\n\\\n #endif\\n\","}, {"sha": "0d2602df6f9866ef56f98e6f29f8c24bd1bd49b9", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 43, "deletions": 26, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3d37119695a4b77a17a54f6a7f5faae2e36e461/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3d37119695a4b77a17a54f6a7f5faae2e36e461/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=a3d37119695a4b77a17a54f6a7f5faae2e36e461", "patch": "@@ -1451,10 +1451,19 @@ fix = {\n     hackname  = glibc_c99_inline_2;\n     files     = sys/stat.h, '*/sys/stat.h';\n     select    = \"extern __inline__ int\";\n-    sed     = \"s/extern int \\\\(stat\\\\|lstat\\\\|fstat\\\\|mknod\\\\)/\"\n+    sed     = \"s/extern int \\\\(stat\\\\)/\"\n               \"#ifdef __GNUC_GNU_INLINE__\\\\\\nextern\\\\\\n#endif\\\\\\n\"\n               \"__inline__ int \\\\1/\";\n-    sed     = \"s/extern int __REDIRECT\\\\(_NTH\\\\|\\\\) (\\\\(stat\\\\|lstat\\\\|fstat\\\\)/\"\n+    sed     = \"s/extern int \\\\([lf]stat\\\\)/\"\n+              \"#ifdef __GNUC_GNU_INLINE__\\\\\\nextern\\\\\\n#endif\\\\\\n\"\n+              \"__inline__ int \\\\1/\";\n+    sed     = \"s/extern int \\\\(mknod\\\\)/\"\n+              \"#ifdef __GNUC_GNU_INLINE__\\\\\\nextern\\\\\\n#endif\\\\\\n\"\n+              \"__inline__ int \\\\1/\";\n+    sed     = \"s/extern int __REDIRECT\\\\(_NTH\\\\)\\\\{0,1\\\\} (\\\\(stat\\\\)/\"\n+              \"#ifdef __GNUC_GNU_INLINE__\\\\\\nextern\\\\\\n#endif\\\\\\n\"\n+              \"__inline__ int __REDIRECT\\\\1 (\\\\2/\";\n+    sed     = \"s/extern int __REDIRECT\\\\(_NTH\\\\)\\\\{0,1\\\\} (\\\\([lf]stat\\\\)/\"\n               \"#ifdef __GNUC_GNU_INLINE__\\\\\\nextern\\\\\\n#endif\\\\\\n\"\n               \"__inline__ int __REDIRECT\\\\1 (\\\\2/\";\n     sed     = \"s/^extern __inline__ int/\"\n@@ -1509,25 +1518,33 @@ fix = {\n     hackname = glibc_mutex_init;\n     files    = pthread.h;\n     select   = '\\{ *\\{ *0, *\\} *\\}';\n-    sed      = \"/define[ \\t]\\\\+PTHREAD_MUTEX_INITIALIZER[ \\t]*\\\\\\\\/{\\n\"\n+    sed      = \"/define[ \\t]\\\\{1,\\\\}PTHREAD_MUTEX_INITIALIZER[ \\t]*\\\\\\\\/{\\n\"\n                \"N\\ns/{ { 0, } }/{ { 0, 0, 0, 0, 0, 0 } }/\\n}\";\n     sed      = \"s/{ \\\\(0, 0, 0, 0, PTHREAD_MUTEX_\"\n-               \"\\\\(RECURSIVE\\\\|ERRORCHECK\\\\|ADAPTIVE\\\\)_NP\\\\) }/{ \\\\1, 0 }/\";\n+               \"\\\\(RECURSIVE\\\\)_NP\\\\) }/{ \\\\1, 0 }/\";\n+    sed      = \"s/{ \\\\(0, 0, 0, 0, PTHREAD_MUTEX_\"\n+               \"\\\\(ERRORCHECK\\\\)_NP\\\\) }/{ \\\\1, 0 }/\";\n+    sed      = \"s/{ \\\\(0, 0, 0, 0, PTHREAD_MUTEX_\"\n+               \"\\\\(ADAPTIVE\\\\)_NP\\\\) }/{ \\\\1, 0 }/\";\n+    sed      = \"s/{ \\\\(0, 0, 0, PTHREAD_MUTEX_\"\n+               \"\\\\(RECURSIVE\\\\)_NP\\\\) }/{ \\\\1, 0, 0 }/\";\n+    sed      = \"s/{ \\\\(0, 0, 0, PTHREAD_MUTEX_\"\n+               \"\\\\(ERRORCHECK\\\\)_NP\\\\) }/{ \\\\1, 0, 0 }/\";\n     sed      = \"s/{ \\\\(0, 0, 0, PTHREAD_MUTEX_\"\n-               \"\\\\(RECURSIVE\\\\|ERRORCHECK\\\\|ADAPTIVE\\\\)_NP\\\\) }/{ \\\\1, 0, 0 }/\";\n-    sed      = \"/define[ \\t]\\\\+PTHREAD_RWLOCK_INITIALIZER[ \\t]*\\\\\\\\/\"\n+               \"\\\\(ADAPTIVE\\\\)_NP\\\\) }/{ \\\\1, 0, 0 }/\";\n+    sed      = \"/define[ \\t]\\\\{1,\\\\}PTHREAD_RWLOCK_INITIALIZER[ \\t]*\\\\\\\\/\"\n                \"N;s/^[ \\t]*#[ \\t]*\"\n-               \"\\\\(define[ \\t]\\\\+PTHREAD_RWLOCK_INITIALIZER[ \\t]*\\\\\\\\\\\\)\\\\n\"\n-               \"[ \\t]*{ { 0, } }/# if __WORDSIZE == 64\\\\n\"\n-               \"#  \\\\1\\\\n\"\n-               \"  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }\\\\n\"\n-               \"# else\\\\n\"\n-               \"#  \\\\1\\\\n\"\n-               \"  { { 0, 0, 0, 0, 0, 0, 0, 0 } }\\\\n\"\n+               \"\\\\(define[ \\t]\\\\{1,\\\\}PTHREAD_RWLOCK_INITIALIZER[ \\t]*\\\\\\\\\\\\)\\\\n\"\n+               \"[ \\t]*{ { 0, } }/# if __WORDSIZE == 64\\\\\\n\"\n+               \"#  \\\\1\\\\\\n\"\n+               \"  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }\\\\\\n\"\n+               \"# else\\\\\\n\"\n+               \"#  \\\\1\\\\\\n\"\n+               \"  { { 0, 0, 0, 0, 0, 0, 0, 0 } }\\\\\\n\"\n                \"# endif/\";\n     sed      = \"s/{ \\\\(0, 0, 0, 0, 0, 0, \"\n                \"PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP\\\\) }/{ \\\\1, 0 }/\";\n-    sed      = \"/define[ \\t]\\\\+PTHREAD_COND_INITIALIZER/\"\n+    sed      = \"/define[ \\t]\\\\{1,\\\\}PTHREAD_COND_INITIALIZER/\"\n                \"s/{ { 0, } }/{ { 0, 0, 0, 0, 0, (void *) 0, 0, 0 } }/\";\n \n     test_text = <<- _EOText_\n@@ -3222,18 +3239,18 @@ fix = {\n \"/.*__builtin_generic/a\\\\\\n\"\n \"#else\\\\\\n\"\n \"#define __fp_class(a) \\\\\\\\\\\\\\n\"\n-\"  __builtin_choose_expr(__builtin_types_compatible_p(typeof(a),long double),\\\\\\\\\\\\\\n\"\n-\"   __fpclassifyl(a), \\\\\\\\\\\\\\n\"\n-\"    __builtin_choose_expr(__builtin_types_compatible_p(typeof(a), float), \\\\\\\\\\\\\\n\"\n-\"      __fpclassifyf(a),__fpclassify(a)))\\\\\\n\"\n-\"#endif\";\n+\"\\\\  __builtin_choose_expr(__builtin_types_compatible_p(typeof(a),long double),\\\\\\\\\\\\\\n\"\n+\"\\\\   __fpclassifyl(a), \\\\\\\\\\\\\\n\"\n+\"\\\\    __builtin_choose_expr(__builtin_types_compatible_p(typeof(a), float), \\\\\\\\\\\\\\n\"\n+\"\\\\      __fpclassifyf(a),__fpclassify(a)))\\\\\\n\"\n+\"#endif\\n\";\n \n-    sed      = \"/extern \\\"C\\\\+\\\\+\\\"/N;\"\n+    sed      = \"/extern \\\"C++\\\"/N;\"\n \t       \"/inline double abs/i\\\\\\n\"\n                \"#ifndef __GNUC__\\n\";\n     sed      = \"/inline long double trunc/N;\"\n-\t       \"/inline long double trunc.*}.*extern \\\"C\\\\+\\\\+\\\"/a\\\\\\n\"\n-\t       \"#endif /* ! __GNUC__ */\";\n+\t       \"/inline long double trunc.*}.*extern \\\"C++\\\"/a\\\\\\n\"\n+\t       \"#endif /* ! __GNUC__ */\\n\";\n \n     test_text =\n     \"#define __fp_class(a) \\\\\\\\\\n\"\n@@ -3253,10 +3270,10 @@ fix = {\n     files     = complex.h;\n     select    = \"#define[ \\t]_Complex_I[ \\t]_Complex_I\";\n     sed\t      = \"s/#define[ \\t]_Complex_I[ \\t]_Complex_I/\"\n-\t\t\"#define\\t_Complex_I\\t\\\\(__extension__ 1.0iF\\\\)/\";\n+\t\t\"#define\\t_Complex_I\\t(__extension__ 1.0iF)/\";\n     sed\t      = \"/#define[ \\t]_Imaginary_I[ \\t]_Imaginary_I/d\";\n     sed\t      = \"/#define[ \\t]imaginary[ \\t]_Imaginary/d\";\n-    sed       = \"s/#define[ \\t]I[ \\t]\\\\+_Imaginary_I/#define\\tI\\t\\t_Complex_I/\";\n+    sed       = \"s/#define[ \\t]I[ \\t]\\\\{1,\\\\}_Imaginary_I/#define\\tI\\t\\t_Complex_I/\";\n     test_text = \"#define\t_Complex_I\t_Complex_I\\n\"\n     \t\t\"#define\tcomplex\t\t_Complex\\n\"\n \t\t\"#define\t_Imaginary_I\t_Imaginary_I\\n\"\n@@ -4438,7 +4455,7 @@ fix = {\n \n     sed      = \"/Widget\\told, new;/i\\\\\\n\"\n                    \"#ifdef __cplusplus\\\\\\n\"\n-                   \"\\tWidget\\told, c_new;\\\\\\n\"\n+                   \"\\\\\\tWidget\\told, c_new;\\\\\\n\"\n                    \"#else\\n\";\n \n     sed      = \"/Widget\\told, new;/a\\\\\\n\"\n@@ -4447,7 +4464,7 @@ fix = {\n     sed      = \"s/Widget new,/Widget c_new,/g\";\n     test_text =\n     \"struct wedge {\\n\"\n-    \"   Widget\\told, new; /* fixinc check FAILS ON BSD */\\n\"\n+    \"   Widget\\told, new;\\n\"\n     \"};\\nextern Wedged( Widget new, Widget old );\";\n };\n "}, {"sha": "9109b057c536e303edd096d172373e2291928bce", "filename": "fixincludes/mkheaders.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3d37119695a4b77a17a54f6a7f5faae2e36e461/fixincludes%2Fmkheaders.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3d37119695a4b77a17a54f6a7f5faae2e36e461/fixincludes%2Fmkheaders.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Fmkheaders.in?ref=a3d37119695a4b77a17a54f6a7f5faae2e36e461", "patch": "@@ -41,7 +41,7 @@ fi\n \n if [ x$1 = x--version ] ; then\n     echo \"mkheaders (GCC) version $version\"\n-    echo \"Copyright 2002, 2007 Free Software Foundation, Inc.\"\n+    echo \"Copyright 2002, 2007, 2009 Free Software Foundation, Inc.\"\n     echo \"This program is free software; you may redistribute it under the\"\n     echo \"terms of the GNU General Public License.  This program has\"\n     echo \"absolutely no warranty.\""}, {"sha": "2b3cba73fa18fb55bb58c817e115b2ef04c5eb05", "filename": "fixincludes/tests/base/Xm/Traversal.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3d37119695a4b77a17a54f6a7f5faae2e36e461/fixincludes%2Ftests%2Fbase%2FXm%2FTraversal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3d37119695a4b77a17a54f6a7f5faae2e36e461/fixincludes%2Ftests%2Fbase%2FXm%2FTraversal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2FXm%2FTraversal.h?ref=a3d37119695a4b77a17a54f6a7f5faae2e36e461", "patch": "@@ -14,7 +14,7 @@ struct wedge {\n #ifdef __cplusplus\n \tWidget\told, c_new;\n #else\n-   Widget\told, new; /* fixinc check FAILS ON BSD */\n+   Widget\told, new;\n #endif\n };\n extern Wedged( Widget c_new, Widget old );"}]}