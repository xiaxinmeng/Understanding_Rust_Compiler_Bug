{"sha": "f99fce0c53a352c7d1918ad90968480524076243", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk5ZmNlMGM1M2EzNTJjN2QxOTE4YWQ5MDk2ODQ4MDUyNDA3NjI0Mw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2000-08-15T15:14:06Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2000-08-15T15:14:06Z"}, "message": "arm.c (arm_function_ok_for_sibcall): New function.\n\n* arm.c (arm_function_ok_for_sibcall): New function.\n* arm.h (FUNCTION_OK_FOR_SIBCALL): Define.\n* arm.md (call expanders): Don't check here for calls that can't\nbe sibling calls.\n\nFrom-SVN: r35708", "tree": {"sha": "0dcafe121ad1c83227ccc61fe56cb93bb123a1b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dcafe121ad1c83227ccc61fe56cb93bb123a1b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f99fce0c53a352c7d1918ad90968480524076243", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f99fce0c53a352c7d1918ad90968480524076243", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f99fce0c53a352c7d1918ad90968480524076243", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f99fce0c53a352c7d1918ad90968480524076243/comments", "author": null, "committer": null, "parents": [{"sha": "74da3101e564d728a141605cb4f4d0dc99504eaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74da3101e564d728a141605cb4f4d0dc99504eaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74da3101e564d728a141605cb4f4d0dc99504eaa"}], "stats": {"total": 66, "additions": 49, "deletions": 17}, "files": [{"sha": "71c99bc059dbec0fe3f3a00c830997337da5cb82", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99fce0c53a352c7d1918ad90968480524076243/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99fce0c53a352c7d1918ad90968480524076243/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f99fce0c53a352c7d1918ad90968480524076243", "patch": "@@ -1,3 +1,10 @@\n+2000-08-15  Richard Earnshaw <rearnsha@arm.com>\n+\n+\t* arm.c (arm_function_ok_for_sibcall): New function.\n+\t* arm.h (FUNCTION_OK_FOR_SIBCALL): Define.\n+\t* arm.md (call expanders): Don't check here for calls that can't\n+\tbe sibling calls.\n+\n 2000-08-15  Richard Earnshaw <rearnsha@arm.com>\n \n \t* arm.md (splits generating cond_exec): Disable."}, {"sha": "d559d0042a7dde335b6e4c157d2e219303c658f0", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99fce0c53a352c7d1918ad90968480524076243/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99fce0c53a352c7d1918ad90968480524076243/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=f99fce0c53a352c7d1918ad90968480524076243", "patch": "@@ -1830,6 +1830,41 @@ arm_is_longcall_p (sym_ref, call_cookie, call_symbol)\n     || ENCODED_LONG_CALL_ATTR_P (XSTR (sym_ref, 0))\n     || TARGET_LONG_CALLS;\n }\n+\n+/* Return non-zero if it is ok to make a tail-call to DECL.  */\n+int\n+arm_function_ok_for_sibcall (decl)\n+     tree decl;\n+{\n+  int call_type = TARGET_LONG_CALLS ? CALL_LONG : CALL_NORMAL;\n+\n+  /* Never tailcall something for which we have no decl, or if we\n+     are in Thumb mode.  */\n+  if (decl == NULL || TARGET_THUMB)\n+    return 0;\n+\n+  /* Get the calling method.  */\n+  if (lookup_attribute (\"short_call\", TYPE_ATTRIBUTES (TREE_TYPE (decl))))\n+    call_type = CALL_SHORT;\n+  else if (lookup_attribute (\"long_call\", TYPE_ATTRIBUTES (TREE_TYPE (decl))))\n+    call_type = CALL_LONG;\n+\n+  /* Cannot tail-call to long calls, since these are out of range of\n+     a branch instruction.  However, if not compiling PIC, we know\n+     we can reach the symbol if it is in this compilation unit.  */\n+  if (call_type == CALL_LONG && (flag_pic || ! TREE_ASM_WRITTEN (decl)))\n+    return 0;\n+\n+  /* If we are interworking and the function is not declared static\n+     then we can't tail-call it unless we know that it exists in this \n+     compilation unit (since it might be a Thumb routine).  */\n+  if (TARGET_INTERWORK && TREE_PUBLIC (decl) && ! TREE_ASM_WRITTEN (decl))\n+    return 0;\n+\n+  /* Everything else is ok.  */\n+  return 1;\n+}\n+\n \f\n int\n legitimate_pic_operand_p (x)"}, {"sha": "b94e8b4e0b20c02f52551fc12c639cd10c267711", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99fce0c53a352c7d1918ad90968480524076243/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99fce0c53a352c7d1918ad90968480524076243/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=f99fce0c53a352c7d1918ad90968480524076243", "patch": "@@ -1450,6 +1450,13 @@ typedef struct\n #define FUNCTION_ARG_REGNO_P(REGNO)  \\\n   ((REGNO) >= 0 && (REGNO) <= 3)\n \n+\f\n+/* Tail calling.  */\n+\n+/* A C expression that evaluates to true if it is ok to perform a sibling\n+   call to DECL.  */\n+#define FUNCTION_OK_FOR_SIBCALL(DECL) arm_function_ok_for_sibcall ((DECL))\n+\n /* Perform any actions needed for a function that is receiving a variable\n    number of arguments.  CUM is as above.  MODE and TYPE are the mode and type\n    of the current parameter.  PRETEND_SIZE is a variable that should be set to"}, {"sha": "379b308eebcca59b724cfd2e6f5ffc6bdda4a22b", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f99fce0c53a352c7d1918ad90968480524076243/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f99fce0c53a352c7d1918ad90968480524076243/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=f99fce0c53a352c7d1918ad90968480524076243", "patch": "@@ -6265,14 +6265,6 @@\n   {\n     if (operands[2] == NULL_RTX)\n       operands[2] = const0_rtx;\n-\n-    /* If we need to emit a long-call, we can't do it as a sibling call,\n-       so fail over to a normal call.  */\n-    if (arm_is_longcall_p (operands[0], INTVAL (operands[2]), 0))\n-      {\n-\temit_call_insn (gen_call (operands[0], operands[1], operands[2]));\n-\tDONE;\n-      }\n   }\"\n )\n \n@@ -6286,15 +6278,6 @@\n   {\n     if (operands[3] == NULL_RTX)\n       operands[3] = const0_rtx;\n-\n-    /* If we need to emit a long-call, we can't do it as a sibling call,\n-       so fail over to a normal call.  */\n-    if (arm_is_longcall_p (operands[1], INTVAL (operands[3]), 0))\n-      {\n-\temit_call_insn (gen_call_value (operands[0], operands[1], operands[2],\n-\t\t\t\t\toperands[3]));\n-\tDONE;\n-      }\n   }\"\n )\n "}]}