{"sha": "317638a8098ccaf5e154f2e73c79fd14d30a25b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE3NjM4YTgwOThjY2FmNWUxNTRmMmU3M2M3OWZkMTRkMzBhMjViNQ==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2002-05-14T16:16:18Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2002-05-14T16:16:18Z"}, "message": "genautomata.c (transform_3): Add code for transformation `(A,B,...)+C -> A+C,B,...'.\n\n2002-05-14  Vladimir Makarov  <vmakarov@redhat.com>\n\n\t* genautomata.c (transform_3): Add code for transformation\n\t`(A,B,...)+C -> A+C,B,...'.\n\nFrom-SVN: r53459", "tree": {"sha": "bcfeec35ae7c00f88d62fd26a76fea60f5913f8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcfeec35ae7c00f88d62fd26a76fea60f5913f8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/317638a8098ccaf5e154f2e73c79fd14d30a25b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/317638a8098ccaf5e154f2e73c79fd14d30a25b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/317638a8098ccaf5e154f2e73c79fd14d30a25b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/317638a8098ccaf5e154f2e73c79fd14d30a25b5/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "db80834f53cdd93d8ba1af287b7459058a246fbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db80834f53cdd93d8ba1af287b7459058a246fbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db80834f53cdd93d8ba1af287b7459058a246fbf"}], "stats": {"total": 51, "additions": 48, "deletions": 3}, "files": [{"sha": "8ff713550efda2437871c6909b552905609a94e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/317638a8098ccaf5e154f2e73c79fd14d30a25b5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/317638a8098ccaf5e154f2e73c79fd14d30a25b5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=317638a8098ccaf5e154f2e73c79fd14d30a25b5", "patch": "@@ -1,3 +1,8 @@\n+2002-05-14  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\t* genautomata.c (transform_3): Add code for transformation\n+\t`(A,B,...)+C -> A+C,B,...'.\n+\n Tue May 14 12:48:22 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* final.c (end_final): Do not output profile_arcs constructor, when"}, {"sha": "2c7c883b84e8250dd7f2bb51b717746b38661bb7", "filename": "gcc/genautomata.c", "status": "modified", "additions": 43, "deletions": 3, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/317638a8098ccaf5e154f2e73c79fd14d30a25b5/gcc%2Fgenautomata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/317638a8098ccaf5e154f2e73c79fd14d30a25b5/gcc%2Fgenautomata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenautomata.c?ref=317638a8098ccaf5e154f2e73c79fd14d30a25b5", "patch": "@@ -4637,7 +4637,8 @@ transform_2 (regexp)\n \n /* The function makes transformations\n    ...,A|B|...,C,... -> (...,A,C,...)|(...,B,C,...)|...\n-   ...+(A|B|...)+C+... -> (...+A+C+...)|(...+B+C+...)|...  */\n+   ...+(A|B|...)+C+... -> (...+A+C+...)|(...+B+C+...)|...\n+   ...+(A,B,...)+C+... -> (...+A+C+...),B,...  */\n static regexp_t\n transform_3 (regexp)\n      regexp_t regexp;\n@@ -4693,8 +4694,8 @@ transform_3 (regexp)\n     }\n   else if (regexp->mode == rm_allof)\n     {\n-      regexp_t oneof;\n-      int oneof_index;\n+      regexp_t oneof, seq;\n+      int oneof_index, seq_index;\n       regexp_t result;\n       regexp_t allof;\n       int i, j;\n@@ -4739,6 +4740,45 @@ transform_3 (regexp)\n \t  regexp_transformed_p = 1;\n \t  regexp = result;\n \t}\n+      for (i = 0; i < regexp->regexp.allof.regexps_num; i++)\n+\tif (regexp->regexp.allof.regexps [i]->mode == rm_sequence)\n+\t  {\n+\t    seq_index = i;\n+\t    seq = regexp->regexp.allof.regexps [i];\n+\t    break;\n+\t  }\n+      if (i < regexp->regexp.allof.regexps_num)\n+\t{\n+\t  if (seq->regexp.sequence.regexps_num <= 1\n+\t      || regexp->regexp.allof.regexps_num <= 1)\n+\t    abort ();\n+\t  result = create_node (sizeof (struct regexp)\n+\t\t\t\t+ sizeof (regexp_t)\n+\t\t\t\t* (seq->regexp.sequence.regexps_num - 1));\n+\t  result->mode = rm_sequence;\n+\t  result->pos = regexp->pos;\n+\t  result->regexp.sequence.regexps_num\n+\t    = seq->regexp.sequence.regexps_num;\n+\t  allof = create_node (sizeof (struct regexp)\n+\t\t\t       + sizeof (regexp_t)\n+\t\t\t       * (regexp->regexp.allof.regexps_num - 1));\n+\t  allof->mode = rm_allof;\n+\t  allof->pos = regexp->pos;\n+\t  allof->regexp.allof.regexps_num = regexp->regexp.allof.regexps_num;\n+\t  result->regexp.sequence.regexps [0] = allof;\n+\t  for (j = 0; j < allof->regexp.allof.regexps_num; j++)\n+\t    if (j != seq_index)\n+\t      allof->regexp.allof.regexps [j]\n+\t\t= copy_insn_regexp (regexp->regexp.allof.regexps [j]);\n+\t    else\n+\t      allof->regexp.allof.regexps [j]\n+\t\t= copy_insn_regexp (seq->regexp.sequence.regexps [0]);\n+\t  for (i = 1; i < result->regexp.sequence.regexps_num; i++)\n+\t    result->regexp.sequence.regexps [i]\n+\t      = copy_insn_regexp (seq->regexp.sequence.regexps [i]);\n+\t  regexp_transformed_p = 1;\n+\t  regexp = result;\n+\t}\n     }\n   return regexp;\n }"}]}