{"sha": "4b9d48a18cb082703fb192657e424f041e8e0284", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI5ZDQ4YTE4Y2IwODI3MDNmYjE5MjY1N2U0MjRmMDQxZThlMDI4NA==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-11-25T04:31:40Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-11-25T04:31:40Z"}, "message": "tree-scalar-evolution.c (instantiate_scev_bitnot): Renamed instantiate_scev_not.\n\n2009-09-01  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* tree-scalar-evolution.c (instantiate_scev_bitnot): Renamed\n\tinstantiate_scev_not.  Handle NEGATE_EXPR.\n\t(instantiate_scev_r): Handle NEGATE_EXPR.\n\nFrom-SVN: r154539", "tree": {"sha": "236bc0974cad2b229ebebc20e49fd3e9e8c438f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/236bc0974cad2b229ebebc20e49fd3e9e8c438f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b9d48a18cb082703fb192657e424f041e8e0284", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b9d48a18cb082703fb192657e424f041e8e0284", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b9d48a18cb082703fb192657e424f041e8e0284", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b9d48a18cb082703fb192657e424f041e8e0284/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e5dc77f066752ffc52bdce22639c5e8cf5c3e14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e5dc77f066752ffc52bdce22639c5e8cf5c3e14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e5dc77f066752ffc52bdce22639c5e8cf5c3e14"}], "stats": {"total": 39, "additions": 29, "deletions": 10}, "files": [{"sha": "e108c395e9c7e9a9be9f653afab9c0640c51f304", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b9d48a18cb082703fb192657e424f041e8e0284/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b9d48a18cb082703fb192657e424f041e8e0284/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=4b9d48a18cb082703fb192657e424f041e8e0284", "patch": "@@ -1,3 +1,9 @@\n+2009-09-01  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* tree-scalar-evolution.c (instantiate_scev_bitnot): Renamed\n+\tinstantiate_scev_not.  Handle NEGATE_EXPR.\n+\t(instantiate_scev_r): Handle NEGATE_EXPR.\n+\n 2009-09-01  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* tree-scalar-evolution.c (instantiate_scev_1): Renamed"}, {"sha": "41944972cb874b9c83680588cdcf122afe9d621b", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 23, "deletions": 10, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b9d48a18cb082703fb192657e424f041e8e0284/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b9d48a18cb082703fb192657e424f041e8e0284/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=4b9d48a18cb082703fb192657e424f041e8e0284", "patch": "@@ -2341,8 +2341,9 @@ instantiate_scev_convert (basic_block instantiate_below,\n /* Analyze all the parameters of the chrec, between INSTANTIATE_BELOW\n    and EVOLUTION_LOOP, that were left under a symbolic form.\n \n-   CHREC is a BIT_NOT_EXPR expression to be instantiated.\n+   CHREC is a BIT_NOT_EXPR or a NEGATE_EXPR expression to be instantiated.\n    Handle ~X as -1 - X.\n+   Handle -X as -1 * X.\n \n    CACHE is the cache of already instantiated values.\n \n@@ -2354,9 +2355,9 @@ instantiate_scev_convert (basic_block instantiate_below,\n    instantiated, and to stop if it exceeds some limit.  */\n \n static tree\n-instantiate_scev_bitnot (basic_block instantiate_below,\n-\t\t\t struct loop *evolution_loop, tree chrec,\n-\t\t\t bool fold_conversions, htab_t cache, int size_expr)\n+instantiate_scev_not (basic_block instantiate_below,\n+\t\t      struct loop *evolution_loop, tree chrec,\n+\t\t      bool fold_conversions, htab_t cache, int size_expr)\n {\n   tree type = chrec_type (chrec);\n   tree op0 = instantiate_scev_r (instantiate_below, evolution_loop,\n@@ -2368,11 +2369,22 @@ instantiate_scev_bitnot (basic_block instantiate_below,\n   if (TREE_OPERAND (chrec, 0) != op0)\n     {\n       op0 = chrec_convert (type, op0, NULL);\n-      chrec = chrec_fold_minus (type,\n-\t\t\t\tfold_convert (type,\n-\t\t\t\t\t      integer_minus_one_node),\n-\t\t\t\top0);\n+\n+      switch (TREE_CODE (chrec))\n+\t{\n+\tcase BIT_NOT_EXPR:\n+\t  return chrec_fold_minus\n+\t    (type, fold_convert (type, integer_minus_one_node), op0);\n+\n+\tcase NEGATE_EXPR:\n+\t  return chrec_fold_multiply\n+\t    (type, fold_convert (type, integer_minus_one_node), op0);\n+\n+\tdefault:\n+\t  gcc_unreachable ();\n+\t}\n     }\n+\n   return chrec;\n }\n \n@@ -2543,9 +2555,10 @@ instantiate_scev_r (basic_block instantiate_below,\n \t\t\t\t       TREE_TYPE (chrec), TREE_OPERAND (chrec, 0),\n \t\t\t\t       fold_conversions, cache, size_expr);\n \n+    case NEGATE_EXPR:\n     case BIT_NOT_EXPR:\n-      return instantiate_scev_bitnot (instantiate_below, evolution_loop, chrec,\n-\t\t\t\t      fold_conversions, cache, size_expr);\n+      return instantiate_scev_not (instantiate_below, evolution_loop, chrec,\n+\t\t\t\t   fold_conversions, cache, size_expr);\n \n     case SCEV_NOT_KNOWN:\n       return chrec_dont_know;"}]}