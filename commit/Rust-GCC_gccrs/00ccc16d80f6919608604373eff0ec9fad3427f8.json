{"sha": "00ccc16d80f6919608604373eff0ec9fad3427f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBjY2MxNmQ4MGY2OTE5NjA4NjA0MzczZWZmMGVjOWZhZDM0MjdmOA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-07-09T00:27:21Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-07-09T00:27:21Z"}, "message": "configure.in: Check if the assembler supports \".balign\" and \".p2align\" and define...\n\n        * configure.in: Check if the assembler supports \".balign\" and\n        \".p2align\" and define HAVE_GAS_BALIGN_AND_P2ALIGN appropriately.\n        * acconfig.h (HAVE_GAS_BALIGN_AND_P2ALIGN): New tag.\n        * i386/gas.h (ASM_OUTPUT_ALIGN): If the assembler has support for\n        \".balign\" then use it.\n\nFrom-SVN: r21023", "tree": {"sha": "2c11e8768375a58ac458e5a70a031a44a7cd6643", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c11e8768375a58ac458e5a70a031a44a7cd6643"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00ccc16d80f6919608604373eff0ec9fad3427f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00ccc16d80f6919608604373eff0ec9fad3427f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00ccc16d80f6919608604373eff0ec9fad3427f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00ccc16d80f6919608604373eff0ec9fad3427f8/comments", "author": null, "committer": null, "parents": [{"sha": "0841099a974af90ccfd56d290beaeb70b6dcac5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0841099a974af90ccfd56d290beaeb70b6dcac5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0841099a974af90ccfd56d290beaeb70b6dcac5e"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "bc58a67419e9316e2dab66352265bb9ad2e17b80", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00ccc16d80f6919608604373eff0ec9fad3427f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00ccc16d80f6919608604373eff0ec9fad3427f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=00ccc16d80f6919608604373eff0ec9fad3427f8", "patch": "@@ -1,5 +1,11 @@\n Wed Jul  8 21:43:14 1998  Jeffrey A Law  (law@cygnus.com)\n \n+\t* configure.in: Check if the assembler supports \".balign\" and\n+\t\".p2align\" and define HAVE_GAS_BALIGN_AND_P2ALIGN appropriately.\n+\t* acconfig.h (HAVE_GAS_BALIGN_AND_P2ALIGN): New tag.\n+\t* i386/gas.h (ASM_OUTPUT_ALIGN): If the assembler has support for\n+\t\".balign\" then use it.\n+\n \t* print-rtl.c (print_rtx): Revert previous patch.\n \n \t* jump.c (duplicate_loop_exit_test): Do not duplicate the loop exit"}, {"sha": "e1ac38442f0232711ce9eb7e059c427760d4c77e", "filename": "gcc/acconfig.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00ccc16d80f6919608604373eff0ec9fad3427f8/gcc%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00ccc16d80f6919608604373eff0ec9fad3427f8/gcc%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Facconfig.h?ref=00ccc16d80f6919608604373eff0ec9fad3427f8", "patch": "@@ -14,6 +14,9 @@\n    of bytes to skip when using the GAS .p2align command. */\n #undef HAVE_GAS_MAX_SKIP_P2ALIGN\n \n+/* Define if your assembler supports .balign and .p2align.  */\n+#undef HAVE_GAS_BALIGN_AND_P2ALIGN\n+\n /* Define if you have a working <inttypes.h> header file.  */\n #undef HAVE_INTTYPES_H\n "}, {"sha": "52c5cc426c90c827c66a662b1fce0117f90af564", "filename": "gcc/config/i386/gas.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00ccc16d80f6919608604373eff0ec9fad3427f8/gcc%2Fconfig%2Fi386%2Fgas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00ccc16d80f6919608604373eff0ec9fad3427f8/gcc%2Fconfig%2Fi386%2Fgas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgas.h?ref=00ccc16d80f6919608604373eff0ec9fad3427f8", "patch": "@@ -80,7 +80,7 @@ Boston, MA 02111-1307, USA.  */\n    doubt or guess work, and since this file is used for both a.out and other\n    file formats, we use one of them.  */\n \n-#if 0 /* ??? However, not every port uses binutils 2.6 yet.  */\n+#ifdef HAVE_GAS_BALIGN_AND_P2ALIGN \n #undef ASM_OUTPUT_ALIGN\n #define ASM_OUTPUT_ALIGN(FILE,LOG) \\\n   if ((LOG)!=0) fprintf ((FILE), \"\\t.balign %d\\n\", 1<<(LOG))"}, {"sha": "9e59376e0644fd21e92e642a69de73df395e51f0", "filename": "gcc/configure", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00ccc16d80f6919608604373eff0ec9fad3427f8/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00ccc16d80f6919608604373eff0ec9fad3427f8/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=00ccc16d80f6919608604373eff0ec9fad3427f8", "patch": "@@ -5237,6 +5237,15 @@ elif [ -f $srcdir/../gas/configure.in ]; then\n \tdone\n \tgcc_cv_gas_major_version=`expr \"$gcc_cv_gas_version\" : \"VERSION=\\([0-9]*\\)\"`\n \tgcc_cv_gas_minor_version=`expr \"$gcc_cv_gas_version\" : \"VERSION=[0-9]*\\.\\([0-9]*\\)\"`\n+\t# Gas version 2.6 and later support for .balign and .p2align.\n+\t# bytes to skip when using .p2align.\n+\tif [ \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 6 -o \"$gcc_cv_gas_major_version\" -gt 2 ]; then\n+\t\tgcc_cv_as_alignment_features=\".balign and .p2align\"\n+\t\tcat >> confdefs.h <<\\EOF\n+#define HAVE_GAS_BALIGN_AND_P2ALIGN 1\n+EOF\n+\n+\tfi\n \t# Gas version 2.8 and later support specifying the maximum\n \t# bytes to skip when using .p2align.\n \tif [ \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 8 -o \"$gcc_cv_gas_major_version\" -gt 2 ]; then\n@@ -5251,6 +5260,17 @@ elif [ x$host = x$target ]; then\n \tgcc_cv_as=as$host_exeext\n fi\n if [ x$gcc_cv_as != x ]; then\n+\t# Check if we have .balign and .p2align\n+\techo \".balign  4\" > conftest.s\n+\techo \".p2align  2\" >> conftest.s\n+\tif $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1; then\n+\t\tgcc_cv_as_alignment_features=\".balign and .p2align\"\n+\t\tcat >> confdefs.h <<\\EOF\n+#define HAVE_GAS_BALIGN_AND_P2ALIGN 1\n+EOF\n+\n+\tfi\n+\trm -f conftest.s conftest.o\n \t# Check if specifying the maximum bytes to skip when\n \t# using .p2align is supported.\n \techo \".p2align 4,,7\" > conftest.s"}, {"sha": "097ca9e19bb894e39e1d595c5e294a2e3d51b52b", "filename": "gcc/configure.in", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00ccc16d80f6919608604373eff0ec9fad3427f8/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00ccc16d80f6919608604373eff0ec9fad3427f8/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=00ccc16d80f6919608604373eff0ec9fad3427f8", "patch": "@@ -3332,6 +3332,12 @@ elif [[ -f $srcdir/../gas/configure.in ]]; then\n \tdone\n \tgcc_cv_gas_major_version=`expr \"$gcc_cv_gas_version\" : \"VERSION=\\([[0-9]]*\\)\"`\n \tgcc_cv_gas_minor_version=`expr \"$gcc_cv_gas_version\" : \"VERSION=[[0-9]]*\\.\\([[0-9]]*\\)\"`\n+\t# Gas version 2.6 and later support for .balign and .p2align.\n+\t# bytes to skip when using .p2align.\n+\tif [[ \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 6 -o \"$gcc_cv_gas_major_version\" -gt 2 ]]; then\n+\t\tgcc_cv_as_alignment_features=\".balign and .p2align\"\n+\t\tAC_DEFINE(HAVE_GAS_BALIGN_AND_P2ALIGN)\n+\tfi\n \t# Gas version 2.8 and later support specifying the maximum\n \t# bytes to skip when using .p2align.\n \tif [[ \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 8 -o \"$gcc_cv_gas_major_version\" -gt 2 ]]; then\n@@ -3343,6 +3349,14 @@ elif [[ x$host = x$target ]]; then\n \tgcc_cv_as=as$host_exeext\n fi\n if [[ x$gcc_cv_as != x ]]; then\n+\t# Check if we have .balign and .p2align\n+\techo \".balign  4\" > conftest.s\n+\techo \".p2align  2\" >> conftest.s\n+\tif $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1; then\n+\t\tgcc_cv_as_alignment_features=\".balign and .p2align\"\n+\t\tAC_DEFINE(HAVE_GAS_BALIGN_AND_P2ALIGN)\n+\tfi\n+\trm -f conftest.s conftest.o\n \t# Check if specifying the maximum bytes to skip when\n \t# using .p2align is supported.\n \techo \".p2align 4,,7\" > conftest.s"}]}