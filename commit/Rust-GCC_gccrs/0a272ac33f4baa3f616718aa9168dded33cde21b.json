{"sha": "0a272ac33f4baa3f616718aa9168dded33cde21b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGEyNzJhYzMzZjRiYWEzZjYxNjcxOGFhOTE2OGRkZWQzM2NkZTIxYg==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-01-05T22:54:09Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-05-04T09:17:31Z"}, "message": "[Ada] Reject constants of access-to-variable type as function globals\n\ngcc/ada/\n\n\t* sem_prag.adb (Analyze_Global_Item): Take subprogram kind into\n\taccount when accepting or rejecting a constant of an\n\taccess-to-variable type as a global Output/In_Out; do this check\n\tinside an ELSIF branch to avoid unnecessary evaluation of the\n\tsubsequent condition.", "tree": {"sha": "5140966992e83a3f5e87a246a041b9d6dac6dd8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5140966992e83a3f5e87a246a041b9d6dac6dd8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a272ac33f4baa3f616718aa9168dded33cde21b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a272ac33f4baa3f616718aa9168dded33cde21b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a272ac33f4baa3f616718aa9168dded33cde21b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a272ac33f4baa3f616718aa9168dded33cde21b/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43758c2cffeaa2eddd46ead7224a3dda24cab48f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43758c2cffeaa2eddd46ead7224a3dda24cab48f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43758c2cffeaa2eddd46ead7224a3dda24cab48f"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "e1752060045b65bc0e5ac199147204b638a70319", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 22, "deletions": 8, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a272ac33f4baa3f616718aa9168dded33cde21b/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a272ac33f4baa3f616718aa9168dded33cde21b/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=0a272ac33f4baa3f616718aa9168dded33cde21b", "patch": "@@ -2450,17 +2450,31 @@ package body Sem_Prag is\n \n                --  Constant related checks\n \n-               elsif Ekind (Item_Id) = E_Constant\n-                 and then not Is_Access_Type (Etype (Item_Id))\n-               then\n+               elsif Ekind (Item_Id) = E_Constant then\n \n-                  --  Unless it is of an access type, a constant is a read-only\n-                  --  item, therefore it cannot act as an output.\n+                  --  Constant is a read-only item, therefore it cannot act as\n+                  --  an output.\n \n                   if Global_Mode in Name_In_Out | Name_Output then\n-                     SPARK_Msg_NE\n-                       (\"constant & cannot act as output\", Item, Item_Id);\n-                     return;\n+\n+                     --  Constant of a access-to-variable type is a read-write\n+                     --  item in procedures, generic procedures, protected\n+                     --  entries and tasks.\n+\n+                     if Is_Access_Variable (Etype (Item_Id))\n+                       and then (Ekind (Spec_Id) in E_Entry\n+                                                  | E_Entry_Family\n+                                                  | E_Procedure\n+                                                  | E_Generic_Procedure\n+                                                  | E_Task_Type\n+                                 or else Is_Single_Task_Object (Spec_Id))\n+                     then\n+                        null;\n+                     else\n+                        SPARK_Msg_NE\n+                          (\"constant & cannot act as output\", Item, Item_Id);\n+                        return;\n+                     end if;\n                   end if;\n \n                --  Loop parameter related checks"}]}