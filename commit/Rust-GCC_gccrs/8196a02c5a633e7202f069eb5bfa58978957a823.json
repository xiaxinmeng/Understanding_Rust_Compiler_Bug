{"sha": "8196a02c5a633e7202f069eb5bfa58978957a823", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE5NmEwMmM1YTYzM2U3MjAyZjA2OWViNWJmYTU4OTc4OTU3YTgyMw==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2008-04-25T23:25:26Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2008-04-25T23:25:26Z"}, "message": "mingw32.h (SUBTARGET_INIT_BUILTINS): New.\n\n2008-04-25  Kai Tietz  <kai.tietz@onevision.com>\n\n\t* config/i386/mingw32.h (SUBTARGET_INIT_BUILTINS): New.\n\t* config/i386/i386.c (ix86_init_builtins): Use of\n\tSUBTARGET_INIT_BUILTINS.\n\nFrom-SVN: r134683", "tree": {"sha": "2552f862fb9d6690b39263df9be7913780be6b18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2552f862fb9d6690b39263df9be7913780be6b18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8196a02c5a633e7202f069eb5bfa58978957a823", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8196a02c5a633e7202f069eb5bfa58978957a823", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8196a02c5a633e7202f069eb5bfa58978957a823", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8196a02c5a633e7202f069eb5bfa58978957a823/comments", "author": null, "committer": null, "parents": [{"sha": "e3b5732b21547a1473879859cf26435f7702be4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3b5732b21547a1473879859cf26435f7702be4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3b5732b21547a1473879859cf26435f7702be4a"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "1e546d5164da8b2d1068489fb3b4d221967ad243", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8196a02c5a633e7202f069eb5bfa58978957a823/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8196a02c5a633e7202f069eb5bfa58978957a823/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8196a02c5a633e7202f069eb5bfa58978957a823", "patch": "@@ -1,3 +1,9 @@\n+2008-04-25  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\t* config/i386/mingw32.h (SUBTARGET_INIT_BUILTINS): New.\n+\t* config/i386/i386.c (ix86_init_builtins): Use of\n+\tSUBTARGET_INIT_BUILTINS.\n+\n 2008-04-25  Jan Hubicka  <jh@suse.cz>\n \n \tPR testsuite/35843"}, {"sha": "1e9776acabb703d5ca3a3ea07b59b90c83a3552f", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8196a02c5a633e7202f069eb5bfa58978957a823/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8196a02c5a633e7202f069eb5bfa58978957a823/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=8196a02c5a633e7202f069eb5bfa58978957a823", "patch": "@@ -19806,6 +19806,10 @@ ix86_init_builtins (void)\n {\n   if (TARGET_MMX)\n     ix86_init_mmx_sse_builtins ();\n+\n+#ifdef SUBTARGET_INIT_BUILTINS\n+  SUBTARGET_INIT_BUILTINS;\n+#endif\n }\n \n /* Errors in the source file can cause expand_expr to return const0_rtx"}, {"sha": "19b57dbecc8d4e1d3cf2f1b18be8d48a5e48751e", "filename": "gcc/config/i386/mingw32.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8196a02c5a633e7202f069eb5bfa58978957a823/gcc%2Fconfig%2Fi386%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8196a02c5a633e7202f069eb5bfa58978957a823/gcc%2Fconfig%2Fi386%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw32.h?ref=8196a02c5a633e7202f069eb5bfa58978957a823", "patch": "@@ -180,6 +180,22 @@ __enable_execute_stack (void *addr)\t\t\t\t\t\\\n #undef ENABLE_EXECUTE_STACK\n #define ENABLE_EXECUTE_STACK MINGW_ENABLE_EXECUTE_STACK\n \n+#define SUBTARGET_INIT_BUILTINS\t\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\\\n+  if (TARGET_64BIT_MS_ABI)\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+\t  /* These builtin functions have a different return\t\\\n+\t     type (intptr_t) on 64-bit MS Windows.  */\t\t\\\n+\t  disable_builtin_function (\"execl\");\t\t\t\\\n+\t  disable_builtin_function (\"execlp\");\t\t\t\\\n+\t  disable_builtin_function (\"execle\");\t\t\t\\\n+\t  disable_builtin_function (\"execv\");\t\t\t\\\n+\t  disable_builtin_function (\"execvp\");\t\t\t\\\n+\t  disable_builtin_function (\"execve\");\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+  /* Second argument of MS scalb is long, not double. */\t\\\n+  disable_builtin_function (\"scalb\");\t\t\t\t\\\n+} while (0)                                                     \\\n \n #ifdef IN_LIBGCC2\n #include <windows.h>"}]}