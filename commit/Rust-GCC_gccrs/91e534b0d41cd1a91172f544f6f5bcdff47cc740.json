{"sha": "91e534b0d41cd1a91172f544f6f5bcdff47cc740", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFlNTM0YjBkNDFjZDFhOTExNzJmNTQ0ZjZmNWJjZGZmNDdjYzc0MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-03-05T22:14:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-03-05T22:14:38Z"}, "message": "PR c++/84708 - ICE with lambda in local class NSDMI.\n\n\t* lambda.c (lambda_expr_this_capture): Handle local class NSDMI\n\tcontext.\n\nFrom-SVN: r258264", "tree": {"sha": "4c17fd35553270c8bf48c90b5dfdab9b94519c51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c17fd35553270c8bf48c90b5dfdab9b94519c51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91e534b0d41cd1a91172f544f6f5bcdff47cc740", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91e534b0d41cd1a91172f544f6f5bcdff47cc740", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91e534b0d41cd1a91172f544f6f5bcdff47cc740", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91e534b0d41cd1a91172f544f6f5bcdff47cc740/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9a25c5ce6e2677ae33ba489bd18335332f5e2560", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a25c5ce6e2677ae33ba489bd18335332f5e2560", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a25c5ce6e2677ae33ba489bd18335332f5e2560"}], "stats": {"total": 51, "additions": 39, "deletions": 12}, "files": [{"sha": "3523b7e09125da38f37f34f40320f63951380bc6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91e534b0d41cd1a91172f544f6f5bcdff47cc740/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91e534b0d41cd1a91172f544f6f5bcdff47cc740/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=91e534b0d41cd1a91172f544f6f5bcdff47cc740", "patch": "@@ -1,3 +1,9 @@\n+2018-03-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/84708 - ICE with lambda in local class NSDMI.\n+\t* lambda.c (lambda_expr_this_capture): Handle local class NSDMI\n+\tcontext.\n+\n 2018-03-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/84684"}, {"sha": "345b210e89c857ec606da0a0395b235f8b23421c", "filename": "gcc/cp/lambda.c", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91e534b0d41cd1a91172f544f6f5bcdff47cc740/gcc%2Fcp%2Flambda.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91e534b0d41cd1a91172f544f6f5bcdff47cc740/gcc%2Fcp%2Flambda.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flambda.c?ref=91e534b0d41cd1a91172f544f6f5bcdff47cc740", "patch": "@@ -757,25 +757,31 @@ lambda_expr_this_capture (tree lambda, bool add_capture_p)\n                                     tlambda,\n                                     lambda_stack);\n \n-\t  if (LAMBDA_EXPR_EXTRA_SCOPE (tlambda)\n-\t      && !COMPLETE_TYPE_P (LAMBDA_EXPR_CLOSURE (tlambda))\n-\t      && TREE_CODE (LAMBDA_EXPR_EXTRA_SCOPE (tlambda)) == FIELD_DECL)\n+\t  tree closure = LAMBDA_EXPR_CLOSURE (tlambda);\n+\t  tree containing_function\n+\t    = decl_function_context (TYPE_NAME (closure));\n+\n+\t  tree ex = LAMBDA_EXPR_EXTRA_SCOPE (tlambda);\n+\t  if (ex && TREE_CODE (ex) == FIELD_DECL)\n \t    {\n-\t      /* In an NSDMI, we don't have a function to look up the decl in,\n-\t\t but the fake 'this' pointer that we're using for parsing is\n-\t\t in scope_chain.  But if the closure is already complete, we're\n-\t         in an instantiation of a generic lambda, and the fake 'this'\n-\t         is gone.  */\n-\t      init = scope_chain->x_current_class_ptr;\n+\t      /* Lambda in an NSDMI.  We don't have a function to look up\n+\t\t 'this' in, but we can find (or rebuild) the fake one from\n+\t\t inject_this_parameter.  */\n+\t      if (!containing_function && !COMPLETE_TYPE_P (closure))\n+\t\t/* If we're parsing a lambda in a non-local class,\n+\t\t   we can find the fake 'this' in scope_chain.  */\n+\t\tinit = scope_chain->x_current_class_ptr;\n+\t      else\n+\t\t/* Otherwise it's either gone or buried in\n+\t\t   function_context_stack, so make another.  */\n+\t\tinit = build_this_parm (NULL_TREE, DECL_CONTEXT (ex),\n+\t\t\t\t\tTYPE_UNQUALIFIED);\n \t      gcc_checking_assert\n \t\t(init && (TREE_TYPE (TREE_TYPE (init))\n \t\t\t  == current_nonlambda_class_type ()));\n \t      break;\n \t    }\n \n-\t  tree closure_decl = TYPE_NAME (LAMBDA_EXPR_CLOSURE (tlambda));\n-\t  tree containing_function = decl_function_context (closure_decl);\n-\n \t  if (containing_function == NULL_TREE)\n \t    /* We ran out of scopes; there's no 'this' to capture.  */\n \t    break;"}, {"sha": "8f41d4e1d3ee9896f8d1c1acf72a9d0b841ba7c8", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-nsdmi9.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91e534b0d41cd1a91172f544f6f5bcdff47cc740/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-nsdmi9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91e534b0d41cd1a91172f544f6f5bcdff47cc740/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-nsdmi9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-nsdmi9.C?ref=91e534b0d41cd1a91172f544f6f5bcdff47cc740", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/84708\n+// { dg-do run { target c++11 } }\n+\n+int main()\n+{\n+  struct Z\n+  {\n+    int i;\n+    int b = ([&] { return i; }());\n+    Z(int i): i(i) {}\n+  } z (42);\n+\n+  if (z.b != 42)\n+    __builtin_abort ();\n+}"}]}