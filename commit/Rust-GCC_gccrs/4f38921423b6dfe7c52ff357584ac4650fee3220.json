{"sha": "4f38921423b6dfe7c52ff357584ac4650fee3220", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGYzODkyMTQyM2I2ZGZlN2M1MmZmMzU3NTg0YWM0NjUwZmVlMzIyMA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-08T22:29:17Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-08T22:29:17Z"}, "message": "(emit_library_call_value): Compute struct_value_size,\n\nand pass it to emit_call_1.\n\nFrom-SVN: r5689", "tree": {"sha": "c21cfed0974e315cff7746336fa85cb37316a692", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c21cfed0974e315cff7746336fa85cb37316a692"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f38921423b6dfe7c52ff357584ac4650fee3220", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f38921423b6dfe7c52ff357584ac4650fee3220", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f38921423b6dfe7c52ff357584ac4650fee3220", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f38921423b6dfe7c52ff357584ac4650fee3220/comments", "author": null, "committer": null, "parents": [{"sha": "f0dbe37245ed4762dbe6ebb7d00c349b4fb91db2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0dbe37245ed4762dbe6ebb7d00c349b4fb91db2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0dbe37245ed4762dbe6ebb7d00c349b4fb91db2"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "620c1b13fc3189e14eaa67dcb4c3ceb2e44f6b06", "filename": "gcc/calls.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f38921423b6dfe7c52ff357584ac4650fee3220/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f38921423b6dfe7c52ff357584ac4650fee3220/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=4f38921423b6dfe7c52ff357584ac4650fee3220", "patch": "@@ -2353,6 +2353,7 @@ emit_library_call_value (va_alist)\n   rtx value;\n   rtx mem_value = 0;\n   int pcc_struct_value = 0;\n+  int struct_value_size = 0;\n   /* library calls are never indirect calls.  */\n   int current_call_is_indirect = 0;\n \n@@ -2376,6 +2377,7 @@ emit_library_call_value (va_alist)\n       if (value == 0)\n \tvalue = gen_reg_rtx (outmode);\n #else /* not PCC_STATIC_STRUCT_RETURN */\n+      struct_value_size = GET_MODE_SIZE (outmode);\n       if (value != 0 && GET_CODE (value) == MEM)\n \tmem_value = value;\n       else\n@@ -2662,7 +2664,8 @@ emit_library_call_value (va_alist)\n   /* We pass the old value of inhibit_defer_pop + 1 to emit_call_1, which\n      will set inhibit_defer_pop to that value.  */\n \n-  emit_call_1 (fun, get_identifier (XSTR (orgfun, 0)), args_size.constant, 0,\n+  emit_call_1 (fun, get_identifier (XSTR (orgfun, 0)), args_size.constant,\n+\t       struct_value_size,\n \t       FUNCTION_ARG (args_so_far, VOIDmode, void_type_node, 1),\n \t       (outmode != VOIDmode && mem_value == 0\n \t\t? hard_libcall_value (outmode) : NULL_RTX),"}]}