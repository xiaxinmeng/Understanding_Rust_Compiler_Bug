{"sha": "c1a969777ff9f9dc0a92b69a261df0232e376009", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFhOTY5Nzc3ZmY5ZjlkYzBhOTJiNjlhMjYxZGYwMjMyZTM3NjAwOQ==", "commit": {"author": {"name": "Tristan Gingold", "email": "gingold@adacore.com", "date": "2012-04-04T08:44:30Z"}, "committer": {"name": "Tristan Gingold", "email": "gingold@gcc.gnu.org", "date": "2012-04-04T08:44:30Z"}, "message": "pex-unix.c (to_ptr32): Fix style.\n\n2012-04-04  Tristan Gingold  <gingold@adacore.com>\n\n\t* pex-unix.c (to_ptr32): Fix style.\n\nFrom-SVN: r186134", "tree": {"sha": "b01f7c969daf835c3d02fb73fa5b4da9e643262d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b01f7c969daf835c3d02fb73fa5b4da9e643262d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1a969777ff9f9dc0a92b69a261df0232e376009", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1a969777ff9f9dc0a92b69a261df0232e376009", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1a969777ff9f9dc0a92b69a261df0232e376009", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1a969777ff9f9dc0a92b69a261df0232e376009/comments", "author": {"login": "gingold-adacore", "id": 16334725, "node_id": "MDQ6VXNlcjE2MzM0NzI1", "avatar_url": "https://avatars.githubusercontent.com/u/16334725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gingold-adacore", "html_url": "https://github.com/gingold-adacore", "followers_url": "https://api.github.com/users/gingold-adacore/followers", "following_url": "https://api.github.com/users/gingold-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/gingold-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/gingold-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gingold-adacore/subscriptions", "organizations_url": "https://api.github.com/users/gingold-adacore/orgs", "repos_url": "https://api.github.com/users/gingold-adacore/repos", "events_url": "https://api.github.com/users/gingold-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/gingold-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9516c54ee3e407b3ca31244da708582082b830b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9516c54ee3e407b3ca31244da708582082b830b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9516c54ee3e407b3ca31244da708582082b830b3"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "4f8bc3f2888c5f734358431361ebbaa822737250", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1a969777ff9f9dc0a92b69a261df0232e376009/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1a969777ff9f9dc0a92b69a261df0232e376009/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=c1a969777ff9f9dc0a92b69a261df0232e376009", "patch": "@@ -1,3 +1,7 @@\n+2012-04-04  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* pex-unix.c (to_ptr32): Fix style.\n+\n 2012-04-02  Tristan Gingold  <gingold@adacore.com>\n \n \t* stack-limit.c: Includes ansidecl.h."}, {"sha": "addf8ee23dfa82bce2a172ce6b40eb15689dd0ca", "filename": "libiberty/pex-unix.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1a969777ff9f9dc0a92b69a261df0232e376009/libiberty%2Fpex-unix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1a969777ff9f9dc0a92b69a261df0232e376009/libiberty%2Fpex-unix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fpex-unix.c?ref=c1a969777ff9f9dc0a92b69a261df0232e376009", "patch": "@@ -85,13 +85,15 @@ to_ptr32 (char **ptr64)\n   int argc;\n   __char_ptr_char_ptr32 short_argv;\n \n-  for (argc=0; ptr64[argc]; argc++);\n+  /* Count number of arguments.  */\n+  for (argc = 0; ptr64[argc] != NULL; argc++)\n+    ;\n \n   /* Reallocate argv with 32 bit pointers.  */\n   short_argv = (__char_ptr_char_ptr32) decc$malloc\n     (sizeof (__char_ptr32) * (argc + 1));\n \n-  for (argc=0; ptr64[argc]; argc++)\n+  for (argc = 0; ptr64[argc] != NULL; argc++)\n     short_argv[argc] = (__char_ptr32) decc$strdup (ptr64[argc]);\n \n   short_argv[argc] = (__char_ptr32) 0;"}]}