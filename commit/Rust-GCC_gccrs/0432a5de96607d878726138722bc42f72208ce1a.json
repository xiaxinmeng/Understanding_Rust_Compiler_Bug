{"sha": "0432a5de96607d878726138722bc42f72208ce1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQzMmE1ZGU5NjYwN2Q4Nzg3MjYxMzg3MjJiYzQyZjcyMjA4Y2UxYQ==", "commit": {"author": {"name": "Mark Kettenis", "email": "kettenis@gnu.org", "date": "2005-10-31T17:52:38Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2005-10-31T17:52:38Z"}, "message": "from  Mark Kettenis  <kettenis@gnu.org>\n\n* floatformat.c (floatformat_vax_aingle, floatformat_vax_double):\nNew variables.\n\n* floatformat.h (enum floatformat_byteorders): Add\nfloatformat_vax.\n(floatformat_vax_aingle, floatformat_vax_double): Declare.\n\nFrom-SVN: r106281", "tree": {"sha": "69274e75c365b78edbbe34b9519e23aa866c0043", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69274e75c365b78edbbe34b9519e23aa866c0043"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0432a5de96607d878726138722bc42f72208ce1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0432a5de96607d878726138722bc42f72208ce1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0432a5de96607d878726138722bc42f72208ce1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0432a5de96607d878726138722bc42f72208ce1a/comments", "author": null, "committer": null, "parents": [{"sha": "44bcbae3665261035df2f60dce491a92b3c841fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44bcbae3665261035df2f60dce491a92b3c841fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44bcbae3665261035df2f60dce491a92b3c841fd"}], "stats": {"total": 54, "additions": 48, "deletions": 6}, "files": [{"sha": "575bcf73db768262bb50624513d4933c521d4cac", "filename": "include/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0432a5de96607d878726138722bc42f72208ce1a/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0432a5de96607d878726138722bc42f72208ce1a/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=0432a5de96607d878726138722bc42f72208ce1a", "patch": "@@ -1,3 +1,9 @@\n+2005-10-31  Mark Kettenis  <kettenis@gnu.org>\n+\n+\t* floatformat.h (enum floatformat_byteorders): Add\n+\tfloatformat_vax.\n+\t(floatformat_vax_aingle, floatformat_vax_double): Declare.\n+\n 2005-09-26  Mark Mitchell  <mark@codesourcery.com>\n \n \t* libiberty.h (expandargv): New function."}, {"sha": "f1bd7f601f536716b1e3cf6e8dc4d1e7dd0e7577", "filename": "include/floatformat.h", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0432a5de96607d878726138722bc42f72208ce1a/include%2Ffloatformat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0432a5de96607d878726138722bc42f72208ce1a/include%2Ffloatformat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Ffloatformat.h?ref=0432a5de96607d878726138722bc42f72208ce1a", "patch": "@@ -29,25 +29,26 @@ Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.\n    (i.e. BITS_BIG_ENDIAN type numbering), and specify which bits each field\n    contains with the *_start and *_len fields.  */\n \n-/* What is the order of the bytes. */\n+/* What is the order of the bytes?  */\n \n enum floatformat_byteorders {\n-\n   /* Standard little endian byte order.\n      EX: 1.2345678e10 => 00 00 80 c5 e0 fe 06 42 */\n-\n   floatformat_little,\n \n   /* Standard big endian byte order.\n      EX: 1.2345678e10 => 42 06 fe e0 c5 80 00 00 */\n-\n   floatformat_big,\n \n   /* Little endian byte order but big endian word order.\n      EX: 1.2345678e10 => e0 fe 06 42 00 00 80 c5 */\n+  floatformat_littlebyte_bigword,\n \n-  floatformat_littlebyte_bigword\n-\n+  /* VAX byte order.  Little endian byte order with 16-bit words.  The\n+     following example is an illustration of the byte order only; VAX\n+     doesn't have a fully IEEE compliant floating-point format.\n+     EX: 1.2345678e10 => 80 c5 00 00 06 42 e0 fe */\n+  floatformat_vax\n };\n \n enum floatformat_intbit { floatformat_intbit_yes, floatformat_intbit_no };\n@@ -97,6 +98,12 @@ extern const struct floatformat floatformat_ieee_double_little;\n \n extern const struct floatformat floatformat_ieee_double_littlebyte_bigword;\n \n+/* floatformats for VAX.  */\n+\n+extern const struct floatformat floatformat_vax_f;\n+extern const struct floatformat floatformat_vax_d;\n+extern const struct floatformat floatformat_vax_g;\n+\n /* floatformats for various extendeds.  */\n \n extern const struct floatformat floatformat_i387_ext;"}, {"sha": "eeae1e3435fe246f8dc54a408991d6a03a777525", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0432a5de96607d878726138722bc42f72208ce1a/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0432a5de96607d878726138722bc42f72208ce1a/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=0432a5de96607d878726138722bc42f72208ce1a", "patch": "@@ -1,3 +1,8 @@\n+2005-10-31  Mark Kettenis  <kettenis@gnu.org>\n+\n+\t* floatformat.c (floatformat_vax_aingle, floatformat_vax_double):\n+\tNew variables.\n+\n 2005-10-07  Mark Mitchell  <mark@codesourcery.com>\n \n \t* at-file.texi: Fix typo."}, {"sha": "28c9fbf662dbae73270c3b900f7fbe5bd1a7256b", "filename": "libiberty/floatformat.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0432a5de96607d878726138722bc42f72208ce1a/libiberty%2Ffloatformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0432a5de96607d878726138722bc42f72208ce1a/libiberty%2Ffloatformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ffloatformat.c?ref=0432a5de96607d878726138722bc42f72208ce1a", "patch": "@@ -108,6 +108,30 @@ const struct floatformat floatformat_ieee_double_littlebyte_bigword =\n   floatformat_always_valid\n };\n \n+/* floatformat for VAX.  Not quite IEEE, but close enough.  */\n+\n+const struct floatformat floatformat_vax_f =\n+{\n+  floatformat_vax, 32, 0, 1, 8, 129, 0, 9, 23,\n+  floatformat_intbit_no,\n+  \"floatformat_vax_f\",\n+  floatformat_always_valid\n+};\n+const struct floatformat floatformat_vax_d =\n+{\n+  floatformat_vax, 64, 0, 1, 8, 129, 0, 9, 55,\n+  floatformat_intbit_no,\n+  \"floatformat_vax_d\",\n+  floatformat_always_valid\n+};\n+const struct floatformat floatformat_vax_g =\n+{\n+  floatformat_vax, 64, 0, 1, 11, 1025, 0, 12, 52,\n+  floatformat_intbit_no,\n+  \"floatformat_vax_g\",\n+  floatformat_always_valid\n+};\n+\n static int floatformat_i387_ext_is_valid (const struct floatformat *fmt,\n \t\t\t\t\t  const void *from);\n "}]}