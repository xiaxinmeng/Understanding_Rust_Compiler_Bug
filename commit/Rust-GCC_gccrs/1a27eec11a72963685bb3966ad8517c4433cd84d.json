{"sha": "1a27eec11a72963685bb3966ad8517c4433cd84d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWEyN2VlYzExYTcyOTYzNjg1YmIzOTY2YWQ4NTE3YzQ0MzNjZDg0ZA==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2001-08-28T22:18:57Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2001-08-28T22:18:57Z"}, "message": "jcf-write.c (generate_bytecode_insns): For increments and decrements just recurse to push constant.\n\n\n\t* jcf-write.c  (generate_bytecode_insns):  For increments and\n        decrements just recurse to push constant.  Improvement on Mark's patch.\n\nFrom-SVN: r45241", "tree": {"sha": "f8d3ca3cd8fa4f203b695f16c29ec5fd0c088d28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8d3ca3cd8fa4f203b695f16c29ec5fd0c088d28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a27eec11a72963685bb3966ad8517c4433cd84d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a27eec11a72963685bb3966ad8517c4433cd84d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a27eec11a72963685bb3966ad8517c4433cd84d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a27eec11a72963685bb3966ad8517c4433cd84d/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4046760603306f262092ca9bbf62bdf3e3f9c0e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4046760603306f262092ca9bbf62bdf3e3f9c0e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4046760603306f262092ca9bbf62bdf3e3f9c0e7"}], "stats": {"total": 25, "additions": 11, "deletions": 14}, "files": [{"sha": "45f05d8804d7091fd79a6fa3e7ff192e20210404", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a27eec11a72963685bb3966ad8517c4433cd84d/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a27eec11a72963685bb3966ad8517c4433cd84d/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=1a27eec11a72963685bb3966ad8517c4433cd84d", "patch": "@@ -1,3 +1,8 @@\n+2001-08-28  Per Bothner  <per@bothner.com>\n+\n+\t* jcf-write.c  (generate_bytecode_insns):  For increments and\n+        decrements just recurse to push constant.  Improvement on Mark's patch.\n+\n 2001-08-28  Mark Mitchell  <mark@codesourcery.com>\n \n \t* jcf-write.c (generate_bytecode_insns): Generate an integer to"}, {"sha": "31493fd0aaedd8d6fb11dbd6226433bfb30fd0a1", "filename": "gcc/java/jcf-write.c", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a27eec11a72963685bb3966ad8517c4433cd84d/gcc%2Fjava%2Fjcf-write.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a27eec11a72963685bb3966ad8517c4433cd84d/gcc%2Fjava%2Fjcf-write.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-write.c?ref=1a27eec11a72963685bb3966ad8517c4433cd84d", "patch": "@@ -1442,7 +1442,7 @@ generate_bytecode_insns (exp, target, state)\n      int target;\n      struct jcf_partial *state;\n {\n-  tree type;\n+  tree type, arg;\n   enum java_opcode jopcode;\n   int op;\n   HOST_WIDE_INT value;\n@@ -1908,6 +1908,7 @@ generate_bytecode_insns (exp, target, state)\n     case POSTINCREMENT_EXPR: value =  1; post_op = 1;  goto increment;\n     increment:\n \n+      arg = TREE_OPERAND (exp, 1);\n       exp = TREE_OPERAND (exp, 0);\n       type = TREE_TYPE (exp);\n       size = TYPE_IS_WIDE (type) ? 2 : 1;\n@@ -1960,19 +1961,10 @@ generate_bytecode_insns (exp, target, state)\n       /* Stack, if ARRAY_REF:  ..., [result, ] array, index, oldvalue. */\n       /* Stack, if COMPONENT_REF:  ..., [result, ] objectref, oldvalue. */\n       /* Stack, otherwise:  ..., [result, ] oldvalue. */\n-      if (size == 1 || TREE_CODE (type) == REAL_TYPE)\n-\t{\n-\t  push_int_const (value, state);\n-\t  if (TREE_CODE (type) == REAL_TYPE)\n-\t    {\n-\t      RESERVE (1);\n-\t      OP1 (TYPE_PRECISION (type) == 32 ? OPCODE_i2f : OPCODE_i2d);\n-\t    }\n-\t}\n-      else\n-\tpush_long_const (value, (HOST_WIDE_INT)(value >= 0 ? 0 : -1), state);\n-      NOTE_PUSH (size);\n-      emit_binop (OPCODE_iadd + adjust_typed_op (type, 3), type, state);\n+      generate_bytecode_insns (arg, STACK_TARGET, state);\n+      emit_binop ((value >= 0 ? OPCODE_iadd : OPCODE_isub)\n+\t\t  + adjust_typed_op (type, 3),\n+\t\t  type, state);\n       if (target != IGNORE_TARGET && ! post_op)\n \temit_dup (size, offset, state);\n       /* Stack, if ARRAY_REF:  ..., [result, ] array, index, newvalue. */"}]}