{"sha": "266c2b54881d4b1898f30da801ca00f5967a0ad1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY2YzJiNTQ4ODFkNGIxODk4ZjMwZGE4MDFjYTAwZjU5NjdhMGFkMQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-08-27T08:01:14Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-08-27T08:01:14Z"}, "message": "Print default options selection for -march,-mcpu and -mtune for aarch64 (PR driver/83193).\n\n2018-08-27  Martin Liska  <mliska@suse.cz>\n\n        PR driver/83193\n\t* config/aarch64/aarch64.c (aarch64_override_options_internal):\n        Set default values for x_aarch64_*_string strings.\n\t* config/aarch64/aarch64.opt: Remove --{march,mcpu,mtune}==\n        prefix.  For -mabi do not print '=ABI' in help and use\n        <option_value> format for -msve-vector-bits and -moverride\n        options.\n\nFrom-SVN: r263870", "tree": {"sha": "b5fab236d9dd4d9c5395708b9320fac691a0e0bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5fab236d9dd4d9c5395708b9320fac691a0e0bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/266c2b54881d4b1898f30da801ca00f5967a0ad1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/266c2b54881d4b1898f30da801ca00f5967a0ad1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/266c2b54881d4b1898f30da801ca00f5967a0ad1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/266c2b54881d4b1898f30da801ca00f5967a0ad1/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "507c82f6da1ac9243f8d14a049dba8abb3ea26bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/507c82f6da1ac9243f8d14a049dba8abb3ea26bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/507c82f6da1ac9243f8d14a049dba8abb3ea26bf"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "fa112074f0a19e5b51f2b2208b7f47796d12e752", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/266c2b54881d4b1898f30da801ca00f5967a0ad1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/266c2b54881d4b1898f30da801ca00f5967a0ad1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=266c2b54881d4b1898f30da801ca00f5967a0ad1", "patch": "@@ -1,3 +1,13 @@\n+2018-08-27  Martin Liska  <mliska@suse.cz>\n+\n+        PR driver/83193\n+\t* config/aarch64/aarch64.c (aarch64_override_options_internal):\n+        Set default values for x_aarch64_*_string strings.\n+\t* config/aarch64/aarch64.opt: Remove --{march,mcpu,mtune}==\n+        prefix.  For -mabi do not print '=ABI' in help and use\n+        <option_value> format for -msve-vector-bits and -moverride\n+        options.\n+\n 2018-08-26  Jeff Law  <law@redhat.com>\n \n \t* config/mips/frame-header-opt.c: Include \"backend.h\" rather than"}, {"sha": "0d7ca9998466d8d4f9e79faf451a281f8d154d7d", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/266c2b54881d4b1898f30da801ca00f5967a0ad1/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/266c2b54881d4b1898f30da801ca00f5967a0ad1/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=266c2b54881d4b1898f30da801ca00f5967a0ad1", "patch": "@@ -10557,6 +10557,13 @@ aarch64_override_options_internal (struct gcc_options *opts)\n       && opts->x_optimize >= aarch64_tune_params.prefetch->default_opt_level)\n     opts->x_flag_prefetch_loop_arrays = 1;\n \n+  if (opts->x_aarch64_arch_string == NULL)\n+    opts->x_aarch64_arch_string = selected_arch->name;\n+  if (opts->x_aarch64_cpu_string == NULL)\n+    opts->x_aarch64_cpu_string = selected_cpu->name;\n+  if (opts->x_aarch64_tune_string == NULL)\n+    opts->x_aarch64_tune_string = selected_tune->name;\n+\n   aarch64_override_options_after_change_1 (opts);\n }\n "}, {"sha": "b2e80cbf6f1f9727c4309874b1122f975fb6b9be", "filename": "gcc/config/aarch64/aarch64.opt", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/266c2b54881d4b1898f30da801ca00f5967a0ad1/gcc%2Fconfig%2Faarch64%2Faarch64.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/266c2b54881d4b1898f30da801ca00f5967a0ad1/gcc%2Fconfig%2Faarch64%2Faarch64.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.opt?ref=266c2b54881d4b1898f30da801ca00f5967a0ad1", "patch": "@@ -117,23 +117,23 @@ Enum(aarch64_tls_size) String(48) Value(48)\n \n march=\n Target RejectNegative ToLower Joined Var(aarch64_arch_string)\n--march=ARCH\tUse features of architecture ARCH.\n+Use features of architecture ARCH.\n \n mcpu=\n Target RejectNegative ToLower Joined Var(aarch64_cpu_string)\n--mcpu=CPU\tUse features of and optimize for CPU.\n+Use features of and optimize for CPU.\n \n mtune=\n Target RejectNegative ToLower Joined Var(aarch64_tune_string)\n--mtune=CPU\tOptimize for CPU.\n+Optimize for CPU.\n \n mabi=\n Target RejectNegative Joined Enum(aarch64_abi) Var(aarch64_abi) Init(AARCH64_ABI_DEFAULT)\n--mabi=ABI\tGenerate code that conforms to the specified ABI.\n+Generate code that conforms to the specified ABI.\n \n moverride=\n Target RejectNegative ToLower Joined Var(aarch64_override_tune_string)\n--moverride=STRING\tPower users only! Override CPU optimization parameters.\n+-moverride=<string>\tPower users only! Override CPU optimization parameters.\n \n Enum\n Name(aarch64_abi) Type(int)\n@@ -209,7 +209,7 @@ Enum(sve_vector_bits) String(2048) Value(SVE_2048)\n \n msve-vector-bits=\n Target RejectNegative Joined Enum(sve_vector_bits) Var(aarch64_sve_vector_bits) Init(SVE_SCALABLE)\n--msve-vector-bits=N\tSet the number of bits in an SVE vector register to N.\n+-msve-vector-bits=<number>\tSet the number of bits in an SVE vector register to N.\n \n mverbose-cost-dump\n Target Undocumented Var(flag_aarch64_verbose_cost)"}]}