{"sha": "136c765c748ab283eb95868b05da1269694e60be", "node_id": "C_kwDOANBUbNoAKDEzNmM3NjVjNzQ4YWIyODNlYjk1ODY4YjA1ZGExMjY5Njk0ZTYwYmU", "commit": {"author": {"name": "Parthib", "email": "parthibdutta02@gmail.com", "date": "2023-03-06T02:04:43Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2023-03-06T12:36:16Z"}, "message": "Cleanup and Assertion\n\ngcc/rust/ChangLog:\n\n\t* rust-object-export.cc: Modified\n\t* hir/rust-ast-lower-type.cc (rust_fatal_error): Removed\n\t\t(rust_assert): Added\n\nSigned-off-by: Parthib <parthibdutta02@gmail.com>", "tree": {"sha": "a04b456d981ca9e29bd266aced2b01b73a9ea9f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a04b456d981ca9e29bd266aced2b01b73a9ea9f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/136c765c748ab283eb95868b05da1269694e60be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/136c765c748ab283eb95868b05da1269694e60be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/136c765c748ab283eb95868b05da1269694e60be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/136c765c748ab283eb95868b05da1269694e60be/comments", "author": {"login": "Parthib314", "id": 94271200, "node_id": "U_kgDOBZ524A", "avatar_url": "https://avatars.githubusercontent.com/u/94271200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Parthib314", "html_url": "https://github.com/Parthib314", "followers_url": "https://api.github.com/users/Parthib314/followers", "following_url": "https://api.github.com/users/Parthib314/following{/other_user}", "gists_url": "https://api.github.com/users/Parthib314/gists{/gist_id}", "starred_url": "https://api.github.com/users/Parthib314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Parthib314/subscriptions", "organizations_url": "https://api.github.com/users/Parthib314/orgs", "repos_url": "https://api.github.com/users/Parthib314/repos", "events_url": "https://api.github.com/users/Parthib314/events{/privacy}", "received_events_url": "https://api.github.com/users/Parthib314/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae91a0a3f2b44e5b011d3742a71c3c5030558bc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae91a0a3f2b44e5b011d3742a71c3c5030558bc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae91a0a3f2b44e5b011d3742a71c3c5030558bc8"}], "stats": {"total": 25, "additions": 7, "deletions": 18}, "files": [{"sha": "d767de6f699d1eddec5d80fb1b4a8b38d959309f", "filename": "gcc/rust/hir/rust-ast-lower-type.cc", "status": "modified", "additions": 6, "deletions": 16, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/136c765c748ab283eb95868b05da1269694e60be/gcc%2Frust%2Fhir%2Frust-ast-lower-type.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/136c765c748ab283eb95868b05da1269694e60be/gcc%2Frust%2Fhir%2Frust-ast-lower-type.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-type.cc?ref=136c765c748ab283eb95868b05da1269694e60be", "patch": "@@ -108,11 +108,8 @@ ASTLowerTypePath::visit (AST::TypePath &path)\n     {\n       translated_segment = nullptr;\n       seg->accept_vis (*this);\n-      if (translated_segment == nullptr)\n-\t{\n-\t  rust_fatal_error (seg->get_locus (),\n-\t\t\t    \"failed to translate AST TypePathSegment\");\n-\t}\n+      rust_assert (translated_segment != nullptr);\n+\n       translated_segments.push_back (\n \tstd::unique_ptr<HIR::TypePathSegment> (translated_segment));\n     }\n@@ -158,24 +155,17 @@ ASTLowerQualifiedPathInType::visit (AST::QualifiedPathInType &path)\n \n   translated_segment = nullptr;\n   path.get_associated_segment ()->accept_vis (*this);\n-  if (translated_segment == nullptr)\n-    {\n-      rust_fatal_error (path.get_associated_segment ()->get_locus (),\n-\t\t\t\"failed to translate AST TypePathSegment\");\n-      return;\n-    }\n+  rust_assert (translated_segment != nullptr);\n+\n   std::unique_ptr<HIR::TypePathSegment> associated_segment (translated_segment);\n \n   std::vector<std::unique_ptr<HIR::TypePathSegment>> translated_segments;\n   for (auto &seg : path.get_segments ())\n     {\n       translated_segment = nullptr;\n       seg->accept_vis (*this);\n-      if (translated_segment == nullptr)\n-\t{\n-\t  rust_fatal_error (seg->get_locus (),\n-\t\t\t    \"failed to translte AST TypePathSegment\");\n-\t}\n+      rust_assert (translated_segment != nullptr);\n+\n       translated_segments.push_back (\n \tstd::unique_ptr<HIR::TypePathSegment> (translated_segment));\n     }"}, {"sha": "c2e56febfefed68e0f292ae031603f6508aafac7", "filename": "gcc/rust/rust-object-export.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/136c765c748ab283eb95868b05da1269694e60be/gcc%2Frust%2Frust-object-export.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/136c765c748ab283eb95868b05da1269694e60be/gcc%2Frust%2Frust-object-export.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-object-export.cc?ref=136c765c748ab283eb95868b05da1269694e60be", "patch": "@@ -1,5 +1,4 @@\n-/* rust-backend.c -- Rust frontend interface to gcc backend.\n-   Copyright (C) 2010-2023 Free Software Foundation, Inc.\n+/* Copyright (C) 2010-2023 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n "}]}