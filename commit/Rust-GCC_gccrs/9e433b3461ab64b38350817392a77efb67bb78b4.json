{"sha": "9e433b3461ab64b38350817392a77efb67bb78b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU0MzNiMzQ2MWFiNjRiMzgzNTA4MTczOTJhNzdlZmI2N2JiNzhiNA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-12-03T19:17:13Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-12-03T19:17:13Z"}, "message": "libstdc++: Add std::bit_cast for C++20 [PR 93121]\n\nThanks to Jakub's addition of the built-in, we can add this to the\nlibrary now. The compiler tests for the built-in are quite extensive,\nincluding verifying the constraints, so this only adds minimal tests to\nthe library testsuite.\n\nThis doesn't add a new _GLIBCXX_HAVE_BUILTIN_BIT_CAST because using\n__has_builtin(__builtin_bit_cast) works for GCC and versions of Clang\nthat provide the built-in.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/93121\n\t* include/std/bit (__cpp_lib_bit_cast, bit_cast): Define.\n\t* include/std/version (__cpp_lib_bit_cast): Define.\n\t* testsuite/26_numerics/bit/bit.cast/bit_cast.cc: New test.\n\t* testsuite/26_numerics/bit/bit.cast/version.cc: New test.", "tree": {"sha": "e7120a6f2ad5b0176b2325ceb078ef977673379c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7120a6f2ad5b0176b2325ceb078ef977673379c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e433b3461ab64b38350817392a77efb67bb78b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e433b3461ab64b38350817392a77efb67bb78b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e433b3461ab64b38350817392a77efb67bb78b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e433b3461ab64b38350817392a77efb67bb78b4/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0"}], "stats": {"total": 123, "additions": 123, "deletions": 0}, "files": [{"sha": "1d99c807c4a231efd8168956183063bd88273c9b", "filename": "libstdc++-v3/include/std/bit", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e433b3461ab64b38350817392a77efb67bb78b4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbit", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e433b3461ab64b38350817392a77efb67bb78b4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbit", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbit?ref=9e433b3461ab64b38350817392a77efb67bb78b4", "patch": "@@ -49,6 +49,18 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    * @{\n    */\n \n+#if __cplusplus > 201703l && __has_builtin(__builtin_bit_cast)\n+#define __cpp_lib_bit_cast 201806L\n+\n+  /// Create a value of type `To` from the bits of `from`.\n+  template<typename _To, typename _From>\n+    constexpr _To\n+    bit_cast(const _From& __from) noexcept\n+    {\n+      return __builtin_bit_cast(_To, __from);\n+    }\n+#endif\n+\n   /// @cond undoc\n \n   template<typename _Tp>"}, {"sha": "6e4bd99b361f122aa7c7baabe38a53b7916105f7", "filename": "libstdc++-v3/include/std/version", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e433b3461ab64b38350817392a77efb67bb78b4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e433b3461ab64b38350817392a77efb67bb78b4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion?ref=9e433b3461ab64b38350817392a77efb67bb78b4", "patch": "@@ -201,6 +201,9 @@\n # define __cpp_lib_atomic_wait 201907L\n #endif\n #define __cpp_lib_bind_front 201907L\n+#if __has_builtin(__builtin_bit_cast)\n+# define __cpp_lib_bit_cast 201806L\n+#endif\n // FIXME: #define __cpp_lib_execution 201902L\n #define __cpp_lib_integer_comparison_functions 202002L\n #define __cpp_lib_constexpr_algorithms 201806L"}, {"sha": "b451f152b474c3c05ba7dd83dd8f7d1a6b7e0bf7", "filename": "libstdc++-v3/testsuite/26_numerics/bit/bit.cast/bit_cast.cc", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e433b3461ab64b38350817392a77efb67bb78b4/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fbit%2Fbit.cast%2Fbit_cast.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e433b3461ab64b38350817392a77efb67bb78b4/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fbit%2Fbit.cast%2Fbit_cast.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fbit%2Fbit.cast%2Fbit_cast.cc?ref=9e433b3461ab64b38350817392a77efb67bb78b4", "patch": "@@ -0,0 +1,81 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+#include <bit>\n+\n+#ifndef __cpp_lib_bit_cast\n+# error \"Feature-test macro for bit_cast wait missing in <bit>\"\n+#elif __cpp_lib_bit_cast != 201806L\n+# error \"Feature-test macro for bit_cast wait has wrong value in <bit>\"\n+#endif\n+\n+#include <cstdint>\n+#include <cstring>\n+#include <testsuite_hooks.h>\n+\n+template<typename To, typename From>\n+constexpr bool\n+check(const From& from)\n+{\n+  return std::bit_cast<From>(std::bit_cast<To>(from)) == from;\n+}\n+\n+void\n+test01()\n+{\n+  static_assert( std::bit_cast<int>(123) == 123 );\n+  static_assert( std::bit_cast<int>(123u) == 123 );\n+  static_assert( std::bit_cast<int>(~0u) == ~0 );\n+\n+  if constexpr (sizeof(int) == sizeof(float))\n+    static_assert( check<int>(12.34f) );\n+  if constexpr (sizeof(unsigned long long) == sizeof(double))\n+    static_assert( check<unsigned long long>(123.456) );\n+  if constexpr (sizeof(std::intptr_t) == sizeof(void(*)()))\n+    VERIFY( check<std::intptr_t>(&test01) );\n+}\n+\n+void\n+test02()\n+{\n+  struct S\n+  {\n+    int i;\n+\n+    bool operator==(const char* s) const\n+    { return std::memcmp(&i, s, sizeof(i)) == 0; }\n+  };\n+\n+  char arr[sizeof(int)];\n+  char arr2[sizeof(int)];\n+  for (int i = 0; i < sizeof(int); ++i)\n+  {\n+    arr[i] = i + 1;\n+    arr2[i] = (i + 1) * -(i % 2);\n+  }\n+  VERIFY( std::bit_cast<S>(arr) == arr );\n+  VERIFY( std::bit_cast<S>(arr2) == arr2 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  test02();\n+}"}, {"sha": "688d44bbb8912fd49363599d46adf91e9d59a9fa", "filename": "libstdc++-v3/testsuite/26_numerics/bit/bit.cast/version.cc", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e433b3461ab64b38350817392a77efb67bb78b4/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fbit%2Fbit.cast%2Fversion.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e433b3461ab64b38350817392a77efb67bb78b4/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fbit%2Fbit.cast%2Fversion.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fbit%2Fbit.cast%2Fversion.cc?ref=9e433b3461ab64b38350817392a77efb67bb78b4", "patch": "@@ -0,0 +1,27 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+#include <version>\n+\n+#ifndef __cpp_lib_bit_cast\n+# error \"Feature-test macro for bit_cast wait missing in <version>\"\n+#elif __cpp_lib_bit_cast != 201806L\n+# error \"Feature-test macro for bit_cast wait has wrong value in <version>\"\n+#endif"}]}