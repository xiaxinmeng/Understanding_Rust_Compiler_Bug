{"sha": "7bf94db3eb4dbbb29683c5ba0c38c2e690ad9f4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2JmOTRkYjNlYjRkYmJiMjk2ODNjNWJhMGMzOGMyZTY5MGFkOWY0Zg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-02-22T22:47:56Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-02-22T22:47:56Z"}, "message": "Add data member test\n\nFrom-SVN: r32108", "tree": {"sha": "ade9e65152ba9ac6c128ef7e89d7fd84a62f98be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ade9e65152ba9ac6c128ef7e89d7fd84a62f98be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7bf94db3eb4dbbb29683c5ba0c38c2e690ad9f4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bf94db3eb4dbbb29683c5ba0c38c2e690ad9f4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bf94db3eb4dbbb29683c5ba0c38c2e690ad9f4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bf94db3eb4dbbb29683c5ba0c38c2e690ad9f4f/comments", "author": null, "committer": null, "parents": [{"sha": "fa2e34e8f267ce9944c3ce053b5785368ecbd89f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa2e34e8f267ce9944c3ce053b5785368ecbd89f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa2e34e8f267ce9944c3ce053b5785368ecbd89f"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "8dc3ee46a5cf75fcc305052b6cd51f5a38b101c4", "filename": "gcc/testsuite/g++.old-deja/g++.abi/ptrmem.C", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bf94db3eb4dbbb29683c5ba0c38c2e690ad9f4f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fptrmem.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bf94db3eb4dbbb29683c5ba0c38c2e690ad9f4f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fptrmem.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fptrmem.C?ref=7bf94db3eb4dbbb29683c5ba0c38c2e690ad9f4f", "patch": "@@ -10,6 +10,7 @@\n struct S\n {\n   int i;\n+  int j;\n };\n \n // Because S does not have a VPTR, it will not be a primary base of T,\n@@ -37,21 +38,23 @@ struct ptrmemfunc\n   ptrdiff_t adj;\n };\n \n+typedef int S::*sdp;\n typedef void (S::*sp)();\n typedef void (T::*tp)();\n \n int\n main ()\n {\n+  S s;\n   T t;\n   sp x;\n   tp y;\n   ptrmemfunc *xp = (ptrmemfunc *) &x;\n   ptrmemfunc *yp = (ptrmemfunc *) &y;\n   ptrdiff_t delta = ((char *) &t) - ((char*) (S*) (&t));\n-   \n-  // Pointers-to-members should have the same size and alignment as\n-  // the PTRMEMFUNC type.\n+\n+  // Pointers-to-function-members should have the same size and\n+  // alignment as the PTRMEMFUNC type.\n   if (sizeof (sp) != sizeof (ptrmemfunc))\n     return 1;\n   if (__alignof__ (sp) != __alignof__ (ptrmemfunc))\n@@ -92,6 +95,17 @@ main ()\n     return 11;\n   if (xp->adj != delta)\n     return 12;\n+\n+  // Pointers-to-data-members should have the same size and alignment\n+  // as a ptrdiff_t.\n+  if (sizeof (sdp) != sizeof (ptrdiff_t))\n+    return 13;\n+  if (__alignof__ (sdp) != __alignof__ (ptrdiff_t))\n+    return 14;\n+\n+  sdp z = &S::j;\n+  if ((char *) &s.j - (char *) &s != *((ptrdiff_t *) &z) - 1)\n+    return 15;\n }\n \n #else /* !(defined (__GXX_ABI_VERSION) && __GXX_ABI_VERSION >= 100) */"}]}