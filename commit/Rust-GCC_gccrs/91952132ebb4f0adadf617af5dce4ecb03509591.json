{"sha": "91952132ebb4f0adadf617af5dce4ecb03509591", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE5NTIxMzJlYmI0ZjBhZGFkZjYxN2FmNWRjZTRlY2IwMzUwOTU5MQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-10T13:04:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-10T13:04:53Z"}, "message": "[multiple changes]\n\n2013-10-10  Yannick Moy  <moy@adacore.com>\n\n\t* errout.adb (Compilation_Errors): In formal verification mode,\n\talways return False.\n\n2013-10-10  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_prag.adb (Collect_Hidden_States_In_Decls): Only consider source\n\tnon-constant objects.\n\nFrom-SVN: r203372", "tree": {"sha": "6a0e0fff21176dc132bcca6f1539c88225e70bb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a0e0fff21176dc132bcca6f1539c88225e70bb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91952132ebb4f0adadf617af5dce4ecb03509591", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91952132ebb4f0adadf617af5dce4ecb03509591", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91952132ebb4f0adadf617af5dce4ecb03509591", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91952132ebb4f0adadf617af5dce4ecb03509591/comments", "author": null, "committer": null, "parents": [{"sha": "39af2bac25b7a60c9ab868e794202dd45af94e14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39af2bac25b7a60c9ab868e794202dd45af94e14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39af2bac25b7a60c9ab868e794202dd45af94e14"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "0f2ae317a26e673e64a71efbc077c0c90d9d49ae", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91952132ebb4f0adadf617af5dce4ecb03509591/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91952132ebb4f0adadf617af5dce4ecb03509591/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=91952132ebb4f0adadf617af5dce4ecb03509591", "patch": "@@ -1,3 +1,13 @@\n+2013-10-10  Yannick Moy  <moy@adacore.com>\n+\n+\t* errout.adb (Compilation_Errors): In formal verification mode,\n+\talways return False.\n+\n+2013-10-10  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_prag.adb (Collect_Hidden_States_In_Decls): Only consider source\n+\tnon-constant objects.\n+\n 2013-10-10  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* aspects.adb: Add an entry in table Canonical_Aspect for"}, {"sha": "aa07a6989dd98a6956ed686edde29a499968cecb", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91952132ebb4f0adadf617af5dce4ecb03509591/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91952132ebb4f0adadf617af5dce4ecb03509591/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=91952132ebb4f0adadf617af5dce4ecb03509591", "patch": "@@ -233,6 +233,15 @@ package body Errout is\n    begin\n       if not Finalize_Called then\n          raise Program_Error;\n+\n+      --  In formal verification mode, errors issued when generating Why code\n+      --  are not compilation errors, and should not result in exiting with\n+      --  an error status. These errors are handled in the driver of the\n+      --  verification process instead.\n+\n+      elsif SPARK_Mode and not Frame_Condition_Mode then\n+         return False;\n+\n       else\n          return Erroutc.Compilation_Errors;\n       end if;"}, {"sha": "0973b6801cc83c9aa4721660c4eec2421a8537a5", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91952132ebb4f0adadf617af5dce4ecb03509591/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91952132ebb4f0adadf617af5dce4ecb03509591/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=91952132ebb4f0adadf617af5dce4ecb03509591", "patch": "@@ -813,9 +813,11 @@ package Errout is\n    --  matching Warnings Off pragma preceding this one.\n \n    function Compilation_Errors return Boolean;\n-   --  Returns true if errors have been detected, or warnings in -gnatwe\n-   --  (treat warnings as errors) mode. Note that it is mandatory to call\n-   --  Finalize before calling this routine.\n+   --  Returns True if errors have been detected, or warnings in -gnatwe (treat\n+   --  warnings as errors) mode. Note that it is mandatory to call Finalize\n+   --  before calling this routine. Always returns False in formal verification\n+   --  mode, because errors issued when generating Why code are not compilation\n+   --  errors, and should not result in exiting with an error status.\n \n    procedure Error_Msg_CRT (Feature : String; N : Node_Id);\n    --  Posts a non-fatal message on node N saying that the feature identified"}, {"sha": "dc8090404366f09e34f551472bb04eb5da1a9e5c", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91952132ebb4f0adadf617af5dce4ecb03509591/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91952132ebb4f0adadf617af5dce4ecb03509591/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=91952132ebb4f0adadf617af5dce4ecb03509591", "patch": "@@ -18889,10 +18889,15 @@ package body Sem_Prag is\n             Decl := First (Decls);\n             while Present (Decl) loop\n \n-               --  Objects (non-constants) are valid hidden states\n+               --  Source objects (non-constants) are valid hidden states\n+\n+               --  This is a very odd test, it misses many cases, e.g.\n+               --  renamings of objects, in-out parameters etc ???. Why\n+               --  not test the Ekind ???\n \n                if Nkind (Decl) = N_Object_Declaration\n                  and then not Constant_Present (Decl)\n+                 and then Comes_From_Source (Decl)\n                then\n                   Add_Item (Defining_Entity (Decl), Result);\n "}]}