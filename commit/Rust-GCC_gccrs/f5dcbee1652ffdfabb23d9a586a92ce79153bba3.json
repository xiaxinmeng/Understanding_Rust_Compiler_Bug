{"sha": "f5dcbee1652ffdfabb23d9a586a92ce79153bba3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVkY2JlZTE2NTJmZmRmYWJiMjNkOWE1ODZhOTJjZTc5MTUzYmJhMw==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2014-11-04T12:09:38Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2014-11-04T12:09:38Z"}, "message": "[ARM] Migrate to new reduc_[us](min|max)_scal_optab\n\n\tconfig/arm/neon.md (reduc_smin_<mode> *2): Rename to...\n\t(reduc_smin_scal_<mode> *2): ...this; extract scalar result.\n\t(reduc_smax_<mode> *2): Rename to...\n\t(reduc_smax_scal_<mode> *2): ...this; extract scalar result.\n\t(reduc_umin_<mode> *2): Rename to...\n\t(reduc_umin_scal_<mode> *2): ...this; extract scalar result.\n\t(reduc_umax_<mode> *2): Rename to...\n\t(reduc_umax_scal_<mode> *2): ...this; extract scalar result.\n\nFrom-SVN: r217080", "tree": {"sha": "f94f5c01728fbb8813a91c612f281a15b6238afc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f94f5c01728fbb8813a91c612f281a15b6238afc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5dcbee1652ffdfabb23d9a586a92ce79153bba3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5dcbee1652ffdfabb23d9a586a92ce79153bba3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5dcbee1652ffdfabb23d9a586a92ce79153bba3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5dcbee1652ffdfabb23d9a586a92ce79153bba3/comments", "author": null, "committer": null, "parents": [{"sha": "89edc9866776ba7805b40b592a2bb91252f8e1b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89edc9866776ba7805b40b592a2bb91252f8e1b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89edc9866776ba7805b40b592a2bb91252f8e1b5"}], "stats": {"total": 80, "additions": 48, "deletions": 32}, "files": [{"sha": "0ecdd5b01fd2ed019d1212d37d6aa9716728490f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5dcbee1652ffdfabb23d9a586a92ce79153bba3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5dcbee1652ffdfabb23d9a586a92ce79153bba3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f5dcbee1652ffdfabb23d9a586a92ce79153bba3", "patch": "@@ -1,3 +1,14 @@\n+2014-11-04  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\tconfig/arm/neon.md (reduc_smin_<mode> *2): Rename to...\n+\t(reduc_smin_scal_<mode> *2): ...this; extract scalar result.\n+\t(reduc_smax_<mode> *2): Rename to...\n+\t(reduc_smax_scal_<mode> *2): ...this; extract scalar result.\n+\t(reduc_umin_<mode> *2): Rename to...\n+\t(reduc_umin_scal_<mode> *2): ...this; extract scalar result.\n+\t(reduc_umax_<mode> *2): Rename to...\n+\t(reduc_umax_scal_<mode> *2): ...this; extract scalar result.\n+\n 2014-11-04  Alan Lawrence  <alan.lawrence@arm.com>\n \n \tconfig/arm/neon.md (reduc_plus_*): Rename to..."}, {"sha": "e7f5abe5aec135e8656b711d98539c685a4f7742", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 37, "deletions": 32, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5dcbee1652ffdfabb23d9a586a92ce79153bba3/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5dcbee1652ffdfabb23d9a586a92ce79153bba3/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=f5dcbee1652ffdfabb23d9a586a92ce79153bba3", "patch": "@@ -1398,104 +1398,109 @@\n   [(set_attr \"type\" \"neon_add_q\")]\n )\n \n-(define_expand \"reduc_smin_<mode>\"\n-  [(match_operand:VD 0 \"s_register_operand\" \"\")\n+(define_expand \"reduc_smin_scal_<mode>\"\n+  [(match_operand:<V_elem> 0 \"nonimmediate_operand\" \"\")\n    (match_operand:VD 1 \"s_register_operand\" \"\")]\n   \"TARGET_NEON && (!<Is_float_mode> || flag_unsafe_math_optimizations)\"\n {\n-  neon_pairwise_reduce (operands[0], operands[1], <MODE>mode,\n+  rtx vec = gen_reg_rtx (<MODE>mode);\n+\n+  neon_pairwise_reduce (vec, operands[1], <MODE>mode,\n \t\t\t&gen_neon_vpsmin<mode>);\n+  /* The result is computed into every element of the vector.  */\n+  emit_insn (gen_vec_extract<mode> (operands[0], vec, const0_rtx));\n   DONE;\n })\n \n-(define_expand \"reduc_smin_<mode>\"\n-  [(match_operand:VQ 0 \"s_register_operand\" \"\")\n+(define_expand \"reduc_smin_scal_<mode>\"\n+  [(match_operand:<V_elem> 0 \"nonimmediate_operand\" \"\")\n    (match_operand:VQ 1 \"s_register_operand\" \"\")]\n   \"TARGET_NEON && (!<Is_float_mode> || flag_unsafe_math_optimizations)\n    && !BYTES_BIG_ENDIAN\"\n {\n   rtx step1 = gen_reg_rtx (<V_HALF>mode);\n-  rtx res_d = gen_reg_rtx (<V_HALF>mode);\n \n   emit_insn (gen_quad_halves_smin<mode> (step1, operands[1]));\n-  emit_insn (gen_reduc_smin_<V_half> (res_d, step1));\n-  emit_insn (gen_move_lo_quad_<mode> (operands[0], res_d));\n+  emit_insn (gen_reduc_smin_scal_<V_half> (operands[0], step1));\n \n   DONE;\n })\n \n-(define_expand \"reduc_smax_<mode>\"\n-  [(match_operand:VD 0 \"s_register_operand\" \"\")\n+(define_expand \"reduc_smax_scal_<mode>\"\n+  [(match_operand:<V_elem> 0 \"nonimmediate_operand\" \"\")\n    (match_operand:VD 1 \"s_register_operand\" \"\")]\n   \"TARGET_NEON && (!<Is_float_mode> || flag_unsafe_math_optimizations)\"\n {\n-  neon_pairwise_reduce (operands[0], operands[1], <MODE>mode,\n+  rtx vec = gen_reg_rtx (<MODE>mode);\n+  neon_pairwise_reduce (vec, operands[1], <MODE>mode,\n \t\t\t&gen_neon_vpsmax<mode>);\n+  /* The result is computed into every element of the vector.  */\n+  emit_insn (gen_vec_extract<mode> (operands[0], vec, const0_rtx));\n   DONE;\n })\n \n-(define_expand \"reduc_smax_<mode>\"\n-  [(match_operand:VQ 0 \"s_register_operand\" \"\")\n+(define_expand \"reduc_smax_scal_<mode>\"\n+  [(match_operand:<V_elem> 0 \"nonimmediate_operand\" \"\")\n    (match_operand:VQ 1 \"s_register_operand\" \"\")]\n   \"TARGET_NEON && (!<Is_float_mode> || flag_unsafe_math_optimizations)\n    && !BYTES_BIG_ENDIAN\"\n {\n   rtx step1 = gen_reg_rtx (<V_HALF>mode);\n-  rtx res_d = gen_reg_rtx (<V_HALF>mode);\n \n   emit_insn (gen_quad_halves_smax<mode> (step1, operands[1]));\n-  emit_insn (gen_reduc_smax_<V_half> (res_d, step1));\n-  emit_insn (gen_move_lo_quad_<mode> (operands[0], res_d));\n+  emit_insn (gen_reduc_smax_scal_<V_half> (operands[0], step1));\n \n   DONE;\n })\n \n-(define_expand \"reduc_umin_<mode>\"\n-  [(match_operand:VDI 0 \"s_register_operand\" \"\")\n+(define_expand \"reduc_umin_scal_<mode>\"\n+  [(match_operand:<V_elem> 0 \"nonimmediate_operand\" \"\")\n    (match_operand:VDI 1 \"s_register_operand\" \"\")]\n   \"TARGET_NEON\"\n {\n-  neon_pairwise_reduce (operands[0], operands[1], <MODE>mode,\n+  rtx vec = gen_reg_rtx (<MODE>mode);\n+  neon_pairwise_reduce (vec, operands[1], <MODE>mode,\n \t\t\t&gen_neon_vpumin<mode>);\n+  /* The result is computed into every element of the vector.  */\n+  emit_insn (gen_vec_extract<mode> (operands[0], vec, const0_rtx));\n   DONE;\n })\n \n-(define_expand \"reduc_umin_<mode>\"\n-  [(match_operand:VQI 0 \"s_register_operand\" \"\")\n+(define_expand \"reduc_umin_scal_<mode>\"\n+  [(match_operand:<V_elem> 0 \"nonimmediate_operand\" \"\")\n    (match_operand:VQI 1 \"s_register_operand\" \"\")]\n   \"TARGET_NEON && !BYTES_BIG_ENDIAN\"\n {\n   rtx step1 = gen_reg_rtx (<V_HALF>mode);\n-  rtx res_d = gen_reg_rtx (<V_HALF>mode);\n \n   emit_insn (gen_quad_halves_umin<mode> (step1, operands[1]));\n-  emit_insn (gen_reduc_umin_<V_half> (res_d, step1));\n-  emit_insn (gen_move_lo_quad_<mode> (operands[0], res_d));\n+  emit_insn (gen_reduc_umin_scal_<V_half> (operands[0], step1));\n \n   DONE;\n })\n \n-(define_expand \"reduc_umax_<mode>\"\n-  [(match_operand:VDI 0 \"s_register_operand\" \"\")\n+(define_expand \"reduc_umax_scal_<mode>\"\n+  [(match_operand:<V_elem> 0 \"nonimmediate_operand\" \"\")\n    (match_operand:VDI 1 \"s_register_operand\" \"\")]\n   \"TARGET_NEON\"\n {\n-  neon_pairwise_reduce (operands[0], operands[1], <MODE>mode,\n+  rtx vec = gen_reg_rtx (<MODE>mode);\n+  neon_pairwise_reduce (vec, operands[1], <MODE>mode,\n \t\t\t&gen_neon_vpumax<mode>);\n+  /* The result is computed into every element of the vector.  */\n+  emit_insn (gen_vec_extract<mode> (operands[0], vec, const0_rtx));\n   DONE;\n })\n \n-(define_expand \"reduc_umax_<mode>\"\n-  [(match_operand:VQI 0 \"s_register_operand\" \"\")\n+(define_expand \"reduc_umax_scal_<mode>\"\n+  [(match_operand:<V_elem> 0 \"nonimmediate_operand\" \"\")\n    (match_operand:VQI 1 \"s_register_operand\" \"\")]\n   \"TARGET_NEON && !BYTES_BIG_ENDIAN\"\n {\n   rtx step1 = gen_reg_rtx (<V_HALF>mode);\n-  rtx res_d = gen_reg_rtx (<V_HALF>mode);\n \n   emit_insn (gen_quad_halves_umax<mode> (step1, operands[1]));\n-  emit_insn (gen_reduc_umax_<V_half> (res_d, step1));\n-  emit_insn (gen_move_lo_quad_<mode> (operands[0], res_d));\n+  emit_insn (gen_reduc_umax_scal_<V_half> (operands[0], step1));\n \n   DONE;\n })"}]}