{"sha": "d23db3858e7779b7a42ef3533e6c4c299cb026c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDIzZGIzODU4ZTc3NzliN2E0MmVmMzUzM2U2YzRjMjk5Y2IwMjZjNw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-08-27T13:36:15Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-08-27T13:36:15Z"}, "message": "Share a prevailing name for remove debug info symbols w/ LTO.\n\n2019-08-27  Martin Liska  <mliska@suse.cz>\n\n\tPR lto/91478\n\t* simple-object-elf.c (simple_object_elf_copy_lto_debug_sections):\n\tFirst find a WEAK HIDDEN symbol in symbol table that will be\n\tpreserved.  Later, use the symbol name for all removed symbols.\n\nFrom-SVN: r274955", "tree": {"sha": "c461b234939553ca119d3a63a5831c5cd312ebf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c461b234939553ca119d3a63a5831c5cd312ebf8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d23db3858e7779b7a42ef3533e6c4c299cb026c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d23db3858e7779b7a42ef3533e6c4c299cb026c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d23db3858e7779b7a42ef3533e6c4c299cb026c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d23db3858e7779b7a42ef3533e6c4c299cb026c7/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b5a6addb5b60ff6232d1e11367b44f969d2a3e8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5a6addb5b60ff6232d1e11367b44f969d2a3e8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5a6addb5b60ff6232d1e11367b44f969d2a3e8f"}], "stats": {"total": 78, "additions": 56, "deletions": 22}, "files": [{"sha": "cf101e7f8a12f785a6749e133202da637064e3ea", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d23db3858e7779b7a42ef3533e6c4c299cb026c7/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d23db3858e7779b7a42ef3533e6c4c299cb026c7/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=d23db3858e7779b7a42ef3533e6c4c299cb026c7", "patch": "@@ -1,3 +1,10 @@\n+2019-08-27  Martin Liska  <mliska@suse.cz>\n+\n+\tPR lto/91478\n+\t* simple-object-elf.c (simple_object_elf_copy_lto_debug_sections):\n+\tFirst find a WEAK HIDDEN symbol in symbol table that will be\n+\tpreserved.  Later, use the symbol name for all removed symbols.\n+\n 2019-08-12  Martin Liska  <mliska@suse.cz>\n \n \t* Makefile.in: Add filedescriptor.c."}, {"sha": "03ca42498f3028a2e25e48c124f4352644d3ead1", "filename": "libiberty/simple-object-elf.c", "status": "modified", "additions": 49, "deletions": 22, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d23db3858e7779b7a42ef3533e6c4c299cb026c7/libiberty%2Fsimple-object-elf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d23db3858e7779b7a42ef3533e6c4c299cb026c7/libiberty%2Fsimple-object-elf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fsimple-object-elf.c?ref=d23db3858e7779b7a42ef3533e6c4c299cb026c7", "patch": "@@ -1366,30 +1366,17 @@ simple_object_elf_copy_lto_debug_sections (simple_object_read *sobj,\n \t  return errmsg;\n \t}\n \n-      /* If we are processing .symtab purge __gnu_lto_slim symbol\n-\t from it and any symbols in discarded sections.  */\n+      /* If we are processing .symtab purge any symbols\n+\t in discarded sections.  */\n       if (sh_type == SHT_SYMTAB)\n \t{\n \t  unsigned entsize = ELF_FETCH_FIELD (type_functions, ei_class, Shdr,\n \t\t\t\t\t      shdr, sh_entsize, Elf_Addr);\n \t  unsigned strtab = ELF_FETCH_FIELD (type_functions, ei_class, Shdr,\n \t\t\t\t\t     shdr, sh_link, Elf_Word);\n-\t  unsigned char *strshdr = shdrs + (strtab - 1) * shdr_size;\n-\t  off_t stroff = ELF_FETCH_FIELD (type_functions, ei_class, Shdr,\n-\t\t\t\t\t  strshdr, sh_offset, Elf_Addr);\n-\t  size_t strsz = ELF_FETCH_FIELD (type_functions, ei_class, Shdr,\n-\t\t\t\t\t  strshdr, sh_size, Elf_Addr);\n-\t  char *strings = XNEWVEC (char, strsz);\n-\t  char *gnu_lto = strings;\n+\t  size_t prevailing_name_idx = 0;\n \t  unsigned char *ent;\n \t  unsigned *shndx_table = NULL;\n-\t  simple_object_internal_read (sobj->descriptor,\n-\t\t\t\t       sobj->offset + stroff,\n-\t\t\t\t       (unsigned char *)strings,\n-\t\t\t\t       strsz, &errmsg, err);\n-\t  /* Find first '\\0' in strings.  */\n-\t  gnu_lto = (char *) memchr (gnu_lto + 1, '\\0',\n-\t\t\t\t     strings + strsz - gnu_lto);\n \t  /* Read the section index table if present.  */\n \t  if (symtab_indices_shndx[i - 1] != 0)\n \t    {\n@@ -1404,6 +1391,45 @@ simple_object_elf_copy_lto_debug_sections (simple_object_read *sobj,\n \t\t\t\t\t   (unsigned char *)shndx_table,\n \t\t\t\t\t   sidxsz, &errmsg, err);\n \t    }\n+\n+\t  /* Find a WEAK HIDDEN symbol which name we will use for removed\n+\t     symbols.  We know there's a prevailing weak hidden symbol\n+\t     at the start of the .debug_info section.  */\n+\t  for (ent = buf; ent < buf + length; ent += entsize)\n+\t    {\n+\t      unsigned st_shndx = ELF_FETCH_FIELD (type_functions, ei_class,\n+\t\t\t\t\t\t   Sym, ent,\n+\t\t\t\t\t\t   st_shndx, Elf_Half);\n+\t      unsigned char *st_info;\n+\t      unsigned char *st_other;\n+\t      if (ei_class == ELFCLASS32)\n+\t\t{\n+\t\t  st_info = &((Elf32_External_Sym *)ent)->st_info;\n+\t\t  st_other = &((Elf32_External_Sym *)ent)->st_other;\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  st_info = &((Elf64_External_Sym *)ent)->st_info;\n+\t\t  st_other = &((Elf64_External_Sym *)ent)->st_other;\n+\t\t}\n+\t      if (st_shndx == SHN_XINDEX)\n+\t\tst_shndx = type_functions->fetch_Elf_Word\n+\t\t    ((unsigned char *)(shndx_table + (ent - buf) / entsize));\n+\n+\t      if (st_shndx != SHN_COMMON\n+\t\t  && !(st_shndx != SHN_UNDEF\n+\t\t       && st_shndx < shnum\n+\t\t       && pfnret[st_shndx - 1] == -1)\n+\t\t  && ELF_ST_BIND (*st_info) == STB_WEAK\n+\t\t  && *st_other == STV_HIDDEN)\n+\t\t{\n+\t\t  prevailing_name_idx = ELF_FETCH_FIELD (type_functions,\n+\t\t\t\t\t\t\t ei_class, Sym, ent,\n+\t\t\t\t\t\t\t st_name, Elf_Word);\n+\t\t  break;\n+\t\t}\n+\t    }\n+\n \t  for (ent = buf; ent < buf + length; ent += entsize)\n \t    {\n \t      unsigned st_shndx = ELF_FETCH_FIELD (type_functions, ei_class,\n@@ -1426,9 +1452,10 @@ simple_object_elf_copy_lto_debug_sections (simple_object_read *sobj,\n \t      if (st_shndx == SHN_XINDEX)\n \t\tst_shndx = type_functions->fetch_Elf_Word\n \t\t    ((unsigned char *)(shndx_table + (ent - buf) / entsize));\n-\t      /* Eliminate all COMMONs - this includes __gnu_lto_v1\n-\t\t and __gnu_lto_slim which otherwise cause endless\n-\t\t LTO plugin invocation.  */\n+\t      /* Eliminate all COMMONs - this includes __gnu_lto_slim\n+\t\t which otherwise cause endless LTO plugin invocation.\n+\t\t FIXME: remove the condition once we remove emission\n+\t\t of __gnu_lto_slim symbol.  */\n \t      if (st_shndx == SHN_COMMON)\n \t\tdiscard = 1;\n \t      /* We also need to remove symbols refering to sections\n@@ -1460,12 +1487,13 @@ simple_object_elf_copy_lto_debug_sections (simple_object_read *sobj,\n \t\t  else\n \t\t    {\n \t\t      /* Make discarded global symbols hidden weak\n-\t\t\t undefined and sharing the gnu_lto_ name.  */\n+\t\t\t undefined and sharing a name of a prevailing\n+\t\t\t symbol.  */\n \t\t      bind = STB_WEAK;\n \t\t      other = STV_HIDDEN;\n \t\t      ELF_SET_FIELD (type_functions, ei_class, Sym,\n \t\t\t\t     ent, st_name, Elf_Word,\n-\t\t\t\t     gnu_lto - strings);\n+\t\t\t\t     prevailing_name_idx);\n \t\t      ELF_SET_FIELD (type_functions, ei_class, Sym,\n \t\t\t\t     ent, st_shndx, Elf_Half, SHN_UNDEF);\n \t\t    }\n@@ -1482,7 +1510,6 @@ simple_object_elf_copy_lto_debug_sections (simple_object_read *sobj,\n \t\tELF_SET_FIELD (type_functions, ei_class, Sym,\n \t\t\t       ent, st_shndx, Elf_Half, sh_map[st_shndx]);\n \t    }\n-\t  XDELETEVEC (strings);\n \t  XDELETEVEC (shndx_table);\n \t}\n       else if (sh_type == SHT_GROUP)"}]}