{"sha": "bb4dd8fbc857a78bb4bfb69f1bdfdcbd9b1b6cdb", "node_id": "C_kwDOANBUbNoAKGJiNGRkOGZiYzg1N2E3OGJiNGJmYjY5ZjFiZGZkY2JkOWIxYjZjZGI", "commit": {"author": {"name": "Faisal Abbas", "email": "90.abbasfaisal@gmail.com", "date": "2022-07-19T16:39:56Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-08-25T11:40:24Z"}, "message": "gccrs const folding port: continue porting potential_constant_expression_1()\n\nFollowing functions are ported in this changeset:\n - decl_constant_var_p\n - undeduced_auto_decl\n - require_deduced_type\n\nSigned-off-by: Faisal Abbas <90.abbasfaisal@gmail.com>", "tree": {"sha": "ba3e4ba637bba99e6543f29603e8baf93fe14205", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba3e4ba637bba99e6543f29603e8baf93fe14205"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb4dd8fbc857a78bb4bfb69f1bdfdcbd9b1b6cdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb4dd8fbc857a78bb4bfb69f1bdfdcbd9b1b6cdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb4dd8fbc857a78bb4bfb69f1bdfdcbd9b1b6cdb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb4dd8fbc857a78bb4bfb69f1bdfdcbd9b1b6cdb/comments", "author": {"login": "abbasfaisal", "id": 9428333, "node_id": "MDQ6VXNlcjk0MjgzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/9428333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abbasfaisal", "html_url": "https://github.com/abbasfaisal", "followers_url": "https://api.github.com/users/abbasfaisal/followers", "following_url": "https://api.github.com/users/abbasfaisal/following{/other_user}", "gists_url": "https://api.github.com/users/abbasfaisal/gists{/gist_id}", "starred_url": "https://api.github.com/users/abbasfaisal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abbasfaisal/subscriptions", "organizations_url": "https://api.github.com/users/abbasfaisal/orgs", "repos_url": "https://api.github.com/users/abbasfaisal/repos", "events_url": "https://api.github.com/users/abbasfaisal/events{/privacy}", "received_events_url": "https://api.github.com/users/abbasfaisal/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "121c8dd00de81ec9c11d494d402e4761dbe4fe4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/121c8dd00de81ec9c11d494d402e4761dbe4fe4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/121c8dd00de81ec9c11d494d402e4761dbe4fe4d"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "028d88f420ca5efa2aa5e04dc4e5f19025008811", "filename": "gcc/rust/backend/rust-tree.cc", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4dd8fbc857a78bb4bfb69f1bdfdcbd9b1b6cdb/gcc%2Frust%2Fbackend%2Frust-tree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4dd8fbc857a78bb4bfb69f1bdfdcbd9b1b6cdb/gcc%2Frust%2Fbackend%2Frust-tree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-tree.cc?ref=bb4dd8fbc857a78bb4bfb69f1bdfdcbd9b1b6cdb", "patch": "@@ -3969,4 +3969,50 @@ cxx_incomplete_type_diagnostic (location_t loc, const_tree value,\n     }\n }\n \n+// forked from gcc/cp/decl2.cc decl_constant_var_p\n+\n+/* Nonzero for a VAR_DECL whose value can be used in a constant expression.\n+\n+      [expr.const]\n+\n+      An integral constant-expression can only involve ... const\n+      variables of integral or enumeration types initialized with\n+      constant expressions ...\n+\n+      C++0x also allows constexpr variables and temporaries initialized\n+      with constant expressions.  We handle the former here, but the latter\n+      are just folded away in cxx_eval_constant_expression.\n+\n+   The standard does not require that the expression be non-volatile.\n+   G++ implements the proposed correction in DR 457.  */\n+\n+bool\n+decl_constant_var_p (tree decl)\n+{\n+  if (!decl_maybe_constant_var_p (decl))\n+    return false;\n+\n+  return DECL_INITIALIZED_BY_CONSTANT_EXPRESSION_P (decl);\n+}\n+\n+// forked from gcc/cp/decl.cc undeduced_auto_decl\n+\n+/* Returns true iff DECL is a variable or function declared with an auto type\n+   that has not yet been deduced to a real type.  */\n+\n+bool\n+undeduced_auto_decl (tree decl)\n+{\n+  return false;\n+}\n+\n+// forked from gcc/cp/decl.cc require_deduced_type\n+\n+/* Complain if DECL has an undeduced return type.  */\n+\n+bool\n+require_deduced_type (tree decl, tsubst_flags_t complain)\n+{\n+  return true;\n+}\n } // namespace Rust"}, {"sha": "624f9364bedbb3dd5c82626e582ff14cf336f522", "filename": "gcc/rust/backend/rust-tree.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4dd8fbc857a78bb4bfb69f1bdfdcbd9b1b6cdb/gcc%2Frust%2Fbackend%2Frust-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4dd8fbc857a78bb4bfb69f1bdfdcbd9b1b6cdb/gcc%2Frust%2Fbackend%2Frust-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-tree.h?ref=bb4dd8fbc857a78bb4bfb69f1bdfdcbd9b1b6cdb", "patch": "@@ -2542,6 +2542,12 @@ extern void cxx_incomplete_type_inform (const_tree);\n \n extern tree strip_top_quals (tree);\n \n+extern bool undeduced_auto_decl (tree);\n+\n+extern bool require_deduced_type (tree, tsubst_flags_t = tf_warning_or_error);\n+\n+extern bool decl_constant_var_p (tree);\n+\n // forked from gcc/cp/cp-tree.h\n \n enum"}]}