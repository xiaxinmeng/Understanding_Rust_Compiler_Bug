{"sha": "b9334e4c48b64c13796604a859d5cbb2158ea86d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjkzMzRlNGM0OGI2NGMxMzc5NjYwNGE4NTlkNWNiYjIxNThlYTg2ZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-04-16T12:10:34Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-04-16T12:10:34Z"}, "message": "re PR tree-optimization/65774 (FAIL: gcc.dg/builtin-arith-overflow-1.c (internal compiler error))\n\n2015-04-16  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/65774\n\t* tree-ssa-ccp.c (evaluate_stmt): Constrain types we invoke\n\tbit-value tracking on.\n\nFrom-SVN: r222147", "tree": {"sha": "70de4b20a0fdee7312802b5f5b06dabe96b52651", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70de4b20a0fdee7312802b5f5b06dabe96b52651"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9334e4c48b64c13796604a859d5cbb2158ea86d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9334e4c48b64c13796604a859d5cbb2158ea86d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9334e4c48b64c13796604a859d5cbb2158ea86d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9334e4c48b64c13796604a859d5cbb2158ea86d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f8269ad4a97c7a4c950fcf42de24d6f145037e7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8269ad4a97c7a4c950fcf42de24d6f145037e7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8269ad4a97c7a4c950fcf42de24d6f145037e7e"}], "stats": {"total": 51, "additions": 25, "deletions": 26}, "files": [{"sha": "39a73a0e8724e065f60c120a59feeadeff0a2443", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9334e4c48b64c13796604a859d5cbb2158ea86d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9334e4c48b64c13796604a859d5cbb2158ea86d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b9334e4c48b64c13796604a859d5cbb2158ea86d", "patch": "@@ -1,3 +1,9 @@\n+2015-04-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/65774\n+\t* tree-ssa-ccp.c (evaluate_stmt): Constrain types we invoke\n+\tbit-value tracking on.\n+\n 2015-04-16  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/64277"}, {"sha": "79f6afbed9820b090a625bbc8201bfc861e92759", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 19, "deletions": 26, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9334e4c48b64c13796604a859d5cbb2158ea86d/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9334e4c48b64c13796604a859d5cbb2158ea86d/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=b9334e4c48b64c13796604a859d5cbb2158ea86d", "patch": "@@ -1772,35 +1772,28 @@ evaluate_stmt (gimple stmt)\n \t{\n \t  enum tree_code subcode = gimple_assign_rhs_code (stmt);\n \t  tree rhs1 = gimple_assign_rhs1 (stmt);\n-\t  switch (get_gimple_rhs_class (subcode))\n-\t    {\n-\t    case GIMPLE_SINGLE_RHS:\n-\t      if (INTEGRAL_TYPE_P (TREE_TYPE (rhs1))\n-\t\t  || POINTER_TYPE_P (TREE_TYPE (rhs1)))\n-\t\tval = get_value_for_expr (rhs1, true);\n-\t      break;\n+\t  tree lhs = gimple_assign_lhs (stmt);\n+\t  if ((INTEGRAL_TYPE_P (TREE_TYPE (lhs))\n+\t       || POINTER_TYPE_P (TREE_TYPE (lhs)))\n+\t      && (INTEGRAL_TYPE_P (TREE_TYPE (rhs1))\n+\t\t  || POINTER_TYPE_P (TREE_TYPE (rhs1))))\n+\t    switch (get_gimple_rhs_class (subcode))\n+\t      {\n+\t      case GIMPLE_SINGLE_RHS:\n+\t        val = get_value_for_expr (rhs1, true);\n+\t\tbreak;\n \n-\t    case GIMPLE_UNARY_RHS:\n-\t      if ((INTEGRAL_TYPE_P (TREE_TYPE (rhs1))\n-\t\t   || POINTER_TYPE_P (TREE_TYPE (rhs1)))\n-\t\t  && (INTEGRAL_TYPE_P (gimple_expr_type (stmt))\n-\t\t      || POINTER_TYPE_P (gimple_expr_type (stmt))))\n-\t\tval = bit_value_unop (subcode, gimple_expr_type (stmt), rhs1);\n-\t      break;\n+\t      case GIMPLE_UNARY_RHS:\n+\t\tval = bit_value_unop (subcode, TREE_TYPE (lhs), rhs1);\n+\t\tbreak;\n \n-\t    case GIMPLE_BINARY_RHS:\n-\t      if (INTEGRAL_TYPE_P (TREE_TYPE (rhs1))\n-\t\t  || POINTER_TYPE_P (TREE_TYPE (rhs1)))\n-\t\t{\n-\t\t  tree lhs = gimple_assign_lhs (stmt);\n-\t\t  tree rhs2 = gimple_assign_rhs2 (stmt);\n-\t\t  val = bit_value_binop (subcode,\n-\t\t\t\t\t TREE_TYPE (lhs), rhs1, rhs2);\n-\t\t}\n-\t      break;\n+\t      case GIMPLE_BINARY_RHS:\n+\t\tval = bit_value_binop (subcode, TREE_TYPE (lhs), rhs1,\n+\t\t\t\t       gimple_assign_rhs2 (stmt));\n+\t\tbreak;\n \n-\t    default:;\n-\t    }\n+\t      default:;\n+\t      }\n \t}\n       else if (code == GIMPLE_COND)\n \t{"}]}