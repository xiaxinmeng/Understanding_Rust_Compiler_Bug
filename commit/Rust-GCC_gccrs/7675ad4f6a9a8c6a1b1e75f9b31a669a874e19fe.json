{"sha": "7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY3NWFkNGY2YTlhOGM2YTFiMWU3NWY5YjMxYTY2OWE4NzRlMTlmZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-26T13:20:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-26T13:20:47Z"}, "message": "[multiple changes]\n\n2010-10-26  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch5.adb, exp_prag.adb, sem_ch3.adb, exp_atag.adb, layout.adb,\n\tsem_dist.adb, exp_ch7.adb, exp_util.adb, exp_attr.adb, exp_ch9.adb,\n\tsem_ch10.adb, checks.adb, sem_prag.adb, par-endh.adb, sem_ch12.adb,\n\texp_smem.adb, sem_attr.adb, exp_ch4.adb, exp_ch6.adb, exp_ch8.adb,\n\tsem_ch6.adb, exp_disp.adb, exp_aggr.adb, exp_dist.adb, sem_ch13.adb,\n\tpar-ch3.adb, par-ch5.adb, exp_strm.adb, exp_ch3.adb: Minor reformatting\n\t* opt.ads: Minor comment fix.\n\n2010-10-26  Vincent Celier  <celier@adacore.com>\n\n\t* gnat_ugn.texi: Document option -s for gnatlink.\n\nFrom-SVN: r165963", "tree": {"sha": "fbb9f4947a251f0b47c2f6205c923acb6a40ad83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbb9f4947a251f0b47c2f6205c923acb6a40ad83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/comments", "author": null, "committer": null, "parents": [{"sha": "dc718e52b96bde01a6095f8319c3a0191bff65a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc718e52b96bde01a6095f8319c3a0191bff65a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc718e52b96bde01a6095f8319c3a0191bff65a3"}], "stats": {"total": 896, "additions": 389, "deletions": 507}, "files": [{"sha": "2f3fac855fcaa1652bee772269ede1b48c31007d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -1,3 +1,17 @@\n+2010-10-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch5.adb, exp_prag.adb, sem_ch3.adb, exp_atag.adb, layout.adb,\n+\tsem_dist.adb, exp_ch7.adb, exp_util.adb, exp_attr.adb, exp_ch9.adb,\n+\tsem_ch10.adb, checks.adb, sem_prag.adb, par-endh.adb, sem_ch12.adb,\n+\texp_smem.adb, sem_attr.adb, exp_ch4.adb, exp_ch6.adb, exp_ch8.adb,\n+\tsem_ch6.adb, exp_disp.adb, exp_aggr.adb, exp_dist.adb, sem_ch13.adb,\n+\tpar-ch3.adb, par-ch5.adb, exp_strm.adb, exp_ch3.adb: Minor reformatting\n+\t* opt.ads: Minor comment fix.\n+\n+2010-10-26  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnat_ugn.texi: Document option -s for gnatlink.\n+\n 2010-10-26  Robert Dewar  <dewar@adacore.com>\n \n \t* opt.ads: Move documentation on checksum stuff here from prj-nmsc"}, {"sha": "684523929949fc0793d41714566eea848f3f2116", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -2419,14 +2419,14 @@ package body Checks is\n                      --  one of the stored discriminants, this will provide the\n                      --  required consistency check.\n \n-                     Append_Elmt (\n-                        Make_Selected_Component (Loc,\n-                          Prefix =>\n+                     Append_Elmt\n+                       (Make_Selected_Component (Loc,\n+                          Prefix        =>\n                             Duplicate_Subexpr_No_Checks\n                               (Expr, Name_Req => True),\n                           Selector_Name =>\n                             Make_Identifier (Loc, Chars (Discr))),\n-                                New_Constraints);\n+                        New_Constraints);\n \n                   else\n                      --  Discriminant of more remote ancestor ???"}, {"sha": "922b356d6ceb7b9ac7c7cc87ac2383c9d9903878", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -2226,8 +2226,7 @@ package body Exp_Aggr is\n                    Prefix =>\n                      New_Reference_To (\n                        Associated_Final_Chain (Etype (Alloc)), Loc),\n-                   Selector_Name =>\n-                     Make_Identifier (Loc, Name_F));\n+                   Selector_Name => Make_Identifier (Loc, Name_F));\n \n             elsif Present (Flist) then\n                External_Final_List := New_Copy_Tree (Flist);\n@@ -2392,7 +2391,7 @@ package body Exp_Aggr is\n                         Make_Identifier (Loc, Name_uController));\n                   F :=\n                     Make_Selected_Component (Loc,\n-                      Prefix => F,\n+                      Prefix        => F,\n                       Selector_Name => Make_Identifier (Loc, Name_F));\n \n                   Attach := Make_Integer_Literal (Loc, 1);\n@@ -3001,15 +3000,14 @@ package body Exp_Aggr is\n             if Needs_Finalization (Comp_Type) then\n                Internal_Final_List :=\n                  Make_Selected_Component (Loc,\n-                   Prefix => Convert_To (\n-                     Scope (Original_Record_Component (Selector)),\n-                     New_Copy_Tree (Target)),\n-                   Selector_Name =>\n-                     Make_Identifier (Loc, Name_uController));\n+                   Prefix        => Convert_To\n+                     (Scope (Original_Record_Component (Selector)),\n+                      New_Copy_Tree (Target)),\n+                   Selector_Name => Make_Identifier (Loc, Name_uController));\n \n                Internal_Final_List :=\n                  Make_Selected_Component (Loc,\n-                   Prefix => Internal_Final_List,\n+                   Prefix        => Internal_Final_List,\n                    Selector_Name => Make_Identifier (Loc, Name_F));\n \n                --  The internal final list can be part of a constant object"}, {"sha": "7ed2a3f5f840beb54fd26071fa5c6ad71310fab1", "filename": "gcc/ada/exp_atag.adb", "status": "modified", "additions": 26, "deletions": 33, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_atag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_atag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_atag.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -83,8 +83,7 @@ package body Exp_Atag is\n \n       Append_To (Stmts,\n         Make_Assignment_Statement (Loc,\n-          Name =>\n-            Make_Identifier (Loc, Name_uC),\n+          Name => Make_Identifier (Loc, Name_uC),\n           Expression =>\n             Make_Function_Call (Loc,\n               Name => New_Occurrence_Of (RTE (RE_Get_Prim_Op_Kind), Loc),\n@@ -112,26 +111,23 @@ package body Exp_Atag is\n             Make_Or_Else (Loc,\n               Left_Opnd =>\n                 Make_Op_Eq (Loc,\n-                  Left_Opnd =>\n-                    Make_Identifier (Loc, Name_uC),\n+                  Left_Opnd  => Make_Identifier (Loc, Name_uC),\n                   Right_Opnd =>\n                     New_Reference_To (RTE (RE_POK_Procedure), Loc)),\n               Right_Opnd =>\n                 Make_Or_Else (Loc,\n                   Left_Opnd =>\n                     Make_Op_Eq (Loc,\n-                      Left_Opnd =>\n-                        Make_Identifier (Loc, Name_uC),\n+                      Left_Opnd => Make_Identifier (Loc, Name_uC),\n                       Right_Opnd =>\n-                        New_Reference_To (RTE (\n-                          RE_POK_Protected_Procedure), Loc)),\n+                        New_Reference_To\n+                          (RTE (RE_POK_Protected_Procedure), Loc)),\n                   Right_Opnd =>\n                     Make_Op_Eq (Loc,\n-                      Left_Opnd =>\n-                        Make_Identifier (Loc, Name_uC),\n+                      Left_Opnd  => Make_Identifier (Loc, Name_uC),\n                       Right_Opnd =>\n-                        New_Reference_To (RTE (\n-                          RE_POK_Task_Procedure), Loc)))),\n+                        New_Reference_To\n+                          (RTE (RE_POK_Task_Procedure), Loc)))),\n \n           Then_Statements =>\n             New_List (\n@@ -319,12 +315,11 @@ package body Exp_Atag is\n                           New_Reference_To\n                             (RTU_Entity (System_Storage_Elements), Loc),\n                         Selector_Name =>\n-                          Make_Identifier (Loc,\n-                            Chars => Name_Op_Subtract)),\n+                          Make_Identifier (Loc, Name_Op_Subtract)),\n                     Parameter_Associations => New_List (\n                       Ctrl_Tag,\n-                      New_Reference_To (RTE (RE_DT_Predef_Prims_Offset),\n-                                        Loc)))))),\n+                      New_Reference_To\n+                        (RTE (RE_DT_Predef_Prims_Offset), Loc)))))),\n           Expressions =>\n             New_List (Make_Integer_Literal (Loc, Position)));\n    end Build_Get_Predefined_Prim_Op_Address;\n@@ -764,15 +759,15 @@ package body Exp_Atag is\n             Make_Function_Call (Loc,\n               Name =>\n                 Make_Expanded_Name (Loc,\n-                  Chars => Name_Op_Subtract,\n-                  Prefix => New_Reference_To\n-                             (RTU_Entity (System_Storage_Elements), Loc),\n-                  Selector_Name => Make_Identifier (Loc,\n-                                     Chars => Name_Op_Subtract)),\n+                  Chars         => Name_Op_Subtract,\n+                  Prefix        =>\n+                    New_Reference_To\n+                      (RTU_Entity (System_Storage_Elements), Loc),\n+                  Selector_Name => Make_Identifier (Loc, Name_Op_Subtract)),\n               Parameter_Associations => New_List (\n                 Unchecked_Convert_To (RTE (RE_Address), Tag_Node),\n-                New_Reference_To (RTE (RE_DT_Offset_To_Top_Offset),\n-                                  Loc)))));\n+                New_Reference_To\n+                  (RTE (RE_DT_Offset_To_Top_Offset), Loc)))));\n    end Build_Offset_To_Top;\n \n    ------------------------------------------\n@@ -867,15 +862,15 @@ package body Exp_Atag is\n               Make_Function_Call (Loc,\n                 Name =>\n                   Make_Expanded_Name (Loc,\n-                    Chars => Name_Op_Subtract,\n-                    Prefix => New_Reference_To\n-                               (RTU_Entity (System_Storage_Elements), Loc),\n-                    Selector_Name => Make_Identifier (Loc,\n-                                       Chars => Name_Op_Subtract)),\n+                    Chars         => Name_Op_Subtract,\n+                    Prefix        =>\n+                      New_Reference_To\n+                        (RTU_Entity (System_Storage_Elements), Loc),\n+                    Selector_Name => Make_Identifier (Loc, Name_Op_Subtract)),\n                 Parameter_Associations => New_List (\n                   Unchecked_Convert_To (RTE (RE_Address), Iface_Tag),\n-                  New_Reference_To (RTE (RE_DT_Offset_To_Top_Offset),\n-                                    Loc))))),\n+                  New_Reference_To\n+                    (RTE (RE_DT_Offset_To_Top_Offset), Loc))))),\n           Offset_Value);\n    end Build_Set_Static_Offset_To_Top;\n \n@@ -898,9 +893,7 @@ package body Exp_Atag is\n                     Prefix =>\n                       New_Reference_To\n                         (RTU_Entity (System_Storage_Elements), Loc),\n-                    Selector_Name =>\n-                      Make_Identifier (Loc,\n-                        Chars => Name_Op_Subtract)),\n+                    Selector_Name => Make_Identifier (Loc, Name_Op_Subtract)),\n \n                 Parameter_Associations => New_List (\n                   Tag_Node_Addr,"}, {"sha": "26d54592191dae0386a36f7924b4e648afb20b51", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 14, "deletions": 18, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -1882,16 +1882,13 @@ package body Exp_Attr is\n               Make_Pragma (Loc,\n                 Chars => Name_Import,\n                 Pragma_Argument_Associations => New_List (\n-                  Make_Pragma_Argument_Association (Loc,\n-                    Expression => Lang),\n+                  Make_Pragma_Argument_Association (Loc, Expression => Lang),\n \n                   Make_Pragma_Argument_Association (Loc,\n-                    Expression =>\n-                      Make_Identifier (Loc, Chars (Ent))),\n+                    Expression => Make_Identifier (Loc, Chars (Ent))),\n \n                   Make_Pragma_Argument_Association (Loc,\n-                    Expression =>\n-                      Make_String_Literal (Loc, Str))))));\n+                    Expression => Make_String_Literal (Loc, Str))))));\n \n             Set_Entity (N, Ent);\n             Rewrite (N, New_Occurrence_Of (Ent, Loc));\n@@ -3533,16 +3530,16 @@ package body Exp_Attr is\n \n                   Object_Parm :=\n                     Make_Attribute_Reference (Loc,\n-                       Prefix =>\n-                         Make_Selected_Component (Loc,\n-                           Prefix =>\n-                             Unchecked_Convert_To (New_Itype,\n-                               New_Reference_To\n-                                 (First_Entity\n-                                   (Protected_Body_Subprogram (Subprg)),\n-                                  Loc)),\n-                           Selector_Name =>\n-                             Make_Identifier (Loc, Name_uObject)),\n+                      Prefix =>\n+                        Make_Selected_Component (Loc,\n+                          Prefix =>\n+                            Unchecked_Convert_To (New_Itype,\n+                              New_Reference_To\n+                                (First_Entity\n+                                  (Protected_Body_Subprogram (Subprg)),\n+                                 Loc)),\n+                          Selector_Name =>\n+                            Make_Identifier (Loc, Name_uObject)),\n                        Attribute_Name => Name_Unchecked_Access);\n                end;\n \n@@ -3557,8 +3554,7 @@ package body Exp_Attr is\n                                     (First_Entity\n                                       (Protected_Body_Subprogram (Subprg)),\n                                        Loc),\n-                        Selector_Name =>\n-                          Make_Identifier (Loc, Name_uObject)),\n+                        Selector_Name => Make_Identifier (Loc, Name_uObject)),\n                     Attribute_Name => Name_Unchecked_Access);\n             end if;\n "}, {"sha": "d5359c1a90ccb8a2d40992de4fa6e135faf265f1", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 33, "deletions": 38, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -580,7 +580,7 @@ package body Exp_Ch3 is\n       begin\n          Comp :=\n            Make_Indexed_Component (Loc,\n-             Prefix => Make_Identifier (Loc, Name_uInit),\n+             Prefix      => Make_Identifier (Loc, Name_uInit),\n              Expressions => Index_List);\n \n          if Needs_Simple_Initialization (Comp_Type) then\n@@ -645,7 +645,7 @@ package body Exp_Ch3 is\n                           Make_Attribute_Reference (Loc,\n                             Prefix => Make_Identifier (Loc, Name_uInit),\n                             Attribute_Name  => Name_Range,\n-                            Expressions => New_List (\n+                            Expressions     => New_List (\n                               Make_Integer_Literal (Loc, N))))),\n                 Statements =>  Init_One_Dimension (N + 1)));\n          end if;\n@@ -872,8 +872,8 @@ package body Exp_Ch3 is\n       Decl :=\n         Make_Object_Renaming_Declaration (Loc,\n           Defining_Identifier => M_Id,\n-          Subtype_Mark => New_Reference_To (Standard_Integer, Loc),\n-          Name => Make_Identifier (Loc, Name_uMaster));\n+          Subtype_Mark        => New_Reference_To (Standard_Integer, Loc),\n+          Name                => Make_Identifier (Loc, Name_uMaster));\n       Insert_Before (P, Decl);\n       Analyze (Decl);\n \n@@ -938,8 +938,7 @@ package body Exp_Ch3 is\n          --  Replace the discriminant which controls the variant, with the name\n          --  of the formal of the checking function.\n \n-         Set_Expression (Case_Node,\n-           Make_Identifier (Loc, Chars (Case_Id)));\n+         Set_Expression (Case_Node, Make_Identifier (Loc, Chars (Case_Id)));\n \n          Choice := First (Discrete_Choices (Variant));\n \n@@ -1712,8 +1711,8 @@ package body Exp_Ch3 is\n       Decl :=\n         Make_Object_Renaming_Declaration (Loc,\n           Defining_Identifier => M_Id,\n-          Subtype_Mark => New_Reference_To (RTE (RE_Master_Id), Loc),\n-          Name => Make_Identifier (Loc, Name_uMaster));\n+          Subtype_Mark        => New_Reference_To (RTE (RE_Master_Id), Loc),\n+          Name                => Make_Identifier (Loc, Name_uMaster));\n       Insert_Before (N, Decl);\n       Analyze (Decl);\n       return M_Id;\n@@ -1861,7 +1860,7 @@ package body Exp_Ch3 is\n          Loc := Sloc (N);\n          Lhs :=\n            Make_Selected_Component (Loc,\n-             Prefix => Make_Identifier (Loc, Name_uInit),\n+             Prefix        => Make_Identifier (Loc, Name_uInit),\n              Selector_Name => New_Occurrence_Of (Id, Loc));\n          Set_Assignment_OK (Lhs);\n \n@@ -2162,11 +2161,11 @@ package body Exp_Ch3 is\n                   Make_Simple_Return_Statement (Loc,\n                     Expression =>\n                       Make_Attribute_Reference (Loc,\n-                        Prefix =>\n+                        Prefix         =>\n                           Make_Selected_Component (Loc,\n-                            Prefix => Make_Identifier (Loc, Name_uO),\n-                            Selector_Name => New_Reference_To\n-                                               (Iface_Comp, Loc)),\n+                            Prefix        => Make_Identifier (Loc, Name_uO),\n+                            Selector_Name =>\n+                              New_Reference_To (Iface_Comp, Loc)),\n                         Attribute_Name => Name_Position)))));\n \n             Set_Ekind       (Func_Id, E_Function);\n@@ -2446,7 +2445,7 @@ package body Exp_Ch3 is\n                  Make_Assignment_Statement (Loc,\n                    Name =>\n                      Make_Selected_Component (Loc,\n-                       Prefix => Make_Identifier (Loc, Name_uInit),\n+                       Prefix        => Make_Identifier (Loc, Name_uInit),\n                        Selector_Name =>\n                          New_Reference_To\n                            (First_Tag_Component (Rec_Type), Loc)),\n@@ -2501,7 +2500,7 @@ package body Exp_Ch3 is\n                  Make_Assignment_Statement (Loc,\n                    Name =>\n                      Make_Selected_Component (Loc,\n-                       Prefix => Make_Identifier (Loc, Name_uInit),\n+                       Prefix        => Make_Identifier (Loc, Name_uInit),\n                        Selector_Name =>\n                          New_Reference_To\n                            (First_Tag_Component (Rec_Type), Loc)),\n@@ -2863,14 +2862,13 @@ package body Exp_Ch3 is\n                Append_To (Statement_List,\n                  Make_Assignment_Statement (Loc,\n                    Name => Make_Selected_Component (Loc,\n-                     Prefix => Make_Identifier (Loc, Name_uInit),\n+                     Prefix        => Make_Identifier (Loc, Name_uInit),\n                      Selector_Name => Make_Identifier (Loc, Name_uTask_Id)),\n                    Expression => Make_Attribute_Reference (Loc,\n                      Prefix =>\n                        Make_Selected_Component (Loc,\n-                         Prefix => Make_Identifier (Loc, Name_uInit),\n-                         Selector_Name =>\n-                           Make_Identifier (Loc, Name_uATCB)),\n+                         Prefix        => Make_Identifier (Loc, Name_uInit),\n+                         Selector_Name => Make_Identifier (Loc, Name_uATCB)),\n                      Attribute_Name => Name_Unchecked_Access)));\n             end if;\n \n@@ -2914,12 +2912,12 @@ package body Exp_Ch3 is\n                                     RTE (RE_Bind_Interrupt_To_Entry), Loc),\n                                   Parameter_Associations => New_List (\n                                     Make_Selected_Component (Loc,\n-                                      Prefix =>\n+                                      Prefix        =>\n                                         Make_Identifier (Loc, Name_uInit),\n                                       Selector_Name =>\n                                         Make_Identifier (Loc, Name_uTask_Id)),\n-                                    Entry_Index_Expression (\n-                                      Loc, Ent, Empty, Task_Type),\n+                                    Entry_Index_Expression\n+                                      (Loc, Ent, Empty, Task_Type),\n                                     Expression (Vis_Decl))));\n                            end if;\n                         end if;\n@@ -5757,13 +5755,12 @@ package body Exp_Ch3 is\n             Pos_Expr :=\n               Convert_To (Standard_Integer,\n                 Make_Op_Subtract (Loc,\n-                  Left_Opnd =>\n-                     Unchecked_Convert_To (Ityp,\n-                       Make_Identifier (Loc, Name_uA)),\n-                   Right_Opnd =>\n-                     Make_Integer_Literal (Loc,\n-                        Intval =>\n-                          Enumeration_Rep (First_Literal (Typ)))));\n+                  Left_Opnd  =>\n+                    Unchecked_Convert_To\n+                     (Ityp, Make_Identifier (Loc, Name_uA)),\n+                  Right_Opnd =>\n+                    Make_Integer_Literal (Loc,\n+                      Intval => Enumeration_Rep (First_Literal (Typ)))));\n          end if;\n \n          Append_To (Lst,\n@@ -5856,8 +5853,8 @@ package body Exp_Ch3 is\n                 Statements => New_List (\n                   Make_Case_Statement (Loc,\n                     Expression =>\n-                      Unchecked_Convert_To (Ityp,\n-                        Make_Identifier (Loc, Name_uA)),\n+                      Unchecked_Convert_To\n+                        (Ityp, Make_Identifier (Loc, Name_uA)),\n                     Alternatives => Lst))));\n \n       Set_TSS (Typ, Fent);\n@@ -7972,7 +7969,7 @@ package body Exp_Ch3 is\n            Make_Case_Statement (Loc,\n              Expression =>\n                Make_Selected_Component (Loc,\n-                 Prefix => Make_Identifier (Loc, Name_X),\n+                 Prefix        => Make_Identifier (Loc, Name_X),\n                  Selector_Name => New_Copy (Name (Variant_Part (CL)))),\n              Alternatives => Alt_List));\n       end if;\n@@ -8034,14 +8031,12 @@ package body Exp_Ch3 is\n                    Left_Opnd =>\n                      Make_Selected_Component (Loc,\n                        Prefix        => Make_Identifier (Loc, Name_X),\n-                       Selector_Name =>\n-                         Make_Identifier (Loc, Field_Name)),\n+                       Selector_Name => Make_Identifier (Loc, Field_Name)),\n \n                    Right_Opnd =>\n                      Make_Selected_Component (Loc,\n                        Prefix        => Make_Identifier (Loc, Name_Y),\n-                       Selector_Name =>\n-                         Make_Identifier (Loc, Field_Name))));\n+                       Selector_Name => Make_Identifier (Loc, Field_Name))));\n             end if;\n \n             Next_Non_Pragma (C);\n@@ -8811,7 +8806,7 @@ package body Exp_Ch3 is\n           Make_Simple_Return_Statement (Loc,\n             Expression =>\n               Make_Attribute_Reference (Loc,\n-                Prefix => Make_Identifier (Loc, Name_X),\n+                Prefix          => Make_Identifier (Loc, Name_X),\n                 Attribute_Name  => Name_Alignment)))));\n \n       Append_To (Res, Decl);\n@@ -8834,7 +8829,7 @@ package body Exp_Ch3 is\n           Make_Simple_Return_Statement (Loc,\n             Expression =>\n               Make_Attribute_Reference (Loc,\n-                Prefix => Make_Identifier (Loc, Name_X),\n+                Prefix          => Make_Identifier (Loc, Name_X),\n                 Attribute_Name  => Name_Size)))));\n \n       Append_To (Res, Decl);"}, {"sha": "2144de90a226bea8b7773a32ab0b6a2c830088b5", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -1504,12 +1504,12 @@ package body Exp_Ch4 is\n \n          L :=\n            Make_Indexed_Component (Loc,\n-             Prefix => Make_Identifier (Loc, Chars (A)),\n+             Prefix      => Make_Identifier (Loc, Chars (A)),\n              Expressions => Index_List1);\n \n          R :=\n            Make_Indexed_Component (Loc,\n-             Prefix => Make_Identifier (Loc, Chars (B)),\n+             Prefix      => Make_Identifier (Loc, Chars (B)),\n              Expressions => Index_List2);\n \n          Test := Expand_Composite_Equality\n@@ -3237,10 +3237,9 @@ package body Exp_Ch4 is\n \n          Flist :=\n            Make_Selected_Component (Loc,\n-             Prefix =>\n+             Prefix        =>\n                New_Reference_To (Associated_Final_Chain (PtrT), Loc),\n-             Selector_Name =>\n-               Make_Identifier (Loc, Name_F));\n+             Selector_Name => Make_Identifier (Loc, Name_F));\n \n          Coext_Elmt := First_Elmt (Coextensions (N));\n          while Present (Coext_Elmt) loop\n@@ -5570,12 +5569,10 @@ package body Exp_Ch4 is\n                then\n                   --  Enclosing record is an Unchecked_Union, use formal A\n \n-                  if Is_Unchecked_Union (Scope\n-                       (Entity (Selector_Name (Lhs))))\n+                  if Is_Unchecked_Union\n+                       (Scope (Entity (Selector_Name (Lhs))))\n                   then\n-                     Lhs_Discr_Val :=\n-                       Make_Identifier (Loc,\n-                         Chars => Name_A);\n+                     Lhs_Discr_Val := Make_Identifier (Loc, Name_A);\n \n                   --  Enclosing record is of a non-Unchecked_Union type, it is\n                   --  possible to reference the discriminant.\n@@ -5614,9 +5611,7 @@ package body Exp_Ch4 is\n                   if Is_Unchecked_Union\n                        (Scope (Entity (Selector_Name (Rhs))))\n                   then\n-                     Rhs_Discr_Val :=\n-                       Make_Identifier (Loc,\n-                         Chars => Name_B);\n+                     Rhs_Discr_Val := Make_Identifier (Loc, Name_B);\n \n                   else\n                      Rhs_Discr_Val :=\n@@ -8046,7 +8041,8 @@ package body Exp_Ch4 is\n                   while Present (Disc) loop\n                      Append_To (Cons,\n                        Make_Selected_Component (Loc,\n-                         Prefix => Duplicate_Subexpr_Move_Checks (Operand),\n+                         Prefix        =>\n+                           Duplicate_Subexpr_Move_Checks (Operand),\n                          Selector_Name =>\n                            Make_Identifier (Loc, Chars (Disc))));\n                      Next_Discriminant (Disc);"}, {"sha": "921908979cb4af7cb7c79c9e42e9241c52378604", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -1332,7 +1332,7 @@ package body Exp_Ch5 is\n                else\n                   Expr :=\n                     Make_Selected_Component (Loc,\n-                      Prefix => Duplicate_Subexpr (Rhs),\n+                      Prefix        => Duplicate_Subexpr (Rhs),\n                       Selector_Name =>\n                         Make_Identifier (Loc, Chars (Name (VP))));\n                end if;\n@@ -1986,14 +1986,12 @@ package body Exp_Ch5 is\n                                  Make_Selected_Component (Loc,\n                                    Prefix        => Duplicate_Subexpr (Lhs),\n                                    Selector_Name =>\n-                                     Make_Identifier (Loc,\n-                                       Chars => Name_uTag)),\n+                                     Make_Identifier (Loc, Name_uTag)),\n                                Right_Opnd =>\n                                  Make_Selected_Component (Loc,\n                                    Prefix        => Duplicate_Subexpr (Rhs),\n                                    Selector_Name =>\n-                                     Make_Identifier (Loc,\n-                                       Chars => Name_uTag))),\n+                                     Make_Identifier (Loc, Name_uTag))),\n                          Reason => CE_Tag_Check_Failed));\n                   end if;\n \n@@ -2909,7 +2907,7 @@ package body Exp_Ch5 is\n                       Right_Opnd => Make_Selected_Component (Loc,\n                          Prefix        => New_Occurrence_Of (Pack, Loc),\n                          Selector_Name =>\n-                           Make_Identifier (Loc, Chars => Name_No_Element)));\n+                           Make_Identifier (Loc, Name_No_Element)));\n \n             if Of_Present (I_Spec) then\n \n@@ -3751,7 +3749,7 @@ package body Exp_Ch5 is\n                if Has_Controlled_Component (T) then\n                   Prev_Ref :=\n                     Make_Selected_Component (Loc,\n-                      Prefix =>\n+                      Prefix        =>\n                         Make_Selected_Component (Loc,\n                           Prefix => Duplicate_Subexpr_No_Checks (L),\n                           Selector_Name =>\n@@ -3895,7 +3893,7 @@ package body Exp_Ch5 is\n               Make_Assignment_Statement (Loc,\n                 Name =>\n                   Make_Selected_Component (Loc,\n-                    Prefix =>\n+                    Prefix        =>\n                       Unchecked_Convert_To (RTE (RE_Finalizable),\n                         New_Copy_Tree (Ctrl_Ref)),\n                     Selector_Name => Make_Identifier (Loc, Name_Prev)),\n@@ -3905,7 +3903,7 @@ package body Exp_Ch5 is\n               Make_Assignment_Statement (Loc,\n                 Name =>\n                   Make_Selected_Component (Loc,\n-                    Prefix =>\n+                    Prefix        =>\n                       Unchecked_Convert_To (RTE (RE_Finalizable),\n                         New_Copy_Tree (Ctrl_Ref)),\n                     Selector_Name => Make_Identifier (Loc, Name_Next)),"}, {"sha": "c44ff98f3898396954408e2f0677c16482f8d1d2", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -5631,9 +5631,7 @@ package body Exp_Ch6 is\n       Proc  : Entity_Id;\n \n    begin\n-      Rec :=\n-        Make_Identifier (Loc,\n-          Chars => Name_uObject);\n+      Rec := Make_Identifier (Loc, Name_uObject);\n       Set_Etype (Rec, Corresponding_Record_Type (Scop));\n \n       --  Find enclosing protected operation, and retrieve its first parameter,\n@@ -6105,9 +6103,8 @@ package body Exp_Ch6 is\n                   Make_Op_Ne (Loc,\n                     Left_Opnd =>\n                       Make_Selected_Component (Loc,\n-                        Prefix => Duplicate_Subexpr (Exp),\n-                        Selector_Name =>\n-                          Make_Identifier (Loc, Chars => Name_uTag)),\n+                        Prefix        => Duplicate_Subexpr (Exp),\n+                        Selector_Name => Make_Identifier (Loc, Name_uTag)),\n                     Right_Opnd =>\n                       Make_Attribute_Reference (Loc,\n                         Prefix => New_Occurrence_Of (Base_Type (Utyp), Loc),\n@@ -6233,8 +6230,7 @@ package body Exp_Ch6 is\n                    Left_Opnd  =>\n                      Make_Selected_Component (Loc,\n                        Prefix        => Duplicate_Subexpr (Exp),\n-                       Selector_Name =>\n-                         Make_Identifier (Loc, Chars => Name_uTag)),\n+                       Selector_Name => Make_Identifier (Loc, Name_uTag)),\n                    Right_Opnd =>\n                      Make_Attribute_Reference (Loc,\n                        Prefix         =>"}, {"sha": "70e7a49d2e073dd3802c973980e79148b82f2029", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 25, "deletions": 20, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -1701,7 +1701,7 @@ package body Exp_Ch7 is\n \n          return\n            Make_Selected_Component (Loc,\n-             Prefix =>\n+             Prefix        =>\n                Make_Selected_Component (Loc,\n                  Prefix        => R,\n                  Selector_Name => Make_Identifier (Loc, Name_uController)),\n@@ -2308,10 +2308,10 @@ package body Exp_Ch7 is\n                 Name => Name,\n                 Parameter_Associations => New_List (\n                   Make_Attribute_Reference (Loc,\n-                    Prefix =>\n+                    Prefix         =>\n                       Make_Selected_Component (Loc,\n-                        Prefix => New_Reference_To (\n-                          Defining_Identifier (Param), Loc),\n+                        Prefix        =>\n+                          New_Reference_To (Defining_Identifier (Param), Loc),\n                         Selector_Name =>\n                           Make_Identifier (Loc, Name_uObject)),\n                     Attribute_Name => Name_Unchecked_Access))));\n@@ -2605,9 +2605,9 @@ package body Exp_Ch7 is\n                         Defining_Identifier => Index,\n                         Discrete_Subtype_Definition =>\n                           Make_Attribute_Reference (Loc,\n-                            Prefix => Make_Identifier (Loc, Name_V),\n+                            Prefix          => Make_Identifier (Loc, Name_V),\n                             Attribute_Name  => Name_Range,\n-                            Expressions => New_List (\n+                            Expressions     => New_List (\n                               Make_Integer_Literal (Loc, N))),\n                         Reverse_Present => Prim = Finalize_Case)),\n                 Statements => One_Dimension (N + 1)));\n@@ -2747,17 +2747,19 @@ package body Exp_Ch7 is\n                    Parameter_Associations =>\n                      New_List (New_Copy_Tree (Obj_Ref))));\n \n-               Append_To (Res, Make_Attach_Call (\n-                 Obj_Ref      => New_Copy_Tree (Obj_Ref),\n-                 Flist_Ref    => Make_Identifier (Loc, Name_L),\n-                 With_Attach => Make_Identifier (Loc, Name_B)));\n+               Append_To (Res,\n+                 Make_Attach_Call\n+                   (Obj_Ref     => New_Copy_Tree (Obj_Ref),\n+                    Flist_Ref   => Make_Identifier (Loc, Name_L),\n+                    With_Attach => Make_Identifier (Loc, Name_B)));\n             end if;\n \n          when Adjust_Case =>\n             Append_List_To (Res,\n-              Make_Adjust_Call (Controller_Ref, Controller_Typ,\n-                Make_Identifier (Loc, Name_L),\n-                Make_Identifier (Loc, Name_B)));\n+              Make_Adjust_Call\n+                (Controller_Ref, Controller_Typ,\n+                 Make_Identifier (Loc, Name_L),\n+                 Make_Identifier (Loc, Name_B)));\n \n             --  When the type is also a controlled type by itself,\n             --  adjust it and attach it to the finalization chain.\n@@ -2770,17 +2772,18 @@ package body Exp_Ch7 is\n                    Parameter_Associations =>\n                      New_List (New_Copy_Tree (Obj_Ref))));\n \n-               Append_To (Res, Make_Attach_Call (\n-                 Obj_Ref      => New_Copy_Tree (Obj_Ref),\n-                 Flist_Ref    => Make_Identifier (Loc, Name_L),\n-                 With_Attach => Make_Identifier (Loc, Name_B)));\n+               Append_To (Res,\n+                 Make_Attach_Call\n+                   (Obj_Ref     => New_Copy_Tree (Obj_Ref),\n+                    Flist_Ref   => Make_Identifier (Loc, Name_L),\n+                    With_Attach => Make_Identifier (Loc, Name_B)));\n             end if;\n \n          when Finalize_Case =>\n             if Is_Controlled (Typ) then\n                Append_To (Res,\n                  Make_Implicit_If_Statement (Obj_Ref,\n-                   Condition => Make_Identifier (Loc, Name_B),\n+                   Condition       => Make_Identifier (Loc, Name_B),\n                    Then_Statements => New_List (\n                      Make_Procedure_Call_Statement (Loc,\n                        Name => New_Reference_To (RTE (RE_Finalize_One), Loc),\n@@ -2797,9 +2800,11 @@ package body Exp_Ch7 is\n             end if;\n \n             Append_List_To (Res,\n-              Make_Final_Call (Controller_Ref, Controller_Typ,\n-                Make_Identifier (Loc, Name_B)));\n+              Make_Final_Call\n+                (Controller_Ref, Controller_Typ,\n+                 Make_Identifier (Loc, Name_B)));\n       end case;\n+\n       return Res;\n    end Make_Deep_Record_Body;\n "}, {"sha": "af33868b7996a49bdd22b988051d2f96c0ce3723", "filename": "gcc/ada/exp_ch8.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch8.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -409,15 +409,14 @@ package body Exp_Ch8 is\n                    Statements => New_List (\n                      Make_Simple_Return_Statement (Loc,\n                        Expression =>\n-                          Expand_Record_Equality (\n-                            Id,\n+                         Expand_Record_Equality\n+                           (Id,\n                             Typ => Typ,\n                             Lhs =>\n-                              Make_Identifier (Loc,\n-                                Chars (First_Formal (Id))),\n+                              Make_Identifier (Loc, Chars (First_Formal (Id))),\n                             Rhs =>\n-                              Make_Identifier (Loc,\n-                                Chars (Next_Formal (First_Formal (Id)))),\n+                              Make_Identifier\n+                                (Loc, Chars (Next_Formal (First_Formal (Id)))),\n                             Bodies => Declarations (Decl))))));\n \n                Append (Decl, List_Containing (N));"}, {"sha": "0312187f1a8e88181dd3fea3b51110e4b9920701", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 47, "deletions": 62, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -673,11 +673,10 @@ package body Exp_Ch9 is\n            Name =>\n              Make_Explicit_Dereference (Loc,\n                Make_Selected_Component (Loc,\n-                 Prefix =>\n+                 Prefix        =>\n                    Unchecked_Convert_To (Entry_Parameters_Type (Ent),\n                      Make_Identifier (Loc, Chars (Ptr))),\n-                 Selector_Name =>\n-                   New_Reference_To (Comp, Loc))));\n+                 Selector_Name => New_Reference_To (Comp, Loc))));\n \n          Append (Decl, Decls);\n          Set_Renamed_Object (Formal, New_F);\n@@ -719,8 +718,7 @@ package body Exp_Ch9 is\n           Object_Definition =>\n             New_Reference_To (Obj_Ptr, Loc),\n           Expression =>\n-            Unchecked_Convert_To (Obj_Ptr,\n-              Make_Identifier (Loc, Name_uO)));\n+            Unchecked_Convert_To (Obj_Ptr, Make_Identifier (Loc, Name_uO)));\n       Set_Debug_Info_Needed (Defining_Identifier (Decl));\n       Prepend_To (Decls, Decl);\n \n@@ -1807,9 +1805,8 @@ package body Exp_Ch9 is\n                Actuals := New_List;\n                while Present (Formal) loop\n                   Append_To (Actuals,\n-                    Make_Identifier (Loc, Chars =>\n-                      Chars (Defining_Identifier (Formal))));\n-\n+                    Make_Identifier (Loc,\n+                      Chars => Chars (Defining_Identifier (Formal))));\n                   Next (Formal);\n                end loop;\n             end if;\n@@ -1833,8 +1830,8 @@ package body Exp_Ch9 is\n \n                else\n                   Prepend_To (Actuals,\n-                    Make_Identifier (Loc, Chars =>\n-                      Chars (Defining_Identifier (First_Form))));\n+                    Make_Identifier (Loc,\n+                      Chars => Chars (Defining_Identifier (First_Form))));\n                end if;\n \n                Nam := New_Reference_To (Subp_Id, Loc);\n@@ -2482,7 +2479,7 @@ package body Exp_Ch9 is\n \n          Cond :=\n            Make_Op_Le (Loc,\n-             Left_Opnd => Make_Identifier (Loc, Name_uE),\n+             Left_Opnd  => Make_Identifier (Loc, Name_uE),\n              Right_Opnd => Siz);\n \n          --  Map entry queue indexes in the range of the current family\n@@ -2854,10 +2851,8 @@ package body Exp_Ch9 is\n             Make_Attribute_Reference (End_Loc,\n               Prefix =>\n                 Make_Selected_Component (End_Loc,\n-                  Prefix =>\n-                    Make_Identifier (End_Loc, Name_uObject),\n-                  Selector_Name =>\n-                    Make_Identifier (End_Loc, Name_uObject)),\n+                  Prefix        => Make_Identifier (End_Loc, Name_uObject),\n+                  Selector_Name => Make_Identifier (End_Loc, Name_uObject)),\n               Attribute_Name => Name_Unchecked_Access))));\n \n       --  When exceptions can not be propagated, we never need to call\n@@ -2918,7 +2913,7 @@ package body Exp_Ch9 is\n                            Make_Attribute_Reference (Han_Loc,\n                              Prefix =>\n                                Make_Selected_Component (Han_Loc,\n-                                 Prefix =>\n+                                 Prefix        =>\n                                    Make_Identifier (Han_Loc, Name_uObject),\n                                  Selector_Name =>\n                                    Make_Identifier (Han_Loc, Name_uObject)),\n@@ -3238,9 +3233,8 @@ package body Exp_Ch9 is\n       Uactuals := New_List;\n       Pformal := First (Parameter_Specifications (P_Op_Spec));\n       while Present (Pformal) loop\n-         Append (\n-           Make_Identifier (Loc, Chars (Defining_Identifier (Pformal))),\n-           Uactuals);\n+         Append_To (Uactuals,\n+           Make_Identifier (Loc, Chars (Defining_Identifier (Pformal))));\n          Next (Pformal);\n       end loop;\n \n@@ -3258,7 +3252,7 @@ package body Exp_Ch9 is\n                 Expression =>\n                   Make_Function_Call (Loc,\n                     Name => Make_Identifier (Loc,\n-                      Chars (Defining_Unit_Name (N_Op_Spec))),\n+                      Chars => Chars (Defining_Unit_Name (N_Op_Spec))),\n                     Parameter_Associations => Uactuals));\n \n             Return_Stmt :=\n@@ -3270,16 +3264,15 @@ package body Exp_Ch9 is\n               Expression => Make_Function_Call (Loc,\n                 Name =>\n                   Make_Identifier (Loc,\n-                    Chars (Defining_Unit_Name (N_Op_Spec))),\n+                    Chars => Chars (Defining_Unit_Name (N_Op_Spec))),\n                 Parameter_Associations => Uactuals));\n          end if;\n \n       else\n          Unprot_Call :=\n            Make_Procedure_Call_Statement (Loc,\n              Name =>\n-               Make_Identifier (Loc,\n-                 Chars (Defining_Unit_Name (N_Op_Spec))),\n+               Make_Identifier (Loc, Chars (Defining_Unit_Name (N_Op_Spec))),\n              Parameter_Associations => Uactuals);\n       end if;\n \n@@ -3316,10 +3309,8 @@ package body Exp_Ch9 is\n         Make_Attribute_Reference (Loc,\n            Prefix =>\n              Make_Selected_Component (Loc,\n-               Prefix =>\n-                 Make_Identifier (Loc, Name_uObject),\n-             Selector_Name =>\n-                 Make_Identifier (Loc, Name_uObject)),\n+               Prefix        => Make_Identifier (Loc, Name_uObject),\n+               Selector_Name => Make_Identifier (Loc, Name_uObject)),\n            Attribute_Name => Name_Unchecked_Access);\n \n       Lock_Stmt := Make_Procedure_Call_Statement (Loc,\n@@ -4572,7 +4563,7 @@ package body Exp_Ch9 is\n \n          return\n            Make_Selected_Component (Loc,\n-             Prefix =>\n+             Prefix        =>\n                Unchecked_Convert_To (Corresponding_Record_Type (Ntyp),\n                  New_Copy_Tree (N)),\n              Selector_Name => Make_Identifier (Loc, Sel));\n@@ -5256,8 +5247,7 @@ package body Exp_Ch9 is\n                       New_Reference_To (RTE (RO_ST_Task_Id), Loc),\n                     Expression =>\n                       Make_Selected_Component (Loc,\n-                        Prefix =>\n-                          New_Copy_Tree (Tasknm),\n+                        Prefix        => New_Copy_Tree (Tasknm),\n                         Selector_Name =>\n                           Make_Identifier (Loc, Name_uDisp_Get_Task_Id)))));\n \n@@ -5924,8 +5914,7 @@ package body Exp_Ch9 is\n                   Make_Unchecked_Type_Conversion (Loc,\n                     Subtype_Mark =>\n                       New_Reference_To (RTE (RE_Communication_Block), Loc),\n-                    Expression =>\n-                      Make_Identifier (Loc, Name_uD))));\n+                    Expression   => Make_Identifier (Loc, Name_uD))));\n \n             --  Generate:\n             --    _Disp_Asynchronous_Select (<object>, S, P'Address, D, B);\n@@ -6049,8 +6038,7 @@ package body Exp_Ch9 is\n                   Make_Unchecked_Type_Conversion (Loc,\n                     Subtype_Mark =>\n                       New_Reference_To (RTE (RE_Communication_Block), Loc),\n-                    Expression =>\n-                      Make_Identifier (Loc, Name_uD))));\n+                    Expression   => Make_Identifier (Loc, Name_uD))));\n \n             --  Generate:\n             --    _Disp_Asynchronous_Select (<object>, S, P'Address, D, B);\n@@ -8675,10 +8663,8 @@ package body Exp_Ch9 is\n            Make_Procedure_Call_Statement (Loc,\n              Name =>\n                Make_Selected_Component (Loc,\n-                 Prefix =>\n-                   Make_Identifier (Loc, Chars (Obj)),\n-                 Selector_Name =>\n-                   Make_Identifier (Loc, Chars (Call_Ent))),\n+                 Prefix        => Make_Identifier (Loc, Chars (Obj)),\n+                 Selector_Name => Make_Identifier (Loc, Chars (Call_Ent))),\n \n              Parameter_Associations => Actuals);\n       end Build_Dispatching_Call_Equivalent;\n@@ -8745,8 +8731,7 @@ package body Exp_Ch9 is\n \n          return\n            Make_Procedure_Call_Statement (Loc,\n-             Name =>\n-               Make_Identifier (Loc, Name_uDisp_Requeue),\n+             Name => Make_Identifier (Loc, Name_uDisp_Requeue),\n              Parameter_Associations => Params);\n       end Build_Dispatching_Requeue;\n \n@@ -9221,10 +9206,11 @@ package body Exp_Ch9 is\n          Cond := Make_Op_Ne (Loc,\n            Left_Opnd =>\n              Make_Selected_Component (Loc,\n-               Prefix => Make_Indexed_Component (Loc,\n-                 Prefix => New_Reference_To (Qnam, Loc),\n-                   Expressions => New_List (New_Reference_To (J, Loc))),\n-             Selector_Name => Make_Identifier (Loc, Name_S)),\n+               Prefix        =>\n+                 Make_Indexed_Component (Loc,\n+                   Prefix => New_Reference_To (Qnam, Loc),\n+                     Expressions => New_List (New_Reference_To (J, Loc))),\n+               Selector_Name => Make_Identifier (Loc, Name_S)),\n            Right_Opnd =>\n              New_Reference_To (RTE (RE_Null_Task_Entry), Loc));\n \n@@ -11942,10 +11928,8 @@ package body Exp_Ch9 is\n                   New_Reference_To (RTE (Prot_Typ), Loc),\n                 Name =>\n                   Make_Selected_Component (Loc,\n-                    Prefix =>\n-                      New_Reference_To (Obj_Ent, Loc),\n-                    Selector_Name =>\n-                      Make_Identifier (Loc, Name_uObject)));\n+                    Prefix        => New_Reference_To (Obj_Ent, Loc),\n+                    Selector_Name => Make_Identifier (Loc, Name_uObject)));\n             Add (Decl);\n          end;\n       end if;\n@@ -12266,7 +12250,7 @@ package body Exp_Ch9 is\n         Make_Attribute_Reference (Loc,\n           Prefix =>\n             Make_Selected_Component (Loc,\n-              Prefix => Make_Identifier (Loc, Name_uInit),\n+              Prefix        => Make_Identifier (Loc, Name_uInit),\n               Selector_Name => Make_Identifier (Loc, Name_uObject)),\n           Attribute_Name => Name_Unchecked_Access));\n \n@@ -12379,7 +12363,7 @@ package body Exp_Ch9 is\n             then\n                Append_To (Args,\n                  Make_Attribute_Reference (Loc,\n-                   Prefix => Make_Identifier (Loc, Name_uInit),\n+                   Prefix         => Make_Identifier (Loc, Name_uInit),\n                    Attribute_Name => Name_Address));\n             end if;\n \n@@ -12521,7 +12505,7 @@ package body Exp_Ch9 is\n                  Make_Attribute_Reference (Loc,\n                    Prefix =>\n                      Make_Selected_Component (Loc,\n-                       Prefix => Make_Identifier (Loc, Name_uInit),\n+                       Prefix        => Make_Identifier (Loc, Name_uInit),\n                        Selector_Name => Make_Identifier (Loc, Name_uObject)),\n                    Attribute_Name => Name_Unchecked_Access));\n \n@@ -12588,7 +12572,7 @@ package body Exp_Ch9 is\n       if Present (Tdef) and then Has_Pragma_Priority (Tdef) then\n          Append_To (Args,\n            Make_Selected_Component (Loc,\n-             Prefix => Make_Identifier (Loc, Name_uInit),\n+             Prefix        => Make_Identifier (Loc, Name_uInit),\n              Selector_Name => Make_Identifier (Loc, Name_uPriority)));\n       else\n          Append_To (Args,\n@@ -12605,10 +12589,10 @@ package body Exp_Ch9 is\n          if Preallocated_Stacks_On_Target then\n             Append_To (Args,\n               Make_Attribute_Reference (Loc,\n-                Prefix         => Make_Selected_Component (Loc,\n-                  Prefix        => Make_Identifier (Loc, Name_uInit),\n-                  Selector_Name =>\n-                    Make_Identifier (Loc, Name_uStack)),\n+                Prefix         =>\n+                  Make_Selected_Component (Loc,\n+                    Prefix        => Make_Identifier (Loc, Name_uInit),\n+                    Selector_Name => Make_Identifier (Loc, Name_uStack)),\n                 Attribute_Name => Name_Address));\n \n          else\n@@ -12629,7 +12613,7 @@ package body Exp_Ch9 is\n       then\n          Append_To (Args,\n            Make_Selected_Component (Loc,\n-             Prefix => Make_Identifier (Loc, Name_uInit),\n+             Prefix        => Make_Identifier (Loc, Name_uInit),\n              Selector_Name => Make_Identifier (Loc, Name_uSize)));\n \n       else\n@@ -12645,7 +12629,7 @@ package body Exp_Ch9 is\n       then\n          Append_To (Args,\n            Make_Selected_Component (Loc,\n-             Prefix => Make_Identifier (Loc, Name_uInit),\n+             Prefix        => Make_Identifier (Loc, Name_uInit),\n              Selector_Name => Make_Identifier (Loc, Name_uTask_Info)));\n \n       else\n@@ -12662,7 +12646,7 @@ package body Exp_Ch9 is\n          Append_To (Args,\n            Convert_To (Standard_Integer,\n              Make_Selected_Component (Loc,\n-               Prefix => Make_Identifier (Loc, Name_uInit),\n+               Prefix        => Make_Identifier (Loc, Name_uInit),\n                Selector_Name => Make_Identifier (Loc, Name_uCPU))));\n \n       else\n@@ -12684,7 +12668,8 @@ package body Exp_Ch9 is\n          if Present (Tdef) and then Has_Relative_Deadline_Pragma (Tdef) then\n             Append_To (Args,\n               Make_Selected_Component (Loc,\n-                Prefix => Make_Identifier (Loc, Name_uInit),\n+                Prefix        =>\n+                  Make_Identifier (Loc, Name_uInit),\n                 Selector_Name =>\n                   Make_Identifier (Loc, Name_uRelative_Deadline)));\n \n@@ -12821,7 +12806,7 @@ package body Exp_Ch9 is\n \n       Append_To (Args,\n         Make_Selected_Component (Loc,\n-          Prefix => Make_Identifier (Loc, Name_uInit),\n+          Prefix        => Make_Identifier (Loc, Name_uInit),\n           Selector_Name => Make_Identifier (Loc, Name_uTask_Id)));\n \n       --  Build_Entry_Names generation flag. When set to true, the runtime\n@@ -13036,7 +13021,7 @@ package body Exp_Ch9 is\n                 Expression =>\n                   Make_Explicit_Dereference (Loc,\n                     Make_Selected_Component (Loc,\n-                      Prefix =>\n+                      Prefix        =>\n                         New_Reference_To (P, Loc),\n                       Selector_Name =>\n                         Make_Identifier (Loc, Chars (Formal)))));"}, {"sha": "2c0832df15e90198949ab752ff8deeb7590c3ca9", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 63, "deletions": 94, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -2159,12 +2159,12 @@ package body Exp_Disp is\n                           Make_Unchecked_Type_Conversion (Loc,  --  entry index\n                             Subtype_Mark =>\n                               New_Reference_To\n-                                 (RTE (RE_Protected_Entry_Index), Loc),\n+                                (RTE (RE_Protected_Entry_Index), Loc),\n                             Expression => Make_Identifier (Loc, Name_uI)),\n \n                           Make_Identifier (Loc, Name_uP), --  parameter block\n-                          New_Reference_To (              --  Asynchronous_Call\n-                            RTE (RE_Asynchronous_Call), Loc),\n+                          New_Reference_To                --  Asynchronous_Call\n+                            (RTE (RE_Asynchronous_Call), Loc),\n \n                           New_Reference_To (Com_Block, Loc)))); -- comm block\n \n@@ -2186,7 +2186,7 @@ package body Exp_Disp is\n                           Obj_Ref,\n \n                           Make_Attribute_Reference (Loc,\n-                            Prefix => Make_Identifier (Loc, Name_uP),\n+                            Prefix         => Make_Identifier (Loc, Name_uP),\n                             Attribute_Name => Name_Address),\n \n                             New_Reference_To\n@@ -2201,8 +2201,7 @@ package body Exp_Disp is\n \n             Append_To (Stmts,\n               Make_Assignment_Statement (Loc,\n-                Name =>\n-                  Make_Identifier (Loc, Name_uB),\n+                Name => Make_Identifier (Loc, Name_uB),\n                 Expression =>\n                   Make_Unchecked_Type_Conversion (Loc,\n                     Subtype_Mark =>\n@@ -2232,20 +2231,17 @@ package body Exp_Disp is\n                 Parameter_Associations =>\n                   New_List (\n                     Make_Selected_Component (Loc,         -- T._task_id\n-                      Prefix =>\n-                        Make_Identifier (Loc, Name_uT),\n-                      Selector_Name =>\n-                        Make_Identifier (Loc, Name_uTask_Id)),\n+                      Prefix        => Make_Identifier (Loc, Name_uT),\n+                      Selector_Name => Make_Identifier (Loc, Name_uTask_Id)),\n \n                     Make_Unchecked_Type_Conversion (Loc,  --  entry index\n                       Subtype_Mark =>\n                         New_Reference_To (RTE (RE_Task_Entry_Index), Loc),\n-                      Expression =>\n-                        Make_Identifier (Loc, Name_uI)),\n+                      Expression => Make_Identifier (Loc, Name_uI)),\n \n                     Make_Identifier (Loc, Name_uP),       --  parameter block\n-                    New_Reference_To (                    --  Asynchronous_Call\n-                      RTE (RE_Asynchronous_Call), Loc),\n+                    New_Reference_To                      --  Asynchronous_Call\n+                      (RTE (RE_Asynchronous_Call), Loc),\n                     Make_Identifier (Loc, Name_uF))));    --  status flag\n          end if;\n \n@@ -2481,8 +2477,7 @@ package body Exp_Disp is\n \n          Append_To (Stmts,\n            Make_Assignment_Statement (Loc,\n-             Name =>\n-               Make_Identifier (Loc, Name_uI),\n+             Name => Make_Identifier (Loc, Name_uI),\n              Expression =>\n                Make_Function_Call (Loc,\n                  Name =>\n@@ -2554,7 +2549,7 @@ package body Exp_Disp is\n                           Obj_Ref,\n \n                           Make_Attribute_Reference (Loc,\n-                            Prefix => Make_Identifier (Loc, Name_uP),\n+                            Prefix         => Make_Identifier (Loc, Name_uP),\n                             Attribute_Name => Name_Address),\n \n                             New_Reference_To\n@@ -2571,8 +2566,7 @@ package body Exp_Disp is\n \n             Append_To (Stmts,\n               Make_Assignment_Statement (Loc,\n-                Name =>\n-                  Make_Identifier (Loc, Name_uF),\n+                Name       => Make_Identifier (Loc, Name_uF),\n                 Expression =>\n                   Make_Op_Not (Loc,\n                     Right_Opnd =>\n@@ -2604,20 +2598,17 @@ package body Exp_Disp is\n                   New_List (\n \n                     Make_Selected_Component (Loc,         -- T._task_id\n-                      Prefix =>\n-                        Make_Identifier (Loc, Name_uT),\n-                      Selector_Name =>\n-                        Make_Identifier (Loc, Name_uTask_Id)),\n+                      Prefix        => Make_Identifier (Loc, Name_uT),\n+                      Selector_Name => Make_Identifier (Loc, Name_uTask_Id)),\n \n                     Make_Unchecked_Type_Conversion (Loc,  --  entry index\n                       Subtype_Mark =>\n                         New_Reference_To (RTE (RE_Task_Entry_Index), Loc),\n-                      Expression =>\n-                        Make_Identifier (Loc, Name_uI)),\n+                      Expression   => Make_Identifier (Loc, Name_uI)),\n \n                     Make_Identifier (Loc, Name_uP),       --  parameter block\n-                    New_Reference_To (                    --  Conditional_Call\n-                      RTE (RE_Conditional_Call), Loc),\n+                    New_Reference_To                      --  Conditional_Call\n+                      (RTE (RE_Conditional_Call), Loc),\n                     Make_Identifier (Loc, Name_uF))));    --  status flag\n          end if;\n \n@@ -2832,10 +2823,8 @@ package body Exp_Disp is\n                    New_Reference_To (RTE (RE_Address), Loc),\n                  Expression =>\n                    Make_Selected_Component (Loc,\n-                     Prefix =>\n-                       Make_Identifier (Loc, Name_uT),\n-                     Selector_Name =>\n-                       Make_Identifier (Loc, Name_uTask_Id))));\n+                     Prefix        => Make_Identifier (Loc, Name_uT),\n+                     Selector_Name => Make_Identifier (Loc, Name_uTask_Id))));\n \n       --  A null body is constructed for non-task types\n \n@@ -2942,8 +2931,7 @@ package body Exp_Disp is\n          else\n             Append_To (Stmts,\n               Make_If_Statement (Loc,\n-                Condition =>\n-                  Make_Identifier (Loc, Name_uF),\n+                Condition       => Make_Identifier (Loc, Name_uF),\n \n                 Then_Statements =>\n                   New_List (\n@@ -2969,7 +2957,7 @@ package body Exp_Disp is\n                               Name_Unchecked_Access,\n                             Prefix =>\n                               Make_Selected_Component (Loc,\n-                                Prefix =>\n+                                Prefix        =>\n                                   Make_Identifier (Loc, Name_uO),\n                                 Selector_Name =>\n                                   Make_Identifier (Loc, Name_uObject))),\n@@ -2978,8 +2966,7 @@ package body Exp_Disp is\n                             Subtype_Mark =>\n                               New_Reference_To (\n                                 RTE (RE_Protected_Entry_Index), Loc),\n-                            Expression =>\n-                              Make_Identifier (Loc, Name_uI)),\n+                            Expression => Make_Identifier (Loc, Name_uI)),\n \n                           Make_Identifier (Loc, Name_uA)))),   -- abort status\n \n@@ -3033,70 +3020,55 @@ package body Exp_Disp is\n \n          Append_To (Stmts,\n            Make_If_Statement (Loc,\n-             Condition =>\n-               Make_Identifier (Loc, Name_uF),\n+             Condition       => Make_Identifier (Loc, Name_uF),\n \n-             Then_Statements =>\n-               New_List (\n+             Then_Statements => New_List (\n \n-                  --  Call to Requeue_Protected_To_Task_Entry\n+               --  Call to Requeue_Protected_To_Task_Entry\n \n-                 Make_Procedure_Call_Statement (Loc,\n-                   Name =>\n-                     New_Reference_To (\n-                       RTE (RE_Requeue_Protected_To_Task_Entry), Loc),\n+               Make_Procedure_Call_Statement (Loc,\n+                 Name =>\n+                   New_Reference_To\n+                     (RTE (RE_Requeue_Protected_To_Task_Entry), Loc),\n \n-                   Parameter_Associations =>\n-                     New_List (\n+                 Parameter_Associations => New_List (\n \n-                       Make_Unchecked_Type_Conversion (Loc,  -- PEA (P)\n-                         Subtype_Mark =>\n-                           New_Reference_To (\n-                             RTE (RE_Protection_Entries_Access), Loc),\n-                         Expression =>\n-                           Make_Identifier (Loc, Name_uP)),\n+                   Make_Unchecked_Type_Conversion (Loc,  -- PEA (P)\n+                     Subtype_Mark =>\n+                       New_Reference_To\n+                         (RTE (RE_Protection_Entries_Access), Loc),\n+                          Expression => Make_Identifier (Loc, Name_uP)),\n \n-                       Make_Selected_Component (Loc,         -- O._task_id\n-                         Prefix =>\n-                           Make_Identifier (Loc, Name_uO),\n-                         Selector_Name =>\n-                           Make_Identifier (Loc, Name_uTask_Id)),\n+                   Make_Selected_Component (Loc,         -- O._task_id\n+                     Prefix        => Make_Identifier (Loc, Name_uO),\n+                     Selector_Name => Make_Identifier (Loc, Name_uTask_Id)),\n \n-                       Make_Unchecked_Type_Conversion (Loc,  -- entry index\n-                         Subtype_Mark =>\n-                           New_Reference_To (\n-                             RTE (RE_Task_Entry_Index), Loc),\n-                         Expression =>\n-                           Make_Identifier (Loc, Name_uI)),\n+                   Make_Unchecked_Type_Conversion (Loc,  -- entry index\n+                     Subtype_Mark =>\n+                       New_Reference_To (RTE (RE_Task_Entry_Index), Loc),\n+                     Expression   => Make_Identifier (Loc, Name_uI)),\n \n-                       Make_Identifier (Loc, Name_uA)))),    -- abort status\n+                   Make_Identifier (Loc, Name_uA)))),    -- abort status\n \n-             Else_Statements =>\n-               New_List (\n+             Else_Statements => New_List (\n \n-                  --  Call to Requeue_Task_Entry\n+               --  Call to Requeue_Task_Entry\n \n-                 Make_Procedure_Call_Statement (Loc,\n-                   Name =>\n-                     New_Reference_To (RTE (RE_Requeue_Task_Entry), Loc),\n+               Make_Procedure_Call_Statement (Loc,\n+                 Name => New_Reference_To (RTE (RE_Requeue_Task_Entry), Loc),\n \n-                   Parameter_Associations =>\n-                     New_List (\n+                 Parameter_Associations => New_List (\n \n-                       Make_Selected_Component (Loc,         -- O._task_id\n-                         Prefix =>\n-                           Make_Identifier (Loc, Name_uO),\n-                         Selector_Name =>\n-                           Make_Identifier (Loc, Name_uTask_Id)),\n+                   Make_Selected_Component (Loc,         -- O._task_id\n+                     Prefix        => Make_Identifier (Loc, Name_uO),\n+                     Selector_Name => Make_Identifier (Loc, Name_uTask_Id)),\n \n-                       Make_Unchecked_Type_Conversion (Loc,  -- entry index\n-                         Subtype_Mark =>\n-                           New_Reference_To (\n-                             RTE (RE_Task_Entry_Index), Loc),\n-                         Expression =>\n-                           Make_Identifier (Loc, Name_uI)),\n+                   Make_Unchecked_Type_Conversion (Loc,  -- entry index\n+                     Subtype_Mark =>\n+                       New_Reference_To (RTE (RE_Task_Entry_Index), Loc),\n+                     Expression   => Make_Identifier (Loc, Name_uI)),\n \n-                       Make_Identifier (Loc, Name_uA))))));  -- abort status\n+                   Make_Identifier (Loc, Name_uA))))));  -- abort status\n       end if;\n \n       --  Even though no declarations are needed in both cases, we allocate\n@@ -3318,8 +3290,7 @@ package body Exp_Disp is\n \n          Append_To (Stmts,\n            Make_Assignment_Statement (Loc,\n-             Name =>\n-               Make_Identifier (Loc, Name_uI),\n+             Name       => Make_Identifier (Loc, Name_uI),\n              Expression =>\n                Make_Function_Call (Loc,\n                  Name =>\n@@ -3432,16 +3403,13 @@ package body Exp_Disp is\n                   New_List (\n \n                     Make_Selected_Component (Loc,         --  T._task_id\n-                      Prefix =>\n-                        Make_Identifier (Loc, Name_uT),\n-                      Selector_Name =>\n-                        Make_Identifier (Loc, Name_uTask_Id)),\n+                      Prefix        => Make_Identifier (Loc, Name_uT),\n+                      Selector_Name => Make_Identifier (Loc, Name_uTask_Id)),\n \n                     Make_Unchecked_Type_Conversion (Loc,  --  entry index\n                       Subtype_Mark =>\n                         New_Reference_To (RTE (RE_Task_Entry_Index), Loc),\n-                      Expression =>\n-                        Make_Identifier (Loc, Name_uI)),\n+                      Expression   => Make_Identifier (Loc, Name_uI)),\n \n                     Make_Identifier (Loc, Name_uP),       --  parameter block\n                     Make_Identifier (Loc, Name_uD),       --  delay\n@@ -7845,7 +7813,8 @@ package body Exp_Disp is\n                         New_Reference_To (Node (Tag_Elmt), Loc),\n                       Expression =>\n                         Make_Selected_Component (Loc,\n-                          Prefix => Make_Identifier (Loc, Name_uInit),\n+                          Prefix        =>\n+                            Make_Identifier (Loc, Name_uInit),\n                           Selector_Name =>\n                             New_Reference_To (Tag_Comp, Loc))));\n "}, {"sha": "82d5898bd8d5ef88d97f5247ca51ccc3a6783a28", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 21, "deletions": 22, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -3952,8 +3952,7 @@ package body Exp_Dist is\n                                  Prefix        => Request_Parameter,\n                                  Selector_Name => Name_Params))))),\n \n-                     Selector_Name =>\n-                       Make_Identifier (Loc, Name_Subp_Id))))));\n+                     Selector_Name => Make_Identifier (Loc, Name_Subp_Id))))));\n \n          --  Build a subprogram for RAS information lookups\n \n@@ -6540,8 +6539,7 @@ package body Exp_Dist is\n                Make_Aggregate (Loc,\n                  Component_Associations => New_List (\n                    Make_Component_Association (Loc,\n-                     Choices => New_List (\n-                       Make_Identifier (Loc, Name_Ras)),\n+                     Choices => New_List (Make_Identifier (Loc, Name_Ras)),\n                      Expression =>\n                        PolyORB_Support.Helpers.Build_From_Any_Call (\n                          Underlying_RACW_Type (RAS_Type),\n@@ -7628,7 +7626,8 @@ package body Exp_Dist is\n          else\n             Target_Info.Object :=\n               Make_Selected_Component (Loc,\n-                Prefix        => Make_Identifier (Loc, Chars (RCI_Locator)),\n+                Prefix        =>\n+                  Make_Identifier (Loc, Chars (RCI_Locator)),\n                 Selector_Name =>\n                   Make_Identifier (Loc, Name_Get_RCI_Package_Ref));\n          end if;\n@@ -7914,7 +7913,7 @@ package body Exp_Dist is\n                            New_Occurrence_Of (RTE (RE_Get_Local_Address), Loc),\n                          Parameter_Associations => New_List (\n                            Make_Selected_Component (Loc,\n-                             Prefix =>\n+                             Prefix        =>\n                                New_Occurrence_Of (\n                                  Request_Parameter, Loc),\n                              Selector_Name =>\n@@ -9136,24 +9135,24 @@ package body Exp_Dist is\n                                      Left_Opnd =>\n                                        Make_Op_Add (Loc,\n                                          Left_Opnd =>\n-                                           OK_Convert_To (\n-                                             Standard_Long_Integer,\n-                                             Make_Identifier (Loc, Lnam)),\n+                                           OK_Convert_To\n+                                             (Standard_Long_Integer,\n+                                              Make_Identifier (Loc, Lnam)),\n \n                                          Right_Opnd =>\n-                                           OK_Convert_To (\n-                                             Standard_Long_Integer,\n-                                             Make_Function_Call (Loc,\n-                                               Name =>\n-                                                 New_Occurrence_Of (RTE (\n-                                                 RE_Get_Nested_Sequence_Length\n-                                                 ), Loc),\n-                                               Parameter_Associations =>\n-                                                 New_List (\n-                                                   New_Occurrence_Of (\n-                                                     Any_Parameter, Loc),\n-                                                   Make_Integer_Literal (Loc,\n-                                                     Intval => J))))),\n+                                           OK_Convert_To\n+                                             (Standard_Long_Integer,\n+                                              Make_Function_Call (Loc,\n+                                                Name =>\n+                                                  New_Occurrence_Of (RTE (\n+                                                  RE_Get_Nested_Sequence_Length\n+                                                  ), Loc),\n+                                                Parameter_Associations =>\n+                                                  New_List (\n+                                                    New_Occurrence_Of (\n+                                                      Any_Parameter, Loc),\n+                                                    Make_Integer_Literal (Loc,\n+                                                      Intval => J))))),\n \n                                      Right_Opnd =>\n                                        Make_Integer_Literal (Loc, 1))))));"}, {"sha": "7e1f4208b3fa4ad4648aa31c64821d783762f69b", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 10, "deletions": 18, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -648,28 +648,20 @@ package body Exp_Prag is\n                          (Loc,\n                           Name_Export,\n                           New_List\n-                            (Make_Pragma_Argument_Association\n-                               (Sloc => Loc,\n-                                Expression => Make_Identifier (Loc, Name_C)),\n+                            (Make_Pragma_Argument_Association (Loc,\n+                               Expression => Make_Identifier (Loc, Name_C)),\n \n-                             Make_Pragma_Argument_Association\n-                               (Sloc => Loc,\n-                                Expression =>\n-                                  New_Reference_To (Excep_Internal, Loc)),\n+                             Make_Pragma_Argument_Association (Loc,\n+                               Expression =>\n+                                 New_Reference_To (Excep_Internal, Loc)),\n \n-                             Make_Pragma_Argument_Association\n-                               (Sloc => Loc,\n-                                Expression =>\n-                                  Make_String_Literal\n-                                    (Sloc => Loc,\n-                                     Strval => Excep_Image)),\n+                             Make_Pragma_Argument_Association (Loc,\n+                               Expression =>\n+                                 Make_String_Literal (Loc, Excep_Image)),\n \n-                             Make_Pragma_Argument_Association\n-                               (Sloc => Loc,\n+                             Make_Pragma_Argument_Association (Loc,\n                                 Expression =>\n-                                  Make_String_Literal\n-                                    (Sloc => Loc,\n-                                     Strval => Excep_Image))));\n+                                  Make_String_Literal (Loc, Excep_Image))));\n \n                      Insert_Action (N, Export_Pragma);\n                      Analyze (Export_Pragma);"}, {"sha": "1f23ac1f946e8bd964e94be87f8dada81a623909", "filename": "gcc/ada/exp_smem.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_smem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_smem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_smem.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -93,7 +93,7 @@ package body Exp_Smem is\n         Name => Make_Selected_Component (Loc,\n           Prefix        =>\n             New_Occurrence_Of (Shared_Var_Procs_Instance (E), Loc),\n-          Selector_Name => Make_Identifier (Loc, Chars => N)));\n+          Selector_Name => Make_Identifier (Loc, N)));\n    end Build_Shared_Var_Proc_Call;\n \n    ---------------------"}, {"sha": "0a22b0117e0c9212f0510f635d05a3547554c1a0", "filename": "gcc/ada/exp_strm.adb", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_strm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_strm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_strm.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -166,10 +166,10 @@ package body Exp_Strm is\n              Object_Definition   => New_Occurrence_Of (Etype (Indx), Loc),\n              Expression =>\n                Make_Attribute_Reference (Loc,\n-                 Prefix =>\n+                 Prefix         =>\n                    New_Occurrence_Of (Stream_Base_Type (Etype (Indx)), Loc),\n                  Attribute_Name => Name_Input,\n-                 Expressions => New_List (Make_Identifier (Loc, Name_S)))));\n+                 Expressions    => New_List (Make_Identifier (Loc, Name_S)))));\n \n          Append_To (Decls,\n            Make_Object_Declaration (Loc,\n@@ -179,10 +179,10 @@ package body Exp_Strm is\n                    New_Occurrence_Of (Stream_Base_Type (Etype (Indx)), Loc),\n              Expression =>\n                Make_Attribute_Reference (Loc,\n-                 Prefix =>\n+                 Prefix         =>\n                    New_Occurrence_Of (Stream_Base_Type (Etype (Indx)), Loc),\n                  Attribute_Name => Name_Input,\n-                 Expressions => New_List (Make_Identifier (Loc, Name_S)))));\n+                 Expressions    => New_List (Make_Identifier (Loc, Name_S)))));\n \n          Append_To (Ranges,\n            Make_Range (Loc,\n@@ -260,9 +260,9 @@ package body Exp_Strm is\n              Expressions => New_List (\n                Make_Identifier (Loc, Name_S),\n                Make_Attribute_Reference (Loc,\n-                 Prefix => Make_Identifier (Loc, Name_V),\n+                 Prefix         => Make_Identifier (Loc, Name_V),\n                  Attribute_Name => Name_First,\n-                 Expressions => New_List (\n+                 Expressions    => New_List (\n                    Make_Integer_Literal (Loc, J))))));\n \n          Append_To (Stms,\n@@ -273,9 +273,9 @@ package body Exp_Strm is\n              Expressions => New_List (\n                Make_Identifier (Loc, Name_S),\n                Make_Attribute_Reference (Loc,\n-                 Prefix => Make_Identifier (Loc, Name_V),\n+                 Prefix         => Make_Identifier (Loc, Name_V),\n                  Attribute_Name => Name_Last,\n-                 Expressions => New_List (\n+                 Expressions    => New_List (\n                    Make_Integer_Literal (Loc, J))))));\n \n          Next_Index (Indx);\n@@ -369,7 +369,7 @@ package body Exp_Strm is\n           Expressions => New_List (\n             Make_Identifier (Loc, Name_S),\n             Make_Indexed_Component (Loc,\n-              Prefix => Make_Identifier (Loc, Name_V),\n+              Prefix      => Make_Identifier (Loc, Name_V),\n               Expressions => Exl)));\n \n       --  The corresponding stream attribute for the component type of the\n@@ -407,7 +407,7 @@ package body Exp_Strm is\n \n                      Discrete_Subtype_Definition =>\n                        Make_Attribute_Reference (Loc,\n-                         Prefix => Make_Identifier (Loc, Name_V),\n+                         Prefix         => Make_Identifier (Loc, Name_V),\n                          Attribute_Name => Name_Range,\n \n                          Expressions => New_List (\n@@ -898,7 +898,7 @@ package body Exp_Strm is\n \n       Out_Formal :=\n         Make_Selected_Component (Loc,\n-          Prefix => New_Occurrence_Of (Pnam, Loc),\n+          Prefix        => New_Occurrence_Of (Pnam, Loc),\n           Selector_Name => Make_Identifier (Loc, Name_V));\n \n       --  Generate Reads for the discriminants of the type. The discriminants\n@@ -981,7 +981,7 @@ package body Exp_Strm is\n \n       Append_To (Constrained_Stms,\n         Make_Assignment_Statement (Loc,\n-          Name => Out_Formal,\n+          Name       => Out_Formal,\n           Expression => Make_Identifier (Loc, Name_V)));\n \n       if Is_Unchecked_Union (Typ) then\n@@ -1032,15 +1032,15 @@ package body Exp_Strm is\n          else\n             D_Ref :=\n               Make_Selected_Component (Loc,\n-                Prefix => Make_Identifier (Loc, Name_V),\n+                Prefix        => Make_Identifier (Loc, Name_V),\n                 Selector_Name => New_Occurrence_Of (Disc, Loc));\n          end if;\n \n          Append_To (Stms,\n            Make_Attribute_Reference (Loc,\n              Prefix => New_Occurrence_Of (Etype (Disc), Loc),\n                Attribute_Name => Name_Write,\n-               Expressions => New_List (\n+               Expressions    => New_List (\n                  Make_Identifier (Loc, Name_S),\n                  D_Ref)));\n \n@@ -1251,7 +1251,7 @@ package body Exp_Strm is\n             else\n                Disc_Ref :=\n                  Make_Selected_Component (Loc,\n-                   Prefix => Make_Identifier (Loc, Name_V),\n+                   Prefix        => Make_Identifier (Loc, Name_V),\n                    Selector_Name => New_Occurrence_Of (Disc, Loc));\n             end if;\n \n@@ -1411,7 +1411,7 @@ package body Exp_Strm is\n             else\n                D_Ref :=\n                   Make_Selected_Component (Loc,\n-                    Prefix => Make_Identifier (Loc, Name_V),\n+                    Prefix        => Make_Identifier (Loc, Name_V),\n                     Selector_Name =>\n                       New_Occurrence_Of (Entity (Name (VP)), Loc));\n             end if;\n@@ -1461,7 +1461,7 @@ package body Exp_Strm is\n              Expressions => New_List (\n                Make_Identifier (Loc, Name_S),\n                Make_Selected_Component (Loc,\n-                 Prefix => Make_Identifier (Loc, Name_V),\n+                 Prefix        => Make_Identifier (Loc, Name_V),\n                  Selector_Name => New_Occurrence_Of (C, Loc))));\n       end Make_Field_Attribute;\n "}, {"sha": "2740bd124679c6461c67238908f7e222e13e65b9", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -4120,14 +4120,10 @@ package body Exp_Util is\n    begin\n       return\n         Make_Pragma (Loc,\n-          Pragma_Identifier            =>\n-            Make_Identifier (Loc,\n-              Name_Check),\n+          Pragma_Identifier            => Make_Identifier (Loc, Name_Check),\n           Pragma_Argument_Associations => New_List (\n             Make_Pragma_Argument_Association (Loc,\n-              Expression =>\n-                Make_Identifier (Loc,\n-                  Chars => Name_Predicate)),\n+              Expression => Make_Identifier (Loc, Name_Predicate)),\n             Make_Pragma_Argument_Association (Loc,\n               Expression => Make_Predicate_Call (Typ, Expr))));\n    end Make_Predicate_Check;\n@@ -5592,7 +5588,7 @@ package body Exp_Util is\n          declare\n             CS : constant Boolean := Comes_From_Source (N);\n          begin\n-            Rewrite (N, Make_Identifier (Sloc (N), Chars => Chars (E)));\n+            Rewrite (N, Make_Identifier (Sloc (N), Chars (E)));\n             Set_Entity (N, E);\n             Set_Comes_From_Source (N, CS);\n             Set_Analyzed (N, True);"}, {"sha": "5a3265747de292ab64587f1b369668d101bdc129", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -9008,13 +9008,21 @@ units, or in @code{Import} pragmas in any Ada units.\n switches.\n The default linker called by gnatlink is @command{gcc} which in\n turn calls the appropriate system linker.\n+\n+One useful option for the linker is @option{-s}: it reduces the size of the\n+executable by removing all symbol table and relocation information from the\n+executable.\n+\n Standard options for the linker such as @option{-lmy_lib} or\n @option{-Ldir} can be added as is.\n For options that are not recognized by\n @command{gcc} as linker options, use the @command{gcc} switches\n @option{-Xlinker} or @option{-Wl,}.\n+\n Refer to the GCC documentation for\n-details. Here is an example showing how to generate a linker map:\n+details.\n+\n+Here is an example showing how to generate a linker map:\n \n @smallexample\n $ ^gnatlink my_prog -Wl,-Map,MAPFILE^GNAT LINK my_prog.ali /MAP^"}, {"sha": "0c4db36b46fad99fa8c78a8421070bd3060ffee7", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -620,15 +620,15 @@ package body Layout is\n                    Name                   => New_Occurrence_Of (Ent, Loc),\n                    Parameter_Associations => New_List (\n                      Make_Selected_Component (Loc,\n-                       Prefix        => Make_Identifier (Loc, Chars => Vname),\n+                       Prefix        => Make_Identifier (Loc, Vname),\n                        Selector_Name => New_Occurrence_Of (Comp, Loc))));\n \n             else\n                return\n                  Make_Function_Call (Loc,\n                    Name                   => New_Occurrence_Of (Ent, Loc),\n                    Parameter_Associations => New_List (\n-                     Make_Identifier (Loc, Chars => Vname)));\n+                     Make_Identifier (Loc, Vname)));\n             end if;\n \n          else\n@@ -988,7 +988,7 @@ package body Layout is\n \n             N :=\n               Make_Selected_Component (Loc,\n-                Prefix        => Make_Identifier (Loc, Chars => Vname),\n+                Prefix        => Make_Identifier (Loc, Vname),\n                 Selector_Name => New_Occurrence_Of (Entity (N), Loc));\n \n             --  Set the Etype attributes of the selected name and its prefix.\n@@ -1990,7 +1990,7 @@ package body Layout is\n                        Make_Function_Call (Loc,\n                          Name => New_Occurrence_Of (RMS_Ent, Loc),\n                          Parameter_Associations => New_List (\n-                           Make_Identifier (Loc, Chars => Vname)));\n+                           Make_Identifier (Loc, Vname)));\n \n                   --  If the size is represented by a constant, then the\n                   --  expression we want is a reference to this constant\n@@ -2104,7 +2104,7 @@ package body Layout is\n                            Discrim :=\n                              Make_Selected_Component (Loc,\n                                Prefix        =>\n-                                 Make_Identifier (Loc, Chars => Vname),\n+                                 Make_Identifier (Loc, Vname),\n                                Selector_Name =>\n                                  New_Occurrence_Of\n                                    (Entity (Name (Vpart)), Loc));\n@@ -2130,10 +2130,9 @@ package body Layout is\n                               Append (\n                                 Make_Selected_Component (Loc,\n                                   Prefix        =>\n-                                    Make_Identifier (Loc, Chars => Vname),\n+                                    Make_Identifier (Loc, Vname),\n                                   Selector_Name =>\n-                                    New_Occurrence_Of\n-                                      (D_Entity, Loc)),\n+                                    New_Occurrence_Of (D_Entity, Loc)),\n                                 D_List);\n \n                               D_Entity := Next_Discriminant (D_Entity);"}, {"sha": "45a84cf2f6fea554be2702b934b226c8defe2f71", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -89,7 +89,9 @@ package Opt is\n \n    Checksum_Accumulate_Token_Checksum : Boolean := True;\n    --  GPRBUILD\n-   --  Set to False by gprbuild when the version of GNAT is 5.02 or before.\n+   --  Set to False by gprbuild when the version of GNAT is 5.02 or before. If\n+   --  this switch is False, then we do not call Accumulate_Token_Checksum, so\n+   --  the setting of the following two flags is irrelevant.\n \n    Checksum_GNAT_6_3 : Boolean := False;\n    --  GPRBUILD"}, {"sha": "753c5a57a7125ed06a7573a14416bcbff66d176f", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 7, "deletions": 18, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -250,9 +250,7 @@ package body Ch3 is\n       --  and we need to fix it.\n \n       if Nkind (Ident_Node) = N_Defining_Identifier then\n-         Ident_Node :=\n-           Make_Identifier (Sloc (Ident_Node),\n-             Chars => Chars (Ident_Node));\n+         Ident_Node := Make_Identifier (Sloc (Ident_Node), Chars (Ident_Node));\n       end if;\n \n       --  Change identifier to defining identifier if not in error\n@@ -505,9 +503,7 @@ package body Ch3 is\n             when Tok_Left_Paren =>\n                Typedef_Node := P_Enumeration_Type_Definition;\n \n-               End_Labl :=\n-                 Make_Identifier (Token_Ptr,\n-                   Chars => Chars (Ident_Node));\n+               End_Labl := Make_Identifier (Token_Ptr, Chars (Ident_Node));\n                Set_Comes_From_Source (End_Labl, False);\n \n                Set_End_Label (Typedef_Node, End_Labl);\n@@ -523,9 +519,7 @@ package body Ch3 is\n                if Nkind (Typedef_Node) = N_Derived_Type_Definition\n                  and then Present (Record_Extension_Part (Typedef_Node))\n                then\n-                  End_Labl :=\n-                    Make_Identifier (Token_Ptr,\n-                      Chars => Chars (Ident_Node));\n+                  End_Labl := Make_Identifier (Token_Ptr, Chars (Ident_Node));\n                   Set_Comes_From_Source (End_Labl, False);\n \n                   Set_End_Label\n@@ -541,9 +535,7 @@ package body Ch3 is\n             when Tok_Record =>\n                Typedef_Node := P_Record_Definition;\n \n-               End_Labl :=\n-                 Make_Identifier (Token_Ptr,\n-                   Chars => Chars (Ident_Node));\n+               End_Labl := Make_Identifier (Token_Ptr, Chars (Ident_Node));\n                Set_Comes_From_Source (End_Labl, False);\n \n                Set_End_Label (Typedef_Node, End_Labl);\n@@ -598,8 +590,7 @@ package body Ch3 is\n                      Set_Limited_Present (Typedef_Node, True);\n \n                      End_Labl :=\n-                       Make_Identifier (Token_Ptr,\n-                         Chars => Chars (Ident_Node));\n+                       Make_Identifier (Token_Ptr, Chars (Ident_Node));\n                      Set_Comes_From_Source (End_Labl, False);\n \n                      Set_End_Label (Typedef_Node, End_Labl);\n@@ -621,8 +612,7 @@ package body Ch3 is\n                      Set_Tagged_Present (Typedef_Node, True);\n \n                      End_Labl :=\n-                       Make_Identifier (Token_Ptr,\n-                         Chars => Chars (Ident_Node));\n+                       Make_Identifier (Token_Ptr, Chars (Ident_Node));\n                      Set_Comes_From_Source (End_Labl, False);\n \n                      Set_End_Label (Typedef_Node, End_Labl);\n@@ -705,8 +695,7 @@ package body Ch3 is\n                     and then Present (Record_Extension_Part (Typedef_Node))\n                   then\n                      End_Labl :=\n-                       Make_Identifier (Token_Ptr,\n-                                        Chars => Chars (Ident_Node));\n+                       Make_Identifier (Token_Ptr, Chars (Ident_Node));\n                      Set_Comes_From_Source (End_Labl, False);\n \n                      Set_End_Label"}, {"sha": "1949595720b1c7e8590a94d8f5ad7265cf2667e9", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -1524,8 +1524,7 @@ package body Ch5 is\n \n       if No (Loop_Name) then\n          Created_Name :=\n-           Make_Identifier (Sloc (Loop_Node),\n-             Chars => Set_Loop_Block_Name ('L'));\n+           Make_Identifier (Sloc (Loop_Node), Set_Loop_Block_Name ('L'));\n          Set_Comes_From_Source (Created_Name, False);\n          Set_Has_Created_Identifier (Loop_Node, True);\n          Set_Identifier (Loop_Node, Created_Name);\n@@ -1596,8 +1595,7 @@ package body Ch5 is\n \n          if No (Loop_Name) then\n             Created_Name :=\n-              Make_Identifier (Sloc (Loop_Node),\n-                Chars => Set_Loop_Block_Name ('L'));\n+              Make_Identifier (Sloc (Loop_Node), Set_Loop_Block_Name ('L'));\n             Set_Comes_From_Source (Created_Name, False);\n             Set_Has_Created_Identifier (Loop_Node, True);\n             Set_Identifier (Loop_Node, Created_Name);\n@@ -1663,8 +1661,7 @@ package body Ch5 is\n \n          if No (Loop_Name) then\n             Created_Name :=\n-              Make_Identifier (Sloc (Loop_Node),\n-                Chars => Set_Loop_Block_Name ('L'));\n+              Make_Identifier (Sloc (Loop_Node), Set_Loop_Block_Name ('L'));\n             Set_Comes_From_Source (Created_Name, False);\n             Set_Has_Created_Identifier (Loop_Node, True);\n             Set_Identifier (Loop_Node, Created_Name);\n@@ -1833,8 +1830,7 @@ package body Ch5 is\n \n       if No (Block_Name) then\n          Created_Name :=\n-           Make_Identifier (Sloc (Block_Node),\n-             Chars => Set_Loop_Block_Name ('B'));\n+           Make_Identifier (Sloc (Block_Node), Set_Loop_Block_Name ('B'));\n          Set_Comes_From_Source (Created_Name, False);\n          Set_Has_Created_Identifier (Block_Node, True);\n          Set_Identifier (Block_Node, Created_Name);\n@@ -1875,8 +1871,7 @@ package body Ch5 is\n \n       if No (Block_Name) then\n          Created_Name :=\n-           Make_Identifier (Sloc (Block_Node),\n-             Chars => Set_Loop_Block_Name ('B'));\n+           Make_Identifier (Sloc (Block_Node), Set_Loop_Block_Name ('B'));\n          Set_Comes_From_Source (Created_Name, False);\n          Set_Has_Created_Identifier (Block_Node, True);\n          Set_Identifier (Block_Node, Created_Name);"}, {"sha": "b250ecb950e5ec7435a466a491cb52d1d518d6af", "filename": "gcc/ada/par-endh.adb", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fpar-endh.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fpar-endh.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-endh.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -333,9 +333,7 @@ package body Endh is\n                                     Copy_Name (Selector_Name (N)));\n \n                            else\n-                              R :=\n-                                Make_Identifier (Token_Ptr,\n-                                  Chars => Chars (N));\n+                              R := Make_Identifier (Token_Ptr, Chars (N));\n                               Set_Comes_From_Source (N, False);\n                               return R;\n                            end if;\n@@ -357,9 +355,7 @@ package body Endh is\n                   elsif Nkind (End_Labl) = N_Defining_Identifier\n                     or else Nkind (End_Labl) = N_Identifier\n                   then\n-                     End_Labl :=\n-                       Make_Identifier (Token_Ptr,\n-                         Chars => Chars (End_Labl));\n+                     End_Labl := Make_Identifier (Token_Ptr, Chars (End_Labl));\n \n                   elsif Nkind (End_Labl) = N_Defining_Operator_Symbol\n                     or else Nkind (End_Labl) = N_Operator_Symbol"}, {"sha": "bdef6853e730342f9e2d197c520b868b5b8a1614", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -4018,9 +4018,7 @@ package body Sem_Attr is\n                   Error_Attr;\n                end if;\n \n-               Rewrite (N,\n-                 Make_Identifier (Sloc (N),\n-                   Chars => Name_uResult));\n+               Rewrite (N, Make_Identifier (Sloc (N), Name_uResult));\n                Analyze_And_Resolve (N, Etype (PS));\n \n             else"}, {"sha": "6c4e2442d86a310ce32dc6397713f2ee2c9d5877", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -2293,7 +2293,7 @@ package body Sem_Ch10 is\n               Make_Assignment_Statement (Loc,\n                 Name =>\n                   Make_Identifier (Loc,\n-                    New_External_Name (Chars (Etype (Nam)), 'E')),\n+                    Chars => New_External_Name (Chars (Etype (Nam)), 'E')),\n                  Expression => New_Reference_To (Standard_True, Loc)));\n          end if;\n       end if;"}, {"sha": "76472a0e90e0c0a0930c480a99b5032c41d0f305", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -1049,7 +1049,7 @@ package body Sem_Ch12 is\n          --  defining identifier for it.\n \n          Decl := New_Copy_Tree (F);\n-         Id := Make_Defining_Identifier (Sloc (F_Id), Chars => Chars (F_Id));\n+         Id := Make_Defining_Identifier (Sloc (F_Id), Chars (F_Id));\n \n          if Nkind (F) in N_Formal_Subprogram_Declaration then\n             Set_Defining_Unit_Name (Specification (Decl), Id);"}, {"sha": "8d53120c360dba3d09770b67d17933fb69c41a0c", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 18, "deletions": 37, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -1034,8 +1034,7 @@ package body Sem_Ch13 is\n                   Aitem :=\n                     Make_Pragma (Loc,\n                       Pragma_Identifier            =>\n-                        Make_Identifier (Sloc (Id),\n-                          Chars => Pname),\n+                        Make_Identifier (Sloc (Id), Pname),\n                       Class_Present                => Class_Present (Aspect),\n                       Split_PPC                    => Split_PPC (Aspect),\n                       Pragma_Argument_Associations => New_List (\n@@ -3617,20 +3616,17 @@ package body Sem_Ch13 is\n                  Make_Type_Conversion (Loc,\n                    Subtype_Mark =>\n                      Make_Attribute_Reference (Loc,\n-                       Prefix         =>\n-                         New_Occurrence_Of (T, Loc),\n+                       Prefix         => New_Occurrence_Of (T, Loc),\n                        Attribute_Name => Name_Class),\n-                   Expression =>\n-                     Make_Identifier (Loc,\n-                       Chars => Object_Name)));\n+                   Expression   => Make_Identifier (Loc, Object_Name)));\n \n                Set_Entity (Expression (N), Object_Entity);\n                Set_Etype  (Expression (N), Typ);\n \n             --  Invariant, replace with obj\n \n             else\n-               Rewrite (N, Make_Identifier (Loc, Chars => Object_Name));\n+               Rewrite (N, Make_Identifier (Loc, Object_Name));\n                Set_Entity (N, Object_Entity);\n                Set_Etype  (N, Typ);\n             end if;\n@@ -3691,10 +3687,8 @@ package body Sem_Ch13 is\n \n                Assoc := New_List (\n                  Make_Pragma_Argument_Association (Loc,\n-                    Expression =>\n-                      Make_Identifier (Loc, Chars => Name_Invariant)),\n-                  Make_Pragma_Argument_Association (Loc,\n-                    Expression => Exp));\n+                   Expression => Make_Identifier (Loc, Name_Invariant)),\n+                 Make_Pragma_Argument_Association (Loc, Expression => Exp));\n \n                --  Add message if present in Invariant pragma\n \n@@ -3723,7 +3717,7 @@ package body Sem_Ch13 is\n                Append_To (Stmts,\n                  Make_Pragma (Loc,\n                    Pragma_Identifier            =>\n-                     Make_Identifier (Loc, Chars => Name_Check),\n+                     Make_Identifier (Loc, Name_Check),\n                    Pragma_Argument_Associations => Assoc));\n \n                --  If Inherited case and option enabled, output info msg. Note\n@@ -3812,10 +3806,8 @@ package body Sem_Ch13 is\n              Parameter_Specifications => New_List (\n                Make_Parameter_Specification (Loc,\n                  Defining_Identifier =>\n-                   Make_Defining_Identifier (Loc,\n-                     Chars => Object_Name),\n-                 Parameter_Type =>\n-                   New_Occurrence_Of (Typ, Loc))));\n+                   Make_Defining_Identifier (Loc, Object_Name),\n+                 Parameter_Type => New_Occurrence_Of (Typ, Loc))));\n \n          PBody :=\n            Make_Subprogram_Body (Loc,\n@@ -3908,9 +3900,7 @@ package body Sem_Ch13 is\n \n             Exp :=\n               Make_Predicate_Call\n-                (T,\n-                 Convert_To (T,\n-                   Make_Identifier (Loc, Chars => Object_Name)));\n+                (T, Convert_To (T, Make_Identifier (Loc, Object_Name)));\n \n             --  Add call to evolving expression, using AND THEN if needed\n \n@@ -3969,7 +3959,7 @@ package body Sem_Ch13 is\n \n          procedure Replace_Type_Reference (N : Node_Id) is\n          begin\n-            Rewrite (N, Make_Identifier (Loc, Chars => Object_Name));\n+            Rewrite (N, Make_Identifier (Loc, Object_Name));\n          end Replace_Type_Reference;\n \n       --  Start of processing for Add_Predicates\n@@ -4065,7 +4055,7 @@ package body Sem_Ch13 is\n              Parameter_Specifications => New_List (\n                Make_Parameter_Specification (Loc,\n                  Defining_Identifier =>\n-                   Make_Defining_Identifier (Loc, Chars => Object_Name),\n+                   Make_Defining_Identifier (Loc, Object_Name),\n                  Parameter_Type      => New_Occurrence_Of (Typ, Loc))),\n              Result_Definition        =>\n                New_Occurrence_Of (Standard_Boolean, Loc));\n@@ -4084,7 +4074,7 @@ package body Sem_Ch13 is\n              Parameter_Specifications => New_List (\n                Make_Parameter_Specification (Loc,\n                  Defining_Identifier =>\n-                   Make_Defining_Identifier (Loc, Chars => Object_Name),\n+                   Make_Defining_Identifier (Loc, Object_Name),\n                  Parameter_Type =>\n                    New_Occurrence_Of (Typ, Loc))),\n              Result_Definition        =>\n@@ -4471,7 +4461,7 @@ package body Sem_Ch13 is\n          if Is_Enumeration_Type (Typ) then\n             Result := Get_Enum_Lit_From_Pos (Typ, V, Loc);\n          else\n-            Result := Make_Integer_Literal (Loc, Intval => V);\n+            Result := Make_Integer_Literal (Loc, V);\n          end if;\n \n          Set_Etype (Result, Btyp);\n@@ -5527,18 +5517,10 @@ package body Sem_Ch13 is\n \n          Set_Component_Clause (Fent,\n            Make_Component_Clause (Loc,\n-             Component_Name =>\n-               Make_Identifier (Loc,\n-                 Chars => Name_uTag),\n-\n-             Position  =>\n-               Make_Integer_Literal (Loc,\n-                 Intval => Uint_0),\n-\n-             First_Bit =>\n-               Make_Integer_Literal (Loc,\n-                 Intval => Uint_0),\n+             Component_Name => Make_Identifier (Loc, Name_uTag),\n \n+             Position  => Make_Integer_Literal (Loc, Uint_0),\n+             First_Bit => Make_Integer_Literal (Loc, Uint_0),\n              Last_Bit  =>\n                Make_Integer_Literal (Loc,\n                  UI_From_Int (System_Address_Size))));\n@@ -6547,8 +6529,7 @@ package body Sem_Ch13 is\n \n       else\n          Subp_Id :=\n-           Make_Defining_Identifier (Loc,\n-             Chars => New_External_Name (Sname, 'V'));\n+           Make_Defining_Identifier (Loc, New_External_Name (Sname, 'V'));\n          Subp_Decl :=\n            Make_Object_Declaration (Loc,\n              Defining_Identifier => Subp_Id,"}, {"sha": "6587916206d7350a2ab3ac535112b9fba763f57d", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 15, "deletions": 19, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -5151,7 +5151,7 @@ package body Sem_Ch3 is\n             Loc  : constant Source_Ptr := Sloc (N);\n             Anon : constant Entity_Id :=\n                      Make_Defining_Identifier (Loc,\n-                       New_External_Name (Chars (Derived_Type), 'T'));\n+                       Chars => New_External_Name (Chars (Derived_Type), 'T'));\n             Decl : Node_Id;\n \n          begin\n@@ -5450,7 +5450,7 @@ package body Sem_Ch3 is\n \n          Implicit_Base :=\n            Make_Defining_Identifier (Sloc (Derived_Type),\n-             New_External_Name (Chars (Derived_Type), 'B'));\n+             Chars => New_External_Name (Chars (Derived_Type), 'B'));\n \n          --  Indicate the proper nature of the derived type. This must be done\n          --  before analysis of the literals, to recognize cases when a literal\n@@ -6102,8 +6102,9 @@ package body Sem_Ch3 is\n          if not Is_Private_Type (Full_View (Parent_Type))\n            and then (In_Open_Scopes (Scope (Parent_Type)))\n          then\n-            Full_Der := Make_Defining_Identifier (Sloc (Derived_Type),\n-                                              Chars (Derived_Type));\n+            Full_Der :=\n+              Make_Defining_Identifier\n+                (Sloc (Derived_Type), Chars (Derived_Type));\n             Set_Is_Itype (Full_Der);\n             Set_Has_Private_Declaration (Full_Der);\n             Set_Has_Private_Declaration (Derived_Type);\n@@ -6175,8 +6176,8 @@ package body Sem_Ch3 is\n            and then not Is_Completion\n          then\n             Full_Der :=\n-              Make_Defining_Identifier (Sloc (Derived_Type),\n-                Chars => Chars (Derived_Type));\n+              Make_Defining_Identifier\n+                (Sloc (Derived_Type), Chars (Derived_Type));\n             Set_Is_Itype (Full_Der);\n             Set_Has_Private_Declaration (Full_Der);\n             Set_Has_Private_Declaration (Derived_Type);\n@@ -6249,8 +6250,8 @@ package body Sem_Ch3 is\n             --  will be installed when the enclosing child body is compiled.\n \n             Full_Der :=\n-              Make_Defining_Identifier (Sloc (Derived_Type),\n-                Chars => Chars (Derived_Type));\n+              Make_Defining_Identifier\n+                (Sloc (Derived_Type), Chars (Derived_Type));\n             Set_Is_Itype (Full_Der);\n             Build_Itype_Reference (Full_Der, N);\n \n@@ -7878,9 +7879,7 @@ package body Sem_Ch3 is\n    begin\n       --  A discriminal has the same name as the discriminant\n \n-      D_Minal :=\n-        Make_Defining_Identifier (Sloc (Discrim),\n-          Chars => Chars (Discrim));\n+      D_Minal := Make_Defining_Identifier (Sloc (Discrim), Chars (Discrim));\n \n       Set_Ekind     (D_Minal, E_In_Parameter);\n       Set_Mechanism (D_Minal, Default_Mechanism);\n@@ -8682,8 +8681,7 @@ package body Sem_Ch3 is\n                    New_Reference_To (Subp, Loc)),\n \n                Make_Pragma_Argument_Association (Loc,\n-                 Expression =>\n-                   Make_Identifier (Loc, Iface_Kind))));\n+                 Expression => Make_Identifier (Loc, Iface_Kind))));\n \n          --  The pragma doesn't need to be analyzed because it is internaly\n          --  build. It is safe to directly register it as a rep item since we\n@@ -13929,8 +13927,8 @@ package body Sem_Ch3 is\n                           New_Copy (Subtype_Indication\n                                      (Parent (Partial_View))));\n \n-                        New_Iface := Make_Identifier (Sloc (N),\n-                                       Chars (Parent_Type));\n+                        New_Iface :=\n+                          Make_Identifier (Sloc (N), Chars (Parent_Type));\n                         Append (New_Iface, Interface_List (Def));\n \n                         --  Analyze the transformed code\n@@ -16179,10 +16177,8 @@ package body Sem_Ch3 is\n \n       Set_Scalar_Range (T,\n         Make_Range (Sloc (Mod_Expr),\n-          Low_Bound  =>\n-            Make_Integer_Literal (Sloc (Mod_Expr), 0),\n-          High_Bound =>\n-            Make_Integer_Literal (Sloc (Mod_Expr), M_Val - 1)));\n+          Low_Bound  => Make_Integer_Literal (Sloc (Mod_Expr), 0),\n+          High_Bound => Make_Integer_Literal (Sloc (Mod_Expr), M_Val - 1)));\n \n       --  Properly analyze the literals for the range. We do this manually\n       --  because we can't go calling Resolve, since we are resolving these"}, {"sha": "c9992142d415820558c9e0fef3ee40af7fcb1248", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -8794,12 +8794,8 @@ package body Sem_Ch6 is\n \n          Prepend_To (Pragma_Argument_Associations (CP),\n            Make_Pragma_Argument_Association (Sloc (Prag),\n-             Expression =>\n-               Make_Identifier (Loc,\n-                 Chars => Nam)));\n-         Set_Pragma_Identifier (CP,\n-           Make_Identifier (Sloc (Prag),\n-             Chars => Name_Check));\n+             Expression => Make_Identifier (Loc, Nam)));\n+         Set_Pragma_Identifier (CP, Make_Identifier (Sloc (Prag), Name_Check));\n \n          --  If this is inherited case and the current message starts with\n          --  \"failed p\", we change it to \"failed inherited p...\"."}, {"sha": "f9a3c2ae9a99a4e0e268e77772c9ffb4bb5650bd", "filename": "gcc/ada/sem_dist.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fsem_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fsem_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dist.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -777,7 +777,7 @@ package body Sem_Dist is\n         Make_Aggregate (Loc,\n           Component_Associations => New_List (\n             Make_Component_Association (Loc,\n-              Choices => New_List (Make_Identifier (Loc, Name_Ras)),\n+              Choices    => New_List (Make_Identifier (Loc, Name_Ras)),\n               Expression => Make_Null (Loc)))));\n       Analyze_And_Resolve (N, Target_Type);\n       return True;"}, {"sha": "7cbd324d6e6f386b326dd0e787b9e0c782d2bfbc", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 5, "deletions": 14, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=7675ad4f6a9a8c6a1b1e75f9b31a669a874e19fe", "patch": "@@ -6032,9 +6032,7 @@ package body Sem_Prag is\n             Expr := Get_Pragma_Arg (Arg1);\n             Newa := New_List (\n               Make_Pragma_Argument_Association (Loc,\n-                Expression =>\n-                  Make_Identifier (Loc,\n-                    Chars => Name_Assertion)),\n+                Expression => Make_Identifier (Loc, Name_Assertion)),\n \n               Make_Pragma_Argument_Association (Sloc (Expr),\n                 Expression => Expr));\n@@ -6083,14 +6081,11 @@ package body Sem_Prag is\n \n                 Pragma_Argument_Associations => New_List (\n                   Make_Pragma_Argument_Association (Loc,\n-                    Expression =>\n-                      Make_Identifier (Loc,\n-                        Chars => Name_Assertion)),\n+                    Expression => Make_Identifier (Loc, Name_Assertion)),\n \n                   Make_Pragma_Argument_Association (Loc,\n                     Expression =>\n-                      Make_Identifier (Sloc (Policy),\n-                        Chars => Chars (Policy))))));\n+                      Make_Identifier (Sloc (Policy), Chars (Policy))))));\n \n             Set_Analyzed (N);\n             Set_Next_Pragma (N, Opt.Check_Policy_List);\n@@ -11228,9 +11223,7 @@ package body Sem_Prag is\n                    Chars => Name_Check,\n                    Pragma_Argument_Associations => New_List (\n                      Make_Pragma_Argument_Association (Loc,\n-                       Expression =>\n-                         Make_Identifier (Loc,\n-                           Chars => Name_Precondition)),\n+                       Expression => Make_Identifier (Loc, Name_Precondition)),\n \n                      Make_Pragma_Argument_Association (Sloc (Arg1),\n                        Expression => Relocate_Node (Get_Pragma_Arg (Arg1))))));\n@@ -14256,9 +14249,7 @@ package body Sem_Prag is\n              Chars                        => Name_Suppress,\n              Pragma_Argument_Associations => New_List (\n                Make_Pragma_Argument_Association (Sloc (N),\n-                 Expression =>\n-                   Make_Identifier (Sloc (N),\n-                     Chars => Name_All_Checks)))));\n+                 Expression => Make_Identifier (Sloc (N), Name_All_Checks)))));\n       end if;\n \n       --  Nothing else to do at the current time!"}]}