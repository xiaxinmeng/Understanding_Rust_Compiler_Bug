{"sha": "4f1c88ae5892fad3d0cf248c6da5ffb51a61c9aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGYxYzg4YWU1ODkyZmFkM2QwY2YyNDhjNmRhNWZmYjUxYTYxYzlhYQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2018-06-25T07:16:59Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2018-06-25T07:16:59Z"}, "message": "C++: Fix PR86082\n\nWhen turning a user-defined numerical literal into an operator\ninvocation the literal needs to be translated to the execution\ncharacter set.\n\ngcc/cp/ChangeLog:\n\n2018-06-25  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\tPR C++/86082\n\t* parser.c (make_char_string_pack): Pass this literal chars\n\tthrough cpp_interpret_string.\n\t(cp_parser_userdef_numeric_literal): Check the result of\n\tmake_char_string_pack.\n\ngcc/testsuite/ChangeLog:\n\n2018-06-25  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\tPR C++/86082\n\t* g++.dg/pr86082.C: New test.\n\nFrom-SVN: r262003", "tree": {"sha": "a711fc4960082a402a1883a26bd05cb740675df1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a711fc4960082a402a1883a26bd05cb740675df1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f1c88ae5892fad3d0cf248c6da5ffb51a61c9aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f1c88ae5892fad3d0cf248c6da5ffb51a61c9aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f1c88ae5892fad3d0cf248c6da5ffb51a61c9aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f1c88ae5892fad3d0cf248c6da5ffb51a61c9aa/comments", "author": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c5ce6638f4deb1417bed3666077822cc5fb12dc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5ce6638f4deb1417bed3666077822cc5fb12dc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5ce6638f4deb1417bed3666077822cc5fb12dc9"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "f612c5b58c0bf2a176334f75fb18190945e1ed5c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f1c88ae5892fad3d0cf248c6da5ffb51a61c9aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f1c88ae5892fad3d0cf248c6da5ffb51a61c9aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f1c88ae5892fad3d0cf248c6da5ffb51a61c9aa", "patch": "@@ -1,3 +1,11 @@\n+2018-06-25  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\tPR C++/86082\n+\t* parser.c (make_char_string_pack): Pass this literal chars\n+\tthrough cpp_interpret_string.\n+\t(cp_parser_userdef_numeric_literal): Check the result of\n+\tmake_char_string_pack.\n+\n 2018-06-24  Maya Rashish  <coypu@sdf.org>\n \n \t* ginclude/stddef.h: Simplify conditions around avoiding"}, {"sha": "5e1b67c7be65e4eb3da9ea16ab815bf70aa5ef02", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f1c88ae5892fad3d0cf248c6da5ffb51a61c9aa/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f1c88ae5892fad3d0cf248c6da5ffb51a61c9aa/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=4f1c88ae5892fad3d0cf248c6da5ffb51a61c9aa", "patch": "@@ -4291,7 +4291,16 @@ make_char_string_pack (tree value)\n   /* Fill in CHARVEC with all of the parameters.  */\n   charvec = make_tree_vec (len);\n   for (i = 0; i < len; ++i)\n-    TREE_VEC_ELT (charvec, i) = build_int_cst (char_type_node, str[i]);\n+    {\n+      unsigned char s[3] = { '\\'', str[i], '\\'' };\n+      cpp_string in = { 3, s };\n+      cpp_string out = { 0, 0 };\n+      if (!cpp_interpret_string (parse_in, &in, 1, &out, CPP_STRING))\n+\treturn NULL_TREE;\n+      gcc_assert (out.len == 2);\n+      TREE_VEC_ELT (charvec, i) = build_int_cst (char_type_node,\n+\t\t\t\t\t\t out.text[0]);\n+    }\n \n   /* Build the argument packs.  */\n   SET_ARGUMENT_PACK_ARGS (argpack, charvec);\n@@ -4407,6 +4416,12 @@ cp_parser_userdef_numeric_literal (cp_parser *parser)\n   if (decl && decl != error_mark_node)\n     {\n       tree tmpl_args = make_char_string_pack (num_string);\n+      if (tmpl_args == NULL_TREE)\n+\t{\n+\t  error (\"failed to translate literal to execution character set %qT\",\n+\t\t num_string);\n+\t  return error_mark_node;\n+\t}\n       decl = lookup_template_function (decl, tmpl_args);\n       result = finish_call_expr (decl, &args, false, true,\n \t\t\t\t tf_warning_or_error);"}, {"sha": "4ca7d21f3eee5951c8cc1720d8e0ddf840ca3648", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f1c88ae5892fad3d0cf248c6da5ffb51a61c9aa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f1c88ae5892fad3d0cf248c6da5ffb51a61c9aa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4f1c88ae5892fad3d0cf248c6da5ffb51a61c9aa", "patch": "@@ -1,3 +1,8 @@\n+2018-06-25  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\tPR C++/86082\n+\t* g++.dg/pr86082.C: New test.\n+\n 2018-06-24  Tom de Vries  <tdevries@suse.de>\n \n \t* g++.dg/guality/guality.exp: Don't use which on gdb arg to report_gdb."}, {"sha": "c7247cd790f39752cf8a0187772536d7976ea1a0", "filename": "gcc/testsuite/g++.dg/pr86082.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f1c88ae5892fad3d0cf248c6da5ffb51a61c9aa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr86082.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f1c88ae5892fad3d0cf248c6da5ffb51a61c9aa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr86082.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr86082.C?ref=4f1c88ae5892fad3d0cf248c6da5ffb51a61c9aa", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do link } */\n+/* { dg-options \"-fexec-charset=IBM1047 -std=c++11\" } */\n+\n+/* When turning 123_test into an operator invocation the literal 123\n+   needs to be translated to the execution character set.  Failing to\n+   do so results in a link error since '1', '2', and '3' in the\n+   specialization will be translated as string literals.  */\n+\n+template <char... p> void q();\n+template <> void q<'1','2','3'>() {}\n+\n+template <char... p> void operator\"\"_test() { q<p...> (); }\n+\n+int\n+main ()\n+{\n+  123_test;\n+}"}]}