{"sha": "062468db046f5229421b027886958fa824af09df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYyNDY4ZGIwNDZmNTIyOTQyMWIwMjc4ODY5NThmYTgyNGFmMDlkZg==", "commit": {"author": {"name": "Robin Dapp", "email": "rdapp@linux.ibm.com", "date": "2019-02-08T14:25:48Z"}, "committer": {"name": "Robin Dapp", "email": "rdapp@gcc.gnu.org", "date": "2019-02-08T14:25:48Z"}, "message": "S/390: Implement vector copysign.\n\nThis patch implements the vector copysign operation using vector select and a\nsignbit mask.\n\ngcc/ChangeLog:\n\n2019-02-08  Robin Dapp  <rdapp@linux.ibm.com>\n\n\t* config/s390/vector.md: Implement vector copysign.\n\ngcc/testsuite/ChangeLog:\n\n2019-02-08  Robin Dapp  <rdapp@linux.ibm.com>\n\n\t* gcc.target/s390/vector/vec-copysign-execute.c: New test.\n\t* gcc.target/s390/vector/vec-copysign.c: New test.\n\nFrom-SVN: r268697", "tree": {"sha": "edadfbb18f12f48fe4ea016a5f2674996879dac7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edadfbb18f12f48fe4ea016a5f2674996879dac7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/062468db046f5229421b027886958fa824af09df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/062468db046f5229421b027886958fa824af09df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/062468db046f5229421b027886958fa824af09df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/062468db046f5229421b027886958fa824af09df/comments", "author": {"login": "rdapp-ibm", "id": 80318053, "node_id": "MDQ6VXNlcjgwMzE4MDUz", "avatar_url": "https://avatars.githubusercontent.com/u/80318053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdapp-ibm", "html_url": "https://github.com/rdapp-ibm", "followers_url": "https://api.github.com/users/rdapp-ibm/followers", "following_url": "https://api.github.com/users/rdapp-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/rdapp-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdapp-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdapp-ibm/subscriptions", "organizations_url": "https://api.github.com/users/rdapp-ibm/orgs", "repos_url": "https://api.github.com/users/rdapp-ibm/repos", "events_url": "https://api.github.com/users/rdapp-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/rdapp-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "94e35e0b09978e7179c0079446a8939dbab15fa9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94e35e0b09978e7179c0079446a8939dbab15fa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94e35e0b09978e7179c0079446a8939dbab15fa9"}], "stats": {"total": 146, "additions": 146, "deletions": 0}, "files": [{"sha": "7bdcc07def1da8de830b047bf40f2084ab9e7ad9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062468db046f5229421b027886958fa824af09df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062468db046f5229421b027886958fa824af09df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=062468db046f5229421b027886958fa824af09df", "patch": "@@ -1,3 +1,7 @@\n+2019-02-08  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* config/s390/vector.md: Implement vector copysign.\n+\n 2019-02-08  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* expr.c (expand_constructor): Correct indentations."}, {"sha": "820372eca29e3ff9c46d0ffb32c8ba3126dc2a8c", "filename": "gcc/config/s390/vector.md", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062468db046f5229421b027886958fa824af09df/gcc%2Fconfig%2Fs390%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062468db046f5229421b027886958fa824af09df/gcc%2Fconfig%2Fs390%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fvector.md?ref=062468db046f5229421b027886958fa824af09df", "patch": "@@ -1362,6 +1362,31 @@\n   operands[4] = CONST0_RTX (V2DImode);\n })\n \n+; Vector copysign, implement using vector select\n+(define_expand \"copysign<mode>3\"\n+  [(set (match_operand:VFT 0 \"register_operand\" \"\")\n+\t(if_then_else:VFT\n+\t (eq (match_dup 3)\n+\t     (match_dup 4))\n+\t (match_operand:VFT 1 \"register_operand\"  \"\")\n+\t (match_operand:VFT 2 \"register_operand\"  \"\")))]\n+  \"TARGET_VX\"\n+{\n+  int sz = GET_MODE_BITSIZE (GET_MODE_INNER (<MODE>mode));\n+  int prec = GET_MODE_PRECISION (GET_MODE_INNER (<tointvec>mode));\n+  wide_int mask_val = wi::shwi (1l << (sz - 1), prec);\n+\n+  rtx mask = gen_reg_rtx (<tointvec>mode);\n+\n+  int nunits = GET_MODE_NUNITS (<tointvec>mode);\n+  rtvec v = rtvec_alloc (nunits);\n+  for (int i = 0; i < nunits; i++)\n+    RTVEC_ELT (v, i) = GEN_INT (mask_val.to_shwi ());\n+\n+  mask = gen_rtx_CONST_VECTOR (<tointvec>mode, v);\n+  operands[3] = force_reg (<tointvec>mode, mask);\n+  operands[4] = CONST0_RTX (<tointvec>mode);\n+})\n \n ;;\n ;; Integer compares"}, {"sha": "5cbb14f54867742a40fa311acbba2ecfdeea01b2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062468db046f5229421b027886958fa824af09df/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062468db046f5229421b027886958fa824af09df/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=062468db046f5229421b027886958fa824af09df", "patch": "@@ -1,3 +1,8 @@\n+2019-02-08  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* gcc.target/s390/vector/vec-copysign-execute.c: New test.\n+\t* gcc.target/s390/vector/vec-copysign.c: New test.\n+\n 2019-02-08  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/89247"}, {"sha": "a8d675d3a7293e300c1637c8073b64d17fc596e5", "filename": "gcc/testsuite/gcc.target/s390/vector/vec-copysign-execute.c", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062468db046f5229421b027886958fa824af09df/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-copysign-execute.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062468db046f5229421b027886958fa824af09df/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-copysign-execute.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-copysign-execute.c?ref=062468db046f5229421b027886958fa824af09df", "patch": "@@ -0,0 +1,74 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ftree-vectorize -mzarch -march=z13\" } */\n+\n+#include <math.h>\n+#include <assert.h>\n+\n+#define N 20\n+\n+double a[N] = {-0.1, -3.2, -6.3, -9.4, -12.5, -15.6, -18.7, -21.8, 24.9,\n+    27.1, 30.2, 33.3, 36.4, 39.5, 42.6, nan(\"123\"), __DBL_MIN__ / 2.0,\n+    -nan (\"1\"), __DBL_MAX__ * 2.0, -__DBL_MAX__ * 1e199};\n+double b[N] = {-1.2, 3.4, -5.6, 7.8, -9.0, 1.0, -2.0, 3.0, -4.0, -5.0, 6.0,\n+    7.0, -8.0, -9.0, 10.0, -11.0, -1., 0., -0., 1.3};\n+double r[N];\n+double r2[N];\n+\n+void\n+foo (void)\n+{\n+  for (int i = 0; i < N; i++)\n+    r[i] = copysign (a[i], b[i]);\n+}\n+\n+__attribute__((optimize(\"no-tree-vectorize\")))\n+void\n+check (void)\n+{\n+  for (int i = 0; i < N; i++)\n+    {\n+      r2[i] = copysign (a[i], b[i]);\n+      assert (r[i] == r2[i]\n+\t      || (isnan (r[i]) && isnan (r2[i])\n+\t\t  && signbit (r[i]) == signbit (r2[i])));\n+    }\n+}\n+\n+float af[N] = {-0.1, -3.2, -6.3, -9.4, -12.5, -15.6, -18.7, -21.8, 24.9,\n+    27.1, 30.2, 33.3, 36.4, 39.5, 42.6, nan(\"123\"), __DBL_MIN__ / 2.0,\n+    -nan (\"1\"), __DBL_MAX__ * 2.0, -__DBL_MAX__ * 1e199};\n+float bf[N] = {-1.2, 3.4, -5.6, 7.8, -9.0, 1.0, -2.0, 3.0, -4.0, -5.0, 6.0,\n+    7.0, -8.0, -9.0, 10.0, -11.0, -1., 0., -0., 1.3};\n+float rf[N];\n+float rf2[N];\n+\n+__attribute__ ((__target__ (\"arch=z14\")))\n+void\n+foof (void)\n+{\n+  for (int i = 0; i < N; i++)\n+    rf[i] = copysignf (af[i], bf[i]);\n+}\n+\n+__attribute__((optimize(\"no-tree-vectorize\")))\n+void\n+checkf (void)\n+{\n+  for (int i = 0; i < N; i++)\n+    {\n+      rf2[i] = copysignf (af[i], bf[i]);\n+      assert (rf[i] == rf2[i]\n+\t      || (isnan (rf[i]) && isnan (rf2[i])\n+\t\t  && signbit (rf[i]) == signbit (rf2[i])));\n+    }\n+}\n+\n+int main()\n+{\n+  foo ();\n+  check ();\n+\n+  foof ();\n+  checkf ();\n+  return r[0];\n+}"}, {"sha": "64c6970c23e2930c003a8901fa597c8661240e2a", "filename": "gcc/testsuite/gcc.target/s390/vector/vec-copysign.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062468db046f5229421b027886958fa824af09df/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-copysign.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062468db046f5229421b027886958fa824af09df/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-copysign.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-copysign.c?ref=062468db046f5229421b027886958fa824af09df", "patch": "@@ -0,0 +1,38 @@\n+/* { dg-do compile { target { s390*-*-* } } } */\n+/* { dg-options \"-O2 -ftree-vectorize -mzarch\" } */\n+/* { dg-final { scan-assembler-times \"vgmg\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vgmf\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vsel\" 2 } } */\n+\n+#include <math.h>\n+\n+#define N 20\n+\n+double a[N] = {-0.1, -3.2, -6.3, -9.4, -12.5, -15.6, -18.7, -21.8, 24.9,\n+    27.1, 30.2, 33.3, 36.4, 39.5, 42.6, nan (\"123\"), __DBL_MIN__ / 2.0,\n+    -nan (\"1\"), __DBL_MAX__ * 2.0, -__DBL_MAX__ * 1e199};\n+double b[N] = {-1.2, 3.4, -5.6, 7.8, -9.0, 1.0, -2.0, 3.0, -4.0, -5.0, 6.0,\n+    7.0, -8.0, -9.0, 10.0, -11.0, -1., 0., -0., 1.3};\n+double r[N];\n+float af[N] = {-0.1, -3.2, -6.3, -9.4, -12.5, -15.6, -18.7, -21.8, 24.9,\n+    27.1, 30.2, 33.3, 36.4, 39.5, 42.6, nan (\"123\"), __DBL_MIN__ / 2.0,\n+    -nan (\"1\"), __DBL_MAX__ * 2.0, -__DBL_MAX__ * 1e199};\n+float bf[N] = {-1.2, 3.4, -5.6, 7.8, -9.0, 1.0, -2.0, 3.0, -4.0, -5.0, 6.0,\n+    7.0, -8.0, -9.0, 10.0, -11.0, -1., 0., -0., 1.3};\n+float rf[N];\n+\n+__attribute__ ((__target__ (\"arch=z13\")))\n+void\n+foo (void)\n+{\n+  for (int i = 0; i < N; i++)\n+    r[i] = copysign (a[i], b[i]);\n+}\n+\n+__attribute__ ((__target__ (\"arch=z14\")))\n+void\n+foof (void)\n+{\n+  for (int i = 0; i < N; i++)\n+    rf[i] = copysignf (af[i], bf[i]);\n+}"}]}