{"sha": "5239874d719f7bc6ba6615e3972c2e5f9187b63a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIzOTg3NGQ3MTlmN2JjNmJhNjYxNWUzOTcyYzJlNWY5MTg3YjYzYQ==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-11-02T14:50:28Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-11-02T14:50:28Z"}, "message": "microblaze-protos.h (function_arg): Delete.\n\n\t* config/microblaze/microblaze-protos.h (function_arg): Delete.\n\t(function_arg_advance): Delete.\n\t* config/microblaze/microblaze.h (FUNCTION_ARG_ADVANCE): Delete.\n\t(FUNCTION_ARG): Delete.\n\t* config/microblaze/microblaze.c (function_arg_advance): Rename to...\n\t(microblaze_function_arg_advance): ...this.  Make static.  Take a\n\tconst_tree and a bool.\n\t(function-arg): Rename to...\n\t(microblaze_function_arg): ...this.  Make static.  Take a const_tree\n\tand a bool.\n\t(microblaze_expand_prologue): Call targetm.calls.function_arg and\n\ttargetm.calls.function_arg_advance.\n\t(TARGET_FUNCTION_ARG, TARGET_FUNCTION_ARG_ADVANCE): Define.\n\nFrom-SVN: r166188", "tree": {"sha": "54a3f96a18f481077566dce5b13cd84c22cfe938", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54a3f96a18f481077566dce5b13cd84c22cfe938"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5239874d719f7bc6ba6615e3972c2e5f9187b63a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5239874d719f7bc6ba6615e3972c2e5f9187b63a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5239874d719f7bc6ba6615e3972c2e5f9187b63a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5239874d719f7bc6ba6615e3972c2e5f9187b63a/comments", "author": null, "committer": null, "parents": [{"sha": "6b3456d1ff836cfc40033b9b238c5dcd9b18d9cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b3456d1ff836cfc40033b9b238c5dcd9b18d9cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b3456d1ff836cfc40033b9b238c5dcd9b18d9cb"}], "stats": {"total": 72, "additions": 35, "deletions": 37}, "files": [{"sha": "874fc97beeec971c706bce5feb70206d9c2f4036", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5239874d719f7bc6ba6615e3972c2e5f9187b63a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5239874d719f7bc6ba6615e3972c2e5f9187b63a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5239874d719f7bc6ba6615e3972c2e5f9187b63a", "patch": "@@ -1,3 +1,19 @@\n+2010-11-02  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* config/microblaze/microblaze-protos.h (function_arg): Delete.\n+\t(function_arg_advance): Delete.\n+\t* config/microblaze/microblaze.h (FUNCTION_ARG_ADVANCE): Delete.\n+\t(FUNCTION_ARG): Delete.\n+\t* config/microblaze/microblaze.c (function_arg_advance): Rename to...\n+\t(microblaze_function_arg_advance): ...this.  Make static.  Take a\n+\tconst_tree and a bool.\n+\t(function-arg): Rename to...\n+\t(microblaze_function_arg): ...this.  Make static.  Take a const_tree\n+\tand a bool.\n+\t(microblaze_expand_prologue): Call targetm.calls.function_arg and\n+\ttargetm.calls.function_arg_advance.\n+\t(TARGET_FUNCTION_ARG, TARGET_FUNCTION_ARG_ADVANCE): Define.\n+\n 2010-11-02  Iain Sandoe  <iains@gcc.gnu.org>\n \n \tMerge from FSF \"apple/trunk\" branch.\n@@ -486,22 +502,6 @@\n \n \t* recog.c (split_all_insns): Remove dead code.\n \n-2010-10-28  Nathan Froyd  <froydnj@codesourcery.com>\n-\n-\t* config/microblaze/microblaze-protos.h (function_arg): Delete.\n-\t(function_arg_advance): Delete.\n-\t* config/microblaze/microblaze.h (FUNCTION_ARG_ADVANCE): Delete.\n-\t(FUNCTION_ARG): Delete.\n-\t* config/microblaze/microblaze.c (function_arg_advance): Rename to...\n-\t(microblaze_function_arg_advance): ...this.  Make static.  Take a\n-\tconst_tree and a bool.\n-\t(function-arg): Rename to...\n-\t(microblaze_function_arg): ...this.  Make static.  Take a const_tree\n-\tand a bool.\n-\t(microblaze_expand_prologue): Call targetm.calls.function_arg and\n-\ttargetm.calls.function_arg_advance.\n-\t(TARGET_FUNCTION_ARG, TARGET_FUNCTION_ARG_ADVANCE): Define.\n-\n 2010-10-28  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* score.h (FUNCTION_ARG, FUNCTION_ARG_ADVANCE): Delete."}, {"sha": "56dca55dc45815ce467e6c04b9c4b126d5d98ceb", "filename": "gcc/config/microblaze/microblaze-protos.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5239874d719f7bc6ba6615e3972c2e5f9187b63a/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5239874d719f7bc6ba6615e3972c2e5f9187b63a/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze-protos.h?ref=5239874d719f7bc6ba6615e3972c2e5f9187b63a", "patch": "@@ -52,12 +52,6 @@ extern void microblaze_declare_object (FILE *, const char *, const char *,\n extern void microblaze_asm_output_ident (FILE *, const char *);\n #endif  /* RTX_CODE */\n \n-#ifdef TREE_CODE\n-extern void function_arg_advance (CUMULATIVE_ARGS *, enum machine_mode,\n-\t\t\t\t  tree, int);\n-extern rtx function_arg (CUMULATIVE_ARGS *, enum machine_mode, tree, int);\n-#endif /* TREE_CODE */\n-\n /* Declare functions in microblaze-c.c.  */\n extern void microblaze_cpp_define (struct cpp_reader *); \n "}, {"sha": "bcf845bed671a08ba4a3bdea1ef57ddf1b5163a2", "filename": "gcc/config/microblaze/microblaze.c", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5239874d719f7bc6ba6615e3972c2e5f9187b63a/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5239874d719f7bc6ba6615e3972c2e5f9187b63a/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c?ref=5239874d719f7bc6ba6615e3972c2e5f9187b63a", "patch": "@@ -1088,9 +1088,9 @@ init_cumulative_args (CUMULATIVE_ARGS * cum, tree fntype,\n \n /* Advance the argument to the next argument position.  */\n \n-void\n-function_arg_advance (CUMULATIVE_ARGS * cum, enum machine_mode mode,\n-\t\t      tree type, int named ATTRIBUTE_UNUSED)\n+static void\n+microblaze_function_arg_advance (CUMULATIVE_ARGS * cum, enum machine_mode mode,\n+\t\t\t\t const_tree type, bool named ATTRIBUTE_UNUSED)\n {\n   cum->arg_number++;\n   switch (mode)\n@@ -1143,9 +1143,10 @@ function_arg_advance (CUMULATIVE_ARGS * cum, enum machine_mode mode,\n /* Return an RTL expression containing the register for the given mode,\n    or 0 if the argument is to be passed on the stack.  */\n \n-rtx\n-function_arg (CUMULATIVE_ARGS * cum, enum machine_mode mode, \n-\t      tree type ATTRIBUTE_UNUSED, int named ATTRIBUTE_UNUSED)\n+static rtx\n+microblaze_function_arg (CUMULATIVE_ARGS * cum, enum machine_mode mode, \n+\t\t\t const_tree type ATTRIBUTE_UNUSED,\n+\t\t\t bool named ATTRIBUTE_UNUSED)\n {\n   rtx ret;\n   int regbase = -1;\n@@ -2268,7 +2269,8 @@ microblaze_expand_prologue (void)\n \t  passed_mode = Pmode;\n \t}\n \n-      entry_parm = FUNCTION_ARG (args_so_far, passed_mode, passed_type, 1);\n+      entry_parm = targetm.calls.function_arg (&args_so_far, passed_mode,\n+\t\t\t\t\t       passed_type, true);\n \n       if (entry_parm)\n \t{\n@@ -2288,7 +2290,8 @@ microblaze_expand_prologue (void)\n \t  break;\n \t}\n \n-      FUNCTION_ARG_ADVANCE (args_so_far, passed_mode, passed_type, 1);\n+      targetm.calls.function_arg_advance (&args_so_far, passed_mode,\n+\t\t\t\t\t  passed_type, true);\n \n       next_arg = TREE_CHAIN (cur_arg);\n       if (next_arg == 0)\n@@ -2302,7 +2305,8 @@ microblaze_expand_prologue (void)\n \n   /* Split parallel insn into a sequence of insns.  */\n \n-  next_arg_reg = FUNCTION_ARG (args_so_far, VOIDmode, void_type_node, 1);\n+  next_arg_reg = targetm.calls.function_arg (&args_so_far, VOIDmode,\n+\t\t\t\t\t     void_type_node, true);\n   if (next_arg_reg != 0 && GET_CODE (next_arg_reg) == PARALLEL)\n     {\n       rtvec adjust = XVEC (next_arg_reg, 0);\n@@ -2999,6 +3003,12 @@ microblaze_adjust_cost (rtx insn ATTRIBUTE_UNUSED, rtx link,\n #undef TARGET_ARG_PARTIAL_BYTES\n #define TARGET_ARG_PARTIAL_BYTES\tfunction_arg_partial_bytes\n \n+#undef TARGET_FUNCTION_ARG\n+#define TARGET_FUNCTION_ARG\t\tmicroblaze_function_arg\n+\n+#undef TARGET_FUNCTION_ARG_ADVANCE\n+#define TARGET_FUNCTION_ARG_ADVANCE\tmicroblaze_function_arg_advance\n+\n #undef TARGET_CAN_ELIMINATE\n #define TARGET_CAN_ELIMINATE \t\tmicroblaze_can_eliminate\n "}, {"sha": "63fd4f6aaf8e8215b98f600e1af646e3a861e363", "filename": "gcc/config/microblaze/microblaze.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5239874d719f7bc6ba6615e3972c2e5f9187b63a/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5239874d719f7bc6ba6615e3972c2e5f9187b63a/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.h?ref=5239874d719f7bc6ba6615e3972c2e5f9187b63a", "patch": "@@ -496,12 +496,6 @@ typedef struct microblaze_args\n #define INIT_CUMULATIVE_ARGS(CUM,FNTYPE,LIBNAME,FNDECL,N_NAMED_ARGS)\t\\\n   init_cumulative_args (&CUM, FNTYPE, LIBNAME)\n \n-#define FUNCTION_ARG_ADVANCE(CUM, MODE, TYPE, NAMED)\t\t\t\\\n-  function_arg_advance (&CUM, MODE, TYPE, NAMED)\n-\n-#define FUNCTION_ARG(CUM, MODE, TYPE, NAMED) \\\n-  function_arg( &CUM, MODE, TYPE, NAMED)\n-\n #define NO_PROFILE_COUNTERS\t\t\t1\n \n #define FUNCTION_PROFILER(FILE, LABELNO) { \\"}]}