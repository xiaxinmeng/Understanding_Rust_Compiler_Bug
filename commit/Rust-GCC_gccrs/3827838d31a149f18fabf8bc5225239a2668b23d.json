{"sha": "3827838d31a149f18fabf8bc5225239a2668b23d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzgyNzgzOGQzMWExNDlmMThmYWJmOGJjNTIyNTIzOWEyNjY4YjIzZA==", "commit": {"author": {"name": "Carl Love", "email": "cel@us.ibm.com", "date": "2018-06-01T21:52:25Z"}, "committer": {"name": "Carl Love", "email": "carll@gcc.gnu.org", "date": "2018-06-01T21:52:25Z"}, "message": "altivec-35.c (foo): Add builtin test vec_madds.\n\ngcc/testsuite/ChangeLog:\n\n2018-06-01  Carl Love  <cel@us.ibm.com>\n\t* gcc.target/powerpc/altivec-35.c (foo): Add builtin test vec_madds.\n\t* gcc.target/powerpc/builtins-6-runnable.c (main): Fix typo for output.\n\tAdd vec_xst_be for signed and unsigned arguments.\n\nFrom-SVN: r261088", "tree": {"sha": "8f5f9dbd6697d6c5c4a20564a2e5275dc1f56a34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f5f9dbd6697d6c5c4a20564a2e5275dc1f56a34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3827838d31a149f18fabf8bc5225239a2668b23d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3827838d31a149f18fabf8bc5225239a2668b23d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3827838d31a149f18fabf8bc5225239a2668b23d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3827838d31a149f18fabf8bc5225239a2668b23d/comments", "author": {"login": "carlelove", "id": 86435705, "node_id": "MDQ6VXNlcjg2NDM1NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlelove", "html_url": "https://github.com/carlelove", "followers_url": "https://api.github.com/users/carlelove/followers", "following_url": "https://api.github.com/users/carlelove/following{/other_user}", "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions", "organizations_url": "https://api.github.com/users/carlelove/orgs", "repos_url": "https://api.github.com/users/carlelove/repos", "events_url": "https://api.github.com/users/carlelove/events{/privacy}", "received_events_url": "https://api.github.com/users/carlelove/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a609077976a7b6cc865f62d3117f9bf0797d29b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a609077976a7b6cc865f62d3117f9bf0797d29b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a609077976a7b6cc865f62d3117f9bf0797d29b1"}], "stats": {"total": 73, "additions": 64, "deletions": 9}, "files": [{"sha": "29ea7ed81bb29d04929a209fd66f07eee338e739", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3827838d31a149f18fabf8bc5225239a2668b23d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3827838d31a149f18fabf8bc5225239a2668b23d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3827838d31a149f18fabf8bc5225239a2668b23d", "patch": "@@ -1,3 +1,8 @@\n+2018-06-01  Carl Love  <cel@us.ibm.com>\n+\t* gcc.target/powerpc/altivec-35.c (foo): Add builtin test vec_madds.\n+\t* gcc.target/powerpc/builtins-6-runnable.c (main): Fix typo for output.\n+\tAdd vec_xst_be for signed and unsigned arguments.\n+\n 2018-06-01  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/85816"}, {"sha": "08365285b092c9bfe404ff0af4b343efed7a8c25", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-35.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3827838d31a149f18fabf8bc5225239a2668b23d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-35.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3827838d31a149f18fabf8bc5225239a2668b23d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-35.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-35.c?ref=3827838d31a149f18fabf8bc5225239a2668b23d", "patch": "@@ -1,3 +1,4 @@\n+\n /* { dg-do compile } */\n /* { dg-require-effective-target powerpc_altivec_ok } */\n /* { dg-options \"-maltivec -mno-vsx -mno-power8-vector -O0\" } */\n@@ -19,7 +20,10 @@ void foo (vector signed int *vsir,\n   *vssr++ = vec_madd (vssa, vusb, vusc);\n   *vssr++ = vec_madd (vusa, vssb, vssc);\n   *vusr++ = vec_madd (vusa, vusb, vusc);\n+\n+  *vssr++ = vec_madds (vssa, vssb, vssc);\n }\n \n /* { dg-final { scan-assembler-times \"vaddcuw\" 1 } } */\n /* { dg-final { scan-assembler-times \"vmladduhm\" 4 } } */\n+/* { dg-final { scan-assembler-times \"vmhaddshs\" 1 } } */"}, {"sha": "a175890d5a3780e4b0ac51212302c9248b44dce3", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-3-p9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3827838d31a149f18fabf8bc5225239a2668b23d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3827838d31a149f18fabf8bc5225239a2668b23d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p9.c?ref=3827838d31a149f18fabf8bc5225239a2668b23d", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile } */\n+/* { dg-do compile  { target { le } } } */\n /* { dg-require-effective-target powerpc_p9vector_ok } */\n /* { dg-options \"-mcpu=power9 -O1\" } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power9\" } } */"}, {"sha": "380a11a9a1bdf0162434056b5bdba70c2554a51b", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-6-runnable.c", "status": "modified", "additions": 54, "deletions": 8, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3827838d31a149f18fabf8bc5225239a2668b23d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-6-runnable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3827838d31a149f18fabf8bc5225239a2668b23d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-6-runnable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-6-runnable.c?ref=3827838d31a149f18fabf8bc5225239a2668b23d", "patch": "@@ -60,11 +60,11 @@ void print_uc (vector unsigned char vec_expected,\n {\n   int i;\n \n-  printf(\"expected signed char data\\n\");\n+  printf(\"expected unsigned char data\\n\");\n   for (i = 0; i < 16; i++)\n     printf(\" %d,\", vec_expected[i]);\n \n-  printf(\"\\nactual signed char data\\n\");\n+  printf(\"\\nactual unsigned char data\\n\");\n   for (i = 0; i < 16; i++)\n     printf(\" %d,\", vec_actual[i]);\n   printf(\"\\n\");\n@@ -197,13 +197,11 @@ void print_ull (vector unsigned long long vec_expected,\n \n   printf(\"expected unsigned long long data\\n\");\n   for (i = 0; i < 2; i++)\n-\t  //    printf(\" %llu,\", vec_expected[i]);\n-    printf(\" 0x%llx,\", vec_expected[i]);\n+    printf(\" %llu,\", vec_expected[i]);\n \n   printf(\"\\nactual unsigned long long data\\n\");\n   for (i = 0; i < 2; i++)\n-\t  //    printf(\" %llu,\", vec_actual[i]);\n-    printf(\"0x %llx,\", vec_actual[i]);\n+    printf(\" %llu,\", vec_actual[i]);\n   printf(\"\\n\");\n }\n \n@@ -745,6 +743,56 @@ int main() {\n #endif\n      }\n \n+   disp = 8;\n+#ifdef __BIG_ENDIAN__\n+   vec_si_expected1 = (vector signed int){  0, 0, -8, -7 };\n+#else\n+   vec_si_expected1 = (vector signed int){  0, 0, -5, -6 };\n+#endif\n+   store_data_si = (vector signed int){ -8, -7, -6, -5 };\n+\n+   for (i=0; i<4; i++)\n+     vec_si_result1[i] = 0;\n+\n+   address_si = &vec_si_result1[0];\n+\n+   vec_xst_be (store_data_si, disp, address_si);\n+\n+   if (result_wrong_si (vec_si_expected1, vec_si_result1))\n+     {\n+#ifdef DEBUG\n+       printf(\"Error: vec_xst_be, si disp = %d, result does not match expected result\\n\", disp);\n+       print_si (vec_si_expected1, vec_si_result1);\n+#else\n+       abort();\n+#endif\n+     }\n+\n+   disp = 0;\n+#ifdef __BIG_ENDIAN__\n+   vec_ui_expected1 = (vector unsigned int){ 0, 1, 2, 3 };\n+#else\n+   vec_ui_expected1 = (vector unsigned int){ 3, 2, 1, 0 };\n+#endif\n+   store_data_ui = (vector unsigned int){ 0, 1, 2, 3 };\n+\n+   for (i=0; i<4; i++)\n+     vec_ui_result1[i] = 0;\n+\n+   address_ui = &vec_ui_result1[0];\n+\n+   vec_xst_be (store_data_ui, disp, address_ui);\n+\n+   if (result_wrong_ui (vec_ui_expected1, vec_ui_result1))\n+     {\n+#ifdef DEBUG\n+       printf(\"Error: vec_xst_be, ui disp = 0, result does not match expected result\\n\");\n+       print_ui (vec_ui_expected1, vec_ui_result1);\n+#else\n+       abort();\n+#endif\n+     }\n+\n    disp = 0;\n #ifdef __BIG_ENDIAN__\n    vec_ss_expected1 = (vector signed short int){ -4, -3, -2, -1, 0, 1, 2, 3 };\n@@ -972,7 +1020,6 @@ int main() {\n #endif\n      }\n \n-#if 0\n    disp = 0;\n #ifdef __BIG_ENDIAN__\n    vec_f_expected1 = (vector float){ 0.0, 1.2, 2.3, 3.4 };\n@@ -997,5 +1044,4 @@ int main() {\n        abort();\n #endif\n      }\n-#endif\n }"}]}