{"sha": "303a5e000557499d2b45a145773f5a50451bb024", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzAzYTVlMDAwNTU3NDk5ZDJiNDVhMTQ1NzczZjVhNTA0NTFiYjAyNA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-30T12:00:18Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-30T12:00:18Z"}, "message": "(NOTICE_UPDATE_CC): Correctly handle aob insns.\n\nFrom-SVN: r9549", "tree": {"sha": "56bd539934661bffb164792e351b3b23959e4365", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56bd539934661bffb164792e351b3b23959e4365"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/303a5e000557499d2b45a145773f5a50451bb024", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/303a5e000557499d2b45a145773f5a50451bb024", "html_url": "https://github.com/Rust-GCC/gccrs/commit/303a5e000557499d2b45a145773f5a50451bb024", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/303a5e000557499d2b45a145773f5a50451bb024/comments", "author": null, "committer": null, "parents": [{"sha": "67225c151ef76370f5bd0732ba2287a74e0c85a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67225c151ef76370f5bd0732ba2287a74e0c85a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67225c151ef76370f5bd0732ba2287a74e0c85a5"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "6198e3546837c711c0ab6a6bf3e71d9452aff264", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/303a5e000557499d2b45a145773f5a50451bb024/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/303a5e000557499d2b45a145773f5a50451bb024/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=303a5e000557499d2b45a145773f5a50451bb024", "patch": "@@ -956,13 +956,15 @@ gen_rtx (PLUS, Pmode, frame, gen_rtx (CONST_INT, VOIDmode, 12))\n \t   && GET_CODE (XVECEXP (EXP, 0, 0)) == SET)\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n       if (GET_CODE (SET_SRC (XVECEXP (EXP, 0, 0))) == CALL)\t\\\n-\tCC_STATUS_INIT;\t\t\t\t\t\t\\\n+\tCC_STATUS_INIT;\t\t\t\t\t        \\\n       else if (GET_CODE (SET_DEST (XVECEXP (EXP, 0, 0))) != PC) \\\n \t{ cc_status.flags = 0;\t\t\t\t\t\\\n \t  cc_status.value1 = SET_DEST (XVECEXP (EXP, 0, 0));\t\\\n-\t  cc_status.value2 = SET_SRC (XVECEXP (EXP, 0, 0)); } } \\\n-  /* PARALLELs whose first element sets the PC are aob, sob insns.\t\\\n-     They do change the cc's.  So drop through and forget the cc's.  */ \\\n+\t  cc_status.value2 = SET_SRC (XVECEXP (EXP, 0, 0)); }   \\\n+      else\t\t\t\t\t\t\t\\\n+\t/* PARALLELs whose first element sets the PC are aob,   \\\n+\t   sob insns.  They do change the cc's.  */\t\t\\\n+\tCC_STATUS_INIT; }\t\t\t\t\t\\\n   else CC_STATUS_INIT;\t\t\t\t\t\t\\\n   if (cc_status.value1 && GET_CODE (cc_status.value1) == REG\t\\\n       && cc_status.value2\t\t\t\t\t\\"}]}