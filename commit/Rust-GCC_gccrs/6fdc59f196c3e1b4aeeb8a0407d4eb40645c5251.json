{"sha": "6fdc59f196c3e1b4aeeb8a0407d4eb40645c5251", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZkYzU5ZjE5NmMzZTFiNGFlZWI4YTA0MDdkNGViNDA2NDVjNTI1MQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-05-24T17:42:09Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-05-24T17:42:09Z"}, "message": "libstdc++: Qualify functions used in tests\n\nThese tests rely on ADL for some functions, probably unintentionally.\nThe calls only work because the iterator wrappers derive from\nstd::iterator and so namespace std is an associated namespace.\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/25_algorithms/inplace_merge/constrained.cc: Qualify\n\tcall to ranges::next.\n\t* testsuite/25_algorithms/is_sorted/constrained.cc: Likewise.\n\t* testsuite/25_algorithms/is_sorted_until/constrained.cc:\n\tLikewise.\n\t* testsuite/25_algorithms/swap_ranges/1.cc: Qualify call to\n\tswap_ranges.", "tree": {"sha": "e7ba84e13a693759b89ada6ca253df7c3b57ec20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7ba84e13a693759b89ada6ca253df7c3b57ec20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fdc59f196c3e1b4aeeb8a0407d4eb40645c5251", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fdc59f196c3e1b4aeeb8a0407d4eb40645c5251", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fdc59f196c3e1b4aeeb8a0407d4eb40645c5251", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fdc59f196c3e1b4aeeb8a0407d4eb40645c5251/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e3b3b77e13cac764a135a7118613c47686e0a62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e3b3b77e13cac764a135a7118613c47686e0a62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e3b3b77e13cac764a135a7118613c47686e0a62"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "2f3d5d6955a8ec374c64842ba22f1092be44227b", "filename": "libstdc++-v3/testsuite/25_algorithms/inplace_merge/constrained.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fdc59f196c3e1b4aeeb8a0407d4eb40645c5251/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Finplace_merge%2Fconstrained.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fdc59f196c3e1b4aeeb8a0407d4eb40645c5251/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Finplace_merge%2Fconstrained.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Finplace_merge%2Fconstrained.cc?ref=6fdc59f196c3e1b4aeeb8a0407d4eb40645c5251", "patch": "@@ -41,7 +41,7 @@ test01()\n \tranges::sort(v);\n \n \ttest_range<int, bidirectional_iterator_wrapper> rz(v.data(), v.data()+i+j);\n-\tauto result = ranges::inplace_merge(rz, next(ranges::begin(rz), i));\n+\tauto result = ranges::inplace_merge(rz, ranges::next(ranges::begin(rz), i));\n \tVERIFY( result == rz.end() );\n \n \tVERIFY( ranges::is_sorted(rz) );"}, {"sha": "92440bb7bd7df56bdd98c68a763e8407193c5b86", "filename": "libstdc++-v3/testsuite/25_algorithms/is_sorted/constrained.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fdc59f196c3e1b4aeeb8a0407d4eb40645c5251/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fis_sorted%2Fconstrained.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fdc59f196c3e1b4aeeb8a0407d4eb40645c5251/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fis_sorted%2Fconstrained.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fis_sorted%2Fconstrained.cc?ref=6fdc59f196c3e1b4aeeb8a0407d4eb40645c5251", "patch": "@@ -46,7 +46,7 @@ test02()\n   test_range<int, forward_iterator_wrapper> rx(x);\n   VERIFY( ranges::is_sorted(rx) );\n   VERIFY( !ranges::is_sorted(ranges::begin(rx),\n-\t\t\t     next(ranges::begin(rx), 2),\n+\t\t\t     ranges::next(ranges::begin(rx), 2),\n \t\t\t     ranges::greater{}) );\n }\n "}, {"sha": "bc32334831300ed5e64106476df68952e4e7b346", "filename": "libstdc++-v3/testsuite/25_algorithms/is_sorted_until/constrained.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fdc59f196c3e1b4aeeb8a0407d4eb40645c5251/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fis_sorted_until%2Fconstrained.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fdc59f196c3e1b4aeeb8a0407d4eb40645c5251/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fis_sorted_until%2Fconstrained.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fis_sorted_until%2Fconstrained.cc?ref=6fdc59f196c3e1b4aeeb8a0407d4eb40645c5251", "patch": "@@ -50,9 +50,9 @@ test02()\n   test_range<int, forward_iterator_wrapper> rx(x);\n   VERIFY( ranges::is_sorted_until(rx) == ranges::end(rx) );\n   VERIFY( ranges::is_sorted_until(ranges::begin(rx),\n-\t\t\t\t  next(ranges::begin(rx), 2),\n+\t\t\t\t  ranges::next(ranges::begin(rx), 2),\n \t\t\t\t  ranges::greater{})\n-\t  == next(ranges::begin(rx), 1) );\n+\t  == ranges::next(ranges::begin(rx), 1) );\n }\n \n constexpr bool"}, {"sha": "4660199af505d18faff443d781864b525f9d9723", "filename": "libstdc++-v3/testsuite/25_algorithms/swap_ranges/1.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fdc59f196c3e1b4aeeb8a0407d4eb40645c5251/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fswap_ranges%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fdc59f196c3e1b4aeeb8a0407d4eb40645c5251/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fswap_ranges%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fswap_ranges%2F1.cc?ref=6fdc59f196c3e1b4aeeb8a0407d4eb40645c5251", "patch": "@@ -24,7 +24,7 @@\n using __gnu_test::test_container;\n using __gnu_test::forward_iterator_wrapper;\n \n-typedef test_container<int, forward_iterator_wrapper> Container; \n+typedef test_container<int, forward_iterator_wrapper> Container;\n \n \n void\n@@ -46,10 +46,10 @@ test2()\n   int array2[] = {1};\n   Container con1(array1, array1);\n   Container con2(array2, array2);\n-  VERIFY(swap_ranges(con1.begin(), con1.end(), con2.begin()).ptr == array2);\n+  VERIFY(std::swap_ranges(con1.begin(), con1.end(), con2.begin()).ptr == array2);\n }\n \n-int \n+int\n main()\n {\n   test1();"}]}