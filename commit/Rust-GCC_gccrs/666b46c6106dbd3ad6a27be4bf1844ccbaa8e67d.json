{"sha": "666b46c6106dbd3ad6a27be4bf1844ccbaa8e67d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY2YjQ2YzYxMDZkYmQzYWQ2YTI3YmU0YmYxODQ0Y2NiYWE4ZTY3ZA==", "commit": {"author": {"name": "Sudakshina Das", "email": "sudi.das@arm.com", "date": "2019-12-12T18:01:18Z"}, "committer": {"name": "Sudakshina Das", "email": "sudi@gcc.gnu.org", "date": "2019-12-12T18:01:18Z"}, "message": "[Committed, testsuite] Fix PR92870\n\nWith my recent commit, I added a test that is not passing on all targets.\nMy change was valid for targets that have a vector/scalar shift/rotate optabs\n(optab that supports vector shifted by scalar).\n\nSince it does not seem to be easy to find out which targets would support it,\nI am limiting the test to the targets that I know pass.\n\ngcc/testsuite/ChangeLog\n\n2019-12-12  Sudakshina Das  <sudi.das@arm.com>\n\n\tPR testsuite/92870\n\t* gcc.dg/vect/vect-shift-5.c: Add target to scan-tree-dump.\n\nFrom-SVN: r279310", "tree": {"sha": "00a60d37398a684fe5bbb67bf31332a3e005cd23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00a60d37398a684fe5bbb67bf31332a3e005cd23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/666b46c6106dbd3ad6a27be4bf1844ccbaa8e67d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/666b46c6106dbd3ad6a27be4bf1844ccbaa8e67d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/666b46c6106dbd3ad6a27be4bf1844ccbaa8e67d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/666b46c6106dbd3ad6a27be4bf1844ccbaa8e67d/comments", "author": {"login": "sudakshina-das-arm", "id": 28538945, "node_id": "MDQ6VXNlcjI4NTM4OTQ1", "avatar_url": "https://avatars.githubusercontent.com/u/28538945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sudakshina-das-arm", "html_url": "https://github.com/sudakshina-das-arm", "followers_url": "https://api.github.com/users/sudakshina-das-arm/followers", "following_url": "https://api.github.com/users/sudakshina-das-arm/following{/other_user}", "gists_url": "https://api.github.com/users/sudakshina-das-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/sudakshina-das-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sudakshina-das-arm/subscriptions", "organizations_url": "https://api.github.com/users/sudakshina-das-arm/orgs", "repos_url": "https://api.github.com/users/sudakshina-das-arm/repos", "events_url": "https://api.github.com/users/sudakshina-das-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/sudakshina-das-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "404a671b597c5d1090c3cc18a91959c646ff0246", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/404a671b597c5d1090c3cc18a91959c646ff0246", "html_url": "https://github.com/Rust-GCC/gccrs/commit/404a671b597c5d1090c3cc18a91959c646ff0246"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "7ddcae3c87f010a065850a1750ccb4922c30d976", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/666b46c6106dbd3ad6a27be4bf1844ccbaa8e67d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/666b46c6106dbd3ad6a27be4bf1844ccbaa8e67d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=666b46c6106dbd3ad6a27be4bf1844ccbaa8e67d", "patch": "@@ -1,3 +1,8 @@\n+2019-12-12  Sudakshina Das  <sudi.das@arm.com>\n+\n+\tPR testsuite/92870\n+\t* gcc.dg/vect/vect-shift-5.c: Add target to scan-tree-dump.\n+\n 2019-12-12  Ed Schonberg  <schonberg@adacore.com>\n \n \t* gnat.dg/warn24.adb: Remove expected warning."}, {"sha": "e47797f3366fd52d48141c2dfd2691e1a4e9f26e", "filename": "gcc/testsuite/gcc.dg/vect/vect-shift-5.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/666b46c6106dbd3ad6a27be4bf1844ccbaa8e67d/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-shift-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/666b46c6106dbd3ad6a27be4bf1844ccbaa8e67d/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-shift-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-shift-5.c?ref=666b46c6106dbd3ad6a27be4bf1844ccbaa8e67d", "patch": "@@ -16,4 +16,7 @@ int foo (uint32_t arr[4][4])\n     return (((uint16_t)sum) + ((uint32_t)sum >> 16)) >> 1;\n }\n \n-/* { dg-final { scan-tree-dump {vectorizable_shift ===[\\n\\r][^\\n]*prologue_cost = 0} \"vect\" } } */\n+/* For a target that has a vector/scalar shift/rotate optab, check\n+   that we are not adding the cost of creating a vector from the scalar\n+   in the prologue.  */\n+/* { dg-final { scan-tree-dump {vectorizable_shift ===[\\n\\r][^\\n]*prologue_cost = 0} \"vect\" { target { aarch64*-*-* x86_64-*-* } } } } */"}]}