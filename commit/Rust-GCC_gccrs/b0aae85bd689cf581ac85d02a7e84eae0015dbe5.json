{"sha": "b0aae85bd689cf581ac85d02a7e84eae0015dbe5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBhYWU4NWJkNjg5Y2Y1ODFhYzg1ZDAyYTdlODRlYWUwMDE1ZGJlNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-05-18T14:01:08Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-05-28T10:25:15Z"}, "message": "make vect_finish_stmt_generation work w/o stmt_vec_info\n\nThis makes the call chain below vec_init_vector happy with a NULL\nstmt_vec_info which is used as \"context\".\n\n2020-05-27  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-stmts.c (vect_finish_stmt_generation_1):\n\tConditionalize stmt_info use, assert the new stmt cannot throw\n\twhen not specified.\n\t(vect_finish_stmt_generation): Adjust assert.", "tree": {"sha": "c025a24fce850a520e8a754cce53742aa78c2dfd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c025a24fce850a520e8a754cce53742aa78c2dfd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0aae85bd689cf581ac85d02a7e84eae0015dbe5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0aae85bd689cf581ac85d02a7e84eae0015dbe5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0aae85bd689cf581ac85d02a7e84eae0015dbe5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0aae85bd689cf581ac85d02a7e84eae0015dbe5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09df85393ce5501a28359d159670fd05c4d70abf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09df85393ce5501a28359d159670fd05c4d70abf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09df85393ce5501a28359d159670fd05c4d70abf"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "58fb93d740a5a7ac30b9266fa76306cfe7422471", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0aae85bd689cf581ac85d02a7e84eae0015dbe5/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0aae85bd689cf581ac85d02a7e84eae0015dbe5/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=b0aae85bd689cf581ac85d02a7e84eae0015dbe5", "patch": "@@ -1668,14 +1668,19 @@ vect_finish_stmt_generation_1 (vec_info *vinfo,\n   if (dump_enabled_p ())\n     dump_printf_loc (MSG_NOTE, vect_location, \"add new stmt: %G\", vec_stmt);\n \n-  gimple_set_location (vec_stmt, gimple_location (stmt_info->stmt));\n+  if (stmt_info)\n+    {\n+      gimple_set_location (vec_stmt, gimple_location (stmt_info->stmt));\n \n-  /* While EH edges will generally prevent vectorization, stmt might\n-     e.g. be in a must-not-throw region.  Ensure newly created stmts\n-     that could throw are part of the same region.  */\n-  int lp_nr = lookup_stmt_eh_lp (stmt_info->stmt);\n-  if (lp_nr != 0 && stmt_could_throw_p (cfun, vec_stmt))\n-    add_stmt_to_eh_lp (vec_stmt, lp_nr);\n+      /* While EH edges will generally prevent vectorization, stmt might\n+\t e.g. be in a must-not-throw region.  Ensure newly created stmts\n+\t that could throw are part of the same region.  */\n+      int lp_nr = lookup_stmt_eh_lp (stmt_info->stmt);\n+      if (lp_nr != 0 && stmt_could_throw_p (cfun, vec_stmt))\n+\tadd_stmt_to_eh_lp (vec_stmt, lp_nr);\n+    }\n+  else\n+    gcc_assert (!stmt_could_throw_p (cfun, vec_stmt));\n \n   return vec_stmt_info;\n }\n@@ -1705,7 +1710,7 @@ vect_finish_stmt_generation (vec_info *vinfo,\n \t\t\t     stmt_vec_info stmt_info, gimple *vec_stmt,\n \t\t\t     gimple_stmt_iterator *gsi)\n {\n-  gcc_assert (gimple_code (stmt_info->stmt) != GIMPLE_LABEL);\n+  gcc_assert (!stmt_info || gimple_code (stmt_info->stmt) != GIMPLE_LABEL);\n \n   if (!gsi_end_p (*gsi)\n       && gimple_has_mem_ops (vec_stmt))"}]}