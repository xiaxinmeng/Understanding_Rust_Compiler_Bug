{"sha": "5c75088c80c2f661d435731dec5c3bc95376b9da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM3NTA4OGM4MGMyZjY2MWQ0MzU3MzFkZWM1YzNiYzk1Mzc2YjlkYQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2014-06-25T20:31:32Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2014-06-25T20:31:32Z"}, "message": "resolve.c (resolve_ordinary_assign): Don't invoke caf_send when assigning a coindexed RHS scalar to a noncoindexed...\n\n2014-06-25  Tobias Burnus  <burnus@net-b.de>\n\nfortran/\n        * resolve.c (resolve_ordinary_assign): Don't invoke caf_send\n        when assigning a coindexed RHS scalar to a noncoindexed LHS\n        array.\n        * trans-intrinsic.c (conv_caf_send): Do numeric type conversion\n        for a noncoindexed scalar RHS.\n\ngcc/testsuite/\n        * gfortran.dg/coarray/coindexed_1.f90: New.\n\nlibgfortran/\n        * caf/single.c (assign_char4_from_char1,\n        * assign_char1_from_char4,\n        convert_type): New static functions.\n        (_gfortran_caf_get, _gfortran_caf_send): Use them.\n\nFrom-SVN: r211993", "tree": {"sha": "b78359680b9fe9703b183f0741b895d551ea0837", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b78359680b9fe9703b183f0741b895d551ea0837"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c75088c80c2f661d435731dec5c3bc95376b9da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c75088c80c2f661d435731dec5c3bc95376b9da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c75088c80c2f661d435731dec5c3bc95376b9da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c75088c80c2f661d435731dec5c3bc95376b9da/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aa9ca5ca4f3e9e272a7dcc518d037927b319bb27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa9ca5ca4f3e9e272a7dcc518d037927b319bb27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa9ca5ca4f3e9e272a7dcc518d037927b319bb27"}], "stats": {"total": 1955, "additions": 1876, "deletions": 79}, "files": [{"sha": "d92a88f31a074de6a7d4c6f301651e379582115f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c75088c80c2f661d435731dec5c3bc95376b9da/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c75088c80c2f661d435731dec5c3bc95376b9da/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5c75088c80c2f661d435731dec5c3bc95376b9da", "patch": "@@ -1,10 +1,19 @@\n+2014-06-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* resolve.c (resolve_ordinary_assign): Don't invoke caf_send\n+\twhen assigning a coindexed RHS scalar to a noncoindexed LHS\n+\tarray.\n+\t* trans-intrinsic.c (conv_caf_send): Do numeric type conversion\n+\tfor a noncoindexed scalar RHS.\n+\n 2014-06-25  Tobias Burnus  <burnus@net-b.de>\n \n \t* check.c (check_co_minmaxsum): Add definable check.\n \t* expr.c (gfc_check_vardef_context): Fix context == NULL case.\n-\t* trans-expr.c (get_scalar_to_descriptor_type): Handle pointer arguments.\n-\t* trans-intrinsic.c (gfc_conv_intrinsic_caf_get): Fix generation of temporary\n-\tstrings.\n+\t* trans-expr.c (get_scalar_to_descriptor_type): Handle pointer\n+\targuments.\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_caf_get): Fix generation of\n+\ttemporary strings.\n \n 2014-06-25  Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "ca20c294243f10e9e79a806a4a8ecc26772f2b47", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c75088c80c2f661d435731dec5c3bc95376b9da/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c75088c80c2f661d435731dec5c3bc95376b9da/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=5c75088c80c2f661d435731dec5c3bc95376b9da", "patch": "@@ -9300,12 +9300,15 @@ resolve_ordinary_assign (gfc_code *code, gfc_namespace *ns)\n   /* Insert a GFC_ISYM_CAF_SEND intrinsic, when the LHS is a coindexed variable.\n      Additionally, insert this code when the RHS is a CAF as we then use the\n      GFC_ISYM_CAF_SEND intrinsic just to avoid a temporary; but do not do so if\n-     the LHS is (re)allocatable or has a vector subscript.  */\n+     the LHS is (re)allocatable or has a vector subscript.  If the LHS is a\n+     noncoindexed array and the RHS is a coindexed scalar, use the normal code\n+     path.  */\n   if (gfc_option.coarray == GFC_FCOARRAY_LIB\n       && (lhs_coindexed\n \t  || (code->expr2->expr_type == EXPR_FUNCTION\n \t      && code->expr2->value.function.isym\n \t      && code->expr2->value.function.isym->id == GFC_ISYM_CAF_GET\n+\t      && (code->expr1->rank == 0 || code->expr2->rank != 0)\n \t      && !gfc_expr_attr (rhs).allocatable\n               && !gfc_has_vector_subscript (rhs))))\n     {"}, {"sha": "a1dfdfb2f83694130edc65c33e934cc98f71823c", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c75088c80c2f661d435731dec5c3bc95376b9da/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c75088c80c2f661d435731dec5c3bc95376b9da/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=5c75088c80c2f661d435731dec5c3bc95376b9da", "patch": "@@ -1349,6 +1349,7 @@ conv_caf_send (gfc_code *code) {\n   gfc_se lhs_se, rhs_se;\n   stmtblock_t block;\n   tree caf_decl, token, offset, image_index, tmp, lhs_kind, rhs_kind;\n+  tree lhs_type = NULL_TREE;\n   tree vec = null_pointer_node, rhs_vec = null_pointer_node;\n \n   gcc_assert (gfc_option.coarray == GFC_FCOARRAY_LIB);\n@@ -1364,6 +1365,7 @@ conv_caf_send (gfc_code *code) {\n       symbol_attribute attr;\n       gfc_clear_attr (&attr);\n       gfc_conv_expr (&lhs_se, lhs_expr);\n+      lhs_type = TREE_TYPE (lhs_se.expr);\n       lhs_se.expr = gfc_conv_scalar_to_descriptor (&lhs_se, lhs_se.expr, attr);\n       lhs_se.expr = gfc_build_addr_expr (NULL_TREE, lhs_se.expr);\n     }\n@@ -1385,6 +1387,7 @@ conv_caf_send (gfc_code *code) {\n \t}\n       lhs_se.want_pointer = 1;\n       gfc_conv_expr_descriptor (&lhs_se, lhs_expr);\n+      lhs_type = gfc_get_element_type (TREE_TYPE (TREE_TYPE (lhs_se.expr)));\n       if (has_vector)\n \t{\n \t  vec = conv_caf_vector_subscript (&block, lhs_se.expr, ar);\n@@ -1418,11 +1421,16 @@ conv_caf_send (gfc_code *code) {\n \n   /* RHS.  */\n   gfc_init_se (&rhs_se, NULL);\n+  if (rhs_expr->expr_type == EXPR_FUNCTION && rhs_expr->value.function.isym\n+      && rhs_expr->value.function.isym->id == GFC_ISYM_CONVERSION)\n+    rhs_expr = rhs_expr->value.function.actual->expr;\n   if (rhs_expr->rank == 0)\n     {\n       symbol_attribute attr;\n       gfc_clear_attr (&attr);\n       gfc_conv_expr (&rhs_se, rhs_expr);\n+      if (!gfc_is_coindexed (rhs_expr) && rhs_expr->ts.type != BT_CHARACTER)\n+\t rhs_se.expr = fold_convert (lhs_type , rhs_se.expr);\n       rhs_se.expr = gfc_conv_scalar_to_descriptor (&rhs_se, rhs_se.expr, attr);\n       rhs_se.expr = gfc_build_addr_expr (NULL_TREE, rhs_se.expr);\n     }"}, {"sha": "0735c448cc1948e8430cdbd4012b5ba0d62bb856", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c75088c80c2f661d435731dec5c3bc95376b9da/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c75088c80c2f661d435731dec5c3bc95376b9da/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5c75088c80c2f661d435731dec5c3bc95376b9da", "patch": "@@ -1,3 +1,7 @@\n+2014-06-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.dg/coarray/coindexed_1.f90: New.\n+\n 2014-06-25  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.dg/coarray_collectives_7.f90: New."}, {"sha": "86f86d1af2c205cd64a203bb6107ee7cefaa2bdc", "filename": "gcc/testsuite/gfortran.dg/coarray/coindexed_1.f90", "status": "added", "additions": 1459, "deletions": 0, "changes": 1459, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c75088c80c2f661d435731dec5c3bc95376b9da/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fcoindexed_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c75088c80c2f661d435731dec5c3bc95376b9da/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fcoindexed_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fcoindexed_1.f90?ref=5c75088c80c2f661d435731dec5c3bc95376b9da", "patch": "@@ -0,0 +1,1459 @@\n+! { dg-do run }\n+!\n+!\n+program test\n+  implicit none\n+  call char_test()\n+contains\n+subroutine char_test()\n+  character(len=3, kind=1), save :: str1a[*], str1b(5)[*]\n+  character(len=7, kind=1), save :: str2a[*], str2b(5)[*]\n+  character(len=3, kind=4), save :: ustr1a[*], ustr1b(5)[*]\n+  character(len=7, kind=4), save :: ustr2a[*], ustr2b(5)[*]\n+\n+  ! ---------- Assign to coindexed variable -------------\n+\n+  ! - - - - - scalar = scalar\n+\n+  ! SCALAR - kind 1 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str1a = 1_\"abc\"\n+  str2a = 1_\"XXXXXXX\"\n+  if (this_image() == num_images()) then\n+    str2a[1] = str1a\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (str2a /= 1_\"abc    \") call abort()\n+  else\n+    if (str2a /= 1_\"XXXXXXX\") call abort()\n+  end if\n+\n+  ! SCALAR - kind 4 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr1a = 4_\"abc\"\n+  ustr2a = 4_\"XXXXXXX\"\n+  if (this_image() == num_images()) then\n+    ustr2a[1] = ustr1a\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (ustr2a /= 4_\"abc    \") call abort()\n+  else\n+    if (ustr2a /= 4_\"XXXXXXX\") call abort()\n+  end if\n+\n+  ! SCALAR - kind 1 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str2a = 1_\"abcde\"\n+  str1a = 1_\"XXX\"\n+  if (this_image() == num_images()) then\n+    str1a[1] = str2a\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (str1a /= 1_\"abc\") call abort()\n+  else\n+    if (str1a /= 1_\"XXX\") call abort()\n+  end if\n+\n+  ! SCALAR - kind 4 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr2a = 4_\"abcde\"\n+  ustr1a = 4_\"XXX\"\n+  if (this_image() == num_images()) then\n+    ustr1a[1] = ustr2a\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (ustr1a /= 4_\"abc\") call abort()\n+  else\n+    if (ustr1a /= 4_\"XXX\") call abort()\n+  end if\n+\n+  ! - - - - - array = array\n+\n+  ! contiguous ARRAY - kind 1 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str1b(1) = 1_\"abc\"\n+  str1b(2) = 1_\"def\"\n+  str1b(3) = 1_\"gjh\"\n+  str2b(1) = 1_\"XXXXXXX\"\n+  str2b(2) = 1_\"YYYYYYY\"\n+  str2b(3) = 1_\"ZZZZZZZ\"\n+  if (this_image() == num_images()) then\n+    str2b(:)[1] = str1b\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (str2b(1) /= 1_\"abc    \" .or. str2b(2) /= 1_\"def    \" &\n+        .or. str2b(3) /= 1_\"gjh    \") call abort()\n+  else\n+    if (str2b(1) /= 1_\"XXXXXXX\" .or. str2b(2) /= 1_\"YYYYYYY\" &\n+        .or. str2b(3) /= 1_\"ZZZZZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 4 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr1b(1) = 4_\"abc\"\n+  ustr1b(2) = 4_\"def\"\n+  ustr1b(3) = 4_\"gjh\"\n+  ustr2b(1) = 4_\"XXXXXXX\"\n+  ustr2b(2) = 4_\"YYYYYYY\"\n+  ustr2b(3) = 4_\"ZZZZZZZ\"\n+  if (this_image() == num_images()) then\n+    ustr2b(:)[1] = ustr1b\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (ustr2b(1) /= 4_\"abc    \" .or. ustr2b(2) /= 4_\"def    \" &\n+        .or. ustr2b(3) /= 4_\"gjh    \") call abort()\n+  else\n+    if (ustr2b(1) /= 4_\"XXXXXXX\" .or. ustr2b(2) /= 4_\"YYYYYYY\" &\n+        .or. ustr2b(3) /= 4_\"ZZZZZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 1 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str2b(1) = 1_\"abcdefg\"\n+  str2b(2) = 1_\"hijklmn\"\n+  str2b(3) = 1_\"opqrstu\"\n+  str1b(1) = 1_\"XXX\"\n+  str1b(2) = 1_\"YYY\"\n+  str1b(3) = 1_\"ZZZ\"\n+  if (this_image() == num_images()) then\n+    str1b(:)[1] = str2b\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (str1b(1) /= 1_\"abc\" .or. str1b(2) /= 1_\"hij\" &\n+        .or. str1b(3) /= 1_\"opq\") call abort()\n+  else\n+    if (str1b(1) /= 1_\"XXX\" .or. str1b(2) /= 1_\"YYY\" &\n+        .or. str1b(3) /= 1_\"ZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 4 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr2b(1) = 4_\"abcdefg\"\n+  ustr2b(2) = 4_\"hijklmn\"\n+  ustr2b(3) = 4_\"opqrstu\"\n+  ustr1b(1) = 4_\"XXX\"\n+  ustr1b(2) = 4_\"YYY\"\n+  ustr1b(3) = 4_\"ZZZ\"\n+  if (this_image() == num_images()) then\n+    ustr1b(:)[1] = ustr2b\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (ustr1b(1) /= 4_\"abc\" .or. ustr1b(2) /= 4_\"hij\" &\n+        .or. ustr1b(3) /= 4_\"opq\") call abort()\n+  else\n+    if (ustr1b(1) /= 4_\"XXX\" .or. ustr1b(2) /= 4_\"YYY\" &\n+        .or. ustr1b(3) /= 4_\"ZZZ\") call abort()\n+  end if\n+\n+  ! - - - - - array = scalar\n+\n+  ! contiguous ARRAY - kind 1 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str1a = 1_\"abc\"\n+  str2b(1) = 1_\"XXXXXXX\"\n+  str2b(2) = 1_\"YYYYYYY\"\n+  str2b(3) = 1_\"ZZZZZZZ\"\n+  if (this_image() == num_images()) then\n+    str2b(:)[1] = str1a\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (str2b(1) /= 1_\"abc    \" .or. str2b(2) /= 1_\"abc    \" &\n+        .or. str2b(3) /= 1_\"abc    \") call abort()\n+  else\n+    if (str2b(1) /= 1_\"XXXXXXX\" .or. str2b(2) /= 1_\"YYYYYYY\" &\n+        .or. str2b(3) /= 1_\"ZZZZZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 4 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr1a = 4_\"abc\"\n+  ustr2b(1) = 4_\"XXXXXXX\"\n+  ustr2b(2) = 4_\"YYYYYYY\"\n+  ustr2b(3) = 4_\"ZZZZZZZ\"\n+  if (this_image() == num_images()) then\n+    ustr2b(:)[1] = ustr1a\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (ustr2b(1) /= 4_\"abc    \" .or. ustr2b(2) /= 4_\"abc    \" &\n+        .or. ustr2b(3) /= 4_\"abc    \") call abort()\n+  else\n+    if (ustr2b(1) /= 4_\"XXXXXXX\" .or. ustr2b(2) /= 4_\"YYYYYYY\" &\n+        .or. ustr2b(3) /= 4_\"ZZZZZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 1 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str2a = 1_\"abcdefg\"\n+  str1b(1) = 1_\"XXX\"\n+  str1b(2) = 1_\"YYY\"\n+  str1b(3) = 1_\"ZZZ\"\n+  if (this_image() == num_images()) then\n+    str1b(:)[1] = str2a\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (str1b(1) /= 1_\"abc\" .or. str1b(2) /= 1_\"abc\" &\n+        .or. str1b(3) /= 1_\"abc\") call abort()\n+  else\n+    if (str1b(1) /= 1_\"XXX\" .or. str1b(2) /= 1_\"YYY\" &\n+        .or. str1b(3) /= 1_\"ZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 4 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr2a = 4_\"abcdefg\"\n+  ustr1b(1) = 4_\"XXX\"\n+  ustr1b(2) = 4_\"YYY\"\n+  ustr1b(3) = 4_\"ZZZ\"\n+  if (this_image() == num_images()) then\n+    ustr1b(:)[1] = ustr2a\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (ustr1b(1) /= 4_\"abc\" .or. ustr1b(2) /= 4_\"abc\" &\n+        .or. ustr1b(3) /= 4_\"abc\") call abort()\n+  else\n+    if (ustr1b(1) /= 4_\"XXX\" .or. ustr1b(2) /= 4_\"YYY\" &\n+        .or. ustr1b(3) /= 4_\"ZZZ\") call abort()\n+  end if\n+\n+  ! ---------- Take from a coindexed variable -------------\n+\n+  ! - - - - - scalar = scalar\n+\n+  ! SCALAR - kind 1 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str1a = 1_\"abc\"\n+  str2a = 1_\"XXXXXXX\"\n+  if (this_image() == num_images()) then\n+    str2a = str1a[1]\n+  end if\n+  sync all\n+  if (this_image() == num_images()) then\n+    if (str2a /= 1_\"abc    \") call abort()\n+  else\n+    if (str2a /= 1_\"XXXXXXX\") call abort()\n+  end if\n+\n+  ! SCALAR - kind 4 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr1a = 4_\"abc\"\n+  ustr2a = 4_\"XXXXXXX\"\n+  if (this_image() == num_images()) then\n+    ustr2a = ustr1a[1]\n+  end if\n+  sync all\n+  if (this_image() == num_images()) then\n+    if (ustr2a /= 4_\"abc    \") call abort()\n+  else\n+    if (ustr2a /= 4_\"XXXXXXX\") call abort()\n+  end if\n+\n+  ! SCALAR - kind 1 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str2a = 1_\"abcde\"\n+  str1a = 1_\"XXX\"\n+  if (this_image() == num_images()) then\n+    str1a = str2a[1]\n+  end if\n+  sync all\n+  if (this_image() == num_images()) then\n+    if (str1a /= 1_\"abc\") call abort()\n+  else\n+    if (str1a /= 1_\"XXX\") call abort()\n+  end if\n+\n+  ! SCALAR - kind 4 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr2a = 4_\"abcde\"\n+  ustr1a = 4_\"XXX\"\n+  if (this_image() == num_images()) then\n+    ustr1a = ustr2a[1]\n+  end if\n+  sync all\n+  if (this_image() == num_images()) then\n+    if (ustr1a /= 4_\"abc\") call abort()\n+  else\n+    if (ustr1a /= 4_\"XXX\") call abort()\n+  end if\n+\n+  ! - - - - - array = array\n+\n+  ! contiguous ARRAY - kind 1 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str1b(1) = 1_\"abc\"\n+  str1b(2) = 1_\"def\"\n+  str1b(3) = 1_\"gjh\"\n+  str2b(1) = 1_\"XXXXXXX\"\n+  str2b(2) = 1_\"YYYYYYY\"\n+  str2b(3) = 1_\"ZZZZZZZ\"\n+  if (this_image() == num_images()) then\n+    str2b = str1b(:)[1]\n+  end if\n+  sync all\n+  if (this_image() == num_images()) then\n+    if (str2b(1) /= 1_\"abc    \" .or. str2b(2) /= 1_\"def    \" &\n+        .or. str2b(3) /= 1_\"gjh    \") call abort()\n+  else\n+    if (str2b(1) /= 1_\"XXXXXXX\" .or. str2b(2) /= 1_\"YYYYYYY\" &\n+        .or. str2b(3) /= 1_\"ZZZZZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 4 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr1b(1) = 4_\"abc\"\n+  ustr1b(2) = 4_\"def\"\n+  ustr1b(3) = 4_\"gjh\"\n+  ustr2b(1) = 4_\"XXXXXXX\"\n+  ustr2b(2) = 4_\"YYYYYYY\"\n+  ustr2b(3) = 4_\"ZZZZZZZ\"\n+  if (this_image() == num_images()) then\n+    ustr2b = ustr1b(:)[1]\n+  end if\n+  sync all\n+  if (this_image() == num_images()) then\n+    if (ustr2b(1) /= 4_\"abc    \" .or. ustr2b(2) /= 4_\"def    \" &\n+        .or. ustr2b(3) /= 4_\"gjh    \") call abort()\n+  else\n+    if (ustr2b(1) /= 4_\"XXXXXXX\" .or. ustr2b(2) /= 4_\"YYYYYYY\" &\n+        .or. ustr2b(3) /= 4_\"ZZZZZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 1 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str2b(1) = 1_\"abcdefg\"\n+  str2b(2) = 1_\"hijklmn\"\n+  str2b(3) = 1_\"opqrstu\"\n+  str1b(1) = 1_\"XXX\"\n+  str1b(2) = 1_\"YYY\"\n+  str1b(3) = 1_\"ZZZ\"\n+  if (this_image() == num_images()) then\n+    str1b = str2b(:)[1]\n+  end if\n+  sync all\n+  if (this_image() == num_images()) then\n+    if (str1b(1) /= 1_\"abc\" .or. str1b(2) /= 1_\"hij\" &\n+        .or. str1b(3) /= 1_\"opq\") call abort()\n+  else\n+    if (str1b(1) /= 1_\"XXX\" .or. str1b(2) /= 1_\"YYY\" &\n+        .or. str1b(3) /= 1_\"ZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 4 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr2b(1) = 4_\"abcdefg\"\n+  ustr2b(2) = 4_\"hijklmn\"\n+  ustr2b(3) = 4_\"opqrstu\"\n+  ustr1b(1) = 4_\"XXX\"\n+  ustr1b(2) = 4_\"YYY\"\n+  ustr1b(3) = 4_\"ZZZ\"\n+  if (this_image() == num_images()) then\n+    ustr1b = ustr2b(:)[1]\n+  end if\n+  sync all\n+  if (this_image() == num_images()) then\n+    if (ustr1b(1) /= 4_\"abc\" .or. ustr1b(2) /= 4_\"hij\" &\n+        .or. ustr1b(3) /= 4_\"opq\") call abort()\n+  else\n+    if (ustr1b(1) /= 4_\"XXX\" .or. ustr1b(2) /= 4_\"YYY\" &\n+        .or. ustr1b(3) /= 4_\"ZZZ\") call abort()\n+  end if\n+\n+  ! - - - - - array = scalar\n+\n+  ! contiguous ARRAY - kind 1 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str1a = 1_\"abc\"\n+  str2b(1) = 1_\"XXXXXXX\"\n+  str2b(2) = 1_\"YYYYYYY\"\n+  str2b(3) = 1_\"ZZZZZZZ\"\n+  if (this_image() == num_images()) then\n+    str2b = str1a[1]\n+  end if\n+  sync all\n+  if (this_image() == num_images()) then\n+    if (str2b(1) /= 1_\"abc    \" .or. str2b(2) /= 1_\"abc    \" &\n+        .or. str2b(3) /= 1_\"abc    \") call abort()\n+  else\n+    if (str2b(1) /= 1_\"XXXXXXX\" .or. str2b(2) /= 1_\"YYYYYYY\" &\n+        .or. str2b(3) /= 1_\"ZZZZZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 4 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr1a = 4_\"abc\"\n+  ustr2b(1) = 4_\"XXXXXXX\"\n+  ustr2b(2) = 4_\"YYYYYYY\"\n+  ustr2b(3) = 4_\"ZZZZZZZ\"\n+  if (this_image() == num_images()) then\n+    ustr2b = ustr1a[1]\n+  end if\n+  sync all\n+  if (this_image() == num_images()) then\n+    if (ustr2b(1) /= 4_\"abc    \" .or. ustr2b(2) /= 4_\"abc    \" &\n+        .or. ustr2b(3) /= 4_\"abc    \") call abort()\n+  else\n+    if (ustr2b(1) /= 4_\"XXXXXXX\" .or. ustr2b(2) /= 4_\"YYYYYYY\" &\n+        .or. ustr2b(3) /= 4_\"ZZZZZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 1 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str2a = 1_\"abcdefg\"\n+  str1b(1) = 1_\"XXX\"\n+  str1b(2) = 1_\"YYY\"\n+  str1b(3) = 1_\"ZZZ\"\n+  if (this_image() == num_images()) then\n+    str1b = str2a[1]\n+  end if\n+  sync all\n+  if (this_image() == num_images()) then\n+    if (str1b(1) /= 1_\"abc\" .or. str1b(2) /= 1_\"abc\" &\n+        .or. str1b(3) /= 1_\"abc\") call abort()\n+  else\n+    if (str1b(1) /= 1_\"XXX\" .or. str1b(2) /= 1_\"YYY\" &\n+        .or. str1b(3) /= 1_\"ZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 4 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr2a = 4_\"abcdefg\"\n+  ustr1b(1) = 4_\"XXX\"\n+  ustr1b(2) = 4_\"YYY\"\n+  ustr1b(3) = 4_\"ZZZ\"\n+  if (this_image() == num_images()) then\n+    ustr1b = ustr2a[1]\n+  end if\n+  sync all\n+  if (this_image() == num_images()) then\n+    if (ustr1b(1) /= 4_\"abc\" .or. ustr1b(2) /= 4_\"abc\" &\n+        .or. ustr1b(3) /= 4_\"abc\") call abort()\n+  else\n+    if (ustr1b(1) /= 4_\"XXX\" .or. ustr1b(2) /= 4_\"YYY\" &\n+        .or. ustr1b(3) /= 4_\"ZZZ\") call abort()\n+  end if\n+\n+\n+  ! ---------- coindexed to coindexed variable -------------\n+\n+  ! - - - - - scalar = scalar\n+\n+  ! SCALAR - kind 1 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str1a = 1_\"abc\"\n+  str2a = 1_\"XXXXXXX\"\n+  if (this_image() == num_images()) then\n+    str2a[1] = str1a[mod(1, num_images())+1]\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (str2a /= 1_\"abc    \") call abort()\n+  else\n+    if (str2a /= 1_\"XXXXXXX\") call abort()\n+  end if\n+\n+  ! SCALAR - kind 4 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr1a = 4_\"abc\"\n+  ustr2a = 4_\"XXXXXXX\"\n+  if (this_image() == num_images()) then\n+    ustr2a[1] = ustr1a[mod(1, num_images())+1]\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (ustr2a /= 4_\"abc    \") call abort()\n+  else\n+    if (ustr2a /= 4_\"XXXXXXX\") call abort()\n+  end if\n+\n+  ! SCALAR - kind 1 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str2a = 1_\"abcde\"\n+  str1a = 1_\"XXX\"\n+  if (this_image() == num_images()) then\n+    str1a[1] = str2a[mod(1, num_images())+1]\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (str1a /= 1_\"abc\") call abort()\n+  else\n+    if (str1a /= 1_\"XXX\") call abort()\n+  end if\n+\n+  ! SCALAR - kind 4 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr2a = 4_\"abcde\"\n+  ustr1a = 4_\"XXX\"\n+  if (this_image() == num_images()) then\n+    ustr1a[1] = ustr2a[mod(1, num_images())+1]\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (ustr1a /= 4_\"abc\") call abort()\n+  else\n+    if (ustr1a /= 4_\"XXX\") call abort()\n+  end if\n+\n+  ! - - - - - array = array\n+\n+  ! contiguous ARRAY - kind 1 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str1b(1) = 1_\"abc\"\n+  str1b(2) = 1_\"def\"\n+  str1b(3) = 1_\"gjh\"\n+  str2b(1) = 1_\"XXXXXXX\"\n+  str2b(2) = 1_\"YYYYYYY\"\n+  str2b(3) = 1_\"ZZZZZZZ\"\n+  if (this_image() == num_images()) then\n+    str2b(:)[1] = str1b(:)[mod(1, num_images())+1]\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (str2b(1) /= 1_\"abc    \" .or. str2b(2) /= 1_\"def    \" &\n+        .or. str2b(3) /= 1_\"gjh    \") call abort()\n+  else\n+    if (str2b(1) /= 1_\"XXXXXXX\" .or. str2b(2) /= 1_\"YYYYYYY\" &\n+        .or. str2b(3) /= 1_\"ZZZZZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 4 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr1b(1) = 4_\"abc\"\n+  ustr1b(2) = 4_\"def\"\n+  ustr1b(3) = 4_\"gjh\"\n+  ustr2b(1) = 4_\"XXXXXXX\"\n+  ustr2b(2) = 4_\"YYYYYYY\"\n+  ustr2b(3) = 4_\"ZZZZZZZ\"\n+  if (this_image() == num_images()) then\n+    ustr2b(:)[1] = ustr1b(:)[mod(1, num_images())+1]\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (ustr2b(1) /= 4_\"abc    \" .or. ustr2b(2) /= 4_\"def    \" &\n+        .or. ustr2b(3) /= 4_\"gjh    \") call abort()\n+  else\n+    if (ustr2b(1) /= 4_\"XXXXXXX\" .or. ustr2b(2) /= 4_\"YYYYYYY\" &\n+        .or. ustr2b(3) /= 4_\"ZZZZZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 1 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str2b(1) = 1_\"abcdefg\"\n+  str2b(2) = 1_\"hijklmn\"\n+  str2b(3) = 1_\"opqrstu\"\n+  str1b(1) = 1_\"XXX\"\n+  str1b(2) = 1_\"YYY\"\n+  str1b(3) = 1_\"ZZZ\"\n+  if (this_image() == num_images()) then\n+    str1b(:)[1] = str2b(:)[mod(1, num_images())+1]\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (str1b(1) /= 1_\"abc\" .or. str1b(2) /= 1_\"hij\" &\n+        .or. str1b(3) /= 1_\"opq\") call abort()\n+  else\n+    if (str1b(1) /= 1_\"XXX\" .or. str1b(2) /= 1_\"YYY\" &\n+        .or. str1b(3) /= 1_\"ZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 4 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr2b(1) = 4_\"abcdefg\"\n+  ustr2b(2) = 4_\"hijklmn\"\n+  ustr2b(3) = 4_\"opqrstu\"\n+  ustr1b(1) = 4_\"XXX\"\n+  ustr1b(2) = 4_\"YYY\"\n+  ustr1b(3) = 4_\"ZZZ\"\n+  if (this_image() == num_images()) then\n+    ustr1b(:)[1] = ustr2b(:)[mod(1, num_images())+1]\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (ustr1b(1) /= 4_\"abc\" .or. ustr1b(2) /= 4_\"hij\" &\n+        .or. ustr1b(3) /= 4_\"opq\") call abort()\n+  else\n+    if (ustr1b(1) /= 4_\"XXX\" .or. ustr1b(2) /= 4_\"YYY\" &\n+        .or. ustr1b(3) /= 4_\"ZZZ\") call abort()\n+  end if\n+\n+  ! - - - - - array = scalar\n+\n+  ! contiguous ARRAY - kind 1 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str1a = 1_\"abc\"\n+  str2b(1) = 1_\"XXXXXXX\"\n+  str2b(2) = 1_\"YYYYYYY\"\n+  str2b(3) = 1_\"ZZZZZZZ\"\n+  if (this_image() == num_images()) then\n+    str2b(:)[1] = str1a[mod(1, num_images())+1]\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (str2b(1) /= 1_\"abc    \" .or. str2b(2) /= 1_\"abc    \" &\n+        .or. str2b(3) /= 1_\"abc    \") call abort()\n+  else\n+    if (str2b(1) /= 1_\"XXXXXXX\" .or. str2b(2) /= 1_\"YYYYYYY\" &\n+        .or. str2b(3) /= 1_\"ZZZZZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 4 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr1a = 4_\"abc\"\n+  ustr2b(1) = 4_\"XXXXXXX\"\n+  ustr2b(2) = 4_\"YYYYYYY\"\n+  ustr2b(3) = 4_\"ZZZZZZZ\"\n+  if (this_image() == num_images()) then\n+    ustr2b(:)[1] = ustr1a[mod(1, num_images())+1]\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (ustr2b(1) /= 4_\"abc    \" .or. ustr2b(2) /= 4_\"abc    \" &\n+        .or. ustr2b(3) /= 4_\"abc    \") call abort()\n+  else\n+    if (ustr2b(1) /= 4_\"XXXXXXX\" .or. ustr2b(2) /= 4_\"YYYYYYY\" &\n+        .or. ustr2b(3) /= 4_\"ZZZZZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 1 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str2a = 1_\"abcdefg\"\n+  str1b(1) = 1_\"XXX\"\n+  str1b(2) = 1_\"YYY\"\n+  str1b(3) = 1_\"ZZZ\"\n+  if (this_image() == num_images()) then\n+    str1b(:)[1] = str2a[mod(1, num_images())+1]\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (str1b(1) /= 1_\"abc\" .or. str1b(2) /= 1_\"abc\" &\n+        .or. str1b(3) /= 1_\"abc\") call abort()\n+  else\n+    if (str1b(1) /= 1_\"XXX\" .or. str1b(2) /= 1_\"YYY\" &\n+        .or. str1b(3) /= 1_\"ZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 4 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr2a = 4_\"abcdefg\"\n+  ustr1b(1) = 4_\"XXX\"\n+  ustr1b(2) = 4_\"YYY\"\n+  ustr1b(3) = 4_\"ZZZ\"\n+  if (this_image() == num_images()) then\n+    ustr1b(:)[1] = ustr2a[mod(1, num_images())+1]\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (ustr1b(1) /= 4_\"abc\" .or. ustr1b(2) /= 4_\"abc\" &\n+        .or. ustr1b(3) /= 4_\"abc\") call abort()\n+  else\n+    if (ustr1b(1) /= 4_\"XXX\" .or. ustr1b(2) /= 4_\"YYY\" &\n+        .or. ustr1b(3) /= 4_\"ZZZ\") call abort()\n+  end if\n+\n+  ! ============== char1 <-> char4 =====================\n+\n+  ! ---------- Assign to coindexed variable -------------\n+\n+  ! - - - - - scalar = scalar\n+\n+  ! SCALAR - kind 1 <- 4 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr1a = 4_\"abc\"\n+  str1a = 1_\"XXXXXXX\"\n+  if (this_image() == num_images()) then\n+    str2a[1] = ustr1a\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (str2a /= 1_\"abc    \") call abort()\n+  else\n+    if (str2a /= 1_\"XXXXXXX\") call abort()\n+  end if\n+\n+  ! SCALAR - kind 4 <- 1 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str1a = 4_\"abc\"\n+  ustr2a = 1_\"XXXXXXX\"\n+  if (this_image() == num_images()) then\n+    ustr2a[1] = str1a\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (ustr2a /= 4_\"abc    \") call abort()\n+  else\n+    if (ustr2a /= 4_\"XXXXXXX\") call abort()\n+  end if\n+\n+  ! SCALAR - kind 1 <- 4 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr2a = 4_\"abcde\"\n+  str1a = 1_\"XXX\"\n+  if (this_image() == num_images()) then\n+    str1a[1] = ustr2a\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (str1a /= 1_\"abc\") call abort()\n+  else\n+    if (str1a /= 1_\"XXX\") call abort()\n+  end if\n+\n+  ! SCALAR - kind 4 <- 1 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str2a = 4_\"abcde\"\n+  ustr1a = 1_\"XXX\"\n+  if (this_image() == num_images()) then\n+    ustr1a[1] = str2a\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (ustr1a /= 4_\"abc\") call abort()\n+  else\n+    if (ustr1a /= 4_\"XXX\") call abort()\n+  end if\n+\n+  ! - - - - - array = array\n+\n+  ! contiguous ARRAY - kind 1 <- 4 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr1b(1) = 4_\"abc\"\n+  ustr1b(2) = 4_\"def\"\n+  ustr1b(3) = 4_\"gjh\"\n+  str2b(1) = 1_\"XXXXXXX\"\n+  str2b(2) = 1_\"YYYYYYY\"\n+  str2b(3) = 1_\"ZZZZZZZ\"\n+  if (this_image() == num_images()) then\n+    str2b(:)[1] = ustr1b\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (str2b(1) /= 1_\"abc    \" .or. str2b(2) /= 1_\"def    \" &\n+        .or. str2b(3) /= 1_\"gjh    \") call abort()\n+  else\n+    if (str2b(1) /= 1_\"XXXXXXX\" .or. str2b(2) /= 1_\"YYYYYYY\" &\n+        .or. str2b(3) /= 1_\"ZZZZZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 4 <- 1 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str1b(1) = 1_\"abc\"\n+  str1b(2) = 1_\"def\"\n+  str1b(3) = 1_\"gjh\"\n+  ustr2b(1) = 4_\"XXXXXXX\"\n+  ustr2b(2) = 4_\"YYYYYYY\"\n+  ustr2b(3) = 4_\"ZZZZZZZ\"\n+  if (this_image() == num_images()) then\n+    ustr2b(:)[1] = str1b\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (ustr2b(1) /= 4_\"abc    \" .or. ustr2b(2) /= 4_\"def    \" &\n+        .or. ustr2b(3) /= 4_\"gjh    \") call abort()\n+  else\n+    if (ustr2b(1) /= 4_\"XXXXXXX\" .or. ustr2b(2) /= 4_\"YYYYYYY\" &\n+        .or. ustr2b(3) /= 4_\"ZZZZZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 1 <- 4 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr2b(1) = 4_\"abcdefg\"\n+  ustr2b(2) = 4_\"hijklmn\"\n+  ustr2b(3) = 4_\"opqrstu\"\n+  str1b(1) = 1_\"XXX\"\n+  str1b(2) = 1_\"YYY\"\n+  str1b(3) = 1_\"ZZZ\"\n+  if (this_image() == num_images()) then\n+    str1b(:)[1] = ustr2b\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (str1b(1) /= 1_\"abc\" .or. str1b(2) /= 1_\"hij\" &\n+        .or. str1b(3) /= 1_\"opq\") call abort()\n+  else\n+    if (str1b(1) /= 1_\"XXX\" .or. str1b(2) /= 1_\"YYY\" &\n+        .or. str1b(3) /= 1_\"ZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 4 <- 1 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str2b(1) = 1_\"abcdefg\"\n+  str2b(2) = 1_\"hijklmn\"\n+  str2b(3) = 1_\"opqrstu\"\n+  ustr1b(1) = 4_\"XXX\"\n+  ustr1b(2) = 4_\"YYY\"\n+  ustr1b(3) = 4_\"ZZZ\"\n+  if (this_image() == num_images()) then\n+    ustr1b(:)[1] = str2b\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (ustr1b(1) /= 4_\"abc\" .or. ustr1b(2) /= 4_\"hij\" &\n+        .or. ustr1b(3) /= 4_\"opq\") call abort()\n+  else\n+    if (ustr1b(1) /= 4_\"XXX\" .or. ustr1b(2) /= 4_\"YYY\" &\n+        .or. ustr1b(3) /= 4_\"ZZZ\") call abort()\n+  end if\n+\n+  ! - - - - - array = scalar\n+\n+  ! contiguous ARRAY - kind 1 <- 4 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr1a = 4_\"abc\"\n+  str2b(1) = 1_\"XXXXXXX\"\n+  str2b(2) = 1_\"YYYYYYY\"\n+  str2b(3) = 1_\"ZZZZZZZ\"\n+  if (this_image() == num_images()) then\n+    str2b(:)[1] = ustr1a\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (str2b(1) /= 1_\"abc    \" .or. str2b(2) /= 1_\"abc    \" &\n+        .or. str2b(3) /= 1_\"abc    \") call abort()\n+  else\n+    if (str2b(1) /= 1_\"XXXXXXX\" .or. str2b(2) /= 1_\"YYYYYYY\" &\n+        .or. str2b(3) /= 1_\"ZZZZZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 4 <- 1 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str1a = 1_\"abc\"\n+  ustr2b(1) = 4_\"XXXXXXX\"\n+  ustr2b(2) = 4_\"YYYYYYY\"\n+  ustr2b(3) = 4_\"ZZZZZZZ\"\n+  if (this_image() == num_images()) then\n+    ustr2b(:)[1] = str1a\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (ustr2b(1) /= 4_\"abc    \" .or. ustr2b(2) /= 4_\"abc    \" &\n+        .or. ustr2b(3) /= 4_\"abc    \") call abort()\n+  else\n+    if (ustr2b(1) /= 4_\"XXXXXXX\" .or. ustr2b(2) /= 4_\"YYYYYYY\" &\n+        .or. ustr2b(3) /= 4_\"ZZZZZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 1 <- 4 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr2a = 4_\"abcdefg\"\n+  str1b(1) = 1_\"XXX\"\n+  str1b(2) = 1_\"YYY\"\n+  str1b(3) = 1_\"ZZZ\"\n+  if (this_image() == num_images()) then\n+    str1b(:)[1] = ustr2a\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (str1b(1) /= 1_\"abc\" .or. str1b(2) /= 1_\"abc\" &\n+        .or. str1b(3) /= 1_\"abc\") call abort()\n+  else\n+    if (str1b(1) /= 1_\"XXX\" .or. str1b(2) /= 1_\"YYY\" &\n+        .or. str1b(3) /= 1_\"ZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 4 <- 1 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str2a = 1_\"abcdefg\"\n+  ustr1b(1) = 4_\"XXX\"\n+  ustr1b(2) = 4_\"YYY\"\n+  ustr1b(3) = 4_\"ZZZ\"\n+  if (this_image() == num_images()) then\n+    ustr1b(:)[1] = str2a\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (ustr1b(1) /= 4_\"abc\" .or. ustr1b(2) /= 4_\"abc\" &\n+        .or. ustr1b(3) /= 4_\"abc\") call abort()\n+  else\n+    if (ustr1b(1) /= 4_\"XXX\" .or. ustr1b(2) /= 4_\"YYY\" &\n+        .or. ustr1b(3) /= 4_\"ZZZ\") call abort()\n+  end if\n+\n+  ! ---------- Take from a coindexed variable -------------\n+\n+  ! - - - - - scalar = scalar\n+\n+  ! SCALAR - kind 1 <- 4 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr1a = 4_\"abc\"\n+  str2a = 1_\"XXXXXXX\"\n+  if (this_image() == num_images()) then\n+    str2a = ustr1a[1]\n+  end if\n+  sync all\n+  if (this_image() == num_images()) then\n+    if (str2a /= 1_\"abc    \") call abort()\n+  else\n+    if (str2a /= 1_\"XXXXXXX\") call abort()\n+  end if\n+\n+  ! SCALAR - kind 4 <- 1 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str1a = 1_\"abc\"\n+  ustr2a = 4_\"XXXXXXX\"\n+  if (this_image() == num_images()) then\n+    ustr2a = str1a[1]\n+  end if\n+  sync all\n+  if (this_image() == num_images()) then\n+    if (ustr2a /= 4_\"abc    \") call abort()\n+  else\n+    if (ustr2a /= 4_\"XXXXXXX\") call abort()\n+  end if\n+\n+  ! SCALAR - kind 1 <- 4 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr2a = 4_\"abcde\"\n+  str1a = 1_\"XXX\"\n+  if (this_image() == num_images()) then\n+    str1a = ustr2a[1]\n+  end if\n+  sync all\n+  if (this_image() == num_images()) then\n+    if (str1a /= 1_\"abc\") call abort()\n+  else\n+    if (str1a /= 1_\"XXX\") call abort()\n+  end if\n+\n+  ! SCALAR - kind 4 <- 1 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str2a = 1_\"abcde\"\n+  ustr1a = 4_\"XXX\"\n+  if (this_image() == num_images()) then\n+    ustr1a = str2a[1]\n+  end if\n+  sync all\n+  if (this_image() == num_images()) then\n+    if (ustr1a /= 4_\"abc\") call abort()\n+  else\n+    if (ustr1a /= 4_\"XXX\") call abort()\n+  end if\n+\n+  ! - - - - - array = array\n+\n+  ! contiguous ARRAY - kind 1 <- 4 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr1b(1) = 4_\"abc\"\n+  ustr1b(2) = 4_\"def\"\n+  ustr1b(3) = 4_\"gjh\"\n+  str2b(1) = 1_\"XXXXXXX\"\n+  str2b(2) = 1_\"YYYYYYY\"\n+  str2b(3) = 1_\"ZZZZZZZ\"\n+  if (this_image() == num_images()) then\n+    str2b = ustr1b(:)[1]\n+  end if\n+  sync all\n+  if (this_image() == num_images()) then\n+    if (str2b(1) /= 1_\"abc    \" .or. str2b(2) /= 1_\"def    \" &\n+        .or. str2b(3) /= 1_\"gjh    \") call abort()\n+  else\n+    if (str2b(1) /= 1_\"XXXXXXX\" .or. str2b(2) /= 1_\"YYYYYYY\" &\n+        .or. str2b(3) /= 1_\"ZZZZZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 4 <- 1 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str1b(1) = 1_\"abc\"\n+  str1b(2) = 1_\"def\"\n+  str1b(3) = 1_\"gjh\"\n+  ustr2b(1) = 4_\"XXXXXXX\"\n+  ustr2b(2) = 4_\"YYYYYYY\"\n+  ustr2b(3) = 4_\"ZZZZZZZ\"\n+  if (this_image() == num_images()) then\n+    ustr2b = str1b(:)[1]\n+  end if\n+  sync all\n+  if (this_image() == num_images()) then\n+    if (ustr2b(1) /= 4_\"abc    \" .or. ustr2b(2) /= 4_\"def    \" &\n+        .or. ustr2b(3) /= 4_\"gjh    \") call abort()\n+  else\n+    if (ustr2b(1) /= 4_\"XXXXXXX\" .or. ustr2b(2) /= 4_\"YYYYYYY\" &\n+        .or. ustr2b(3) /= 4_\"ZZZZZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 1 <- 4 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr2b(1) = 4_\"abcdefg\"\n+  ustr2b(2) = 4_\"hijklmn\"\n+  ustr2b(3) = 4_\"opqrstu\"\n+  str1b(1) = 1_\"XXX\"\n+  str1b(2) = 1_\"YYY\"\n+  str1b(3) = 1_\"ZZZ\"\n+  if (this_image() == num_images()) then\n+    str1b = ustr2b(:)[1]\n+  end if\n+  sync all\n+  if (this_image() == num_images()) then\n+    if (str1b(1) /= 1_\"abc\" .or. str1b(2) /= 1_\"hij\" &\n+        .or. str1b(3) /= 1_\"opq\") call abort()\n+  else\n+    if (str1b(1) /= 1_\"XXX\" .or. str1b(2) /= 1_\"YYY\" &\n+        .or. str1b(3) /= 1_\"ZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 4 <- 1 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str2b(1) = 1_\"abcdefg\"\n+  str2b(2) = 1_\"hijklmn\"\n+  str2b(3) = 1_\"opqrstu\"\n+  ustr1b(1) = 4_\"XXX\"\n+  ustr1b(2) = 4_\"YYY\"\n+  ustr1b(3) = 4_\"ZZZ\"\n+  if (this_image() == num_images()) then\n+    ustr1b = str2b(:)[1]\n+  end if\n+  sync all\n+  if (this_image() == num_images()) then\n+    if (ustr1b(1) /= 4_\"abc\" .or. ustr1b(2) /= 4_\"hij\" &\n+        .or. ustr1b(3) /= 4_\"opq\") call abort()\n+  else\n+    if (ustr1b(1) /= 4_\"XXX\" .or. ustr1b(2) /= 4_\"YYY\" &\n+        .or. ustr1b(3) /= 4_\"ZZZ\") call abort()\n+  end if\n+\n+  ! - - - - - array = scalar\n+\n+  ! contiguous ARRAY - kind 1 <- 4 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr1a = 4_\"abc\"\n+  str2b(1) = 1_\"XXXXXXX\"\n+  str2b(2) = 1_\"YYYYYYY\"\n+  str2b(3) = 1_\"ZZZZZZZ\"\n+  if (this_image() == num_images()) then\n+    str2b = ustr1a[1]\n+  end if\n+  sync all\n+  if (this_image() == num_images()) then\n+    if (str2b(1) /= 1_\"abc    \" .or. str2b(2) /= 1_\"abc    \" &\n+        .or. str2b(3) /= 1_\"abc    \") call abort()\n+  else\n+    if (str2b(1) /= 1_\"XXXXXXX\" .or. str2b(2) /= 1_\"YYYYYYY\" &\n+        .or. str2b(3) /= 1_\"ZZZZZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 4 <- 1 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str1a = 1_\"abc\"\n+  ustr2b(1) = 4_\"XXXXXXX\"\n+  ustr2b(2) = 4_\"YYYYYYY\"\n+  ustr2b(3) = 4_\"ZZZZZZZ\"\n+  if (this_image() == num_images()) then\n+    ustr2b = str1a[1]\n+  end if\n+  sync all\n+  if (this_image() == num_images()) then\n+    if (ustr2b(1) /= 4_\"abc    \" .or. ustr2b(2) /= 4_\"abc    \" &\n+        .or. ustr2b(3) /= 4_\"abc    \") call abort()\n+  else\n+    if (ustr2b(1) /= 4_\"XXXXXXX\" .or. ustr2b(2) /= 4_\"YYYYYYY\" &\n+        .or. ustr2b(3) /= 4_\"ZZZZZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 1 <- 4 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr2a = 4_\"abcdefg\"\n+  str1b(1) = 1_\"XXX\"\n+  str1b(2) = 1_\"YYY\"\n+  str1b(3) = 1_\"ZZZ\"\n+  if (this_image() == num_images()) then\n+    str1b = ustr2a[1]\n+  end if\n+  sync all\n+  if (this_image() == num_images()) then\n+    if (str1b(1) /= 1_\"abc\" .or. str1b(2) /= 1_\"abc\" &\n+        .or. str1b(3) /= 1_\"abc\") call abort()\n+  else\n+    if (str1b(1) /= 1_\"XXX\" .or. str1b(2) /= 1_\"YYY\" &\n+        .or. str1b(3) /= 1_\"ZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 4 <- 1 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str2a = 1_\"abcdefg\"\n+  ustr1b(1) = 4_\"XXX\"\n+  ustr1b(2) = 4_\"YYY\"\n+  ustr1b(3) = 4_\"ZZZ\"\n+  if (this_image() == num_images()) then\n+    ustr1b = str2a[1]\n+  end if\n+  sync all\n+  if (this_image() == num_images()) then\n+    if (ustr1b(1) /= 4_\"abc\" .or. ustr1b(2) /= 4_\"abc\" &\n+        .or. ustr1b(3) /= 4_\"abc\") call abort()\n+  else\n+    if (ustr1b(1) /= 4_\"XXX\" .or. ustr1b(2) /= 4_\"YYY\" &\n+        .or. ustr1b(3) /= 4_\"ZZZ\") call abort()\n+  end if\n+\n+\n+  ! ---------- coindexed to coindexed variable -------------\n+\n+  ! - - - - - scalar = scalar\n+\n+  ! SCALAR - kind 1 <- 4 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr1a = 4_\"abc\"\n+  str2a = 1_\"XXXXXXX\"\n+  if (this_image() == num_images()) then\n+    str2a[1] = ustr1a[mod(1, num_images())+1]\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (str2a /= 1_\"abc    \") call abort()\n+  else\n+    if (str2a /= 1_\"XXXXXXX\") call abort()\n+  end if\n+\n+  ! SCALAR - kind 4 <- 1 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str1a = 1_\"abc\"\n+  ustr2a = 4_\"XXXXXXX\"\n+  if (this_image() == num_images()) then\n+    ustr2a[1] = str1a[mod(1, num_images())+1]\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (ustr2a /= 4_\"abc    \") call abort()\n+  else\n+    if (ustr2a /= 4_\"XXXXXXX\") call abort()\n+  end if\n+\n+  ! SCALAR - kind 1 <- 4 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr2a = 4_\"abcde\"\n+  str1a = 1_\"XXX\"\n+  if (this_image() == num_images()) then\n+    str1a[1] = ustr2a[mod(1, num_images())+1]\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (str1a /= 1_\"abc\") call abort()\n+  else\n+    if (str1a /= 1_\"XXX\") call abort()\n+  end if\n+\n+  ! SCALAR - kind 4 <- 1 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str2a = 1_\"abcde\"\n+  ustr1a = 4_\"XXX\"\n+  if (this_image() == num_images()) then\n+    ustr1a[1] = str2a[mod(1, num_images())+1]\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (ustr1a /= 4_\"abc\") call abort()\n+  else\n+    if (ustr1a /= 4_\"XXX\") call abort()\n+  end if\n+\n+  ! - - - - - array = array\n+\n+  ! contiguous ARRAY - kind 1 <- 4 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr1b(1) = 4_\"abc\"\n+  ustr1b(2) = 4_\"def\"\n+  ustr1b(3) = 4_\"gjh\"\n+  str2b(1) = 1_\"XXXXXXX\"\n+  str2b(2) = 1_\"YYYYYYY\"\n+  str2b(3) = 1_\"ZZZZZZZ\"\n+  if (this_image() == num_images()) then\n+    str2b(:)[1] = ustr1b(:)[mod(1, num_images())+1]\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (str2b(1) /= 1_\"abc    \" .or. str2b(2) /= 1_\"def    \" &\n+        .or. str2b(3) /= 1_\"gjh    \") call abort()\n+  else\n+    if (str2b(1) /= 1_\"XXXXXXX\" .or. str2b(2) /= 1_\"YYYYYYY\" &\n+        .or. str2b(3) /= 1_\"ZZZZZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 4 <- 1 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str1b(1) = 1_\"abc\"\n+  str1b(2) = 1_\"def\"\n+  str1b(3) = 1_\"gjh\"\n+  ustr2b(1) = 4_\"XXXXXXX\"\n+  ustr2b(2) = 4_\"YYYYYYY\"\n+  ustr2b(3) = 4_\"ZZZZZZZ\"\n+  if (this_image() == num_images()) then\n+    ustr2b(:)[1] = str1b(:)[mod(1, num_images())+1]\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (ustr2b(1) /= 4_\"abc    \" .or. ustr2b(2) /= 4_\"def    \" &\n+        .or. ustr2b(3) /= 4_\"gjh    \") call abort()\n+  else\n+    if (ustr2b(1) /= 4_\"XXXXXXX\" .or. ustr2b(2) /= 4_\"YYYYYYY\" &\n+        .or. ustr2b(3) /= 4_\"ZZZZZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 1 <- 4 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr2b(1) = 4_\"abcdefg\"\n+  ustr2b(2) = 4_\"hijklmn\"\n+  ustr2b(3) = 4_\"opqrstu\"\n+  str1b(1) = 1_\"XXX\"\n+  str1b(2) = 1_\"YYY\"\n+  str1b(3) = 1_\"ZZZ\"\n+  if (this_image() == num_images()) then\n+    str1b(:)[1] = ustr2b(:)[mod(1, num_images())+1]\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (str1b(1) /= 1_\"abc\" .or. str1b(2) /= 1_\"hij\" &\n+        .or. str1b(3) /= 1_\"opq\") call abort()\n+  else\n+    if (str1b(1) /= 1_\"XXX\" .or. str1b(2) /= 1_\"YYY\" &\n+        .or. str1b(3) /= 1_\"ZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 4 <- 1 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str2b(1) = 1_\"abcdefg\"\n+  str2b(2) = 1_\"hijklmn\"\n+  str2b(3) = 1_\"opqrstu\"\n+  ustr1b(1) = 4_\"XXX\"\n+  ustr1b(2) = 4_\"YYY\"\n+  ustr1b(3) = 4_\"ZZZ\"\n+  if (this_image() == num_images()) then\n+    ustr1b(:)[1] = str2b(:)[mod(1, num_images())+1]\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (ustr1b(1) /= 4_\"abc\" .or. ustr1b(2) /= 4_\"hij\" &\n+        .or. ustr1b(3) /= 4_\"opq\") call abort()\n+  else\n+    if (ustr1b(1) /= 4_\"XXX\" .or. ustr1b(2) /= 4_\"YYY\" &\n+        .or. ustr1b(3) /= 4_\"ZZZ\") call abort()\n+  end if\n+\n+  ! - - - - - array = scalar\n+\n+  ! contiguous ARRAY - kind 1 <- 4 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr1a = 4_\"abc\"\n+  str2b(1) = 1_\"XXXXXXX\"\n+  str2b(2) = 1_\"YYYYYYY\"\n+  str2b(3) = 1_\"ZZZZZZZ\"\n+  if (this_image() == num_images()) then\n+    str2b(:)[1] = ustr1a[mod(1, num_images())+1]\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (str2b(1) /= 1_\"abc    \" .or. str2b(2) /= 1_\"abc    \" &\n+        .or. str2b(3) /= 1_\"abc    \") call abort()\n+  else\n+    if (str2b(1) /= 1_\"XXXXXXX\" .or. str2b(2) /= 1_\"YYYYYYY\" &\n+        .or. str2b(3) /= 1_\"ZZZZZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 4 <- 1 - with padding\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str1a = 1_\"abc\"\n+  ustr2b(1) = 4_\"XXXXXXX\"\n+  ustr2b(2) = 4_\"YYYYYYY\"\n+  ustr2b(3) = 4_\"ZZZZZZZ\"\n+  if (this_image() == num_images()) then\n+    ustr2b(:)[1] = str1a[mod(1, num_images())+1]\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (ustr2b(1) /= 4_\"abc    \" .or. ustr2b(2) /= 4_\"abc    \" &\n+        .or. ustr2b(3) /= 4_\"abc    \") call abort()\n+  else\n+    if (ustr2b(1) /= 4_\"XXXXXXX\" .or. ustr2b(2) /= 4_\"YYYYYYY\" &\n+        .or. ustr2b(3) /= 4_\"ZZZZZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 1 <- 4 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  ustr2a = 4_\"abcdefg\"\n+  str1b(1) = 1_\"XXX\"\n+  str1b(2) = 1_\"YYY\"\n+  str1b(3) = 1_\"ZZZ\"\n+  if (this_image() == num_images()) then\n+    str1b(:)[1] = ustr2a[mod(1, num_images())+1]\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (str1b(1) /= 1_\"abc\" .or. str1b(2) /= 1_\"abc\" &\n+        .or. str1b(3) /= 1_\"abc\") call abort()\n+  else\n+    if (str1b(1) /= 1_\"XXX\" .or. str1b(2) /= 1_\"YYY\" &\n+        .or. str1b(3) /= 1_\"ZZZ\") call abort()\n+  end if\n+\n+  ! contiguous ARRAY - kind 4 <- 1 - with trimming\n+  str1a = 1_\"zzz\"; str1b = 1_\"zzz\"; ustr1a = 4_\"zzz\"; ustr1b = 4_\"zzz\"\n+  str2a = 1_\"zzzzzzzz\"; str2b = 1_\"zzzzzzzz\"\n+  ustr2a = 4_\"zzzzzzzz\"; ustr2b = 4_\"zzzzzzzz\"\n+  str2a = 1_\"abcdefg\"\n+  ustr1b(1) = 4_\"XXX\"\n+  ustr1b(2) = 4_\"YYY\"\n+  ustr1b(3) = 4_\"ZZZ\"\n+  if (this_image() == num_images()) then\n+    ustr1b(:)[1] = str2a[mod(1, num_images())+1]\n+  end if\n+  sync all\n+  if (this_image() == 1) then\n+    if (ustr1b(1) /= 4_\"abc\" .or. ustr1b(2) /= 4_\"abc\" &\n+        .or. ustr1b(3) /= 4_\"abc\") call abort()\n+  else\n+    if (ustr1b(1) /= 4_\"XXX\" .or. ustr1b(2) /= 4_\"YYY\" &\n+        .or. ustr1b(3) /= 4_\"ZZZ\") call abort()\n+  end if\n+\n+end subroutine char_test\n+end program test"}, {"sha": "7ae6d5ff22d0cad220427555e6e1ce7a4e35da29", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c75088c80c2f661d435731dec5c3bc95376b9da/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c75088c80c2f661d435731dec5c3bc95376b9da/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=5c75088c80c2f661d435731dec5c3bc95376b9da", "patch": "@@ -1,3 +1,9 @@\n+2014-06-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* caf/single.c (assign_char4_from_char1, assign_char1_from_char4,\n+\tconvert_type): New static functions.\n+\t(_gfortran_caf_get, _gfortran_caf_send): Use them.\n+\n 2014-06-19  Tobias Burnus  <burnus@net-b.de>\n \n \t* caf/single.c (_gfortran_caf_co_sum, _gfortran_caf_co_max,"}, {"sha": "d053c50312985a56de057a8bf3c5718a7fc14a49", "filename": "libgfortran/caf/single.c", "status": "modified", "additions": 383, "deletions": 75, "changes": 458, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c75088c80c2f661d435731dec5c3bc95376b9da/libgfortran%2Fcaf%2Fsingle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c75088c80c2f661d435731dec5c3bc95376b9da/libgfortran%2Fcaf%2Fsingle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fcaf%2Fsingle.c?ref=5c75088c80c2f661d435731dec5c3bc95376b9da", "patch": "@@ -236,16 +236,300 @@ _gfortran_caf_co_max (gfc_descriptor_t *a __attribute__ ((unused)),\n     *stat = 0;\n }\n \n+\n+static void\n+assign_char4_from_char1 (size_t dst_size, size_t src_size, uint32_t *dst,\n+\t\t\t unsigned char *src)\n+{\n+  size_t i, n;\n+  n = dst_size/4 > src_size ? src_size : dst_size/4;\n+  for (i = 0; i < n; ++i)\n+    dst[i] = (int32_t) src[i];\n+  for (; i < dst_size/4; ++i)\n+    dst[i] = (int32_t) ' ';\n+}\n+\n+\n+static void\n+assign_char1_from_char4 (size_t dst_size, size_t src_size, unsigned char *dst,\n+\t\t\t uint32_t *src)\n+{\n+  size_t i, n;\n+  n = dst_size > src_size/4 ? src_size/4 : dst_size;\n+  for (i = 0; i < n; ++i)\n+    dst[i] = src[i] > UINT8_MAX ? (unsigned char) '?' : (unsigned char) src[i];\n+  if (dst_size > n)\n+    memset(&dst[n], ' ', dst_size - n);\n+}\n+\n+\n+static void\n+convert_type (void *dst, int dst_type, int dst_kind, void *src, int src_type,\n+\t      int src_kind)\n+{\n+#ifdef HAVE_GFC_INTEGER_16\n+  typedef __int128 int128t;\n+#else\n+  typedef int64_t int128t;\n+#endif\n+\n+#if defined(GFC_REAL_16_IS_LONG_DOUBLE)\n+  typedef long double real128t;\n+  typedef _Complex long double complex128t;\n+#elif defined(HAVE_GFC_REAL_16)\n+  typedef _Complex float __attribute__((mode(TC))) __complex128;\n+  typedef __float128 real128t;\n+  typedef __complex128 complex128t;\n+#elif defined(HAVE_GFC_REAL_10)\n+  typedef long double real128t;\n+  typedef long double complex128t;\n+#else\n+  typedef double real128t;\n+  typedef _Complex double complex128t;\n+#endif\n+\n+  int128t int_val = 0;\n+  real128t real_val = 0;\n+  complex128t cmpx_val = 0;\n+\n+  switch (src_type)\n+    {\n+    case BT_INTEGER:\n+      if (src_kind == 1)\n+\tint_val = *(int8_t*) src;\n+      else if (src_kind == 2)\n+\tint_val = *(int16_t*) src;\n+      else if (src_kind == 4)\n+\tint_val = *(int32_t*) src;\n+      else if (src_kind == 8)\n+\tint_val = *(int64_t*) src;\n+#ifdef HAVE_GFC_INTEGER_16\n+      else if (src_kind == 16)\n+\tint_val = *(int128t*) src;\n+#endif\n+      else\n+\tgoto error;\n+      break;\n+    case BT_REAL:\n+      if (src_kind == 4)\n+\treal_val = *(float*) src;\n+      else if (src_kind == 8)\n+\treal_val = *(double*) src;\n+#ifdef HAVE_GFC_REAL_10\n+      else if (src_kind == 10)\n+\treal_val = *(long double*) src;\n+#endif\n+#ifdef HAVE_GFC_REAL_16\n+      else if (src_kind == 16)\n+\treal_val = *(real128t*) src;\n+#endif\n+      else\n+\tgoto error;\n+      break;\n+    case BT_COMPLEX:\n+      if (src_kind == 4)\n+\tcmpx_val = *(_Complex float*) src;\n+      else if (src_kind == 8)\n+\tcmpx_val = *(_Complex double*) src;\n+#ifdef HAVE_GFC_REAL_10\n+      else if (src_kind == 10)\n+\tcmpx_val = *(_Complex long double*) src;\n+#endif\n+#ifdef HAVE_GFC_REAL_16\n+      else if (src_kind == 16)\n+\tcmpx_val = *(complex128t*) src;\n+#endif\n+      else\n+\tgoto error;\n+      break;\n+    default:\n+      goto error;\n+    }\n+\n+  switch (dst_type)\n+    {\n+    case BT_INTEGER:\n+      if (src_type == BT_INTEGER)\n+\t{\n+\t  if (dst_kind == 1)\n+\t    *(int8_t*) dst = (int8_t) int_val;\n+\t  else if (dst_kind == 2)\n+\t    *(int16_t*) dst = (int16_t) int_val;\n+\t  else if (dst_kind == 4)\n+\t    *(int32_t*) dst = (int32_t) int_val;\n+\t  else if (dst_kind == 8)\n+\t    *(int64_t*) dst = (int64_t) int_val;\n+#ifdef HAVE_GFC_INTEGER_16\n+\t  else if (dst_kind == 16)\n+\t    *(int128t*) dst = (int128t) int_val;\n+#endif\n+\t  else\n+\t    goto error;\n+\t}\n+      else if (src_type == BT_REAL)\n+\t{\n+\t  if (dst_kind == 1)\n+\t    *(int8_t*) dst = (int8_t) real_val;\n+\t  else if (dst_kind == 2)\n+\t    *(int16_t*) dst = (int16_t) real_val;\n+\t  else if (dst_kind == 4)\n+\t    *(int32_t*) dst = (int32_t) real_val;\n+\t  else if (dst_kind == 8)\n+\t    *(int64_t*) dst = (int64_t) real_val;\n+#ifdef HAVE_GFC_INTEGER_16\n+\t  else if (dst_kind == 16)\n+\t    *(int128t*) dst = (int128t) real_val;\n+#endif\n+\t  else\n+\t    goto error;\n+\t}\n+      else if (src_type == BT_COMPLEX)\n+\t{\n+\t  if (dst_kind == 1)\n+\t    *(int8_t*) dst = (int8_t) cmpx_val;\n+\t  else if (dst_kind == 2)\n+\t    *(int16_t*) dst = (int16_t) cmpx_val;\n+\t  else if (dst_kind == 4)\n+\t    *(int32_t*) dst = (int32_t) cmpx_val;\n+\t  else if (dst_kind == 8)\n+\t    *(int64_t*) dst = (int64_t) cmpx_val;\n+#ifdef HAVE_GFC_INTEGER_16\n+\t  else if (dst_kind == 16)\n+\t    *(int128t*) dst = (int128t) cmpx_val;\n+#endif\n+\t  else\n+\t    goto error;\n+\t}\n+      else\n+\tgoto error;\n+      break;\n+    case BT_REAL:\n+      if (src_type == BT_INTEGER)\n+\t{\n+\t  if (dst_kind == 4)\n+\t    *(float*) dst = (float) int_val;\n+\t  else if (dst_kind == 8)\n+\t    *(double*) dst = (double) int_val;\n+#ifdef HAVE_GFC_REAL_10\n+\t  else if (dst_kind == 10)\n+\t    *(long double*) dst = (long double) int_val;\n+#endif\n+#ifdef HAVE_GFC_REAL_16\n+\t  else if (dst_kind == 16)\n+\t    *(real128t*) dst = (real128t) int_val;\n+#endif\n+\t  else\n+\t    goto error;\n+\t}\n+      else if (src_type == BT_REAL)\n+\t{\n+\t  if (dst_kind == 4)\n+\t    *(float*) dst = (float) real_val;\n+\t  else if (dst_kind == 8)\n+\t    *(double*) dst = (double) real_val;\n+#ifdef HAVE_GFC_REAL_10\n+\t  else if (dst_kind == 10)\n+\t    *(long double*) dst = (long double) real_val;\n+#endif\n+#ifdef HAVE_GFC_REAL_16\n+\t  else if (dst_kind == 16)\n+\t    *(real128t*) dst = (real128t) real_val;\n+#endif\n+\t  else\n+\t    goto error;\n+\t}\n+      else if (src_type == BT_COMPLEX)\n+\t{\n+\t  if (dst_kind == 4)\n+\t    *(float*) dst = (float) cmpx_val;\n+\t  else if (dst_kind == 8)\n+\t    *(double*) dst = (double) cmpx_val;\n+#ifdef HAVE_GFC_REAL_10\n+\t  else if (dst_kind == 10)\n+\t    *(long double*) dst = (long double) cmpx_val;\n+#endif\n+#ifdef HAVE_GFC_REAL_16\n+\t  else if (dst_kind == 16)\n+\t    *(real128t*) dst = (real128t) cmpx_val;\n+#endif\n+\t  else\n+\t    goto error;\n+\t}\n+      break;\n+    case BT_COMPLEX:\n+      if (src_type == BT_INTEGER)\n+\t{\n+\t  if (dst_kind == 4)\n+\t    *(_Complex float*) dst = (_Complex float) int_val;\n+\t  else if (dst_kind == 8)\n+\t    *(_Complex double*) dst = (_Complex double) int_val;\n+#ifdef HAVE_GFC_REAL_10\n+\t  else if (dst_kind == 10)\n+\t    *(_Complex long double*) dst = (_Complex long double) int_val;\n+#endif\n+#ifdef HAVE_GFC_REAL_16\n+\t  else if (dst_kind == 16)\n+\t    *(complex128t*) dst = (complex128t) int_val;\n+#endif\n+\t  else\n+\t    goto error;\n+\t}\n+      else if (src_type == BT_REAL)\n+\t{\n+\t  if (dst_kind == 4)\n+\t    *(_Complex float*) dst = (_Complex float) real_val;\n+\t  else if (dst_kind == 8)\n+\t    *(_Complex double*) dst = (_Complex double) real_val;\n+#ifdef HAVE_GFC_REAL_10\n+\t  else if (dst_kind == 10)\n+\t    *(_Complex long double*) dst = (_Complex long double) real_val;\n+#endif\n+#ifdef HAVE_GFC_REAL_16\n+\t  else if (dst_kind == 16)\n+\t    *(complex128t*) dst = (complex128t) real_val;\n+#endif\n+\t  else\n+\t    goto error;\n+\t}\n+      else if (src_type == BT_COMPLEX)\n+\t{\n+\t  if (dst_kind == 4)\n+\t    *(_Complex float*) dst = (_Complex float) cmpx_val;\n+\t  else if (dst_kind == 8)\n+\t    *(_Complex double*) dst = (_Complex double) cmpx_val;\n+#ifdef HAVE_GFC_REAL_10\n+\t  else if (dst_kind == 10)\n+\t    *(_Complex long double*) dst = (_Complex long double) cmpx_val;\n+#endif\n+#ifdef HAVE_GFC_REAL_16\n+\t  else if (dst_kind == 16)\n+\t    *(complex128t*) dst = (complex128t) cmpx_val;\n+#endif\n+\t  else\n+\t    goto error;\n+\t}\n+      else\n+\tgoto error;\n+      break;\n+    default:\n+      goto error;\n+    }\n+\n+error:\n+  fprintf (stderr, \"libcaf_single RUNTIME ERROR: Cannot convert type %d kind \"\n+\t   \"%d to type %d kind %d\\n\", src_type, src_kind, dst_type, dst_kind);\n+  abort();\n+}\n+\n+\n void\n _gfortran_caf_get (caf_token_t token, size_t offset,\n \t\t   int image_index __attribute__ ((unused)),\n \t\t   gfc_descriptor_t *src ,\n \t\t   caf_vector_t *src_vector __attribute__ ((unused)),\n \t\t   gfc_descriptor_t *dest, int src_kind, int dst_kind)\n {\n-  /* FIXME: Handle vector subscript, type conversion and assignment \"array = scalar\".\n-     check in particular whether strings of different kinds are permitted and\n-     whether it makes sense to handle array = scalar.  */\n+  /* FIXME: Handle vector subscripts.  */\n   size_t i, k, size;\n   int j;\n   int rank = GFC_DESCRIPTOR_RANK (dest);\n@@ -255,19 +539,30 @@ _gfortran_caf_get (caf_token_t token, size_t offset,\n   if (rank == 0)\n     {\n       void *sr = (void *) ((char *) TOKEN (token) + offset);\n-      if (dst_kind == src_kind)\n-\tmemmove (GFC_DESCRIPTOR_DATA (dest), sr,\n-\t\t dst_size > src_size ? src_size : dst_size);\n-      /* else: FIXME: type conversion.  */\n-      if (GFC_DESCRIPTOR_TYPE (dest) == BT_CHARACTER && dst_size > src_size)\n+      if (GFC_DESCRIPTOR_TYPE (dest) == GFC_DESCRIPTOR_TYPE (src)\n+\t  && dst_kind == src_kind)\n \t{\n-\t  if (dst_kind == 1)\n-\t    memset ((void*)(char*) GFC_DESCRIPTOR_DATA (dest) + src_size, ' ',\n-\t\t    dst_size-src_size);\n-\t  else /* dst_kind == 4.  */\n-\t    for (i = src_size/4; i < dst_size/4; i++)\n-\t      ((int32_t*) GFC_DESCRIPTOR_DATA (dest))[i] = (int32_t)' ';\n+\t  memmove (GFC_DESCRIPTOR_DATA (dest), sr,\n+\t\t   dst_size > src_size ? src_size : dst_size);\n+\t  if (GFC_DESCRIPTOR_TYPE (dest) == BT_CHARACTER && dst_size > src_size)\n+\t    {\n+\t      if (dst_kind == 1)\n+\t\tmemset ((void*)(char*) GFC_DESCRIPTOR_DATA (dest) + src_size,\n+\t\t\t' ', dst_size - src_size);\n+\t      else /* dst_kind == 4.  */\n+\t\tfor (i = src_size/4; i < dst_size/4; i++)\n+\t\t  ((int32_t*) GFC_DESCRIPTOR_DATA (dest))[i] = (int32_t) ' ';\n+\t    }\n \t}\n+      else if (GFC_DESCRIPTOR_TYPE (dest) == BT_CHARACTER && dst_kind == 1)\n+\tassign_char1_from_char4 (dst_size, src_size, GFC_DESCRIPTOR_DATA (dest),\n+\t\t\t\t sr);\n+      else if (GFC_DESCRIPTOR_TYPE (dest) == BT_CHARACTER)\n+\tassign_char4_from_char1 (dst_size, src_size, GFC_DESCRIPTOR_DATA (dest),\n+\t\t\t\t sr);\n+      else\n+\tconvert_type (GFC_DESCRIPTOR_DATA (dest), GFC_DESCRIPTOR_TYPE (dest),\n+\t\t      dst_kind, sr, GFC_DESCRIPTOR_TYPE (src), src_kind);\n       return;\n     }\n \n@@ -300,39 +595,42 @@ _gfortran_caf_get (caf_token_t token, size_t offset,\n       array_offset_dst += (i / extent) * dest->dim[rank-1]._stride;\n       void *dst = dest->base_addr + array_offset_dst*GFC_DESCRIPTOR_SIZE (dest);\n \n-      void *sr;\n-      if (GFC_DESCRIPTOR_RANK (src) != 0)\n+      ptrdiff_t array_offset_sr = 0;\n+      stride = 1;\n+      extent = 1;\n+      for (j = 0; j < GFC_DESCRIPTOR_RANK (src)-1; j++)\n \t{\n-\t  ptrdiff_t array_offset_sr = 0;\n-\t  stride = 1;\n-\t  extent = 1;\n-\t  for (j = 0; j < GFC_DESCRIPTOR_RANK (src)-1; j++)\n-\t    {\n-\t      array_offset_sr += ((i / (extent*stride))\n-\t\t\t\t  % (src->dim[j]._ubound\n-\t\t\t\t     - src->dim[j].lower_bound + 1))\n-\t\t\t\t * src->dim[j]._stride;\n-\t      extent = (src->dim[j]._ubound - src->dim[j].lower_bound + 1);\n-\t      stride = src->dim[j]._stride;\n-\t    }\n-\t  array_offset_sr += (i / extent) * src->dim[rank-1]._stride;\n-\t  sr = (void *)((char *) TOKEN (token) + offset\n-\t\t\t+ array_offset_sr*GFC_DESCRIPTOR_SIZE (src));\n+\t  array_offset_sr += ((i / (extent*stride))\n+\t\t\t       % (src->dim[j]._ubound\n+\t\t\t\t  - src->dim[j].lower_bound + 1))\n+\t\t\t      * src->dim[j]._stride;\n+\t  extent = (src->dim[j]._ubound - src->dim[j].lower_bound + 1);\n+\t  stride = src->dim[j]._stride;\n \t}\n-      else\n-\tsr = (void *)((char *) TOKEN (token) + offset);\n+      array_offset_sr += (i / extent) * src->dim[rank-1]._stride;\n+      void *sr = (void *)((char *) TOKEN (token) + offset\n+\t\t\t  + array_offset_sr*GFC_DESCRIPTOR_SIZE (src));\n \n-      if (dst_kind == src_kind)\n-\tmemmove (dst, sr, dst_size > src_size ? src_size : dst_size);\n-      /* else: FIXME: type conversion.  */\n-      if (GFC_DESCRIPTOR_TYPE (dest) == BT_CHARACTER && dst_size > src_size)\n+      if (GFC_DESCRIPTOR_TYPE (dest) == GFC_DESCRIPTOR_TYPE (src)\n+\t  && dst_kind == src_kind)\n \t{\n-\t  if (dst_kind == 1)\n-\t    memset ((void*)(char*) dst + src_size, ' ', dst_size-src_size);\n-\t  else /* dst_kind == 4.  */\n-\t    for (k = src_size/4; k < dst_size/4; i++)\n-\t      ((int32_t*) dst)[i] = (int32_t)' ';\n+\t  memmove (dst, sr, dst_size > src_size ? src_size : dst_size);\n+\t  if (GFC_DESCRIPTOR_TYPE (dest) == BT_CHARACTER && dst_size > src_size)\n+\t    {\n+\t      if (dst_kind == 1)\n+\t\tmemset ((void*)(char*) dst + src_size, ' ', dst_size-src_size);\n+\t      else /* dst_kind == 4.  */\n+\t\tfor (k = src_size/4; k < dst_size/4; k++)\n+\t\t  ((int32_t*) dst)[k] = (int32_t) ' ';\n+\t    }\n \t}\n+      else if (GFC_DESCRIPTOR_TYPE (dest) == BT_CHARACTER && dst_kind == 1)\n+\tassign_char1_from_char4 (dst_size, src_size, dst, sr);\n+      else if (GFC_DESCRIPTOR_TYPE (dest) == BT_CHARACTER)\n+\tassign_char4_from_char1 (dst_size, src_size, dst, sr);\n+      else\n+\tconvert_type (dst, GFC_DESCRIPTOR_TYPE (dest), dst_kind,\n+\t\t      sr, GFC_DESCRIPTOR_TYPE (src), src_kind);\n     }\n }\n \n@@ -342,11 +640,9 @@ _gfortran_caf_send (caf_token_t token, size_t offset,\n \t\t    int image_index __attribute__ ((unused)),\n \t\t    gfc_descriptor_t *dest,\n \t\t    caf_vector_t *dst_vector __attribute__ ((unused)),\n-\t\t    gfc_descriptor_t *src, int dst_kind,\n-\t\t    int src_kind __attribute__ ((unused)))\n+\t\t    gfc_descriptor_t *src, int dst_kind, int src_kind)\n {\n-  /* FIXME: Handle vector subscript, type conversion and assignment \"array = scalar\".\n-     check in particular whether strings of different kinds are permitted.  */\n+  /* FIXME: Handle vector subscripts.  */\n   size_t i, k, size;\n   int j;\n   int rank = GFC_DESCRIPTOR_RANK (dest);\n@@ -356,18 +652,30 @@ _gfortran_caf_send (caf_token_t token, size_t offset,\n   if (rank == 0)\n     {\n       void *dst = (void *) ((char *) TOKEN (token) + offset);\n-      if (dst_kind == src_kind)\n-\tmemmove (dst, GFC_DESCRIPTOR_DATA (src),\n-\t\t dst_size > src_size ? src_size : dst_size);\n-      /* else: FIXME: type conversion.  */\n-      if (GFC_DESCRIPTOR_TYPE (dest) == BT_CHARACTER && dst_size > src_size)\n+      if (GFC_DESCRIPTOR_TYPE (dest) == GFC_DESCRIPTOR_TYPE (src)\n+\t  && dst_kind == src_kind)\n \t{\n-\t  if (dst_kind == 1)\n-\t    memset ((void*)(char*) dst + src_size, ' ', dst_size-src_size);\n-\t  else /* dst_kind == 4.  */\n-\t    for (i = src_size/4; i < dst_size/4; i++)\n-\t      ((int32_t*) dst)[i] = (int32_t)' ';\n+\t  memmove (dst, GFC_DESCRIPTOR_DATA (src),\n+\t\t   dst_size > src_size ? src_size : dst_size);\n+\t  if (GFC_DESCRIPTOR_TYPE (dest) == BT_CHARACTER && dst_size > src_size)\n+\t    {\n+\t      if (dst_kind == 1)\n+\t\tmemset ((void*)(char*) dst + src_size, ' ', dst_size-src_size);\n+\t      else /* dst_kind == 4.  */\n+\t\tfor (i = src_size/4; i < dst_size/4; i++)\n+\t\t  ((int32_t*) dst)[i] = (int32_t) ' ';\n+\t    }\n \t}\n+      else if (GFC_DESCRIPTOR_TYPE (dest) == BT_CHARACTER && dst_kind == 1)\n+\tassign_char1_from_char4 (dst_size, src_size, dst,\n+\t\t\t\t GFC_DESCRIPTOR_DATA (src));\n+      else if (GFC_DESCRIPTOR_TYPE (dest) == BT_CHARACTER)\n+\tassign_char4_from_char1 (dst_size, src_size, dst,\n+\t\t\t\t GFC_DESCRIPTOR_DATA (src));\n+      else\n+\tconvert_type (dst, GFC_DESCRIPTOR_TYPE (dest), dst_kind,\n+\t\t      GFC_DESCRIPTOR_DATA (src), GFC_DESCRIPTOR_TYPE (src),\n+\t\t      src_kind);\n       return;\n     }\n \n@@ -383,16 +691,6 @@ _gfortran_caf_send (caf_token_t token, size_t offset,\n   if (size == 0)\n     return;\n \n-#if 0\n-  if (dst_len == src_len && PREFIX (is_contiguous) (dest)\n-      && PREFIX (is_contiguous) (src))\n-    {\n-      void *dst = (void *)((char *) TOKEN (token) + offset);\n-      memmove (dst, src->base_addr, GFC_DESCRIPTOR_SIZE (dest)*size);\n-      return;\n-    }\n-#endif\n-\n   for (i = 0; i < size; i++)\n     {\n       ptrdiff_t array_offset_dst = 0;\n@@ -432,17 +730,27 @@ _gfortran_caf_send (caf_token_t token, size_t offset,\n       else\n \tsr = src->base_addr;\n \n-      if (dst_kind == src_kind)\n-\tmemmove (dst, sr, dst_size > src_size ? src_size : dst_size);\n-      /* else: FIXME: type conversion.  */\n-      if (GFC_DESCRIPTOR_TYPE (dest) == BT_CHARACTER && dst_size > src_size)\n+      if (GFC_DESCRIPTOR_TYPE (dest) == GFC_DESCRIPTOR_TYPE (src)\n+\t  && dst_kind == src_kind)\n \t{\n-\t  if (dst_kind == 1)\n-\t    memset ((void*)(char*) dst + src_size, ' ', dst_size-src_size);\n-\t  else /* dst_kind == 4.  */\n-\t    for (k = src_size/4; k < dst_size/4; i++)\n-\t      ((int32_t*) dst)[i] = (int32_t)' ';\n+\t  memmove (dst, sr,\n+\t\t   dst_size > src_size ? src_size : dst_size);\n+\t  if (GFC_DESCRIPTOR_TYPE (dest) == BT_CHARACTER && dst_size > src_size)\n+\t    {\n+\t      if (dst_kind == 1)\n+\t\tmemset ((void*)(char*) dst + src_size, ' ', dst_size-src_size);\n+\t      else /* dst_kind == 4.  */\n+\t\tfor (k = src_size/4; k < dst_size/4; k++)\n+\t\t  ((int32_t*) dst)[k] = (int32_t) ' ';\n+\t    }\n \t}\n+      else if (GFC_DESCRIPTOR_TYPE (dest) == BT_CHARACTER && dst_kind == 1)\n+\tassign_char1_from_char4 (dst_size, src_size, dst, sr);\n+      else if (GFC_DESCRIPTOR_TYPE (dest) == BT_CHARACTER)\n+\tassign_char4_from_char1 (dst_size, src_size, dst, sr);\n+      else\n+\tconvert_type (dst, GFC_DESCRIPTOR_TYPE (dest), dst_kind,\n+\t\t      sr, GFC_DESCRIPTOR_TYPE (src), src_kind);\n     }\n }\n "}]}