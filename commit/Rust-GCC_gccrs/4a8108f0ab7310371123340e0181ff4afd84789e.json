{"sha": "4a8108f0ab7310371123340e0181ff4afd84789e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE4MTA4ZjBhYjczMTAzNzExMjMzNDBlMDE4MWZmNGFmZDg0Nzg5ZQ==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2015-05-08T14:53:20Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2015-05-08T14:53:20Z"}, "message": "trans-array.c (gfc_walk_elemental_function_args): Don't skip the advance to the next dummy argument when...\n\ngcc/fortran/\n\t* trans-array.c (gfc_walk_elemental_function_args):\n\tDon't skip the advance to the next dummy argument when skipping\n\tabsent optional args.\ngcc/testsuite/\n\t* gfortran.dg/elemental_optional_args_7.f90: New.\n\nFrom-SVN: r222913", "tree": {"sha": "976e7c0d87b64f4aa4ad9632925fa33a6061a93b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/976e7c0d87b64f4aa4ad9632925fa33a6061a93b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a8108f0ab7310371123340e0181ff4afd84789e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a8108f0ab7310371123340e0181ff4afd84789e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a8108f0ab7310371123340e0181ff4afd84789e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a8108f0ab7310371123340e0181ff4afd84789e/comments", "author": null, "committer": null, "parents": [{"sha": "2a812183d676b5b19fa9a4ad0520681e11c9d016", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a812183d676b5b19fa9a4ad0520681e11c9d016", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a812183d676b5b19fa9a4ad0520681e11c9d016"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "1091b187d060d21b4f59d5c528fe90366162ebce", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a8108f0ab7310371123340e0181ff4afd84789e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a8108f0ab7310371123340e0181ff4afd84789e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4a8108f0ab7310371123340e0181ff4afd84789e", "patch": "@@ -1,3 +1,9 @@\n+2015-05-08  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans-array.c (gfc_walk_elemental_function_args):\n+\tDon't skip the advance to the next dummy argument when skipping\n+\tabsent optional args.\n+\n 2015-05-05  David Malcolm  <dmalcolm@redhat.com>\n \n \t* expr.c (check_inquiry): Fix indentation so that it reflects the"}, {"sha": "00334b131918fbd3d1d346ab0274ee36bdc9bba4", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a8108f0ab7310371123340e0181ff4afd84789e/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a8108f0ab7310371123340e0181ff4afd84789e/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=4a8108f0ab7310371123340e0181ff4afd84789e", "patch": "@@ -9092,7 +9092,7 @@ gfc_walk_elemental_function_args (gfc_ss * ss, gfc_actual_arglist *arg,\n   for (; arg; arg = arg->next)\n     {\n       if (!arg->expr || arg->expr->expr_type == EXPR_NULL)\n-\tcontinue;\n+\tgoto loop_continue;\n \n       newss = gfc_walk_subexpr (head, arg->expr);\n       if (newss == head)\n@@ -9122,6 +9122,7 @@ gfc_walk_elemental_function_args (gfc_ss * ss, gfc_actual_arglist *arg,\n             tail = tail->next;\n         }\n \n+loop_continue:\n       if (dummy_arg != NULL)\n \tdummy_arg = dummy_arg->next;\n     }"}, {"sha": "c904070b6ac64662da59b83c0d339acbc4a9fce4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a8108f0ab7310371123340e0181ff4afd84789e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a8108f0ab7310371123340e0181ff4afd84789e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4a8108f0ab7310371123340e0181ff4afd84789e", "patch": "@@ -1,3 +1,7 @@\n+2015-05-08  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* gfortran.dg/elemental_optional_args_7.f90: New.\n+\n 2015-05-08  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* gcc.target/aarch64/singleton_intrinsics_1.c: Generalize regex to"}, {"sha": "8d366c37838ef5d2aaa29c467574b2c801edb91e", "filename": "gcc/testsuite/gfortran.dg/elemental_optional_args_7.f90", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a8108f0ab7310371123340e0181ff4afd84789e/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_optional_args_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a8108f0ab7310371123340e0181ff4afd84789e/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_optional_args_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_optional_args_7.f90?ref=4a8108f0ab7310371123340e0181ff4afd84789e", "patch": "@@ -0,0 +1,37 @@\n+! { dg-do run }\n+!\n+! The handling of scalar optional arguments passed to elemental procedure\n+! did not keep actual arguments and dummy arguments synchronized while\n+! walking them in gfc_walk_elemental_function_args, leading to a\n+! null pointer dereference in the generated code.\n+!\n+  implicit none\n+\n+  integer, parameter :: n = 3\n+\n+  call do_test\n+\n+contains\n+\n+  elemental function five(nonopt1, opt1, nonopt2, opt2)\n+    integer, intent(in), optional :: opt1, opt2\n+    integer, intent(in) :: nonopt1, nonopt2\n+    integer :: five\n+\n+    if (.not. present(opt1) .and. .not. present(opt2)) then\n+      five = 5\n+    else\n+      five = -7\n+    end if\n+  end function five\n+\n+  subroutine do_test(opt)\n+    integer, optional :: opt\n+    integer :: i = -1, a(n) = (/ (i, i=1,n) /)\n+    integer :: b(n)\n+\n+    b = five(a, nonopt2=i, opt2=opt)\n+    if (any(b /= 5)) call abort\n+  end subroutine do_test\n+\n+end"}]}