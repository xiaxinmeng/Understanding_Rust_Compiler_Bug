{"sha": "e64dc647248fc32cee9121b50aedc8d800241fb0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY0ZGM2NDcyNDhmYzMyY2VlOTEyMWI1MGFlZGM4ZDgwMDI0MWZiMA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2004-09-06T23:58:14Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2004-09-06T23:58:14Z"}, "message": "re PR bootstrap/17313 (fixinc.sh isn't parallel build safe)\n\n2004-09-06  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR bootstrap/17313\n\t* Makefile.in (specs.ready): Depend on cc1$(exeext).\n\nFrom-SVN: r87133", "tree": {"sha": "362309eebba7537675eaa3a7ac72bc93bbf41a20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/362309eebba7537675eaa3a7ac72bc93bbf41a20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e64dc647248fc32cee9121b50aedc8d800241fb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e64dc647248fc32cee9121b50aedc8d800241fb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e64dc647248fc32cee9121b50aedc8d800241fb0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e64dc647248fc32cee9121b50aedc8d800241fb0/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cfd8e493bc2b7307c3d1b2d93ea08bd3c10c666c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfd8e493bc2b7307c3d1b2d93ea08bd3c10c666c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfd8e493bc2b7307c3d1b2d93ea08bd3c10c666c"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "e0dfa8e46049ce9033255b273be10cfee86e07ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64dc647248fc32cee9121b50aedc8d800241fb0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64dc647248fc32cee9121b50aedc8d800241fb0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e64dc647248fc32cee9121b50aedc8d800241fb0", "patch": "@@ -1,3 +1,8 @@\n+2004-09-06  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/17313\n+\t* Makefile.in (specs.ready): Depend on cc1$(exeext).\n+\n 2004-09-06  James E Wilson  <wilson@specifixinc.com>\n \n \t* config/mips/mips.md (movsf_hardfloat, movdf_hardfloat_64bit,"}, {"sha": "dea566ed285b58cac672f80f9caa4ece0b0b8eb1", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64dc647248fc32cee9121b50aedc8d800241fb0/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64dc647248fc32cee9121b50aedc8d800241fb0/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=e64dc647248fc32cee9121b50aedc8d800241fb0", "patch": "@@ -2795,7 +2795,8 @@ stmp-int-hdrs: $(STMP_FIXINC) $(USER_H) xlimits.h\n # fixinc.sh depends on this, not on specs directly.\n # The idea is to make sure specs gets built, but not rerun fixinc.sh\n # after each stage just because specs' mtime has changed.\n-specs.ready: specs\n+# It also depends on cc1 since fixinc.sh uses it.\n+specs.ready: specs cc1$(exeext)\n \t-if [ -f specs.ready ] ; then \\\n \t\ttrue; \\\n \telse \\"}]}