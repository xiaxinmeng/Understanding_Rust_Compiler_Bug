{"sha": "842dc2e6ed6e6095032eb5af7037e3b5718d3336", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQyZGMyZTZlZDZlNjA5NTAzMmViNWFmNzAzN2UzYjU3MThkMzMzNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-07-07T18:45:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-07-07T18:45:43Z"}, "message": "re PR c++/70869 (internal compiler error: Segmentation fault on array of pointer to function members)\n\n\tPR c++/70869\n\tPR c++/71054\n\t* cp-gimplify.c (cp_genericize_r): For DECL_EXPR for non-static\n\tartificial vars, genericize their initializers.\n\n\t* g++.dg/cpp0x/pr70869.C: New test.\n\t* g++.dg/cpp0x/pr71054.C: New test.\n\nCo-Authored-By: Kai Tietz <ktietz70@googlemail.com>\n\nFrom-SVN: r238124", "tree": {"sha": "2921d133aa939d48c09f7060d04886a291f93d59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2921d133aa939d48c09f7060d04886a291f93d59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/842dc2e6ed6e6095032eb5af7037e3b5718d3336", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/842dc2e6ed6e6095032eb5af7037e3b5718d3336", "html_url": "https://github.com/Rust-GCC/gccrs/commit/842dc2e6ed6e6095032eb5af7037e3b5718d3336", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/842dc2e6ed6e6095032eb5af7037e3b5718d3336/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "31be42626d491e317b261aa64744a0e1346a1f1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31be42626d491e317b261aa64744a0e1346a1f1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31be42626d491e317b261aa64744a0e1346a1f1b"}], "stats": {"total": 72, "additions": 71, "deletions": 1}, "files": [{"sha": "12f15db59dd8320e0bbf2a3f68c1d4ca6d93b03a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/842dc2e6ed6e6095032eb5af7037e3b5718d3336/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/842dc2e6ed6e6095032eb5af7037e3b5718d3336/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=842dc2e6ed6e6095032eb5af7037e3b5718d3336", "patch": "@@ -1,3 +1,11 @@\n+2016-07-07  Jakub Jelinek  <jakub@redhat.com>\n+\t    Kai Tietz  <ktietz70@googlemail.com>\n+\n+\tPR c++/70869\n+\tPR c++/71054\n+\t* cp-gimplify.c (cp_genericize_r): For DECL_EXPR for non-static\n+\tartificial vars, genericize their initializers.\n+\n 2016-07-05  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c++/62314"}, {"sha": "1d81fb1e3d2baf8b6bc0bcc334d5731afb3c11a4", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/842dc2e6ed6e6095032eb5af7037e3b5718d3336/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/842dc2e6ed6e6095032eb5af7037e3b5718d3336/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=842dc2e6ed6e6095032eb5af7037e3b5718d3336", "patch": "@@ -1304,7 +1304,15 @@ cp_genericize_r (tree *stmt_p, int *walk_subtrees, void *data)\n     {\n       tree d = DECL_EXPR_DECL (stmt);\n       if (TREE_CODE (d) == VAR_DECL)\n-\tgcc_assert (CP_DECL_THREAD_LOCAL_P (d) == DECL_THREAD_LOCAL_P (d));\n+\t{\n+\t  gcc_assert (CP_DECL_THREAD_LOCAL_P (d) == DECL_THREAD_LOCAL_P (d));\n+\t  /* User var initializers should be genericized during containing\n+\t     BIND_EXPR genericization when walk_tree walks DECL_INITIAL\n+\t     of BIND_EXPR_VARS.  Artificial temporaries might not be\n+\t     mentioned there though, so walk them now.  */\n+\t  if (DECL_ARTIFICIAL (d) && !TREE_STATIC (d) && DECL_INITIAL (d))\n+\t    cp_walk_tree (&DECL_INITIAL (d), cp_genericize_r, data, NULL);\n+\t}\n     }\n   else if (TREE_CODE (stmt) == OMP_PARALLEL\n \t   || TREE_CODE (stmt) == OMP_TASK"}, {"sha": "c61e6e5a201afaca7ed1479a5aed1abe22f4b257", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/842dc2e6ed6e6095032eb5af7037e3b5718d3336/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/842dc2e6ed6e6095032eb5af7037e3b5718d3336/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=842dc2e6ed6e6095032eb5af7037e3b5718d3336", "patch": "@@ -1,3 +1,11 @@\n+2016-07-07  Jakub Jelinek  <jakub@redhat.com>\n+\t    Kai Tietz  <ktietz70@googlemail.com>\n+\n+\tPR c++/70869\n+\tPR c++/71054\n+\t* g++.dg/cpp0x/pr70869.C: New test.\n+\t* g++.dg/cpp0x/pr71054.C: New test.\n+\n 2016-07-07  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* g++.dg/debug/pr71432.C: Fail on AIX."}, {"sha": "84c532b677279b7b9f07f50ba1350bad4a7d2397", "filename": "gcc/testsuite/g++.dg/cpp0x/pr70869.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/842dc2e6ed6e6095032eb5af7037e3b5718d3336/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr70869.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/842dc2e6ed6e6095032eb5af7037e3b5718d3336/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr70869.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr70869.C?ref=842dc2e6ed6e6095032eb5af7037e3b5718d3336", "patch": "@@ -0,0 +1,25 @@\n+// PR c++/70869\n+// { dg-do run { target c++11 } }\n+\n+#include <initializer_list>\n+\n+struct A\n+{\n+  int f () { return 1; }\n+  int g () { return 2; }\n+  int h () { return 3; }\n+};\n+\n+int\n+main ()\n+{\n+  int cnt = 0;\n+  for (const auto &m : { &A::f, &A::g, &A::h })\n+    {\n+      A a;\n+      if ((a.*m) () != ++cnt)\n+\t__builtin_abort ();\n+    }\n+  if (cnt != 3)\n+    __builtin_abort ();\n+}"}, {"sha": "518bafcbd219e1ec9a261afe94294ea836925576", "filename": "gcc/testsuite/g++.dg/cpp0x/pr71054.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/842dc2e6ed6e6095032eb5af7037e3b5718d3336/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr71054.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/842dc2e6ed6e6095032eb5af7037e3b5718d3336/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr71054.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr71054.C?ref=842dc2e6ed6e6095032eb5af7037e3b5718d3336", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/71054\n+// { dg-do compile { target c++11 } }\n+\n+#include <initializer_list>\n+\n+template <typename D, typename T = decltype (&D::U)>\n+struct S\n+{\n+  struct A\n+  {\n+    int a;\n+    int b;\n+    T p;\n+  };\n+  S () { std::initializer_list<A> a{ {0, 0, &D::V} }; }\n+};\n+struct R {\n+  void V (int);\n+  void U (int);\n+};\n+S<R> b;"}]}