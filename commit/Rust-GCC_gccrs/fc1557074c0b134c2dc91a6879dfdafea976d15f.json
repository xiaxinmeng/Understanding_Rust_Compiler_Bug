{"sha": "fc1557074c0b134c2dc91a6879dfdafea976d15f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmMxNTU3MDc0YzBiMTM0YzJkYzkxYTY4NzlkZmRhZmVhOTc2ZDE1Zg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-08T15:25:24Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-08T15:25:24Z"}, "message": "(expand_expr, case MAX_EXPR): Don't use TARGET directly if it is a\nvolatile MEM.\n\nFrom-SVN: r5681", "tree": {"sha": "629b8f01ecc065b4cc17ce9ba572bc199ad6fb19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/629b8f01ecc065b4cc17ce9ba572bc199ad6fb19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc1557074c0b134c2dc91a6879dfdafea976d15f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc1557074c0b134c2dc91a6879dfdafea976d15f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc1557074c0b134c2dc91a6879dfdafea976d15f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc1557074c0b134c2dc91a6879dfdafea976d15f/comments", "author": null, "committer": null, "parents": [{"sha": "95216deccf22654a633672249bfe66c89a138880", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95216deccf22654a633672249bfe66c89a138880", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95216deccf22654a633672249bfe66c89a138880"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "de2d0e9f738c43863241909fcd927fb2c9815de0", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc1557074c0b134c2dc91a6879dfdafea976d15f/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc1557074c0b134c2dc91a6879dfdafea976d15f/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=fc1557074c0b134c2dc91a6879dfdafea976d15f", "patch": "@@ -5022,6 +5022,7 @@ expand_expr (exp, target, tmode, modifier)\n     case MIN_EXPR:\n       target = original_target;\n       if (target == 0 || ! safe_from_p (target, TREE_OPERAND (exp, 1))\n+\t  || (GET_CODE (target) == MEM && MEM_VOLATILE_P (target))\n \t  || (GET_CODE (target) == REG\n \t      && REGNO (target) < FIRST_PSEUDO_REGISTER))\n \ttarget = gen_reg_rtx (mode);"}]}