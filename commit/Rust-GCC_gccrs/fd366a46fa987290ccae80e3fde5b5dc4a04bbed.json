{"sha": "fd366a46fa987290ccae80e3fde5b5dc4a04bbed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQzNjZhNDZmYTk4NzI5MGNjYWU4MGUzZmRlNWI1ZGM0YTA0YmJlZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-05-06T09:03:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-05-06T09:03:57Z"}, "message": "[multiple changes]\n\n2009-05-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch8.adb (Analyze_Object_Renaming): If the object is a function\n\tcall returning an unconstrained composite value, create the proper\n\tsubtype for it, as is done for object dclarations with unconstrained\n\tnominal subtypes\n\n2009-05-06  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch13.adb (Check_Constant_Address_Clause): Minor error message\n\timprovements\n\n\t* freeze.adb: Minor reformatting\n\nFrom-SVN: r147156", "tree": {"sha": "4a186f295a6dc25425aa5f49e61f8fd57de10f54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a186f295a6dc25425aa5f49e61f8fd57de10f54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd366a46fa987290ccae80e3fde5b5dc4a04bbed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd366a46fa987290ccae80e3fde5b5dc4a04bbed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd366a46fa987290ccae80e3fde5b5dc4a04bbed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd366a46fa987290ccae80e3fde5b5dc4a04bbed/comments", "author": null, "committer": null, "parents": [{"sha": "326bc15919d4945a44eb50962c38d7cbe16bccf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/326bc15919d4945a44eb50962c38d7cbe16bccf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/326bc15919d4945a44eb50962c38d7cbe16bccf2"}], "stats": {"total": 71, "additions": 54, "deletions": 17}, "files": [{"sha": "6970c2c16a7e104a55d6c153a40aa283a228f0f2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd366a46fa987290ccae80e3fde5b5dc4a04bbed/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd366a46fa987290ccae80e3fde5b5dc4a04bbed/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fd366a46fa987290ccae80e3fde5b5dc4a04bbed", "patch": "@@ -1,3 +1,17 @@\n+2009-05-06  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb (Analyze_Object_Renaming): If the object is a function\n+\tcall returning an unconstrained composite value, create the proper\n+\tsubtype for it, as is done for object dclarations with unconstrained\n+\tnominal subtypes\n+\n+2009-05-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch13.adb (Check_Constant_Address_Clause): Minor error message\n+\timprovements\n+\n+\t* freeze.adb: Minor reformatting\n+\n 2009-05-06  Thomas Quinot  <quinot@adacore.com>\n \n \t* sem_ch3.adb (Access_Type_Declaration): An access type whose"}, {"sha": "7d6491bc4a3f4c2957e8a9997125b121205309ed", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd366a46fa987290ccae80e3fde5b5dc4a04bbed/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd366a46fa987290ccae80e3fde5b5dc4a04bbed/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=fd366a46fa987290ccae80e3fde5b5dc4a04bbed", "patch": "@@ -2849,7 +2849,7 @@ package body Freeze is\n                              and then Rsiz mod System_Storage_Unit /= 0\n                            then\n                               --  For implicit packing mode, just set the\n-                              --  component size silently\n+                              --  component size silently.\n \n                               if Implicit_Packing then\n                                  Set_Component_Size       (Btyp, Rsiz);\n@@ -3245,7 +3245,7 @@ package body Freeze is\n          --  later when the full type is frozen).\n \n          elsif Ekind (E) = E_Record_Type\n-           or else  Ekind (E) = E_Record_Subtype\n+           or else Ekind (E) = E_Record_Subtype\n          then\n             Freeze_Record_Type (E);\n \n@@ -3263,7 +3263,6 @@ package body Freeze is\n             end if;\n \n             Comp := First_Entity (E);\n-\n             while Present (Comp) loop\n                if Is_Type (Comp) then\n                   Freeze_And_Append (Comp, Loc, Result);"}, {"sha": "89cfbb66cb6b690445be69a6486756830627409d", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd366a46fa987290ccae80e3fde5b5dc4a04bbed/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd366a46fa987290ccae80e3fde5b5dc4a04bbed/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=fd366a46fa987290ccae80e3fde5b5dc4a04bbed", "patch": "@@ -2986,11 +2986,10 @@ package body Sem_Ch13 is\n                Error_Msg_NE\n                  (\"invalid address clause for initialized object &!\",\n                   Nod, U_Ent);\n-               Error_Msg_Name_1 := Chars (Entity (Nod));\n-               Error_Msg_Name_2 := Chars (U_Ent);\n-               Error_Msg_N\n-                 (\"\\% must be defined before % (RM 13.1(22))!\",\n-                  Nod);\n+               Error_Msg_Node_2 := U_Ent;\n+               Error_Msg_NE\n+                 (\"\\& must be defined before & (RM 13.1(22))!\",\n+                  Nod, Entity (Nod));\n             end if;\n \n          elsif Nkind (Nod) = N_Selected_Component then\n@@ -3120,11 +3119,10 @@ package body Sem_Ch13 is\n                      Error_Msg_NE\n                        (\"invalid address clause for initialized object &!\",\n                         Nod, U_Ent);\n-                     Error_Msg_Name_1 := Chars (Ent);\n-                     Error_Msg_Name_2 := Chars (U_Ent);\n-                     Error_Msg_N\n-                       (\"\\% must be defined before % (RM 13.1(22))!\",\n-                        Nod);\n+                     Error_Msg_Node_2 := U_Ent;\n+                     Error_Msg_NE\n+                       (\"\\& must be defined before & (RM 13.1(22))!\",\n+                        Nod, Ent);\n                   end if;\n \n                elsif Nkind (Original_Node (Nod)) = N_Function_Call then\n@@ -3136,10 +3134,9 @@ package body Sem_Ch13 is\n                      Nod, U_Ent);\n \n                   if Comes_From_Source (Ent) then\n-                     Error_Msg_Name_1 := Chars (Ent);\n-                     Error_Msg_N\n-                       (\"\\reference to variable% not allowed\"\n-                          & \" (RM 13.1(22))!\", Nod);\n+                     Error_Msg_NE\n+                       (\"\\reference to variable& not allowed\"\n+                          & \" (RM 13.1(22))!\", Nod, Ent);\n                   else\n                      Error_Msg_N\n                        (\"non-static expression not allowed\""}, {"sha": "9b9f841679d881d81d1cd630cc7057a1001e538f", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd366a46fa987290ccae80e3fde5b5dc4a04bbed/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd366a46fa987290ccae80e3fde5b5dc4a04bbed/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=fd366a46fa987290ccae80e3fde5b5dc4a04bbed", "patch": "@@ -897,6 +897,33 @@ package body Sem_Ch8 is\n                     (\"\\?suggest using an initialized constant object instead\",\n                      Nam);\n                end if;\n+\n+               --  If the function call returns an unconstrained type, we\n+               --  must build a constrained subtype for the new entity, in\n+               --  a way similar to what is done for an object declaration\n+               --  with an unconstrained nominal type.\n+\n+               if Is_Composite_Type (Etype (Nam))\n+                 and then not Is_Constrained (Etype (Nam))\n+                 and then not Has_Unknown_Discriminants (Etype (Nam))\n+                 and then Expander_Active\n+               then\n+                  declare\n+                     Loc  : constant Source_Ptr := Sloc (N);\n+                     Subt : constant Entity_Id :=\n+                              Make_Defining_Identifier (Loc,\n+                                Chars => New_Internal_Name ('T'));\n+                  begin\n+                     Remove_Side_Effects (Nam);\n+                     Insert_Action (N,\n+                       Make_Subtype_Declaration (Loc,\n+                         Defining_Identifier => Subt,\n+                         Subtype_Indication  =>\n+                           Make_Subtype_From_Expr (Nam, Etype (Nam))));\n+                     Rewrite (Subtype_Mark (N), New_Occurrence_Of (Subt, Loc));\n+                     Set_Etype (Nam, Subt);\n+                  end;\n+               end if;\n          end case;\n       end if;\n "}]}