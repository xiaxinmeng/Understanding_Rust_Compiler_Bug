{"sha": "0a43d68083384a232b9975d62f2028bce83298ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE0M2Q2ODA4MzM4NGEyMzJiOTk3NWQ2MmYyMDI4YmNlODMyOThlYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-14T13:47:18Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-14T13:47:18Z"}, "message": "(grokdeclarator): Convert to sizetype when manipulating size of array\nand use care to avoid mixed-type operations.\n\nFrom-SVN: r6787", "tree": {"sha": "0eef033590d88766af6d7982e48f47b5596555de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0eef033590d88766af6d7982e48f47b5596555de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a43d68083384a232b9975d62f2028bce83298ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a43d68083384a232b9975d62f2028bce83298ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a43d68083384a232b9975d62f2028bce83298ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a43d68083384a232b9975d62f2028bce83298ec/comments", "author": null, "committer": null, "parents": [{"sha": "0207ea829ba7dc8fefe3d7e308ad70c21d13eb44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0207ea829ba7dc8fefe3d7e308ad70c21d13eb44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0207ea829ba7dc8fefe3d7e308ad70c21d13eb44"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "66ca34866942f95e0d5d9ff5e9e0a6a1e795a633", "filename": "gcc/c-decl.c", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a43d68083384a232b9975d62f2028bce83298ec/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a43d68083384a232b9975d62f2028bce83298ec/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=0a43d68083384a232b9975d62f2028bce83298ec", "patch": "@@ -4265,36 +4265,42 @@ grokdeclarator (declarator, declspecs, decl_context, initialized)\n \t\t  error (\"size of array `%s' has non-integer type\", name);\n \t\t  size = integer_one_node;\n \t\t}\n+\n \t      if (pedantic && integer_zerop (size))\n \t\tpedwarn (\"ANSI C forbids zero-size array `%s'\", name);\n+\n \t      if (TREE_CODE (size) == INTEGER_CST)\n \t\t{\n \t\t  constant_expression_warning (size);\n-\t\t  if (INT_CST_LT (size, integer_zero_node))\n+\t\t  if (tree_int_cst_sgn (size) < 0)\n \t\t    {\n \t\t      error (\"size of array `%s' is negative\", name);\n \t\t      size = integer_one_node;\n \t\t    }\n-\t\t  itype = build_index_type (size_binop (MINUS_EXPR, size,\n-\t\t\t\t\t\t\tsize_one_node));\n \t\t}\n \t      else\n \t\t{\n+\t\t  /* Make sure the array size remains visibly nonconstant\n+\t\t     even if it is (eg) a const variable with known value.  */\n+\t\t  size_varies = 1;\n+\n \t\t  if (pedantic)\n \t\t    {\n \t\t      if (TREE_CONSTANT (size))\n \t\t\tpedwarn (\"ANSI C forbids array `%s' whose size can't be evaluated\", name);\n \t\t      else\n \t\t\tpedwarn (\"ANSI C forbids variable-size array `%s'\", name);\n \t\t    }\n-\t\t  itype = build_binary_op (MINUS_EXPR, size, integer_one_node,\n-\t\t\t\t\t   1);\n-\t\t  /* Make sure the array size remains visibly nonconstant\n-\t\t     even if it is (eg) a const variable with known value.  */\n-\t\t  size_varies = 1;\n-\t\t  itype = variable_size (itype);\n-\t\t  itype = build_index_type (itype);\n \t\t}\n+\n+\t      /* Convert size to sizetype, so that if it is a variable\n+\t\t the computations will be done in the proper mode.  */\n+\t      itype = fold (build (MINUS_EXPR, sizetype,\n+\t\t\t\t   convert (sizetype, size), size_one_node));\n+\n+\t      if (size_varies)\n+\t\titype = variable_size (itype);\n+\t      itype = build_index_type (itype);\n \t    }\n \n #if 0 /* This had bad results for pointers to arrays, as in"}]}