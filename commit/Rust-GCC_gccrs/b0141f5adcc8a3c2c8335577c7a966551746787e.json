{"sha": "b0141f5adcc8a3c2c8335577c7a966551746787e", "node_id": "C_kwDOANBUbNoAKGIwMTQxZjVhZGNjOGEzYzJjODMzNTU3N2M3YTk2NjU1MTc0Njc4N2U", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-04-25T11:19:00Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@embecosm.com", "date": "2023-05-03T08:41:48Z"}, "message": "libproc_macro: Remove internal named namespaces\n\nEither move the elements from their namespace up to the procmacro\nnamespace or make the namespace anonymous.\n\nChangeLog:\n\n\t* libgrust/libproc_macro/group.cc (Group::make_group): Remove\n\tinternal namespace.\n\t(Group::drop): Likewise.\n\t* libgrust/libproc_macro/group.h (enum Delimiter): Make members\n\tupercase.\n\t(struct Group):\n\t* libgrust/libproc_macro/ident.cc (Ident::drop): Remove internal\n\tnamespace.\n\t* libgrust/libproc_macro/ident.h (Ident__clone): Likewise.\n\t* libgrust/libproc_macro/literal.cc (Literal::make_isize):\n\tLikewise.\n\t* libgrust/libproc_macro/literal.h (union LiteralPayload):\n\tLikewise.\n\t(Literal__from_string): Likewise.\n\t* libgrust/libproc_macro/punct.cc (Punct::make_punct): Likewise.\n\t* libgrust/libproc_macro/punct.h (enum Spacing): Make members\n\tuppercase.\n\t* libgrust/libproc_macro/tokenstream.cc (TokenStream::make_tokenstream):\n\tRemove internal namespace.\n\t(TokenStream::grow): Likewise.\n\t(TokenStream::push): Likewise.\n\t(TokenSream__push): Likewise.\n\t(TokenStream__clone): Likewise.\n\t(TokenStream__drop): Likewise.\n\t* libgrust/libproc_macro/tokenstream.h (struct TokenStream):\n\tLikewise.\n\t(TokenSream__push): Likewise.\n\t(TokenStream__drop): Likewise.\n\t* libgrust/libproc_macro/tokentree.cc (TokenTree::make_tokentree):\n\tLikewise.\n\t(TokenTree::drop): Likewise.\n\t* libgrust/libproc_macro/tokentree.h (union TokenTreePayload):\n\tLikewise.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "261edb1addf198880beaddad1bad59d8e88326e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/261edb1addf198880beaddad1bad59d8e88326e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0141f5adcc8a3c2c8335577c7a966551746787e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0141f5adcc8a3c2c8335577c7a966551746787e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0141f5adcc8a3c2c8335577c7a966551746787e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0141f5adcc8a3c2c8335577c7a966551746787e/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87abaedf5aa0a9f38ed3c6dd308feff27ec17ae9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87abaedf5aa0a9f38ed3c6dd308feff27ec17ae9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87abaedf5aa0a9f38ed3c6dd308feff27ec17ae9"}], "stats": {"total": 101, "additions": 36, "deletions": 65}, "files": [{"sha": "74c1959800e6167af7e843bfae5a8fd20c2710df", "filename": "libgrust/libproc_macro/group.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0141f5adcc8a3c2c8335577c7a966551746787e/libgrust%2Flibproc_macro%2Fgroup.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0141f5adcc8a3c2c8335577c7a966551746787e/libgrust%2Flibproc_macro%2Fgroup.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Fgroup.cc?ref=b0141f5adcc8a3c2c8335577c7a966551746787e", "patch": "@@ -23,10 +23,9 @@\n #include \"group.h\"\n \n namespace ProcMacro {\n-namespace Group {\n \n Group\n-Group::make_group (TokenStream::TokenStream stream, Delimiter delim)\n+Group::make_group (TokenStream stream, Delimiter delim)\n {\n   return {delim, stream};\n }\n@@ -37,5 +36,4 @@ Group::drop (Group *g)\n   TokenStream::TokenStream::drop (&g->stream);\n }\n \n-} // namespace Group\n } // namespace ProcMacro"}, {"sha": "26680b07848b8c0e718123ad3c920bb2b790c926", "filename": "libgrust/libproc_macro/group.h", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0141f5adcc8a3c2c8335577c7a966551746787e/libgrust%2Flibproc_macro%2Fgroup.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0141f5adcc8a3c2c8335577c7a966551746787e/libgrust%2Flibproc_macro%2Fgroup.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Fgroup.h?ref=b0141f5adcc8a3c2c8335577c7a966551746787e", "patch": "@@ -26,28 +26,26 @@\n #include \"tokenstream.h\"\n \n namespace ProcMacro {\n-namespace Group {\n \n enum Delimiter\n {\n-  Parenthesis,\n-  Brace,\n-  Bracket,\n-  None,\n+  PARENTHESIS,\n+  BRACE,\n+  BRACKET,\n+  NONE,\n };\n \n struct Group\n {\n   Delimiter delimiter;\n-  TokenStream::TokenStream stream;\n+  TokenStream stream;\n \n public:\n-  static Group make_group (TokenStream::TokenStream stream, Delimiter delim);\n+  static Group make_group (TokenStream stream, Delimiter delim);\n \n   static void drop (Group *g);\n };\n \n-} // namespace Group\n } // namespace ProcMacro\n \n #endif /* ! GROUP_H */"}, {"sha": "c21483605ff30c265778a3cce2cb0418adde1b82", "filename": "libgrust/libproc_macro/ident.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0141f5adcc8a3c2c8335577c7a966551746787e/libgrust%2Flibproc_macro%2Fident.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0141f5adcc8a3c2c8335577c7a966551746787e/libgrust%2Flibproc_macro%2Fident.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Fident.cc?ref=b0141f5adcc8a3c2c8335577c7a966551746787e", "patch": "@@ -24,7 +24,6 @@\n #include <cstring>\n \n namespace ProcMacro {\n-namespace Ident {\n \n extern \"C\" {\n \n@@ -84,5 +83,4 @@ Ident::drop (Ident *ident)\n   ident->len = 0;\n }\n \n-} // namespace Ident\n } // namespace ProcMacro"}, {"sha": "82a154c20ccc2340a3626c86d61997193b5c8dc1", "filename": "libgrust/libproc_macro/ident.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0141f5adcc8a3c2c8335577c7a966551746787e/libgrust%2Flibproc_macro%2Fident.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0141f5adcc8a3c2c8335577c7a966551746787e/libgrust%2Flibproc_macro%2Fident.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Fident.h?ref=b0141f5adcc8a3c2c8335577c7a966551746787e", "patch": "@@ -27,7 +27,6 @@\n #include <string>\n \n namespace ProcMacro {\n-namespace Ident {\n \n struct Ident\n {\n@@ -61,7 +60,6 @@ Ident\n Ident__clone (const Ident *ident);\n }\n \n-} // namespace Ident\n } // namespace ProcMacro\n \n #endif /* ! IDENT_H */"}, {"sha": "39474ce3120afac93b06a9da56dabbd4330726e3", "filename": "libgrust/libproc_macro/literal.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0141f5adcc8a3c2c8335577c7a966551746787e/libgrust%2Flibproc_macro%2Fliteral.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0141f5adcc8a3c2c8335577c7a966551746787e/libgrust%2Flibproc_macro%2Fliteral.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Fliteral.cc?ref=b0141f5adcc8a3c2c8335577c7a966551746787e", "patch": "@@ -25,7 +25,6 @@\n #include <cstdlib>\n \n namespace ProcMacro {\n-namespace Literal {\n \n void\n Literal::drop (Literal *lit)\n@@ -289,5 +288,4 @@ Literal::make_isize (std::int64_t value, bool suffixed)\n   return {ISIZE, payload};\n }\n \n-} // namespace Literal\n } // namespace ProcMacro"}, {"sha": "f48b534e3f0383083567a966f1e016ba681565d9", "filename": "libgrust/libproc_macro/literal.h", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0141f5adcc8a3c2c8335577c7a966551746787e/libgrust%2Flibproc_macro%2Fliteral.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0141f5adcc8a3c2c8335577c7a966551746787e/libgrust%2Flibproc_macro%2Fliteral.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Fliteral.h?ref=b0141f5adcc8a3c2c8335577c7a966551746787e", "patch": "@@ -28,7 +28,6 @@\n #include <vector>\n \n namespace ProcMacro {\n-namespace Literal {\n enum UnsignedTag\n {\n   UNSIGNED_8,\n@@ -187,10 +186,11 @@ struct Literal\n   static Literal make_usize (std::uint64_t value, bool suffixed = false);\n   static Literal make_isize (std::int64_t value, bool suffixed = false);\n \n+  static void drop (Literal *lit);\n+\n+private:\n   static Literal make_unsigned (UnsignedSuffixPayload p);\n   static Literal make_signed (SignedSuffixPayload p);\n-\n-  static void drop (Literal *lit);\n };\n \n extern \"C\" {\n@@ -207,7 +207,6 @@ bool\n Literal__from_string (const unsigned char *str, std::uint64_t len,\n \t\t      Literal *lit);\n }\n-} // namespace Literal\n } // namespace ProcMacro\n \n #endif /* ! LITERAL_H */"}, {"sha": "78d25f9ebdb92a9363897eae05544471fea89d6a", "filename": "libgrust/libproc_macro/punct.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0141f5adcc8a3c2c8335577c7a966551746787e/libgrust%2Flibproc_macro%2Fpunct.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0141f5adcc8a3c2c8335577c7a966551746787e/libgrust%2Flibproc_macro%2Fpunct.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Fpunct.cc?ref=b0141f5adcc8a3c2c8335577c7a966551746787e", "patch": "@@ -24,13 +24,11 @@\n #include <cstdlib>\n \n namespace ProcMacro {\n-namespace Punct {\n \n Punct\n Punct::make_punct (std::uint32_t ch, Spacing spacing)\n {\n   return {ch, spacing};\n }\n \n-} // namespace Punct\n } // namespace ProcMacro"}, {"sha": "f3a1c1bd1ecb7f249d560b1e38063e141dba6aa1", "filename": "libgrust/libproc_macro/punct.h", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0141f5adcc8a3c2c8335577c7a966551746787e/libgrust%2Flibproc_macro%2Fpunct.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0141f5adcc8a3c2c8335577c7a966551746787e/libgrust%2Flibproc_macro%2Fpunct.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Fpunct.h?ref=b0141f5adcc8a3c2c8335577c7a966551746787e", "patch": "@@ -26,12 +26,11 @@\n #include <cstdint>\n \n namespace ProcMacro {\n-namespace Punct {\n \n enum Spacing\n {\n-  Alone,\n-  Joint\n+  ALONE,\n+  JOINT\n };\n \n struct Punct\n@@ -40,10 +39,9 @@ struct Punct\n   Spacing spacing;\n \n public:\n-  static Punct make_punct (std::uint32_t ch, Spacing spacing = Spacing::Alone);\n+  static Punct make_punct (std::uint32_t ch, Spacing spacing = Spacing::ALONE);\n };\n \n-} // namespace Punct\n } // namespace ProcMacro\n \n #endif /* ! PUNCT_H */"}, {"sha": "12d454316012b0abe26786e0e56989fa117aff22", "filename": "libgrust/libproc_macro/tokenstream.cc", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0141f5adcc8a3c2c8335577c7a966551746787e/libgrust%2Flibproc_macro%2Ftokenstream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0141f5adcc8a3c2c8335577c7a966551746787e/libgrust%2Flibproc_macro%2Ftokenstream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Ftokenstream.cc?ref=b0141f5adcc8a3c2c8335577c7a966551746787e", "patch": "@@ -26,10 +26,9 @@\n #include <cstring>\n \n namespace ProcMacro {\n-namespace TokenStream {\n \n TokenStream\n-TokenStream::make_tokenstream (std::vector<TokenTree::TokenTree> vec)\n+TokenStream::make_tokenstream (std::vector<TokenTree> vec)\n {\n   auto stream = make_tokenstream (vec.size ());\n   for (auto tt : vec)\n@@ -42,22 +41,22 @@ TokenStream::make_tokenstream (std::vector<TokenTree::TokenTree> vec)\n TokenStream\n TokenStream::make_tokenstream (std::uint64_t capacity)\n {\n-  auto *data = new TokenTree::TokenTree[capacity];\n+  auto *data = new TokenTree[capacity];\n   return {data, 0, capacity};\n }\n \n void\n TokenStream::grow (std::uint64_t delta)\n {\n   auto new_capacity = capacity + delta;\n-  auto *new_data = new TokenTree::TokenTree[new_capacity];\n+  auto *new_data = new TokenTree[new_capacity];\n   std::memcpy (new_data, data, size);\n   delete[] data;\n   data = new_data;\n }\n \n void\n-TokenStream::push (TokenTree::TokenTree tree)\n+TokenStream::push (TokenTree tree)\n {\n   if (size == capacity)\n     grow (capacity);\n@@ -90,7 +89,7 @@ TokenStream__with_capacity (std::uint64_t capacity)\n }\n \n extern \"C\" void\n-TokenSream__push (TokenStream *stream, TokenTree::TokenTree tree)\n+TokenSream__push (TokenStream *stream, TokenTree tree)\n {\n   stream->push (tree);\n }\n@@ -106,7 +105,7 @@ TokenStream__from_string (unsigned char *str, std::uint64_t len,\n extern \"C\" TokenStream\n TokenStream__clone (const TokenStream *ts)\n {\n-  auto *data = new TokenTree::TokenTree[ts->capacity];\n+  auto *data = new TokenTree[ts->capacity];\n   std::memcpy (data, ts->data, ts->size);\n   return {data, ts->size, ts->capacity};\n }\n@@ -117,5 +116,4 @@ TokenStream__drop (TokenStream *stream)\n   TokenStream::drop (stream);\n }\n \n-} // namespace TokenStream\n } // namespace ProcMacro"}, {"sha": "2c2231d5cdad1c4746cdeb58ca059e0d71315424", "filename": "libgrust/libproc_macro/tokenstream.h", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0141f5adcc8a3c2c8335577c7a966551746787e/libgrust%2Flibproc_macro%2Ftokenstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0141f5adcc8a3c2c8335577c7a966551746787e/libgrust%2Flibproc_macro%2Ftokenstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Ftokenstream.h?ref=b0141f5adcc8a3c2c8335577c7a966551746787e", "patch": "@@ -27,29 +27,22 @@\n #include <vector>\n \n namespace ProcMacro {\n-namespace TokenTree {\n struct TokenTree;\n-}\n-\n-namespace TokenStream {\n-\n-const std::int64_t DEFAULT_CAPACITY = 0;\n \n struct TokenStream\n {\n-  TokenTree::TokenTree *data;\n+  TokenTree *data;\n   std::uint64_t size;\n   std::uint64_t capacity;\n \n public:\n   void grow (std::uint64_t delta);\n-  void push (TokenTree::TokenTree tree);\n+  void push (TokenTree tree);\n \n   TokenStream clone () const;\n \n-  static TokenStream make_tokenstream (std::vector<TokenTree::TokenTree> vec);\n-  static TokenStream make_tokenstream (std::uint64_t capacity\n-\t\t\t\t       = DEFAULT_CAPACITY);\n+  static TokenStream make_tokenstream (std::vector<TokenTree> vec);\n+  static TokenStream make_tokenstream (std::uint64_t capacity = 1);\n \n   static void drop (TokenStream *stream);\n };\n@@ -61,7 +54,7 @@ extern \"C\" TokenStream\n TokenStream__with_capacity (std::uint64_t capacity);\n \n extern \"C\" void\n-TokenSream__push (TokenStream *stream, TokenTree::TokenTree tree);\n+TokenSream__push (TokenStream *stream, TokenTree tree);\n \n extern \"C\" bool\n TokenStream__from_string (unsigned char *str, std::uint64_t len,\n@@ -73,7 +66,6 @@ TokenStream__clone (const TokenStream *ts);\n extern \"C\" void\n TokenStream__drop (TokenStream *stream);\n \n-} // namespace TokenStream\n } // namespace ProcMacro\n \n #endif /* ! TOKENSTREAM_H */"}, {"sha": "b034a8c33e2e912565ad4938f6c5d63ff0cf09b3", "filename": "libgrust/libproc_macro/tokentree.cc", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0141f5adcc8a3c2c8335577c7a966551746787e/libgrust%2Flibproc_macro%2Ftokentree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0141f5adcc8a3c2c8335577c7a966551746787e/libgrust%2Flibproc_macro%2Ftokentree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Ftokentree.cc?ref=b0141f5adcc8a3c2c8335577c7a966551746787e", "patch": "@@ -23,34 +23,33 @@\n #include \"tokentree.h\"\n \n namespace ProcMacro {\n-namespace TokenTree {\n \n TokenTree\n-TokenTree::make_tokentree (Group::Group group)\n+TokenTree::make_tokentree (Group group)\n {\n   TokenTreePayload payload;\n   payload.group = group;\n   return {GROUP, payload};\n }\n \n TokenTree\n-TokenTree::make_tokentree (Ident::Ident ident)\n+TokenTree::make_tokentree (Ident ident)\n {\n   TokenTreePayload payload;\n   payload.ident = ident;\n   return {IDENT, payload};\n }\n \n TokenTree\n-TokenTree::make_tokentree (Punct::Punct punct)\n+TokenTree::make_tokentree (Punct punct)\n {\n   TokenTreePayload payload;\n   payload.punct = punct;\n   return {PUNCT, payload};\n }\n \n TokenTree\n-TokenTree::make_tokentree (Literal::Literal literal)\n+TokenTree::make_tokentree (Literal literal)\n {\n   TokenTreePayload payload;\n   payload.literal = literal;\n@@ -76,5 +75,4 @@ TokenTree::drop (TokenTree *tt)\n     }\n }\n \n-} // namespace TokenTree\n } // namespace ProcMacro"}, {"sha": "1a50ecf34474ae1cee2c12f4d17fc7942b978495", "filename": "libgrust/libproc_macro/tokentree.h", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0141f5adcc8a3c2c8335577c7a966551746787e/libgrust%2Flibproc_macro%2Ftokentree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0141f5adcc8a3c2c8335577c7a966551746787e/libgrust%2Flibproc_macro%2Ftokentree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Ftokentree.h?ref=b0141f5adcc8a3c2c8335577c7a966551746787e", "patch": "@@ -29,7 +29,6 @@\n #include \"literal.h\"\n \n namespace ProcMacro {\n-namespace TokenTree {\n \n enum TokenTreeTag\n {\n@@ -41,10 +40,10 @@ enum TokenTreeTag\n \n union TokenTreePayload\n {\n-  Group::Group group;\n-  Ident::Ident ident;\n-  Punct::Punct punct;\n-  Literal::Literal literal;\n+  Group group;\n+  Ident ident;\n+  Punct punct;\n+  Literal literal;\n };\n \n struct TokenTree\n@@ -53,15 +52,14 @@ struct TokenTree\n   TokenTreePayload payload;\n \n public:\n-  static TokenTree make_tokentree (Group::Group group);\n-  static TokenTree make_tokentree (Ident::Ident ident);\n-  static TokenTree make_tokentree (Punct::Punct punct);\n-  static TokenTree make_tokentree (Literal::Literal literal);\n+  static TokenTree make_tokentree (Group group);\n+  static TokenTree make_tokentree (Ident ident);\n+  static TokenTree make_tokentree (Punct punct);\n+  static TokenTree make_tokentree (Literal literal);\n \n   static void drop (TokenTree *tt);\n };\n \n-} // namespace TokenTree\n } // namespace ProcMacro\n \n #endif /* ! TOKENTREE_H */"}]}