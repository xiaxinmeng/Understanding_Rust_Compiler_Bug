{"sha": "2d87c1d472b4d881024bde41836ed826449e861a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ4N2MxZDQ3MmI0ZDg4MTAyNGJkZTQxODM2ZWQ4MjY0NDllODYxYQ==", "commit": {"author": {"name": "Renlin Li", "email": "renlin.li@arm.com", "date": "2015-07-13T08:29:46Z"}, "committer": {"name": "Renlin Li", "email": "renlin@gcc.gnu.org", "date": "2015-07-13T08:29:46Z"}, "message": "[PATCH]Fix PR66556.\n\n[PATCH]Fix PR66556. Don't drop side-effect in\nsimplify_const_relational_operation function.\n\ngcc/\n\n2015-07-13  Renlin Li  <renlin.li@arm.com>\n\n\tPR rtl/66556\n\t* simplify-rtx.c (simplify_const_relational_operation): Add\n\tside_effects_p checks.\n\ngcc/testsuite/\n\n2015-07-13  Renlin Li  <renlin.li@arm.com>\n\n\tPR rtl/66556\n\t* gcc.c-torture/execute/pr66556.c: New.\n\nFrom-SVN: r225729", "tree": {"sha": "122ee52482e8bebf65203d2169c8eac27aaa1b40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/122ee52482e8bebf65203d2169c8eac27aaa1b40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d87c1d472b4d881024bde41836ed826449e861a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d87c1d472b4d881024bde41836ed826449e861a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d87c1d472b4d881024bde41836ed826449e861a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d87c1d472b4d881024bde41836ed826449e861a/comments", "author": null, "committer": null, "parents": [{"sha": "76d96a5a6f6f0b14967c10166b1577c2bc034d13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76d96a5a6f6f0b14967c10166b1577c2bc034d13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76d96a5a6f6f0b14967c10166b1577c2bc034d13"}], "stats": {"total": 70, "additions": 67, "deletions": 3}, "files": [{"sha": "ccde3b7b88acb3d76051f0ed4b5bfda922d1b5a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d87c1d472b4d881024bde41836ed826449e861a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d87c1d472b4d881024bde41836ed826449e861a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d87c1d472b4d881024bde41836ed826449e861a", "patch": "@@ -1,3 +1,9 @@\n+2015-07-13  Renlin Li  <renlin.li@arm.com>\n+\n+\tPR rtl/66556\n+\t* simplify-rtx.c (simplify_const_relational_operation): Add\n+\tside_effects_p checks.\n+\n 2015-07-12  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* bitmap.h: Fix double word typos."}, {"sha": "91e4b9ca0cea75ff9e4d72940aba31e821be6d17", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d87c1d472b4d881024bde41836ed826449e861a/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d87c1d472b4d881024bde41836ed826449e861a/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=2d87c1d472b4d881024bde41836ed826449e861a", "patch": "@@ -4925,7 +4925,8 @@ simplify_const_relational_operation (enum rtx_code code,\n \n   /* Optimize comparisons with upper and lower bounds.  */\n   if (HWI_COMPUTABLE_MODE_P (mode)\n-      && CONST_INT_P (trueop1))\n+      && CONST_INT_P (trueop1)\n+      && !side_effects_p (trueop0))\n     {\n       int sign;\n       unsigned HOST_WIDE_INT nonzero = nonzero_bits (trueop0, mode);\n@@ -5038,7 +5039,7 @@ simplify_const_relational_operation (enum rtx_code code,\n     }\n \n   /* Optimize integer comparisons with zero.  */\n-  if (trueop1 == const0_rtx)\n+  if (trueop1 == const0_rtx && !side_effects_p (trueop0))\n     {\n       /* Some addresses are known to be nonzero.  We don't know\n \t their sign, but equality comparisons are known.  */\n@@ -5089,7 +5090,7 @@ simplify_const_relational_operation (enum rtx_code code,\n     }\n \n   /* Optimize comparison of ABS with zero.  */\n-  if (trueop1 == CONST0_RTX (mode)\n+  if (trueop1 == CONST0_RTX (mode) && !side_effects_p (trueop0)\n       && (GET_CODE (trueop0) == ABS\n \t  || (GET_CODE (trueop0) == FLOAT_EXTEND\n \t      && GET_CODE (XEXP (trueop0, 0)) == ABS)))"}, {"sha": "1e6a07186d6314e85ae3d10d8929313b0d3edbf3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d87c1d472b4d881024bde41836ed826449e861a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d87c1d472b4d881024bde41836ed826449e861a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2d87c1d472b4d881024bde41836ed826449e861a", "patch": "@@ -1,3 +1,8 @@\n+2015-07-13  Renlin Li  <renlin.li@arm.com>\n+\n+\tPR rtl/66556\n+\t* gcc.c-torture/execute/pr66556.c: New.\n+\n 2015-07-12  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* gcc.dg/20020219-1.c: Fix double word typos."}, {"sha": "f7acf1c03b05129ebaae49c097202e823b2a8ddb", "filename": "gcc/testsuite/gcc.c-torture/execute/pr66556.c", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d87c1d472b4d881024bde41836ed826449e861a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr66556.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d87c1d472b4d881024bde41836ed826449e861a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr66556.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr66556.c?ref=2d87c1d472b4d881024bde41836ed826449e861a", "patch": "@@ -0,0 +1,52 @@\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+struct {\n+  unsigned f2;\n+  unsigned f3 : 15;\n+  unsigned f5 : 3;\n+  short f6;\n+} b = {0x7f8000, 6, 5, 0}, g = {8, 0, 5, 0};\n+\n+short d, l;\n+int a, c, h = 8;\n+volatile char e[237] = {4};\n+short *f = &d;\n+short i[5] = {3};\n+char j;\n+int *k = &c;\n+\n+int\n+fn1 (unsigned p1) { return -p1; }\n+\n+void\n+fn2 (char p1)\n+{\n+  a = p1;\n+  e[0];\n+}\n+\n+short\n+fn3 ()\n+{\n+  *k = 4;\n+  return *f;\n+}\n+\n+int\n+main ()\n+{\n+\n+  unsigned m;\n+  short *n = &i[4];\n+\n+  m = fn1 ((h && j) <= b.f5);\n+  l = m > g.f3;\n+  *n = 3;\n+  fn2 (b.f2 >> 15);\n+  if ((a & 0xff) != 0xff)\n+    abort ();\n+\n+  return 0;\n+}"}]}