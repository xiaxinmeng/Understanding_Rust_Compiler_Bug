{"sha": "16955e8bf016705622c9124a22e39de2fcef2550", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY5NTVlOGJmMDE2NzA1NjIyYzkxMjRhMjJlMzlkZTJmY2VmMjU1MA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2012-02-05T14:53:09Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2012-02-05T14:53:09Z"}, "message": "target-supports.exp (check_effective_target_mips_llsc): New.\n\ngcc/testsuite/\n\t* lib/target-supports.exp (check_effective_target_mips_llsc): New.\n\t(check_effective_target_sync_int_long): Use it.\n\t(check_effective_target_sync_char_short): Likewise.\n\t* gcc.target/mips/atomic-memory-1.c: Restrict error check to mips_llsc.\n\nFrom-SVN: r183909", "tree": {"sha": "6e9fb2c12f45bd9ef6636efe7ac574b2a47da5b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e9fb2c12f45bd9ef6636efe7ac574b2a47da5b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16955e8bf016705622c9124a22e39de2fcef2550", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16955e8bf016705622c9124a22e39de2fcef2550", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16955e8bf016705622c9124a22e39de2fcef2550", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16955e8bf016705622c9124a22e39de2fcef2550/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7bd8c53f50564ff3dd4f7a24363c4e2cb3e9c553", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bd8c53f50564ff3dd4f7a24363c4e2cb3e9c553", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bd8c53f50564ff3dd4f7a24363c4e2cb3e9c553"}], "stats": {"total": 33, "additions": 30, "deletions": 3}, "files": [{"sha": "69e62cb621a7d8437b2d07f19ca120d12e620f6e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16955e8bf016705622c9124a22e39de2fcef2550/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16955e8bf016705622c9124a22e39de2fcef2550/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=16955e8bf016705622c9124a22e39de2fcef2550", "patch": "@@ -1,3 +1,10 @@\n+2012-02-05  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_mips_llsc): New.\n+\t(check_effective_target_sync_int_long): Use it.\n+\t(check_effective_target_sync_char_short): Likewise.\n+\t* gcc.target/mips/atomic-memory-1.c: Restrict error check to mips_llsc.\n+\n 2012-02-05  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/51972"}, {"sha": "839d75c2b2fccbdd0539ff41e320563f535cc302", "filename": "gcc/testsuite/gcc.target/mips/atomic-memory-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16955e8bf016705622c9124a22e39de2fcef2550/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fatomic-memory-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16955e8bf016705622c9124a22e39de2fcef2550/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fatomic-memory-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fatomic-memory-1.c?ref=16955e8bf016705622c9124a22e39de2fcef2550", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n \n-/* { dg-message \"note: '__sync_nand_and_fetch' changed semantics in GCC 4.4\" \"\" { target *-*-* } 0 } */\n+/* { dg-message \"note: '__sync_nand_and_fetch' changed semantics in GCC 4.4\" \"\" { target mips_llsc } 0 } */\n \n extern void abort (void);\n extern void exit (int);"}, {"sha": "ca101438cc8553622c636d2f1914368b8efbdf40", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16955e8bf016705622c9124a22e39de2fcef2550/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16955e8bf016705622c9124a22e39de2fcef2550/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=16955e8bf016705622c9124a22e39de2fcef2550", "patch": "@@ -890,6 +890,26 @@ proc check_effective_target_mips_newabi_large_long_double { } {\n     } \"-mabi=64\"]\n }\n \n+# Return true if the target is a MIPS target that has access\n+# to the LL and SC instructions.\n+\n+proc check_effective_target_mips_llsc { } {\n+    if { ![istarget mips*-*-*] } {\n+\treturn 0\n+    }\n+    # Assume that these instructions are always implemented for\n+    # non-elf* targets, via emulation if necessary.\n+    if { ![istarget *-*-elf*] } {\n+\treturn 1\n+    }\n+    # Otherwise assume LL/SC support for everything but MIPS I.\n+    return [check_no_compiler_messages mips_llsc assembly {\n+\t#if __mips == 1\n+\t#error FOO\n+\t#endif\n+    }]\n+}\n+\n # Return 1 if the current multilib does not generate PIC by default.\n \n proc check_effective_target_nonpic { } {\n@@ -3770,7 +3790,7 @@ proc check_effective_target_sync_int_long { } {\n \t     || [istarget powerpc*-*-*]\n \t     || [istarget sparc64-*-*]\n \t     || [istarget sparcv9-*-*]\n-\t     || [istarget mips*-*-*] } {\n+\t     || [check_effective_target_mips_llsc] } {\n            set et_sync_int_long_saved 1\n         }\n     }\n@@ -3800,7 +3820,7 @@ proc check_effective_target_sync_char_short { } {\n \t     || [istarget powerpc*-*-*]\n \t     || [istarget sparc64-*-*]\n \t     || [istarget sparcv9-*-*]\n-\t     || [istarget mips*-*-*] } {\n+\t     || [check_effective_target_mips_llsc] } {\n            set et_sync_char_short_saved 1\n         }\n     }"}]}