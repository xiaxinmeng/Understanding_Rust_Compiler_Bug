{"sha": "f571b63f52480bcdd80abbd314810130960ed3b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU3MWI2M2Y1MjQ4MGJjZGQ4MGFiYmQzMTQ4MTAxMzA5NjBlZDNiOA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-05-27T10:23:20Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-05-27T10:23:20Z"}, "message": "ira.c (commutative_operand): Adjust for change to recog_data.\n\ngcc/\n\t* ira.c (commutative_operand): Adjust for change to recog_data.\n\t[Missing from previous commit.]\n\nFrom-SVN: r210965", "tree": {"sha": "f8d690a11f828b871f683d20c9f1d9e062f4a1fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8d690a11f828b871f683d20c9f1d9e062f4a1fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f571b63f52480bcdd80abbd314810130960ed3b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f571b63f52480bcdd80abbd314810130960ed3b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f571b63f52480bcdd80abbd314810130960ed3b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f571b63f52480bcdd80abbd314810130960ed3b8/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4cc8d9d2df6f618f133f6d5ec1019333a0d942e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cc8d9d2df6f618f133f6d5ec1019333a0d942e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cc8d9d2df6f618f133f6d5ec1019333a0d942e5"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "8e588176147b6db722c826cb843ad69a3f32e657", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f571b63f52480bcdd80abbd314810130960ed3b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f571b63f52480bcdd80abbd314810130960ed3b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f571b63f52480bcdd80abbd314810130960ed3b8", "patch": "@@ -1,3 +1,8 @@\n+2014-05-27  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* ira.c (commutative_operand): Adjust for change to recog_data.\n+\t[Missing from previous commit.]\n+\n 2014-05-27  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* system.h (TEST_BIT): New macro."}, {"sha": "076c53231f30548eb5ea840a18da21fbf5feacf7", "filename": "gcc/ira.c", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f571b63f52480bcdd80abbd314810130960ed3b8/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f571b63f52480bcdd80abbd314810130960ed3b8/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=f571b63f52480bcdd80abbd314810130960ed3b8", "patch": "@@ -1774,23 +1774,20 @@ setup_prohibited_mode_move_regs (void)\n static bool\n commutative_constraint_p (const char *str)\n {\n-  int curr_alt, c;\n-  bool ignore_p;\n+  int c;\n \n-  for (ignore_p = false, curr_alt = 0;;)\n+  alternative_mask enabled = recog_data.enabled_alternatives;\n+  for (;;)\n     {\n       c = *str;\n       if (c == '\\0')\n \tbreak;\n       str += CONSTRAINT_LEN (c, str);\n-      if (c == '#' || !recog_data.alternative_enabled_p[curr_alt])\n-\tignore_p = true;\n+      if (c == '#')\n+\tenabled &= ~ALTERNATIVE_BIT (0);\n       else if (c == ',')\n-\t{\n-\t  curr_alt++;\n-\t  ignore_p = false;\n-\t}\n-      else if (! ignore_p)\n+\tenabled >>= 1;\n+      else if (enabled & 1)\n \t{\n \t  /* Usually `%' is the first constraint character but the\n \t     documentation does not require this.  */"}]}