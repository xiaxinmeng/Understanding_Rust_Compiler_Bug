{"sha": "8ce18a29ef717f5920ebf5dc1d9e84570a1827d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNlMThhMjllZjcxN2Y1OTIwZWJmNWRjMWQ5ZTg0NTcwYTE4MjdkNA==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2021-04-01T18:57:44Z"}, "committer": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2021-08-24T14:14:44Z"}, "message": "rs6000: Add power8-vector builtins\n\n2021-04-01  Bill Schmidt  <wschmidt@linux.ibm.com>\n\ngcc/\n\t* config/rs6000/rs6000-builtin-new.def: Add power8-vector stanza.", "tree": {"sha": "ccb6ff3d59f1c2792cc25f2c22c2829cdfef756d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccb6ff3d59f1c2792cc25f2c22c2829cdfef756d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ce18a29ef717f5920ebf5dc1d9e84570a1827d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ce18a29ef717f5920ebf5dc1d9e84570a1827d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ce18a29ef717f5920ebf5dc1d9e84570a1827d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ce18a29ef717f5920ebf5dc1d9e84570a1827d4/comments", "author": null, "committer": null, "parents": [{"sha": "fce8a52d0aef5f0ef393f68d31669058e0ddfd71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fce8a52d0aef5f0ef393f68d31669058e0ddfd71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fce8a52d0aef5f0ef393f68d31669058e0ddfd71"}], "stats": {"total": 438, "additions": 438, "deletions": 0}, "files": [{"sha": "2a2c9136b6251b6a2434edd4f88c85c8067e7db5", "filename": "gcc/config/rs6000/rs6000-builtin-new.def", "status": "modified", "additions": 438, "deletions": 0, "changes": 438, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ce18a29ef717f5920ebf5dc1d9e84570a1827d4/gcc%2Fconfig%2Frs6000%2Frs6000-builtin-new.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ce18a29ef717f5920ebf5dc1d9e84570a1827d4/gcc%2Fconfig%2Frs6000%2Frs6000-builtin-new.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtin-new.def?ref=8ce18a29ef717f5920ebf5dc1d9e84570a1827d4", "patch": "@@ -2000,3 +2000,441 @@\n \n   const unsigned long long __builtin_divdeu (unsigned long long, unsigned long long);\n     DIVDEU diveu_di {}\n+\n+\n+; Power8 vector built-ins.\n+[power8-vector]\n+  const vsll __builtin_altivec_abs_v2di (vsll);\n+    ABS_V2DI absv2di2 {}\n+\n+  const vsc __builtin_altivec_bcddiv10_v16qi (vsc);\n+    BCDDIV10_V16QI bcddiv10_v16qi {}\n+\n+  const vsc __builtin_altivec_bcdmul10_v16qi (vsc);\n+    BCDMUL10_V16QI bcdmul10_v16qi {}\n+\n+  const vsc __builtin_altivec_eqv_v16qi (vsc, vsc);\n+    EQV_V16QI eqvv16qi3 {}\n+\n+  const vuc __builtin_altivec_eqv_v16qi_uns (vuc, vuc);\n+    EQV_V16QI_UNS eqvv16qi3 {}\n+\n+  const vsq __builtin_altivec_eqv_v1ti (vsq, vsq);\n+    EQV_V1TI eqvv1ti3 {}\n+\n+  const vuq __builtin_altivec_eqv_v1ti_uns (vuq, vuq);\n+    EQV_V1TI_UNS eqvv1ti3 {}\n+\n+  const vd __builtin_altivec_eqv_v2df (vd, vd);\n+    EQV_V2DF eqvv2df3 {}\n+\n+  const vsll __builtin_altivec_eqv_v2di (vsll, vsll);\n+    EQV_V2DI eqvv2di3 {}\n+\n+  const vull __builtin_altivec_eqv_v2di_uns (vull, vull);\n+    EQV_V2DI_UNS eqvv2di3 {}\n+\n+  const vf __builtin_altivec_eqv_v4sf (vf, vf);\n+    EQV_V4SF eqvv4sf3 {}\n+\n+  const vsi __builtin_altivec_eqv_v4si (vsi, vsi);\n+    EQV_V4SI eqvv4si3 {}\n+\n+  const vui __builtin_altivec_eqv_v4si_uns (vui, vui);\n+    EQV_V4SI_UNS eqvv4si3 {}\n+\n+  const vss __builtin_altivec_eqv_v8hi (vss, vss);\n+    EQV_V8HI eqvv8hi3 {}\n+\n+  const vus __builtin_altivec_eqv_v8hi_uns (vus, vus);\n+    EQV_V8HI_UNS eqvv8hi3 {}\n+\n+  const vsc __builtin_altivec_nand_v16qi (vsc, vsc);\n+    NAND_V16QI nandv16qi3 {}\n+\n+  const vuc __builtin_altivec_nand_v16qi_uns (vuc, vuc);\n+    NAND_V16QI_UNS nandv16qi3 {}\n+\n+  const vsq __builtin_altivec_nand_v1ti (vsq, vsq);\n+    NAND_V1TI nandv1ti3 {}\n+\n+  const vuq __builtin_altivec_nand_v1ti_uns (vuq, vuq);\n+    NAND_V1TI_UNS nandv1ti3 {}\n+\n+  const vd __builtin_altivec_nand_v2df (vd, vd);\n+    NAND_V2DF nandv2df3 {}\n+\n+  const vsll __builtin_altivec_nand_v2di (vsll, vsll);\n+    NAND_V2DI nandv2di3 {}\n+\n+  const vull __builtin_altivec_nand_v2di_uns (vull, vull);\n+    NAND_V2DI_UNS nandv2di3 {}\n+\n+  const vf __builtin_altivec_nand_v4sf (vf, vf);\n+    NAND_V4SF nandv4sf3 {}\n+\n+  const vsi __builtin_altivec_nand_v4si (vsi, vsi);\n+    NAND_V4SI nandv4si3 {}\n+\n+  const vui __builtin_altivec_nand_v4si_uns (vui, vui);\n+    NAND_V4SI_UNS nandv4si3 {}\n+\n+  const vss __builtin_altivec_nand_v8hi (vss, vss);\n+    NAND_V8HI nandv8hi3 {}\n+\n+  const vus __builtin_altivec_nand_v8hi_uns (vus, vus);\n+    NAND_V8HI_UNS nandv8hi3 {}\n+\n+  const vsc __builtin_altivec_neg_v16qi (vsc);\n+    NEG_V16QI negv16qi2 {}\n+\n+  const vd __builtin_altivec_neg_v2df (vd);\n+    NEG_V2DF negv2df2 {}\n+\n+  const vsll __builtin_altivec_neg_v2di (vsll);\n+    NEG_V2DI negv2di2 {}\n+\n+  const vf __builtin_altivec_neg_v4sf (vf);\n+    NEG_V4SF negv4sf2 {}\n+\n+  const vsi __builtin_altivec_neg_v4si (vsi);\n+    NEG_V4SI negv4si2 {}\n+\n+  const vss __builtin_altivec_neg_v8hi (vss);\n+    NEG_V8HI negv8hi2 {}\n+\n+  const vsc __builtin_altivec_orc_v16qi (vsc, vsc);\n+    ORC_V16QI orcv16qi3 {}\n+\n+  const vuc __builtin_altivec_orc_v16qi_uns (vuc, vuc);\n+    ORC_V16QI_UNS orcv16qi3 {}\n+\n+  const vsq __builtin_altivec_orc_v1ti (vsq, vsq);\n+    ORC_V1TI orcv1ti3 {}\n+\n+  const vuq __builtin_altivec_orc_v1ti_uns (vuq, vuq);\n+    ORC_V1TI_UNS orcv1ti3 {}\n+\n+  const vd __builtin_altivec_orc_v2df (vd, vd);\n+    ORC_V2DF orcv2df3 {}\n+\n+  const vsll __builtin_altivec_orc_v2di (vsll, vsll);\n+    ORC_V2DI orcv2di3 {}\n+\n+  const vull __builtin_altivec_orc_v2di_uns (vull, vull);\n+    ORC_V2DI_UNS orcv2di3 {}\n+\n+  const vf __builtin_altivec_orc_v4sf (vf, vf);\n+    ORC_V4SF orcv4sf3 {}\n+\n+  const vsi __builtin_altivec_orc_v4si (vsi, vsi);\n+    ORC_V4SI orcv4si3 {}\n+\n+  const vui __builtin_altivec_orc_v4si_uns (vui, vui);\n+    ORC_V4SI_UNS orcv4si3 {}\n+\n+  const vss __builtin_altivec_orc_v8hi (vss, vss);\n+    ORC_V8HI orcv8hi3 {}\n+\n+  const vus __builtin_altivec_orc_v8hi_uns (vus, vus);\n+    ORC_V8HI_UNS orcv8hi3 {}\n+\n+  const vsc __builtin_altivec_vclzb (vsc);\n+    VCLZB clzv16qi2 {}\n+\n+  const vsll __builtin_altivec_vclzd (vsll);\n+    VCLZD clzv2di2 {}\n+\n+  const vss __builtin_altivec_vclzh (vss);\n+    VCLZH clzv8hi2 {}\n+\n+  const vsi __builtin_altivec_vclzw (vsi);\n+    VCLZW clzv4si2 {}\n+\n+  const vuc __builtin_altivec_vgbbd (vuc);\n+    VGBBD p8v_vgbbd {}\n+\n+  const vsq __builtin_altivec_vaddcuq (vsq, vsq);\n+    VADDCUQ altivec_vaddcuq {}\n+\n+  const vsq __builtin_altivec_vaddecuq (vsq, vsq, vsq);\n+    VADDECUQ altivec_vaddecuq {}\n+\n+  const vsq __builtin_altivec_vaddeuqm (vsq, vsq, vsq);\n+    VADDEUQM altivec_vaddeuqm {}\n+\n+  const vsll __builtin_altivec_vaddudm (vsll, vsll);\n+    VADDUDM addv2di3 {}\n+\n+  const vsq __builtin_altivec_vadduqm (vsq, vsq);\n+    VADDUQM altivec_vadduqm {}\n+\n+  const vsll __builtin_altivec_vbpermq (vsc, vsc);\n+    VBPERMQ altivec_vbpermq {}\n+\n+  const vsc __builtin_altivec_vbpermq2 (vsc, vsc);\n+    VBPERMQ2 altivec_vbpermq2 {}\n+\n+  const vsll __builtin_altivec_vmaxsd (vsll, vsll);\n+    VMAXSD smaxv2di3 {}\n+\n+  const vull __builtin_altivec_vmaxud (vull, vull);\n+    VMAXUD umaxv2di3 {}\n+\n+  const vsll __builtin_altivec_vminsd (vsll, vsll);\n+    VMINSD sminv2di3 {}\n+\n+  const vull __builtin_altivec_vminud (vull, vull);\n+    VMINUD uminv2di3 {}\n+\n+  const vd __builtin_altivec_vmrgew_v2df (vd, vd);\n+    VMRGEW_V2DF p8_vmrgew_v2df {}\n+\n+  const vsll __builtin_altivec_vmrgew_v2di (vsll, vsll);\n+    VMRGEW_V2DI p8_vmrgew_v2di {}\n+\n+  const vf __builtin_altivec_vmrgew_v4sf (vf, vf);\n+    VMRGEW_V4SF p8_vmrgew_v4sf {}\n+\n+  const vsi __builtin_altivec_vmrgew_v4si (vsi, vsi);\n+    VMRGEW_V4SI p8_vmrgew_v4si {}\n+\n+  const vd __builtin_altivec_vmrgow_v2df (vd, vd);\n+    VMRGOW_V2DF p8_vmrgow_v2df {}\n+\n+  const vsll __builtin_altivec_vmrgow_v2di (vsll, vsll);\n+    VMRGOW_V2DI p8_vmrgow_v2di {}\n+\n+  const vf __builtin_altivec_vmrgow_v4sf (vf, vf);\n+    VMRGOW_V4SF p8_vmrgow_v4sf {}\n+\n+  const vsi __builtin_altivec_vmrgow_v4si (vsi, vsi);\n+    VMRGOW_V4SI p8_vmrgow_v4si {}\n+\n+  const vsc __builtin_altivec_vpermxor (vsc, vsc, vsc);\n+    VPERMXOR altivec_vpermxor {}\n+\n+  const vsi __builtin_altivec_vpksdss (vsll, vsll);\n+    VPKSDSS altivec_vpksdss {}\n+\n+  const vsi __builtin_altivec_vpksdus (vsll, vsll);\n+    VPKSDUS altivec_vpksdus {}\n+\n+  const vsi __builtin_altivec_vpkudum (vsll, vsll);\n+    VPKUDUM altivec_vpkudum {}\n+\n+  const vsi __builtin_altivec_vpkudus (vsll, vsll);\n+    VPKUDUS altivec_vpkudus {}\n+\n+  const vsc __builtin_altivec_vpmsumb (vsc, vsc);\n+    VPMSUMB_A crypto_vpmsumb {}\n+\n+  const vsll __builtin_altivec_vpmsumd (vsll, vsll);\n+    VPMSUMD_A crypto_vpmsumd {}\n+\n+  const vss __builtin_altivec_vpmsumh (vss, vss);\n+    VPMSUMH_A crypto_vpmsumh {}\n+\n+  const vsi __builtin_altivec_vpmsumw (vsi, vsi);\n+    VPMSUMW_A crypto_vpmsumw {}\n+\n+  const vsc __builtin_altivec_vpopcntb (vsc);\n+    VPOPCNTB popcountv16qi2 {}\n+\n+  const vsll __builtin_altivec_vpopcntd (vsll);\n+    VPOPCNTD popcountv2di2 {}\n+\n+  const vss __builtin_altivec_vpopcnth (vss);\n+    VPOPCNTH popcountv8hi2 {}\n+\n+  const vsc __builtin_altivec_vpopcntub (vsc);\n+    VPOPCNTUB popcountv16qi2 {}\n+\n+  const vsll __builtin_altivec_vpopcntud (vsll);\n+    VPOPCNTUD popcountv2di2 {}\n+\n+  const vss __builtin_altivec_vpopcntuh (vss);\n+    VPOPCNTUH popcountv8hi2 {}\n+\n+  const vsi __builtin_altivec_vpopcntuw (vsi);\n+    VPOPCNTUW popcountv4si2 {}\n+\n+  const vsi __builtin_altivec_vpopcntw (vsi);\n+    VPOPCNTW popcountv4si2 {}\n+\n+  const vsll __builtin_altivec_vrld (vsll, vsll);\n+    VRLD vrotlv2di3 {}\n+\n+  const vsll __builtin_altivec_vsld (vsll, vsll);\n+    VSLD vashlv2di3 {}\n+\n+  const vsll __builtin_altivec_vsrad (vsll, vsll);\n+    VSRAD vashrv2di3 {}\n+\n+  const vsll __builtin_altivec_vsrd (vsll, vull);\n+    VSRD vlshrv2di3 {}\n+\n+  const vsq __builtin_altivec_vsubcuq (vsq, vsq);\n+    VSUBCUQ altivec_vsubcuq {}\n+\n+  const vsq __builtin_altivec_vsubecuq (vsq, vsq, vsq);\n+    VSUBECUQ altivec_vsubecuq {}\n+\n+  const vsq __builtin_altivec_vsubeuqm (vsq, vsq, vsq);\n+    VSUBEUQM altivec_vsubeuqm {}\n+\n+  const vsll __builtin_altivec_vsubudm (vsll, vsll);\n+    VSUBUDM subv2di3 {}\n+\n+  const vsq __builtin_altivec_vsubuqm (vsq, vsq);\n+    VSUBUQM altivec_vsubuqm {}\n+\n+  const vsll __builtin_altivec_vupkhsw (vsi);\n+    VUPKHSW altivec_vupkhsw {}\n+\n+  const vsll __builtin_altivec_vupklsw (vsi);\n+    VUPKLSW altivec_vupklsw {}\n+\n+  const vsq __builtin_bcdadd_v1ti (vsq, vsq, const int<1>);\n+    BCDADD_V1TI bcdadd_v1ti {}\n+\n+  const vsc __builtin_bcdadd_v16qi (vsc, vsc, const int<1>);\n+    BCDADD_V16QI bcdadd_v16qi {}\n+\n+  const signed int __builtin_bcdadd_eq_v1ti (vsq, vsq, const int<1>);\n+    BCDADD_EQ_V1TI bcdadd_eq_v1ti {}\n+\n+  const signed int __builtin_bcdadd_eq_v16qi (vsc, vsc, const int<1>);\n+    BCDADD_EQ_V16QI bcdadd_eq_v16qi {}\n+\n+  const signed int __builtin_bcdadd_gt_v1ti (vsq, vsq, const int<1>);\n+    BCDADD_GT_V1TI bcdadd_gt_v1ti {}\n+\n+  const signed int __builtin_bcdadd_gt_v16qi (vsc, vsc, const int<1>);\n+    BCDADD_GT_V16QI bcdadd_gt_v16qi {}\n+\n+  const signed int __builtin_bcdadd_lt_v1ti (vsq, vsq, const int<1>);\n+    BCDADD_LT_V1TI bcdadd_lt_v1ti {}\n+\n+  const signed int __builtin_bcdadd_lt_v16qi (vsc, vsc, const int<1>);\n+    BCDADD_LT_V16QI bcdadd_lt_v16qi {}\n+\n+  const signed int __builtin_bcdadd_ov_v1ti (vsq, vsq, const int<1>);\n+    BCDADD_OV_V1TI bcdadd_unordered_v1ti {}\n+\n+  const signed int __builtin_bcdadd_ov_v16qi (vsc, vsc, const int<1>);\n+    BCDADD_OV_V16QI bcdadd_unordered_v16qi {}\n+\n+  const signed int __builtin_bcdinvalid_v1ti (vsq);\n+    BCDINVALID_V1TI bcdinvalid_v1ti {}\n+\n+  const signed int __builtin_bcdinvalid_v16qi (vsc);\n+    BCDINVALID_V16QI bcdinvalid_v16qi {}\n+\n+  const vsq __builtin_bcdsub_v1ti (vsq, vsq, const int<1>);\n+    BCDSUB_V1TI bcdsub_v1ti {}\n+\n+  const vsc __builtin_bcdsub_v16qi (vsc, vsc, const int<1>);\n+    BCDSUB_V16QI bcdsub_v16qi {}\n+\n+  const signed int __builtin_bcdsub_eq_v1ti (vsq, vsq, const int<1>);\n+    BCDSUB_EQ_V1TI bcdsub_eq_v1ti {}\n+\n+  const signed int __builtin_bcdsub_eq_v16qi (vsc, vsc, const int<1>);\n+    BCDSUB_EQ_V16QI bcdsub_eq_v16qi {}\n+\n+  const signed int __builtin_bcdsub_ge_v1ti (vsq, vsq, const int<1>);\n+    BCDSUB_GE_V1TI bcdsub_ge_v1ti {}\n+\n+  const signed int __builtin_bcdsub_ge_v16qi (vsc, vsc, const int<1>);\n+    BCDSUB_GE_V16QI bcdsub_ge_v16qi {}\n+\n+  const signed int __builtin_bcdsub_gt_v1ti (vsq, vsq, const int<1>);\n+    BCDSUB_GT_V1TI bcdsub_gt_v1ti {}\n+\n+  const signed int __builtin_bcdsub_gt_v16qi (vsc, vsc, const int<1>);\n+    BCDSUB_GT_V16QI bcdsub_gt_v16qi {}\n+\n+  const signed int __builtin_bcdsub_le_v1ti (vsq, vsq, const int<1>);\n+    BCDSUB_LE_V1TI bcdsub_le_v1ti {}\n+\n+  const signed int __builtin_bcdsub_le_v16qi (vsc, vsc, const int<1>);\n+    BCDSUB_LE_V16QI bcdsub_le_v16qi {}\n+\n+  const signed int __builtin_bcdsub_lt_v1ti (vsq, vsq, const int<1>);\n+    BCDSUB_LT_V1TI bcdsub_lt_v1ti {}\n+\n+  const signed int __builtin_bcdsub_lt_v16qi (vsc, vsc, const int<1>);\n+    BCDSUB_LT_V16QI bcdsub_lt_v16qi {}\n+\n+  const signed int __builtin_bcdsub_ov_v1ti (vsq, vsq, const int<1>);\n+    BCDSUB_OV_V1TI bcdsub_unordered_v1ti {}\n+\n+  const signed int __builtin_bcdsub_ov_v16qi (vsc, vsc, const int<1>);\n+    BCDSUB_OV_V16QI bcdsub_unordered_v16qi {}\n+\n+  const vuc __builtin_crypto_vpermxor_v16qi (vuc, vuc, vuc);\n+    VPERMXOR_V16QI crypto_vpermxor_v16qi {}\n+\n+  const vull __builtin_crypto_vpermxor_v2di (vull, vull, vull);\n+    VPERMXOR_V2DI crypto_vpermxor_v2di {}\n+\n+  const vui __builtin_crypto_vpermxor_v4si (vui, vui, vui);\n+    VPERMXOR_V4SI crypto_vpermxor_v4si {}\n+\n+  const vus __builtin_crypto_vpermxor_v8hi (vus, vus, vus);\n+    VPERMXOR_V8HI crypto_vpermxor_v8hi {}\n+\n+  const vuc __builtin_crypto_vpmsumb (vuc, vuc);\n+    VPMSUMB crypto_vpmsumb {}\n+\n+  const vull __builtin_crypto_vpmsumd (vull, vull);\n+    VPMSUMD crypto_vpmsumd {}\n+\n+  const vus __builtin_crypto_vpmsumh (vus, vus);\n+    VPMSUMH crypto_vpmsumh {}\n+\n+  const vui __builtin_crypto_vpmsumw (vui, vui);\n+    VPMSUMW crypto_vpmsumw {}\n+\n+  const vf __builtin_vsx_float2_v2df (vd, vd);\n+    FLOAT2_V2DF float2_v2df {}\n+\n+  const vf __builtin_vsx_float2_v2di (vsll, vsll);\n+    FLOAT2_V2DI float2_v2di {}\n+\n+  const vsc __builtin_vsx_revb_v16qi (vsc);\n+    REVB_V16QI revb_v16qi {}\n+\n+  const vsq __builtin_vsx_revb_v1ti (vsq);\n+    REVB_V1TI revb_v1ti {}\n+\n+  const vd __builtin_vsx_revb_v2df (vd);\n+    REVB_V2DF revb_v2df {}\n+\n+  const vsll __builtin_vsx_revb_v2di (vsll);\n+    REVB_V2DI revb_v2di {}\n+\n+  const vf __builtin_vsx_revb_v4sf (vf);\n+    REVB_V4SF revb_v4sf {}\n+\n+  const vsi __builtin_vsx_revb_v4si (vsi);\n+    REVB_V4SI revb_v4si {}\n+\n+  const vss __builtin_vsx_revb_v8hi (vss);\n+    REVB_V8HI revb_v8hi {}\n+\n+  const vf __builtin_vsx_uns_float2_v2di (vsll, vsll);\n+    UNS_FLOAT2_V2DI uns_float2_v2di {}\n+\n+  const vsi __builtin_vsx_vsigned2_v2df (vd, vd);\n+    VEC_VSIGNED2_V2DF vsigned2_v2df {}\n+\n+  const vsi __builtin_vsx_vunsigned2_v2df (vd, vd);\n+    VEC_VUNSIGNED2_V2DF vunsigned2_v2df {}\n+\n+  const vf __builtin_vsx_xscvdpspn (double);\n+    XSCVDPSPN vsx_xscvdpspn {}\n+\n+  const double __builtin_vsx_xscvspdpn (vf);\n+    XSCVSPDPN vsx_xscvspdpn {}"}]}