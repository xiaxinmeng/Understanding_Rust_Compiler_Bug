{"sha": "5d384034f71e99c29422e761942cb365365b9e43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQzODQwMzRmNzFlOTljMjk0MjJlNzYxOTQyY2IzNjUzNjViOWU0Mw==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2006-05-21T20:48:30Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2006-05-21T20:48:30Z"}, "message": "Add forgot changelog:\n\n+2006-05-19  Daniel Berlin  <dberlin@dberlin.org>\n+            Kenneth Zadeck <zadeck@naturalbridge.com>\n+\n+       PR rtl-optimization/26855\n+\n+       * df-scan.c (mw_reg_pool, mw_link_pool): New allocation pools for\n+       multiword refs.\n+       (df_scan_alloc): Added code to properly handle multiword hard\n+       registers and add all_blocks parameter.\n+       (df_scan_free_internal, df_insn_refs_delete, df_ref_record): Added\n+       code to properly handle multiword hard registers.\n+       (df_rescan_blocks): Added code to remove deleted blocks from\n+       bitmap.\n+       (df_ref_create_structure, df_ref_record): Added code to properly\n+       handle subregs.\n+       (df_ref_record_1): Changed DF_REF_CLOBBER into DF_REF_MUST_CLOBBER\n+       and set DF_REF_PARTIAL.\n+       (df_defs_record): Changed DF_REF_CLOBBER into DF_REF_MUST_CLOBBER.\n+       (df_uses_record): Added DF_REF_PARTIAL for subreg. \n+       (df_scan_add_problem): Added flags parameter.\n+       (df_ref_create_structure): Changed switching structure.\n+       (df_bb_refs_record): Fixed case where duplicate artificial refs\n+       were created.  Changed location of flags.\n+       (df_record_entry_block_defs): Added code to make stack pointer\n+       live in entry block.  Refined cases where frame pointer is needed.\n+       Changed location of flags.\n+       (df_record_exit_block_uses, df_insn_refs_record): Changed location of flags.\n+       (df_set_state): Removed function.\n+       (df_grow_reg_info, df_reg_chain_unlink, df_ref_remove,\n+       df_insn_create_insn_record, df_insn_refs_delete, \n+       df_ref_create_structure): Formatting changes.  \n+       * df-core.c (df_mvs_dump, df_set_flags, df_clear_flags,\n+       df_delete_basic_block): New function.\n+       (df_init): Changed location of flags.\n+       (df_add_problem): Added flags parameter and the way flags are\n+       processed.\n+       (df_insn_uid_debug, df_ref_debug, debug_df_defno, debug_df_ref,\n+       debug_df_chain): Improved debugging output.\n+       (df_insn_debug, df_insn_uid_debug): Added multiword reg support.\n+       (df_refs_chain_dump): Removed df parameter.\n+       (df_iterative_dataflow): Added consistency check.\n+       (df_prune_to_subcfg): Made public.\n+       (df_analyze_problem): Added blocks_to_init parameter and made\n+       public.\n+       (df_ref_record, df_bb_refs_record, df_mark_reg, \n+        df_record_exit_block_uses): Whitespace changes.\n+       (df_dump): Whitespace changes.\n+       * df.h: Some reordering to remove forward references.\n+       (df_ref_flags.DF_REF_MW_HARDREG, DF_REF_PARTIAL,\n+       DF_REF_MUST_CLOBBER, DF_REF_MAY_CLOBBER): New fields.\n+       (df_ref_flags.DF_REF_CLOBBER): Deleted field.\n+       (dataflow.flags): New field.\n+       (df.flag): Deleted field.\n+       (df_alloc_function): Added additional bitmap parameter.\n+       (df_dependent_problem_function): New type.\n+       (df_problem.changeable_flags): New field.\n+       (df_ref_flags.DF_REF_DIES_AFTER_THIS_USE, DF_SCAN_INITIAL,\n+       DF_SCAN_GLOBAL, DF_SCAN_POST_ALLOC, df_state): Removed.\n+       (df_mw_hardreg): New struct.\n+       (DF_INSN_UID_MWS): New macro.\n+       (df_refs_chain_dump, df_ref_debug, df_chain_dump): Removed df\n+       parameter.\n+       (df_add_problem, df_ru_add_problem, df_rd_add_problem,\n+       df_lr_add_problem, df_ur_add_problem, df_urec_add_problem,\n+       df_ri_add_problem, df_scan_add_problem): Added flags parameter.\n+       (df_set_state): Removed function.\n+       (df_set_flags, df_clear_flags, df_delete_basic_block) New functions.\n+       * df-problems.c (df_chain_dump): Removed df parameter.\n+       (df_ru_alloc, df_rd_alloc, df_lr_alloc, df_ur_alloc,\n+       df_urec_alloc, df_chain_alloc, df_ri_alloc): Added all blocks\n+       parameter.\n+       (df_ru_alloc, df_rd_alloc): Now resets all blocks.\n+       (df_rd_bb_local_compute_process_def, df_ur_bb_local_compute,\n+       df_chain_create_bb, df_create_unused_note, df_ri_bb_compute):\n+       Split DF_REF_CLOBBER into DF_REF_MAY_CLOBBER and\n+       DF_REF_MUST_CLOBBER cases.\n+       (df_ru_bb_local_compute_process_def,\n+       df_rd_bb_local_compute_process_def, df_lr_bb_local_compute,\n+       df_lr_bb_local_compute, df_ur_bb_local_compute,\n+       df_chain_create_bb): Made subreg aware.\n+       (df_ru_bb_local_compute, df_rd_bb_local_compute,\n+       df_lr_bb_local_compute, df_lr_bb_local_compute,\n+       df_chain_create_bb): Cleanup to use proper macros.\n+       (df_ur_local_finalize, df_urec_local_finalize): Removed unnecessary\n+       code to fixup bitvectors.\n+       (df_ri_alloc): Cleared lifetime.\n+       (df_ignore_stack_reg, df_kill_notes, df_set_notes_for_mw,\n+       df_create_unused_note): New function.\n+       (df_ri_bb_compute, df_ri_compute): Added code to create/update\n+       REG_DEAD and REG_UNUSED notes as well as register information.\n+       (df_ru_dump, df_rd_dump, df_lr_dump, df_ur_dump, df_urec_dump,\n+       df_chains_dump): Fixed crash if problem was never run.\n+       (df_ru_add_problem, df_rd_add_problem, df_lr_add_problem,\n+       df_ur_add_problem, df_urec_add_problem, df_chain_add_problem,\n+       df_ri_add_problem): Processes flags in uniform manner.\n+       (df_ru_alloc, df_ru_local_compute, df_ru_confluence_n, df_ru_free,\n+       df_ru_dump, df_rd_local_compute, df_rd_confluence_n, df_rd_free,\n+       df_rd_dump, df_urec_free_bb_info): Formatting changes.\n+       (df_ru_free_bb_info, df_ru_bb_local_compute, df_ru_dump,\n+       df_rd_free_bb_info, df_rd_bb_local_compute_process_def,\n+       df_rd_bb_local_compute, df_rd_dump, df_lr_free_bb_info,\n+       df_lr_bb_local_compute, df_lr_local_compute, df_ur_free_bb_info,\n+       df_ur_dump, df_urec_free_bb_info, df_urec_dump,\n+       df_chain_create_bb, df_ri_bb_compute): Whitespace changes.\n+       * modulo-sched.c (sms_schedule): Added flag parameter to calls.\n+       * see.c (see_initialize_data): Ditto.\n+       * final.c (rest_of_clean_state) Added regstack_completed.\n+       * rtl.h (regstack_completed): Ditto.\n+       * reg-stack.c (regstack_completed): Ditto.\n+\n\nFrom-SVN: r113960", "tree": {"sha": "f7b175254796661ce47a01d14c24ae201de078a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7b175254796661ce47a01d14c24ae201de078a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d384034f71e99c29422e761942cb365365b9e43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d384034f71e99c29422e761942cb365365b9e43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d384034f71e99c29422e761942cb365365b9e43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d384034f71e99c29422e761942cb365365b9e43/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d29b7f640caa27026111db22f213952d8afef877", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d29b7f640caa27026111db22f213952d8afef877", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d29b7f640caa27026111db22f213952d8afef877"}], "stats": {"total": 110, "additions": 110, "deletions": 0}, "files": [{"sha": "4dc97fd987fb0f43df16949f9728d4e21f14f78c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 110, "deletions": 0, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d384034f71e99c29422e761942cb365365b9e43/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d384034f71e99c29422e761942cb365365b9e43/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d384034f71e99c29422e761942cb365365b9e43", "patch": "@@ -34,6 +34,116 @@\n \n \t* config/pa/pa-linux.h (STRING_ASM_OP): Prepend and append a tab.\n \n+2006-05-19  Daniel Berlin  <dberlin@dberlin.org>\n+            Kenneth Zadeck <zadeck@naturalbridge.com>\n+\n+\tPR rtl-optimization/26855\n+\n+\t* df-scan.c (mw_reg_pool, mw_link_pool): New allocation pools for\n+\tmultiword refs.\n+\t(df_scan_alloc): Added code to properly handle multiword hard\n+\tregisters and add all_blocks parameter.\n+\t(df_scan_free_internal, df_insn_refs_delete, df_ref_record): Added\n+\tcode to properly handle multiword hard registers.\n+\t(df_rescan_blocks): Added code to remove deleted blocks from\n+\tbitmap.\n+\t(df_ref_create_structure, df_ref_record): Added code to properly\n+\thandle subregs.\n+\t(df_ref_record_1): Changed DF_REF_CLOBBER into DF_REF_MUST_CLOBBER\n+\tand set DF_REF_PARTIAL.\n+\t(df_defs_record): Changed DF_REF_CLOBBER into DF_REF_MUST_CLOBBER.\n+\t(df_uses_record): Added DF_REF_PARTIAL for subreg. \n+\t(df_scan_add_problem): Added flags parameter.\n+\t(df_ref_create_structure): Changed switching structure.\n+\t(df_bb_refs_record): Fixed case where duplicate artificial refs\n+\twere created.  Changed location of flags.\n+\t(df_record_entry_block_defs): Added code to make stack pointer\n+\tlive in entry block.  Refined cases where frame pointer is needed.\n+\tChanged location of flags.\n+\t(df_record_exit_block_uses, df_insn_refs_record): Changed location of flags.\n+\t(df_set_state): Removed function.\n+\t(df_grow_reg_info, df_reg_chain_unlink, df_ref_remove,\n+\tdf_insn_create_insn_record, df_insn_refs_delete, \n+\tdf_ref_create_structure): Formatting changes.  \n+\t* df-core.c (df_mvs_dump, df_set_flags, df_clear_flags,\n+\tdf_delete_basic_block): New function.\n+\t(df_init): Changed location of flags.\n+\t(df_add_problem): Added flags parameter and the way flags are\n+\tprocessed.\n+\t(df_insn_uid_debug, df_ref_debug, debug_df_defno, debug_df_ref,\n+\tdebug_df_chain): Improved debugging output.\n+\t(df_insn_debug, df_insn_uid_debug): Added multiword reg support.\n+\t(df_refs_chain_dump): Removed df parameter.\n+\t(df_iterative_dataflow): Added consistency check.\n+\t(df_prune_to_subcfg): Made public.\n+\t(df_analyze_problem): Added blocks_to_init parameter and made\n+\tpublic.\n+\t(df_ref_record, df_bb_refs_record, df_mark_reg, \n+\t df_record_exit_block_uses): Whitespace changes.\n+\t(df_dump): Whitespace changes.\n+\t* df.h: Some reordering to remove forward references.\n+\t(df_ref_flags.DF_REF_MW_HARDREG, DF_REF_PARTIAL,\n+\tDF_REF_MUST_CLOBBER, DF_REF_MAY_CLOBBER): New fields.\n+\t(df_ref_flags.DF_REF_CLOBBER): Deleted field.\n+\t(dataflow.flags): New field.\n+\t(df.flag): Deleted field.\n+\t(df_alloc_function): Added additional bitmap parameter.\n+\t(df_dependent_problem_function): New type.\n+\t(df_problem.changeable_flags): New field.\n+\t(df_ref_flags.DF_REF_DIES_AFTER_THIS_USE, DF_SCAN_INITIAL,\n+\tDF_SCAN_GLOBAL, DF_SCAN_POST_ALLOC, df_state): Removed.\n+\t(df_mw_hardreg): New struct.\n+\t(DF_INSN_UID_MWS): New macro.\n+\t(df_refs_chain_dump, df_ref_debug, df_chain_dump): Removed df\n+\tparameter.\n+\t(df_add_problem, df_ru_add_problem, df_rd_add_problem,\n+\tdf_lr_add_problem, df_ur_add_problem, df_urec_add_problem,\n+\tdf_ri_add_problem, df_scan_add_problem): Added flags parameter.\n+\t(df_set_state): Removed function.\n+\t(df_set_flags, df_clear_flags, df_delete_basic_block) New functions.\n+\t* df-problems.c (df_chain_dump): Removed df parameter.\n+\t(df_ru_alloc, df_rd_alloc, df_lr_alloc, df_ur_alloc,\n+\tdf_urec_alloc, df_chain_alloc, df_ri_alloc): Added all blocks\n+\tparameter.\n+\t(df_ru_alloc, df_rd_alloc): Now resets all blocks.\n+\t(df_rd_bb_local_compute_process_def, df_ur_bb_local_compute,\n+\tdf_chain_create_bb, df_create_unused_note, df_ri_bb_compute):\n+\tSplit DF_REF_CLOBBER into DF_REF_MAY_CLOBBER and\n+\tDF_REF_MUST_CLOBBER cases.\n+\t(df_ru_bb_local_compute_process_def,\n+\tdf_rd_bb_local_compute_process_def, df_lr_bb_local_compute,\n+\tdf_lr_bb_local_compute, df_ur_bb_local_compute,\n+\tdf_chain_create_bb): Made subreg aware.\n+\t(df_ru_bb_local_compute, df_rd_bb_local_compute,\n+\tdf_lr_bb_local_compute, df_lr_bb_local_compute,\n+\tdf_chain_create_bb): Cleanup to use proper macros.\n+\t(df_ur_local_finalize, df_urec_local_finalize): Removed unnecessary\n+\tcode to fixup bitvectors.\n+\t(df_ri_alloc): Cleared lifetime.\n+\t(df_ignore_stack_reg, df_kill_notes, df_set_notes_for_mw,\n+\tdf_create_unused_note): New function.\n+\t(df_ri_bb_compute, df_ri_compute): Added code to create/update\n+\tREG_DEAD and REG_UNUSED notes as well as register information.\n+\t(df_ru_dump, df_rd_dump, df_lr_dump, df_ur_dump, df_urec_dump,\n+\tdf_chains_dump): Fixed crash if problem was never run.\n+\t(df_ru_add_problem, df_rd_add_problem, df_lr_add_problem,\n+\tdf_ur_add_problem, df_urec_add_problem, df_chain_add_problem,\n+\tdf_ri_add_problem): Processes flags in uniform manner.\n+\t(df_ru_alloc, df_ru_local_compute, df_ru_confluence_n, df_ru_free,\n+\tdf_ru_dump, df_rd_local_compute, df_rd_confluence_n, df_rd_free,\n+\tdf_rd_dump, df_urec_free_bb_info): Formatting changes.\n+\t(df_ru_free_bb_info, df_ru_bb_local_compute, df_ru_dump,\n+\tdf_rd_free_bb_info, df_rd_bb_local_compute_process_def,\n+\tdf_rd_bb_local_compute, df_rd_dump, df_lr_free_bb_info,\n+\tdf_lr_bb_local_compute, df_lr_local_compute, df_ur_free_bb_info,\n+\tdf_ur_dump, df_urec_free_bb_info, df_urec_dump,\n+\tdf_chain_create_bb, df_ri_bb_compute): Whitespace changes.\n+\t* modulo-sched.c (sms_schedule): Added flag parameter to calls.\n+\t* see.c (see_initialize_data): Ditto.\n+\t* final.c (rest_of_clean_state) Added regstack_completed.\n+\t* rtl.h (regstack_completed): Ditto.\n+\t* reg-stack.c (regstack_completed): Ditto.\n+\n 2006-05-19  Mike Stump  <mrs@apple.com>\n \n \t* c-tree.h (default_conversion): Remove."}]}