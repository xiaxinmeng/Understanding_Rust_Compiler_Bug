{"sha": "6e0eea31374c18e8456dd42e8052029107579312", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUwZWVhMzEzNzRjMThlODQ1NmRkNDJlODA1MjAyOTEwNzU3OTMxMg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2005-12-28T22:37:42Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2005-12-28T22:37:42Z"}, "message": "config.gcc (mt-*-*): Add --with-arch support.\n\n\t* config.gcc (mt-*-*): Add --with-arch support.\n\t(--with): Print accepted options on error.\n\t* config/mt/mt.h (OPTION_DEFAULT_SPECS): Define.\n\n\t* config/mt/mt.c (DEF_VEC_P(basic_block),\n\tDEF_VEC_ALLOC_P(basic_bloc,heap)): Remove from here.\n\nFrom-SVN: r109124", "tree": {"sha": "69734e74bcb1c8dd31ac374c9fccbf2c819fe104", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69734e74bcb1c8dd31ac374c9fccbf2c819fe104"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e0eea31374c18e8456dd42e8052029107579312", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e0eea31374c18e8456dd42e8052029107579312", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e0eea31374c18e8456dd42e8052029107579312", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e0eea31374c18e8456dd42e8052029107579312/comments", "author": null, "committer": null, "parents": [{"sha": "03345deb5e9e0b9c4442338366467a8050164a53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03345deb5e9e0b9c4442338366467a8050164a53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03345deb5e9e0b9c4442338366467a8050164a53"}], "stats": {"total": 40, "additions": 35, "deletions": 5}, "files": [{"sha": "c06baeea5e146cc7d3d015d24c37d1eea61a499a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0eea31374c18e8456dd42e8052029107579312/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0eea31374c18e8456dd42e8052029107579312/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e0eea31374c18e8456dd42e8052029107579312", "patch": "@@ -1,3 +1,12 @@\n+2005-12-28  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* config.gcc (mt-*-*): Add --with-arch support.\n+\t(--with): Print accepted options on error.\n+\t* config/mt/mt.h (OPTION_DEFAULT_SPECS): Define.\n+\n+\t* config/mt/mt.c (DEF_VEC_P(basic_block),\n+\tDEF_VEC_ALLOC_P(basic_bloc,heap)): Remove from here.\n+\n 2005-12-28  Daniel Berlin  <dberlin@dberlin.org>\n \n \tFix PR tree-optimization/25394"}, {"sha": "5e2216c50d20986cec4937cccc5ec4a2eb13d25b", "filename": "gcc/config.gcc", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0eea31374c18e8456dd42e8052029107579312/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0eea31374c18e8456dd42e8052029107579312/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=6e0eea31374c18e8456dd42e8052029107579312", "patch": "@@ -2669,6 +2669,25 @@ case \"${target}\" in\n \t\tesac\n \t\t;;\n \n+\tmt-*-*)\n+\t\tsupported_defaults=\"arch\"\n+\n+\t\tcase \"$with_arch\" in\n+\t\t\"\" \\\n+\t\t| ms1-64-001 \\\n+\t\t| ms1-16-002 \\\n+\t\t| ms1-16-003 \\\n+\t\t| ms2 \\\n+\t\t| \"\")\n+\t\t\t# OK\n+\t\t\t;;\n+\t\t*)\n+\t\t\techo \"Unknown arch used in --with-arch=$with_arch\" 1>&2\n+\t\t\texit 1\n+\t\t\t;;\n+\t\tesac\n+\t\t;;\n+\n \tpowerpc*-*-* | rs6000-*-*)\n \t\tsupported_defaults=\"cpu float tune\"\n \n@@ -2923,6 +2942,7 @@ do\n \t\t\t;;\n \t\t*)\n \t\t\techo \"This target does not support --with-$option.\" 2>&1\n+\t\t\techo \"Valid --with options are: $supported_defaults\" 2>&1\n \t\t\texit 1\n \t\t\t;;\n \t\tesac"}, {"sha": "2906e3c1573444630c8da94c9ea615b69b7345ea", "filename": "gcc/config/mt/mt.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0eea31374c18e8456dd42e8052029107579312/gcc%2Fconfig%2Fmt%2Fmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0eea31374c18e8456dd42e8052029107579312/gcc%2Fconfig%2Fmt%2Fmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmt%2Fmt.c?ref=6e0eea31374c18e8456dd42e8052029107579312", "patch": "@@ -1654,11 +1654,7 @@ void mt_add_loop (void)\n    filling.  */\n #define MAX_LOOP_LENGTH (200 * 4)\n \n-/* We need to keep a vector of basic blocks */\n-DEF_VEC_P (basic_block);\n-DEF_VEC_ALLOC_P (basic_block,heap);\n-\n-/* And a vector of loops */\n+/* We need to keep a vector of loops */\n typedef struct loop_info *loop_info;\n DEF_VEC_P (loop_info);\n DEF_VEC_ALLOC_P (loop_info,heap);"}, {"sha": "9764d7fc7392616a847dcb773bc3e39b35590dc7", "filename": "gcc/config/mt/mt.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0eea31374c18e8456dd42e8052029107579312/gcc%2Fconfig%2Fmt%2Fmt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0eea31374c18e8456dd42e8052029107579312/gcc%2Fconfig%2Fmt%2Fmt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmt%2Fmt.h?ref=6e0eea31374c18e8456dd42e8052029107579312", "patch": "@@ -38,6 +38,11 @@ enum epilogue_type\n extern enum processor_type mt_cpu;\n \n \f\n+/* Support for a compile-time default CPU, et cetera.  The rules are:\n+   --with-arch is ignored if -march is specified.  */\n+#define OPTION_DEFAULT_SPECS \\\n+  {\"arch\", \"%{!march=*:-march=%(VALUE)}\" }\n+\n /* A C string constant that tells the GCC driver program options to pass to\n    the assembler.  */\n #undef  ASM_SPEC"}]}