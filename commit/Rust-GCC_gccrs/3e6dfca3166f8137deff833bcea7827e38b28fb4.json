{"sha": "3e6dfca3166f8137deff833bcea7827e38b28fb4", "node_id": "C_kwDOANBUbNoAKDNlNmRmY2EzMTY2ZjgxMzdkZWZmODMzYmNlYTc4MjdlMzhiMjhmYjQ", "commit": {"author": {"name": "Faisal Abbas", "email": "90.abbasfaisal@gmail.com", "date": "2022-08-06T12:11:05Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-08-25T11:40:26Z"}, "message": "rust-constexpr.cc: port over cxx_eval_vector_conditional_expression", "tree": {"sha": "e437708889798b7b9c85c8fb1ec6155153043e6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e437708889798b7b9c85c8fb1ec6155153043e6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e6dfca3166f8137deff833bcea7827e38b28fb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e6dfca3166f8137deff833bcea7827e38b28fb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e6dfca3166f8137deff833bcea7827e38b28fb4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e6dfca3166f8137deff833bcea7827e38b28fb4/comments", "author": {"login": "abbasfaisal", "id": 9428333, "node_id": "MDQ6VXNlcjk0MjgzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/9428333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abbasfaisal", "html_url": "https://github.com/abbasfaisal", "followers_url": "https://api.github.com/users/abbasfaisal/followers", "following_url": "https://api.github.com/users/abbasfaisal/following{/other_user}", "gists_url": "https://api.github.com/users/abbasfaisal/gists{/gist_id}", "starred_url": "https://api.github.com/users/abbasfaisal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abbasfaisal/subscriptions", "organizations_url": "https://api.github.com/users/abbasfaisal/orgs", "repos_url": "https://api.github.com/users/abbasfaisal/repos", "events_url": "https://api.github.com/users/abbasfaisal/events{/privacy}", "received_events_url": "https://api.github.com/users/abbasfaisal/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbc514d024a232dacfe218706dd07dcf01a51314", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbc514d024a232dacfe218706dd07dcf01a51314", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbc514d024a232dacfe218706dd07dcf01a51314"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "14c2969dcba8523b61e07536c219e283ee60a8c9", "filename": "gcc/rust/backend/rust-constexpr.cc", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e6dfca3166f8137deff833bcea7827e38b28fb4/gcc%2Frust%2Fbackend%2Frust-constexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e6dfca3166f8137deff833bcea7827e38b28fb4/gcc%2Frust%2Fbackend%2Frust-constexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-constexpr.cc?ref=3e6dfca3166f8137deff833bcea7827e38b28fb4", "patch": "@@ -1233,6 +1233,46 @@ get_or_insert_ctor_field (tree ctor, tree index, int pos_hint = -1)\n     }\n }\n \n+// forked from gcc/cp/constexpr.cc cxx_eval_vector_conditional_expression\n+\n+/* Subroutine of cxx_eval_constant_expression.\n+   Attempt to evaluate vector condition expressions.  Unlike\n+   cxx_eval_conditional_expression, VEC_COND_EXPR acts like a normal\n+   ternary arithmetics operation, where all 3 arguments have to be\n+   evaluated as constants and then folding computes the result from\n+   them.  */\n+\n+static tree\n+eval_vector_conditional_expression (const constexpr_ctx *ctx, tree t,\n+\t\t\t\t    bool *non_constant_p, bool *overflow_p)\n+{\n+  tree arg1\n+    = eval_constant_expression (ctx, TREE_OPERAND (t, 0),\n+\t\t\t\t/*lval*/ false, non_constant_p, overflow_p);\n+  VERIFY_CONSTANT (arg1);\n+  tree arg2\n+    = eval_constant_expression (ctx, TREE_OPERAND (t, 1),\n+\t\t\t\t/*lval*/ false, non_constant_p, overflow_p);\n+  VERIFY_CONSTANT (arg2);\n+  tree arg3\n+    = eval_constant_expression (ctx, TREE_OPERAND (t, 2),\n+\t\t\t\t/*lval*/ false, non_constant_p, overflow_p);\n+  VERIFY_CONSTANT (arg3);\n+  location_t loc = EXPR_LOCATION (t);\n+  tree type = TREE_TYPE (t);\n+  tree r = fold_ternary_loc (loc, VEC_COND_EXPR, type, arg1, arg2, arg3);\n+  if (r == NULL_TREE)\n+    {\n+      if (arg1 == TREE_OPERAND (t, 0) && arg2 == TREE_OPERAND (t, 1)\n+\t  && arg3 == TREE_OPERAND (t, 2))\n+\tr = t;\n+      else\n+\tr = build3_loc (loc, VEC_COND_EXPR, type, arg1, arg2, arg3);\n+    }\n+  VERIFY_CONSTANT (r);\n+  return r;\n+}\n+\n // forked from gcc/cp/constexpr.cc cxx_eval_bare_aggregate\n \n /* Subroutine of cxx_eval_constant_expression.\n@@ -1772,6 +1812,11 @@ eval_constant_expression (const constexpr_ctx *ctx, tree t, bool lval,\n \t\t\t\t       jump_target);\n       break;\n \n+    case VEC_COND_EXPR:\n+      r = eval_vector_conditional_expression (ctx, t, non_constant_p,\n+\t\t\t\t\t      overflow_p);\n+      break;\n+\n     case CONSTRUCTOR:\n       if (TREE_CONSTANT (t) && reduced_constant_expression_p (t))\n \t{"}]}