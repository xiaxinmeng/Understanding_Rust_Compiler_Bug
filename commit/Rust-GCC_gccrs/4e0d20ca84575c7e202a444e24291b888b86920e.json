{"sha": "4e0d20ca84575c7e202a444e24291b888b86920e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUwZDIwY2E4NDU3NWM3ZTIwMmE0NDRlMjQyOTFiODg4Yjg2OTIwZQ==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2009-05-06T09:25:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-05-06T09:25:37Z"}, "message": "gnat_ugn.texi, [...]: Add missing documentation for warnings flags.\n\n2009-05-06  Bob Duff  <duff@adacore.com>\n\n\t* gnat_ugn.texi, gnat_rm.texi: Add missing documentation for warnings\n\tflags.\n\nFrom-SVN: r147161", "tree": {"sha": "a5ddd40484c18c25ad4f6c3321f94e06eedd7848", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5ddd40484c18c25ad4f6c3321f94e06eedd7848"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e0d20ca84575c7e202a444e24291b888b86920e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e0d20ca84575c7e202a444e24291b888b86920e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e0d20ca84575c7e202a444e24291b888b86920e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e0d20ca84575c7e202a444e24291b888b86920e/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "117951856ed675917a561b15fbbc7283dd0bb018", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/117951856ed675917a561b15fbbc7283dd0bb018", "html_url": "https://github.com/Rust-GCC/gccrs/commit/117951856ed675917a561b15fbbc7283dd0bb018"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "84f5778d45d101e68049c4bab2714a343fed7f70", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0d20ca84575c7e202a444e24291b888b86920e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0d20ca84575c7e202a444e24291b888b86920e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4e0d20ca84575c7e202a444e24291b888b86920e", "patch": "@@ -1,3 +1,8 @@\n+2009-05-06  Bob Duff  <duff@adacore.com>\n+\n+\t* gnat_ugn.texi, gnat_rm.texi: Add missing documentation for warnings\n+\tflags.\n+\n 2009-05-06  Javier Miranda  <miranda@adacore.com>\n \n \t* sem_aggr.adb (Valid_Ancestor_Type): Add support for C++ constructors."}, {"sha": "229b7a60c25cceb717c134e2f47fd6eb59f2d6f1", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0d20ca84575c7e202a444e24291b888b86920e/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0d20ca84575c7e202a444e24291b888b86920e/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=4e0d20ca84575c7e202a444e24291b888b86920e", "patch": "@@ -5147,13 +5147,16 @@ A    turn off all optional warnings\n .A   turn off warnings for failing assertions\n b    turn on warnings for bad fixed value (not multiple of small)\n B*   turn off warnings for bad fixed value (not multiple of small)\n+.b*  turn on warnings for biased representation\n+.B   turn off warnings for biased representation\n c    turn on warnings for constant conditional\n C*   turn off warnings for constant conditional\n .c   turn on warnings for unrepped components\n .C*  turn off warnings for unrepped components\n d    turn on warnings for implicit dereference\n D*   turn off warnings for implicit dereference\n e    treat all warnings as errors\n+.e   turn on every optional warning\n f    turn on warnings for unreferenced formal\n F*   turn off warnings for unreferenced formal\n g*   turn on warnings for unrecognized pragma\n@@ -5177,6 +5180,8 @@ O    turn off warnings for address clause overlay\n .O*  turn off warnings for out parameters assigned but not read\n p    turn on warnings for ineffective pragma Inline in frontend\n P*   turn off warnings for ineffective pragma Inline in frontend\n+.p   turn on warnings for parameter ordering\n+.P*  turn off warnings for parameter ordering\n q*   turn on warnings for questionable missing parentheses\n Q    turn off warnings for questionable missing parentheses\n r    turn on warnings for redundant construct\n@@ -5192,6 +5197,8 @@ v*   turn on warnings for unassigned variable\n V    turn off warnings for unassigned variable\n w*   turn on warnings for wrong low bound assumption\n W    turn off warnings for wrong low bound assumption\n+.w   turn on warnings for unnecessary Warnings Off pragmas\n+.W*  turn off warnings for unnecessary Warnings Off pragmas\n x*   turn on warnings for export/import\n X    turn off warnings for export/import\n .x   turn on warnings for non-local exceptions"}, {"sha": "3cf58680c6b888c27fcb6c321413b6788a7f9eb1", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0d20ca84575c7e202a444e24291b888b86920e/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0d20ca84575c7e202a444e24291b888b86920e/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=4e0d20ca84575c7e202a444e24291b888b86920e", "patch": "@@ -3345,11 +3345,12 @@ In this case the components DT inherited from the C++ side must be\n initialized by a C++ constructor, and the additional Ada components\n of type DT are initialized by GNAT. The initialization of such an\n object is done either by default, or by means of a function returning\n-an aggregate of type DT.\n+an aggregate of type DT, or by means of an extended aggregate.\n \n @smallexample @c ada\n   Obj5 : DT;\n   Obj6 : DT := Function_Returning_DT (50);\n+  Obj7 : DT := (Constructor (30,40) with C_Value => 50);\n @end smallexample\n \n The declaration of @code{Obj5} invokes the default constructors: the\n@@ -3381,21 +3382,21 @@ non-default C++ constructors specified for the imported components.\n For example:\n \n @smallexample @c ada\n-  Obj7 : Rec2 (40);\n+  Obj8 : Rec2 (40);\n @end smallexample\n \n Using Ada 2005 we can use limited aggregates to initialize an object\n invoking C++ constructors that differ from those specified in the type\n declarations. For example:\n \n @smallexample @c ada\n-  Obj8 : Rec2 := (Rec => (Data1 => Constructor (15, 16),\n+  Obj9 : Rec2 := (Rec => (Data1 => Constructor (15, 16),\n                           others => <>),\n                   others => <>);\n @end smallexample\n \n The above declaration uses an Ada 2005 limited aggregate to\n-initialize @code{Obj8}, and the C++ constructor that has two integer\n+initialize @code{Obj9}, and the C++ constructor that has two integer\n arguments is invoked to initialize the @code{Data1} component instead\n of the constructor specified in the declaration of type @code{Rec1}. In\n Ada 2005 the box in the aggregate indicates that unspecified components\n@@ -5489,6 +5490,20 @@ The default is that warnings for redundant constructs are not given.\n @cindex @option{-gnatwR} (@command{gcc})\n This switch suppresses warnings for redundant constructs.\n \n+@item -gnatw.r\n+@emph{Activate warnings for object renaming function.}\n+@cindex @option{-gnatw.r} (@command{gcc})\n+This switch activates warnings for an object renaming that renames a\n+function call, which is equivalent to a constant declaration (as\n+opposed to renaming the function itself).  The default is that these\n+warnings are given.  This warning can also be turned on using\n+@option{-gnatwa}.\n+\n+@item -gnatw.R\n+@emph{Suppress warnings for object renaming function.}\n+@cindex @option{-gnatwT} (@command{gcc})\n+This switch suppresses warnings for object renaming function.\n+\n @item -gnatws\n @emph{Suppress all warnings.}\n @cindex @option{-gnatws} (@command{gcc})"}]}