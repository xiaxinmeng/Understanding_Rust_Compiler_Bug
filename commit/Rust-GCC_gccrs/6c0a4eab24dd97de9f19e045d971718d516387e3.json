{"sha": "6c0a4eab24dd97de9f19e045d971718d516387e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMwYTRlYWIyNGRkOTdkZTlmMTllMDQ1ZDk3MTcxOGQ1MTYzODdlMw==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2001-06-21T00:03:48Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2001-06-21T00:03:48Z"}, "message": "c-tree.texi, [...]: Consistently use \"front end\" and \"back end\" as nouns and \"front-end\" and...\n\n\t* doc/c-tree.texi, doc/contrib.texi, doc/extend.texi,\n\tdoc/gcc.texi, doc/install-old.texi, doc/install.texi,\n\tdoc/invoke.texi, doc/rtl.texi: Consistently use \"front end\" and\n\t\"back end\" as nouns and \"front-end\" and \"back-end\" as adjectives.\n\nFrom-SVN: r43479", "tree": {"sha": "43efbb988a673849f67b78d80a9342d1dda12331", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43efbb988a673849f67b78d80a9342d1dda12331"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c0a4eab24dd97de9f19e045d971718d516387e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c0a4eab24dd97de9f19e045d971718d516387e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c0a4eab24dd97de9f19e045d971718d516387e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c0a4eab24dd97de9f19e045d971718d516387e3/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86e5b1b905ab077168902d6a7b62c51678f38d4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86e5b1b905ab077168902d6a7b62c51678f38d4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86e5b1b905ab077168902d6a7b62c51678f38d4f"}], "stats": {"total": 101, "additions": 54, "deletions": 47}, "files": [{"sha": "8012e80508c2c2707a88d437950b7260aed9e94b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0a4eab24dd97de9f19e045d971718d516387e3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0a4eab24dd97de9f19e045d971718d516387e3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c0a4eab24dd97de9f19e045d971718d516387e3", "patch": "@@ -1,3 +1,10 @@\n+2001-06-21  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* doc/c-tree.texi, doc/contrib.texi, doc/extend.texi,\n+\tdoc/gcc.texi, doc/install-old.texi, doc/install.texi,\n+\tdoc/invoke.texi, doc/rtl.texi: Consistently use \"front end\" and\n+\t\"back end\" as nouns and \"front-end\" and \"back-end\" as adjectives.\n+\n Wed Jun 20 21:53:35 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* predict.c (estimate_probability): Fix loop bounds."}, {"sha": "a67b0ca2c2549d245cc5aaf1b5e37c1577bc97c3", "filename": "gcc/doc/c-tree.texi", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0a4eab24dd97de9f19e045d971718d516387e3/gcc%2Fdoc%2Fc-tree.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0a4eab24dd97de9f19e045d971718d516387e3/gcc%2Fdoc%2Fc-tree.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fc-tree.texi?ref=6c0a4eab24dd97de9f19e045d971718d516387e3", "patch": "@@ -8,7 +8,7 @@\n @c ---------------------------------------------------------------------\n \n @node Trees\n-@chapter Trees: The intermediate representation used by the C and C++ front-ends\n+@chapter Trees: The intermediate representation used by the C and C++ front ends\n @cindex Trees\n @cindex C/C++ Internal Representation\n \n@@ -18,7 +18,7 @@ source program, GCC parses the program, performs semantic analysis\n (including the generation of error messages), and then produces the\n internal representation described here.  This representation contains a\n complete representation for the entire translation unit provided as\n-input to the front-end.  This representation is then typically processed\n+input to the front end.  This representation is then typically processed\n by a code-generator in order to produce machine code, but could also be\n used in the creation of source browsers, intelligent editors, automatic\n documentation generators, interpreters, and any other programs needing\n@@ -28,22 +28,22 @@ This chapter explains the internal representation.  In particular, it\n documents the internal representation for C and C++ source\n constructs, and the macros, functions, and variables that can be used to\n access these constructs.  The C++ representation which is largely a superset\n-of the representation used in the C front-end.  There is only one\n-construct used in C that does not appear in the C++ front-end and that\n+of the representation used in the C front end.  There is only one\n+construct used in C that does not appear in the C++ front end and that\n is the GNU ``nested function'' extension.  Many of the macros documented\n here do not apply in C because the corresponding language constructs do\n not appear in C.\n \n-If you are developing a ``back-end'', be it is a code-generator or some\n+If you are developing a ``back end'', be it is a code-generator or some\n other tool, that uses this representation, you may occasionally find\n that you need to ask questions not easily answered by the functions and\n macros available here.  If that situation occurs, it is quite likely\n that GCC already supports the functionality you desire, but that the\n interface is simply not documented here.  In that case, you should ask\n the GCC maintainers (via mail to @email{gcc@@gcc.gnu.org}) about\n documenting the functionality you require.  Similarly, if you find\n-yourself writing functions that do not deal directly with your back-end,\n-but instead might be useful to other people using the GCC front-end, you\n+yourself writing functions that do not deal directly with your back end,\n+but instead might be useful to other people using the GCC front end, you\n should submit your patches for inclusion in GCC.\n \n @menu\n@@ -134,7 +134,7 @@ The @code{error_mark_node} is a special tree.  Its tree code is\n the usual practice is to compare the tree against\n @code{error_mark_node}.  (This test is just a test for pointer\n equality.)  If an error has occurred during front-end processing the\n-flag @code{errorcount} will be set.  If the front-end has encountered\n+flag @code{errorcount} will be set.  If the front end has encountered\n code it cannot handle, it will issue a message to the user and set\n @code{sorrycount}.  When these flags are set, any macro or function\n which normally returns a tree of a particular kind may instead return\n@@ -144,16 +144,16 @@ erroneous code, you must be prepared to deal with the\n \n Occasionally, a particular tree slot (like an operand to an expression,\n or a particular field in a declaration) will be referred to as\n-``reserved for the back-end.''  These slots are used to store RTL when\n-the tree is converted to RTL for use by the GCC back-end.  However, if\n-that process is not taking place (e.g., if the front-end is being hooked\n+``reserved for the back end.''  These slots are used to store RTL when\n+the tree is converted to RTL for use by the GCC back end.  However, if\n+that process is not taking place (e.g., if the front end is being hooked\n up to an intelligent editor), then those slots may be used by the\n-back-end presently in use.\n+back end presently in use.\n \n If you encounter situations that do not match this documentation, such\n as tree nodes of types not mentioned here, or macros documented to\n return entities of a particular kind that instead return entities of\n-some different kind, you have found a bug, either in the front-end or in\n+some different kind, you have found a bug, either in the front end or in\n the documentation.  Please report these bugs as you would any other\n bug.\n \n@@ -677,7 +677,7 @@ If there are no declarations, this function will return\n Although most entries on this list will be declarations,\n @code{TREE_LIST} nodes may also appear.  In this case, the\n @code{TREE_VALUE} will be an @code{OVERLOAD}.  The value of the\n-@code{TREE_PURPOSE} is unspecified; back-ends should ignore this value.\n+@code{TREE_PURPOSE} is unspecified; back ends should ignore this value.\n As with the other kinds of declarations returned by\n @code{cp_namespace_decls}, the @code{TREE_CHAIN} will point to the next\n declaration in this list.\n@@ -736,7 +736,7 @@ object.\n \n The @code{TYPE_VFIELD} is a compiler-generated field used to point to\n virtual function tables.  It may or may not appear on the\n-@code{TYPE_FIELDS} list.  However, back-ends should handle the\n+@code{TYPE_FIELDS} list.  However, back ends should handle the\n @code{TYPE_VFIELD} just like all the entries on the @code{TYPE_FIELDS}\n list.\n \n@@ -978,7 +978,7 @@ These nodes are used to represent class, function, and variable (static\n data member) templates.  The @code{DECL_TEMPLATE_SPECIALIZATIONS} are a\n @code{TREE_LIST}.  The @code{TREE_VALUE} of each node in the list is a\n @code{TEMPLATE_DECL}s or @code{FUNCTION_DECL}s representing\n-specializations (including instantiations) of this template.  Back-ends\n+specializations (including instantiations) of this template.  Back ends\n can safely ignore @code{TEMPLATE_DECL}s, but should examine\n @code{FUNCTION_DECL} nodes on the specializations list just as they\n would ordinary @code{FUNCTION_DECL} nodes.\n@@ -990,7 +990,7 @@ contains partial specializations of the class.\n \n @item USING_DECL\n \n-Back-ends can safely ignore these nodes.\n+Back ends can safely ignore these nodes.\n \n @end table\n \n@@ -1044,12 +1044,12 @@ representation indicates that the GNU nested function extension is in\n use.  For details on the semantics of nested functions, see the GCC\n Manual.  The nested function can refer to local variables in its\n containing function.  Such references are not explicitly marked in the\n-tree structure; back-ends must look at the @code{DECL_CONTEXT} for the\n+tree structure; back ends must look at the @code{DECL_CONTEXT} for the\n referenced @code{VAR_DECL}.  If the @code{DECL_CONTEXT} for the\n referenced @code{VAR_DECL} is not the same as the function currently\n being processed, and neither @code{DECL_EXTERNAL} nor @code{DECL_STATIC}\n hold, then the reference is to a local variable in a containing\n-function, and the back-end must take appropriate action.\n+function, and the back end must take appropriate action.\n \n @menu\n * Function Basics::     Function names, linkage, and so forth.\n@@ -1103,8 +1103,8 @@ This macro returns the mangled name of the function, also an\n on systems that prefix all identifiers with underscores.  The mangled\n name is computed in the same way on all platforms; if special processing\n is required to deal with the object file format used on a particular\n-platform, it is the responsibility of the back-end to perform those\n-modifications.  (Of course, the back-end should not modify\n+platform, it is the responsibility of the back end to perform those\n+modifications.  (Of course, the back end should not modify\n @code{DECL_ASSEMBLER_NAME} itself.)\n \n @item DECL_EXTERNAL\n@@ -1325,7 +1325,7 @@ This predicate holds if the function an overloaded\n @findex WHILE_COND\n \n A function that has a definition in the current translation unit will\n-have a non-NULL @code{DECL_INITIAL}.  However, back-ends should not make\n+have a non-NULL @code{DECL_INITIAL}.  However, back ends should not make\n use of the particular value given by @code{DECL_INITIAL}.\n \n The @code{DECL_SAVED_TREE} macro will give the complete body of the\n@@ -1460,7 +1460,7 @@ The first value will be @code{CASE_LOW}, while the second will be\n \n Used to represent an action that should take place upon exit from the\n enclosing scope.  Typically, these actions are calls to destructors for\n-local objects, but back-ends cannot rely on this fact.  If these nodes\n+local objects, but back ends cannot rely on this fact.  If these nodes\n are in fact representing such destructors, @code{CLEANUP_DECL} will be\n the @code{VAR_DECL} destroyed.  Otherwise, @code{CLEANUP_DECL} will be\n @code{NULL_TREE}.  In any case, the @code{CLEANUP_EXPR} is the\n@@ -1603,7 +1603,7 @@ scope; if @code{SCOPE_END_P} holds this statement represents the end of\n a scope.  On exit from a scope, all cleanups from @code{CLEANUP_STMT}s\n occurring in the scope must be run, in reverse order to the order in\n which they were encountered.  If @code{SCOPE_NULLIFIED_P} or\n-@code{SCOPE_NO_CLEANUPS_P} holds of the scope, back-ends should behave\n+@code{SCOPE_NO_CLEANUPS_P} holds of the scope, back ends should behave\n as if the @code{SCOPE_STMT} were not present at all.\n \n @item SUBOBJECT\n@@ -1745,10 +1745,10 @@ same type that would be given the expression in the original program.\n \n In what follows, some nodes that one might expect to always have type\n @code{bool} are documented to have either integral or boolean type.  At\n-some point in the future, the C front-end may also make use of this same\n+some point in the future, the C front end may also make use of this same\n intermediate representation, and at this point these nodes will\n certainly have integral type.  The previous sentence is not meant to\n-imply that the C++ front-end does not or will not give these nodes\n+imply that the C++ front end does not or will not give these nodes\n integral type.\n \n Below, we list the various kinds of expression nodes.  Except where\n@@ -1927,7 +1927,7 @@ of complex numbers (their sole argument).\n \n @item NON_LVALUE_EXPR\n These nodes indicate that their one and only operand is not an lvalue.\n-A back-end can treat these identically to the single operand.\n+A back end can treat these identically to the single operand.\n \n @item NOP_EXPR\n These nodes are used to represent conversions that do not require any\n@@ -1954,7 +1954,7 @@ an expression for the code that should be executed to throw the\n exception.  However, there is one implicit action not represented in\n that expression; namely the call to @code{__throw}.  This function takes\n no arguments.  If @code{setjmp}/@code{longjmp} exceptions are used, the\n-function @code{__sjthrow} is called instead.  The normal GCC back-end\n+function @code{__sjthrow} is called instead.  The normal GCC back end\n uses the function @code{emit_throw} to generate this code; you can\n examine this function to see what needs to be done.\n \n@@ -1987,7 +1987,7 @@ boolean or integral type.\n @itemx TRUTH_XOR_EXPR\n These nodes represent logical and, logical or, and logical exclusive or.\n They are strict; both arguments are always evaluated.  There are no\n-corresponding operators in C or C++, but the front-end will sometimes\n+corresponding operators in C or C++, but the front end will sometimes\n generate these expressions anyhow, if it can tell that strictness does\n not matter.\n \n@@ -2157,7 +2157,7 @@ performed immediately after the expression is evaluated.\n \n @item CONSTRUCTOR\n These nodes represent the brace-enclosed initializers for a structure or\n-array.  The first operand is reserved for use by the back-end.  The\n+array.  The first operand is reserved for use by the back end.  The\n second operand is a @code{TREE_LIST}.  If the @code{TREE_TYPE} of the\n @code{CONSTRUCTOR} is a @code{RECORD_TYPE} or @code{UNION_TYPE}, then\n the @code{TREE_PURPOSE} of each node in the @code{TREE_LIST} will be a"}, {"sha": "a8c74743bbb065730afcaa6784ebb784a2d7adf7", "filename": "gcc/doc/contrib.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0a4eab24dd97de9f19e045d971718d516387e3/gcc%2Fdoc%2Fcontrib.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0a4eab24dd97de9f19e045d971718d516387e3/gcc%2Fdoc%2Fcontrib.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcontrib.texi?ref=6c0a4eab24dd97de9f19e045d971718d516387e3", "patch": "@@ -28,7 +28,7 @@ the Intel 80387 register stack.\n Alasdair Baird for various bugfixes.\n \n @item\n-Gerald Baumgartner added the signature extension to the C++ front-end.\n+Gerald Baumgartner added the signature extension to the C++ front end.\n \n @item\n Neil Booth for various work on cpplib.\n@@ -282,7 +282,7 @@ Kriang Lerdsuwanakij for improvements to demangler and various c++ fixes.\n \n @item\n Warren Levy major work on libgcj (Java Runtime Library) and random\n-work on the Java front-end.\n+work on the Java front end.\n \n @item\n Alain Lichnewsky ported GCC to the Mips cpu."}, {"sha": "f97f9abd986611cc279fabfc60b779786ff8fff3", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0a4eab24dd97de9f19e045d971718d516387e3/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0a4eab24dd97de9f19e045d971718d516387e3/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=6c0a4eab24dd97de9f19e045d971718d516387e3", "patch": "@@ -2394,7 +2394,7 @@ attributes are currently defined for variables: @code{aligned},\n @code{transparent_union}, @code{unused}, and @code{weak}.  Some other\n attributes are defined for variables on particular target systems.  Other\n attributes are available for functions (@pxref{Function Attributes}) and\n-for types (@pxref{Type Attributes}).  Other front-ends might define more\n+for types (@pxref{Type Attributes}).  Other front ends might define more\n attributes (@pxref{C++ Extensions,,Extensions to the C++ Language}).\n \n You may also specify attributes with @samp{__} preceding and following"}, {"sha": "1fe706640722b57b75755fd0ae7fdccc93c82e97", "filename": "gcc/doc/gcc.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0a4eab24dd97de9f19e045d971718d516387e3/gcc%2Fdoc%2Fgcc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0a4eab24dd97de9f19e045d971718d516387e3/gcc%2Fdoc%2Fgcc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcc.texi?ref=6c0a4eab24dd97de9f19e045d971718d516387e3", "patch": "@@ -42,12 +42,12 @@\n @c anything else?                       --mew 10feb93\n \n @c For consistency, use the following:\n+@c - \"back end\" as a noun, \"back-end\" as an adjective.\n @c - \"bit-field\" not \"bitfield\" or \"bit field\" (following the C and C++\n @c   standards).\n @c - \"built-in\" as an adjective (\"built-in function\"), or sometimes\n @c   \"built in\", not \"builtin\" (which isn't a word).\n-@c - \"front end\" as a noun, \"front-end\" as an adjective (not yet\n-@c   consistently followed).\n+@c - \"front end\" as a noun, \"front-end\" as an adjective.\n \n @macro gcctabopt{body}\n @code{\\body\\}\n@@ -263,7 +263,7 @@ bugs.  It corresponds to GCC version 3.1.\n * Portability::     Goals of GCC's portability features.\n * Interface::       Function-call interface of GCC output.\n * Passes::          Order of passes, what they do, and what each file is for.\n-* Trees::           The source representation used by the C and C++ front-ends.\n+* Trees::           The source representation used by the C and C++ front ends.\n * RTL::             The intermediate representation that most passes work on.\n * Machine Desc::    How to write machine description instruction patterns.\n * Target Macros::   How to write the machine description C macros.\n@@ -316,7 +316,7 @@ compiler.  For example, we refer to the optimization options as\n affecting the behavior of ``GCC'' or sometimes just ``the compiler''.\n \n Front ends for other languages, such as Ada 95 and Pascal exist but\n-have not yet been integrated into GCC. These front-ends, like that for C++,\n+have not yet been integrated into GCC. These front ends, like that for C++,\n are built in subdirectories of GCC and link to it.  The result is an\n integrated compiler that can compile programs written in C, C++,\n Objective C, or any of the languages for which you have installed front"}, {"sha": "ea232d15be09f7fc5ffd55b0c7a8c65874948773", "filename": "gcc/doc/install-old.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0a4eab24dd97de9f19e045d971718d516387e3/gcc%2Fdoc%2Finstall-old.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0a4eab24dd97de9f19e045d971718d516387e3/gcc%2Fdoc%2Finstall-old.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall-old.texi?ref=6c0a4eab24dd97de9f19e045d971718d516387e3", "patch": "@@ -127,7 +127,7 @@ linker with GNU CC.\n This option does not cause the GNU linker to be installed; it just\n modifies the behavior of GNU CC to work with the GNU linker.\n @c Specifically, it inhibits the installation of @code{collect2}, a program\n-@c which otherwise serves as a front-end for the system's linker on most\n+@c which otherwise serves as a front end for the system's linker on most\n @c configurations.\n \n @item --with-stabs\n@@ -767,7 +767,7 @@ make minor changes in @file{make-cccp.com} and @file{make-cc1.com}\n to choose alternate definitions of @code{CC}, @code{CFLAGS}, and\n @code{LIBS}.  See comments in those files.  However, you must\n also have a working version of the GNU assembler (GNU as, aka GAS) as\n-it is used as the back-end for GNU CC to produce binary object modules\n+it is used as the back end for GNU CC to produce binary object modules\n and is not included in the GNU CC sources.  GAS is also needed to\n compile @file{libgcc2} in order to build @file{gcclib} (see above);\n @file{make-l2.com} expects to be able to find it operational in"}, {"sha": "bf9bce2b907da7ec93bd950a44d1c4b36f07012c", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0a4eab24dd97de9f19e045d971718d516387e3/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0a4eab24dd97de9f19e045d971718d516387e3/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=6c0a4eab24dd97de9f19e045d971718d516387e3", "patch": "@@ -33,7 +33,7 @@\n @settitle Installing GCC: Binaries\n @end ifset\n \n-@comment $Id: install.texi,v 1.28 2001/06/15 17:35:48 ro Exp $\n+@comment $Id: install.texi,v 1.29 2001/06/15 22:25:18 ljrittle Exp $\n @c Copyright (C) 2001 Free Software Foundation, Inc.\n @c *** Converted to texinfo by Dean Wakerley, dean@wakerley.com\n \n@@ -192,9 +192,9 @@ are also included in the full distribution.\n \n If you choose to download specific components, you must download the core\n gcc distribution plus any language specific distributions you wish to\n-use.  The core distribution includes the C language front-end as well as the\n+use.  The core distribution includes the C language front end as well as the\n shared components. Each language has a tarball which includes the language\n-front-end as well as the language runtime (when appropriate).\n+front end as well as the language runtime (when appropriate).\n \n Unpack the core distribution as well as any language specific\n distributions in the same directory.\n@@ -561,7 +561,7 @@ Specify that the run-time libraries\n used by GCJ should not be built.  This is useful in case you intend\n to use GCJ with some other run-time, or you're going to install it\n separately, or it just happens not to build on your particular\n-machine.  In general, if the Java front-end is enabled, the GCJ\n+machine.  In general, if the Java front end is enabled, the GCJ\n libraries will be enabled too, unless they're known to not work on\n the target platform.  If GCJ is enabled but libgcj isn't built, you\n may need to port it; in this case, before modifying the top-level"}, {"sha": "f32bcfb94b9e84e46a9cdda5e0a2899b5e990371", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0a4eab24dd97de9f19e045d971718d516387e3/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0a4eab24dd97de9f19e045d971718d516387e3/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=6c0a4eab24dd97de9f19e045d971718d516387e3", "patch": "@@ -1688,16 +1688,16 @@ Traditionally, diagnostic messages have been formatted irrespective of\n the output device's aspect (e.g. its width, @dots{}).  The options described\n below can be used to control the diagnostic messages formatting\n algorithm, e.g. how many characters per line, how often source location\n-information should be reported.  Right now, only the C++ front-end can\n+information should be reported.  Right now, only the C++ front end can\n honor these options.  However it is expected, in the near future, that\n-the remaining front-ends would be able to digest them correctly.\n+the remaining front ends would be able to digest them correctly.\n \n @table @gcctabopt\n @item -fmessage-length=@var{n}\n @opindex fmessage-length\n Try to format error messages so that they fit on lines of about @var{n}\n characters.  The default is 72 characters for g++ and 0 for the rest of\n-the front-ends supported by GCC.  If @var{n} is zero, then no\n+the front ends supported by GCC.  If @var{n} is zero, then no\n line-wrapping will be done; each error message will appear on a single\n line.\n "}, {"sha": "e09e926eb3fb00ea4c9549453ffcdcfec26f0951", "filename": "gcc/doc/rtl.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0a4eab24dd97de9f19e045d971718d516387e3/gcc%2Fdoc%2Frtl.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0a4eab24dd97de9f19e045d971718d516387e3/gcc%2Fdoc%2Frtl.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Frtl.texi?ref=6c0a4eab24dd97de9f19e045d971718d516387e3", "patch": "@@ -380,7 +380,7 @@ never be simultaneously set.\n In @code{mem} expressions, the alias set to which @var{x} belongs.  If\n zero, @var{x} is not in any alias set, and may alias anything.  If\n nonzero, @var{x} may only alias objects in the same alias set.  This\n-value is set (in a language-specific manner) by the front-end.  This\n+value is set (in a language-specific manner) by the front end.  This\n field is not a bit-field; it is in an integer, found as the second\n argument to the @code{mem}.\n "}]}