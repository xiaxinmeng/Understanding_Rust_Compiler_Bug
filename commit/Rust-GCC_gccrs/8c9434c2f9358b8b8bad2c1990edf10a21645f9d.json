{"sha": "8c9434c2f9358b8b8bad2c1990edf10a21645f9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM5NDM0YzJmOTM1OGI4YjhiYWQyYzE5OTBlZGYxMGEyMTY0NWY5ZA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-09-27T11:07:11Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-09-27T11:07:11Z"}, "message": "gcov: dump in a static dtor instead of in an atexit handler\n\n\tPR gcov-profile/7970\n\tPR gcov-profile/16855\n\tPR gcov-profile/44779\n\t* g++.dg/gcov/pr16855.C: New test.\n\t* coverage.c (build_gcov_exit_decl): New function.\n\t(coverage_obj_init): Call the function and generate __gcov_exit\n\tdestructor.\n\t* doc/gcov.texi: Document when __gcov_exit function is called.\n\t* libgcov-driver.c (__gcov_init): Do not register a atexit\n\thandler.\n\t(__gcov_exit): Rename from gcov_exit.\n\t* libgcov.h (__gcov_exit): Declare.\n\nFrom-SVN: r240529", "tree": {"sha": "0dfe81cd421cbccec0f0b4ed0c7bdb2943ad2f00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dfe81cd421cbccec0f0b4ed0c7bdb2943ad2f00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c9434c2f9358b8b8bad2c1990edf10a21645f9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c9434c2f9358b8b8bad2c1990edf10a21645f9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c9434c2f9358b8b8bad2c1990edf10a21645f9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c9434c2f9358b8b8bad2c1990edf10a21645f9d/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "511d092e41fcea25a4367dec16ea4b44d947f699", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/511d092e41fcea25a4367dec16ea4b44d947f699", "html_url": "https://github.com/Rust-GCC/gccrs/commit/511d092e41fcea25a4367dec16ea4b44d947f699"}], "stats": {"total": 113, "additions": 108, "deletions": 5}, "files": [{"sha": "d0ebc8e53edd616fd6108a1ad2eff1ec111bf190", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9434c2f9358b8b8bad2c1990edf10a21645f9d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9434c2f9358b8b8bad2c1990edf10a21645f9d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c9434c2f9358b8b8bad2c1990edf10a21645f9d", "patch": "@@ -1,3 +1,13 @@\n+2016-09-27  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/7970\n+\tPR gcov-profile/16855\n+\tPR gcov-profile/44779\n+\t* coverage.c (build_gcov_exit_decl): New function.\n+\t(coverage_obj_init): Call the function and generate __gcov_exit\n+\tdestructor.\n+\t* doc/gcov.texi: Document when __gcov_exit function is called.\n+\n 2016-09-27  Marek Polacek  <polacek@redhat.com>\n \n \tPR bootstrap/77751"}, {"sha": "0b8c0b378435708c4fadb505811aec61b0d52070", "filename": "gcc/coverage.c", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9434c2f9358b8b8bad2c1990edf10a21645f9d/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9434c2f9358b8b8bad2c1990edf10a21645f9d/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=8c9434c2f9358b8b8bad2c1990edf10a21645f9d", "patch": "@@ -1055,8 +1055,30 @@ build_init_ctor (tree gcov_info_type)\n   stmt = build_call_expr (init_fn, 1, stmt);\n   append_to_statement_list (stmt, &ctor);\n \n-  /* Generate a constructor to run it.  */\n-  cgraph_build_static_cdtor ('I', ctor, DEFAULT_INIT_PRIORITY);\n+  /* Generate a constructor to run it (with priority 99).  */\n+  cgraph_build_static_cdtor ('I', ctor, DEFAULT_INIT_PRIORITY - 1);\n+}\n+\n+/* Generate the destructor function to call __gcov_exit.  */\n+\n+static void\n+build_gcov_exit_decl (void)\n+{\n+  tree init_fn = build_function_type_list (void_type_node, void_type_node,\n+\t\t\t\t\t   NULL);\n+  init_fn = build_decl (BUILTINS_LOCATION, FUNCTION_DECL,\n+\t\t\tget_identifier (\"__gcov_exit\"), init_fn);\n+  TREE_PUBLIC (init_fn) = 1;\n+  DECL_EXTERNAL (init_fn) = 1;\n+  DECL_ASSEMBLER_NAME (init_fn);\n+\n+  /* Generate a call to __gcov_exit ().  */\n+  tree dtor = NULL;\n+  tree stmt = build_call_expr (init_fn, 0);\n+  append_to_statement_list (stmt, &dtor);\n+\n+  /* Generate a destructor to run it (with priority 99).  */\n+  cgraph_build_static_cdtor ('D', dtor, DEFAULT_INIT_PRIORITY - 1);\n }\n \n /* Create the gcov_info types and object.  Generate the constructor\n@@ -1114,6 +1136,7 @@ coverage_obj_init (void)\n   DECL_NAME (gcov_info_var) = get_identifier (name_buf);\n \n   build_init_ctor (gcov_info_type);\n+  build_gcov_exit_decl ();\n \n   return true;\n }"}, {"sha": "1912f85422e1e15dab0da09f928db63998a9e91e", "filename": "gcc/doc/gcov.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9434c2f9358b8b8bad2c1990edf10a21645f9d/gcc%2Fdoc%2Fgcov.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9434c2f9358b8b8bad2c1990edf10a21645f9d/gcc%2Fdoc%2Fgcov.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcov.texi?ref=8c9434c2f9358b8b8bad2c1990edf10a21645f9d", "patch": "@@ -600,6 +600,10 @@ facilities to restrict profile collection to the program region of\n interest. Calling @code{__gcov_reset(void)} will clear all profile counters\n to zero, and calling @code{__gcov_dump(void)} will cause the profile information\n collected at that point to be dumped to @file{.gcda} output files.\n+Instrumented applications use a static destructor with priority 99\n+to invoke the @code{__gcov_dump} function. Thus @code{__gcov_dump}\n+is executed after all user defined static destructors,\n+as well as handlers registered with @code{atexit}.\n \n @c man end\n "}, {"sha": "cefbca950f92b63700956ba8c9f0447b90e94a47", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9434c2f9358b8b8bad2c1990edf10a21645f9d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9434c2f9358b8b8bad2c1990edf10a21645f9d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8c9434c2f9358b8b8bad2c1990edf10a21645f9d", "patch": "@@ -1,3 +1,10 @@\n+2016-09-27  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/7970\n+\tPR gcov-profile/16855\n+\tPR gcov-profile/44779\n+\t* g++.dg/gcov/pr16855.C: New test.\n+\n 2016-09-27  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>\n \n \t* gcc.dg/tree-ssa/builtin-sprintf-warn-1.c: Require int32plus."}, {"sha": "91801d4d1e9b5b2c551592ddd8335fa477aa80eb", "filename": "gcc/testsuite/g++.dg/gcov/pr16855.C", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9434c2f9358b8b8bad2c1990edf10a21645f9d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fpr16855.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9434c2f9358b8b8bad2c1990edf10a21645f9d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fpr16855.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fpr16855.C?ref=8c9434c2f9358b8b8bad2c1990edf10a21645f9d", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-options \"-fprofile-arcs -ftest-coverage\" } */\n+/* { dg-do run { target native } } */\n+\n+#include <stdlib.h>\n+\n+int a;\n+\n+void foo()\n+{\n+  a = 123;\t\t\t\t\t\t  /* count(1) */\n+}\n+\n+#include <iostream>\n+using namespace std;\n+class Test {\n+public:\n+\tTest(void){\n+\tcout<< \"In Test ctor\" << endl;\t\t\t  /* count(1) */\n+\t}\n+\t~Test(void){\n+\tcout<< \"In Test dtor\" << endl;\t\t\t  /* count(1) */\n+\t}\n+}T1;\n+\n+void uncalled(void){\n+\tcout<< \"In uncalled\" << endl;\t\t\t  /* count(#####) */\n+}\n+int main(void){\n+atexit (&foo);\n+// Test T2;\n+cout<< \"In main\" << endl;\t\t\t\t  /* count(1) */\n+return 0;\n+}\n+\n+#include <stdio.h>\n+\n+__attribute__((constructor))\n+static void construct_navigationBarImages() {\n+  fprintf (stderr,  \"((construct_navigationBarImages))\"); /* count(1) */\n+}\n+\n+__attribute__((destructor))\n+static void destroy_navigationBarImages() {\n+  fprintf (stderr,  \"((destroy_navigationBarImages))\");\t  /* count(1) */\n+}\n+\n+/* { dg-final { run-gcov branches { -b pr16855.C } } } */"}, {"sha": "d1b2d21e2e910b98893cbfe44c4140f9b3f8b069", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9434c2f9358b8b8bad2c1990edf10a21645f9d/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9434c2f9358b8b8bad2c1990edf10a21645f9d/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=8c9434c2f9358b8b8bad2c1990edf10a21645f9d", "patch": "@@ -1,3 +1,13 @@\n+2016-09-27  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/7970\n+\tPR gcov-profile/16855\n+\tPR gcov-profile/44779\n+\t* libgcov-driver.c (__gcov_init): Do not register a atexit\n+\thandler.\n+\t(__gcov_exit): Rename from gcov_exit.\n+\t* libgcov.h (__gcov_exit): Declare.\n+\n 2016-09-27  Martin Liska  <mliska@suse.cz>\n \n \tPR bootstrap/77749"}, {"sha": "84471bd8162345f2afb0cfb0cd4981cf93b211df", "filename": "libgcc/libgcov-driver.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9434c2f9358b8b8bad2c1990edf10a21645f9d/libgcc%2Flibgcov-driver.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9434c2f9358b8b8bad2c1990edf10a21645f9d/libgcc%2Flibgcov-driver.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov-driver.c?ref=8c9434c2f9358b8b8bad2c1990edf10a21645f9d", "patch": "@@ -872,8 +872,8 @@ struct gcov_root __gcov_root;\n struct gcov_master __gcov_master = \n   {GCOV_VERSION, 0};\n \n-static void\n-gcov_exit (void)\n+void\n+__gcov_exit (void)\n {\n   __gcov_dump_one (&__gcov_root);\n   if (__gcov_root.next)\n@@ -906,7 +906,6 @@ __gcov_init (struct gcov_info *info)\n \t\t__gcov_master.root->prev = &__gcov_root;\n \t      __gcov_master.root = &__gcov_root;\n \t    }\n-\t  atexit (gcov_exit);\n \t}\n \n       info->next = __gcov_root.list;"}, {"sha": "dc74134b8cadd0cdf88b42e2fc9b1d9fa18aabd4", "filename": "libgcc/libgcov.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9434c2f9358b8b8bad2c1990edf10a21645f9d/libgcc%2Flibgcov.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9434c2f9358b8b8bad2c1990edf10a21645f9d/libgcc%2Flibgcov.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov.h?ref=8c9434c2f9358b8b8bad2c1990edf10a21645f9d", "patch": "@@ -234,6 +234,9 @@ extern void __gcov_dump_one (struct gcov_root *) ATTRIBUTE_HIDDEN;\n /* Register a new object file module.  */\n extern void __gcov_init (struct gcov_info *) ATTRIBUTE_HIDDEN;\n \n+/* GCOV exit function registered via a static destructor.  */\n+extern void __gcov_exit (void) ATTRIBUTE_HIDDEN;\n+\n /* Called before fork, to avoid double counting.  */\n extern void __gcov_flush (void) ATTRIBUTE_HIDDEN;\n "}]}