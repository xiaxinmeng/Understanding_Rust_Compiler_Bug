{"sha": "389cd88ce797e2a4345eab8db478a3b8eba798e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg5Y2Q4OGNlNzk3ZTJhNDM0NWVhYjhkYjQ3OGEzYjhlYmE3OThlOA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-01-27T10:30:03Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-01-27T10:55:19Z"}, "message": "libstdc++: Fix deduction guide for std::span (PR93426)\n\nThe deduction guide from an iterator and sentinel used the wrong alias\ntemplate and so didn't work.\n\n\tPR libstdc++/93426\n\t* include/std/span (span): Fix deduction guide.\n\t* testsuite/23_containers/span/deduction.cc: New test.", "tree": {"sha": "26224fd954b7b85b5d52be5c32de1e632ac60587", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26224fd954b7b85b5d52be5c32de1e632ac60587"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/389cd88ce797e2a4345eab8db478a3b8eba798e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/389cd88ce797e2a4345eab8db478a3b8eba798e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/389cd88ce797e2a4345eab8db478a3b8eba798e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/389cd88ce797e2a4345eab8db478a3b8eba798e8/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e648e57efca6ce6d751ef8c2038608817b514fb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e648e57efca6ce6d751ef8c2038608817b514fb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e648e57efca6ce6d751ef8c2038608817b514fb4"}], "stats": {"total": 94, "additions": 92, "deletions": 2}, "files": [{"sha": "2b877a8b44df4f2569766e1d9a9646a0803d9815", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/389cd88ce797e2a4345eab8db478a3b8eba798e8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/389cd88ce797e2a4345eab8db478a3b8eba798e8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=389cd88ce797e2a4345eab8db478a3b8eba798e8", "patch": "@@ -1,3 +1,9 @@\n+2020-01-27  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/93426\n+\t* include/std/span (span): Fix deduction guide.\n+\t* testsuite/23_containers/span/deduction.cc: New test.\n+\n 2020-01-24  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* libsupc++/compare (__cmp_cat::_Eq): Remove enumeration type."}, {"sha": "0072010dea8f7b537a166f8825bf6b6b0c46ac94", "filename": "libstdc++-v3/include/std/span", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/389cd88ce797e2a4345eab8db478a3b8eba798e8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fspan", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/389cd88ce797e2a4345eab8db478a3b8eba798e8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fspan", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fspan?ref=389cd88ce797e2a4345eab8db478a3b8eba798e8", "patch": "@@ -190,7 +190,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t: span(static_cast<pointer>(__arr.data()), _ArrayExtent)\n \t{ }\n \n-    public:\n       template<ranges::contiguous_range _Range>\n \trequires (_Extent == dynamic_extent)\n \t  && (!__detail::__is_std_span<remove_cvref_t<_Range>>::value)\n@@ -404,6 +403,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     };\n \n   // deduction guides\n+\n   template<typename _Type, size_t _ArrayExtent>\n     span(_Type(&)[_ArrayExtent]) -> span<_Type, _ArrayExtent>;\n \n@@ -416,7 +416,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   template<contiguous_iterator _Iter, typename _Sentinel>\n     span(_Iter, _Sentinel)\n-      -> span<remove_reference_t<ranges::range_reference_t<_Iter>>>;\n+      -> span<remove_reference_t<iter_reference_t<_Iter>>>;\n \n   template<typename _Range>\n     span(_Range &&)"}, {"sha": "66e955e961b1b037a9c86dcd43ba5cd38dabbb25", "filename": "libstdc++-v3/testsuite/23_containers/span/deduction.cc", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/389cd88ce797e2a4345eab8db478a3b8eba798e8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Fdeduction.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/389cd88ce797e2a4345eab8db478a3b8eba798e8/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Fdeduction.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Fdeduction.cc?ref=389cd88ce797e2a4345eab8db478a3b8eba798e8", "patch": "@@ -0,0 +1,84 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+#include <span>\n+\n+template<typename T, int N, typename U>\n+constexpr bool is_static_span(const U&)\n+{\n+  return std::is_same_v<std::span<T, N>, U> && N != std::dynamic_extent;\n+}\n+\n+template<typename T, typename U>\n+constexpr bool is_dynamic_span(const U&)\n+{\n+  return std::is_same_v<std::span<T>, U>;\n+}\n+\n+struct Range\n+{\n+  float* begin() const;\n+  float* end() const;\n+};\n+\n+void\n+test01()\n+{\n+  const char c[] = \"\";\n+  int i[2]{};\n+  std::array<long, 3> a;\n+  Range r;\n+\n+  std::span s1(c);\n+  static_assert( is_static_span<const char, 1>(s1) );\n+\n+  std::span s2(i);\n+  static_assert( is_static_span<int, 2>(s2) );\n+\n+  std::span s3(a);\n+  static_assert( is_static_span<long, 3>(s3) );\n+\n+  std::span s4(const_cast<const std::array<long, 3>&>(a));\n+  static_assert( is_static_span<const long, 3>(s4) );\n+\n+  std::span s5(std::begin(i), std::end(i));\n+  static_assert( is_dynamic_span<int>(s5) );\n+\n+  std::span s6(std::cbegin(i), std::cend(i));\n+  static_assert( is_dynamic_span<const int>(s6) );\n+\n+  std::span s7(r);\n+  static_assert( is_dynamic_span<float>(s7) );\n+\n+  std::span s8(s1);\n+  static_assert( is_static_span<const char, 1>(s8) );\n+\n+  std::span s9(s2);\n+  static_assert( is_static_span<int, 2>(s9) );\n+\n+  std::span s10(const_cast<std::span<int, 2>&>(s2));\n+  static_assert( is_static_span<int, 2>(s10) );\n+\n+  std::span s11(s5);\n+  static_assert( is_dynamic_span<int>(s11) );\n+\n+  std::span s12(const_cast<const std::span<int>&>(s5));\n+  static_assert( is_dynamic_span<int>(s12) );\n+}"}]}