{"sha": "bc9efeab61120db9c282def38dd1a052de69f610", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM5ZWZlYWI2MTEyMGRiOWMyODJkZWYzOGRkMWEwNTJkZTY5ZjYxMA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-01-26T14:30:45Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-01-26T14:30:45Z"}, "message": "PR libstdc++/79190 add fallback aligned_alloc implementation\n\nlibstdc++-v3:\n\n\tPR libstdc++/79190\n\t* libsupc++/del_opa.cc (operator delete(void*, std::align_val_t))\n\t[!_GLIBCXX_HAVE_ALIGNED_ALLOC && !_GLIBCXX_HAVE_POSIX_MEMALIGN\n\t&& !_GLIBCXX_HAVE_MEMALIGN && !_GLIBCXX_HAVE__ALIGNED_MALLOC]:\n\tRetrieve original pointer value allocated by malloc.\n\t* libsupc++/new_opa.cc [!_GLIBCXX_HAVE_ALIGNED_ALLOC\n\t&& !_GLIBCXX_HAVE_POSIX_MEMALIGN && !_GLIBCXX_HAVE_MEMALIGN\n\t&& !_GLIBCXX_HAVE__ALIGNED_MALLOC] (aligned_alloc(size_t, size_t)):\n\tDefine, adjusting pointer value allocated by malloc and storing for\n\tretrieval by operator delete.\n\ngcc/testsuite:\n\n\tPR libstdc++/79190\n\t* g++.dg/cpp1z/aligned-new3.C: Replace operator new so behaviour\n\tmatches replaced operator delete.\n\nFrom-SVN: r244933", "tree": {"sha": "aef51adb0dc768bece17a84b975f87f079e9ca93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aef51adb0dc768bece17a84b975f87f079e9ca93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc9efeab61120db9c282def38dd1a052de69f610", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc9efeab61120db9c282def38dd1a052de69f610", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc9efeab61120db9c282def38dd1a052de69f610", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc9efeab61120db9c282def38dd1a052de69f610/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10"}], "stats": {"total": 61, "additions": 56, "deletions": 5}, "files": [{"sha": "79c7295963e39c6aee8e58ff0b74b70ef989f7d4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc9efeab61120db9c282def38dd1a052de69f610/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc9efeab61120db9c282def38dd1a052de69f610/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bc9efeab61120db9c282def38dd1a052de69f610", "patch": "@@ -1,3 +1,9 @@\n+2017-01-26  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/79190\n+\t* g++.dg/cpp1z/aligned-new3.C: Replace operator new so behaviour\n+\tmatches replaced operator delete.\n+\n 2017-01-26  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.target/i386/avx512f-kaddw-1.c: Renamed to ..."}, {"sha": "e50e62c92e13e006652eafe0c4f8f2c37552282e", "filename": "gcc/testsuite/g++.dg/cpp1z/aligned-new3.C", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc9efeab61120db9c282def38dd1a052de69f610/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faligned-new3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc9efeab61120db9c282def38dd1a052de69f610/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faligned-new3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faligned-new3.C?ref=bc9efeab61120db9c282def38dd1a052de69f610", "patch": "@@ -7,6 +7,11 @@ struct alignas(64) A {\n   int i;\n };\n \n+void* operator new (std::size_t n, std::align_val_t)\n+{\n+  return operator new (n);\n+}\n+\n bool deleted = false;\n void operator delete (void *p, std::size_t, std::align_val_t)\n {"}, {"sha": "2fc38c97a639a38e87f00813a149d57d737645ef", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc9efeab61120db9c282def38dd1a052de69f610/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc9efeab61120db9c282def38dd1a052de69f610/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bc9efeab61120db9c282def38dd1a052de69f610", "patch": "@@ -1,3 +1,16 @@\n+2017-01-26  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/79190\n+\t* libsupc++/del_opa.cc (operator delete(void*, std::align_val_t))\n+\t[!_GLIBCXX_HAVE_ALIGNED_ALLOC && !_GLIBCXX_HAVE_POSIX_MEMALIGN\n+\t&& !_GLIBCXX_HAVE_MEMALIGN && !_GLIBCXX_HAVE__ALIGNED_MALLOC]:\n+\tRetrieve original pointer value allocated by malloc.\n+\t* libsupc++/new_opa.cc [!_GLIBCXX_HAVE_ALIGNED_ALLOC\n+\t&& !_GLIBCXX_HAVE_POSIX_MEMALIGN && !_GLIBCXX_HAVE_MEMALIGN\n+\t&& !_GLIBCXX_HAVE__ALIGNED_MALLOC] (aligned_alloc(size_t, size_t)):\n+\tDefine, adjusting pointer value allocated by malloc and storing for\n+\tretrieval by operator delete.\n+\n 2017-01-26  Jakub Jelinek  <jakub@redhat.com>\n \n \t* libsupc++/eh_atomics.h: Update copyright years."}, {"sha": "f7bf7a4a1dca0f399b66b5beec34e5a8dd352111", "filename": "libstdc++-v3/libsupc++/del_opa.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc9efeab61120db9c282def38dd1a052de69f610/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fdel_opa.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc9efeab61120db9c282def38dd1a052de69f610/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fdel_opa.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fdel_opa.cc?ref=bc9efeab61120db9c282def38dd1a052de69f610", "patch": "@@ -46,9 +46,13 @@ _GLIBCXX_END_NAMESPACE_VERSION\n _GLIBCXX_WEAK_DEFINITION void\n operator delete(void* ptr, std::align_val_t) _GLIBCXX_USE_NOEXCEPT\n {\n-#if !_GLIBCXX_HAVE_ALIGNED_ALLOC && _GLIBCXX_HAVE__ALIGNED_MALLOC\n+#if _GLIBCXX_HAVE_ALIGNED_ALLOC || _GLIBCXX_HAVE_POSIX_MEMALIGN \\\n+    || _GLIBCXX_HAVE_MEMALIGN\n+  std::free (ptr);\n+#elif _GLIBCXX_HAVE__ALIGNED_MALLOC\n   _aligned_free (ptr);\n #else\n-  std::free(ptr);\n+  if (ptr)\n+    std::free (((void **) ptr)[-1]); // See aligned_alloc in new_opa.cc\n #endif\n }"}, {"sha": "e2a0d2f53719ec94f05305f1e5f038bd43cf1190", "filename": "libstdc++-v3/libsupc++/new_opa.cc", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc9efeab61120db9c282def38dd1a052de69f610/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew_opa.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc9efeab61120db9c282def38dd1a052de69f610/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew_opa.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew_opa.cc?ref=bc9efeab61120db9c282def38dd1a052de69f610", "patch": "@@ -55,9 +55,32 @@ extern \"C\" void *memalign(std::size_t boundary, std::size_t size);\n #endif\n #define aligned_alloc memalign\n #else\n-// The C library doesn't provide any aligned allocation functions, declare\n-// aligned_alloc and get a link failure if aligned new is used.\n-extern \"C\" void *aligned_alloc(std::size_t, std::size_t);\n+#include <stdint.h>\n+// The C library doesn't provide any aligned allocation functions, define one.\n+// This is a modified version of code from gcc/config/i386/gmm_malloc.h\n+static inline void*\n+aligned_alloc (std::size_t al, std::size_t sz)\n+{\n+  // Alignment must be a power of two.\n+  if (al & (al - 1))\n+    return nullptr;\n+  else if (!sz)\n+    return nullptr;\n+\n+  // We need extra bytes to store the original value returned by malloc.\n+  if (al < sizeof(void*))\n+    al = sizeof(void*);\n+  void* const malloc_ptr = malloc(sz + al);\n+  if (!malloc_ptr)\n+    return nullptr;\n+  // Align to the requested value, leaving room for the original malloc value.\n+  void* const aligned_ptr = (void *) (((uintptr_t) malloc_ptr + al) & -al);\n+\n+  // Store the original malloc value where it can be found by operator delete.\n+  ((void **) aligned_ptr)[-1] = malloc_ptr;\n+\n+  return aligned_ptr;\n+}\n #endif\n #endif\n "}]}