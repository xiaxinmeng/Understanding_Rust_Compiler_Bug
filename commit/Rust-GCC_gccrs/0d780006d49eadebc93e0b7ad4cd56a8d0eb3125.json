{"sha": "0d780006d49eadebc93e0b7ad4cd56a8d0eb3125", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ3ODAwMDZkNDllYWRlYmM5M2UwYjdhZDRjZDU2YThkMGViMzEyNQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-05-12T09:15:09Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-05-12T09:15:09Z"}, "message": "[ARM] Fix PR 65955: Do not take REGNO on non-REG operand in movcond_addsi\n\n\tPR target/65955\n\t* config/arm/arm.md (movcond_addsi): Check that operands[2] is a\n\tREG before taking its REGNO.\n\nFrom-SVN: r223049", "tree": {"sha": "509f9acedc5da165af1aa15689bd23e7667532a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/509f9acedc5da165af1aa15689bd23e7667532a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d780006d49eadebc93e0b7ad4cd56a8d0eb3125", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d780006d49eadebc93e0b7ad4cd56a8d0eb3125", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d780006d49eadebc93e0b7ad4cd56a8d0eb3125", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d780006d49eadebc93e0b7ad4cd56a8d0eb3125/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8d1fe980a29ead0572d0bb451197a14b490adef3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d1fe980a29ead0572d0bb451197a14b490adef3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d1fe980a29ead0572d0bb451197a14b490adef3"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "da57c959524e1e3d6ce0cbe830d772ca1351658e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d780006d49eadebc93e0b7ad4cd56a8d0eb3125/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d780006d49eadebc93e0b7ad4cd56a8d0eb3125/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d780006d49eadebc93e0b7ad4cd56a8d0eb3125", "patch": "@@ -1,3 +1,9 @@\n+2015-05-12  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/65955\n+\t* config/arm/arm.md (movcond_addsi): Check that operands[2] is a\n+\tREG before taking its REGNO.\n+\n 2015-05-12  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* combine.c i(set_nonzero_bits_and_sign_copies): Split code updating"}, {"sha": "adbb83fd8890649c62f1b79e069f2656088adf9e", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d780006d49eadebc93e0b7ad4cd56a8d0eb3125/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d780006d49eadebc93e0b7ad4cd56a8d0eb3125/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=0d780006d49eadebc93e0b7ad4cd56a8d0eb3125", "patch": "@@ -9323,7 +9323,7 @@\n     enum rtx_code rc = GET_CODE (operands[5]);\n     operands[6] = gen_rtx_REG (mode, CC_REGNUM);\n     gcc_assert (!(mode == CCFPmode || mode == CCFPEmode));\n-    if (REGNO (operands[2]) != REGNO (operands[0]))\n+    if (!REG_P (operands[2]) || REGNO (operands[2]) != REGNO (operands[0]))\n       rc = reverse_condition (rc);\n     else\n       std::swap (operands[1], operands[2]);"}]}