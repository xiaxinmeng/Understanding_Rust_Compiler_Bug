{"sha": "be0c460344d0077ede335b6121785f8cda2c7224", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUwYzQ2MDM0NGQwMDc3ZWRlMzM1YjYxMjE3ODVmOGNkYTJjNzIyNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-11-26T15:52:57Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-11-26T15:52:57Z"}, "message": "re PR target/34215 (ICE in assign_386_stack_local, at config/i386/i386.c:13481)\n\n        PR target/34215\n        * config/i386/i386.md (truncdfsf2): Select SLOT_TEMP stack slot if\n        virtual registers are instantiated.\n        (truncxf<mode>2): Ditto.\n        (floatsi<mode>2): Ditto.\n        (floatdisf2): Ditto.\n        (floatdidf2): Ditto.\n\ntestsuite/ChangeLog:\n\n        PR target/34215\n        * gcc.target/i386/pr34215.c: New test.\n\nFrom-SVN: r130440", "tree": {"sha": "920c01ad6d44f8a773ffc3d7897cf537facb9b81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/920c01ad6d44f8a773ffc3d7897cf537facb9b81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be0c460344d0077ede335b6121785f8cda2c7224", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be0c460344d0077ede335b6121785f8cda2c7224", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be0c460344d0077ede335b6121785f8cda2c7224", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be0c460344d0077ede335b6121785f8cda2c7224/comments", "author": null, "committer": null, "parents": [{"sha": "916a659b3714a18e1b757476c790039baff2da6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/916a659b3714a18e1b757476c790039baff2da6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/916a659b3714a18e1b757476c790039baff2da6f"}], "stats": {"total": 84, "additions": 61, "deletions": 23}, "files": [{"sha": "acdc3d16223360707294732afe48489414bf3d35", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be0c460344d0077ede335b6121785f8cda2c7224/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be0c460344d0077ede335b6121785f8cda2c7224/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be0c460344d0077ede335b6121785f8cda2c7224", "patch": "@@ -1,3 +1,13 @@\n+2007-11-26  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/34215\n+\t* config/i386/i386.md (truncdfsf2): Select SLOT_TEMP stack slot if\n+\tvirtual registers are instantiated.\n+\t(truncxf<mode>2): Ditto.\n+\t(floatsi<mode>2): Ditto.\n+\t(floatdisf2): Ditto.\n+\t(floatdidf2): Ditto.\n+\n 2007-11-26  Rask Ingemann Lambertsen  <rask@sygehus.dk>\n \n \tPR target/34174\n@@ -66,8 +76,7 @@\n \n 2007-11-25  Richard Guenther  <rguenther@suse.de>\n \n-\t* tree.h (struct tree_block): Move locus member next to\n-\tflags.\n+\t* tree.h (struct tree_block): Move locus member next to flags.\n \t* c-decl.c (SCOPE_LIST_APPEND): Use BLOCK_CHAIN.\n \t(SCOPE_LIST_CONCAT): Likewise.\n \t(pop_scope): Likewise.\n@@ -92,7 +101,7 @@\n \tregister that dies there.\n \n 2007-11-23  Dirk Mueller  <dmueller@suse.de>\n-\tRichard Guenther <rguenther@suse.de>\n+\t    Richard Guenther <rguenther@suse.de>\n \n \tPR middle-end/34197\n \t* tree-vrp.c (check_array_ref): Move check for valid location..\n@@ -105,7 +114,7 @@\n \touter_code.\n \n 2007-11-23  Richard Guenther  <rguenther@suse.de>\n-\tMichael Matz  <matz@suse.de>\n+\t    Michael Matz  <matz@suse.de>\n \n \tPR tree-optimization/34176\n \t* alloc-pool.h (empty_alloc_pool): Declare.\n@@ -119,11 +128,9 @@\n \n 2007-11-23  Richard Guenther  <rguenther@suse.de>\n \n-\t* tree-ssa-copy.c (may_propagate_copy): Remove redundant\n-\tchecks.\n+\t* tree-ssa-copy.c (may_propagate_copy): Remove redundant checks.\n \t(merge_alias_info): Do verification only if checking is\n-\tenabled.  Merge flow-sensitive alias information in simple\n-\tcases.\n+\tenabled.  Merge flow-sensitive alias information in simple cases.\n \t* tree-ssa-operands.c (get_addr_dereference_operands): Also\n \tcomplain about missing NMTs.\n \n@@ -160,8 +167,7 @@\n \n 2007-11-22  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n-\t* config/sh/sh.md (divsi_inv_m3): Handle zero dividend\n-\tspecially.\n+\t* config/sh/sh.md (divsi_inv_m3): Handle zero dividend specially.\n \n 2007-11-22  Uros Bizjak  <ubizjak@gmail.com>\n "}, {"sha": "9b03b95e4d9c21a46203b47a9e08789d442ea1e2", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 20, "deletions": 12, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be0c460344d0077ede335b6121785f8cda2c7224/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be0c460344d0077ede335b6121785f8cda2c7224/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=be0c460344d0077ede335b6121785f8cda2c7224", "patch": "@@ -4074,7 +4074,8 @@\n     ;\n   else\n     {\n-      rtx temp = assign_386_stack_local (SFmode, SLOT_VIRTUAL);\n+      int slot = virtuals_instantiated ? SLOT_TEMP : SLOT_VIRTUAL;\n+      rtx temp = assign_386_stack_local (SFmode, slot);\n       emit_insn (gen_truncdfsf2_with_temp (operands[0], operands[1], temp));\n       DONE;\n     }\n@@ -4258,7 +4259,10 @@\n       DONE;\n     }\n   else\n-    operands[2] = assign_386_stack_local (<MODE>mode, SLOT_VIRTUAL);\n+    {\n+      int slot = virtuals_instantiated ? SLOT_TEMP : SLOT_VIRTUAL;\n+      operands[2] = assign_386_stack_local (<MODE>mode, slot);\n+    }\n })\n \n (define_insn \"*truncxfsf2_mixed\"\n@@ -4833,7 +4837,8 @@\n          operands[1] = force_reg (SImode, operands[1]);\n        else if (!MEM_P (operands[1]))\n \t {\n-\t   rtx tmp = assign_386_stack_local (SImode, SLOT_VIRTUAL);\n+\t   int slot = virtuals_instantiated ? SLOT_TEMP : SLOT_VIRTUAL;\n+\t   rtx tmp = assign_386_stack_local (SImode, slot);\n \t   emit_move_insn (tmp, operands[1]);\n \t   operands[1] = tmp;\n \t }\n@@ -4847,9 +4852,10 @@\n \t    && !optimize_size\n \t    && !MEM_P (operands[1]))\n      {\n-\trtx tmp = assign_386_stack_local (GET_MODE (operands[1]), SLOT_VIRTUAL);\n-\temit_move_insn (tmp, operands[1]);\n-\toperands[1] = tmp;\n+       int slot = virtuals_instantiated ? SLOT_TEMP : SLOT_VIRTUAL;\n+       rtx tmp = assign_386_stack_local (GET_MODE (operands[1]), slot);\n+       emit_move_insn (tmp, operands[1]);\n+       operands[1] = tmp;\n      }\n   \")\n \n@@ -5116,9 +5122,10 @@\n       && !optimize_size\n       && !MEM_P (operands[1]))\n     {\n-\trtx tmp = assign_386_stack_local (GET_MODE (operands[1]), SLOT_VIRTUAL);\n-\temit_move_insn (tmp, operands[1]);\n-\toperands[1] = tmp;\n+      int slot = virtuals_instantiated ? SLOT_TEMP : SLOT_VIRTUAL;\n+      rtx tmp = assign_386_stack_local (GET_MODE (operands[1]), slot);\n+      emit_move_insn (tmp, operands[1]);\n+      operands[1] = tmp;\n     }\n })\n \n@@ -5192,9 +5199,10 @@\n       && !optimize_size\n       && !MEM_P (operands[1]))\n     {\n-\trtx tmp = assign_386_stack_local (GET_MODE (operands[1]), SLOT_VIRTUAL);\n-\temit_move_insn (tmp, operands[1]);\n-\toperands[1] = tmp;\n+      int slot = virtuals_instantiated ? SLOT_TEMP : SLOT_VIRTUAL;\n+      rtx tmp = assign_386_stack_local (GET_MODE (operands[1]), slot);\n+      emit_move_insn (tmp, operands[1]);\n+      operands[1] = tmp;\n     }\n })\n "}, {"sha": "a67d239753526ad33cc813ff1e617e1a74273c34", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be0c460344d0077ede335b6121785f8cda2c7224/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be0c460344d0077ede335b6121785f8cda2c7224/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=be0c460344d0077ede335b6121785f8cda2c7224", "patch": "@@ -1,3 +1,8 @@\n+2007-11-26  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/34215\n+\t* gcc.target/i386/pr34215.c: New test.\n+\n 2007-11-26  Rask Ingemann Lambertsen  <rask@sygehus.dk>\n \n \tPR target/34174\n@@ -89,7 +94,7 @@\n \t* g++.dg/warn/pr33160.C: New.\n \t\n 2007-11-23  Richard Guenther  <rguenther@suse.de>\n-\tMichael Matz  <matz@suse.de>\n+\t    Michael Matz  <matz@suse.de>\n \n \tPR tree-optimization/34176\n \t* gcc.c-torture/execute/pr34176.c: New testcase."}, {"sha": "9e194ff44b71ab845726c6b4479db53e322c7e2c", "filename": "gcc/testsuite/gcc.target/i386/pr34215.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be0c460344d0077ede335b6121785f8cda2c7224/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr34215.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be0c460344d0077ede335b6121785f8cda2c7224/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr34215.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr34215.c?ref=be0c460344d0077ede335b6121785f8cda2c7224", "patch": "@@ -0,0 +1,19 @@\n+/* Testcase by Martin Michlmayr <tbm@cyrius.com> */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target ilp32 } */\n+/* { dg-options \"-O2\" } */\n+\n+double pow (double, double);\n+\n+void calc_score_dist (int mxdlen, long double d, long double **dist)\n+{\n+  unsigned long i, scr2;\n+  for (i = 1; i <= mxdlen; i++)\n+    {\n+      for (scr2 = mxdlen; scr2 <= mxdlen + 10; scr2++)\n+\t{\n+\t}\n+      dist[i][scr2] *= pow (1.0 / d, i);\n+    }\n+}"}]}