{"sha": "1d60e59e0dee666e71a44b2a4a32dc97b90b410a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ2MGU1OWUwZGVlNjY2ZTcxYTQ0YjJhNGEzMmRjOTdiOTBiNDEwYQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2006-02-06T23:12:46Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2006-02-06T23:12:46Z"}, "message": "* reorg.c (dbr_schedule): Use dump_file instead of file.\n\nFrom-SVN: r110671", "tree": {"sha": "452c3b6530fed59912c9197bc795ee0f7aecca3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/452c3b6530fed59912c9197bc795ee0f7aecca3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d60e59e0dee666e71a44b2a4a32dc97b90b410a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d60e59e0dee666e71a44b2a4a32dc97b90b410a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d60e59e0dee666e71a44b2a4a32dc97b90b410a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d60e59e0dee666e71a44b2a4a32dc97b90b410a/comments", "author": null, "committer": null, "parents": [{"sha": "5d48891e67d7c0bbf928c3a96f7730d4fa775884", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d48891e67d7c0bbf928c3a96f7730d4fa775884", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d48891e67d7c0bbf928c3a96f7730d4fa775884"}], "stats": {"total": 36, "additions": 20, "deletions": 16}, "files": [{"sha": "f9848cd7bd62b5ddc5999e6071fdde9424247042", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d60e59e0dee666e71a44b2a4a32dc97b90b410a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d60e59e0dee666e71a44b2a4a32dc97b90b410a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d60e59e0dee666e71a44b2a4a32dc97b90b410a", "patch": "@@ -1,3 +1,7 @@\n+2006-02-06  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* reorg.c (dbr_schedule): Use dump_file instead of file.\n+\n 2006-02-06  Steve Ellcey  <sje@cup.hp.com>\n \n \tPR target/25917"}, {"sha": "3376c00a63f1d29b15c2fc497a000aff88a647ac", "filename": "gcc/reorg.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d60e59e0dee666e71a44b2a4a32dc97b90b410a/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d60e59e0dee666e71a44b2a4a32dc97b90b410a/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=1d60e59e0dee666e71a44b2a4a32dc97b90b410a", "patch": "@@ -3638,7 +3638,7 @@ dbr_schedule (rtx first)\n   /* It is not clear why the line below is needed, but it does seem to be.  */\n   unfilled_firstobj = obstack_alloc (&unfilled_slots_obstack, 0);\n \n-  if (file)\n+  if (dump_file)\n     {\n       int i, j, need_comma;\n       int total_delay_slots[MAX_DELAY_HISTOGRAM + 1];\n@@ -3648,25 +3648,25 @@ dbr_schedule (rtx first)\n \t   reorg_pass_number < MAX_REORG_PASSES;\n \t   reorg_pass_number++)\n \t{\n-\t  fprintf (file, \";; Reorg pass #%d:\\n\", reorg_pass_number + 1);\n+\t  fprintf (dump_file, \";; Reorg pass #%d:\\n\", reorg_pass_number + 1);\n \t  for (i = 0; i < NUM_REORG_FUNCTIONS; i++)\n \t    {\n \t      need_comma = 0;\n-\t      fprintf (file, \";; Reorg function #%d\\n\", i);\n+\t      fprintf (dump_file, \";; Reorg function #%d\\n\", i);\n \n-\t      fprintf (file, \";; %d insns needing delay slots\\n;; \",\n+\t      fprintf (dump_file, \";; %d insns needing delay slots\\n;; \",\n \t\t       num_insns_needing_delays[i][reorg_pass_number]);\n \n \t      for (j = 0; j < MAX_DELAY_HISTOGRAM + 1; j++)\n \t\tif (num_filled_delays[i][j][reorg_pass_number])\n \t\t  {\n \t\t    if (need_comma)\n-\t\t      fprintf (file, \", \");\n+\t\t      fprintf (dump_file, \", \");\n \t\t    need_comma = 1;\n-\t\t    fprintf (file, \"%d got %d delays\",\n+\t\t    fprintf (dump_file, \"%d got %d delays\",\n \t\t\t     num_filled_delays[i][j][reorg_pass_number], j);\n \t\t  }\n-\t      fprintf (file, \"\\n\");\n+\t      fprintf (dump_file, \"\\n\");\n \t    }\n \t}\n       memset (total_delay_slots, 0, sizeof total_delay_slots);\n@@ -3692,35 +3692,35 @@ dbr_schedule (rtx first)\n \t\ttotal_delay_slots[0]++;\n \t    }\n \t}\n-      fprintf (file, \";; Reorg totals: \");\n+      fprintf (dump_file, \";; Reorg totals: \");\n       need_comma = 0;\n       for (j = 0; j < MAX_DELAY_HISTOGRAM + 1; j++)\n \t{\n \t  if (total_delay_slots[j])\n \t    {\n \t      if (need_comma)\n-\t\tfprintf (file, \", \");\n+\t\tfprintf (dump_file, \", \");\n \t      need_comma = 1;\n-\t      fprintf (file, \"%d got %d delays\", total_delay_slots[j], j);\n+\t      fprintf (dump_file, \"%d got %d delays\", total_delay_slots[j], j);\n \t    }\n \t}\n-      fprintf (file, \"\\n\");\n+      fprintf (dump_file, \"\\n\");\n #if defined (ANNUL_IFTRUE_SLOTS) || defined (ANNUL_IFFALSE_SLOTS)\n-      fprintf (file, \";; Reorg annuls: \");\n+      fprintf (dump_file, \";; Reorg annuls: \");\n       need_comma = 0;\n       for (j = 0; j < MAX_DELAY_HISTOGRAM + 1; j++)\n \t{\n \t  if (total_annul_slots[j])\n \t    {\n \t      if (need_comma)\n-\t\tfprintf (file, \", \");\n+\t\tfprintf (dump_file, \", \");\n \t      need_comma = 1;\n-\t      fprintf (file, \"%d got %d delays\", total_annul_slots[j], j);\n+\t      fprintf (dump_file, \"%d got %d delays\", total_annul_slots[j], j);\n \t    }\n \t}\n-      fprintf (file, \"\\n\");\n+      fprintf (dump_file, \"\\n\");\n #endif\n-      fprintf (file, \"\\n\");\n+      fprintf (dump_file, \"\\n\");\n     }\n \n   /* For all JUMP insns, fill in branch prediction notes, so that during"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "gcc/testsuite/gcc.dg/20051206-1.c", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d60e59e0dee666e71a44b2a4a32dc97b90b410a/gcc%2Ftestsuite%2Fgcc.dg%2F20051206-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d60e59e0dee666e71a44b2a4a32dc97b90b410a/gcc%2Ftestsuite%2Fgcc.dg%2F20051206-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20051206-1.c?ref=1d60e59e0dee666e71a44b2a4a32dc97b90b410a"}]}