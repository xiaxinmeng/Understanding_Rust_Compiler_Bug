{"sha": "9065ada9b5fa30d47ec723fbfbbeaad1082035cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA2NWFkYTliNWZhMzBkNDdlYzcyM2ZiZmJiZWFhZDEwODIwMzVjYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-11-22T21:13:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-11-22T21:13:08Z"}, "message": "re PR sanitizer/59061 (Port leaksanitizer)\n\n\tPR sanitizer/59061\n\t* common.opt (static-liblsan): Add.\n\t* config/gnu-user.h (STATIC_LIBLSAN_LIBS, STATIC_LIBUBSAN_LIBS):\n\tDefine.\n\t* flag-types.h (enum sanitize_code): Add SANITIZE_LEAK.  Renumber\n\tSANITIZE_SHIFT, SANITIZE_DIVIDE, SANITIZE_UNREACHABLE, SANITIZE_VLA,\n\tSANITIZE_RETURN.\n\t* opts.c (common_handle_option): Handle -fsanitize=leak.\n\t* gcc.c (ADD_STATIC_LIBLSAN_LIBS, LIBLSAN_SPEC): Define.\n\t(LIBUBSAN_SPEC): Don't test LIBUBSAN_EARLY_SPEC.\n\t(LIBUBSAN_EARLY_SPEC): Remove.\n\t(SANITIZER_EARLY_SPEC): Don't do anything for libubsan.\n\t(SANITIZER_SPEC): Add -fsanitize=leak handling.\n\t(sanitize_spec_function): Handle %sanitize(leak).\n\t* doc/invoke.texi (-static-liblsan, -fsanitize=leak): Document.\n\n\t* c-c++-common/asan/no-redundant-instrumentation-7.c: Fix\n\tcleanup-tree-dump directive.\n\n\t* configure.tgt: Set LSAN_SUPPORTED=yes for x86_64-linux.\n\t* configure.ac (LSAN_SUPPORTED): New AM_CONDITIONAL.\n\t* configure: Regenerated.\n\t* lsan/Makefile.am (toolexeclib_LTLIBRARIES, lsan_files,\n\tliblsan_la_SOURCES, liblsan_la_LIBADD, liblsan_la_LDFLAGS): Add.\n\t* lsan/Makefile.in: Regenerated.\n\nFrom-SVN: r205290", "tree": {"sha": "1e351f73c04f7b8ee40bc54557ac53f5b8b0aa2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e351f73c04f7b8ee40bc54557ac53f5b8b0aa2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9065ada9b5fa30d47ec723fbfbbeaad1082035cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9065ada9b5fa30d47ec723fbfbbeaad1082035cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9065ada9b5fa30d47ec723fbfbbeaad1082035cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2e5189c83a2b2c6f3fff04f9d8f6c1b1a869b915", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e5189c83a2b2c6f3fff04f9d8f6c1b1a869b915", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e5189c83a2b2c6f3fff04f9d8f6c1b1a869b915"}], "stats": {"total": 272, "additions": 234, "deletions": 38}, "files": [{"sha": "f298c0bef5e09781f5076b0161d904122ec197ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9065ada9b5fa30d47ec723fbfbbeaad1082035cb", "patch": "@@ -1,3 +1,21 @@\n+2013-11-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/59061\n+\t* common.opt (static-liblsan): Add.\n+\t* config/gnu-user.h (STATIC_LIBLSAN_LIBS, STATIC_LIBUBSAN_LIBS):\n+\tDefine.\n+\t* flag-types.h (enum sanitize_code): Add SANITIZE_LEAK.  Renumber\n+\tSANITIZE_SHIFT, SANITIZE_DIVIDE, SANITIZE_UNREACHABLE, SANITIZE_VLA,\n+\tSANITIZE_RETURN.\n+\t* opts.c (common_handle_option): Handle -fsanitize=leak.\n+\t* gcc.c (ADD_STATIC_LIBLSAN_LIBS, LIBLSAN_SPEC): Define.\n+\t(LIBUBSAN_SPEC): Don't test LIBUBSAN_EARLY_SPEC.\n+\t(LIBUBSAN_EARLY_SPEC): Remove.\n+\t(SANITIZER_EARLY_SPEC): Don't do anything for libubsan.\n+\t(SANITIZER_SPEC): Add -fsanitize=leak handling.\n+\t(sanitize_spec_function): Handle %sanitize(leak).\n+\t* doc/invoke.texi (-static-liblsan, -fsanitize=leak): Document.\n+\n 2013-11-22  Aldy Hernandez  <aldyh@redhat.com>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "a7af6369103cfe94c1a0e1d9c20994539188e9b8", "filename": "gcc/common.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=9065ada9b5fa30d47ec723fbfbbeaad1082035cb", "patch": "@@ -2654,6 +2654,9 @@ Driver\n static-libtsan\n Driver\n \n+static-liblsan\n+Driver\n+\n static-libubsan\n Driver\n "}, {"sha": "157e147b188d89c87c9404c3f3204d857cfd87a6", "filename": "gcc/config/gnu-user.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/gcc%2Fconfig%2Fgnu-user.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/gcc%2Fconfig%2Fgnu-user.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgnu-user.h?ref=9065ada9b5fa30d47ec723fbfbbeaad1082035cb", "patch": "@@ -134,3 +134,11 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n /* Additional libraries needed by -static-libtsan.  */\n #undef STATIC_LIBTSAN_LIBS\n #define STATIC_LIBTSAN_LIBS \"-ldl -lpthread\"\n+\n+/* Additional libraries needed by -static-liblsan.  */\n+#undef STATIC_LIBLSAN_LIBS\n+#define STATIC_LIBLSAN_LIBS \"-ldl -lpthread\"\n+\n+/* Additional libraries needed by -static-libubsan.  */\n+#undef STATIC_LIBUBSAN_LIBS\n+#define STATIC_LIBUBSAN_LIBS \"-ldl -lpthread\""}, {"sha": "0708836443aac9dce9ca3403143355a04c671c51", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=9065ada9b5fa30d47ec723fbfbbeaad1082035cb", "patch": "@@ -455,7 +455,7 @@ Objective-C and Objective-C++ Dialects}.\n @gccoptlist{@var{object-file-name}  -l@var{library} @gol\n -nostartfiles  -nodefaultlibs  -nostdlib -pie -rdynamic @gol\n -s  -static -static-libgcc -static-libstdc++ @gol\n--static-libasan -static-libtsan -static-libubsan @gol\n+-static-libasan -static-libtsan -static-liblsan -static-libubsan @gol\n -shared -shared-libgcc  -symbolic @gol\n -T @var{script}  -Wl,@var{option}  -Xlinker @var{option} @gol\n -u @var{symbol}}\n@@ -5269,6 +5269,13 @@ Memory access instructions will be instrumented to detect\n data race bugs.\n See @uref{http://code.google.com/p/data-race-test/wiki/ThreadSanitizer} for more details.\n \n+@item -fsanitize=leak\n+Enable LeakSanitizer, a memory leak detector.\n+This option only matters for linking of executables and if neither\n+@option{-fsanitize=address} nor @option{-fsanitize=thread} is used.  In that\n+case it will link the executable against a library that overrides @code{malloc}\n+and other allocator functions.\n+\n @item -fsanitize=undefined\n Enable UndefinedBehaviorSanitizer, a fast undefined behavior detector.\n Various computations will be instrumented to detect undefined behavior\n@@ -10227,6 +10234,15 @@ option is not used, then this links against the shared version of\n driver to link @file{libtsan} statically, without necessarily linking\n other libraries statically.\n \n+@item -static-liblsan\n+When the @option{-fsanitize=leak} option is used to link a program,\n+the GCC driver automatically links against @option{liblsan}.  If\n+@file{liblsan} is available as a shared library, and the @option{-static}\n+option is not used, then this links against the shared version of\n+@file{liblsan}.  The @option{-static-liblsan} option directs the GCC\n+driver to link @file{liblsan} statically, without necessarily linking\n+other libraries statically.\n+\n @item -static-libubsan\n When the @option{-fsanitize=undefined} option is used to link a program,\n the GCC driver automatically links against @option{libubsan}.  If"}, {"sha": "5ba909766fe6c2991b92ec32a420051100a29e7a", "filename": "gcc/flag-types.h", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/gcc%2Fflag-types.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/gcc%2Fflag-types.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflag-types.h?ref=9065ada9b5fa30d47ec723fbfbbeaad1082035cb", "patch": "@@ -206,13 +206,15 @@ enum sanitize_code {\n   SANITIZE_ADDRESS = 1 << 0,\n   /* ThreadSanitizer.  */\n   SANITIZE_THREAD = 1 << 1,\n+  /* LeakSanitizer.  */\n+  SANITIZE_LEAK = 1 << 2,\n   /* UndefinedBehaviorSanitizer.  */\n-  SANITIZE_SHIFT = 1 << 2,\n-  SANITIZE_DIVIDE = 1 << 3,\n-  SANITIZE_UNREACHABLE = 1 << 4,\n-  SANITIZE_VLA = 1 << 5,\n-  SANITIZE_NULL = 1 << 6,\n-  SANITIZE_RETURN = 1 << 7,\n+  SANITIZE_SHIFT = 1 << 3,\n+  SANITIZE_DIVIDE = 1 << 4,\n+  SANITIZE_UNREACHABLE = 1 << 5,\n+  SANITIZE_VLA = 1 << 6,\n+  SANITIZE_NULL = 1 << 7,\n+  SANITIZE_RETURN = 1 << 8,\n   SANITIZE_UNDEFINED = SANITIZE_SHIFT | SANITIZE_DIVIDE | SANITIZE_UNREACHABLE\n \t\t       | SANITIZE_VLA | SANITIZE_NULL | SANITIZE_RETURN\n };"}, {"sha": "4edf6771c4f92a0478d805dab2c608cfc962779a", "filename": "gcc/gcc.c", "status": "modified", "additions": 24, "deletions": 11, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=9065ada9b5fa30d47ec723fbfbbeaad1082035cb", "patch": "@@ -578,16 +578,30 @@ proper position among the other output files.  */\n #define LIBTSAN_EARLY_SPEC \"\"\n #endif\n \n+#ifndef LIBLSAN_SPEC\n+#ifdef STATIC_LIBLSAN_LIBS\n+#define ADD_STATIC_LIBLSAN_LIBS \\\n+  \" %{static-liblsan:\" STATIC_LIBLSAN_LIBS \"}\"\n+#else\n+#define ADD_STATIC_LIBLSAN_LIBS\n+#endif\n+#ifdef HAVE_LD_STATIC_DYNAMIC\n+#define LIBLSAN_SPEC \"%{!shared:%{static-liblsan:\" LD_STATIC_OPTION \\\n+\t\t     \"} -llsan %{static-liblsan:\" LD_DYNAMIC_OPTION \"}\" \\\n+\t\t     ADD_STATIC_LIBLSAN_LIBS \"}\"\n+#else\n+#define LIBLSAN_SPEC \"%{!shared:-llsan\" ADD_STATIC_LIBLSAN_LIBS \"}\"\n+#endif\n+#endif\n+\n #ifndef LIBUBSAN_SPEC\n #ifdef STATIC_LIBUBSAN_LIBS\n #define ADD_STATIC_LIBUBSAN_LIBS \\\n   \" %{static-libubsan:\" STATIC_LIBUBSAN_LIBS \"}\"\n #else\n #define ADD_STATIC_LIBUBSAN_LIBS\n #endif\n-#ifdef LIBUBSAN_EARLY_SPEC\n-#define LIBUBSAN_SPEC ADD_STATIC_LIBUBSAN_LIBS\n-#elif defined(HAVE_LD_STATIC_DYNAMIC)\n+#ifdef HAVE_LD_STATIC_DYNAMIC\n #define LIBUBSAN_SPEC \"%{static-libubsan:\" LD_STATIC_OPTION \\\n \t\t     \"} -lubsan %{static-libubsan:\" LD_DYNAMIC_OPTION \"}\" \\\n \t\t     ADD_STATIC_LIBUBSAN_LIBS\n@@ -596,10 +610,6 @@ proper position among the other output files.  */\n #endif\n #endif\n \n-#ifndef LIBUBSAN_EARLY_SPEC\n-#define LIBUBSAN_EARLY_SPEC \"\"\n-#endif\n-\n /* config.h can define LIBGCC_SPEC to override how and when libgcc.a is\n    included.  */\n #ifndef LIBGCC_SPEC\n@@ -723,8 +733,7 @@ proper position among the other output files.  */\n #ifndef SANITIZER_EARLY_SPEC\n #define SANITIZER_EARLY_SPEC \"\\\n %{!nostdlib:%{!nodefaultlibs:%{%:sanitize(address):\" LIBASAN_EARLY_SPEC \"} \\\n-    %{%:sanitize(thread):\" LIBTSAN_EARLY_SPEC \"} \\\n-    %{%:sanitize(undefined):\" LIBUBSAN_EARLY_SPEC \"}}}\"\n+    %{%:sanitize(thread):\" LIBTSAN_EARLY_SPEC \"}}}\"\n #endif\n \n /* Linker command line options for -fsanitize= late on the command line.  */\n@@ -735,7 +744,8 @@ proper position among the other output files.  */\n     %{%:sanitize(thread):%e-fsanitize=address is incompatible with -fsanitize=thread}}\\\n     %{%:sanitize(thread):\" LIBTSAN_SPEC \"\\\n     %{!pie:%{!shared:%e-fsanitize=thread linking must be done with -pie or -shared}}}\\\n-    %{%:sanitize(undefined):\" LIBUBSAN_SPEC \"}}}\"\n+    %{%:sanitize(undefined):\" LIBUBSAN_SPEC \"}\\\n+    %{%:sanitize(leak):\" LIBLSAN_SPEC \"}}}\"\n #endif\n \n /*  This is the spec to use, once the code for creating the vtable\n@@ -8123,7 +8133,10 @@ sanitize_spec_function (int argc, const char **argv)\n     return (flag_sanitize & SANITIZE_THREAD) ? \"\" : NULL;\n   if (strcmp (argv[0], \"undefined\") == 0)\n     return (flag_sanitize & SANITIZE_UNDEFINED) ? \"\" : NULL;\n-\n+  if (strcmp (argv[0], \"leak\") == 0)\n+    return ((flag_sanitize\n+\t     & (SANITIZE_ADDRESS | SANITIZE_LEAK | SANITIZE_THREAD))\n+\t    == SANITIZE_LEAK) ? \"\" : NULL;\n   return NULL;\n }\n "}, {"sha": "0c1f57e1b3c3b87692ff09b79947f3b34bd87f12", "filename": "gcc/opts.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=9065ada9b5fa30d47ec723fbfbbeaad1082035cb", "patch": "@@ -1450,6 +1450,7 @@ common_handle_option (struct gcc_options *opts,\n \t    {\n \t      { \"address\", SANITIZE_ADDRESS, sizeof \"address\" - 1 },\n \t      { \"thread\", SANITIZE_THREAD, sizeof \"thread\" - 1 },\n+\t      { \"leak\", SANITIZE_LEAK, sizeof \"leak\" - 1 },\n \t      { \"shift\", SANITIZE_SHIFT, sizeof \"shift\" - 1 },\n \t      { \"integer-divide-by-zero\", SANITIZE_DIVIDE,\n \t\tsizeof \"integer-divide-by-zero\" - 1 },"}, {"sha": "12d2c907b0513d52cbec073e1a5866b1890f9fef", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9065ada9b5fa30d47ec723fbfbbeaad1082035cb", "patch": "@@ -1,3 +1,8 @@\n+2013-11-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-c++-common/asan/no-redundant-instrumentation-7.c: Fix\n+\tcleanup-tree-dump directive.\n+\n 2013-11-22  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.dg/20081223-1.c: Add -ffat-lto-objects."}, {"sha": "bf40a0376792b53a8fef60acd85ef63be82db845", "filename": "gcc/testsuite/c-c++-common/asan/no-redundant-instrumentation-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fno-redundant-instrumentation-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fno-redundant-instrumentation-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fno-redundant-instrumentation-7.c?ref=9065ada9b5fa30d47ec723fbfbbeaad1082035cb", "patch": "@@ -20,4 +20,4 @@ foo  (int *a, char *b, char *c)\n \n /* { dg-final { scan-tree-dump-times \"__builtin___asan_report_load\" 6 \"asan0\" } } */\n /* { dg-final { scan-tree-dump-not \"__builtin___asan_report_store\" \"asan0\" } } */\n-/* { dg-final { cleanup-tree-dump \"asan\" } } */\n+/* { dg-final { cleanup-tree-dump \"asan0\" } } */"}, {"sha": "fd9b55d516f205288c494cada444107284853c60", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=9065ada9b5fa30d47ec723fbfbbeaad1082035cb", "patch": "@@ -1,3 +1,13 @@\n+2013-11-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/59061\n+\t* configure.tgt: Set LSAN_SUPPORTED=yes for x86_64-linux.\n+\t* configure.ac (LSAN_SUPPORTED): New AM_CONDITIONAL.\n+\t* configure: Regenerated.\n+\t* lsan/Makefile.am (toolexeclib_LTLIBRARIES, lsan_files,\n+\tliblsan_la_SOURCES, liblsan_la_LIBADD, liblsan_la_LDFLAGS): Add.\n+\t* lsan/Makefile.in: Regenerated.\n+\n 2013-11-22  Mike Stump  <mikestump@comcast.net>\n \n \t* sanitizer_common/sanitizer_linux.cc (__sanitizer): Grab one"}, {"sha": "22f7fee91560360b7034c96639f5937303468531", "filename": "libsanitizer/configure", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/libsanitizer%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/libsanitizer%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure?ref=9065ada9b5fa30d47ec723fbfbbeaad1082035cb", "patch": "@@ -606,6 +606,8 @@ LTLIBOBJS\n LIBOBJS\n USING_MAC_INTERPOSE_FALSE\n USING_MAC_INTERPOSE_TRUE\n+LSAN_SUPPORTED_FALSE\n+LSAN_SUPPORTED_TRUE\n TSAN_SUPPORTED_FALSE\n TSAN_SUPPORTED_TRUE\n enable_static\n@@ -11117,7 +11119,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11120 \"configure\"\n+#line 11122 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11223,7 +11225,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11226 \"configure\"\n+#line 11228 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14523,6 +14525,7 @@ fi\n \n # Get target configury.\n unset TSAN_SUPPORTED\n+unset LSAN_SUPPORTED\n . ${srcdir}/configure.tgt\n  if test \"x$TSAN_SUPPORTED\" = \"xyes\"; then\n   TSAN_SUPPORTED_TRUE=\n@@ -14532,6 +14535,14 @@ else\n   TSAN_SUPPORTED_FALSE=\n fi\n \n+ if test \"x$LSAN_SUPPORTED\" = \"xyes\"; then\n+  LSAN_SUPPORTED_TRUE=\n+  LSAN_SUPPORTED_FALSE='#'\n+else\n+  LSAN_SUPPORTED_TRUE='#'\n+  LSAN_SUPPORTED_FALSE=\n+fi\n+\n \n case \"$host\" in\n   *-*-darwin*) MAC_INTERPOSE=true ; enable_static=no ;;\n@@ -14722,6 +14733,10 @@ if test -z \"${TSAN_SUPPORTED_TRUE}\" && test -z \"${TSAN_SUPPORTED_FALSE}\"; then\n   as_fn_error \"conditional \\\"TSAN_SUPPORTED\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${LSAN_SUPPORTED_TRUE}\" && test -z \"${LSAN_SUPPORTED_FALSE}\"; then\n+  as_fn_error \"conditional \\\"LSAN_SUPPORTED\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${USING_MAC_INTERPOSE_TRUE}\" && test -z \"${USING_MAC_INTERPOSE_FALSE}\"; then\n   as_fn_error \"conditional \\\"USING_MAC_INTERPOSE\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5"}, {"sha": "f769fdb030c1e0f15fbe9efc8d76ab74894c1be8", "filename": "libsanitizer/configure.ac", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/libsanitizer%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/libsanitizer%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure.ac?ref=9065ada9b5fa30d47ec723fbfbbeaad1082035cb", "patch": "@@ -78,8 +78,10 @@ fi\n \n # Get target configury.\n unset TSAN_SUPPORTED\n+unset LSAN_SUPPORTED\n . ${srcdir}/configure.tgt\n AM_CONDITIONAL(TSAN_SUPPORTED, [test \"x$TSAN_SUPPORTED\" = \"xyes\"])\n+AM_CONDITIONAL(LSAN_SUPPORTED, [test \"x$LSAN_SUPPORTED\" = \"xyes\"])\n \n case \"$host\" in\n   *-*-darwin*) MAC_INTERPOSE=true ; enable_static=no ;;"}, {"sha": "b17ed73258d6ea71662f484516a0797ed2878d40", "filename": "libsanitizer/configure.tgt", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/libsanitizer%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/libsanitizer%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure.tgt?ref=9065ada9b5fa30d47ec723fbfbbeaad1082035cb", "patch": "@@ -23,6 +23,7 @@ case \"${target}\" in\n   x86_64-*-linux* | i?86-*-linux*)\n \tif test x$ac_cv_sizeof_void_p = x8; then\n \t\tTSAN_SUPPORTED=yes\n+\t\tLSAN_SUPPORTED=yes\n \tfi\n \t;;\n   powerpc*-*-linux*)"}, {"sha": "a312c1c262e02e2077b7570966a096ac1386707e", "filename": "libsanitizer/lsan/Makefile.am", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/libsanitizer%2Flsan%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/libsanitizer%2Flsan%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Flsan%2FMakefile.am?ref=9065ada9b5fa30d47ec723fbfbbeaad1082035cb", "patch": "@@ -9,13 +9,27 @@ AM_CXXFLAGS += $(LIBSTDCXX_RAW_CXX_CXXFLAGS)\n ACLOCAL_AMFLAGS = -I m4\n \n noinst_LTLIBRARIES = libsanitizer_lsan.la\n+if LSAN_SUPPORTED\n+toolexeclib_LTLIBRARIES = liblsan.la\n+endif\n \n sanitizer_lsan_files = \\\n \tlsan_common.cc \\\n \tlsan_common_linux.cc\n \n+lsan_files = \\\n+\t$(sanitizer_lsan_files) \\\n+\tlsan.cc \\\n+\tlsan_allocator.cc \\\n+\tlsan_interceptors.cc \\\n+\tlsan_thread.cc\n+\n libsanitizer_lsan_la_SOURCES = $(sanitizer_lsan_files)\n \n+liblsan_la_SOURCES = $(lsan_files)\n+liblsan_la_LIBADD = $(top_builddir)/sanitizer_common/libsanitizer_common.la $(top_builddir)/interception/libinterception.la $(LIBSTDCXX_RAW_CXX_LDFLAGS)\n+liblsan_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` -lpthread -ldl\n+\n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and\n # friends when we are called from the top level Makefile."}, {"sha": "f0946618eb2c642536d97e943621b2f7a39f06cf", "filename": "libsanitizer/lsan/Makefile.in", "status": "modified", "additions": 105, "deletions": 17, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/libsanitizer%2Flsan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9065ada9b5fa30d47ec723fbfbbeaad1082035cb/libsanitizer%2Flsan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Flsan%2FMakefile.in?ref=9065ada9b5fa30d47ec723fbfbbeaad1082035cb", "patch": "@@ -53,9 +53,44 @@ am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n CONFIG_CLEAN_FILES =\n CONFIG_CLEAN_VPATH_FILES =\n-LTLIBRARIES = $(noinst_LTLIBRARIES)\n-libsanitizer_lsan_la_LIBADD =\n+am__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\n+am__vpath_adj = case $$p in \\\n+    $(srcdir)/*) f=`echo \"$$p\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n+    *) f=$$p;; \\\n+  esac;\n+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n+am__install_max = 40\n+am__nobase_strip_setup = \\\n+  srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*|]/\\\\\\\\&/g'`\n+am__nobase_strip = \\\n+  for p in $$list; do echo \"$$p\"; done | sed -e \"s|$$srcdirstrip/||\"\n+am__nobase_list = $(am__nobase_strip_setup); \\\n+  for p in $$list; do echo \"$$p $$p\"; done | \\\n+  sed \"s| $$srcdirstrip/| |;\"' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,' | \\\n+  $(AWK) 'BEGIN { files[\".\"] = \"\" } { files[$$2] = files[$$2] \" \" $$1; \\\n+    if (++n[$$2] == $(am__install_max)) \\\n+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = \"\" } } \\\n+    END { for (dir in files) print dir, files[dir] }'\n+am__base_list = \\\n+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n+  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n+am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\"\n+LTLIBRARIES = $(noinst_LTLIBRARIES) $(toolexeclib_LTLIBRARIES)\n+am__DEPENDENCIES_1 =\n+liblsan_la_DEPENDENCIES =  \\\n+\t$(top_builddir)/sanitizer_common/libsanitizer_common.la \\\n+\t$(top_builddir)/interception/libinterception.la \\\n+\t$(am__DEPENDENCIES_1)\n am__objects_1 = lsan_common.lo lsan_common_linux.lo\n+am__objects_2 = $(am__objects_1) lsan.lo lsan_allocator.lo \\\n+\tlsan_interceptors.lo lsan_thread.lo\n+am_liblsan_la_OBJECTS = $(am__objects_2)\n+liblsan_la_OBJECTS = $(am_liblsan_la_OBJECTS)\n+liblsan_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \\\n+\t$(CXXFLAGS) $(liblsan_la_LDFLAGS) $(LDFLAGS) -o $@\n+@LSAN_SUPPORTED_TRUE@am_liblsan_la_rpath = -rpath $(toolexeclibdir)\n+libsanitizer_lsan_la_LIBADD =\n am_libsanitizer_lsan_la_OBJECTS = $(am__objects_1)\n libsanitizer_lsan_la_OBJECTS = $(am_libsanitizer_lsan_la_OBJECTS)\n DEFAULT_INCLUDES = -I.@am__isrc@\n@@ -71,7 +106,7 @@ CXXLD = $(CXX)\n CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n \t--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \\\n \t$(LDFLAGS) -o $@\n-SOURCES = $(libsanitizer_lsan_la_SOURCES)\n+SOURCES = $(liblsan_la_SOURCES) $(libsanitizer_lsan_la_SOURCES)\n ETAGS = etags\n CTAGS = ctags\n ACLOCAL = @ACLOCAL@\n@@ -215,11 +250,22 @@ AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic \\\n \t-Wno-variadic-macros $(LIBSTDCXX_RAW_CXX_CXXFLAGS)\n ACLOCAL_AMFLAGS = -I m4\n noinst_LTLIBRARIES = libsanitizer_lsan.la\n+@LSAN_SUPPORTED_TRUE@toolexeclib_LTLIBRARIES = liblsan.la\n sanitizer_lsan_files = \\\n \tlsan_common.cc \\\n \tlsan_common_linux.cc\n \n+lsan_files = \\\n+\t$(sanitizer_lsan_files) \\\n+\tlsan.cc \\\n+\tlsan_allocator.cc \\\n+\tlsan_interceptors.cc \\\n+\tlsan_thread.cc\n+\n libsanitizer_lsan_la_SOURCES = $(sanitizer_lsan_files)\n+liblsan_la_SOURCES = $(lsan_files)\n+liblsan_la_LIBADD = $(top_builddir)/sanitizer_common/libsanitizer_common.la $(top_builddir)/interception/libinterception.la $(LIBSTDCXX_RAW_CXX_LDFLAGS)\n+liblsan_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` -lpthread -ldl\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and\n@@ -303,6 +349,39 @@ clean-noinstLTLIBRARIES:\n \t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n \t  rm -f \"$${dir}/so_locations\"; \\\n \tdone\n+install-toolexeclibLTLIBRARIES: $(toolexeclib_LTLIBRARIES)\n+\t@$(NORMAL_INSTALL)\n+\ttest -z \"$(toolexeclibdir)\" || $(MKDIR_P) \"$(DESTDIR)$(toolexeclibdir)\"\n+\t@list='$(toolexeclib_LTLIBRARIES)'; test -n \"$(toolexeclibdir)\" || list=; \\\n+\tlist2=; for p in $$list; do \\\n+\t  if test -f $$p; then \\\n+\t    list2=\"$$list2 $$p\"; \\\n+\t  else :; fi; \\\n+\tdone; \\\n+\ttest -z \"$$list2\" || { \\\n+\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(toolexeclibdir)'\"; \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 \"$(DESTDIR)$(toolexeclibdir)\"; \\\n+\t}\n+\n+uninstall-toolexeclibLTLIBRARIES:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(toolexeclib_LTLIBRARIES)'; test -n \"$(toolexeclibdir)\" || list=; \\\n+\tfor p in $$list; do \\\n+\t  $(am__strip_dir) \\\n+\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(toolexeclibdir)/$$f'\"; \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f \"$(DESTDIR)$(toolexeclibdir)/$$f\"; \\\n+\tdone\n+\n+clean-toolexeclibLTLIBRARIES:\n+\t-test -z \"$(toolexeclib_LTLIBRARIES)\" || rm -f $(toolexeclib_LTLIBRARIES)\n+\t@list='$(toolexeclib_LTLIBRARIES)'; for p in $$list; do \\\n+\t  dir=\"`echo $$p | sed -e 's|/[^/]*$$||'`\"; \\\n+\t  test \"$$dir\" != \"$$p\" || dir=.; \\\n+\t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n+\t  rm -f \"$${dir}/so_locations\"; \\\n+\tdone\n+liblsan.la: $(liblsan_la_OBJECTS) $(liblsan_la_DEPENDENCIES) \n+\t$(liblsan_la_LINK) $(am_liblsan_la_rpath) $(liblsan_la_OBJECTS) $(liblsan_la_LIBADD) $(LIBS)\n libsanitizer_lsan.la: $(libsanitizer_lsan_la_OBJECTS) $(libsanitizer_lsan_la_DEPENDENCIES) \n \t$(CXXLINK)  $(libsanitizer_lsan_la_OBJECTS) $(libsanitizer_lsan_la_LIBADD) $(LIBS)\n \n@@ -312,8 +391,12 @@ mostlyclean-compile:\n distclean-compile:\n \t-rm -f *.tab.c\n \n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lsan.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lsan_allocator.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lsan_common.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lsan_common_linux.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lsan_interceptors.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lsan_thread.Plo@am__quote@\n \n .cc.o:\n @am__fastdepCXX_TRUE@\t$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<\n@@ -397,6 +480,9 @@ check-am: all-am\n check: check-am\n all-am: Makefile $(LTLIBRARIES)\n installdirs:\n+\tfor dir in \"$(DESTDIR)$(toolexeclibdir)\"; do \\\n+\t  test -z \"$$dir\" || $(MKDIR_P) \"$$dir\"; \\\n+\tdone\n install: install-am\n install-exec: install-exec-am\n install-data: install-data-am\n@@ -425,7 +511,7 @@ maintainer-clean-generic:\n clean: clean-am\n \n clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \\\n-\tmostlyclean-am\n+\tclean-toolexeclibLTLIBRARIES mostlyclean-am\n \n distclean: distclean-am\n \t-rm -rf ./$(DEPDIR)\n@@ -451,7 +537,7 @@ install-dvi: install-dvi-am\n \n install-dvi-am:\n \n-install-exec-am:\n+install-exec-am: install-toolexeclibLTLIBRARIES\n \n install-html: install-html-am\n \n@@ -491,22 +577,24 @@ ps: ps-am\n \n ps-am:\n \n-uninstall-am:\n+uninstall-am: uninstall-toolexeclibLTLIBRARIES\n \n .MAKE: install-am install-strip\n \n .PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \\\n-\tclean-libtool clean-noinstLTLIBRARIES ctags distclean \\\n-\tdistclean-compile distclean-generic distclean-libtool \\\n-\tdistclean-tags dvi dvi-am html html-am info info-am install \\\n-\tinstall-am install-data install-data-am install-dvi \\\n-\tinstall-dvi-am install-exec install-exec-am install-html \\\n-\tinstall-html-am install-info install-info-am install-man \\\n-\tinstall-pdf install-pdf-am install-ps install-ps-am \\\n-\tinstall-strip installcheck installcheck-am installdirs \\\n-\tmaintainer-clean maintainer-clean-generic mostlyclean \\\n-\tmostlyclean-compile mostlyclean-generic mostlyclean-libtool \\\n-\tpdf pdf-am ps ps-am tags uninstall uninstall-am\n+\tclean-libtool clean-noinstLTLIBRARIES \\\n+\tclean-toolexeclibLTLIBRARIES ctags distclean distclean-compile \\\n+\tdistclean-generic distclean-libtool distclean-tags dvi dvi-am \\\n+\thtml html-am info info-am install install-am install-data \\\n+\tinstall-data-am install-dvi install-dvi-am install-exec \\\n+\tinstall-exec-am install-html install-html-am install-info \\\n+\tinstall-info-am install-man install-pdf install-pdf-am \\\n+\tinstall-ps install-ps-am install-strip \\\n+\tinstall-toolexeclibLTLIBRARIES installcheck installcheck-am \\\n+\tinstalldirs maintainer-clean maintainer-clean-generic \\\n+\tmostlyclean mostlyclean-compile mostlyclean-generic \\\n+\tmostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \\\n+\tuninstall-am uninstall-toolexeclibLTLIBRARIES\n \n \n # Tell versions [3.59,3.63) of GNU make to not export all variables."}]}