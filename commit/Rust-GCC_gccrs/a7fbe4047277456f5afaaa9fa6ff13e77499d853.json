{"sha": "a7fbe4047277456f5afaaa9fa6ff13e77499d853", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdmYmU0MDQ3Mjc3NDU2ZjVhZmFhYTlmYTZmZjEzZTc3NDk5ZDg1Mw==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2003-05-17T21:57:38Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-05-17T21:57:38Z"}, "message": "hp320.h, [...]: Remove CPP_PREDEFINES...\n\n\t* config/m68k/hp320.h, config/m68k/linux.h, config/m68k/m68k-none.h,\n\tconfig/m68k/m68k.h, config/m68k/m68kemb.h, config/m68k/m68kv4.h,\n\tconfig/m68k/openbsd.h, config/m68k/rtemself.h: Remove CPP_PREDEFINES,\n\tuse TARGET_OS_CPP_BUILTINS and TARGET_CPU_CPP_BUILTINS instead.\n\nFrom-SVN: r66916", "tree": {"sha": "fb49fa69db28a8a4a53aae01b322906a913f60be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb49fa69db28a8a4a53aae01b322906a913f60be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7fbe4047277456f5afaaa9fa6ff13e77499d853", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7fbe4047277456f5afaaa9fa6ff13e77499d853", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7fbe4047277456f5afaaa9fa6ff13e77499d853", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7fbe4047277456f5afaaa9fa6ff13e77499d853/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3af15d5869dbf5212ada3c473a127a283cd8a417", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3af15d5869dbf5212ada3c473a127a283cd8a417", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3af15d5869dbf5212ada3c473a127a283cd8a417"}], "stats": {"total": 125, "additions": 91, "deletions": 34}, "files": [{"sha": "07f3c5cae49f220d0cc1e4ef42b45c3f2c05ab7a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7fbe4047277456f5afaaa9fa6ff13e77499d853/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7fbe4047277456f5afaaa9fa6ff13e77499d853/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a7fbe4047277456f5afaaa9fa6ff13e77499d853", "patch": "@@ -1,3 +1,10 @@\n+2003-05-17  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* config/m68k/hp320.h, config/m68k/linux.h, config/m68k/m68k-none.h,\n+\tconfig/m68k/m68k.h, config/m68k/m68kemb.h, config/m68k/m68kv4.h,\n+\tconfig/m68k/openbsd.h, config/m68k/rtemself.h: Remove CPP_PREDEFINES,\n+\tuse TARGET_OS_CPP_BUILTINS and TARGET_CPU_CPP_BUILTINS instead.\n+\n 2003-05-17  Neil Booth  <neil@daikokuya.co.uk>\n \n \tPR c/9209"}, {"sha": "0ce72a98f907d15db24b6c78372100d1a1298aba", "filename": "gcc/config/m68k/hp320.h", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7fbe4047277456f5afaaa9fa6ff13e77499d853/gcc%2Fconfig%2Fm68k%2Fhp320.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7fbe4047277456f5afaaa9fa6ff13e77499d853/gcc%2Fconfig%2Fm68k%2Fhp320.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fhp320.h?ref=a7fbe4047277456f5afaaa9fa6ff13e77499d853", "patch": "@@ -125,12 +125,21 @@ Boston, MA 02111-1307, USA.  */\n /* Translate -static for HPUX linker.  */\n #define LINK_SPEC \"%{static:-a archive}\"\n \n-/* Names to predefine in the preprocessor for this target machine\n-   (for non-strict-ANSI programs only).  */\n-/* These are the ones defined by HPUX cc, plus mc68000 for uniformity with\n-   GCC on other 68000 systems.  */\n \n-#define CPP_PREDEFINES \"-Dhp9000s200 -Dhp9000s300 -DPWB -Dhpux -Dunix -D__hp9000s300 -D__hp9000s200 -D__PWB -D__hpux -D__unix -D__motorola__ -Asystem=unix -Asystem=hpux -Acpu=m68k -Amachine=m68k\"\n+/* Target OS builtins.  These are the ones defined by HPUX cc.  */\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define_std (\"hp9000s200\");\t\\\n+\tbuiltin_define_std (\"hp9000s300\");\t\\\n+\tbuiltin_define_std (\"hpux\");\t\t\\\n+\tbuiltin_define_std (\"unix\");\t\t\\\n+\tbuiltin_define_std (\"PWB\");\t\t\\\n+\tbuiltin_define (\"__motorola__\");\t\\\n+\tbuiltin_assert (\"system=unix\");\t\t\\\n+\tbuiltin_assert (\"system=hpux\");\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n /* Every structure or union's size must be a multiple of 2 bytes.  */\n "}, {"sha": "168fca3d50b88b50db9d5ef6156bfb05e0438a20", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7fbe4047277456f5afaaa9fa6ff13e77499d853/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7fbe4047277456f5afaaa9fa6ff13e77499d853/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=a7fbe4047277456f5afaaa9fa6ff13e77499d853", "patch": "@@ -97,8 +97,20 @@ Boston, MA 02111-1307, USA.  */\n #undef WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE BITS_PER_WORD\n \n-#define CPP_PREDEFINES \\\n-  \"-D__ELF__ -Dunix -Dmc68000 -Dmc68020 -D__gnu_linux__ -Dlinux -Asystem=unix -Asystem=posix -Acpu=m68k -Amachine=m68k\"\n+/* Target OS builtins.  */\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define_std (\"mc68000\");\t\t\\\n+\tbuiltin_define_std (\"mc68020\");\t\t\\\n+\tbuiltin_define_std (\"linux\");\t\t\\\n+\tbuiltin_define_std (\"unix\");\t\t\\\n+\tbuiltin_define (\"__gnu_linux__\");\t\\\n+\tbuiltin_define (\"__ELF__\");\t\t\\\n+\tbuiltin_assert (\"system=unix\");\t\t\\\n+\tbuiltin_assert (\"system=posix\");\t\\\n+   }\t\t\t\t\t\t\\\n+  while (0)\n \n #undef CPP_SPEC\n #ifdef USE_GNULIBC_1"}, {"sha": "0c9514b89ca6890e8df9e3fffca8f8d4b4db7534", "filename": "gcc/config/m68k/m68k-none.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7fbe4047277456f5afaaa9fa6ff13e77499d853/gcc%2Fconfig%2Fm68k%2Fm68k-none.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7fbe4047277456f5afaaa9fa6ff13e77499d853/gcc%2Fconfig%2Fm68k%2Fm68k-none.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k-none.h?ref=a7fbe4047277456f5afaaa9fa6ff13e77499d853", "patch": "@@ -87,11 +87,6 @@ Unrecognized value in TARGET_CPU_DEFAULT.\n #endif\n #endif\n \f\n-/* Always define mc68000.\n-   Remember that GCC will automatically add __mc68000 and __mc68000__.  */\n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dmc68000\"\n-\n /* Define __HAVE_68881__ or nothing (soft float), appropriately.  */\n #undef CPP_FPU_SPEC\n #if TARGET_DEFAULT & MASK_68881"}, {"sha": "f0f3a166676ed5be8c56d49ab4ee47a9882769e9", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7fbe4047277456f5afaaa9fa6ff13e77499d853/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7fbe4047277456f5afaaa9fa6ff13e77499d853/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=a7fbe4047277456f5afaaa9fa6ff13e77499d853", "patch": "@@ -24,6 +24,18 @@ Boston, MA 02111-1307, USA.  */\n /* Note that some other tm.h files include this one and then override\n    many of the definitions that relate to assembler syntax.  */\n \n+/* Target CPU builtins.  */\n+#define TARGET_CPU_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__mc68000__\");\t\t\\\n+\tbuiltin_define (\"__mc68020__\");\t\t\\\n+\tbuiltin_define (\"__m68k__\");\t\t\\\n+\tbuiltin_assert (\"cpu=m68k\");\t\t\\\n+\tbuiltin_assert (\"machine=m68k\");\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n+\n \n /* Classify the groups of pseudo-ops used to assemble QI, HI and SI\n    quantities.  */\n@@ -35,10 +47,6 @@ Boston, MA 02111-1307, USA.  */\n /* Set the default */\n #define INT_OP_GROUP INT_OP_DOT_WORD\n \n-/* Names to predefine in the preprocessor for this target machine.  */\n-\n-/* See sun3.h, sun2.h, isi.h for different CPP_PREDEFINES.  */\n-\n /* Print subsidiary information on the compiler version in use.  */\n #ifdef MOTOROLA\n #define TARGET_VERSION fprintf (stderr, \" (68k, Motorola syntax)\");"}, {"sha": "231ad06bd9bb1792886ccf2936e5dae052efcc72", "filename": "gcc/config/m68k/m68kemb.h", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7fbe4047277456f5afaaa9fa6ff13e77499d853/gcc%2Fconfig%2Fm68k%2Fm68kemb.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7fbe4047277456f5afaaa9fa6ff13e77499d853/gcc%2Fconfig%2Fm68k%2Fm68kemb.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68kemb.h?ref=a7fbe4047277456f5afaaa9fa6ff13e77499d853", "patch": "@@ -41,9 +41,14 @@\n #undef NEEDS_UNTYPED_CALL\n #define NEEDS_UNTYPED_CALL 1\n \n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dmc68000 -D__embedded__ -Asystem=embedded \\\n-  -Amachine=mc68000\"\n+/* Target OS builtins.  */\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define_std (\"mc68000\");\t\t\\\n+\tbuiltin_define (\"__embedded__\");\t\\\n+   }\t\t\t\t\t\t\\\n+  while (0)\n \n /* Override the default LIB_SPEC from gcc.c.  We don't currently support\n    profiling, or libg.a.  */"}, {"sha": "66de39168b724f113a56c4263e282b064172890e", "filename": "gcc/config/m68k/m68kv4.h", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7fbe4047277456f5afaaa9fa6ff13e77499d853/gcc%2Fconfig%2Fm68k%2Fm68kv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7fbe4047277456f5afaaa9fa6ff13e77499d853/gcc%2Fconfig%2Fm68k%2Fm68kv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68kv4.h?ref=a7fbe4047277456f5afaaa9fa6ff13e77499d853", "patch": "@@ -21,6 +21,19 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+/* Target OS builtins.  */\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define_std (\"unix\");\t\t\\\n+\tbuiltin_define_std (\"m68k\");\t\t\\\n+\tbuiltin_define (\"__svr4__\");\t\t\\\n+\tbuiltin_define (\"__motorola__\");\t\\\n+\tbuiltin_assert (\"system=unix\");\t\t\\\n+\tbuiltin_assert (\"system=svr4\");\t\t\\\n+   }\t\t\t\t\t\t\\\n+  while (0)\n+\n /* Use SGS_* macros to control compilation in m68k.md */\n \n #define SGS_SWITCH_TABLES\t/* Different switch table handling */\n@@ -56,13 +69,6 @@ Boston, MA 02111-1307, USA.  */\n \n #undef PCC_STATIC_STRUCT_RETURN\n \n-/* Provide a set of pre-definitions and pre-assertions appropriate for\n-   the m68k running svr4.  __svr4__ is our extension.  */\n-\n-#define CPP_PREDEFINES \\\n-  \"-Dm68k -Dunix -D__svr4__ -D__motorola__ \\\n- -Asystem=unix -Asystem=svr4 -Acpu=m68k -Amachine=m68k\"\n-\n /* Test to see if the target includes a 68881 by default, and use CPP_SPEC\n    to control whether or not __HAVE_68881__ is defined by default or not.\n    If a 68881 is the default, gcc will use inline 68881 instructions, by"}, {"sha": "be185dbdc86540993a88a59b352b0b840e90547f", "filename": "gcc/config/m68k/openbsd.h", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7fbe4047277456f5afaaa9fa6ff13e77499d853/gcc%2Fconfig%2Fm68k%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7fbe4047277456f5afaaa9fa6ff13e77499d853/gcc%2Fconfig%2Fm68k%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fopenbsd.h?ref=a7fbe4047277456f5afaaa9fa6ff13e77499d853", "patch": "@@ -18,6 +18,17 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+/* Target OS builtins.  */\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__unix__\");\t\t\\\n+\tbuiltin_define (\"__OpenBSD__\");\t\t\\\n+\tbuiltin_assert (\"system=unix\");\t\t\\\n+\tbuiltin_assert (\"system=OpenBSD\");\t\\\n+   }\t\t\t\t\t\t\\\n+  while (0)\n+\n /* m68k is an old configuration that does not yet use the TARGET_CPU_DEFAULT\n    framework.  */\n #define TARGET_DEFAULT (MASK_BITFIELD | MASK_68881 | MASK_68020)\n@@ -33,9 +44,6 @@ Boston, MA 02111-1307, USA.  */\n #undef CPP_SPEC\n #define CPP_SPEC \"%{!msoft-float:-D__HAVE_68881__ -D__HAVE_FPU__} %{posix:-D_POSIX_SOURCE} %{pthread:-D_POSIX_THREADS}\"\n \n-/* Run-time target specifications.  */\n-#define CPP_PREDEFINES \"-D__unix__ -D__m68k__ -D__mc68000__ -D__mc68020__ -D__OpenBSD__ -Asystem=unix -Asystem=OpenBSD -Acpu=m68k -Amachine=m68k\"\n-\n /* m68k as needs to know about the processor subtype.  */\n #undef ASM_SPEC\n #define ASM_SPEC \"%{m68030} %{m68040} %{m68060} %{fpic:-k} %{fPIC:-k -K}\""}, {"sha": "393f96ab1e124dc62eb9e292d13f318ede383bc0", "filename": "gcc/config/m68k/rtemself.h", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7fbe4047277456f5afaaa9fa6ff13e77499d853/gcc%2Fconfig%2Fm68k%2Frtemself.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7fbe4047277456f5afaaa9fa6ff13e77499d853/gcc%2Fconfig%2Fm68k%2Frtemself.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Frtemself.h?ref=a7fbe4047277456f5afaaa9fa6ff13e77499d853", "patch": "@@ -22,8 +22,15 @@ Boston, MA 02111-1307, USA.  */\n \n #define MOTOROLA       /* Use Motorola syntax rather than MIT.  */\n \n-/* Specify predefined symbols in preprocessor.  */\n-\n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dmc68000 -D__rtems__ -D__ELF__ -D__USE_INIT_FINI__ \\\n-   -Asystem=rtems -Acpu=mc68000 -Acpu=m68k -Amachine=m68k\"\n+/* Target OS builtins.  */\n+#undef TARGET_OS_CPP_BUILTINS\t/* Defined in m68kemb.h.  */\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define_std (\"mc68000\");\t\t\\\n+\tbuiltin_define (\"__USE_INIT_FINI__\");\t\\\n+\tbuiltin_define (\"__rtems__\");\t\t\\\n+\tbuiltin_define (\"__ELF__\");\t\t\\\n+\tbuiltin_assert (\"system=rtems\");\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)"}]}