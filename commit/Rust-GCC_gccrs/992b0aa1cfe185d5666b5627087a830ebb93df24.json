{"sha": "992b0aa1cfe185d5666b5627087a830ebb93df24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkyYjBhYTFjZmUxODVkNTY2NmI1NjI3MDg3YTgzMGViYjkzZGYyNA==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2011-11-10T17:08:24Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2011-11-10T17:08:24Z"}, "message": "Let the compiler decide whether to inline.\n\n2011-11-10  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\t* intrinsics/cpu_time.c (__cpu_time_1): Don't force inlining.\n\t* intrinsics/random.c (rnumber_4): Remove inline attribute.\n\t(rnumber_8, rnumber_10, rnumber_16): Likewise.\n\t* intrinsics/system_clock.c (gf_gettime_mono): Likewise.\n\t* intrinsics/time_1.h (ATTRIBUTE_ALWAYS_INLINE): Remove macro.\n\t(gf_cputime): Add inline attribute for MingW version.\n\t* io/format.c (format_hash): Remove inline attribute.\n\t* io/io.h (memset4): Inline function from transfer.c and write.c\n\tmoved here.\n\t* io/transfer.c (min_off): Remove inline attribute.\n\t(memset4): Move to io.h.\n\t* io/write.c (memset4): Likewise.\n\t(memcpy4): Remove inline attribute.\n\t* io/write_float.def (calculate_exp): Likewise.\n\nFrom-SVN: r181260", "tree": {"sha": "52a5786807d13e349cc9d6257d66fd9d3c9e3366", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52a5786807d13e349cc9d6257d66fd9d3c9e3366"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/992b0aa1cfe185d5666b5627087a830ebb93df24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/992b0aa1cfe185d5666b5627087a830ebb93df24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/992b0aa1cfe185d5666b5627087a830ebb93df24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/992b0aa1cfe185d5666b5627087a830ebb93df24/comments", "author": null, "committer": null, "parents": [{"sha": "154b68db9bee50c8acb1c0440987f4ef176d2a65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/154b68db9bee50c8acb1c0440987f4ef176d2a65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/154b68db9bee50c8acb1c0440987f4ef176d2a65"}], "stats": {"total": 75, "additions": 38, "deletions": 37}, "files": [{"sha": "00e65ab72f91b843eeed51cd01a09a359db408c9", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/992b0aa1cfe185d5666b5627087a830ebb93df24/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/992b0aa1cfe185d5666b5627087a830ebb93df24/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=992b0aa1cfe185d5666b5627087a830ebb93df24", "patch": "@@ -1,3 +1,20 @@\n+2011-11-10  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* intrinsics/cpu_time.c (__cpu_time_1): Don't force inlining.\n+\t* intrinsics/random.c (rnumber_4): Remove inline attribute.\n+\t(rnumber_8, rnumber_10, rnumber_16): Likewise.\n+\t* intrinsics/system_clock.c (gf_gettime_mono): Likewise.\n+\t* intrinsics/time_1.h (ATTRIBUTE_ALWAYS_INLINE): Remove macro.\n+\t(gf_cputime): Add inline attribute for MingW version.\n+\t* io/format.c (format_hash): Remove inline attribute.\n+\t* io/io.h (memset4): Inline function from transfer.c and write.c\n+\tmoved here.\n+\t* io/transfer.c (min_off): Remove inline attribute.\n+\t(memset4): Move to io.h.\n+\t* io/write.c (memset4): Likewise.\n+\t(memcpy4): Remove inline attribute.\n+\t* io/write_float.def (calculate_exp): Likewise.\n+\n 2011-11-09  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \t* intrinsics/time_1.h (gf_gettime): Simplify time() usage."}, {"sha": "94636c41b0b669b4a97394bee93fcfdc83c048ce", "filename": "libgfortran/intrinsics/cpu_time.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/992b0aa1cfe185d5666b5627087a830ebb93df24/libgfortran%2Fintrinsics%2Fcpu_time.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/992b0aa1cfe185d5666b5627087a830ebb93df24/libgfortran%2Fintrinsics%2Fcpu_time.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fcpu_time.c?ref=992b0aa1cfe185d5666b5627087a830ebb93df24", "patch": "@@ -26,9 +26,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"time_1.h\"\n \n \n-static inline void __cpu_time_1 (long *, long *) ATTRIBUTE_ALWAYS_INLINE;\n-\n-static inline void\n+static void\n __cpu_time_1 (long *sec, long *usec)\n {\n   long user_sec, user_usec, system_sec, system_usec;"}, {"sha": "35576b85bda9ac19e6d451495c6727e3ff4a8ac9", "filename": "libgfortran/intrinsics/random.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/992b0aa1cfe185d5666b5627087a830ebb93df24/libgfortran%2Fintrinsics%2Frandom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/992b0aa1cfe185d5666b5627087a830ebb93df24/libgfortran%2Fintrinsics%2Frandom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Frandom.c?ref=992b0aa1cfe185d5666b5627087a830ebb93df24", "patch": "@@ -74,7 +74,7 @@ static __gthread_mutex_t random_lock;\n    correct offset.  */\n \n \n-static inline void\n+static void\n rnumber_4 (GFC_REAL_4 *f, GFC_UINTEGER_4 v)\n {\n   GFC_UINTEGER_4 mask;\n@@ -89,7 +89,7 @@ rnumber_4 (GFC_REAL_4 *f, GFC_UINTEGER_4 v)\n   *f = (GFC_REAL_4) v * GFC_REAL_4_LITERAL(0x1.p-32);\n }\n \n-static inline void\n+static void\n rnumber_8 (GFC_REAL_8 *f, GFC_UINTEGER_8 v)\n {\n   GFC_UINTEGER_8 mask;\n@@ -106,7 +106,7 @@ rnumber_8 (GFC_REAL_8 *f, GFC_UINTEGER_8 v)\n \n #ifdef HAVE_GFC_REAL_10\n \n-static inline void\n+static void\n rnumber_10 (GFC_REAL_10 *f, GFC_UINTEGER_8 v)\n {\n   GFC_UINTEGER_8 mask;\n@@ -126,7 +126,7 @@ rnumber_10 (GFC_REAL_10 *f, GFC_UINTEGER_8 v)\n \n /* For REAL(KIND=16), we only need to mask off the lower bits.  */\n \n-static inline void\n+static void\n rnumber_16 (GFC_REAL_16 *f, GFC_UINTEGER_8 v1, GFC_UINTEGER_8 v2)\n {\n   GFC_UINTEGER_8 mask;"}, {"sha": "6385c4f0c95dc01117e08e4fa23f82174a39f7d8", "filename": "libgfortran/intrinsics/system_clock.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/992b0aa1cfe185d5666b5627087a830ebb93df24/libgfortran%2Fintrinsics%2Fsystem_clock.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/992b0aa1cfe185d5666b5627087a830ebb93df24/libgfortran%2Fintrinsics%2Fsystem_clock.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fsystem_clock.c?ref=992b0aa1cfe185d5666b5627087a830ebb93df24", "patch": "@@ -75,7 +75,7 @@ static int weak_gettime (clockid_t, struct timespec *)\n    Return value: 0 for success, -1 for error. In case of error, errno\n    is set.\n */\n-static inline int\n+static int\n gf_gettime_mono (time_t * secs, long * nanosecs)\n {\n   int err;"}, {"sha": "aaca56ac54ae38af6492a26e00822a2a4ba3f4ae", "filename": "libgfortran/intrinsics/time_1.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/992b0aa1cfe185d5666b5627087a830ebb93df24/libgfortran%2Fintrinsics%2Ftime_1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/992b0aa1cfe185d5666b5627087a830ebb93df24/libgfortran%2Fintrinsics%2Ftime_1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Ftime_1.h?ref=992b0aa1cfe185d5666b5627087a830ebb93df24", "patch": "@@ -97,14 +97,6 @@ localtime_r (const time_t * timep, struct tm * result)\n #endif\n \n \n-#if defined (__GNUC__) && (__GNUC__ >= 3)\n-#  define ATTRIBUTE_ALWAYS_INLINE __attribute__ ((__always_inline__))\n-#else\n-#  define ATTRIBUTE_ALWAYS_INLINE\n-#endif\n-\n-static inline int gf_cputime (long *, long *, long *, long *) ATTRIBUTE_ALWAYS_INLINE;\n-\n /* Helper function for the actual implementation of the DTIME, ETIME and\n    CPU_TIME intrinsics.  Returns 0 for success or -1 if no\n    CPU time could be computed.  */\n@@ -114,7 +106,7 @@ static inline int gf_cputime (long *, long *, long *, long *) ATTRIBUTE_ALWAYS_I\n #define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n \n-static int\n+static inline int\n gf_cputime (long *user_sec, long *user_usec, long *system_sec, long *system_usec)\n {\n   union {"}, {"sha": "1711a75dd0a5f492282ab3481e051a57cd40c2cf", "filename": "libgfortran/io/format.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/992b0aa1cfe185d5666b5627087a830ebb93df24/libgfortran%2Fio%2Fformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/992b0aa1cfe185d5666b5627087a830ebb93df24/libgfortran%2Fio%2Fformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fformat.c?ref=992b0aa1cfe185d5666b5627087a830ebb93df24", "patch": "@@ -116,8 +116,8 @@ reset_fnode_counters (st_parameter_dt *dtp)\n \n /* A simple hashing function to generate an index into the hash table.  */\n \n-static inline\n-uint32_t format_hash (st_parameter_dt *dtp)\n+static uint32_t\n+format_hash (st_parameter_dt *dtp)\n {\n   char *key;\n   gfc_charlen_type key_len;"}, {"sha": "06364e17b2ca9a6d4e8356801fd6011f41d84048", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/992b0aa1cfe185d5666b5627087a830ebb93df24/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/992b0aa1cfe185d5666b5627087a830ebb93df24/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=992b0aa1cfe185d5666b5627087a830ebb93df24", "patch": "@@ -801,5 +801,14 @@ dec_waiting_unlocked (gfc_unit *u)\n #endif\n }\n \n+\n+static inline void\n+memset4 (gfc_char4_t *p, gfc_char4_t c, int k)\n+{\n+  int j;\n+  for (j = 0; j < k; j++)\n+    *p++ = c;\n+}\n+\n #endif\n "}, {"sha": "976102f3a8e3d24abb42c08177f3a3d0787f876b", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/992b0aa1cfe185d5666b5627087a830ebb93df24/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/992b0aa1cfe185d5666b5627087a830ebb93df24/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=992b0aa1cfe185d5666b5627087a830ebb93df24", "patch": "@@ -2877,7 +2877,7 @@ next_record_r_unf (st_parameter_dt *dtp, int complete_record)\n }\n \n \n-static inline gfc_offset\n+static gfc_offset\n min_off (gfc_offset a, gfc_offset b)\n {\n   return (a < b ? a : b);\n@@ -3136,13 +3136,6 @@ sset (stream * s, int c, ssize_t nbyte)\n   return nbyte - bytes_left;\n }\n \n-static inline void\n-memset4 (gfc_char4_t *p, gfc_char4_t c, int k)\n-{\n-  int j;\n-  for (j = 0; j < k; j++)\n-    *p++ = c;\n-}\n \n /* Position to the next record in write mode.  */\n "}, {"sha": "8be3a5a72bf5322a05d9cde0e54c8410700a8651", "filename": "libgfortran/io/write.c", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/992b0aa1cfe185d5666b5627087a830ebb93df24/libgfortran%2Fio%2Fwrite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/992b0aa1cfe185d5666b5627087a830ebb93df24/libgfortran%2Fio%2Fwrite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fwrite.c?ref=992b0aa1cfe185d5666b5627087a830ebb93df24", "patch": "@@ -41,15 +41,7 @@ typedef unsigned char uchar;\n /* Helper functions for character(kind=4) internal units.  These are needed\n    by write_float.def.  */\n \n-static inline void\n-memset4 (gfc_char4_t *p, gfc_char4_t c, int k)\n-{\n-  int j;\n-  for (j = 0; j < k; j++)\n-    *p++ = c;\n-}\n-\n-static inline void\n+static void\n memcpy4 (gfc_char4_t *dest, const char *source, int k)\n {\n   int j;"}, {"sha": "78f09b2982085fd285972739a145e704802a1c3d", "filename": "libgfortran/io/write_float.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/992b0aa1cfe185d5666b5627087a830ebb93df24/libgfortran%2Fio%2Fwrite_float.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/992b0aa1cfe185d5666b5627087a830ebb93df24/libgfortran%2Fio%2Fwrite_float.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fwrite_float.def?ref=992b0aa1cfe185d5666b5627087a830ebb93df24", "patch": "@@ -774,7 +774,7 @@ write_infnan (st_parameter_dt *dtp, const fnode *f, int isnan_flag, int sign_bit\n /* Returns the value of 10**d.  */\n \n #define CALCULATE_EXP(x) \\\n-inline static GFC_REAL_ ## x \\\n+static GFC_REAL_ ## x \\\n calculate_exp_ ## x  (int d)\\\n {\\\n   int i;\\"}]}