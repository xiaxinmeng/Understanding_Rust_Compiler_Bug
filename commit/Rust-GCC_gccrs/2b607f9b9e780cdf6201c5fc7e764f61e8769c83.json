{"sha": "2b607f9b9e780cdf6201c5fc7e764f61e8769c83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI2MDdmOWI5ZTc4MGNkZjYyMDFjNWZjN2U3NjRmNjFlODc2OWM4Mw==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2013-07-04T16:55:20Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2013-07-04T16:55:20Z"}, "message": "vrp66.c: Make conditional on { target { ! int16 } } .\n\n        * gcc.dg/tree-ssa/vrp66.c: Make conditional on { target { ! int16 } } .\n        * gcc.dg/tree-ssa/vrp66-int16-sw.c: New test.\n\nFrom-SVN: r200679", "tree": {"sha": "d52bf4ecdd394553c87189fb82f14a7e6b7df67c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d52bf4ecdd394553c87189fb82f14a7e6b7df67c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b607f9b9e780cdf6201c5fc7e764f61e8769c83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b607f9b9e780cdf6201c5fc7e764f61e8769c83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b607f9b9e780cdf6201c5fc7e764f61e8769c83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b607f9b9e780cdf6201c5fc7e764f61e8769c83/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8990e73a27e10f3a0ba4a210a5001eb8622b2771", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8990e73a27e10f3a0ba4a210a5001eb8622b2771", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8990e73a27e10f3a0ba4a210a5001eb8622b2771"}], "stats": {"total": 921, "additions": 920, "deletions": 1}, "files": [{"sha": "7e72edf668f0b83fcc29ba7f192d8e83f1c06085", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b607f9b9e780cdf6201c5fc7e764f61e8769c83/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b607f9b9e780cdf6201c5fc7e764f61e8769c83/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2b607f9b9e780cdf6201c5fc7e764f61e8769c83", "patch": "@@ -1,3 +1,8 @@\n+2013-07-04  Joern Rennecke <joern.rennecke@embecosm.com>\n+\n+\t* gcc.dg/tree-ssa/vrp66.c: Make conditional on { target { ! int16 } } .\n+\t* gcc.dg/tree-ssa/vrp66-int16-sw.c: New test.\n+\n 2013-07-04  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/54998"}, {"sha": "b194d2370e03128db2ac968c27b4df8f02bf9f30", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp66-int16-sw.c", "status": "added", "additions": 914, "deletions": 0, "changes": 914, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b607f9b9e780cdf6201c5fc7e764f61e8769c83/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp66-int16-sw.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b607f9b9e780cdf6201c5fc7e764f61e8769c83/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp66-int16-sw.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp66-int16-sw.c?ref=2b607f9b9e780cdf6201c5fc7e764f61e8769c83", "patch": "@@ -0,0 +1,914 @@\n+/* PR tree-optimization/52267 */\n+/* { dg-do run { target { int16 } } } */\n+/* { dg-options \"-O2\" } */\n+\n+extern void abort (void);\n+\n+#define BITSM1 (sizeof (int) * __CHAR_BIT__ - 1)\n+#define BITSH ((sizeof (int) - sizeof (short)) * __CHAR_BIT__)\n+\n+void\n+f1 (unsigned int s)\n+{\n+  if ((s & (7U << (BITSM1 - 2))) != 0)\n+    {\n+      if (s == (0xc000U << BITSH) - 1 || s == (0xf000U << BITSH) - 1\n+\t  || s == (0x9000U << BITSH) - 1 || s == (0xa031U << BITSH) - 1\n+\t  || s == (0xbfbfU << BITSH) || s == (0xc000U << BITSH)\n+\t  || s == (0xf000U << BITSH) || s == (0x9000U << BITSH)\n+\t  || s == (0xc000U << BITSH) + 1 || s == -1U || s == -15U\n+\t  || s == 0x3cbf || s == 0x3cc0\n+\t  || s == -15550U || s == -15552U || s == (0x7000 << BITSH) - 1\n+\t  || s == (0x7000 << BITSH) || s == (1 << (BITSM1 - 2))\n+\t  || s == 1U + __INT_MAX__ || s == -32U\n+\t  || s == (3 << (BITSM1 - 2)) + 2 || s == -5U || s == -63U\n+\t  || s == -64U || s == -65U || s == 6U + __INT_MAX__ || s == -8189U\n+\t  || s == -8191U || s == -8192U || s == -8193U || s == -8250U\n+\t  || s == -8255U || s == -8256U || s == -8257U || s == __INT_MAX__\n+\t  || s == __INT_MAX__ + 9U)\n+\treturn;\n+    }\n+  else\n+    {\n+      if (s == 0 || s == 0x1cbf || s == 0x1cc0 || s == 0x1fff || s == 0x2000\n+\t  || s == 0x20 || s == 0x3f || s == 1\n+\t  || s == (1 << (BITSM1 - 2)) - 1 || s == 2 || s == 24 || s == 5)\n+\treturn;\n+    }\n+  abort ();\n+}\n+\n+void\n+f2 (int s)\n+{\n+  if ((s & (7U << (BITSM1 - 2))) == 0)\n+    {\n+      if (s == 0 || s == 0x1cbf || s == 0x1cc0 || s == 0x1fff || s == 0x2000\n+\t  || s == 0x20 || s == 0x3f || s == 1\n+\t  || s == (1 << (BITSM1 - 2)) - 1 || s == 2 || s == 24 || s == 5)\n+\treturn;\n+    }\n+  else\n+    {\n+      if (s == (-0x4000 << BITSH) - 1 || s == (-0x1000 << BITSH) - 1\n+\t  || s == (-0x7000 << BITSH) - 1 || s == (-0x5fcf << BITSH) - 1\n+\t  || s == (-0x4041 << BITSH) || s == (-0x4000 << BITSH)\n+\t  || s == (-0x1000 << BITSH) || s == (-0x7000 << BITSH)\n+\t  || s == (-0x4000 << BITSH) + 1 || s == -1 || s == -15 || s == -15550\n+\t  || s == 0x3cbf || s == 0x3cc0\n+\t  || s == -15552 || s == (0x7000 << BITSH) - 1\n+\t  || s == (0x7000 << BITSH) || s == (1 << (BITSM1 - 2))\n+\t  || s == -__INT_MAX__ - 1 || s == -32 || s == (3 << (BITSM1 - 2)) + 2\n+\t  || s == -5 || s == -63 || s == -64 || s == -65\n+\t  || s == -__INT_MAX__ + 4 || s == -8189 || s == -8191 || s == -8192\n+\t  || s == -8193 || s == -8250 || s == -8255 || s == -8256\n+\t  || s == -8257 || s == __INT_MAX__ || s == -__INT_MAX__ + 7)\n+\treturn;\n+    }\n+  abort ();\n+}\n+\n+void\n+f3 (unsigned int s)\n+{\n+  if ((s & 0x3cc0) == 0)\n+    {\n+      if (s == 0 || s == 0x20 || s == 0x3f\n+\t  || s == (0xc000U << BITSH)\n+\t  || s == (0xc000U << BITSH) + 1 || s == 1\n+\t  || s == 1U + __INT_MAX__ || s == 2 || s == 24\n+\t  || s == 5 || s == 6U + __INT_MAX__\n+\t  || s == __INT_MAX__ + 9U)\n+\treturn;\n+    }\n+  else\n+    {\n+      if (s == 0x1cbf || s == 0x1cc0 || s == 0x1fff || s == 0x2000\n+\t  || s == (0xbfbfU << BITSH) || s == (0xf000U << BITSH)\n+\t  || s == (0x9000U << BITSH)\n+\t  || s == (0x7000 << BITSH) || s == (1 << (BITSM1 - 2))\n+\t  || s == (3 << (BITSM1 - 2)) + 2\n+\t  || s == 0x3cbf || s == 0x3cc0 || s == (0xc000U << BITSH) - 1\n+\t  || s == (0xf000U << BITSH) - 1 || s == (0x9000U << BITSH) - 1\n+\t  || s == (0xa031U << BITSH) - 1 || s == -1U || s == -15U\n+\t  || s == -15550U || s == -15552U || s == (0x7000 << BITSH) - 1\n+\t  || s == (1 << (BITSM1 - 2)) - 1 || s == -32U || s == -5U\n+\t  || s == -63U || s == -64U || s == -65U || s == -8189U || s == -8191U\n+\t  || s == -8192U || s == -8193U || s == -8250U || s == -8255U\n+\t  || s == -8256U || s == -8257U || s == __INT_MAX__)\n+\treturn;\n+    }\n+  abort ();\n+}\n+\n+void\n+f4 (int s)\n+{\n+  if ((s & 0x3cc0) == 0)\n+    {\n+      if (s == 0 || s == 0x20 || s == 0x3f\n+\t  || s == (-0x4000 << BITSH)\n+\t  || s == (-0x4000 << BITSH) + 1 || s == 1\n+\t  || s == -__INT_MAX__ - 1 || s == 2 || s == 24\n+\t  || s == 5 || s == -__INT_MAX__ + 4\n+\t  || s == -__INT_MAX__ + 7)\n+\treturn;\n+    }\n+  else\n+    {\n+      if (s == 0x1cbf || s == 0x1cc0 || s == 0x1fff || s == 0x2000\n+\t  || s == (-0x4041 << BITSH) || s == (-0x1000 << BITSH)\n+\t  || s == (-0x7000 << BITSH)\n+\t  || s == (0x7000 << BITSH) || s == (1 << (BITSM1 - 2))\n+\t  || s == (3 << (BITSM1 - 2)) + 2\n+\t  || s == 0x3cbf || s == 0x3cc0 || s == (-0x4000 << BITSH) - 1\n+\t  || s == (-0x1000 << BITSH) - 1 || s == (-0x7000 << BITSH) - 1\n+\t  || s == (-0x5fcf << BITSH) - 1 || s == -1 || s == -15 || s == -15550\n+\t  || s == -15552 || s == (0x7000 << BITSH) - 1\n+\t  || s == (1 << (BITSM1 - 2)) - 1 || s == -32 || s == -5 || s == -63\n+\t  || s == -64 || s == -65 || s == -8189 || s == -8191 || s == -8192\n+\t  || s == -8193 || s == -8250 || s == -8255 || s == -8256\n+\t  || s == -8257 || s == __INT_MAX__)\n+\treturn;\n+    }\n+  abort ();\n+}\n+\n+void\n+f5 (int s)\n+{\n+  if ((s & 0x3cc0U) == 0)\n+    {\n+      if (s == 0 || s == 0x20 || s == 0x3f\n+\t  || s == (-0x4000 << BITSH)\n+\t  || s == (-0x4000 << BITSH) + 1 || s == 1\n+\t  || s == -__INT_MAX__ - 1 || s == 2 || s == 24\n+\t  || s == 5 || s == -__INT_MAX__ + 4\n+\t  || s == -__INT_MAX__ + 7)\n+\treturn;\n+    }\n+  else\n+    {\n+      if (s == 0x1cbf || s == 0x1cc0 || s == 0x1fff || s == 0x2000\n+\t  || s == (-0x4041 << BITSH) || s == (-0x1000 << BITSH)\n+\t  || s == (-0x7000 << BITSH)\n+\t  || s == (0x7000 << BITSH) || s == (1 << (BITSM1 - 2))\n+\t  || s == (3 << (BITSM1 - 2)) + 2\n+\t  || s == 0x3cbf || s == 0x3cc0 || s == (-0x4000 << BITSH) - 1\n+\t  || s == (-0x1000 << BITSH) - 1 || s == (-0x7000 << BITSH) - 1\n+\t  || s == (-0x5fcf << BITSH) - 1 || s == -1 || s == -15 || s == -15550\n+\t  || s == -15552 || s == (0x7000 << BITSH) - 1\n+\t  || s == (1 << (BITSM1 - 2)) - 1 || s == -32 || s == -5 || s == -63\n+\t  || s == -64 || s == -65 || s == -8189 || s == -8191 || s == -8192\n+\t  || s == -8193 || s == -8250 || s == -8255 || s == -8256\n+\t  || s == -8257 || s == __INT_MAX__)\n+\treturn;\n+    }\n+  abort ();\n+}\n+\n+void\n+f6 (unsigned int s)\n+{\n+  if ((s & 0x3cc0) == 0x3cc0)\n+    {\n+      if (s == 0x3cc0 || s == (0xc000U << BITSH) - 1\n+\t  || s == -1U || s == -15U\n+\t  || s == (1 << (BITSM1 - 2)) - 1\n+\t  || s == -32U || s == -5U || s == -63U || s == -64U\n+\t  || s == __INT_MAX__)\n+\treturn;\n+    }\n+  else\n+    {\n+      if (s == 0 || s == 0x1cbf || s == 0x1cc0 || s == 0x1fff || s == 0x2000\n+\t  || s == (0xf000U << BITSH) - 1 || s == (0x9000U << BITSH) - 1\n+\t  || s == (0xa031U << BITSH) - 1\n+\t  || s == (0x7000 << BITSH) - 1\n+\t  || s == 0x20 || s == 0x3cbf || s == 0x3f || s == (0xbfbfU << BITSH)\n+\t  || s == (0xc000U << BITSH) || s == (0xf000U << BITSH)\n+\t  || s == (0x9000U << BITSH) || s == (0xc000U << BITSH) + 1 || s == 1\n+\t  || s == -15550U || s == -15552U || s == (0x7000 << BITSH)\n+\t  || s == (1 << (BITSM1 - 2)) || s == 1U + __INT_MAX__ || s == 2\n+\t  || s == 24 || s == (3 << (BITSM1 - 2)) + 2 || s == 5 || s == -65U\n+\t  || s == 6U + __INT_MAX__ || s == -8189U || s == -8191U\n+\t  || s == -8192U || s == -8193U || s == -8250U || s == -8255U\n+\t  || s == -8256U || s == -8257U || s == __INT_MAX__ + 9U)\n+\treturn;\n+    }\n+  abort ();\n+}\n+\n+void\n+f7 (int s)\n+{\n+  if ((s & 0x3cc0) == 0x3cc0)\n+    {\n+      if (s == 0x3cc0 || s == (-0x4000 << BITSH) - 1\n+\t  || s == -1 || s == -15\n+\t  || s == (1 << (BITSM1 - 2)) - 1\n+\t  || s == -32 || s == -5 || s == -63 || s == -64 || s == __INT_MAX__)\n+\treturn;\n+    }\n+  else\n+    {\n+      if (s == 0 || s == 0x1cbf || s == 0x1cc0 || s == 0x1fff || s == 0x2000\n+\t  || s == (-0x1000 << BITSH) - 1 || s == (-0x7000 << BITSH) - 1\n+\t  || s == (-0x5fcf << BITSH) - 1\n+\t  || s == (0x7000 << BITSH) - 1\n+\t  || s == 0x20 || s == 0x3cbf || s == 0x3f || s == (-0x4041 << BITSH)\n+\t  || s == (-0x4000 << BITSH) || s == (-0x1000 << BITSH)\n+\t  || s == (-0x7000 << BITSH) || s == (-0x4000 << BITSH) + 1 || s == 1\n+\t  || s == -15550 || s == -15552 || s == (0x7000 << BITSH)\n+\t  || s == (1 << (BITSM1 - 2)) || s == -__INT_MAX__ - 1 || s == 2\n+\t  || s == 24 || s == (3 << (BITSM1 - 2)) + 2 || s == 5 || s == -65\n+\t  || s == -__INT_MAX__ + 4 || s == -8189 || s == -8191 || s == -8192\n+\t  || s == -8193 || s == -8250 || s == -8255 || s == -8256\n+\t  || s == -8257 || s == -__INT_MAX__ + 7)\n+\treturn;\n+    }\n+  abort ();\n+}\n+\n+void\n+f8 (int s)\n+{\n+  if ((s & 0x3cc0U) == 0x3cc0)\n+    {\n+      if (s == 0x3cc0 || s == (-0x4000 << BITSH) - 1\n+\t  || s == -1 || s == -15\n+\t  || s == (1 << (BITSM1 - 2)) - 1\n+\t  || s == -32 || s == -5 || s == -63 || s == -64 || s == __INT_MAX__)\n+\treturn;\n+    }\n+  else\n+    {\n+      if (s == 0 || s == 0x1cbf || s == 0x1cc0 || s == 0x1fff || s == 0x2000\n+\t  || s == (-0x1000 << BITSH) - 1 || s == (-0x7000 << BITSH) - 1\n+\t  || s == (-0x5fcf << BITSH) - 1\n+\t  || s == (0x7000 << BITSH) - 1\n+\t  || s == 0x20 || s == 0x3cbf || s == 0x3f || s == (-0x4041 << BITSH)\n+\t  || s == (-0x4000 << BITSH) || s == (-0x1000 << BITSH)\n+\t  || s == (-0x7000 << BITSH) || s == (-0x4000 << BITSH) + 1 || s == 1\n+\t  || s == -15550 || s == -15552 || s == (0x7000 << BITSH)\n+\t  || s == (1 << (BITSM1 - 2)) || s == -__INT_MAX__ - 1 || s == 2\n+\t  || s == 24 || s == (3 << (BITSM1 - 2)) + 2 || s == 5 || s == -65\n+\t  || s == -__INT_MAX__ + 4 || s == -8189 || s == -8191 || s == -8192\n+\t  || s == -8193 || s == -8250 || s == -8255 || s == -8256\n+\t  || s == -8257 || s == -__INT_MAX__ + 7)\n+\treturn;\n+    }\n+  abort ();\n+}\n+\n+void\n+f9 (unsigned int s)\n+{\n+  if ((s & 0x3cc0) >= 0x1cc0)\n+    {\n+      if (s == 0x1cc0 || s == 0x1fff || s == 0x2000 || s == 0x3cbf\n+\t  || s == 0x3cc0 || s == (0xc000U << BITSH) - 1\n+\t  || s == (0xf000U << BITSH) - 1\n+\t  || s == (0xbfbfU << BITSH) || s == (0xf000U << BITSH)\n+\t  || s == (0x7000 << BITSH)\n+\t  || s == (1 << (BITSM1 - 2)) || s == (3 << (BITSM1 - 2)) + 2\n+\t  || s == (0xa031U << BITSH) - 1 || s == -1U || s == -15U\n+\t  || s == (0x7000 << BITSH) - 1 || s == (1 << (BITSM1 - 2)) - 1\n+\t  || s == -32U || s == -5U || s == -63U || s == -64U || s == -65U\n+\t  || s == -8189U || s == -8191U || s == -8192U || s == -8193U\n+\t  || s == -8250U || s == -8255U || s == -8256U || s == __INT_MAX__)\n+\treturn;\n+    }\n+  else\n+    {\n+      if (s == 0 || s == 0x1cbf || s == 0x20 || s == 0x3f\n+\t  || s == (0x9000U << BITSH) - 1 || s == (0xc000U << BITSH)\n+\t  || s == (0x9000U << BITSH)\n+\t  || s == (0xc000U << BITSH) + 1 || s == 1 || s == -15550U\n+\t  || s == -15552U\n+\t  || s == 1U + __INT_MAX__ || s == 2\n+\t  || s == 24 || s == 5\n+\t  || s == 6U + __INT_MAX__ || s == -8257U || s == __INT_MAX__ + 9U)\n+\treturn;\n+    }\n+  abort ();\n+}\n+\n+void\n+f10 (unsigned int s)\n+{\n+  if ((s & 0x3cc0) > 0x1cc0)\n+    {\n+      if (s == 0x2000 || s == 0x3cbf || s == 0x3cc0\n+\t  || s == (0xc000U << BITSH) - 1 || s == (0xf000U << BITSH) - 1\n+\t  || s == (0xbfbfU << BITSH) || s == (0xa031U << BITSH) - 1\n+\t  || s == (0xf000U << BITSH)\n+\t  || s == -1U || s == -15U || s == (0x7000 << BITSH) - 1\n+\t  || s == (0x7000 << BITSH) || s == (1 << (BITSM1 - 2))\n+\t  || s == -32U || s == (3 << (BITSM1 - 2)) + 2 || s == -5U\n+\t  || s == -63U || s == -64U || s == -65U || s == -8189U || s == -8191U\n+\t  || s == -8192U || s == __INT_MAX__)\n+\treturn;\n+    }\n+  else\n+    {\n+      if (s == 0 || s == 0x1cbf || s == 0x1cc0 || s == 0x1fff || s == 0x20\n+\t  || s == 0x3f || s == (0x9000U << BITSH) - 1\n+\t  || s == (0xc000U << BITSH) || s == (0x9000U << BITSH)\n+\t  || s == (0xc000U << BITSH) + 1 || s == 1 || s == -15550U\n+\t  || s == -15552U || s == (1 << (BITSM1 - 2)) - 1\n+\t  || s == 1U + __INT_MAX__ || s == 2\n+\t  || s == 24 || s == 5\n+\t  || s == 6U + __INT_MAX__ || s == -8193U || s == -8250U\n+\t  || s == -8255U || s == -8256U || s == -8257U\n+\t  || s == __INT_MAX__ + 9U)\n+\treturn;\n+    }\n+  abort ();\n+}\n+\n+void\n+f11 (int s)\n+{\n+  if ((s & 0x3cc0) >= 0x1cc0)\n+    {\n+      if (s == 0x1cc0 || s == 0x1fff || s == 0x2000 || s == 0x3cbf\n+\t  || s == 0x3cc0 || s == (-0x4000 << BITSH) - 1\n+\t  || s == (-0x1000 << BITSH) - 1\n+\t  || s == (-0x4041 << BITSH)\n+\t  || s == (-0x1000 << BITSH)\n+\t  || s == (0x7000 << BITSH) || s == (1 << (BITSM1 - 2))\n+\t  || s == (3 << (BITSM1 - 2)) + 2\n+\t  || s == (-0x5fcf << BITSH) - 1 || s == -1 || s == -15\n+\t  || s == (0x7000 << BITSH) - 1 || s == (1 << (BITSM1 - 2)) - 1\n+\t  || s == -32 || s == -5 || s == -63 || s == -64 || s == -65\n+\t  || s == -8189 || s == -8191 || s == -8192 || s == -8193\n+\t  || s == -8250 || s == -8255 || s == -8256 || s == __INT_MAX__)\n+\treturn;\n+    }\n+  else\n+    {\n+      if (s == 0 || s == 0x1cbf || s == 0x20 || s == 0x3f\n+\t  || s == (-0x7000 << BITSH) - 1 || s == (-0x4000 << BITSH)\n+\t  || s == (-0x7000 << BITSH)\n+\t  || s == (-0x4000 << BITSH) + 1 || s == 1 || s == -15550\n+\t  || s == -15552\n+\t  || s == -__INT_MAX__ - 1 || s == 2 || s == 24\n+\t  || s == 5 || s == -__INT_MAX__ + 4\n+\t  || s == -8257 || s == -__INT_MAX__ + 7)\n+\treturn;\n+    }\n+  abort ();\n+}\n+\n+void\n+f12 (int s)\n+{\n+  if ((s & 0x3cc0) > 0x1cc0)\n+    {\n+      if (s == 0x2000 || s == 0x3cbf || s == 0x3cc0\n+\t  || s == (-0x4000 << BITSH) - 1 || s == (-0x1000 << BITSH) - 1\n+\t  || s == (-0x5fcf << BITSH) - 1\n+\t  || s == (-0x4041 << BITSH)\n+\t  || s == (-0x1000 << BITSH)\n+\t  || s == -1 || s == -15 || s == (0x7000 << BITSH) - 1\n+\t  || s == (0x7000 << BITSH) || s == (1 << (BITSM1 - 2))\n+\t  || s == (3 << (BITSM1 - 2)) + 2\n+\t  || s == -32 || s == -5 || s == -63\n+\t  || s == -64 || s == -65 || s == -8189 || s == -8191 || s == -8192\n+\t  || s == __INT_MAX__)\n+\treturn;\n+    }\n+  else\n+    {\n+      if (s == 0 || s == 0x1cbf || s == 0x1cc0 || s == 0x1fff || s == 0x20\n+\t  || s == 0x3f || s == (-0x7000 << BITSH) - 1\n+\t  || s == (-0x4000 << BITSH) || s == (-0x7000 << BITSH)\n+\t  || s == (-0x4000 << BITSH) + 1 || s == 1 || s == -15550\n+\t  || s == -15552 || s == (1 << (BITSM1 - 2)) - 1\n+\t  || s == -__INT_MAX__ - 1 || s == 2 || s == 24\n+\t  || s == 5 || s == -__INT_MAX__ + 4\n+\t  || s == -8193 || s == -8250 || s == -8255 || s == -8256\n+\t  || s == -8257 || s == -__INT_MAX__ + 7)\n+\treturn;\n+    }\n+  abort ();\n+}\n+\n+void\n+f13 (unsigned int s)\n+{\n+  if ((s & (0xe071U << BITSH)) > (0xb030U << BITSH))\n+    {\n+      if (s == (0xf000U << BITSH) - 1 || s == (0xc000U << BITSH)\n+\t  || s == (0xf000U << BITSH) || s == (0xc000U << BITSH) + 1\n+\t  || s == -1U || s == -15U || s == -15550U || s == -15552U\n+\t  || s == -32U || s == -5U || s == -63U || s == -64U || s == -65U\n+\t  || s == -8189U || s == -8191U || s == -8192U || s == -8193U\n+\t  || s == -8250U || s == -8255U || s == -8256U || s == -8257U)\n+\treturn;\n+    }\n+  else\n+    {\n+      if (s == 0 || s == 0x1cbf || s == 0x1cc0 || s == 0x1fff || s == 0x2000\n+\t  || s == 0x20 || s == 0x3cbf || s == 0x3cc0 || s == 0x3f\n+\t  || s == (0xc000U << BITSH) - 1 || s == (0x9000U << BITSH) - 1\n+\t  || s == (0xa031U << BITSH) - 1 || s == (0xbfbfU << BITSH)\n+\t  || s == (0x9000U << BITSH) || s == 1 || s == (0x7000 << BITSH) - 1\n+\t  || s == (0x7000 << BITSH) || s == (1 << (BITSM1 - 2))\n+\t  || s == (1 << (BITSM1 - 2)) - 1 || s == 1U + __INT_MAX__ || s == 2\n+\t  || s == 24 || s == (3 << (BITSM1 - 2)) + 2 || s == 5\n+\t  || s == 6U + __INT_MAX__ || s == __INT_MAX__\n+\t  || s == __INT_MAX__ + 9U)\n+\treturn;\n+    }\n+  abort ();\n+}\n+\n+void\n+f14 (unsigned int s)\n+{\n+  if ((s & (0xe071U << BITSH)) > (0xa030U << BITSH))\n+    {\n+      if (s == (0xc000U << BITSH) - 1 || s == (0xf000U << BITSH) - 1\n+\t  || s == (0xbfbfU << BITSH) || s == (0xc000U << BITSH)\n+\t  || s == (0xf000U << BITSH) || s == (0xc000U << BITSH) + 1\n+\t  || s == -1U || s == -15U || s == -15550U || s == -15552U\n+\t  || s == -32U || s == -5U || s == -63U || s == -64U || s == -65U\n+\t  || s == -8189U || s == -8191U || s == -8192U || s == -8193U\n+\t  || s == -8250U || s == -8255U || s == -8256U || s == -8257U)\n+\treturn;\n+    }\n+  else\n+    {\n+      if (s == 0 || s == 0x1cbf || s == 0x1cc0 || s == 0x1fff || s == 0x2000\n+\t  || s == 0x20 || s == 0x3cbf || s == 0x3cc0 || s == 0x3f\n+\t  || s == (0x9000U << BITSH) - 1 || s == (0xa031U << BITSH) - 1\n+\t  || s == (0x9000U << BITSH) || s == 1 || s == (0x7000 << BITSH) - 1\n+\t  || s == (0x7000 << BITSH) || s == (1 << (BITSM1 - 2))\n+\t  || s == (1 << (BITSM1 - 2)) - 1 || s == 1U + __INT_MAX__ || s == 2\n+\t  || s == 24 || s == (3 << (BITSM1 - 2)) + 2 || s == 5\n+\t  || s == 6U + __INT_MAX__ || s == __INT_MAX__\n+\t  || s == __INT_MAX__ + 9U)\n+\treturn;\n+    }\n+  abort ();\n+}\n+\n+void\n+f15 (int s)\n+{\n+  if ((s & ((-0x1f8f) << BITSH)) > ((-0x4fd0) << BITSH))\n+    {\n+      if (s == 0 || s == 0x1cbf || s == 0x1cc0 || s == 0x1fff || s == 0x2000\n+\t  || s == 0x20 || s == 0x3cbf || s == 0x3cc0 || s == 0x3f\n+\t  || s == (-0x1000 << BITSH) - 1 || s == (-0x4000 << BITSH)\n+\t  || s == (-0x1000 << BITSH) || s == (-0x4000 << BITSH) + 1 || s == 1\n+\t  || s == -1 || s == -15 || s == -15550 || s == -15552\n+\t  || s == (0x7000 << BITSH) - 1 || s == (0x7000 << BITSH)\n+\t  || s == (1 << (BITSM1 - 2)) || s == (1 << (BITSM1 - 2)) - 1\n+\t  || s == 2 || s == 24 || s == -32 || s == (3 << (BITSM1 - 2)) + 2\n+\t  || s == 5 || s == -5 || s == -63 || s == -64 || s == -65\n+\t  || s == -8189 || s == -8191 || s == -8192 || s == -8193\n+\t  || s == -8250 || s == -8255 || s == -8256 || s == -8257\n+\t  || s == __INT_MAX__)\n+\treturn;\n+    }\n+  else\n+    {\n+      if (s == (-0x4000 << BITSH) - 1 || s == (-0x7000 << BITSH) - 1\n+\t  || s == (-0x5fcf << BITSH) - 1 || s == (-0x4041 << BITSH)\n+\t  || s == (-0x7000 << BITSH) || s == -__INT_MAX__ - 1\n+\t  || s == -__INT_MAX__ + 4 || s == -__INT_MAX__ + 7)\n+\treturn;\n+    }\n+  abort ();\n+}\n+\n+void\n+f16 (int s)\n+{\n+  if ((s & ((-0x1f8f) << BITSH)) >= ((-0x4fd0) << BITSH))\n+    {\n+      if (s == 0 || s == 0x1cbf || s == 0x1cc0 || s == 0x1fff || s == 0x2000\n+\t  || s == 0x20 || s == 0x3cbf || s == 0x3cc0 || s == 0x3f\n+\t  || s == (-0x1000 << BITSH) - 1 || s == (-0x4000 << BITSH)\n+\t  || s == (-0x1000 << BITSH) || s == (-0x4000 << BITSH) + 1 || s == 1\n+\t  || s == -1 || s == -15 || s == -15550 || s == -15552\n+\t  || s == (0x7000 << BITSH) - 1 || s == (0x7000 << BITSH)\n+\t  || s == (1 << (BITSM1 - 2)) || s == (1 << (BITSM1 - 2)) - 1\n+\t  || s == 2 || s == 24 || s == -32 || s == (3 << (BITSM1 - 2)) + 2\n+\t  || s == 5 || s == -5 || s == -63 || s == -64 || s == -65\n+\t  || s == -8189 || s == -8191 || s == -8192 || s == -8193\n+\t  || s == -8250 || s == -8255 || s == -8256 || s == -8257\n+\t  || s == __INT_MAX__)\n+\treturn;\n+    }\n+  else\n+    {\n+      if (s == (-0x4000 << BITSH) - 1 || s == (-0x7000 << BITSH) - 1\n+\t  || s == (-0x5fcf << BITSH) - 1 || s == (-0x4041 << BITSH)\n+\t  || s == (-0x7000 << BITSH) || s == -__INT_MAX__ - 1\n+\t  || s == -__INT_MAX__ + 4 || s == -__INT_MAX__ + 7)\n+\treturn;\n+    }\n+  abort ();\n+}\n+\n+void\n+f17 (int s)\n+{\n+  if ((s & ((-0x4000 << BITSH) | 1)) != -__INT_MAX__ - 1)\n+    {\n+      if (s == 0 || s == 0x1cbf || s == 0x1cc0 || s == 0x1fff || s == 0x2000\n+\t  || s == 0x20 || s == 0x3cbf || s == 0x3cc0 || s == 0x3f\n+\t  || s == (-0x4000 << BITSH) - 1 || s == (-0x1000 << BITSH) - 1\n+\t  || s == (-0x7000 << BITSH) - 1 || s == (-0x4041 << BITSH)\n+\t  || s == (-0x4000 << BITSH) || s == (-0x1000 << BITSH)\n+\t  || s == (-0x4000 << BITSH) + 1 || s == 1 || s == -1 || s == -15\n+\t  || s == -15550 || s == -15552 || s == (0x7000 << BITSH) - 1\n+\t  || s == (0x7000 << BITSH) || s == (1 << (BITSM1 - 2))\n+\t  || s == (1 << (BITSM1 - 2)) - 1 || s == 2 || s == 24 || s == -32\n+\t  || s == (3 << (BITSM1 - 2)) + 2 || s == 5 || s == -5 || s == -63\n+\t  || s == -64 || s == -65 || s == -__INT_MAX__ + 4 || s == -8189\n+\t  || s == -8191 || s == -8192 || s == -8193 || s == -8250\n+\t  || s == -8255 || s == -8256 || s == -8257 || s == __INT_MAX__)\n+\treturn;\n+    }\n+  else\n+    {\n+      if (s == (-0x5fcf << BITSH) - 1 || s == (-0x7000 << BITSH)\n+\t  || s == -__INT_MAX__ - 1 || s == -__INT_MAX__ + 7)\n+\treturn;\n+    }\n+  abort ();\n+}\n+\n+void\n+f18 (int s)\n+{\n+  if ((s & ((-0x4000 << BITSH) | 1)) != ((-0x4000 << BITSH) | 1))\n+    {\n+      if (s == 0 || s == 0x1cbf || s == 0x1cc0 || s == 0x1fff || s == 0x2000\n+\t  || s == 0x20 || s == 0x3cbf || s == 0x3cc0 || s == 0x3f\n+\t  || s == (-0x4000 << BITSH) - 1 || s == (-0x7000 << BITSH) - 1\n+\t  || s == (-0x5fcf << BITSH) - 1 || s == (-0x4041 << BITSH)\n+\t  || s == (-0x4000 << BITSH) || s == (-0x1000 << BITSH)\n+\t  || s == (-0x7000 << BITSH) || s == 1 || s == -15550 || s == -15552\n+\t  || s == (0x7000 << BITSH) - 1 || s == (0x7000 << BITSH)\n+\t  || s == (1 << (BITSM1 - 2)) || s == (1 << (BITSM1 - 2)) - 1\n+\t  || s == -__INT_MAX__ - 1 || s == 2 || s == 24 || s == -32\n+\t  || s == (3 << (BITSM1 - 2)) + 2 || s == 5 || s == -64\n+\t  || s == -__INT_MAX__ + 4 || s == -8192 || s == -8250 || s == -8256\n+\t  || s == __INT_MAX__ || s == -__INT_MAX__ + 7)\n+\treturn;\n+    }\n+  else\n+    {\n+      if (s == (-0x1000 << BITSH) - 1 || s == (-0x4000 << BITSH) + 1\n+\t  || s == -1 || s == -15 || s == -5 || s == -63 || s == -65\n+\t  || s == -8189 || s == -8191 || s == -8193 || s == -8255\n+\t  || s == -8257)\n+\treturn;\n+    }\n+  abort ();\n+}\n+\n+void\n+f19 (int s)\n+{\n+  if ((s & ((-0x4000 << BITSH) | 1)) != ((0x4000 << BITSH) | 1))\n+    {\n+      if (s == 0 || s == 0x1cbf || s == 0x1cc0 || s == 0x1fff || s == 0x2000\n+\t  || s == 0x20 || s == 0x3cbf || s == 0x3cc0 || s == 0x3f\n+\t  || s == (-0x4000 << BITSH) - 1 || s == (-0x1000 << BITSH) - 1\n+\t  || s == (-0x7000 << BITSH) - 1 || s == (-0x5fcf << BITSH) - 1\n+\t  || s == (-0x4041 << BITSH) || s == (-0x4000 << BITSH)\n+\t  || s == (-0x1000 << BITSH) || s == (-0x7000 << BITSH)\n+\t  || s == (-0x4000 << BITSH) + 1 || s == 1 || s == -1 || s == -15\n+\t  || s == -15550 || s == -15552 || s == (0x7000 << BITSH)\n+\t  || s == (1 << (BITSM1 - 2)) || s == (1 << (BITSM1 - 2)) - 1\n+\t  || s == -__INT_MAX__ - 1 || s == 2 || s == 24 || s == -32\n+\t  || s == (3 << (BITSM1 - 2)) + 2 || s == 5 || s == -5 || s == -63\n+\t  || s == -64 || s == -65 || s == -__INT_MAX__ + 4 || s == -8189\n+\t  || s == -8191 || s == -8192 || s == -8193 || s == -8250\n+\t  || s == -8255 || s == -8256 || s == -8257 || s == -__INT_MAX__ + 7)\n+\treturn;\n+    }\n+  else\n+    {\n+      if (s == (0x7000 << BITSH) - 1 || s == __INT_MAX__)\n+\treturn;\n+    }\n+  abort ();\n+}\n+\n+void\n+f20 (int s)\n+{\n+  if ((s & (-0x1000 << BITSH)) != -__INT_MAX__ - 1)\n+    {\n+      if (s == 0 || s == 0x1cbf || s == 0x1cc0 || s == 0x1fff || s == 0x2000\n+\t  || s == 0x20 || s == 0x3cbf || s == 0x3cc0 || s == 0x3f\n+\t  || s == (-0x4000 << BITSH) - 1 || s == (-0x1000 << BITSH) - 1\n+\t  || s == (-0x5fcf << BITSH) - 1 || s == (-0x4041 << BITSH)\n+\t  || s == (-0x4000 << BITSH) || s == (-0x1000 << BITSH)\n+\t  || s == (-0x7000 << BITSH) || s == (-0x4000 << BITSH) + 1 || s == 1\n+\t  || s == -1 || s == -15 || s == -15550 || s == -15552\n+\t  || s == (0x7000 << BITSH) - 1 || s == (0x7000 << BITSH)\n+\t  || s == (1 << (BITSM1 - 2)) || s == (1 << (BITSM1 - 2)) - 1\n+\t  || s == 2 || s == 24 || s == -32 || s == (3 << (BITSM1 - 2)) + 2\n+\t  || s == 5 || s == -5 || s == -63 || s == -64 || s == -65\n+\t  || s == -8189 || s == -8191 || s == -8192 || s == -8193\n+\t  || s == -8250 || s == -8255 || s == -8256 || s == -8257\n+\t  || s == __INT_MAX__)\n+\treturn;\n+    }\n+  else\n+    {\n+      if (s == (-0x7000 << BITSH) - 1 || s == -__INT_MAX__ - 1\n+\t  || s == -__INT_MAX__ + 4 || s == -__INT_MAX__ + 7)\n+\treturn;\n+    }\n+  abort ();\n+}\n+\n+void\n+f21 (int s)\n+{\n+  if ((s & (-0x1000 << BITSH)) != (-0x1000 << BITSH))\n+    {\n+      if (s == 0 || s == 0x1cbf || s == 0x1cc0 || s == 0x1fff || s == 0x2000\n+\t  || s == 0x20 || s == 0x3cbf || s == 0x3cc0 || s == 0x3f\n+\t  || s == (-0x4000 << BITSH) - 1 || s == (-0x1000 << BITSH) - 1\n+\t  || s == (-0x7000 << BITSH) - 1 || s == (-0x5fcf << BITSH) - 1\n+\t  || s == (-0x4041 << BITSH) || s == (-0x4000 << BITSH)\n+\t  || s == (-0x7000 << BITSH) || s == (-0x4000 << BITSH) + 1 || s == 1\n+\t  || s == -15550 || s == -15552\n+\t  || s == (0x7000 << BITSH) - 1 || s == (0x7000 << BITSH)\n+\t  || s == (1 << (BITSM1 - 2)) || s == (1 << (BITSM1 - 2)) - 1\n+\t  || s == -__INT_MAX__ - 1 || s == 2 || s == 24\n+\t  || s == (3 << (BITSM1 - 2)) + 2 || s == 5 || s == -__INT_MAX__ + 4\n+\t  || s == -8189 || s == -8191 || s == -8192 || s == -8193\n+\t  || s == -8250 || s == -8255 || s == -8256 || s == -8257\n+\t  || s == __INT_MAX__ || s == -__INT_MAX__ + 7)\n+\treturn;\n+    }\n+  else\n+    {\n+      if (s == (-0x1000 << BITSH) || s == -1 || s == -15\n+\t  || s == -32 || s == -5 || s == -63 || s == -64\n+\t  || s == -65)\n+\treturn;\n+    }\n+  abort ();\n+}\n+\n+void\n+f22 (int s)\n+{\n+  if ((s & (-0x1000 << BITSH)) != (0x7000 << BITSH))\n+    {\n+      if (s == 0 || s == 0x1cbf || s == 0x1cc0 || s == 0x1fff || s == 0x2000\n+\t  || s == 0x20 || s == 0x3cbf || s == 0x3cc0 || s == 0x3f\n+\t  || s == (-0x4000 << BITSH) - 1 || s == (-0x1000 << BITSH) - 1\n+\t  || s == (-0x7000 << BITSH) - 1 || s == (-0x5fcf << BITSH) - 1\n+\t  || s == (-0x4041 << BITSH) || s == (-0x4000 << BITSH)\n+\t  || s == (-0x1000 << BITSH) || s == (-0x7000 << BITSH)\n+\t  || s == (-0x4000 << BITSH) + 1 || s == 1 || s == -1 || s == -15\n+\t  || s == -15550 || s == -15552 || s == (0x7000 << BITSH) - 1\n+\t  || s == (1 << (BITSM1 - 2)) || s == (1 << (BITSM1 - 2)) - 1\n+\t  || s == -__INT_MAX__ - 1 || s == 2 || s == 24 || s == -32\n+\t  || s == (3 << (BITSM1 - 2)) + 2 || s == 5 || s == -5 || s == -63\n+\t  || s == -64 || s == -65 || s == -__INT_MAX__ + 4 || s == -8189\n+\t  || s == -8191 || s == -8192 || s == -8193 || s == -8250\n+\t  || s == -8255 || s == -8256 || s == -8257 || s == -__INT_MAX__ + 7)\n+\treturn;\n+    }\n+  else\n+    {\n+      if (s == (0x7000 << BITSH) || s == __INT_MAX__)\n+\treturn;\n+    }\n+  abort ();\n+}\n+\n+void\n+f23 (unsigned int s)\n+{\n+  if ((s & (0xf000U << BITSH)) != (0x7000 << BITSH))\n+    {\n+      if (s == 0 || s == 0x1cbf || s == 0x1cc0 || s == 0x1fff || s == 0x2000\n+\t  || s == 0x20 || s == 0x3cbf || s == 0x3cc0 || s == 0x3f\n+\t  || s == (0xc000U << BITSH) - 1 || s == (0xf000U << BITSH) - 1\n+\t  || s == (0x9000U << BITSH) - 1 || s == (0xa031U << BITSH) - 1\n+\t  || s == (0xbfbfU << BITSH) || s == (0xc000U << BITSH)\n+\t  || s == (0xf000U << BITSH) || s == (0x9000U << BITSH)\n+\t  || s == (0xc000U << BITSH) + 1 || s == 1 || s == -1U || s == -15U\n+\t  || s == -15550U || s == -15552U || s == (0x7000 << BITSH) - 1\n+\t  || s == (1 << (BITSM1 - 2)) || s == (1 << (BITSM1 - 2)) - 1\n+\t  || s == 1U + __INT_MAX__ || s == 2 || s == 24 || s == -32U\n+\t  || s == (3 << (BITSM1 - 2)) + 2 || s == 5 || s == -5U || s == -63U\n+\t  || s == -64U || s == -65U || s == 6U + __INT_MAX__ || s == -8189U\n+\t  || s == -8191U || s == -8192U || s == -8193U || s == -8250U\n+\t  || s == -8255U || s == -8256U || s == -8257U\n+\t  || s == __INT_MAX__ + 9U)\n+\treturn;\n+    }\n+  else\n+    {\n+      if (s == (0x7000 << BITSH) || s == __INT_MAX__)\n+\treturn;\n+    }\n+  abort ();\n+}\n+\n+void\n+f24 (unsigned int s)\n+{\n+  if ((s & (0xf000U << BITSH)) != (0x8000U << BITSH))\n+    {\n+      if (s == 0 || s == 0x1cbf || s == 0x1cc0 || s == 0x1fff || s == 0x2000\n+\t  || s == 0x20 || s == 0x3cbf || s == 0x3cc0 || s == 0x3f\n+\t  || s == (0xc000U << BITSH) - 1 || s == (0xf000U << BITSH) - 1\n+\t  || s == (0xa031U << BITSH) - 1 || s == (0xbfbfU << BITSH)\n+\t  || s == (0xc000U << BITSH) || s == (0xf000U << BITSH)\n+\t  || s == (0x9000U << BITSH) || s == (0xc000U << BITSH) + 1 || s == 1\n+\t  || s == -1U || s == -15U || s == -15550U || s == -15552U\n+\t  || s == (0x7000 << BITSH) - 1 || s == (0x7000 << BITSH)\n+\t  || s == (1 << (BITSM1 - 2)) || s == (1 << (BITSM1 - 2)) - 1\n+\t  || s == 2 || s == 24 || s == -32U || s == (3 << (BITSM1 - 2)) + 2\n+\t  || s == 5 || s == -5U || s == -63U || s == -64U || s == -65U\n+\t  || s == -8189U || s == -8191U || s == -8192U || s == -8193U\n+\t  || s == -8250U || s == -8255U || s == -8256U || s == -8257U\n+\t  || s == __INT_MAX__)\n+\treturn;\n+    }\n+  else\n+    {\n+      if (s == (0x9000U << BITSH) - 1 || s == 1U + __INT_MAX__\n+\t  || s == 6U + __INT_MAX__ || s == __INT_MAX__ + 9U)\n+\treturn;\n+    }\n+  abort ();\n+}\n+\n+/* Make this easier to run on microcontroller architectures by using a switch\n+   statements instead of arrays.\n+   We still don't want the compiler to constant-propagate the array contents,\n+   so use an asm in each accessor function with to hide what's going on.  */\n+\n+int\n+svals (int i)\n+{\n+  asm (\"\" : \"=g\" (i) : \"0\" (i));\n+  switch (i)\n+    {\n+    case  0: return 0;\n+    case  1: return 0x1cbf;\n+    case  2: return 0x1cc0;\n+    case  3: return 0x1fff;\n+    case  4: return 0x2000;\n+    case  5: return 0x20;\n+    case  6: return 0x3cbf;\n+    case  7: return 0x3cc0;\n+    case  8: return 0x3f;\n+    case  9: return (-0x4000 << BITSH) - 1;\n+    case 10: return (-0x1000 << BITSH) - 1;\n+    case 11: return (-0x7000 << BITSH) - 1;\n+    case 12: return (-0x5fcf << BITSH) - 1;\n+    case 13: return (-0x4041 << BITSH);\n+    case 14: return (-0x4000 << BITSH);\n+    case 15: return (-0x1000 << BITSH);\n+    case 16: return (-0x7000 << BITSH);\n+    case 17: return (-0x4000 << BITSH) + 1;\n+    case 18: return 1;\n+    case 19: return -1;\n+    case 20: return -15;\n+    case 21: return -15550;\n+    case 22: return -15552;\n+    case 23: return (0x7000 << BITSH) - 1;\n+    case 24: return (0x7000 << BITSH);\n+    case 25: return (1 << (BITSM1 - 2));\n+    case 26: return (1 << (BITSM1 - 2)) - 1;\n+    case 27: return -__INT_MAX__ - 1;\n+    case 28: return 2;\n+    case 29: return 24;\n+    case 30: return -32;\n+    case 31: return (3 << (BITSM1 - 2)) + 2;\n+    case 32: return 5;\n+    case 33: return -5;\n+    case 34: return -63;\n+    case 35: return -64;\n+    case 36: return -65;\n+    case 37: return -__INT_MAX__ + 4;\n+    case 38: return -8189;\n+    case 39: return -8191;\n+    case 40: return -8192;\n+    case 41: return -8193;\n+    case 42: return -8250;\n+    case 43: return -8255;\n+    case 44: return -8256;\n+    case 45: return -8257;\n+    case 46: return __INT_MAX__;\n+    case 47: return -__INT_MAX__ + 7;\n+#define SVAL_NUM 48\n+    default: abort ();\n+    }\n+};\n+\n+unsigned int\n+uvals (int i)\n+{\n+  asm (\"\" : \"=g\" (i) : \"0\" (i));\n+  switch (i)\n+    {\n+    case  0: return 0;\n+    case  1: return 0x1cbf;\n+    case  2: return 0x1cc0;\n+    case  3: return 0x1fff;\n+    case  4: return 0x2000;\n+    case  5: return 0x20;\n+    case  6: return 0x3cbf;\n+    case  7: return 0x3cc0;\n+    case  8: return 0x3f;\n+    case  9: return (0xc000U << BITSH) - 1;\n+    case 10: return (0xf000U << BITSH) - 1;\n+    case 11: return (0x9000U << BITSH) - 1;\n+    case 12: return (0xa031U << BITSH) - 1;\n+    case 13: return (0xbfbfU << BITSH);\n+    case 14: return (0xc000U << BITSH);\n+    case 15: return (0xf000U << BITSH);\n+    case 16: return (0x9000U << BITSH);\n+    case 17: return (0xc000U << BITSH) + 1;\n+    case 18: return 1;\n+    case 19: return -1U;\n+    case 20: return -15U;\n+    case 21: return -15550U;\n+    case 22: return -15552U;\n+    case 23: return (0x7000 << BITSH) - 1;\n+    case 24: return (0x7000 << BITSH);\n+    case 25: return (1 << (BITSM1 - 2));\n+    case 26: return (1 << (BITSM1 - 2)) - 1;\n+    case 27: return 1U + __INT_MAX__;\n+    case 28: return 2;\n+    case 29: return 24;\n+    case 30: return -32U;\n+    case 31: return (3 << (BITSM1 - 2)) + 2;\n+    case 32: return 5;\n+    case 33: return -5U;\n+    case 34: return -63U;\n+    case 35: return -64U;\n+    case 36: return -65U;\n+    case 37: return 6U + __INT_MAX__;\n+    case 38: return -8189U;\n+    case 39: return -8191U;\n+    case 40: return -8192U;\n+    case 41: return -8193U;\n+    case 42: return -8250U;\n+    case 43: return -8255U;\n+    case 44: return -8256U;\n+    case 45: return -8257U;\n+    case 46: return __INT_MAX__;\n+    case 47: return __INT_MAX__ + 9U;\n+#define UVAL_NUM 48\n+    default: abort ();\n+    }\n+};\n+\n+int\n+main ()\n+{\n+  int i;\n+  for (i = 0; i < SVAL_NUM; i++)\n+    {\n+      f2 (svals (i));\n+      f4 (svals (i));\n+      f5 (svals (i));\n+      f7 (svals (i));\n+      f8 (svals (i));\n+      f11 (svals (i));\n+      f12 (svals (i));\n+      f15 (svals (i));\n+      f16 (svals (i));\n+      f17 (svals (i));\n+      f18 (svals (i));\n+      f19 (svals (i));\n+      f20 (svals (i));\n+      f21 (svals (i));\n+      f22 (svals (i));\n+    }\n+  for (i = 0; i < UVAL_NUM; i++)\n+    {\n+      f1 (uvals (i));\n+      f3 (uvals (i));\n+      f6 (uvals (i));\n+      f9 (uvals (i));\n+      f10 (uvals (i));\n+      f13 (uvals (i));\n+      f14 (uvals (i));\n+      f23 (uvals (i));\n+      f24 (uvals (i));\n+    }\n+  return 0;\n+}"}, {"sha": "6a6ab3463fed24f52d5a504fa3747ac844a7005f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp66.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b607f9b9e780cdf6201c5fc7e764f61e8769c83/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp66.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b607f9b9e780cdf6201c5fc7e764f61e8769c83/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp66.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp66.c?ref=2b607f9b9e780cdf6201c5fc7e764f61e8769c83", "patch": "@@ -1,5 +1,5 @@\n /* PR tree-optimization/52267 */\n-/* { dg-do run } */\n+/* { dg-do run { target { ! int16 } } } */\n /* { dg-options \"-O2\" } */\n \n extern void abort (void);"}]}