{"sha": "388f1a8cf0851854cc4d2ee99ed85600f0822afc", "node_id": "C_kwDOANBUbNoAKDM4OGYxYThjZjA4NTE4NTRjYzRkMmVlOTllZDg1NjAwZjA4MjJhZmM", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2022-08-22T02:41:16Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2022-08-26T01:20:59Z"}, "message": "Don't gimple fold ymm-version vblendvpd/vblendvps/vpblendvb w/o TARGET_AVX2\n\nSince 256-bit vector integer comparison is under TARGET_AVX2,\nand gimple folding for vblendvpd/vblendvps/vpblendvb relies on that.\nRestrict gimple fold condition to TARGET_AVX2.\n\ngcc/ChangeLog:\n\n\tPR target/106704\n\t* config/i386/i386-builtin.def (BDESC): Add\n\tCODE_FOR_avx_blendvpd256/CODE_FOR_avx_blendvps256 to\n\tcorresponding builtins.\n\t* config/i386/i386.cc (ix86_gimple_fold_builtin):\n\tDon't fold IX86_BUILTIN_PBLENDVB256, IX86_BUILTIN_BLENDVPS256,\n\tIX86_BUILTIN_BLENDVPD256 w/o TARGET_AVX2.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/i386/pr106704.c: New test.", "tree": {"sha": "9f0ae83b78b97a107efaa81f5417e8e28c5f3d24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f0ae83b78b97a107efaa81f5417e8e28c5f3d24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/388f1a8cf0851854cc4d2ee99ed85600f0822afc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/388f1a8cf0851854cc4d2ee99ed85600f0822afc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/388f1a8cf0851854cc4d2ee99ed85600f0822afc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/388f1a8cf0851854cc4d2ee99ed85600f0822afc/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d4389dc913269cc6a6fd6ee38abc78b1fb7dbe8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d4389dc913269cc6a6fd6ee38abc78b1fb7dbe8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d4389dc913269cc6a6fd6ee38abc78b1fb7dbe8"}], "stats": {"total": 32, "additions": 27, "deletions": 5}, "files": [{"sha": "f9c7abde2cfb97d8f3fbd7e9063155d235b71979", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/388f1a8cf0851854cc4d2ee99ed85600f0822afc/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/388f1a8cf0851854cc4d2ee99ed85600f0822afc/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=388f1a8cf0851854cc4d2ee99ed85600f0822afc", "patch": "@@ -1036,8 +1036,8 @@ BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_vpermilvarv8sf3, \"__builtin_ia32_vpe\n \n BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_blendpd256, \"__builtin_ia32_blendpd256\", IX86_BUILTIN_BLENDPD256, UNKNOWN, (int) V4DF_FTYPE_V4DF_V4DF_INT)\n BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_blendps256, \"__builtin_ia32_blendps256\", IX86_BUILTIN_BLENDPS256, UNKNOWN, (int) V8SF_FTYPE_V8SF_V8SF_INT)\n-BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_nothing, \"__builtin_ia32_blendvpd256\", IX86_BUILTIN_BLENDVPD256, UNKNOWN, (int) V4DF_FTYPE_V4DF_V4DF_V4DF)\n-BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_nothing, \"__builtin_ia32_blendvps256\", IX86_BUILTIN_BLENDVPS256, UNKNOWN, (int) V8SF_FTYPE_V8SF_V8SF_V8SF)\n+BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_blendvpd256, \"__builtin_ia32_blendvpd256\", IX86_BUILTIN_BLENDVPD256, UNKNOWN, (int) V4DF_FTYPE_V4DF_V4DF_V4DF)\n+BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_blendvps256, \"__builtin_ia32_blendvps256\", IX86_BUILTIN_BLENDVPS256, UNKNOWN, (int) V8SF_FTYPE_V8SF_V8SF_V8SF)\n BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_dpps256, \"__builtin_ia32_dpps256\", IX86_BUILTIN_DPPS256, UNKNOWN, (int) V8SF_FTYPE_V8SF_V8SF_INT)\n BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_shufpd256, \"__builtin_ia32_shufpd256\", IX86_BUILTIN_SHUFPD256, UNKNOWN, (int) V4DF_FTYPE_V4DF_V4DF_INT)\n BDESC (OPTION_MASK_ISA_AVX, 0, CODE_FOR_avx_shufps256, \"__builtin_ia32_shufps256\", IX86_BUILTIN_SHUFPS256, UNKNOWN, (int) V8SF_FTYPE_V8SF_V8SF_INT)"}, {"sha": "c4d0e36e9c0a2256f5dde1f4dc021c0328aa0cba", "filename": "gcc/config/i386/i386.cc", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/388f1a8cf0851854cc4d2ee99ed85600f0822afc/gcc%2Fconfig%2Fi386%2Fi386.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/388f1a8cf0851854cc4d2ee99ed85600f0822afc/gcc%2Fconfig%2Fi386%2Fi386.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.cc?ref=388f1a8cf0851854cc4d2ee99ed85600f0822afc", "patch": "@@ -18452,6 +18452,15 @@ ix86_gimple_fold_builtin (gimple_stmt_iterator *gsi)\n \t}\n       break;\n \n+    case IX86_BUILTIN_PBLENDVB256:\n+    case IX86_BUILTIN_BLENDVPS256:\n+    case IX86_BUILTIN_BLENDVPD256:\n+      /* pcmpeqb/d/q is under avx2, w/o avx2, it's veclower\n+\t to scalar operations and not combined back.  */\n+      if (!TARGET_AVX2)\n+\tbreak;\n+\n+      /* FALLTHRU.  */\n     case IX86_BUILTIN_BLENDVPD:\n       /* blendvpd is under sse4.1 but pcmpgtq is under sse4.2,\n \t w/o sse4.2, it's veclowered to scalar operations and\n@@ -18460,10 +18469,7 @@ ix86_gimple_fold_builtin (gimple_stmt_iterator *gsi)\n \tbreak;\n       /* FALLTHRU.  */\n     case IX86_BUILTIN_PBLENDVB128:\n-    case IX86_BUILTIN_PBLENDVB256:\n     case IX86_BUILTIN_BLENDVPS:\n-    case IX86_BUILTIN_BLENDVPS256:\n-    case IX86_BUILTIN_BLENDVPD256:\n       gcc_assert (n_args == 3);\n       arg0 = gimple_call_arg (stmt, 0);\n       arg1 = gimple_call_arg (stmt, 1);"}, {"sha": "44e052a4caab0ee86584933a1fba1f7ed651fd67", "filename": "gcc/testsuite/gcc.target/i386/pr106704.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/388f1a8cf0851854cc4d2ee99ed85600f0822afc/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr106704.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/388f1a8cf0851854cc4d2ee99ed85600f0822afc/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr106704.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr106704.c?ref=388f1a8cf0851854cc4d2ee99ed85600f0822afc", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx -O2 -mno-avx2\" } */\n+/* { dg-final { scan-assembler-times {vblendvps[ \\t]+%ymm[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vblendvpd[ \\t]+%ymm[0-9]+} 1 } } */\n+\n+#include <immintrin.h>\n+\n+__m256 bend_stuff( __m256 a, __m256 b, __m256 mask)\n+{\n+  return _mm256_blendv_ps(a, b, mask);\n+}\n+\n+__m256d bend_stuff1( __m256d a, __m256d b, __m256d mask)\n+{\n+  return _mm256_blendv_pd(a, b, mask);\n+}"}]}