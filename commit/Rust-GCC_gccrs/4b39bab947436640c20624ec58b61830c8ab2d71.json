{"sha": "4b39bab947436640c20624ec58b61830c8ab2d71", "node_id": "C_kwDOANBUbNoAKDRiMzliYWI5NDc0MzY2NDBjMjA2MjRlYzU4YjYxODMwYzhhYjJkNzE", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-10-11T14:56:06Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-20T10:17:03Z"}, "message": "[Ada] Small cleanup in Eval_Integer_Literal\n\ngcc/ada/\n\n\t* sem_eval.ads (Check_Non_Static_Context): Update documentation.\n\t* sem_eval.adb (In_Any_Integer_Context): Change parameter type,\n\tadjust accordingly and remove unreachable case.\n\t(Eval_Integer_Literal): Consider the node kind throughout and\n\ttrim down verbose condition.", "tree": {"sha": "cab002ded5778c8f6f28b0183adf4c1dbc215ae4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cab002ded5778c8f6f28b0183adf4c1dbc215ae4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b39bab947436640c20624ec58b61830c8ab2d71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b39bab947436640c20624ec58b61830c8ab2d71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b39bab947436640c20624ec58b61830c8ab2d71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b39bab947436640c20624ec58b61830c8ab2d71/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a8dcff179804d928b20ea8c2a40bc73035acaf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a8dcff179804d928b20ea8c2a40bc73035acaf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a8dcff179804d928b20ea8c2a40bc73035acaf3"}], "stats": {"total": 34, "additions": 15, "deletions": 19}, "files": [{"sha": "954a4a63689e8de821d857d60382f12bd4e5ad87", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b39bab947436640c20624ec58b61830c8ab2d71/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b39bab947436640c20624ec58b61830c8ab2d71/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=4b39bab947436640c20624ec58b61830c8ab2d71", "patch": "@@ -2845,7 +2845,7 @@ package body Sem_Eval is\n    --  the expander that do not correspond to static expressions.\n \n    procedure Eval_Integer_Literal (N : Node_Id) is\n-      function In_Any_Integer_Context (Context : Node_Id) return Boolean;\n+      function In_Any_Integer_Context (K : Node_Kind) return Boolean;\n       --  If the literal is resolved with a specific type in a context where\n       --  the expected type is Any_Integer, there are no range checks on the\n       --  literal. By the time the literal is evaluated, it carries the type\n@@ -2856,23 +2856,21 @@ package body Sem_Eval is\n       -- In_Any_Integer_Context --\n       ----------------------------\n \n-      function In_Any_Integer_Context (Context : Node_Id) return Boolean is\n+      function In_Any_Integer_Context (K : Node_Kind) return Boolean is\n       begin\n          --  Any_Integer also appears in digits specifications for real types,\n          --  but those have bounds smaller that those of any integer base type,\n          --  so we can safely ignore these cases.\n \n-         return\n-           Nkind (Context) in N_Attribute_Definition_Clause\n-                            | N_Attribute_Reference\n-                            | N_Modular_Type_Definition\n-                            | N_Number_Declaration\n-                            | N_Signed_Integer_Type_Definition;\n+         return K in N_Attribute_Definition_Clause\n+                   | N_Modular_Type_Definition\n+                   | N_Number_Declaration\n+                   | N_Signed_Integer_Type_Definition;\n       end In_Any_Integer_Context;\n \n       --  Local variables\n \n-      Par : constant Node_Id   := Parent (N);\n+      PK  : constant Node_Kind := Nkind (Parent (N));\n       Typ : constant Entity_Id := Etype (N);\n \n    --  Start of processing for Eval_Integer_Literal\n@@ -2890,12 +2888,11 @@ package body Sem_Eval is\n       --  Check_Non_Static_Context on an expanded literal may lead to spurious\n       --  and misleading warnings.\n \n-      if (Nkind (Par) in N_Case_Expression_Alternative | N_If_Expression\n-           or else Nkind (Par) not in N_Subexpr)\n-        and then (Nkind (Par) not in N_Case_Expression_Alternative\n-                                   | N_If_Expression\n-                   or else Comes_From_Source (N))\n-        and then not In_Any_Integer_Context (Par)\n+      if (PK not in N_Subexpr\n+           or else (PK in N_Case_Expression_Alternative | N_If_Expression\n+                     and then\n+                    Comes_From_Source (N)))\n+        and then not In_Any_Integer_Context (PK)\n       then\n          Check_Non_Static_Context (N);\n       end if;"}, {"sha": "c93d97d8822da602a16c195c68c6162b7696139c", "filename": "gcc/ada/sem_eval.ads", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b39bab947436640c20624ec58b61830c8ab2d71/gcc%2Fada%2Fsem_eval.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b39bab947436640c20624ec58b61830c8ab2d71/gcc%2Fada%2Fsem_eval.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.ads?ref=4b39bab947436640c20624ec58b61830c8ab2d71", "patch": "@@ -149,10 +149,9 @@ package Sem_Eval is\n    --\n    --  Note: most cases of non-static context checks are handled within\n    --  Sem_Eval itself, including all cases of expressions at the outer level\n-   --  (i.e. those that are not a subexpression). Currently the only outside\n-   --  customer for this procedure is Sem_Attr (because Eval_Attribute is\n-   --  there). There is also one special case arising from ranges (see body of\n-   --  Resolve_Range).\n+   --  (i.e. those that are not a subexpression). The outside customers for\n+   --  this procedure are Sem_Aggr, Sem_Attr (because Eval_Attribute is there)\n+   --  and Sem_Res (for a special case arising from ranges, see Resolve_Range).\n    --\n    --  Note: this procedure is also called by GNATprove on real literals\n    --  that are not sub-expressions of static expressions, to convert them to"}]}