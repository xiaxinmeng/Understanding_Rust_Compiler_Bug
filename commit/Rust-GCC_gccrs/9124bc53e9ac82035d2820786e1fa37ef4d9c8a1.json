{"sha": "9124bc53e9ac82035d2820786e1fa37ef4d9c8a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTEyNGJjNTNlOWFjODIwMzVkMjgyMDc4NmUxZmEzN2VmNGQ5YzhhMQ==", "commit": {"author": {"name": "Daniel Jacobowitz", "email": "drow@mvista.com", "date": "2003-03-04T19:43:35Z"}, "committer": {"name": "Daniel Jacobowitz", "email": "drow@gcc.gnu.org", "date": "2003-03-04T19:43:35Z"}, "message": "configure.in: Include $(build_tooldir)/sys-include in FLAGS_FOR_TARGET.\n\n\t* configure.in: Include $(build_tooldir)/sys-include in\n\tFLAGS_FOR_TARGET.\n\t* configure: Regenerated.\n\nFrom-SVN: r63792", "tree": {"sha": "b7fe79ff8d1def4b17f55982ffd11d7fad66e94a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7fe79ff8d1def4b17f55982ffd11d7fad66e94a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9124bc53e9ac82035d2820786e1fa37ef4d9c8a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9124bc53e9ac82035d2820786e1fa37ef4d9c8a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9124bc53e9ac82035d2820786e1fa37ef4d9c8a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9124bc53e9ac82035d2820786e1fa37ef4d9c8a1/comments", "author": null, "committer": null, "parents": [{"sha": "754047bb1f4330f4e8bb7579d5415f9b5a7d16a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/754047bb1f4330f4e8bb7579d5415f9b5a7d16a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/754047bb1f4330f4e8bb7579d5415f9b5a7d16a1"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "eb08264f015bcb484d2f6712223374ca7e387580", "filename": "ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9124bc53e9ac82035d2820786e1fa37ef4d9c8a1/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9124bc53e9ac82035d2820786e1fa37ef4d9c8a1/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=9124bc53e9ac82035d2820786e1fa37ef4d9c8a1", "patch": "@@ -1,3 +1,9 @@\n+2003-03-04  Daniel Jacobowitz  <drow@mvista.com>\n+\n+\t* configure.in: Include $(build_tooldir)/sys-include in\n+\tFLAGS_FOR_TARGET.\n+\t* configure: Regenerated.\n+\n 2003-03-04  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \t* Makefile.tpl: Always pass down RANLIB."}, {"sha": "9814a2c20caee64a196c6df3687b20ded1ddcbfc", "filename": "configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9124bc53e9ac82035d2820786e1fa37ef4d9c8a1/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9124bc53e9ac82035d2820786e1fa37ef4d9c8a1/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=9124bc53e9ac82035d2820786e1fa37ef4d9c8a1", "patch": "@@ -2570,7 +2570,7 @@ esac\n # being built; programs in there won't even run.\n if test \"${build}\" = \"${host}\" && test -d ${srcdir}/gcc; then\n   # Search for pre-installed headers if nothing else fits.\n-  FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -B$(build_tooldir)/bin/ -B$(build_tooldir)/lib/ -isystem $(build_tooldir)/include'\n+  FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -B$(build_tooldir)/bin/ -B$(build_tooldir)/lib/ -isystem $(build_tooldir)/include -isystem $(build_tooldir)/sys-include'\n fi\n \n if test \"x${use_gnu_ld}\" = x &&"}, {"sha": "175ed9b6c95bd9971481f54024bca44b1e73f4ac", "filename": "configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9124bc53e9ac82035d2820786e1fa37ef4d9c8a1/configure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9124bc53e9ac82035d2820786e1fa37ef4d9c8a1/configure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.in?ref=9124bc53e9ac82035d2820786e1fa37ef4d9c8a1", "patch": "@@ -1909,7 +1909,7 @@ esac\n # being built; programs in there won't even run.\n if test \"${build}\" = \"${host}\" && test -d ${srcdir}/gcc; then\n   # Search for pre-installed headers if nothing else fits.\n-  FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -B$(build_tooldir)/bin/ -B$(build_tooldir)/lib/ -isystem $(build_tooldir)/include'\n+  FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -B$(build_tooldir)/bin/ -B$(build_tooldir)/lib/ -isystem $(build_tooldir)/include -isystem $(build_tooldir)/sys-include'\n fi\n \n if test \"x${use_gnu_ld}\" = x &&"}]}