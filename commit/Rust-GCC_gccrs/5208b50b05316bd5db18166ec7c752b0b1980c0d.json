{"sha": "5208b50b05316bd5db18166ec7c752b0b1980c0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIwOGI1MGIwNTMxNmJkNWRiMTgxNjZlYzdjNzUyYjBiMTk4MGMwZA==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-07-02T17:20:54Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-07-02T17:20:54Z"}, "message": "re PR fastjar/9532 (jar -C flag is incompatible with Sun's (fastjar uses nonportable feature of getcwd))\n\n\tPR java/9532\n\t* jartool.c (add_to_jar): Return 1 on failure to open file.\n\tSplit out -C case to:\n\t* jartool.c (add_to_jar_with_dir): New function.\n\nFrom-SVN: r68847", "tree": {"sha": "baa3810796cd1a2a81d5239328902a89a00be980", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/baa3810796cd1a2a81d5239328902a89a00be980"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5208b50b05316bd5db18166ec7c752b0b1980c0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5208b50b05316bd5db18166ec7c752b0b1980c0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5208b50b05316bd5db18166ec7c752b0b1980c0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5208b50b05316bd5db18166ec7c752b0b1980c0d/comments", "author": null, "committer": null, "parents": [{"sha": "300e89a2b66eb8d9d9467168251927525d5c4fe8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/300e89a2b66eb8d9d9467168251927525d5c4fe8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/300e89a2b66eb8d9d9467168251927525d5c4fe8"}], "stats": {"total": 68, "additions": 38, "deletions": 30}, "files": [{"sha": "ff91e9c2b3b307523813b4e6d44e6316fbfd2a03", "filename": "fastjar/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5208b50b05316bd5db18166ec7c752b0b1980c0d/fastjar%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5208b50b05316bd5db18166ec7c752b0b1980c0d/fastjar%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2FChangeLog?ref=5208b50b05316bd5db18166ec7c752b0b1980c0d", "patch": "@@ -1,3 +1,10 @@\n+2003-07-02  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\tPR java/9532\n+\t* jartool.c (add_to_jar): Return 1 on failure to open file.\n+\tSplit out -C case to:\n+\t* jartool.c (add_to_jar_with_dir): New function.\n+\n 2003-06-15  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \tPR java/9532"}, {"sha": "83454d2746ce9bfccb574eb86ba7fe55d3fa9a55", "filename": "fastjar/jartool.c", "status": "modified", "additions": 31, "deletions": 30, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5208b50b05316bd5db18166ec7c752b0b1980c0d/fastjar%2Fjartool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5208b50b05316bd5db18166ec7c752b0b1980c0d/fastjar%2Fjartool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2Fjartool.c?ref=5208b50b05316bd5db18166ec7c752b0b1980c0d", "patch": "@@ -274,7 +274,8 @@ int consume(pb_file *, int);\n int list_jar(int, char**, int);\n int extract_jar(int, char**, int);\n int add_file_to_jar(int, int, const char*, struct stat*);\n-int add_to_jar(int, const char*, const char*);\n+int add_to_jar(int, const char*);\n+int add_to_jar_with_dir(int, const char*, const char*);\n int create_central_header(int);\n int make_manifest(int, const char*);\n static void init_args(char **, int);\n@@ -511,14 +512,14 @@ int main(int argc, char **argv){\n           fprintf(stderr, \"Error: missing argument for -C.\\n\");\n           exit(1);\n         }\n-\tif (add_to_jar(jarfd, dir_to_change, file_to_add)) {\n+\tif (add_to_jar_with_dir(jarfd, dir_to_change, file_to_add)) {\n           fprintf(stderr,\n                  \"Error adding %s (in directory %s) to jar archive!\\n\",\n                  file_to_add, dir_to_change);\n           exit(1);\n         }\n       } else {\n-        if(add_to_jar(jarfd, NULL, arg)){\n+        if(add_to_jar(jarfd, arg)){\n           fprintf(stderr, \"Error adding %s to jar archive!\\n\", arg);\n           exit(1);\n         }\n@@ -815,13 +816,36 @@ int make_manifest(int jfd, const char *mf_name){\n   return 0;\n }\n \n-int add_to_jar(int fd, const char *new_dir, const char *file){\n+/* Implements -C by wrapping add_to_jar.  new_dir is the directory \n+   to switch to. */\n+int \n+add_to_jar_with_dir (int fd, const char* new_dir, const char* file)\n+{\n+  int retval;\n+  char old_dir[MAXPATHLEN]; \n+  if (getcwd(old_dir, MAXPATHLEN) == NULL) {\n+    perror(\"getcwd\");\n+    return 1;\n+  }\n+  if (chdir(new_dir) == -1) {\n+    perror(new_dir);\n+    return 1;\n+  }\n+  retval=add_to_jar(fd, file);\n+  if (chdir(old_dir) == -1) {\n+    perror(old_dir);\n+    return 1;\n+  }\n+  return retval;\n+}\n+\n+int \n+add_to_jar (int fd, const char *file) {\n   struct stat statbuf;\n   DIR *dir;\n   struct dirent *de;\n   zipentry *ze;\n   int stat_return;\n-  char old_dir[MAXPATHLEN];\n \n   /* This is a quick compatibility fix -- Simon Weijgers <simon@weijgers.com> \n    * It fixes this:\n@@ -833,19 +857,6 @@ int add_to_jar(int fd, const char *new_dir, const char *file){\n   while (*file=='.' && *(file+1)=='/')\n     file+=2;\n   \n-  /* If new_dir isn't null, we need to change to that directory.  However,\n-     we also need to return to the old directory when we're done.  See below.*/\n-  if(new_dir != NULL){\n-    if (getcwd(old_dir, MAXPATHLEN) == NULL) {\n-      perror(\"getcwd\");\n-      return 1;\n-    }\n-    if(chdir(new_dir) == -1){\n-      perror(new_dir);\n-      return 1;\n-    }\n-  }\n-\n   if(jarfile && !strcmp(file, jarfile)){\n     if(verbose)\n       printf(\"skipping: %s\\n\", file);\n@@ -936,7 +947,7 @@ int add_to_jar(int fd, const char *new_dir, const char *file){\n \n       strcpy(t_ptr, de->d_name);\n \n-      if(add_to_jar(fd, NULL, fullname)){\n+      if (add_to_jar(fd, fullname)) {\n         fprintf(stderr, \"Error adding file to jar!\\n\");\n         return 1;\n       }\n@@ -951,7 +962,7 @@ int add_to_jar(int fd, const char *new_dir, const char *file){\n     add_fd = open(file, O_RDONLY | O_BINARY);\n     if(add_fd < 0){\n       fprintf(stderr, \"Error opening %s.\\n\", file);\n-      return 0;\n+      return 1;\n     }\n     \n     if(add_file_to_jar(fd, add_fd, file, &statbuf)){\n@@ -962,16 +973,6 @@ int add_to_jar(int fd, const char *new_dir, const char *file){\n   } else {\n     fprintf(stderr, \"Illegal file specified: %s\\n\", file);\n   }\n-  \n-  /* If (and only if!) new_dir != NULL, we switched directories, so\n-     we have to switch back to the old directory. */\n-  if (new_dir != NULL) {\n-    if (chdir(old_dir) == -1) {\n-      perror(old_dir);\n-      return 1;\n-    }\n-  }\n-\n   return 0;\n }\n "}]}