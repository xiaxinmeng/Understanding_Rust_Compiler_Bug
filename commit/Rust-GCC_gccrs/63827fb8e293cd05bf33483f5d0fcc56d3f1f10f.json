{"sha": "63827fb8e293cd05bf33483f5d0fcc56d3f1f10f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM4MjdmYjhlMjkzY2QwNWJmMzM0ODNmNWQwZmNjNTZkM2YxZjEwZg==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2009-07-26T07:00:23Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2009-07-26T07:00:23Z"}, "message": "re PR tree-optimization/40801 (internal compiler error: in vect_get_vec_def_for_stmt_copy, at tree-vect-stmts.c:1096)\n\n\tPR tree-optimization/40801\n\t* tree-vect-stmts.c (vectorizable_call): Get previous copy\n\tof vector operand from the previous copy of vector statement.\n\tPass the correct definition type value to\n\tvect_get_vec_def_for_stmt_copy().\n\nFrom-SVN: r150096", "tree": {"sha": "45c88e5de2ce59d579bb00397906132865c6f779", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45c88e5de2ce59d579bb00397906132865c6f779"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63827fb8e293cd05bf33483f5d0fcc56d3f1f10f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63827fb8e293cd05bf33483f5d0fcc56d3f1f10f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63827fb8e293cd05bf33483f5d0fcc56d3f1f10f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63827fb8e293cd05bf33483f5d0fcc56d3f1f10f/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "23c35ef67a105e7e86ee123078f25f02d1aa656e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23c35ef67a105e7e86ee123078f25f02d1aa656e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23c35ef67a105e7e86ee123078f25f02d1aa656e"}], "stats": {"total": 74, "additions": 68, "deletions": 6}, "files": [{"sha": "99028e8b1e3539e4e2f818ac8653a519ec5901c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63827fb8e293cd05bf33483f5d0fcc56d3f1f10f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63827fb8e293cd05bf33483f5d0fcc56d3f1f10f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=63827fb8e293cd05bf33483f5d0fcc56d3f1f10f", "patch": "@@ -1,3 +1,11 @@\n+2009-07-26  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/40801\n+\t* tree-vect-stmts.c (vectorizable_call): Get previous copy\n+\tof vector operand from the previous copy of vector statement.\n+\tPass the correct definition type value to\n+\tvect_get_vec_def_for_stmt_copy().\n+\n 2009-07-25  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* collect2.c (scan_libraries): Use CONST_CAST2 to perform char ** to"}, {"sha": "6139e0dc0d6773cf7147f9f0b05c70f79ecb107a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63827fb8e293cd05bf33483f5d0fcc56d3f1f10f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63827fb8e293cd05bf33483f5d0fcc56d3f1f10f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=63827fb8e293cd05bf33483f5d0fcc56d3f1f10f", "patch": "@@ -1,3 +1,10 @@\n+2009-07-26  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/40801\n+\t* gfortran.dg/vect/fast-math-real8-pr40801.f90: New test.\n+\t* gfortran.dg/vect/vect.exp: Run tests starting with\n+\t\"fast-math-real8\" with -ffast-math and -fdefault-real-8.\n+\n 2009-07-25  David Daney  <ddaney@caviumnetworks.com>\n \n \tPR rtl-optimization/40445"}, {"sha": "eb6330def63efc694e87cc559e55012355c0128d", "filename": "gcc/testsuite/gfortran.dg/vect/fast-math-real8-pr40801.f90", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63827fb8e293cd05bf33483f5d0fcc56d3f1f10f/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Ffast-math-real8-pr40801.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63827fb8e293cd05bf33483f5d0fcc56d3f1f10f/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Ffast-math-real8-pr40801.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Ffast-math-real8-pr40801.f90?ref=63827fb8e293cd05bf33483f5d0fcc56d3f1f10f", "patch": "@@ -0,0 +1,37 @@\n+! { dg-do compile }\n+\n+MODULE YOMPHY0\n+REAL :: ECMNP\n+REAL :: SCO\n+REAL :: USDMLT\n+END MODULE YOMPHY0\n+SUBROUTINE ACCONV ( KIDIA,KFDIA,KLON,KTDIA,KLEV,&\n+                    &CDLOCK)\n+USE YOMPHY0  , ONLY : ECMNP    ,SCO      ,USDMLT\n+REAL :: PAPHIF(KLON,KLEV),PCVGQ(KLON,KLEV)&\n+    &,PFPLCL(KLON,0:KLEV),PFPLCN(KLON,0:KLEV),PSTRCU(KLON,0:KLEV)&\n+    &,PSTRCV(KLON,0:KLEV)\n+INTEGER :: KNLAB(KLON,KLEV),KNND(KLON)\n+REAL :: ZCP(KLON,KLEV),ZLHE(KLON,KLEV),ZDSE(KLON,KLEV)&\n+    &,ZPOII(KLON),ZALF(KLON),ZLN(KLON),ZUN(KLON),ZVN(KLON)&\n+    &,ZPOIL(KLON)\n+DO JLEV=KLEV-1,KTDIA,-1\n+  DO JIT=1,NBITER\n+    ZLN(JLON)=MAX(0.,ZLN(JLON)&\n+     &-(ZQW(JLON,JLEV)-ZQN(JLON)&\n+     &*(PQ(JLON,JLEV+1)-ZQN(JLON))))*KNLAB(JLON,JLEV)\n+  ENDDO\n+ENDDO\n+IF (ITOP < KLEV+1) THEN\n+  DO JLON=KIDIA,KFDIA\n+    ZZVAL=PFPLCL(JLON,KLEV)+PFPLCN(JLON,KLEV)-SCO\n+    KNND(JLON)=KNND(JLON)*MAX(0.,-SIGN(1.,0.-ZZVAL))\n+  ENDDO\n+  DO JLEV=ITOP,KLEV\n+    DO JLON=KIDIA,KFDIA\n+    ENDDO\n+  ENDDO\n+ENDIF\n+END SUBROUTINE ACCONV\n+\n+! { dg-final { cleanup-tree-dump \"vect\" } }"}, {"sha": "826b64d0045373183a36e98ea6b383a30d84526e", "filename": "gcc/testsuite/gfortran.dg/vect/vect.exp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63827fb8e293cd05bf33483f5d0fcc56d3f1f10f/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63827fb8e293cd05bf33483f5d0fcc56d3f1f10f/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect.exp?ref=63827fb8e293cd05bf33483f5d0fcc56d3f1f10f", "patch": "@@ -125,6 +125,12 @@ lappend DEFAULT_VECTCFLAGS \"-ffast-math\"\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/fast-math-*.\\[fF\\]{,90,95,03,08} ]]  \\\n         \"\" $DEFAULT_VECTCFLAGS\n \n+# -ffast-math tests\n+set DEFAULT_VECTCFLAGS $SAVED_DEFAULT_VECTCFLAGS\n+lappend DEFAULT_VECTCFLAGS \"-ffast-math\" \"-fdefault-real-8\"\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/fast-math-real8*.\\[fF\\]{,90,95,03,08} ]]  \\\n+        \"\" $DEFAULT_VECTCFLAGS\n+\n # -fvect-cost-model tests\n set DEFAULT_VECTCFLAGS $SAVED_DEFAULT_VECTCFLAGS\n lappend DEFAULT_VECTCFLAGS \"-fvect-cost-model\""}, {"sha": "50900775a04eb97e6bd84b4b67e95b9448caa50d", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63827fb8e293cd05bf33483f5d0fcc56d3f1f10f/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63827fb8e293cd05bf33483f5d0fcc56d3f1f10f/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=63827fb8e293cd05bf33483f5d0fcc56d3f1f10f", "patch": "@@ -1227,7 +1227,7 @@ vectorizable_call (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt)\n   tree fndecl, new_temp, def, rhs_type, lhs_type;\n   gimple def_stmt;\n   enum vect_def_type dt[2] = {vect_unknown_def_type, vect_unknown_def_type};\n-  gimple new_stmt;\n+  gimple new_stmt = NULL;\n   int ncopies, j;\n   VEC(tree, heap) *vargs = NULL;\n   enum { NARROW, NONE, WIDEN } modifier;\n@@ -1367,8 +1367,11 @@ vectorizable_call (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt)\n \t\tvec_oprnd0\n \t\t  = vect_get_vec_def_for_operand (op, stmt, NULL);\n \t      else\n-\t\tvec_oprnd0\n-\t\t  = vect_get_vec_def_for_stmt_copy (dt[nargs], vec_oprnd0);\n+\t\t{\n+\t\t  vec_oprnd0 = gimple_call_arg (new_stmt, i);\n+\t\t  vec_oprnd0\n+                    = vect_get_vec_def_for_stmt_copy (dt[i], vec_oprnd0);\n+\t\t}\n \n \t      VEC_quick_push (tree, vargs, vec_oprnd0);\n \t    }\n@@ -1406,14 +1409,15 @@ vectorizable_call (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt)\n \t\t  vec_oprnd0\n \t\t    = vect_get_vec_def_for_operand (op, stmt, NULL);\n \t\t  vec_oprnd1\n-\t\t    = vect_get_vec_def_for_stmt_copy (dt[nargs], vec_oprnd0);\n+\t\t    = vect_get_vec_def_for_stmt_copy (dt[i], vec_oprnd0);\n \t\t}\n \t      else\n \t\t{\n+\t\t  vec_oprnd1 = gimple_call_arg (new_stmt, 2*i);\n \t\t  vec_oprnd0\n-\t\t    = vect_get_vec_def_for_stmt_copy (dt[nargs], vec_oprnd1);\n+\t\t    = vect_get_vec_def_for_stmt_copy (dt[i], vec_oprnd1);\n \t\t  vec_oprnd1\n-\t\t    = vect_get_vec_def_for_stmt_copy (dt[nargs], vec_oprnd0);\n+\t\t    = vect_get_vec_def_for_stmt_copy (dt[i], vec_oprnd0);\n \t\t}\n \n \t      VEC_quick_push (tree, vargs, vec_oprnd0);"}]}