{"sha": "a577c4054fc7aa9a5228feb6f0bdb37cf31997d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU3N2M0MDU0ZmM3YWE5YTUyMjhmZWI2ZjBiZGIzN2NmMzE5OTdkNQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-06-15T11:28:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-06-15T11:28:13Z"}, "message": "expr.c (expand_expr_real_2): Reduce all integral types to bitfield precision.\n\n2011-06-15  Richard Guenther  <rguenther@suse.de>\n\n\t* expr.c (expand_expr_real_2): Reduce all integral types to\n\tbitfield precision.\n\t(expand_expr_real_1): Likewise.\n\nFrom-SVN: r175078", "tree": {"sha": "78528a56bcceea2c391dcb8920f416c3acc3601f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78528a56bcceea2c391dcb8920f416c3acc3601f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a577c4054fc7aa9a5228feb6f0bdb37cf31997d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a577c4054fc7aa9a5228feb6f0bdb37cf31997d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a577c4054fc7aa9a5228feb6f0bdb37cf31997d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a577c4054fc7aa9a5228feb6f0bdb37cf31997d5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "93536c974233d3b400e719aac0d089185e1b5a97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93536c974233d3b400e719aac0d089185e1b5a97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93536c974233d3b400e719aac0d089185e1b5a97"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "d52725cadf852de3e295c5a7aeccddc46d7c9e7b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a577c4054fc7aa9a5228feb6f0bdb37cf31997d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a577c4054fc7aa9a5228feb6f0bdb37cf31997d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a577c4054fc7aa9a5228feb6f0bdb37cf31997d5", "patch": "@@ -1,3 +1,9 @@\n+2011-06-15  Richard Guenther  <rguenther@suse.de>\n+\n+\t* expr.c (expand_expr_real_2): Reduce all integral types to\n+\tbitfield precision.\n+\t(expand_expr_real_1): Likewise.\n+\n 2011-06-15  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/48613"}, {"sha": "9535c9671686d7ec48c09c122af1aad95f297cf1", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a577c4054fc7aa9a5228feb6f0bdb37cf31997d5/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a577c4054fc7aa9a5228feb6f0bdb37cf31997d5/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=a577c4054fc7aa9a5228feb6f0bdb37cf31997d5", "patch": "@@ -7265,7 +7265,7 @@ expand_expr_real_2 (sepops ops, rtx target, enum machine_mode tmode,\n   /* An operation in what may be a bit-field type needs the\n      result to be reduced to the precision of the bit-field type,\n      which is narrower than that of the type's mode.  */\n-  reduce_bit_field = (TREE_CODE (type) == INTEGER_TYPE\n+  reduce_bit_field = (INTEGRAL_TYPE_P (type)\n \t\t      && GET_MODE_PRECISION (mode) > TYPE_PRECISION (type));\n \n   if (reduce_bit_field && modifier == EXPAND_STACK_PARM)\n@@ -8334,7 +8334,7 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n      result to be reduced to the precision of the bit-field type,\n      which is narrower than that of the type's mode.  */\n   reduce_bit_field = (!ignore\n-\t\t      && TREE_CODE (type) == INTEGER_TYPE\n+\t\t      && INTEGRAL_TYPE_P (type)\n \t\t      && GET_MODE_PRECISION (mode) > TYPE_PRECISION (type));\n \n   /* If we are going to ignore this result, we need only do something"}]}