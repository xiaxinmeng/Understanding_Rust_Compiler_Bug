{"sha": "281bb5e4ea53f02487969ac7346e96bab347d62e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjgxYmI1ZTRlYTUzZjAyNDg3OTY5YWM3MzQ2ZTk2YmFiMzQ3ZDYyZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-09T23:47:18Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-09T23:47:18Z"}, "message": "(target_negative): -0 counts as negative.\n\nFrom-SVN: r6735", "tree": {"sha": "513c38941fd62a4d238122ef3733c462ce7264e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/513c38941fd62a4d238122ef3733c462ce7264e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/281bb5e4ea53f02487969ac7346e96bab347d62e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/281bb5e4ea53f02487969ac7346e96bab347d62e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/281bb5e4ea53f02487969ac7346e96bab347d62e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/281bb5e4ea53f02487969ac7346e96bab347d62e/comments", "author": null, "committer": null, "parents": [{"sha": "b9b5c1b3764818c3446edc4668c60bf7bed59c87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9b5c1b3764818c3446edc4668c60bf7bed59c87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9b5c1b3764818c3446edc4668c60bf7bed59c87"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "16d9ebcc696cdec03ada49d26479384aedb2066f", "filename": "gcc/real.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/281bb5e4ea53f02487969ac7346e96bab347d62e/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/281bb5e4ea53f02487969ac7346e96bab347d62e/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=281bb5e4ea53f02487969ac7346e96bab347d62e", "patch": "@@ -824,19 +824,14 @@ target_isnan (x)\n \n \n /* Check for a negative REAL_VALUE_TYPE number.\n- * this means strictly less than zero, not -0.\n+ * This just checks the sign bit, so that -0 counts as negative.\n  */\n \n int\n target_negative (x)\n      REAL_VALUE_TYPE x;\n {\n-  unsigned EMUSHORT e[NE];\n-\n-  GET_REAL (&x, e);\n-  if (ecmp (e, ezero) == -1)\n-    return (1);\n-  return (0);\n+  return ereal_isneg (x);\n }\n \n /* Expansion of REAL_VALUE_TRUNCATE."}]}