{"sha": "6c0870b8965075ed5cef38bc90a6992febec95a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMwODcwYjg5NjUwNzVlZDVjZWYzOGJjOTBhNjk5MmZlYmVjOTVhNQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-04-22T16:29:04Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-04-22T16:29:04Z"}, "message": "mn10300.c (expand_prologue): End the current sequence before counting the tst insns in the current function.\n\n        * mn10300.c (expand_prologue): End the current sequence before\n        counting the tst insns in the current function.  Start a new\n        one before emitting any prologue instructions.\n\n        * mn10300.h (REGISTER_MOVE_COST): Bump up cost of moves in the\n        same class.\n\n        * mn10300.md (untyped_call): New expander.\n\nFrom-SVN: r13955", "tree": {"sha": "7fc73a53865d3cf6807ba3fe742397131ead33e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fc73a53865d3cf6807ba3fe742397131ead33e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c0870b8965075ed5cef38bc90a6992febec95a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c0870b8965075ed5cef38bc90a6992febec95a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c0870b8965075ed5cef38bc90a6992febec95a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c0870b8965075ed5cef38bc90a6992febec95a5/comments", "author": null, "committer": null, "parents": [{"sha": "9ae69d8b9db7ebee2d232b46ea5b9e7524026851", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ae69d8b9db7ebee2d232b46ea5b9e7524026851", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ae69d8b9db7ebee2d232b46ea5b9e7524026851"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "2e2bf5b1ea7132659bb79da0a01658e30cc35add", "filename": "gcc/config/mn10300/mn10300.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0870b8965075ed5cef38bc90a6992febec95a5/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0870b8965075ed5cef38bc90a6992febec95a5/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.c?ref=6c0870b8965075ed5cef38bc90a6992febec95a5", "patch": "@@ -419,6 +419,11 @@ expand_prologue ()\n {\n   unsigned int size;\n \n+  /* We need to end the current sequence so that count_tst_insns can\n+     look at all the insns in this function.  Normally this would be\n+     unsafe, but it's OK in the prologue/epilogue expanders.  */\n+  end_sequence ();\n+\n   /* Determine if it is profitable to put the value zero into a register\n      for the entire function.  If so, set ZERO_DREG and ZERO_AREG.  */\n   if (regs_ever_live[2] || regs_ever_live[3]\n@@ -475,6 +480,9 @@ expand_prologue ()\n       zero_areg = NULL_RTX;\n     }\n \n+  /* Start a new sequence.  */\n+  start_sequence ();\n+\n   /* SIZE includes the fixed stack space needed for function calls.  */\n   size = get_frame_size () + current_function_outgoing_args_size;\n   size += (current_function_outgoing_args_size ? 4 : 0);"}, {"sha": "39b307b60ca81d09d904c35c46e09cb5233e095d", "filename": "gcc/config/mn10300/mn10300.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0870b8965075ed5cef38bc90a6992febec95a5/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0870b8965075ed5cef38bc90a6992febec95a5/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.h?ref=6c0870b8965075ed5cef38bc90a6992febec95a5", "patch": "@@ -743,7 +743,7 @@ extern struct rtx_def *mn10300_builtin_saveregs ();\n     return 8;\n \n \n-#define REGISTER_MOVE_COST(CLASS1, CLASS2)  (CLASS1 != CLASS2 ? 4 : 0)\n+#define REGISTER_MOVE_COST(CLASS1, CLASS2)  (CLASS1 != CLASS2 ? 4 : 2)\n \n /* A crude cut at RTX_COSTS for the MN10300.  */\n "}, {"sha": "c34b1bc36bef465cbf689b0a80c5b2a6179a241b", "filename": "gcc/config/mn10300/mn10300.md", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0870b8965075ed5cef38bc90a6992febec95a5/gcc%2Fconfig%2Fmn10300%2Fmn10300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0870b8965075ed5cef38bc90a6992febec95a5/gcc%2Fconfig%2Fmn10300%2Fmn10300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.md?ref=6c0870b8965075ed5cef38bc90a6992febec95a5", "patch": "@@ -1234,6 +1234,26 @@\n   \"calls %C1\"\n   [(set_attr \"cc\" \"clobber\")])\n \n+(define_expand \"untyped_call\"\n+  [(parallel [(call (match_operand 0 \"\" \"\")\n+                    (const_int 0))\n+              (match_operand 1 \"\" \"\")\n+              (match_operand 2 \"\" \"\")])]\n+  \"\"\n+  \"\n+{\n+  int i;\n+\n+  emit_call_insn (gen_call (operands[0], const0_rtx));\n+\n+  for (i = 0; i < XVECLEN (operands[2], 0); i++)\n+    {\n+      rtx set = XVECEXP (operands[2], 0, i);\n+      emit_move_insn (SET_DEST (set), SET_SRC (set));\n+    }\n+  DONE;\n+}\")\n+\n (define_insn \"nop\"\n   [(const_int 0)]\n   \"\""}]}