{"sha": "41787e1db8b690bc4ba27ad31042fb3722da348a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE3ODdlMWRiOGI2OTBiYzRiYTI3YWQzMTA0MmZiMzcyMmRhMzQ4YQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2010-10-22T14:50:24Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2010-10-22T14:50:24Z"}, "message": "* cpplib.pot: Regenerate.\n\nFrom-SVN: r165833", "tree": {"sha": "d2fb2771dee2863be8dafa33fd437a240719f236", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2fb2771dee2863be8dafa33fd437a240719f236"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41787e1db8b690bc4ba27ad31042fb3722da348a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41787e1db8b690bc4ba27ad31042fb3722da348a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41787e1db8b690bc4ba27ad31042fb3722da348a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41787e1db8b690bc4ba27ad31042fb3722da348a/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8ba5b19db8bc662cc5292f40857e06b2e75eadd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8ba5b19db8bc662cc5292f40857e06b2e75eadd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8ba5b19db8bc662cc5292f40857e06b2e75eadd"}], "stats": {"total": 341, "additions": 176, "deletions": 165}, "files": [{"sha": "c718d1098516a9d88242a044cb140a196f74af91", "filename": "libcpp/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41787e1db8b690bc4ba27ad31042fb3722da348a/libcpp%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41787e1db8b690bc4ba27ad31042fb3722da348a/libcpp%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2FChangeLog?ref=41787e1db8b690bc4ba27ad31042fb3722da348a", "patch": "@@ -1,3 +1,7 @@\n+2010-10-22  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* cpplib.pot: Regenerate.\n+\n 2010-05-15  Joseph Myers  <joseph@codesourcery.com>\n \n \t* fi.po: New."}, {"sha": "101c9b9f7b64d5fb7f9bd82ad67168bcb8e634bb", "filename": "libcpp/po/cpplib.pot", "status": "modified", "additions": 172, "deletions": 165, "changes": 337, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41787e1db8b690bc4ba27ad31042fb3722da348a/libcpp%2Fpo%2Fcpplib.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41787e1db8b690bc4ba27ad31042fb3722da348a/libcpp%2Fpo%2Fcpplib.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2Fcpplib.pot?ref=41787e1db8b690bc4ba27ad31042fb3722da348a", "patch": "@@ -8,10 +8,11 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: PACKAGE VERSION\\n\"\n \"Report-Msgid-Bugs-To: http://gcc.gnu.org/bugs.html\\n\"\n-\"POT-Creation-Date: 2010-04-06 14:18+0000\\n\"\n+\"POT-Creation-Date: 2010-10-22 14:48+0000\\n\"\n \"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n \"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n \"Language-Team: LANGUAGE <LL@li.org>\\n\"\n+\"Language: \\n\"\n \"MIME-Version: 1.0\\n\"\n \"Content-Type: text/plain; charset=CHARSET\\n\"\n \"Content-Transfer-Encoding: 8bit\\n\"\n@@ -74,7 +75,7 @@ msgid \"%.*s is not a valid universal character\"\n msgstr \"\"\n \n #: charset.c:1056\n-#: lex.c:488\n+#: lex.c:1040\n msgid \"'$' in identifier or number\"\n msgstr \"\"\n \n@@ -154,268 +155,270 @@ msgstr \"\"\n msgid \"failure to convert %s to %s\"\n msgstr \"\"\n \n-#: directives.c:222\n-#: directives.c:248\n+#: directives.c:223\n+#: directives.c:249\n #, c-format\n msgid \"extra tokens at end of #%s directive\"\n msgstr \"\"\n \n-#: directives.c:354\n+#: directives.c:355\n #, c-format\n msgid \"#%s is a GCC extension\"\n msgstr \"\"\n \n-#: directives.c:358\n+#: directives.c:360\n #, c-format\n msgid \"#%s is a deprecated GCC extension\"\n msgstr \"\"\n \n-#: directives.c:372\n+#: directives.c:373\n msgid \"suggest not using #elif in traditional C\"\n msgstr \"\"\n \n-#: directives.c:375\n+#: directives.c:376\n #, c-format\n msgid \"traditional C ignores #%s with the # indented\"\n msgstr \"\"\n \n-#: directives.c:379\n+#: directives.c:380\n #, c-format\n msgid \"suggest hiding #%s from traditional C with an indented #\"\n msgstr \"\"\n \n-#: directives.c:405\n+#: directives.c:406\n msgid \"embedding a directive within macro arguments is not portable\"\n msgstr \"\"\n \n-#: directives.c:425\n+#: directives.c:426\n msgid \"style of line directive is a GCC extension\"\n msgstr \"\"\n \n-#: directives.c:480\n+#: directives.c:481\n #, c-format\n msgid \"invalid preprocessing directive #%s\"\n msgstr \"\"\n \n-#: directives.c:548\n+#: directives.c:549\n msgid \"\\\"defined\\\" cannot be used as a macro name\"\n msgstr \"\"\n \n-#: directives.c:554\n+#: directives.c:555\n #, c-format\n msgid \"\\\"%s\\\" cannot be used as a macro name as it is an operator in C++\"\n msgstr \"\"\n \n-#: directives.c:557\n+#: directives.c:558\n #, c-format\n msgid \"no macro name given in #%s directive\"\n msgstr \"\"\n \n-#: directives.c:560\n+#: directives.c:561\n msgid \"macro names must be identifiers\"\n msgstr \"\"\n \n-#: directives.c:609\n+#: directives.c:610\n #, c-format\n msgid \"undefining \\\"%s\\\"\"\n msgstr \"\"\n \n-#: directives.c:664\n+#: directives.c:665\n msgid \"missing terminating > character\"\n msgstr \"\"\n \n-#: directives.c:723\n+#: directives.c:724\n #, c-format\n msgid \"#%s expects \\\"FILENAME\\\" or <FILENAME>\"\n msgstr \"\"\n \n-#: directives.c:769\n+#: directives.c:770\n #, c-format\n msgid \"empty filename in #%s\"\n msgstr \"\"\n \n-#: directives.c:779\n+#: directives.c:780\n msgid \"#include nested too deeply\"\n msgstr \"\"\n \n-#: directives.c:820\n+#: directives.c:821\n msgid \"#include_next in primary source file\"\n msgstr \"\"\n \n-#: directives.c:846\n+#: directives.c:847\n #, c-format\n msgid \"invalid flag \\\"%s\\\" in line directive\"\n msgstr \"\"\n \n-#: directives.c:906\n+#: directives.c:907\n msgid \"unexpected end of file after #line\"\n msgstr \"\"\n \n-#: directives.c:909\n+#: directives.c:910\n #, c-format\n msgid \"\\\"%s\\\" after #line is not a positive integer\"\n msgstr \"\"\n \n-#: directives.c:915\n-#: directives.c:917\n+#: directives.c:916\n+#: directives.c:918\n msgid \"line number out of range\"\n msgstr \"\"\n \n-#: directives.c:930\n-#: directives.c:1010\n+#: directives.c:931\n+#: directives.c:1011\n #, c-format\n msgid \"\\\"%s\\\" is not a valid filename\"\n msgstr \"\"\n \n-#: directives.c:970\n+#: directives.c:971\n #, c-format\n msgid \"\\\"%s\\\" after # is not a positive integer\"\n msgstr \"\"\n \n-#: directives.c:1062\n+#: directives.c:1064\n+#: directives.c:1066\n+#: directives.c:1068\n #, c-format\n msgid \"%s\"\n msgstr \"\"\n \n-#: directives.c:1086\n+#: directives.c:1092\n #, c-format\n msgid \"invalid #%s directive\"\n msgstr \"\"\n \n-#: directives.c:1149\n+#: directives.c:1155\n #, c-format\n msgid \"registering pragmas in namespace \\\"%s\\\" with mismatched name expansion\"\n msgstr \"\"\n \n-#: directives.c:1158\n+#: directives.c:1164\n #, c-format\n msgid \"registering pragma \\\"%s\\\" with name expansion and no namespace\"\n msgstr \"\"\n \n-#: directives.c:1176\n+#: directives.c:1182\n #, c-format\n msgid \"registering \\\"%s\\\" as both a pragma and a pragma namespace\"\n msgstr \"\"\n \n-#: directives.c:1179\n+#: directives.c:1185\n #, c-format\n msgid \"#pragma %s %s is already registered\"\n msgstr \"\"\n \n-#: directives.c:1182\n+#: directives.c:1188\n #, c-format\n msgid \"#pragma %s is already registered\"\n msgstr \"\"\n \n-#: directives.c:1212\n+#: directives.c:1218\n msgid \"registering pragma with NULL handler\"\n msgstr \"\"\n \n-#: directives.c:1424\n+#: directives.c:1430\n msgid \"#pragma once in main file\"\n msgstr \"\"\n \n-#: directives.c:1444\n+#: directives.c:1453\n msgid \"invalid #pragma push_macro directive\"\n msgstr \"\"\n \n-#: directives.c:1483\n+#: directives.c:1508\n msgid \"invalid #pragma pop_macro directive\"\n msgstr \"\"\n \n-#: directives.c:1537\n+#: directives.c:1563\n msgid \"invalid #pragma GCC poison directive\"\n msgstr \"\"\n \n-#: directives.c:1546\n+#: directives.c:1572\n #, c-format\n msgid \"poisoning existing macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: directives.c:1565\n+#: directives.c:1591\n msgid \"#pragma system_header ignored outside include file\"\n msgstr \"\"\n \n-#: directives.c:1590\n+#: directives.c:1616\n #, c-format\n msgid \"cannot find source file %s\"\n msgstr \"\"\n \n-#: directives.c:1594\n+#: directives.c:1620\n #, c-format\n msgid \"current file is older than %s\"\n msgstr \"\"\n \n-#: directives.c:1779\n+#: directives.c:1805\n msgid \"_Pragma takes a parenthesized string literal\"\n msgstr \"\"\n \n-#: directives.c:1884\n+#: directives.c:1916\n msgid \"#else without #if\"\n msgstr \"\"\n \n-#: directives.c:1889\n+#: directives.c:1921\n msgid \"#else after #else\"\n msgstr \"\"\n \n-#: directives.c:1891\n-#: directives.c:1924\n+#: directives.c:1923\n+#: directives.c:1956\n msgid \"the conditional began here\"\n msgstr \"\"\n \n-#: directives.c:1917\n+#: directives.c:1949\n msgid \"#elif without #if\"\n msgstr \"\"\n \n-#: directives.c:1922\n+#: directives.c:1954\n msgid \"#elif after #else\"\n msgstr \"\"\n \n-#: directives.c:1960\n+#: directives.c:1992\n msgid \"#endif without #if\"\n msgstr \"\"\n \n-#: directives.c:2040\n+#: directives.c:2072\n msgid \"missing '(' after predicate\"\n msgstr \"\"\n \n-#: directives.c:2055\n+#: directives.c:2087\n msgid \"missing ')' to complete answer\"\n msgstr \"\"\n \n-#: directives.c:2075\n+#: directives.c:2107\n msgid \"predicate's answer is empty\"\n msgstr \"\"\n \n-#: directives.c:2102\n+#: directives.c:2134\n msgid \"assertion without predicate\"\n msgstr \"\"\n \n-#: directives.c:2105\n+#: directives.c:2137\n msgid \"predicate must be an identifier\"\n msgstr \"\"\n \n-#: directives.c:2191\n+#: directives.c:2223\n #, c-format\n msgid \"\\\"%s\\\" re-asserted\"\n msgstr \"\"\n \n-#: directives.c:2474\n+#: directives.c:2514\n #, c-format\n msgid \"unterminated #%s\"\n msgstr \"\"\n \n #: directives-only.c:222\n-#: lex.c:1516\n+#: lex.c:2068\n #: traditional.c:163\n msgid \"unterminated comment\"\n msgstr \"\"\n \n-#: errors.c:93\n+#: errors.c:235\n msgid \"stdout\"\n msgstr \"\"\n \n-#: errors.c:95\n+#: errors.c:237\n #, c-format\n msgid \"%s: %s\"\n msgstr \"\"\n@@ -465,7 +468,7 @@ msgid \"invalid suffix \\\"%.*s\\\" on floating constant\"\n msgstr \"\"\n \n #: expr.c:375\n-#: expr.c:424\n+#: expr.c:425\n #, c-format\n msgid \"traditional C rejects the \\\"%.*s\\\" suffix\"\n msgstr \"\"\n@@ -492,139 +495,143 @@ msgstr \"\"\n msgid \"use of C++0x long long integer constant\"\n msgstr \"\"\n \n-#: expr.c:442\n+#: expr.c:434\n+msgid \"use of C99 long long integer constant\"\n+msgstr \"\"\n+\n+#: expr.c:448\n msgid \"imaginary constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:445\n+#: expr.c:451\n msgid \"binary constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:538\n+#: expr.c:544\n msgid \"integer constant is too large for its type\"\n msgstr \"\"\n \n-#: expr.c:569\n+#: expr.c:575\n msgid \"integer constant is so large that it is unsigned\"\n msgstr \"\"\n \n-#: expr.c:664\n+#: expr.c:670\n msgid \"missing ')' after \\\"defined\\\"\"\n msgstr \"\"\n \n-#: expr.c:671\n+#: expr.c:677\n msgid \"operator \\\"defined\\\" requires an identifier\"\n msgstr \"\"\n \n-#: expr.c:679\n+#: expr.c:685\n #, c-format\n msgid \"(\\\"%s\\\" is an alternative token for \\\"%s\\\" in C++)\"\n msgstr \"\"\n \n-#: expr.c:689\n+#: expr.c:695\n msgid \"this use of \\\"defined\\\" may not be portable\"\n msgstr \"\"\n \n-#: expr.c:742\n+#: expr.c:751\n msgid \"floating constant in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:748\n+#: expr.c:757\n msgid \"imaginary number in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:795\n+#: expr.c:804\n #, c-format\n msgid \"\\\"%s\\\" is not defined\"\n msgstr \"\"\n \n-#: expr.c:807\n+#: expr.c:816\n msgid \"assertions are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:810\n+#: expr.c:819\n msgid \"assertions are a deprecated extension\"\n msgstr \"\"\n \n-#: expr.c:943\n-#: expr.c:972\n+#: expr.c:952\n+#: expr.c:981\n #, c-format\n msgid \"missing binary operator before token \\\"%s\\\"\"\n msgstr \"\"\n \n-#: expr.c:963\n+#: expr.c:972\n #, c-format\n msgid \"token \\\"%s\\\" is not valid in preprocessor expressions\"\n msgstr \"\"\n \n-#: expr.c:980\n+#: expr.c:989\n msgid \"missing expression between '(' and ')'\"\n msgstr \"\"\n \n-#: expr.c:983\n+#: expr.c:992\n #, c-format\n msgid \"%s with no expression\"\n msgstr \"\"\n \n-#: expr.c:986\n+#: expr.c:995\n #, c-format\n msgid \"operator '%s' has no right operand\"\n msgstr \"\"\n \n-#: expr.c:991\n+#: expr.c:1000\n #, c-format\n msgid \"operator '%s' has no left operand\"\n msgstr \"\"\n \n-#: expr.c:1017\n+#: expr.c:1026\n msgid \" ':' without preceding '?'\"\n msgstr \"\"\n \n-#: expr.c:1045\n+#: expr.c:1054\n #, c-format\n msgid \"unbalanced stack in %s\"\n msgstr \"\"\n \n-#: expr.c:1065\n+#: expr.c:1074\n #, c-format\n msgid \"impossible operator '%u'\"\n msgstr \"\"\n \n-#: expr.c:1166\n+#: expr.c:1175\n msgid \"missing ')' in expression\"\n msgstr \"\"\n \n-#: expr.c:1195\n+#: expr.c:1204\n msgid \"'?' without following ':'\"\n msgstr \"\"\n \n-#: expr.c:1205\n+#: expr.c:1214\n msgid \"integer overflow in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1210\n+#: expr.c:1219\n msgid \"missing '(' in expression\"\n msgstr \"\"\n \n-#: expr.c:1242\n+#: expr.c:1251\n #, c-format\n msgid \"the left operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1247\n+#: expr.c:1256\n #, c-format\n msgid \"the right operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1506\n+#: expr.c:1515\n msgid \"traditional C rejects the unary plus operator\"\n msgstr \"\"\n \n-#: expr.c:1589\n+#: expr.c:1598\n msgid \"comma operator in operand of #if\"\n msgstr \"\"\n \n-#: expr.c:1725\n+#: expr.c:1734\n msgid \"division by zero in #if\"\n msgstr \"\"\n \n@@ -660,143 +667,143 @@ msgstr \"\"\n msgid \"no include path in which to search for %s\"\n msgstr \"\"\n \n-#: files.c:1306\n+#: files.c:1307\n msgid \"Multiple include guards may be useful for:\\n\"\n msgstr \"\"\n \n-#: init.c:485\n+#: init.c:489\n msgid \"cppchar_t must be an unsigned type\"\n msgstr \"\"\n \n-#: init.c:489\n+#: init.c:493\n #, c-format\n msgid \"\"\n-\"preprocessor arithmetic has maximum precision of %lu bits; target requires %\"\n-\"lu bits\"\n+\"preprocessor arithmetic has maximum precision of %lu bits; target requires \"\n+\"%lu bits\"\n msgstr \"\"\n \n-#: init.c:496\n+#: init.c:500\n msgid \"CPP arithmetic must be at least as precise as a target int\"\n msgstr \"\"\n \n-#: init.c:499\n+#: init.c:503\n msgid \"target char is less than 8 bits wide\"\n msgstr \"\"\n \n-#: init.c:503\n+#: init.c:507\n msgid \"target wchar_t is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:507\n+#: init.c:511\n msgid \"target int is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:512\n+#: init.c:516\n msgid \"CPP half-integer narrower than CPP character\"\n msgstr \"\"\n \n-#: init.c:516\n+#: init.c:520\n #, c-format\n msgid \"\"\n \"CPP on this host cannot handle wide character constants over %lu bits, but \"\n \"the target requires %lu bits\"\n msgstr \"\"\n \n-#: lex.c:285\n+#: lex.c:834\n msgid \"backslash and newline separated by space\"\n msgstr \"\"\n \n-#: lex.c:290\n+#: lex.c:839\n msgid \"backslash-newline at end of file\"\n msgstr \"\"\n \n-#: lex.c:305\n+#: lex.c:855\n #, c-format\n msgid \"trigraph ??%c converted to %c\"\n msgstr \"\"\n \n-#: lex.c:312\n+#: lex.c:863\n #, c-format\n msgid \"trigraph ??%c ignored, use -trigraphs to enable\"\n msgstr \"\"\n \n-#: lex.c:360\n+#: lex.c:912\n msgid \"\\\"/*\\\" within comment\"\n msgstr \"\"\n \n-#: lex.c:418\n+#: lex.c:970\n #, c-format\n msgid \"%s in preprocessing directive\"\n msgstr \"\"\n \n-#: lex.c:427\n+#: lex.c:979\n msgid \"null character(s) ignored\"\n msgstr \"\"\n \n-#: lex.c:464\n+#: lex.c:1016\n #, c-format\n msgid \"`%.*s' is not in NFKC\"\n msgstr \"\"\n \n-#: lex.c:467\n+#: lex.c:1019\n #, c-format\n msgid \"`%.*s' is not in NFC\"\n msgstr \"\"\n \n-#: lex.c:535\n-#: lex.c:612\n+#: lex.c:1087\n+#: lex.c:1164\n #, c-format\n msgid \"attempt to use poisoned \\\"%s\\\"\"\n msgstr \"\"\n \n-#: lex.c:543\n-#: lex.c:620\n+#: lex.c:1095\n+#: lex.c:1172\n msgid \"__VA_ARGS__ can only appear in the expansion of a C99 variadic macro\"\n msgstr \"\"\n \n-#: lex.c:549\n-#: lex.c:626\n+#: lex.c:1101\n+#: lex.c:1178\n #, c-format\n msgid \"identifier \\\"%s\\\" is a special operator name in C++\"\n msgstr \"\"\n \n-#: lex.c:771\n+#: lex.c:1323\n msgid \"raw string delimiter longer than 16 characters\"\n msgstr \"\"\n \n-#: lex.c:774\n+#: lex.c:1326\n #, c-format\n msgid \"invalid character '%c' in raw string delimiter\"\n msgstr \"\"\n \n-#: lex.c:895\n-#: lex.c:917\n+#: lex.c:1447\n+#: lex.c:1469\n msgid \"unterminated raw string\"\n msgstr \"\"\n \n-#: lex.c:932\n-#: lex.c:1031\n+#: lex.c:1484\n+#: lex.c:1583\n msgid \"null character(s) preserved in literal\"\n msgstr \"\"\n \n-#: lex.c:1034\n+#: lex.c:1586\n #, c-format\n msgid \"missing terminating %c character\"\n msgstr \"\"\n \n-#: lex.c:1527\n+#: lex.c:2079\n msgid \"C++ style comments are not allowed in ISO C90\"\n msgstr \"\"\n \n-#: lex.c:1529\n+#: lex.c:2081\n msgid \"(this will be reported only once per input file)\"\n msgstr \"\"\n \n-#: lex.c:1534\n+#: lex.c:2086\n msgid \"multi-line comment\"\n msgstr \"\"\n \n-#: lex.c:1854\n+#: lex.c:2406\n #, c-format\n msgid \"unspellable token %s\"\n msgstr \"\"\n@@ -853,120 +860,120 @@ msgstr \"\"\n msgid \"unterminated argument list invoking macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:864\n+#: macro.c:866\n #, c-format\n msgid \"function-like macro \\\"%s\\\" must be used with arguments in traditional C\"\n msgstr \"\"\n \n-#: macro.c:1038\n+#: macro.c:1040\n #, c-format\n msgid \"\"\n \"invoking macro %s argument %d: empty macro arguments are undefined in ISO \"\n \"C90 and ISO C++98\"\n msgstr \"\"\n \n-#: macro.c:1501\n+#: macro.c:1507\n #, c-format\n msgid \"duplicate macro parameter \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:1547\n+#: macro.c:1553\n #, c-format\n msgid \"\\\"%s\\\" may not appear in macro parameter list\"\n msgstr \"\"\n \n-#: macro.c:1555\n+#: macro.c:1561\n msgid \"macro parameters must be comma-separated\"\n msgstr \"\"\n \n-#: macro.c:1572\n+#: macro.c:1578\n msgid \"parameter name missing\"\n msgstr \"\"\n \n-#: macro.c:1589\n+#: macro.c:1596\n msgid \"anonymous variadic macros were introduced in C99\"\n msgstr \"\"\n \n-#: macro.c:1594\n+#: macro.c:1601\n msgid \"ISO C does not permit named variadic macros\"\n msgstr \"\"\n \n-#: macro.c:1603\n+#: macro.c:1610\n msgid \"missing ')' in macro parameter list\"\n msgstr \"\"\n \n-#: macro.c:1652\n+#: macro.c:1659\n msgid \"'##' cannot appear at either end of a macro expansion\"\n msgstr \"\"\n \n-#: macro.c:1687\n+#: macro.c:1694\n msgid \"ISO C99 requires whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:1711\n+#: macro.c:1718\n msgid \"missing whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:1745\n+#: macro.c:1752\n msgid \"'#' is not followed by a macro parameter\"\n msgstr \"\"\n \n-#: macro.c:1900\n+#: macro.c:1910\n #, c-format\n msgid \"\\\"%s\\\" redefined\"\n msgstr \"\"\n \n-#: macro.c:1905\n+#: macro.c:1916\n msgid \"this is the location of the previous definition\"\n msgstr \"\"\n \n-#: macro.c:1966\n+#: macro.c:1977\n #, c-format\n msgid \"macro argument \\\"%s\\\" would be stringified in traditional C\"\n msgstr \"\"\n \n-#: macro.c:1989\n+#: macro.c:2004\n #, c-format\n msgid \"invalid hash type %d in cpp_macro_definition\"\n msgstr \"\"\n \n-#: pch.c:86\n-#: pch.c:334\n-#: pch.c:346\n-#: pch.c:364\n-#: pch.c:370\n-#: pch.c:379\n-#: pch.c:386\n+#: pch.c:88\n+#: pch.c:336\n+#: pch.c:348\n+#: pch.c:366\n+#: pch.c:372\n+#: pch.c:381\n+#: pch.c:388\n msgid \"while writing precompiled header\"\n msgstr \"\"\n \n-#: pch.c:617\n+#: pch.c:608\n #, c-format\n msgid \"%s: not used because `%.*s' is poisoned\"\n msgstr \"\"\n \n-#: pch.c:639\n+#: pch.c:630\n #, c-format\n msgid \"%s: not used because `%.*s' not defined\"\n msgstr \"\"\n \n-#: pch.c:651\n+#: pch.c:642\n #, c-format\n msgid \"%s: not used because `%.*s' defined as `%s' not `%.*s'\"\n msgstr \"\"\n \n-#: pch.c:692\n+#: pch.c:683\n #, c-format\n msgid \"%s: not used because `%s' is defined\"\n msgstr \"\"\n \n-#: pch.c:712\n+#: pch.c:703\n #, c-format\n msgid \"%s: not used because `__COUNTER__' is invalid\"\n msgstr \"\"\n \n-#: pch.c:721\n-#: pch.c:894\n+#: pch.c:712\n+#: pch.c:891\n msgid \"while reading precompiled header\"\n msgstr \"\"\n "}]}