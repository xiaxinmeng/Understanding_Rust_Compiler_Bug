{"sha": "8f91e6e0eff1494cfefb2129876847aab5748538", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY5MWU2ZTBlZmYxNDk0Y2ZlZmIyMTI5ODc2ODQ3YWFiNTc0ODUzOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-01-27T18:48:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-01-27T18:48:30Z"}, "message": "re PR lto/69254 (ICE in streamer_get_builtin_tree when using -fsanitize=shift on the compile side only)\n\n\tPR lto/69254\n\t* sanitizer.def: Add BEGIN_SANITIZER_BUILTINS and\n\tEND_SANITIZER_BUILTINS markers using DEF_BUILTIN_STUB.\n\t* asan.c (DEF_BUILTIN_STUB): Temporarily define.\n\t* tree-streamer-in.c: Include asan.h.\n\t(streamer_get_builtin_tree): For builtins in sanitizer\n\trange call initialize_sanitizer_builtins and retry.\n\nFrom-SVN: r232891", "tree": {"sha": "368b5c8a00ed9b3e4a5b5d67306390a2880e97da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/368b5c8a00ed9b3e4a5b5d67306390a2880e97da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f91e6e0eff1494cfefb2129876847aab5748538", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f91e6e0eff1494cfefb2129876847aab5748538", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f91e6e0eff1494cfefb2129876847aab5748538", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f91e6e0eff1494cfefb2129876847aab5748538/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ede673766742e2e48e43e3fa1c08c86d2ca8c893", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ede673766742e2e48e43e3fa1c08c86d2ca8c893", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ede673766742e2e48e43e3fa1c08c86d2ca8c893"}], "stats": {"total": 41, "additions": 35, "deletions": 6}, "files": [{"sha": "197306031a78189e8c20cbcb295e59680f2a2412", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f91e6e0eff1494cfefb2129876847aab5748538/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f91e6e0eff1494cfefb2129876847aab5748538/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f91e6e0eff1494cfefb2129876847aab5748538", "patch": "@@ -1,3 +1,13 @@\n+2016-01-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR lto/69254\n+\t* sanitizer.def: Add BEGIN_SANITIZER_BUILTINS and\n+\tEND_SANITIZER_BUILTINS markers using DEF_BUILTIN_STUB.\n+\t* asan.c (DEF_BUILTIN_STUB): Temporarily define.\n+\t* tree-streamer-in.c: Include asan.h.\n+\t(streamer_get_builtin_tree): For builtins in sanitizer\n+\trange call initialize_sanitizer_builtins and retry.\n+\n 2016-01-27  Ian Lance Taylor  <iant@google.com>\n \n \t* common.opt (fkeep-gc-roots-live): New undocumented option."}, {"sha": "1c266492fbe4b5dcf43fc0bc7adfb4024e8f39ae", "filename": "gcc/asan.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f91e6e0eff1494cfefb2129876847aab5748538/gcc%2Fasan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f91e6e0eff1494cfefb2129876847aab5748538/gcc%2Fasan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.c?ref=8f91e6e0eff1494cfefb2129876847aab5748538", "patch": "@@ -2370,6 +2370,8 @@ initialize_sanitizer_builtins (void)\n   /* ECF_COLD missing */ ATTR_CONST_NORETURN_NOTHROW_LEAF_LIST\n #undef ATTR_PURE_NOTHROW_LEAF_LIST\n #define ATTR_PURE_NOTHROW_LEAF_LIST ECF_PURE | ATTR_NOTHROW_LEAF_LIST\n+#undef DEF_BUILTIN_STUB\n+#define DEF_BUILTIN_STUB(ENUM, NAME)\n #undef DEF_SANITIZER_BUILTIN\n #define DEF_SANITIZER_BUILTIN(ENUM, NAME, TYPE, ATTRS) \\\n   decl = add_builtin_function (\"__builtin_\" NAME, TYPE, ENUM,\t\t\\\n@@ -2389,6 +2391,7 @@ initialize_sanitizer_builtins (void)\n \t\t\t   ATTR_PURE_NOTHROW_LEAF_LIST)\n \n #undef DEF_SANITIZER_BUILTIN\n+#undef DEF_BUILTIN_STUB\n }\n \n /* Called via htab_traverse.  Count number of emitted"}, {"sha": "303c1e46df4aa6429574cddd057333f73d5fe55b", "filename": "gcc/sanitizer.def", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f91e6e0eff1494cfefb2129876847aab5748538/gcc%2Fsanitizer.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f91e6e0eff1494cfefb2129876847aab5748538/gcc%2Fsanitizer.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsanitizer.def?ref=8f91e6e0eff1494cfefb2129876847aab5748538", "patch": "@@ -20,12 +20,16 @@ along with GCC; see the file COPYING3.  If not see\n \n /* Before including this file, you should define a macro:\n \n+     DEF_BUILTIN_STUB(ENUM, NAME)\n      DEF_SANITIZER_BUILTIN (ENUM, NAME, TYPE, ATTRS)\n \n    See builtins.def for details.\n    The builtins are created by the C-family of FEs in c-family/c-common.c,\n    for other FEs by asan.c.  */\n \n+/* This has to come before all the sanitizer builtins.  */\n+DEF_BUILTIN_STUB(BEGIN_SANITIZER_BUILTINS, (const char *)0)\n+\n /* Address Sanitizer */\n DEF_SANITIZER_BUILTIN(BUILT_IN_ASAN_INIT, \"__asan_init\",\n \t\t      BT_FN_VOID, ATTR_NOTHROW_LEAF_LIST)\n@@ -515,3 +519,6 @@ DEF_SANITIZER_BUILTIN(BUILT_IN_UBSAN_HANDLE_DYNAMIC_TYPE_CACHE_MISS_ABORT,\n DEF_SANITIZER_BUILTIN(BUILT_IN_SANITIZER_COV_TRACE_PC,\n \t\t      \"__sanitizer_cov_trace_pc\",\n \t\t      BT_FN_VOID, ATTR_NOTHROW_LEAF_LIST)\n+\n+/* This has to come after all the sanitizer builtins.  */\n+DEF_BUILTIN_STUB(END_SANITIZER_BUILTINS, (const char *)0)"}, {"sha": "91c72eb293e9b53eb0aa9ec4359c0aa5a86fabc4", "filename": "gcc/tree-streamer-in.c", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f91e6e0eff1494cfefb2129876847aab5748538/gcc%2Ftree-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f91e6e0eff1494cfefb2129876847aab5748538/gcc%2Ftree-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-in.c?ref=8f91e6e0eff1494cfefb2129876847aab5748538", "patch": "@@ -32,6 +32,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"builtins.h\"\n #include \"ipa-chkp.h\"\n #include \"gomp-constants.h\"\n+#include \"asan.h\"\n \n \n /* Read a STRING_CST from the string table in DATA_IN using input\n@@ -1136,13 +1137,21 @@ streamer_get_builtin_tree (struct lto_input_block *ib, struct data_in *data_in)\n \tfatal_error (input_location,\n \t\t     \"machine independent builtin code out of range\");\n       result = builtin_decl_explicit (fcode);\n-      if (!result\n-\t  && fcode > BEGIN_CHKP_BUILTINS\n-\t  && fcode < END_CHKP_BUILTINS)\n+      if (!result)\n \t{\n-\t  fcode = (enum built_in_function) (fcode - BEGIN_CHKP_BUILTINS - 1);\n-\t  result = builtin_decl_explicit (fcode);\n-\t  result = chkp_maybe_clone_builtin_fndecl (result);\n+\t  if (fcode > BEGIN_CHKP_BUILTINS && fcode < END_CHKP_BUILTINS)\n+\t    {\n+\t      fcode = (enum built_in_function)\n+\t\t      (fcode - BEGIN_CHKP_BUILTINS - 1);\n+\t      result = builtin_decl_explicit (fcode);\n+\t      result = chkp_maybe_clone_builtin_fndecl (result);\n+\t    }\n+\t  else if (fcode > BEGIN_SANITIZER_BUILTINS\n+\t\t   && fcode < END_SANITIZER_BUILTINS)\n+\t    {\n+\t      initialize_sanitizer_builtins ();\n+\t      result = builtin_decl_explicit (fcode);\n+\t    }\n \t}\n       gcc_assert (result);\n     }"}]}