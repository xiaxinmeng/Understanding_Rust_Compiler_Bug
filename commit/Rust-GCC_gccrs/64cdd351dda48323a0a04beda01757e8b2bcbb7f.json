{"sha": "64cdd351dda48323a0a04beda01757e8b2bcbb7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRjZGQzNTFkZGE0ODMyM2EwYTA0YmVkYTAxNzU3ZThiMmJjYmI3Zg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-06-01T02:55:30Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-06-01T02:55:30Z"}, "message": "locale_facets.tcc (num_get<char>::_M_extract): Fix signage, exponent, and scientific formatting issues.\n\n\n2000-05-31  Russell Davidson  <russell@ehess.cnrs-mrs.fr>\n\n\t* bits/locale_facets.tcc (num_get<char>::_M_extract): Fix signage,\n\texponent, and scientific formatting issues.\n\t* testsuite/27_io/istream_extractor_arith.cc (test09): Add tests.\n\nFrom-SVN: r34328", "tree": {"sha": "387ae7d7d2202f952157e06d629ba8b9ba11ac91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/387ae7d7d2202f952157e06d629ba8b9ba11ac91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64cdd351dda48323a0a04beda01757e8b2bcbb7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64cdd351dda48323a0a04beda01757e8b2bcbb7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64cdd351dda48323a0a04beda01757e8b2bcbb7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64cdd351dda48323a0a04beda01757e8b2bcbb7f/comments", "author": null, "committer": null, "parents": [{"sha": "b2c62b3c644502631fadb9818bf0e61be670ca0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2c62b3c644502631fadb9818bf0e61be670ca0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2c62b3c644502631fadb9818bf0e61be670ca0b"}], "stats": {"total": 100, "additions": 77, "deletions": 23}, "files": [{"sha": "46061c4edf597add7c94ec13b1ad2dbcef0b14cb", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64cdd351dda48323a0a04beda01757e8b2bcbb7f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64cdd351dda48323a0a04beda01757e8b2bcbb7f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=64cdd351dda48323a0a04beda01757e8b2bcbb7f", "patch": "@@ -1,3 +1,9 @@\n+2000-05-31  Russell Davidson  <russell@ehess.cnrs-mrs.fr> \n+\n+\t* bits/locale_facets.tcc (num_get<char>::_M_extract): Fix signage,\n+\texponent, scientific formatting issues.\n+\t* testsuite/27_io/istream_extractor_arith.cc (test09): Add tests.\n+\t\n 2000-05-31  Branko Cibej  <branko.cibej@hermes.si>\n \n         * bits/limits_generic.h (numeric_limits<wchar_t>): Use WCHAR_MIN\n@@ -13,6 +19,8 @@\n \t\n \t* acinclude.m4 (GLIBCPP_ENABLE_LONG_LONG): Add strtoull checks...\n \n+\t* mkcheck.in (SH_FLAG): Add in -Wl,--rpath -Wl,$LIB_PATH. Tweaks.\n+\t\n 2000-05-31 Steven King <sxking@uswest.net>\n \n         * shadow/time.h: fix typo"}, {"sha": "21774d9d7e723d37a81fa9e392e6f6ba821aaaf1", "filename": "libstdc++-v3/bits/locale_facets.tcc", "status": "modified", "additions": 37, "deletions": 9, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64cdd351dda48323a0a04beda01757e8b2bcbb7f/libstdc%2B%2B-v3%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64cdd351dda48323a0a04beda01757e8b2bcbb7f/libstdc%2B%2B-v3%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Flocale_facets.tcc?ref=64cdd351dda48323a0a04beda01757e8b2bcbb7f", "patch": "@@ -313,6 +313,9 @@ namespace std\n       int __sep_pos = 0;\n       int __pos = 0;\n       bool __testdec = false;\n+      bool __testEE = false;\n+      bool __testsign = false;\n+      bool __testEEsign = false;\n       const char* __lits = __fmt->_S_literals;\n \n       while (__valid && __beg != __end)\n@@ -322,17 +325,42 @@ namespace std\n \t  const char* __p = strchr(__fmt->_S_literals, __c);\n \t  \n \t  // NB: strchr returns true for __c == 0x0\n-\t  if (__p && __c)\n-\t    {\n-\t      if ((__p >= &__lits[__cache_type::_S_digits + __base]\n-\t\t   && __p < &__lits[__cache_type::_S_digits_end]) ||\n-\t\t  (__p >= &__lits[__cache_type::_S_udigits+__base]\n-\t\t   && __p < &__lits[__cache_type::_S_udigits_end]))\n+          if (__p && __c)\n+            {\n+\t      // Check for sign and accept if appropriate.\n+\t      if ((__p == &__lits[__cache_type::_S_minus]) \n+\t\t  || (__p == &__lits[__cache_type::_S_plus]))\n+\t\t{\n+\t\t  if (__testEE)\n+\t\t    {\n+\t\t      if (__testEEsign) break;\n+\t\t      __testEEsign = true;\n+\t\t    }\n+\t\t  else\n+\t\t    {\n+\t\t      if (__testsign) break;\n+\t\t      __testsign = true;\n+\t\t    }\n+\t\t}\n+\t      // Check for exponential part and accept if appropriate.\n+\t      else if ((__p == &__lits[__cache_type::_S_ee])\n+\t\t       || (__p == &__lits[__cache_type::_S_Ee]))\n \t\t{\n-\t\t  if (!(__fp && (__p == &__lits[__cache_type::_S_ee] \n-\t\t\t\t  || __p == &__lits[__cache_type::_S_Ee]))) \n-\t\t    break;\n+\t\t  if (!__fp || __testEE || !__testsign) break;\n+\t\t  __testEE = true;\n \t\t}\n+\t      // Check for appropriate digits. If found, too late for a sign\n+\t      else if ((__p >= &__lits[__cache_type::_S_digits]\n+\t\t\t&& __p < &__lits[__cache_type::_S_digits+__base]) \n+\t\t       || (__p >= &__lits[__cache_type::_S_udigits]\n+\t\t\t   && __p < &__lits[__cache_type::_S_udigits+__base]))\n+                {\n+\t\t  __testsign = true;\n+\t\t  if (__testEE) __testEEsign = true;\n+                }\n+\t      // Nothing else will do\n+\t      else break;\n+\t      \n \t      __xtrc[__pos] = __c;\n \t      ++__pos;\n \t      ++__sep_pos;"}, {"sha": "cb1e62a01d1a96d5e61b804dd82e7a973a2493df", "filename": "libstdc++-v3/mkcheck.in", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64cdd351dda48323a0a04beda01757e8b2bcbb7f/libstdc%2B%2B-v3%2Fmkcheck.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64cdd351dda48323a0a04beda01757e8b2bcbb7f/libstdc%2B%2B-v3%2Fmkcheck.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fmkcheck.in?ref=64cdd351dda48323a0a04beda01757e8b2bcbb7f", "patch": "@@ -1,7 +1,5 @@\n #!/usr/bin/env bash\n \n-# 2000-05-17 bkoz \n-\n # Script to do automated testing and data collection\n # for various test files, so that we don't have to do this by hand on\n # every test file.  It attempts to collect some diagnostic info about\n@@ -61,14 +59,10 @@ fi\n \n #LIB_PATH == where to find the build library binaries.\n if [ $WHICH != \"1\" ]; then\n-  LIB_PATH=\"-L$BUILD_DIR/src/.libs\"\n-# BSD seems to want this\n-#  LIB_PATH=\"-L$BUILD_DIR/src/.libs -R$BUILD_DIR/src/.libs\"\n+  LIB_PATH=\"$BUILD_DIR/src/.libs\"\n   CXX=\"../../gcc/g++ -B../../gcc/\"\n elif [ $WHICH -eq 1 ]; then\n-  LIB_PATH=\"-L$PREFIX_DIR/lib\"\n-# BSD seems to want this\n-#  LIB_PATH=\"-L$PREFIX_DIR/lib -R$PREFIX_DIR/lib\"\n+  LIB_PATH=\"$PREFIX_DIR/lib\"\n   CXX=\"$PREFIX_DIR/bin/g++\"\n fi\n \n@@ -77,10 +71,10 @@ fi\n #CXX_FLAG=\"-g -O2 -DDEBUG_ASSERT \"\n CXX_FLAG=\"-g -DDEBUG_ASSERT \"\n \n-# a specific flag to force the use of shared libraries, if any\n+# a specific flag(s) to force the use of shared libraries, if any\n SH_FLAG=\"\"\n \n-# a specific flag to force the use of static libraries, if any\n+# a specific flag(s) to force the use of static libraries, if any\n ST_FLAG=\"-static\"\n \n # Set up the testing directory, which should be in a directory called\n@@ -183,8 +177,8 @@ test_file()\n     # eventually have to calculate time_t anyhow.  Or 3) just grab two\n     # time_t's (no more overhead than grabbing two date(1)'s).\n     COMP_TIME_START=$($TEST_DIR/printnow)\n-    $CXX $CXX_FLAG $S_FLAG $INC_PATH $LIB_PATH $FILENAME \\\n-\t -o $EXENAME 2>> $LOG_FILE\n+    $CXX $CXX_FLAG $S_FLAG $INC_PATH -L$LIB_PATH -Wl,--rpath -Wl,$LIB_PATH \\\n+         $FILENAME -o $EXENAME 2>> $LOG_FILE\n     COMP_TIME_END=$($TEST_DIR/printnow)\n \n     if [ $COMP_TIME_START -lt $COMP_TIME_END ]; then\n@@ -293,8 +287,8 @@ test_file()\n \t#fi\n     else\n         # the file did not compile. Write out compilation info to the log file.\n-\techo \"$CXX $CXX_FLAG $ST_FLAG $INC_PATH $LIB_PATH $CNAME -o $EXENAME\" \\\n-        2>> $LOG_FILE\n+ echo \"$CXX $CXX_FLAG $S_FLAG $INC_PATH -L$LIB_PATH -Wl,--rpath -Wl,$LIB_PATH \\\n+         $FILENAME -o $EXENAME\" 2>> $LOG_FILE\n \n \tRESULT=\"-\"\n \tTEXT=\"0\""}, {"sha": "df06170bee926ab1be8b0d90fe6c3ca1f1f29c63", "filename": "libstdc++-v3/testsuite/27_io/istream_extractor_arith.cc", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64cdd351dda48323a0a04beda01757e8b2bcbb7f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_extractor_arith.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64cdd351dda48323a0a04beda01757e8b2bcbb7f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_extractor_arith.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_extractor_arith.cc?ref=64cdd351dda48323a0a04beda01757e8b2bcbb7f", "patch": "@@ -355,6 +355,29 @@ void test08()\n #endif\n }\n \n+\n+bool test09()\n+{\n+   bool test = true;\n+\n+   std::string st(\"2.456e3-+0.567e-2\");\n+   std::stringbuf sb(st);\n+   std::istream is(&sb);\n+   double f1 = 0, f2 = 0;\n+   char c;\n+   (is>>std::ws) >> f1;\n+   (is>>std::ws) >> c;\n+   (is>>std::ws) >> f2;\n+   test = f1 == 2456;\n+   test &= f2 == 0.00567;\n+   test &= c == '-';\n+#ifdef DEBUG_ASSERT\n+  assert(test);\n+#endif\n+ \n+  return test;\n+}\n+\n int main()\n {\n   test01();\n@@ -364,6 +387,7 @@ int main()\n   test06();\n   test07();\n   test08();\n+  test09();\n   return 0;\n }\n "}]}