{"sha": "e05de0a910810a34fce108d85f0574a6be53b6e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA1ZGUwYTkxMDgxMGEzNGZjZTEwOGQ4NWYwNTc0YTZiZTUzYjZlNw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2011-07-22T06:29:35Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-07-22T06:29:35Z"}, "message": "target-supports.exp (check_ifunc_available): Rewrite.\n\n\t* lib/target-supports.exp (check_ifunc_available): Rewrite.\n\nFrom-SVN: r176616", "tree": {"sha": "c99adb3c79c11d93db9d1c91378768bced806b7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c99adb3c79c11d93db9d1c91378768bced806b7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e05de0a910810a34fce108d85f0574a6be53b6e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e05de0a910810a34fce108d85f0574a6be53b6e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e05de0a910810a34fce108d85f0574a6be53b6e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e05de0a910810a34fce108d85f0574a6be53b6e7/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7fd72c6fb59fb512f5c040e5016bd1b4d407173b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fd72c6fb59fb512f5c040e5016bd1b4d407173b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fd72c6fb59fb512f5c040e5016bd1b4d407173b"}], "stats": {"total": 49, "additions": 12, "deletions": 37}, "files": [{"sha": "bae0698f5a5bff3909771f27a1e37b6f0ed42725", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e05de0a910810a34fce108d85f0574a6be53b6e7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e05de0a910810a34fce108d85f0574a6be53b6e7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e05de0a910810a34fce108d85f0574a6be53b6e7", "patch": "@@ -1,3 +1,7 @@\n+2011-07-22  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* lib/target-supports.exp (check_ifunc_available): Rewrite.\n+\n 2011-07-21  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/47654"}, {"sha": "97e54b2b0ce9a7bfd8bd7df9dd92804f86fb5f67", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 8, "deletions": 37, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e05de0a910810a34fce108d85f0574a6be53b6e7/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e05de0a910810a34fce108d85f0574a6be53b6e7/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=e05de0a910810a34fce108d85f0574a6be53b6e7", "patch": "@@ -361,45 +361,16 @@ proc check_alias_available { } {\n     return $alias_available_saved\n }\n \n-###############################\n-# proc check_ifunc_available { }\n-###############################\n-\n-# Determine if the target toolchain supports the ifunc attribute.\n-\n-# Returns 1 if the target supports ifunc.  Returns 0 if the target\n-# does not support ifunc.\n+# Returns 1 if the target supports ifunc, 0 otherwise.\n \n proc check_ifunc_available { } {\n-    global ifunc_available_saved\n-    global tool\n-\n-    if [info exists ifunc_available_saved] {\n-        verbose \"check_ifunc_available  returning saved $ifunc_available_saved\" 2\n-    } else {\n-\tset src ifunc[pid].c\n-\tset obj ifunc[pid].o\n-        verbose \"check_ifunc_available  compiling testfile $src\" 2\n-\tset f [open $src \"w\"]\n-\tputs $f \"#endif\"\n-\tputs $f \"#ifdef __cplusplus\\nextern \\\"C\\\"\\n#endif\"\n-\tputs $f \"void g() {}\"\n-\tputs $f \"void f() __attribute__((ifunc(\\\"g\\\")));\"\n-\tclose $f\n-\tset lines [${tool}_target_compile $src $obj object \"\"]\n-\tfile delete $src\n-\tremote_file build delete $obj\n-\n-\tif [string match \"\" $lines] then {\n-\t    set ifunc_available_saved 1\n-\t} else {\n-\t    set ifunc_available_saved 0\n-\t}\n-\n-\tverbose \"check_ifunc_available  returning $ifunc_available_saved\" 2\n-    }\n-\n-    return $ifunc_available_saved\n+    return [check_no_compiler_messages ifunc_available object {\n+\t#ifdef __cplusplus\n+\textern \"C\"\n+\t#endif\n+\tvoid g() {}\n+\tvoid f() __attribute__((ifunc(\"g\")));\n+    }]\n }\n \n # Returns true if --gc-sections is supported on the target."}]}