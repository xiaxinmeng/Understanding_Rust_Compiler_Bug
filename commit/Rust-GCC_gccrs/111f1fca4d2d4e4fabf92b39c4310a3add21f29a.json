{"sha": "111f1fca4d2d4e4fabf92b39c4310a3add21f29a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTExZjFmY2E0ZDJkNGU0ZmFiZjkyYjM5YzQzMTBhM2FkZDIxZjI5YQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-09-06T16:05:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-09-06T16:05:32Z"}, "message": "re PR tree-optimization/32586 (New VN misses FRE opportunities)\n\n2007-09-06  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/32586\n\t* tree-ssa-sccvn.c (simplify_binary_expression): Avoid\n\tfolding if nothing changed.\n\t(simplify_unary_expression): New function.  Do tree combining\n\ton conversion like codes.\n\t(try_to_simplify): Call it.\n\t* builtins.c (fold_builtin_cexp): Fold the built expressions.\n\t* fold-const.c (fold_unary): Test result of get_callee_fndecl().\n\n\t* g++.dg/tree-ssa/pr27090.C: Remove XFAILs.\n\t* gcc.dg/tree-ssa/ssa-fre-1.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-3.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-5.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-4.c: Likewise, remove scan for\n\tnow obsolete simplification.\n\nFrom-SVN: r128189", "tree": {"sha": "d2016ac58e23a030401a505f77d9f7a08ae0c9d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2016ac58e23a030401a505f77d9f7a08ae0c9d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/111f1fca4d2d4e4fabf92b39c4310a3add21f29a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/111f1fca4d2d4e4fabf92b39c4310a3add21f29a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/111f1fca4d2d4e4fabf92b39c4310a3add21f29a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/111f1fca4d2d4e4fabf92b39c4310a3add21f29a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1f5a6b84ab344b601da7284a588de810c3c53451", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f5a6b84ab344b601da7284a588de810c3c53451", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f5a6b84ab344b601da7284a588de810c3c53451"}], "stats": {"total": 118, "additions": 90, "deletions": 28}, "files": [{"sha": "35d46e16e4db4d3e49628a0c86f51d287d5d9a26", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/111f1fca4d2d4e4fabf92b39c4310a3add21f29a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/111f1fca4d2d4e4fabf92b39c4310a3add21f29a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=111f1fca4d2d4e4fabf92b39c4310a3add21f29a", "patch": "@@ -1,3 +1,14 @@\n+2007-09-06  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/32586\n+\t* tree-ssa-sccvn.c (simplify_binary_expression): Avoid\n+\tfolding if nothing changed.\n+\t(simplify_unary_expression): New function.  Do tree combining\n+\ton conversion like codes.\n+\t(try_to_simplify): Call it.\n+\t* builtins.c (fold_builtin_cexp): Fold the built expressions.\n+\t* fold-const.c (fold_unary): Test result of get_callee_fndecl().\n+\n 2007-09-06  Jan Hubicka  <jh@suse.cz>\n \n \tPR target/33318"}, {"sha": "a0b1e2f441a594484abff9146949ed6daf58ea33", "filename": "gcc/builtins.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/111f1fca4d2d4e4fabf92b39c4310a3add21f29a/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/111f1fca4d2d4e4fabf92b39c4310a3add21f29a/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=111f1fca4d2d4e4fabf92b39c4310a3add21f29a", "patch": "@@ -7799,13 +7799,13 @@ fold_builtin_cexp (tree arg0, tree type)\n       icall = builtin_save_expr (icall);\n       rcall = build_call_expr (rfn, 1, realp);\n       rcall = builtin_save_expr (rcall);\n-      return build2 (COMPLEX_EXPR, type,\n-\t\t     build2 (MULT_EXPR, rtype,\n-\t\t\t     rcall,\n-\t\t\t     build1 (REALPART_EXPR, rtype, icall)),\n-\t\t     build2 (MULT_EXPR, rtype,\n-\t\t\t     rcall,\n-\t\t\t     build1 (IMAGPART_EXPR, rtype, icall)));\n+      return fold_build2 (COMPLEX_EXPR, type,\n+\t\t\t  fold_build2 (MULT_EXPR, rtype,\n+\t\t\t\t       rcall,\n+\t\t\t \t       fold_build1 (REALPART_EXPR, rtype, icall)),\n+\t\t\t  fold_build2 (MULT_EXPR, rtype,\n+\t\t\t\t       rcall,\n+\t\t\t\t       fold_build1 (IMAGPART_EXPR, rtype, icall)));\n     }\n \n   return NULL_TREE;"}, {"sha": "a6fb08b0c64908f05aaf081c90d80087622a0351", "filename": "gcc/fold-const.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/111f1fca4d2d4e4fabf92b39c4310a3add21f29a/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/111f1fca4d2d4e4fabf92b39c4310a3add21f29a/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=111f1fca4d2d4e4fabf92b39c4310a3add21f29a", "patch": "@@ -8464,7 +8464,7 @@ fold_unary (enum tree_code code, tree type, tree op0)\n       if (TREE_CODE (arg0) == CALL_EXPR)\n \t{\n \t  tree fn = get_callee_fndecl (arg0);\n-\t  if (DECL_BUILT_IN_CLASS (fn) == BUILT_IN_NORMAL)\n+\t  if (fn && DECL_BUILT_IN_CLASS (fn) == BUILT_IN_NORMAL)\n \t    switch (DECL_FUNCTION_CODE (fn))\n \t      {\n \t      CASE_FLT_FN (BUILT_IN_CEXPI):\n@@ -8506,7 +8506,7 @@ fold_unary (enum tree_code code, tree type, tree op0)\n       if (TREE_CODE (arg0) == CALL_EXPR)\n \t{\n \t  tree fn = get_callee_fndecl (arg0);\n-\t  if (DECL_BUILT_IN_CLASS (fn) == BUILT_IN_NORMAL)\n+\t  if (fn && DECL_BUILT_IN_CLASS (fn) == BUILT_IN_NORMAL)\n \t    switch (DECL_FUNCTION_CODE (fn))\n \t      {\n \t      CASE_FLT_FN (BUILT_IN_CEXPI):"}, {"sha": "3a463461b16daefa0e3efbb2b8bea8b4047188e7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/111f1fca4d2d4e4fabf92b39c4310a3add21f29a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/111f1fca4d2d4e4fabf92b39c4310a3add21f29a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=111f1fca4d2d4e4fabf92b39c4310a3add21f29a", "patch": "@@ -1,3 +1,13 @@\n+2007-09-06  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/32586\n+\t* g++.dg/tree-ssa/pr27090.C: Remove XFAILs.\n+\t* gcc.dg/tree-ssa/ssa-fre-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-5.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-4.c: Likewise, remove scan for\n+\tnow obsolete simplification.\n+\n 2007-09-06  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/i386/sse3-addsubpd.c: Add -mfpmath=sse to dg-options."}, {"sha": "a56357a1b52a761e651cb6d68b3f7f2ce6fb0293", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr27090.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/111f1fca4d2d4e4fabf92b39c4310a3add21f29a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr27090.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/111f1fca4d2d4e4fabf92b39c4310a3add21f29a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr27090.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr27090.C?ref=111f1fca4d2d4e4fabf92b39c4310a3add21f29a", "patch": "@@ -17,5 +17,5 @@ int foo(Foo& f)\n         return f.get();\n }\n \n-/* { dg-final { scan-tree-dump \"return f->x;\" \"optimized\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump \"return f->x;\" \"optimized\" } } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "0cb63242c0e9a6f5079d0153e737b34a944596c3", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/111f1fca4d2d4e4fabf92b39c4310a3add21f29a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/111f1fca4d2d4e4fabf92b39c4310a3add21f29a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-1.c?ref=111f1fca4d2d4e4fabf92b39c4310a3add21f29a", "patch": "@@ -11,6 +11,6 @@ int f(int *a)\n   return *c + t;\n }\n \n-/* { dg-final { scan-tree-dump \"Replaced \\\\\\(int \\\\\\*\\\\\\) b_.*with a_\" \"fre\" { xfail *-*-* } } } */\n-/* { dg-final { scan-tree-dump \"Replaced \\\\\\*c_.*with t_\" \"fre\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump \"Replaced \\\\\\(int \\\\\\*\\\\\\) b_.*with a_\" \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"Replaced \\\\\\*c_.*with t_\" \"fre\" } } */\n /* { dg-final { cleanup-tree-dump \"fre\" } } */"}, {"sha": "ebc91e775183a3726a2b4d371679c3d2c894b8ad", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/111f1fca4d2d4e4fabf92b39c4310a3add21f29a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/111f1fca4d2d4e4fabf92b39c4310a3add21f29a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-3.c?ref=111f1fca4d2d4e4fabf92b39c4310a3add21f29a", "patch": "@@ -11,5 +11,5 @@ foo (int a, int b)\n   return aa + bb;\n }\n \n-/* { dg-final { scan-tree-dump \"Replaced \\\\\\(int\\\\\\) aa_.*with a_\" \"fre\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump \"Replaced \\\\\\(int\\\\\\) aa_.*with a_\" \"fre\" } } */\n /* { dg-final { cleanup-tree-dump \"fre\" } } */"}, {"sha": "04208a2290d6309e85e51f3f4ca27a96d3290f06", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-4.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/111f1fca4d2d4e4fabf92b39c4310a3add21f29a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/111f1fca4d2d4e4fabf92b39c4310a3add21f29a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-4.c?ref=111f1fca4d2d4e4fabf92b39c4310a3add21f29a", "patch": "@@ -9,6 +9,5 @@ char bar(char f)\n         return wrap(f);\n }\n \n-/* { dg-final { scan-tree-dump \"Replaced \\\\\\(char\\\\\\) .*with \" \"fre\" { xfail *-*-* } } } */\n-/* { dg-final { scan-tree-dump \"Replaced \\\\\\(int\\\\\\) .*with \" \"fre\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump \"Replaced \\\\\\(char\\\\\\) .*with \" \"fre\" } } */\n /* { dg-final { cleanup-tree-dump \"fre\" } } */"}, {"sha": "7ef20c2214d01fa54e029832936fde372d221138", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/111f1fca4d2d4e4fabf92b39c4310a3add21f29a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/111f1fca4d2d4e4fabf92b39c4310a3add21f29a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-5.c?ref=111f1fca4d2d4e4fabf92b39c4310a3add21f29a", "patch": "@@ -10,5 +10,5 @@ bar (unsigned int t)\n   return a == t;\n }\n \n-/* { dg-final { scan-tree-dump \"Replaced \\\\\\(unsigned int\\\\\\) a_.*with t_\" \"fre\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump \"Replaced \\\\\\(unsigned int\\\\\\) a_.*with t_\" \"fre\" } } */\n /* { dg-final { cleanup-tree-dump \"fre\" } } */"}, {"sha": "bca0e8473aeb347cb0624ff23b23d8d0f2cf1f1d", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 54, "deletions": 12, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/111f1fca4d2d4e4fabf92b39c4310a3add21f29a/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/111f1fca4d2d4e4fabf92b39c4310a3add21f29a/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=111f1fca4d2d4e4fabf92b39c4310a3add21f29a", "patch": "@@ -1411,6 +1411,11 @@ simplify_binary_expression (tree rhs)\n \top1 = SSA_VAL (op1);\n     }\n \n+  /* Avoid folding if nothing changed.  */\n+  if (op0 == TREE_OPERAND (rhs, 0)\n+      && op1 == TREE_OPERAND (rhs, 1))\n+    return NULL_TREE;\n+\n   result = fold_binary (TREE_CODE (rhs), TREE_TYPE (rhs), op0, op1);\n \n   /* Make sure result is not a complex expression consisting\n@@ -1423,6 +1428,50 @@ simplify_binary_expression (tree rhs)\n   return NULL_TREE;\n }\n \n+/* Simplify the unary expression RHS, and return the result if\n+   simplified. */\n+\n+static tree\n+simplify_unary_expression (tree rhs)\n+{\n+  tree result = NULL_TREE;\n+  tree op0 = TREE_OPERAND (rhs, 0);\n+\n+  if (TREE_CODE (op0) != SSA_NAME)\n+    return NULL_TREE;\n+\n+  if (VN_INFO (op0)->has_constants)\n+    op0 = valueize_expr (VN_INFO (op0)->expr);\n+  else if (TREE_CODE (rhs) == NOP_EXPR\n+\t   || TREE_CODE (rhs) == CONVERT_EXPR\n+\t   || TREE_CODE (rhs) == REALPART_EXPR\n+\t   || TREE_CODE (rhs) == IMAGPART_EXPR)\n+    {\n+      /* We want to do tree-combining on conversion-like expressions.\n+         Make sure we feed only SSA_NAMEs or constants to fold though.  */\n+      tree tem = valueize_expr (VN_INFO (op0)->expr);\n+      if (UNARY_CLASS_P (tem)\n+\t  || BINARY_CLASS_P (tem)\n+\t  || TREE_CODE (tem) == SSA_NAME\n+\t  || is_gimple_min_invariant (tem))\n+\top0 = tem;\n+    }\n+\n+  /* Avoid folding if nothing changed, but remember the expression.  */\n+  if (op0 == TREE_OPERAND (rhs, 0))\n+    return rhs;\n+\n+  result = fold_unary (TREE_CODE (rhs), TREE_TYPE (rhs), op0);\n+  if (result)\n+    {\n+      STRIP_USELESS_TYPE_CONVERSION (result);\n+      if (valid_gimple_expression_p (result))\n+        return result;\n+    }\n+\n+  return rhs;\n+}\n+\n /* Try to simplify RHS using equivalences and constant folding.  */\n \n static tree\n@@ -1457,21 +1506,14 @@ try_to_simplify (tree stmt, tree rhs)\n \t    if (result)\n \t      return result;\n \t  }\n-\t  break;\n+\t  /* Fallthrough for some codes.  */\n+\t  if (!(TREE_CODE (rhs) == REALPART_EXPR\n+\t        || TREE_CODE (rhs) == IMAGPART_EXPR))\n+\t    break;\n \t  /* We could do a little more with unary ops, if they expand\n \t     into binary ops, but it's debatable whether it is worth it. */\n \tcase tcc_unary:\n-\t  {\n-\t    tree result = NULL_TREE;\n-\t    tree op0 = TREE_OPERAND (rhs, 0);\n-\t    if (TREE_CODE (op0) == SSA_NAME && VN_INFO (op0)->has_constants)\n-\t      op0 = VN_INFO (op0)->expr;\n-\t    else if (TREE_CODE (op0) == SSA_NAME && SSA_VAL (op0) != op0)\n-\t      op0 = SSA_VAL (op0);\n-\t    result = fold_unary (TREE_CODE (rhs), TREE_TYPE (rhs), op0);\n-\t    if (result)\n-\t      return result;\n-\t  }\n+\t  return simplify_unary_expression (rhs);\n \t  break;\n \tcase tcc_comparison:\n \tcase tcc_binary:"}]}