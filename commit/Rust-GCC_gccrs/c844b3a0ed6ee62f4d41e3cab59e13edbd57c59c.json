{"sha": "c844b3a0ed6ee62f4d41e3cab59e13edbd57c59c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg0NGIzYTBlZDZlZTYyZjRkNDFlM2NhYjU5ZTEzZWRiZDU3YzU5Yw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-05-25T14:35:00Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-05-25T14:35:00Z"}, "message": "re PR c++/45080 ([C++0x] Rejects lambda to function pointer conversion inside function template)\n\n\tPR c++/45080\n\t* pt.c (instantiate_class_template_1): Call maybe_add_lambda_conv_op.\n\t* semantics.c (lambda_function): Check COMPLETE_OR_OPEN_TYPE_P.\n\nFrom-SVN: r174203", "tree": {"sha": "8a09a1168935631826442b6ebbd84b4fcd37d508", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a09a1168935631826442b6ebbd84b4fcd37d508"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c844b3a0ed6ee62f4d41e3cab59e13edbd57c59c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c844b3a0ed6ee62f4d41e3cab59e13edbd57c59c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c844b3a0ed6ee62f4d41e3cab59e13edbd57c59c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c844b3a0ed6ee62f4d41e3cab59e13edbd57c59c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7f0d79d514abbc8e7c8cc3fe1cfd70b5622958ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f0d79d514abbc8e7c8cc3fe1cfd70b5622958ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f0d79d514abbc8e7c8cc3fe1cfd70b5622958ef"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "5bc1748d32db6c2dae6168afea93e407c24d0d52", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c844b3a0ed6ee62f4d41e3cab59e13edbd57c59c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c844b3a0ed6ee62f4d41e3cab59e13edbd57c59c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c844b3a0ed6ee62f4d41e3cab59e13edbd57c59c", "patch": "@@ -1,5 +1,9 @@\n 2011-05-25  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/45080\n+\t* pt.c (instantiate_class_template_1): Call maybe_add_lambda_conv_op.\n+\t* semantics.c (lambda_function): Check COMPLETE_OR_OPEN_TYPE_P.\n+\n \tPR c++/48292\n \t* pt.c (tsubst_decl) [PARM_DECL]: Handle partial instantiation of\n \tfunction parameter pack."}, {"sha": "bb4515be6b7f891774743e00408a22ff5598d382", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c844b3a0ed6ee62f4d41e3cab59e13edbd57c59c/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c844b3a0ed6ee62f4d41e3cab59e13edbd57c59c/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=c844b3a0ed6ee62f4d41e3cab59e13edbd57c59c", "patch": "@@ -8566,6 +8566,9 @@ instantiate_class_template_1 (tree type)\n \t}\n     }\n \n+  if (CLASSTYPE_LAMBDA_EXPR (type))\n+    maybe_add_lambda_conv_op (type);\n+\n   /* Set the file and line number information to whatever is given for\n      the class itself.  This puts error messages involving generated\n      implicit functions at a predictable point, and the same point"}, {"sha": "55ad117880381127ed6e28a3bbdb299ab3391f8e", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c844b3a0ed6ee62f4d41e3cab59e13edbd57c59c/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c844b3a0ed6ee62f4d41e3cab59e13edbd57c59c/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=c844b3a0ed6ee62f4d41e3cab59e13edbd57c59c", "patch": "@@ -8145,7 +8145,8 @@ lambda_function (tree lambda)\n     type = lambda;\n   gcc_assert (LAMBDA_TYPE_P (type));\n   /* Don't let debug_tree cause instantiation.  */\n-  if (CLASSTYPE_TEMPLATE_INSTANTIATION (type) && !COMPLETE_TYPE_P (type))\n+  if (CLASSTYPE_TEMPLATE_INSTANTIATION (type)\n+      && !COMPLETE_OR_OPEN_TYPE_P (type))\n     return NULL_TREE;\n   lambda = lookup_member (type, ansi_opname (CALL_EXPR),\n \t\t\t  /*protect=*/0, /*want_type=*/false);"}, {"sha": "5d01971c3037abd71b64c7d6dabc7ff2adc9a84d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c844b3a0ed6ee62f4d41e3cab59e13edbd57c59c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c844b3a0ed6ee62f4d41e3cab59e13edbd57c59c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c844b3a0ed6ee62f4d41e3cab59e13edbd57c59c", "patch": "@@ -1,5 +1,7 @@\n 2011-05-25  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/cpp0x/lambda/lambda-conv5.C: New.\n+\n \t* g++.dg/cpp0x/variadic109.C: New.\n \n 2011-05-25  H.J. Lu  <hongjiu.lu@intel.com>"}, {"sha": "53d8e995ef919ce57023057a2e1d8ecbb7e115a4", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-conv5.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c844b3a0ed6ee62f4d41e3cab59e13edbd57c59c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-conv5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c844b3a0ed6ee62f4d41e3cab59e13edbd57c59c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-conv5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-conv5.C?ref=c844b3a0ed6ee62f4d41e3cab59e13edbd57c59c", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/45080\n+// { dg-options -std=c++0x }\n+\n+typedef void(*pfn)();\n+\n+template<typename=int>\n+void f()\n+{\n+  pfn fn = []{};\n+}\n+\n+void test()\n+{\n+  f();\n+}"}]}