{"sha": "c7a980b80b3a46ad24940269f6b85a75cdb94a60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdhOTgwYjgwYjNhNDZhZDI0OTQwMjY5ZjZiODVhNzVjZGI5NGE2MA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2017-06-20T10:40:38Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2017-06-20T10:40:38Z"}, "message": "Prevent fix-it hints from affecting more than one line\n\nAttempts to apply a removal or replacement fix-it hint to a source\nrange that covers multiple lines currently lead to nonsensical\nresults from the printing code in diagnostic-show-locus.c.\n\nWe were already filtering them out in edit-context.c (leading\nto -fdiagnostics-generate-patch not generating any output for\nthe whole TU).\n\nReject attempts to add such fix-it hints within rich_location,\nfixing the diagnostic-show-locus.c issue.\n\ngcc/ChangeLog:\n\t* diagnostic-show-locus.c\n\t(selftest::test_fixit_deletion_affecting_newline): New function.\n\t(selftest::diagnostic_show_locus_c_tests): Call it.\n\nlibcpp/ChangeLog:\n\t* include/line-map.h (class rich_location): Document that attempts\n\tto delete or replace a range *affecting* multiple lines will fail.\n\t* line-map.c (rich_location::maybe_add_fixit): Implement this\n\trestriction.\n\nFrom-SVN: r249403", "tree": {"sha": "fe86d10819506cdb8f17e6172d8ed766eb12c2fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe86d10819506cdb8f17e6172d8ed766eb12c2fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7a980b80b3a46ad24940269f6b85a75cdb94a60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7a980b80b3a46ad24940269f6b85a75cdb94a60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7a980b80b3a46ad24940269f6b85a75cdb94a60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7a980b80b3a46ad24940269f6b85a75cdb94a60/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ad2f2a35d33ea79f95b70f8d96ee1445fabed402", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad2f2a35d33ea79f95b70f8d96ee1445fabed402", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad2f2a35d33ea79f95b70f8d96ee1445fabed402"}], "stats": {"total": 84, "additions": 82, "deletions": 2}, "files": [{"sha": "4293a05242df0636f93d160a5b6007a95782d66c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7a980b80b3a46ad24940269f6b85a75cdb94a60/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7a980b80b3a46ad24940269f6b85a75cdb94a60/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c7a980b80b3a46ad24940269f6b85a75cdb94a60", "patch": "@@ -1,3 +1,9 @@\n+2017-06-20  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* diagnostic-show-locus.c\n+\t(selftest::test_fixit_deletion_affecting_newline): New function.\n+\t(selftest::diagnostic_show_locus_c_tests): Call it.\n+\n 2017-06-20  Andreas Schwab  <schwab@suse.de>\n \n \tPR target/80970"}, {"sha": "8bf4d9e2c85e1945b5e8fe8b66d4cccaf7e04ed3", "filename": "gcc/diagnostic-show-locus.c", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7a980b80b3a46ad24940269f6b85a75cdb94a60/gcc%2Fdiagnostic-show-locus.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7a980b80b3a46ad24940269f6b85a75cdb94a60/gcc%2Fdiagnostic-show-locus.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic-show-locus.c?ref=c7a980b80b3a46ad24940269f6b85a75cdb94a60", "patch": "@@ -2793,6 +2793,53 @@ test_fixit_replace_containing_newline (const line_table_case &case_)\n \t\tpp_formatted_text (dc.printer));\n }\n \n+/* Fix-it hint, attempting to delete a newline.\n+   This will fail, as we currently only support fix-it hints that\n+   affect one line at a time.  */\n+\n+static void\n+test_fixit_deletion_affecting_newline (const line_table_case &case_)\n+{\n+  /* Create a tempfile and write some text to it.\n+    ..........................0000000001111.\n+    ..........................1234567890123.  */\n+  const char *old_content = (\"foo = bar (\\n\"\n+\t\t\t     \"      );\\n\");\n+\n+  temp_source_file tmp (SELFTEST_LOCATION, \".c\", old_content);\n+  line_table_test ltt (case_);\n+  const line_map_ordinary *ord_map = linemap_check_ordinary\n+    (linemap_add (line_table, LC_ENTER, false, tmp.get_filename (), 0));\n+  linemap_line_start (line_table, 1, 100);\n+\n+  /* Attempt to delete the \" (\\n...)\".  */\n+  location_t start\n+    = linemap_position_for_line_and_column (line_table, ord_map, 1, 10);\n+  location_t caret\n+    = linemap_position_for_line_and_column (line_table, ord_map, 1, 11);\n+  location_t finish\n+    = linemap_position_for_line_and_column (line_table, ord_map, 2, 7);\n+  location_t loc = make_location (caret, start, finish);\n+  rich_location richloc (line_table, loc);\n+  richloc. add_fixit_remove ();\n+\n+  /* Fix-it hints that affect more than one line are not yet supported, so\n+     the fix-it should not be displayed.  */\n+  ASSERT_TRUE (richloc.seen_impossible_fixit_p ());\n+\n+  if (finish > LINE_MAP_MAX_LOCATION_WITH_COLS)\n+    return;\n+\n+  test_diagnostic_context dc;\n+  diagnostic_show_locus (&dc, &richloc, DK_ERROR);\n+  ASSERT_STREQ (\"\\n\"\n+\t\t\" foo = bar (\\n\"\n+\t\t\"          ~^\\n\"\n+\t\t\"       );\\n\"\n+\t\t\"       ~    \\n\",\n+\t\tpp_formatted_text (dc.printer));\n+}\n+\n /* Run all of the selftests within this file.  */\n \n void\n@@ -2813,6 +2860,7 @@ diagnostic_show_locus_c_tests ()\n   for_each_line_table_case (test_fixit_insert_containing_newline);\n   for_each_line_table_case (test_fixit_insert_containing_newline_2);\n   for_each_line_table_case (test_fixit_replace_containing_newline);\n+  for_each_line_table_case (test_fixit_deletion_affecting_newline);\n }\n \n } // namespace selftest"}, {"sha": "9665f6e16c91a0db0443ff78ff30677e62c99638", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7a980b80b3a46ad24940269f6b85a75cdb94a60/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7a980b80b3a46ad24940269f6b85a75cdb94a60/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=c7a980b80b3a46ad24940269f6b85a75cdb94a60", "patch": "@@ -1,3 +1,10 @@\n+2017-06-20  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* include/line-map.h (class rich_location): Document that attempts\n+\tto delete or replace a range *affecting* multiple lines will fail.\n+\t* line-map.c (rich_location::maybe_add_fixit): Implement this\n+\trestriction.\n+\n 2017-06-09  David Malcolm  <dmalcolm@redhat.com>\n \n \t* include/line-map.h"}, {"sha": "f5c19e31a9483945374cb3ef5297ce81d72a4763", "filename": "libcpp/include/line-map.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7a980b80b3a46ad24940269f6b85a75cdb94a60/libcpp%2Finclude%2Fline-map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7a980b80b3a46ad24940269f6b85a75cdb94a60/libcpp%2Finclude%2Fline-map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fline-map.h?ref=c7a980b80b3a46ad24940269f6b85a75cdb94a60", "patch": "@@ -1556,6 +1556,8 @@ class fixit_hint;\n    inserting at the start of a line, and finishing with a newline\n    (with no interior newline characters).  Other attempts to add\n    fix-it hints containing newline characters will fail.\n+   Similarly, attempts to delete or replace a range *affecting* multiple\n+   lines will fail.\n \n    The rich_location API handles these failures gracefully, so that\n    diagnostics can attempt to add fix-it hints without each needing"}, {"sha": "7ba003add98701ca91ad8970a4cfff1882f8d789", "filename": "libcpp/line-map.c", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7a980b80b3a46ad24940269f6b85a75cdb94a60/libcpp%2Fline-map.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7a980b80b3a46ad24940269f6b85a75cdb94a60/libcpp%2Fline-map.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fline-map.c?ref=c7a980b80b3a46ad24940269f6b85a75cdb94a60", "patch": "@@ -2327,6 +2327,25 @@ rich_location::maybe_add_fixit (source_location start,\n   if (reject_impossible_fixit (next_loc))\n     return;\n \n+  /* Only allow fix-it hints that affect a single line in one file.\n+     Compare the end-points.  */\n+  expanded_location exploc_start\n+    = linemap_client_expand_location_to_spelling_point (start);\n+  expanded_location exploc_next_loc\n+    = linemap_client_expand_location_to_spelling_point (next_loc);\n+  /* They must be within the same file...  */\n+  if (exploc_start.file != exploc_next_loc.file)\n+    {\n+      stop_supporting_fixits ();\n+      return;\n+    }\n+  /* ...and on the same line.  */\n+  if (exploc_start.line != exploc_next_loc.line)\n+    {\n+      stop_supporting_fixits ();\n+      return;\n+    }\n+\n   const char *newline = strchr (new_content, '\\n');\n   if (newline)\n     {\n@@ -2342,8 +2361,6 @@ rich_location::maybe_add_fixit (source_location start,\n \t}\n \n       /* The insertion must be at the start of a line.  */\n-      expanded_location exploc_start\n-\t= linemap_client_expand_location_to_spelling_point (start);\n       if (exploc_start.column != 1)\n \t{\n \t  stop_supporting_fixits ();"}]}