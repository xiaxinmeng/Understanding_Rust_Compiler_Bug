{"sha": "22ea6b4f7f314c605f25fcd224c0efb9f39eaa6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJlYTZiNGY3ZjMxNGM2MDVmMjVmY2QyMjRjMGVmYjlmMzllYWE2ZA==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2004-03-07T02:41:53Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2004-03-07T02:41:53Z"}, "message": "s390.md (\"load_multiple\", [...]): Allow only if reload_completed.\n\nChangeLog:\n\n\t* config/s390/s390.md (\"load_multiple\", \"*load_multiple_di\",\n\t\"*load_multiple_si\"): Allow only if reload_completed.\n\t(\"store_multiple\", \"*store_multiple_di\", \"*store_multiple_si\"):\n\tLikewise.\n\ntestsuite/ChangeLog:\n\n\t* gcc.dg/20040306-1.c: New test.\n\nFrom-SVN: r79045", "tree": {"sha": "30051b1113923f2602ff61b4b6256c4168cad242", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30051b1113923f2602ff61b4b6256c4168cad242"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22ea6b4f7f314c605f25fcd224c0efb9f39eaa6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22ea6b4f7f314c605f25fcd224c0efb9f39eaa6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22ea6b4f7f314c605f25fcd224c0efb9f39eaa6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22ea6b4f7f314c605f25fcd224c0efb9f39eaa6d/comments", "author": null, "committer": null, "parents": [{"sha": "c0bec71b82aa6503c7478ff4ac409c197c26e9c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0bec71b82aa6503c7478ff4ac409c197c26e9c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0bec71b82aa6503c7478ff4ac409c197c26e9c6"}], "stats": {"total": 48, "additions": 42, "deletions": 6}, "files": [{"sha": "2fe6cbb639576cb6e333942439b443e0171249c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22ea6b4f7f314c605f25fcd224c0efb9f39eaa6d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22ea6b4f7f314c605f25fcd224c0efb9f39eaa6d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=22ea6b4f7f314c605f25fcd224c0efb9f39eaa6d", "patch": "@@ -1,3 +1,10 @@\n+2004-03-06  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.md (\"load_multiple\", \"*load_multiple_di\",\n+\t\"*load_multiple_si\"): Allow only if reload_completed.\n+\t(\"store_multiple\", \"*store_multiple_di\", \"*store_multiple_si\"):\n+\tLikewise.\n+\n 2004-03-06  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/vax/vax-protos.h: Add a prototype for"}, {"sha": "6550517bccf803e330eced364bf3f853d9460b1f", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22ea6b4f7f314c605f25fcd224c0efb9f39eaa6d/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22ea6b4f7f314c605f25fcd224c0efb9f39eaa6d/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=22ea6b4f7f314c605f25fcd224c0efb9f39eaa6d", "patch": "@@ -1696,12 +1696,15 @@\n ;\n ; load_multiple pattern(s).\n ;\n+; ??? Due to reload problems with replacing registers inside match_parallel\n+; we currently support load_multiple/store_multiple only after reload.\n+;\n \n (define_expand \"load_multiple\"\n   [(match_par_dup 3 [(set (match_operand 0 \"\" \"\")\n \t\t\t  (match_operand 1 \"\" \"\"))\n \t\t     (use (match_operand 2 \"\" \"\"))])]\n-  \"\"\n+  \"reload_completed\"\n {\n   enum machine_mode mode;\n   int regno;\n@@ -1763,7 +1766,7 @@\n   [(match_parallel 0 \"load_multiple_operation\"\n \t\t   [(set (match_operand:DI 1 \"register_operand\" \"=r\")\n \t\t\t (match_operand:DI 2 \"s_operand\" \"QS\"))])]\n-  \"word_mode == DImode\"\n+  \"reload_completed && word_mode == DImode\"\n {\n   int words = XVECLEN (operands[0], 0);\n   operands[0] = gen_rtx_REG (DImode, REGNO (operands[1]) + words - 1);\n@@ -1776,7 +1779,7 @@\n   [(match_parallel 0 \"load_multiple_operation\"\n \t\t   [(set (match_operand:SI 1 \"register_operand\" \"=r,r\")\n \t\t\t (match_operand:SI 2 \"s_operand\" \"Q,S\"))])]\n-  \"\"\n+  \"reload_completed\"\n {\n   int words = XVECLEN (operands[0], 0);\n   operands[0] = gen_rtx_REG (SImode, REGNO (operands[1]) + words - 1);\n@@ -1793,7 +1796,7 @@\n   [(match_par_dup 3 [(set (match_operand 0 \"\" \"\")\n \t\t\t  (match_operand 1 \"\" \"\"))\n \t\t     (use (match_operand 2 \"\" \"\"))])]\n-  \"\"\n+  \"reload_completed\"\n {\n   enum machine_mode mode;\n   int regno;\n@@ -1857,7 +1860,7 @@\n   [(match_parallel 0 \"store_multiple_operation\"\n \t\t   [(set (match_operand:DI 1 \"s_operand\" \"=QS\")\n \t\t\t (match_operand:DI 2 \"register_operand\" \"r\"))])]\n-  \"word_mode == DImode\"\n+  \"reload_completed && word_mode == DImode\"\n {\n   int words = XVECLEN (operands[0], 0);\n   operands[0] = gen_rtx_REG (DImode, REGNO (operands[2]) + words - 1);\n@@ -1871,7 +1874,7 @@\n   [(match_parallel 0 \"store_multiple_operation\"\n \t\t   [(set (match_operand:SI 1 \"s_operand\" \"=Q,S\")\n \t\t\t (match_operand:SI 2 \"register_operand\" \"r,r\"))])]\n-  \"\"\n+  \"reload_completed\"\n {\n   int words = XVECLEN (operands[0], 0);\n   operands[0] = gen_rtx_REG (SImode, REGNO (operands[2]) + words - 1);"}, {"sha": "9acab5d290e1c25e3b630c4ba9dc11a20573a0f4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22ea6b4f7f314c605f25fcd224c0efb9f39eaa6d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22ea6b4f7f314c605f25fcd224c0efb9f39eaa6d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=22ea6b4f7f314c605f25fcd224c0efb9f39eaa6d", "patch": "@@ -1,3 +1,7 @@\n+2004-03-06  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* gcc.dg/20040306-1.c: New test.\n+\n 2004-03-06  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* gcc.dg/sibcall-3.c (recurser_void1, recurser_void2): Make"}, {"sha": "903d20ac2563a4f63a8bd0fbc7682520a56c264f", "filename": "gcc/testsuite/gcc.dg/20040306-1.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22ea6b4f7f314c605f25fcd224c0efb9f39eaa6d/gcc%2Ftestsuite%2Fgcc.dg%2F20040306-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22ea6b4f7f314c605f25fcd224c0efb9f39eaa6d/gcc%2Ftestsuite%2Fgcc.dg%2F20040306-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20040306-1.c?ref=22ea6b4f7f314c605f25fcd224c0efb9f39eaa6d", "patch": "@@ -0,0 +1,22 @@\n+/* This used to ICE due to a reload bug on s390*.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+\n+typedef struct test\n+{\n+  unsigned short pad;\n+  unsigned char type[6];\n+} t;\n+\n+extern void set (t *a, t *b, t *c, t *d, t *e, t *f, t *g, t *h, \n+\t\t t *i, t *j, t *k, t *l, t *m, t *n, t *o, t *p);\n+extern void use (t a, t b, t c, t d, t e, t f, t g, t h,\n+\t\t t i, t j, t k, t l, t m, t n, t o, t p);\n+void test (void)\n+{\n+    t a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p;\n+    set (&a, &b, &c, &d, &e, &f, &g, &h, &i, &j, &k, &l, &m, &n, &o, &p);\n+    use (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);\n+}"}]}