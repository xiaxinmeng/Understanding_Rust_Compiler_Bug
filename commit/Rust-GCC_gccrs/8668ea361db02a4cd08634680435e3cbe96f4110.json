{"sha": "8668ea361db02a4cd08634680435e3cbe96f4110", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY2OGVhMzYxZGIwMmE0Y2QwODYzNDY4MDQzNWUzY2JlOTZmNDExMA==", "commit": {"author": {"name": "Geert Bosch", "email": "bosch@adacore.com", "date": "2011-10-13T10:52:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-10-13T10:52:59Z"}, "message": "s-gearop.ads (Forward_Eliminate): Add \"abs\" formal function returning a Real.\n\n2011-10-13  Geert Bosch  <bosch@adacore.com>\n\n\t* s-gearop.ads (Forward_Eliminate): Add \"abs\" formal function\n\treturning a Real.\n\t* s-gearop.adb (Forward_Eliminate): Remove local \"abs\" function\n\tand use formal.\n\t* a-ngrear.adb (Forward_Eliminate): Adjust instantiation for\n\tnew profile.\n\nFrom-SVN: r179910", "tree": {"sha": "8e5e1172e323700d9fd7404e8fb2237e05c628e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e5e1172e323700d9fd7404e8fb2237e05c628e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8668ea361db02a4cd08634680435e3cbe96f4110", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8668ea361db02a4cd08634680435e3cbe96f4110", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8668ea361db02a4cd08634680435e3cbe96f4110", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8668ea361db02a4cd08634680435e3cbe96f4110/comments", "author": null, "committer": null, "parents": [{"sha": "edcf5983b69a21cdc76fc31ffbb82598441c6ba3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edcf5983b69a21cdc76fc31ffbb82598441c6ba3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edcf5983b69a21cdc76fc31ffbb82598441c6ba3"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "cd443afa1406d020577446575f27a79870387a2f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8668ea361db02a4cd08634680435e3cbe96f4110/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8668ea361db02a4cd08634680435e3cbe96f4110/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8668ea361db02a4cd08634680435e3cbe96f4110", "patch": "@@ -1,3 +1,12 @@\n+2011-10-13  Geert Bosch  <bosch@adacore.com>\n+\n+\t* s-gearop.ads (Forward_Eliminate): Add \"abs\" formal function\n+\treturning a Real.\n+\t* s-gearop.adb (Forward_Eliminate): Remove local \"abs\" function\n+\tand use formal.\n+\t* a-ngrear.adb (Forward_Eliminate): Adjust instantiation for\n+\tnew profile.\n+\n 2011-10-13  Geert Bosch  <bosch@adacore.com>\n \n \t* a-ngrear.adb, s-gearop.adb, s-gearop.ads (Sqrt): Make generic and"}, {"sha": "c5ed66a3f7db5511ff0d3bc6a109815fbc4d3316", "filename": "gcc/ada/a-ngrear.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8668ea361db02a4cd08634680435e3cbe96f4110/gcc%2Fada%2Fa-ngrear.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8668ea361db02a4cd08634680435e3cbe96f4110/gcc%2Fada%2Fa-ngrear.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngrear.adb?ref=8668ea361db02a4cd08634680435e3cbe96f4110", "patch": "@@ -33,7 +33,7 @@\n --  reason for this is new Ada 2012 requirements that prohibit algorithms such\n --  as Strassen's algorithm, which may be used by some BLAS implementations. In\n --  addition, some platforms lacked suitable compilers to compile the reference\n---  BLAS/LAPACK implementation. Finally, on many platforms there may be more\n+--  BLAS/LAPACK implementation. Finally, on some platforms there are be more\n --  floating point types than supported by BLAS/LAPACK.\n \n with Ada.Containers.Generic_Anonymous_Array_Sort; use Ada.Containers;\n@@ -59,6 +59,7 @@ package body Ada.Numerics.Generic_Real_Arrays is\n \n    procedure Forward_Eliminate is new Ops.Forward_Eliminate\n     (Scalar        => Real'Base,\n+     Real          => Real'Base,\n      Matrix        => Real_Matrix,\n      Zero          => 0.0,\n      One           => 1.0);"}, {"sha": "3aba5b9f4501869af94875d1814d0606360a0ffb", "filename": "gcc/ada/s-gearop.adb", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8668ea361db02a4cd08634680435e3cbe96f4110/gcc%2Fada%2Fs-gearop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8668ea361db02a4cd08634680435e3cbe96f4110/gcc%2Fada%2Fs-gearop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-gearop.adb?ref=8668ea361db02a4cd08634680435e3cbe96f4110", "patch": "@@ -161,9 +161,6 @@ package body System.Generic_Array_Operations is\n       pragma Assert (M'First (1) = N'First (1) and then\n                      M'Last  (1) = N'Last (1));\n \n-      function \"abs\" (X : Scalar) return Scalar is\n-        (if X < Zero then Zero - X else X);\n-\n       --  The following are variations of the elementary matrix row operations:\n       --  row switching, row multiplication and row addition. Because in this\n       --  algorithm the addition factor is always a negated value, we chose to\n@@ -274,14 +271,14 @@ package body System.Generic_Array_Operations is\n       for J in M'Range (2) loop\n          declare\n             Max_Row : Integer := Row;\n-            Max_Abs : Scalar := Zero;\n+            Max_Abs : Real'Base := 0.0;\n \n          begin\n             --  Find best pivot in column J, starting in row Row\n \n             for K in Row .. M'Last (1) loop\n                declare\n-                  New_Abs : constant Scalar := abs M (K, J);\n+                  New_Abs : constant Real'Base := abs M (K, J);\n                begin\n                   if Max_Abs < New_Abs then\n                      Max_Abs := New_Abs;\n@@ -290,7 +287,7 @@ package body System.Generic_Array_Operations is\n                end;\n             end loop;\n \n-            if Zero < Max_Abs then\n+            if Max_Abs > 0.0 then\n                Switch_Row (M, N, Row, Max_Row);\n                Divide_Row (M, N, Row, M (Row, J));\n "}, {"sha": "9e9973c7d9c74cabfb89d87751134337870098cb", "filename": "gcc/ada/s-gearop.ads", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8668ea361db02a4cd08634680435e3cbe96f4110/gcc%2Fada%2Fs-gearop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8668ea361db02a4cd08634680435e3cbe96f4110/gcc%2Fada%2Fs-gearop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-gearop.ads?ref=8668ea361db02a4cd08634680435e3cbe96f4110", "patch": "@@ -65,12 +65,14 @@ pragma Pure (Generic_Array_Operations);\n \n    generic\n       type Scalar is private;\n+      type Real is digits <>;\n       type Matrix is array (Integer range <>, Integer range <>) of Scalar;\n+      with function \"abs\" (Right : Scalar) return Real'Base is <>;\n       with function \"-\" (Left, Right : Scalar) return Scalar is <>;\n       with function \"*\" (Left, Right : Scalar) return Scalar is <>;\n       with function \"/\" (Left, Right : Scalar) return Scalar is <>;\n-      with function \"<\" (Left, Right : Scalar) return Boolean is <>;\n-      Zero, One : Scalar;\n+      Zero : Scalar;\n+      One  : Scalar;\n    procedure Forward_Eliminate\n      (M   : in out Matrix;\n       N   : in out Matrix;"}]}