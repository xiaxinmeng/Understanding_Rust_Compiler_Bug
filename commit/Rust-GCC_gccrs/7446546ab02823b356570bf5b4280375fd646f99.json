{"sha": "7446546ab02823b356570bf5b4280375fd646f99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ0NjU0NmFiMDI4MjNiMzU2NTcwYmY1YjQyODAzNzVmZDY0NmY5OQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2009-06-04T15:43:03Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2009-06-04T15:43:03Z"}, "message": "[multiple changes]\n\n2009-06-04  Andrew Haley  <aph@redhat.com>\n\n\t* src/powerpc/ppc_closure.S: Insert licence header.\n\t* src/powerpc/linux64_closure.S: Likewise.\n\t* src/m68k/sysv.S: Likewise.\n\n\t* src/sh64/ffi.c: Change void (*)() to void (*)(void).\n\t* src/powerpc/ffi.c: Likewise.\n\t* src/powerpc/ffi_darwin.c: Likewise.\n\t* src/m32r/ffi.c: Likewise.\n\t* src/sh64/ffi.c: Likewise.\n\t* src/x86/ffi64.c: Likewise.\n\t* src/alpha/ffi.c: Likewise.\n\t* src/alpha/osf.S: Likewise.\n\t* src/frv/ffi.c: Likewise.\n\t* src/s390/ffi.c: Likewise.\n\t* src/pa/ffi.c: Likewise.\n\t* src/pa/hpux32.S: Likewise.\n\t* src/ia64/unix.S: Likewise.\n\t* src/ia64/ffi.c: Likewise.\n\t* src/sparc/ffi.c: Likewise.\n\t* src/mips/ffi.c: Likewise.\n\t* src/sh/ffi.c: Likewise.\n\n2008-02-15  David Daney  <ddaney@avtrex.com>\n\n        * src/mips/ffi.c (USE__BUILTIN___CLEAR_CACHE):\n        Define (conditionally), and use it to include cachectl.h.\n        (ffi_prep_closure_loc): Fix cache flushing.\n        * src/mips/ffitarget.h (_ABIN32, _ABI64, _ABIO32): Define.\n\nFrom-SVN: r148172", "tree": {"sha": "631e1e01b4aacdc5f35c71b3054635f5885b664a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/631e1e01b4aacdc5f35c71b3054635f5885b664a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7446546ab02823b356570bf5b4280375fd646f99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7446546ab02823b356570bf5b4280375fd646f99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7446546ab02823b356570bf5b4280375fd646f99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7446546ab02823b356570bf5b4280375fd646f99/comments", "author": null, "committer": null, "parents": [{"sha": "5f933ef0d83411a192556329c4d609da9cd9c24c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f933ef0d83411a192556329c4d609da9cd9c24c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f933ef0d83411a192556329c4d609da9cd9c24c"}], "stats": {"total": 292, "additions": 227, "deletions": 65}, "files": [{"sha": "7f7d128030c00d9c99ee62fdaf9e1aea37e2da79", "filename": "libffi/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,3 +1,34 @@\n+2009-06-04  Andrew Haley  <aph@redhat.com>\n+\n+\t* src/powerpc/ppc_closure.S: Insert licence header.\n+\t* src/powerpc/linux64_closure.S: Likewise.\n+\t* src/m68k/sysv.S: Likewise.\n+\n+\t* src/sh64/ffi.c: Change void (*)() to void (*)(void).\n+\t* src/powerpc/ffi.c: Likewise.\n+\t* src/powerpc/ffi_darwin.c: Likewise.\n+\t* src/m32r/ffi.c: Likewise.\n+\t* src/sh64/ffi.c: Likewise.\n+\t* src/x86/ffi64.c: Likewise.\n+\t* src/alpha/ffi.c: Likewise.\n+\t* src/alpha/osf.S: Likewise.\n+\t* src/frv/ffi.c: Likewise.\n+\t* src/s390/ffi.c: Likewise.\n+\t* src/pa/ffi.c: Likewise.\n+\t* src/pa/hpux32.S: Likewise.\n+\t* src/ia64/unix.S: Likewise.\n+\t* src/ia64/ffi.c: Likewise.\n+\t* src/sparc/ffi.c: Likewise.\n+\t* src/mips/ffi.c: Likewise.\n+\t* src/sh/ffi.c: Likewise.\n+\n+2008-02-15  David Daney  <ddaney@avtrex.com>\n+\n+        * src/mips/ffi.c (USE__BUILTIN___CLEAR_CACHE):\n+        Define (conditionally), and use it to include cachectl.h.\n+        (ffi_prep_closure_loc): Fix cache flushing.\n+        * src/mips/ffitarget.h (_ABIN32, _ABI64, _ABIO32): Define.\n+\n 2009-06-04  Andrew Haley  <aph@redhat.com>\n \n \tinclude/ffi.h.in,"}, {"sha": "8d6b2ba279e0350140f6f126746dfb16c5402b2d", "filename": "libffi/src/alpha/ffi.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Falpha%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Falpha%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Falpha%2Fffi.c?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   ffi.c - Copyright (c) 1998, 2001, 2007 Red Hat, Inc.\n+   ffi.c - Copyright (c) 1998, 2001, 2007, 2008  Red Hat, Inc.\n    \n    Alpha Foreign Function Interface \n \n@@ -39,7 +39,7 @@\n # define FFI_TYPE_LONGDOUBLE 4\n #endif\n \n-extern void ffi_call_osf(void *, unsigned long, unsigned, void *, void (*)())\n+extern void ffi_call_osf(void *, unsigned long, unsigned, void *, void (*)(void))\n   FFI_HIDDEN;\n extern void ffi_closure_osf(void) FFI_HIDDEN;\n \n@@ -76,7 +76,7 @@ ffi_prep_cif_machdep(ffi_cif *cif)\n \n \n void\n-ffi_call(ffi_cif *cif, void (*fn)(), void *rvalue, void **avalue)\n+ffi_call(ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)\n {\n   unsigned long *stack, *argp;\n   long i, avn;"}, {"sha": "d0e77828f5cb1df93457c4a6308c635c37bbec3f", "filename": "libffi/src/alpha/osf.S", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Falpha%2Fosf.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Falpha%2Fosf.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Falpha%2Fosf.S?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   osf.S - Copyright (c) 1998, 2001, 2007 Red Hat\n+   osf.S - Copyright (c) 1998, 2001, 2007, 2008 Red Hat\n    \n    Alpha/OSF Foreign Function Interface \n \n@@ -32,7 +32,7 @@\n \t.text\n \n /* ffi_call_osf (void *args, unsigned long bytes, unsigned flags,\n-\t\t void *raddr, void (*fnaddr)());\n+\t\t void *raddr, void (*fnaddr)(void));\n \n    Bit o trickiness here -- ARGS+BYTES is the base of the stack frame\n    for this function.  This has been allocated by ffi_call.  We also"}, {"sha": "f6a64758f73d81fe14d80a3e63e2754ee4e9727d", "filename": "libffi/src/arm/ffi.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Farm%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Farm%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Farm%2Fffi.c?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   ffi.c - Copyright (c) 1998  Red Hat, Inc.\n+   ffi.c - Copyright (c) 1998, 2008  Red Hat, Inc.\n    \n    ARM Foreign Function Interface \n \n@@ -149,9 +149,9 @@ ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n }\n \n extern void ffi_call_SYSV(void (*)(char *, extended_cif *), extended_cif *,\n-\t\t\t  unsigned, unsigned, unsigned *, void (*fn)());\n+\t\t\t  unsigned, unsigned, unsigned *, void (*fn)(void));\n \n-void ffi_call(ffi_cif *cif, void (*fn)(), void *rvalue, void **avalue)\n+void ffi_call(ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)\n {\n   extended_cif ecif;\n "}, {"sha": "34481c8c46c55172cb7ec3705b8ab60b5ce539aa", "filename": "libffi/src/arm/sysv.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Farm%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Farm%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Farm%2Fsysv.S?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   sysv.S - Copyright (c) 1998 Red Hat, Inc.\n+   sysv.S - Copyright (c) 1998, 2008 Red Hat, Inc.\n    \n    ARM Foreign Function Interface \n "}, {"sha": "5698c89c351f8b9bfc013d34e9b49ad3ef703f69", "filename": "libffi/src/frv/ffi.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Ffrv%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Ffrv%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Ffrv%2Fffi.c?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,6 +1,7 @@\n /* -----------------------------------------------------------------------\n-   ffi.c - Copyright (c) 2004  Anthony Green\n+   ffi.c - Copyright (C) 2004  Anthony Green\n    Copyright (C) 2007  Free Software Foundation, Inc.\n+\t   Copyright (C) 2008  Red Hat, Inc.\n    \n    FR-V Foreign Function Interface \n \n@@ -126,10 +127,10 @@ extern void ffi_call_EABI(void *(*)(char *, extended_cif *),\n \t\t\t  extended_cif *, \n \t\t\t  unsigned, unsigned, \n \t\t\t  unsigned *, \n-\t\t\t  void (*fn)());\n+\t\t\t  void (*fn)(void));\n \n void ffi_call(ffi_cif *cif, \n-\t      void (*fn)(), \n+\t      void (*fn)(void), \n \t      void *rvalue, \n \t      void **avalue)\n {"}, {"sha": "3f8fcc5318b6c85cdcabaac3c24ff3617a4ed8ed", "filename": "libffi/src/ia64/ffi.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fia64%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fia64%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fia64%2Fffi.c?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   ffi.c - Copyright (c) 1998, 2007 Red Hat, Inc.\n+   ffi.c - Copyright (c) 1998, 2007, 2008 Red Hat, Inc.\n \t   Copyright (c) 2000 Hewlett Packard Company\n    \n    IA64 Foreign Function Interface \n@@ -270,10 +270,10 @@ ffi_prep_cif_machdep(ffi_cif *cif)\n   return FFI_OK;\n }\n \n-extern int ffi_call_unix (struct ia64_args *, PTR64, void (*)(), UINT64);\n+extern int ffi_call_unix (struct ia64_args *, PTR64, void (*)(void), UINT64);\n \n void\n-ffi_call(ffi_cif *cif, void (*fn)(), void *rvalue, void **avalue)\n+ffi_call(ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)\n {\n   struct ia64_args *stack;\n   long i, avn, gpcount, fpcount;"}, {"sha": "4d2a86d421f3a0ef8153684f6c665f8854271fbb", "filename": "libffi/src/ia64/unix.S", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fia64%2Funix.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fia64%2Funix.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fia64%2Funix.S?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   unix.S - Copyright (c) 1998 Red Hat, Inc.\n+   unix.S - Copyright (c) 1998, 2008 Red Hat, Inc.\n             Copyright (c) 2000 Hewlett Packard Company\n    \n    IA64/unix Foreign Function Interface \n@@ -38,7 +38,7 @@\n .text\n \n /* int ffi_call_unix (struct ia64_args *stack, PTR64 rvalue,\n-\t\t      void (*fn)(), int flags);\n+\t\t      void (*fn)(void), int flags);\n  */\n \n         .align 16\n@@ -554,3 +554,7 @@ ffi_closure_unix:\n \tdata8\t@pcrel(.Lld_hfa_float)\t\t// FFI_IA64_TYPE_HFA_FLOAT\n \tdata8\t@pcrel(.Lld_hfa_double)\t\t// FFI_IA64_TYPE_HFA_DOUBLE\n \tdata8\t@pcrel(.Lld_hfa_ldouble)\t// FFI_IA64_TYPE_HFA_LDOUBLE\n+\n+#if defined __ELF__ && defined __linux__\n+\t.section\t.note.GNU-stack,\"\",@progbits\n+#endif"}, {"sha": "1f8f98331869bcd38e9d9badbeaec54eb417cb46", "filename": "libffi/src/java_raw_api.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fjava_raw_api.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fjava_raw_api.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fjava_raw_api.c?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   java_raw_api.c - Copyright (c) 1999, 2007  Red Hat, Inc.\n+   java_raw_api.c - Copyright (c) 1999, 2007, 2008  Red Hat, Inc.\n \n    Cloned from raw_api.c\n \n@@ -295,7 +295,7 @@ ffi_java_raw_to_rvalue (ffi_cif *cif, void *rvalue)\n  * these following couple of functions will handle the translation forth\n  * and back automatically. */\n \n-void ffi_java_raw_call (ffi_cif *cif, void (*fn)(), void *rvalue,\n+void ffi_java_raw_call (ffi_cif *cif, void (*fn)(void), void *rvalue,\n \t\t\tffi_java_raw *raw)\n {\n   void **avalue = (void**) alloca (cif->nargs * sizeof (void*));"}, {"sha": "300006349bf62187c2ebab82959581836dd0dcd0", "filename": "libffi/src/m32r/ffi.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fm32r%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fm32r%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fm32r%2Fffi.c?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,5 +1,6 @@\n /* -----------------------------------------------------------------------\n    ffi.c - Copyright (c) 2004  Renesas Technology\n+           Copyright (c) 2008  Red Hat, Inc.\n    \n    M32R Foreign Function Interface \n \n@@ -172,9 +173,9 @@ ffi_prep_cif_machdep(ffi_cif *cif)\n }\n \n extern void ffi_call_SYSV(void (*)(char *, extended_cif *), extended_cif *,\n-\t\t\t  unsigned, unsigned, unsigned *, void (*fn)());\n+\t\t\t  unsigned, unsigned, unsigned *, void (*fn)(void));\n \n-void ffi_call(ffi_cif *cif, void (*fn)(), void *rvalue, void **avalue)\n+void ffi_call(ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)\n {\n   extended_cif ecif;\n "}, {"sha": "58822e0aa1788dcb7fdd99b31aefd62b8759b739", "filename": "libffi/src/m68k/sysv.S", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fm68k%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fm68k%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fm68k%2Fsysv.S?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,7 +1,28 @@\n /* -----------------------------------------------------------------------\n-   sysv.S\n+   sysv.S - Copyright (c) 1998 Andreas Schwab\n+\t    Copyright (c) 2008 Red Hat, Inc. \n    \n    m68k Foreign Function Interface \n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND,\n+   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n+   NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n+   HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n+   WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n+   DEALINGS IN THE SOFTWARE.\n    ----------------------------------------------------------------------- */\n \n #define LIBFFI_ASM\t"}, {"sha": "b6887be839b70e10e196c6a16317c6c892a20052", "filename": "libffi/src/mips/ffi.c", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fmips%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fmips%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fmips%2Fffi.c?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,5 +1,6 @@\n /* -----------------------------------------------------------------------\n-   ffi.c - Copyright (c) 1996, 2007 Red Hat, Inc.\n+   ffi.c - Copyright (c) 1996, 2007, 2008  Red Hat, Inc.\n+           Copyright (c) 2008       David Daney\n    \n    MIPS Foreign Function Interface \n \n@@ -29,6 +30,16 @@\n \n #include <stdlib.h>\n \n+#ifdef __GNUC__\n+#  if (__GNUC__ > 4) || ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 3))\n+#    define USE__BUILTIN___CLEAR_CACHE 1\n+#  endif\n+#endif\n+\n+#ifndef USE__BUILTIN___CLEAR_CACHE\n+#include <sys/cachectl.h>\n+#endif\n+\n #ifdef FFI_DEBUG\n # define FFI_MIPS_STOP_HERE() ffi_stop_here()\n #else\n@@ -483,14 +494,14 @@ ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n /* Low level routine for calling O32 functions */\n extern int ffi_call_O32(void (*)(char *, extended_cif *, int, int), \n \t\t\textended_cif *, unsigned, \n-\t\t\tunsigned, unsigned *, void (*)());\n+\t\t\tunsigned, unsigned *, void (*)(void));\n \n /* Low level routine for calling N32 functions */\n extern int ffi_call_N32(void (*)(char *, extended_cif *, int, int), \n \t\t\textended_cif *, unsigned, \n-\t\t\tunsigned, unsigned *, void (*)());\n+\t\t\tunsigned, unsigned *, void (*)(void));\n \n-void ffi_call(ffi_cif *cif, void (*fn)(), void *rvalue, void **avalue)\n+void ffi_call(ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)\n {\n   extended_cif ecif;\n \n@@ -616,8 +627,11 @@ ffi_prep_closure_loc (ffi_closure *closure,\n   closure->fun = fun;\n   closure->user_data = user_data;\n \n+#ifdef USE__BUILTIN___CLEAR_CACHE\n   __builtin___clear_cache(clear_location, clear_location + FFI_TRAMPOLINE_SIZE);\n-\n+#else\n+  cacheflush (clear_location, FFI_TRAMPOLINE_SIZE, ICACHE);\n+#endif\n   return FFI_OK;\n }\n "}, {"sha": "214afe4656006b406291c33580f90fa3ac6f1990", "filename": "libffi/src/mips/ffitarget.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fmips%2Fffitarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fmips%2Fffitarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fmips%2Fffitarget.h?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -27,6 +27,19 @@\n #ifndef LIBFFI_TARGET_H\n #define LIBFFI_TARGET_H\n \n+#ifdef linux\n+#include <asm/sgidefs.h>\n+#  ifndef _ABIN32\n+#    define _ABIN32 _MIPS_SIM_NABI32\n+#  endif\n+#  ifndef _ABI64\n+#    define _ABI64 _MIPS_SIM_ABI64\n+#  endif\n+#  ifndef _ABIO32\n+#    define _ABIO32 _MIPS_SIM_ABI32\n+#  endif\n+#endif\n+\n #if !defined(_MIPS_SIM)\n -- something is very wrong --\n #else"}, {"sha": "c7a14359a0be7d8e821bc18393bd5c8937a2ac0c", "filename": "libffi/src/pa/ffi.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fpa%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fpa%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpa%2Fffi.c?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,5 +1,6 @@\n /* -----------------------------------------------------------------------\n    ffi.c - (c) 2003-2004 Randolph Chung <tausq@debian.org>\n+           (c) 2008 Red Hat, Inc.\n \n    HPPA Foreign Function Interface\n    HP-UX PA ABI support (c) 2006 Free Software Foundation, Inc.\n@@ -368,9 +369,9 @@ ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n \n extern void ffi_call_pa32(void (*)(UINT32 *, extended_cif *, unsigned),\n \t\t\t  extended_cif *, unsigned, unsigned, unsigned *,\n-\t\t\t  void (*fn)());\n+\t\t\t  void (*fn)(void));\n \n-void ffi_call(ffi_cif *cif, void (*fn)(), void *rvalue, void **avalue)\n+void ffi_call(ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)\n {\n   extended_cif ecif;\n "}, {"sha": "40528bad7511cec19bf8c6dad08ce12561eb6720", "filename": "libffi/src/pa/hpux32.S", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fpa%2Fhpux32.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fpa%2Fhpux32.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpa%2Fhpux32.S?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,5 +1,6 @@\n /* -----------------------------------------------------------------------\n    hpux32.S - Copyright (c) 2006 Free Software Foundation, Inc.\n+\t                (c) 2008 Red Hat, Inc.\n    based on src/pa/linux.S\n \n    HP-UX PA Foreign Function Interface\n@@ -40,7 +41,7 @@\n \t\t\t       unsigned bytes,\n \t\t\t       unsigned flags,\n \t\t\t       unsigned *rvalue,\n-\t\t\t       void (*fn)());\n+\t\t\t       void (*fn)(void));\n \t */\n \n \t.export\tffi_call_pa32,ENTRY,PRIV_LEV=3"}, {"sha": "f11ae768074d93657a822b7be2f885efd52bfa47", "filename": "libffi/src/pa/linux.S", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fpa%2Flinux.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fpa%2Flinux.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpa%2Flinux.S?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,5 +1,6 @@\n /* -----------------------------------------------------------------------\n    linux.S - (c) 2003-2004 Randolph Chung <tausq@debian.org>\n+\t     (c) 2008 Red Hat, Inc.\n \n    HPPA Foreign Function Interface\n \n@@ -36,7 +37,7 @@\n \t\t\t       unsigned bytes,\n \t\t\t       unsigned flags,\n \t\t\t       unsigned *rvalue,\n-\t\t\t       void (*fn)());\n+\t\t\t       void (*fn)(void));\n \t */\n \n \t.export ffi_call_pa32,code"}, {"sha": "a0426f4675015e514c00e1968b39df3abd5c881f", "filename": "libffi/src/powerpc/ffi.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fpowerpc%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fpowerpc%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fffi.c?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,6 +1,7 @@\n /* -----------------------------------------------------------------------\n    ffi.c - Copyright (c) 1998 Geoffrey Keating\n    Copyright (C) 2007, 2008 Free Software Foundation, Inc\n+   Copyright (C) 2008 Red Hat, Inc\n \n    PowerPC Foreign Function Interface\n \n@@ -875,13 +876,13 @@ ffi_prep_cif_machdep (ffi_cif *cif)\n }\n \n extern void ffi_call_SYSV(extended_cif *, unsigned, unsigned, unsigned *,\n-\t\t\t  void (*fn)());\n+\t\t\t  void (*fn)(void));\n extern void FFI_HIDDEN ffi_call_LINUX64(extended_cif *, unsigned long,\n \t\t\t\t\tunsigned long, unsigned long *,\n-\t\t\t\t\tvoid (*fn)());\n+\t\t\t\t\tvoid (*fn)(void));\n \n void\n-ffi_call(ffi_cif *cif, void (*fn)(), void *rvalue, void **avalue)\n+ffi_call(ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)\n {\n   extended_cif ecif;\n "}, {"sha": "501035d75d0135c6a555081c8180f6017b3a3f70", "filename": "libffi/src/powerpc/ffi_darwin.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fpowerpc%2Fffi_darwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fpowerpc%2Fffi_darwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fffi_darwin.c?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -425,11 +425,11 @@ ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n }\n \n extern void ffi_call_AIX(extended_cif *, unsigned, unsigned, unsigned *,\n-\t\t\t void (*fn)(), void (*fn2)());\n+\t\t\t void (*fn)(void), void (*fn2)(void));\n extern void ffi_call_DARWIN(extended_cif *, unsigned, unsigned, unsigned *,\n-\t\t\t    void (*fn)(), void (*fn2)());\n+\t\t\t    void (*fn)(void), void (*fn2)(void));\n \n-void ffi_call(ffi_cif *cif, void (*fn)(), void *rvalue, void **avalue)\n+void ffi_call(ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)\n {\n   extended_cif ecif;\n "}, {"sha": "57b56cbb26618bbe9e018fbd36bf9a69aa63d2cc", "filename": "libffi/src/powerpc/linux64.S", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fpowerpc%2Flinux64.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fpowerpc%2Flinux64.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Flinux64.S?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,5 +1,6 @@\n /* -----------------------------------------------------------------------\n    sysv.h - Copyright (c) 2003 Jakub Jelinek <jakub@redhat.com>\n+\t    Copyright (c) 2008 Red Hat, Inc.\n \n    PowerPC64 Assembly glue.\n \n@@ -180,3 +181,7 @@ ffi_call_LINUX64:\n \t.align 3\n .LEFDE1:\n #endif\n+\n+#if defined __ELF__ && defined __linux__\n+\t.section\t.note.GNU-stack,\"\",@progbits\n+#endif"}, {"sha": "f7aa2c98efcd0d0aadb5c023899ab838a93550d0", "filename": "libffi/src/powerpc/linux64_closure.S", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fpowerpc%2Flinux64_closure.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fpowerpc%2Flinux64_closure.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Flinux64_closure.S?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,3 +1,29 @@\n+/* -----------------------------------------------------------------------\n+   sysv.h - Copyright (c) 2003 Jakub Jelinek <jakub@redhat.com>\n+\t    Copyright (c) 2008 Red Hat, Inc.\n+\n+   PowerPC64 Assembly glue.\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND,\n+   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n+   NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n+   HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n+   WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n+   DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n #define LIBFFI_ASM\n #include <fficonfig.h>\n #include <ffi.h>\n@@ -204,3 +230,7 @@ ffi_closure_LINUX64:\n \t.align 3\n .LEFDE1:\n #endif\n+\n+#if defined __ELF__ && defined __linux__\n+\t.section\t.note.GNU-stack,\"\",@progbits\n+#endif"}, {"sha": "56f7d1af2c89947ccf92bbd82f02b53572734c5e", "filename": "libffi/src/powerpc/ppc_closure.S", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fpowerpc%2Fppc_closure.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fpowerpc%2Fppc_closure.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fppc_closure.S?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,3 +1,29 @@\n+/* -----------------------------------------------------------------------\n+   sysv.h - Copyright (c) 2003 Jakub Jelinek <jakub@redhat.com>\n+\t    Copyright (c) 2008 Red Hat, Inc.\n+\n+   PowerPC Assembly glue.\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND,\n+   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n+   NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n+   HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n+   WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n+   DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n #define LIBFFI_ASM\n #include <fficonfig.h>\n #include <ffi.h>"}, {"sha": "ce21372e299d74225c5194a1dd5edb05185c38aa", "filename": "libffi/src/raw_api.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fraw_api.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fraw_api.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fraw_api.c?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,10 +1,8 @@\n /* -----------------------------------------------------------------------\n-   raw_api.c - Copyright (c) 1999  Red Hat, Inc.\n+   raw_api.c - Copyright (c) 1999, 2008  Red Hat, Inc.\n \n    Author: Kresten Krab Thorup <krab@gnu.org>\n \n-   $Id $\n-\n    Permission is hereby granted, free of charge, to any person obtaining\n    a copy of this software and associated documentation files (the\n    ``Software''), to deal in the Software without restriction, including\n@@ -190,7 +188,7 @@ ffi_ptrarray_to_raw (ffi_cif *cif, void **args, ffi_raw *raw)\n  * these following couple of functions will handle the translation forth\n  * and back automatically. */\n \n-void ffi_raw_call (ffi_cif *cif, void (*fn)(), void *rvalue, ffi_raw *raw)\n+void ffi_raw_call (ffi_cif *cif, void (*fn)(void), void *rvalue, ffi_raw *raw)\n {\n   void **avalue = (void**) alloca (cif->nargs * sizeof (void*));\n   ffi_raw_to_ptrarray (cif, raw, avalue);"}, {"sha": "ca2675bc89d8111c8828936e3ef6c9b8ac2d22c9", "filename": "libffi/src/s390/ffi.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fs390%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fs390%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fs390%2Fffi.c?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,5 +1,6 @@\n /* -----------------------------------------------------------------------\n    ffi.c - Copyright (c) 2000, 2007 Software AG\n+           Copyright (c) 2008 Red Hat, Inc\n  \n    S390 Foreign Function Interface\n  \n@@ -88,7 +89,7 @@ extern void ffi_call_SYSV(unsigned,\n \t\t\t  void (*)(unsigned char *, extended_cif *),\n \t\t\t  unsigned,\n \t\t\t  void *,\n-\t\t\t  void (*fn)());\n+\t\t\t  void (*fn)(void));\n \n extern void ffi_closure_SYSV(void);\n  \n@@ -498,7 +499,7 @@ ffi_prep_cif_machdep(ffi_cif *cif)\n  \n void\n ffi_call(ffi_cif *cif,\n-\t void (*fn)(),\n+\t void (*fn)(void),\n \t void *rvalue,\n \t void **avalue)\n {"}, {"sha": "4731a3177b3bfe61d9c90627af78a445ac9a73f6", "filename": "libffi/src/s390/sysv.S", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fs390%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fs390%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fs390%2Fsysv.S?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,5 +1,6 @@\n /* -----------------------------------------------------------------------\n    sysv.S - Copyright (c) 2000 Software AG\n+            Copyright (c) 2008 Red Hat, Inc.\n  \n    S390 Foreign Function Interface\n  "}, {"sha": "69bd025fb8f2b241b897ae9f7c78dc2dbf181ad1", "filename": "libffi/src/sh/ffi.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fsh%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fsh%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsh%2Fffi.c?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,6 +1,6 @@\n /* -----------------------------------------------------------------------\n-   ffi.c - Copyright (c) 2002, 2003, 2004, 2005, 2006, 2007, 2008\n-   Kaz Kojima\n+   ffi.c - Copyright (c) 2002, 2003, 2004, 2005, 2006, 2007, 2008 Kaz Kojima\n+           Copyright (c) 2008 Red Hat, Inc.\n    \n    SuperH Foreign Function Interface \n \n@@ -407,9 +407,9 @@ ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n }\n \n extern void ffi_call_SYSV(void (*)(char *, extended_cif *), extended_cif *,\n-\t\t\t  unsigned, unsigned, unsigned *, void (*fn)());\n+\t\t\t  unsigned, unsigned, unsigned *, void (*fn)(void));\n \n-void ffi_call(ffi_cif *cif, void (*fn)(), void *rvalue, void **avalue)\n+void ffi_call(ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)\n {\n   extended_cif ecif;\n   UINT64 trvalue;"}, {"sha": "8fbc05ca6eb8acb34d0c15249d8db1a95ee46aed", "filename": "libffi/src/sh64/ffi.c", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fsh64%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fsh64%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsh64%2Fffi.c?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,5 +1,6 @@\n /* -----------------------------------------------------------------------\n    ffi.c - Copyright (c) 2003, 2004, 2006, 2007 Kaz Kojima\n+           Copyright (c) 2008 Anthony Green\n    \n    SuperH SHmedia Foreign Function Interface \n \n@@ -237,11 +238,20 @@ ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n   return FFI_OK;\n }\n \n-extern void ffi_call_SYSV(void (*)(char *, extended_cif *), extended_cif *,\n-\t\t\t  unsigned, unsigned, long long, unsigned *,\n-\t\t\t  void (*fn)());\n-\n-void ffi_call(ffi_cif *cif, void (*fn)(), void *rvalue, void **avalue)\n+/*@-declundef@*/\n+/*@-exportheader@*/\n+extern void ffi_call_SYSV(void (*)(char *, extended_cif *), \n+\t\t\t  /*@out@*/ extended_cif *, \n+\t\t\t  unsigned, unsigned, long long,\n+\t\t\t  /*@out@*/ unsigned *, \n+\t\t\t  void (*fn)(void));\n+/*@=declundef@*/\n+/*@=exportheader@*/\n+\n+void ffi_call(/*@dependent@*/ ffi_cif *cif, \n+\t      void (*fn)(void), \n+\t      /*@out@*/ void *rvalue, \n+\t      /*@dependent@*/ void **avalue)\n {\n   extended_cif ecif;\n   UINT64 trvalue;"}, {"sha": "3b73f0c477527b3fab07c87155369f894a4fec57", "filename": "libffi/src/sparc/ffi.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fsparc%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fsparc%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsparc%2Fffi.c?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   ffi.c - Copyright (c) 1996, 2003, 2004, 2007 Red Hat, Inc.\n+   ffi.c - Copyright (c) 1996, 2003, 2004, 2007, 2008 Red Hat, Inc.\n    \n    SPARC Foreign Function Interface \n \n@@ -369,13 +369,13 @@ int ffi_v9_layout_struct(ffi_type *arg, int off, char *ret, char *intg, char *fl\n \n #ifdef SPARC64\n extern int ffi_call_v9(void *, extended_cif *, unsigned, \n-\t\t       unsigned, unsigned *, void (*fn)());\n+\t\t       unsigned, unsigned *, void (*fn)(void));\n #else\n extern int ffi_call_v8(void *, extended_cif *, unsigned, \n-\t\t       unsigned, unsigned *, void (*fn)());\n+\t\t       unsigned, unsigned *, void (*fn)(void));\n #endif\n \n-void ffi_call(ffi_cif *cif, void (*fn)(), void *rvalue, void **avalue)\n+void ffi_call(ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)\n {\n   extended_cif ecif;\n   void *rval = rvalue;"}, {"sha": "2c4eb60a0fb95b942b91ea451451cd5664cb2627", "filename": "libffi/src/sparc/v8.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fsparc%2Fv8.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fsparc%2Fv8.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsparc%2Fv8.S?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   v8.S - Copyright (c) 1996, 1997, 2003, 2004 Red Hat, Inc.\n+   v8.S - Copyright (c) 1996, 1997, 2003, 2004, 2008 Red Hat, Inc.\n    \n    SPARC Foreign Function Interface \n "}, {"sha": "489ff0293f2f90896f4f63c9781917436b8e92db", "filename": "libffi/src/sparc/v9.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fsparc%2Fv9.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fsparc%2Fv9.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsparc%2Fv9.S?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   v9.S - Copyright (c) 2000, 2003, 2004 Red Hat, Inc.\n+   v9.S - Copyright (c) 2000, 2003, 2004, 2008 Red Hat, Inc.\n    \n    SPARC 64-bit Foreign Function Interface \n "}, {"sha": "2f7394ef4bfaf82aa649075199ea75ab573866fe", "filename": "libffi/src/x86/darwin64.S", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fx86%2Fdarwin64.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fx86%2Fdarwin64.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Fdarwin64.S?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,5 +1,6 @@\n /* -----------------------------------------------------------------------\n    darwin64.S - Copyright (c) 2006 Free Software Foundation, Inc.\n+\t        Copyright (c) 2008 Red Hat, Inc.\n    derived from unix64.S\n \n    x86-64 Foreign Function Interface for Darwin.\n@@ -33,7 +34,7 @@\n .text\n \n /* ffi_call_unix64 (void *args, unsigned long bytes, unsigned flags,\n-\t\t    void *raddr, void (*fnaddr)());\n+\t\t    void *raddr, void (*fnaddr)(void));\n \n    Bit o trickiness here -- ARGS+BYTES is the base of the stack frame\n    for this function.  This has been allocated by ffi_call.  We also"}, {"sha": "2896ae4c53f1af727f28178bbeb54b84bbbdc80a", "filename": "libffi/src/x86/ffi64.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fx86%2Fffi64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fx86%2Fffi64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Fffi64.c?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,5 +1,6 @@\n /* -----------------------------------------------------------------------\n    ffi.c - Copyright (c) 2002, 2007  Bo Thorsen <bo@suse.de>\n+           Copyright (c) 2008  Red Hat, Inc.\n    \n    x86-64 Foreign Function Interface \n \n@@ -43,7 +44,7 @@ struct register_args\n };\n \n extern void ffi_call_unix64 (void *args, unsigned long bytes, unsigned flags,\n-\t\t\t     void *raddr, void (*fnaddr)(), unsigned ssecount);\n+\t\t\t     void *raddr, void (*fnaddr)(void), unsigned ssecount);\n \n /* All reference to register classes here is identical to the code in\n    gcc/config/i386/i386.c. Do *not* change one without the other.  */\n@@ -340,7 +341,7 @@ ffi_prep_cif_machdep (ffi_cif *cif)\n }\n \n void\n-ffi_call (ffi_cif *cif, void (*fn)(), void *rvalue, void **avalue)\n+ffi_call (ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)\n {\n   enum x86_64_reg_class classes[MAX_CLASSES];\n   char *stack, *argp;"}, {"sha": "f4b6c1e44155fe573735890daed57aa09ec8138b", "filename": "libffi/src/x86/sysv.S", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fx86%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fx86%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Fsysv.S?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,6 +1,5 @@\n /* -----------------------------------------------------------------------\n-   sysv.S - Copyright (c) 1996, 1998, 2001, 2002, 2003, 2005, 2008\n-   Red Hat, Inc.\n+   sysv.S - Copyright (c) 1996, 1998, 2001-2003, 2005, 2008  Red Hat, Inc.\n    \n    X86 Foreign Function Interface \n "}, {"sha": "fe3f4fd6223cb8c87d4f1df75c0af4af0e49d443", "filename": "libffi/src/x86/unix64.S", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fx86%2Funix64.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7446546ab02823b356570bf5b4280375fd646f99/libffi%2Fsrc%2Fx86%2Funix64.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Funix64.S?ref=7446546ab02823b356570bf5b4280375fd646f99", "patch": "@@ -1,5 +1,6 @@\n /* -----------------------------------------------------------------------\n-   unix64.S - Copyright (c) 2002, 2008  Bo Thorsen <bo@suse.de>\n+   unix64.S - Copyright (c) 2002  Bo Thorsen <bo@suse.de>\n+\t      Copyright (c) 2008  Red Hat, Inc\n \n    x86-64 Foreign Function Interface \n \n@@ -32,7 +33,7 @@\n .text\n \n /* ffi_call_unix64 (void *args, unsigned long bytes, unsigned flags,\n-\t            void *raddr, void (*fnaddr)());\n+\t            void *raddr, void (*fnaddr)(void));\n \n    Bit o trickiness here -- ARGS+BYTES is the base of the stack frame\n    for this function.  This has been allocated by ffi_call.  We also"}]}