{"sha": "58ebda9c2a542dc17b1deaf75ab36143f1485ae2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThlYmRhOWMyYTU0MmRjMTdiMWRlYWY3NWFiMzYxNDNmMTQ4NWFlMg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-01-09T15:47:03Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-01-09T15:47:03Z"}, "message": "re PR target/13380 (An unrecognized insn.)\n\n\tPR target/13380.\n\t* config/m32r/m32r.md: Replace (reg:SI 17) with (reg:CC 17)\n\tor (ne:SI (reg:CC 17) (const_int 0)).\n\tBe specific about modes wherever possible.\n\nFrom-SVN: r75586", "tree": {"sha": "84d8e1c4f682e840b27bab24413055b08d2c4eed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84d8e1c4f682e840b27bab24413055b08d2c4eed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58ebda9c2a542dc17b1deaf75ab36143f1485ae2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58ebda9c2a542dc17b1deaf75ab36143f1485ae2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58ebda9c2a542dc17b1deaf75ab36143f1485ae2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58ebda9c2a542dc17b1deaf75ab36143f1485ae2/comments", "author": null, "committer": null, "parents": [{"sha": "81ad38a60d9d5f1b612b3aae3721ded0e35deb74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81ad38a60d9d5f1b612b3aae3721ded0e35deb74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81ad38a60d9d5f1b612b3aae3721ded0e35deb74"}], "stats": {"total": 199, "additions": 103, "deletions": 96}, "files": [{"sha": "699591b10b018f80777475a8ea06766364657cd8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ebda9c2a542dc17b1deaf75ab36143f1485ae2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ebda9c2a542dc17b1deaf75ab36143f1485ae2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=58ebda9c2a542dc17b1deaf75ab36143f1485ae2", "patch": "@@ -1,3 +1,10 @@\n+2004-01-09  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\tPR target/13380.\n+\t* config/m32r/m32r.md: Replace (reg:SI 17) with (reg:CC 17)\n+\tor (ne:SI (reg:CC 17) (const_int 0)).\n+\tBe specific about modes wherever possible.\n+\n 2004-01-09  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/m32r/m32r.c (m32r_expand_block_move): Call"}, {"sha": "4949b2976aa16755c9fcd1e2b67161a38e24eb59", "filename": "gcc/config/m32r/m32r.md", "status": "modified", "additions": 96, "deletions": 96, "changes": 192, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ebda9c2a542dc17b1deaf75ab36143f1485ae2/gcc%2Fconfig%2Fm32r%2Fm32r.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ebda9c2a542dc17b1deaf75ab36143f1485ae2/gcc%2Fconfig%2Fm32r%2Fm32r.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.md?ref=58ebda9c2a542dc17b1deaf75ab36143f1485ae2", "patch": "@@ -579,7 +579,7 @@\n \n (define_insn \"*load_sda_base\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(unspec [(const_int 0)] 2))]\n+\t(unspec:SI [(const_int 0)] 2))]\n   \"\"\n   \"ld24 %0,#_SDA_BASE_\"\n   [(set_attr \"type\" \"int4\")\n@@ -900,7 +900,7 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(plus:DI (match_operand:DI 1 \"register_operand\" \"%0\")\n \t\t (match_operand:DI 2 \"register_operand\" \"r\")))\n-   (clobber (reg:SI 17))]\n+   (clobber (reg:CC 17))]\n   \"\"\n   \"#\"\n   [(set_attr \"type\" \"multi\")\n@@ -911,23 +911,23 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n \t(plus:DI (match_operand:DI 1 \"register_operand\" \"\")\n \t\t (match_operand:DI 2 \"register_operand\" \"\")))\n-   (clobber (match_operand 3 \"\" \"\"))]\n+   (clobber (reg:CC 17))]\n   \"reload_completed\"\n-  [(parallel [(set (match_dup 3)\n+  [(parallel [(set (reg:CC 17)\n \t\t   (const_int 0))\n \t      (use (match_dup 4))])\n    (parallel [(set (match_dup 4)\n \t\t   (plus:SI (match_dup 4)\n \t\t\t    (plus:SI (match_dup 5)\n-\t\t\t\t     (match_dup 3))))\n-\t      (set (match_dup 3)\n-\t\t   (unspec [(const_int 0)] 3))])\n+\t\t\t\t     (ne:SI (reg:CC 17) (const_int 0)))))\n+\t      (set (reg:CC 17)\n+\t\t   (unspec:CC [(const_int 0)] 3))])\n    (parallel [(set (match_dup 6)\n \t\t   (plus:SI (match_dup 6)\n \t\t\t    (plus:SI (match_dup 7)\n-\t\t\t\t     (match_dup 3))))\n-\t      (set (match_dup 3)\n-\t\t   (unspec [(const_int 0)] 3))])]\n+\t\t\t\t     (ne:SI (reg:CC 17) (const_int 0)))))\n+\t      (set (reg:CC 17)\n+\t\t   (unspec:CC [(const_int 0)] 3))])]\n   \"\n {\n   operands[4] = operand_subword (operands[0], (WORDS_BIG_ENDIAN != 0), 0, DImode);\n@@ -937,7 +937,7 @@\n }\")\n \n (define_insn \"*clear_c\"\n-  [(set (reg:SI 17)\n+  [(set (reg:CC 17)\n \t(const_int 0))\n    (use (match_operand:SI 0 \"register_operand\" \"r\"))]\n   \"\"\n@@ -949,9 +949,9 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(plus:SI (match_operand:SI 1 \"register_operand\" \"%0\")\n \t\t (plus:SI (match_operand:SI 2 \"register_operand\" \"r\")\n-\t\t\t  (reg:SI 17))))\n-   (set (reg:SI 17)\n-\t(unspec [(const_int 0)] 3))]\n+\t\t\t  (ne:SI (reg:CC 17) (const_int 0)))))\n+   (set (reg:CC 17)\n+\t(unspec:CC [(const_int 0)] 3))]\n   \"\"\n   \"addx %0,%2\"\n   [(set_attr \"type\" \"int2\")\n@@ -970,7 +970,7 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(minus:DI (match_operand:DI 1 \"register_operand\" \"0\")\n \t\t  (match_operand:DI 2 \"register_operand\" \"r\")))\n-   (clobber (reg:SI 17))]\n+   (clobber (reg:CC 17))]\n   \"\"\n   \"#\"\n   [(set_attr \"type\" \"multi\")\n@@ -981,23 +981,23 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n \t(minus:DI (match_operand:DI 1 \"register_operand\" \"\")\n \t\t  (match_operand:DI 2 \"register_operand\" \"\")))\n-   (clobber (match_operand 3 \"\" \"\"))]\n+   (clobber (reg:CC 17))]\n   \"reload_completed\"\n-  [(parallel [(set (match_dup 3)\n+  [(parallel [(set (reg:CC 17)\n \t\t   (const_int 0))\n \t      (use (match_dup 4))])\n    (parallel [(set (match_dup 4)\n \t\t   (minus:SI (match_dup 4)\n \t\t\t     (minus:SI (match_dup 5)\n-\t\t\t\t       (match_dup 3))))\n-\t      (set (match_dup 3)\n-\t\t   (unspec [(const_int 0)] 3))])\n+\t\t\t\t       (ne:SI (reg:CC 17) (const_int 0)))))\n+\t      (set (reg:CC 17)\n+\t\t   (unspec:CC [(const_int 0)] 3))])\n    (parallel [(set (match_dup 6)\n \t\t   (minus:SI (match_dup 6)\n \t\t\t     (minus:SI (match_dup 7)\n-\t\t\t\t       (match_dup 3))))\n-\t      (set (match_dup 3)\n-\t\t   (unspec [(const_int 0)] 3))])]\n+\t\t\t\t       (ne:SI (reg:CC 17) (const_int 0)))))\n+\t      (set (reg:CC 17)\n+\t\t   (unspec:CC [(const_int 0)] 3))])]\n   \"\n {\n   operands[4] = operand_subword (operands[0], (WORDS_BIG_ENDIAN != 0), 0, DImode);\n@@ -1010,9 +1010,9 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(minus:SI (match_operand:SI 1 \"register_operand\" \"%0\")\n \t\t  (minus:SI (match_operand:SI 2 \"register_operand\" \"r\")\n-\t\t\t    (reg:SI 17))))\n-   (set (reg:SI 17)\n-\t(unspec [(const_int 0)] 3))]\n+\t\t\t    (ne:SI (reg:CC 17) (const_int 0)))))\n+   (set (reg:CC 17)\n+\t(unspec:CC [(const_int 0)] 3))]\n   \"\"\n   \"subx %0,%2\"\n   [(set_attr \"type\" \"int2\")\n@@ -1241,7 +1241,7 @@\n ;; preferred.\n \n (define_expand \"cmpsi\"\n-  [(set (reg:SI 17)\n+  [(set (reg:CC 17)\n \t(compare:CC (match_operand:SI 0 \"register_operand\" \"\")\n \t\t    (match_operand:SI 1 \"reg_or_cmp_int16_operand\" \"\")))]\n   \"\"\n@@ -1253,8 +1253,8 @@\n }\")\n \n (define_insn \"cmp_eqsi_zero_insn\"\n-  [(set (reg:SI 17)\n-        (eq:SI (match_operand:SI 0 \"register_operand\" \"r,r\")\n+  [(set (reg:CC 17)\n+        (eq:CC (match_operand:SI 0 \"register_operand\" \"r,r\")\n                (match_operand:SI 1 \"reg_or_zero_operand\" \"r,P\")))]\n   \"TARGET_M32RX || TARGET_M32R2\"\n   \"@\n@@ -1268,8 +1268,8 @@\n ;; is quite inefficient.  However, it is rarely used.\n \n (define_insn \"cmp_eqsi_insn\"\n-  [(set (reg:SI 17)\n-        (eq:SI (match_operand:SI 0 \"register_operand\" \"r,r\")\n+  [(set (reg:CC 17)\n+        (eq:CC (match_operand:SI 0 \"register_operand\" \"r,r\")\n                (match_operand:SI 1 \"reg_or_cmp_int16_operand\" \"r,P\")))\n    (clobber (match_scratch:SI 2 \"=&r,&r\"))]\n   \"\"\n@@ -1293,8 +1293,8 @@\n    (set_attr \"length\" \"8,8\")])\n \n (define_insn \"cmp_ltsi_insn\"\n-  [(set (reg:SI 17)\n-        (lt:SI (match_operand:SI 0 \"register_operand\" \"r,r\")\n+  [(set (reg:CC 17)\n+        (lt:CC (match_operand:SI 0 \"register_operand\" \"r,r\")\n                (match_operand:SI 1 \"reg_or_int16_operand\" \"r,J\")))]\n   \"\"\n   \"@\n@@ -1304,8 +1304,8 @@\n    (set_attr \"length\" \"2,4\")])\n \n (define_insn \"cmp_ltusi_insn\"\n-  [(set (reg:SI 17)\n-        (ltu:SI (match_operand:SI 0 \"register_operand\" \"r,r\")\n+  [(set (reg:CC 17)\n+        (ltu:CC (match_operand:SI 0 \"register_operand\" \"r,r\")\n                 (match_operand:SI 1 \"reg_or_int16_operand\" \"r,J\")))]\n   \"\"\n   \"@\n@@ -1696,7 +1696,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(eq:SI (match_operand:SI 1 \"register_operand\" \"%r\")\n \t       (match_operand:SI 2 \"reg_or_zero_operand\" \"rP\")))\n-   (clobber (reg:SI 17))]\n+   (clobber (reg:CC 17))]\n   \"TARGET_M32RX || TARGET_M32R2\"\n   \"#\"\n   [(set_attr \"type\" \"multi\")\n@@ -1706,20 +1706,20 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(eq:SI (match_operand:SI 1 \"register_operand\" \"\")\n \t       (match_operand:SI 2 \"reg_or_zero_operand\" \"\")))\n-   (clobber (reg:SI 17))]\n+   (clobber (reg:CC 17))]\n   \"TARGET_M32RX || TARGET_M32R2\"\n-  [(set (reg:SI 17)\n-\t(eq:SI (match_dup 1)\n+  [(set (reg:CC 17)\n+\t(eq:CC (match_dup 1)\n \t       (match_dup 2)))\n    (set (match_dup 0)\n-\t(reg:SI 17))]\n+\t(ne:SI (reg:CC 17) (const_int 0)))]\n   \"\")\n \n (define_insn \"seq_zero_insn\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(eq:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t       (const_int 0)))\n-   (clobber (reg:SI 17))]\n+   (clobber (reg:CC 17))]\n   \"TARGET_M32R\"\n   \"#\"\n   [(set_attr \"type\" \"multi\")\n@@ -1729,7 +1729,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(eq:SI (match_operand:SI 1 \"register_operand\" \"\")\n \t       (const_int 0)))\n-   (clobber (reg:SI 17))]\n+   (clobber (reg:CC 17))]\n   \"TARGET_M32R\"\n   [(match_dup 3)]\n   \"\n@@ -1748,7 +1748,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r,??r,r\")\n \t(eq:SI (match_operand:SI 1 \"register_operand\" \"r,r,r,r\")\n \t       (match_operand:SI 2 \"reg_or_eq_int16_operand\" \"r,r,r,PK\")))\n-   (clobber (reg:SI 17))\n+   (clobber (reg:CC 17))\n    (clobber (match_scratch:SI 3 \"=1,2,&r,r\"))]\n   \"TARGET_M32R\"\n   \"#\"\n@@ -1759,7 +1759,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(eq:SI (match_operand:SI 1 \"register_operand\" \"\")\n \t       (match_operand:SI 2 \"reg_or_eq_int16_operand\" \"\")))\n-   (clobber (reg:SI 17))\n+   (clobber (reg:CC 17))\n    (clobber (match_scratch:SI 3 \"\"))]\n   \"TARGET_M32R && reload_completed\"\n   [(match_dup 4)]\n@@ -1837,7 +1837,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(ne:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t       (const_int 0)))\n-   (clobber (reg:SI 17))\n+   (clobber (reg:CC 17))\n    (clobber (match_scratch:SI 2 \"=&r\"))]\n   \"\"\n   \"#\"\n@@ -1848,16 +1848,16 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(ne:SI (match_operand:SI 1 \"register_operand\" \"\")\n \t       (const_int 0)))\n-   (clobber (reg:SI 17))\n+   (clobber (reg:CC 17))\n    (clobber (match_scratch:SI 2 \"\"))]\n   \"reload_completed\"\n   [(set (match_dup 2)\n \t(const_int 0))\n-   (set (reg:SI 17)\n-\t(ltu:SI (match_dup 2)\n+   (set (reg:CC 17)\n+\t(ltu:CC (match_dup 2)\n \t\t(match_dup 1)))\n    (set (match_dup 0)\n-\t(reg:SI 17))]\n+\t(ne:SI (reg:CC 17) (const_int 0)))]\n   \"\")\n \t\n (define_expand \"slt\"\n@@ -1887,7 +1887,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n \t(lt:SI (match_operand:SI 1 \"register_operand\" \"r,r\")\n \t       (match_operand:SI 2 \"reg_or_int16_operand\" \"r,J\")))\n-   (clobber (reg:SI 17))]\n+   (clobber (reg:CC 17))]\n   \"\"\n   \"#\"\n   [(set_attr \"type\" \"multi\")\n@@ -1897,13 +1897,13 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(lt:SI (match_operand:SI 1 \"register_operand\" \"\")\n \t       (match_operand:SI 2 \"reg_or_int16_operand\" \"\")))\n-   (clobber (reg:SI 17))]\n+   (clobber (reg:CC 17))]\n   \"\"\n-  [(set (reg:SI 17)\n-\t(lt:SI (match_dup 1)\n+  [(set (reg:CC 17)\n+\t(lt:CC (match_dup 1)\n \t       (match_dup 2)))\n    (set (match_dup 0)\n-\t(reg:SI 17))]\n+\t(ne:SI (reg:CC 17) (const_int 0)))]\n   \"\")\n \n (define_expand \"sle\"\n@@ -1950,7 +1950,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(le:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t       (match_operand:SI 2 \"register_operand\" \"r\")))\n-   (clobber (reg:SI 17))]\n+   (clobber (reg:CC 17))]\n   \"\"\n   \"#\"\n   [(set_attr \"type\" \"multi\")\n@@ -1960,13 +1960,13 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(le:SI (match_operand:SI 1 \"register_operand\" \"\")\n \t       (match_operand:SI 2 \"register_operand\" \"\")))\n-   (clobber (reg:SI 17))]\n+   (clobber (reg:CC 17))]\n   \"!optimize_size\"\n-  [(set (reg:SI 17)\n-\t(lt:SI (match_dup 2)\n+  [(set (reg:CC 17)\n+\t(lt:CC (match_dup 2)\n \t       (match_dup 1)))\n    (set (match_dup 0)\n-\t(reg:SI 17))\n+\t(ne:SI (reg:CC 17) (const_int 0)))\n    (set (match_dup 0)\n \t(xor:SI (match_dup 0)\n \t\t(const_int 1)))]\n@@ -1978,13 +1978,13 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(le:SI (match_operand:SI 1 \"register_operand\" \"\")\n \t       (match_operand:SI 2 \"register_operand\" \"\")))\n-   (clobber (reg:SI 17))]\n+   (clobber (reg:CC 17))]\n   \"optimize_size\"\n-  [(set (reg:SI 17)\n-\t(lt:SI (match_dup 2)\n+  [(set (reg:CC 17)\n+\t(lt:CC (match_dup 2)\n \t       (match_dup 1)))\n    (set (match_dup 0)\n-\t(reg:SI 17))\n+\t(ne:SI (reg:CC 17) (const_int 0)))\n    (set (match_dup 0)\n \t(plus:SI (match_dup 0)\n \t\t (const_int -1)))\n@@ -2042,7 +2042,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n \t(ge:SI (match_operand:SI 1 \"register_operand\" \"r,r\")\n \t       (match_operand:SI 2 \"reg_or_int16_operand\" \"r,J\")))\n-   (clobber (reg:SI 17))]\n+   (clobber (reg:CC 17))]\n   \"\"\n   \"#\"\n   [(set_attr \"type\" \"multi\")\n@@ -2052,13 +2052,13 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(ge:SI (match_operand:SI 1 \"register_operand\" \"\")\n \t       (match_operand:SI 2 \"reg_or_int16_operand\" \"\")))\n-   (clobber (reg:SI 17))]\n+   (clobber (reg:CC 17))]\n   \"!optimize_size\"\n-  [(set (reg:SI 17)\n-\t(lt:SI (match_dup 1)\n+  [(set (reg:CC 17)\n+\t(lt:CC (match_dup 1)\n \t       (match_dup 2)))\n    (set (match_dup 0)\n-\t(reg:SI 17))\n+\t(ne:SI (reg:CC 17) (const_int 0)))\n    (set (match_dup 0)\n \t(xor:SI (match_dup 0)\n \t\t(const_int 1)))]\n@@ -2070,13 +2070,13 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(ge:SI (match_operand:SI 1 \"register_operand\" \"\")\n \t       (match_operand:SI 2 \"reg_or_int16_operand\" \"\")))\n-   (clobber (reg:SI 17))]\n+   (clobber (reg:CC 17))]\n   \"optimize_size\"\n-  [(set (reg:SI 17)\n-\t(lt:SI (match_dup 1)\n+  [(set (reg:CC 17)\n+\t(lt:CC (match_dup 1)\n \t       (match_dup 2)))\n    (set (match_dup 0)\n-\t(reg:SI 17))\n+\t(ne:SI (reg:CC 17) (const_int 0)))\n    (set (match_dup 0)\n \t(plus:SI (match_dup 0)\n \t\t (const_int -1)))\n@@ -2111,7 +2111,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n \t(ltu:SI (match_operand:SI 1 \"register_operand\" \"r,r\")\n \t\t(match_operand:SI 2 \"reg_or_int16_operand\" \"r,J\")))\n-   (clobber (reg:SI 17))]\n+   (clobber (reg:CC 17))]\n   \"\"\n   \"#\"\n   [(set_attr \"type\" \"multi\")\n@@ -2121,13 +2121,13 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(ltu:SI (match_operand:SI 1 \"register_operand\" \"\")\n \t\t(match_operand:SI 2 \"reg_or_int16_operand\" \"\")))\n-   (clobber (reg:SI 17))]\n+   (clobber (reg:CC 17))]\n   \"\"\n-  [(set (reg:SI 17)\n-\t(ltu:SI (match_dup 1)\n+  [(set (reg:CC 17)\n+\t(ltu:CC (match_dup 1)\n \t\t(match_dup 2)))\n    (set (match_dup 0)\n-\t(reg:SI 17))]\n+\t(ne:SI (reg:CC 17) (const_int 0)))]\n   \"\")\n \n (define_expand \"sleu\"\n@@ -2171,7 +2171,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(leu:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t(match_operand:SI 2 \"register_operand\" \"r\")))\n-   (clobber (reg:SI 17))]\n+   (clobber (reg:CC 17))]\n   \"\"\n   \"#\"\n   [(set_attr \"type\" \"multi\")\n@@ -2181,13 +2181,13 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(leu:SI (match_operand:SI 1 \"register_operand\" \"\")\n \t\t(match_operand:SI 2 \"register_operand\" \"\")))\n-   (clobber (reg:SI 17))]\n+   (clobber (reg:CC 17))]\n   \"!optimize_size\"\n-  [(set (reg:SI 17)\n-\t(ltu:SI (match_dup 2)\n+  [(set (reg:CC 17)\n+\t(ltu:CC (match_dup 2)\n \t\t(match_dup 1)))\n    (set (match_dup 0)\n-\t(reg:SI 17))\n+\t(ne:SI (reg:CC 17) (const_int 0)))\n    (set (match_dup 0)\n \t(xor:SI (match_dup 0)\n \t\t(const_int 1)))]\n@@ -2199,13 +2199,13 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(leu:SI (match_operand:SI 1 \"register_operand\" \"\")\n \t\t(match_operand:SI 2 \"register_operand\" \"\")))\n-   (clobber (reg:SI 17))]\n+   (clobber (reg:CC 17))]\n   \"optimize_size\"\n-  [(set (reg:SI 17)\n-\t(ltu:SI (match_dup 2)\n+  [(set (reg:CC 17)\n+\t(ltu:CC (match_dup 2)\n \t\t(match_dup 1)))\n    (set (match_dup 0)\n-\t(reg:SI 17))\n+\t(ne:SI (reg:CC 17) (const_int 0)))\n    (set (match_dup 0)\n \t(plus:SI (match_dup 0)\n \t\t (const_int -1)))\n@@ -2263,7 +2263,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n \t(geu:SI (match_operand:SI 1 \"register_operand\" \"r,r\")\n \t\t(match_operand:SI 2 \"reg_or_int16_operand\" \"r,J\")))\n-   (clobber (reg:SI 17))]\n+   (clobber (reg:CC 17))]\n   \"\"\n   \"#\"\n   [(set_attr \"type\" \"multi\")\n@@ -2273,13 +2273,13 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(geu:SI (match_operand:SI 1 \"register_operand\" \"\")\n \t\t(match_operand:SI 2 \"reg_or_int16_operand\" \"\")))\n-   (clobber (reg:SI 17))]\n+   (clobber (reg:CC 17))]\n   \"!optimize_size\"\n-  [(set (reg:SI 17)\n-\t(ltu:SI (match_dup 1)\n+  [(set (reg:CC 17)\n+\t(ltu:CC (match_dup 1)\n \t\t(match_dup 2)))\n    (set (match_dup 0)\n-\t(reg:SI 17))\n+\t(ne:SI (reg:CC 17) (const_int 0)))\n    (set (match_dup 0)\n \t(xor:SI (match_dup 0)\n \t\t(const_int 1)))]\n@@ -2291,13 +2291,13 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(geu:SI (match_operand:SI 1 \"register_operand\" \"\")\n \t\t(match_operand:SI 2 \"reg_or_int16_operand\" \"\")))\n-   (clobber (reg:SI 17))]\n+   (clobber (reg:CC 17))]\n   \"optimize_size\"\n-  [(set (reg:SI 17)\n-\t(ltu:SI (match_dup 1)\n+  [(set (reg:CC 17)\n+\t(ltu:CC (match_dup 1)\n \t\t(match_dup 2)))\n    (set (match_dup 0)\n-\t(reg:SI 17))\n+\t(ne:SI (reg:CC 17) (const_int 0)))\n    (set (match_dup 0)\n \t(plus:SI (match_dup 0)\n \t\t (const_int -1)))\n@@ -2307,7 +2307,7 @@\n \n (define_insn \"movcc_insn\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(reg:SI 17))]\n+\t(ne:SI (reg:CC 17) (const_int 0)))]\n   \"\"\n   \"mvfc %0, cbr\"\n   [(set_attr \"type\" \"misc\")"}]}