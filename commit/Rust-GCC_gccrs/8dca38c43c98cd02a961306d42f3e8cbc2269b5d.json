{"sha": "8dca38c43c98cd02a961306d42f3e8cbc2269b5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRjYTM4YzQzYzk4Y2QwMmE5NjEzMDZkNDJmM2U4Y2JjMjI2OWI1ZA==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@gmail.com", "date": "2020-02-13T10:32:05Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gmail.com", "date": "2020-02-13T10:32:05Z"}, "message": "[ARC] Update mlo/mhi handling when big-endian CPU.\n\ngcc/\nxxxx-xx-xx  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/arc.md (mulsidi_600): Correctly select mlo/mhi\n\tregisters.\n\t(umulsidi_600): Likewise.\n\ntestsuite/\nxxxx-xx-xx  Claudiu Zissulescu  <claziss@synopsys.com>\n\tPetro Karashchenko  <petro.karashchenko@ring.com>\n\n\t* estsuite/gcc.target/arc/mul64-1.c: New test.", "tree": {"sha": "119c5cbb6407a8c33a24ad1c1ca7472925a1f291", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/119c5cbb6407a8c33a24ad1c1ca7472925a1f291"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8dca38c43c98cd02a961306d42f3e8cbc2269b5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dca38c43c98cd02a961306d42f3e8cbc2269b5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dca38c43c98cd02a961306d42f3e8cbc2269b5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dca38c43c98cd02a961306d42f3e8cbc2269b5d/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae2b8ede40a81a83f50d1e705972bc46fafd4ce5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae2b8ede40a81a83f50d1e705972bc46fafd4ce5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae2b8ede40a81a83f50d1e705972bc46fafd4ce5"}], "stats": {"total": 84, "additions": 66, "deletions": 18}, "files": [{"sha": "6209e7615de9eca6a241d02da1730e46be02c19e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dca38c43c98cd02a961306d42f3e8cbc2269b5d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dca38c43c98cd02a961306d42f3e8cbc2269b5d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8dca38c43c98cd02a961306d42f3e8cbc2269b5d", "patch": "@@ -1,3 +1,9 @@\n+2020-02-13  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/arc.md (mulsidi_600): Correctly select mlo/mhi\n+\tregisters.\n+\t(umulsidi_600): Likewise.\n+\n 2020-02-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/93696"}, {"sha": "4c269f565bac98599b1fcef09dc97543a8486a21", "filename": "gcc/config/arc/arc.md", "status": "modified", "additions": 32, "deletions": 18, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dca38c43c98cd02a961306d42f3e8cbc2269b5d/gcc%2Fconfig%2Farc%2Farc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dca38c43c98cd02a961306d42f3e8cbc2269b5d/gcc%2Fconfig%2Farc%2Farc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.md?ref=8dca38c43c98cd02a961306d42f3e8cbc2269b5d", "patch": "@@ -2275,19 +2275,26 @@ core_3, archs4x, archs4xd, archs4xd_slow\"\n    (set_attr \"cond\" \"canuse,canuse,canuse_limm,canuse\")])\n \n (define_insn_and_split \"mulsidi_600\"\n-  [(set (match_operand:DI 0 \"register_operand\"                               \"=c, c,c,  c\")\n-\t(mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\"  \"%Rcq#q, c,c,  c\"))\n-\t\t (sign_extend:DI (match_operand:SI 2 \"nonmemory_operand\"  \"Rcq#q,cL,L,C32\"))))\n-   (clobber (reg:DI MUL64_OUT_REG))]\n+  [(set (match_operand:DI 0 \"register_operand\"                           \"=r,r,  r\")\n+\t(mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\"  \"%r,r,  r\"))\n+\t\t (sign_extend:DI (match_operand:SI 2 \"nonmemory_operand\" \"rL,L,C32\"))))\n+   (clobber (reg:DI R58_REG))]\n   \"TARGET_MUL64_SET\"\n   \"#\"\n-  \"TARGET_MUL64_SET\"\n+  \"TARGET_MUL64_SET && reload_completed\"\n   [(const_int 0)]\n-  \"emit_insn (gen_mul64 (operands[1], operands[2]));\n-   emit_move_insn (operands[0], gen_rtx_REG (DImode, MUL64_OUT_REG));\n-   DONE;\"\n+ {\n+   int hi = !TARGET_BIG_ENDIAN;\n+   int lo = !hi;\n+   rtx lr = operand_subword (operands[0], lo, 0, DImode);\n+   rtx hr = operand_subword (operands[0], hi, 0, DImode);\n+   emit_insn (gen_mul64 (operands[1], operands[2]));\n+   emit_move_insn (lr, gen_rtx_REG (SImode, R58_REG));\n+   emit_move_insn (hr, gen_rtx_REG (SImode, R59_REG));\n+   DONE;\n+ }\n   [(set_attr \"type\" \"multi\")\n-   (set_attr \"length\" \"8\")])\n+   (set_attr \"length\" \"4,4,8\")])\n \n (define_insn \"mul64\"\n   [(set (reg:DI MUL64_OUT_REG)\n@@ -2303,19 +2310,26 @@ core_3, archs4x, archs4xd, archs4xd_slow\"\n    (set_attr \"cond\" \"canuse,canuse,canuse_limm,canuse\")])\n \n (define_insn_and_split \"umulsidi_600\"\n-  [(set (match_operand:DI 0 \"register_operand\"                            \"=c,c, c\")\n-\t(mult:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\"   \"%c,c, c\"))\n-\t\t (sign_extend:DI (match_operand:SI 2 \"nonmemory_operand\"  \"cL,L,C32\"))))\n-   (clobber (reg:DI MUL64_OUT_REG))]\n+  [(set (match_operand:DI 0 \"register_operand\"                            \"=r,r, r\")\n+\t(mult:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\"   \"%r,r, r\"))\n+\t\t (zero_extend:DI (match_operand:SI 2 \"nonmemory_operand\"  \"rL,L,C32\"))))\n+   (clobber (reg:DI R58_REG))]\n   \"TARGET_MUL64_SET\"\n   \"#\"\n-  \"TARGET_MUL64_SET\"\n+  \"TARGET_MUL64_SET && reload_completed\"\n   [(const_int 0)]\n-  \"emit_insn (gen_mulu64 (operands[1], operands[2]));\n-   emit_move_insn (operands[0], gen_rtx_REG (DImode, MUL64_OUT_REG));\n-   DONE;\"\n+ {\n+   int hi = !TARGET_BIG_ENDIAN;\n+   int lo = !hi;\n+   rtx lr = operand_subword (operands[0], lo, 0, DImode);\n+   rtx hr = operand_subword (operands[0], hi, 0, DImode);\n+   emit_insn (gen_mulu64 (operands[1], operands[2]));\n+   emit_move_insn (lr, gen_rtx_REG (SImode, R58_REG));\n+   emit_move_insn (hr, gen_rtx_REG (SImode, R59_REG));\n+   DONE;\n+ }\n   [(set_attr \"type\" \"umulti\")\n-   (set_attr \"length\" \"8\")])\n+   (set_attr \"length\" \"4,4,8\")])\n \n (define_insn \"mulu64\"\n   [(set (reg:DI MUL64_OUT_REG)"}, {"sha": "b3e2e3cd1158347e5e30e235828994654c3a028e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dca38c43c98cd02a961306d42f3e8cbc2269b5d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dca38c43c98cd02a961306d42f3e8cbc2269b5d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8dca38c43c98cd02a961306d42f3e8cbc2269b5d", "patch": "@@ -1,3 +1,8 @@\n+2020-02-13  Claudiu Zissulescu  <claziss@synopsys.com>\n+\tPetro Karashchenko  <petro.karashchenko@ring.com>\n+\n+\t* gcc.target/arc/mul64-1.c: New test.\n+\n 2020-02-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/93696"}, {"sha": "2543fc33d3f019a972551f7df57abbc6d2ab8d25", "filename": "gcc/testsuite/gcc.target/arc/mul64-1.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dca38c43c98cd02a961306d42f3e8cbc2269b5d/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmul64-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dca38c43c98cd02a961306d42f3e8cbc2269b5d/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmul64-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmul64-1.c?ref=8dca38c43c98cd02a961306d42f3e8cbc2269b5d", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if \"MUL64 is ARC600 extension.\" { ! { clmcpu } } } */\n+/* { dg-options \"-O2 -mmul64 -mbig-endian -mcpu=arc600\" } */\n+\n+/* Check if mlo/mhi registers are correctly layout when we compile for\n+   a big-endian CPU.  */\n+\n+#include <stdint.h>\n+\n+uint32_t foo (uint32_t x)\n+{\n+  return x % 1000;\n+}\n+\n+int32_t bar (int32_t x)\n+{\n+  return x % 1000;\n+}\n+\n+/* { dg-final { scan-assembler-times \"\\\\s+mul64\\\\s+\" 3 } } */\n+/* { dg-final { scan-assembler-times \"\\\\s+mulu64\\\\s+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"r\\[0-9\\]+,mhi\" 2 } } */\n+/* { dg-final { scan-assembler-times \"r\\[0-9\\]+,mlo\" 2 } } */"}]}