{"sha": "448f26107e8e11cb4ff0c24e53c9c96a2cc14042", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ4ZjI2MTA3ZThlMTFjYjRmZjBjMjRlNTNjOWM5NmEyY2MxNDA0Mg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-02-10T13:57:01Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-02-10T13:57:01Z"}, "message": "usage.adb: Add line for switch -gnat05 (allow Ada 2005 extensions) Slight fix to...\n\n\t* usage.adb: Add line for switch -gnat05 (allow Ada 2005 extensions)\n\tSlight fix to documentation of -gnaty with no parameters\n\n\t* xr_tabls.ads: Add ??? comment for missing overall comment\n\n\t* xsinfo.adb: Make default file name be sinfo.h, since this is what\n\twe now use by default.\n\n\t* xsnames.adb: Adjust end of file test to look for five space followed\n\tby '#' instead of six spaces. The format of xsnames.adb was modified\n\tin the last update.\n\n\t* a-numeri.ads: Add reference to AI-388 for greek letter pi\n\tidentifier.\n\n\t* clean.adb: Minor reformatting.\n\n\t* gnat1drv.adb, gnatfind.adb, gnatlink.adb, gnatmem.adb,\n\tgnatname.adb: Minor reformatting\n\tAdd 2005 to copyright output when utility is run\n\n\t* csets.adb: Eliminate obsolete comment\n\n\t* debug.adb, g-socket.ads, i-cobol.adb: Minor reformatting throughout\n\tUpdate comments.\n\n\t* sem_eval.ads (Eval_Integer_Literal): Do not inline this, not useful.\n\nFrom-SVN: r94825", "tree": {"sha": "65d8819c164cc64fb71d4de5f7c9131d9a859059", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65d8819c164cc64fb71d4de5f7c9131d9a859059"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/448f26107e8e11cb4ff0c24e53c9c96a2cc14042", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/448f26107e8e11cb4ff0c24e53c9c96a2cc14042", "html_url": "https://github.com/Rust-GCC/gccrs/commit/448f26107e8e11cb4ff0c24e53c9c96a2cc14042", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/comments", "author": null, "committer": null, "parents": [{"sha": "f5da72ceabb971f5ee389e7679845af3f4abddbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5da72ceabb971f5ee389e7679845af3f4abddbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5da72ceabb971f5ee389e7679845af3f4abddbd"}], "stats": {"total": 743, "additions": 343, "deletions": 400}, "files": [{"sha": "dab536504c2e17848a3cd11b2f312ee7d2e086af", "filename": "gcc/ada/a-numeri.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fa-numeri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fa-numeri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-numeri.ads?ref=448f26107e8e11cb4ff0c24e53c9c96a2cc14042", "patch": "@@ -23,9 +23,9 @@ pragma Pure (Numerics);\n           3.14159_26535_89793_23846_26433_83279_50288_41971_69399_37511;\n \n    [\"03C0\"] : constant := Pi;\n-   --  This is the greek letter Pi. Note that it is conforming to have this\n-   --  present even in Ada 95 mode, because there is no way for a normal mode\n-   --  Ada 95 program to reference this identifier in any case.\n+   --  This is the greek letter Pi (for Ada 2005 AI-388). Note that it is\n+   --  conforming to have this present even in Ada 95 mode, because there is\n+   --  no way for a normal mode Ada 95 program to reference this identifier.\n \n    e : constant :=\n          2.71828_18284_59045_23536_02874_71352_66249_77572_47093_69996;"}, {"sha": "c0f6e16ffd7c3bc16c35f3a8ef686f2d19a35a3d", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=448f26107e8e11cb4ff0c24e53c9c96a2cc14042", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2004, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -80,9 +80,9 @@ package body Clean is\n    --  files will be done.\n \n    Do_Nothing : Boolean := False;\n-   --  Set to True when switch -n is specified.\n-   --  When True, no file is deleted. gnatclean only lists the files that\n-   --  would have been deleted if the switch -n had not been specified.\n+   --  Set to True when switch -n is specified. When True, no file is deleted.\n+   --  gnatclean only lists the files that would have been deleted if the\n+   --  switch -n had not been specified.\n \n    File_Deleted : Boolean := False;\n    --  Set to True if at least one file has been deleted\n@@ -151,7 +151,7 @@ package body Clean is\n    --  Extracts the first element from the Q\n \n    Q_Front : Natural;\n-   --  Points to the first valid element in the Q.\n+   --  Points to the first valid element in the Q\n \n    package Q is new Table.Table (\n      Table_Component_Type => File_Name_Type,\n@@ -1041,7 +1041,7 @@ package body Clean is\n       if not Copyright_Displayed then\n          Copyright_Displayed := True;\n          Put_Line (\"GNATCLEAN \" & Gnatvsn.Gnat_Version_String\n-                   & \" Copyright 2003-2004 Free Software Foundation, Inc.\");\n+                   & \" Copyright 2003-2005 Free Software Foundation, Inc.\");\n       end if;\n    end Display_Copyright;\n "}, {"sha": "4fc22889daad2324945613858bf0340c9528108a", "filename": "gcc/ada/csets.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fcsets.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fcsets.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcsets.adb?ref=448f26107e8e11cb4ff0c24e53c9c96a2cc14042", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1159,8 +1159,7 @@ package body Csets is\n       Identifier_Char ('[') := True;\n \n       --  Add entry for ESC if wide characters in use with a wide character\n-      --  encoding method active that uses the ESC code for encoding. Also\n-      --  add entry for left bracket to capture use of brackets notation.\n+      --  encoding method active that uses the ESC code for encoding.\n \n       if Identifier_Character_Set = 'w'\n         and then Wide_Character_Encoding_Method in WC_ESC_Encoding_Method"}, {"sha": "a0cc0fbf0311f88cd9acea81432c34fd6bfce65d", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=448f26107e8e11cb4ff0c24e53c9c96a2cc14042", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -120,8 +120,6 @@ package body Debug is\n    --  d.y\n    --  d.z\n \n-\n-\n    --  d1   Error msgs have node numbers where possible\n    --  d2   Eliminate error flags in verbose form error messages\n    --  d3   Dump bad node in Comperr on an abort"}, {"sha": "c613d20f836d8fc87928c411b0df46aae2b14909", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 186, "deletions": 207, "changes": 393, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=448f26107e8e11cb4ff0c24e53c9c96a2cc14042", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---              Copyright (C) 2001-2004 Ada Core Technologies, Inc.         --\n+--              Copyright (C) 2001-2005 Ada Core Technologies, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,26 +31,23 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides an interface to the sockets communication\n---  facility provided on many operating systems. This is implemented\n---  on the following platforms:\n+--  This package provides an interface to the sockets communication facility\n+--  provided on many operating systems. This is implemented on the following\n+--  platforms:\n \n---     All native ports, except Interix, with restrictions as follows\n+--     All native ports, with restrictions as follows\n \n---       Multicast is available only on systems which provide support\n---       for this feature, so it is not available if Multicast is not\n---       supported, or not installed. In particular Multicast is not\n---       available with the Windows version.\n+--       Multicast is available only on systems which provide support for this\n+--       feature, so it is not available if Multicast is not supported, or not\n+--       installed. In particular Multicast is not available with the Windows\n+--       version.\n \n---       The VMS implementation has implemented using the DECC RTL Socket\n---       API, and is thus subject to limitations in the implementation of\n---       this API.\n+--       The VMS implementation has implemented using the DECC RTL Socket API,\n+--       and is thus subject to limitations in the implementation of this API.\n \n---       This package is not supported on the Interix port of GNAT.\n+--     VxWorks cross ports fully implement this package\n \n---     VxWorks cross ports fully implement this package.\n-\n---     This package is not yet implemented on LynxOS.\n+--     This package is not yet implemented on LynxOS or other cross ports\n \n with Ada.Exceptions;\n with Ada.Streams;\n@@ -64,24 +61,22 @@ package GNAT.Sockets is\n    --  between applications. This package provides an Ada-like interface\n    --  similar to that proposed as part of the BSD socket layer.\n \n-   --  GNAT.Sockets has been designed with several ideas in mind.\n+   --  GNAT.Sockets has been designed with several ideas in mind\n \n-   --  This is a system independent interface. Therefore, we try as\n-   --  much as possible to mask system incompatibilities. Some\n-   --  functionalities are not available because there are not fully\n-   --  supported on some systems.\n+   --  This is a system independent interface. Therefore, we try as much as\n+   --  possible to mask system incompatibilities. Some functionalities are not\n+   --  available because there are not fully supported on some systems.\n \n-   --  This is a thick binding. For instance, a major effort has been\n-   --  done to avoid using memory addresses or untyped ints. We\n-   --  preferred to define streams and enumeration types. Errors are\n-   --  not returned as returned values but as exceptions.\n+   --  This is a thick binding. For instance, a major effort has been done to\n+   --  avoid using memory addresses or untyped ints. We preferred to define\n+   --  streams and enumeration types. Errors are not returned as returned\n+   --  values but as exceptions.\n \n    --  This package provides a POSIX-compliant interface (between two\n-   --  different implementations of the same routine, we adopt the one\n-   --  closest to the POSIX specification). For instance, using\n-   --  select(), the notification of an asynchronous connect failure\n-   --  is delivered in the write socket set (POSIX) instead of the\n-   --  exception socket set (NT).\n+   --  different implementations of the same routine, we adopt the one closest\n+   --  to the POSIX specification). For instance, using select(), the\n+   --  notification of an asynchronous connect failure is delivered in the\n+   --  write socket set (POSIX) instead of the exception socket set (NT).\n \n    --  Here is a typical example of what you can do:\n \n@@ -120,11 +115,10 @@ package GNAT.Sockets is\n    --        Address.Port := 5876;\n \n    --        --  The first step is to create a socket. Once created, this\n-   --        --  socket must be associated to with an address. Usually only\n-   --        --  a server (Pong here) needs to bind an address explicitly.\n-   --        --  Most of the time clients can skip this step because the\n-   --        --  socket routines will bind an arbitrary address to an unbound\n-   --        --  socket.\n+   --        --  socket must be associated to with an address. Usually only a\n+   --        --  server (Pong here) needs to bind an address explicitly. Most\n+   --        --  of the time clients can skip this step because the socket\n+   --        --  routines will bind an arbitrary address to an unbound socket.\n \n    --        Create_Socket (Server);\n \n@@ -289,7 +283,7 @@ package GNAT.Sockets is\n \n    --        Channel := Stream (Socket);\n \n-   --        --  Send message to server Pong.\n+   --        --  Send message to server Pong\n \n    --        String'Output (Channel, \"Hello world\");\n \n@@ -373,28 +367,26 @@ package GNAT.Sockets is\n    --  end PingPong;\n \n    procedure Initialize (Process_Blocking_IO : Boolean := False);\n-   --  Initialize must be called before using any other socket routines.\n-   --  The Process_Blocking_IO parameter indicates whether the thread\n-   --  library provides process-blocking or thread-blocking input/output\n-   --  operations. In the former case (typically with FSU threads)\n-   --  GNAT.Sockets should be initialized with a value of True to\n-   --  provide task-blocking IO through an emulation mechanism.\n-   --  Only the first call to Initialize is taken into account (further\n-   --  calls will be ignored). Note that with the default value\n-   --  of Process_Blocking_IO, this operation is a no-op on UNIX\n-   --  platforms, but applications should make sure to call it\n-   --  if portability is expected: some platforms (such as Windows)\n-   --  require initialization before any other socket operations.\n+   --  Initialize must be called before using any other socket routines. The\n+   --  Process_Blocking_IO parameter indicates whether the thread library\n+   --  provides process-blocking or thread-blocking input/output operations.\n+   --  In the former case (typically with FSU threads) GNAT.Sockets should be\n+   --  initialized with a value of True to provide task-blocking IO through an\n+   --  emulation mechanism. Only the first call to Initialize is taken into\n+   --  account (further calls will be ignored). Note that with the default\n+   --  value of Process_Blocking_IO, this operation is a no-op on UNIX\n+   --  platforms, but applications should make sure to call it if portability\n+   --  is expected: some platforms (such as Windows) require initialization\n+   --  before any other socket operations.\n \n    procedure Finalize;\n    --  After Finalize is called it is not possible to use any routines\n    --  exported in by this package. This procedure is idempotent.\n \n    type Socket_Type is private;\n-   --  Sockets are used to implement a reliable bi-directional\n-   --  point-to-point, stream-based connections between\n-   --  hosts. No_Socket provides a special value to denote\n-   --  uninitialized sockets.\n+   --  Sockets are used to implement a reliable bi-directional point-to-point,\n+   --  stream-based connections between hosts. No_Socket provides a special\n+   --  value to denote uninitialized sockets.\n \n    No_Socket : constant Socket_Type;\n \n@@ -436,11 +428,10 @@ package GNAT.Sockets is\n    No_Port  : constant Port_Type;\n \n    type Inet_Addr_Type (Family : Family_Type := Family_Inet) is private;\n-   --  An Internet address depends on an address family (IPv4 contains\n-   --  4 octets and Ipv6 contains 16 octets). Any_Inet_Addr is a special\n-   --  value treated like a wildcard enabling all addresses.\n-   --  No_Inet_Addr provides a special value to denote uninitialized\n-   --  inet addresses.\n+   --  An Internet address depends on an address family (IPv4 contains 4\n+   --  octets and Ipv6 contains 16 octets). Any_Inet_Addr is a special value\n+   --  treated like a wildcard enabling all addresses. No_Inet_Addr provides a\n+   --  special value to denote uninitialized inet addresses.\n \n    Any_Inet_Addr : constant Inet_Addr_Type;\n    No_Inet_Addr  : constant Inet_Addr_Type;\n@@ -449,28 +440,28 @@ package GNAT.Sockets is\n       Addr : Inet_Addr_Type (Family);\n       Port : Port_Type;\n    end record;\n-   --  Socket addresses fully define a socket connection with a\n-   --  protocol family, an Internet address and a port. No_Sock_Addr\n-   --  provides a special value for uninitialized socket addresses.\n+   --  Socket addresses fully define a socket connection with protocol family,\n+   --  an Internet address and a port. No_Sock_Addr provides a special value\n+   --  for uninitialized socket addresses.\n \n    No_Sock_Addr : constant Sock_Addr_Type;\n \n    function Image (Value : Inet_Addr_Type) return String;\n-   --  Return an image of an Internet address. IPv4 notation consists\n-   --  in 4 octets in decimal format separated by dots. IPv6 notation\n-   --  consists in 16 octets in hexadecimal format separated by\n-   --  colons (and possibly dots).\n+   --  Return an image of an Internet address. IPv4 notation consists in 4\n+   --  octets in decimal format separated by dots. IPv6 notation consists in\n+   --  16 octets in hexadecimal format separated by colons (and possibly\n+   --  dots).\n \n    function Image (Value : Sock_Addr_Type) return String;\n-   --  Return inet address image and port image separated by a colon.\n+   --  Return inet address image and port image separated by a colon\n \n    function Inet_Addr (Image : String) return Inet_Addr_Type;\n    --  Convert address image from numbers-and-dots notation into an\n    --  inet address.\n \n-   --  Host entries provide complete information on a given host:\n-   --  the official name, an array of alternative names or aliases and\n-   --  array of network addresses.\n+   --  Host entries provide complete information on a given host: the official\n+   --  name, an array of alternative names or aliases and array of network\n+   --  addresses.\n \n    type Host_Entry_Type\n      (Aliases_Length, Addresses_Length : Natural) is private;\n@@ -487,39 +478,38 @@ package GNAT.Sockets is\n    function Aliases\n      (E : Host_Entry_Type;\n       N : Positive := 1) return String;\n-   --  Return N'th aliases in host entry. The first index is 1.\n+   --  Return N'th aliases in host entry. The first index is 1\n \n    function Addresses\n      (E : Host_Entry_Type;\n       N : Positive := 1) return Inet_Addr_Type;\n-   --  Return N'th addresses in host entry. The first index is 1.\n+   --  Return N'th addresses in host entry. The first index is 1\n \n    Host_Error : exception;\n-   --  Exception raised by the two following procedures. Once raised,\n-   --  its message contains a string describing the error code. This\n-   --  exception is raised when an host entry can not be retrieved.\n+   --  Exception raised by the two following procedures. Once raised, its\n+   --  message contains a string describing the error code. This exception is\n+   --  raised when an host entry can not be retrieved.\n \n    function Get_Host_By_Address\n      (Address : Inet_Addr_Type;\n       Family  : Family_Type := Family_Inet) return Host_Entry_Type;\n-   --  Return host entry structure for the given Inet address.\n-   --  Note that no result will be returned if there is no mapping of this\n-   --  IP address to a host name in the system tables (host database,\n-   --  DNS or otherwise).\n+   --  Return host entry structure for the given Inet address. Note that no\n+   --  result will be returned if there is no mapping of this IP address to a\n+   --  host name in the system tables (host database, DNS or otherwise).\n \n    function Get_Host_By_Name\n      (Name : String) return Host_Entry_Type;\n-   --  Return host entry structure for the given host name. Here name\n-   --  is either a host name, or an IP address. If Name is an IP address,\n-   --  this is equivalent to Get_Host_By_Address (Inet_Addr (Name)).\n+   --  Return host entry structure for the given host name. Here name is\n+   --  either a host name, or an IP address. If Name is an IP address, this is\n+   --  equivalent to Get_Host_By_Address (Inet_Addr (Name)).\n \n    function Host_Name return String;\n    --  Return the name of the current host\n \n    type Service_Entry_Type (Aliases_Length : Natural) is private;\n-   --  Service entries provide complete information on a given\n-   --  service: the official name, an array of alternative names or\n-   --  aliases and the port number.\n+   --  Service entries provide complete information on a given service: the\n+   --  official name, an array of alternative names or aliases and the port\n+   --  number.\n \n    function Official_Name (S : Service_Entry_Type) return String;\n    --  Return official name in service entry\n@@ -536,7 +526,7 @@ package GNAT.Sockets is\n    function Aliases\n      (S : Service_Entry_Type;\n       N : Positive := 1) return String;\n-   --  Return N'th aliases in service entry. The first index is 1.\n+   --  Return N'th aliases in service entry (the first index is 1)\n \n    function Get_Service_By_Name\n      (Name     : String;\n@@ -552,9 +542,9 @@ package GNAT.Sockets is\n    --  Comment required ???\n \n    --  Errors are described by an enumeration type. There is only one\n-   --  exception Socket_Error in this package to deal with an error\n-   --  during a socket routine. Once raised, its message contains the\n-   --  error code between brackets and a string describing the error code.\n+   --  exception Socket_Error in this package to deal with an error during a\n+   --  socket routine. Once raised, its message contains the error code\n+   --  between brackets and a string describing the error code.\n \n    --  The name of the enumeration constant documents the error condition\n \n@@ -604,20 +594,19 @@ package GNAT.Sockets is\n       Unknown_Server_Error,\n       Cannot_Resolve_Error);\n \n-   --  Get_Socket_Options and Set_Socket_Options manipulate options\n-   --  associated with a socket. Options may exist at multiple\n-   --  protocol levels in the communication stack. Socket_Level is the\n-   --  uppermost socket level.\n+   --  Get_Socket_Options and Set_Socket_Options manipulate options associated\n+   --  with a socket. Options may exist at multiple protocol levels in the\n+   --  communication stack. Socket_Level is the uppermost socket level.\n \n    type Level_Type is (\n      Socket_Level,\n      IP_Protocol_For_IP_Level,\n      IP_Protocol_For_UDP_Level,\n      IP_Protocol_For_TCP_Level);\n \n-   --  There are several options available to manipulate sockets. Each\n-   --  option has a name and several values available. Most of the\n-   --  time, the value is a boolean to enable or disable this option.\n+   --  There are several options available to manipulate sockets. Each option\n+   --  has a name and several values available. Most of the time, the value is\n+   --  a boolean to enable or disable this option.\n \n    type Option_Name is (\n      Keep_Alive,      -- Enable sending of keep-alive messages\n@@ -668,10 +657,10 @@ package GNAT.Sockets is\n       end case;\n    end record;\n \n-   --  There are several controls available to manipulate\n-   --  sockets. Each option has a name and several values available.\n-   --  These controls differ from the socket options in that they are\n-   --  not specific to sockets but are available for any device.\n+   --  There are several controls available to manipulate sockets. Each option\n+   --  has a name and several values available. These controls differ from the\n+   --  socket options in that they are not specific to sockets but are\n+   --  available for any device.\n \n    type Request_Name is (\n       Non_Blocking_IO,  --  Cause a caller not to wait on blocking operations.\n@@ -688,35 +677,36 @@ package GNAT.Sockets is\n       end case;\n    end record;\n \n-   --  A request flag allows to specify the type of message\n-   --  transmissions or receptions. A request flag can be a\n-   --  combination of zero or more predefined request flags.\n+   --  A request flag allows to specify the type of message transmissions or\n+   --  receptions. A request flag can be combination of zero or more\n+   --  predefined request flags.\n \n    type Request_Flag_Type is private;\n \n    No_Request_Flag : constant Request_Flag_Type;\n-   --  This flag corresponds to the normal execution of an operation.\n+   --  This flag corresponds to the normal execution of an operation\n \n    Process_Out_Of_Band_Data : constant Request_Flag_Type;\n-   --  This flag requests that the receive or send function operates\n-   --  on out-of-band data when the socket supports this notion (e.g.\n+   --  This flag requests that the receive or send function operates on\n+   --  out-of-band data when the socket supports this notion (e.g.\n    --  Socket_Stream).\n \n    Peek_At_Incoming_Data : constant Request_Flag_Type;\n    --  This flag causes the receive operation to return data from the\n-   --  beginning of the receive queue without removing that data from\n-   --  the queue. A subsequent receive call will return the same data.\n+   --  beginning of the receive queue without removing that data from the\n+   --  queue. A subsequent receive call will return the same data.\n \n    Wait_For_A_Full_Reception : constant Request_Flag_Type;\n-   --  This flag requests that the operation block until the full\n-   --  request is satisfied. However, the call may still return less\n-   --  data than requested if a signal is caught, an error or\n-   --  disconnect occurs, or the next data to be received is of a dif-\n-   --  ferent type than that returned.\n+   --  This flag requests that the operation block until the full request is\n+   --  satisfied. However, the call may still return less data than requested\n+   --  if a signal is caught, an error or disconnect occurs, or the next data\n+   --  to be received is of a different type than that returned. Note that\n+   --  this flag depends on support in the underlying sockets implementation,\n+   --  and is not supported under Windows.\n \n    Send_End_Of_Record : constant Request_Flag_Type;\n-   --  This flag indicates that the entire message has been sent and\n-   --  so this terminates the record.\n+   --  This flag indicates that the entire message has been sent and so this\n+   --  terminates the record.\n \n    function \"+\" (L, R : Request_Flag_Type) return Request_Flag_Type;\n    --  Combine flag L with flag R\n@@ -734,17 +724,17 @@ package GNAT.Sockets is\n      (Socket : out Socket_Type;\n       Family : Family_Type := Family_Inet;\n       Mode   : Mode_Type   := Socket_Stream);\n-   --  Create an endpoint for communication. Raises Socket_Error on error.\n+   --  Create an endpoint for communication. Raises Socket_Error on error\n \n    procedure Accept_Socket\n      (Server  : Socket_Type;\n       Socket  : out Socket_Type;\n       Address : out Sock_Addr_Type);\n-   --  Extract the first connection request on the queue of pending\n-   --  connections, creates a new connected socket with mostly the\n-   --  same properties as Server, and allocates a new socket. The\n-   --  returned Address is filled in with the address of the\n-   --  connection. Raises Socket_Error on error.\n+   --  Extracts the first connection request on the queue of pending\n+   --  connections, creates a new connected socket with mostly the same\n+   --  properties as Server, and allocates a new socket. The returned Address\n+   --  is filled in with the address of the connection. Raises Socket_Error on\n+   --  error.\n \n    procedure Bind_Socket\n      (Socket  : Socket_Type;\n@@ -753,7 +743,7 @@ package GNAT.Sockets is\n    --  Socket_Error on error.\n \n    procedure Close_Socket (Socket : Socket_Type);\n-   --  Close a socket and more specifically a non-connected socket.\n+   --  Close a socket and more specifically a non-connected socket\n \n    procedure Connect_Socket\n      (Socket : Socket_Type;\n@@ -764,18 +754,18 @@ package GNAT.Sockets is\n    procedure Control_Socket\n      (Socket  : Socket_Type;\n       Request : in out Request_Type);\n-   --  Obtain or set parameter values that control the socket. This\n-   --  control differs from the socket options in that they are not\n-   --  specific to sockets but are available for any device.\n+   --  Obtain or set parameter values that control the socket. This control\n+   --  differs from the socket options in that they are not specific to\n+   --  sockets but are available for any device.\n \n    function Get_Peer_Name (Socket : Socket_Type) return Sock_Addr_Type;\n    --  Return the peer or remote socket address of a socket. Raise\n    --  Socket_Error on error.\n \n    function Get_Socket_Name (Socket : Socket_Type) return Sock_Addr_Type;\n    --  Return the local or current socket address of a socket. Return\n-   --  No_Sock_Addr on error (for instance, socket closed or not\n-   --  locally bound).\n+   --  No_Sock_Addr on error (for instance, socket closed or not locally\n+   --  bound).\n \n    function Get_Socket_Option\n      (Socket : Socket_Type;\n@@ -787,33 +777,31 @@ package GNAT.Sockets is\n    procedure Listen_Socket\n      (Socket : Socket_Type;\n       Length : Positive := 15);\n-   --  To accept connections, a socket is first created with\n-   --  Create_Socket, a willingness to accept incoming connections and\n-   --  a queue Length for incoming connections are specified. Raise\n-   --  Socket_Error on error.\n+   --  To accept connections, a socket is first created with Create_Socket,\n+   --  a willingness to accept incoming connections and a queue Length for\n+   --  incoming connections are specified. Raise Socket_Error on error.\n \n    procedure Receive_Socket\n      (Socket : Socket_Type;\n       Item   : out Ada.Streams.Stream_Element_Array;\n       Last   : out Ada.Streams.Stream_Element_Offset;\n       Flags  : Request_Flag_Type := No_Request_Flag);\n-   --  Receive message from Socket. Last is the index value such that\n-   --  Item (Last) is the last character assigned. Note that Last is\n-   --  set to Item'First - 1 when the socket has been closed by\n-   --  peer. This is not an error and no exception is raised. Flags\n-   --  allows to control the reception. Raise Socket_Error on error.\n+   --  Receive message from Socket. Last is the index value such that Item\n+   --  (Last) is the last character assigned. Note that Last is set to\n+   --  Item'First - 1 when the socket has been closed by peer. This is not an\n+   --  error and no exception is raised. Flags allows to control the\n+   --  reception. Raise Socket_Error on error.\n \n    procedure Receive_Socket\n      (Socket : Socket_Type;\n       Item   : out Ada.Streams.Stream_Element_Array;\n       Last   : out Ada.Streams.Stream_Element_Offset;\n       From   : out Sock_Addr_Type;\n       Flags  : Request_Flag_Type := No_Request_Flag);\n-   --  Receive message from Socket. If Socket is not\n-   --  connection-oriented, the source address From of the message is\n-   --  filled in. Last is the index value such that Item (Last) is the\n-   --  last character assigned. Flags allows to control the\n-   --  reception. Raises Socket_Error on error.\n+   --  Receive message from Socket. If Socket is not connection-oriented, the\n+   --  source address From of the message is filled in. Last is the index\n+   --  value such that Item (Last) is the last character assigned. Flags\n+   --  allows to control the reception. Raises Socket_Error on error.\n \n    procedure Receive_Vector\n      (Socket : Socket_Type;\n@@ -824,11 +812,10 @@ package GNAT.Sockets is\n \n    function Resolve_Exception\n      (Occurrence : Ada.Exceptions.Exception_Occurrence) return Error_Type;\n-   --  When Socket_Error or Host_Error are raised, the exception\n-   --  message contains the error code between brackets and a string\n-   --  describing the error code. Resolve_Error extracts the error\n-   --  code from an exception message and translate it into an\n-   --  enumeration value.\n+   --  When Socket_Error or Host_Error are raised, the exception message\n+   --  contains the error code between brackets and a string describing the\n+   --  error code. Resolve_Error extracts the error code from an exception\n+   --  message and translate it into an enumeration value.\n \n    procedure Send_Socket\n      (Socket : Socket_Type;\n@@ -837,19 +824,17 @@ package GNAT.Sockets is\n       Flags  : Request_Flag_Type := No_Request_Flag);\n    --  Transmit a message to another socket. Note that Last is set to\n    --  Item'First-1 when socket has been closed by peer. This is not\n-   --  considered an error and no exception is raised. Flags allows to\n-   --  control the transmission. Raises Socket_Error on any other\n-   --  error condition.\n+   --  considered an error and no exception is raised. Flags allows to control\n+   --  the transmission. Raises Socket_Error on any other error condition.\n \n    procedure Send_Socket\n      (Socket : Socket_Type;\n       Item   : Ada.Streams.Stream_Element_Array;\n       Last   : out Ada.Streams.Stream_Element_Offset;\n       To     : Sock_Addr_Type;\n       Flags  : Request_Flag_Type := No_Request_Flag);\n-   --  Transmit a message to another socket. The address is given by\n-   --  To. Flags allows to control the transmission. Raises\n-   --  Socket_Error on error.\n+   --  Transmit a message to another socket. The address is given by To. Flags\n+   --  allows to control the transmission. Raises Socket_Error on error.\n \n    procedure Send_Vector\n      (Socket : Socket_Type;\n@@ -862,15 +847,15 @@ package GNAT.Sockets is\n      (Socket : Socket_Type;\n       Level  : Level_Type := Socket_Level;\n       Option : Option_Type);\n-   --  Manipulate socket options. Raises Socket_Error on error.\n+   --  Manipulate socket options. Raises Socket_Error on error\n \n    procedure Shutdown_Socket\n      (Socket : Socket_Type;\n       How    : Shutmode_Type := Shut_Read_Write);\n-   --  Shutdown a connected socket. If How is Shut_Read, further\n-   --  receives will be disallowed. If How is Shut_Write, further\n-   --  sends will be disallowed. If how is Shut_Read_Write, further\n-   --  sends and receives will be disallowed.\n+   --  Shutdown a connected socket. If How is Shut_Read, further receives will\n+   --  be disallowed. If How is Shut_Write, further sends will be disallowed.\n+   --  If how is Shut_Read_Write, further sends and receives will be\n+   --  disallowed.\n \n    type Stream_Access is access all Ada.Streams.Root_Stream_Type'Class;\n    --  Same interface as Ada.Streams.Stream_IO\n@@ -883,26 +868,24 @@ package GNAT.Sockets is\n    function Stream\n      (Socket  : Socket_Type;\n       Send_To : Sock_Addr_Type) return Stream_Access;\n-   --  Create a stream associated with a datagram-based socket that is\n-   --  already bound. Send_To is the socket address to which messages are\n-   --  being sent.\n+   --  Create a stream associated with a datagram-based socket that is already\n+   --  bound. Send_To is the socket address to which messages are being sent.\n \n    function Get_Address\n      (Stream : Stream_Access) return Sock_Addr_Type;\n-   --  Return the socket address from which the last message was received.\n+   --  Return the socket address from which the last message was received\n \n    procedure Free is new Ada.Unchecked_Deallocation\n      (Ada.Streams.Root_Stream_Type'Class, Stream_Access);\n    --  Destroy a stream created by one of the Stream functions above,\n-   --  releasing the corresponding resources. The user is responsible\n-   --  for calling this subprogram when the stream is not needed anymore.\n+   --  releasing the corresponding resources. The user is responsible for\n+   --  calling this subprogram when the stream is not needed anymore.\n \n    type Socket_Set_Type is limited private;\n-   --  This type allows to manipulate sets of sockets. It allows to\n-   --  wait for events on multiple endpoints at one time. This is an\n-   --  access type on a system dependent structure. To avoid memory\n-   --  leaks it is highly recommended to clean the access value with\n-   --  procedure Empty.\n+   --  This type allows to manipulate sets of sockets. It allows to wait for\n+   --  events on multiple endpoints at one time. This is an access type on a\n+   --  system dependent structure. To avoid memory leaks it is highly\n+   --  recommended to clean the access value with procedure Empty.\n \n    procedure Clear (Item : in out Socket_Set_Type; Socket : Socket_Type);\n    --  Remove Socket from Item\n@@ -929,33 +912,31 @@ package GNAT.Sockets is\n    procedure Set (Item : in out Socket_Set_Type; Socket : Socket_Type);\n    --  Insert Socket into Item\n \n-   --  C select() waits for a number of file descriptors to change\n-   --  status. Usually, three independent sets of descriptors are\n-   --  watched (read, write and exception). A timeout gives an upper\n-   --  bound on the amount of time elapsed before select returns.\n-   --  This function blocks until an event occurs. On some platforms,\n-   --  C select can block the full process.\n+   --  C select() waits for a number of file descriptors to change status.\n+   --  Usually, three independent sets of descriptors are watched (read, write\n+   --  and exception). A timeout gives an upper bound on the amount of time\n+   --  elapsed before select returns. This function blocks until an event\n+   --  occurs. On some platforms, C select can block the full process.\n    --\n-   --  Check_Selector provides the very same behaviour. The only\n-   --  difference is that it does not watch for exception events. Note\n-   --  that on some platforms it is kept process blocking in purpose.\n-   --  The timeout parameter allows the user to have the behaviour he\n-   --  wants. Abort_Selector allows to abort safely a Check_Selector\n-   --  that is blocked forever. A special file descriptor is opened by\n-   --  Create_Selector and included in each call to\n-   --  Check_Selector. Abort_Selector causes an event to occur on this\n-   --  descriptor in order to unblock Check_Selector. The user must\n-   --  call Close_Selector to discard this special file. A reason to\n-   --  abort a select operation is typically to add a socket in one of\n-   --  the socket sets when the timeout is set to forever.\n+   --  Check_Selector provides the very same behaviour. The only difference is\n+   --  that it does not watch for exception events. Note that on some\n+   --  platforms it is kept process blocking in purpose. The timeout parameter\n+   --  allows the user to have the behaviour he wants. Abort_Selector allows\n+   --  to abort safely a Check_Selector that is blocked forever. A special\n+   --  file descriptor is opened by Create_Selector and included in each call\n+   --  to Check_Selector. Abort_Selector causes an event to occur on this\n+   --  descriptor in order to unblock Check_Selector. The user must call\n+   --  Close_Selector to discard this special file. A reason to abort a select\n+   --  operation is typically to add a socket in one of the socket sets when\n+   --  the timeout is set to forever.\n \n    type Selector_Type is limited private;\n    type Selector_Access is access all Selector_Type;\n \n-   --  Selector_Duration is a subtype of Standard.Duration because the\n-   --  full range of Standard.Duration cannot be represented in the\n-   --  equivalent C structure. Moreover, negative values are not\n-   --  allowed to avoid system incompatibilities.\n+   --  Selector_Duration is a subtype of Standard.Duration because the full\n+   --  range of Standard.Duration cannot be represented in the equivalent C\n+   --  structure. Moreover, negative values are not allowed to avoid system\n+   --  incompatibilities.\n \n    Immediate : constant := 0.0;\n    Forever   : constant := Duration (Integer'Last) * 1.0;\n@@ -976,18 +957,17 @@ package GNAT.Sockets is\n       W_Socket_Set : in out Socket_Set_Type;\n       Status       : out Selector_Status;\n       Timeout      : Selector_Duration := Forever);\n-   --  Return when one Socket in R_Socket_Set has some data to be read\n-   --  or if one Socket in W_Socket_Set is ready to receive some\n-   --  data. In these cases Status is set to Completed and sockets\n-   --  that are ready are set in R_Socket_Set or W_Socket_Set. Status\n-   --  is set to Expired if no socket was ready after a Timeout\n-   --  expiration. Status is set to Aborted if an abort signal has been\n-   --  received while checking socket status. As this procedure\n-   --  returns when Timeout occurs, it is a design choice to keep this\n-   --  procedure process blocking. Note that a Timeout of 0.0 returns\n-   --  immediately. Also note that two different objects must be passed\n-   --  as R_Socket_Set and W_Socket_Set (even if they contain the same\n-   --  set of Sockets), or some event will be lost.\n+   --  Return when one Socket in R_Socket_Set has some data to be read or if\n+   --  one Socket in W_Socket_Set is ready to receive some data. In these\n+   --  cases Status is set to Completed and sockets that are ready are set in\n+   --  R_Socket_Set or W_Socket_Set. Status is set to Expired if no socket was\n+   --  ready after a Timeout expiration. Status is set to Aborted if an abort\n+   --  signal has been received while checking socket status. As this\n+   --  procedure returns when Timeout occurs, it is a design choice to keep\n+   --  this procedure process blocking. Note that a Timeout of 0.0 returns\n+   --  immediately. Also note that two different objects must be passed as\n+   --  R_Socket_Set and W_Socket_Set (even if they contain the same set of\n+   --  Sockets), or some event will be lost.\n \n    procedure Check_Selector\n      (Selector     : in out Selector_Type;\n@@ -996,13 +976,13 @@ package GNAT.Sockets is\n       E_Socket_Set : in out Socket_Set_Type;\n       Status       : out Selector_Status;\n       Timeout      : Selector_Duration := Forever);\n-   --  This refined version of Check_Selector allows to watch for\n-   --  exception events (that is notifications of out-of-band\n-   --  transmission and reception). As above, all of R_Socket_Set,\n-   --  W_Socket_Set and E_Socket_Set must be different objects.\n+   --  This refined version of Check_Selector allows to watch for exception\n+   --  events (that is notifications of out-of-band transmission and\n+   --  reception). As above, all of R_Socket_Set, W_Socket_Set and\n+   --  E_Socket_Set must be different objects.\n \n    procedure Abort_Selector (Selector : Selector_Type);\n-   --  Send an abort signal to the selector.\n+   --  Send an abort signal to the selector\n \n private\n \n@@ -1016,8 +996,7 @@ private\n \n    pragma Volatile (Selector_Type);\n \n-   --  The two signalling sockets are used to abort a select\n-   --  operation.\n+   --  The two signalling sockets are used to abort a select operation\n \n    subtype Socket_Set_Access is System.Address;\n    No_Socket_Set : constant Socket_Set_Access := System.Null_Address;"}, {"sha": "d7bd37815a69d3066c3ec2d480300b4b6f16bf50", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 83, "deletions": 75, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=448f26107e8e11cb4ff0c24e53c9c96a2cc14042", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -179,7 +179,7 @@ begin\n          Write_Str (\"GNAT \");\n          Write_Str (Gnat_Version_String);\n          Write_Eol;\n-         Write_Str (\"Copyright 1992-2004 Free Software Foundation, Inc.\");\n+         Write_Str (\"Copyright 1992-2005 Free Software Foundation, Inc.\");\n          Write_Eol;\n       end if;\n \n@@ -247,9 +247,9 @@ begin\n          Suppress_Options (Overflow_Check) := True;\n       end if;\n \n-      --  Check we have exactly one source file, this happens only in\n-      --  the case where the driver is called directly, it cannot happen\n-      --  when gnat1 is invoked from gcc in the normal case.\n+      --  Check we have exactly one source file, this happens only in the case\n+      --  where the driver is called directly, it cannot happen when gnat1 is\n+      --  invoked from gcc in the normal case.\n \n       if Osint.Number_Of_Files /= 1 then\n          Usage;\n@@ -280,27 +280,33 @@ begin\n            or else Nkind (Original_Node (Unit (Main_Unit_Node)))\n                            in N_Generic_Instantiation)\n       then\n-         declare\n+         Bad_Body : declare\n             Sname   : Unit_Name_Type := Unit_Name (Main_Unit);\n             Src_Ind : Source_File_Index;\n             Fname   : File_Name_Type;\n \n-            procedure Bad_Body (Msg : String);\n+            procedure Bad_Body_Error (Msg : String);\n             --  Issue message for bad body found\n \n-            procedure Bad_Body (Msg : String) is\n+            --------------------\n+            -- Bad_Body_Error --\n+            --------------------\n+\n+            procedure Bad_Body_Error (Msg : String) is\n             begin\n                Error_Msg_N (Msg, Main_Unit_Node);\n                Error_Msg_Name_1 := Fname;\n                Error_Msg_N\n                  (\"remove incorrect body in file{!\", Main_Unit_Node);\n-            end Bad_Body;\n+            end Bad_Body_Error;\n+\n+         --  Start of processing for Bad_Body\n \n          begin\n             Sname := Unit_Name (Main_Unit);\n \n-            --  If we do not already have a body name, then get the body\n-            --  name (but how can we have a body name here ???)\n+            --  If we do not already have a body name, then get the body name\n+            --  (but how can we have a body name here ???)\n \n             if not Is_Body_Name (Sname) then\n                Sname := Get_Body_Name (Sname);\n@@ -311,31 +317,31 @@ begin\n \n             --  Case where body is present and it is not a subunit. Exclude\n             --  the subunit case, because it has nothing to do with the\n-            --  package we are compiling. It is illegal for a child unit\n-            --  and a subunit with the same expanded name (RM 10.2(9)) to\n-            --  appear together in a partition, but there is nothing to\n-            --  stop a compilation environment from having both, and the\n-            --  test here simply allows that. If there is an attempt to\n-            --  include both in a partition, this is diagnosed at bind time.\n-            --  In Ada 83 mode this is not a warning case.\n-\n-            --  Note: if weird file names are being used, we can have a\n-            --  situation where the file name that supposedly contains a\n-            --  body, in fact contains a spec, or we can't tell what it\n-            --  contains. Skip the error message in these cases.\n+            --  package we are compiling. It is illegal for a child unit and a\n+            --  subunit with the same expanded name (RM 10.2(9)) to appear\n+            --  together in a partition, but there is nothing to stop a\n+            --  compilation environment from having both, and the test here\n+            --  simply allows that. If there is an attempt to include both in\n+            --  a partition, this is diagnosed at bind time. In Ada 83 mode\n+            --  this is not a warning case.\n+\n+            --  Note: if weird file names are being used, we can have\n+            --  situation where the file name that supposedly contains body,\n+            --  in fact contains a spec, or we can't tell what it contains.\n+            --  Skip the error message in these cases.\n \n             if Src_Ind /= No_Source_File\n               and then Get_Expected_Unit_Type (Fname) = Expect_Body\n               and then not Source_File_Is_Subunit (Src_Ind)\n             then\n                Error_Msg_Name_1 := Sname;\n \n-               --  Ada 83 case of a package body being ignored. This is not\n-               --  an error as far as the Ada 83 RM is concerned, but it is\n+               --  Ada 83 case of a package body being ignored. This is not an\n+               --  error as far as the Ada 83 RM is concerned, but it is\n                --  almost certainly not what is wanted so output a warning.\n                --  Give this message only if there were no errors, since\n-               --  otherwise it may be incorrect (we may have misinterpreted\n-               --  a junk spec as not needing a body when it really does).\n+               --  otherwise it may be incorrect (we may have misinterpreted a\n+               --  junk spec as not needing a body when it really does).\n \n                if Main_Kind = N_Package_Declaration\n                  and then Ada_Version = Ada_83\n@@ -358,33 +364,35 @@ begin\n                   if Nkind (Original_Node (Unit (Main_Unit_Node)))\n                       in N_Generic_Instantiation\n                   then\n-                     Bad_Body\n+                     Bad_Body_Error\n                        (\"generic instantiation for % does not allow a body\");\n \n                   --  A library unit that is a renaming never allows a body\n \n                   elsif Main_Kind in N_Renaming_Declaration then\n-                     Bad_Body\n+                     Bad_Body_Error\n                        (\"renaming declaration for % does not allow a body!\");\n \n-                  --  Remaining cases are packages and generic packages.\n-                  --  Here we only do the test if there are no previous\n-                  --  errors, because if there are errors, they may lead\n-                  --  us to incorrectly believe that a package does not\n-                  --  allow a body when in fact it does.\n+                  --  Remaining cases are packages and generic packages. Here\n+                  --  we only do the test if there are no previous errors,\n+                  --  because if there are errors, they may lead us to\n+                  --  incorrectly believe that a package does not allow a body\n+                  --  when in fact it does.\n \n                   elsif not Compilation_Errors then\n                      if Main_Kind = N_Package_Declaration then\n-                        Bad_Body (\"package % does not allow a body!\");\n+                        Bad_Body_Error\n+                          (\"package % does not allow a body!\");\n \n                      elsif Main_Kind = N_Generic_Package_Declaration then\n-                        Bad_Body (\"generic package % does not allow a body!\");\n+                        Bad_Body_Error\n+                          (\"generic package % does not allow a body!\");\n                      end if;\n                   end if;\n \n                end if;\n             end if;\n-         end;\n+         end Bad_Body;\n       end if;\n \n       --  Exit if compilation errors detected\n@@ -405,9 +413,9 @@ begin\n          Exit_Program (E_Errors);\n       end if;\n \n-      --  Set Generate_Code on main unit and its spec. We do this even if\n-      --  are not generating code, since Lib-Writ uses this to determine\n-      --  which units get written in the ali file.\n+      --  Set Generate_Code on main unit and its spec. We do this even if are\n+      --  not generating code, since Lib-Writ uses this to determine which\n+      --  units get written in the ali file.\n \n       Set_Generate_Code (Main_Unit);\n \n@@ -437,15 +445,15 @@ begin\n       --  be generated (i.e. no -gnatc or -gnats switch was used). Check if\n       --  we can in fact satisfy this request.\n \n-      --  Cannot generate code if someone has turned off code generation\n-      --  for any reason at all. We will try to figure out a reason below.\n+      --  Cannot generate code if someone has turned off code generation for\n+      --  any reason at all. We will try to figure out a reason below.\n \n       elsif Operating_Mode /= Generate_Code then\n          Back_End_Mode := Skip;\n \n-      --  We can generate code for a subprogram body unless there were\n-      --  missing subunits. Note that we always generate code for all\n-      --  generic units (a change from some previous versions of GNAT).\n+      --  We can generate code for a subprogram body unless there were missing\n+      --  subunits. Note that we always generate code for all generic units (a\n+      --  change from some previous versions of GNAT).\n \n       elsif Main_Kind = N_Subprogram_Body\n         and then not Subunits_Missing\n@@ -507,17 +515,17 @@ begin\n          Back_End_Mode := Skip;\n       end if;\n \n-      --  At this stage Call_Back_End is set to indicate if the backend\n-      --  should be called to generate code. If it is not set, then code\n-      --  generation has been turned off, even though code was requested\n-      --  by the original command. This is not an error from the user\n-      --  point of view, but it is an error from the point of view of\n-      --  the gcc driver, so we must exit with an error status.\n+      --  At this stage Call_Back_End is set to indicate if the backend should\n+      --  be called to generate code. If it is not set, then code generation\n+      --  has been turned off, even though code was requested by the original\n+      --  command. This is not an error from the user point of view, but it is\n+      --  an error from the point of view of the gcc driver, so we must exit\n+      --  with an error status.\n \n-      --  We generate an informative message (from the gcc point of view,\n-      --  it is an error message, but from the users point of view this\n-      --  is not an error, just a consequence of compiling something that\n-      --  cannot generate code).\n+      --  We generate an informative message (from the gcc point of view, it\n+      --  is an error message, but from the users point of view this is not an\n+      --  error, just a consequence of compiling something that cannot\n+      --  generate code).\n \n       if Back_End_Mode = Skip then\n          Write_Str (\"cannot generate code for \");\n@@ -603,9 +611,9 @@ begin\n          return;\n       end if;\n \n-      --  Ensure that we properly register a dependency on system.ads,\n-      --  since even if we do not semantically depend on this, Targparm\n-      --  has read system parameters from the system.ads file.\n+      --  Ensure that we properly register a dependency on system.ads, since\n+      --  even if we do not semantically depend on this, Targparm has read\n+      --  system parameters from the system.ads file.\n \n       Lib.Writ.Ensure_System_Dependency;\n \n@@ -631,22 +639,22 @@ begin\n \n       Back_End.Call_Back_End (Back_End_Mode);\n \n-      --  Once the backend is complete, we unlock the names table. This\n-      --  call allows a few extra entries, needed for example for the file\n-      --  name for the library file output.\n+      --  Once the backend is complete, we unlock the names table. This call\n+      --  allows a few extra entries, needed for example for the file name for\n+      --  the library file output.\n \n       Namet.Unlock;\n \n-      --  Validate unchecked conversions (using the values for size\n-      --  and alignment annotated by the backend where possible).\n+      --  Validate unchecked conversions (using the values for size and\n+      --  alignment annotated by the backend where possible).\n \n       Sem_Ch13.Validate_Unchecked_Conversions;\n \n-      --  Now we complete output of errors, rep info and the tree info.\n-      --  These are delayed till now, since it is perfectly possible for\n-      --  gigi to generate errors, modify the tree (in particular by setting\n-      --  flags indicating that elaboration is required, and also to back\n-      --  annotate representation information for List_Rep_Info.\n+      --  Now we complete output of errors, rep info and the tree info. These\n+      --  are delayed till now, since it is perfectly possible for gigi to\n+      --  generate errors, modify the tree (in particular by setting flags\n+      --  indicating that elaboration is required, and also to back annotate\n+      --  representation information for List_Rep_Info.\n \n       Errout.Finalize;\n       List_Rep_Info;\n@@ -662,11 +670,11 @@ begin\n \n       Write_ALI (Object => (Back_End_Mode = Generate_Object));\n \n-      --  Generate the ASIS tree after writing the ALI file, since in\n-      --  ASIS mode, Write_ALI may in fact result in further tree\n-      --  decoration from the original tree file. Note that we dump\n-      --  the tree just before generating it, so that the dump will\n-      --  exactly reflect what is written out.\n+      --  Generate the ASIS tree after writing the ALI file, since in ASIS\n+      --  mode, Write_ALI may in fact result in further tree decoration from\n+      --  the original tree file. Note that we dump the tree just before\n+      --  generating it, so that the dump will exactly reflect what is written\n+      --  out.\n \n       Treepr.Tree_Dump;\n       Tree_Gen;\n@@ -689,8 +697,8 @@ begin\n \n       when Storage_Error =>\n \n-         --  Assume this is a bug. If it is real, the message will in\n-         --  any case say Storage_Error, giving a strong hint!\n+         --  Assume this is a bug. If it is real, the message will in any case\n+         --  say Storage_Error, giving a strong hint!\n \n          Comperr.Compiler_Abort (\"Storage_Error\");\n    end;"}, {"sha": "bd8a22a554816d17e71246b50c7716fac49f24f7", "filename": "gcc/ada/gnatfind.adb", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fgnatfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fgnatfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatfind.adb?ref=448f26107e8e11cb4ff0c24e53c9c96a2cc14042", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---         Copyright (C) 1998-2004 Free Software Foundation, Inc.           --\n+--         Copyright (C) 1998-2005 Free Software Foundation, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -87,10 +87,8 @@ procedure Gnatfind is\n             when 'a'    =>\n                if GNAT.Command_Line.Full_Switch = \"a\" then\n                   Read_Only := True;\n-\n                elsif GNAT.Command_Line.Full_Switch = \"aI\" then\n                   Osint.Add_Src_Search_Dir (GNAT.Command_Line.Parameter);\n-\n                else\n                   Osint.Add_Lib_Search_Dir (GNAT.Command_Line.Parameter);\n                end if;\n@@ -117,15 +115,13 @@ procedure Gnatfind is\n             when 'n'    =>\n                if GNAT.Command_Line.Full_Switch = \"nostdinc\" then\n                   Opt.No_Stdinc := True;\n-\n                elsif GNAT.Command_Line.Full_Switch = \"nostlib\" then\n                   Opt.No_Stdlib := True;\n                end if;\n \n             when 'p'    =>\n                declare\n                   S : constant String := GNAT.Command_Line.Parameter;\n-\n                begin\n                   Prj_File_Length := S'Length;\n                   Prj_File (1 .. Prj_File_Length) := S;\n@@ -241,7 +237,7 @@ procedure Gnatfind is\n    procedure Write_Usage is\n    begin\n       Put_Line (\"GNATFIND \" & Gnatvsn.Gnat_Version_String);\n-      Put_Line (\"Copyright 1998-2004, Ada Core Technologies Inc.\");\n+      Put_Line (\"Copyright 1998-2005, Ada Core Technologies Inc.\");\n       Put_Line (\"Usage: gnatfind pattern[:sourcefile[:line[:column]]] \"\n                 & \"[file1 file2 ...]\");\n       New_Line;"}, {"sha": "5a4a57fec390b7bd588e4e81f95a300781495b34", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=448f26107e8e11cb4ff0c24e53c9c96a2cc14042", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1996-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -172,28 +172,28 @@ procedure Gnatlink is\n    --  Set to True to force generation of a response file\n \n    function Base_Name (File_Name : in String) return String;\n-   --  Return just the file name part without the extension (if present).\n+   --  Return just the file name part without the extension (if present)\n \n    procedure Delete (Name : in String);\n-   --  Wrapper to unlink as status is ignored by this application.\n+   --  Wrapper to unlink as status is ignored by this application\n \n    procedure Error_Msg (Message : in String);\n    --  Output the error or warning Message\n \n    procedure Exit_With_Error (Error : in String);\n-   --  Output Error and exit program with a fatal condition.\n+   --  Output Error and exit program with a fatal condition\n \n    procedure Process_Args;\n-   --  Go through all the arguments and build option tables.\n+   --  Go through all the arguments and build option tables\n \n    procedure Process_Binder_File (Name : in String);\n-   --  Reads the binder file and extracts linker arguments.\n+   --  Reads the binder file and extracts linker arguments\n \n    procedure Write_Header;\n-   --  Show user the program name, version and copyright.\n+   --  Show user the program name, version and copyright\n \n    procedure Write_Usage;\n-   --  Show user the program options.\n+   --  Show user the program options\n \n    ---------------\n    -- Base_Name --\n@@ -514,7 +514,7 @@ procedure Gnatlink is\n                                 new String'(Arg);\n                            end if;\n \n-                           --  Pass to gcc for linking program.\n+                           --  Pass to gcc for linking program\n \n                            Gcc_Linker_Options.Increment_Last;\n                            Gcc_Linker_Options.Table\n@@ -639,10 +639,10 @@ procedure Gnatlink is\n       --  For call to Close\n \n       GNAT_Static : Boolean := False;\n-      --  Save state of -static option.\n+      --  Save state of -static option\n \n       GNAT_Shared : Boolean := False;\n-      --  Save state of -shared option.\n+      --  Save state of -shared option\n \n       Xlinker_Was_Previous : Boolean := False;\n       --  Indicate that \"-Xlinker\" was the option preceding the current\n@@ -704,7 +704,7 @@ procedure Gnatlink is\n       --  terminator.\n \n       function Index (S, Pattern : String) return Natural;\n-      --  Return the last occurrence of Pattern in S, or 0 if none.\n+      --  Return the last occurrence of Pattern in S, or 0 if none\n \n       function Is_Option_Present (Opt : in String) return Boolean;\n       --  Return true if the option Opt is already present in\n@@ -1279,7 +1279,7 @@ procedure Gnatlink is\n          Write_Str (\"GNATLINK \");\n          Write_Str (Gnat_Version_String);\n          Write_Eol;\n-         Write_Str (\"Copyright 1995-2004 Free Software Foundation, Inc\");\n+         Write_Str (\"Copyright 1995-2005 Free Software Foundation, Inc\");\n          Write_Eol;\n       end if;\n    end Write_Header;\n@@ -1663,7 +1663,7 @@ begin\n       end Bind_Step;\n    end if;\n \n-   --  Now, actually link the program.\n+   --  Now, actually link the program\n \n    --  Skip this step for now on the JVM since the Java interpreter will do\n    --  the actual link at run time. We might consider packing all class files"}, {"sha": "19575945b31a60551f35cac21fdce0664356df1c", "filename": "gcc/ada/gnatmem.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fgnatmem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fgnatmem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatmem.adb?ref=448f26107e8e11cb4ff0c24e53c9c96a2cc14042", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 1997-2004, Ada Core Technologies, Inc.           --\n+--           Copyright (C) 1997-2005, Ada Core Technologies, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,9 +37,9 @@\n --        The running my_prog will produce a file named gmem.out that will be\n --        parsed by gnatmem.\n \n---      - Record a reference to the allocated memory on each allocation call.\n+--      - Record a reference to the allocated memory on each allocation call\n \n---      - Suppress this reference on deallocation.\n+--      - Suppress this reference on deallocation\n \n --      - At the end of the program, remaining references are potential leaks.\n --        sort them out the best possible way in order to locate the root of\n@@ -89,7 +89,7 @@ procedure Gnatmem is\n    --  These need comments, and should be on separate lines ???\n \n    function Read_Next return Storage_Elmt;\n-   --  Reads next dynamic storage operation from the log file.\n+   --  Reads next dynamic storage operation from the log file\n \n    function Mem_Image (X : Storage_Count) return String;\n    --  X is a size in storage_element. Returns a value\n@@ -233,7 +233,7 @@ procedure Gnatmem is\n       New_Line;\n       Put (\"GNATMEM \");\n       Put_Line (Gnat_Version_String);\n-      Put_Line (\"Copyright 1997-2004 Free Software Foundation, Inc.\");\n+      Put_Line (\"Copyright 1997-2005 Free Software Foundation, Inc.\");\n       New_Line;\n \n       Put_Line (\"Usage: gnatmem switches [depth] exename\");"}, {"sha": "dfb2a29e63eb3f87b432516934914dd1fec6f3b4", "filename": "gcc/ada/gnatname.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fgnatname.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fgnatname.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatname.adb?ref=448f26107e8e11cb4ff0c24e53c9c96a2cc14042", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 2001-2004 Free Software Foundation, Inc.         --\n+--           Copyright (C) 2001-2005 Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -172,7 +172,7 @@ procedure Gnatname is\n          Output.Write_Str (\"GNATNAME \");\n          Output.Write_Line (Gnatvsn.Gnat_Version_String);\n          Output.Write_Line\n-           (\"Copyright 2001-2004 Free Software Foundation, Inc.\");\n+           (\"Copyright 2001-2005 Free Software Foundation, Inc.\");\n       end if;\n    end Output_Version;\n \n@@ -231,7 +231,6 @@ procedure Gnatname is\n             when 'v' =>\n                if Opt.Verbose_Mode then\n                   Very_Verbose := True;\n-\n                else\n                   Opt.Verbose_Mode := True;\n                end if;"}, {"sha": "025e6b263b0dd9bcbfec4e2bbfcd52524273ac98", "filename": "gcc/ada/i-cobol.adb", "status": "modified", "additions": 21, "deletions": 62, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fi-cobol.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fi-cobol.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cobol.adb?ref=448f26107e8e11cb4ff0c24e53c9c96a2cc14042", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -107,8 +107,7 @@ package body Interfaces.COBOL is\n    function To_Display\n      (Item   : Integer_64;\n       Format : Display_Format;\n-      Length : Natural)\n-      return   Numeric;\n+      Length : Natural) return Numeric;\n    --  This function converts the given integer value into display format,\n    --  using the given format, with the length in bytes of the result given\n    --  by the last parameter. This is the non-generic implementation of\n@@ -118,8 +117,7 @@ package body Interfaces.COBOL is\n    function To_Packed\n      (Item   : Integer_64;\n       Format : Packed_Format;\n-      Length : Natural)\n-      return   Packed_Decimal;\n+      Length : Natural) return Packed_Decimal;\n    --  This function converts the given integer value into packed format,\n    --  using the given format, with the length in digits of the result given\n    --  by the last parameter. This is the non-generic implementation of\n@@ -128,15 +126,13 @@ package body Interfaces.COBOL is\n \n    function Valid_Numeric\n      (Item   : Numeric;\n-      Format : Display_Format)\n-      return   Boolean;\n+      Format : Display_Format) return Boolean;\n    --  This is the non-generic implementation of Decimal_Conversions.Valid\n    --  for the display case.\n \n    function Valid_Packed\n      (Item   : Packed_Decimal;\n-      Format : Packed_Format)\n-      return   Boolean;\n+      Format : Packed_Format) return Boolean;\n    --  This is the non-generic implementation of Decimal_Conversions.Valid\n    --  for the packed case.\n \n@@ -146,8 +142,7 @@ package body Interfaces.COBOL is\n \n    function Binary_To_Decimal\n      (Item   : Byte_Array;\n-      Format : Binary_Format)\n-      return   Integer_64\n+      Format : Binary_Format) return Integer_64\n    is\n       Len : constant Natural := Item'Length;\n \n@@ -229,8 +224,7 @@ package body Interfaces.COBOL is\n \n    function Numeric_To_Decimal\n      (Item   : Numeric;\n-      Format : Display_Format)\n-      return   Integer_64\n+      Format : Display_Format) return Integer_64\n    is\n       pragma Unsuppress (Range_Check);\n       Sign   : COBOL_Character := COBOL_Plus;\n@@ -288,8 +282,7 @@ package body Interfaces.COBOL is\n \n    function Packed_To_Decimal\n      (Item   : Packed_Decimal;\n-      Format : Packed_Format)\n-      return   Integer_64\n+      Format : Packed_Format) return Integer_64\n    is\n       pragma Unsuppress (Range_Check);\n       Result : Integer_64 := 0;\n@@ -449,8 +442,7 @@ package body Interfaces.COBOL is\n    function To_Display\n      (Item   : Integer_64;\n       Format : Display_Format;\n-      Length : Natural)\n-      return   Numeric\n+      Length : Natural) return Numeric\n    is\n       Result : Numeric (1 .. Length);\n       Val    : Integer_64 := Item;\n@@ -560,8 +552,7 @@ package body Interfaces.COBOL is\n    function To_Packed\n      (Item   : Integer_64;\n       Format : Packed_Format;\n-      Length : Natural)\n-      return   Packed_Decimal\n+      Length : Natural) return Packed_Decimal\n    is\n       Result : Packed_Decimal (1 .. Length);\n       Val    : Integer_64;\n@@ -628,8 +619,7 @@ package body Interfaces.COBOL is\n \n    function Valid_Numeric\n      (Item   : Numeric;\n-      Format : Display_Format)\n-      return   Boolean\n+      Format : Display_Format) return Boolean\n    is\n    begin\n       if Item'Length = 0 then\n@@ -681,8 +671,7 @@ package body Interfaces.COBOL is\n \n    function Valid_Packed\n      (Item   : Packed_Decimal;\n-      Format : Packed_Format)\n-      return   Boolean\n+      Format : Packed_Format) return Boolean\n    is\n    begin\n       case Packed_Representation is\n@@ -720,17 +709,13 @@ package body Interfaces.COBOL is\n \n       function Length (Format : Binary_Format) return Natural is\n          pragma Warnings (Off, Format);\n-\n       begin\n          if Num'Digits <= 2 then\n             return 1;\n-\n          elsif Num'Digits <= 4 then\n             return 2;\n-\n          elsif Num'Digits <= 9 then\n             return 4;\n-\n          else -- Num'Digits in 10 .. 18\n             return 8;\n          end if;\n@@ -756,8 +741,7 @@ package body Interfaces.COBOL is\n       --  Note that the tests here are all compile time checks\n \n       function Length\n-        (Format : Packed_Format)\n-         return   Natural\n+        (Format : Packed_Format) return Natural\n       is\n          pragma Warnings (Off, Format);\n \n@@ -774,8 +758,7 @@ package body Interfaces.COBOL is\n \n       function To_Binary\n         (Item   : Num;\n-         Format : Binary_Format)\n-         return   Byte_Array\n+         Format : Binary_Format) return Byte_Array\n       is\n       begin\n          --  Note: all these tests are compile time tests\n@@ -824,7 +807,6 @@ package body Interfaces.COBOL is\n          pragma Unsuppress (Range_Check);\n       begin\n          return Binary'Integer_Value (Item);\n-\n       exception\n          when Constraint_Error =>\n             raise Conversion_Error;\n@@ -836,14 +818,11 @@ package body Interfaces.COBOL is\n \n       function To_Decimal\n         (Item   : Byte_Array;\n-         Format : Binary_Format)\n-         return   Num\n+         Format : Binary_Format) return Num\n       is\n          pragma Unsuppress (Range_Check);\n-\n       begin\n          return Num'Fixed_Value (Binary_To_Decimal (Item, Format));\n-\n       exception\n          when Constraint_Error =>\n             raise Conversion_Error;\n@@ -855,10 +834,8 @@ package body Interfaces.COBOL is\n \n       function To_Decimal (Item : Binary) return Num is\n          pragma Unsuppress (Range_Check);\n-\n       begin\n          return Num'Fixed_Value (Item);\n-\n       exception\n          when Constraint_Error =>\n             raise Conversion_Error;\n@@ -889,10 +866,8 @@ package body Interfaces.COBOL is\n \n       function To_Decimal (Item : Long_Binary) return Num is\n          pragma Unsuppress (Range_Check);\n-\n       begin\n          return Num'Fixed_Value (Item);\n-\n       exception\n          when Constraint_Error =>\n             raise Conversion_Error;\n@@ -904,14 +879,11 @@ package body Interfaces.COBOL is\n \n       function To_Decimal\n         (Item   : Packed_Decimal;\n-         Format : Packed_Format)\n-         return   Num\n+         Format : Packed_Format) return Num\n       is\n          pragma Unsuppress (Range_Check);\n-\n       begin\n          return Num'Fixed_Value (Packed_To_Decimal (Item, Format));\n-\n       exception\n          when Constraint_Error =>\n             raise Conversion_Error;\n@@ -923,18 +895,15 @@ package body Interfaces.COBOL is\n \n       function To_Display\n         (Item   : Num;\n-         Format : Display_Format)\n-         return   Numeric\n+         Format : Display_Format) return Numeric\n       is\n          pragma Unsuppress (Range_Check);\n-\n       begin\n          return\n            To_Display\n              (Integer_64'Integer_Value (Item),\n               Format,\n               Length (Format));\n-\n       exception\n          when Constraint_Error =>\n             raise Conversion_Error;\n@@ -946,10 +915,8 @@ package body Interfaces.COBOL is\n \n       function To_Long_Binary (Item : Num) return Long_Binary is\n          pragma Unsuppress (Range_Check);\n-\n       begin\n          return Long_Binary'Integer_Value (Item);\n-\n       exception\n          when Constraint_Error =>\n             raise Conversion_Error;\n@@ -961,18 +928,15 @@ package body Interfaces.COBOL is\n \n       function To_Packed\n         (Item   : Num;\n-         Format : Packed_Format)\n-         return   Packed_Decimal\n+         Format : Packed_Format) return Packed_Decimal\n       is\n          pragma Unsuppress (Range_Check);\n-\n       begin\n          return\n            To_Packed\n              (Integer_64'Integer_Value (Item),\n               Format,\n               Length (Format));\n-\n       exception\n          when Constraint_Error =>\n             raise Conversion_Error;\n@@ -984,16 +948,13 @@ package body Interfaces.COBOL is\n \n       function Valid\n         (Item   : Byte_Array;\n-         Format : Binary_Format)\n-         return   Boolean\n+         Format : Binary_Format) return Boolean\n       is\n          Val : Num;\n          pragma Unreferenced (Val);\n-\n       begin\n          Val := To_Decimal (Item, Format);\n          return True;\n-\n       exception\n          when Conversion_Error =>\n             return False;\n@@ -1005,8 +966,7 @@ package body Interfaces.COBOL is\n \n       function Valid\n         (Item   : Numeric;\n-         Format : Display_Format)\n-         return   Boolean\n+         Format : Display_Format) return Boolean\n       is\n       begin\n          return Valid_Numeric (Item, Format);\n@@ -1018,8 +978,7 @@ package body Interfaces.COBOL is\n \n       function Valid\n         (Item   : Packed_Decimal;\n-         Format : Packed_Format)\n-         return   Boolean\n+         Format : Packed_Format) return Boolean\n       is\n       begin\n          return Valid_Packed (Item, Format);"}, {"sha": "c7b9e907c9535bca273de0f1cbc62145c6195bfd", "filename": "gcc/ada/sem_eval.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fsem_eval.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fsem_eval.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.ads?ref=448f26107e8e11cb4ff0c24e53c9c96a2cc14042", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -411,7 +411,6 @@ private\n    pragma Inline (Eval_Character_Literal);\n    pragma Inline (Eval_Conditional_Expression);\n    pragma Inline (Eval_Indexed_Component);\n-   pragma Inline (Eval_Integer_Literal);\n    pragma Inline (Eval_Named_Integer);\n    pragma Inline (Eval_Named_Real);\n    pragma Inline (Eval_Real_Literal);"}, {"sha": "4441490ac0c98e3e81d1fe88ba83c8eb5ad5d714", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=448f26107e8e11cb4ff0c24e53c9c96a2cc14042", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                B o d y                                   --\n --                                                                          --\n---          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -422,8 +422,7 @@ begin\n    --  Lines for -gnaty switch\n \n    Write_Switch_Char (\"y\");\n-   Write_Line (\"Enable all style checks except 'o', indent=3\");\n-\n+   Write_Line (\"Enable default style checks (same as -gnaty3abcefhiklmnprst)\");\n    Write_Switch_Char (\"yxx\");\n    Write_Line (\"Enable selected style checks xx = list of parameters:\");\n    Write_Line (\"        1-9  check indentation\");\n@@ -467,4 +466,9 @@ begin\n    Write_Switch_Char (\"83\");\n    Write_Line (\"Enforce Ada 83 restrictions\");\n \n+   --  Line for -gnat05 switch\n+\n+   Write_Switch_Char (\"05\");\n+   Write_Line (\"Allow Ada 2005 extensions\");\n+\n end Usage;"}, {"sha": "effdd8a54ddf18bd521b244ad3c03ac1b3b17690", "filename": "gcc/ada/xr_tabls.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fxr_tabls.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fxr_tabls.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxr_tabls.ads?ref=448f26107e8e11cb4ff0c24e53c9c96a2cc14042", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---         Copyright (C) 1998-2003 Free Software Foundation, Inc.           --\n+--         Copyright (C) 1998-2005 Free Software Foundation, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -24,6 +24,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+--  We need comment here saying what this package is???\n+\n with GNAT.OS_Lib;\n \n package Xr_Tabls is"}, {"sha": "c6ade51f7a43045671aaf4f015585e2ade71b656", "filename": "gcc/ada/xsinfo.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fxsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fxsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxsinfo.adb?ref=448f26107e8e11cb4ff0c24e53c9c96a2cc14042", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -24,7 +24,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Program to construct C header file a-sinfo.h (C version of sinfo.ads spec,\n+--  Program to construct C header file sinfo.h (C version of sinfo.ads spec,\n --  for use by Gigi, contains all definitions and access functions, but does\n --  not contain set procedures, since Gigi never modifies the GNAT tree)\n \n@@ -34,14 +34,14 @@\n \n --    Output files:\n \n---       a-sinfo.h     Corresponding c header file\n+--       sinfo.h       Corresponding c header file\n \n --  Note: this program assumes that sinfo.ads has passed the error checks\n --  which are carried out by the CSinfo utility, so it does not duplicate\n --  these checks and assumes the soruce is correct.\n \n --  An optional argument allows the specification of an output file name to\n---  override the default a-sinfo.h file name for the generated output file.\n+--  override the default sinfo.h file name for the generated output file.\n \n with Ada.Command_Line;              use Ada.Command_Line;\n with Ada.Strings.Unbounded;         use Ada.Strings.Unbounded;\n@@ -118,7 +118,7 @@ begin\n    if Argument_Count > 0 then\n       Create (Ofile, Out_File, Argument (1));\n    else\n-      Create (Ofile, Out_File, \"a-sinfo.h\");\n+      Create (Ofile, Out_File, \"sinfo.h\");\n    end if;\n \n    Open (InS, In_File, \"sinfo.ads\");"}, {"sha": "d93cfbd8d3e351efe4679ddd1b3cbbba732a3e1b", "filename": "gcc/ada/xsnames.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fxsnames.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/448f26107e8e11cb4ff0c24e53c9c96a2cc14042/gcc%2Fada%2Fxsnames.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxsnames.adb?ref=448f26107e8e11cb4ff0c24e53c9c96a2cc14042", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -138,7 +138,7 @@ begin\n \n    loop\n       Line := Get_Line (InB);\n-      exit when Match (Line, \"      \"\"#\"\";\");\n+      exit when Match (Line, \"     \"\"#\"\";\");\n    end loop;\n \n    Put_Line (OutB, Line);"}]}